sbb movsb push dec lods xchg fsubrs mov mov loopne stc mov mov xchg inc pop sub mov and inc fistp (bad) in mov incl dec fs js and loop aad jnp in cmc push aas jo pop xchg test mov push dec adc add test iret rcrb js ffree mov mov mov inc xor fcoms maskmovq adc sbb clc bound push popa pusha push iret jl mov and lahf in aam (bad) sbb xlat ficomp mov popa stc gs icebp jae sarb or dec jnp mov mov ds xor aad push mov ja or adc inc mov out ljmp or pop aas cmpsb push cmp dec cmpl lock (bad) sub sbb lret push adc dec mov adcl inc mov aaa sbb xor int mov ja sub leave (bad) xor jg xor dec into adc jecxz std push mov into jae lahf xor dec push outsl sub fcmovb mov xchg (bad) mov jmp stos dec mov cli pop gs in loop mov mov cmc sbb out int3 scas xor std out jp sub mov fistpl (bad) repnz push fdivl (bad) xlat fsts push js mov out (bad) mov add cmp scas ljmp clc cmp inc ret mov fwait xor ljmp out and outsl add mov adc stos add pushl pushf call push inc clc pushl pushf ror cmc mov bt add stc neg movw pushf lea call pusha cmp pushl cmp mov pusha lea jae stc push cmp mov lea jae pushf push push cmp mov pushl pusha lea ja jmp pusha movl pushf movl pushl movw lea jmp pushf movl jmp inc dec dec inc push dec xor cs dec dec add push cmpb pusha pushf push jmp bsr sar mov rcl and rcl add pushf mov pushl test push lea je call inc in xchg adc aad mov xor pusha out sbb pop fwait jno add inc pop ljmp std das inc gs loope sbb cwtl adc mov movsl cmp lahf loope js pop sub or stos ss and mov hlt ja cmp jecxz stos sbb cmpsb mov push mov out dec leave mov pop std sub cmpsb mov dec fwait aad sbbl dec xor pop push sub sti mov mov lahf dec xchg (bad) push cwtl add imul mov les sbb mov cmpsb jecxz push pushl jmp pushf lea jb clc pusha bt cmp call fsts int lcall pop roll inc shlb enter sbb cmp inc or and ja,pn dec int3 jo (bad) dec sbb out (bad) adc dec loopne hlt incl inc in inc out xor lods mov jnp xor pop mov dec stos pushf inc jg xor cmp in lds adcl sahf gs push mov xchg dec mov fldl std in cmc icebp shll sub mov pop mov mov sbb pushf fiadd mov xor repnz jo int3 fs sti js aad dec mov mov mov mov cwtl data16 sub dec xor lods xor pop (bad) sub cmp shr mov jmp sahf cmp test repnz adc xchg add pusha mov lea je call mov mov adc lock clc xchg xchg mov je pop out mov sbb stos push (bad) insl jge pop pop pop add int out jno das cld xor mov mov jne xchg lods inc push sbbl dec test push bound test in inc jl push mov loopne mov push lods mov sub cmp cmp call mov movw adc lea pushf jmp rcl stc add not add mov pushl stc test pusha lea je stc sub cmc cmp pushf jmp lea jne jmp clc test cmp jmp pusha adc rcr mov sbb cmc pop clc lea btr mov pusha xor data16 repnz clc xor xor mov shr rol rcl mov sar bsf ror mov ror bsf sar mov pop mov pop add mov stc push cmp or mov pusha call mov lea pushf pusha rcr rcr mov stc cmc jmp jns pop (bad) subl xchg mov unpckhps in icebp scas cmp out imul xorl in fcmovnu cli dec pop cs push in out dec aaa or outsb mov or mov add fbstp lds push imul pop push and cld fnstsw ljmp lods sbbb cmp add cmpl add dec mov add pusha add add aam inc and pop lahf movsbw movl pushf movzbl pushf call jmp lea jne push jmp lea ja pusha stc imul pushf bt push cmp add push push push lea jmp popf xor (bad) js inc repz push lods jg addr16 repz dec (bad) sub xor pop lahf xor (bad) iret ss rorb nop cmp jl sbb (bad) push xchg out inc mov ret and outsl pop lcall mov int3 out dec and scas data16 or sar jmp mov das adc into cli fst lock ljmp loopne and adc jbe and or dec test imul mov daa xor xchg xchg push popa (bad) jnp out jle push fdivr or aas xchg mov or sub sub mov dec (bad) test jo scas mov push lahf pop cwtl gs xchg mov xor sahf mov push (bad) mov push xchg push imul push (bad) jmp cmc cmc mov jecxz xchg (bad) push mov adc xchg cmp jle gs test sahf dec mov add fs sbb mov mov (bad) dec jnp mov into adc inc mov stos dec movsl push icebp ret mov (bad) dec sbbb not out jmp push jno (bad) adc imul mov push cld add jl dec lcall xor or fdivrs or inc pop jp push ret add mov mov stos or dec cmp xor daa xor or out jbe or or mov add xchg adc sub xor pusha sub pushf jmp push movl movw lea jmp pushf jmp inc pushf bt call pop shrb sbb int3 xor (bad) aad mov dec rcll and cli inc into adc loop lods xor mov xchg dec in addb mov sub lret cmpsb xchg add stc shll push mov xor sahf notb push xchg nop hlt repnz pop (bad) lods and cltd adc xchg adc sub out push push in pop sbb inc push xchg imul das stos xchg outsb cli (bad) jne push (bad) mov sub add or jmp add mov xchg stos dec jne pop loop test adcb sbb mov fs fadd pusha xchg sub lcall lret lods adc pop add in movsb sub sub push xchg lea mov inc ffree ljmp xor outsl stc cmp test mov cs pushf mov cmp ss inc test xor addl xchg sub dec cmp pop je cmp mov dec xchg (bad) ja mov dec movsb out (bad) outsl pusha push repnz rcll lods das mov xlat xchg inc jno in sbb shr cmp cmp cmp movb lea je jmp rol add rol mov test test cmpb jmp lea call pushf adc jmp pushf lea jne stc add sub ror neg rol sbb mov pushf sbb or setne add (bad) lock cmc mov bt mov bt cmc test call out dec xchg sub mov mov sbb add loope loope add aaa mov jnp dec cmc aaa mov inc int3 insb or sub dec test mov push pop adc aas leave jmp shr adc xchg add dec mov xlat das (bad) in cmp jns rcr or pop out imul jno aam aaa and jl scas popf loop (bad) push pop stos out adc mov pop aas mov pop mov and inc jae pop push popa lea clc rorl adc add push jb mov and mov add push pushl movb mov lea jmp mov stc stc mov mov call pushf rcl cmc mov test bt cmp pushl jmp dec dec mov jge loope jo cmp sbb cmp sub loope xor cmp xchg dec mov pop mov jo dec jb adc rorl out dec cmp cmc dec movsb jae (bad) xchg ds aam pop jns inc cmpsb fcomp repz pop popa fs jle mov fs or daa aas sbb into outsl jmp jl dec jns inc push xchg mov out push lret sub je add popf inc fs or and lahf cmp adc cmpb jle stc in pop (bad) and or inc fcompl jmp mov test sbb mov shr mov pusha lea je pushf lea jmp test cmp nop push in hlt lea sbb stc ljmp dec and mov pop xor push out jo xchg rcll inc js cmp notb (bad) inc movsb sbb push mov xchg adc mov out dec cmp cvtps2pd and xor or addr16 jge outsb jne jl ja push jne xchg adc pushfw jmp movsbw mov lea lea mov movb mov mov pushl ret lea call jmp or stos data16 in mov pop xchg jecxz fs xchg in gs (bad) in mov push out push insl sbb pop imul cld fs jecxz out arpl out addr16 out out push jg fisubrl loope lods or out popf sbb mov mov dec aas fsubl aam ret repnz lock push popa jecxz pusha pop xchg aas out cmp xchg addr16 aam imul into test je out adcl lahf push gs js imul (bad) daa lahf push cld inc int out imul test mov (bad) cli dec lea mov inc xchg mov cltd pushf jo repz mov mov pushf imul aad push loop fs pop jecxz imul fucomip mov (bad) out or aam xchg jecxz shlb out data16 sub jl shll out jmp jo (bad) arpl add outsl es outsb loop mov bound popa call call jmp mov scas xchg mul push jmp call aad push ljmp adc loopne jmp in push lock popf loop fldz insb sbb fisubrl in fsubl ds jmp (bad) adc dec xlat insl pop lock popf in frstor push out fidiv out fsubl cmpsb loop arpl pop push call push adc sbb fsubrs out fnstenv lock fisubl loope rclb push jno out push ljmp out and cmc lods inc outsb mov aad out out shl adc aam mov out fsub fbld loope das sbbl mov jo les sub fldz out cld mov (bad) jae out lock aam adc roll outsl push pop call (bad) mov or aad out aam xor out add lock jmp loop pop sub aad arpl das push popa fcomi imul jle shll or cld outsb pop daa jo out outsl and roll repnz fs stc out (bad) imul imull push aam out push imul and popa loopne or out push out insl ja das sub out cmp sbb cld adc scas mov out outsw cmp fcomps jecxz sbb (bad) test push out out lret test lcall inc mov inc cltd loope pop notl sahf loop out inc (bad) mov xchg aaa out test arpl out add push sbb mov and out out push push dec jmp out movzwl pop cmpl aad in loop insl mov cld out inc ss xor shrl ja out in sysexit push shl mov jmp sbb das fldenv mov (bad) lock xor out adc xchg gs and lret mov jmp cmp pop roll mov lahf fdivrl mov out pop adc adc push in jno out mov shrb outsl es pop or xchg jns std cld jge (bad) push dec lock in pop in mov icebp aad outsb mov jg push (bad) out lahf pop imul pop adc cltd stc iret mov mov push das cmp push inc and mov imul adc cvtpi2ps (bad) icebp test fs xchg inc mov xor push jge test clc dec call jle test into pop arpl stos jae xor shl out lret xchg (bad) and push lock fsubr xchg fisubr xor and pop daa call fsubr outsb inc mov (bad) scas fmulp out cmp test pop mov imul cmp call add mov jle pop lcall (bad) cmp out cmpsb xchg cltd or sbb bound out cmp sti sub mov cmp subl test fdiv pop inc das scas movsl xor push out sub inc or sbb push sub shlb daa loopne sbb sbb xlat cli pop es out jnp ljmp mov dec in mov fucom out lock jp (bad) sub pop shlb in fldenv out and insl shr xor or lahf lea ds out xchg or insl (bad) es pop loop pop jl inc lcall xor ljmp out xlat scas sbb pop mov adc aam paddsw sub imul xchg or das out pop loop mov out ficomp cmpsl adc daa push cmpsb xchg fist mov push aas jg or out and xchg jmp or out out mov sbb out inc push ss mov repnz inc es stos xor out outsb push pushf test aad out mov jne subl adc out (bad) aad xchg loop and and data16 mov scas fsin lahf mov clc jmp insl dec loop push pop cli cltd push mov (bad) mov mov jnp pop jge push les out jmp (bad) gs int3 lea aam stos ljmp out xor popa mov incb test jge in out pop mov add ljmp inc test int in lcall out shl xlat shrb cmp mov daa lods imul inc rcrb dec push or popf lahf xchg xchg out std rcrb out outsl ret jne fildl inc jmp out sub data16 mov popa pop and nop inc mov (bad) aam test out in scas pop cmp (bad) xor dec shrb pop bound or sbb mov arpl inc xchg jl out loop sbb sbb test inc repnz mov test fdiv pop out iret mov or out ljmp adc sub mov jb loop jbe ds insl out sub insb sub xor cmpsb push fdivrs subb ds mov cld push sarl pop sbb add and mov mov loopne and and out fdivrl lock ss mov imul push jne loope mov das mov pop mov pop sub out mov popa imul outsl outsb imul int cmp sub push out arpl out fmull ss out push loopne lret and ret adc push or in pop add adc test pop or or sbb in movsl mov mov inc push mov lods or out xor xor mov mov in lahf test movsb call jecxz sbb out out jmp (bad) xor mov jmp (bad) pop out ljmp insb jge push ljmp mov subl sub sub loope push sbb out and dec adc das loopne out sbb adc testl mov mov clc out and sbb sbb test fldcw xchg loopne and scas xlat pop into loop fdivl in int ss push popf pop lods sbbl lock movsb movd xlat ja out out fs jmp add out sub fdivs daa fucomip pop out push in stc out out jno or pop fistpll fucom mov in in out jns imul decl pop sti pop nop das cs xlat out mov ret pop add jae loope fcomi stc out inc imul das jl sub ret int rclb loop out pop push ljmp es das in in xlat jmp fsubrs mov xor int3 mov aas outsl pop jmp xor ljmp xor xchg mov push dec lods das fldt ss and shr adc popa or daa jno outsl (bad) imul aas scas fiadd out sbb xor (bad) out sahf call out push shl mov das push popf jmp (bad) pop out jb shl xchg add bound out out test ret cmp mov out out (bad) icebp (bad) arpl rcrb pop dec in push daa sbb out dec dec out (bad) in adc pop test out out inc pop lods jp fucomi xchg xor (bad) mov loope add gs xlat mov lock in mov lret push mov fs stc cmp xchg sbb inc push stos ja fmull xchg xor mov es imul sahf sub and das cmp mov sbb add ss call (bad) push xlat sbb in and jns or data16 das add adc out insl xchg out mov lahf into loope insb out adc lret mov in js das mov or jmp into push vcvtpd2dq and pusha repnz jecxz jo popa out sbb sbb mov sbb stc out sbb mov sub pop ret aas fsubrs sub pop popf xor aad jno aad in dec mov adc cli cltd bound sbb out ds inc leave popa pop mov lret out and mov in shll out popf shll loopne les ficoml out fstps loop cmc ljmp es mov cmp out int3 mov add aad ss mov out pop leave jne (bad) into xor sub out ffreep mov cwtl ds xlat out pop adc mov add xor jbe out mov out insb out jecxz lahf adc les setne mul fldcw in out xor push pop data16 push out insl add out push sbb bound mov out (bad) aaa (bad) dec test rolb stc ljmp adc sbb or inc in cmp fstpt dec sub pop cmpsl (bad) push mov xchg addr16 or shr push in adc cmp (bad) pop and push in pop out mov in (bad) aas pop jnp sub xlat in jmp sub (bad) rcrl fisub inc in mov mov mov mov out out mov add in sub imul (bad) fidivl inc out and push cmpsb std adc push mov out pop call iret jbe in popa int clc pop (bad) shrb xor setb rcll pop in ss out xor mov mov (bad) push adc add xchg jae mov jb iret add nop call into in pop jmp inc mov push punpckldq stos pop fsts pop in lock jmp xchg rol xor jmp in lock cmp out out sbb adc out (bad) dec xor jb xor mov add out push sbb sarl iret mov mov inc xchg jle scas lds in insl insl out xorps aad lock inc into mov out fsubr sti pop (bad) scas add jg bound out loope loope add sub cli out push in dec pusha aad test out icebp ret mov jno lock shl in dec and or je imul sahf add out and (bad) in push or out cmpsl push mov loope pop mov and mov out rcll sahf jns cmpsl inc mov and pop out lods test sbb out fnop (bad) les rol push adc push mov out lock xor push out popf loope xchg adc xchg lahf cmp fnsave out notl out (bad) cmpsb in sub and das loop mov inc in add push aam insl lock mov pop jp call scas fwait out jo (bad) sbb jmp adc scas mov push out out loop dec sahf inc iret mov xlat lret out out rolb out cvtps2pi lods cmp mov push ljmp ljmp imul xchg out push loope out jno cmp aam in pop test scas push mov mov incb movlps ljmp push stos fistpl adc movsl in and sbb sub mov adc and pop daa or out mov mov and sarl or fucomp sbb mov pop out adc daa fcoms aaa loopne pop lds jo mov fucomi fs mov mov out das lds mov xchg cmp pop mov jbe jmp push lods adc mov lahf scas mov jo mov ljmp mov loopne,pt mov popf or and into scas add mov loope lds (bad) and hlt xlat pop icebp cmp (bad) mov pushf subl (bad) pop lock sbb aam adc mov xor cvttps2pi push mov (bad) out stc out iret mov pop xchg sub dec xor out dec mov out cmp fsubr aas push int cwtl xor sub push xor lods repnz push loop inc fcomip andl hlt leave jl outsb test popa lea imul and mov out test pushf out xchg test iret aam sbb or out (bad) out cmp cmp fstpt aam daa mov (bad) sbb adc lds imul adc loop push xchg or (bad) out cmp out pop dec stos or pushf ficompl or xlat fistpll sbb test fwait push push andl popf nop insl dec xlat out adc out cs and mov (bad) mov (bad) sub ret mov or ret out sub mov sub xchg (bad) call inc scas rcpps das xchg jae in pop adc clc imul mov xchg lock jmp dec mov inc mov and out cs int3 push xchg add mov out or pushf or in fmulp mov push mov stos out and lods pop test adcl hlt notb rcrl mov push pop call mov pop lock imul sbb mov idiv stc movsb lods aam lret push out push mov cwtl pop push jnp arpl (bad) adc mov (bad) adc sub push bound iret xchg rclb cltd movsb push xlat sub and mov adc sbb (bad) mov mov mov jae and imul lret out push xor out adc mov out movsl insb xchg xchg nop and out outsb lds adc iret out arpl arpl iret sbb (bad) ljmp out mov or sbbl lock hlt lea out (bad) out or arpl in ficompl sahf idivb xchg loop vsubsd dec jmp in and loopne mov jmp xor lock cli jp out out popf cmc fs xchg lcall lock sub out in (bad) inc mov add insl out loop cli push test lret fisubl ss push fsubl in repz and out xchg push push out xchg fstp dec cmpsb (bad) jmp fwait cli out add jmp dec xor into out addr16 aad outsl mov push sub mov xorps arpl call loope (bad) aaa and pop out jb ret ss pushw fadds push inc push imul sub mov inc stc sub cmp into outsb lret pusha gs out pop pop das mov dec loop jmp insl loopne and mov jle jo lcall lahf xchg fisubl cmp dec loop cwtl add jmp mov (bad) int3 dec mov cwtl aad cmpsb sub mov data16 out dec hlt cmp jp out and xchg loop scas scas out pop adc mov sub iret loope out mov mov cmp push subps adc loope out push mov pop loop pushf pop fsubs push xor cmp arpl into imul out sbb out push out xchg xor inc adc cltd (bad) rorb int popa cmpsl mov inc pop ret mov out push add xchg iret sub xchg ljmp jne mov cmp jg mov and cmp aaa pop push loop inc push outsl inc out scas popf in dec clc loope mov dec mov pop fs call and and mov jg inc push call pop ret xor cltd xchg and cld pop mov or pop dec cltd push jns (bad) jo (bad) negb jle out aad push out cmp dec aas push arpl push sub xor mov in out iret pop mov cs shl and dec and cmp scas mov push out (bad) aam mov adc es fs pushf xchg stos push push test in and (bad) mov out scas pop imul into popa and sbb fdivrs out call xor jmp sub insl rcrl out jbe sbb pop test out jne xchg in out (bad) xor in test (bad) hlt lret sbb es in fdivs and pop outsb idiv pop push pop out repnz out out lock loope fs cs push aam movsb xchg push pop outsl sahf out mov jl push mov aam out xchg jno popa sahf scas fisttpll out das xor fs loope popf out mov and js imul mov ds pop out jp mov movsl jg mov push mov aad jb push in push out or jae and rol out movsl rol (bad) rcl jno sbb out mov ja jg cli xlat inc ja insb out out mov or rcrl and sbb mov fsubr js jge in jmp lods out test sub je pop cwtl jmp cld push (bad) ret jecxz loop stos arpl js cmp push lahf sbb lods lcall sub out fs js cmp jb rorb cltd out cld or rcrb (bad) (bad) pop daa fistpll push lock out fstl mov mov inc dec pop out out adc ja int3 das fbstp (bad) fmull pop in cmp lock pop int (bad) popa sbb aas mov push jecxz mov lock aam insb inc icebp xchg mov out movsl push adc dec loopne inc loope arpl sbb jecxz mov push out pop pop mov ficoml xlat loopne jg sub scas sahf push or rclb add out out mov cltd stos pop fsubl jb outsb bound mov mov cmp (bad) mov adc test push shrb jg les pop faddp aas gs out jg jns cwtl cli (bad) insb outsl xor loop out aad pushl in cli outsb sbb dec push or insb sbb das xor fcomip sbb outsl and adc out add xor (bad) sbb mov sub out (bad) cmp lock pop icebp push mov in cmpsb shr pop call push add dec loop dec setle mov cmc imul rcll sub addr16 xchg pop out sbb imul out sub dec orl sbb mov inc icebp out dec xchg add pop pushf in pop dec scas scas imul xlat mov pop out mov fwait mov enter pop mov jbe pop int arpl sbb mull fisttp jmp jbe mov push fsubl in cmp es shrb sub jmp ljmp repz (bad) lcall out and idiv out sub xor xchg push call sub loope or add lock fstpl dec sbb mov test push (bad) lock out mov lcall and pop in outsb rclb fucomip fldl shll cwtl iret je inc ljmp pop lock dec sbb push out shr popf add imul out sub and (bad) mov adc mov mov inc lcall out mov loope gs jmp fcom fwait popf in cwtl (bad) sub mov rorl iret call fistl add xor mov and xor pop fsubs cli insb mov out paddq aad xchg mov sub (bad) mov and pop stos xor inc imul in xor xor mov loope mov dec out insl xor adc enter out leave (bad) insl popf jns jle scas es arpl out iret mov sbb cmp xchg and push loop mov adc adc out out xor lahf push int das in dec mov (bad) ds jmp lock into and call push in pop int pop or out sbb pop pop jne pcmpgtd out xor in out fistp xlat mov out out mov and pusha lods popa cmpsl cmpps data16 out arpl sahf loop icebp pop inc and xchg (bad) pop iret fisubrl inc push dec fs rcr push (bad) jb sbb xlat shrb pop or out out out mov lods ret out loopne xchg sbb dec adc outsb mov jmp stos inc adc sub jmp test sub es popa xchg lahf vpunpckhqdq mov mov sti ljmp in sbb out lock adc out out pop push pop sub out loop adc fdivrl sahf loopne and lock out inc xchg lock (bad) arpl pop call test sub jp ret cmpsb cld outsl out adc push dec xchg loop (bad) out mov in and aad adc es in xor fsubs insl mov fwait out (bad) mov das pop sbb fs rcrb std arpl sub jge (bad) or pop out sub (bad) jle mov shr jae dec lock push popf loopne sub sub scas out out and dec imul xlat subl sub (bad) out xor fsubs pop push stc pop arpl loop lahf leave pop push fs xchg lea inc add out cmpsb cmp push popf out in out mov ret xchg jmp out aaa imul and cmp stos mov fdiv out nop fsubrl js out inc int and lcall pop ret jo and outsb out ret jne out pop dec mov out enter aam pop les in in negb inc sub jo sub xchg or insl imul push cmp mov mov mov dec jg out push in in xchg into gs sahf pusha out cmpsl xchg pop adc pop loop mov ja dec push jae call int (bad) (bad) push pop sar jmp imul sub and test adc insl jecxz lods out sbb aas push out repnz movsl mov mov (bad) jno mov mov jo lods jmp pushf adcl in pop pop in loopne out cmpsb loop adc (bad) loop pop stos pop cmp cmp or xchg xchg stos jg insb out and (bad) mov test lock in cmpsb jbe mov out fildl sub loopne pop cmc (bad) out sti push push out ds sbb pop inc imul cmp fwait in call gs in xor (bad) lret cmp adc popf in cld xchg cwtl loope arpl pop dec out xchg push mov dec ss cmpsb push dec out inc (bad) pushf mov scas xchg andl out iret in mov xchg outsl ljmp lcall ja insl push jg out push pop out imul sarb ljmp test loopne out popa ret daa jae out lahf rol outsb xchg jo imul pmaxsw cmc in or adc sbb cld aam xchg mov stc std movsb mov sbb cld mov jmp nop out xor repnz out and in cmp in fisubl out loop add cwtl add push outsl fsubr (bad) in shrl out insl push cmp out rol repz dec imul pushf (bad) xchg cltd in out setnp into loopne jge and out rcrb sub out out mov cmpsb fs pop push lock int call out xor adc loopne push xor and jno in ljmp adc push sbb movsl sub pop addr16 inc push cmpsb (bad) out sbb (bad) xlat dec (bad) test out stos popa sarl stos push sub cmpsl cmp loop rorl mov test int3 dec aaa fidivl popa out push cmp jne mov and lock hlt out fsubl mov lock out fistpl in fild insb gs mov fs data16 movsb shrl clc add fwait hlt out out and xlat mov jmp push cltd js iret test (bad) push imul aad mov pop sub loop loop fldcw add out ljmp dec out pushf shl aad push out nop push out xchg fsubs fistp pop outsl cs xchg ljmp fisttpll mov jecxz lahf xlat inc pop das sbb and adc ja out out push sub adc mov cli out out push (bad) push mov std pop shrl push sub sbb out outsb test ror pushf imul aaa fsubrs (bad) in std (bad) mov add inc sahf nop pushf out int adc push xchg out mov xchg mov insl xchg in and xchg xchg rcr incb ljmp addr16 adc out mov popa push out xchg pop jp cltd (bad) adc ss add movsw out mov pop fucomip in ljmp int popa fdiv jecxz sarb lock xor dec jmp mov push pop sbb fstpl rclb xchg neg mov in push (bad) out rolb out xor cli hlt pop (bad) lods insb xchg cmp out mul aaa fs mov jnp mov and lret test (bad) in push out sahf (bad) push sub mov adc out rclb pop lcall popa outsb das jmp in fimull hlt inc rcrl push cli out xchg xchg out dec int3 jecxz sub mov mov sub out lahf rolb pop aad out cmpsl pop out ret xchg clc mov adc push pusha test ljmp mov cld (bad) icebp int iret lret out mulb fsubs popf out out int3 xchg jo rcr out fisttp outsb mov push test outsl bound lock shr sbb jns sbb out pop lahf mov out in loop xchg aam xor adc out mov lods mov out ret push ror movsl sbb in sbb lret xchg cmpsb in sbb xchg test mov xor fist push dec jl ret out dec lea lock add mov sbb mov test jecxz sbb pop lock fmuls adcl cmpsb mov sub out inc out inc data16 arpl xchg sbb pop out in xchg aas mov ljmp pop sub push mov and or leave lcall shl fucomip sbb and shl out pop daa cmp aam in in mov ljmp out out fisubrl lret ja movsb shl fs imul adc sbb shl and fs punpcklbw dec sub out and cltd xor mov out loope cmp mov mov data16 outsb (bad) adc xlat out jmp and movsl lahf pushf (bad) test mov gs dec sub mov ss push repnz dec jge fisubr dec out sub fistp loope cmp int mov jno pushf fldt mov jge (bad) cmp iret shrl aad adc cs and dec push (bad) pop es bound out sti xchg (bad) jb mov call out jecxz pop inc movsb sbb out adc fldcw sbb mov aaa push jmp mov jmp in fsubr aad in gs pop adc out ficomp out frstor ljmp sub scas push dec addr16 cmc outsl sahf outsb jne mov sbb out adc pop out pop jmp mov xchg gs dec std icebp pop lock sub add jo dec mov adc push ficompl out jno out jae out inc adc jge jmp inc (bad) out rclb out add dec mov rclb mov sahf (bad) jle out jnp inc mov pop mov xlat (bad) lahf pop in loopne sahf jg addr16 sbb insl gs mov ds (bad) je push xchg pusha pop jns jbe sub fsubrp mov into movsb fsub mov pop cmp adc out cmp mov jb xlat aam dec test out out scas mov in out cld dec nop/reserved sub js jg leave sub out xchg out out push push in pop sub dec adc sahf das inc outsl out and lods sbb push inc sbb jle enter cwtl add int mov in fbld fwait and les xchg je inc jmp aas lods sbb arpl push mov cld iret inc mov data16 mov pop mov push scas dec out mov mov pop and popa mov imul dec out aam push lods mov inc pop in jmp out or sub cmp sbb or out frstpm(287 mov jmp fmull and xchg sar addr16 popf jnp fs pop dec push mov test aad push inc add cwtl fidivl ds sbb add lret (bad) out sub imul lods fs xchg (bad) mov mov test cmp pop arpl insb dec out dec sub cli out out cmp add sbb in and ljmp dec jnp gs push aaa aas push push sbb pop inc mov shlb mov js sub cmp sub sbb in out xchg out pcmpgtd pop inc cmpsb fsub loop xchg sub pop bound out sub or aas (bad) fsubrp and in stc dec mov pop imul push push test add daa inc wbinvd inc fldt cmp out out mov push xchg and dec popf in mov pop rcr outsb jecxz fsub outsl out pop cmp xchg push sahf fmull jmp mov cmpsw ret in sbbl lods push pop rorl mov mov pop loopne,pn cltd call jb push inc (bad) out loope lret mov (bad) out cmpsb stos pusha dec mov popf jne test mov lahf testl rclb out mov dec jnp mov fsubp xchg mov pop sbb out (bad) in adc mov out addr16 out jle test test sub cmpsl ffree out lcall pop movsl cmp mov cmpsl and and dec push call sbb daa imul outsl sbb sub popf push lahf das mov insl movsl out leave mov mov xchg jo data16 ds xor stos repz ret jecxz mov adc lock adc jecxz pop dec movsl call xchg out sbb fsubs movsb push popa sti ljmp out xor sub jmp sub ljmp jns ljmp cltd lret movsb out and loopne mov pop and out inc mov mov jo push pop jnp test hlt add out jns pop mov dec repnz out out push dec xchg pop out xchg pusha imul pop push out popa mov lcall (bad) xor add dec pop mov xor adc lahf (bad) data16 clc fldz adc cmpsl sub fwait out aad push mov fucomp pop fisttp jns out call fisubl mov cmp out dec xchg pop pushf and inc test sbb or add sbb fadd cwtl lds jae mov loope out sbb pushf xorl fsubr addr16 jecxz inc in (bad) outsb and mov sbb test inc adc sub in out fs lods inc xchg add sub or test pop jb out sbb add fcom inc std pop cmp xchg scas cmp push xchg rolb sarb xchg push out mov out push aam popf in frstor out cmpsb loopne sub xchg xchg sub push mov mov popf push out xor out xor shll out xor add vpshufd xor (bad) aad (bad) sbb movsb mov push daa in dec lods ljmp xor call out mov sbb mov in movsl inc out jp pop out insl aas fcomps adc fcmovbe xchg mov out mov push scas out (bad) dec fwait pop fcoms call sub cltd and lea js sub ss int3 aam shrb les xor dec pop out xchg mov outsl hlt imul mov add and pop mov fninit out out and outsl sub push or out int pushf fsubl pop mov xorb das xchg jg (bad) out out test inc cmp xlat pushf adc inc xor test and sbb icebp mov ficom jmp cmp and adc das int mov and cmp imul jmp in nop icebp sub dec mov adc cmp js sbb out repz pushf lock fwait out sbb out das repz mov mov mov outsl and nop pop pop mov mov and inc xchg int3 das sbb mov es pushf add outsb mov jecxz mull dec xchg and adc mov xchg mov sub inc pop pop xor dec sar das out outsb in push addr16 (bad) mov or out popa loop cmp cmp das inc sbb or jle in iret mov jmp out out clc mov ret mulb adcb push loop xor push out inc xor out lds pop xchg out xor sbb pushl jmp xchg dec inc adc xlat push lock cwtl inc cmpsb data16 mov in jo jmp lock scas add adc (bad) shll inc popf xchg inc sub addr16 loop mov mov jbe jecxz (bad) fidivr mov sbb shll sar push cmp out pop cmp xchg daa out lret in sbb xchg aam data16 sub mov push popf adc mov pop fsub test push xor push pavgb ljmp aad (bad) cmp mov in xchg lock sub fistl cmpsl bound jecxz mov jmp icebp push repnz jg lods lods adc insl sahf dec repz loop test imul cmp aam xlat and rcr popa jno outsl or jne add in js out lock adc sub call ret xchg jno adc pop out push jns push lret ret out mov cmp sub insl andnps cmp out adc das out xchg add sbb jmp aad sbb mulb test cltd dec (bad) ss fcmovnu enterw cmp cmp jae das out push push fucomp out jmp sti out pop out or mov mov loope addr16 jmp ljmp xchg ret in cli gs sub (bad) ficoml addr16 stos push out push jmp mov lahf data16 out add daa test nop sbb and loop pop cmpsb mov ljmp (bad) test add loopne sbb pushf imul dec out cmp sub cmp insl push fldz sbb jo shll outsl pop das fs out mov out mov outsb inc pop out mov fisttpl test mov es (bad) iretw xlat mov in mov dec out jecxz xchg repnz fsubr (bad) pop sti daa dec hlt mov xor inc sub bound out mov out fisubl sahf or sbb out cmp scas data16 in outsl pop push loop push pop fldcw push shlb and fdivr out inc loop xchg lcall mov out add rcrb ja in in cltd out sbb jae out mov xchg mov out pop fidivr push fucomip xor and cmp (bad) cld sbb and inc sbb mov fistpl xchg mov mov dec fcoms in xchg cltd sarl adc xor out es int3 in pop mov out adc pop aaa cltd imul adc lods gs cmovge push sbb mov out cs out push xchg push insb (bad) jecxz shrl daa (bad) movsb imul imul mov mov pushf xlat or dec in sub sbb cs loop mov jg mov adc mov jne jmp lahf bound sub xlat rorb jmp out scas jg mov xchg out sub stc xchg cmp rclb mov stos lods ja mov divb rorl push cmp out inc repz add pop and fist out sbb lock ret jmp daa jnp stc add out xchg shl jmp mov fdivrp repnz bound push (bad) setle adc xor mov inc fisubr ljmp imul pop (bad) ja frstpm(287 sbb in ret mov sbb jge push in shr in das and sbb jge loop pushf and xor (bad) (bad) in int (bad) pmaxsw loopne out jb cmp mov inc into out out (bad) call data16 sub cwtl ljmp out cmp lods movsb out fwait mov pop xchg sbb sub and adc xor out jge ljmp push jb push xor out adc (bad) push out iret sbb (bad) mov rclb dec imul pop pushf arpl in xchg xchg sub mov pop pushf jb cmp fdivr pop enter pop or fisubrl out call jo xchg scas in shlb popf in push out sbb fsub jmp jl xchg pop insb out (bad) sub out fistpll nop out out sbb mov sbb mov xor lods fcoms mov sub xchg (bad) push das cltd out push sbb jg mov out in mov sbb fs dec adc ljmp jbe ret sub out enter xor clc out insb inc clc mov push popa loop out mul xor lods adc mov fsub lods or lcall out das outsb popa mov pop fisubr in loop (bad) mov xchg jmp popa adc push cmp out movsb pop out dec inc adc adc xchg daa aad arpl je sti lods (bad) enter scas out (bad) jno popf int xor cvtpi2ps imul push out imul jle test fdivr arpl fisttp jp out out rep mov fildl pop outsl out push jo les in adc stos adc adc in ret sub jmp adc adc (bad) jg sub push jl lods jmp out xchg aam sbb popf sub pop imul push xchg data16 rcrb mov lret out out in push loop movsl loop sub xor sub stos out inc jno,pn out movsb dec xchg stos or sub and out rcrl mov leave arpl cmp ret in dec adc push lret out (bad) js cltd pop psrad (bad) in push xchg mov or popa imul push jmp fs das subb out bound rorb push sub outsl push or pop sbb pop enter and imul (bad) (bad) shl pusha lcall lds push push push jnp out sub adc push xor dec cmpsb cmp fucomp sub stos out or fwait ret adc xchg mov pushf mov pop out shl sti loopne fild loop sbb ret out xchg fwait push mov mov push mov test (bad) out xchg pcmpeqb lock inc cmc xlat gs jmp xor daa out xchg sub mov xor out mov fucomp sbb inc dec in adcb (bad) push mov adc es sbb out mov xlat xor jmp out push jecxz inc out out ljmp bound in loopne push insl xor mov inc mov xchg xor inc jmp pusha outsb mov loope (bad) out pop add lea pop xchg insl out out aaa lahf sbb fs jo and ds shrb cmp push inc and aam fsubs cld out jnp adc pop push shl aad cwtl sub (bad) out sub pop dec frstor out pop subl sbb cld pop iret xor ds push fs out xor out in jmp iret out (bad) divl pop in addr16 dec pop out sarl loope loope negb inc fstpl arpl int3 pop mov pop in dec push pop push insb out fabs cli cmp cmp jmp dec (bad) pop les cld insl out pop and shl add cmp xor adc mov call lds std mov shrl pop aaa enter jmp and xchg adc imul sbb cmp out dec cmp outsb out (bad) hlt mov insl add subb pop dec jecxz arpl out and push ret xchg inc mov das fnstenv lock jmp push (bad) out mov pop xor gs aad test or je out out pop push fistp mov gs adc xchg cld pop ret imul and xchg stos out pop push jge sub add rcrb popf pop cmpsb fdivs out out inc inc aas sahf lcall out in mov in inc js out out sti (bad) sub fsubl stos out (bad) push ds out out lea (bad) out jecxz dec pop out pop sub das icebp out (bad) aas pop fstpt out idivb fildll xlat out andl fcoms int3 push out out shll mov in incb xchg in jl add lods push xchg std out repnz xor mov in rcrb imul adc jbe call das out aad push push mov inc xor inc call dec out sarl sub jns push (bad) addr16 bnd mov jmp mov sub repnz jbe xorl ljmp or jae lret (bad) ds jne bound sub fs out in xchg or inc ror add js mov mov sbb rclb out lock sbb jno data16 mov mov mov scas sahf push adc pop out arpl test sbb lldt fmul icebp out dec sub xchg xchg or insl repz popa push (bad) sbb cmpsl movsb cmp in cmpb mov clc push sbb mov insb sub in xor int3 dec rorl out gs insl fdivr pop enter pop daa ficompl inc xchg in jnp loop data16 fwait popf sbb pop mov paddb pop cmpl dec xor push and (bad) mov push mov addr16 cmpsl ja stos add (bad) (bad) xor (bad) push pop xchg call in lea (bad) out pop push xor into sub out and push sbb or pop sub fs lock fsubrp push (bad) gs outsl fiaddl pop inc (bad) out cli loop test adc inc aam ljmp dec xor movsb cltd popf sbb mov xor rorl mov fmuls adc movsl in int3 popf aam mov lock cmp adc mov ffreep cmpsb add pop mov lock cli das push lret push pushf imul out sub dec das fisttpl out pop jl pop xchg sbb out pop inc outsl jp xor dec lods dec scas rcr sbb cmpsb arpl pop ljmp lods mov in push out fistl out loope mov xchg inc sub jbe arpl pop xor jns out sbb pop cmpsb shr dec sub jno loope xor (bad) mov loop insb pop fs dec out imul movsl bound cmp outsl ret sub mov pcmpgtb insl push out ljmp mov pop loopne test xor out xchg in imul in xor xlat loop ficompl cld cmc or out or jp ljmp mov jmp call add jmp outsb mov (bad) mov xchg jmp jae cmpsl jg inc loope fs in in jmp out aas xlat push and loope push psignb lahf into out out lret xor out insb out data16 xchg out jmp xor and xchg psrlq xlat out sbb xchg nop mov jno out push imul in lcall iret sbb frstor mov push test imul push jle out out xchg outsb loope xchg insl loopne push sbb out out sbb imul fwait in mov addr16 out add xchg popf push lahf xchg jo (bad) out out push cmp xlat out add mov and jmp out shll test pop dec push jg jecxz out out inc in cmp cmp jmp data16 cmp andl out das dec addr16 push out fbstp pop aam sbb fsubr out cli sbb aas stos pop aam (bad) out popf push lcall adc jmp in lret sbb jg sbbl dec lods addr16 pop stos xchg jg pop fidiv loop xchg and shlb gs repz (bad) sti ja pop iret pop add call xchg out loope pop inc (bad) in xchg mov out mov pop or mov out jnp pop and (bad) incb pushf nop loope loop mov (bad) out movsb insb out sub mov xchg out inc pop les lock fs (bad) gs nop sbb jmp mov lock and adc out loopne leave push das gs dec out mov dec lock push inc jo push (bad) mov sub adc inc in mov loope jmp push or std jnp fsub lahf cmp rcr push test out add push rcrl out sahf cltd xlat paddw in insl dec out and mov insb out and and ja lahf hlt outsl call imulb aaa scas out mov jl and xor xor xlat out push dec fucom in add stos out out in mov and out cltd les insl out lahf xchg in sbb fs out push imul ret data16 xor cmpsl lahf out aam aad std pop imul push jle in mov xchg std aad insb (bad) mov ljmp out cmp dec stos mov arpl out fisub jmp adc xor pop cmpsl sub sub ficompl push pop jmp inc insl (bad) test fs mov mov cmp xchg call imul (bad) fsubp xchg daa jle test cmpsb shr inc push xor stos (bad) xchg movsl or jp xchg jb or jg insl das jno out ja adcb lret (bad) imul (bad) xchg fdivr fsubl sub arpl sbb pop sbb insl pop pop xor dec cmp popa out and call imul jg pop rcrb pop mov cmp fsubl xchg sbb aaa sub dec push xchg icebp in push out aas lahf jbe pop rolb jo es arpl xlat sti fisubl ret rcrb ja (bad) jecxz (bad) adc or in cld dec out imul scas pusha pop test adc insl or insb mov mov dec shl and xchg pop shr jnp (bad) fs cmp outsb pop jmp xchg and mov and cmpsb (bad) pop ficom inc outsb xlat mov pusha aad cmpsl push out push sub push mov cmp pop adc inc daa mov or lret std enter jmp mov pop fwait jle loopne and mov sahf (bad) mov (bad) out and mov fucomip (bad) fndisi(8087 jnp int3 std out lahf jae (bad) bound insl lods ss pop xchg add out pop ljmp adc mov push xor lahf mov cltd xchg mov movsb push pop rclb shr xor imulb and movsl addr16 or out sbb push out arpl fdivrl cmpsl mov out mov test insl xchg out sbb in lcall mov les popf mov sbb ss pop shrb out ficompl jo (bad) mov adc dec pop mov out push or andl (bad) scas or out out add fucomip decl movsb dec mov daa test dec rcrb push out lret xor xor shll (bad) and lock cmp out je das enter cmc int push in cmpsb jne fbld inc jmp pop and sub cmpsb out out xor mov ja inc mov add inc adc adc test call ffree sub jbe ret stos adc mov ss cmp and cmp shr lahf aas aam out lahf les inc dec mov pop jg cli or add out popf push fbld add sub xchg sarb (bad) std into test sub out xchg (bad) push lahf pop push int3 jo in mov test mov xchg popa xor test test adc popf sbb ljmp (bad) mov roll out outsl aam or push out jno jae mov out lods stos push inc call aad xchg fildl imul fsubrl and jo sbb pop cwtl fisttp xchg add out mov fnop out cmpsl lods addr16 in xlat out insl sbb push das shll and lret rcrb dec out gs (bad) xor out cltd jmp jmp loop das push xor out adc mov fcmovu (bad) push out xchg mov push cmp (bad) xchg out in scas rclb in pop fbld in enter jmp push loop out call (bad) rclb out out push mov sub movsb out pop or jmp out push cmp and push mov popf push mov outsb movsb xchg out gs test in out dec out mov cmp xor and xchg dec rcll mov mov jmp clc out mov push cmp xlat out jge ljmp ds out sbb sti dec int3 scas dec xchg iret leave daa push mov loop das mov pop out inc out sbb mov mov out (bad) or inc xchg popfw out jmp out lock dec or outsl push inc in pop jnp imul sti popf jge pop imul pop ljmp pop (bad) es fild imul dec mov push nop sub xchg (bad) pop xchg jne out out sahf mov movsb sub and mov xlat mov in pop out push out scas push push pop lahf push pop stc (bad) cwtl mov addr16 out bound andb out xchg cmpsl sub pop xor dec lahf pop adc push cmp lret add mov out notl fs ret mov int out shll jle jmp and mov cmc lahf cmpsb and sub in sub xchg xor push ret call movsb stc sahf cltd out cmp arpl adc xlat jecxz inc in sbb sbb cs stc jg jecxz and inc adc cmp aaa in pop mov adc sbb cs push scas pushf dec out push out pop inc fwait sbb cmp dec out rcrb in shrl loop xor loopne out in fs mov out outsb cmp cmp xchg fisubrl lea outsl push fcmovb cmpsl and cmp arpl push dec out lcall (bad) fisubr out sbb xlat push xor mov (bad) stos cmc xchg loopne test popf in mov and cmp out in lret jecxz add insl out js out inc out xchg mov out sub mov loop mov xchg mov cs ljmp cmpsl or es pusha lret fwait adc mov fs rcr mov ds popf xchg mov scas adc fnsave out push pushf (bad) fmull out add (bad) ja jmp cmp pop adc packssdw pop ja out inc fwait push push aas jg inc into out mov loop jecxz sbb out jmp and insl imul lret nop lods call out add sbb (bad) jmp fdivs sub inc fistpll aam in lock out sub fninit pop adc jg and out out pop push mov out mov and pop cmp out in xor loopne jne icebp (bad) sbb fsubrs cmp imul sub jae aam sbb (bad) in push out gs push add jne rcrl dec lods test sbb or mov in and js out push inc cmp (bad) xchg iret mov popf mov mov loop pop cs jp ret daa mov mov xchg inc pop cltd (bad) in fdiv out fidivr aad out iret arpl mov jecxz inc movsl outsb mov sbb cmp (bad) mov faddl out and out jae jecxz aam lea insb add mov (bad) pop cltd fwait jecxz xchg sbb and cmp cmpsl clc mov jmp push repz and out out in out cwtl pop inc mov dec xor leave xchg adc leave mov out call popf jg or mov out (bad) xchg sbb sarb sbb (bad) call loop lock push mov ret xor out dec in mov outsb mov out push inc sbb (bad) pop daa jp adc addr16 xchg cli xchg out mov clc in fimull (bad) mov and (bad) sarb out out push mov out ret mov cltd fimull xchg (bad) xlat xchg pop and (bad) lock sub fdivrl inc jp in mov mov pop jmp iret xor mov negb mov pop les sbb out jge or sub dec cli adc ss ss out cs ljmp jp leave loopne mov stc int adc sub (bad) and cmp mov fwait pop cmp out and jg repnz xor xlat lahf sbb mov push mov int out fs jge and lods pcmpeqb xchg stos push jne sub xchg xchg and sbb mov lods xchg cmpsl gs test orl ljmp out test lods xor out mov sub arpl movsl xor iret shl push dec mov (bad) gs xchg in rol push out mov jo add ss lcall push cmpsl xor xchg dec pusha out das (bad) das out (bad) insl sbb call sub and dec imul outsb xlat xchg (bad) jo pop or sub jecxz push in shr pusha mov movsb xchg sahf fincstp pop popf sbb push xor mov bound out cmpsl xor (bad) pusha adc out xchg sarb jg sub out (bad) out addr16 mov out aad in ljmp cmpsl pop adc and aas int lods loope mov adc cmpsb lods lock in and out test ljmp je fs iret and pushf outsl in xchg jmp and test out xlat xchg push jmp adc je adcl ljmp rcrb pop fsubrs insb lahf insl das aas cmp fisttpll arpl fcmovnbe jo jecxz ret in out pop in sbb (bad) lock (bad) lcall in out cwtl out rcrb push pop (bad) lods call loope aas push cwtl and hlt push dec dec loop loop out lods addr16 lcall pop test and mov mov loop nop int push mov loop jecxz fist in jg ljmp cltd pop lahf mov (bad) insl js popf out in or out push int cmp sub jnp cs test push cmpsb adc push rolb sub out js fisub movsb pop adc test call (bad) jno loopne ljmp xor jg out loopne outsb sbb ret ljmp pusha cmpsb bnd pop insb jb shrb dec in out inc fcmovnbe call mov fwait loope push dec out push mov dec jecxz pop mov dec call jnp dec out out mov pushf jmp xchg dec data16 movb sub inc push jmp push test inc pop lock rcrl jecxz pop aaa cmp daa pop shr mov push mov es mov mov mov (bad) push mov xor in mov xor out mov aas out mov xor fistp loope in inc (bad) lock icebp mov sub insb rcrb aaa aas jmp mov xchg push mov push in xor in out shrb mov aas mov pop xor int out mov fsubr mov ret out popa out and test xor jmp sub stc out xchg in adc cmpsb in movsl cmp out jo mov out sbb xchg cwtl (bad) pop das (bad) xor inc out popa out and dec xchg push sub out out fsub pop mov imul movsb out iret leave adc add fadds cmpsl lods out fs (bad) cmp pop sub xchg jmp jmp push clc out cli mov sbbl test xlat jne cmpsl out adc cli out dec lret push or daa out inc xor mov movsb mov scas out addr16 ds das dec push (bad) out push cli ret jecxz data16 xchg fs hlt mov adc rcrb out lahf sbb adc call out cmpsl inc cwtl icebp insb xchg movsl xor out mov packuswb out fldcw add out (bad) and add jmp mov daa add and scas add sbb sub adc jle (bad) out cmp xchg jo mov aad out setns and or std pop xchg sub ljmp jecxz mov out out ds xor lahf out lret pop imul out adc lahf pusha arpl add jae shrb add add add pop outsl and add loope addr16 cli call adc in aam pusha cmp lds out jo xchg ljmp pop out sbb mov out adc sahf jmp out cmpsb fisub mov stos out das imul add popa and stos in out xchg out lock xor sub dec lahf out (bad) ljmp mov fistp out ljmp aas scas xor or sbb out inc cmp xor pusha push out shl lahf sbb pop mov ss or outsb xchg fdivrs data16 mov out sub arpl push (bad) js mov lret push xchg (bad) aam lea pop dec sub jnp jl fiaddl jns ljmp xchg notb jg mov mov data16 out sbb add cmp add fcompl (bad) inc adc outsb xor pusha pop push jne add out mov ds add out mov cwtl outsb decb sbb (bad) (bad) xlat pop fdiv fisttp out or xor or or mov inc sbb (bad) mov aaa pop push fisttpl out or and unpcklps push xlat xchg icebp out into out inc sbb cwtl (bad) aam insb push fsubrp rcll out or rcrb or imul sbb mov mov gs or add pusha xchg aas xchg or mov (bad) inc decb and xchg sub iret (bad) push arpl test xor aas out mov repz std inc push sub sbb push out (bad) xchg lret daa insl out xor arpl and pop in cmp push inc maxps push jo jl push shr sub jp out (bad) imul pop ss jo gs mov popa out or out adc pop enter out push fmull jg out out sub xchg pusha stc inc ljmp out add mov mov sub in and gs fcoml xchg xor out and push out sbb xchg cmpsb scas pop dec fdiv daa loopne pop sbbl sahf out hlt and add popf in xchg jg xlat lock jle mov pop dec sub mov out (bad) mov rclb dec (bad) out out pop inc les out sbb push (bad) out call jae sar and cmpsb and insb out dec popa push in aad mov in rep xor das sbb fwait and popa aas push fisttp mov jbe (bad) push push stos out or shr xchg out or mov out stos mov pop popa popf xchg add mov jmp out and pusha xchg adc pusha and pop push bound (bad) (bad) ljmp out mov iret (bad) lock push cli iret xchg pop test aaa fstps xor mov xchg fldl addr16 loopne scas lahf xchg adc arpl loope pop out push push xchg daa aas cltd pop arpl pop gs jle push sub pop inc and rolb loop pop aas fcomi sbb insb cmovp sub push ljmp push lret ss cmc addr16 ret (bad) mov test inc mov inc in cmpsb cmp pop xor loop stos out (bad) outsb sub adc jo mov xlat andl sbb or adc cwtl lods popf mov int3 cmp adc and (bad) jno adc add pop lret outsb pushf in fsub inc jne xor push out sub in push mov shr fwait mov in and mov jo fiaddl lods packssdw xlat xchg in gs and pop fcomps loope pop into pushl mov (bad) mov pop aas in scas ret sub lock rcr cmc cmp call loop sbb xchg movsl mov pop pop ljmp sti loop (bad) fs mov add in in imul fcmovnu (bad) xlat pop sbb pop pop ret lcall xor ja cmp pop out test sub mov mov out arpl in out (bad) cld into cmp push inc xchg xchg in out adc imul call push shll out mov xchg or les out fsubl stos in mov cmp lock bswap out out sub cmpxchg or data16 xor leave xchg adc mov test bound iret ljmp out mov test out dec push xchg addr16 push and movd int xchg movsb out aas jp lcall add outsl mov loope out xchg xchg add pop sub out and adc jns in sub test mov loopne pop out and test cmp xchg or ljmp lods dec mov psubsw in hlt adc lods cmp xchg jo pop xchg sub outsl pop (bad) inc out mov je xchg std out lock arpl out inc xor cld out jbe mov lea adc fisttpl xchg ljmp out fwait push inc stos clc lods out test push push xor stos iret loop insl sahf out in lods (bad) and jo out out icebp sbb (bad) sahf xchg loope sbb out push (bad) int3 out (bad) out xor stc cld inc (bad) sbb mov cmp ljmp imull nop push jl out out add mov (bad) aam push les pop loope xchg push js in push mov lods jo aas leave jmp sbb fs test jns inc push shl dec shr cmpsb add fadds outsb cmpsb fs stc out fidivr mov or sbb pop or shl sbb out loop adc out mov popf out or jmp dec out stos lods and lods cmp int pop gs in scas mov loop mov loope test and int shlb lods push dec stos mov or dec scas out negb stos mov iret mov outsb jmp jmp arpl out pop xchg or in push sbb out (bad) call lds int cmc lock int3 push out pop xor or jg out xor inc lods jge cmp out loope iret pushf push cmp (bad) out push mov das jecxz (bad) ljmp cs and jecxz out out iret sub push out adc push xchg out mov xchg mov gs xchg mov sub mulb fidivl cli push in out sbb cmpsb ljmp push inc arpl out mov pop bound jmp out cltd and adc loopne int3 ljmp out inc add dec mov shr mov dec adc jle push jmp and (bad) call jbe stc dec xchg or dec ljmp mov lods les pop in jmp cmp leave mov jecxz sub data16 jg enter jb (bad) pop jmp ss lock rclb andl test out or rcll sbb push adc adc pop pop push xchg pavgb aam shrl imul stos or out out cmpsb mov sub dec shrb mov das and sub movsl pop inc mov mov dec mov mov jmp mov movsl iret fucom out push loopne lahf (bad) lahf pushf mov das rcrb das cwtl and (bad) pop xor and in lret in out repz xor arpl out xchg insb cmp lods lahf inc mov xor cltd jg dec mov mov jmp cmp jecxz popa lahf std out inc mov and jo ja aaa push dec and inc data16 pop lods out out push scas or fldt sbb ret out mov mov shlb xchg mov mov imul movsb mov jmp sbb in enter xor ss les pop mov pusha or lods out jg fcomps out out mov ficoml movsb out pop lahf test out pop insl std out iret aam in stos pop lods out xor out pop pop sub in mov out xchg fldcw test pop push std aas fcoms iret out (bad) call cmpsb push out in fsubrp pop adc fsubl loope outsl das inc out movsl jmp out jno push fsubr out mov imul cmpsb jns das aas and fisubr in cmp loopne xchg call cs lret rcll mov push pusha jbe cmp cli xor lret mov js (bad) sti ficom xor dec mov or inc jne inc ljmp mov iret bound pushf lods out fdivrs xor out shlb dec test jns mov sbb sbb pop pop out and or out sbb test ret jnp out fsubrp pop (bad) lock push fmull pop out cltd mov xchg and ljmp loopne out in fstl out mov pop or aas ret out dec addr16 cmpsl sub ss out jnp out mov pop outsl push sbb mov movl fs les mov test out add stos pusha lret or xor or lods mov out mov dec out lds cmp push and push sub inc repz out out test mov adc jo push out cmp cld dec lods mov dec addr16 jo adc stos cli pop iret sbb in pop mov aas inc (bad) pop and insb mov lods loopne int3 test das outsl in fsubr mov ss xchg xchg inc inc out nop fs mov cltd mov out xorb popf inc data16 mov ret dec in out fbld xor sbb out fwait (bad) push jp insl sub mov push mov mov sbb xor test cmp pop mov icebp mov sbb sub xor fmul decb js rclb jecxz jnp movsl loop aaa pop lea jp sbb fucom pop das fldenv (bad) pop dec lahf adc leave push adc mov xchg test call lock out out mov dec imul adc stos mov push ret test fsubp out add xchg xor out push daa mov test adc ljmp mov out ficomp insb jbe aad or add jmp mov scas ss out movb push test (bad) out add jmp and adc pop (bad) dec loope mov lahf inc iret and out out (bad) sub imul bound push fisttp neg out xchg inc out gs aas daa fildll pop in sub out loop jge enter sub and in call xchg in lods int out mov out and and jmp imul (bad) gs movsb adc out daa xor aad and or xor jmp out mov fisubrl push in in add ret movsl insl out fildll lock out (bad) incl in scas daa cmp out out jmp popf push jmp cs xchg in jecxz push push lahf fildll cmp pop push dec sub xor es pop pop inc cs shrb sbb pop dec out sahf outsl xchg adc sub lock lcall xor in daa push (bad) pop inc lahf test sbb lahf js bound fwait iret out and nop or ret cmc test jb jecxz fs cltd and and out in and cmpsb inc movlps in mov (bad) dec jne mov lock jg,pn pop out xchg mov movsb into inc fsubp pop sbb adc iret push jecxz and loope inc cmc jb mov sbb xchg xchg jbe jg out adcb cwtl sub mov call outsb out pop imul jno loop fcompl jg into inc xchg mov jmp jbe aas scas (bad) (bad) enter imul dec in push cs std icebp loope jp test push iret out aaa (bad) lret ljmp daa inc fcmovnb out stos sar arpl and push and jbe test out xlat les shr fs dec ret loopne out outsl or xor inc pop mov cmp dec add out jb das inc jnp out stos push add pushf mov inc ljmp insl (bad) leave divl pop sbb cmp out pop jnp xchg loop movsb jg jmp dec add sub fstps iret out in (bad) rcr ljmp int ja pop lahf or xchg clc stc inc out cmp push mov pop mov pop mov push mov lods pop cmp pop (bad) daa stos call pop loopew pop fsts out sbb mov mov xchg lock cmp sub ret js out out push sbb leave out scas xchg loopne xor popf sbb loope in das (bad) lock (bad) mov and out repnz adc insl sbb imul pop sub out sti jae out pop ljmp int3 out es movsl pop push xchg adc call out adc aad out addr16 and lods pop popa pop popf sbb mov in jmp fbstp cmpsl pop aam mov aas cs in out in lock in (bad) outsb (bad) mov pop sbb out shrb in lahf mov out out test mov movb cmp dec fisubrl push out jp xchg add (bad) out out in mov sahf pxor pop out lock pop stos cmp pusha insl mov fcmove lret mov mov test imul out xchg mov out pop push mov sbb nop and stos push adc pusha js mov pop xchg inc xchg out call sbb pusha insb (bad) sbb sub movsl outsb pushf shlb out mov mov mov in push mov or adc xor lret insl sub dec or out out in mov stos out lahf ret push push ficomp out out adc enter xor out (bad) repnz and shr xchg clc lods imul and pop cmp inc out imull out out fist clc roll repz xchg iret dec addr16 das cmp dec fsub out out add fstps aaa push neg shrb es xchg jbe loop movsb mov lret cmp and push pop lea out xchg fildll fucomip fldl aad jbe out cmp daa addr16 ja mov mov sbb scas lcall shrl pop (bad) mov mov addr16 xor pop ret mov xchg faddl xchg imul popa mov dec and imul add push xchg mov mov out scas jge rcll and int leave mov int3 cmp dec gs jb and out mov dec test out leave pop in fcmovne jmp xor and lods push out sbb xlat insb in sbb mov xor into add out ljmp data16 xor test inc xchg mov movsb jecxz out and stos jg ret fcoml out and (bad) popa (bad) jmp out ret lods sub mov dec cmc loope pop lret jp enter lahf cmpsl int cli pusha outsl std repz shll out out movsl sbb mov mov das jmp negb (bad) fsubs pop push xor adc xor cltd sbb or mov jae out out push and jbe mov cli jmp cmpsb lret out add mov test movb lahf push movsb push xlat fsubl loope jmp xor sbb cli jecxz push cld rorb pop sbb sahf sbb (bad) ljmp loop daa gs leave pop out cwtl fwait mov mov push jmp or out in xchg ja out sub or cmp notb out pusha push push scas shlb inc sbb out out push jb in mov sub adc insb out and ficoml testl mov fsubr pusha pop xor rcrl fs jmp into jnp (bad) addr16 out dec cmp xchg (bad) add jl mov sbb jb mov add (bad) out rorb cld es outsb jl sub shrl sbb xchg out xor aas loopne (bad) pop shl inc fwait stc pusha out enter lahf mov sbb pushf movsl fstps push pop sahf rolb xchg lea xchg adc out pushf mov sbb popa repz jae cwtl push mov adc cltd cs fisubl fdivr xor iret mov pop out pop mov xchg mov inc dec out sub outsb sti fwait in imul daa scas shrl jo setae dec pop sbb fdiv out in and (bad) in sub out sub test sub jp lahf xlat lcall loop das and loop mov das outsb adc fwait out insl ds sbb fstpt (bad) sbb jp xchg jecxz das pop adc pop out imul lock mov or pop paddb clc imul sbb out pop outsl push outsl outsl xor pop jo cmp sti outsl outsl mov sarb xchg out adcb mov iret imul jg aaa addb fiaddl data16 inc xchg ljmp rclb adc mov in out mov fwait out push mov loope mov lahf sbbl out pop cwtl out ficoml mov ss push loop cmp cltd sarb sub mov and out cmpsl out test ljmp lods pop or psubw adc push lock jg mov fdivrs mov (bad) outsl pop subb movsb loopne mov lret xchg sub fucomi ljmp imul mov out test stos in add jecxz insb pusha ljmp pop dec in jle xchg mov push out std gs loop arpl fdivrs sbb push imul fldcw out das mov lock mov and sbbl movsb ja cmpsb pop mov push jge out mov aam push sarb push cli jmp das daa mov mov out outsl push loop arpl sbb fs in gs and (bad) mov mov pusha in iret stc in rcl loopne and into lock dec cwtl daa push fstps fnsetpm(287 mov xchg out fsubs push jmp or call add loop pop movsb out push pushf jmp call outsl and out insb pop (bad) popa xchg pop loopne jmp in push addr16 ljmp (bad) lods xchg leave test mov aaa mov test and mov (bad) lahf shrb xor xor lret movsb (bad) cwtl jo out sbb in out stos in push or test ds mov jne adc (bad) shl push xor xchg xchg pop pop out loop lea (bad) lock outsl loopne and mov out push (bad) jge fistpll push dec out sub inc jo daa out mov add dec mov (bad) stc inc out out movsl pop out (bad) inc (bad) and push pusha lock iret in cs and jecxz fidivrl out jmp add movsl mov (bad) jg mov out xchg lea call ret in inc imul jl leave push fsubr or pandn jmp popa mov test icebp dec in push addr16 ret jmp fsubrs xchg push in pop into out insl pop jmp subl cmpsb pop rorb rorb dec mov pusha imul mov int3 arpl out pop push call mov mov out dec jo push out ret and movsb popa mov in push mov sbb in das loop pop fs jecxz imul out pop adc out inc loope loop arpl and sbb sub movsb pcmpgtw (bad) xor jo out loopne pop jmp dec push push out mov in out sbb ljmp push cmp out rcr lods out adc out loopne imul mov sbb fwait sbb sbb or andb inc (bad) mov in xor out adc mov out jo mov loopne in js call sbb out mov pop mul jmp shrl out mov xchg loop push out mov mov pop jmp push sub loop jmp mov cwtl out jmp push imul lock sub mov out push (bad) loop jmp adc pop out (bad) in pop cli xchg sbbl push bound sbb divl jmp add cmpsb push setb xor push test pop mov mov out lahf jg loopne xchg mul ljmp insb outsb pop push outsb inc in ficomp pusha jmp out insb nop ljmp out rorb ret pop out shrb xor out xlat push leave mov imul pshufw cli out add icebp in andl lock clc bound ret iret dec lock xlat jg (bad) addr16 and xor in mov dec in rolb out loopne int3 in push leave in repnz lds jecxz fs mov test push (bad) cmp enter add out ljmp out leave fs jecxz arpl mov sbb or das mov out jne (bad) (bad) out push imul outsb mov call adc ljmp mull cli push popa out mov out (bad) addr16 jno out add insb dec fwait jecxz cmpsb cmpsl push out les out cmpsb cmp cmp out decb gs dec out enter call or mov mov add pxor (bad) mov out sbb icebp out jb imul punpckhwd iret addr16 das xchg jo out (bad) out loop arpl (bad) lret mov in xchg out gs xchg lahf outsl xchg in or out cwtl push out and imul push lock test stos out out addr16 push add imul jns ja dec push fwait push pop daa nop loop insb shr xchg or roll push out das scas imul cli clc out lock std and leave loop xchg stos pop sub out insb inc mov sahf pop sub out xor das es dec cmp xchg mov test add xor outsb inc add js pop aad mov loope out mov and xor rorb iret ret xor mov mov shlb mov push sub pop shr jne je test jmp aad (bad) cmp inc into nop or cltd rcrb stc pop mov ljmp mov lock mov iret or out insl cli call jmp idivl out mov lods mov mov sub cli out out xchg jmp mov push (bad) popf loopne inc imul lahf mov jp out out pop cmp lret in cmpsb aas mov ljmp jnp lea jo enter in cltd inc mov out out pop mov out jmp imulb jmp imul out fwait (bad) out out cli lock outsb push sub repnz scas pushf outsb fildl mov nop out xlat mov loop shlb xor (bad) outsl das out jo iret jecxz out fs in data16 or jl jl out xchg mov (bad) in and loopne (bad) mul out jp cli cmpsl jl out out bound fdivl pop jecxz arpl out addr16 out arpl rcrl ret imul push mov in add out ljmp loope ljmp in out lock (bad) imul pop insb mov in stos outsb fildll xlat call jmp lahf insb (bad) ljmp in (bad) sti js inc std mov insl je out das cwtl arpl jmp fcmovnb insb push jo dec jo mov loope and add xor in mov loope out loop fs or (bad) mov lahf addr16 mov jo out cld outsl in ret jo mov pop cld insl dec std mov jbe mov rol xchg fmul lahf push in scas into inc jle out enter xchg dec insl stos call (bad) out mov cwtl fs jecxz arpl out push insl adc out push push push jmp fisubl cmpsb (bad) in ljmp push lock shl data16 in iret push sub call sti out fmuls shl out inc insl push jmp insb lods in outsb push in fimul cld xchg std sbb pop popa out jg gs out or out fisubr call mov imul outsl daa out cli jo sbb jl jb xlat pop ret popa test mov jo pop (bad) (bad) xlat pop dec cli lock jo mov loop fs xchg imul jo jg scas loop xchg out mov out arpl add and movsb mov inc jecxz fs pop loop data16 pop or mov lock int3 ljmp mov out xlat jecxz cmpsl fs jo addr16 out push out ret adc ret imul xor (bad) out sbb push sti das cld scas adc (bad) out repnz (bad) or shlb punpckhbw outsb imul jmp insb jp out ret cmp jmp insb lds xor or popf sti fdivr xchg enter out (bad) fisub loop arpl aas dec push call in sbb pop out cmp out fsubs out push outsb inc or jg out mov (bad) jo bound out std imul fsubs fs (bad) or (bad) arpl (bad) outsb inc mov and shr push outsl andl fs cmpsb stos data16 xchg movsl movsb fs iret out fdivrs and push xlat out loop pushf loope bound gs call out dec push jmp out repnz cmp in imul scas (bad) call shrl jg mov loopne out mov out fcomip (bad) in push push ret jo insb jnp mov outsb fldln2 or jl out mov xor ljmp in cmp (bad) mov mov out cltd push cmpsl out pop or clc imul jo and (bad) out notb (bad) out (bad) icebp out ljmp ret xor shll gs addr16 fs outsb mov push out aad out icebp arpl jecxz mov pop sbb test gs fs call xor mov daa sbb mov popf and inc imul out bound lock fs jecxz arpl out addr16 imul call mov inc out outsl jnp jp shr out insb rolb out jmp out in push adc out call sbb jl sub mov rcrl add xchg in dec in mov fs bound nop/reserved out cmp insb std cmp out out mov bound cmpsb test push xor and out lahf mov ljmp montmul out pop loop fs out addr16 in icebp outsb cld es adc out xor fsub sbb dec in lds out mov xor aam jae in scas iret in js (bad) out out out push out sub mov lock xchg loope xor sub mov push and mov push in in out loop out push imul jg ljmp outsl and add out loop insb aaa in xor outsb mov cmpsb data16 push xor push out loop (bad) outsb nop shr mov pop jo cmp out flds out stos les adc jns fldenv test out idivb add mov movsb out repz (bad) data16 push aas (bad) loop fs or inc lock push outsb iret and (bad) jo out xchg pop out xchg lock pop fs in int3 lcallw mov gs out jmp add out cmp mov out in lock jecxz arpl mov pushf push out add out and enter call loopne iret mov and inc cld out jg out adc or mov out rcr push dec in std and test pop daa out test arpl push ja sub add pop out mov (bad) loope xlat push movnti jnp int cmp fs xchg mov pusha in push mov xchg pop out out xlat fs mov mov stc pop push out gs adc fs out loopne out in sahf out dec stos mov in subb out out and icebp popa in out (bad) outsl inc in data16 xor ss insb lret shrl pop out mov adc out (bad) scas das sub test pop out jo (bad) out mov loop arpl jmp insb call in or pop lock bound ret xor out mov jo loope bound in fndisi(8087 (bad) ja fs out and ret out outsb in into outsb inc adc and xor inc or xchg jne lods (bad) out inc fucomi fsubr adc out mov scas loop cmpsb sbb in out xchg jmp mov cli dec out repz loop hlt out pop hlt out dec cmpsb out iret fsubs addr16 pop pop xchg out out aad sahf outsb enter xchg xchg mov out pop dec xchg or in push (bad) dec add inc rcr xchg jb fldl in out fldt adc faddp daa xchg scas imull add out mov adc fistl jmp fdivr pop ljmp popf xchg dec pop out xchg loop (bad) scas out push pop jecxz aas sbb sahf outsb in out aas shl xchg daa xor out mov out jg imul cld out push out popf jns jns and pop loop in data16 or data16 jg xchg ljmp in fnsetpm(287 dec sub in out or mov or cmpsb out out fs cld or adc ljmp out (bad) out fildll out push addr16 mov push aam jg ss out pusha mov out icebp pushaw (bad) in push loop nop imul mov cmp out (bad) insl jae jmp insb in es or mov shr scas fldt out pusha fcoml insl pushf sub out fwait call and scas ret out xlat add repnz es push enter sub out bound (bad) out push push or fs mov (bad) addr16 in das outsb push pop gs out jae loop arpl push in insw in outsb push in cltd pcmpgtw jecxz fs lahf into out lock and in and out sub out insl (bad) ljmp or pusha jecxz leave loopne packuswb call jmp shrl sar push popf jmp lock xchg in (bad) outsb std movsb ljmp sti out mov pop data16 in push repnz ljmp stc in mov mov insl jb sarb hlt ljmp sbb lods mov fnsave hlt sbb push mov aaa jbe std xchg shrb les imul jge out cli lds icebp int3 jb out add je repz jae cmpsb imul ja (bad) leave js clc lret cmp xlat add sarl sar js (bad) int mov iret lock mov jg iret cmc mov hlt push mov jecxz mov repnz cli out jnp sti mov jbe push std mov jb sarb mov jbe movsl out fs out stos sbb mov cld push xor inc (bad) sbb fldenv in add in shlb xchg std out lock sbb in (bad) into js mov int3 jge cli int add ret pop clc enter mov cmc cli mov jae sti mov repz jg inc add in idiv es push (bad) stc out loopne out repz push icebp jne adc je sbb xchg mov jno out adc cmp fidivr pop iret xchg mov pop lock jae adc (bad) xor sarb sbb pop idivb sbb jne adc pop icebp jns sbb fsubr fdivrs xchg mov divb adc sarb pop fwait mov pop fistp ja sarl fcom js sbb xchg mov jg out pop xor sti sbb popf mov imul fdivl fwait mov idivb sbb (bad) xor (bad) cli cmc pop lahf mov scas push stc out jnp sbb cmp fidivrl sbb mov divb adc ljmp rclb ljmp out icebp sbb clc out jnp sbb jns stc pop xchg mov pop push lods jg (bad) pop out inc fcomp js sbb pop divb pop xor xor aam repz xchg mov pop push stc imul aam repz push (bad) jno adc sarb cli std pop xchg mov out jae adc loopne orb push shr pop pop (bad) jnp sbb jge in mov stc jns sbb aam je mull xchg sarb xchg adc jno icebp pop fwait mov ja (bad) pop out cmp (bad) xor xchg rorb sahf pop cmp xchg out adc stc pop jge sbb jl and pop (bad) jns sbb out xor (bad) jno pop lahf mov icebp jnp sbb loopne fiaddl mov push (bad) out jae adc out lcall xchg mov out jno adc aam je jmp lahf (bad) mov pop (bad) out jge sbb jg notl xchg mov pusha push jmp sbb fsubr xchg adc pop add pop cmp xor push mov fwait sub stos mov es or dec push aaa out insl mov pop ss mov (bad) mov out inc adc inc (bad) das cwtl repz insb stc out jmp loopne cmpsb iret xchg pop (bad) mov add inc (bad) outsb mov jo pusha clc scas pop movsl adc aam rcll mov and loopne incb jmp gs test icebp loop jecxz cmpsb clc loopne in or mov pop int3 (bad) jmp loope scas bound insl mov int3 out test sub popa pop imul (bad) out (bad) mov inc or or dec sub lret sub inc pop arpl out test and push popa (bad) out dec and rorb mov stos mov dec out lret daa add movsb push or cmovs xor into mov sub jp jp daa inc sub pop pop out stos outsb es das fsts adc movsl and mov fistl gs out (bad) test pop push scas out xchg adc leave and out idivb out xchg push push fdiv out mov out repz mov call jmp out sub push or notl (bad) lock out pop daa xlat out lcall test ffree daa out cmp ret mov iret dec mov ja gs (bad) mov std out es loopne pop mov push mov aam int3 sbb ss out xchg pop (bad) test arpl out pop add pop sub negl rcr jae xchg mov aas clc popf daa out sub adc div pop mov pop mov xor jge mov insb out mov sbb xor test scas setle inc lods pop jmp out jb fnop push test divb repz negl push add fmuls pop or sub fstp shlb sbb ljmp out out xor out adc pop cld sti jp push jae aam gs stc pushf jne pavgb lock jge fnsave cmp or pop ljmp out out fistp out pop out pusha outsl sbb push push jb stc out into and arpl negl mov cmp cmp out insl out outsl out jo jne out push out gs push out mov pushl jg jbe out outsl adc pop cmp sbb testl mov xchg xchg rorb mov xchg mov push lock lcall lock lock inc xchg lock lock lock popf cmpsb mov scas (bad) ljmp pop sub push loop loop push loop xchg loop cmc loop xor stos pop loop pop loop jae scas mov mov inc jg lcall jno inc out push dec cmpsb xchg psraw loopne mov loop scas sub out lret dec in pusha outsb addr16 pop mov aaa (bad) mov sbb out adc sbb scas push es push fucompp mov aas lret mov mov pop sbb arpl out out out fcoml andl xchg repnz cmpsb out ss xchg mov cwtl mov mov dec test adc or mov shl inc lods (bad) dec adc cld (bad) lock mov out mov jb orl xor out xor loop xlat ss inc sahf mov jg xchg daa xor mov out cmpsb out clc inc stos mov xchg addr16 loopne add jbe mov sub fdivrp dec mov add lock pop out sub imull mov dec mov imul cmp data16 gs mov xor out bound insb icebp fldenv or imul xor test stc push js in out cwtl ret pop sbb fiaddl xchg push loop sub cwtl out jo fsubrl out mov pushf punpckhbw mov mov cmpsb dec mov les out sahf out jmp adc cld movsb sbb in xchg iret outsb mov bound and cli icebp (bad) push out mov pop aam stos or push inc inc push popf shrl mov loopne or fsubl xor mov lock in xchg jne aas popf rolb shr xchg pusha daa sub (bad) leave std out lcall adc movsb out pop inc fs jge stc xor pop outsb push out xchg or push dec imul test push pop cmpsb xlat pop jl insb mov push leave iret inc dec mov loop add dec push out inc in jbe out (bad) dec inc xchg or loop das lcall stos mov or cmpsl xchg xorl int pop test out jp push ja out cmpsl lock (bad) scas sbb (bad) call cmp xchg dec push mov sahf in xor movsb mov aam js xchg mov (bad) out xchg mov aad inc xlat xor mov out push sbb ljmp mov sarl mov pop iret out movsl shl mov lock cmpsb movsb dec sub sbb lahf les out scas (bad) jno pusha das lea movsl push cwtl mov insl dec dec fldcw loop xchg and dec push mov inc and xor mov sahf fnstcw out mov mov inc lret xchg imul sbb out enter out std dec mov cmp mov cltd ror popa in out addl fbstp dec out mov inc sub sbb lods pop fisubrl scas cs (bad) call loope mov scas sarl lcall out xchg das cltd es iret mov orl in mov lcall loop inc ss out out stos mov out add mov add (bad) out stos xor and xor sub add xchg stos dec pop pop (bad) mov ss adcl xor popa adc (bad) scas movsb mov loope mov das dec iret adc (bad) aaa ljmp mov cwtl clc mulb bound pop inc or loop fnstcw out mov mov int3 out sub cmp scas (bad) fcomi out jge mov subps int3 sahf imul dec sub sub out jmp xorl (bad) mov push out out inc dec rcr addr16 ljmp in push dec jg or lret aaa mov cmc insb in popa mov cmpsl dec loop leave pop test das dec or lret cmpsb add out int3 jns neg idivb enter cwtl pop push dec inc cmpsl adc xor (bad) xor out in add push inc xor add enter jno xor out aas inc dec xorl and (bad) (bad) out leave or in xchg xchg mov out out hlt test inc out test gs out ret mov add rorb das jge std mov test mov lea cmp sub sahf jecxz out jae cmp mov fisttpll lock pop imul in dec fwait xlat out cmp scas lea out jp cmp inc xchg loopne iret (bad) rclb mov scas jle sbb loope xchg jmp insb dec (bad) out fwait mov pop ja mov lcall pop mov cltd lods int aas test pop andb out frstor or scas push cmp out jo pop ret mov pop adc ret inc lock push ss or loope ljmp xor and (bad) mov (bad) mov (bad) cs out outsb xchg (bad) sub add movsl out lahf arpl pop out (bad) fistl inc sub movsb (bad) adc mov and into ljmp scas (bad) adc idivb out mov or test and frstor push mov das in cmpsl cld idivl stos out stos add (bad) (bad) sub (bad) add mov fisttpll fimull test ljmp daa (bad) sahf loop in mov fnstenv fcoml and sbb fstl cmp sbb (bad) sub das pushf iret hlt and sub (bad) out daa xlat in out and add (bad) test loopne (bad) lret push jg pushf out sub cmpsb lret rcll sub sub push jmp xchg ljmp out in and pop in pop sti popf sbb push in fwait inc xchg out sbb sbb sahf call jmp insb sbb out in scas in sbb pop jmp or in out pop and xchg push cmp scas xchg jmp insl in sbb push out cmp pop push xchg in jecxz rclb sbb pop fistp pop in xchg loop xor adc in cli pop in sti popf or in fwait or fcomps (bad) fcmovu jmp dec movsb cli jecxz push out and xchg call mov adc sbb imul sti xchg cld adc push jmp adc aam out icebp cwtl (bad) jmp (bad) int push out into adc fmul xchg ljmp pop paddsb imul xlat enter (bad) faddp pop pop sub pop loop loop (bad) rcrb loop fsub lret pushf loop push loop pop loop sbb (bad) (bad) pop mov pop mov fwait mov (bad) mov push sub jle lahf mov sarb mov adc and fistpll adc fdivl out cmpsb out data16 adc (bad) ja jg std out cmp fidiv or ja xchg and out pop imull push js (bad) out popf lock loope data16 sub push sbb jmp push fadds call and mov insl xchg in fsts outsb mov add movsb inc inc loopew out (bad) sub leave int outsb mov or imul inc mov xchg lods dec dec lods in or mov sub (bad) out or popa out inc xchg sbb out xlat out sub adc jge out push (bad) call out xlat jno lock jl sbb xor rcll mov js out xlat jge sbb out push std jb adc aas fdivr fbstp adc mov scas pop add out cltd jmp jecxz andl lahf xchg out fmull adc outsl sarl daa outsb dec add outsl push xchg rol add sbb out daa enter inc jo loop lret idiv (bad) outsb roll enter jns out call cmp inc add jmp not dec add out int inc mov mov push jg out in popf cltd enter lds (bad) jp jbe mov mov test out push loop nop ja adc dec arpl and adc add and out and ja call push lock fs jae out add lds add mov push imul out movsb insb inc mov neg add and or (bad) dec add arpl not add and arpl faddl xor mov mov add and inc ja adc and arpl ficom or and mov addr16 fdivs pop ja out int push out jmp daa xchg ljmp and in and data16 adc out sub in lahf ret in xor and repnz enter out aad out (bad) fsts pop daa fnop mov std (bad) jmp stos (bad) push and fwait loop cltd loop cwtl loop xchg loop lahf jle mov (bad) loop pop loop imul push daa (bad) xchg adc in mov outsl xlat mov jbe lcall clc ja xchg mov out pushf inc incl add test daa mov mov or out test pop out pop arpl ss sahf test sbb sbb adc jg lret mov (bad) mov add xor jo (bad) inc (bad) pmaxsw adc mov loope aas jb inc sbb popf out stos cmp push mov jmp cltd pusha dec popl lret leave dec pushf or vpmaddwd out fiaddl test sub out cmp lret test jl out mov in mov xchg out enter jb mov setae mov jbe mov cli ret imul pop ja fisubrl scas out mov out xor hlt cmp imul adc out mov (bad) jb mov aas lahf stos inc dec xchg mov icebp out nop shrb scas dec jo mov mov leave scas fisub dec out xchg dec adc lret ret js out out mov jnp push iret mov subl (bad) push rcrb mov loopne int3 adc aas cmp dec inc mov push aam rcl test xchg insb icebp jns aas clc pop cmp out or popf out jmp insl fstp movsb mov out cmp ds push sub pop dec cmp cli inc lock adc inc sbb sub daa jb push out mov (bad) jbe es inc xor push (bad) xchg repz es rolb jb mov mov roll dec lret insb push loop sub (bad) je and inc das jo sub arpl out pop jbe cmp sub and fs ja aam lret addr16 cli repnz ss stc mov mov mov psllq test add sbb dec sbb xchg outsb pop cld std mov ficomp test out add inc test sub out (bad) aaa jle insl ds mov (bad) ja xchg ret loop jnp pop dec outsb lret dec xlat into pop dec mov fucomi mov (bad) fmulp out mov push pop sub (bad) std pop ljmp insb aas jmp out bound push jecxz data16 in mov js cld hlt jge iret std fbstp mov stos add or sbb stos out pop adc cmpl mov (bad) cmpsb test and addr16 push mov insb cmp into mov jl jmp mov or les loope push in shr jmp push cltd aad mov push cld out arpl and dec ljmp lods out insb xor and pop decb jmp jne hlt (bad) (bad) jbe stc lods jp clc sti jns imull ja testb xor dec out jns stc ss div outsb inc (bad) mull mov fisttpll int3 lea lods push nop mov mov pop add push sub or mov push inc sahf and rcrb fistpl cld xlat cwtl out xor loop daa fwait lds sub sub mov pop out xor mov out aaa hlt mov cmp mov mov or mov iret (bad) dec adc inc shlb inc jae ficompl inc xchg iret out fdivrp sahf push ficomp dec sbb out lds dec mov js fimull (bad) testl iret (bad) aad dec mov push out sbb ds in mov vpaddd push mov in and cli (bad) out stos push call jmp outsb sbb adc out jo jmp cmc (bad) (bad) stc data16 psubb js notb sbb sbb xor mov cmp sbb dec xchg pop (bad) mov out imul adc clc in mov out subb test mov mov adc (bad) repnz scas cmp mov into xor lret nop dec rclb xor jecxz jno das out popa outsl mov dec loop inc out insl xchg (bad) in mov cld icebp xchg jb out or incl jecxz pop test iret nop pusha add (bad) cld pop repnz mov sub push rep jle xchg mov jne dec movsb shl jg out incb (bad) fild lds test xlat jo fwait les inc cld out lds push std iret aam push mov jge clc loop out push call jle mov (bad) mov xchg push push cwtl mov mov push fbstp mov mov xchg leave and dec ss jecxz xchg in mov (bad) insl (bad) adc pmaxub aam push pop out ret arpl xchg dec call cmp dec sarb pop jnp cli inc in dec or loopne rorl les iret decl xlat mov dec out adc pop xchg push push and cmpsl out mov lods push sub and mov lcall arpl shrb mov xor pop and in ss and gs inc inc jg and enter push (bad) pop add arpl xchg out in gs hlt fs out loop arpl repz cld mov repnz jae in les fild adc and or add adc mov imul stos aaa sub (bad) xlat dec ret mov (bad) popa pop or jg sahf jmp push xchg mov aam jbe out pop mov and mov mov mov jp adc ss cmp mov fiadd pop faddl pop outsb cmp icebp jnp sti shlb shlb push cli aam roll rcll pop out lret xchg push pop pop mov pop (bad) out xor xchg adcl add sbb ds fcoml lahf inc cli adc pop lret out cltd adc ss fist sub lods scas and mov cmpsb addr16 pop movsl add lret mov sub dec mov xor mov icebp xor mov fdivl pop ret pop (bad) fscale addr16 pop (bad) out inc mov or sub in jbe stc mov add mov out lock xor stc sbb daa pop test popa das adc xchg jge cld mov xchg jb bnd fbld clc fwait jp std jmp pop pop cld lahf jge sti loop push cli mov jl cli pop sbb pop shrb pop push xchg xchg ss mov loopne pop xor mov sbb mov (bad) sbb movsb out (bad) push jno call in fdivr rcrb fucomi xlat sbb pop jno (bad) icebp aam push (bad) push mov sbb (bad) insb jne pop hlt push js stc push jp cli pop jnp sti jle push loope jb aam aad add flds fucomi fucomip test add aam adcl sbb lcall mov pop mov push mov (bad) adc test or mov or xchg in pop pop mov pop loope xchg pop xchg lret rorl rcl jb iret cltd push sbb out push xchg adc pop push xchg mov sbb ficomp (bad) fcomps xchg fmull in mov pop push fimull push or fimul aad lock aam in (bad) adcl push push xchg es inc mov push fadds xchg add popf shrl mov and xchg jnp mov lret sbb decl out sub mov rcrb int or cmp dec jmp ds sahf out pop ret sub mov cli negb imul sub pop mov and (bad) cwtl out or leave fildll out pop test sub push or cltd xchg fcmovbe and adc fbld adc stc out (bad) divb cmp dec gs cmp dec rol (bad) out xchg dec xchg andl test arpl (bad) outsb pop insb jne stc imul imul sti jecxz pushf out xchg out sbb mov pop pop mov out xorb out sahf dec arpl xor mov sbb cmp adc xchg inc movsl mov arpl fbstp push (bad) imul cs mov popa nop scas mull and rolb mov xor pop inc int sbb lds xchg xor das lea jecxz ljmp iret cltd in mov mov pop xchg repz cwtl icebp out sub into push push mov es loop sub add sbb neg pushf push lret push js ljmp arpl mov movsl arpl adc test ret jns push std out and add dec insl mov enter sbb lds fwait push sbb jecxz dec mov in ljmp or jg push cmp out mov ficomp stos fsubr jl jp cmp mov out (bad) loope movsl or fcomi out xor inc add repnz (bad) call push mov outsl inc inc imul out outsl jle inc repz das out popl addr16 ret outsl push lods out (bad) shlb test or mov push jmp sub inc out cmpsb repnz ljmp out xor stos add mov pop pop scas mov (bad) xor mov pop jb xchg movsl imul or inc mov pop or std in jg mov xchg jle or sub push mov je fisttpl js in cmp sbb or popf cmpsb movsl (bad) mov out (bad) shlb mov add outsl lret inc aad jle out mov call sub scas je (bad) jo mov add mov (bad) dec push paddsb out cwtl mov repnz out inc jno sub (bad) addr16 jg or js cmp loopne dec shl sub insb lret mov in icebp ja mov pusha cmpsb lods out mov or out (bad) lahf jb test hlt xchg out jbe adc arpl pop cld scas out dec inc lods ror xchg out (bad) shlb loop dec rcll sub inc stos (bad) shl push loope sbb mov out mov cmp pushf rcrb faddl ret or mov outsb divl movl in loope aam inc shrl fstpl cli out pushf sub out cmp lds imul int3 cmp addl push (bad) xor xchg cvtps2pi in outsl ret xor push test imul in fcom cmp out lcall outsb out test sub (bad) pop cwtl (bad) js in inc test mov out insw dec lods mov sub dec int3 mov out pop sarl (bad) mov jg fcoml jecxz popa pop jge leave mov ljmp aas es in out jge xchg cltd loop inc xchg cld test scas cmpsl movzwl xor jae xchg loope cmc aad out mov aaa int3 sahf dec arpl cmpsb mov mov adc push sbb out loop push popf cmp xchg or cmc inc or sub inc mov cmp jb inc push iret das out push in stc mov mov ljmp sbb mov push jae in iret xchg scas cmp out add cmp cmpsl pop mov gs xor stos push pop out adc repnz push (bad) xchg out repz add add lret cmp sub or das xchg pop jle dec ljmp mov lea pop outsb jmp out dec xor in (bad) scas cmp addr16 fwait mov inc pop les aas fsubr bound add popa mov out mov inc mov out rcrb das cmp lea mov cmc shr repz in leave jecxz cmp pop gs mov (bad) sbb bound loopne add pop mov out adc jae fs out out (bad) jb das pop pop std out jg lcall dec lret jns imul fcoml push or lock gs pop add dec popf pushf in xor dec lret xchg (bad) loop or mov pop mov std sbb into mov pop (bad) sub out lcall ret dec out movsl mov xchg mov mov adc sub dec dec in imul jp int sbb xor xchg rorb ficompl cmp jnp js stos imull pop lds pop (bad) out push mov cmpsb iret out or jl sub pop ja jp mov out ljmp ss out lahf dec and out test out stos mov and (bad) (bad) mov mov mov loope cld in xchg sbb jg jo xchg hlt mov shlb pop push cli mov out fisttp mov (bad) les push pop pop lock mov out push int push jmp or in bound add and pop daa out push mov sbb pop cmp pop adc repnz outsl out out sub xor jl cmp xor or (bad) ljmp aam shrl lods out xchg call (bad) cmp pop arpl in pop ljmp mov (bad) out sbb lret cmc (bad) out nop jecxz pop lcall aad push cmc scas xchg bound test inc jmp cmp push mov mov ljmp fsubl sbb sub cmp fmul (bad) sbb pop das in pop adc leave xor xchg insb mov fs sbb xchg testl fmuls or out insb sbb loope repnz rolb clc pop push ds inc dec daa lret mov cwtl aad repnz stos fisubr lock (bad) cmpsl ljmp out out cwtl hlt add gs push lods mov js ss addr16 les push mov lds pop addr16 clc inc (bad) loopne imul out fnsave mov push xchg out (bad) cmc mov jo std cmpsb dec lock outsb xor (bad) jle cs pushf fwait sti cld jno dec dec out mov (bad) in xchg lret xchg sub fimull jo or mov out in push int3 mov mov mov stos pop jmp out or sub jns in jae cmc outsb ret out notl adc insb out mov cmpl das jle out fst movsb mov or ljmp out jae movsl js jmp pushf je aaa cmp inc bound xchg sub lds orb sub ljmp adc out (bad) mov sub inc lods mov movsl fsubp (bad) cltd jge adc iret xor xchg out lods sub out mov bound in pop push fisubr out mov sbb out mov mov popf xchg mov dec lret sbb js loop out lds shrl aad adc jmp mov push out aam mov jmp fisubrl mov clc out sbb movsb roll out xor adc cmp mov push cmp jo les rcr scas out fsubl jg mov (bad) out or mov cmpsl orl jno fildl lret mov dec mov sbb inc xor gs movsb and mov into xchg nop out adc ret mov out mov cmp add add mov xorl out hlt nop ret fs push xor mov jns ljmp (bad) incl fs outsl int out test gs lods mov mov leave in daa daa pop or imul jp hlt inc shlb sub idiv ret imul adc mov sbb pushf jbe shrb xchg push adc push xor out loop pop jg out lock sub aas cld out fsubrs dec stos mov fucom js ja sub xchg shr arpl aaa pop fistpl cmc imul (bad) out xor mov jnp fidivr loope frstor lock sub (bad) icebp hlt and nop dec jno popa imulb outsl femms inc cmpsl mov inc loop ret les adc lcall enter ljmp xchg and inc push aas hlt cwtl gs stos mov fistl stos adc out xor xchg out shl lods mov mov pusha fistl out imul addr16 dec add inc sbb and lret inc dec or pop ljmp add shrl testl je daa negb and mov ror popa orl inc mov sub loop mov sub sbb test (bad) int3 imul cltd push daa xor mov outsl cbtw mov mov and lcall fsub lock ss repnz iret arpl mov in loopne rclb out push cmp cwtl roll cmp idivb inc sbbl in imul xor aas mov (bad) push push pop mov jle test mov push movsl out jmp sahf (bad) dec cmp sbbb add push or iret sbb rcrl cmc into out cld test sbb push lret gs popa jp out fistp inc insb add ret adc clc out dec aas std xor nop paddsb or movsb fucomip (bad) and fcmovnb not sbb dec push push fs pop or addr16 push out xor jle (bad) imul mov in out push int3 arpl add scas jbe es movsl push mov stos sub hlt rorb sbb mov mov out fnop jl sub fildll pop sbb cs mov (bad) lock pop adc mov cmp sbb pop out push jmp fistl adc mov inc (bad) cmpsb inc out aad outsl stos ljmp mov out mov fs lahf mov push push push add mov cmc les rclb cmpsb inc adc xchg das mov out ljmp push mov movsl pusha adcb stos fs or jmp out out push xlat or into sbb push out out pop jb and jmp popf loopne sbb pop mov stos loopne out mov xorl daa lret addr16 sub testl (bad) push sbb loopne iret ss es xor arpl mov push mov out lcall sub (bad) ljmp fdivrl cmpsl mov pushf dec aad lods test lods and mov sub xor xlat das out and lock aas fwait mov inc pop (bad) mov leave orb ficoml xchg mov out adc movsl add sbb mov inc sbb push mov jnp movsl sub stos fcomip imul mov rcr in xor test mov das or mov push and xor dec ret cmp jns pop jnp add xor das adc fld add out sbb iret cltd ss fsubrp out cmpsb or xchg xchg jmp cmc cli arpl pop adc dec out mov (bad) int3 add jp cmp cmp push jge cmpsb imul out loope das lea jbe pop fisubl sti inc (bad) xchg jb xor cmpsb ja in loop iret imul fnstsw push (bad) out mov and add push stc lods lds sbb shr sbb jle jo,pn test das outsb xchg movsl inc (bad) sub pop sub sbb cltd sub mov cmpsb out daa push insl xchg mov or out mov pop mov fcoms sub push pop pop ss stc add insl out push mov (bad) rol (bad) ja out cmc and add es incb sbb mov (bad) or fistpll out and jae jmp cmp ja je repz ret fldt mov test mov xlat divb fs shrb iret fnsave (bad) pop lea sub out out fwait jae jecxz mov inc push dec xchg adc icebp inc out fisttp pop jg shrl sbb xchg cld imulb fdiv out mov gs dec adc pop js jmp pushf cmc sbb sub out out loope fs out out fxch imull outsb push lock subl sub das mov inc sub lock lahf fdiv mov aaa out mov outsl (bad) incb mov cli cmp cli shrl fbstp das add jb aas out ss (bad) mov movsb adc xor mov xchg jb out lahf mov inc lods (bad) mov xchg mov xlat jle negb pop insl or ficom pushf adc mov lods pop cmp sub fbld dec xchg loop or addr16 std push out push cld cwtl sti sub fldcw push sub cmpb mov out add mov mov xchg mov pop ret test pop leave jl cmp jmp nopl in out adc dec hlt pop and push movsb arpl fisub scas out dec dec add mov sub mov mov cmp out and hlt je xchg jg cs pop shlb pop repnz xor aas add out iret (bad) fs add fcomps outsb adc call sahf jle outsb pop out hlt in cmc das fs out add clc or in arpl out mov movsl jmp mov addr16 mov out cmp mov out fwait mov inc dec pop push jo inc pop loop lock clc mov inc jl int repz in add dec fcomps in pop pop into and clc fldt dec lods pushl cmovo in push dec cld sbb in pop fwait imul dec jnp adc pop and mov push (bad) shr xor adc decb movsl jle std mov insl lea pop mov insb xor ret outsb cmp clc out lods fisubr fistl out loope iret insl xor pop pop out adc xchg aas ficom out adc xchg gs ljmp stc out leave jo in sarb mov nop add in scas pop push fdivl add inc lahf add data16 lock leave loop xor sahf xchg (bad) cmp ror out push repz inc repnz data16 fs inc pop adc mov pop stos (bad) pop outsb in test sbb cmp sub imul orl leave out stos pop inc fidivrl fucomip add push in loopne mov and enter fisubrl mov mov test lret cli xchg mov xor outsl and xchg test adc hlt jge and fucom pop outsl sbb dec cmp mov dec mov pop popf sub dec lds fcmovb lea fnclex test out pop lods aas adc addr16 or jno sti std lret inc or cltd in pop clc out dec call adc xlat jg in mov out out loope bound setb jo out xchg and stc orl pop xlat mov out fisubrl js out jle (bad) xchg cld jge jb inc scas push adc les cmc ljmp adc xorb jbe insl pop push cmpsb sbb mov or push sbb les out sbb xchg lods insb pop xorl inc cmpsb sar and outsl jecxz dec sub dec clc jmp out test sbb or adc outsb std cwtl aaa push adc in out fistpll lock shlb lea xchg adc out mov addr16 sar mov add mov fildll xchg cmp (bad) dec mov or mov mov jmp outsb ret gs xor inc mov nop rorl out stos jl std xchg cmpsb out mov cld out fwait mov stos fbld lds ret dec pop xor push add mov out int3 push mov shr out xor xchg das jmp mov out sahf out fucomp add pop xchg mov es out loopne mov sbb cltd test inc cmp out into adc js push loope out push fbstp sub dec out inc cwtl add (bad) out pop sbb (bad) and mov lret std out mov jmp lods test imul (bad) add dec adc pop xor in adc call (bad) xor cmp push sbb jbe jae aaa scas andb xchg data16 xor jg jle and leave push insl add stos dec pop pop (bad) cmp insb sbb les inc fist roll mov mov push out xor cmp out push lods mov xchg scas jbe or out int inc mov aad mov negl jo out adcb ret mov pop in xchg scas ret out and incb out mov out cld popa js dec adc pop pop jbe adc andl sbb cmovns gs mov add inc xchg xchg out and inc jecxz rcrb in nop pop das dec fs out call imul fwait outsl fnsave outsb cmpsl out clc push or out lods or or jp out leave (bad) bound mov mov fidivrl jge int push or xchg add das push jae setne loop (bad) jmp out (bad) cwtl movsb enter clc shll fistp sub mov daa fiadd sub fs jae rcrl shrb out stc sub fistpl lock mov popa cwtl mov pop stos pop push out and ret pop int3 fistpll xchg xchg out loopne inc lock in xor popf xchg insl loop mov jae repnz scas (bad) rcll xchg adc sub (bad) outsl sub lock out adc repz movsb lret add out fcmove hlt (bad) jne ret mov jle aaa test hlt enter adc inc inc push adc jle lahf fisubl shr fistpll int3 push cmp out jb imul out jmp pushf fsubl sbb leave out or xchg mov out popa xchg (bad) sahf aad add lret fcompp sbb les sbb into mov out cmpsl scas cmp imul xor push pop mov in or mov cmp cltd sarl test out enter pushf loopne pop cli inc dec icebp add imul sbb (bad) into inc in lods jb inc out jp call incb flds jmp in mov mov ret repz xchg cld out xor inc mov xor out movsb rolb push leave and or cmp adc dec out jnp je out out and push dec inc xchg fwait (bad) and push int3 jns dec jno cmp sub add and push out push int push adc mov jno mov rcll in jae (bad) mov fmul jmp sarl adc push mov pop cmpsl out push adc out cmp orl push out es repnz fbstp inc pusha out int or icebp call pop jmp stos imul pop (bad) sbb mov jg push out out cwtl jp jmp cli (bad) dec push imul test ljmp mov fmul jnp out das pushf lahf jge jns int3 lahf inc pop and add mov lret sub out insb jo inc dec repnz repz movsb push push ret out aad adc into scas mov jbe out pop enter fnstsw fcom add out pop and jne dec inc in pop shll aad mov loopne clc rorb dec mov out out or sbb (bad) mov mov xor insl jmp xchg shl fwait mov in adc ds mov out addr16 cmp out in cmp mov sbb je dec vshufps out push arpl lret jae ret out mov xor cmpsl (bad) (bad) cmp cwtl xchg into popa jne sbb mov vpmacsdql enter out fnstcw mov dec das jge fcoml adc cmp lea pop popf xchg jge into lods (bad) ljmp pop (bad) xlat out push fnsave loopne sar out mov insl faddp out enter lea xor inc repnz gs out movsb mov enter hlt mov xchg inc out stos pop fnstenv xchg mov in xor and jmp push jmp dec test push out or mov imul xor jne out dec icebp int3 mov lock mov mov fcmovnbe cld inc popf mov jmp clc adc aas sbb ljmp xor mov or pop nop mov and pop jne popa das and and mov xchg pop icebp push cmp (bad) xchg fistpl cmpsl mov cwtl scas cmp ret dec test cmpsl movb aaa iret xchg push (bad) push xchg pop inc and xor add inc dec dec insb je scas out jbe dec jp mov fs mov mov cmpsl out inc in push imul lahf out shrb scas cmpsb out lcall aam mov es or out add dec nop push fwait out scas inc push loop xor cmpsb pop mov clc mov in dec pop mov leave jmp pop repnz push cltd in pop mov mov leave xchg pop repnz imul fmuls jae fisub xor out sbb mov repnz mov out or xlat jb out int3 mov iret sbb adc push mov dec xor mov bound lock inc in (bad) vandnps jne shrl insl xor dec (bad) mov pop dec fidivrl out cltd insl mov and es in inc out into cmp pop mov mov fdivl jg in mov pop stos call jp mov out (bad) notb adcl (bad) jo ret cs out adc dec xchg andps jo mov in addr16 ret xchg (bad) sbb mov add mov jne call in sub stos out test loopne (bad) repz pushw cmp insl call lods js jae mov outsb ds out mov loop mov iret int mov sub (bad) cmpsb out les out dec out shrb mov test rsm push add out cmp out lahf xor xor adc out ss sub fadd orl int xor (bad) lret insb ret jae out mov iret fild (bad) call lea dec jmp add out push aaa iret mov adc or cs scas fwait test or std out pushf outsl movsl in iret fimul inc dec cmp (bad) out sbb adcb push cs inc jbe sar (bad) mov out bnd ds outsl into stc out addb sub (bad) push out test out add push push (bad) out inc and inc pushf gs movsb dec addb repnz ljmp movsl in push adc and in (bad) lret outsl loop out out cs push mov fbld xchg sbb push cmp imul mov xchg adc mov mov mov ret out rcrb add out fs movsl std pop jecxz xchg jb in les add or sub add out mov iret push aam aaa repnz and std lahf fucomi mov jl jle pop out lret scas mov mov pop pop in mov push pminsw add xchg xlat icebp in adc out mov add popa outsb dec lods out mov (bad) test jmp push out jae and incb push jge dec sub aad xor rcrb xchg out ret xor or popf adc inc dec movsb in mov push inc out mov or or arpl rcrl in mov out xchg cmp jno mov out les popa dec out call jb mov test shl mov xor cmp fs xchg arpl out jge (bad) cli inc mov xor int pop out test movl mov ror out fbld mov sbb mov pop fcmovne ret lret mov lcall mov sbb out sahf sub out adc sbb outsb lret inc loop out jbe mov mov xor out jl mov ja mov repz jg push inc fildll push inc sub fldz repz mov dec or (bad) out out lcall push test call out outsb and cmp (bad) cli out je (bad) and add (bad) xcrypt-ofb cmpsl lods jmp mov in test mov cmp sbb in mov mov fnstsw ljmp jg out xchg scas jae mov mov test pop xor pop jmp dec sarb outsl cmp dec aas idivl clc je or out scas adc dec loopne and rep fsubr out push sub mov pop inc pop gs mov cmc aas (bad) jg rcr inc and out jmp scas bound sbb out xchg out pop bound jg bound lock out push fldl2e sbb fisubrl jmp out out addr16 jo out xlat outsl jmp cltd jmp pop jae out fisub adc push cltd pop jmp pop leave aaa sbb xor xchg insb repz into sar mov xchg pop pop gs push push push xor mov xchg imul shl out (bad) sub push push fisttp punpckhbw repz mov add or imul fmull fs out add outsl imul outsb mov loopne push or imul xchg gs into push data16 loope (bad) out fisttpll fs add arpl push fsubrp pushw lock add rolb jo mul imul lock shll jecxz mov add das mov or fadd push popa je and jno ror das fildl cli cmpsl out (bad) es imul nop out xchg cmpsb ljmp fisubr in loopne data16 aad xchg jmp iret imul std fldt in fdivl xchg (bad) out daa adc shrb jg loopne pop mov fbld lock fistp arpl push push cmp xchg jmp pop jns out aam jb stos xchg (bad) sub pop cltd pop fxch push in xchg jecxz mov pop xchg outsl lcall fldcw out addr16 loop arpl push in data16 in (bad) jbe aas push gs out insb fs fldenv imul sbb orps and test out jecxz arpl in outsl xchg out loopne movsl dec notl lock or aam fcmovnu lock jmp pushf jge and sbb (bad) out ret rep out ljmp outsb imul data16 out and bound aad out add out cld xchg jge loopne push call jmp aad add out inc fldz ja (bad) in out cltd in idivb or mov inc cmp arpl out mov jge (bad) cmp adc (bad) jo loop in icebp mov push int (bad) xor fucomp scas lock popa push insb test mov xchg sub jns loop out cli mov or pop aad hlt jmp dec sbb fldenv in loope sbb jmp out or push add push push and nop fisubl out pushf out fneni(8087 xlat and es out sub es jo outsl out bound xor xchg xor and and aad out insb add inc imul add out mov cmp ljmp call sbb ljmp aas dec jns out or enter imul (bad) icebp add mov mov faddp mov ret xchg add push out cmp or and outsb pop notb push xlat inc (bad) out popf or sbb scas add out into fwait gs out mov mov mov mov adc insl sbb inc push xchg out dec sbb cld stos out xor inc lods out xor cwtl pop out pushf shrl fstps mov (bad) xlat dec mov out push fist ds (bad) out inc popa jno icebp push dec pusha sub outsl pop aam test lahf ja test mov (bad) xor (bad) push mov xchg dec ljmp nop mov pop je push cmp sub inc in pushf or iret xchg mov addr16 add pop jmp dec pop out (bad) (bad) jl mov ds cmpsl imul inc xor out cmp (bad) jno push push sbb imul push sub movsb aas pushf sbb out inc or icebp out lcall adc xchg fnstsw out cld adc add pushf (bad) mov out and sub out add pop sbb pop stc sti fstl shr jmp sub imul out pop cltd xor xor and xchg jle shlb repnz leave jnp pop dec movsl movnti out (bad) cmc sub xor dec ret lock mull aas or arpl cmp jbe out popa movsl mov out out popf push out fistp cwtl aam xchg data16 add cmp in and pusha iret push out adc cmp mov pop cmp fwait push aaa ljmp xlat out adc dec push fwait jg,pt std fs sti xchg ja push (bad) int push cmp pop dec neg icebp out inc in (bad) cs out adc call add jns in ja test out inc out and fcomps xor out fistp mov (bad) in fisubr push or lds sbb out scas inc (bad) (bad) popf stos fdiv test push in nop (bad) loop push mov pop sub lock mov mov ret out lods jmp mov pop nop sub rcr outsb adc mov adc (bad) fwait cltd mov mov jge int3 loop sahf aaa out fisub dec imul out push or ret in outsb out sub sub jmp dec sbb scas push stos and in sbb mov jg out cli lret pop add add push (bad) rclb pop dec jmp mov adc fs sbb call insb xchg iret inc mov jns lds lods sub push adc out jl cld push dec in les jle,pn (bad) stos (bad) mov cmp and or pop ljmp div dec sbb pusha and xor stc mov (bad) mov mov lock dec or push int mov cmpsl (bad) cmc mov out repz sbb pushf xor cs pop mov pop std out popf push sahf stos push sar push out (bad) negb adc icebp leave xchg in and cmp cltd or out mov xor cmp sbb lahf loop xchg aam stos inc out mov sbb pop jg xchg pop (bad) out stc stos sub (bad) jmp mov pop (bad) xlat hlt decb (bad) ss outsb mov mov lret adc jno jecxz pusha or rcll iret shr in dec in jp out das bndstx das adc dec pop push jae xor xchg nop fucomp lcall cmp dec aad pop adc push push fistp insb and rol out pop mov cmovne imul jg add out ss ror sub adc jecxz ljmp out jmp lock ret out out xchg icebp ss dec mov out pop push enter ljmp sub jl in aad outsb cmc cmpsl out push push jns mov or rcr out or insb xchg fcoml loopne in sub push push ljmp dec (bad) push push repnz out jp mov in out and das nop sti gs dec mov pusha in and movl test cltd mov enter sbb data16 mov lret pop arpl fimull jle lret xor imul and mulb aaa outsb aad push iret add cmpsb in ds popa mov push inc out and not or and lock sbb xchg jge pusha xor out popf lret loop sar and out (bad) fs in or sahf add cmp inc dec and inc lcall jmp mov pop push fiaddl dec movsl or mov (bad) aas js sub mov mov inc push jb sub adc out arpl cmp jmp js insl roll and leave or xchg aad ret mov add incb ss addr16 das xor and lahf movsb js push push pop rolb sbb jmp xchg clc (bad) (bad) xor and mov daa jo adc jmp aas in mov lret mov cmpsb aas cwtl fwait jns popf out or jl mov adc pop shrl ficom loope lods out xchg jnp jns add jae inc out (bad) js (bad) jbe jb out imul icebp dec out call insb iret sti out cli cld xlat dec pusha xchg push scas mov (bad) mov in dec xchg (bad) out lcall ret dec mov add dec push cwtl out fs (bad) data16 cmp pop jnp imul or cmpsb ss aaa ret xchg (bad) out sbb in push std sar lret push (bad) lds pop out lods lret shll fbstp out mov adc ss cmc (bad) or (bad) out mov addr16 out sahf ljmp push pop aam xor pop jmp pop cmp in popa movsb insl repz imul fs sub scas push loop inc dec push (bad) fstps jb fbld inc sarb out sbb js adc out dec sbb in neg xor inc fs in (bad) mov out jnp and pop jns add mov into or xchg mov fs aad jo mov inc ljmp into or insb stos mov (bad) flds cwtl sbb ss jne push jp adc test sub push jb cwtl mov jnp call and repnz in mov pop pop inc and mov call add mov push cmp aad in sti add aaa sub sahf xor inc xchg jbe aas out ret xchg insb int cmc out mov ss mov dec sbbl out push js xchg fstpl out cmpsb mov jle mov pop out cmp mov out movsl mov and add fidivr push xchg xchg sahf mov movsl les mov or out mov loop push push rorb cmp out movsl mov imul test inc in aaa in lahf jmp pop mov pop or pusha popa jecxz or out mov inc push sub data16 imul cli std out and xchg jg push push mov push popa inc mull das ljmp mov (bad) loopne xchg lahf scas arpl stos mov or out aaa leave aas dec xor jno add cmp mov jbe leave jle sbbb enter add or pop into shrb sub sub xchg leave mov fisttp and out rcr out (bad) ja push jle jmp lret sub mov inc mov aaa mov mov out inc gs pusha clc or loop sarb iret shrb out sbb push mov fnstsw enter mov mov imul inc mov jl xor pushf push mov xchg mov data16 mov adc mov sbb pop adc jl out inc cmc iret (bad) out mov xor xor fist (bad) mov push and fwait mull in dec xchg out (bad) xor enter stc pusha fadd fldt out mov je in mov xchg nop pusha ja out mov je in sbb ret cmp fsubrp repz fcompl mov out jns in jnp nop mov push push out out lcall sub (bad) add and push out xchg mov out bound lcall sbb cmc cwtl pop insl inc mov push mull sub ja adc mov (bad) cs jae out jne xlat xchg xor fsubp inc adc arpl sub pop out jnp orl fiaddl lcall lret scas pop out mov mov movsl mov jb (bad) shrl inc sti pop push punpckhbw sarl data16 inc xlat pushf sbb decb dec sub sub pop mov out ret cmp push leave loopne xor push ds adc xor xchg movsb and mov add pushf rorb cwtl pop sbb jmp push out stc addr16 sub sbb dec or xchg int3 out push fs and pop pop xchg das repnz out lods movntps lcall or mov add push out or mov lret pop loope outsb adc rol and out ljmp jp cmpsl out mov sub enter fildl add (bad) negl imul cmp dec lock push inc inc pop and pmaxsw or lahf xchg dec mov clc mov out mov (bad) mov out mov mov out (bad) push xchg stos push push rclb lea mov adc decb cwtl pop aaa test add pop xchg test pop aas mov scas out push movsl or and into (bad) or lret pop (bad) sub out wrmsr out add stos push fnstenv decb pop pop jb pop outsl insl pusha mov mov push fisubr mov scas push out pusha cmc jecxz add adc and fildll sar mov push mov add pop dec adc in (bad) aas into xchg out cmpl out mov je dec or or adc nop push lret out repnz fimul jae (bad) sbb xor (bad) out push out shrl setp rcr in cmp jbe dec daa fwait ljmp scas and jge cltd out inc pop and js repz out aad or in rolb adc out into fs popa mov in aam insl inc out mov stc nop enter scas inc and xchg out ja iret xor loop fstp test push int3 scas loop ja sub out dec cli sbb (bad) out jl icebp ret int3 cmpsb adc loop out push shrb repnz test ja mov es sub fidivr ljmp imul mov arpl pop imul mov out and mov sub sbb pop imul test ss ficomp hlt jb out lock (bad) aaa fs out stc insb addr16 (bad) adc out pop ss add sub outsl mov sbb mov les (bad) stos cmp aad pop sub adc and loopne test cld xor pop mov loop pop fcoml mov jns sti inc push aas jl js je pop xchg dec mov jnp jb dec aaa push in mov add and sub es (bad) xor out cs xchg test mov xor or mov in mov data16 (bad) mov das (bad) mov cltd popa out fwait sub fstpl ds lock movsl out aad arpl jmp cltd psllq je pop dec pop pop (bad) jg,pn shl xchg push dec test nop rcrb sub jmp shl (bad) out pusha mov rcr push push addr16 xchg or test sub mov mov cltd jmp push fwait call inc out repz sub sbb mov leave cmp xchg ja stos out jbe jnp mov sbb hlt adc loope lea sbb cmp inc push insl jns mov imul pmaxsw xor pop pop (bad) or out sbb out xchg popa sbb out stc add dec hlt mov insb icebp loop or sbb idivl push mov out outsl xlat xchg add out adc push test sub pop out pop adc out push push pop and jge pop jb enter int3 cmp insl jg insl lahf out in dec sbb in aad data16 mov inc pop mov adc jbe jl inc push popa lods out dec loope jmp out sub out inc lock ljmp int push jb addr16 iret out pop (bad) ljmp dec pop int3 pop mov dec pop les imul je or mov fmulp loope imul jecxz and into and icebp lret rclb lock push or in call sub cmc or int push and out add inc pop out mov out mov bound (bad) cli jae mov aam out mov push jnp out aad jle stc test mov sub xor lcall (bad) into xchg out das or pusha outsb fldl and xchg xor push mov mov and mov loop mov cmc iret and je fwait cld in es xchg pop jl xlat adc lret push pop and xor jg mov cmp fsqrt dec fisttp cmp dec in ljmp divl ret mov xor ss out xor arpl ret cmp ljmp leave jge jg jnp inc stc (bad) out mov fist mov out jb or inc es ret pop (bad) negl (bad) stos or out dec repnz aam hlt mov sbb push out mov dec xor hlt fadds sub cmpsl jb imul cmpsb lods sub mov into lds fisubl jmp adc jp lods xorb out addr16 dec ja or pushf xchg stos lods inc jbe mov test and pop clc out jecxz xchg das mov ss cmp out data16 add cs (bad) push or in dec dec inc xchg out push dec pop pop aaa scas mov out pop pop ret aas lock push add sahf mov xor jmp xchg or into mov scas jne jmp outsb mov pop inc repnz jp out cmc push xlat (bad) mov arpl out ja and dec cwtl pop inc addr16 push push lcall push es loope mov cmp rcrl mov and pop jne gs mov shlb (bad) les orl jnp dec mov xor and and or into xor imul loopne out cwtl hlt pop xchg xor jge repz icebp out pop sub enter fucomip insb xor or js test es lea mov ret movsb cmc pop ljmp ret ss lods jae mov mov xcrypt-ecb cmpsl mov data16 out imul dec outsb or add pop push das sub out xchg cmp insb jg push mov lods into mov lods sahf sub repz adc jb dec out mov rorb shrb xor popf mov (bad) fcmovbe int3 push loopne xor jno iret jb pop stos insb out fild ljmp cmpxchg mov rclb out add xchg daa add je fcmove jmp out call test sbb jge scas and pop (bad) cmp xor ret out cmp inc jb xchg cmp adc sub push sahf iret xor icebp stc sbb (bad) out jmp (bad) mov loopne or ds mov pop jg xchg repnz out loop mov pop ss outsb pop test lds lcall rolb jl push sbb fldt fadds sub negb ljmp imul scas js fwait mov cmp icebp stos out bound jno adc xchg pop add (bad) ss push xchg sbbl mov xchg out or loop xor sub ljmp out push mov push aaa inc ja out fcoml or dec fwait xchg pop (bad) out loopne xchg xchg inc lret popf enter dec outsb pop nop stos jnp xlat out jmp inc dec mov mov loope jne fstps out inc push int3 out jo (bad) xchg and in mov jmp sahf insl cmpsb iret stc retw ftst sub mov jp xlat push fucomp icebp jl out mov ret outsl out sub sbb jb fisub test fistpl dec shrb imul or push (bad) adc jge push xchg loope in and punpcklwd cwtl in (bad) push loop movsl push cmc or push inc cmpsb ljmp lock insl je out out pop mov fbld sub test cmp and ror sahf out idivb and loope lcall fsubrl lahf scas (bad) push sub je mov aas pop (bad) and lret xor cmp dec stos out (bad) jmp frstor add test out mul cmp mov push and das jp sub ss inc mov dec es dec insl xor out lahf lcall or cmp popa out test pop mov sbb out lds loop inc fiaddl in loope into mov (bad) push or add movsb and and pop xor jno mov stos inc jecxz out lock insl jo out mov mov lcall out mov sbb (bad) sbb xor ss das inc mov mov jno (bad) xor cmp jbe mov push addl out or gs jnp mov lock jns cmpsb dec aas mov mov push stc call lahf (bad) xchg xchg sbb inc mov pusha push jnp out movsl push out dec mov mov mov out adc mov out jns leave cli and add aam or pusha icebp iret jge mov bnd out outsl adc into imul out or mov fisttp cmp jno loopne mov sub pop (bad) and inc sar or popf sub mov (bad) pop pop xchg es jmp xchg out imul mov mov add fcmovu out stos das inc call jb out out in (bad) in popf (bad) movsl add ds mov data16 cmp (bad) mov addr16 and test push repz xchg pushf movsb out es push xor (bad) mov jecxz push pop int3 out gs lahf ljmp (bad) insl add lret std cmpsb add repz jae push inc out (bad) in jnp cmp icebp jmp jmp out hlt mov nop xor fsubr or out xchg mov and sbb pop test dec out test mov (bad) mov divb popa sbb sub dec pop cmpsl call xchg mov jbe sbb adc xor pop (bad) gs aad shr inc cmc fs xchg xor mov ja dec popa int3 xchg out mov insl cmp fsubp push in (bad) loope xor in out xchg jecxz (bad) nop cmp cwtl out sub leave add mov rcrb bound sahf scas jb leave fnstenv mov (bad) (bad) popa sub outsl mov sub jmp adc push pop bnd out xchg and out mov in scas pop xchg dec out mov add arpl gs sahf idivl aad pop lock and (bad) ds pop mov mov out and hlt call cmpl xchg xor and lods jmp jbe inc push ljmp data16 shrl out jecxz add idivb lods mov xchg mov out push sub jno jg lock mov lods xor fsubr (bad) dec sti inc cld sub xor cmc stos or out pusha push sbb mov (bad) js mov movsl push mov pop mov daa out nop ljmp (bad) das sub out ret sti cmp lock dec les (bad) pop push cmp leave rcrb push sub mov xchg cmp inc cmpsb push or rcl jecxz aad aad ljmp or mov inc out inc mov out iret pop js scas lock out rcr fbld jo out adc out aas sar push adc (bad) pop out cmp xor push mov (bad) jbe loop sub lret or pop mov out xor scas gs mov mov mov dec mov imul adc in ret cmp mov cmc repz out xchg sub in sub cld xchg sbb cmp out repz outsb pop out daa xor aaa pop out icebp xchg repz push call out jo and (bad) xor out sbb xor and or cltd lds sbb mov enter jecxz inc xlat xchg loop fildll out fnstsw das inc mov bound repnz ss mov call data16 push mov mov fidivr out mov pop jae xchg ret mov out pop pop push (bad) xchg sbb aam nop adc pop pop out inc dec mov ljmp enter fwait out daa mov loope dec lret cld and mov mov pop add in push cmpsl or lret test mov movsl xor (bad) inc add dec iret std sub inc in ds rorb repnz repnz call incl lock sbb call imul mov cmp adc cltd mov dec pop int3 mov mov not inc jecxz iret dec dec fwait or out jle inc not push push lods scas les jg gs adc (bad) jmp and das ljmp jnp (bad) scas clc jne insl scas repnz mov imul or out rolb and aaa popf out dec ret push and xor fnsave lea out int out jmp je out and jo aaa mov cmp cmp cmp cwtl loop push lahf out imul cli fild stos pop add lret insl pop jmp lret xor inc or add xchg cmp lods out xlat jnp and enter mov push int3 out in and mov mov out jmp ret call hlt pop outsl sub push (bad) out ljmp stc push xchg pop mov dec mov dec mov pop out inc icebp sbb insl out push cmpsl push sbb ret out aaa mov add or jle out rcrb mov movsb test sbb mov jno cmp cs mov out mov push inc test loopne gs pop stc pop out shlb dec imul and out add push jno scas rclb ret js rcrb fsubr or fstl xchg or jg adc cmp insl mov (bad) loope push xor out mov push addl xlat mov cwtl enter scas dec out ljmp and fs xor (bad) jae out (bad) (bad) mov pop nop enter sbb push in pop pop xor lea inc dec bound sub jne or sub insb pop mov rcll fsubrs dec ficomp (bad) out jle iret jo pop (bad) in cmpsl ljmp pop pushf mov cmp jbe mov adc fincstp add cmp pop pop inc xlat repz movsb out pop fnstcw and stc mov lahf popa icebp pushf xor cwtl push xchg inc pop and adc xor and adc out leave cltd jp mov cmp sub xchg out fcmovnu cld in jb shr arpl rorb jns insb add aas mov movsb aad and loop cmp pusha in sahf (bad) fsts inc sub insl or lcallw out or mov out inc jb loope jo add int3 mov mov movsl mov push cld push pop dec sub pop inc adc (bad) push or xchg hlt lret outsl push mov mov rcrb push jb out ret lahf or add and or subl push mov data16 adc lret jp out sub xchg loop out mov push lock les out je xor and push pop cmp dec out cltd push and lahf loopne mov test out push loopne add jae mov jne (bad) fist adc pop out addb jl rcrb lock inc fcompl aam mov out cmpsl push sbb inc mov add insl in ss jno mov cmpsb out nop lret test cwtl sbb mov decl fs addr16 out inc scas jle (bad) xor xchg sub sahf loopne scas pop out fwait imulb dec aas and out out dec out mov jecxz pop mov inc fs push sub mov out cmpsb add inc fucomip jae inc add push in jmp push mov out adcb sbb rsm scas sbb lret xor sbb scas outsb (bad) mov (bad) lea pop adc sbb ss cmp sahf add shrl sub aaa fucom sti pop mov leave mov imul mov dec andnps inc push mov scas dec pop jb bound das (bad) mov or icebp pop push loope jo imulb cmc sub xchg loopne mov cli out or dec vcmpsd pop loope push dec stos xor aam jle dec jecxz loopne nop daa out jl adc gs outsl fdivrs mov in xchg enter out and sbb adc loop mov inc (bad) out mov sub fistpll mov sbb pushf jp inc cmp out jl jnp popf lods out out or mov jp out push rolb cmp sub bound inc inc mov int3 jb lret push xor pop iret mov (bad) loop pop scas pop int out gs xor into dec inc out xor dec cltd fstpt pop out cli xchg pop mov out addr16 ss sti enter inc leave pop ja xor rclb sbb pushf out aad jmp inc daa out lret pop in lods dec xorb lahf adc frstor ljmp test mov (bad) cmc mov mov jbe cmpsb out lods int3 cwtl shrb or nop orl out test ret xor out mov add xor push in ret pop mov adc stc push dec lock out xchg mov ss jb cltd pop jge (bad) mov add arpl je adc inc add out mov push pop xchg (bad) dec jge mov xor rorb out daa lahf dec mov and mov ljmp cltd out dec repz es jl inc xchg icebp ss mov and out xor push lret test xor fsubl (bad) out sbb insb leave mov dec mov inc cmp in and dec bound addr16 sub aas sbb movsb sub std loop scas sub in popa cmpsl loopne imul (bad) xchg jg xlat aas test insl addr16 sub cmp sub xchg pmulhw movsl inc fisubl out mov cmp hlt aam setne arpl dec push mov fucomi mov mov jno inc loopne sub cmpsl cmp arpl mov sub lret xchg push push (bad) call scas ja mov rorl insl or (bad) and dec out outsl inc add out xchg dec (bad) adc mov shlb jecxz ljmp rcll xchg out out and mov pop out imul in ret (bad) jns ret rclb pop out push je mov cmp fmull push cmp add in jge dec dec out and lods mov add adc or mov gs imul test jp aaa add (bad) sub (bad) jle jae in or mov jecxz mov mov xchg adc out (bad) stos sub (bad) in pop aas ds dec aad mov notl mov adc xor (bad) out lahf inc or dec mov pop cmpl out idivl es xor fild sub inc dec pop mov stos int3 cmp jle mov fcmovne pop or ret sahf cltd in into fs mov out ja popf push aad data16 xchg pop and out iret je enter and or aas jb aam ljmp dec jne clc out scas dec inc xchg sub pop out sub lahf out and test imul out mov (bad) iret (bad) out inc arpl imul push arpl rcrl inc push daa in (bad) out jno das out int3 mov and shr cmp aad sti sahf out hlt adc inc fisubr out pop rorl jecxz sbb inc out repz es cld sub adc pop xchg add add outsb xchg push mov ljmp pop out jp cmp cmc mov out pop add pop pop (bad) fnstcw je int push ljmp fistpl adc or push cld pop out and or outsl adc pop mov push out mov pusha daa stc das or out out repnz mov dec (bad) out fildl cmp push sbb in sbbl lahf pusha adc push out lea cli inc decb loopne dec push out pop jns stc clc jecxz sti push cmp xlat xchg xchg popf pop adc in (bad) hlt fidiv push out ljmp gs lock jnp insl (bad) das dec pop cmp out (bad) inc and push or xchg cmp cmpsl insb repnz and jns push (bad) fwait mov dec movsb sub insb jp out iret (bad) mov mov repz test cwtl fcomip loopne jge movsl in inc inc xchg test out push addb and fldl out inc push out mov pop adc inc stc fs xchg cmpsl cwtl jmp ret and adc out add push out (bad) push mov xlat movsl call test xchg and xchg mov (bad) addr16 mov out adc sbb mov (bad) sub mov jns (bad) shrb or icebp mov pop jb and mov and cltd divl cmp loope sbb out ja pop push and clc and fcomps cmp lret arpl outsb mov mov subb pop and mov das sub mov mov mov dec sub icebp std jge jae mov pushf push mov mov fbld fwait sub imul dec out lret adc cmp out in fcompl mov out shrb icebp rcl cmp adcl pop sahf jnp push in out lret sub fdivs xchg mov in add (bad) aad (bad) cmpsl xor insl fs outsb (bad) clc pop mov or xlat mov dec loopne subl inc bound shr pop (bad) icebp jle mov (bad) mov xor inc aas mov sbb shr outsb les ret inc fsubs out fldenv jno xor shl pop iret mov loop shrb popf out repnz inc inc xchg xor jp pop sbb pop mov jge jno jp bound ds push pop out push (bad) jae insb xor jmp std xchg ljmp dec cmp inc jp cmpsl out add in das cmp sbb (bad) cmp ret pop jl loope xchg mov out push dec shrb xchg out mov loop les pop cmc mov pop add (bad) out mov mov out sbb repz sub pushf inc mov ljmp sbb jle add pop shr cli jo jp pop adcl push or out ljmp push out ret xchg cli in mov mov call add pop cltd (bad) jl andb (bad) fsubrp mov sbb jecxz hlt iret mov dec jo dec mov test (bad) mov jno dec fs out push push or xor jbe sub outsl shll and out mov mov dec cmpsb mov add repnz pop daa or xor out sbb out frstor add push out lcall shr jns add fbld stos test mov add out mov (bad) mov out sbb bound arpl dec out ret ss (bad) xchg jns jb insb pop mov das out mov test std pop xchg add mov fmul test sbb out cs ss out xchg pop push in int imull add push mov popa mov call lods or mov add (bad) out insb adcl sub adc lret sub ljmp out sbb jno push rcrl cmc ljmp out cmp jo out sahf nop ja jl in out fwait push (bad) aad adc es stc ror ljmp out das ret cmp out dec dec push mov fbstp xchg mov push out movsl call out rcl loopne or lods add push push cmpsl aam cmp sub mov jae test pop popw andl mov xor pop in hlt fdiv loopne cwtl fcmovnbe rclb bound jno out jo pop xor dec out in lret mov dec pusha mov mov adc pop mov aaa push lods int push aas (bad) clc xchg cwtl loopne mov stos call pop jnp push sbb add insb and jno es adc in cmp sbb push iret or loop dec (bad) mov pop out xchg sbb insl popa out pushf mov sbb decb stc in inc dec lret in fldcw icebp out sub sub addr16 ds or mov cmpsb mov imul inc out inc add or sub out mov push push mov faddp mov cmp mov movsl enter (bad) mov cld push fiadd shl out xor imulb fucomp jg push cmp sub push out fs out subl xlat daa mov and or sti jo jb cmp mov fldenv dec inc out adcb add cmpsl push out xor clc into (bad) mov push push (bad) ret sub out out insl into or mov push test jmp testl pop xor out icebp cli pop jne and out inc push xchg das jl aaa mov ja sbb lds xor out add mov daa dec xlat lret pusha lahf dec rorl ds inc loop mov out stos xor push mov shr cmpsb outsb shld jno (bad) pop ljmp xor outsb xchg gs popa out mov mov jg test sbb cvtdq2ps push inc jl pop xor cmp mov or pop leave out call mov out (bad) sarl aaa mov push mov dec jl jae popa dec enter nopl push inc (bad) cmp xchg icebp lea lret insb out cld mov out das fsub lods rorl mov clc (bad) out andl int or ror out jb pop fwait scas ret jmp out fcompl lods inc bound sbb push imul aaa pop mov push stc out enter inc jb ja (bad) mov subl adc push mov and out add addr16 adc mov jecxz out test push in adcl inc dec je loop lcall test jmp hlt fadd aas xlat test mov pop and adc pop (bad) pop jnp mov adc jmp mov iret cli sub jg in sub lods out cld cs lahf sbb push out push pop xor je rcr fsubr arpl mov mov xchg sub (bad) jg ljmp out xor loopne mov and fisttp lret push ss cmp scas outsl mov pop cmp js int3 pop pop mov lds push addr16 test (bad) pusha cld in cmp call mov jle push scas inc jne addr16 daa cmp test out push jno adc daa xchg out clc pop mov shrl adc add xchg mov out adc mov xchg out jmp xchg jge or mov in mov shlb stos (bad) cmp es out mov push test pop mov (bad) call xchg add out imul cli scas lock push xlat aaa test cmp adc mov ds push ljmp push lock sbb ljmp push dec call int3 push mov imul shrb arpl (bad) cwtl stc call out fldl test out adc pop sub lret xor sub sahf xchg out mov jne jecxz movsb int pop jle in (bad) std out mov jge out sub scas pop out add dec (bad) out cmpsl jb xchg movsb shr dec cmpsb call ret js mov push jno fdivrl into (bad) loopne lahf pop stos and adc push cmc out (bad) lock dec push inc in cld lods pop imul loopne insl sahf out mov push push in cwtl lret adcl xchg pop insl addr16 mov sub aas nop adc loop jnp out inc inc dec cmp add cmp adc out std outsl dec into xor xchg nop pop push dec cltd cmp out dec mov out xchg ja xchg rcr push out cmp loopne pop inc push push out jo pop xor pop fsubrs cli fistpl add adc pop loope data16 idivl in fisubr push out mov adcl jle fmuls int mov out dec outsb cmc sub sub (bad) dec or adc loop add rolb fsubrp in push sahf xchg out sub es je or pop out fsubrl in xor (bad) lock jge movsl es sub lret push inc dec out ficompl lahf pop clc lods pop int pop lcall pop pop aaa adc cld jmp int3 sub mov hlt dec das fist (bad) lret push outsb mov mov ret xchg cmp adc or cld fisubl push cmpsl and (bad) std pop out ljmp (bad) nop divb jmp sbb bswap out cld xor in and out or aas stc pusha sub jbe mov mov xlat addr16 add push clc lret push inc or fldcw (bad) movsb (bad) (bad) jg test frstor push mov stos loope pop push insb imul mov lods notb sub mov (bad) fisubr mov jns lock jmp xchg shrb je int adc daa (bad) rorb sub and out push mov add out pop xchg insl lock cmp and popf insb cld aam out xchg in adc out cmc shrb fbld dec aas push pop xchg fwait or cmovp out push movl mov insl add mov test repz iret jp imul fcomps test or xchg out push pop arpl inc out stc leave outsl pop data16 cs mov cmp call push data16 clc fldl dec xchg shl xor pop push prefetch in movsl mov pop subl jg sbb sbb gs push out dec mov push repz push int jmp out pop call and mov jle pushf out into (bad) jmp dec mov lret pop (bad) and dec sbb in cmp cmp pop xchg push push std mov pop cs cmp pop mov mov imul loopne imul xlat inc pop fucom or mov (bad) adc out mov sub out adc dec inc test das out insl je push or loopne fcomps pop pop addl push out lds sub out scas jnp les cmp and dec xchg jns lea pop popa cmpsb data16 fs aam mov sbb out sbb push inc xor jne cmp mov ds mov sub dec out sahf jns neg adc sbbl icebp xchg jmp add das js out rcll jns mov (bad) mov pop add dec dec inc pop fsubrp in push int3 mov bound cld ret and repz add jge pop cmpsb (bad) cmc xor mov mov xor imull adc mov (bad) xlat push test fcom shrb (bad) pop out inc cmpsl je pushf iret pop or pusha ljmp out mov add cmp mov psrad mov cmc enter xor aad icebp sarb ljmp out mov imul mov sbb out xchg jns insb js out and xchg out push inc retw int3 xor mov ficompl sbb call or or dec dec sub fcomps out jno addr16 (bad) jmp mov dec fdiv or mov xchg mov dec dec push out test outsl xchg jae fucomi out rsm lods cmpsl adcl add push out lock into stos fcmovnu std cltd aas dec push (bad) jo pmaxsw push out bound mov icebp out std ljmp out mov in xchg mov shrl push mov mov vcvttsd2si mov popf lods loop aaa mov fwait mov inc sbb leave sbb xchg pop daa stos mov xor mov (bad) imul sub push mov lret adc imul in cmp out test jmp test and aaa push pusha pop cld jne clc dec xchg jmp add inc cmp nop (bad) loop sbb out push jle cs push std out push clc mov mov add add adcb sbb out sbb cmp rcrb push lods call mov into dec out fs and pop (bad) out jbe jl ret sub ljmp fucom mov cltd out nop/reserved in push out jecxz test cwtl push bound mov popa sbb adc repnz xchg push in and pop (bad) out stos push out in pop fsubr stc loope add mov xor push pusha es pop mov sub push cmc mov mov add jb in adc dec xor pop das sbbl xchg cld jp sbb cmp out in fisttpl pop mov cs (bad) or and arpl adc and adc push push out adc aas daa xchg out mov lds and adc in out mov mov enter out mov jl push out mov or mov mov and jecxz xor mov lds inc push sahf inc sub jne fmull rorb out test jl cmp pop mov incb mov test mov mov fwait xchg and cmp (bad) sbb jp fucomip int in stos adc jle js in mov mov rorl out imul pop pop arpl ret out cs xor les jp test xchg out jmp xchg frstor jo jecxz pop ret adc jns div call add cmpsl (bad) aad loop sbb (bad) cmp inc inc or (bad) lods cmc or dec cmpsl mov dec out fsts stc rcrl addr16 mov xchg and push out dec xor cmp add xchg and pop test lret adc inc data16 or push out (bad) jmp les out into add imul fcomps pusha int3 subb stos out mov dec mov xor test movsl and ljmp and jbe fisttp sbb mov pop sub out aaa lret scas sahf xchg push shl add std loop push sub out mov inc mov out cwtl decb mov pop out add fs adc roll lds xchg mov (bad) (bad) psubusb xchg ljmp and cs sbb push push dec fsubr fcmovb jmp add add xor jnp call roll out dec lret ljmp lock (bad) in push (bad) loopne inc out cmc sbb sbb popw imul aas push inc (bad) sub loope outsb out movntq in repnz mov out mov (bad) in pop ret cmp addr16 cmp pop cmc ds int inc arpl dec into (bad) lods out fcompl push xchg lahf je mov cmpsb out out xchg xchg mov imul push cmc fsub rol xor out dec lahf ljmp mov test (bad) fyl2x add insb (bad) jo icebp pop pop jno dec out pop dec cmpsl push loope mov fild stos dec aaa pop imul inc imul push inc jo sbb push lcall pop hlt pop ljmp (bad) mov pusha gs pop mov std xchg out rorl or das add xor insb out lock pop out sbb xchg arpl adc cltd jecxz js xlat out lcall inc inc pop out adc outsl mov aad test or icebp call and inc push (bad) lock test mov fldenv cmpsb stos xchg aaa jbe out insb dec push sti loope dec fs shrl dec or and out xchg aam cmp in add movsb out adc mov test mov out mov out inc je popa mov ret jb outsb dec add mov lcall ljmp in outsb add imul jmp out mov mov lds out iret pop xor (bad) out dec mov mov cmp aas pop out cs out scas popf mov and daa mov rorb lret dec pop jge in fistp leave pop xor push das (bad) hlt inc in ret orl sub pop ror adc adc pop shr loop and jmp pop mov aam lret out cmovo addr16 dec sbb gs mov inc and stc mov das pop xlat inc mov pop jns imul xchg hlt out mov data16 mov sbb loop pusha out and sbb sarb mov sbb push jo call out xchg repnz cli pop in adc inc add inc mov sbb lock sub push push ret push or mov pop adc pushf imul xchg and loop pusha out sub int xchg into cmp and jne push ljmp pop mov push call ds or sub or mov lret movsb adc (bad) mov mov push pop dec inc cmp das in imul out dec cmp fstl push pop inc cmp ret es popa test push add out xor leave imul inc or fs (bad) lea call jg repz (bad) mov int or movsb push loopne out or jbe dec loopne push xchg out fcoml push out out or pop shrl cmp (bad) mov loope push inc popa std inc cli ret push out inc fdivp int3 repz out in iret dec popa sub (bad) pushf push out rcll jae out pop push in ss adc (bad) out ja pop notb add jo rorl xchg jmp aaa add ret out call pop out ljmp cmc out je adc call inc in test or rcrl insl daa sub repz lods mov outsb add movsb and fist push inc jg mov out adc mov out pushf jmp pop sub ss (bad) lods lcall or push popa iret push (bad) in push sbb out push dec loop mov in aad mov adc push aaa pop inc idivb jp pop cmp ret out fs iret mov cmp xchg outsb inc push mov mov pop orl pop pusha (bad) mov (bad) mov mov xchg add clc (bad) pop fwait (bad) out lret gs movsb sub int3 dec out sbb aas out jns jbe adc in lods pop mov pop insb lahf cmc call and test mov mov cmc (bad) bnd out dec icebp adc outsb push (bad) incb das lods rolb in (bad) mov push inc inc jecxz out lret iret fsubl xchg dec arpl je mov cmp cmp push cltd out lret add sbb fstpt out aaa pop and stos out and mov daa out mov mov std out jecxz loope shlb in (bad) out cmp sub mov out mov push xlat outsb out cli stc mov and stos out fistp xor in insb adc in scas inc pop shr xchg fnsave mov push out lods icebp mov add mov inc stos in repnz pusha adc jnp cmp mov mov lods in pop lahf pop and outsb cltd vpmaxsw mov cmp idivl out ljmp push mov mov mov adc aad rep imul add fwait cli (bad) out jge,pt mov out pop jle fildl sbb out dec je mov push imul out mov repz push out add roll iret fsubrl mov popf je in add mov dec bound test xor mov out (bad) fwait lock pop jno outsl iret cmp call dec stos pop jge mov lahf out ret inc vpshuflw jae jp cmp cltd mov mov jl jo inc loope data16 (bad) cltd insb jbe shl das das dec pop call mov pop insl xchg mov xchg cmp jbe pop sbb outsb jg insl sbb push popa test fld ret es out leave aas loopne icebp out loope sub sbb cmp jne repnz xor and out insl fsubrs arpl push and mov mov dec addr16 es sbbl xor rorb and jne cmc jno in mov out pop icebp cmpsl insb sbb dec out pop push push cld rol test leave insb movsl add pop lods fwait (bad) sarl arpl (bad) fnstsw shrl loopne insb push in pop outsb addr16 ds xchg mov push pop cli add iret pop out pop dec lds femms mov fdivrs (bad) (bad) mov dec (bad) jb jmp mov sub xchg shr xlat repz or mov sub push in mov in aam add ss dec out inc in jmp xchg jo and es sub xchg cmp out push jne jb data16 push pop rcrb push arpl repz hlt movups repnz or out andb pushf pop xchg xchg pop enter in sbb in or repnz dec (bad) fwait out cmp (bad) ljmp in icebp bswap shr pop lods arpl and jb,pn pushf push out mov ljmp orl (bad) pushf mov mov push (bad) sbb mov addr16 jmp push rclb pusha addr16 jmp xchg push das ljmp out jno mov insl jb dec out sti jbe fstps out shrb sbb in (bad) cmc ds pusha nop jmp loope mov jns out jno enter out fcompl xor out sub int mov cli cmc dec arpl jmp outsl push mov fidiv scas sub mov dec pop ljmp fdivl cs mov lahf xchg sub hlt sub dec xchg (bad) (bad) jl cmp scas cmp shr sub mov lret sub test cwtl add cmp das push fnstenv dec out movl rorb rcr or ljmp (bad) in icebp inc out push jmp lcall out jno int3 pop aas fiaddl out popf (bad) xchg adc test out xchg pop cmp gs loop xor sub pop shlb cmp mov pop push xor movsl ja insl ret out sbb xchg out sbb xchg std in scas jg mov xchg int3 push dec imul and call xor jecxz inc push addl or pop mov adc or imul cwtl out sub pop cmp mov dec adc jnp loope push push push test cld out xlat mov mov enter (bad) aad lahf out or dec repz leave arpl test mov iret lods pusha dec xchg adc orl pop dec push pushf stc out jne mov lock dec out bound and mov ljmp out push rcrl mov push hlt dec test sbb insl jnp out jno fwait (bad) mov movd out mov and lret adc cmp and mov mov out je cs sbb pop out dec xchg aas push into inc lcall mov sub sbb in leave aad sti sahf (bad) push adc in (bad) pop ror out rcl popa (bad) and pop stos xor sbb addr16 sbb loopne cltd sbb ljmp dec lea cld out hlt mov clc jns fisttpl adc aam ja incb rcll lods inc dec jle popa loop iret (bad) out jnp add dec jmp (bad) into (bad) in shrd sub mov ja aas scas repz out adc rol pop xchg out (bad) mov pop test iret xor push daa cmp jmp stc add mov and ret out push jns lea clc cli (bad) jbe out xor movsl mov add push insl hlt fisub cltd add or xchg les mov xlat sub arpl hlt out inc jecxz xor or jbe pop jb pop out inc jge xchg lahf mov sti ljmp mov mov pop push adc out cmp arpl xchg out jge xor sbb icebp and out or push dec adc or out jns or out lods int3 rol xchg or out movsb psubsb outsl push mov loop cmpsb jns mov mov out ljmp je addr16 pop repnz jle jg add pusha popa ja ss nop out call stos loope out and cli add mov test jmp lret ljmp enter or popl out pusha out decl stc mov inc (bad) mov loop fildl xor (bad) out cmpsb mov xchg gs inc inc rorl fistp xor int3 xor jecxz bound and cmp sub dec ret out (bad) scas pop xorb cmc push dec mov inc inc mov lods out (bad) lock push pop sub pop push adc (bad) gs (bad) jne push pushf loop out out mul popa push fs out xor pop dec sbb scas arpl leave or mov pop mov out dec mov in pop xchg popa cmp leave sub clc stos ja cmc and mov xchg pop out adc out cmp dec out mov push or (bad) ret movsl insb int3 out pop dec jge dec or mov insl imul mov fistpl lahf mov mov cmpsl cmp mov out mov ds pop ja test andb out dec aam and out sbb rclb mov jne (bad) clc js jmp cltd test pushf cli out and dec mov xor scas scas lret int3 jmp mov shr mov aam dec out jg add cld clc jae mov jb inc lea cli pop cmpsl mov out cmp adc leave pop out inc mov dec out sbbb dec pop (bad) clc lods sub sub repz mov cld sub mov stos fsubr (bad) outsb sbb out inc pop mov adc sahf push lods sub cli in add jmp jno out sbb jb jo lahf bswap mov mov dec out add rcrb xchg dec pop js popf out jae adc out mov sub (bad) xchg fs (bad) pop movsl pop inc loopne (bad) in jbe adc cmc sub outsl call push pusha jo out mov jp rorb sar test sub cs mov adc aas sahf and loopnew jecxz js test addb arpl shl les and (bad) shlb sbb nop out mov pop es je xor and cmp popa inc out xchg adc push and cmp sti jbe in shrb enter dec popa enter scas jno test outsl pop add inc inc out dec mov mov or xor jno aad fst pop dec and pop jo push fsubrs push xchg fucomi inc and test xchg xlat ljmp loop adc pop lahf lock push add xchg out daa jnp fadd add aad je in add test out js addr16 inc pop xchg push outsb xorb das inc mov (bad) call jns cs shrb addr16 (bad) out jg decl dec out out stos cmp scas enter sub repz out pop out add jg pop mov mov dec out mov xchg pop lret out or dec scas arpl mov pop cmp mov (bad) std push push fs fucomi jo lcall pop cmp mov ret jp push jns loop lret out sub push popf shr loop push mov (bad) add cmp mov or xchg jmp push mov xchg push outsb out cwtl popf por loopne iret push in jecxz in stc rolb iret pop fisubr cmpsb insl outsb or dec notl push loope fsubrp in dec mov scas insl (bad) call (bad) cmp in push into cltd lods pop scas mov cmpsl mov outsb dec mov mov pop aas clc pushf out inc lock mov in loop stos stc mov xchg jnp out or icebp mov insb pop and out mov popl pop pop xchg ljmp ljmp xor jmp adcb cmpsb mov insb jns dec out shrb xor es out cmp inc inc fistl sbb cld enter and dec out mov mov mov pop push jg pop mov inc divl outsb mov out mov pop add lcall xchg int (bad) test cli mov cmp cmp aam adc mov jnp pop (bad) and icebp lret lock lods ljmp out fwait loope insl lahf add out jecxz cmpsb fcompl inc mov or cltd fistp call cmpsl push mov out das sbb pusha mov insl mov jnp sub xchg mov mov out in sbb xchg pop push and jg inc pop mov rorl dec negl sbb test xor jmp out lods adc shlb inc mov dec mov jne out movsb mov aas jo lret les stos (bad) mov scas or dec sub add push stc mov ret sbb push jae stos add jb aaa jo sbb xchg dec out dec (bad) mov sub adc push cwtl pushf test out loopne stos movsl mov fwait dec ljmp out and aaa scas clc mov ret jecxz or aad push fmull jecxz or pop pop push jg popa in icebp push push cmc call push mov dec bound pop xchg xor cmp xchg mov lods hlt push adc and shr jno fadd cmp inc int out cmpsl in movsb loop mov ss adc rcr push ja dec cmp push pop outsb sub dec mov in out or sub xor pmaxsw and mov fbstp mov fs add cmp lock movsl push (bad) out lods sbb jmp xor adc out fcmovbe aas sbb xchg pop xor mov mull movsb in ljmp cmp imull cmp xor mov sbb cmc pop out imul xchg mov fwait popa outsb and in out (bad) (bad) rol and pusha pop repz xchg jecxz scas inc (bad) out jl stc arpl cmp (bad) rcrl aaa (bad) inc jg out or mov std imul jecxz lods stos int in dec out das xor mov pop icebp xchg fcom xor fsubr fwait stos movsb and mov rol mov mov inc popa add push xchg adc or out and test movsb mov outsl je in pop pop xor xor add ja mov jge aaa lods (bad) pop and dec push mov out mov out loopne pop pushf inc sti mov call icebp jnp pop dec xor scas lods pop pop shl in nop jecxz aas loope out dec adc inc mov ss (bad) or popa repnz out cmp inc stos mov push repz daa mov lahf out lock out jo dec and out aam in cltd and (bad) inc or aas pop stc scas ljmp addl adc cmp mov sbb (bad) jmp mov in xchg out mov ret (bad) sub in loope sub fmull add mov push pop push bndstx clc push loop cmp mov adc call fsubrl fsub push stos dec pop add stc cmp xchg fisubr and pop (bad) outsb out das sbb movsb xchg lahf mov push stos xchg inc imul mov scas aam out test dec push xchg lahf imul sbb mov fbstp pusha int jmp jecxz fdivrl out loope fs test mov and jl mov out jmp jnp test mov adc out aaa (bad) inc fidivr mov jns cwtl out hlt bound lock iret adc and push movsl jnp adc call inc out push aad jg fs out mov push (bad) stc mov dec (bad) sbb lcall jmp lods rcll daa xchg repnz (bad) pusha fiaddl sbb pop test iret adc inc inc sub dec push sbb mov sub gs in push mov lea xchg fs and jge cltd call mov mov cs negb fcmovnb movsl sub jecxz pop lret ljmp inc imul iret arpl push jae out out push push and push out stos pop or mov xlat out jae rcll mov pop mov or scas xor push cmpsl jb push out arpl jge in push xor (bad) out fbstp jl test repnz bound movsl shr je fwait mov pop test mov (bad) out sub jns xchg ret out and mov pusha and jb je es rcll jg popa in push pop mov hlt out test out jp mov xor adc xchg push pusha pushf mov add lret mov in es movsb push and jge (bad) out pop test rcrb adc push aaa inc pop or sub dec and or nop pop inc (bad) jmp test xor pop xor fisttpl pusha out pop mov pop dec insl and movsb pushf ss ds adc ljmp jecxz imul lds aaa xorl fsts out in cmp adc insb xor imul shl sbb stos pop movsl icebp (bad) stc pop loop push xor sbb fwait and xchg clc dec add shrb push loop scas pop sub mov out cltd inc add out jl mov (bad) out int3 jg cld add mov pop and pop mov out (bad) pop mov cvtps2pi scas jae pop shlb lock mov out repnz mov and out das inc iret cwtl loopne push jmp outsl loope mov adc (bad) lret mov dec jmp lds out test hlt sbb jp jl push cmc out lea inc movntq out (bad) or jge inc (bad) xchg icebp lods out out scas psubb add nop out pop jae or out hlt cli fbstp out ret mov out push mov je iret sub push cmp out (bad) std outsb fadds sub out shrl push out mov add push dec lods sbb flds fidivl ds addr16 xchg stc jnp inc flds and leave inc mov cmp aas or add lcall cmpl clc and out inc and out add shrl insl jb jnp aam test ljmp out pop clc (bad) add pop mov out fcmovb fsubrp bound jns out stos ds add repz out sbb sub cmpsl call and gs add mov sub fs add fsubr popa enter imul xchg in outsl dec mov fucomip pop das sbb sbb out (bad) sub or out (bad) ret fist dec aad (bad) dec pop fsubrs shr out jae xchg test bound lahf jmp test movsb xor ljmp xlat stc in out fildll xchg (bad) jne out xchg clc cmc add out inc (bad) xor push adc adc mov daa add jp clc or out xor dec mulb add inc sub out sbb push icebp out call andl pop das dec std imul fidivl xor dec stos pop inc mov ret mov cmp arpl ja mov les in mov js mov iret add popf test mov inc ljmp out (bad) testl cmpsl adc out es pop mov out popa dec mov bound out fisttp pushf cmp aas jge lret jae ljmp push sub lock repz jns insl inc imul and push mov xor cmp jns pop cmpsb pop jecxz fabs xchg pop outsl sub out decl fdivs sbbl rcll or dec imul jecxz (bad) mov cmp push lock pop pusha ret push out out lock mov cmpsb xchg pop outsb out out or data16 mov ror mov aad push lret mov out scas out sbb imul test in out or dec fdivl ret or inc sub mov gs out cmp adcb test roll scas out sbb pop ret mov sbb mov ljmp add xchg iret loopne or (bad) out div push jae jns sbb loope int3 out push or clc inc loopne cmpsl dec out mov adcl (bad) or testl mov (bad) sti xchg push pop imul dec and cs cmp out ds pushf sahf ss out fisttp shrl loop scas pop dec mov mov movsl sub jo (bad) mov and jecxz repz push xchg inc pushf jl mov call int out aad mov sub lfs pop (bad) ds mov adc frstor mov mov add xchg repnz push (bad) xchg or jo imul push inc add push push fucomi mov dec cmpsb inc mov or out pusha ror subl jo adc pop dec movsb out pop movl out push cmp pop into cli out and ret cld arpl pop sti cwtl (bad) sub mov mov mov clc (bad) ja popf out cld cmp mov mov push mov fildll ss bound out (bad) int xlat add mov push cmp or aaa xchg (bad) (bad) out ja cmp push adc roll imul iret push call push jne mov popa and out or cld das sub inc pop mov jecxz mov add in xchg (bad) mov pop (bad) shrb aad out icebp sub pop sarl out lods mov mov xor inc imul lock cmp test in sbb inc mov or push sub xor (bad) mov adc lock je pop xchg and dec in ds hlt adc shr out (bad) loop scas rclb dec jmp (bad) in (bad) mov xchg mov xchg lret scas (bad) mov out adc test je or inc inc jp sbb out jae mov hlt arpl ret xor (bad) sti test dec dec (bad) out mov jmp ja mov pop jnp ljmp jno pushw xchg cmovno xchg cmpsb cltd repz adcl push out int3 dec mov mov mov lret adc imul pop push repnz dec or inc xchg and sti (bad) xor dec es jge lds mov sub cld out rep popa std mull scas sahf dec pop inc jbe xchg int bswap jne or pop fstps enter sbb loope cmp ficompl cli sub insl pop mov divl out adc out subb push cmpsl outsb sbb jbe les inc dec push mov ljmp inc lret jmp out ljmp dec lods (bad) dec fnsave loopne push jnp xchg inc call stos incb call inc mov popf fildll pop pop sub outsb ret add push mov notb sarl (bad) (bad) addr16 outsl mov in xchg cmovo and ss out inc stc mov lock (bad) leave mov (bad) jp or repnz pusha sti xor loope fsubr pop negb ror scas notl lock ljmp leave and fildll add sbb mov mov adc mov pop inc das out mov aad (bad) xchg add popf push jbe in pop out test add jnp movsb inc dec out stos lock orl rclb push stos push dec fist sbb loop ljmp pop mov in push xor adc dec xchg sar loope fdivr mov push fs out adc subl scas stc push enter test dec leave mov jo lea imul (bad) cmp out in pop sbb loop and ret adcb adc push cmc out (bad) mov pusha fadds out cmp xor add xor fisttpl or add out and dec out and push jb mov mov fucom repz fmull jecxz add cmp insb cmp clc out jae cmpsl pushf lea add ret jmp movsl xchg outsb fs cmp adc jl push jp test je xor (bad) aas sub pop fucomi mov test push mov lret or loopne xchg ljmp out notb jge pop xchg out xor xor fistl imul movsb push or out xor fsubr adc pop jecxz (bad) mov sub cmp (bad) lods xchg xor out (bad) jbe out add pop stos lea adcb mov adc test jl int3 js dec dec jmp jmp cmp mov ret fistpl jo add mov inc nop lds mov xchg jmp sbb and into je push jo js bound (bad) mov xor cli inc test daa pop xor push ljmp ret push orb and int flds imul mov lock adc test sub out and inc push repnz popa xchg in fsub sbb pop loopne in sarb cmpsb push mov in fsubrs mov ljmp adc add (bad) lods aas sbb inc inc mov ja dec dec imul (bad) mov push fildll dec out lock or push stc in test lret mov sbb fstp jmp out sub add scas (bad) into imul or nop test jmp push imul lods add inc push ret adc out leave out outsb rorl cwtl xchg inc shr gs aaa sub mov lahf imul fdivs out inc pop (bad) ror cltd sarl loope out and loopne out pop test or (bad) xchg (bad) out scas adc add mov mov jecxz pop repz decb xchg sub ret jp mov pushf mov movsb jg hlt push out int3 push popa test sub aas xchg lods out sub sbb inc jo xchg mov pop out and enter xchg jecxz pop adc inc xchg mov int ljmp or jno xor cmpsl and in pop rorb adc ret out or sub mov (bad) shr dec and jne bound (bad) out mov jo test out or mov out (bad) adc and out mov shrl out or out xor push stc push popf mov ljmp out sbb icebp aad and xchg pop imul out pop rorb xchg aas xchg imul cmpsb jae out movsl jle lcall (bad) cmp jp repz fabs jmp iret add mov call sub (bad) xor nop loopne pushl cli outsb pop jmp dec mov jb mov fildll pop (bad) enter push dec out mov popf mov iret fs (bad) mov test cld mov push push cwtl xor out inc fldcw cmp xchg lds dec and inc pop lea fildll mov in ss es insl push dec xchg pop out (bad) jg out test leave fistpl cmp mov or mov dec insb std pop (bad) mov fsubr aam addr16 roll in inc in insl dec adc mov pop gs out xchg dec pop pushf ja imul jne cmc out loopne mov mov sub pop sub negb dec out pop xchg test divb push out fs ljmp add stos push jae push ja xchg int out out pop xchg adc shr ja push out out imul fucomp pusha cmpsb sub xchg rol (bad) clc lock es out insl loop fwait inc jns mov jg iret mov dec cs inc mov xor mov inc sbbb out xchg cmp xor adc in pop out icebp movsl lea sub or pop push lcall fwait push jmp mov pop lods inc xchg das xor and jae in pop in pop out mov lret jbe pop jo ljmp out cmp pusha or loopne sldt adc xchg jne mov push push push adc fist fisttpl fsub adc cmp jg (bad) in ds fstps (bad) aaa mov sub mov pop cmpl ss loop nop xor or add (bad) add rcrb jae mov aad in add scas test or sub loopne les out mov out dec pop stc in adc clc ss insl sub adc or sub or mov sub mov mov xchg out clts bound out mov ret out push sbb jp (bad) nop imul push dec push and sbb jbe cs cmp out iret (bad) pop pop jbe mov mov daa lahf cli fild adc or addr16 sbb push push jmp pop sub shr mov sbb sbb pop push pop clc out mov push scas or out in lods jg arpl into scas in stos adc and push jecxz out sub ret fild lock pop push dec repz out or mov out xorl add js aas xchg xchg pushf pop cs or out movb adc iret fsubr xor dec scas or imull mov sub sbb aam (bad) mov fneni(8087 push dec dec out push xor and jle lret iret out jnp fldenv out or adc bound pop xor dec arpl mov push or sub lret push (bad) pop cmc lock inc xchg out adc push inc int jg jge xor mov in pop sbb out fmull in inc out fsts icebp add (bad) (bad) fist in inc insl out rolb mov and outsl pop mov addr16 mov inc out and les iret mov aas stc xor push out daa les mov jle cmp or sti call jno pop xlat sub in or dec lods cmp cs fs (bad) (bad) call pop out sub mov add out aad gs fstpt mov lahf mov hlt orl sbb test sbb xor pop ljmp mov out pusha jp aam mov dec out inc nop inc rcll push and mov out pop roll sub aad pop cmp push adc fsubr sti rorl out mov and loopne in xor shr out je or jmp pushf pop enter sub repnz lret jb xor mov das push jp adc out sbb call pop and ret popf mov out mov out sub out gs int3 cli out and (bad) cmp (bad) out test inc mull xor out cli lcall (bad) fnop sbb aas push int popf cmp jle sar fwait lret loop adcb scas out sbb das push fistp pop or adc xchg sahf pop out imul decl sbb add jno add add jo cs pop cmp and js jmp fist call or pop ljmp pop push scas push xor inc mov mov scas push out and cmpsl dec fdivr aad mov rcrl ljmp mov push lcall out jne mov jbe inc sub jp repnz in pop divb decb and test or lcall ret loop out mov cmp push sub jle jo or pop nop das arpl es in pushf lds out pushl pop mov and mov jge push xchg add insl shr imul xchg out dec xor jmp xor decb into dec in fnsave (bad) fisttp std xchg adc cld leave in lods sbb xchg insb mov out je out xor inc cmp mov stos (bad) sbbb sahf iret rclb pop test mov dec in imul xchg jp (bad) ret iret das add pushf bound roll push in sub fwait out xchg cs test push jo dec sarl sbb lock scas pop dec lahf sbb lcall mov (bad) in jno out out jge hlt jo fucomp sub push fsubs inc or test (bad) pop lret ds shr inc xchg mov sbb inc add mov popf out lret sbb shr lcall or mov out aaa addl test or scas out fadds inc popa arpl or int ja push and lcall jmp loop movsl fwait jnp imul je or out ficoml sub out xlat out xchg push or pop sub out ficoml jno pop iret or (bad) aad dec iret (bad) xor adc (bad) fstps outsb (bad) pop mov xchg push mov jae loop mov dec outsl cmp inc sbb out lcall sbbl lock in dec mov mov (bad) jns xor out push mov jo and pop jno arpl mov mov mov (bad) mov and inc or mov mov mov lds adc sub fimull mov hlt add pusha jecxz jo in sub or ret incl mov daa pop dec cwtl movsl and mov inc jl and adc scas das jecxz xchg out jb push aas add jae arpl les push cmpsb (bad) jnp add iret xchg rol adc movsb nopl lahf insb cmp cmp push adc xor pop jne xlat pop add out mov out pop push xor xlat fsubr pop sub out bound das adc pop and jbe,pt jp ss out scas add insb out std xchg shlb out testb xchg out (bad) mov and out rorl mov out xchg fwait movsl lret data16 out cs push pop out (bad) or and cmpsl bound cmp mov add icebp in (bad) adc rcl stos jl out dec push lahf cs (bad) iret (bad) mov pop stos and ja adc repnz mov into sbb lcall jmp pop sbb out cmp addl out and loop insl add sub sub into (bad) mov ljmp mov js movsb xchg cld std push and in in test or xchg xchg inc add mov mov push out call jp lds add mov (bad) aas mov sbb add sbb xlat lret out decb mov out outsb mov sbb pushf sbb pop daa dec xchg addr16 add push inc int3 mov data16 push mov dec sub out push dec lcall lods sub repz movsl out pop mov mov mov (bad) pop mov ljmp in movnti (bad) ss adc imul cmp mov dec sbb mov outsl adc outsb sti adc lret xor add in mov out push inc mov pop jb dec out insl xchg fmulp push and out mov jmp jge call inc dec pop out inc lret push fstpl nop pop adc das jb jle les xchg out ret testl out sub insl inc pop add and out cmp shr xor in cmp aad lods imul mov pop jmp hlt cs xchg add lea (bad) repnz push sub dec ja popa out (bad) dec repz lds adc push scas data16 lret lods or and mov mov bound loopne call movb xlat mov lea (bad) test movsl mov dec (bad) mov adc pop mov out imul enter (bad) and push out (bad) hlt fs jb out cmp pop jnp push push insl in out jbe dec out call inc jle dec out mov out sarl mov shr mov mov aas lods cli xor pushf jl mov in pop into in xchg and iret fwait jns add js cli sbb mov shrl xor test subl cld ds out repnz into inc popa out mov mov xchg dec out xchg and mov sbb push out cmp jb xor loop out adc mov outsl pop cmp mov push cmpsb out idiv fcomps cmp push in in xor cmp hlt test fsubrs sub (bad) xor xor mov dec jmp push cmp test aad sub outsb out inc mov out sti in ja mov incl mov lcall insl in push imul inc and push mov mov jnp nop mov test adc out jae,pn lods lret leave ficoml (bad) out (bad) push (bad) outsl push rorb faddl lcall repz cmp or arpl jb ds pop xor mov xchg inc mov inc sub xor aad push mov sub or xchg fucomp dec xchg xchg out std cmpsb add jg pop adc jle sbb jmp push stc cli sbb nop lret dec adc in call addr16 aaa test arpl add mov out loope mov mov mov jb xor inc out loope hlt icebp sbb sbb ljmp and js cmpsl dec neg rcrb stos pop mov out push jmp pop mov jmp push aad cld or mov sub sbb mov out icebp cmp pop mov pop out scas cmpsl push mov sbb out daa repz mov out jb xor jge pop mov push out dec ja gs pop mov negl pop jns loopne repnz cmp mov sub xchg and lret shrb inc out pop cli cwtl in jne sbb adc jb push insl inc sti and pop push adc mov push jge test cltd mov pop out (bad) repnz add pop aam stc cmp jmp data16 mov sti mov movsl sub out dec and mov out inc jno mov add sbb pop cwtl in or movb cmpsl sbb push aad popa mov icebp int3 pushf inc js scas iret sbb xchg dec pop int3 pop sbb stc sub rorb pop mov push xchg jmp ja fcomp fldenv mov (bad) (bad) mov mov or out xchg and shr mov inc and lahf cmp out clc mov and push xor out jg add mov pop shll cmp out mov adc out ja add imul mov in sub aad and jge je (bad) mov or push out inc iret dec scas cld cli mov stc inc sti in xchg push arpl bound mov or sub mov shrl rorb repz push mov fisubrl mov cmc cmp inc push pop lods dec movsb mov shll enter jmp cmp decb out cld mov (bad) jbe out jns rolb aad nop push scas out rcl cmp mov xchg lcall adc cmp xchg loop fs sub subl loope push xor mov data16 out mov mov sbb or test rdpmc dec mov mov cmp jmp (bad) sbb lcall imul test mov iret cmp and shr pop xor xchg int3 inc sub fbstp insb jne loop xor jge out (bad) xchg pusha add test loop jne cmp add and push pop rorb mov jge in jae pop adcl lods pushf mov mov popf aas sbb mov xor stc lcall dec xchg outsb std bound aad out xchg cmp fcmovnu add mov xchg daa and out and sub aad pop mov push dec addr16 out iret adc inc pop and sub popf jmp out les cmp sbb sub out dec xlat pop aam push jmp out jmp cs fucomip outsb pop shlb out hlt nop fimull out lods insb mov incl int xchg fnop xchg mov mov mov xor push hlt push pop dec dec (bad) les dec mov mov cmp aam into out mov add cmpsl inc jne or cmp mov data16 push sbb inc leave and add mov jp push mov out (bad) in roll lods dec (bad) sbb lret les (bad) mov sub mov push fbstp sbb push in push dec cld out sbb dec xchg jo jne dec es dec or add and pop test sub jge insb clc xchg mov and mov pop daa roll inc mov push les lret pop mov mov aad xor and sbb ljmp dec adc and dec (bad) jae add lods out into xor lahf loopne imul cwtl and mulb adc jae inc (bad) dec adc loopne add cmpl xchg mov or mov lock jmp fildl out mov adc es daa xor hlt push adc xchg das stc (bad) mov test das out imul and sbb push imul outsl cmp sbb add fs mov dec adc xor mov sub adc add cmp pop adc pop mov shll in and fldz push js pop call ds movsl maskmovq (bad) or jae mov ljmp mov xchg out sub jle mov mov jecxz inc xchg push add sub sbb aas xor test out daa jl imul cld sub pop ljmp push clc adc pop popa leave sbb lock les jae ljmp cmpps jne dec in call out adc cmp loop cld (bad) push iret popl sarl inc fwait add ret jbe sub mov cmp rclb in inc dec xor outsb aaa in push ds or add cmpsb or aaa (bad) sti out daa int out mov inc rcll mov inc push ja adc jecxz ret inc out stos fiaddl mov js and adc xchg mov imul sub es cmp testl jp jns ret das add adc mov mov and out idiv lea adc aas mov out mov mov sarl test mov pop js inc cmc and or mov (bad) outsb pop cmp jne xchg pushf out adc mov call test pop scas int lock out das pop mov shlb cmp and nopl out and sub (bad) outsl gs pop push jl sub in sub out insb in shll repnz mov push sub in add (bad) adc (bad) and cwtl push out or xchg clc out fldcw pop jecxz jp scas cmpsb pushf loope nop xchg out hlt and mov sahf mov loop adc jle out sbbl (bad) fisttp enter inc mov mov out and push fisttpl out sbb inc outsb mov call test xor loopne mov lock xor ret mov aad dec std stos insl cmp int loope push dec je mov out lds mov mov inc imul sti mov sahf lcall fsts mov lret mov cmp dec sub test out push mov cmpsl fucomip xchg arpl addr16 sbb shr call fcmove sub imul dec pop add clc test xchg dec rcr inc sub mov decl dec hlt sbb and ljmp xchg cmpsb fnclex outsb je xchg mov out int xchg cld adc add pop sub jle icebp jl outsb pop fcomp push pop push and fs andl or outsb add stc add lock dec mov jp push push iret sub ss je inc cmpsl hlt dec mov insb push lret mov out cli jmp (bad) outsb fbld (bad) xchg das imul loop and xchg dec out cmp xlat inc mov loopne int mov pop out daa adc sbb (bad) lods jl int3 and mov jne out stos and jns xor mov out jae xchg lea adc gs aam std xlat sbb mov lods (bad) cmp push fmuls sti out lea lcall push and out cmp jae out std xchg (bad) fild sahf lods or push xor (bad) in (bad) mov add adc mov xchg loop test out mov inc data16 dec sbb and fbld repnz dec jnp (bad) mov jne scas or out mov push jae jnp adc out sbb js (bad) lahf jns scas mov fucomp or xchg stos sbb mov out inc ss push add push out sub or lods xchg push (bad) and inc push popf lahf ss mov out sub mov out jno test out in daa and out popf jbe xchg jnp fldz push dec adcl out xchg push xchg dec in ficompl cmp mov cmp out sahf add cwtl mov icebp jle outsb inc (bad) xor ret xchg int3 scas and inc imul lock adc mov out jno bound adc add push sbb (bad) jo jmp mov adc out jmp out mov cs sbb ljmp out inc pop gs repz out push aad mov test out jo pop mov mov xchg enter ja mov jg cmpsb sbb ret pusha or mov (bad) push mov inc out arpl cmp out jmp dec flds pusha cmp jne xor out fcomi xor (bad) dec (bad) cmc (bad) jp and (bad) mov adc out (bad) faddl or (bad) out fidivr mov (bad) jo mov xor repnz (bad) fwait lods (bad) psadbw out push lahf loop mov out in test jmp out add fwait roll popa out scas sub xchg mov imul dec movsl xchg lods ret cmp hlt negb gs and (bad) (bad) (bad) out je dec mov jbe or mov sbb ljmp or cld iret nop lds ljmp insb pushf mov nop aam cltd xor and and out add les add cmc in push xchg (bad) adc lcall out mov cmc call pop fistpll mov test pushl mov out mov mov add call out (bad) jl jg push xor cwtl sbbl fnstcw dec out sbb rorb (bad) in mov dec push adc mov outsb stos adc xlat pop test in test pop pop out sbb sahf addr16 fwait lcall iret mov mov (bad) mov or dec mov imul xchg dec and in add or push fs imul jns jbe sti lock seta cmp ljmp insb out aad in sbb dec cmpsl out fild pop popa out call aaa add sbb mov pop out ss jae ficomp fldz inc divps adc mov out ja push push cs scas xor mov lock adc mov inc push sub mov clc or scas lock loope or scas jne aaa or mov push jns outsl jno adc jmp out mov in push mov popl cmp stos inc iret in mov or and out mov arpl iret vcvtdq2pd cld sub mov ljmp call pop daa sbb jno in out dec popf adc xchg test inc aam fcoms xor dec inc cmp inc pop inc ss mov popa jo sbb cld sbb sub sbb fidiv fwait outsb ror out xlat jae xor loopne push out call cltd movsb mov pop imul mov jne out dec xchg fwait std cmpsb mov dec cwtl mov arpl xchg xchg mov (bad) xor ss push in lods cmp in mov jl aas cmp popf mov mov sahf (bad) out daa add inc fwait out not add out imul push jae cmpsl cmp or pop pop push in fisubl mov aas fadds out arpl cmp int (bad) adc es imul test xchg push push insl out in out cmpl dec cmp mov dec imul xchg fdivr and pop pop or dec mov lods insl dec out jge add out into mov mov pop xor sbb pop mov shrl push call iret out das in jb push mov cld loopne and pop outsb daa pop push imul sbb cmp lahf fistpll out sarl ja sbb scas xchg out les dec es push repnz in fldcw call sub sarb sub mov jmp mov outsb push cmp pop or out cmp outsb xor jno call inc pop lods inc adc jo out mov out clc (bad) fcom mov es sbbb loop,pn mov imul dec (bad) jbe push out add pop icebp out mov push push mov pop ss in pop and jae out test nop pushl outsl fstps mov xchg and out inc mov mov in mov dec arpl fildll pop push ja jae loope mov gs idiv add jnp inc rolb jae dec push cmp cltd stos pop loopne loopne ljmp (bad) dec out mov dec fisttp xlat movzwl outsl in cmpsl popf cmp xor mov popa or (bad) lock cltd and fbstp sahf nop push push in inc and out daa movsl jecxz rorb bound xchg aad in fistp scas jge ljmp movsl and inc cmp jmp rcr jno mov (bad) sti rclb adc int3 daa out fimul out mov xchg mov (bad) lods lock (bad) lar out and out mov ficomp push xchg out int3 movsb inc cld dec aad jmp sub push ljmp fdiv xor xchg (bad) fcmovu ljmp outsb les mov jo call aas or ljmp cmpsl nop xor pusha and xchg fsubl divb aam js pop adc jae push mov mov loop pop inc fcmovbe sbb mov dec hlt or xor cmp lea das xchg out movsb lock and jnp mov (bad) or jmp mov test xchg pop fmuls pop call sbb sub mov out out or lock rcr xlat xchg ja inc pop pop iret out ds dec push mov xor fild test sahf scas cmp popa mov loopne push mov mov mov (bad) xor mov push xchg fldcw or loop lret dec scas icebp lahf addr16 repz out sbb (bad) jae out jns jmp cmp fs jge out mov adc mov xchg out sbb out adc cmp inc dec sbb dec pop iret lcall push or popa outsl inc cltd mov out mov fcomps jle mov fisubrl fs es movsb rcll int mov lret decb pop mov inc test pushf jns aas in pop pop jge gs test scas nop mov lea out aam mov sbb cli fwait repnz mov xchg lahf punpckhbw inc jno or mov (bad) xor cli fcomps mov jae cmpsl adc mov dec sti aam mov or and cmp push (bad) (bad) in test inc leave out out hlt out movsl out jo inc sar cpuid cmc add jg (bad) jb out loop test movsl aad lea fldl jnp sbb js in mov aaa inc in wrmsr xchg out ret xchg cmp xchg pop dec push xchg fs xorl sub arpl in mov jmp xor cmp fucomip cld aaa jmp lock cmp push js adcb push dec ret jbe adc cmp xor cwtl (bad) inc bswap cmp push aad push sub std jle shlb inc data16 sbb jne cmp xor jecxz dec and sub xlat out add lock or (bad) push pop out jae xchg push iret pusha pushf out js repnz mov lock xchg and sbb xchg inc out (bad) or lret pmaxsw cmp lahf movsl and pusha out out test mov mov cmpsl pop mov dec jb add out add in out push mov xor fs push rorl mov xor pop xchg pop mov dec push out xchg popf shrl (bad) mov push pop pop int3 clc and cld mov scas imul push jg xchg (bad) mov out pusha call pop cltd adc test or lock fildll pop arpl out mov mov xchg (bad) mov in sarl out xor push jge sbb bound push lret add mov loopne out adc popf mov adc out gs leave cmc cmp shl repz in popa aas (bad) dec sub imul mov scas das inc push movb mov pop iret add fisttpll cmp pop dec jbe push in out pushf push xchg stos push stos aaa sbb cmpsl cld ja mov mov cwtl sbb sub jo mov cmp in out (bad) enter mov mov ficompl push mov mov out outsl inc insb and or sbb daa lds rcrb inc or clc fidiv lahf add faddl cmpsb push xchg mov jne inc pop jle out jnp sbb push pop lock jbe in adc dec jb ds and push pop jnp (bad) hlt scas mov pop in out push (bad) push imul inc rcrl inc (bad) out inc push fistpl fwait cmp mov shll jl and ljmp pop repnz mov jp lea out dec or out mov adc (bad) mov lods mov (bad) xor pusha lods fsin push sbbl out ja outsl stc rcl pop sti out imul out lods decl scas adcb ret mov cld js sbb jle xlat xor es addb movsb and mov jne bound fstl pop sahf loope out sbb pop out jmp ret mov xor out dec dec fcoml out addl frstor out fld add in xor pop push lds call (bad) (bad) mov sub lods lods call sub xor out mov int3 bound aaa adc or mov add jge pusha add out in mov je jle pushf out jecxz shl int (bad) jl jp jne in dec out push jmp sbb loope jb xchg adc shrl lds js jmp in adc dec jo pop iret xchg or loop pop outsl out add mov jge out (bad) fs out lcall pop xchg mov shrl jne mov ret xor dec loopne pop out enter in out add jmp inc out push cmpsl add js data16 jns pusha mov out mov or cmc lcall or xchg iret ljmp (bad) lcall cmpsb (bad) out xorl push push lea addr16 loop (bad) and jp sbb out or dec xor push adc andb iret sbb ds int3 insb lds or popa jnp lods bound cltd pop lea pop push push jns out lods and sbb pop out jp test jnp out insl mov ss mov adcl jle (bad) mov xchg loopew cmpsb mov or mov shrb out jle pop mov out fs mov out jne mov out cmp lds jmp ljmp cld or ss lods out add out sarl and ds xor and hlt pop xor cli sub pop mov imul and inc in and es icebp outsb test je ljmp pop or out jnp lods mov pop ret icebp cmp mov xor aam decb idivl sub rolb rcrb inc out dec xchg pop inc xor fstps fsub fcoml ret jg push clc xchg mov mov out mov adc out jnp xchg xor dec or in out test mov pop sub orl pushf add adcl dec mov dec pop test out pop hlt rclb mov test call jmp fucomip or mov in out outsb js (bad) dec sbb addr16 cmp shl out or rcrl in push push jae ds fisubrl outsb pusha add mov (bad) out pushf clc jns jp jnp cmp out repz mov lret fs dec loop sbb push jmp loopne push dec out cmp out out mov and xor adc mov pop mov es mov lahf fmull add out imul and mov xchg jnp fisttp test jl xchg in enter xchg mov out repnz push out out ds jnp mul out xor fsubrp les or mov rorl jmp aaa push push (bad) js dec or push iret fcoml in push sbb in cmp push jg inc (bad) sub scas sub insb fnop out jmp add mov mov mov out popa jae testl shl insl cli sub daa out lock mov rorl dec popa adc mov sub clc ret cmpb jge mov in xchg std xlat out lods adcb rcll out outsl pusha push (bad) loopne mov popf lret shr ficom mov out lcall out call sahf in push lea jae int3 idivl out das cmp push jmp lahf pop (bad) or mov mov data16 bound std popf sbbl mov pop jge inc hlt data16 lahf adc mov mov mov and rclb enter dec fiaddl testl xchg loopne in jl push xchg fisttp stos sub test out pusha mov pop mov outsb ja in mov aad inc aas or fwait das fcmovnu xor add cmp in dec (bad) pop inc (bad) insb arpl sub inc in es ja iret push pop cmp out or shrb out daa loopne inc arpl adc mov iret jl rclb sbb mov out rcll daa pop sbb cld ret out outsb pop add inc (bad) repnz inc xor (bad) cmp out push enter cmp mov adc jae out ficompl jnp xlat xchg sahf fs popa cmp add int3 jmp mov push fstl out scas jnp xor add xchg sahf in xchg ljmp lahf push test dec mov out call adc or pop mull jnp pop add pop or adcl test xchg imul cwtl fadds dec adc out test jge xlat mov sbbl out movsl out mov aad push out test mov repnz cmp add clc pop sub loope les xlat and out lcall out jbe cmp cltd (bad) loopne pop clc stos loopne xchg fsubr xchg aas jne add out out fwait jo add push xchg or sbb cltd sbb mov lahf push ret fist loop inc movsb sub repnz mov mov sbb add dec cld jae out mov xchg inc shlb cltd xchg out mov (bad) xchg fsubp jbe out lods lcall bound push push xchg xor out cmc sub out xchg insl push xchg scas sub repnz in dec out out imul sbb mov (bad) adc mov aas mov in add std data16 cmpsb push loop fistl lahf out lret ljmp out ja fldl jo inc in push out daa jnp xchg imul (bad) out ja pop mov mov push push jecxz movsl sbb jle imul mov xchg out shl scas xor cmpsb sub push leave pop into in int pop push adc test jmp fbld in call out adc or movb and push movsl dec aas pop fs inc out hlt sbb out dec nop jecxz push mov leave jle xor mov icebp in mov mov aam fisttp mov stos lods shrl out dec push std cmp push cwtl sub lods pop and scas xchg call in inc xor out pop push scas fsub dec mov sarl mov dec (bad) out or mov jg out and jp xor stos iret pop repz out out ss pop lahf and sbb test jnp (bad) pop imul incb or dec dec push in cmp das arpl xchg js cltd out push out mov and lods out jle sbb mov mov shrl pop in sbb push cli (bad) dec lock iret or imul xchg (bad) hlt mov ffreep cmp inc pop std scas jns push cmp adc out stos pop mov out dec hlt push mov out adc xchg push jp cmp ljmp pop test out inc xchg fistpll xor lock lods hlt inc (bad) daa aam flds ljmp sbb out scas adc icebp mov pop out mov bound lods mov jo pop inc fildll push out jecxz imul xor pop enter inc mov jl (bad) and lahf in sub jb mov xor out mov insb and iret sub stos nop ljmp push mov jae sub jp jmp push push ficompl pop out sbb pop out out adcl push lahf jmp jo (bad) out mov stos popa rorb or cs pop fwait push dec dec cld out jnp roll gs std pop push ljmp scas push ljmp pop sbb in adc (bad) pop daa xor push sbb dec (bad) cmc in stos cmp int pop lock push (bad) pop arpl in jmp xchg xor sti sub lret jge mov sub inc adc dec jp lahf pop popf mov or out dec decb out inc mov sbb xchg in or xor xchg inc out jle or aad lock imul dec in lods int call dec mov lret pop push in ret in out scas adc inc outsb cmp rcr jecxz add incl out mov or (bad) out sarb outsl in mov add lods cmp mov mul lret (bad) icebp stos xchg loop push out pop movsl loopne xor out subb out mov loop (bad) in cltd ret out jge mov es outsb dec pop fcomps lock shl dec xor into mov push iret mov mov mov sub fdivr or or out shrb mov add in shrl or int3 lds pop xor inc not insl orps (bad) dec pop cmp test push out icebp mov aas cmp int mul mov loope lret mov xchg out or cmp sbb in pop push movsb mov leave in out xlat test out xchg ja or xor out push push or stos (bad) iret xchg jae lock mov aaa out test or inc out push xor or xor insl or loop xchg sbb outsl cltd pop push lret sub mov test (bad) outsb sbb and imul xchg cmp adc and jg out loopne mov test out test sbb out std gs imul sub repnz in lock add dec jmp scas flds xchg adc dec or pop jg in mov decb and in subl lods es out add repnz faddp outsb jge jnp xchg aas add mov sub ljmp cli cmp or out popf pop (bad) (bad) fst add pop mov in mov in adc or scas jge leave sub loop in test xor and push push call sub insl popa out or dec out in inc mov shr sbb imul fwait push sbb pop inc das jp fistl push dec out (bad) sbb jg out sbb adc jecxz jb fs popa ret pop push mov addr16 pop icebp (bad) jne push out cmpsb mov mov loop xchg mov sbb (bad) arpl stos scas js repnz aam imul cli in insl sahf adc pop out (bad) jno pop cwtl call pop movsl int outsb aad fnstsw mov scas or mov sbb rcrb (bad) test or xlat scas imul out inc insl test (bad) jl shlb ja movsb mov sub js cmpsb sbb shrl jno aad in repz inc jnp out add pop stc mov push in and hlt outsb movsb in bound ret lods cs jno push fs adc add jmp nop popa sub cmp xchg fs pop test test push adc std scas test call pop out lret rorl ss lock out mov std das mov inc xchg push inc sbb jecxz add cwtl insb adc sbb repz push (bad) xor jmp or pop pushf out xor add push shr inc xor ret out push xchg ja test iret cmp inc in push (bad) aad aam jecxz adc je mov xchg mov and cmp xchg sub pop push ljmp inc imul out out mov push lods out jge pop cld xor push adc pusha jo cmp aas (bad) ss out adc sbb iret out xlat xchg out enter or xchg cmp imul lods and inc (bad) sahf repnz outsb sbbl jg jns pop push inc sub in mov inc out mov (bad) enter cltd out mov mov jb ror out mov mov adc femms xlat bound test cltd das sub sub mov in fucomp mov sahf xlat repnz in rorb fbld or push lret enter push mov mov out dec add jns iret dec push rolb out xor sbb enter mov add cmp push cmpsl push push stc repz stos aam cli out adc out addb push stos pop push mov or cs adc je sbb sub out dec adc out adc negl cmp roll sbb pop ret icebp mov (bad) cmc inc pop das mov push (bad) push shrb mov leave or out lea or aas arpl or out fisubl cmpsl aam ds dec cmpsb sbb push pop add adc dec push adc pop or pop sbb outsb out loopne sbb mov xchg divl adc jle xor inc mov call pop xchg add (bad) xor inc fisttp cld mov ljmp out shrb int3 les jp aad cmp out pop arpl out cld push cmp push movl out sbb into push add push push ret sub hlt dec ljmp sub mov sbbb out xchg xchg dec inc mov clc cmc out test xor pop cmp mov notb iret repnz out shrl or add xor and mov clc push fdivrl dec jno cmp jnp stc sub nop (bad) push pop mov jmp jecxz ljmp out popa pop outsl adc ret out xor aam mov icebp xor ljmp cmp pop roll and ljmp mov leave punpckldq xlat mov dec (bad) scas enter in fisubrl out add mov xchg out and andl jns or iret xchg ret dec ljmp lods int3 fdivrs or aas iret loop (bad) cwtl sbbb int dec ljmp lret out jmp cmp inc or sub aam inc mov xor fnsave mov pop lods addr16 aad adc mov stc dec jo inc aam jp (bad) sbb inc push push xchg jl (bad) out lret hlt mov sti lret push fdivl movsb orb out dec mov fimull test and bound cmp sbb scas ret lahf push xchg xchg (bad) out lds mov mov xchg test jae dec pushf pop fucomp movsl fmuls int3 rol scas xchg xchg iret adc or out push jno,pn out and sbb repz ss jmp mov lea push pop adc jo outsl xor sbb ljmp out dec xlat imul xchg test push pusha push and out xor movsb jmp sahf pop das pop into lock mov pop jecxz xor cmp inc push mov sti repnz and xchg mov adc pusha in pusha add cmp mov je and out cltd xor (bad) popf inc mov pop adc add iret cld cltd jnp xchg insb insl fidivrl xchg mov pop add imul mov sbb fistp cmp loopne xchg out (bad) xchg (bad) or out mov fucomi ficompl imul add inc in es xchg fs lods push fsts cwtl cmp xor dec sbb mov dec inc mov mov insl sbb or mov loope push mov add cld inc jl xchg dec dec ja iret pop out xchg sbb stos cmp out or or sbb dec out out push outsb inc aas aam sub pop (bad) push rcrb or scas jg dec je or sbbl mov jne gs test pop sub add jg insl sub addr16 mov dec pop push iret repz test mov pop out nop xchg dec dec mov je test add inc inc mov add lea mov out addr16 ja mov pushf out mov xlat mov pop aad mov sahf std push shll or xor or dec out and mov sub out inc sbb pmaxsw into test add pop movsl pop inc outsl rcrb lret jge pop (bad) xor push loop xor pusha insb out jecxz mov in out fucomi negl push xchg pop in imul jne arpl lods out jge lahf push jg test inc divl cwtl jae mov jbe out lds push pmulhw jno out clc lods mov pop pop stos cmp cmc jmp and int3 jbe out loop cmp pop jns repz loope push icebp out and sbb lods (bad) mov in adc inc into popa in jg mov repnz repnz jecxz lods lea in sub fstl iret adc in jp rcrl test (bad) jg mov loope mov inc xchg pop out subl xchg push out cmp clc pushf icebp out pop xchg jae fbstp adc je mov insb out (bad) int ja push clc add scas pop adc pop mov in loopne pop or out add icebp loop out dec out push and push xchg dec out or add int mov out call (bad) clc xchg out mov cld inc ljmp out mov imul out xchg ror jl mov add xor out adc mov push pusha add addl js (bad) (bad) ljmp loopne push xor scas je in scas insb add dec lahf pop stc sbb clc push ja stos into and aam icebp jge fisubl test ljmp pop xchg iret fnstenv lcall inc inc xor iret addr16 loopne in (bad) sub (bad) out out adc lcall cmp out add xchg jl inc or (bad) dec loopne mov cvtps2pi jno in insl ret into pop addr16 mov or int mov or mov fbld inc xchg ss dec inc int out cli pusha hlt pop sbb outsb loope cmp sbb pushl mov jge cmc push sbb lock jbe ret sbbl fsubrl jp lret mov cmpsl je,pt pusha stc mov icebp xchg mov cli sub and fistpl lcall jmp and jnp out int pusha in out and pop xchg jns scas mov adc out jae fnstcw xor imul orb sbb daa out pop fdivr pop add loop fcomip xor nop push outsl jmp sub bound jnp shrl scas aam mov adc cmc or mov xchg xor out push enter push jle out pop shrb or ror add mov xchg leave loopne out loope mov (bad) lcall and daa and aad out aas push incb out jo (bad) popf gs dec push out dec sub in daa test scas cmpsl xchg es in icebp clc xchg cmp mov mov incl inc xor repnz (bad) pop xchg inc xor iret call (bad) push orb jp jnp lods cmp adc (bad) mov cmp movd mov gs fdivrl (bad) jmp inc mov stos xor add adc rcl fisubr pusha pop out jne pop pop frstor (bad) out dec movsb sahf pop push fwait add leave aad nop imul sub aam outsb repnz out loope in or test call dec sbb sahf fildl adc scas jl cmp and xchg mov or push (bad) out ret sar sub bound test and pop rcrb nop in or out (bad) dec inc (bad) gs mov push xchg jae loop mov cmp ja adc mov cwtl (bad) mov mov pushl xchg bound out hlt and inc sbb test rol pop aaa in out sbb or out cmovle and sub loopne,pn aaa xchg aas out ret adcl idivb rcll bound insl or add fwait out mov dec lods (bad) mov or divl and xchg sbb out stc push outsb and pop xor out xor out insb cmp aaa push or mov sbb pop je stc in jno sbb or lds (bad) pop loop push clc outsb jns fwait cli aam lret lret jecxz stc daa inc nop in push mov pop int pop jp in ficoml or mov mov leave out adc and pusha xchg pop or insb (bad) fdivl in (bad) (bad) mov jg out inc mov ss test cwtl xor jo cmp scas shlb incb leave xchg scas mov ja xor dec pop (bad) (bad) mov clc js std mov sub inc int3 out mov mov pop and movsb out (bad) lea or out mov xor push and fucomip cmpl fistpl shlb cld or jmp lods out xchg push push jmp and fstl stos mov test lcall jg or jmp out enter dec shrb out sbb push dec inc push or out ret push mov jns xchg out cmp mov adc (bad) mov ja clc loopne sti dec ljmp out std mov out or out lret cs sub test inc add xchg xor je sbb out inc sub les dec inc inc cmp push test out jnp lods cmp insl gs imul aas nop xor jl ljmp out mov xchg cli mov push js cmp inc in xchg push in push xor sbb cmp lods push xor push sbb scas in stos rcrb xchg loop mov pop int3 into sbb in lods add jecxz,pt mov mov adc enter mov dec xor out out add in (bad) iret mov pop adc pushf (bad) das pop dec iret ss ljmp pop jnp jo xchg push or (bad) out xor out xor clc mov outsl pop sbb (bad) out mov xor aaa std imul inc push jb mov pushf out movsb mov insb inc loope adc jge out push cmpsl add xchg int inc jbe aad add cmc jmp and andb jnp jns dec add xchg mov push xlat add xchg mov mov call push pop leave mov loopne (bad) out test clc out fsubrp scas and jno mov push sbb pop popf jmp adc out sti aas sbb inc gs fwait out xlat cmpsb mov jo adc out fadds out dec div bnd insl push out jne cmp inc out and popf out adc lcall push int3 out sbb ljmp gs (bad) sbb cmp out (bad) jae test inc (bad) or (bad) push xchg sub lret and pop dec sub push (bad) out call jo mov icebp add test xor pop (bad) out add mov dec sub sbb and fldt push out insb mov shrb adc aaa popf lock mov xchg fistl adc out mov inc jbe rcr pop out fstp inc cwtl xor or inc push das and out adc fs pop nop sbb addb jmp jmp test inc decb push in loope mov fistl call in mov mov sbb jmp loop inc aaa push in iret js cld or rcrb leave push shl mov mov add int3 push xchg jne das mov mov repnz in mov add pop inc sub sbb fsubs push int gs mov icebp or data16 sbb dec out test je inc call (bad) out xchg push mov aad push sbb jbe out imul dec pop out nop pop (bad) roll data16 out sahf add mov dec inc sub jmp dec in int pop out mov or loope clc push inc pushf out inc ja or push leave sbb out pop cmp sub out insl dec pop (bad) test sub hlt pop dec jp (bad) (bad) push sahf out jmp mov mov push out fdivrs lea rorl inc jl test or xchg lock push mov je out jg fstpl fistpll and ljmp ror dec cwtl inc or sub push in stos (bad) xorb (bad) pop enter inc lret in jp and sub cld add ss (bad) or pop in xchg pop popa xchg pop (bad) out imul or sub clc fadd fwait mov js xor cmp out ds add or insb out cltd mov mov das jle jno xchg add sub out outsb ret add js push clc jmp out xor mov sahf jnp dec daa mov mov shl pop out ljmp mov mov rclb repz andb xchg xor xor mov pop mov cmp das test adc lret loope in inc cltd fdivs mov aad mov out dec mov test test lock mov out adc dec xchg cld push inc dec out jle iret push fild pop icebp loop das dec sbb xchg addr16 sahf out dec push jo xor mov in fs shr add (bad) push (bad) jnp shrl adc dec les pop repnz rorb or dec into add mov leave push out dec js outsl xor int3 dec iret out jle in pop leave imul es jp adc test inc sbb sbb cmp sub sbb dec stc imul mov mov out fidiv lcall fisttpl mov shlb (bad) sbb jecxz add inc icebp pop popa mov fmul setnp push pusha out gs sub mov addb push push out add add push pop mov repz jl imul xlat and add into add stc out (bad) jo stos cmp out out mov inc push inc mov or jecxz subb gs enter pop pop push jp iret mov (bad) adc out (bad) insb mov insl mov sub (bad) out cmpsl sbb cmp mov mov mov insb test mov mov inc data16 imul sub mov xchg xchg mov stc out pusha adc cs fildll notb sub sbb adc out push sbb cmp pop mov xchg or in aaa xchg clc out addl inc outsb pop das dec pop xchg enter out pop xchg cmpsl aaa jb xlat pop mov out adc bound ds mov aaa sub pop out mov sbb pop cmc mov arpl jle xchg xchg (bad) out jge xchg xor out xchg xchg test and clc xchg jg,pt xlat popf in mov cwtl lods and nop fbstp pop adc stos add in xchg rcrb out aas lcall stc dec sub push push and xlat xchg ret mov mov out jp lds subb mov rorl out pop movsl sbb sti bound pop call lds xchg outsb lahf rolb jp add lahf cwtl xor out push mov jbe inc sub in (bad) mov mov lock mov ljmp and xchg icebp add and adc das pop ds jl out pop jbe sbbb test mov dec fwait rcrl mov data16 int3 jns adc mov (bad) (bad) repz aaa jnp shll jl mov push (bad) in dec sub push insl mov xor pop pop ljmp clc xchg repz dec aas mov jbe lcall adc rolb mov arpl add sub push xchg sub adc js loop xor je fildl sbb (bad) pop call fistp lock (bad) outsb lahf lcall mov sbb dec shll or push pop jmp jb out cltd push jb sbb add xchg dec adc (bad) pop mov mov pop decl jbe mov insb or out jns jae stc setne callw sub push mov add out imul icebp cmpsl ret out or mov out mov jp ret shr test out push sbb sarb lret scas ja lret test ret mov int3 xor adc lods xchg mov cs iret cmp cmp lods imul fistl addr16 pop test sub xchg movsb cmp xchg test scas out xchg cmp sbb out dec add inc out in std sub xor jecxz loop push clc add out lcall shl (bad) fwait sub nop imulb (bad) adc gs data16 xchg out sbb (bad) out xchg lret pop mov (bad) in mov jb out mov (bad) test jmp or leave cmp or dec out ja inc imul mov shrb cmp subl popf jg pop addl ret shrb mov mov loopne pop cld adc into in sti jbe cmpsl iret push sbb cmp test pop aas out sub ss out lahf mov pop fbld cmp xor xor out insb shll cmp out movsb xor repnz icebp jle out out leave (bad) mov adc in mov sysret lods and ljmp cmpsl add (bad) jp inc dec aas test xchg out stos mov nop or and jbe push ficompl adc ljmp mov pushf add outsb and and jae out add ret out inc mov outsb mov (bad) out call in cmp out cwtl test jle mov pushf push repz jmp dec dec mov or and roll pop enter fbstp out xor dec or pop cmp add jmp das out cmp push xchg inc jnp pop out loop ss out je or xchg outsb adc add mov pushf sbb mov loope mov xchg mov lds sbb mov cli out orb inc cmpsb cmp lahf out aam mov dec (bad) fsubr repz test out imul aaa lds or mov outsb out sub daa loop cmp xchg adc ljmp dec out test add xlat lret fsubrp ds jb out imul mov dec jle decb xor jo pop insb adc lods stos jp loop es mov fdivs cmp negb pushf dec mov fs pop popa out xorl jae std fwait (bad) cmc push dec dec cmpb out out sbb loopne mov lock mov test sub sub pop mov jbe and add unpckhps (bad) shr lods dec mov aas cmp js stos loope movsb jbe dec out fstpt adc jne enter dec adc and je sarb out imul lds cli inc mov pop sub movsb iret lods lds jbe imul mov test xchg mov loop out push dec lock sbb add data16 cmp stos out or sub mov js sub (bad) out pushf dec outsl ja jmp movb (bad) das scas mov in ljmp push pop jmp ds fisub xor (bad) mov aam fdivr mov mov fsubr pop out push es aas jge subb sub insl mov inc mov inc xchg (bad) (bad) jl int mov dec lods notb or ret lea lds jne xor or lea out jl mov insb pusha hlt in push inc out push mov sub add out sbb (bad) xlat insb pop push cmpb jecxz add mov and shrb mov imul lock (bad) aas (bad) mov sbb xchg jb sbb gs stos popa ljmp out lods (bad) jae push (bad) lahf sbb lock xchg jo ret add push cli out push loopne incl clc cmp or sbb lock sub cli stos fistpl into sbb jl xor (bad) sbb insl data16 out loop ljmp hlt sub adc mov mov sbbb out jle cwtl dec (bad) dec pop iret xor sbbl push outsb jl mov mov ss out cmc xchg pop cwtl lods push leave or aas or out and lcall (bad) or out sbb mov clc lds retw and push mov xchg mov ficompl xchg out jo mov add mov sub insl out adc push daa push subl dec iret pop test pop mov add and mov out sarl loopne enter sub (bad) je xchg sub imul imul sub cwtl pop jbe bound pop adc adc adc insb xchg push mov insb sub pushf sub mov arpl pop push sbb gs dec mov push sbb out mov (bad) xor sub push xor fnop inc jmp mov jo jge in pop sbb pop lods jmp jb sbb xchg adc leave (bad) inc sbb and fcoml or scas mov in mov cmp les sbb ljmp shlb mov out adc (bad) xor sub xor inc sbb pop ljmp out pop cmp (bad) (bad) pcmpeqd or pop frstor in mov pusha jmp inc xchg shr in loop dec test (bad) js dec out nop ret jl sbb mov pop jmp jbe nop lahf out adc out dec push out enter cmc imul je (bad) iret js jns in xlat addr16 imul in xchg cld out dec inc movb stos dec (bad) mov popa pop mov (bad) mov xchg sub fnstsw out cmp pushf mov arpl jne xor fucomip sub mov mov popf sbb (bad) and or xchg and xor mov lds (bad) sbb and jge in sub pushf out sub cli ret push sbb leave shl jbe in loop mov in xchg fstpl insl out and xor mov aas je int3 div std out jo loopne sbb test push push add adc inc subb addr16 jnp sbb fisttpl xor jnp sub add xchg div jle sti mov dec sbb pusha mov test lret inc sbb add out xor inc (bad) dec dec lahf in xor cmc out loope inc jmp inc mov pusha ds cmpsb mov out (bad) push mov icebp imulb dec and push jns out repnz sub mov sbb pop in mov leave push lea ds movups mov int out jae popa out jnp aad and xor jle imul ret fsts out inc xchg or (bad) out mov push enter aaa jge flds shlb mov imul mov ljmp (bad) ja in or (bad) adc or stos bound insl pusha movsb and inc mov push (bad) pop adc mov jno out cmc (bad) push mov sub aaa mov pop mov out das and test hlt mov sti stc add pop popf mov push or sbb jns addl stc out jnp mov push push hlt add cmpsl jmp mov aas icebp adc (bad) fsubp dec inc dec add xchg cmp and xchg inc je fwait inc out mov in test stos xchg in adc xchg data16 cltd ror repz ret scas mov rcrb dec ret ds cmpsl (bad) std lcall dec clc movsl add out ret movsb mov ret pop out je cld dec jno inc pmaxsw push iret enter movsl aas push in cmpsb lcall pop out jge mov pop mov adc jp outsl loop clc (bad) mov pop (bad) mov (bad) in lret inc push add xor lcall cmp aas sub ja pop out jb inc jo inc push scas (bad) mov out xchg cmp jb xchg (bad) scas dec pop ljmp out into mov jmp (bad) fimul adc lods xchg rcll adc jge cmp insb add push pop xor (bad) shrb rorb rolb cs lret mov cmp out inc enter pop ficomp sbb dec or loopne and jg or push bound add xor add out ficomp sbb stos xchg xchg pop cltd dec mov mov add out pop adc dec jns or mull stos lock jg (bad) test sbb mov fmull mov mov sbb inc hlt pop mov out xor jne out shl jmp addr16 push loop test add mov cmp mov out mov dec mov in sbb outsl out xrelease shll scas mov ljmp out (bad) push xor fiadd pop xchg orl cmp pop mov bndldx out test out int lahf sbb add fs lods out movsb mov out xchg fsubrl (bad) dec push fxch add lock pop add ljmp inc data16 push pop jns out mov insb (bad) add rclb ljmp mov fcomip sbb pop pop or sub ret loopne xchg pop ret push fwait lock addl icebp xchg inc jae addr16 xor mov dec in (bad) out lock out dec sarb jle ss repnz cmp jge bound sbb cmpsb sub aam adc lret popf pop out (bad) jle loope and jbe cmp pop (bad) movsl cmp lret xor add inc jno jno adc aas shlb arpl add push daa (bad) mov inc loope xchg in push mov mov std sbb es adc movsl stos fcomip lods bound sbb or and or fisttpl out sub insb mov xchg adc lahf sbb (bad) push adc mov xlat fisubrl mov push push cmpsb pop add in jg jne jmp inc aad loopne lea pop loopne mov jp jmp jns mov xchg out pop imul les (bad) xor pop lret out out mov (bad) rolb sbb or jb pop sahf pop roll add out scas out aas inc mov pop repnz out mov (bad) adc jbe mov in pushf outsl (bad) fdivrl std fwait dec jmp in and jmp fs out lds mov ret out sbb push out fistl loope jnp enter repnz mov bound mov sub adc pmaxsw pop ret cmp cld adc testb out pop cmpsb in xchg mov or ss adc fs fiadd out popf mov ds (bad) lods xor int3 popl out sub pop je inc pop (bad) (bad) sbb adc out push mov xchg (bad) xor adc pushf jge and lahf xlat or out aaa sub mov movsl xchg in or addl out add and cmp fwait push xor push sbb pop adc int3 popa mov out dec ret in aam mov inc jns (bad) fldenv (bad) fisttp and ljmp out dec hlt ja ss bound fisttp or mov pusha enter mov sti adcb cld sbb inc lret sbb dec jl bound mov ficompl mov ret push or arpl jns jge dec sbb xlat pop out mov mov ja jne adc aad pop sbb cmpsb insb mov je popf es xor adc mov xlat inc jnp push jne prefetch aad or dec xchg pop aas dec enter ljmp and (bad) xchg inc nop mov sbb pop jl mov (bad) in jb xchg rorb (bad) fbld xor imul sbb mov out xchg popa mov (bad) sub fimul ret sbb out pop jp cmp push pop aaa repnz pmaxsw sub rclb jge push (bad) int xor pop mov in (bad) cli sarb push out cmpl pop xchg sub mov jecxz shl add push mov mov iret stos pop repz loop (bad) lret loop lret inc sub lea in enter pop outsb roll scas stc arpl sub sub out jp scas stos shl insb pmuludq iret in popf jno imul out add inc mov cli mov icebp iret mov adc push jmp mov int3 cmp pop push (bad) enter add mov out add jg sti pop mov push push (bad) dec scas lcall mov stc shrb out xor jnp (bad) out add vmaxss (bad) jb sbb lods cmp and mov out arpl inc inc clc lret and jge out je outsb pop cmp rolb dec lods insb push mov dec xchg idivb shr cli sbb jne dec cmp mov add test push add (bad) out insb jo jne aad (bad) out aas cltd call pmaxsw pop mov stc out scas test dec sub and mov add or mov (bad) jmp (bad) mov sub jmp out movsb dec out jns jp cltd mov out mov jno push and insb add ud1 xor hlt loope in imull pop popa (bad) insb fwait imul iret repz push or (bad) (bad) push std xchg nopl jp scas jns adc inc sub dec repnz loopne (bad) incb jmp aam fstps cmpsb in call in out push push mov shrb inc cmpsb pop out enter sbb add cwtl sahf mov and and and add call sbb fidiv out xor cmp out enter std inc lods xchg fs sub das jne cmpsl lret sub das roll data16 push in ret push out sbb in mov dec (bad) pop aam je in adc loopne jnp out fimul pop mov aas jbe mov xor cltd sbb mov rol movsl dec mov nop test call out jnp push inc or ret sbb pushf and cmp mov or js ret into ljmp push (bad) and (bad) rcll lret das scas push rcr in mov cmp sbbl ljmp cwtl jecxz lret arpl out xor in jle and sbb mov cmp out dec pop push enter or xor xchg out and add out gs xor cli push jo fs popa fcompl add adc sub out inc and sbb roll adc mov xchg lret jno cld and or push popa (bad) sahf imul pop jno cmp lods sbb imul adc add out xor out xchg mov pop cmp (bad) pop cmpsl bound mov ljmp (bad) das (bad) jge out imul in movsl popf xor repnz mov dec imul mov cmp jo imul cs mov inc inc mov call or lods repnz mov fwait add jnp sahf (bad) push jb nop jns push sub adc (bad) je xchg and pushf out jg push mov mov out add inc sbb out adc cmp movsl ret out and dec js mov fcompl das pushf inc lret out add push in push cli inc push iret sbb inc lods in adc mov adc nop dec adc or out out and in loop (bad) pop mov xor mov and ret lret stos ret fucomip push mov adc add lock int3 xchg push jecxz sti or pop jb push movsb adc xchg rorb cld test pushf adc fsubs mov leave imul push les out vpaddusw lgdtl fcom push fcoml rorl popf (bad) xchg iret fstenv sub rolb daa or xchg xchg cmp je jo push mov (bad) out fildll stc adc not mov out inc test sti xor pop add cmc sbb out int3 add push push mov mov and out xor loop sti outsl mov push lods ret sbb dec inc and insl jmp xchg fldl arpl cmpsl pop in dec pop in imulb sti clc pop inc cmpsb xchg out les outsb sub icebp xchg push loopne mov push (bad) mov fcomp in and test sub dec scas ja imul out ss dec in stc jb popf in push adc out iret loope inc sbb stos lods cmc pmaxsw lods mov sti rclb pop sub pop shr xor scas add pop adc xchg jno shr xor lret xor pushfw lret ror cltd push pop push (bad) loopne aas cmp push es push mov out jmpw hlt jnp inc out cmc mov lds cld insb loopne inc je dec popl mov ret in xor cmp xor loopne cltd pushl (bad) jbe call cwtl add jl (bad) aad aaa pop pushf add (bad) xchg ret mov rol jge xlat loop or lea in mov out mov mov pop out mov pop test or fst inc sub test xlat xor pop dec jmp out push fidivrl cs mov add jl jne inc in xorl sub dec xchg lret add jge (bad) pop (bad) push sbb cmp ficomp inc out movsl inc gs outsb add out inc es cld mov xor cltd rorb fwait mov add and pop jnp mov out lods push movsb imul loope out inc jmp mov out cltd jle add mov fcoms cmp jmp xchg out into jl cmp sbb shrb data16 ja sbb sub cli loop and and out rep cmpsb insb (bad) repnz mov xor sahf adc inc out jl cmp jle and fwait aaa xchg cli fcoml das sub adc jno push mov cmp mov lds out out addr16 pop add enter xchg rcll aaa call jnp imul mov int3 mov addr16 out insl ljmp out cmp test out sub lea sti and sub xlat out dec fstpl add mov gs int3 movsl mov sbb (bad) inc in stos lods xor movlps aam sub mov inc or and mov ret cmp mov enter int adc cmp xchg out sarb mov inc cmpsb in sub ja adc mov ds cli imul mov imul sahf (bad) cld dec mov xor scas out mov xor cmp ss enter cmp cmc and mov adc or out out pop mov push mov insl push ret imul stos out pusha add sub or push in repz or xor inc cmp mov push mov out daa aad ss push adc dec sbb sub cmp sbb sahf daa dec jecxz xchg xchg jne std dec addl sbb pop outsl insb call out ret sahf mov dec das and sbb xchg lock inc out ss aam inc xor sbbb adc ret jl cmpsb mov pop (bad) jne or imul dec add into mov shl (bad) bnd mov sub mov xchg data16 out ljmp dec out and cmp xlat out es icebp iret and out mov loop pusha out das xchg cwtl lea xchg out push insb ds sub pop cmpsb out movsb push dec push outsb sbb out cli xchg outsl sub out js adc add pop cwtl (bad) pop out repnz sub adc jle sub and (bad) out push (bad) pop dec or xchg test insl sahf out push sarb pop pop dec push (bad) sbb in sub inc rcrl data16 and dec in jo sub out and jecxz movsb (bad) push lret push push out std jae (bad) loope sub out xchg xor mov js testl mov mov mov cli cld jbe push add sbb scas pop push cmp pop out int ret (bad) sarb dec addl mov pop sub jns xchg lret out pop loopne ljmpw loope jb lret xchg and fsubrl mov push fwait ret in (bad) out mov addr16 test out pusha repz sub inc (bad) std dec out add dec enter mov lock sti mov ss insl xor inc xchg pop push out outsl cmp cmpsb (bad) jecxz out cs sub ja or dec aas jae add sub xchg jb repz inc out xchg xchg and stos xchg mov xor out out out jge pop jno adc pushl (bad) fstpt aaa out pop sbb or inc mov out push sahf outsl jb sub out aad iret js jbe jo imul lahf aam sbb clc loop bound in mov xor jecxz loopne jbe out mov mov call notb hlt and out lret cmp dec mov xor insl push (bad) lds xchg jmp iret ficom mov out dec jae imul sub ss jle popf mov divl lods pop dec or mov repz punpckhdq fs xor add mov fwait sarb (bad) dec xchg jmp mov or loop aam insb cmp out pop cld dec cmc xor and add psrad int3 ret out pusha jne push sub data16 cmp arpl aam push fldz outsl out rorl jecxz movsb shrb sub imulb or lock iret xchg jo sub out jnp xchg or push jbe popf adc mov dec fist cmp push (bad) shr imul xchg sbb out jne cmp enter arpl js sbb imul les in push std repz pop add movl hlt pop xchg lods inc jmp pop out divl adc imul jl push inc out (bad) cmc (bad) (bad) lahf je adc dec popf aam call jno inc dec xor and in cs (bad) adc cmp int add fucomi xchg dec xor ja dec or ljmp pop loope scas fmuls out imul (bad) pop pushf mov movsb xchg mov stos sbb imul or lods jmp das xchg sbb ss pop iret mov popf cmp push (bad) cmp dec jmp mov cmp (bad) xchg mov inc lret out mov call ja (bad) dec lods sbb fbld notl lock insl cmpsb (bad) out lret adc lea out insb dec cmp add popf aaa fucomip ret adc (bad) je les enter pop insl mov push dec daa das loop shrl adc out sub cmp push mov push out push mov (bad) hlt scas imul (bad) lret jg mov call cmpsl fs pop (bad) mov sbb test mov nop out mov (bad) out call scas cld fwait out enter lea in sbb add mov fild aaa pop ljmp and ja sbb mov ljmp idivl jg xchg fsubrp lret adc or rcl cli adc pusha or mov sbb rol lock (bad) in adc sbb mov fwait push inc (bad) xchg jbe sahf sbb bound cmp (bad) pop test push adc mov mov mov in jae (bad) xchg inc lds sbb aam (bad) into or push negl cmpsl aas out fcoml out cwtl add xchg (bad) jmp out xor loop add out cmp scas add loopne imul out das lock mov movsb scas out dec sbb add inc out inc pslld fistl lret inc xor out fisttp mov out or pop bound std adc jge scas fbstp cs inc out (bad) cmc xor xchg (bad) xor sbb orl jne push fucomi pop pop cli sbb lock jecxz or sbb jg movsb bound hlt mov fldenv in cmp sub jp (bad) (bad) in add pop pop xor or imul out cwtl mov mov push mov data16 add mov xchg out neg mov test out lea loope xor cmp mov dec push repz or add fimull push mov sarl pop aas mov pop je dec adc and fucomip sbb mov imul xchg loope imulb sbb push cmp loope jb cmc mov (bad) mov sarb sub pop (bad) mov aaa mov pop in add cltd sbb out dec jle xlat insb cmp sbb cmp jecxz push sub ja dec sbbb mov scas rclb out mov iret jp and pop push dec in sbb xchg iret add inc jnp xchg push add out int bound ror popf aas mov cmc ljmp and push pop add loopne incb sub sub out ja rcrl pop out mov and std mov out sub xchg adc xchg inc jno sub out mov (bad) in out das mov adc sbb call mov bound cmp pop push jmp in dec (bad) pusha aas pop stos fisubrl out or jp movsb (bad) xchg out jbe gs rclb push imul enter cs cli sub sbb mov fstpt arpl out dec movsl mov fstps mov cmp xchg out xchg iret jl pusha inc jmp (bad) clc cltd xor sbb outsl mov pop and push xor sbb push out out adc mul xchg ret inc out mov mov shr sub xor out or fwait dec out jl push xor faddl out sbb mov mov or rorb movsb out push adc cmc out inc fmuls mov mov cmc push sbb sub inc ja and nop dec push jl mov roll loop icebp jns (bad) push xor mov js push outsb push and out cmp jg data16 cmp leave test dec ja lock lret xor jb les mov jge sub cmc xor mov dec int3 iret mov xchg jl and cwtl out jns mov cmp das mov jecxz mov pop scas fdivl sbb ret shr cmp xlat push sub shr mov ds out aad adc mov xor lea xor push and out es aas rcrl call out xchg pop rolb out mov sbb pop inc and cmpsl ljmp pop cs push push xchg jecxz stos sti addl loope sbb pop sub stos ret jnp,pt adc adc clc in lea and or jbe es push popf out out mov outsb imul cli xor aad out inc ljmp cmp movsl xlat push and lret pop add adc xor mov shrb bswap pop mov or stc addr16 ljmp cmp mov popa out cmp xchg pop sub xchg data16 lahf stos xchg out or xor mov xchg jb fild pop (bad) out les push repz pop or movsl cmp call leave ljmp out dec icebp js and in out lods arpl mov shr mov jmp out xchg int pop stc ret sysexit pop idivl add mov out aas cmp rcrl jns cmp mov xor int3 in js orb lds inc sbb sbb orl or icebp imul (bad) repnz out mov jo sub push lods leave loop xor aad cli sub aas or rclb dec repnz jbe fbld icebp dec out gs frstor push push or xor or icebp jmp hlt lcall mov int3 or pop sar je pop test push es ret sub jmp or andl insl frstor leave out orb mov shr or jge push and or add adc adc cli cltd lahf ja push push lds ret out mov aas pop (bad) fadds repz ret subb (bad) insb jge inc adc out dec in aaa jmp aam (bad) (bad) sbb push lahf mov stos enter jo fistl and stc out pop jb int3 stos add mov sub mov xlat ja daa aas and stc push mov fnstcw into sbb inc out inc js cmp outsb stc out test bound mov cmpb out cmp mov mov sub push dec adcb out ljmp call mov bound movsb fidivr loopne aas mov jge es (bad) dec out std repnz push rcll call das or retw mov (bad) jbe out xor adc not mov in and push jg out inc or stc lahf dec cmp decb sbb push in and stc lret inc ret lcall pusha negb pop popf mov sti mov push mov mov push mov sub (bad) testl cmp fs fsubrs (bad) push dec (bad) push push sahf neg outsb mov lret push dec out fldt in out int3 xchg jns clc add (bad) les out and mov xchg out push popf jmp cmp fidivr out cmp pop popa pop mov pop sbb cwtl addr16 sbb outsb in loopne or into jg mov imul inc arpl movsb lret sbb mov push pop inc xchg push daa testb dec or dec inc jns mov add pop jg mov inc into hlt mov out sarl xor sti insl out dec lret xor pusha ja cmp aas lea std out xchg pop gs push out cmpsl add cld sbb ror fnstsw fucomp sub xor adc adc jae xchg mov inc add sub inc cs xchg test xchg movsb cli shll add out or lds jge mov xchg xor lahf lock inc out mov cmc push out xchg scas mov in and imul loop adc fldz sub fbld cmp adc or out das xor and jb sbb jecxz out sbb fisubrl leave inc fldcw jge cmp xchg pop je dec sbb idiv inc mov add jle adc jp pop test lds ret mov stos sub or fisttp (bad) mov mov inc out cs xchg int sub out jne cmp mov (bad) out (bad) lock adc adc add add fcoms (bad) xchg aaa out push sub sbb arpl aaa lcall pop mov sbb ljmp out dec test adc cld mov pop or jae add bnd lods and enter sub jne lds cltd cmp xchg fmuls jmp std cmc inc pop cmp pop test popa in jne sbb cld fadds cli out mov xchg stc xlat mov arpl pop xchg lret pop scas adc pop out daa das sbb es push fbstp jae xchg lds add and mov in or iretw mov andb imul in out xchg sbb sub cmp mov jg xchg jmp bound in aad push pusha out das fstpl out mov je ret mov cmpsb in out fidivr mov outsl xor jge loopne adc jg in inc popf xlat ret jp adc orl movb fild add in push ds cmp out lock iret cmpsl (bad) jo push out stos jmp icebp mov inc xchg or or push dec mov hlt je mulb xchg or mov add imul mov call jns gs mov rol popw adc enter mov pushf xor sbb jb into mov (bad) push pusha ljmpw push cmpsb inc popf out subl lods and cmp cmp aam or and test pushf iret mov das fdiv outsl sti rcrl out fist pop dec jbe ret xor (bad) int sbb jae popf clc sbbb xchg int cmpsl fldt shll mov sub mov push es mov mov pop (bad) mov and pusha nop rol test out mov out push lret cwtl fldlg2 aas ret out mov shrb cmp std adc adc jbe cmp iret pop xchg lea sbb out and and fnstenv mov (bad) out out int repz add pop loopne and imul sbb xor aas loope xchg out push out pop test cs out dec dec or fistp inc sti aaa out aad xor ss out jb pop cmpb adc sbb jae sub mov test adc out inc mov mov mov adc das dec out push lods and xchg pop or xchg negl push aas rolb out pushf mov and inc inc ss sar jne out xor add stos sbb in outsb xlat mov ja in insl std dec test push dec push mov sti xor outsl nop dec (bad) (bad) fs fild inc adc dec loope sets cmpsb sbb out jle inc in jp pop fisttp xchg inc cli mov clc cmp cmpsl xor jge mov pop ret in push pusha insb xor and mov pushf scas inc mov jae and es (bad) repz shll sub out or mov (bad) sbb jl ret insb lock out inc shrl js add (bad) lcall sub mov pop rcll pop sub andl out mov aaa jne pop adc mov mov stc (bad) repz (bad) ja inc and mov movsl hlt jns or out sti jo dec fwait lret cld xchg out movsb es outsb in in pop pop test popf adc in ljmp pop and fmuls jnp add xchg lods enter dec cmpsl lret and loope cmp in fcoms call inc cwtl out cmc loop sahf dec sub fidivl push sub (bad) xor jnp daa jl hlt lods fs push cwtl mov movsb lahf mov stos mov test jle repz or add je (bad) pop iret addps (bad) mov imull cmp int3 xor call or mov xor sbbl icebp out nop notl out xchg fisubr out sbb lcall mov jne dec mov add jg (bad) movswl movsl rorb iret sub les fmuls push xchg out cs mov or sbb test daa or fcomi add cmp push (bad) lods jl decb movsb ficompl outsb inc lock mov push decb int3 frstor push imul (bad) cmpsb cmp fbstp out sbb jl fxch push xlat outsl sub cmp out push fistp ret adc inc add and aas fcmovbe rolb jnp mov (bad) (bad) xchg out jmp enter cltd (bad) xchg and jge iret cmp cmp mov inc dec mov jo and mov jae inc out out inc mov es out sub sub adc mov inc inc jns outsb pop sti xchg out insb mov cmpsb shrb sbb mov cmp (bad) mov pop (bad) jne out in xchg leave mov push inc nop jp ljmp fdivrp jecxz lds pusha lods stc fsubr mov dec fcmovnu out cmp popa pop mov lea out mov jnp xor push jge in push les stos or int3 (bad) data16 mov pusha out or je ss lock std adc das (bad) sbb out movsb pop out dec pop aad cmp or xchg loopne call jg xor inc popa loop jbe,pn mov sub mov mov (bad) out jnp cmp cmpsw inc cmp nop shrd out in adc fmuls sbb fildl pop push addb aam push adc push mov fnstenv scas out cmp ljmp sahf in jb loop jg xchg int pop imul test jge push cwtl mov sub scas scas mov cmp shrb (bad) or mulb sbb mov (bad) pusha mov lock jae sahf shrl aam outsl test lods je test icebp push fstl in (bad) and xchg pop dec pop xchg (bad) insb push shl int adc fisttp pop in sub ret adc pop iret push mov cld ja stos aas clc ljmp es testl jne mov in or mov (bad) imul ret iret popa mov lret push pop mov cltd out dec ljmp jns test jge lds addr16 sahf mov push jle jb (bad) nop int cmpsb outsl out and sbb pop xlat sub lock iret lret xchg loop lcall mov (bad) adc inc out mov mov mov call mov out cmpb push xor (bad) cmpsl dec in (bad) mov xchg pop lds jmp sbb stos outsl ret (bad) call mov dec push push out clc add pop push adc out dec lret fldl mov into mov arpl call dec out rcrb (bad) xor adc mov pop pop out mov call cmp popa repnz ret mov mov out sbb dec cmp test jle cmp stos adc stos (bad) pusha out pop xchg dec scas cwtl jnp movsl out or dec ja mov mov xchg out dec mov mov out xor pop mov (bad) incb cmp sbb push add in cmp add (bad) jns pop xor into lock out cs imul and js aad jnp loop jbe fs out push push mov inc add fldz xchg sbb cmp repz and test out and ja cmc test out cwtl xlat jecxz inc dec pop cli out mov jle push and inc out push outsb scas adc jmp addl jns add unpckhps (bad) mul shll scas mov lods jo bound fucomi adc pop loop leave imul movsb jbe xor mov add jecxz sbb ds outsb xor repz loop jae mov dec jmp push adc hlt xchg ret popf inc fild and bound out stos mov loop xchg cld adc push or pop pop xor jno xchg in ds out mov in jb jb sbb rcrb icebp fucom imul out (bad) jb xor out sarl icebp mulb mov adc mov enter das mov dec insb lods aas mov sbb lret jbe or fwait out test inc dec fsubr in mov xchg imul fsubs jmp pop out das mov pushf jnp in xchg mov jmp gs or out mov je insb (bad) push call sbb jg mov mov aaa and mov mov movb push mov out daa stos xchg jb mov push in mov sbb cmp loop push mov out lea es ljmp pop lock sub insb jbe pop pop push notl add jmp xchg mulb and mov (bad) loope jle ret lods loopne out sub es fisubr notl cld dec pop and mov (bad) popa out add adc xlat out mov pop pushf mov push xor add imul subl dec xor xlat out pop (bad) pop sarl (bad) xorb inc cmp mov (bad) repz (bad) clc lock or xchg imul rcrb movsb es ficoml loopne ljmp xchg divl mov aam pop lds clc stos stos sub cmp push push add push jecxz insl shr or pop mov sbb negl outsl jne movsl ret bndstx outsb out adc cmp leave test sub cmp fildl or xor jle or js mov or stos jno push dec aas shl imul ds fdivl loop adc ja movsb idivb xchg xor aaa mov (bad) aad (bad) jg (bad) mov inc jno stos insb out or shl pop inc (bad) ss in cpuid rcrb negb out sti jg mov pop cmpsl push inc push imul sub ret mov nop push or clc pop xor loop subl sbb out mov jbe clc out jae arpl sbb lods out add mov out adc jp out xchg sub repz roll mov incb mov jae push out mov add fisub fmull call inc outsb jmp push jae fldcw out mov xchg push out enter iret cld add mov jnp adc adc clc jb sub pop cs hlt loop pop cmpsb iret cmp std mov imul xor dec frstor mov cmp enter or daa pop aas xchg out fisttpl push ja cmpsb in out adc pop div jecxz outsb imul mov scas je out call (bad) aaa or repnz push inc xor add fldz (bad) lds jg aad lret out movd enter out xor andw jae (bad) jmp mov cwtl out xchg mov xchg popa xor jae mov hlt pop lock and in cmp (bad) jb in cwtl mov fcompl outsb mov es jg pop jne pop out push and test repnz sbb adc fstpl or and dec xchg test sbb jmp and imul aas jl xor mov (bad) mov and pop out ljmp pmaxsw pop popf pusha roll out fadds add lret mov dec imul roll out jns jmp cmpsl out pop pop dec push int dec out xchg in aaa aas sub pop shrb jmp (bad) out dec jl stos push out popa int3 xor and push and test iret inc outsl inc jne fbstp outsb out pop and shlb and out ficompl je xor push inc (bad) push push fcmovnb andl pop (bad) in pop fbstp into div loop andb mov subl ret rcl mov aam dec faddl les out sarb fisttp fnstenv out or fidiv loopne movsb out add adc cmp and out pop je shr fwait into hlt mov jbe jecxz push out or (bad) mov aaa dec icebp mov sbb xchg dec sahf push ficom (bad) out (bad) out push xchg stos adc ds shr adc or push add lahf fbstp xor out jg inc pop sub cmp jae arpl outsb incb icebp xchg mov lahf out pop mov sbb out sti push ss xchg jg jp add cmp fwait out adc cmpl das es in outsb dec out sbb leave ffreep stc dec or cmc inc pop mov sarb enter pop mov cs out xchg arpl mov push sbb hlt xor pop fisubl out popa fwait dec pop pop xor sbb cmp push ss mov push push jmp mov push movsb stos xchg es fwait cmp jmp scas mov ja xor cmp movsl mov stos (bad) adc int3 push fidiv out (bad) mov (bad) popa imul add lahf out sbb loop mov jno test scas xor ss icebp cmp sub sub in test xchg out in dec inc jae sbb adc in out and push stos rolb punpckldq sub in jb out stc inc mov sbb cmc cmp inc mov (bad) sbb pop mov add push push fisubr adc cmc dec push popf lahf fdiv mov movsl es pop loop inc repz popl mov push push dec sub cmp (bad) stos mov jp sub lret scas test (bad) push loop push pop shr xor jb out pop insl daa or fiadd jns jb push adc int3 scas out int3 out decl rorb out popl mov sub into pop test sub sub stos in push (bad) xchg jbe fisttp sub ja out cmp add and fbld sub xchg cltd out pop movsb inc inc adc mov jp repz push in or out cmp fistpl push or daa sbb push pop les scas cmp in mov (bad) shrl enter lock cli sub mov insl xchg or out (bad) cld pop cmp sub pop ljmp cs ds fisubl ss fnop (bad) push fmulp psllq mov mov jb mov or out mov add push (bad) lods adc sub addr16 ljmp je cs addr16 push xlat mov push cmp adc out cmpsl je (bad) outsb add adc repnz xchg jecxz sbb pusha add sbb ljmp push inc pop cmpsl out mov push mov imul xchg fldcw in hlt inc test out push lods repnz out lcall sbbl (bad) movsb jmp mov pop pop outsb psadbw out cmp mov inc out mov fldenv out pop jno out insl cmp divb es (bad) out push popa aas ja in data16 out in xchg es (bad) int out repz mov or adc inc pop out inc stc pop fcmovne clc aas stos out shl (bad) mov xor sub outsl jnp mov mov pop push loop sub movsb add sahf jp push sub (bad) out pop jo insb lea pop lods pushf outsl sti add (bad) mov jo sub inc test lret daa push in dec sub or out int3 push mov movsl sub sti adc dec mov fdivl pusha (bad) adc inc rcrb cmpl mov int shll jb nop mov mov (bad) sbb sar cmc out insb roll xchg (bad) mov loop pushl add ret out dec sbb jo and push out lret fcomps xchg imul push pop cmp push jnp shrl out loope (bad) enter lods out aam mov sub add notl call mov mov mov dec pop or push and sbb ret out dec ss mov movsl lea (bad) imul in cmc sub cmp out sti adc movsb cwtl xor and inc sbb dec inc hlt (bad) push push mov in inc imul inc (bad) (bad) data16 pop mov jno xor dec dec xchg (bad) pop icebp cmc and xor mov or outsb loope leave xor aas cmp out repnz dec clc mov jbe or ds inc out icebp lods inc cmpb out mov mov pop jp outsb adc inc data16 (bad) cmpsl jmp into bound and outsb cmp or insl lods cltd out insb mov xor push xchg shr aam sub out (bad) dec fistpl (bad) fsts fisubr pop clc out hlt mov jae loopne lea pop pop and lcall push pop stc xor jge outsb sbb clc into mov sahf jmpw popf fldenv jle aad push cmp mov in cmp jp,pn jecxz cmp (bad) add mov (bad) js inc in dec out xor or ret xchg out mov stc xor push push xchg out jle gs jbe mov iret cmp add xchg das xchg jecxz pop push gs push daa out loop jmp mov xchg ss push fistp repnz in mov out and pop lea sbb inc negl xchg cmp pop addr16 mov inc jo jg ret pop jmp cmp ud1 out push mov inc add push ja add out das dec or pop out lea test push cmp push xchg xchg out and mov aad out movl les enter lret stc flds pop out xchg cmp jo stos imul incb or ja repnz (bad) loopne xchg stc mov in push lods hlt jnp jo lods loopne add out mov sbb push out push dec push add (bad) push ljmp arpl (bad) out sarl mulb out sahf popf sub imull xchg jae (bad) sub add pop packsswb jno sti out mov outsl imul push jo lods inc xor stc (bad) sbb push pop loop sbb arpl dec sbb int3 fwait xor xchg or jl (bad) jbe dec call xor cmp push xor or ss je outsl movsb out lea aaa mov sub out pop mov js pusha mov pop out outsb ds imul fs aaa fdivr out adc adcl cmp movsl sbb ja aam aaa or (bad) and jns cmc pop push punpckhdq ljmp push loope sahf cmpsb sub popf fisttp pop sub xor push dec out dec std and out dec (bad) or sti and or lret (bad) out mov out jo ss aam pusha popf fsubs imul iret movsl ret adc mov add mov (bad) clc fsubrs mov out test push test push push mov in pusha repnz (bad) out or mov xor iret out pushf mov mov inc cmp mov outsb lret fs out cmc js inc mov icebp lods jne repnz or dec nop cmp sbb inc in je ficomp jp fdivr jl (bad) in jne ljmp mov jmp fstpt into cs sbb bound push mov addr16 inc xor add ljmp adc out lcall and adc cmp or fisubr inc out mov dec xchg adc add fxch loop into adc lahf pop repz out out insl fisubl xor out loope sbb pop jbe jge jecxz,pn cmpsb imul sbb adc mov fcomip inc inc mov cld fidivr lods movsl iret fsubrs adc loop int3 pop pop xchg (bad) or in mov pop jbe (bad) mov mov xlat out jl xor mov dec mov mov cmp int (bad) stos ds in scas mov loop cmp mov xchg lock xchg fdiv pop pop aas jle fcompl pop out out push pop divl bound inc jns cltd pop push insl dec sbb sub mov push inc data16 (bad) jns jp into xchg out mov sub adc inc in js test test or (bad) test sti loopne jmp fnsave mov test lods jle sbb push out jecxz dec je (bad) les mov test sbb out xchg jl adc and sbb repz decb out sar js scas jnp and pop test xor mov sbb mov sub out call jb subl setns lcall in and sbb fdivs fstl xchg imull inc out pop inc push out imul (bad) jo in pop les test rorl (bad) mov xchg push mov add add jge pop cmp arpl icebp lcall dec pusha les mov cld rcr inc sbb mov sub adc jl outsl sub sldt lret pop ret in je out fwait test loopne xchg xchg xor xchg push sub jmp xlat xor sub imul ss jbe lds mov aaa add mov jne sub mov into sub fwait sti popa pop roll sbb pop iret jne outsb inc cmp and adc ja xchg lock sub imul cmpsl test iret pop sub push in add (bad) hlt std mov out rclb add in mov mov stos and jb out aam lea mov in dec adc xlat and lods sti (bad) xor out cmp push jnp and xchg cmpsb ss fmull pop fildll add dec (bad) hlt jecxz outsb mov mov sbb add je pushf movsl and jle aad jne out mov push in push psrlw rolb ss add xchg xchg (bad) test test add xchg ss mov fnstcw jae (bad) out test sub or out add push sub inc mov inc cmp cmp push pop xchg lret mov (bad) ljmp pusha roll lods cmp or xor jbe imull rol jnp out int3 cmpsb push push push or adc pop xchg leave and aam mov dec mov out jno cmp in pop xchg ljmp jbe (bad) mov gs lods add push ret adc (bad) out xor mov out add dec inc add xchg lods out cmp and out (bad) mov stos add jo mov je add out (bad) loopne xchg mov aaa mulb mov out repz add mov test roll inc lods push adcl mov lock pop jmp in xchg leave add notl and pop enter adc jno cmpb xchg mov add inc mov jle jp and ss sahf mov cmc jg jle cmp push insl popf dec imul iret (bad) outsl movsl outsb loopne fbstp rol sub insb xor push out (bad) jno movsb jo mov xchg mov adc out jbe sti stc push push std fucomip (bad) fldenv daa scas (bad) jns loope aaa add cwtl addr16 mov repnz mov xor xchg sub in enter test sbb sbb pusha fucom pop mov fdiv adc outsb clc je fwait (bad) push shl stos imul pop xchg push pop push pop pop andl push or push xchg shl mov loop pushf gs and push sub mov jb aas pop xor das push sub and jp out sbb loope pushf out mov insl dec out cmp pop push out inc mov cli mov pop pop (bad) repz jecxz add jl fist push mov out or rorb adc inc dec and fidivrl nop enter and and cs adc fildl iret stc xchg push (bad) arpl xchg in dec xlat rcr std out mov sub lret shrb (bad) aas in call sub add in push and xchg jl js mov ss cmp sub adc and mov pop xchg daa mov jg jb sbb sub push ds (bad) lcall in pop shl xchg xchg out mov psllq (bad) test mov stos jnp pop ljmp mov sbb ds repnz pop aas pop mov in test int out mov lock out loope mov xor out add loop out mov in jl mov jge test xor xor fbstp sbb mov enter push sbb in add orl out out fidivl xchg (bad) push out mov xor gs out fistp or sub inc inc pop push in sbb outsb out sub dec cltd stos es and cwtl dec adc xchg insb cli out jge add out lds inc jl (bad) movsb and test push cs inc inc add sub push or (bad) jb lret sub iret scas push add jne ja sbb inc out jg inc adc push xchg fs int sub ret mov jg (bad) mov pop out and sub adc xchg sbb idivb dec movsl out add sbb mov push jo xchg and xor pop mov mov test rolb xchg hlt imul int jecxz cs push out jno lea shll mov aaa mov out dec cmp in out add or sbb pop outsb push push stc push pop sbb jae fninit in lcall call test andl or not dec push jmp cli inc dec insb adc pop push out and bound outsl pop push or scas jp sub int popf enter push mov sbb dec (bad) mov bound aaa out cmp push xor sbb lcall nop jg dec mov enter clc out es int dec je adc orl jne,pn cmc out jg mov aad imul call lret and dec insl cmp fwait pop jno lods test (bad) out cmpsb inc inc add xlat pop or fwait ss dec cmp out les and mov mov pop sbb cmc (bad) sti mov je jb call xchg loopne call lcall mov insb add mov inc es cmp xchg mov cs out jg pop add outsb sub mov (bad) loop lret (bad) lock push insl push and test jp mov mov lods and lods mov sbb inc jno imull mov jmp pop sarl lcall mov mov mov loope shlb in out jbe cmp daa and sub out ljmp (bad) insb es mov and fsubrs lea insb (bad) imul sbb mov in mov out jmp mov int xchg outsb add out inc aas mov in fs int out sub cmp popf jbe jae mov (bad) out xor daa repz out xchg lock adc loope mov negb pop ret mov jae out (bad) and fmul fwait jge out (bad) shrl pop xchg lcall movsl add out xor out mov (bad) movzbl shl stc nop cmp jns out fdivp (bad) lret out out fs xchg mov add daa jae and out xor loope repz int3 popf loopne mov (bad) outsl xor cmp in jb dec lret cmp and inc push cwtl icebp fisubl xor cld dec out jo cltd (bad) out addr16 js imul iret inc out xlat xchg (bad) xor push rcrl cltd push loop jp pop icebp cld push mov and push cli out push ljmp out lret test out jno mov inc lods pop cs ja stc loop insb inc in add push mov out lock or sub into xchg in add in out mov out test out jnp fidivr out jbe push repz (bad) adc or xchg iret pop out pop pushf xchg out jne mov test pop mov out je inc (bad) std mov pop mov (bad) dec dec loop push outsl mov dec pop sbb fnsave lahf out mov dec xchg or inc rol xor es test pop imul xor adc mov mov out mov mov repnz sarb and sub pop xchg xor ljmp and lock ret sbb out repz outsl ret rclb jmp add out cmp jp dec out cs out iret bound pop push dec andnps or cmp loopne xor into xchg mov (bad) push js pop rcl ljmp imul cld lods pop (bad) jg lock fs fmulp sahf out sbb movsl and out mov fnstcw adc lar repnz adc (bad) xlat pop rolb out leave mov sbb mov jle fs push cmp cltd mov bound out ffreep mov add movsb out dec data16 test sub dec aam jecxz cs es cmp daa es lahf loop fcoml push or cltd stc lret call xchg dec sub xor out leave xchg clc rcrb mov mov jmp dec push fmul cmp rclb out loopne rolb push andb mov addl out sub mov adc push (bad) jbe sarb sub adc aas adc scas ret fistp daa sub lret js adc std xchg mov or (bad) mov pop ds or fldcw out repnz cltd inc dec mov fucomp and xchg xchg pop enter cmc push out (bad) cmc stos fistpll mov cvtdq2ps ljmp cmp xchg or dec (bad) jge sub call mov and sub out mov push inc testl out cmp out subl or les mov ret mov pop cltd pop fstl sbb sub addr16 mov add mov adc outsb ds in mov jle fild out sbb adc jne fdivrp jae,pn cmpsl in fstps xchg push push out mov dec lahf cs mov (bad) mov in lods or lock in ds cmp out in lcall push jmp aam cmp arpl fcomi jecxz jo jl mov cmp xor mov mov pop loopne das or adc stos out add dec loop pop dec addr16 mov xchg int3 xchg leave sarb mov lock stos xor enter pop and imul xlat jmp push mov loop imul dec push fldcw test in fild lcall lret inc cwtl fs cli dec jge out sbb movsb add mov and xchg jecxz pushf enter mov rcrb mov jge cmp sbb cmp inc test xor test sub inc je mov jmp sbb int (bad) jmp icebp pop daa mov mov scas (bad) lods stos mul andl sbb (bad) add outsb jecxz mov sub mov mov dec or jmp cmp es lret loopne pop std ljmp jmp test mov and stc andl fmul mov add in or sbb call out mov ret stos jg mov addr16 call or xchg out pop jb outsl iret into sub push clc unpcklps and in cmp out mov imul push xor incb adc cmp pushf movsl je add adc xchg insl out add (bad) mov and xchg cs mov mov sbb fiaddl mov xchg out aad (bad) cmc adc and lret push imul push jo mov notb pop dec out and mov rcr (bad) cld ljmp jg mov mov inc xchg arpl mov mov lods adc mov insl pushf and popl xchg cmc ret iret stc cli loope (bad) dec pop sbb popa imul out jmp or out dec aad mov mov in out or pop out and sub lea sbb in or je sub jne adcl lret mov ret xchg sub dec scas xchg cwtl push jmp lea xlat jb and call adc jle scas add jmp inc popa int lcall inc and xchg lods sar sub ljmp out adc sbb inc loop sub insb mov cmpsl dec sub repnz insl sbb jl push xchg lock xchg xor adc cmp pop imul into mov and (bad) pusha lods mov lods push (bad) out cs mov push test sbb pop mov sbb in pop es mov mov (bad) xor lcall into out lea out imul lcall into push push jbe xchg push loop scas inc rsm push outsb mov xor pop xor icebp shll lods or lahf stc cmpsb ret loop in gs insb out jno add out jb adc cli mov in lcall out js outsl cmp mov add sub test out push bts psrlw loop loopne out or leave inc out ret add mov jp cwtl repnz test adc out dec adc (bad) je lods insl out nop or in cli push mov mov mov mov int3 mov addr16 sti pop fwait jo lods out popa mov shl popf pushf xchg imul cltd jno insl loopne addr16 fwait in outsb cmp aaa jae inc jg mov sbb adc insl ficompl mov mov pop push jbe aad std jmp outsl jmp movsb pushf inc aam out (bad) cmc aaa xchg (bad) xchg cmpsl (bad) out in mov outsl adc cmp adc test data16 lock inc or mov cli imul xchg lock int3 out fsubrl mov stc xor dec dec ja in dec pop mov cmp into xor enter inc add out jge mov mov out fs mov adc out dec push jg jmp lret out popa push fldl out mov mov lret out insb (bad) fistpll in es jb dec out sbbl push arpl addr16 ss imul call xchg add xchg addr16 ja cmp jl inc enter mov sub push inc (bad) cmc push popa xchg das ror sub stc push and xlat repz cmp out cwtl ret in sbb out dec xor popf pop cli jp out test mov movsl push shrb (bad) pop adc arpl out jnp popa fildll dec mov add or aaa adc xlat (bad) in aas dec jmp in mov (bad) pop cmp xor (bad) mov mov stos or xchg rolb pusha in out cli nop aam push imul pop push shrl out inc (bad) pushf loopne xchg (bad) jecxz movq lret xchg sub push movsl loopne aaa out out clc add cmp xor aad cmp mov leave lret dec insb xlat in and sahf loop rcrb cltd mov scas ss (bad) cli out out jnp xor or cmp pop lcall sbbl pop or out xchg movsl mov sbb ret out repnz imul dec pop (bad) leave pop mov lods int3 and inc jmp imul (bad) aas loop fisubr rorb cs neg inc test (bad) xchg int3 outsb (bad) push out ret push ds mov xor loop jb dec in loopne,pn inc test lds mov adc adc xor out pop dec and mov (bad) fistp mov out vandps out in cld enter (bad) adc lock or pusha mov xchg popa out repnz cmp out in leave movsl jle xor in addr16 bound mov or cmp cmp sti xor jg aam cli les mov popf cmp cltd and mov aaa sub test aas dec ror arpl inc stc dec fistpll out fstps pop int out loop cmpsb out mov fist arpl jno test dec cmp sub hlt inc std inc or xchg ljmp pushw adc lcall inc in pop mov iret (bad) jno loop movsb popf adc loope ret out pop xor add mov notb xchg pop (bad) adc into ljmp out pop mov lahf sti inc xor out pop std ret and hlt in cmp daa xchg push adc mov cmpsb or pop (bad) testb movl mov std out pop lods pop fs icebp iret stc jle mov pop repnz pop mov pop push idiv movsb push jns sbb sub mov add mov cmc (bad) (bad) jbe add out cmpsb cmp or addb out push mov mov out pop sarb out dec repz (bad) mov lret mov jmp jno ret test dec pop out les (bad) repnz mov mov sarl (bad) mov iret adc cltd sub mov sub test out or mov cmc (bad) inc cmp pop loope scas jns aam outsb push add mov jmp mov mov enter jne ljmp xchg adc jle xor icebp in add imul xchg push push ljmp mov test pop inc or push insl out and jge ficompl leave ds cmpsb pop inc add cmp pop sub int lock ror popa jb add out jnp inc clc adc ret out push xchg scas test loopne ja dec lcall sbb jmp js cmc out stos push push mov fsubrp dec pop rclb pop in daa setge adc dec xchg xor test aam and andps imul add push stos inc push daa cwtl dec repnz scas mov in jo ss insl sub shl xor adc cmc mov mov stos cs push mov mov out add push jmp mov sbb jp jle aaa shll xchg cmc loop adc mov push sbb dec xlat jmp fistpll mov cli out out dec out mov (bad) fimul js pop mov insl test int test jecxz out loope pop fcompl mov or mov mov fwait out fsubrp xor out bound add and mov das cld pop jg leave insl adc mov pop cli sarb out and ret out pop and and lret adc arpl movb fucomp push or mov shrb mov out adc push xchg cmp push loopne in (bad) gs fcompl bound sub mov inc inc adc mov mov xchg pop adc sbb mov out sub das out imul insl or jle ljmp pop lods jmp shr aam ljmp out imul cmp testb insb dec or lahf jb incb jg test mov out pop pop pop fwait inc aaa mov out sarl in loop pushf mov outsb sub pop dec xchg xor mov pop fistl les aad loopne add xchg adc (bad) xor push shrb out sti or push callw out add js cli in jne sbb das imul mov aas adc or out sbb push out sub push lahf out popa jmp ss inc cmpsb into xor fwait into dec mov dec inc out pushf push or dec or arpl fbld repnz loop mov fiaddl outsl mov or out jo mov ret (bad) mov ss out ret jl (bad) jge push out fs add mov ret imul pop insl lock or sbb outsl dec add mov rcr sub loop aam test cltd lcall push imul sub jbe jns in cmpsl (bad) (bad) pop out mov jl repnz mov rol (bad) aam aas aaa inc arpl cltd add outsl push (bad) mov dec (bad) loopne aas sarb xchg lods inc out (bad) loop rcrl ljmp iret (bad) cltd out stos (bad) xor (bad) mov jb jge aaa cli cmp cmp ret out rcl (bad) out frstor dec push pop loop pushf lds js ret xchg movsl jmp stos enter cmp (bad) jmp fs aam scas inc outsl clc out sub inc data16 pusha push dec cmpsl out xchg jbe jne mov adc imul fwait movsl in mov mov xchg inc xchg subl and ljmp mov cmc xor fisubl push out je sub incb sbb scas mull out push mov and cld fstpl (bad) jb fcmovb or xchg jo fst je mov es add mov out push lods xor sub imul in pop mov mov out out test dec mov aam or into in (bad) adc call xchg (bad) movsl dec out das pop sbb jl lret test fs les jb je jge hlt scas mov cmpsb mov or push lret (bad) pop dec pop cmp cmp outsb xchg cmp or aaa sub mov fadd ss dec aad adc xchg out and jge jb into fsubr and push pop xor lret (bad) in mov out call mov (bad) iret jbe and in xchg mov cwtl std shlb jno mov sub (bad) out adc outsb sub inc ret and cmp gs sub insl mov out mov add pop icebp jmp fmull add mov iret jne out ja sub mov jbe jo dec fstps sub outsb popf movsl jmp inc movsb into out cmpsl and negb push in add or pop fbld add mov mov jg int xor repz dec lcall jnp (bad) (bad) and mov loope por mov xor jno rorl cwtl push out xchg add jnp xchg mov sbb lret loop xchg (bad) shr sub or pop lods cli adc or in cmpl mov cld mov sub cltd mov mov test fmuls out aam fs jnp and les push and add loop or jmp out push dec pop adc lahf arpl out test aad in cmpsl sub or out imull sbb cmp fisubrl xor pop jns test icebp out mov or and lea imul pop lods jmp dec lock push push test inc js mov sub inc cltd out insl iret add pop lock into sti out out dec outsb out dec imul test inc out hlt adc pop repz sub shr mov dec or out xor aad enter jns out sub add daa jne fs cwtl out test cmc push mov add inc cwtl das addr16 pop cmc ljmp ret mov adc (bad) pop cmp test shrb push mov lret pop xchg out lahf fdiv cli cltd and add sahf xchg dec mov xchg (bad) xor insb pop out xor jns or add add out xlat sub cmpsl add or inc cmc inc outsb cmp in xchg out adc rcrb xchg call insl rcrl arpl adc xchg or jmp mov pop mov xorl out aam adc loope leave jg inc das sbb or mov pusha inc dec jp test pop inc mov xchg mov fsubr xor in pusha mov js rorl out test cmp and test mov push out cs xor cmp out mov mov dec out loope cmp das pop xchg pop incb jne lock out sub xchg into xor popf jmp inc outsl outsb pushf out xchg xor loopne pop out push insb mov fsubr pop hlt cli stc xchg popf jg out mov decl push fwait sahf (bad) out ja pop mov out outsl mov mov fmuls push movsb mov fdivs lods out mov fstpl out es push outsb sbb iret pop daa je push jl mov push out sub sbb aad mov bound shr and dec data16 sar xchg divl push lret lock xchg mov test jg (bad) loop,pt (bad) xor or (bad) jp mov add les out sbb xchg or lock sahf pop xchg mov ret pusha lret push addl jp xchg out mov cli push adc icebp and pop dec out pop inc pop pusha xor aam jne (bad) testl lds pop out data16 lods out push xchg gs inc loopne xchg (bad) out lds mov nop stos add insl out xor pop mov out push loop sarl add xchg cltd ret hlt out lahf das pusha add sub sub jg push out mov push je and (bad) rcl fcoms mov sub int bound dec out ljmp mov js pop fistpll (bad) rcr sbb sub mov and imul pop inc fcomip out jecxz call xor out stos sti mov add cmp mov pop mov jns sub add jnp out out mov fsts dec lods push pop out dec or imul xchg sbb inc in les pop pop add jmp dec test out out ret in adc adc sbb cmp out ja xchg das test arpl sahf lcall inc imul mov jb int cld lcall jb push outsb adc xchg ret rorb leave or popa sub sbb pop jl jne cmp push rclb fsubp out cmpsb ds hlt (bad) out popl sahf jl je out mov mov std out (bad) fisubr push out cmp aam push cs das push imul nop xor fwait jg (bad) sbb out mov lret mov cmp push in and repnz sbb subl adc cmp ret dec out jbe jnp mov in out pop sbb xchg mov pop push (bad) pop movsb jo (bad) aaa adc in xchg in imul mov iret repz xor popl mov jp jecxz add out push push push dec in out mov dec out ret ret shrl adc xchg sahf mov and hlt out icebp jno aas xchg test add aam aad jmp mov push jmp in lock cwtl out notl sbb xlat add push in stos push enter sbbb in call pop bound leave add int3 out mull scas mov cmp mov je xchg out xchg push inc mov xchg sub xchg xor jo push sub sahf cmovne adc out enter xchg test inc cmp out arpl or lods xor push fdivp shr and je pop out mov mov test out xor vpmaxsw loop out cs out inc test dec in imul adc xchg out push xchg (bad) in push jb cmpsb dec (bad) popf out mov xor and mov dec inc ljmp out sbb mov (bad) mov xchg std loopne outsb adc fdivr push out sbb add out les aad rolb push aad pop mov xor inc loope rcl cmp iret outsb int3 outsl ja cs lds (bad) pop cmp aad movsl out outsb or std sub mov rolb jl out imul (bad) out mov and out xchg and (bad) je jb sahf stc repz insl out out dec movsb subl mov xor xchg cmp inc add sarl cmp dec dec out test aam pop insl out cli mov mov out les enter adcl mov mov pop or daa leave negb outsb mov test sbb pop push aaa jmp sub cmc bound jo add push fstps stos out ret gs imul cmp (bad) std sub inc out xlat jae in mov aas ljmp loope xchg and icebp mov out xchg stos and or pop fs pop ljmp xor arpl pop jmp xlat out jb jecxz pop add out (bad) pushf imul pushl loopne jbe (bad) or pop insl cmp leave cmc jmp xchg icebp shrb or jns fdiv sar cmp movsb mov int add es out inc pushf js sbb xor flds enter push icebp adc mov xor outsl xchg ret pop rcl jle xchg out pop (bad) movsb xchg leave bnd inc ljmp rorl ljmp sbb sbb in jno jne sbbl mov out xchg inc xchg sub push dec sti out mov mov imul pushf mov lcall pop out push lods in jmp call out or cmp jae xchg out adc repnz dec (bad) ss dec out jl sbb out pop or (bad) mov loope jp sub fmuls mov aam shr mov sub out and lock xchg (bad) pop test out sub mov out in inc push (bad) xchg outsb xor mov nop out dec push popa mov or jns pop lcall out fdiv sub and (bad) pmaxsw pop fisub adc adc mov (bad) cmp dec or dec insb subl out pop rclb mov and mov out inc pop jno rol xor sti mov sub jg dec out inc (bad) jbe ret clc and out push sub add out testl push out push das fwait pop dec lret aam fstpt in scas mov jl in jmp jne cs out in xchg cmp test pop add lock je (bad) mov and jmp sub fisubl (bad) pop test in lock out (bad) and mov shlb out adc (bad) mov add outsb mov push cmpsb push dec xchg stos xchg out xchg and jns out mov and ret mov dec or jns jecxz sub addr16 enter inc mov mov push push stos out (bad) mov sti (bad) xchg loope or jp ljmp sub (bad) out (bad) dec rorb out push ret pop ss out cmp sbb call lahf sbb out pop imul out movsl lret (bad) or push mov int (bad) jne cbtw pushf fnstsw xchg mov inc jnp adc push outsl pmaxsw mov shr xor mov (bad) cwtl push out jo lods cs dec (bad) adc or aad adc in xor dec pop je stos xor pop js mov xchg mov out pusha (bad) testl out and inc push or out xchg push in scas xor sahf jecxz cltd inc ljmp push daa (bad) (bad) int3 outsb pop loopne adc in repz or out push pushf movsb push add mov sub push mov jno pop enter fdivrs int3 jg adc out lods adc mov jg or loopne fdiv ljmp out icebp mov xor mov loope jecxz sbb in movntq inc les (bad) mov insl pop loope int sub sub add cs pop (bad) sub fwait lret shl adc das cld and mov shl iret cmp xchg outsb mov lea out dec push push rcr mov pop scas data16 repnz in cmp mov imul sbb subl jg cli cld pop lahf xchg rcr pushf jae xlat ljmp bound xor xor mov xchg loopne dec or jmp mov in cmp out jae mov jo rcrb xchg xchg add inc negl outsb and imul ljmp and xchg ror out sahf cli add ud2 out sar inc outsl sub mov pop mov movsl jmp jecxz mov mov jl (bad) jns jo arpl std pop pop out ja pop out orl jnp dec lock das mov scas (bad) imull cmp or inc ljmp gs lret pop adc fstps and dec out or imul cmpsb push mov push mov dec xchg mov add sbb loop scas pop ljmp dec push out lock js shl test out and sub test adc lea mov shr shr lret mov out jmp add movsb outsb cwtl out lock stos gs and scas dec shr mov pop inc dec push cwtl push jmp bound lods out dec mov and data16 ljmp cmpsb cli out xchg nop aad mov jb mov int sbb push mov orl and mov je out inc xor dec cmpsb out jp and cmp xchg inc lahf out popf mov adc aam cld out pusha sbb decl cli sub add enter lea out int3 pop dec xchg icebp (bad) mov in and push ds rcrb pop test (bad) (bad) movsb jbe mov pop fnstcw out dec jne pop outsl (bad) out and fidivrl sub (bad) lret pop adc outsl pop (bad) xchg (bad) and (bad) je testl insl add in push lret out mov mov or out dec add jne es hlt cmc mov out jns outsl aaa iret or es test adc mov shl (bad) movsb fwait popa inc and dec lock (bad) out xchg (bad) loope sub push cltd dec int lock ror in test jmp (bad) aas mov push scas fist movsb push out xor movsb lcall (bad) mov push mov ds sbb pop loop cli notl jmp (bad) imul xor fcompl pop (bad) jg fwait cmc pushl jmp imul mov cs out shlb call pop jb cltd mov sub out pop mov jbe mov push sar shr jecxz cmp add (bad) ljmp ljmp jmpw sub in pop (bad) push shlb or sub mov push pop mov call mov sub cltd push push (bad) clc add roll cs (bad) cmc jle push imul out pop fildl nop sbb ret mov sub push in hlt out cmp out mov out or movsb jg push (bad) insb iret adc neg mov rcrb push data16 outsb fwait cmp fcmovnu xor mov and jecxz imul mov inc fisub out xchg inc mov push xlat or pop adc stos pop mov imul mov out adc ds movsb enter in gs sub add xor pop in out rolb enter repz xor dec in add fcoml push aad xor mov xor mov loopne or mov (bad) test or adc out std das jl pop sti js out cs jle outsb cmpsb mov out xlat pop faddl out mov jp mov sub cmp push mov cmp in imul pop in pop push sbb out xlat inc imul cmp xor or jae xchg lahf clc jns (bad) mov ret in loope xor inc adc les out cmp je aam out out or rorl add test out sbb inc lcall add popa dec mov loopne mov ror dec out mov cmp cmp hlt push and out js scas rol inc cli adc ljmp and test lret jmp cmp imul mov mov add out notl lret cmp fcmovu xchg pop in mov outsb jg adc jmp outsl cmp cmp aas out mov xor fs xor jmp icebp jne xor movsl out push jnp push std jecxz out mov rorb mov idivb lods mov or out pop push cmc into pop mov decl inc out sub mov jle test out lcall add sub pop adc jbe mov out (bad) (bad) lea cmpl fist mov pop and mov cmpl dec js adc add cmp mov out loop mov (bad) cwtl fucom insb jo jno mov push push cmp jne,pn into subb mov push xchg and pusha lret in and std or dec xchg add aas (bad) jp mov ljmp pusha (bad) scas sub jge dec scas push jmp sub mov dec jbe lcall aad repz int3 out xor ljmp out ret incb pop xchg cmpsb nop pop jmp and shll mov sbb jp pop insl cmp out push in addr16 movsl rcrl test cmpl (bad) out scas mov fsubr push xchg cmp or out add push lods sarb sbb int3 adc xchg stc repnz fsubs js out cmp xor arpl pop pop ss jo jno inc mov mov popl (bad) (bad) inc push sub stos out push cld mov xor aas sub je iret repz adc mov push adc in fisubrl and stos arpl cmpl bnd repz xorl incb mull gs lock inc mov xor mov out out ret sbb nop je jae inc in and hlt in push int mov mov (bad) mov mov jl lea push out push dec test xor test mov out int3 mov adc in in rcrl pop out mov and cmp sub aas and stc out daa fisttpl xlat repz out pop (bad) lods jnp or je (bad) imul xchg cmpsb add jge in push pop xchg or xor cwtl stos loop xor out ljmp xchg push jge pop enter out push loop pop out in mov sarb lahf push xchg mov sbb xchg mov sbbl dec iret nop cmp and inc jns ss scas pop cmpsb je std add lret dec out jbe out pop inc insl sub push jnp test and out ficom daa ss fistpll fldcw ja sbb addr16 xlat icebp sti rcrb fcmovb es call cmc pop out hlt fs jbe sbb add cmp jb dec lahf lods data16 pop das cmpsl movsl push pop push mov sbb out lret xchg inc out pop test mov mov cld sub out mov mov sub aas jge mov loopne fiadd out lcall adc and mov lahf out push pop js cli sub xchg ljmp mov dec movsb push cld or iret add mov daa mov imul fdivr mov lret es sbbb insb add loope std ds dec out push (bad) lea mov out fisubl out xor mov xor cmp loop pop ret enter add sub (bad) fwait xchg mov add push imul daa loopne notl aaa xor mov mov cmpsb out dec aas sbb out or adc lahf movaps mov (bad) mov xchg mov lods iret out (bad) and ds in cltd mov imulb outsl jmp dec ret into out add jb add popa out adc outsl repz bound cld jne push insb stos std out pop aaa mov jae in and or push insb call jne (bad) or jp out int3 aad fiadd push sub es out push adc daa push cmp into and dec xor jae sbb out mov int hlt iret rcll pop in push imul and stos rolb call das pop push out nop mov movsb out cmp sbb addr16 mov test cmpsb sub cltd add sbb cs add in bound pop shrb test shr jecxz stc sbb lcall ret pop jb out fs add mov adc and addr16 (bad) jo jg test xchg repnz bound ds loop movsl mov outsb and (bad) divb add sahf inc xor in jo push aas aam xor out dec jle decb inc lods fs test out (bad) int repz jmp daa (bad) jb add mov loope fadd hlt cmp jmp sti and add insl in adc sahf xchg loopne and lcall stc out icebp inc mov imul in test lret jns push fiaddl ds iret or mov out jmp mov adc fildl mov data16 (bad) dec lods fs mov mov xor into pop push popf ja je leave nop loope out pusha sub jno push inc ret out popf cmp out xor ds pop xchg mov jecxz dec idiv test sub adc out mov sahf push test push xor adc dec out jo mov leave inc loopne (bad) repnz hlt xchg pop in dec sub nop or call inc std cs inc sub push out test mov movsb fistpl in out mov push push sub push int inc jb dec addr16 xchg xor mov outsb (bad) out arpl test mov inc out mov movsb dec xchg dec outsb scas out mov jecxz shl sbb ljmp rorb inc ret fwait sub loope push (bad) fistp and lret cmp insl lcall xchg int3 aam jo fs mov jle sub mov jne pop push incb pop jmp jg xchg lea pop cmc and add movsb inc inc add aas iret std cltd push ljmp out xlat cli jle mov adc mov data16 out inc sahf jge inc push sub jnp ds out (bad) icebp ss xchg aad inc cmovg or xchg push lret dec adc jmp out aam add and in addr16 mov dec in les mov sbb out pushf fidivr mov aam out data16 sbb dec xlat lcall inc test loopne pushf out pop xchg pop gs jmp adc pop adc lds xchg dec cmp xchg fucomip mov inc inc fsubs pop out out add or les sbb jecxz cmpsl ret icebp xchg (bad) jg loop sub xchg mov sub pop mov imul xchg out xchg rcrb xor push cmp out mov xor lock fdivrl jnp incb fdivrs jmp push jbe (bad) jmp popa cmc jb add jp shr rolb lret leave mov xchg sub mov idivb sub cmpsl lret out and mov sbb int (bad) sahf cmp in out adc sub mov out bound cmp rcll out cltd mov es sbb rcll add xor mov shrb out jo arpl and insb sbb out xor jl cmc fnop repnz inc mov xchg sbb iret (bad) stos push out push or push xchg out stos (bad) loop xor and mov and add out mov negl loope mov mov add stos sub fsubrs push in pusha lea lds cs out mov mov fucomi stos push adc jbe aam mov and xchg fcomp mov mov in lods jbe out gs mov sub loope out xor das lret test test push imul lods out xchg loopne xchg lcall pop cmpxchg out mov add sahf push mov out jns mov mov out sbb subb leave (bad) jecxz jns (bad) sbb out movsl mov notl aaa incb stos jo sub bound mov andl out movsb cmpsb jns and jno jg push iret mov xor mov cwtl mov inc fiadd lcall das cmp dec into mov mov sbb fstpt xchg mov and and (bad) cli out mov fbstp mov cmpsl pusha pop faddl pop pop cmp mov in out fwait or lods push xor out mov push out mov into es add frstor fwait add push (bad) cmp sub shrb push popf out and push shrb sbb lea ror (bad) sub jno stos (bad) loope loopne pop jecxz inc clc cld push xchg fidivr in aam cmp and (bad) xchg das push ret jo adc out lcall jge xchg mov out push adc out dec push jl insb mov fnsave in mov add imul inc mov and mov cmp out icebp jno or pop mov aaa fs mov lcall jbe mov adc mull jnp ljmp gs xor xor test jg aam inc xor fcomps (bad) (bad) adc loop jmp cmp ljmp and imul mov movsl jbe in pop jp out cs mov push out (bad) popf cmp enter rclb sub out scas sbb xchg and outsl dec clc call ret iret shrb jno xchg push out jns test mov aad jmp scas shr xchg xor fidivr sub xorl mov out nop insb test decb scas add cmpsl mov dec out xlat add test clc pusha out pushf inc adc pop mov cld (bad) ficoml add push repz addr16 mov subl call xor mov not mov mov out mov repz out aam loopne inc es add jecxz cmpsl jge inc xor lods pop xchg (bad) (bad) mov push sub adc sbb pop push repnz daa sti cld adc in lcall pushf cs mov pop and adc das in sbb jg lods lock dec out fwait push jo lea (bad) imul int orb sub out (bad) cmpsb movq lock (bad) stc sub dec dec jp lock pop xchg mov push add mov lret fbstp inc in mov mov mov push cmp pop test jb pop out (bad) (bad) mov rsm cmp push jecxz lds movsl inc call (bad) shll pop in jmp out arpl pop andl sub jle (bad) loopne nop imul push out xchg xchg and data16 add movsb jle add dec pop cmp loopne sbb xor mov iret dec inc stos add or faddl mov out inc mov scas lahf repnz and pop clc pushf mov xor sahf subl xchg out push mov adc pop loopne pop aaa mov nop and imul sub push int3 add insb push insl add (bad) mov mov loop sbb mov sub sub negb (bad) xchg cmp cmpsl push mov mov jg pop pop or adc loope sahf sbb ja pop sbbb test or push ljmp dec es sahf je and out std (bad) fsubrl mov sti or sahf or ret push jecxz push mov adc (bad) sub in push push and adc pop (bad) lock je es xor out xor in out pop inc xchg lea add mov shrl xchg inc ljmp sbb js jp out xor inc pop loopne out push cs and (bad) pmaxsw xor loop outsl out add push sahf pop (bad) outsl mov dec (bad) xlat out in outsb sub (bad) xchg fwait lcall cmovnp jle mov add hlt sbb push into pop jbe pop mov fbld or push jmp and shr adc sub roll out push pop lahf scas jl mov pop cmc (bad) lcall movsb pop loopne out mov enter jns jle mov out aas lea ss sub ljmp out pop mov mov loop leave shll sub orl cli cmpsb sbb imul or push movsb iret jp (bad) xor out fs push std cmpsb inc out repz xor (bad) popa pop mov sbb out mov lahf and jb out or inc (bad) shrb xchg scas adc rep mov les bound sub xor mov cmp rolb out insb or les (bad) mov push out xchg imul jge add mov mov pop popf sbb xchg jae sub lret mov out lret push mov in stos jg in gs add push sub xor out popf enter pop sbb sarl sbb xor (bad) test out and aas sub xchg mov (bad) adc mov xlat pop outsl out out xor lock mov push mov cmp sahf pop stos jle sub cmp sbb gs out adc (bad) pop dec lret outsb push insl jg out adc scas pop pop or adc (bad) out adc mov cltd cli out dec push gs or in imul jnp sarb arpl sub (bad) dec cmp adc loope imul sbb sbb lods sub sbb mov js iret fistp push inc test sub jmp pop imul sahf cs out sub xchg idivl xchg test out test fcomip dec xchg mov jp and (bad) sbb clc sub mov sbb loope scas iret jne out dec push inc add xchg dec push out lcall mov mov xchg or push mov out dec jge dec in xor (bad) stos popa lret incb ljmp fstpl ja ffreep adcl dec push (bad) out andb mov xchg mov rep dec out data16 pop aam inc and jno xor add (bad) jg rclb adc cmpsl in mov out test mov mov cmp xor xchg push shl pop mov sar test in ds leave add movl adc mov out sub repnz xchg sbb dec out sub bound out into push out xor inc mov mov outsb stc jne mov pop stos repnz inc lcall shlb lds xor fild flds ljmp pop and scas pop lds jno das enter mov or out sarb addr16 arpl shrl lods (bad) test mov sti out mov push sub cld xchg xchg mov daa push pop xor sub pop inc enter jne push jmp and adc fcomip das mov push pop pop in icebp (bad) mov call out sahf inc adc mov pop mov mov ja pop iret aam or (bad) fild push inc out mov mov xor inc push das ret pop test inc pop sahf cmp (bad) out out cld sub js mov aas out lcall (bad) out scas aad push sahf mov xor (bad) out and and outsb cmp out pop cmp sub mov cwtl pop out or mov fstpl lret mov xchg fucomi push mov dec lds rol hlt out sbb mov and lods adc bnd push and ljmp add jecxz mov ljmp mov cmp jns push inc bnd ljmp mov mov int3 inc subl sahf je adc shl add cwtl dec in sub stos out sub enter jmp jle scas push sbb push inc gs xor mov mov adc fistpl and js push mov mov lds push test xor popf cmp out and mov adc mov out sbb adc sbb (bad) addr16 jle,pt ret out stos arpl aas lock out out ficompl imul lahf jecxz jl xchg repz ja xor out mov dec xor stos rcr mov jnp xchg gs or ljmp in push leave fucomip push mov int xchg mov xlat xchg adc (bad) jae cmp ljmp mov and std cmp jecxz pushf jle xor out or imulb mov mov in pushf xor mov xor jmp rclb in cmp or mov ficom pop ja lds and mov adc repz pop jns add adc iret jmp mov out and and ja lods imul test mov int add fcoms jg mov mov xchg outsb push lock inc pop push pop sti mov cmp in add and arpl pop call rolb add cltd insb mov push and jbe (bad) imul cmpsb or les out mov adc out dec or imul jo scas in sbb popf out mov rolb aaa out leave lock ffreep (bad) lods jbe sti pop lahf insb push dec add sbbb inc mov lods lods mov add out into inc cs pop cmpsb leave out hlt dec outsb cld enter out pop cmp pop inc lds out sahf lock movsb out add rcll mov out in xlat adc mov frstor xor adc sub fcmovnu jle out test outsl cmp fs adc adc popf int3 mov pop lds aas ljmp adc clc in pop leave out dec gs dec ret add out cmp mov out das dec jmp loop std pop xor (bad) xchg jmp cmp add movsb out xlat (bad) es std out jno xor (bad) out stc xchg (bad) fdivrs out icebp ja jns push idiv out pop xchg out jge daa bound out popf push sbb jo (bad) mov cmp out dec fistp sahf push mov sarl je mov dec xchg out cli jge sub fnstsw in add outsl or dec mov ss loope push mov insb int3 jle pop out inc fwait (bad) cmc xchg fisubr ds (bad) dec (bad) icebp in xlat popf shrb ljmp loope stc dec or fistpll movl inc cmp mov sub cli pop clc leavew dec fsqrt stos into xor jl negl in mov mov out (bad) sbb cmp popa pop jae jnp cmp (bad) lea scas rolb enter (bad) sarb push cmp cmp jg mov cwtl in mov mov nop sub daa fstps shr pop test adc xor mov int3 mov out jns jl imulb add jmp aaa sub addr16 into dec xchg (bad) and and out bound pop add jg test inc xor mov add mov xchg out jge or jecxz pop push inc cwtl lock lock out mov mov mov repz addr16 and es pop dec loopne sbb cmp les out (bad) call (bad) mov pop xchg jbe bound daa out mov inc dec cltd add aas inc mov add out sbbl sbb push scas push dec lods dec out insl loope mov fwait mov stc xor nop push pop xlat xor pop out adc pop and or je pop inc loopne stc (bad) popf jge imul pop xchg pop pop inc mov mov xchg out rcpps out rorb test (bad) pop add and hlt div ljmp mov (bad) out mov (bad) cmp push scas jns lret cmpsl bound cli mov (bad) jecxz aad fcmovnbe imul enter arpl or sbb mov loope push (bad) jp push push xlat fistpll insb push (bad) lods packuswb call sub pushw scas out sub loop mov push push test pushf out adc or push push push sbbl ljmp jle jnp xchg mov inc ljmp das xchg jb stos popf and out push pusha lock insl fwait dec out xor aam and test out push jb (bad) adc enter lds mov es jecxz or xchg shrl pusha out sbbl mov rcrb lods fwait or mov (bad) aaa mov and outsl and rclb out sbb mov cmpsl ret lods aam jae jmp inc push pop iret jmp or cmp adc push data16 push jle mov fwait pop sarl pushf jne lahf add pop imul fs iret test inc sbb fwait and movsl in push fucomi std mov mov (bad) fcmovb dec lcall pop pop dec cmc add imul cmp xchg loop xchg dec sbb (bad) cmp mov push scas loope scas and insb gs loop add xchg xlat out xchg test adc mov mov arpl xchg outsl mov lods or repz out cmc xor fsubrp aam xchg cmp xor arpl pop popf add neg (bad) loopne inc jo (bad) stc jp stos aaa cmp mov mov cs je aam adc xor cmp cmc out pop cmp dec or push imul (bad) jbe pop loopne cs dec lret inc enter test rcrb shl fdivs and pop sti xchg inc cltd sub push insb sub test out cmpsb mov pop sbb push pop cmpb out fldt pop rcrl out sahf daa insb (bad) test jmp add leave dec jecxz out stos hlt pop enter dec out scas adc add je test jl cmp xor imul nop xor ret out jno scas (bad) out (bad) out rcrb pop jge xchg sub adc add enter hlt mov jg sbb fiaddl adc jb outsl pop decl enter mov ljmp imul (bad) out or out adc sbb cld out dec hlt and mov pop fsubr push ljmp out aaa cwtl ret add icebp dec sbb or repz inc std mov pusha mov dec sti insl adc jp jecxz mov or out sar mov sbb mov lds out push cmpsl add loopne push pmaxsw stos hlt jmp imulb pop or (bad) xor fsubr mov addr16 xchg in dec pop pop lret mov imul lock push xchg popf pop mov sub nop (bad) dec in mov icebp pop pop bound mov jne sti (bad) out and adc dec pop sbb stc xchg shrl out (bad) fisttpl je (bad) xor cmc mov dec inc lods jo (bad) das push sub sbb dec inc insb pop out arpl je out push mov adc ret dec ljmp outsb add add jp hlt dec push or leave aad out push out xor xchg and std out hlt inc scas pop mov lock sub test nop jmp mov pop ret xchg or adc xor loop dec fdivrs int repz subb (bad) inc fs inc (bad) push adc inc lods arpl out sub popa imul push repnz out or (bad) out inc dec inc lods daa mov pop xor addr16 jmp out cli cmpsb inc sbb out int3 mov mov mov add pop push dec ja lock fwait sbb ds out ret daa jae iret and add mov cmc int3 (bad) cltd aad cmp out insl das xchg mov adc cs fcom push or rcrl out xor cmpsl rorb leave test out (bad) cli es inc sbb pop pop mov or jle xchg out mov ljmp test fldl xchg pusha jno lods mov push out sbb aas cltd addb call dec adc addr16 bsf iret ficom fistpl out mov cmpsb sub out int inc es push sub fdivl jbe (bad) mov movsb xlat arpl outsb je,pn out sahf pop (bad) cmp hlt sub out xchg xor mov out mov call ja repnz push out insl mov xchg pop (bad) mov stc and adc int3 out inc sub mov out and adc sub cmc cwtl pushf std inc and je ror ja in cltd iret leave mov (bad) or mov sub push xchg out xlat and aad pop adc sub xor sub (bad) popf sbb mov mov loop inc out adc cli repnz test push out adc test (bad) xchg (bad) call lret sarb ljmp jo mov ljmp fwait jae into fs out aaa cmp ret inc adc imulb decb insb cmpsb stc adc push nop aas cmc push mov dec call rcrl nop jo pop fucompp pop invd cmp out lods sub and out (bad) ss pop popa adc push ljmp stc call ljmp or int pop sub xchg loop out les je xor loop insb xchg mov sbb jnp jp pusha (bad) movsb adc pop in pop psubusb mov hlt push (bad) into ret mov in loop in paddsw ljmp fnstcw mov out in daa (bad) (bad) movsb jnp,pn cmpsb movsl out and fs clc cmp out push shlb mov push adc push sub cmp out andl sub pop xchg sbb adc sub out fisubl outsb or pop nop sbb popa andb dec inc call (bad) pop incb sub scas mov out sub (bad) scas iret pop cmp rcpps mov out and fstps cmp mov xchg js leave fistl arpl cmp cli outsl mov out inc push call out xchg cltd xor dec dec out or mov ljmp jnp fsubr fwait add mov cs sbb adc pop insb lcall ss fs rcl out push push sbb mov push sahf out push push orb mov andl or xor mov sbb sub dec push bnd ljmp in ret insl pushf cmp mov dec xchg sbb or stc jne arpl out mov pop pop ljmp (bad) out imul sahf lods fimull push sub sahf stc adc decb xchg movl out jnp repz cmp sub and das and sbb out mov push out mov sub out fbstp loope lahf push (bad) out in inc aas jae pop in mov dec iret mov imul xchg pop sti xchg mov xchg out loopne pop xor (bad) dec adc (bad) addr16 dec into push pop sub iret mov xor fstl jns loop out out mov xlat stos mov out out stc or add adc out call mov movsb data16 hlt nop xchg jl bound ss adc jp ror cmp addl sbb mov cmp out pop and xchg mov jae add ret ret push push jg (bad) out hlt addr16 push mov and inc fs andb scas pop out pop pop movsl add jmp jo out bound loop in divb pop sahf xchg stos sub popf out mov sbbl shrl jge push xor dec fwait and (bad) mov pop icebp xchg jg outsb into push out jecxz (bad) iret mov mov or mov nop cmp xchg decl bound outsl and add test imul faddl loop fisttpl (bad) leave shlb lret jnp push out inc jmp push pop or inc outsb incl out xchg or (bad) int sbb sbb pop xor inc pop pop (bad) and dec mov out or xchg or addr16 loop or sub pmaxsw mov jl out add xor loopne mov sbb (bad) mov mov jno sbb ss add jg xor out out xor sti mov fsubrp push cmp cli (bad) repnz mov jl ljmp push xlat out outsb mov hlt out inc mov sbb out mov fstl push loope lods pop pop sbb mov cwtl imul lds push out (bad) popf mov shr mov push pop out ret movsl pop push out int3 fchs js aam push or out mov cmpsb xchg bound dec xchg sub movsb and cmc sbb jnp lahf (bad) sub mov jb negl out dec ret sti rclb add mov push cltd jecxz je jmp pop adc add out adc push mov mov xor add ret jg aas mov jmp xchg cli mov (bad) and out jo das inc inc inc cmp out or int fadds sbb sarl repz aas int3 xor pop imul orps repnz outsb pop out pop jg flds jp adc and sub (bad) int loope int3 out jbe js adc les aaa sub decl sub hlt ljmp jmp add mov sbb ljmp out fstps pop ss xor pop popl in test fs cs out mov mov mov scas jg (bad) rcl jmp cwtl add cmp scas mov mov jne outsb out movsb cmpsl dec jo call jle xchg out testl or pop dec into (bad) out (bad) dec leave fild and add jne sbb aas fsubl sar out dec cmp in iret loope mov inc sbb jmp jecxz (bad) fadds ficompl (bad) mov jno inc cmp out and (bad) or push dec rcl jle cwtl out je sub lret inc out xor dec inc clc mov inc inc ljmp inc jae ret imul push stos aam (bad) clc jb int cmc aas sti ljmp mov arpl xchg push jle mov inc add cmp in out std aaa fdivrl mov mov ljmp sahf lret push adc cmpsl xchg test jbe test dec fmull pop mov and in out cmpl out pop cmpsb ja or mov icebp mov mov dec cmp (bad) xlat mov out mov pusha jns out sub pop inc ret mov push pop cli fadds outsb adc cs out mov push jne and out cmp movsl decb push lahf lods inc out out sub ss out fstpt pop pop out imul add fst pop aam les cltd push mov inc in adc or inc test add dec in out push lea ja and mov (bad) mov dec jne repnz das loop inc orl shlb add xor mov sbb lds sub out iret orb cli shl test fbstp lret inc and clc out insb aas and das lods inc outsl out push sbb push or push adc ljmp sbb loopne arpl dec push and xor (bad) mov and aam cld out xchg test icebp out jnp (bad) xor mov in test xchg hlt icebp das mov xchg stc out cmp out add push hlt fwait push outsb add scas mov out popf iret (bad) mov xor xchg outsb rcr cmp outsb xlat xchg aas iret imul out and mov ss mov (bad) es (bad) outsl cmp xor je add (bad) lahf mov scas (bad) out test aam mov nop push mov lahf push cmp in pop mov das jnp xor sbb sub inc iret or jb fdivs pop aas inc out pop in clc (bad) jo out in mov mov push nop shr lds incl out jle (bad) jns jecxz out mov int add dec cltd out push popf incb out inc pop xchg popa xchg sahf dec aas out dec and add add out lods mov aad inc icebp loope outsb rclb jmp lret push fistpl jge je jecxz pop mov mov lret js push sbb pusha pop outsl pop push call mov cs xchg out out mov (bad) out dec rolb in mov jecxz loope jns lods out inc fsts jae lahf out push or leave push test pop je xchg or gs imul in cmc xor out cwtl ja sbbl jbe pop cmpsb mov (bad) ljmp aaa addr16 in js or imul sbb out jl mov jbe cli bound adc mov leave out or xchg shl repnz pop outsb xor and mov (bad) pop mov stos or lods dec out adc cwtl adc movsb shrb xor out ja push jge loopne pop mov sub jae aam push dec rorb imul out inc cmpsl test shll out fsts ret lods out (bad) pushf push std ss ds rcrb add loopne notb js lods adc fimul mov dec dec cmp fadd in pop cmpsb push into cltd xchg fldenv sbb xor mov clc adc mov movsl rcll insl loop jno fild arpl js cltd leave fisub ret mov test addr16 sub scas out insl insb sub jns cmpsl fbstp pause pop out xchg and out imul or ret ret out icebp in dec popa add shlb rorb xchg das pop mov cmp (bad) out dec sti popf add adc and idivl ljmp dec push das std lea and mov (bad) loope mov fildl out sub push in sub add and int jo out ja daa (bad) sbb fs aad imul lahf out and iret and push cli out dec cmp sub jns idivl repz adc and pop pushf out jo pop mov inc pop icebp fwait jbe movl mov imull push es cmp push imul mov stos out or mov jmp rorl jne jno add (bad) movsl and dec fmulp movsb (bad) lret out mov repnz out xchg aas pop push test jne adc aad imul in sub inc shr insl scas and mov aaa jg xor iret jg out (bad) and mov xchg cmp cli or pop ficompl stos inc cmc mov incb loope mov and pop xchg sub or leave call inc pop cmp jae lock push mov mov out push push xchg adc sahf in jbe cmp lahf out and das add xchg nop lea adc sbb fwait out out jo cmpsb xchg mov out fsubrs sti sbb sub inc jmp or adc cmp cmp xchg xchg mov mov add movsb dec aaa out push dec cs mov (bad) aam dec dec hlt iret sahf xchg push test mov mov xor test decb xorl mov rcrl out in stos inc das in inc out sub xchg sbb out mov add jg pop (bad) xor aad inc xchg push inc out test xchg adc pop xlat sub jge imul mov stos ficoml out pop popa sahf leave dec repnz cmp dec sub mov adc xor inc inc mov es out adc mov inc pop inc arpl sub jne cwtl scas xchg (bad) fwait pop cmc int3 pop adc cmovno and mov sbb (bad) hlt stos popf out stos mov leave stos cmp (bad) cmp jg lock dec jecxz test mov mov xchg out cmp or mov (bad) ljmp push cs cmp xor out rolb mov sbb cld je pop (bad) mulb out add out leave out mov scas scas mov out dec das inc jbe iret or sbb test or jmp insb cmp jnp aad in aas fisubr dec xchg out int3 jae loop mov xor xchg movsl inc mov mov out scas push pop pop push jbe loope and addl xor push push (bad) add sub and pop pusha test mov out iret mov adc out mov jg push adc iret popf add stos fstps mov cmpsl mov push pop jge pop pushl jle sub jmp call sub popa in (bad) in out dec mov into pusha out jg les in outsb in stos imul (bad) jb lret pop lret test sub in cmpsl pop test xlat fisttp sbb (bad) lods outsl pop ret aad add inc dec xchg mov mov pop mov cli inc out xchg or (bad) ja out ljmp std out adc ss cmpsl jns adc mov outsb mov out and repnz out pop lock pop push inc jle fs out cmpl mov es sbb cmp repnz (bad) and daa add dec shrl out pop and loop pop aam xchg cmp in in iret and add sbb cmp jmp xchg dec clc sbb dec loopne lds mov out cmp xor out scas dec les or out out (bad) jecxz adc in sbb mov xor jnp aaa mov (bad) cltd inc push jno out add fbstp shufps sub sahf cs push roll inc aas sbb gs fucomp imul stos test pop sbb loopne insb sub in jnp ret sbb outsb add cmp ficomp ret sub xor add fwait out push in push sbb xor sahf out fdiv push (bad) cmp out and ds push and xchg sahf dec pop loope add inc out popa dec pusha and dec stos jmp push out cmpsb jns mov or les inc cltd jmp xchg or inc cmpsb push movsb pusha inc pop jecxz aad out cmpsl lret out mov mov dec xor out sbbb or mov out xchg aam xor out push mov dec sub iret scas mov cld push les mov out nop fwait out inc mov (bad) andl cltd dec cmp test lock mov outsl fldcw aad adc fbstp mov out ret das lcall or out iret mov ds xor pop mov sti jge adc out in lcall out dec movb mov sbb cmp pop test mul in dec add jge sub mov lods inc out and (bad) cmp jo (bad) dec std ljmp test cltd (bad) and mov dec stos movsl rcr mov lcall push or out mov test das push push push out in hlt adc out lret in sbb mov iret fcoms js jmp xchg mov pop fildl jl push out rcrb jmp ficoml push call lea xlat dec jecxz cmpsb and sbb xchg ja int adc (bad) mov imul xchg fcompl jg mov lahf mov pop cmp out out xor rorl xchg movsb mov clc sbb xchg xor out mov cmp (bad) pop or hlt cmp push sub rorb repnz ljmp cli pusha fisub out (bad) (bad) out cmpsb adc out insb flds or cmp (bad) sti lds je jecxz sbb pusha jne push mov or std iret jg xor test das and push pop jge sar out out jno mov out add mov out loop int insl pop bound cmp sarb jp mov xchg sbb sbb mov out sbb lret pop mov out xchg loop sub inc ror cmp je daa stos arpl inc test clc cmp ljmp mov pop clc pop ja jnp out loop cmpsb xchg (bad) pop int3 stc pop lahf out mov iret out cmp test jo mov aad outsl inc dec or es mov push cltd inc mov fs out cmp pop or jg pop mov mov bound ds jno (bad) (bad) out sahf sub or aam xchg incl add loop cmp fidiv dec out out fdivs test pop out in aaa xchg out in inc pop in (bad) out mov dec cmpsl fsubs push shrb xor int aam out mov pop jo mov xor (bad) popa inc push add test adc dec or push in xchg hlt loope in mov out jecxz mov or fldenv loop mov adc test stos sub mov popf out and inc mov dec dec (bad) pop pop sbb mov ljmp popf cs into nop fs outsl sarb or push and (bad) mov jp lea pop fistl fdiv mov (bad) fisubrl ja in mov xor outsl pop decl fldl2t (bad) clc popf psrlq in push mov lret aad and bound inc push sti popa xlat scas icebp pop out xchg mov add test cmp mov in cli lret mov (bad) jno out gs jg out mov es ret cli ss mov (bad) insb pop out cmp sbb or test jecxz ss ljmp or sub out pop mov out jge bound sub xchg inc mov out inc lret decb fidivl jbe xor popa mov lea lret mov mov lods mov pop in int xor out add mov inc idivb pop incb stc xlat repnz pop into out pop dec movsl mov out andb cmp jg int3 xchg lock pop rcrb rclb pop xor push js imul add aaa sbb jne aad sarb addr16 scas pop mov xorl leave mov mov mov in jne push push loope movsb out mulb jle xor mov cmp test sbb inc add pop jne xor into out fabs aam stos scas push insl out sub aaa cmp sbb (bad) pop call in out adc lds out loopne or push inc jmp dec ja xchg pop cmpsb inc lock jns pop out mov cs cmp fild sbb lret out (bad) jb cmc arpl lock out dec repz or jecxz hlt lret cmp cmp sbb dec cwtl repz nop jne push (bad) push mov out test push in out nop adc xchg push out sti and negl es lods push xchg pop aaa pusha js xchg mov out (bad) inc insb xchg sbb out inc push sbb ljmp out out pop xchg test shrb iret sbbl xor ljmp rolb sub jl into sbb pop or fmulp jecxz pop sub out mov (bad) fisttp adc push aaa cmp pop jmp into lock (bad) mov adc mov fisubl loop push in dec sbb loop pop (bad) sahf sbb outsl cmc nop sbb aas out jl sub ret (bad) dec es sbb loopne out mov imul stos loop daa xor out xchg push (bad) xchg in scas cwtl popf fwait mov insb stc jns push lret in cmp and aas jne ljmp fidivr dec (bad) out sub js fist adc inc and leave mov cltd jnp sub or fwait mov sub je dec adc ret roll loopne mov mov cmc in jne xor sar out test and (bad) and dec or jp packssdw add imul out pop pop pop add cmp (bad) mov ret (bad) out movsb js sarb popf inc aaa (bad) ficomp sub mov sub out fsts movl enter sahf fmull (bad) cmp lods sbb mov arpl sub (bad) out mov pop dec add push ja or hlt lret dec sbb pop shrl cwtl js cmpsb out and jb pop sbb insb mov nop out xor lds into repnz out and pop mov push and sub adc push leave push (bad) or xor dec mov out out push lods or jle jbe cmp (bad) ljmp pop push dec dec out hlt in sbb out inc ret fwait dec inc xlat cs mov dec (bad) in add iret lahf adc adcl pop add inc incb aas jbe in rcl inc ret pop data16 pop je jb cmpl mov lods mov or push frstor dec cmc mov inc movsl pop mov out cld scas mov mov cmp inc push popa out flds insl sbb lods pop or cmp and inc mov out loop stos int3 lcall js scas or in cmpsb add fdivl add sbb fprem repz lahf pop das ds popl push out in mov cmp out out into rol dec mov out mov xchg (bad) gs mov and loope addr16 into in mov pop adc xchg or xchg out fisttpll int fmuls or insb cmp (bad) nop pop out mov fsubrs push xor sarb mov mov clc pop ret ret mov fcompl sub loop aad imul rcll inc pop push dec adc cmp push (bad) in stos xor lahf leave shrl pop test xchg jl lods and mov inc call sbb xchg cltd jae pop jge xchg out mov arpl (bad) jbe das xchg and jmp mov pop loopne shlb push data16 and xchg xor xor in inc cmpsb pop mov js jecxz push fucomp out jge sub mov lret out push adc insl xchg mov lock dec insb cs and mov mov mov (bad) and xlat inc sub sbb fcom inc in lds fstpl cmc sbb jmp cld xchg rol and fdivrl add dec in mov mov inc mov clc in fild movsb cwtl in or push sbb out mov andl aam inc lret and les nop cmpsl inc push xchg sbb (bad) out out in insb xor jmp sub adc inc adc pop mov in adc push mov adc pop into dec out cmp out test mov call out push in scas pop fild cs inc cmp aaa fldz push cmp push std inc sti int xchg adc or mov push ret mov and out sti fld1 xchg lret inc sbb adc out gs cmp fstpt daa pop jg movl aaa cli popf pusha out sbb mov scas (bad) push xor out xchg outsl lock (bad) fsubrl movsb adc mov pop push sbb jmp push mov cmpsb loop sub or clc leave adc sub xchg mov lahf xor das xchg adc ret out mov and out adc inc pop or jae out fiaddl xchg out inc jns out fistpll xor push lahf in xchg fcmovb sbb dec (bad) xor mov cltd in fcomps aad jb out mov jmp ret int3 jg iret ljmp das ret or insb dec or inc jbe push mov mov leave in out push into xor jae bswap ljmp (bad) push dec notb sbb insl (bad) or testl pop je out mov and dec out scas jmp or out rolb jae cltd loop dec sub outsl shl fisttp sbb pop (bad) or xchg sbb dec add xor push jae out pop xor adc aaa out pushf test jmp jge mov ja mov out pop movsb add inc xor dec aas jo jl sub jmp ss out xor idiv in data16 or push sarb test shr sarl pop and ret (bad) sbb or adc ljmp mov fmuls call adc mov xchg or rol dec dec lcall lahf out int sbb int3 mov out and push jne push cs xor popf cmp sub in enter mov out jmp (bad) xor mov or out xchg ljmp aas or int sbb pop gs outsb fsts les dec out out pop pushf jo dec sub cmp cmpsb fisubr out (bad) cmp or mov mov xlat push mov bndcl jmp inc clc fbld nop xor inc and (bad) into ret mov dec cmp out std sub and (bad) xor fimull js loopne xchg jbe cmpsb jg ror les dec mov push out inc in cmp stc (bad) test ljmp pushw xlat (bad) xchg sub ror sbb ficoml repnz adc jle inc inc aaa and mov out fildll adc lods orl sbb daa popa pusha add out xchg sahf cmp out das aas dec stos mov push pop pop insl pop mov pop pop into aaa call sub out lods cmpsl or mov out fs adc out aaa dec xchg pop adc jge repnz in std jmp pop (bad) out push jns jne jnp sub fsubr in sti scas or xchg cmp or arpl loop add mov nop out jg sbb das mov ljmp stos dec jl xchg outsb pop inc fsubr mov push add hlt pop in out movsl movsb pop pop xor and adc out xchg rclb inc repnz lods (bad) les and (bad) aas or popa ret out jecxz mov add lret cli cmp out test jle ret add repz xchg mov in inc outsb out push test rorl lcall std ficomp scas add mov loop ret or xchg lahf iret sbb pushf cwtl jmp repnz out push lahf cs inc fucom or cmp and cli pop ret iret adc pop sbb jae inc mov inc cwtl je fs inc movl lahf push movb sub data16 in (bad) adc out mov ret jb push dec cltd cmpsb inc lods xor (bad) mov mov lods test pushf sahf out imul std push stc ljmp out stos ds sbb leave mov out loopne les jp push pop and mov enter imul movsl cmpps out or or out addl dec sub out jp xchg mov cmpsl xlat out es push push loopne pop jle push out pop in sub push js dec (bad) and adc enter mov add scas imul in out adc pop bound das lock je out stos pop dec xchg cld jg pop ss pmullw clc aas out pop inc mov or pop push pop in add mov fldl into cmp clc fistpl jmp adc lea pop or mulb fist test out lods (bad) or fsubs (bad) cwtl out les sbb lret out pusha out push adc xchg cmpsb mov das inc jp orb jns lahf sbb mov popa pop ljmp jmp in and jb out and rorl jnp out mov adc push mov out inc add xor out jae lods xchg dec hlt pusha adc out push jge lds out sub std cmp jns sti xchg (bad) stos es (bad) ret lretw out mov jne inc adc or dec add inc sarl shr mov es scas imul push pop call out cmpsb fdivs pop and hlt xor xor bound enter pop into ljmp jl call xchg out pop out xor out push sbb cmp push repnz repz and call mov iret adc in sub add xchg and or stos jnp out sbb (bad) sbb (bad) nop insb push int and scas mov xchg xor jo inc out aam mov adc jns cwtl loop repz sub jg jb cmp cmp add imul stos data16 lahf cwtl jg cmp sbb sub (bad) in out mov out jl xchg push mov popf lods mov ds (bad) scas dec xlat sub mov cmp mov mov repz jae in fmulp push pop adc inc stc int3 lahf in fwait imul cmp and mov daa pushf inc sub jo dec xchg ja xchg push cli out mov adc lock bound in lret add push jae or leave decb fs out xor in int repz fimul (bad) aad ljmp mov cli and pop push cmp fdiv in xchg notl rcrb pop add xor (bad) fadds enter outsl adc addr16 push pcmpgtd sub (bad) cmc push xor and cmp jbe adc (bad) popf out aaa out out adc (bad) out and cmp jne loopne stc aaa hlt repz int or out ds fcoms jo jl mov sbb push cmpsb sub cmp hlt js stos or popf dec ljmp out adc fsubl std sub mov mov imul cltd fbstp xor out mov and sub imul dec ret out das scas mov lods out (bad) xchg in inc mov jg stos jne out sub insl cmpsl xor push pop stos fistpll addr16 pop xchg lods or pop shl push arpl and cli jge icebp je mov movsb outsl data16 pop out js pop loop lock ror cltd and mov push dec out jne push pop add int and addr16 out and (bad) pop outsl pop mov out mov aad data16 rclb out mov sub out and pop loop jb iret dec (bad) (bad) ljmp xchg jmp scas stos clc inc xchg repnz and das andb jmp out push sub xchg out shrb lea (bad) pop in mov pushf out cli (bad) mov outsl rcrl jle sub jl push sub fmul jecxz adc sbb push sub mov int3 mov cmp ret out dec jge lock out insl jmp jno jg lret out (bad) xchg out popf and jb in and mov push pop ljmp xchg xchg out lret aam mov push out arpl cwtl lock and in cs out mov into loopne mov and fs dec popa jbe test out ss out sub hlt movsb or loopne add mov jg int3 fsubrp daa sbb cmp cltd adc out push loopne imul sub out fisubr jp out xchg dec aam loop xchg add pop out and fsubrs hlt aas adc shr push sbb cmp mov xchg pop insb out std out cmpb mov mov mov mov sub pusha mov stc mov fsubrs mov xchg jmp inc nop out leave cs push out push add pushf sub mov pop dec sbb imul rorb hlt push mov pop lea pop adcl inc fsubr sahf negl loop sbb in (bad) scas and jecxz out lods hlt jns cmpl fildl sub jno mov movups sahf insl push pop aaa leave push mov insb std dec push in jecxz (bad) out ds shll push mov inc arpl jnp daa leave pop out int xchg mov out cs xor outsl mov push push ljmp out dec pop mov cmp adc and fisubr insb add and sbb mov mov jmp shr pop mov adc test and sbb in in ljmp sbb xor out cli shrb sub mov inc out dec adc push out cmp popa out out or rcrl cmc ds push jnp loope scas pop in rorl pop push movsb mov xchg fcoml test loopw ja arpl imul loopne dec lcall sbb jb mov push sub lock js mov mov sub push inc loop hlt test icebp daa mov out pop test cs lret fs inc addr16 sub xchg jge cli std or and (bad) pop cmpsl cld xor fnop int3 je out and movsb push mov xchg and out adc ret insl cltd mov out sub out jb lods mov xchg dec iret out daa sbb or add (bad) (bad) popa std dec ljmp lahf std lcall arpl cli mov push or adc push inc loopne dec loope out dec inc pop dec lret sahf daa dec out (bad) cmp hlt out sub xor jae adc (bad) test fildll cmp insb sub lods fbld and call dec (bad) cmpsb mov xchg xchg loope movsl aas inc out mov scas add lods mov jle push xchg (bad) sub cltd pop pop lock push aad scas jns cmp xor out lret scas (bad) push and iret andl xchg pusha jl xchg out repnz cmp mov jl (bad) out adc or sub jae pop incb lcall fs push xchg test inc out out js es jbe test cmpsb out leave adc or movsb mov lds adc mov lret xchg jo jg repz push mov jmp push ss push faddl fisubr inc pop jbe pop test mov sub out (bad) mov xchg cltd idiv pop out sahf lds je lret out xor xchg addr16 push insl out push insb mov inc out imul inc sbb mov adc loope xor cld roll xchg imul (bad) cmp mov push movhps sbb dec pop sbb js push push jae sbb out lds nop push shll out ret sti xchg scas mov call insl out xabort ds std (bad) push (bad) jne pop js popf stos mov iret xlat pop sahf dec call ss in ja sbb mov aas out inc mov sbb mov and push dec in mov mov mov scas inc jnp out push mov into jne rolb mov push in cmp jnp xchg xor out xchg int3 enter data16 jnp out clc fadds ret fwait out fdivl repz out inc lcall das xor cmp aad je ret inc adc push pop inc add iret and jnp (bad) mov or cs je mov mov out jno pop push popa mov (bad) inc xor mulb rorl jge cwtl out jp cli inc lea pop in inc jo pop ja scas push jg push mov push fisttpl or pop int3 ds in and out or (bad) or lods outsb out adc out les fwait xlat in out or cmp out jp push inc fsts mov shr jle cmp scas push (bad) icebp out pop ret popa stos cmc xor out push push gs cs out push sub jg push mov and das sbb popf jbe ljmp cmp sti out out mul or out arpl xor loop das fidivr mov mov (bad) and int nop inc out lret jge call mov lcall and pminsw xchg loopne out popf lock adc xchg cmp fwait (bad) popa cmpsl push decb out (bad) sub call es jns xor jmp xor push out mov mov je push stc adc rorb push sbb inc stc xchg out mov add es mov xor push daa lds xor in adc loop loope push daa pop (bad) ja sub loope (bad) subb sub pop jb mov mov insb cmpsb cmp lcall pop push pop shr into out mov iret mov scas int add out in cmc or jg movsb adc out mov cmp scas mov and fistpl loopne mov jb xchg inc pushf push jle inc in repz xchg xchg jmp (bad) out push add sbb aaa cmpsb sub test out lahf repz adc decb ret cmp adc push xor das xor aas pushf out adc loopne imul sub aaa notb xchg push (bad) int popf out push cmp and es adc lock aas fs das lcall je out pop ljmp ret out push mov call sub inc fucomi jb in ljmp faddp stc push test out cmp mov lock imulb out or cmp xchg jns out xchg sub int3 xchg shl popa jmp out outsl addr16 pop sub lcall arpl test out scas icebp jo rorl rcr (bad) push mov mov sbb sbb xor (bad) fisttpl sti popf push imul xlat out fucomp mov cwtl std fsubs xor out mov daa xor insb mov nop push inc cmpsl int dec jbe xchg imul pop fcoms cli dec or lea fcompl lods adc dec pushf lcall jmp xlat sub mov out movsb pop js add jns (bad) loope dec outsl jne std out push mov (bad) xor sbb mov insl inc xor or data16 cmp stos sub push fmul dec push lock ljmp mov shr (bad) xorb dec insb stc mov push fnstsw jecxz out stos in mov lahf scas out xchg pop jae popf cli out xchg and outsb out repz out leave mov lods adc jne out pop pushf jmp pop xchg mov lods inc aaa out add aad shrb jns cvttps2pi mov xor cs jle cmp jg (bad) out cld jge insb daa rcl mov out (bad) jbe (bad) imul sub push int movsl aad (bad) imul xor sub daa cli rcrb lahf loope cmp (bad) mov incb std clc (bad) (bad) jmp and mov pop mov inc push stc mov in out cmc fsubr sbb test (bad) (bad) jge popf gs pop xor mov fsubs mov loopne (bad) mov pop xor adc xor outsb pusha out scas cmp lcall test xor cmc mov lods adc add pop out stos movsl iret ds jne out (bad) mov or pop mov push ja sub out xor pop mov ret outsb or pop rcl adc incb xor mov (bad) fs out pop adc scas xor or out loop andl jecxz jno,pn mov out scas cmpsl push jg pop xor insb pop cmp aas fwait jno fistp mov clc dec jnp inc loope iret out fsqrt enter sub fwait repz das clc push and pop out xlat add jg pop scas cs pop pop popf push cld (bad) loope mov push out ja dec aam pusha inc (bad) out xor cmpsb xchg mov inc (bad) outsb xor xor or cltd outsb test out into jl push fwait jne jae xor notl push sub lahf and loopne and out incb xchg sub repz sub mov pop jnp adc js out sub out fdivrp shll out leave ds cmp in out dec mov out cmp in xchg inc roll dec inc push (bad) mov xchg lret shr mov out addl stos cmp push out bound fisubrl test pop or xchg movl pop push out bnd jbe out (bad) and dec xlat sbb pop out test cmp mov sbb mov out clc xchg addr16 sbb jmp out out mov out xor jnp pop cmp jecxz bswap lea sbb sub fidivl out jbe mov mov mov out stc std lcall in popa or jecxz dec dec out out inc lock je shl roll imul out sbb stos sti stos out mov (bad) std fwait jl shll inc (bad) jp es dec adc test out xor repz (bad) aam aas stc xchg hlt je out aas and out add or out leave xchg adc jl jb mov xchg out jae mov add or mov out in dec in jle out adc daa pop mov ss int3 inc sbb mov mov sbb lcall ret out jle clc (bad) call aas ljmp out cmp mov roll mov ror pop faddl rorb clc inc mov mov jle adc inc or mov cs ss push out dec sub adc add lcall int3 stc sub repnz rol sbb iret sub out insl mov jecxz or xchg arpl mov add outsb cmp mov mov gs out dec sub inc outsl add sbb cmc push xchg in xchg push xor lods int3 je mov add scas jp out mov jmp xchg jnp int xor out push sbb (bad) or pop test out scas (bad) loopne out mov xor dec js xchg ret fbld (bad) ljmp loope add adc jle lahf out stc push mov out lret js cld repz mov jb pop or fs pop fwait dec jp sahf mov cmp pusha aaa outsb hlt leave out rcr mov in xor cmpsb xchg dec push rcrl out lret rcrb or and inc xchg pop out xchg push mov pop out icebp pop ja dec push (bad) push mov sbb repnz cld sub sub and sbb sbb and xchg bndldx adc sub lock lods xor xchg lds ds jg xlat insl adc bound xchg out or arpl insl add jbe xchg fcmovb add xchg out enter sbb scas std sbb test sbb shlb mov popf or cmp dec out scas mov mov out imul test iret insl xor dec sbb out xlat jle push push mov pushf out int mov xchg pop and ja loop cwtl cmc pusha jb insb out (bad) jne push fisub xchg bound pop fldpi xor repz out push insl ret out lods jno pop cmc into dec jb iret (bad) sub mov cmp sahf mov pop ljmp inc pop adc mov jp sarb sbb mov fdivrs and cmp dec dec adc or shl push ficompl (bad) pop scas adcl out arpl sbb xor mov int jp fucomp ret lret jge pop shrb out loop and dec sbb sub mov or jns (bad) clc cvtps2pd xor cmp lods xchg out or data16 push sub push sbb jo shr add rolb xlat sub push mov pushf inc pop out jns out mov mov out je flds sub stc jo (bad) call cwtl out (bad) mov das sbb jns outsl dec push xor movsl sti insl test lock in js lods sbb push out sub sub lea bound test xchg imul pushf adc cmp loopne inc (bad) sbb add in pop lahf inc clc xchg out mov xor add lcall insl icebp movsb loope mov adcl pop out inc lcall int out dec scas sbb sub or ret outsb adc out scas cltd xor mov sub dec lcall push (bad) mov sarb bound or (bad) add out lock inc add mov loop out dec insb or mov icebp mov xchg das out daa xchg adc jge ss sub jb sub pop aaa inc push ljmp das jno add das push xchg leave pop jo pavgw sbb push sub or out ds aam xchg fistl das and cmp jecxz out add out mov push mov hlt sub pushf lcallw out sub dec in adc popa ret out mov push (bad) mov add ret inc jg jg cmp mov mov dec sbb out cmpsl scas add lods (bad) jmp iret pop lahf iret mov and inc mov out mov bound add daa enter (bad) cltd cmp dec insb mov psubsb shlb adc je out outsl rol adc int3 lea out fcompl pop jae je test push pop mov in lock or fdivp mov or arpl (bad) test popa dec inc pop (bad) insb push add add test sub adc mov add sti dec (bad) in pop sarl out xor xchg adc clc int3 out mov cmp sub in loop call and pop and mov decb sahf push sbb dec push jg cmp cli arpl inc stos sub loope in xor enter out imul out leave xchg gs out jbe lret hlt mov push xlat (bad) iret cltd adc loop inc cs dec sub jb mov divb mov loope jno cmp in cmc mov test out insb xchg (bad) mov sbb (bad) lods fsubs adc or scas test out inc and or dec in out fs cmp lcall inc add mov xor in popf mull lea stos push jg xchg sbb jb lods lock out dec push mov int cmp adc xchg jge addr16 cmp xchg out rorl xor sbb in push mov data16 inc xchg loopne lock test sbb loop sub sub in les ret jg jecxz xor cs out xchg mov loop adc out and cltd pop fistpll das mov in mov iret cli push push (bad) mov out jb dec jbe pop jle out or (bad) dec sbb pop mov xchg loopne add sub dec push sbb cmp xchg out pusha mov shrl pop out movsl xor pop sbb xchg mov ljmp out sbb out or sarl lds adc in mov xor jo sub mov (bad) or sarb mov outsl out jno mov and das in mov or js fstl sub jecxz xor sub pushf clc out cli xchg insb mov fs les addr16 or andl out imul ss dec dec ds jno mov ljmp add dec popf out mov pusha cmp hlt dec (bad) jle or scas xchg sbb ja push and popf or dec cmc inc ror loopne inc loope pop and cs jnp shrl aas mov mov call lahf jb pop push jge lods in xchg inc imul ljmp and out mov dec out or imull out inc xor jbe jge out xorb in rcrl sbb out cmp aad aas out pop cli sbb adc inc adc jns lds pop icebp adc out xchg sbb stos xor pop or outsb cmp jbe mov cmc jae in out jge pushf les fcoms out or push lods out enter mov mov out dec loope mov out mov mov lcall sbb cmpb mov test rcl jae cmovo push sub bound push vrcpss minps lret lods lods dec adc mov pop cmc jo xchg movsl mov out cmp ja pop pop pop outsl int3 mov mov xor ljmp iret fadds jle dec js push inc imul rcll verr in icebp pop pmaxsw add mov sahf cltd xor out add arpl adc out mov lret int push push out push and jo lock aam sbb setle fistp jp lods push jno jg sbb xchg iret push xchg jne fbld test out xor mov (bad) pop arpl mov add out xchg inc dec pop cltd jge mov ret insb daa add jl out sub (bad) sbb pop dec in (bad) lock jno adc sbb sub outsl ja out pushf xor mov insl or lock lret xchg cli iret cmpsb dec cmp pop jecxz inc repz sub enter in mov dec call out cmp add adc sub in inc sbb fcmovb pop jb fucomip stos into jo lcall insl pop mov loop jmp pop xchg mov inc pop sub sbb fisttpll out mov push out xchg mov push mov insl out outsb test leave enter sub or pop dec pop out sarl in or xchg inc and ficompl mov dec imul dec pop out or add sbb sti cs cmp pusha cmp arpl jmp xchg out stos cmp rolb pusha push mov lock add push push cmp cmp nop rdpmc out sub out fldt repz clc arpl xchg in mov inc sub mov (bad) (bad) inc out xor sbb outsb and movd lods (bad) mov jecxz out insl jp lods lret data16 cltd push out sbb je xor leave out popa lods inc fistpl and push out xchg int3 sub out ret out scas aam fcmovnu mov stos punpckldq mov pop ret jno mov jnp pop out repnz add dec adc inc stos sbb push jno (bad) out push mov mov jp sub das mov lahf outsl xor divl test dec js cmp mov sbb push mov ret inc in cwtl sub ret and mov add out cmp orl ss cmc sub jle xor xchg xchg xchg hlt cmpsb out xchg adc mov ds out xchg push insl mov dec add jecxz sub sbb rcrl in dec mov imul fwait lock sti xor mov lcall testl mov (bad) and jecxz mov push (bad) dec lahf sbb daa out add es adc pop push sbb push mov mov out (bad) idivb cltd out into (bad) sbb sub inc ss fldt mov cmp icebp pop and cmpsl fisubrl cltd mov stos sub fnsave add sahf sti or add push lret insb xchg stos pop out dec jbe into xchg ja (bad) out pop mov pop test and imul outsb es out mov mov inc (bad) mov or stc enter sub jmp sbb in (bad) loopne cmc scas rclb fsubrp mov xchg jle (bad) or (bad) cld mov popa lods ret imul (bad) mov sbb sub xor out ret dec lret int3 aam in cmpsb xchg mov in jnp out leave adc insl xor lahf xchg icebp jne aad cmp push leave push andl inc sub mov pop out test movsl imul int3 push cmp mov (bad) or cmpb ret jmp pop rolb cli lcall pop jbe out xor cmp cmp (bad) mov sbb ja into sbb or mov add lock in out sbb and xchg test ljmp movsb mov out cmpsl xrelease lahf push stos out jns sub hlt fmul (bad) fsubp loopne out mov mov sub pop inc fsts adc pusha push mov dec jp xchg push push je in push pop popf mov outsl out mov cmpsb insl jno pop inc push or scas sahf sbb inc inc out fcompl cmp out in xor and out adc fdivrl jae pop push out nop pusha cmpsb pop or xor bound pushf (bad) outsl out push jb cltd popf stos test into (bad) or jbe subb add lret pop out ret js stc (bad) mov mov shrb popf cmp hlt xchg cmp out aaa xor in mov jp sbb ds inc clc out sahf leave xor movsl push lret mov dec stos inc ret iret sbb mov jno jecxz add (bad) cltd push cmp imul out add scas ja sbb xor mov shr hlt sbb (bad) lds lahf or inc jbe out pop (bad) inc jnp repnz push jno shrb bound out xchg sub mov (bad) out sub inc pop and shr pop adc jg in inc test out ja je mov enter (bad) sti push imul lcall adc pop adc in fldz xchg pop fdivl data16 fwait xchg in sbb or jae add xchg pop mov popfw imul repz (bad) and push jo jl mov cmp out dec push mov out add mov sub cld pcmpgtw cs je sbb jno adc insl pop cmp sbbl incb xchg mov pop adc pop or es mov aaa sub test push je nop mov call jmp in rep icebp xchg out jae (bad) fdivrs test lea out add and xchg dec jo xchg mov cmp jg rcr and pop dec dec sub ljmp lea (bad) mov out sbb cmpsb sub adc mull sbb (bad) insl lcall lock push ss fild xor xor stc xor pop adcl out imul js mov jo ficomp shrb fwait dec mov mov out (bad) cmc push out bound aas subl push rcr (bad) call mov mov scas pop movsb out push and in cltd rcl std out or hlt and in jp push jmp out add add (bad) xchg pushf push out add sub push (bad) push ret scas jg lock es aaa jp mov testl cmp pop pop xchg lahf push adc addr16 adc stos aaa stos jbe popf out and clc mov out pop sub in lcall xor sbb mov ja jbe ljmp sub inc jmp xchg out jne sbb cmpsb mov dec mov or outsl xor adc mov inc xor in add outsb mov (bad) iret sbb cmpsl push (bad) repz cmpsb and fldcw pop into and in jb or jmp (bad) ja sub push mov stos xlat cmpsl out add adc fadds es out dec jnp jge sub pop int add enter aam mov and push ret jg out insb loopne mov out les mov lahf mov jl shrl dec add or aad lea sub mov dec pop scas push loope jg sahf pop add adc jge fimul (bad) mov pop cs jne jno mov clc lea and insb mov (bad) and or adc stos imul fs push test jmp add inc roll sbb (bad) or int test in mov pop adc lcall (bad) inc rol pop mov insl sub repnz data16 call inc adc xchg out std popf adc sbb out fs pop pop dec movsl mov pusha xchg xadd mov scas xchg fimul and adc mov mov aaa outsb xadd push out jo lret lods cmp pop call add xchg jmp out popa hlt cmpsl inc pushf mov in dec and out shlb pop or jecxz out roll add or bound int iret sub dec out mov jmp (bad) mov enter shr mov hlt dec out (bad) in mulb xor pop bound adc mov add xchg dec push mov xchg dec pop out xorl outsl out lahf mov and xor int3 mov push out clc cmpsl sub cmp lods rcr loop inc (bad) out xlat push pop in out sahf sub push sarb outsb movsb loop or stos push sub mov adc pop and out mov mov add jne jns nop stos fistpll mov jp aas loope or push mov inc out pop test out jl nop orb scas pop mov cmp cmpsb call js out sbb or daa movsb aas jo ret or bsf cmp mov (bad) mov outsl pop int cmp cmpsb je mov dec leave or out push push cwtl ss out mov or ss pop popf jl cmpl leave or out call sbb out push cltd mov dec ss ljmp mov sub sahf jp out rorb mov sti stos dec out (bad) jo dec loop and push nop push popf inc (bad) cmpsl stos and and pop jecxz sarb pusha test out cmpsl cld pop mov out dec (bad) aad and outsl pop cmc xor push sbb xchg insb out das test cmp fisubl outsl jle int push es decb cmpsl lahf xchg xor jecxz mov mov fstpl sbb cmp xchg lret inc xchg pop lcall dec sub xor out (bad) cli sbb sti xchg and out or cmp xchg pop mov iret jmp adc sahf inc pop loope scas sub int3 out fdivrl sub mov test push test out add mov faddl sar outsb shr jge cmp push xchg cmpsl (bad) xchg cmp (bad) hlt sub sub mov pop out dec xor xor pop rclb insl jns jb incb pop xchg insb jbe rcrb scas inc inc xor pop (bad) rolb out (bad) ss mov jb push out mov pushf adcb jmp int es mov dec adc sbb fstpl ficom jle test (bad) adc cmpb inc mov mov mov loope push test insl jge popa (bad) cmp out inc mov mov (bad) lods (bad) popf sti adc pop add jmp insl data16 jl push xchg ja push stos in mov cmp pop shr ja daa jp pop test mov outsb mov leave out cmp sub in mov out cmp out mov arpl imul enter imul (bad) movsb mov cmp insb std xchg call (bad) sub dec cmp jge lea fstl push mov lahf jmp fmul mov inc aam jl cmp add xor out mov outsl arpl das iret fsubr or rclb dec jecxz mov pop cmp imul jmp xchg mov aas loop in mov cmp jmp pop cli lods xor lcall out sbb in addb jl push clc xlat add pop push inc ljmp dec out adc aas mov mov test jb lods cltd pop aam cmc out dec or scas push out test xor (bad) and fmull scas out adc imul jb jns push xor icebp out aam mov out js sti outsb inc es pop loopne push clc loop idiv sahf stc addr16 or adc or in and imul pop ret cmp xchg test dec int jmp pop popf call data16 daa sbb loope out (bad) dec fs outsl and mov jmp int3 or ret cltd out dec mov hlt ljmp sbb pop out or dec mov shrb out or lret mov (bad) maxps push add mov inc je js clc xchg or out push pop add sbb out and cmp stos sub cltd out mov fsubs push out jbe pusha jge adc lret out data16 xor (bad) fist cmp sbb rorl pop push push ljmp out fwait ret or jnp (bad) out shlb inc pop iret sub inc shr cmp and push dec in daa out dec ja sbb gs das and push pusha out daa pop pop outsl mov push sub xchg je pop outsb mov jle sbb jmp inc dec sbb loopw push paddq out repnz dec js lahf mov leave imul pop not out aad aas xchg xchg push dec inc out pop jb bound xor inc out iret scas mov mov pop dec out or sbb outsb out paddd gs sub cmp popf (bad) mov add or and push mov mov int3 gs std (bad) in mov xor cmp jne,pn out inc call adc out sub hlt or out pop jp divl leave adc (bad) mov and ljmp or and xchg stos call jmp aas cmp movsb gs out rclb pop xor or and sbb aas in jg pop pop out out enter jl mov fistp insl jb scas jnp cwtl or popf and dec mov (bad) push cwtl out gs fwait sbb repz pop out xor and orl push out js gs xor mov fild lahf fisttpl push call or cmp push sbb cmp sub loopne shlb adc gs mov shll cmp dec push ljmp mov in fdivrs (bad) scas lcall orl inc mov cmp or mov sub sub mov jae jp aas out inc add (bad) fisttpl push ja ret movsl in addr16 int out sti ss xchg sahf push dec pusha out cmp in mov xlat call push push add scas lea mov xor out xchg xchg stc out int aad adc dec into in jg (bad) aas xchg jns ja out test sub (bad) out fmuls push push (bad) jb mov in mov jno adc out cmp lds xchg insl imul jg xor out push rcrb mov xchg jmp dec adc out push cli jmp (bad) out ror clc dec cmpsb test mov out data16 cltd test adc mov mov or mov inc (bad) loope xor jmp xchg imul stc xadd pop out cmpsb nop xlat icebp lahf xchg sbbl fild ljmp out mov inc fldz movl xchg push je (bad) or loop jns frstor rcrb out popf sub scas jle,pn pushl call out aad out pop fidivr pop or cmc dec lahf xchg xor popa insb dec or out inc push imul loope pop shrl mov push into cli cmp jb add adc iret das inc mov cmp lds aaa subl xchg into push call out xchg es jb int push bound pop mov jmp out mov add sbb test aam test je adc xchg sub mov js sahf fildll lret mov sbb pop sbbb or loopne in shl dec into mov pop push cltd rcll xor mov sub lret out jmp cmp pop jb and out dec dec out cmp fsubp test sti pop pushf and ss addl test out fwait sbb xlat popf push inc sahf lret imul ja ljmp addr16 xlat mov scas lahf out xchg adc and psubd in xor out enter sahf inc push and ja (bad) (bad) cmp out test jecxz mov ds mov push insl inc add jb dec pop clc repz jp xor jo out sbb push mov leave (bad) push rdtsc (bad) out cmp dec insb (bad) jns loopne pop add adc lret sbb fs mov pop mov mov add xorl popf loopne stos cld in adc int3 (bad) sbb bound out jge ja xchg mov pop cltd out adc leave mov ret out mov sbb dec or nop mov outsb rclb out inc icebp or lock ljmp xor xlat jge out (bad) pop jae dec in pop cld aas arpl sbb dec fadds ficomp inc enter pop orl add add sbb jnp or outsb out adc xchg or sahf insb pusha std xchg (bad) adc xchg pop sbb inc pop bswap aad and pop (bad) lods enter or jmp sub cmpb and cmpsl fistpll xchg ret mov push sbb out stos mov out (bad) xchg jl cmp out popf adc xor xchg sti loopne push pop mov cmp xchg in test mov inc inc outsb push addr16 sub sbb jne popfw mov ljmp out sahf sub jnp aam cltd out push sub pusha mov dec mov out outsl pop imul out sbb lcall adc inc cmpsl gs ror cmc in ret push stos mov xchg jmp dec cmp pop cs daa add sub (bad) pop mov cmp mov out lahf add out incb ficompl mov daa mov outsb pop jg pop orl out adc lcall sub fs mov add loop sub fild repnz pop xor imul push dec xchg jp icebp mov sub in shll lds out shlb rol out outsb (bad) ficom out ret push iret add out cwtl xor es test lcall int adc test andl loop sbb out bound (bad) imul fisttpll add pop outsb xchg or repnz test out xchg (bad) out sbb xlat (bad) and mov cli nop cmp mov dec mov dec movsl outsb (bad) sbb pop into ret out jl and mov rorb mov inc (bad) je mov jb repz out loopne std int3 dec cmpsl notl or cli mov adc or jge add pop ljmp pop adc (bad) mov aaa jmp in (bad) cmp gs xchg mov repnz repz push and (bad) out lods loopne mov push int out adc out imul adcl and adc dec out jmp pop sub sbb lods in mov aad or or out hlt push int out or mov mov sbb jae cwtl cmp mov loop mov in sbb sub test fsubr and int3 lahf jae and pusha fisttp gs rol mov xor out jl adc imul adc push xchg (bad) pop mov mov imulb inc and movsl call inc rorl jle pop mov cwtl push xor iret imul js jno dec inc add xchg jecxz lods in dec lods mov push rorb cmpsl pop lret out xchg sbb insb lea pop mov call (bad) dec sub pop scas lret sarl sti (bad) push cwtl clc or xchg dec call out popa inc pop inc clc xchg push xchg out iret adc mov out add or ss out repz fstpt sbb cld ret (bad) imulb pop mov jne mov out add jecxz mov add fimul mov pusha pop repz cmpsb stos in inc rorb rolb xchg pop push enter arpl je,pt jg test lret stos outsl sbb mov pushl in pop sbb xor fildll mov lahf repz dec (bad) push inc ret lods popf rcrb out cli testl xchg and ret mov sub out lret adc scas fwait mov jg mov cmp (bad) cmc in fisubr cltd std out jmp fs pop xchg out dec sbb add mov inc out dec mov push pop stc adc popf cmc cmpsl pop inc cs data16 cli xor out push sti mov inc out fnstenv imul ss add fnstcw das jecxz mov sub aas pop mov pushf stos dec mov push test mov out arpl adc mov out mov nop out data16 xchg outsl xor cmp pop (bad) incb in mov scas out decb inc es jae out cld inc sbbl or cltd and push out cmp cmp stc jecxz xchg outsb les adc daa add inc push adc rorb sbb jg or cs out cld sbb sbb sti lock ss and jl mov push pop push iret dec jae in sub inc dec out mov adc sub xchg popf fldenv out or into out out xchg push cltd sarl cmp repz out insl cmpsl cmp xchg call mov leave lahf das mov pop popa adc loop test dec push sub (bad) pop (bad) xor imulb jmp loope fdivs sar mov ficoml mov pop xor lret gs in cmp push mov cmp sbbb (bad) iret jne iret xchg sahf cld ljmp outsl sbb shlb mov rorb cmc outsl pxor cld fs movsb test cmp out lahf fs and iret out out cmp jnp mov and lahf nop sub cmp aam pop je fnsave out in cltd sbb sub clc pop dec insb mov jno imul xor mov sub shr or lret lods push std ljmp insl adc lahf mov cwtl mov xor movl sub aad out mov movsl loope out repnz pop push or mul dec icebp adc movsl and fldenv mov push into xor sbb cmp sub arpl out rorl dec ljmp and inc mov fbstp pop es adc addr16 mov loopne out stos daa ficom cmp mov pop jl neg shr mov push pushf push pop (bad) pop mov jns push call out and cmp out adc fs out jecxz test pop xchg pop cmp mov outsb insb out fwait add mov js mov std out and (bad) shrb xchg xchg pop pop ljmp or cmp fucomp (bad) and xchg jno sbb add jns adc cmpsl out dec imul xor icebp cli ret xchg out out mov fcmovnbe fsubrp and add mov cmp int3 jg mov addr16 test sahf mov adc out push jl pusha cwtl (bad) and loopne fwait jo movsb fmull cmpl (bad) lret jbe in push mov add add out pop jno in out stos fild sub (bad) cs imul lods add daa mov out push adc xchg aaa ja imul xor ret fistpll dec loop gs cli dec fnop clc in std mov frstor out mov pop inc inc (bad) mov lock add lods pop loope push leave jmp mov out cwtl or or push icebp mov out ja xor lods incb out cmc mov test xor cmp test jno jl push fstps xchg loopne dec lods dec out xor add xchg fwait out mov and es push out je jbe mov imul or scas jae rorl insl test xchg shll mov (bad) out pop dec adc sbb (bad) cmpsl in inc pop repnz lods mov ljmp iret inc mov out jne inc aas rorb in out addr16 sub mov fucomp mov fidiv out cmp jle (bad) adc sar sahf inc out inc daa enter and or nop out jno sub fcompl js gs je int3 mov std cltd xchg jb icebp movsb mov push testb (bad) out sahf ret xchg (bad) lcall es addr16 jl shr ss jp pop push test pop sarb and jbe test ss push aaa adc dec popa mov mov pop popf (bad) std xchg in xchg mov cld clc xchg lret pop aad outsb cmp push or mov jns cmpsb dec sbb aad insl call xchg (bad) out sbb stos ljmp das mov cmp out enter cmc cltd dec mov ljmp aas es repz out mov ret sbb dec es cmp lods cli in fs imul cmpsb sbb fcomp sbb leave jg and cmp out jns dec jle shlb mov cmp lcall jae pushf icebp gs or ds stc dec (bad) xor insl popa nop dec pop cs (bad) pop (bad) rcl stc out mov mov xchg mov dec aas ljmp mov pusha clc leave or add fwait sub imul dec dec arpl in sbb test pop rolb in movsl mov out dec push push jmp push mov xchg aaa cmpsl add in out aad mov repnz in (bad) sbb aas mov add pop nop loop ja add mov call sub jp iret cli (bad) push out mov out inc rcr xlat ljmp out mov ret ds out and into les pop pusha jb pop (bad) xor push out xchg insl dec mov push mov iret es mov incb push das sub jp adc pop fbld fbstp jb int mov sahf cmp xchg lea mov idiv stos mov hlt push cmpsl xor or ljmp out mov and (bad) out hlt xchg or pop out and insb cmp mov add cs out jle push lea aam xchg loopne in inc ljmp out inc ja sbb (bad) adc pop mov hlt js shl jle jg jo in (bad) imul mov or fsubp mov decb jle pop stos (bad) push mov adc inc out fwait push ss movsl ficompl outsl test out flds mov push pop cmp enter out stos cmp pop (bad) arpl out pop fist stos seta mov fwait cs mov out sub and sbb adc cs xor push out inc fwait cwtl adc out repz rorb mov cmp outsb ja gs sub lock stos test mov add ljmp and sub lds xchg jp inc or loop test or imul inc repnz les out cmc xchg push sub movaps (bad) pop aaa data16 out cmpsb out and fiadd cltd pop mov mov jp push ficomp mov js out adc inc cwtl shl pusha ja (bad) out add loope iret out mov pop sbb jnp push add movsl lods imul out std pop mov push mov rcl test add pop std adc out movsb bound add cmp in cmpsb arpl lcall fisubl cmp aam lret movsb out (bad) adc (bad) lock js pop cwtl rcll fdivrs and sbb gs dec fcompl add fldcw in add mov inc es (bad) xchg iret daa ret cs out outsl das add ret in mov sub mov mov int3 loopne out dec dec mov mov repnz xchg inc test aas sbb xlat xor cmc adc add stc sub xchg push fisttpll imul pop imul cmp mov int3 cmp out push jo xchg mov push dec out das push cmp lock xchg out adc inc mov pop ret out mov in out and cmp mov or loop xchg punpcklwd out adc out bound mov jns out xlat hlt es mov jg out in xchg mov pop sti insl add js xor pop out push mov pop xor stos and dec push bound cwtl out or push xor xchg jbe out pop fisubrl add je aam or out rol outsb lret dec jne cmp mov jmp jnp movl out lcall pushf inc pop (bad) mov outsb aad adc out push repnz add hlt (bad) out adc push or bound test inc adc push xchg ret lret out (bad) xor daa pop jno in imul out int jns pop arpl jno fidivl insb out dec mov mov test sub ret out lret pop out and and sbb add insb out (bad) mov xorl inc loopne inc je sahf dec out push mov jb jp lods flds inc lock lcall push notl int3 (bad) pop mov lods jmp sbb pop scas hlt pushf scas popf xorl add pusha push push out add mov dec mov xchg (bad) adc mov inc out insl jle sub and mov sbb data16 rcrl jp out fist cmp repz out inc ret push mov movsb outsb and ljmp and jb aad pop out xor jecxz adc (bad) arpl insl jmp xor add mov int3 rolb out and loope pop lods iretw out test movsb mov pop push dec and pop adc add pop rorl pop iret pushf mov insl sbb sti and xchg or cld mov fnsave push add inc add (bad) clc imul pop xor cltd dec (bad) dec sar xchg xor sbb jecxz das add test out jge lret cwtl jbe out mov js out fs xchg adc sub decb call aam in mov stos cltd out popa fnstcw or dec out mov adc lcall cmp insb xor out in jl loopne std or adc inc lods lcall loop jp mov ret lea and jle fadds scas sub add mov pop aas jge xor fsub pop std jmp pushf out push push push pmaxsw push aaa cltd jle sti (bad) jbe test mov add mov cmp in popf leave lahf xchg push cmp out fsubl (bad) call aad lods lds inc mov cmp jbe jno sub push out push mov fsubr out xor jbe insl inc (bad) adc shrb xor sub test (bad) int into out mov dec adc cld lods jg inc out std outsl pop mov dec outsb stos test clc or dec (bad) mov or out hlt jl push lock out mov gs push ret out sub cmp outsl daa rolb mov sahf out divl xchg es out xchg in jnp add mov shl gs out sub out mov mov in pushf out jecxz repz jno sbb out xchg fiaddl adc (bad) testl gs fist and movsb in out inc movzwl cmp dec jne (bad) xchg pop xchg jp sbb loope lea pop ds stos incl mov inc xchg arpl out jbe xor mov jl stos stos out lahf dec pop sub cwtl push insl movsl out and icebp loopne add popf out enter cmp add insl adc imul dec jb in (bad) cld push dec out adc and out or add out push arpl mov test xorl in (bad) lock add out pop rclb insb out data16 jge aas mov out stos fbstp cmc loop movsb xchg out sub mov fidiv insb push out pop lret xor add out aas add cmp out push popl mov xchg stc (bad) pop cmp cmp ret arpl aam aaa repnz clc out cli daa sbb nop es dec dec pop jle pop out push adc mov mov icebp lods cmp xor cmc inc out push pop sbb adc out fidivrl sahf adc or fbld push (bad) popa loopne addl out in lahf mov sub aaa cs out mov fs es loopne mov in shrb out sub xchg jmp lea push (bad) dec pop cs mov imul fbstp dec (bad) scas in add scas (bad) xor in sbbb jg fcomps pusha (bad) loop add xchg xor cs outsb jo out or jecxz pop pop int ja pop mov daa xor mov add ljmp adc fs jle mov out xchg jns out pop aad mov xchg or repz out dec adc fimull xor mov dec or xsaves push sysenter je loop pop cmp ficoml xchg inc xchg aas (bad) out inc fsubl outsl js push shlb (bad) jmp inc icebp (bad) mov jle inc out std sub stos sbb data16 xchg outsb cmp sti in xchg xchg mov and out in and cli add iret scas fsubr gs out add push push (bad) ss test nop loop jmp mov inc mul jle mov xchg into icebp out mov test jae pop mov stc pop or mov hlt out (bad) jo sub (bad) xchg jge out jg test xchg fistpll test int3 xor pusha push cmp in out mov sub sub (bad) pop popa mov mov push pop pushf and imul out loop cmp sub add push out (bad) or pop loopne in pop loop test ds out mov xchg sbb loopne stc add jp inc adc (bad) xor clc push out in stos mov out pop push sbb ljmp (bad) sub cmc out (bad) add inc pop cli out dec lea push lods and aas in and test out (bad) aaa in fldt mov out out xchg xor add xchg shr push (bad) sbb dec enter outsb or cs call loop jnp mov ret test inc sbb push je clc mov orl jne mov pop or out push inc lods mov out lock mov xor ja js rcr inc out lods orl mov sub adc add cmp mov dec xor into jg mov mov lock xor mov fsubr jl cwtl and push jmp ret out dec aas loopne mov add in lea jle add cmp inc inc imul pop cmp dec out stc mov mov mov (bad) out aas cwtl test sbb lods rcrb and notb std pop sub pop cmpsl push test das pushf iret adc decb aaa lds jp out xlat sbb dec add cmp out dec pop (bad) xor dec pushf push xchg out negl addb fidivl jbe lock lret das rcrb pop push out out inc xor sbb inc sub inc cmpsb popa push hlt mov push jnp add add sbb pusha pop push scas test or call and daa movsb add jbe idivb out fstpl mov (bad) inc out push jle sti rcrb xor les cwtl test adc xor loope sbb ljmp xor repnz xchg nop cmp (bad) lea je mov clc push dec mov (bad) jno test cmp outsb sub adc sub sti dec sub cwtl mov pushf dec out ljmp sti imul in fistp jo mov imul add jbe ljmp (bad) shlb pop imul add push push imul dec pop notl jl and loope out cmp shlb mov xor xchg data16 sbb add push and loop arpl push insb rorb inc out jb mov mov cmc push adc jno adc fsubrs out outsb xor pop (bad) sub or insb lret ja out push and pop test sbb sbb imul xor pop add and inc cmp mov xchg out shrl test stc out pop adc rcr mov mov aaa push lea push sbb mov inc inc outsb or cmp pop mov sbb imul fildll xor aad dec mov fcomps popa jg adc and out leave in xlat ljmp sahf test jno (bad) adc push out call in and int3 push xor in mov imul (bad) out dec mov pop sar bound insl (bad) addr16 into (bad) fsubrs mov jnp out scas mov outsb or loopne or in adc ja lahf dec pop out dec mov add repz addr16 rolb jae mov inc in mov insl xor mov out cmp out adc sar ja imul iret or and ret xchg int sub xorl lsl jo out mov out xor ja add lret mov cmp xor jno adc out dec cmp push jnp add xor jecxz push out lds xchg cmp out add sub ffree adc loope popl or ss or test out dec leave pop addr16 aam xchg out (bad) xchg jl or sbb lea push popf (bad) in inc push notw xchg nop push sbb and out xchg lods jb repz pushf mov pop adc loop dec xchg mov inc xchg lods sahf lret outsb push mov (bad) int mov pusha xchg pop out stos push lcall pop popa das shrl rcr (bad) outsb pop out push adc movsl sub cltd out xchg dec mov xchg out stos mov call or popa jl xchg movsl sub push out pop sti jecxz aas pop ljmp sub push inc out rclb lret mov std push stos mov pop dec inc nop lahf out insl add (bad) pop lods outsb sub sahf shr cmc sti out jp mov lock and cs sub push xchg pop cmc shr mov jle cmp sub (bad) insl xlat mov push mov or push xchg es lods in adc push mov jge loop ret jmp mov adcb out or gs mov sub adc out aas cmp sbb aaa inc jl dec mov rolb pop pop and push notl sbb loop mov imulb mov fisubr out pop xor sbb mov shrb inc out mov and pop int3 inc pusha pop mov xchg out sti ljmp stos out dec or iret in dec insl iret clc out sub loop xlat out jo mov cmp in jg mov and in mov popa lods daa cs addr16 std cs iret addr16 (bad) jae into or jle xchg (bad) dec xchg push mull mov mov mov dec cmp add stc mov xor outsb loop or fwait adc mov nop out cmp ja je xchg and and and ljmp adc repz sbb or orb test scas adc lret mov movsl adc addr16 ljmp pop inc push jle js out fisubr enter (bad) and out xchg add mov pop mov and adc int xor xchg pop aad mov aas pop cmpsb lock xor ret jecxz pop sub in out sbb sar push out jl xchg cmp mov loope jge sub pusha mov and xchg iret in leave add enter ds add sbb adc out fnstenv mov out fcmovnb and (bad) aad mov out and es sbb aas mov fist adc sub fsubp das fisttpll sub out push cmpl push xchg xor in adc outsb xchg inc out lods and insb scas pop test pop cs mov insb fnsave xor lret xor icebp sbb mov out mov popf in push decb mov in lea neg mov es push out sahf in cltd xchg xchg inc dec out out cmpsl sub fcompl jnp push adc in lds sti ret out push lret sahf pop lahf xor mov loop and out fldcw loop push cmc xor out pop jle out aad or fiaddl out scas adcb add and in daa fsin cmp jl mov repz push les dec adc sbb aam out or outsl jb orb sub out in jbe lret cmp test jbe out arpl punpcklbw jmp out les loop out sbb ljmp loop dec jae lds out adc imul adc jl repnz mov (bad) out popf in rorb mov sbb (bad) cltd lock or psubsw dec iret ds sbb pop jbe add fwait or rcll fldt insl jge push out stc push insb add outsl shlb sub push stos imul mov sbb ret mov out clc shlb daa pushf adc aas mov push cmp fistpll sbb adc bound jne out stos xchg aaa test test out xacquire leave out in ret fcmovnbe movsl cmp mov sub out lahf jne,pt push movsl call fsubp popa cmp jae aaa ret out rolw insb leave out lret gs (bad) xor dec out in mov sub mov jg mov stc out movl dec cmp (bad) push xchg out bt leave das out xor jp aad dec ficoml nop lret or out out jp sub bound (bad) out jno xor jmp fwait and fsubrp mov dec mov sub lds xchg push stos sbb out es jg movsl (bad) not mov ret ret jns loop xlat in adc pop mov movsb fistpll in mov xchg cmpsl out xchg xchg gs popf xchg das adc dec (bad) movsb fstl or out test push fmuls mov stc scas xchg repz out and dec pop outsb sub pop into jno in insl mov jle push pop inc imul lret jb lds add mov (bad) adc inc in push out and stc sub xor (bad) ljmp imul out jno dec adc mov fsubl cmp loope,pt push jg mov cmpsb fsubrp leave sar push ja mov mov stc dec dec pusha fidivr push aas and arpl out orb and jl jmp lods ret in out call test pop cmc nop sti (bad) mov pop (bad) bound cli mov out dec jnp inc cmpsl cltd mov mov mov xchg sbb xchg fs out mov jecxz hlt out jb sub mov mov enter cmp out cmp (bad) cmp ret cmpsb pop loopne cli jge jecxz lods test and pop lcall add xor mov out test in imul push out sub out xor xchg iret push (bad) nop lock cmp mov arpl js mov mov pop sub push jl outsb das out or inc out push ret js lock movsb outsl in stc push mov out repnz cmp or xor xchg (bad) jle les mov jns lahf sbb out in adc testl inc pop stos sbbl test sub and cs (bad) std pop (bad) fmul imul out xchg out clc out jb outsl out (bad) fscale mov es dec push out or inc xchg cmp xor (bad) bnd push or call pop ret dec jnp or mov out arpl adc cmp mov cmp lock imul movsl iret sub pop xor out (bad) push inc xchg jne xor mov cmp pop iret mov dec dec adc out mov js rcr mov popf (bad) cmc mov jl out jo int3 add out in hlt fwait push dec lea sti mov ss jle cs test jns or mov pop mov data16 add loope pop and mov in out (bad) (bad) jmp push ret cwtl ss sub or pop jmp xor (bad) aad inc loope add sub std out pop inc repz inc and lds jb test aad push sub jbe or cmpb xchg outsb out (bad) icebp cmp ds adc out or out (bad) dec not jno ljmp inc xchg jle push push push paddb ljmp dec sbb push loopne lock loop stos lods insb cmp and imul cld loopne inc (bad) in jae cmp sarb pop or xor jae aad add dec icebp jns test push xchg adc gs fistl test (bad) mov xchg int3 (bad) imul stos xchg lret imul addr16 fst push (bad) mov loopne mov push das xchg nop add (bad) ljmp lods in dec es lcall push outsl mov sub xchg sub jne (bad) out adc fisubl (bad) out daa loop insl xor (bad) movsb push repz call (bad) push dec out std add (bad) mov out arpl out loopne mov out cmpb pop xchg mov in xor sub and mov das pop or shlb xchg inc out aaa inc or cli js scas add add sbb mov out jge movsl das (bad) int roll out lock dec sub xlat lods hlt (bad) ljmp mov mov pop je frstor ja push sbb movsl aam out push sub xchg pop into pop xchg out xchg out mov cmc int out cmp dec jbe adc and cltd in ss xchg sbb (bad) xchg mov out pop and fwait adc shr lcall mov (bad) out sub insl in adc mov jns or inc (bad) fimull inc or sahf adc das mov (bad) (bad) jle repnz out xchg jnp cmp push out xchg and jle out shl das andb sti push xor sub addr16 imul out test jno decb lds test jle mov iret pop fnstenv in out fistl out mov fnop dec clts pop jmp ret or mov adc fbld mov lods sahf inc fadd xlat (bad) out fstps sbb and mov push les insb cmpsl xor out dec push mov (bad) stc or mov outsb leave cmc bound hlt xchg rcrb xchg and mov popf push mov in nop out js ja add and push shlb lret mov std add dec xchg pusha movb xor movsl and pop out cmpsl enter push mov sbb sub in (bad) out lods das rcrl andb sti negl xchg out stc and pusha jae adc dec icebp fidiv jne add iret mov js in cmp or xor sbb cmp out mov pop out pop pop or out int mov fcoms fistpl dec pop aaa cmp dec jae pop out push out out adc dec cmp test test inc fstl out cmp bnd gs stos xchg popf pop in push add out ja adc outsl out xlat lea dec lret nop xchg push ds mov adc and jne xchg push icebp out mov (bad) cs sbb in push lock orl imul out xchg jecxz,pt xor mov mov push mov sub mov in js cmp lods mov mov mov add outsl cwtl es test sub popa daa ja popf (bad) ret std cltd in sbb iret (bad) mov mov shl push out fildl addr16 cs in or mov inc out jno xor sub mov pusha ret sbb out mov dec je scas mov or ret popf das xor push inc jbe (bad) xchg dec lcall sub mov inc xlat out aaa xor clc mov pop mov push xchg adc jg sub pop out js sub adc mov jge test divl shlb (bad) leave mov mov jno (bad) jo mov insb mov aas lods adc scas push es add pop push inc cmp jno sub notb jmp mov notl movsl adc adc test or fucomip loopne insl hlt sub imul test sti xchg xchg mov sub mov push shlb mov stc sti mov insl out insb cmp icebp or in pop movsl cmp mov (bad) xchg inc sbb out out in xchg mov nop mov shrb cli pop push or out dec pop loope idivb (bad) aas and div adc sub mov lahf aas out pusha mov mov enter (bad) ds or scas pushf lret dec setno mov ret sbb jne adc (bad) fmulp adc mov xchg mov jb cmp data16 sti dec in mov (bad) out out and pop push (bad) leave add push lret mov out mov inc sub add mov cmpsl rcrb in pushf fcoms aaa push out outsb fsts je xchg inc stos cmp sbb push loop enter test (bad) in ds out andl out mov mov iret out dec test popf mov or add push mov fldcw (bad) fsubr add xor loop push (bad) mov sub push ss shll out pop mov mov fstpl out dec fwait ja dec and pop out je adc repz mov xor fidivr mov pop xchg iret iret cmc fcomps mov test scas out lret pop mov xor iret cli mov subb out jmp lret (bad) rcrl mov push cwtl test pusha popa push popf out mov in lock out xor sbb (bad) and sahf jmp sbb xchg pop sar mov and movb int inc inc add jle jecxz repz loopne xor out mov int (bad) clc out andl icebp (bad) jne pop (bad) rorb inc ja add and out sub outsb pop cltd mov mov lret test adc lds faddp lea and out std sti imul out lock dec add sbbb dec rcl and out sbb or cmpsb out pop pop movsb (bad) inc stos out rolb sub add imulb (bad) xchg or and pop pop push lods imul adc and imul xor in cmp ljmp sub nop cltd hlt (bad) idivl push out test mov and movb in out cli pop ja adc mov lret lds iret out movsb negb test dec lcall inc or jecxz dec push psubb arpl je dec (bad) jmp fildll cmp mov fimull out or inc test sbb pop or and out pushf mov out jl xor dec cmc aas push out mov dec dec (bad) pop push gs jmp inc jae fwait out and inc inc sub or cltd and ljmp lds jmp rcrb push lcall and ljmp mov sbb int out and push add fisttp iret (bad) add data16 mov out test fs out nop call mov mov xchg push inc out jg test mov lea out sbb push pop mov push shr insb lds lcall mov push pop xchg fnop inc rorl aas cld inc sub in movsl push popf out jge roll ss mov (bad) lcall in out in insl stos test jle imul adc ror pop out cmp pop outsl cltd push pop push jne (bad) mov cmc call mov out xchg outsb cli (bad) push sub sub cmpsb jmp pop ficompl dec lds popa jecxz fnstcw fsubs cmp js inc mov sub cmc jb sbb push das push in repz (bad) fucom mov in out imul (bad) out fwait mov inc push out or repnz inc mov cld out aas aaa sub pop pop push orl cmpsl lock inc jg mov mov pop and adc in push out jmp (bad) jp out das sub cld inc mov xor jl add pop scas ja adc or (bad) push mov hlt outsl insb pop es and movsb lods in jne cmp jo sbb mov cmp cld incl in pop push adc out mov ror imul in clc aad loop mov push pop movsl xchg or mov gs ja out fildl pop jg pop sbb push popa loope (bad) out shll pop push mov shr sub add and stos loop push call aas xchg mov sub out adc rcrl rolb or movsb aaa push popf mov mov scas cmp add pop jb insl (bad) sub xchg sbb cmp pop push push popf into jge pop in dec fs mov cli out mov adc subl push mov out xchg xchg jbe and js insl loopne aaa out out cltd call ds xchg int3 add mov loope test ret gs xchg mov and aaa cld jp out movsl in and in and outsl cli jae lret sbb dec lret jle cwtl out shlb jp (bad) je mov into idiv push loop mov lods adc out in js push pop push mov out outsl popa std in out sub cs dec sbbl js les pop fidiv mov xor sub cmp xchg jle push mov aad loop sahf lods inc out sti mov in sbb pop dec ja popf scas mov aas pop adc out in dec and sub sbb iret push cmc fsubrl call es (bad) push les out fisubl mov ds mov out loope sub mov mov in std jno lds adc out mov cmp xchg pop loopne sbbl push ss in jo xor xchg jb xlat sbb fs icebp clc adc push add pop xor fsubr js fwait adc int movsl out aas mov sbb imul mov pop add out das or jo enter or inc out adc stos test out xchg es sub or pop mov orl scas mull sub scas add adc mov pusha (bad) push sbb int3 mov insb pop in sub pop inc out pop (bad) out sbb adc movsb shrl scas iret sahf jmp mov fbstp ds and lahf lock call clc dec and enter rcl out ljmp (bad) shlb jecxz imull jns pushf fwait out ficomp inc dec out test (bad) fldenv jmp xchg xor je iret ds out out jns (bad) cmc xchg out jecxz mov (bad) iret ljmp mov adc pop fildll mov iret fcmovbe clc lret movsl add xor xchg push pop scas fs push out mov mov ret xchg xchg adc out pop je out divl xor out movl out jo (bad) inc or sbb out insl or js out pop out xor je push xchg sbb stos xor pop pop (bad) xor out inc adc inc adc pop push stc int3 jle out xor jg out out sub sahf test jg add sub rcr pop lret loop icebp sbb imul punpckldq inc (bad) xor pop out lahf enter cmp out mov shrl cwtl rclb jns (bad) pop mov out adc jl in insl pop fsubrs out cmp (bad) jl mov out sub sub sbbb in xchg adc add cmp sub xor pop dec out xor sarl loopne push jmp sub dec cli out gs pop cmpsl rorb sbb leave call xchg out mov mov out add lds test xchg les test arpl out adc fdivr mov ljmp mov sbbb stos or mov xchg ja dec ljmp jno xor push and mov aas dec mov jae out adc pop lahf push ret adc mov das mov jmp add (bad) sub push lahf out cld dec jecxz sti mov out push mov xchg nop repz adcl inc adc mulb out jb cmp pusha mov xchg testl out lea popf data16 or sub in rorb scas lea fbld cs movsb cmc push aas cmp lcall scas xor and mov push out sub sbb aas jno add mov gs push jg adc xor sbb jg sbb xchg out or aad insl xchg pop inc xor xchg test and pop out cmc (bad) jl ljmp fsubl lock out addr16 cmp repnz pop or cmc jmpw movsl cld cs ja imul jl frstor (bad) enter inc shlb mov aaa lahf rcrb sbb push clc jmp sbb out push mov in lcall xchg inc (bad) out push xchg iret xchg (bad) push mov dec lods xchg adc pop inc cmc push pop sub cltd adc lcall test dec into js (bad) das out ret test jecxz pop out cmc mov pop push push adc adc pop jp sub ljmp push cmpl mov and mov insl mov stos (bad) mov xchg dec insl pop push das out bound notl mov out cmp imul out ret push jmp sbb xchg stos inc out cmp out aaa dec sahf scas mov fidiv ljmp js outsb push push or mov aam adc icebp jp out mov jge add rcl int3 es (bad) cmp test stos je out sub cs jae xor lods xor clc adc mov les popf icebp sbb jmp jno add sbb loope (bad) scas adc inc out dec mov (bad) mov jae mov pop adc je push call mov sub das jp popf mov jl adc or ja add (bad) or push add mov arpl out cmp sbb adc loope repnz mov out stos sti aam jb xchg add add enter dec out pcmpgtb mov fisttp fadd or dec (bad) out jge inc mov lea out fisttp add out leave sbb mov and shlb xor pop sahf mov fs cmp int jmp and jnp mov cmc sbb test mov pop lahf xchg pop mov pop dec xlat in test out xchg sarb lods push into out mov inc xchg xchg add sub lcall and (bad) cmp pop pop or lods fldz pushf inc out mov push popf add jno daa das lods repnz sub test jae int3 xchg dec maxps in cmp in or push pop or test and xor sbb ja xchg cli sbb lock out push push cs inc cmp out mov xchg loopne mov addl pop loop (bad) cmp mov jle mov loope jp hlt (bad) es and lea out jbe rolb xchg mov push daa sub adc mov out inc dec mov mov jns cmp jne out aas aaa out sbbb xchg pop mov sub pushl fs cmpsb push jp add push loopne push out sbb ss mov mov test test pop imul push loopne sbb inc stos xchg call out scas fidiv pop shrb sub fstp mov in and jne inc fbld iret pop mov call mov push out scas int stc xchg and jne add cmpsl pop (bad) testb fcos push add lods out shl mov jnp and iret pop clc scas mov sahf adc cwtl out cmp pop add out lds inc dec out addr16 js inc cmp adc push push jae (bad) mov rcll fmuls shr enter sbb mov sub rcr ficomp fdivrl insl mov scas sbb jne mov gs (bad) (bad) call cli daa in insl mov cmp mov loopne sbb call xchg mov movsl mov cs xchg in push outsb and jg fdivrs aam push arpl orl fdiv in mov cld mov insl pop xor xchg (bad) mov int xor hlt push and (bad) ljmp in lock mov shr test fldcw cvtdq2ps jne fwait out and imul insl dec xchg out mov fwait sub out inc adc push loop lods out insb addr16 mov mov sub pop in ljmp out stc (bad) mov adc out xor pop sahf adc shrl incb popf les mov in mov fmull out mov adc jmp out call jp mov dec out lea and out push fwait sbb sub (bad) stos xchg jmp lret out xchg adc push dec mov (bad) ret pop xor or repz xchg out subl addb sub xchg push sub sub (bad) int3 pop and pop cmpsl push mov addr16 xor jns stos sahf mov fs adc mov mov or or aas adc pusha out xor jb dec push pop jp,pn std repz addr16 cmpsb aaa out jne add mov xchg cmc xchg mov inc adc jno leave and mov rcll and test les (bad) loope aaa mov loopne lret sub push sbbl dec add and rolb mov lret push jecxz push les cmpsb xchg in aaa rol in (bad) pop sbb mov dec xor inc (bad) pop adc mov pushf xchg repz sub lods pop notl dec lret push incb out pop into aas leave mov (bad) lahf out (bad) and outsl jns mov cwtl cmp mov pop scas out jl pop or mov xor mov push add cld jmp notl mov (bad) idivb (bad) mov pop push (bad) cli adc bound add fmuls ljmp (bad) pop out cwtl in pop ret inc and hlt jle push cmp pop icebp xchg pop push movsl fcompl sahf push mov xor mov sub cmc pop hlt out es jae pop mov in xchg push out inc push cmp aaa ffreep sbb out lahf mov inc out cli jb shr fildll test outsl lods pusha sub add mov cmp (bad) and dec xchg pop loopne cmc les aas xchg xchg inc or xor or stc ror pop adc sbb movsl mov sarl out push mov out jae inc fcoml jb jl xor leave pop sbb loope ljmp adc sarb push pop push or out mov cmp sbb fldz repz cmp add or dec sbb out rcrb pop xchg (bad) mov push push xchg cmp mov ss add fcomp bound mov fcompl mov add out xor or out dec imul mov xchg jecxz sub pop outsb (bad) shlb and adc inc sbb lea inc xor mov imul rolb das jns int3 pop and pmaxsw stc loope inc fildll (bad) faddl (bad) out in jecxz movsb sbbl xchg mov add xor ja cmpsl out adc sub shr mov dec sub xchg or jo dec ljmp (bad) ret xchg or xchg pusha (bad) adc dec jmp out mov add out cmp xor xchg or xchg arpl (bad) jp jl xchg ljmp icebp mov pop fadd mov ljmp pop out xor (bad) inc pop leave inc out popa sbb adc (bad) sbb mov out pop xchg enter pop in lcall inc xlat and xor pusha inc (bad) test mov jne negl xchg pmullw lea rorb loop int out lock arpl outsl pop xor loop js stc xchg aam in in (bad) (bad) inc test nop push xor push scas outsb mov or ja decl push xor pop ret sub in jne shr mov in cmpsl (bad) stos pop out inc fidiv popf imul mov jmp fsubrs jnp mov shll jo mov (bad) cmc adc out inc cld push and int ret out add xchg or pop nop les call xchg icebp iret lahf int3 pop lcall pop xchg mov adcl xchg mov out movsb xlat push pop jns jo ljmp dec nop call jae cld int pop (bad) imul dec or jle lods out pop test cli out popf mov push (bad) sub and cmpsb insl (bad) idivb pop lcall pop adc sub sbb cmovg in sub sub aam lret movsl (bad) mov jb and adc out pop mov sub cmp or subl cmc mov (bad) sbb and push divl jmp cld cmp xor cvtdq2ps and fsubrs fstpl decb push subb mov xchg adc cmp pusha and push repnz in iret pop cmpsl push rep out dec cli and sbb cld iret jecxz cmc out push adc or push icebp sti addb inc pop out mov dec pop rcrl out sub mov repnz (bad) or jae (bad) in mov push clc out repnz xor dec add push add call dec (bad) jns xlat fstl bound xchg adc rorb arpl scas in xchg xor dec (bad) sbb mov xor push adc movsb dec (bad) pushf pop (bad) shrb add pop jo add pop adc adc cmp push std in out das cli push sub out stos sub mov leave cs adc out mov add or jmp in out (bad) pop out sbb fisubrl sysexit cmp push sub cmp pop in test adc fsubl aas jl sub int xchg lods iret fdivrs popf inc and cltd sti mov push push fisubl or adc outsl add js dec xchg dec and adc pop leave ret lret outsb sub jmp jl pop fnstcw in dec and cmp push out in inc adc out add jae jl scas sarl out (bad) mulb sub sub inc xchg jge ret stos negb pushaw clc imul pop andl mov (bad) bound movsl sti mov into xchg xchg stos push pop xchg mov dec out mov icebp stos pop (bad) das adc lcall sbb fdiv mov fs push enter push adc inc test pop test rcr inc inc and (bad) out insl adc repz roll clc out xor mov pop cli out pop cmpsl sub add pop int mov stc out mov sub out sbb arpl mov or and mov xor add mov cltd hlt pop bound jl in out aam cmc ret rolb dec mov lock sub xor test xchg pop cmp out into sahf xchg orl sbb jns js pop push std out sbb out add outsb in cmp xor (bad) cmpsb addr16 iret rol jo rolb and jb sbb mov lahf out dec icebp outsl xor xchg out mov add inc out xor mov out adc gs imul mov fnsave fucomip mov xchg dec inc mov jl fcoml sbb xchg mov dec xchg aad pusha out mov fsubrl out lret pop sub nop sti imul aas outsl insb fs cmp dec adc sahf in out cmp sbb mov and sahf out xor push or js sub fwait dec ja or inc sbb mov out xchg test movsb mov out inc outsb xor and jecxz scas adc out lods sbb xlat iret mov (bad) adc push add mov cmp xchg pop mov int3 push sbb (bad) mov push lret hlt out add andl popa pop in mov pextrw push cmp cmpsb icebp dec imul mov test sgdtl cmp adc or arpl push int3 ss iret cmpsl loopne pushf out adc pop loop push and lock add inc int xor xchg in aas pmaxsw mov imul in out (bad) movsb dec mov or pop out nop mov stos cli out jmp (bad) push clc aaa ss dec adc pop (bad) out arpl jno xchg andl sbb sbbb add push out pop pop nop daa imul pop sub pop test and fnstsw (bad) shr fsubrl dec out jg jbe dec movsl insl adc (bad) out lret dec outsb xlat xor scas out or mov mov in cwtl ljmp iret dec xor fs sahf loopne in faddl incb imul mov cmc insl mul mov daa roll cltd ror pop mov stos int iret xchg mov out in stos add lcall pop jge out insl cvttps2pi int les sub leave lods adc push sub push bound test fild outsl mov cwtl out push xchg aam mov int3 xor scas lods fnstenv xchg mov sub ret or xchg cs pusha mov push sbb (bad) sbb fwait nop jmp inc out outsb xchg dec mov cmp cwtl out xchg repz cld jbe sbb ss mov sbb push out dec out arpl jl setne ljmp stc lea xor push fwait mov cltd ret aaa and or jne jle sbb int3 cmp inc ja ret decb mov in fsubr pop insb add mov gs cmp (bad) sbb jo jbe and inc push daa pop mov cmp push xchg push aad popa out jle push test rcrl out dec cmp push rclb in sub out arpl inc dec fistl out int3 fisub cmp out loope std sub out jmp out aaa in out jns xlat cmp push lret mov jbe fstl inc aad sub aaa loopne repz (bad) in aam test incb sub sbb push (bad) fdivrs dec out popf ret aam repz out cmp gs jnp insl and sahf xor insb fist pushf mov call sbb adc rol or mov push mov (bad) popa cmp ss pop cmp inc in shrb ljmp mov mov cmpsb out mov jl or lock inc jae dec fwait repnz sub in aas xor cwtl je into out and mov inc out mov push cmpsb cmpsl jnp mov sbb ljmp xchg xchg push jle lahf pop push lock test sbb popa xchg jb xchg rdpmc jecxz leave and in xchg push out lea scas jle xchg sbb inc and fsubrp imul fmuls insb lcall mov (bad) out in imul stos mov jmp push roll (bad) mov xchg add and or dec cld cmc or stos and sub aad loope or out pop (bad) dec pushf xlat std push mov and stos mov dec pop jo mov aam popa xchg iret call xor rolb popf mov out pop sarw jnp mov fwait out arpl pop dec jbe and es sbb stos cmpsb cli into pop out das or hlt xor and pop fs sbb out aas xor daa mov ror in (bad) jg adc out mov mov out mov xchg fcoms out sub bound xchg jnp test out lds leave popf out fsubs lods add (bad) out pop inc ljmp sub inc fwait cmp add jmp or jecxz scas or sub out (bad) adc stc cmpsb add out (bad) xchg stos sub pop push aas shrb mov push ljmp lcall inc out and test inc insb pop push pop xchg fucomip add sbb push mov dec in ljmp mov sbb or insb pop cmpsb inc fcmovb out data16 adc pop ja cmp repnz mov adc test out subps out adc out jg pusha sahf mov sub mov xor out cmpsl jle lcall sahf sub out push jl fbstp mov (bad) xor leave imul repz fstpt sbb (bad) cld xchg rclb pop int jne clc cmp fistl jbe test or stos adc stc and xchg out das in loopne pop mov dec out rolb je mov or lcall xor out andb in (bad) arpl repnz rorl mov stos aad add push jnp xor xor push mov aam lret dec shl jns les mov sbb sub lcall das in loop cmp pop mov ss ljmp pop jmp sti jp sbb clc dec loop and xlat ljmp or add sti out sbbl push xchg cs out jo sub xor jmp push jg stos xchg out jle icebp ljmp (bad) hlt jp mov pusha (bad) sbb and lock pop in inc out nop push loope xchg test mov dec pop insl std out jl fs inc jmp cwtl subb push lcall xchg jno and and rclb mov add push js push (bad) dec out xchg dec lea (bad) cli lods in inc lock jnp sub insb insl mov pop push jl je pop sbb mov in outsb lahf out and adc cmp aaa inc enter jg out ljmp and push test clc inc dec call das leave test lahf pop xchg call mov sbb scas jp out push dec pop jg loopne mov dec xchg ljmp cmp sbb xchg pop (bad) out inc xchg cs pop push out dec or ljmp and inc loopne lret mul sbb mov add xor dec orl lods nop mov out mov mov sti pop fsubl gs out in cmpsl xor push and out push test xchg hlt scas mov addr16 jg mov adc ret repnz dec or jno call push sarb cmpsl ljmp bound std cmp lock shlb (bad) out jp jne movsl pop je out pusha xchg mov cld out js add xor cmp insb push cmp cs test push loop scas ret xor dec movsl push mov js xchg jno inc cld mov ja adc out shlb cmp pop push dec add sub out dec mov movsb ss lods mov movsl pop subl out sti loopne roll insb mov mov sbb das addr16 ror adc jns aas ljmp push jp int3 in pop or clc sbb (bad) mov pop dec imul adc pop or inc pop pop sbb xchg shl ret es out xor xchg mov lods addw push mov jmp push jne sbb mov repnz pop inc (bad) out and jmp mov pop rorl (bad) adc ljmp (bad) ss in stos mov mov mov push sub pop jge mov addr16 outsb lcall jae sbb lds mov push leave mov jmp fsubr (bad) out xchg fwait repz cmp sub out test mov stos xor into in in cmp idivb loop stc (bad) out es cmp hlt pop decb mov lock clc mov jno (bad) addr16 mov cmp pop icebp test rcrb and mov (bad) in in imul mov adc lcall fucomp out icebp jg movsb jb test adc jo repnz push xor xchg mov aaa sbb ficomp xlat out inc movsl push fwait cmp (bad) xchg out dec dec push sbb lods hlt sbb xchg sub dec cmp loop add or jbe add dec pusha loopne pop out pop jmp out mov aas sbb aad push pop imulb shll sbb (bad) cmc push mov test sti inc pop adc into out lret push add adc pop loopne into inc mov mov sahf enter ret in popf xchg mov or inc test mov fsubrp mov lahf xor cmp pop out push xor in mov inc in ljmp jb xlat ja (bad) out inc pop xchg and int ret fwait push xchg out shl addr16 xor sbb dec out xor sub les imul pop pop mov (bad) out sbbb mov adc rclb pop push cld int xchg xor out fwait jmp sub iret jbe xorl lock bound out (bad) mov add mov repz adc (bad) push jne mov sbb (bad) mov mov and pop hlt sbb xchg out scas out enter ficompl stc mov xchg adc movsb stos out test mov test pop in xor fsubs push iret rcrb ljmp out shrl inc adcl xlat pop int push in xchg xchg out mov xor mov stc fistl cld push jge xchg aad test iret mov (bad) out in mov sbb out dec push loopne fldcw xchg repz subl mov xchg and lahf rolb cld cmpsl leave push jl out cmp jns jb mov jnp aad data16 out cmp jmp cli (bad) icebp and out (bad) jno iret data16 repnz in out aad jne bound (bad) rcll pop pop and sti out push fs mov decb inc out imul int3 push fsts out aaa aad negb in test sahf out and mov out loop mov mov es jae lods sbb out ret icebp (bad) fsubl pop mov push negl pop pop jmp sbb jne sbbl addr16 push imul mov imul sub sbb lods push and cmp in loop ficompl outsb pusha scas es inc add mov add (bad) (bad) xor xlat arpl fwait mov inc pop loop xor adc out lods mov ret jmp outsb inc out call cltd mov ds and jl sub push dec sarl pop loope icebp fwait test loopne xchg iret cltd pushf sar in inc outsb pop xor pop sub out xor inc sbb sbb ja jmp pop add out cmp jmp inc out sub pop xchg imulb out lret jne je stos sub pop mov jl pop cmpsb repnz push xchg pop (bad) mov ja in jmp imul push fwait sbb jp pop out pop xchg push fistpl clc imul dec in mov adc mov pushl dec or mov add inc out cli popa stc and xchg inc in mov pop xor pop xchg repnz lods jge out mov incl in mov stos sarb in mov inc insl add les and cmp pushf out out pop stos fmul add popf sub add mov shlb out mov movsl nop insl icebp jmp adc testl mov scas out pop jecxz push ss out mov adc arpl push out jg lds push add mov loop mov out icebp out mov in jmp pop adc andw int3 decl loop dec lahf rcll stc sub (bad) out (bad) jno jns cmp inc xorl out ret add rol cmp push out xor mov xchg out mov jp movb out xlat rclb seta fldcw out sub pop loopne ret (bad) je inc inc push fsubr and lods jmp mov out pusha incl (bad) popa (bad) push (bad) adc (bad) mov lret pop dec and aad push loopne insl or xchg jmp aam imul mov ja out and ficom subl stos xor mov in jnp jbe shr push push bswap call dec rcr push (bad) fstps inc int3 subl mov or or out mov mov into mov shrl imul push xor or and xchg fimul mov test mov dec sub mov out cmp aaa fmuls das mov outsl sbb push (bad) negb addr16 pop rcrl ljmp out cwtl dec sbb mov push inc out std adc dec inc icebp out inc test mov dec xlat cld out mov jno out mov stos dec ljmp cmp fistpl adc push maxps push sub mov sub dec jne xor nop ja pop or dec das mov mov iret and jns loop add xor push iret into ljmp inc dec out test popa call pop repnz sub push lret test jecxz dec push pop insl adc xchg xor push push or out test sbb jp das jno mov adc fsubr in push out push arpl xchg loope psllq or jns ds int daa fildll (bad) cltd mov out int3 mov sahf out aas imul out xor popa out outsb aam mov (bad) cmpsl mov add xchg jb popf test adc add lahf das sbb sahf xchg scas ljmp imul pushl imul ss or lcall (bad) in rcrl pop or mov out jnp lods insb je out xchg sbb mov out neg pop mov xchg loope out mov jae jnp inc out insl cmp jb movsb dec aaa inc pop xor icebp or out cmpsb push fistl xchg out out rolb out xor je push cmpsb jmp out xchg dec out pop sub lods out or push cli cmp aam inc lret std adc mov and aad popf inc jno jb adc or test dec test arpl push and es sbbl jmp pusha out dec push pop (bad) sub int mov test cmpsb out sbb fwait and iret jmp bound jle or xchg das pop dec mull push ljmp js sbb arpl insl cmp es inc xchg loop mov pop (bad) cmp mov shl or out push shlb lea int3 aas sbb dec mov scas dec out pop xchg bound hlt es loop fnstsw mov mov shl out pop mov jae ds rorb out adc or cmove pop ljmp lahf cltd sub xor jg vpunpckldq out inc cmp or adc push popa out and insl xchg out jae div xchg pop lea pop loope sub xor and dec repz aas out mov pop and lods adc cmpsb adc lods in out les fldt in shr mov xchg sbb and imul mov lcall test out cmpsb dec lock sbb int pop jmp loop xor je pop daa into inc out sub pop fwait add jnp (bad) loope lods aam xor out lret test push jnp rcll ljmp or jne push xchg out sub lea (bad) daa mov or lds mov xlat jnp jp in shlb jecxz out stos or (bad) imul fs popf sbb out mov or cs out sub xchg (bad) add dec icebp adc cmp imul adc xchg out cltd push or jg sti loopne dec notb mov lret mov push loope ja or repnz jno out jbe std jae fs out and xchg cmpsl add and dec into in stos outsb fninit out je fldl adc pop mov inc popf sbb imul or popa cmpb out jecxz and mov push out push sub xchg jb hlt cmpsb push out inc pusha pop push cmp insb out push aad sub aam xchg jno adc pop mov repz and sub addb xchg dec out xchg test push fistpll cmp pop push (bad) lock push out push out mov cmp shr in arpl ret or jno mov xor inc jle shr out insb sub ret in inc out popa (bad) pop sbb mov ja fisttp stc repz adc movsb jp data16 inc insb adc out inc sbb ljmp sahf lahf addr16 inc jl int3 inc out mov rcrl out pop push sahf aaa (bad) negb insl popa mov mov pop jae xlat add xor add mov sbb out or mov aaa arpl test es and sbb mov (bad) xor fdivrs sbb test and loope lods clc ret ss bound xchg xchg xchg mov sub mov fnstsw pop scas das mov lea imul add sub xchg sub cmp subl mov (bad) and out aad sbb out xchg lret or add repz push (bad) xor test call xor sbb insb mov subb xor mov sub or insl cmp and stos jnp fldenv test sbb push mov pusha mov imul (bad) adc icebp and out fs sti dec jae cmc jg inc loope out push adc movsb mov adc (bad) test xchg adc test out bound (bad) pusha mov dec (bad) mov jp xchg arpl mov in and push cld jo int daa movaps ds pop mov lahf out ret mov or pop ss jle xor ja or sbb mov sbb out addr16 inc mov jae out push test nop out sub lds push (bad) scas fstl pop sbb pop or out jmp push mov icebp (bad) and scas mov lcall add or inc dec fmull (bad) or and shlb adc mov push mov xlat pop in andl (bad) bound fsubr sahf mov ds jg enter mov pop fadd jne out ljmp stos xchg rolb mov fsts arpl (bad) ljmp mov inc out xchg xchg es xchg jns outsb out xchg jo out test icebp pop mov mov bound pop out pop sub or lahf (bad) in jle mov loop (bad) aad loope sti les lret pop pop jmp jne jns jo stos mov adc xor vpsubusb ljmp out dec adc dec mov int3 sub data16 mov repz int shr (bad) cmp loope dec leave dec popl lds mov pop ja ds mov jmp in mov js add push add das and popf rcll dec ficoml xor ret loopne and or pop je ret xor cmpsb pop shlb insl push jae out sub mov mov out test cmp ss or jmp outsb loope adc pop and pop pop loop inc add adc std imul nop sub jbe clc pushf xchg dec sti inc xor fsubs cmp mov dec call push scas sahf loopne ss xchg fist sub cltd mov iret enter mov aad out and fstps jbe jb push jae (bad) pop (bad) adc cmp arpl lods (bad) out js lock adc cmp cmp and sbbb pop shl push je sbb addr16 sub cmp lods ret mov pop adc dec addl fnop add sub call out xchg cmp imul ljmp push fiadd in pusha shrl fs out mov mov mov sub loop out pop sbb test xor inc mov lret icebp ljmp pop mov out push enter loop adc dec cmp jl out xchg iret aad jno adc add xor mov nop arpl cmp (bad) stos daa sbb aam enter sbb iret out push movsb adc out sbb or inc sbb push pop push and push jnp bound inc aas push sub dec (bad) in scas (bad) jbe aas out mov out lahf pusha and in push jnp xor out push out or adc adc daa into inc rolb rep shr iret leave push ficompl iret iret je sbb in bound (bad) add mov xchg xchg icebp in lcall lock xchg or mov mov adc sbb mov mov (bad) and adc in xchg mov xor shl and sti (bad) in fisttpl mov fldl2e pushf mov adc out (bad) hlt push push pop bound adc mov cmp imul fmul jno push (bad) sub idivb xor in mov adc mov fcmovb jecxz inc pop cmpsb ret lods or insb insl ss dec shr xor mov or mov lret and out pop cmp pop popf mov iret pop inc adc in add mov in clc mov in out gs xor mov lods das xorb push sub (bad) or (bad) jae (bad) and fcompl es out xchg imul insb (bad) repz std int test dec xchg dec lahf cmp out hlt push adc js jae push lcall cmc shr sub ds sbb daa sub loop pop (bad) and push out into les jmp sti sbb push out and xor in jo mov inc dec pop lretw loop daa test ret out (bad) pop jge and cmp lock cmpsl out xchg xchg test shl std insb test jmp (bad) loopne mov jl ret in cmc js ret xlat movsl sub xchg clc dec inc out lcall inc out loop pop sbb pop pop shr pusha sbb lods (bad) add faddl (bad) outsl insl push sbb std dec cmp jg les and dec (bad) mov cmp (bad) ficompl xor cs out sbb jns mov out or mov test insl pop mov adc lock shr clc jnp insl stc or vmptrst cs in aam in add adc adc cmpsb xchg mov cmc aas rorb clc in addr16 and insb mov arpl out or in gs push out jmp sar push push std out dec lods jle lea je sbb pop inc sti jnp fdivl out mulb xchg les sub daa and adc or mov std push out cmpl sbb test cld mov fidivl shll mull out jl xchg jge out jle lock and sarl rcrb adc mov or js cwtl mov fisttpll xchg push leave pop sub int add mov repnz ja bound jnp shr cmp or loopne into inc ljmp pop or jge sar int hlt jb,pn ja mov jg push and mov push xchg daa adc pop add ficomp inc adc leave out arpl mul out xchg pop lcall nop lea xchg mov jnp subb xor ds fildll sbb fldl2t and mov fnsave jmp jnp sub test ss out sub stc fs sbb push (bad) lds lods pop pop iret sub mov (bad) (bad) scas pop les in pop pop ret test cmp out inc das sbb jno xor hlt jle sub lods mov aaa shlb frstor in cmp aas adc dec scas or out xchg leave or sub push xor mov adc call and sbb push mov jns cmpsl aaa cs jmp sbb int out pcmpeqb ss cmp add stos cmc sub negl mov ret test xchg pop lret jb xor jno jnp add jge out jbe in pop sub (bad) push or jmp dec cld (bad) jecxz gs cmp mov adc pop xor imul popf bound out aas insb out cmp js out cli test insl out inc scas sbb out xor jg pop es push cli repnz lahf mov lcall scas and pop jecxz imul addr16 orl sti cs ret mov out ret mov mov (bad) outsb cmp cmp iret jmp cmp test fisttp neg in or xor lret scas out cmpsb push cli xor sarb (bad) fisttp mov ljmp xchg data16 stos dec jmp push xchg outsb cmp out cli pop push inc cmpsb lods mov or lahf mov or dec inc clc sbb enter idivl repz movsb jecxz push ljmp data16 inc out xchg mov jb out pop outsb dec pop (bad) clc pop enter mov ja lret sub out or jae fildl xchg ret out xor fisttpll cltd out add sbb sbb cmpsb shr or stos inc cltd lret out cmp insl pop pop stc xor dec test inc or cli pusha fbld lret out imulb jg (bad) mov or int3 js sbb iret (bad) ljmp cwtl fsts adc imulb out outsl dec out test cmp and stc inc mov repnz sub sub dec pop sub or popa mov push shrb cmc mov add imul mov in lcall fdivrl adc mov out xchg pop mov or test js mov xchg out pop rcr (bad) movsl cmpsb jle out add loope push out sbb orb aad out (bad) xor inc fs jb fadds ret pop adc mov in mov clc into inc sbb mov out jl jnp cltd fldenv outsl pop sbb sbb stos fwait stos out cmp bnd negb test jno int sub push sub sbb out xchg dec or out jge push adc fcmove mov jmp ss mov dec aam pop out movsb es sub sub rcll lods addr16 out bound shll cwtl pop cmp (bad) lds xor cli cmp ret ljmp outsb pushf fsubr bound and psrlw into jnp dec in mov out xchg or ja out cmp mov xor mov mov mov jnp arpl data16 xor fisubr lds out mov jb (bad) jae loope mov jo lahf pop jmp fldz imul out cltd test inc rclb iret mov sub out mov and out popa icebp sub mov and mov outsl mov daa ror xor mov sbb lock rcll push and outsb push out adc popa sti pop out (bad) jmp push inc nop ret repnz mov jns out mov jp daa (bad) sbb arpl dec mov pop std sahf out mov into mov sbb xor cld pop sub cmpsb mov rcll ja mov pop mov and dec inc lods incb mov into cli jle cmpsb and test and push out bound lcall pop mov outsb into gs sub sub add xor loope test in out xor pop cwtl in and andl mov mov cmpsl sub outsb (bad) xor xlat pop push test out jns out mov sbb mov lret push sub popf aaa gs fidivl mov loop cmpsb test push fldt imulb xchg call lahf repnz push xchg aaa add sbb sub popf pop out (bad) int3 pop out cs mov mov jo sub push dec dec pushf repz out adc nop (bad) (bad) rcrb lcall (bad) mov movl mov pop rorl mov aas adc fisttp add push cmp popa push jmp mov mull add xorps (bad) sub out cmp xchg nop sub or lea mov (bad) mov jmp out test and sub mov std adc xchg xchg lods out jns (bad) mov and out sub pop repnz or inc pop mov bnd test imul out (bad) jae add out ljmp pop out xor jl or mov pop lea sbb jnp (bad) xchg hlt (bad) xor out add mov ds pop out fldt add jnp mov jns sbb and xchg mov (bad) (bad) in daa add mov (bad) jae dec popa sbb test (bad) mov (bad) mov out ret gs call out push cmpsl jle pop mov jne nop xchg test pop xor cmp out shrl or jbe or std mov jmp push rcl enter out inc jge sub cs push xor ret out mov cld mov jmp scas pop test xchg xchg xor inc jns pushf out mov jmp mov movups decl aaa inc scas push out inc mov inc mov data16 bound jp jmp lea fdivr lods fbld sub hlt mov addr16 clc addl dec cmp jne popa jge cvtpi2ps out add mov test sahf dec ja shlb cmp pop add xchg and test jg mov sub shrb mov dec push int and jecxz push int3 out xchg movsb (bad) mov dec mulb push xor cmp jmp add mov out pop jb push mulb into out mov in daa call mov (bad) fsubs orl movsb xchg mov out cltd in stos (bad) jmp daa out adc push pushf aam push pop cli xlat adc and xor out sahf lods xchg out ret lock bound shr (bad) in hlt sbb cs out jnp scas out popa shlb inc inc push dec (bad) (bad) sbb mov loope mov popa daa out jbe out mov jo or stos xor mov xchg mov mov out arpl andb ljmp in sub xchg pop ret out cmpsl and push adc clc mov outsl jmp out xchg xchg movsb fs lock dec or mov (bad) inc and or pop in push iret fdivp xchg es mov dec sbb (bad) push pop cmp cld sub lea mov in jo in ljmp mov mov xchg out addr16 cld ret int3 out xchg pop and sbb xchg mov cmpsl int jmp test jg jb out fimul out inc cmp add push push xchg pop es xchg xor jno push loop cmpsl out and js rcl pop dec out test (bad) fidiv push mov sti mov repz sarl lret lcall adc sbb popa out insb cmpl or test mov mov mov imul data16 xlat pop fstpt xor sbb leave push push (bad) (bad) out rol nop sub cs imul addr16 inc cmovp fildll in pop test movsb and xor sub inc sub lods xor mov jae subl jle lahf or gs int3 loope or movsb mov push outsl out out xor sub pop rcr push cmpsl out or dec lahf mov cld jg scas loop arpl pop bound imul je dec jl mov adc popf xchg (bad) ljmp sub jae jb push xchg enter pop adc and out dec ficomp aam mov out stos sbb insl aas movsb pop add push dec adc movsb and fcoml fs movsb out dec jmp and and daa lahf mov xchg inc enter or call in mov cmp jmp stc sub out cmpsb dec adc pop loop ficoml sub sbb xor popa push xchg out ds pop jecxz outsb out data16 (bad) mov js mov or pop (bad) lret push inc out nop jnp pusha cmp pushf call out push mov repz (bad) mov fldenv shr jo int3 add xchg jl pop dec sbb inc loope xlat lods daa out cmpsl xchg sub mov aad cmp sub lea inc jb ljmp pop and pop add hlt divb das inc dec jne adc stc cmp mov lret pop mov dec rcr jle stc hlt inc mov fistpll loop call push out push sahf inc adc sub (bad) fbstp and inc mov xlat std ljmp out jbe scas cmc cwtl sbb pop dec push pop push (bad) repz or out inc rorl pop jb dec sub movsl xor inc out stc or jg pushf and jnp scas out adc cltd loopne sub out mov lahf dec shrl add out mov jbe data16 in lcall add in ret xchg pusha or push or out add xchg fwait pop scas dec push pop xchg out sub cli insl mov int out cmp fisubr gs adc imul aad mov call adc out fwait add loop jnp push out sahf (bad) or aam push cmpsb out and xchg orl sub cmc out pop inc inc mov les mov push xor leave xor loop in fsubrl negb mov popf xchg stos out into add dec jle out sub xor out enter ss in js jle out inc inc bound inc xor out stc je jns mov pop out imul out mov lcall jae loop nop jb sub enter cmp (bad) arpl sti fwait add (bad) xchg push out iret sub call iret dec pop xchg jo sub out in xor out movl push inc jecxz les out (bad) mov hlt rcll (bad) jne out arpl pop push (bad) out cltd (bad) jns cmp ds or (bad) xor cmp xchg out out xor (bad) jp xlat xchg mov ss and xchg insl leave cmpsl dec sbb dec pop mov pushf out pop push xchg inc dec stc sub call inc subb fistp mov jno sub jg mov into cmp inc add xchg or ljmp jle adc inc fbld in cmp or xchg jmp dec imul int ret aad or out neg xor jg fisubr cmpsb shr lods jge (bad) jo cmpsb out add test std mov and ljmp jae adc sub roll mov push sbb mov xchg mov clc bound inc sbb ljmp shr xchg sbb scas (bad) or int3 insb mov dec ret lods (bad) out mov pop sub call pop in dec push idiv sbb sub lods aaa inc out cs jle pop fnstenv out (bad) aam mul stc out pop repz sbb cmc mov adc cli cmovbe popa add xchg fwait out push and pop inc decb ret pop insb stos add (bad) ss out or sbb xorl ficompl push fdivrl repnz pusha sahf (bad) push in sti jg in loop iret mov inc jo insl mov insb addr16 pop or cmp and mov (bad) xchg les out mov ds out fstpl clc into test pusha push scas lcall jmp xor mov repz xor out mov je ljmp out sti jp sbb mov xchg jne mov sbb fs cwtl insl cmp cmp (bad) sub sbb pop push incb out mov mov enter jbe faddl out (bad) cmp or out sbb (bad) mov cmp mov xchg das pop fidiv sbb in out lahf (bad) in jb out das inc mov in fsub or mov jae sti push imul add ficoml add test ja arpl imul push aaa insl mov inc xchg aas mov nop pop or adc loop add mov loop in out mov xlat xchg xor cltd mov mov clc int3 adcb out cmpsb neg push arpl aas xchg loop jl subl ja out xchg mov pop scas cmp ljmp subl jle or in mov xchg out repnz mov movsb xchg nop ret mov lods in jle push push pop add lea jecxz adc jbe xchg cmc scas add lcall jo and fs mov pandn std dec nop out (bad) aas jae xchg pop scas call and out test dec cmpl int out stc jle and (bad) out es xchg out mov popf ucomiss pop mov dec pop xchg out xor inc mov mov push out out or sbb mov mov out or es loopne inc (bad) push test rol jns (bad) mov mov cmp mov xor sub adc lahf push jp ljmp loope adc out ds jle push mov out xchg push aam ret cmp out add divl lods mov dec (bad) pop clc in hlt dec stos and mov jle cmc sbb mov pop rcrb adc in aaa or mov icebp in add or mov (bad) imull out imul or rolb and js jae fs daa addr16 sub out rclb jne adcb pop pop mov add ss sbb fisubr push adc and push xchg out and (bad) mov aas (bad) fisub push outsl jl add pusha leave sub scas mov add mov mov outsb mov out inc fistl mov and sub sbb jbe out outsl and insb mov push mov decb lods loopne push dec bound out test xchg mov cli cltd cmpsl mov call xchg pop movsl ficoml loopne pop xchg movsb cmpsl out xchg das arpl out pop loope xor sbb loope or iret cli push push dec mov loopne dec dec mov out test lods test sbb pop int jbe out outsl (bad) xor aam sti xchg out adc icebp popf pop repz out push inc push ss lock sbb out (bad) insl xor xchg out sub fs call stos (bad) icebp or das cs cmpsb jecxz negb into xor or and out in cmp push mov pop xchg fs das out xchg pop mov mov lahf push mov ja hlt adc out xchg add pop jge (bad) xor (bad) enter xchg (bad) cmp fldt test sbb repnz loope xchg andl out nop notb adc mov lods popa push mov sti adc out lcall add (bad) out scas jp movsb xchg mov jge leave in es add out xor add lock inc xchg out outsl jne bound xchg adc test in and outsb pop jl push or ds push out xchg out jo cmpl mov out bound jl fwait add out pop shll sub xchg pop cli subl enter out pop xor jmp and lods and popf mov mov mov je xchg jne out outsb xlat pop mov (bad) ljmp out popa faddl or and xchg out mov adc push out cs repnz push out jge xor sarb cmpsl femms out out aam sub pop cmc pushf push adc sub cs mov pop cmp xchg (bad) negb jno pushf pop jmp cmp sub sti xchg gs push add jb jg jmp mov fs adc test sub icebp insb subl out xor imul je cwtl dec out shlb pop and in sbb sub pushf pop jb add fisttp repnz into out movsl xlat out arpl inc aam dec in rcrb inc repnz mov and loope push aam stos push pushf jb je nop leave mov mov jo aad stc out cs or out popa mov pop jg dec push lahf pop jne out dec pop dec jns inc lcall push mov adc insl jae out xchg xor and fwait ret push mov cli mov xchg dec pusha jge into out mov dec arpl (bad) ljmp or test adc outsb lret mov loopne xor push and out insl fistp adc pop imulb call cwtl out push test lods out mov inc mov mov out fwait repnz xchg cmpsb mov adc sbb ret cld into out add sub test out xor lret and xor aaa cmpsl orl movb cmp ljmp pop loop rcll loop sub loopne pop xor popa xor cwtl jle push mov adc add dec adc out inc sub pusha sbb or out adc add push jbe sub pop daa out aaa (bad) ret pop bound out add push xor rol (bad) ljmp call popa pop fld data16 push call cld adc sbb lods scas incb mov in ss popa inc rol pop test dec out repz cmp xchg pop pop insl (bad) out or jb pop xor shrb rol (bad) dec out andl fs hlt (bad) push maxps fadds scas mov stos adc and jg std les push mov bswap adc fs out jnp icebp popa push pop mov out ss mov inc imul dec (bad) cmp lret sbb adc xchg xchg insl nop out stos jbe aaa (bad) fcompl cli out push repnz out xchg adc cmc jl shll dec sub cmp notb dec out jb popf mov inc out pop bound pop rcrb adc das insl and out fwait dec iret clc divb mov out cmp mov out push push sbb cmp call pop pop jl sub pushf (bad) addr16 test in inc jnp and out rcll icebp out lahf inc inc pop mov and repz addr16 aam stc out jmp pop mov cld frstor inc fldcw xor or outsb jb dec xchg out out jecxz fcomi outsl mov out mov mov push cmp jns dec pop mov dec out push lcall mov sub aam popf mov push inc ljmp iret (bad) shll or xor lahf sbb add sub jmp daa test sbbb xor push mov adc out aaa popf in lret popa scas mov adc ljmp cmc lock xor imul mov pop in stc or das aas pop mov lcall ret ljmp out daa or lods pop xchg mov cmp jb mov (bad) and scas (bad) call in scas nop jecxz push sub lock jnp jge fisubrl or xchg inc je and inc aas out xchg imul inc or mov push out jo jecxz out pushf sub xchg xchg movzbl cmp movl inc jecxz inc out insb dec jbe pop or pusha sbb divb out int3 iret jle aas addr16 out test mov stos out xor (bad) dec cld out sub es insl mov fucomip sbb pop pop (bad) pop dec add addr16 loope outsb push clc mov xchg ds or add dec pop shr ret sahf jnp sbb out mov stos (bad) pop add and sub addl jno push xor pop je aas ljmp les jmp mov pop pop out dec dec mov pop leave sbb jbe lea out jecxz jl test orl mov fistl mov (bad) mov adc or jno insb es enter shlb ja stc push jno sbb in or inc das jns push jb cmp lods imul out mov xor dec out sahf or or inc out mov add xor outsl or pop mov sahf (bad) bound inc pop push (bad) leave dec pop jmp outsl add aas mov out jg jmp dec inc lods (bad) adc negb int3 mov cmp inc lea mul outsb (bad) sub xor add push or test inc fs notb insb pusha mov pop out jecxz rcrb arpl jmp push adc jmp cmpsl fdivp aas arpl mov in push in push cmpsb cmpsl pusha loopne scas out xor pop mov loop sub lret in fbld pop jmp jo sub data16 out scas mov in fnop mov out mov push xor shrb lds adc pop ss dec addr16 call xor xor ret out cmc std lahf pop adc test mov pop out out leave popf push fild loop mov jne and imul out dec gs pop imul sbb das icebp rcrl popa dec jne sub mov fucomp jb lods push into ljmp out pop jg add or rorb shrb and hlt mov jo out (bad) in pop xor mov mov out mov ficoml inc stos xor lret std xchg sbb nop aam hlt mov and mov xchg sarb insb mov out jns rcr out sbb es adc jle pop out mov ficoml out mov jo sub (bad) push out insb (bad) cltd imul or (bad) dec popa cmp out into and pop mov mov out mov pop jecxz lds dec xor (bad) scas mov push in sbb fsubrs in (bad) dec cmpsb out push and jmp xorl pop shlb ret fstl inc cmp add lds inc xchg sub sbb aaa out je xor jl sub mov xor cld loop out mov cmp mov mov xor push adc xchg and and or movsl jmp notb adc dec push xchg aas sbb insl pop sub pop and in inc mov and nop mov out dec sub mov scas out enter daa mov outsl movsl jne pop pop mov sub sbb sub add inc mov jne int pop rol jns sub sbb out xor inc test cmpsb ljmp mov loopne (bad) ljmp loope xchg mov cld leave and lret cmp lock cmc call dec mov sbb xchg or jl jle ljmp jae jae into cs lret outsl clc add subl (bad) out in test push mov mov stc data16 lea out add test outsl xchg sub stos push dec push mov xchg out pop clc jp cmp and fldl test xchg sbb out rcll mov mov xor out imul cli out mov cs push addr16 cmp fprem (bad) cmc push xor push adc pusha push jnp lahf mov out lahf mov lds ljmp test push (bad) scas imul in fadds dec stc cmpsb dec shr add int3 mov mov cmp rcrl push xchg out scas (bad) xchg in test pushf cmp ret cld push call sub lea dec mov jmp cmovb call sbb shrl js dec cmc ret iret jg sub inc sbb ja add push std or pop (bad) fcmove push loope imul xorb mov and cwtl jmp inc push pmaxsw add sbb jg inc sarl in call out mov xchg icebp in clc mov sub in iret jo andl into in jns call add loop xchg or pop out mov xchg scas add fimull sbb mov int icebp out nop adc outsl aam fimul test pop ret loopne popf scas pop imul mov mov iret out popf xchg lret (bad) (bad) fs iret cmpsb inc and xchg out cmp adcl inc ljmp insb stos ficomp out dec add inc dec add jmp cs dec mov or sarb shr pop cltd out xchg out movsl (bad) ret addr16 scas dec jb pop data16 adc dec aam add (bad) push push or mov push and lea cwtl inc lahf outsl lcall out sbb and add cmc jns (bad) loopne addr16 pop gs insb ljmp mov ja push out mov mov cmp nop in mov jle out push (bad) push jge scas pop ds or sub mov cmpsb sub mov iret vaddss mov push xor cmp (bad) out fldt inc scas inc icebp pop out or jo sbb mov xchg adc out mov xchg hlt repz out mov in out insl cmc sahf pop aaa repz std out stos sub push xor mov out int dec add mov sbb xchg enter sub test mov in jbe fwait out push push or das outsl jmp xchg pop sti cmp scas xchg push sahf lock push je cmp sbb inc cmp notl xlat or mov ljmp cwtl movsl add pop in (bad) cs sub fwait test insl push data16 stc jb jmp gs fidivr mov ljmp dec das out loope dec test fildl inc out sub dec rcl mov out cltd les iret cs xor repnz jbe pop fstl pusha scas xchg out and adc pusha mov push pop sahf mov push lret in lods mov push mov fucomip shrl fwait (bad) out repnz sub adc iret test jmp rcrb insl ret out imul out notl fnstcw js mov std imul out aaa dec xor push push fisttpll out jns loopne fwait pop daa idiv fmuls in xor pop clc test jmp jl out push repnz stos push out sbb fmull jbe and out dec adc out cmp sbb insb out scas dec or ss jmp cmpsl ror jp and das aad adc lret add mov or scas mov test cs out mov das jmp into mov aaa stos enter cmp ss jns cmc popf icebp ret mov test lahf shrb adc sarl hlt dec pop mov xchg jnp out es pop dec jmp mov dec sbb mov rclb mov add rcrl inc adc (bad) dec mov inc imul rorb (bad) jle mov jo lock inc ret out dec popf ret (bad) mov inc pop in out cs xor out std sti sub ret dec scas inc mov push (bad) out addr16 mov (bad) out xlat dec jge push (bad) sub cmp in dec xlat xchg or mov out lcall idiv daa std cwtl mov or xchg jo dec dec xchg mov sbb bound stos out cmp jbe sbb std in aaa ror and insb inc xor xor adc fisttpl dec cltd gs outsb ljmp out xchg cmp inc push pop rcrb push je or das mov out in fldl dec inc sti popf outsb adc (bad) sarb sub pop pop out push mov inc cmp push jmp or fucomi enter testl std aad (bad) out clc cmp cmpsl mov (bad) dec gs jae arpl pop stos pop inc mov adc scas cli pop dec sbb lret push outsb movsl inc add xor test cmpsb xchg imul lahf mov cmp int3 into push jno cli pop inc in cmp mov inc or pop aaa mov shrb mov pop inc sbb push out sti cltd jbe ret movsb xchg lcall push pop outsb or mov repz subb aam cmp aad out clc dec xchg adc movsl inc inc out orl aaa xor rcll mov add daa out push dec and or fistp sar andl insl xchg ljmp sbb test mov rcrb mov add pop fbstp insb mov ret das orl jg loop js pop sti sahf dec imul mov repz xor (bad) imul xor jb cmpsb push and xchg int3 insb jns insb pop pop out mov clc out pop das push xorb aas call out rclb decl test and fxam jb hlt mov lds out push sub inc mov out bound stos add jno (bad) loopne xlat test adc mov incb push push mov stos pop in out dec add rol out dec inc out sbb mov mov xor popf (bad) mov inc (bad) in and mov mov jge xor lea inc pop stc xor jb cmp and mov xor stos scas pop mov sbb adc rclb pusha pop xchg stos out and jl jecxz out inc aam sub out cs es cli popa shll (bad) ficom out xlat adc je inc mov adc inc das cltd aas lcall xchg iret jbe pop push (bad) test es pusha out xor add mov cmpl (bad) sub adc sbb sbb jno ljmp std nop cmpsb arpl jns int3 pop imul mov mov enter outsb lret lods imul and inc xchg push mov pop addr16 lret ja dec call cmp and mov pop or pop in addr16 repz out test pop mov mov cmp jecxz movsb xchg out sbb adc mov cmpsb mov ret jae fdivr mov cmp push lret lods aas add ljmp push mov jo cvtdq2ps lret ret adc stos mov in cmp movsl mov outsb pop push mov push mov das dec xchg xchg ljmpw out xchg (bad) sbb cmpsb jne push sbb adc jae mov or ljmp (bad) das (bad) sbb lock mov insb ret in jmp out imull lds (bad) jge mov or xor es inc fist imul add in addr16 ja lds out lods ljmp bound inc pop clc test popf insl xor int3 out repz out add js test pop rcl mov fist lock test pop push sbb adc mov sub jl sarb pusha js or enter outsl jmp inc fmuls out insl add push fbstp arpl dec xchg dec jbe sbb mov std mov ret decb xchg aas sub out jae aad adc movsl cmp jo aaa lock push sahf (bad) lea out icebp mov or jno repz fdivr mov sbb sub xchg out push xchg ret or out jne test cs out add push push cwtl iret lret cmp fbld out pop cmp sub xchg out ror add mov cmp inc rcrb aam out sbb aas jne out adc mov or pop pop xor inc xor shr mov mov out mov sub ss cwtl dec pop out xchg push jmp mov dec cmpsl xchg pop mov lea in pop data16 or out int mov mov jb out jmp stos jbe out leave in or out add or popa sub pop push cld leave into xchg out mov lods dec dec pop push bound popa xor repnz adc jl in sub pop xchg sub sub lods lcall out cmp cmp pop sub popa mov out ljmp mov arpl mov inc pop cs sahf scas pop fucomi jp lret rolb pop out rorl sbb jle push stos aam out pop jno pusha sahf sar out leave pop or imul xor out xor scas (bad) pop loopne xchg out push push or out add lds enter cmc (bad) mov lock sbb add sub jae mov out adc sbb jl mov jecxz int jmp mov aaa out outsb or in subl jmp test or adc pop or add je jg out ljmp pop ficoml in xchg jle cvtps2pd fcmovnb push fwait adc mov gs mov inc fdivs and adc adc jecxz out sbb cli lret xchg add out mov mov out or arpl and sbb sbb int3 mov cmp push mov (bad) icebp cld stc sbb je nop iret jnp scas lock mov loopne movsl pop out iret jecxz xlat add jnp sbb ljmp inc xchg sub test or fs sbb pop lcall mov scas clc imul js lret or out fistl cwtl push mov pushf jnp in addr16 xchg (bad) mov inc stos (bad) inc out ja les (bad) (bad) add adc lods adc ss push out or imul mov add cmpsb ds rolb pop in adc mov jmp (bad) out sbb into mov pusha xor incb mov ret lock out loope or gs and fisubrl jge mov fcmovbe sbb scas out and cmp imul and out int test jae addb std mov fimull jbe adc imul adc ljmp stos cs sub hlt test repz jbe or lods iret mov adc jb sarb gs (bad) add arpl fs inc fsubl into in out mov and fbstp or jns and mov arpl sahf sub repz dec push jne and (bad) fcompl outsl pop out and fs jne add out sbb aad out xor xlat push sbb fs cmpl jae icebp or add pop fisub std lcall ret jmp xlat out mulb xchg stos xchg out fucomp jno test loopne cmp sbb jno insb out and add aam inc cld out pop gs pop out insb test rcrb mov out les nop lods or or decl stos lods push cmp lds jl (bad) ljmp ficomp scas xchg arpl movsb mov dec shll out outsb aam cmp out xchg cwtl lret adc rorb in mov out or out inc xchg xor and xor out inc cmpsb (bad) mov sbb jp (bad) dec dec incb (bad) lock iret adc out sbb pop jg or mov sbb imul mov inc mov sub xor sub mov iret jno dec inc mov or in xchg fdivrl mov sbb xor stc out popa fadds imul adc gs sbb mov fadds das xchg jp mov jecxz jo pop (bad) xchg mov push out in push pop jbe sbb adc dec mov imul lea out pop fwait mov pusha outsl ljmp mov and mov into pushf xchg adc add xlat out movl test daa lret lcall push ret sbb repz aas call xchg or int3 mov out repnz sbb dec jae cmp out sub ja pop out xor fcmovnb mov scas jl mov pop daa jne dec sarl lds mov movsl pop mov mov lods out mov and out movsb movsl call (bad) iret pop subl imul into pmaxsw loope out scas imull int3 movsl int enter xor and sbb shrl (bad) xor cld cmpsb xchg iret faddl pop mov mov fisttpl loopne in out loop int3 push dec sbb cmp jo loopne mov scas xor xchg xchg adc push sbb mov inc enter cwtl inc arpl add pop jge imul sub pop add inc in (bad) stos sbb lahf sub outsl push out movsb xor xchg xor sub cmc jl lods les mov jno loopne hlt fwait out shr xchg dec jb jl pop mov adc fwait out xor aas popa dec lret sahf das (bad) mov sbb (bad) setne pop hlt inc in les sbb pop adc and addr16 pop iret scas dec jae in test mov iret sbb and mov iret jo iret sti out out ja out ss insl push pop add out fdivrs stos push and mov shl pushf loop adc cmp popa out test mov out fldl2t mov jo ret dec dec add out fsubrl sar popf xor (bad) sti out stc lea pop mov cmp pushf adc stos sbb loopne popa loope loope ljmp adc out addr16 fidivr mulb (bad) mov jb inc inc mov or lret iret sbb inc inc or push inc stos insb pop incb sub out lea cltd xor xchg push push iret pop int3 (bad) mov xchg out jle pushf xchg lea fbld jge pop sarl push aas xchg loopne enter arpl insl mov add or xor add movsl or jmp fisttp dec (bad) call inc sub push cmpsb push push push xlat sti lock cmp addr16 out jne in sahf out es call out sbb add outsb lret cmc sub xor mov out aam std sbb push mulb daa xlat data16 repz sub into in dec arpl push add dec int3 outsb pop or lahf cmpsl iret push (bad) dec shrb ljmp fwait jne lret std sub cmp mov fildll movsb fs sbb jmp mov inc cmpsl push jmp insl push mov xor dec sbb clc out je mov lcall out pop shlb or add in dec dec add pop fxch scas in movsl out mov clc (bad) icebp sbb movsb xchg dec pop pop pop ja enter clc rcl (bad) push loope jg mov lods push jb frstor push aad loop dec stos add adc out push movsl lock mov repz fldl jne sbb stos notb dec cli out scas xchg mov repz mov mov lret sub sar dec out pop push mov adc cltd and push mov mov jge mov mov dec out out cmpsl es pop icebp rcrl push sbb push cmpsb mov mov fs fwait ret push ret mov std ds jb out xchg dec mov cmp loopne mov xor jb out repz idivb push sub push cmp shl xor rorl (bad) cmc in mov bound aad pop sahf out mov cmc jg sub out push cmp inc cs in iret icebp arpl mov sub out inc cmpsl jbe rol push push xlat outsl icebp orl aas test mov cwtl in daa inc jbe jge stos pop mov cli xchg push cmpb scas sarl int cmp pop add les xor pop jl or out pop daa stc sub mov xchg jno pop aaa mov mov in out jo pop int pop in out stc lret jg pusha es or call fcmovnu fcomps (bad) mov sub out pop mov (bad) sub push (bad) enter inc std arpl adc (bad) mov int3 xchg inc jmp or shr daa push fcmovnbe xchg add pop cmp sub adc mov scas out sub inc mov and insb and cmp mov pushf sub lock jae loop dec push jp mov push in pop mov addr16 loopne inc lret inc notb (bad) in sbb sub pop cmp inc push (bad) out xchg loop je mov sub nop pop imul adc pop insl rol clc hlt out jl add add nop shr push add std sbb push lds pop inc adc xor icebp stc xor adc out cmpsl popf jecxz cs aas imul clc leave (bad) sub in mov enter mov je lret sub (bad) fdivrp lret movsl lods add mov loop out pop in mov push sbb ds loop popa fistl or outsb iret ja out loope frstor out jmp push or jno or mov fidiv aas (bad) stos sbb mov pop ror jns sarb pop cmpsl insb xchg into out mov fwait imul pop ret fist call lea (bad) pop mov arpl ja mov sub pop dec repnz js out mov and test and or aaa inc sub in adc cmp imul adc js (bad) mov add sub int3 jo mov in push out cmp add cmp int aas mov ljmp int3 push (bad) je dec jle mov bound out sbb mov ret das aam addr16 push out push pop push xchg sub add pushf cmp mov je and dec mov pop js and dec push out shll aam in out cmc pop jne jbe pop sub je fwait mov jecxz xchg jecxz push lcall adc imul movsb mov out add out aam dec ret cmp mov push int mov imul into xor sub and fwait int cli lock out cltd xchg fnsave out mov jmp mov mov or loope mov out lock nop sbb inc insb and pushf stos or dec nop pop iret mov in loop frstor add add pop push jg out sbb fwait stos push dec imul mov inc sub pop fs andl inc mulps and mov inc pop lock push fcompl aad pushl pop bound add jl mov and pop adc stos mov in stc sti cmpsl loope ret sbb jno xchg imul movsl lea and xchg pusha iret std pop inc out sti jae notb or out je or mov gs fwait out loop insl hlt not ret jbe and or sbb inc adc cltd jmp mov mov out dec add dec lea imul insl xchg xchg pop and push pop out ljmp arpl push dec incb pop push jnp stos pop into out and outsl cmp cmp xchg sub repnz jb fs lcall std sbb in out andl stos pop xor xchg push cmc (bad) cmp mov das push mov push push cmpl pop push lcall ss or mov cmp out sbb fwait mov push in sbb ret fistpl and adc xor or sbb out push or out adc es pop jp arpl insl add add jo sbb jl fsubl mov xor lods dec xor icebp out mov or inc sbb out xchg popa sbb jmp out and outsl xchg pop and ret out cmp cwtl or out loope lods aaa icebp jge and outsb out out notl jae cli aam cmp out aad popa dec xchg mov shr pop cmp jo loopne jnp pop adc xor sbb out pop lods jmp rcrb je mov push pop adc ds scas mov mov in stos add or push bnd (bad) not out ror sub dec stc xchg or or push shlb ret xor out loopne inc decb sahf add mov aas mov pop es inc faddl aad shl mov inc popa out and out mov loop scas xchg adc sub jmp jecxz xchg cwtl mov pop (bad) sbb ljmp (bad) out popf push cmp inc fsubp jle push paddd cwtl cmp lret out fs jns and mov sbb leave lock ret insb jle push fidivl mov out lret lahf pusha lcall les out push scas iret push outsb (bad) das add repz loope pop pop test out insb cmp cmp pop adc xchg sahf imul xchg aaa jle push xor stos sbb out xchg lods add mov repnz sbb in mov jge ret mov std in jb inc (bad) test and sbb mov lret jge jns push outsb out je xor inc test mov out in push push jmp movsl push pop pop fwait cld or (bad) sbb ret push sub ret das adc out daa out pusha cmp cmp inc int3 or sbb shrl inc orl pop sbb out mov adc pop fdivp xchg out mov mov leave fucomi aam add pop pop jmp cld pop shl ljmp jnp xchg loope in out mov sbb mov add sbb out cmp jg rclb clc and (bad) mov (bad) out xlat add push jge mov popf inc lret loop (bad) aas adc rcll out outsb into cmc (bad) out and jmp jge movsl add xchg jle inc jbe les xchg out imul jne push (bad) out xor dec adc pop shr dec jb lahf fs mov scas out (bad) out inc xchg adc out test dec fadd es scas mov call lock arpl out ss movsl adc out push mov inc out mov popf cld lret out notl cmp bound sub lods fnstsw dec mov xor scas mov aaa popa push jge out cwtl pop (bad) mov int3 (bad) xor (bad) out cmp mov daa (bad) sti pop mov mov mov cld out or lock inc (bad) out dec pushf insl push (bad) sub pop ja ds pop and test js add out iret std lret lock pop test cmp or mov mov xor out lcall dec rclb out adc (bad) cwtl outsl out jmp add mov mov fist icebp push out cli mov out popa mov sub xchg add ret out or jp (bad) out lahf gs imul mov dec sbb jl xlat bound add adc das inc out inc mov (bad) (bad) jae or adc fild mov out and pushf ret cs gs mov jmp cmpsl jecxz out jo and mov sbb out or test out pop cmp jne jecxz (bad) in stos vcmpss xor inc pop sti pop imul sbb ret mov out lds xor cmp out mov pop popa outsb and push rcr icebp xchg int mov push test imul jl mov sub cs push or mov frstor popa aam inc and add cmpsl or mov es loope or jmp fsqrt insl jg inc push mov in popa rorl dec dec out push (bad) imul in out and (bad) ficom jbe call or push pop pop hlt leave aad dec cs mov loope sbb lods pop out shll mov sub stos fidivl xor ljmp pop (bad) or xor inc mov (bad) imul rcr and jns imulb add sbb push mov dec loop inc in push sbb xchg scas ret pop call rorl sbbl mov ljmp popa lret add in out lahf or lea jns aaa push xor adc mov ffree enter popa insl icebp inc out aaa loope data16 addr16 out rorl cld pop out ja pop mov out push mov icebp sub mov mov out enter push and cmp mov xchg xor add add ss push out into (bad) and fistpll sub add jecxz out mov in mov xchg cld inc icebp lds push xor push out or add or or cld mov jle data16 (bad) popf jp bound xor ja jmp (bad) repnz cli call sbb cltd adc (bad) sub jb sub cmpsl cmc fcoml lcall cltd mov and loopne cmp or pop push sub data16 mov popa and jnp xor out lahf mov das nop or xlat pop jmp sbbl out (bad) aaa call shr inc push mov out stos sub jl mulb out out mov pop jge xchg mov pop in ljmp lcall out xchg push js push data16 lahf clc mov adc addb repnz (bad) mulb push cltd cli fnsave in jmp out mov stc mov out pop fildll clc push fstps jns (bad) les cmp adc out cltd call fidivr xchg out mov mov mov sbb rorl loop fldl movsl and sbb icebp mov test jp (bad) imul add pop xor pushf push movsb (bad) repnz rcrl popf (bad) or pop out mov pop cld test fwait out add dec adc push pop repnz fsubrp pop push mov dec mov pushf xchg aaa hlt (bad) dec push loopne mov shrb adc iret in pop xchg cmp jge xor movups push data16 jmp ljmp int cld (bad) mov lds mov das cmp pop out dec cmc pop pop and jno inc imul out mov fadds push push aad movsb scas (bad) cmpsl stos sti mov daa outsb pop cmp mov fidiv mov jge out jecxz loope cmp sub dec add outsb test out mov pop xchg in mov cmp xlat ret fdivs sub mov in pop pop std cmpsb inc addr16 pusha add loopne mov jp jmp xor out fcmovnb dec or push inc scas push pop (bad) into repnz mov jl or out in sbb pop jbe out lcall pop out jg and sti hlt dec movsl shl sbb xchg out enter jo (bad) stos inc dec lods clc ljmp push xor out in stos cli jle or push cld int inc mov out push pop xor pusha add punpckhbw cld loope enter es out hlt pushf cmc cmp dec fwait xchg jo out adc inc leave outsl test (bad) sbb jg or subl cmp rcll add pop (bad) fldl loop out mov or bound (bad) xor (bad) pushf adc cmp movsl fsubp adc lods in xchg (bad) mov mov adc jbe mov loope or das out jmp ss dec mov loopne cmp loop adc nop cmp das sbb pop push dec xchg test xlat mov xor aam scas out push sub dec in pop add in pop jbe insb push or das mov jg mov or lea push jecxz insl jae fistp sub fbstp lods retw pop jne mov lcall stos cwtl jmp shr ja pushf push dec fmuls xchg cs in push std pusha ret xor mov sar dec push mov in mov test xor xchg iret out xor pop sbb nop adc in and lods fnstsw shr or pop mov fcmovnb stos fsub test xorl nop push adc mov int dec test jl jb js das ficoml popf push xchg lea out dec (bad) xor out dec lahf fnstenv pop cmc mov or inc insl movsl out sub out outsb int push addr16 cmpsb insl hlt mov pop (bad) push fsubp iret enter push sahf cld xchg inc int3 andl jne xchg loopne jmp ljmp out inc gs pop sbb or in testb xchg add sahf out (bad) sub push dec cltd xchg mov and sti inc fs push fistpll or jle push and mov adc add rclb (bad) out jns cmp sub ret sbb out jno add shrl shrl push mov aad dec xor leave sub pop into push mov and mov push sub jns fwait mov out xlat out xor sahf lock daa aad sbb in pusha test push popa call dec xchg inc in insb mov stos rclb (bad) out jmp dec xor mov cmp xchg xchg mov (bad) test jo mov and sbb in loopne (bad) dec mov mov pop out xchg repnz fildll ljmp pop sub inc dec add fstl mov aaa (bad) xchg push insl arpl mov sub adc (bad) ljmp (bad) sbb imul (bad) out out fdiv and sti jmp cmp stos lock into fsubs mov cmp movsb or out mov je pop mov out add adc inc ljmp cmp int3 out std loope popf cltd out mov add xchg cli lahf out daa pop stos mov scas sbbl mov stos lock or fstl (bad) mov and sbb popa mov ret cltd das xchg dec mov imul pusha push cmp mov insl daa pmaxsw fstpt in (bad) out loopne ljmp mov pushf movsb push out sbb dec imul or lahf sub push int add push cmp clc and push pusha sbb push dec xlat into (bad) pcmpgtd repz sub mov lea jecxz adc pop clc cmc rcrl mul ficomp jg dec mov xor add jp sbb out mov rolb outsl and nop lcall call int test jb dec mov popa ficompl cmp jl or cmp dec loop jge or mov mov push out sub loopne repnz push scas lcall push adc int fidiv iret icebp addr16 jl add hlt push lcall pop pop fidivl push out or push inc pop hlt dec mov arpl pop dec or cmp out imul mov (bad) aad ss inc lret rolb mov iret movsl cmp lock push jae shl xchg jge push jbe out xchg or sbb (bad) imul aad out xchg rclb pop xchg push (bad) movsb or (bad) mov pop out dec fldenv fisttp push jb push (bad) jno out or mov mov (bad) cmp out xlat lods pop adc mov je (bad) mov lcall rolb sbb adc popf mov sti hlt sub jno push xor (bad) mov scas xor jo fstpt adc add nop fstpl out and (bad) add in aam add sbb mov mov loopne loop repz sub out loope cwtl icebp xchg fldcw add push mov (bad) mov (bad) jbe add xor out mov inc cmpsb psrld scas fbstp and cmp roll mov fidivl out out stos cmp cmc jmp out dec add dec icebp xchg enter call sbb into pop imul cmp jns decb push jb jne sub add bound sbb adc fistl mov hlt cmp out jb fwait jo xor inc ljmp out xchg and mov mov test enter adc push inc jb jb mov add out lds adc out in out in mov pop insb mov xor adc cltd sub out mov dec in out jns jae nop mov sbb fwait cwtl out and divl mov lods add (bad) shr lcall das pop out fdivrs mov cmp popf push add mov movaps in push repz rol jnp sbb sti insb out out in loopne std arpl loop pop pop xchg scas fisttpll shr xchg pushf leave outsb lock fistp (bad) out and xor or jl out push dec push flds fcmovu xchg popf mov jg adc push mov (bad) int3 xchg xchg mov orl pop xor into inc out push subl add mov xor push jl scas adc sahf aas les and mov add iret fildll xor xlat cld insl mov sbb (bad) aad xchg jp cmc jmp or mov adcl shl mov dec lahf outsb mov ret push imul jg in cmp in xchg xor cli pop mov cld jle popa notl es add cwtl in add out sti movsl sub call mov cld xchg xchg fs in jg popl stc hlt out and sti sbb pop dec out cmp jg and push out out fcoms xor pushf jo (bad) jecxz fstpl or sub adc movsl mov out js cmp (bad) loope sbb test movsl jp jg pop xchg cmpsb (bad) xor add out mov test mov shr cmp ret adc arpl inc test out mov aad data16 mov fbstp and loop loope push imul sub sub rclb jnp lret or ret lahf je mov sbb insb out pop ja test jb xchg in jb sbb shr sub xor sub sbb mov lock mov push scas pop pusha loop nop or adc lods imul lock jo mov push inc mov cmp adc jp into and sbb jb mov aad xchg test xchg pushf out repz jecxz fwait test push (bad) sbb jmp push (bad) data16 cmp insl or xchg cmp repnz push adc mov iret dec xchg fiadd jnp,pn xchg in cltd out leave std jl testl daa iret push jnp out sub adc out cmp inc mov sub pop mov xor std cs pop out sbb and xor mov loop cmp lret ficompl mov xchg in push jg inc push and rclb cmp sbbb in cwtl (bad) fdivl in add popa mov (bad) adc pop movsb sub cmc ret out rorl cs sahf sub pop fwait push add add xchg mull adc in out sbb sub mov (bad) imul jb add dec inc mov (bad) cmc push mov out mov imul icebp int3 stos and jl insb pop in add fnsave arpl mov jo ss rcrb shl aam sti sbb addr16 mov jbe push stos push xchg mov sub in out fcomps pop xor aam out xchg lods and jge sub jecxz out rcr sub sub scas pop pop mov add mov rcrb ret jmp rcl out lods lods mov out or pop rorb in jg dec into insl out pop les out adc (bad) out mov jp or push test pop ljmp and movsl mov sahf dec out fwait cmpsb (bad) rcrb out lods mov xchg adcb incl dec jo mov xchg gs fnop into ja out cmp xor sti out divb (bad) out shrl push fld out mov fdivs push pushf push dec pop roll out in sbb add sub iret mov and or mov jge movsb daa sti repnz dec add adc pop xor popa lret push out push mov fs loopne incb add repz push loope sub loopne xchg out mov ret stos fnsave in out pop dec mov popa iret push jne (bad) out js mov out xchg out pop leave loope jmp jo int3 imul jg or fdivs leave push hlt xchg out inc sub fistpl cmp sar cmp xor data16 xor es add popf andb gs cmpsl sub jecxz pop xor xor fwait jge add mov jmp aaa (bad) rolb push pop out cwtl adc insl out cmp push sbb xor xor push ljmp in das mov out push cwtl gs push push imul aas lock dec jbe sbb mov into xchg mov mov out inc xchg jae aas jecxz and lret idivb iret or mov iret xchg cmp cmpsl in adc sti and push outsb data16 iret mov shlb aas loop nop aaa jecxz fwait out pusha out (bad) fwait leave mov out aad cmpsb add (bad) frstor and pop out add lods notl push adc ljmp pushf out inc mov (bad) out cli out mov mov cmp pop lcall mov call loope fsubr xor mov lods das sub aad icebp or pmulhuw loop pop cmp into clc mov sub cmp lcall and push das xchg out sub cmpsb jne mov xchg cld or pop cmp xor scas out and xlat mov nop shr out mov push sub jge out push std jg test jbe mov cmpl mov cli (bad) mov (bad) jae leave dec jl xor adc cltd add cwtl mov and dec and out jmp xor or push out aad push aaa imul lret or xchg push mov and out mov (bad) imul bound out sbb aaa cmp lods orl mov call (bad) popf cmp cmp mov in jge fbld jmp push test push pop es loopne movsl mov xchg fldt jb call fsubs mov jne cmc (bad) mov sub fstpl jl pop xchg push sub xchg mov loop (bad) gs out (bad) nop inc or xchg jecxz xchg ljmp aas push fcompl stos fldln2 sbb dec pop pop push ljmp std mov and jns dec mov cwtl pop and outsb push xor fiadd out cli mov fild fwait xchg out sti (bad) rcrb hlt push scas lock sbb out jnp pop mov movsb scas out fldt das stos out mov add cli out inc cmp push xchg out or adc out lds les add push push mov (bad) ljmp out clc in cmp scas aas (bad) cmp xchg mov adc out fcmovu sbb into fnstcw pop mov push sahf push (bad) pop scas mov cltd xchg dec sub cmp pop and (bad) out pushf push icebp out ss jne hlt sbb out (bad) sub pusha sub out adc cltd es pop aam daa test faddl cmp xchg ss adc jbe xchg (bad) clc es sbb int (bad) (bad) mov cmp enter in pop sbb adc mov (bad) hlt pop in dec add inc (bad) idivl stos imul adc iret push in push xor outsb mov fdivrs sub and ja psrad loop ss das ret bound (bad) adc jge mov je test or push adc ss or dec cli cmovns cmp push push call add push sbb push xchg xchg xchg inc xchg in sbb or arpl dec jae mov fsts sbb ret cmp (bad) jo ss jg xor mov dec insl lock jo std pop (bad) (bad) push sub cli or outsb int3 sbb aam xchg hlt jmp push push dec sbb mov xchg leave sti call out xor push stc pushf out cmpsb or inc push xchg roll and add or decb push jmp inc movsb stos (bad) out les out push test int3 and out xor rorl aad cmp or repnz push xchg movaps jb xor es dec out lcall mov dec cmp push xchg cmp inc jp dec fistpll push lock (bad) loopne mov pop out loope mov add xchg test je fild push daa out mov jno or inc into out xchg outsb push add jns out adc in push xchg adc in (bad) push ds jge in xor dec sbb fs adc fldz scas test fisttpl xchg out mov mov out jnp sub or fbld push pop mov jns out dec xchg xchg movsb dec (bad) out adc jb lcall sub movsb movsl fsubrl bound (bad) movl rorb gs adc pop insl xor pop xchg mov sbb adc cmpps push pminsw mov fcomps movsb lahf hlt out and mov out xlat in and repnz inc out mov xor sub mov or das jl out sub jns jnp pop in es inc ja and test int out sbb or cmp mov cmp or test add imul aam aas pop or add ss scas xor cmpsl cmp bnd (bad) icebp aad in sub loop fs xor dec fsubrs sbb pushf fisubr das pop popa test xor pop loop jle out data16 push pop adcb out mov inc jmp out inc mov stos xchg aas jge nop mov (bad) into es out add pop inc pop fs xor push loope and mov (bad) mov test pop dec sub mov int pop loop in pop mov sub cmp sub pop ljmp sbb push push sbb push fnop xor (bad) in repz lcall jge loope hlt push lods inc (bad) jmp xlat lahf xchg std out jp xchg mov pop (bad) ljmp xchg loope cmpsb cmpl or xchg out mov ljmp movsl or mov sbb sub mov pop movsb out sub enter daa shr scas rclb push sbb or pop sbb jg fmull pop insl clc adc out xchg and dec enter sub pop mov pop push icebp imul jp cmp fwait out mov jae movsb cmpsl mov insb xchg (bad) cltd aam orb gs sbb cmpsb mov das repz pop mov call insl out scas cmp push (bad) mov (bad) flds out in xchg dec dec out out jl jne mov jp rol enter por addr16 mov into adc (bad) xchg pop xchg add or nop push sub adc push ja jl lods out pop cmp movsl xor mov xchg or mov (bad) cmp mov mov jl out cmp stos mov iret in mov fisubrl iret xor (bad) out lock clc out jne data16 stos gs push cmpsl sub lock xchg movsb out fimul mov stos (bad) divl out out and push cmp lret or ljmp out cmpl push (bad) cmpsb or stos imul test mov and out lods loop mov sbb ljmp shrb pop pop (bad) rol lcall sbb pop fs repz cmp out add push outsb and inc out jnp call mov push sti mov (bad) xor push pop push out dec popf or xchg pusha fwait stos imul xor xchg out xchg jno adc pop dec insb icebp lods loope je ljmp setge addr16 xchg sub jnp out out shlb push aad mov add pop pop sub pop push call pop jnp out cmpsb push fwait (bad) out fbstp pushw ret out out in push fldcw jl or pop bound iret pop xchg adc add xchg jo ja aas out adc call jb iret outsl out mov cmp in lods cltd out mov pop lcall sti roll fistpl test pop outsl sahf cli ljmp adc das jmp out and and mov mov inc iret mov adcb out js jl mov xor push mov mov sbb push fwait cmc mov cmpsb mov pop adc out mov xor adc rcrl arpl pop out in jne inc mov jmp in out clc rorb mov (bad) jmp adc mov cmpsb cmp mov sti aam ljmp mov (bad) mov (bad) xor jnp and jge cmp dec lcall test pop (bad) ljmp mov mov pop inc addr16 and dec (bad) lock mov emms (bad) arpl out xchg repz sub into stos cmp xchg jle movl add jb and mull and pop in mov fildll aam in je jns divl jl dec or addr16 dec imul pop loopne and imul sub ret out dec xchg movsb into pop inc or and add push test out jg roll dec icebp mov jge cs jb inc push jmp out mov push out jge push jbe pop fidivl out sahf xchg decl dec adc ret pop push lods int out jns pop push out lcall push sbb out adc into rol mov jmpw push mov fs push mov leave movsl nop out lret icebp outsl cmpsl mov sub push jp inc inc jo (bad) cmp dec mov or out movsb push out jmp fucomp test dec or cli arpl insl lret int3 in xor mov test sub push lret push lds test dec push lcall cmp fiadd pop seta ljmp scas cmp pop pop mov call in hlt pusha or xchg lcall xchg enter call jns jbe fldl push in daa pushf push push mov xchg out out dec jnp shr or or mov ret jb js push jle in rcr cmpsb dec out dec mov outsb xchg out adc sbb jl adc scas add addr16 pop or data16 and inc fdivp and mov ss dec out mov shrb (bad) (bad) out or mov repz pop cmp sar xchg testl loope dec out xchg inc int3 insb out sahf imulb stos movsl or jnp test jle rol jp out mov lcall push out jno mov imul cwtl push (bad) aaa jg dec out add inc dec ljmp lcall mov mov into sahf (bad) mov fnop mov out pop add jno cmp scas addr16 jmp xchg pop out xor pop sbb nop sub dec lods xor in inc jge xchg push icebp mov ret fwait cli (bad) and out xor inc test outsb repnz lsl out out mov sub push out int xor in inc inc sbb xchg mov mov or hlt hlt insl imul mov lods mov push xor or out mov mov (bad) iret sbbb out imul mov pop pop popa arpl sbb adc in cltd test faddl out mov sti outsb xor dec inc imul out sbb push (bad) xlat push jg fist ja or mov mov jecxz enter inc lods test test out lea and iret xchg mov adc jmp insb pop negb loop sahf repnz lock out out jae cld mov cwtl mov and pop out bound xchg (bad) push out or imul cmp imul sub out jno inc cmpsl mov insb fwait pop jp xor lcall jae (bad) lock out pop test jle pop or mov mov out shll add sti movsb jge jmp push mov (bad) push negb jo inc mov pop sti cmp out cwtl mov push xchg pop cmpsl movntps (bad) aaa fsub ljmp mov lock out add (bad) std sub lret sbb ljmp add pusha rol or xchg push test inc sahf pushf pop outsb (bad) fiadd out xchg pop js mov pop sub orb aas xchg xor out mov (bad) popa out inc dec sbb jl jbe rolb mov ret push push dec push dec out fsubrp (bad) lcall inc stc mov mov pusha push or out orl lods inc out insb adc arpl fmull ror mov ljmp out mov add cs out aad fs xchg add (bad) insb xchg out add insl sbb adc into xchg addr16 add jno add mov dec insb les in pop pusha arpl call hlt mov cmpsl (bad) cmpsb lea fisttp ljmp mov pop xor and pop adc mov hlt int3 mov dec daa push repz jo xor sbb int test scas and (bad) (bad) sahf test mov inc push inc out cmc and mov or mov sub imul inc test push and in daa out loope cli (bad) idivl jmp in movsb jge out adc fs (bad) out xor popa sbb pop gs mov ja in call pop dec cmpsb or out push mov jne mov decb shrb sub in (bad) imul or sub dec out data16 cmpsb and pop pop stc push adc lods mov out inc in xchg scas lea outsb push js jp enter jnp popa cwtl sti xchg dec mov xchg adc scas imul fidivr sti das outsb adc inc lret mov mull and add mov out and cwtl (bad) rcrb cmpsb lock jb push out je add mov or out mov aas (bad) cltd mov sbb imul jb ljmp out fstps stos movsl jmp test in lock adc fisub pop shrb popa and push iret mov out jge push dec repnz ljmp fimull arpl out sbb sbb cld out sub out clc add arpl ljmp (bad) pop in add sub xchg xor sbb sub cltd mov stos mov loop xchg mov dec lret (bad) sbbl jno adc add fwait mov out and and in rol mov out xchg mov and push fucomp nop negb inc notl scas pop add cli lods and aam jl out out mov xchg xchg mov pushf lea decb push sbb daa (bad) out (bad) into (bad) or out sbb mov out insb inc aaa stos comiss dec std pusha fcomps test cmp out in sbb adc adc pop inc push or (bad) jns push mov jnp xchg sub cmp sub mov daa sbb stos xchg std fisttp mov addr16 das ljmp add pop or mov call (bad) icebp gs xlat js out aam inc cmp jo stos mov adc movd and push pop pop (bad) xchg xchg addr16 in loopne mov xchg lea push imul or cs fisttp shlb cmp or pop movsl fildll out pop and je xor jo (bad) hlt roll pop outsb aam mov push xor out lds and bound fcmovnu leave cltd jmp out cmpsb cmp sub fcmovb dec jnp rorl cmc out jae stc fwait out inc push fisttp xchg ss bound loop dec insl stos (bad) (bad) fwait out lods sub lret bound shr lock sbb dec out mov pusha cli fcompl out aaa cmp sbb xchg popf fnstenv out jb jl lcall pop pusha pop mov test fdivrl rcr add leave lcall in in sbb dec push inc imul dec or sub fiadd out pop lea out or push outsl out and fisubr stc xor cmp and cmp xchg out idiv add sub push shll jle (bad) loop mov movb adc jb xor divb test insl adc pop fcomp cmp fwait add cmp outsl out mov lahf jp out (bad) sub xchg ja xchg pop adc and xor cmpsb ljmp out dec mov fwait (bad) lds iret jbe out test jno in mov mov inc fistp out std inc sub xchg dec xchg cmp das enter adcb sbb xor out mov mov dec push out movsl mov pop cmc leave imul or das test and pop hlt cmp xchg cmpsb (bad) out cmpsl test add clc xchg or pushl push push gs shrb jbe xchg xchg push push (bad) out push ss inc mov int3 sub pop pop sbb das in xor out repz fisub pop jecxz in cmp mov add inc jmp xchg pop mov jb (bad) aaa adc out jl adc xchg (bad) hlt (bad) test rolb xchg or mov outsb mov push add xlat out cltd add sbb mov scas add data16 int3 mov or add shr lahf pop sub fstpl out push shlb pop xchg pop and in xchg push out call inc or out jbe jno pop pop sub in push adc call xchg out (bad) jo ret sub shll sahf arpl jb out aam pcmpgtd and (bad) movsb gs mov sub test mov sbb fs sbb pop adc cmp and push lods pop adc arpl inc xchg mov mov decb leave outsw out sub scas jecxz fisub out jge push or stos outsl (bad) and loop xchg sti push out or mov out fnstenv sub (bad) dec out mov adc mov sarl push or popa clc sub cmpsb jle mov out mov mov push aam xchg leave add nop lock pop mov cmpl scas sub out hlt subl out mov jl ja lods or iret xchg (bad) sbb mov aas xchg fwait loopne xchg (bad) ljmp jo or iret mov repnz (bad) or repz je and out gs add fdiv push (bad) mov insb push loop mov in pop out xor sysret out cs repz ja arpl jmp out sahf out lods stos gs out push sub test call dec out push mov loopne xchg aas pop into dec jb cwtl shl mov inc add inc or jg scas imul sub push sbb push out xchg xchg adc popa and mov iret inc (bad) mov jo aam lods lock setge stos int mov out int3 (bad) je sbb sahf in push (bad) lods ret iret rol out out cmp imul nop xor out lea aas (bad) aam hlt lcall cmpsb icebp loop addl (bad) or mov test (bad) addr16 outsb xor cmp and iret fldt sbb ljmp test jne inc loop xchg xor in jmp sbb mov enter push add mov mov cmc pop rorb lret movsl ja inc push pop fsts scas lods mov out idivl push scas dec cltd std fistp sub stos add lret rorl xor and sbb insb mov lds ficomp adc out sub sbb scas lcall out sub notb rolb addr16 out push or scas cld xor out adc pop jbe out mov sub and mov jmp pushf insb lahf (bad) negb push sub out test fwait aam out je sub xor push iret lea cmc pop xchg rolb icebp out popa pop xchg clc fnsave push mov cmp (bad) mov jb sbb insl lods add lock lds sbb sbb clc das dec pop sbb or shll jg pop loope pushf jp aas aad add dec push jnp sbb mov imul pop loop nop add rcll fsubs xor cmp out pop jle adc fstpl sti (bad) loope bound out faddl fwait out inc xor push lahf add xchg pusha xchg (bad) out outsl ljmp out inc sbb int pop dec loopne rcr stos negl cmpsb xchg out push mov xchg into pop scas pop out movups fisttpll and xor lret out and fcmovnu movsb push xchg sub (bad) out add mov lea jl out push cmpsl sahf sbb lahf push (bad) jg add arpl mov lock psubq add in xor jmp lcall loope out jmp out inc xor add cmp dec loop out pop ljmp out ljmp pop (bad) cltd popf push or inc nop lods mov fisttp mov call in out and sbb sbb mov lock dec xor cld pop push mov scas xchg fucomp jno push test int out int cmp loope mov clc lea call out fdivs loop mov gs out lods cmc repnz popf mov iret inc arpl mov pop (bad) cmpsl xor lods lahf jmp cmp mov push sub xchg imul mov pop mov imul dec and popa mov imul es xlat divl into pop cmp dec push imul imul cmpsb pop ja ljmp out gs mov sub xorl or xchg int3 int3 sarb out and sub inc pop addr16 ljmp js pop dec inc add mov test loopne cmpsl sub jg clc mov repz arpl pop mov jl scas insb out les xor jmp test cmp xchg add stc ss in das pushf sbb movsl pop sub test lahf xlat es hlt mov dec jg out jo inc inc sbb or push dec orl xor add int3 inc dec inc out imul cmpsl out repnz mov dec jg out sahf arpl xlat rclb xor and out push adc outsl out pop pop pop fcoml sbb push mov out or insl sub add das test fs pop mov jo call scas dec and (bad) or mov fdivr int test aad sbb cltd loope sub inc mov push or or test cmp int3 jae insb sub fldenv lods idivl cmp ljmp loopne (bad) shl sub out sbb xor inc insl inc lret jle push enter iret pop aaa ljmp arpl pop insb dec mov mov mov mov xchg jb xor jne mov test xor and (bad) loopne repz cmc mov or inc scas outsb cmp push shll ljmp push in outsb pop std out sub sub out push jo jle add adc aas pushf cmp scas push enter jg test pop jg sbb out dec orl inc out bndldx es xchg jge mov fwait inc repz mov (bad) out loopne inc sbb dec daa icebp out push aaa scas stc mov iret nop mov pop loop out aas sbb dec or cmpsl and mov xor inc loop out or pop out popf and jmp out hlt xchg mov pop out (bad) sub jne out rorl out insl aad test psubb mov pop std out jle lea inc xchg mov cmc cltd out repz (bad) ljmp (bad) jne lea sub (bad) pop mov mov daa mov push popa mov out adc pop mov in rcrb pop in mov pop lahf out jle shl inc mov call inc and add xchg jnp mov (bad) cs mov push test jmp sbb or stos fistpl insl sti out jae pop fiadd js (bad) mov push add xchg testb popa loope pop out mov fs dec leave sbb cmp push xchg out dec lea repz and rolb xchg mov loopne jbe ljmp ret sbb shr enter xor and lods or pushf push insb lea jmp hlt mov xor jbe leave mov out push jns or (bad) dec (bad) out lret out and enter or pop pop and in sahf lods mov dec rcl push dec in mov cltd sub push mov out bound xor sbb out and adc fildll or jle in xchg jecxz cmpsb xchg in push inc mov dec or jmp lea xchg adc cmc pusha mov xchg into jmp xor push in rcrb out push cwtl out xchg sub dec jb (bad) push sub mov out std xor rcll lea icebp outsl mov lods insl ret (bad) cmp jno outsb out pushw and fidivl ret adc ds mov mov mov jae das cmp jmp lock jo fdivrs incb lods fs pushf (bad) out ret mov push jno add fldt jle jp lock repz adc xchg push scas lods pop out (bad) lock hlt push mov or fisttpl out movb xchg shll pop or and mov out mov jbe out pop daa mov aad out lock inc lea cmp pop in (bad) dec scas cmp push xchg ror aas cwtl popf xor dec inc std pushf sbb mulb mov push push sub fwait mov push push mov hlt jl aam rclb push cmc (bad) jo sbb adc push push and mov cmp repnz xchg lahf push stc xchg stos cld sub cmpsb lods (bad) lret in mov es add and inc sbb imul xor jg,pn and outsl out dec push (bad) push push push nop into sub push movsl out js fsubr aaa mov lea cmp loope mov lods mov jbe mov xchg out mov push xor out sub daa repz aam xchg aas dec adc loopne loop lock mov mov cwtl and and mov mov sbb lahf ror dec out loopne pusha iret xor out push inc xor dec ror adc sbb out mov inc daa sub sbb push into pop out pop sbb xchg mov push lock outsl sub xor out sbb mov sbb jp pop mov out add mov push std pop loopne jl ret lcall sbb iret (bad) int3 aaa cmp jbe lods repz push test popa push xchg lahf mov jl jmp pop sbb into jae push sub mov and out insb mov (bad) gs negl cmp and arpl rcrl test add pop mov out cli arpl jae sbb dec mull jge jmp push add ret arpl mov loope daa or ljmp push mov outsb cmc out mov aaa cli or cltd push (bad) notl pop in pop dec ss push sbb mov adc lret ror jecxz je movups std mov cltd hlt ret imul ss out test mov out sbb imul dec iret stos sub cmpsb leave mov xor outsb bound bound mov cmp cmpsl mov push out sub stc outsb xchg scas ret xor ljmp cmp into pop lock leave xchg inc das mov jns dec pop sub lcall das pop out sbb inc cld aaa and push pop xor jmp xor sets outsb popa mov mov xlat sub mov mov mov mov out jo dec pushf sub or out fstps mov adc out and rorl jmp mov ss sbb or mov lods rcl ljmp pop xor out pop arpl or sub (bad) jl (bad) enter adc fisubl jmp movsl xchg out cmpsb cmp push arpl dec push mov pop in mov and in sbb cltd pop add ljmp sarl test xor mov cmpl xchg mov mov stc out (bad) jno aad ret cmc sub and sar mov dec sbb out push pop jo xchg add dec add hlt out lods jae loopne inc inc jg aam mov mov in out push dec mov scas out xchg push icebp cmpsl inc dec cwtl dec in daa push sub ljmp mov fcompl sahf fsubrs jecxz out or rol xchg cli je call and xchg sub mov or xchg lret out mov das push adc call out (bad) xchg sbb repz or out jnp xchg dec sub jmp in xchg (bad) in mov addr16 sbb in imul pop push and xchg adc push or pop sti cmp mov cs or pusha xorb push cmp lock ljmp fisubrl repnz sbb push dec dec pop out aaa mov sub addr16 cmp add mov lea adc outsl adc movsl mov adc in pop push js push hlt scas mov adc ret movsl outsl loopne push mov and ljmp pop imul inc or inc cltd rcrl dec push sbb xor outsb xchg and and adc out push scas inc addb sub (bad) fcmovb xchg leave cmpl push movsb out loopne pop (bad) sbb dec outsl jmp jmp xchg jo mov xor pop inc lods in out push mov fwait std (bad) out adc jns jge ds mov enter ljmp nopl hlt ljmp lock aad dec (bad) sbb out pop inc mov out dec fimul mov daa loop int push outsl out test sbb xor scas pusha pop imul inc or mov fbstp (bad) mov jl push scas dec pop mov mov sbb pop shr pop jge inc xor mov cli into loope push scas or scas out in xor aaa cmp and adc fstl outsl enter lock mov sbb hlt add popa fsub or mov je movsb shr cmp mov addl mov xchg imul add push push adc fidiv negl xchg adc daa pop fs jmp push inc pop std (bad) mov pushf es loopne xor das push pop xchg jb (bad) iret into mov out js push clc out jg stos movsb xchg push mov fisubl stos cmpsl jl mov jne lock in add push xchg cmp mov sbb fs inc adc mov lret mov sti call add push sbb xchg loopne xor push outsb nop ljmp and push jo out inc dec mov mov xchg stos movsb mov jmp out mov xchg lcall (bad) and js jg sub das pop daa cwtl ljmp push imul lds push fcompl subb cmp sbb movsb sub jmp cmpsl adc out sti out mov es lahf and stos add in cmp xchg test lock add ljmp out add aas and jecxz cmpsl jbe mov jne pop pop addr16 cmp xchg in out lods mov fwait inc cmc pop out inc hlt fstpt loope push inc nop dec or jns dec popf (bad) lret (bad) out sub jno cmp loop mov mov out mov sahf mov mov jecxz ss adc inc dec mov pushf lds out aad sbb das repz repz loop jecxz arpl int push mov mov gs sub (bad) xlat out cltd ljmp out aad sub mov lods sbb xchg sti shrb je stos mov mov dec push ss out cltd mov mov pop jb in dec push sbb sub cmp jnp in les sbb mov clc xchg fisubrl push rcrl add sbb jns popf aam sub mov subl lock jbe test add rolb or inc cmp adc mov push rolb jb cmp pop movsl inc dec sub aad adc push imul lock das sahf addr16 hlt cmpsl cs cmp aas addl (bad) sti mov js (bad) ljmp pushf pop ljmp mov xlat xor xchg sub test shlb dec push in sbb in das out clc push adc pop imul push das xchg out add pop insb stos xor inc out je xchg popa cmp (bad) out mov into daa icebp mov lods (bad) repnz lcall xor push push notl call mov decl dec in cmp mov popf sbb jae (bad) or out sub jo inc add pusha cmp sub pop inc xchg or int sar xchg js out popf mov (bad) iret in and jp fstps adc pusha xor dec lahf inc mov xor pop add lods imul fcompl xchg sub inc std out lods and call ret out js mov and jno hlt out insl push xor out idivl sbb inc sbb test lock fwait jne stos hlt popf or mov sbb in lods push aaa out or push add jg pushf push mov out cmp stos mov jne sahf inc repz cld in or cmp push add lods (bad) fs outsb decl adc xchg push pop ret nop loopne sbb or xchg pop lods sub xchg out lods mov loope std fstp out and rorl xor lahf out out mov ret pop cld or xchg in mov out lcall loop inc jg rorl out jecxz cmpsb (bad) out push adc mov adc mov in in or push pop decb addr16 xor mov pop push jge adc sub push fwait mov sbb (bad) out xchg aas cltd imul out stos or mov out mov sbb xchg or push out push repz mov lds xor aaa sub (bad) pop or mov jbe mov ffree pop xchg test add xchg add jmp movsb je out cmpsb repnz hlt jo in and xlat leave mov pop inc in aad lock outsb push and loop lds sub mov out mov lahf arpl xlat out jecxz sub cmp out dec mov dec enter out addr16 daa mov iret aas jmp pop out loop push in std xor movsl jns out push sahf rcrl repnz cmp insl pop jge out loop ds jmp (bad) xchg out dec dec xchg pop imul lods sub (bad) call jmp mov js or (bad) cmc pop xchg ja ds and in popa outsl out or stc inc sbb cld push cmp enter or fstl out add fucomi mov pop mov mov xchg hlt inc test loope push jle out idiv pop dec push out adc fisub stos add xor jmp cmc ret xlat xchg xchg js (bad) inc sbb dec pushf aad xacquire dec mov xor aaa popf out inc mov insb adc add sbb out int3 gs mov out sub inc inc lock imul data16 mov mov mov test mov dec out fisttpl out mov iret (bad) popf xorb cmp leave or ret out into js jbe xchg out fidivrl std es (bad) sbb out (bad) into lcall jne jo xchg out push fs add shr adc hlt lcall repnz aad and out mov nop test jmp inc jno mov dec push fdivrl je mov sub xchg out inc and adc scas add out mov push push out lea lods adc sbb lret aam push icebp dec sbb sub mov out mov xchg pop sti pop mov mov jmp sub out xor test lret out cmp outsl inc ror mov rcrl adc (bad) pop pop jp and push add inc add std shrl loop lahf outsb rol jno scas cmp mov mov in pop (bad) push enter ss push xchg iret test mov inc out mov sub out ljmp test fwait adc mov ljmp xchg jle std cld shr daa pushf pop jmp data16 xchg fucomp sti pop xchg fistl adc add cmp ja and (bad) test (bad) jne insl add fwait pushf inc out and or jae and adc inc and mov ret mulb mov (bad) aam test sti lahf xchg lods into mov popf pmaxsw scas xor sahf push push adc outsb int3 xchg push sbb aas or stos shrl in stos lds sub xor ds xchg out xor pop stos stc shlb cwtl push mov mov xlat scas and in (bad) out or xor fisttpll or stc dec cld add test leave adc sbb (bad) adc movb mov mov cld in push idiv push nop adc insb scas out test loope into stos in or les cmpsb lds push xor xchg cli out loop int fsubl lahf mov pop jle rcll sbb cltd loope mov mov adc repz aaa loopne jno ljmp out or jae out push loope aas fbld dec shr cs ret and rolb out mov divb (bad) out je mov mov inc push inc jbe scas adc cmpsb test ficomp insb xor dec mov out cmp insl jp sub ret in leave decb mov in mulb in out adcl test or mov (bad) sti xchg test inc lahf loope adc jl add decb push cmp adc out mov sti push pop mov lods ret cld jl cmp cmp mov (bad) repz mov aaa add ds and daa mov mov loope lods rcll out xchg fisubl adc out lea sub addr16 xor je push sub leave sub dec enter out jle mov xchg out mov or push adc into out sbb mov pushf insl sbb mov pop sbb pop add sub das jb add pop out sbb pop cld push mov sub mov je std (bad) fs lods loope pusha (bad) jno xlat push out out and subl mov in push jae adc lcall mov mov cmpsb out stos sub (bad) out ficompl push lods je pause inc out cmpsb pop rcrb mul push ja add insl pop pop dec nop loope fisttpll call aad arpl xchg mov mov cli adc push mov mov xchg ss out pop out outsl aad jmp out jl add (bad) aam pop cwtl inc cltd sub jae call scas ljmp fsubr and sub pop add adc mov jns jle xchg data16 jecxz xchg imul out jae mov or test lea jns pop sbb ss jg add movsb xor jae xor cmp addr16 add xchg loop push sbb jg cmpsb and cs hlt pop out xor mov jnp cli mov xor sub add out sbb mov out dec mov leave (bad) out (bad) insb dec cltd cld pop mov lcall jnp lahf out ror mov jb push jle imul pop les inc cwtl mov das ja pop xchg divb pusha out loop lret push sub in out xor fstl pop loopne or push jmp xor pop mov sbb sbb sbb out cld shrl pop out pop daa jge xchg call fucom outsb test jae dec sub and arpl jns jp out clc push or rcr lret xchg adc fadds mov cmc and ffreep push loopne xchg pop loop and shld ljmp out mov les out sub sbb xchg out ja shr insl sub pop jp add or adc mov pop out les shll mov int3 mov out mov jecxz shll push call mov and rcll in iret jb (bad) popf ss loopne out mov inc in iret inc clc enter stc das add push js in xchg push subl sbb jbe fcomp pop les out addr16 shll rcl shr dec sub ret mov int3 (bad) je cli add ficom mov jg int xor xor or inc push or insl add xor mov inc xor cmp pop bsr push lock add dec loopne push int3 mov ljmp fnstenv mov ret mov stos inc sbb jp or fildll jg lock xchg pop add out and test (bad) movsb stc sarb clc mov xor ljmp loope push lcall push dec mov jg nop test inc inc lret push sbb pop sbb gs adc sbb jo sub add insb bnd xchg imul dec jno cmp jnp and sbb dec popf fiaddl sbb mov out call dec adc out das xor hlt push outsl add loopne jo xchg lret pop pop push and push mov ljmp out push mov pop out (bad) adc push jl movsl jecxz ret lret movsb into out adc outsb mov iret adc mov (bad) sbb pop in cmpb xor xchg cmp out cmc add jmp lahf sub jbe out adc mov bound jmp stc lods sbb jae jp sahf cmp shll ret mov jmp out jg idiv and mov pop lahf fisubrl mov out addr16 (bad) dec iret popa cmp and out mov out and dec jbe aaa xchg cmp test movsl out cmpsl mov inc sub mov aam outsl sbb int out cmp pop cs imul jmp out nop jo adc fistp fisttp add xchg nop cmp enter mov mov xor mulb in lock jp cmpsl lea mov int xchg push push sbb push add mov rcrb ret cmpsl lds dec sub xor fimul sub adc lahf mov adc test mov sti das push lcall clc shl insl out push out xor addr16 ss test sbb mov xchg and xor adc repnz lods (bad) call out notl push scas (bad) out mov lock xchg orl popf ret out inc inc test into out jb in popa divb mov pop cmpsb out movsl scas clc cmpsl insl push cmp cld xor jmp pushf push iret adc test testl rcrl mov scas or jg repz push dec mov jecxz xor jae out sub inc fwait sti out pop pop int3 xchg ljmp out stc mov dec aaa pop imull push ljmp mov mov push (bad) pop xor aaa test iret pop aam mov out adc (bad) cmc lods imul popf ja mov outsb lret jecxz bound add lods sbb lods adc test adc int3 cmp inc fdivl sbb push mov cs (bad) stos lcall sbb add out punpcklwd pop sub push mov out sub imul es push jnp push pushf mov out subl daa les out mov outsb ret sbb scas hlt imull jge into out shl push cld mov adc cmpsb cmpsl mov je dec push ljmp jae lock jg (bad) (bad) out mov popf idivl xchg out xchg popa mov pop jb into pop xor out dec push sub stos rcl mov out fsts pusha ljmp addr16 jne das test out sahf int3 jmpw mov cmc mov out out push iret dec push gs and stos repnz addps idiv icebp xorps in insb adc cmp loop jl jmp rorb push std push (bad) in (bad) ja push (bad) pop push mov (bad) ljmp orl out ds xchg jg jmp out clc jl incl jne iret pop repnz popf ret shr inc pop xor jns sbb mov push dec shr in cmp rcrl loop lahf xor test (bad) mov (bad) in call xchg xchg clc sbb add add idivb test push mov cli fwait ljmp push sbb xchg (bad) nop xlat stos jb pop out inc imul xchg clc arpl jbe fmuls and cltd cmp outsb enter cwtl incl imul or and loopne hlt ficoml iret adc in (bad) out fs push out or cli lods out sub mov pop xlat stc pop dec pop hlt push test out imul cmp shrb loop mov xchg jne mov imul in out mov or bound out aaa enter cmp xor dec int3 loope mov push pop xchg push lock cmp repnz fs jbe pushf stos lcall jle mov mov and (bad) add in xbegin loope jne or xor dec and inc jmp in mov sub out imul pop (bad) fwait sbb dec lahf xchg fst push pusha out fimul lods das adc outsl xlat out incb xchg (bad) jae xor xchg in decb add insb test out dec and dec jp movsb loope (bad) xchg pop int out (bad) cmpsl inc jecxz leave mov push out shlb imul dec jle popa sbb sub mov mov mov mov xchg cmp lods and out arpl inc insl push dec mov out scas and popf inc adc pop add in dec loopne (bad) jno jmp sub loop adc movsb rol sub pop jle dec and insl dec add test adc mov dec sti out cltd ds push out test dec movsl add enter loop mov cmpsb xor pop xchg mov fcomps mov mov daa sub out pop dec loopne out mov dec mov data16 out xor dec jmp cmp inc cmovns mov out enter xchg inc jbe aas xor scas lret jmp adc outsl pop in roll scas lock add dec std out cmp mov or pushf les dec das div aaa adc pop jns idivl mov out mov cmp dec jmp pop out xor push ror dec arpl add adc cmp rcr int mov jns fs push out sti stos ret or gs (bad) shr fisubl pslld and out dec pop mov jge pushf aas xchg es push inc out mov out jg fs jne pop lcall iret (bad) repnz xorl out push in jecxz lds or pop mov sub push nop cmc cmpsl mov iret mov lds call mov loop mov (bad) data16 dec push aaa or push in push pop push inc mov nop repnz cmpsb out pop scas test mov or cwtl fsubl std test leave lods arpl inc lods lahf or adc pop mov out adc std mov stos or pop add fwait or ljmp out xchg add sub push sbb test pop (bad) cli push mov jno adc xor adc out (bad) fiadd pop out shrb je mov imul push add jae mov shrl out sbb mov push out dec stc dec pop and std out test clc add stos sub cli dec mov pop ljmp in stc cmpsl inc mov mov xchg adc outsb out push mov fsub enter shl lahf xchg in cmp rorl repnz adc sub inc fbld stc jmp mov and sbb jae leave out nop mov or jge pop mov subl dec cmp fildl dec out jl leave scas pop and (bad) out inc inc ret dec xor fucom out mov sbb add add (bad) (bad) clc add jge popa outsb cwtl lcall js xor dec pop loop mov mov imul insb loope out jae loopne dec iret imul test incb stos pusha stc jmp decl fmuls pop push xor sahf mov imul pop adc dec and outsl xchg roll xor mov out ja in loope xchg es or push outsl jecxz jnp scas out mov cmp sbb add dec jb and sbb insl pop loopne jle jecxz in out pop (bad) (bad) fidivrl out lods adc or cwtl mov enter mov loopne xchg popa ljmp pop dec nop add mov pop lcall cmpsl es pop ss jbe sub cli out and push sub out icebp sbb (bad) repnz add sbb xor pop xchg xlat stos gs out jo mov ja test pusha out lret push icebp in dec loopne mov and (bad) jle loopne (bad) push pusha sub ljmp inc adc movsl out idivl hlt push xchg pop push mov ret sub rorl loop jbe arpl push out cld in enter push gs mov call adc pop mov sbb movl out (bad) int3 test fsubrs out (bad) mov loope push loopne inc jbe jp pop mov in jg,pn dec out fcoms and jecxz outsl (bad) jbe cmpsb or cwtl lcall push into daa jne xlat out cmpl arpl pop out insl mov jmp aaa loop sub jne (bad) iret in xor in aas push mov mov js mov sub out cmp adc pop cmp in sbb mov nop test fildl out add leave insb mov lods in inc or lods int js das pop stos jbe out fcomi sbb or repz mov dec or out jle pop push mov iret mov push insb (bad) (bad) loopne xor out out fwait mov sub jns push push (bad) in es jg aam sub xor pusha jbe dec xchg out (bad) cmp mov mov pop pushf addr16 fisttp int3 pusha lock adc (bad) sub push (bad) ss outsb pop adc insb lods adc jmp mov mov std shl cmp sub mov and nop dec jl fbstp push pop cmp ret hlt pop out xor xor mov lea add pop in cmp ret xchg adc dec scas out inc daa mov sbb loopne out xchg pop out call and add out push (bad) xchg sbb call arpl jae inc and out (bad) sub push out lcall jecxz (bad) xor sbb mov in add (bad) daa add out xchg or psllq pop mov push cmp ds mov iret sahf mov and (bad) notl sbb (bad) out sub cmp adc out push scas xchg push mov packsswb iret out and sti aaa xchg out xor mov lahf insb pop jnp arpl add loop stos (bad) sahf mov pop xchg lret jnp (bad) lcall out mov leave pop mov loop add loop jne xchg or cmpl xchg mov mov icebp ret sub imul ja orl (bad) cs (bad) push rolb addr16 sub mov ss mov cld scas cld push sti lods cli and push cmp loop popa inc test call aas neg dec mov imul andb leave or call xor or xor out ljmp sbb mov clc jmp sub and out pop popa dec mov out lahf add inc aas cli cld mov popf dec fild pop out imul mov out inc or fsubp test pop outsb bound fistp jmp adc pop in bound pop out (bad) mov sub mov enter jb cmp sub pop outsl out int (bad) and xchg pop dec inc out aad loop or sarl daa jo out mov cs out pop mov and lock or popf push jge mov dec das aas out xor sbb push out pop xor xchg int3 icebp jbe notl sbb dec scas or jle mov shrl xchg test int3 iret scas outsb (bad) addr16 sub imul or scas aad out mov cmpsl ret loope push lods pop mov dec in mov out xchg stos out call jae push jmp sub mov out enter (bad) test pop mov out jno mov (bad) into sbb movsb lock pop adc mov pop out stos test xchg add out out and adc sub sbb mov adc dec cli out scas loop mov pop inc das mov pop ja les lock cmp or sub out out mov es out dec sbb push iret addr16 rcll (bad) mov dec xor mov xchg (bad) addr16 cmp test cmpsl fstps es out jmp out cmp insb addr16 ljmp inc cmp scas adcl mov xor rcl push cmpsb sub loop pushf lahf mov add or xor adc adc mov push pop scas iret and jmp push mov sub (bad) jge rorl jge xchg adc fdivr lret les (bad) push fidivr loop sub jmp pop test test rolb and outsb and test or xchg or imul ret jne xorb pop stos push out mov push lds ds cld sbb insl mov or cltd out bound cmpsl xchg jle adc repnz out jb lret xchg lcall or out and fstpl imul test jne int3 hlt out out inc aam dec dec or out sbb fstl out cmc adc enter and int adc js pushf loopne xchg shl jno je jb rcl in out in daa add out dec mov adc out sub dec lock xor pop out dec and imul inc bound pop cs cld fldenv cmpsl out inc dec out clc mov sti dec out outsl fnstenv add xchg pushl shl adc test lock jb out or mov out insl lds sbb cmp dec jle fwait nop mov sub mov out leave rorl sbb fldcw mov out inc mov jbe (bad) xor andb shlb out or fstp mov cli fbstp call shr inc cli mov dec lods ss cmc or (bad) out pop dec cmp lahf adc (bad) sti aad (bad) lea out std cld jle cmpl push push into lahf cmp out hlt pop inc sbb or push movsl daa ret xchg mov jmp rolb mov je adc mov adc cmpsb dec xlat into cmp into jl xor lods call popa lods movsb sti iret jbe (bad) out dec add fcmovnu xchg mov xchg pop sbb pushf sub or add jnp sbb incb popf in out nop mov mov out lea xor jmp loopne adc and out dec les cltd das cmp lret fldl (bad) in xor mov ds insl insb (bad) pop or in (bad) ljmp sub test in out mov and add and and out out push mov es out jge jne lds sbb push daa sbb add call add jmp adc in repz sarb pop jmp mov mov (bad) or sub xchg adc leave mov (bad) inc outsl (bad) ja push push sbb test pusha out jne lret mov cmp frstor insb pushf out mov mov mov cmp in mov das ret roll push fbstp sahf in aad mov out imul es (bad) mov rclb jmp daa int jno cmp das cmpsb and add inc pop dec in pop pop out fimull mov daa sub loop sbb xchg jmp sub jb cmp out dec gs pop cmpsb pusha pop cld sbb out sbb push stos lock add jnp inc ss lods and daa pop popa arpl push xor xor push dec lahf pushl jo out sbb jle adc (bad) pop inc sbb out pop in repnz jnp movsb sbb cmp in mov or jnp dec xchg fwait ror pushf ret repz leave cmp pop hlt inc movsb dec jnp les cmp mov imul sbb jae test mov sbbl xchg das lods icebp in out cmp out lods mov call fnclex jbe test adc push dec adc dec out xchg ficomp (bad) jl sbb in push push ds loop jo test (bad) loopne lds mov out lea orl dec test xor sahf ja or pop and rorl out data16 jl movsb (bad) out nop fwait (bad) mov in out jns aad std (bad) icebp xlat out das lahf inc xor cld lds sbb mov in mov adc push sub (bad) out mov mov pushf xor push fdivrs test xchg out rcll jb out clc pusha scas sub mov pop ret inc or iret (bad) jae out mull ljmp dec popa icebp mov mov or call jne insl jns mov mov out jae pushf adc js pop mov in mov mov xchg pop fwait lea ret sbb inc inc (bad) (bad) xor mov pop mov out xchg stos js rclb lret sbb mov pop mov movsb push sbb or sub (bad) jge mov addr16 pop mov enter int (bad) adc test repz out push push xchg xchg loopne outsb push loop data16 (bad) pop not mov nop lock inc xor out sub adc push aad push out insb mov in jae xchg (bad) idivb add xor and xchg call std out jp out in mov scas mov in mov mov jbe ds dec dec mov push test sbb jb add out xor mov fistl push push inc div and inc lea test out xchg xor sbb inc cltd pop add call out scas fbld lods mov lret pop push mov outsb movsl into in (bad) sbb daa xchg or add fsubp jnp sub jmp stos cltd xor adc mov lcall sbb jbe pusha popf lahf fsubr xchg mov inc lods dec dec xchg cmp jo inc jmp (bad) (bad) out mov adc addr16 adcl sbbb mov std fldcw lods lods mov shr and (bad) adc aam mov push dec mov pop xor xchg pop out push dec xchg iret cwtl bound scas (bad) mov and pop xchg sub int3 out lcall (bad) out les dec out or push mov scas out sarb adc (bad) pop cmp xlat push lock xchg jo les dec sub in daa mov loop (bad) fimull (bad) out mov scas negl out fldcw outsl enter out mov add dec (bad) fsubrl cmp push std lods mov stos shrb movd fmul lea mov test shlb popf fwait out fsub pop out xchg inc les (bad) stos lret jmp adc sbb mov jns xchg add stos jle icebp insl inc out and popa dec (bad) sbb pop xor xor xor lods (bad) fdivrl repnz jns test pop in out sub xor out ja andl pop or into and pop dec push cmc jg lods ljmp ss clc jo icebp fsubrs repnz scas push push adc sbb lock mov in mov dec and out je mov cmp fiadd cs loope insl mov inc out daa or xchg push out pop ljmp out dec dec data16 loope cltd out jl loopne push sbb out fisttpl lcall enter out add push mov mov loope aad push pusha (bad) out cmp dec inc packsswb lahf jmp out push out push cld les aam fldt jl jbe and incb xor sbbl lods push jg mov scas and sub pusha dec xchg cmp jmp les icebp repnz mov out add mov out imul dec sub iret jo lock push loopne pop fwait inc mov xlat fistpll pop jne out adc mov in mov inc addr16 out push pop out gs jbe adc cwtl daa out out or xchg xchg sbb jge ljmp cmp mov movsl xor aaa loope je adc aaa push push sbb fnstsw mov ret sub fs xchg xor loope pop or adcb arpl out push jmp addr16 pop dec sbb push hlt and and add divl test pop hlt sub outsl add xchg imul xlat push inc ljmp jne (bad) dec jg call xor test adc stos xor test ret imul std int xchg mov add mov pusha inc cmp int3 or push test jno out dec mov mov sbb out jae std mov xchg nop jns and out fildl incl pop pop push or stos inc sub inc out mov and and lret out dec or inc imul loope imul idivb mov stos adc out loopne jg and pop ss (bad) sbb xchg imul into sbb mov jne icebp movb dec subps cmp sub leave sub pop add push xchg in dec repz out sarl jg sbb cmp cltd out enter std out aam inc cmpsb rorl decb sti iret int3 mov jge imul lods and inc xchg ficompl pusha call mov mov dec jmp mov scas les outsb shr cmpsb out xchg jnp xchg inc push (bad) add xor cwtl jb xchg out cmp test je push insl loopne in adc xor test ja xor fwait loopne mov mov ret icebp mov mov test popl pop addr16 push xchg aad sub mov into and out lods mov (bad) aad lods push jg in les out iret jp loop out stc and ja xchg mov (bad) iret add iret push movsb and out and push call into mov fsubr xor ret sbb out in pop lahf sbb jo test sahf pop rcll (bad) fsubs insb mov dec iret int addr16 inc jnp ret bound cmc dec sub jp roll in je jnp mov xor mov mov lods in and in pop (bad) nop es loop call popf sbb cmovae jge out xchg jmp hlt xchg out xor pop insb sarl or out sub rcr pop lret fistp jl aaa lock adc cmc test test push cmp sbb fdivs out (bad) mov mov aas sbb pop stos xchg jo (bad) lock popa loop sub fwait bound out enter icebp mul xchg push mov aas scas pop mov mov add fwait jg mov adc pop push in adcb mov and inc push or out ret (bad) and mov fwait mov out xor or mov mov ljmp inc (bad) cmp cltd sbb ljmp xor cwtl out push setnp mov nop aaa repnz sub mov movsb add out shrl add mov jl push xchg jge adc xchg mov jg inc dec movsl lds rcrb out fisttpl mov fild in pop cmp andb icebp mov fmull lock sub pop mov mov jae int3 (bad) std cmp aaa rol pop out xchg hlt fwait in and out (bad) pop push or cwtl mov mov rclb mov outsl lods mov out dec ljmp jo push out outsb push cwtl and jle clc inc imul out (bad) cmp cmp insl inc out cmp mov inc or fs imulb or mov out movl loop in mov aaa out mov add sub mov jae shlb cmc mov fucomi and adcl insb pusha sbb push add push loopne (bad) push out outsl xor jb cwtl (bad) aad sub in sub push mov cmpsb mov dec push out jecxz cmp in (bad) adc push data16 shr sub iret mov push insl (bad) arpl jmp inc add out and mov pop lahf lret xor jne pop and jmp test and in stos inc lret push imul inc mov out ljmp fiadd sbb adc insl (bad) iret and shll aaa lods inc jb jl or sbb out nop mov inc out (bad) cmp movsl ds dec test adc xor jnp sbb push (bad) xlat sarl cmp lahf icebp out dec sub cmp adc out xchg fild mov dec out pushf test (bad) inc out xorl daa out adc sbb inc push leave dec mov movsb add dec andl cmp cmp add out mov and pushf xchg pop jl test pop ljmp out or push inc in rolb out shlb aad repnz out pop js (bad) lea bound and pop pop sahf in nop inc sub outsb xor aas pop es or out lock adc int3 push iret arpl jg lock fisubl dec out ljmp test xchg or and shlb fucomp js jne push mov mov jbe call sub aam int3 mov xchg jns arpl inc in outsl fidiv addr16 adc xchg ds push cmp test fstpt and sbb mov sbb dec (bad) cwtl inc divl in test cmp aas outsb mov dec fadds into cli lods out icebp inc arpl fldl aas jg (bad) (bad) imul shlb push iret jae adc add mov dec aad cmovbe icebp xor xchg fiadd jge mov adc mov or lods call pop out sub pop sbb incb out in inc lret dec out in mov das imul imul adc stos mov pop adc push cmpsl aas out lods call and push cmp pop xchg out sub (bad) int3 add and and cs adc xchg decb push xor sub iret jb lock adc push cli test out xorl hlt int test adc add ds dec sbb incb push popa and out adc shl out adc test mov out outsl dec nop sub rolb fs shr xor (bad) aaa arpl and ror mov shlb loop mov out call rorb js sbb out xor cld int arpl dec out lret xchg xor imul mov ljmp jg xchg repz out or loope out jne add (bad) cld jns mov jbe out pop mov xchg add adc fimull mov loope xchg xchg pop sub out lea shrl int3 out jp (bad) mov rcr cmpsb pop push stc push xor (bad) shr movsb jno jmp mov cli dec cwtl add cmp das or push lock es cmc ret out mov and out and lock shll clc insb xchg out xor push movsl iret push cltd es ljmp jne mov nop mov inc outsb hlt cli fisubl jmp (bad) out and mov or hlt inc adc daa in push rolb cwtl out fs out jmp push xor sahf scas out or es mov (bad) pop hlt and popf jb insl xor out icebp xchg loop mov movsl push lahf loope sbb cmp lods int out out inc data16 add mov sub pop loopne xlat out sarl cmpsl (bad) nop ret xor adcl sub mov int3 imul pop xor mov jmp xchg out dec add add rcll popl fucomip dec and sti add adc mov jnp add jbe inc jecxz hlt shlb mov js in xchg fsubrl rcrb pop gs popa out ljmp cwtl sahf jns mov mov add lret fild jl push push out or jg iret and out add (bad) mov out or pop jno pop out daa or insb stc out jl dec and pop out dec push lods (bad) loopne hlt enter push int3 test mov rolb aam insl out xchg xor fs enter dec push into punpckldq out dec in ret out jmp stos add out dec lods or cltd outsl popa and mov stos mov xchg push daa and dec insl out lahf test adc mov dec movd (bad) scas loop subl fnstenv cld jb call (bad) push xchg in test add fistp sub jmp (bad) les fstp push sub xor jno mov add ljmp cltd arpl adc notl scas add das les mov pusha loop push pop out xchg push test pop cmp jmp push imul dec mov enter pop adc inc add movsb lds fimull pushf push jg push shrb inc cltd rcll popf out push push jecxz dec lret data16 dec dec pop (bad) pushf pop jno iret es loop (bad) in out jmp mov push xor mov or push shll mov negb stos out cmp inc pop out xlat cmp dec daa shl in jo and repnz in or dec popf ffreep push test mov add iret lcall mov (bad) xor rcrl in add lods aaa inc pop xchg andb pop mov and mov iret cwtl out jmp rol jb in xlat inc (bad) ja test (bad) xor inc imul xabort adc arpl and pop subl push jmp xor sub push push out sti mov jge mov jb stos push mov neg add xchg jo mov jl pop push out enter mov out mov push jns mov fbstp incl loop stos popa fimull lahf or cmpsl lock aad pop add dec push (bad) fnstcw setge cmp lods pop lret jl and and mov (bad) (bad) ss stos ret out pop jns enter out pop mov or mov jl sub inc fstl mov iret add sub je scas test jg fs xchg test push mov jae mul aaa pop xchg push or (bad) mov xlat mov (bad) adc xchg popf jle xlat stos jno add fwait in or mov loop sbb repnz (bad) aam fbstp out xor mov mov jecxz out out push jmp enter stos pop xor jge fs push pop mov sbb fiadd out (bad) fs lea pop sarb out arpl aad push out data16 adc int popa xchg jge mov mov cli lds sarb push adc push add sub call cmp cmp (bad) and in leave das out aas into sub out sbb mov (bad) xor test pop jmp sub xchg mov (bad) dec out xchg jo add sbb icebp push phaddbd lods xor fwait or test lahf cli push lcall sahf out lret fcomps or xchg dec pop mov dec es and iret repz (bad) mov xor and cmc cmc xor fldpi out mov nop sub out ja dec or mov mov insl sbb pop incl dec bound or mov inc out push lods jmp dec pop pop sbbb pusha out gs pop cs push out mov (bad) jb dec sub push sti inc mov int3 mov pop std mov jecxz ss pop aad stc in outsl add xlat lahf sti int3 and out add out push jne mov out js (bad) in call or lcall iret mov out dec push push push out cmp or out and jecxz fist inc bound (bad) sub out in adc cld fistpl loope dec call push bound lock xchg sub int mov aaa mov mov lret adc ficompl mov stos dec inc out jno sahf int3 ljmp xlat xchg enter mov out inc push sub dec lods addr16 out in add sbb mov jae and das jbe push in addr16 mov sbb mov out test sbb test xchg pop popa and cmp es pop in fs ret incb or (bad) aam jmp pushf hlt out sbb push cwtl pop xor add xchg dec pop cmp js ljmp adc mov adc add scas enter daa cmp testb jecxz jmp jp xchg pop or jmp fwait cmpsl in out xchg (bad) loope jmp pushf flds dec out adc je leave jg add push cld cmp gs (bad) pop cmp cwtl adc inc xchg nop loope shrb lahf aad ljmp add adc outsb xchg nop pop and in mov hlt loop mov sbb addr16 les loope mov cmp imul orl push loopne mov out div xchg mov jg fsubp in out dec movsb sub jg xlat pop xor test out cmp xor out loopne hlt mov jg push mov jl loopne sbb inc bound adc sbb xor pop into pop outsl push add xchg in or mov push cmpsb clc std push inc and movsb and fs fist hlt fnstsw jbe xchg sub negl fs insl sbb cmp push addr16 les mov jns xchg inc ds jl jb push ja sbb and shrl sti out lgs jp adcl clc stc cmc sbb and loop mov or out dec or out mov adc jb push xchg pop out mov in mov int3 arpl and out aam test ret loop dec out mov je ja lret rcrl sti mov mov jno cmp jecxz cmp and lcall and adc les inc or cmp scas mov push in mov inc inc rcl aam jns out sub mov insb pop cmp adc icebp in xchg adc mov dec lcall push xor pop pop jns pop pop xchg fsubr js mov sub arpl (bad) mov cmp ljmp ja outsl test test arpl out sbb dec mov rcrb jecxz dec call loope fcoms in inc pop je push push out into fldenv test in hlt lret fnsave (bad) stos mov jns jle (bad) (bad) insb test pop ja out dec movsb sbb shl out jecxz scas arpl cwtl out out mov jbe mov or out push fs enter sub jge daa lods js push cltd test mov mov push sarw insl xor (bad) out mov mov icebp add or cmp ds and inc xor pop cmp ja data16 cmc fstl pop aam xor and (bad) sti pop ljmp out pop addl pop pop add dec loopne outsb inc xor sub lods mov sub out stos je into jmp or mov out fdivs scas mov mov sbb rcrl inc imul pop rcr push or and mul rdmsr or push add out mov daa mov jp and jnp popf or in aaa (bad) sti sbb in cld pop mov push icebp ljmp dec xchg cmp out push cmpsb sahf and inc cld movsl ret iret cmp sbb mov xchg ror or out lods sti imul xchg pop jne cmpsl and ret movsl adc sbb and gs out cmp xchg jg bound push and push pop xor lret inc cmpsl imull fmull bndstx xor push loop into jg ds cmp jno xor adc sti adc sub xor ljmp movsl negb out cli out cmp inc push adc das aas lods inc popf std popa push out shr pop lret in jle add xlat lahf movsb sbb xor mov out sbb test sbb mov xchg imul out in sub jl outsb add rcl imul nop rorb mov je fisubl lock out fcoml out outsb adc cmp lea ret push xchg jo,pn out sahf adc or ds fwait (bad) movsb mov add out in or pop sbb dec (bad) movsb into stos addr16 xchg outsb scas adcb sbb out push jns lret imul xor jg inc cmp mov or out enter jmp push out mov dec xchg xchg out jnp pushf or pop addl sub adc (bad) (bad) (bad) aam mov dec mov pop push jge (bad) fucomip dec mov repnz clc out addr16 mov dec dec sarl out add cld dec xchg xchg mov out adc (bad) xchg xor jg and shr roll bsf sbb pop mov push in cmp pop sub add jne out or mov pop push mov sub push out out xor inc cli std out icebp mov pop xchg sarb mov xchg aad jmp xlat xchg daa outsb cli lock adc loopne sahf mov add out mov mov sbb xchg popa inc lock push out pop jae dec (bad) clc xchg mov aam sub mov insl cmpsl stc xor in inc out and movsl pop jne cmpsb sub lods std in in arpl call jne dec (bad) adc jge xchg in sub shll jnp mov pop cmp out inc jno arpl not insl scas out outsb pop or out ds clc xchg mov aad mov lods or dec (bad) push jne test inc add xchg push jle int3 xchg mov in out cltd dec movsl mov xor adc and xor mov jecxz or mov inc push into jp xor and mov (bad) nop scas pop jns sub mov add push sub push mov sub insb out sub jno inc (bad) and adc xchg pop in inc loope pop lods mov nop in mov sbb mov out bnd test and add sbb xchg push jmp out xchg cmp adc mov xchg jecxz in and sub out dec mov xchg push jnp pop pop pop xchg pand outsb repz sub shr sbb call mov sub jb out jnp mov mov scas ljmp (bad) cmc pop pop pushf sub push loop cmpsb (bad) or add and pop fidivr cs out adc or rcrb lret pushf mov insl sub in xchg mov pop out mov aad (bad) out in or pusha sub icebp out inc xchg mov dec sub lock lret clc call andb xchg adc lock sub pop adc or fndisi(8087 xor dec push shlb loope mov sub loop mov xchg adc push pop insl rcll es ds (bad) aas gs test stos sbb loop push in inc out adcl pop das (bad) mov push mov inc scas out in xchg jge sub adc adc jno stc or xor mov ss loop sub in pop mov ror sbb xchg pop (bad) out scas jbe out imul pusha sbb ret or and xor inc shlb (bad) arpl jmp out icebp mov mov hlt out inc xchg adc out cli popa sub pop std leave sbb xchg call dec lret sub mov xchg inc inc repz les push mov stos push test aam das call popa sub sbb push push jae cwtl out scas dec and pop in incl test pop pop adc pop add lcall adc mov out cmpsb sahf jmp inc out loope out sti mov adc pop fsubrl jmp inc cmp adc fisttp pop stos and test pop xchg jbe cmp scas xor add cmpsb leave adc or lods cmp or gs push inc mov inc fisubr out xchg jno out nop mov aaa xchg add push out adc jnp,pn mov and lds jne addr16 js pop and xchg xchg out inc xorb pop xlat sarb cmp pop dec js dec fdivs imul out add mov mov jne fwait xor out daa mov mov jae idivb int3 andl lret push xor ret cmpsb sub push out mov dec or jb fisttpl lahf adcl aam push jge insl dec and rcrl sub inc imulb push in sub aas ljmp imul adc push push pop mov test or imul push add and fucom inc jns or insl dec or in fidivl shlb push xchg test dec mov out movsb sahf fimull sbb pop out aas jle insb mov jge fwait (bad) fucomi scas mov sbb out aam insl dec push (bad) xor mov lods daa adc pop dec jne sbb dec jbe sbbl cli or fcomps out and repnz bound cmc (bad) xor out into pop test mov mov adc fmull inc add sbb add out pop int3 test mov arpl sbb and addr16 ljmp push push mov inc sbb or dec out lret (bad) (bad) loopne fwait out popf fistl dec pop int out dec outsl sbb (bad) shll out jnp (bad) mov lahf mov ds lock and comiss inc cmpsb in mov xchg sub mov sub lcall scas pop loopne stc out jmp ret leave sub mov ljmp dec mov test jle pop in adc out cwtl mov das pusha sbb adc sub ljmp xchg insl jp sarb unpcklps mov dec mov jb adcl ss leave push push cmp outsb (bad) das fnop and into mov out repz jns dec icebp js out inc imul cmpsl inc sub pop insb adc or xchg xchg out mov dec iret mov scas lods cmp (bad) and lock add inc (bad) mov xor push mov test xchg inc sub pop or fbld cmp jmp ja repnz mov (bad) lods aad sub pop popf sbb or in outsb ret or mov lahf out cmc push adc in mov push loop and jo push push jnp pop and xchg es loopne cmp aaa ss (bad) rcll cmp lods in iret or test lock out movsl in add das inc out (bad) lret aad sub inc push xor test pop out xor jbe cmp mov cmp pop mov jl out arpl adc js xchg pop add pushf (bad) in loope shr lds sub xchg popf into pop clc adc ret cs outsl inc stos out pop xor dec mov es fdivs out loope das rcrb (bad) jne jp out add xchg sti mov sbb sub jge pop repnz push mov stos sbb add mov pop jb out sbb push out (bad) lret loopne sub xchg imul adc dec (bad) sbb int3 adc push leave imul mov and xor inc (bad) sahf cmp pop push and in lds adc mov inc or out mov in rorl and es sbb sub out js and popf out push xor dec sbb jl out scas sub es out fs js cmp in sub outsb push xchg aas xor lcall fsubr ret lret mov push sub push push sbb jge out (bad) dec add adc pop movsb jp jg add mov out cmc dec inc push cmp mov dec incb pop push aam pop xlat lock cmp pop lret or and xchg xor adc mov cmp out or jbe xchg xor bound ja dec das mov mov out adc jne (bad) out xor lretw mov cmpsl pop test in xchg mov in out stos imul cmp out mov add orl cmp loop mov push pop add gs mov cmp dec fwait ljmp jo int3 and loopne push inc repz adc adc shr jecxz add pop pop fnsave xchg pop in into cwtl xor outsb (bad) int3 (bad) je mov das out clc sub ljmp add xor cmc mov orl jbe mov insl (bad) xor xor jl lcall (bad) xor inc outsb gs loop mov mov out pushf dec and sbb imul or dec notb roll popf in imul pop mov ds xchg sbb jge and insw out ds mov out xchg cltd push xlat jmp cmpsl and push sbb xchg aad mov loopne push mov cmp mov mov inc pop (bad) jecxz xchg (bad) lock out mov jg and push (bad) inc dec out sbb test add xor xor mov xchg add cmp or divb out sbb dec mov stc cmc jmp (bad) (bad) cmp mov lods add (bad) ljmp cmp out insb jecxz dec lock jno sub out or pop or out mov sbb add push fnsave sub lahf push stc xor out jmp mov fildll out aad pusha xchg testb dec std out mov add mov mov mov mov xchg out repnz into add fimull out fldcw ja mov ret adc mov mov pop push xorb cmp or les stc jg jb cld aas pop mov xchg out mov jns xchg icebp mov (bad) in sub xor out jb cs iret adc addl addr16 jecxz out mov push jp out add and sbb in lods mov fistp cli push in jp es out in in mov mov push xor out xor test pop out loopne dec sarl imul imul mov out stos js cmpsl aas inc lahf jbe rolb push movsl iret mov loope loop orl repz pop test jle sub cmp sti outsl jae scas adc pop (bad) xchg inc sub adc pushf imul sub ret mov mov out adc xor jnp out popf xchg inc ffree jl addr16 and (bad) mov and lods shrb push movsl arpl and pop fsub cmp pop fwait adc out dec adc adc (bad) mov out push in rorl add sbb inc shlb inc out cwtl bound (bad) xchg ljmp pop jg jno and popf test sub ss hlt inc push inc or cmpsb fbstp mov dec in ret xchg and movsl out std mov out ret lret das mov out mov and xor mov insb mov rcr out out (bad) lret jo sbb xchg call dec in inc ror and stos cmp out inc stos lock scas and mov sub outsb xchg into sub mov mov fcomp (bad) imulb pop out sti scas lock and or repz (bad) iret ss das sub push ret mov mov or addl stos cmc mov (bad) jae sbb dec push int3 inc mov mov imul out testl jg mov out push xor lock in out out add fwait loopne out cwtl mov movsb out pop test push xchg rclb dec cmp out sbb push repnz sub jl jmp pop jno push and (bad) mov dec into popa pop mov addr16 xor jg in aaa decb insb ljmp push pop out mov (bad) test out ljmp stos out push push xor push out movsl pusha clc cmp fimull dec fbstp sti ljmp xchg xchg xor mov ljmp maxps jecxz jne jmp out lcall sub dec icebp lahf (bad) inc adc push mov fsubp es mov js adc mov out ret scas bound dec shlb (bad) cmp loope push (bad) pop jl aam arpl mov leave pop mov (bad) (bad) (bad) or mull ret inc xchg out mov mov je push sub shr cli dec xchg sub pop add outsb add push imul xchg test and mov push js (bad) (bad) mov out xor adc sbb shlb push in outsl mov pushf (bad) jle fadd sbb or bound out loop xor cmc pop insl xor out jbe and js pop xchg pusha mov je xor loop cld ficom mov into jmp sub pop jge aaa gs push jns scas xchg loop add out push xor icebp lret out inc cmc insl adc outsb je stos dec clc sbb loop adc rcl push push rorb inc out cwtl jecxz rsqrtps sub jle aas dec shrb or sbb repz xor fsubs mov out out data16 int jecxz adc scas jno lock push sbb push jne arpl andl xor xchg out push shrl lahf or aad sbb out adcl insb data16 sbb lds push in addr16 sub out xor (bad) lret jbe push in (bad) out add vpavgb fwait out pushf orps iret fs daa xchg mov subl outsl jecxz xor out sbb fs test add push in cli dec dec loop (bad) inc out mov fsubrl (bad) fisub ja jecxz pop sub rorl call pop mulb cli lea xchg xor sub and mov shr test out jbe out outsb imul cwtl add pop add into out bswap out xor (bad) daa mov insl jg xor inc cmp ljmp aam mov adc out addr16 aas mov outsb sub movsb jecxz repnz (bad) out out out (bad) pop in cmp adc rorb loopne mov imul add ljmp div lds pop (bad) jbe scas into xlat xchg and cmp cmp inc dec js out fmulp mov add fwait int3 jg xchg pusha inc (bad) push cmp pop insb pop mov inc incb ja mov cmpsb loopne fstl xor fucomp jp out stc fucomip call aad aas enter imul test stos loop fsubr fsubr xor sbb sub and rorl jp stos adc lods cmp out cli (bad) aaa push out xchg pop and sbb (bad) (bad) out lret pop mov mov cltd mov fidiv mov jae orl stc sahf pushf push inc mov in out ljmp jmp lods rclb hlt outsb dec test decb sub mov insb ja loopne jns lods pop jbe icebp ret stc mov jge js add add shrb aaa int3 adc (bad) pop out cmp pop mov out mov push jle pop add mov cmpsl out mov ret iret insl xchg lds mov out pusha adc ljmp out and addr16 sub mov pop das add out push pop jg xchg in sbb push les push out dec cmp xor xlat out repz or mov pop mov jmp out sbbl mov out and mov lock inc aad hlt out jae pop cli imul add sub pop lea push out sub out out add xor incl cld ror xchg inc push loop cmp nop insl mov (bad) ror xchg jo out lods cmp xchg mov dec popf and ljmp int cmp out in rorb ret (bad) out sarl adc out cmp jp dec shll clc lahf inc or and out pop iret (bad) inc push imul add mov pop xchg out sub mov cs repz nop fxch bnd adc scas lds shrb fist jns pop xchg out aaa xchg gs je pop cli jbe out mov adc pop mov (bad) adc jecxz lahf leave sub inc cmp mov push rcrb pop cwtl lret push idiv xor cmp dec cmp add inc xor in sti xchg loope ja mov out das ds add out push gs push cwtl jno mov pop xchg pop mov or fbstp js,pt mov mov or cmc cld push mov xchg push xchg cmp idivl mov push rcr push ljmp out arpl fstenv add or leave out dec sub or lcall lret and jmp mov ficom jg,pt out xchg jbe xor add mov mov xchg add cli pop cmc xor lahf out (bad) or out lock mov loop push cmp addr16 xor dec mov (bad) je jns mov in loop lods mov clc test popf call out (bad) ja jmp ljmp pop shr (bad) iret incb test lea xchg sahf cmpsb rol stc jle arpl inc jg in (bad) xchg sub scas or and out es dec sub or movsb mov imul adc stc in cmp divb inc push pop push out and loope mov pop inc push mov adc es fwait insb add out daa fstpt cwtl outsb sbb sub and dec out or std pop pushf in arpl rolb cmp add cmp je xchg imul jecxz (bad) xchg xchg push je push out jp add iret nop and xor out fwait adc pusha and movsb xchg pushf add pusha je lods pop lock out cmc xchg incb ja stos xchg adc push icebp loope stc xrstor out (bad) int3 jb ja repz jp sbb dec addr16 fld xor insl testb out push dec push icebp jne push out pop and add jb bswap push repz sub xchg add mov push lret and (bad) fbstp add or mov mull in and ret in in push xchg or xlat in lcall test (bad) lods lahf out xchg mov pop loope and pop nop imul (bad) (bad) dec int3 out sbb insl lret inc out mov jo mov ljmp sbb outsl imul out mov xchg (bad) enter adc faddp mov out dec inc lcall xlat jl jge sub (bad) sbb loop jg movsb mov push sub pop jp hlt out out (bad) sarb adc dec addr16 (bad) out mov dec out push xchg pop scas jno je out or aad and enter inc icebp gs lds sarb frstor loopne mulb sub sti xchg pusha out aam jo sbb pop (bad) das push xlat popf and in cwtl xor mov loope and dec out or (bad) in out test push jb test cmp push push (bad) out push (bad) fldcw loope out add sbb aad fisubr sahf enter (bad) adc in sub faddl lahf adc xchg adc out arpl jne cld mov add shrl mov lea sub dec in out add out (bad) mov pop fnop lock popa sahf shrb mov jb add adc out ss adc mov xchg out xor out inc sub sti mov imul cmp ljmp jl jne xorb out movsl adc mov ss add into iret inc xlat lea in lea sbb imul and mov ret clc leave xor iret xlat (bad) out scas ljmp rorb in iret in aad je lock fs pop jo and cmp fwait in mov lods je push test out test leave icebp inc lock aaa out jnp ret mov inc mov repnz out jb into inc bound sub mov sbb aad add xor ljmp stos shlb (bad) xor loopne outsb imul out lret (bad) jno data16 (bad) and mov sub out movl xchg scas sub aad dec out cmp repnz push ficoml and out clc jbe and add cli out push push cmp incl (bad) out sub stos add xchg mov sahf jge pop pcmpeqd xchg push loopne inc loopne inc cs sbb sub jp add std push stos mov xor bound add and xor adcb popf and mov push jecxz jg push add out dec push push movsl or cmpsb (bad) lds stos and (bad) mov adc sbb arpl mov cmpsl das ds out jmp mov or loop mov decb mov sub jmp sbbb and loope mov (bad) out fldl out aam mov ss cld fucomi and and push cwtl data16 mov pop lods cli int pop add push jne aad or pop fisttpl imul xchg rolb inc in divb dec mov int lock cmp mov sbb rcrb xor iret pop stc test mov dec jo iret xor idivb ds dec iret or out add inc es js pop jge int mov xorl dec ret scas stos adc mov sbb mov nop arpl sub dec std iret dec push fisubrl pop test rcll push or in or dec push add cmpsb sub bound jmp sbb add jo jmp pop cli add shrl movaps ljmp out repnz pusha scas adc out dec test inc push aas add xadd inc dec mov out jl and (bad) push ss in jbe out ret daa push and out (bad) mov test iret xor add mov pop insb add (bad) daa ljmp test out ret mov stos ss arpl jne jnp jle loop push mov mov and out lret sbb scas aas push or ss adcl jle fwait shr dec icebp out aaa out or push mov out repz cmp sbb sub nop add mov sub aaa xchg sbb xor xor loop add mov insl jmp or push out movsl aad insl cmpsb into xchg out imulb sub dec outsl out arpl (bad) rclb mov je sbb dec mov sahf dec fwait ret out cmp push sub xor pop dec in lret dec or mov ss decl xor xchg jmp iret mov mov shll lret xchg out popf mov inc pop mov or jge mov sub ss out push in cmp xor test jmp out loopne std mov out cmp sti bound insb pusha push cmp pop mov cli inc pop arpl out adc fmulp sub fldl out adc mov ljmp out ret xlat jecxz mov push idivl out mov xchg add out (bad) and in xchg les dec cmc test arpl push jmp xchg out stos push or out xor pop ds ljmp out jp imul cli in daa out (bad) cmp insb aas arpl mov cmp and imul lock stos imul roll cwtl cmpsl test iret xor pop gs movb fwait sbb loop roll mov stc mov adc pop jo aam (bad) out lods xor and out jecxz sbb cmp out push inc mov or nop out das mov cmp shrl faddl lods out out sahf push (bad) xor cmc and aas in cmp out dec mov das mov js (bad) ljmp mov nop jae dec into xchg sub dec jl and xor out sarl loopne cltd pop (bad) xor or pop jno lcall insl xchg jle out inc sahf pop and mov in jns mov adc out cmp out out sbb inc ret rol pushf pop push jb into out nop dec bound aam out pop lcall out outsb xchg mov jbe pop push inc lds in insb jnp setnp xchg int3 cli loop insl sbb (bad) mov xlat add adc dec sbb out pop fdivrs call out or out pop gs js xor aas rcr mov push mov dec loope lcall lods iret mul fucomi ja or pop scas in ljmp out add cwtl (bad) mov push push dec push subl ss aas ljmp loopne dec and mov ficom pop lock cmpsl mov fwait cli and ret cs xchg mov out push or xor mov pop cmp jge fcompl push fwait dec push out and or aas jecxz pop sub mov aaa inc cmp xor jl insl out pop xlat addr16 inc mov sbb add fiadd add dec jns ret inc lods cmp fwait or stos movsl in adc xor fnsave cmp fdivr jmp fdivr xor lock cmpsl add sbb leave inc dec push insl rep icebp pop cmpsl idiv out pusha (bad) insl or scas fwait cs call jbe pop popa mov ss repnz ret mov or and lods pop out adc push dec leave xor push cmc add mov jae in pop adc mov jb mov loope into pop in subb and movb aad mov fldt jbe xchg jp into out mov push fdiv out push mov sbb push imul xchg (bad) push pop cmp mov nop jnp xchg shlb data16 adc dec mull aaa push mov pop push sub out loop pushf xchg sti inc mov xlat cs daa jmp stos jmp pop sahf or xor test xchg mov or or ret add push loopne xchg sbb call (bad) aaa out ret and dec mov sbb gs or out adc loope inc xor ds pop cmc dec dec (bad) call fbld rclb out pop cli push (bad) and mov sub and jno cmp add mov pop out inc pop cmp jo push jo mov out enter mov in sti push inc inc pop loopne out ss int3 add dec pop mov rorl cli out insb pop cmpsl add pop adc jecxz ja jb test inc sub (bad) fbld mov push bound lahf out inc mov leave add jae out mov inc and sub sbb mov cltd adc xchg movsb ficompl in jo out popf mov (bad) aaa xchg stc addl xchg out cmp dec or sbb mov aaa and out rcl (bad) dec xor pop or add xor out mov ja outsb lret sbb fs jmp xchg xchg xlat push or lret sbb lcall cmp cmp dec (bad) xchg dec mov jmp fadd push adc out imul jnp,pt mov push outsb add inc sarl gs mov pushf out lods rorb mov inc mov jo stos inc lret push negb jbe pop push sub dec dec cmpsb lock test out nop/reserved in add seto loop xchg sub mov inc push loopne jno out cs and jg inc test adc insb out mov aam cmp outsb fsubr inc into mov movsb add aaa in fldcw clc out and aad mov hlt imul sub arpl ss out (bad) lods jb mov push push xor pop loopne das inc out loope test mov outsb sbb jmp shr ss fs out sub punpcklwd ljmp out outsb mov out pop jge ret adc cmp scas lret (bad) daa popa adc out mov fsubs (bad) loopne adc out jo hlt adc out dec fsubs pop pop jecxz out dec jge xchg mov xchg gs push rcrb xchg out leave dec push nop daa pusha and lods hlt mov push sub and xor push lds hlt and out push mov pop insb xchg mov mov mov enter cmp cmp mov ljmp xchg mov mov test (bad) out jle (bad) into aam dec jmp mov sub aas lods lret iret stos ljmp adc cmp sbb jp out pop mov sbb mov sahf out (bad) js push jb pushf int3 out lds pop das xor popa loop out fildll (bad) out jb (bad) pop stos popa sub mov data16 icebp or xchg add mov shr fcomip pop cmp ja (bad) sbb lcall adc mov sbb jnp xchg in mov iret (bad) push cld jae mov out insb cwtl or pop in and sar inc fldenv (bad) cmc pop loope or in out sub dec mov xchg sub popf and and rcl xchg mov jg cmp dec dec mov mov xchg ficomp jle lahf aam or insb rolb mov pop fwait in mov pop aas mov pop (bad) mov insb out es rcr mov and int lahf das jmp ljmp mov pop adc cmpsb sbb xor out push clc out mov xchg out adc divl sub adc clc jnp fwait lock xor repz (bad) push cmp insb push fsubr in or std loope out mov adc push jae icebp (bad) popa sub out dec decb jb ljmp dec pop xchg cmp out subb add inc xchg out int xor iret pop out jp push jmp pop out aas add outsb out movsl insb inc in sub jno outsl scas scas mov cmc aas pop push clc (bad) rcl loop push adc cs push mov mov (bad) scas sub xchg pop out xor and out jmp sub loopne outsl (bad) popa (bad) adc repz insb iret out pop pop inc fldl xchg (bad) sbb enter loope fwait lahf pop push test out push popa (bad) jmp sbbb xchg pop fldl jmp sub inc mov add xor add push shrb ljmp out js (bad) push cmpsl cmc lea xlat data16 lods push xchg mov pop add adc jp imul inc out arpl sub iret sub bound jb adc and jmp mov and cmp scas or pop out fild add push sti pushf mov cmp out or jecxz stos xor daa loopne cmc ljmp lds mov out inc sbb test lahf or sti sub push add lahf cmp push out add cmp aad (bad) cltd cmp inc jmp lds sbb sbb movsl ja insl add inc cmp in cmc sub xchg mov sub cli (bad) out jle push dec rcll loopne rcl ljmp jmp xchg inc out adc int3 and pusha (bad) jno xchg lret inc inc pushf lods sub push pop out and leave and repz scas push std mov push fdivl out (bad) sub sub in inc jl xorl push out mov roll pop out adc mov es out in jge mov mov xor repz out sahf addr16 lods and les mov scas cs out push xchg inc push and mov (bad) fdivrl push scas jmp scas imul jmp cmp dec inc push pop cwtl mov ljmp sub adcl (bad) out mov mov cmp addr16 call dec pop adcb add in movsb cmpl and xor sbb adc push cwtl adc xchg test enter in dec pop out push push pop scas push call outsl cs daa mov imul dec repnz push cltd sbb cs (bad) ret out into mov xor sub dec cmp fimul sbb out adc in lret push loope fwait mov in mov test inc mov fwait sub fldl push sahf mov sub inc out push cmp xchg in scas out aaa rcrb or jmp movsb jne fbld mov in mov sbb push xchg and daa cli sbb jp push adc jnp xchg stc out inc xor data16 inc out imul enter pushw mov es jno inc xchg push out aad ss mov push enter jmp sub fs and movsb adc fs out loopne arpl les pop lret jmp adc lea out shll ss and xchg add cmp out movsb insl out or jp xchg add clc out cltd and jecxz pop add out je dec cmpsb sub add mov mov or fs dec gs out add sbb mov dec ljmp out dec cmp fistl out cmp cwtl mov cli push fucomp jle ss dec loop imul sbb mov and scas pop sub bound hlt aaa js out xchg in pop lods (bad) pop out inc inc fisubrl pop pop lcall por out cmp pop outsb xor push out repnz loop sarl (bad) push dec xchg imul sub sbbb outsb mov jns push out das incl add sbb (bad) xor fsubr fs mov loope push or repnz in out cmp sub movsl movlhps add stos adc adc mov pop sub cmc jmp sbb out jb inc push daa ss mov inc mov mov mov cmp mov xchg mov mov pop push jne out into push fimul sarb xchg mov ror pop mov into fucomip push clc insl cwtl push popa adc mov adc enter and lcall out push cmp popf mov pop sbb push or fs jae out add jmp and xor add stos out jo and xchg fisttp inc pop shl ret out push jle or pop xor das je je mov xor pusha mov out cvtpi2ps inc xchg out cmp push or or xlat stos ja imul sti xchg stc pop ret mov orb inc xor imul pop cmp dec out sbb cs pop mov xlat push rcrl movsb xor ja dec jo inc out dec mov and (bad) and jp cltd aad scas je inc jne movl arpl jecxz cmp (bad) mov push sub pop out dec or call cwtl shrb push out sbb and xchg sub cmp out pop orl inc pushf out jae movsb daa mov xchg xchg out fdivs adc lahf adc jne jne inc in jae out (bad) rclb fcompl pop sbb jo rcrb out mov dec adc das cmpl cmp sbb lock out xchg data16 leave fcmovu loop xchg cmp xchg adc push push aam pop pushf inc ficomp loope popf dec cmpl lret out pushf fdivr test inc sub pop jo aaa and in in daa clc sbb mov leave mov sarb add out xor pop sahf pop inc scas xchg mov (bad) aas push add lcall cmp jle (bad) cwtl (bad) out imul (bad) dec mov out (bad) mov (bad) sarb out mov inc sub mov lods jecxz add ja cwtl and insl sar out daa lret scas fs jg popf add xchg cs jb cmpsl adc hlt das popa sarl (bad) xor nop lret dec mov push xchg out sub bound out hlt fstps nop rorb or jae cmp add incb xchg cli rol mov stos mov pop movsl outsl fsubr sub scas (bad) adc mov nop in pushf xchg jne out sub aad pop xor mov xchg in hlt mov (bad) sub lret mov js xor or out pop (bad) loopne mov pop (bad) dec daa push in add xor insb sub imul loop fs xor pusha loope mov dec sub out ss sub fs scas mov test pusha test jp insl out fild inc push sbb icebp out popa cmp cmp fwait adc push mov pusha dec xchg outsb stos and (bad) iret dec mulb pop sbb push imull leave ss or pop out test and scas daa sub out cmpsl xchg jle sub xchg arpl (bad) fcoml jmp mov es leave push sub sbb pop xchg mov scas (bad) rcl dec xchg fst je xchg out jl cmp pop pop (bad) nop in loope and mov mov jne cs call mov out jle test cmp cmpsl out push push scas insl iret rol pop sarb ljmp out mov xchg inc gs mov lods sarb xor adcl orl in sub jg dec xor push xchg mov dec test jge fwait in push repnz xor out das adcl mov add out mov dec imulb popf cmp mov clc (bad) and cmp ds imul out pusha je cmpsb push xchg xor loopne xchg hlt out daa jecxz lahf ljmp gs push out adc iret xchg out in loop pushl sbb out cmp xor fdivrl xchg pop add fscale and xor inc stos mov xor xor ss clc xchg inc jb mov stc adc and out call dec inc or cwtl sbbl data16 cltd popf lods push ret mov jb shll out mov jae into adc lods mov and xor (bad) imul mov sbb aad fstpl scas push pop into cmp cmpsb movsb jecxz xor shl (bad) outsb (bad) test inc xchg aaa sbb les mov xchg aam adc and push insl sarb out (bad) lock sti hlt mov mov out jo shlb push fcompl out data16 xchg cmpsb push xor loope cmpsl scas adc push pop xchg cmp addl scas iret jne dec imul out push movsl sub xchg xchg pusha xor jns es ss xchg adc repz test dec jb lock and sbb mov repnz jecxz mov mov shrl lds xchg ds repz out and mov fdivl mov push cmpsl mov sahf out pop loop repz addr16 mov rcrl out (bad) mov rol out mov arpl out sbb push cmc adc gs and out jno inc das push movsl adc out or pop arpl mov in inc pop lret in mov pop xor (bad) cld adc (bad) out sbb jge aam cmp jne add shrl outsl pop jbe adc mov data16 loopne out (bad) mov jle test shl mov mov shl mov int3 sahf aam jl adc push push outsl out cmp lcall stos frstor sub movsb xchg jle imul pop fidiv mov sub mov lods aaa sahf mov decl jmp incb out test les xchg mov lcall mov dec add aas mov int3 scas xchg mov call pusha dec (bad) jmp sti out and repz jp out ror mov or out in gs das xor jecxz lret dec mov inc jnp or lds mov pop push test cmp mov out out pop scas jle jno out mov movsl enter mov idivl adc inc loopne scas mov xchg int3 jo sbb (bad) mov ss lret lods test jb movsb fcoml sbb les sub cli push lods scas imul mov loope iret fisub adc jno (bad) cmp pusha dec ljmp add sahf loopne rcl loope out and repnz in (bad) sbb and sbb fnop adc das out aas in pop arpl (bad) (bad) lcall mov lods push (bad) jmp pop daa pop and ja pop jb jg sahf inc pop ljmp mov incb sbb ljmp out mov pop jecxz sbb fucomp or and sbb addr16 popa pop inc lock cs nop xchg pop cwtl jp call (bad) jno jl add lea dec mov sbb ret andb or jecxz lahf xor es sub fiaddl inc push push out mov js pop iret je out add pop xchg outsl jp test and out or std dec clc sub out jmp mov mov mov pop add je fsubr loope jp mov and jbe or and out int cli jecxz jl iret out add xchg jne jge arpl lret mov mov popf sahf mov dec scas sub ljmp cmc out pop mov cltd imul stos movsb cld fwait out fidivr out pop sti popa mov (bad) xchg in push fbstp dec in ljmp fsubr fwait out sub ret adc and lods (bad) repz cld icebp out lds pop dec outsb cmp xchg loopne or jmp cld xlat sti imul jg in or inc iret insb mov sub in push std fistp adc mov push in jb pop out fcmovu insb fwait ja movsl jne mov push inc or lahf out sub test dec push out loopne or mov pop mov insl jo lret out dec neg cmc dec push push cmp and mov out jg dec or data16 mov out in jnp cmp fwait out inc dec or push rcrb nop push dec sbb jnp push insb xor xor inc pop mov stos pop jns movsl push sub imul inc adc fisubl dec arpl jb mov out sub hlt shrl jae mov in inc out pop pushf stos jns movsb or out inc dec lcall mov sbb dec jp out mov dec push mov popf lret add out xor aaa arpl bound push fbstp fcmovb test push sub andl cmp lods in xor out adc enter loopne dec mov aaa xor xor mul mov or jae adc push mov mov xchg push sbbl das or hlt repnz (bad) shr or aas and jb mov sub orl ja pop std add (bad) in adc daa or mov mov repnz hlt xchg jbe call lahf iret bswap sbb sahf cs out inc gs out adc mov std ljmp push xchg adc mov out nop xchg and pop lea clts cmp rolb jge fldcw pop fwait out insb ss push jle xchg sbb scas pop data16 push popf or call cmpsb bound fldl out mov imul ja mov outsb xor push add test test lock shr lcall sti xchg sbb out mov popa out int3 hlt stos adc mov outsl inc xchg out and sub cmc (bad) inc jnp cs lcall mov adc ss out data16 jb outsl stos mov xor jne imul out cmp sbb lods mov out outsb bound fmulp outsl pop stc out push les pop out cmpl out dec add addr16 loop,pn (bad) mov add lock shr pop pop out xchg add dec cmp xchg mov enter test adc cli push pop mov aas scas jae adc and dec fs aas push pop push in pusha mov cmpb sbb mov insb cmp inc lea sub aaa inc cmp inc pop cmp out jo xor push pop mov sbb out (bad) cmp clc mov lcall xchg xchg fild jns loop push inc cmp out dec stos dec bound mov shrl clc or pop out dec push push insl jg push js jnp xchg mov xor dec pop xor jbe sub ljmp mov or repnz stos push and push ret roll pop stc sbb and pop iret cmovne shr sub inc loope out adc dec adc ret or cmc jae loop jecxz loope movsb out pop (bad) cmpsb mov fmull add int mov sub jo (bad) mov aad popf test pushf dec pop out jnp clc and dec cmp sbbb es sub add xor (bad) mov and mov push jmp (bad) mov sbb test call pop jo inc mov xchg lods inc mov lret (bad) shrb jecxz xchg jb cmp pop inc test sbb gs or aam rorb repnz (bad) mov out lahf into fwait outsl sbb or xchg ljmp jmp repz or pop loope jo push fsubrp mov pop pop sbb sahf int jle or movsb inc lahf xor sahf xchg clc out push mov xchg or fwait rcrb shll fucomp inc sbb sbb (bad) lret inc imul xchg inc sub adc ret mov (bad) fstps mov sub imul jno ljmp and clc in mov adc inc aam pop call outsb push (bad) movsl imull sub aaa inc out xchg imul or cmc push mov in es cmp cltd out xchg ljmp (bad) jp mov outsb push pop out dec je ja cs movsl aad addr16 pop sub daa jge xchg dec adc out pushf xor mov (bad) dec out aad fsubrl mov out mov and sahf cmp push ja and add jae in rclb pushl ds dec lock pop xor add cwtl mov cli loope repz push popa sub loopne jne xchg out outsl cmp adc mov cli inc loope jbe repz adc (bad) sbb inc ds out push jb cld (bad) jecxz cmp ljmp cmp daa out or mov out pop mov jbe out imul mov (bad) sbb mov rcrl je fsubrp inc out stos mov test iret xchg mov inc sbb and les orl out leave pop lcall in dec jle stc lcall loope mov call dec out repnz push dec xchg sti pusha pop fs out stc jp lret out cmp or movsl sbb cmpsb push pop je imulb mov and push movsb cltd (bad) inc or and arpl push lret out pop mov and push sbb out dec push test out ja stos xchg pop into lods loop mov add (bad) and push cmpl bound xor aam out dec push int or stc push lods out nop loopne pushf test cmp mov mov or cltd cs loop in push incb sub test je movsl icebp xchg out adc js cmp data16 movsb repnz stos ja (bad) jnp,pn push or daa jmp rclb repnz arpl push jmp out fsubrs xchg push in out push sub (bad) push xchg (bad) (bad) push pop dec mov (bad) push xchg fldcw out cmpsb ret cmp push add xchg ja out lods push xchg into imul test push pop std jns cld adc (bad) fucomip lea shl ret pusha mov sub xchg aaa (bad) out or sti movsb in mov mov rolb sbb (bad) sbb movsl (bad) cmpl ret xlat or dec inc out and out jae (bad) lea cli push mov adc or cmp popa sub hlt pop leave jmp loope out xchg scas xchg mov lock mov cli sbb (bad) hlt jge jbe cmp out idivb je cmp and repz jle and pop xor fdivp pop xchg jecxz out xchg adc dec mov icebp mov in lds outsl iret loope jmp icebp popa out sub xor lods in (bad) hlt outsb lret lahf dec (bad) out xor inc ss mov lret fwait aaa xor ja negb ljmp rcrb mov mov loop push jmp sbb ret dec repz pop pop sub sub out xor sbb jae (bad) dec (bad) int3 les add out cmc adc cmpsl sbb mov aam out ret out in mov iret lds xchg out fisubr dec out jl lods (bad) or mov aad lret adc clc je pop mov subl lahf fildll ds or mov cmp and stc out es sbb xchg hlt out sub xor loope dec (bad) sbb adc mov sub repz push test adc bound outsb fsts cmp add jb imul mov scas movsb das out and repnz ss and pop and sub in pop dec loope mov out or xchg out adc inc (bad) fcomi add mov data16 in add out pop lods bound outsb movsb xchg out add pop push jnp cmp add shr mov insl hlt pop mov out jle outsl sti push mov sub jo xchg out fwait into sbb stc sub inc sbb cmp adc aad imul xchg outsb icebp mov inc scas fs dec push adc iret or jno fistpl sbb xchg out movb cmp sub movsb out fs or gs fistp aas or add rcrl out icebp sarl out cs das mov test out fstl out and add fild jmp push nop adc fst mov xor pop sub imul dec popf imul (bad) push mov mov fmul iret sbb hlt mov out out push (bad) fucomi adc fs pop jnp lret jae mov inc sarl adc sbb jle nop aas push lds inc out sbb xchg pop mov xchg mov in out lahf fdivr stos mov movsb or sbb sub or jnp mov add adc dec sub out std test dec lcall out adc pop imul cs out mov sub mov popf das push pusha or aas or jecxz insl sti sub fdivrs push mov adc (bad) lret out dec add push out mov cs out and pop stc sub mov xor mov mov mov jecxz pop xchg pop sub dec cmc in and sbb inc arpl and ss push push scas mov rclb xchg lcall adc repnz in mov mov or xor out inc xchg imull out lds into int push out sahf mov pop mov pop rorb sub jne inc push lods push out loope mov out fistpl or dec fnsave mov icebp pop push out mov xchg (bad) repz nop push out cmp or out or mov fild xor push fst loop sub mov ret and mov jns push mov outsl out (bad) pop pushf jecxz mov aam aad push add dec jge out in add aas int xchg out or out (bad) out shlb inc aas popf insl adc call cs and pop xchg push loopne add pop cmpl daa loope mov push pop sbb sbb lahf shl mov insl cmp inc sbb enter out je add scas das push out sahf pop mov nop or loop jbe out sub add push sti xchg into lcall inc adc pop scas fsubr jae jg,pn lods out add dec push xchg jbe adc jecxz popf out adc aas fimull in fmulp cltd ret sahf adc seto push ret in push pop and pop in lds test out push push sub int adc test xchg cmpsl fdivrs sarb dec jns out jg rclb mov mov push loop xor mov divl lock xchg fadd call ja movsb fwait pushf inc repnz cmp rcrl (bad) imulb jle xor aas xlat pop pop ret je ja push imul or mov incl push out sbb pop sub int jl pop pop loope ds xchg les mov jo pusha ficoml cli pop jecxz lcall pop cmpsb inc insl in (bad) pop enter mov cltd jg jne pop fist mov das test sbb sbb jge out push ljmp adc sbb insl stc jns test gs push cmc or popa adc pusha into out lret jl test add fs jge int3 push imul xchg faddl sbb cmp pop jp xor cmp pop out outsl or aas decb call into sub jno or out xor loop push lahf mov imul in mov xor mov cmp (bad) xor std lock or in mov mov imul arpl bound fwait jb jne cmpsb xchg lods int movsb ljmp adc imulb pop push imul pusha jmp ficoml adc pop rep cmp adc out inc xchg jg aaa imul nop mov out cmp test clc sub bound jb out inc loopne ds lods lret or mov fs sbbb push pop mov out mov xor in inc popl sbb loopne ljmp pop adc jb cmp repnz stc inc out (bad) (bad) int xchg aaa lods pop (bad) jne icebp adc add outsb sub jnp mov lret sub push push testl dec mov jl jg mov inc std mov stc or dec xor in inc pop test out rcr ss out movsl or test mov add scas pop cmp out lods ljmp out cwtd daa (bad) sbb dec cmp sbb mov scas (bad) lock les out jle jns mov jno lret bound pop pop int push clc mov pop repnz and es sbb mov lds out xor xor (bad) cmp xchg or js pop pushf scas xchg and push data16 jg mov push push and gs (bad) mov (bad) shrl xchg xor in mov xchg scas es adc fcompl push lret dec or mov loopne cmpsb mov inc xor loope out aam cltd or hlt (bad) into push (bad) je inc and sub out mov loope and (bad) out in jne out lret ss sarb scas and mov xchg sub sbb mov in out or jmp in fsubrl or aaa pop sbb xor cli mov into insl mov mov pop jl or inc and imul push push out jo les mov mov ljmp ljmp out add jnp xchg push dec in dec lods mov aas leave ret out outsl mov xchg or mov add jne out scas dec out bound and mov insl inc movsl (bad) xchg ror cli test add fucomip fprem push mov pop imul outsb sbbb mov loopne push dec inc xor ljmp inc leave mov popf in out out dec jo divl icebp jecxz gs fwait in arpl (bad) loope mov dec call leave xlat into iret shl (bad) xor lcall dec dec pushf pop outsb push fwait pop xchg js fmul out mov (bad) fs addr16 fsts jmp mov iret push mov xchg lock sahf cmpsb into aas pop mov (bad) test out es push sbb enter out fdivl (bad) mov xchg test sbb xchg jmp in jge loopne out mov adc outsl cmpsl cmp push inc outsb (bad) pop js adc fsub mov out mov scas or dec cli xor mov sub or out lahf decb aaa mov scas clc jbe and call out sbb mov loop loop cmp mov insl inc out ficoml leave adc xchg movsb mov xchg mov lret pusha in ret xchg pop out inc aam dec pop sub std sbb sahf mov (bad) xor test shlb rolb inc add sub movsb push adc stos mov sub js sahf xchg nop push pop push outsb cmp pop sub loop adc xor xor daa out ror mov sbb es lret (bad) (bad) cltd and aam lods xor inc popa test mov mov mov out sub sbb sub jo mov repnz out in subb or sub out push rcrl pop pop adc shlb mov sub sbb loopne (bad) movsl sub jmp inc pushw or std int3 jnp adc inc jns jg scas sbb sti add jb es sub (bad) xlat jae xchg mov inc jg int pop adc sub or adcb out mov aad in and pushl repnz mov sub rclb push les imul adc xor xlat jecxz ljmp lock fnsetpm(287 sub sub adc (bad) mov jge lods mov out jge dec inc lret mov adc into pop and pop (bad) call out das mov and aas adc testb je pop xchg cltd lods jns shr inc pop fsts cmpsb cmc push xchg push jp pop loope test inc (bad) push dec jg out daa loopne pop repnz push cmp cmpsb mov push inc sub jnp test aad pop lds cmp jno mov xchg sti dec daa mov bound loop lret les mov test loopne jbe repnz (bad) cwtl mov fisttp inc push ljmp mov add pop push pop (bad) loope pop and movsb rcll mov out out and mov out test sahf add cwtl sti out ds test mov shrb push or adc pop add out sbb inc test fsubrs imul adc adc ja cmp negb stos es (bad) xor je xchg push and sti (bad) pop aas jb pop jnp pop idivb jl cwtl sbb repz xchg mov jno (bad) andl push in stc jmp stos push push xchg fwait jge in ret out pop jbe test das dec enter (bad) call aas in xchg into push jb int3 xlat dec add fucomi bound repnz lea xor xchg jmpw out (bad) and (bad) std out jg xlat imulb cmp pop ss stc out mov pop hlt mov dec adc adc pop push adc fsubr pop cltd fisttpll out cwtl mov or dec mov fstpt pushf in out bound and shrb (bad) xchg ljmp out mov inc (bad) xor xchg out jge jbe out incb fdivrs rcll imul daa inc or out mov dec mov shrb out stos aam scas out cmp sub stos nop paddw lock mov dec push lret notl int3 iret or pop rclb jmp xor fildll lods pop mov pop out (bad) pop add xor sbb mov mov add jp shr or cmp lcall cmp in sbb (bad) out ret adc shrb ss out cmpsb movsb adc outsb xor popa (bad) push dec jg mov or and icebp dec xchg cmp jmp enter out fsubs pop insl mov outsb in fs lret orl xor test out es xor sbb xchg lea das push cmp fsubrp sti addr16 push ret xchg out xor and xchg mov and push sbb stos out lret sbb or inc push repz out arpl add cltd mov push jno sub out movsl and cmp das movsb mov lds xchg imul and in ret mov jp repz aaa imul push roll mov mov xor or lods and pop cmp and cld fdiv push jmp jbe mov mov adc or nop out jecxz push xchg ficoml cmpsb xor fwait cld fidiv (bad) je loopne or fsts xor dec dec xchg xchg out push xlat adc adc sub pop mov mov (bad) (bad) xor popf cld in addr16 push ljmp (bad) mov (bad) out pop mov jo les pop mov enter in pop adcb jmp aas fs sbb sbb cmp nop sbbl adc add rol out mov lea bound lods in out incb mov mov xchg and xchg loop into push sub xor icebp fisubr sub add dec sub movsl data16 (bad) dec (bad) fcoml xor pop mov pusha or and out shr sub jo jnp add loope push aaa or push jae pushf dec out jg stos sub sbb and xchg mov scas xchg out sbb mov test xchg out mov (bad) fisub insl outsb pop lahf sub repnz sbb hlt cmp pusha mov fdivl (bad) ss fidiv das cmp ljmp fnstsw jbe (bad) mov xlat jmp rcrb cld gs and in jbe enter out add xchg test test mov scas movsb xor out aad imul xchg (bad) lods fs mov out or dec orb cli push push sbb pop (bad) ret jg icebp out add sbb cltd movb iret pop mov jae ljmp pop add imul int3 and dec repnz sbb push in xlat add out imul je out int into (bad) add mov (bad) and in xor in iret scas mov fs (bad) jbe loopne pop mov add pop mov in sbb mov ret out mov jne mov out repnz pop insl arpl mov enter out push push jb mov or cmp cmpsb int push pop loop out outsl ret xchg mov out pop call mov out mov jle (bad) (bad) loope sub cmp inc push out xor mov decb jo jecxz aad and push xor sbb outsb sub lods insl add out out add movsl sahf add idivl inc fucomi lcall push scas sbb mov jbe fsub insb (bad) push shrb mov cmp loope shr pop sub mov pusha or popf push pushf aad sbb test neg mov and out repz dec pop pop out push pushf scas cmc adc lcall xchg inc mov (bad) (bad) xchg lahf rcrb fsubrp cmp shrb jmp out mov dec pop or in pusha stos out sub sub xchg sbb jle rcrb push xor fwait push iret jmp popf xchg (bad) mulb insl dec jl xchg mov cmp hlt mov mov iret inc and out lcall jb data16 jge cmp cmp inc mov out andl data16 mov loope in cltd test and and loopne push push out and (bad) ljmp mov and adc lea out stos sub les (bad) cmp addr16 ljmp pop sarl iret (bad) in and mov hlt inc out xchg smsw cmp dec inc push sti mov hlt add scas out jb or andb out stc test pop sub int inc sahf in push jle adc (bad) fstpt (bad) cmp ljmp or add imul out sub rorb cwtl testl (bad) push and popa sub addr16 and add scas outsb testl loope fcomps push arpl call dec adc fs xor inc sub and sub xlat out addr16 lds fucomp adc dec pop cld pop out push mov cmpsl les xchg daa pusha sub das dec mov jno pop pop or cmp push push jb pop loopne jg out in repnz out inc inc push decb rcrb sub gs insb adc xor (bad) ret and movsb and jo cmp fs dec dec addl and decb cmc push sub xchg and mov xor cld pop outsb jg or push jbe shlb push fcoml (bad) adc sbb mov and sub in mov movsb push xchg jg test lds jmp cmp xorl movsb sbb and in or inc fidivrl xor pop out push mov sub lods (bad) out sbb pop xor push and iret push bound inc xchg in and jo cmpsl out xchg sbb cmp das push out cmp scas into out xor lahf mov sub cmpsb jle add aam in lahf dec pushf out mov or jmp mov (bad) cs sub scas daa mulb icebp add das add pop sbb insb mov pop cs mov push ss xchg arpl mov insb sbb mov and inc out bt (bad) cmp xor sbb dec lock fildll hlt callw pop fcoml aad inc stc xor sbb lock push loopne into xchg pop or adc push addr16 sbb incb lea cs nop insl and out add sbb out bound test rclb (bad) hlt sub out out mov movsl clc mov push test pop out xor dec xchg jb xchg out inc outsl sub nop lods sub lea jno sbb out jbe test mov cmc cmp inc xchg pop add daa divl out push xlat out sti jle scas imul xchg test xor (bad) pop xchg sbb loop (bad) call jb jns,pt lock add cmpsb mov out jbe xchg inc and add inc dec movsb and or and jmp loope push imul out addr16 outsl iret lea jb daa jmp pop mov lret add add inc cwtl push cmc mov iret out dec fwait stos jecxz push sub (bad) xchg xor test insb cmc fldz movsb xchg pop jg dec sbb out mov dec push jno in or jbe add int addb xchg push out inc in insb and mov loope mov cmp sbb push xor xlat push cmpsb out dec outsl stos insl test mov pop push xchg test cmp pmaxsw sbb sti adcl int xor add dec inc out (bad) test pop fdivr xchg sub jecxz imul out mov mov or add sub std mov (bad) mov movsl mov divb sub push push out in and lret dec jl mov (bad) mov mov (bad) xlat iret push pop into pop and pop inc (bad) cmpsl lret fidivl loop,pn cmp out sub mov and mov adc fwait cmp test (bad) out jo mov mov inc inc out adc push stos and lahf fs jge loop mov cmp out cmpsb xor push pop stc mov into scas in addr16 cmp mov jnp jb adc vmwrite cmp cmc (bad) mov mov pop push ds xchg cmpsl addl sbb dec push lret shrb aaa push ja out mov out lods cmpsb mov inc xchg (bad) repnz mov stos pop aas push loope call cmp or leave xor std shl push dec fisubr movb fdivrp out add push and sub cmp test jecxz adc xor in add mov adc xchg bound in mov rolb or (bad) mov insl pop out xor stos xchg (bad) cmc and add ja popl aas std out in and jnp clc push push lret dec in or das in out fcomp add mov jne out mov pop bound addr16 mov push lret adc sub out xchg push add jns rcrb jmp pop mov inc inc (bad) jmp sub push test testl jnp out repz cmpb fistl (bad) xchg dec arpl fnstenv or out xchg pop add out xchg dec add movsl leave je fistpll jmp in xor ss shlb (bad) lock sbb icebp ret pop xlat xchg pop sbb xchg sub inc outsb fcom out fnstcw aas sahf test xor mov aad pusha push xchg inc lods ficompl dec mov cmp pop shll sbbl movsl mov iret out mov mov int mov mov pop loop out out jle rcl bound xchg (bad) cmpsl lock push sarb mov into out sub jp sti cmc push sub out lret pavgb (bad) pop sbb cli pop gs out es jbe pop imul in (bad) jle loopne dec pushf push mov mov dec adc (bad) in out add mov xchg out or clc jp mov jnp lret pop movsb mov xchg inc xor stc pusha aaa (bad) repnz cs in loop out mov movsl dec sub je,pn adc lahf mov das mov pop rol and cs cmpsl pushl out std or scas xchg push pop int3 dec mov gs aaa test out das cmp fwait scas out sbb jge xchg arpl pop out pop push das iret scas out dec push jl imul push and push clc js mov stc ret out pop cmp push sbb mov test int jecxz jl mov xchg add push pop push sub add stos mov jp mov pop imul cmp or push mov push outsb je mov out fcoms fildll imul rol (bad) push pmaxsw xchg xchg xlat and out jge jno mov cmp push cld xor fcomps sub cmpsb imul pop mov mov (bad) ljmp movsb sbb (bad) (bad) imul outsb movsb out lods adc daa iret iret cmp fistl dec lcall lret push outsb cmp rcrb jp inc ds xchg jle out fldenv leave outsl shll dec out cs cmp fldln2 push (bad) loopne pushf mov cltd in mov sbb jne stos out fucomip mov mov jge in scas jnp out sub inc flds dec push fistl out repz addr16 int out in inc pop mov out lock repnz jl outsl out outsb or adc cmp (bad) push pushf decb (bad) jle je cs ret ss mov ss push dec and dec out add push test dec stos adc fisubrl out inc jmp scas popf sbb arpl or inc sub lods xor inc xchg js sub ljmp cwtl pusha popa lahf scas add xchg out jae push icebp push addl (bad) (bad) dec out imul test dec push out cmp jnp push (bad) and fwait or lds testb sahf pop lea sub rclb mov pop insl sub pop add inc out mov dec shrb pop inc add jl xchg shr outsb frstor (bad) pop sbb imul lods inc out sub pop xchg sub clc mov call push pop mov testl nop lret pushf mov sbb ret out xchg or xor cmc in je mov sbbb les mov dec insl pop out ret cmp imul and gs fidivrl in shr stc lea adc cmc mov pop lret rolb cmpsb mov xchg js push lods lret daa inc stos in pop inc push subl daa xchg push ljmp adc out pop test xchg out adc inc call jbe loop jp add push enter shr add popf dec je or lahf mov adc jge pinsrw inc mov int jo loop jne cmpsl test or lahf cwtl movsb mov xchg push sub mov jecxz push cwtl inc adc pop adc mov out add adc xchg dec das lea and mov cs pop jmp mov outsl int lret jp out cltd insl ret fs jecxz je rolb cmpsb es or inc cld mov mov mov xor sbb jno add lahf out adc xor je (bad) pop dec sbb fdivr jmp inc (bad) aaa movsb ret (bad) push es cmp movb adc out sbb pop imul es pop sbb inc daa xchg imul inc mov sbb loopne jbe popf lods sub out repnz out sar int outsb insl (bad) out lret sub pop mov ljmp sarb pop clc arpl loope push dec popf orl (bad) push inc popa (bad) scas fadd inc sti and jg mov or test mov insl fist mov sbb or scas je dec stc popf fidivrl out movsb xchg jmp sarl clc das repnz inc out cmc addr16 out in jl mov (bad) int3 inc jb (bad) (bad) imul nop and mov mov mov addr16 fldt sbb push pop cmp pop xchg in fs or ret xor lods cmpsb movsb out push repnz jno jae out sub hlt xchg push jl jb sbb (bad) ljmp lds mov out xchg mov cmp int and cmpsb (bad) out mov xchg out fcomp mov or inc push mov dec lahf inc xor inc es lahf pusha iret ss mov push lcall out or xchg out iret lock and inc repz shrb mov jmp imul adc mov dec std xchg add inc lahf icebp xorl jno or mov or lret loop xchg jb xor pop or adc loopne xchg sahf push mov mov inc lods mov (bad) jne insb add dec jmp cmp shlb mov inc inc mov fstps call not mov rcrb push cmovge repnz fs pop and in popa out sbb mov adc out fisubl repz jne pop push xor mov hlt xor out mov push dec mov fisttpl ret mov stc and (bad) mov xchg imul out rcr lret push or out mov aas push inc ret rclb fist in cwtl lock pop cmp xor mov mov rcll mov xchg loope mov or out das ljmp out iret faddl mov ficom adc fildll adc paddq push jg dec push in inc inc mov stos lahf jne (bad) mov mov sub lock pushf lahf xor int push out in push pop jp jnp (bad) (bad) mov (bad) out adc pop sub test pop lahf adc or popa aad jnp out in lods mov inc adc mov mulb popa cltd sbb das pop test aad fmull out sahf (bad) repz insb cmp sub call js out cli jbe dec insl mov and cltd add rcrb ret out shlb or out mov push xchg sbb inc adc fs ljmp leave sbb imul pop sub push fdiv je outsl cmp insl jecxz rcll (bad) aaa mov mov out xchg sub cld icebp sbb out mov sub jb xchg pop (bad) cmc push out xchg repnz jp mov call sub lret pop xchg sbb into lock daa in mov cmpsl notb mov orl push inc sub fcomp xor insb aam out cmp shrb mov and out inc sub lods sbb aaa out jg and dec mov insb out jmp ret xor ds pop pop sti ficompl xlat add add cltd in test jge xor fcoml (bad) mov lods mov cltd dec mov sbb (bad) mov aad jnp jae fnop loope int3 scas popf mov out adc and pop or nop mov mov iret lahf stc fldl outsb ja mov bnd mulb xchg and jnp adc xchg inc add xchg shlb out adc adc mov lea es pop or ret leave mov jo push out lods xchg fldl out cmp movsb ja mov scas adc mov call pop cmp dec icebp lea xor push pop dec out cmp call mov cwtl jmp lods pusha (bad) pop cmp mov jae xor cs or xlat cmpl jle rcrl jecxz insl dec out mov xchg sub sbb out xchg sub jl cmp aaa sar imulb xlat in add lret out dec fstpt sub mov (bad) gs aas test aaa lret lret ds repnz xchg std adc bound adc xchg sbb jl sub out aas add push scas xchg sbb mov push out pop jno sbb jmp sbb pop insl rol loope decb push je scas push xchg icebp dec xchg xor mul lock insl repnz cmpsb out jmp icebp cmc xor push shr and or iret xchg add scas xlat sti call pop out mov test (bad) out test es scas cmpsb xchg out iret and (bad) mov or pop imul mov or sub push mov or sub pushf jb (bad) out in pop lret pop cmovns mov jne mov out xchg ret jnp clc push pop lds inc mov out and (bad) cld adc lret or lds sbb loopne dec das (bad) fistpl inc pushf sbb adc loopne das xor xchg mov out pop test sub jb mov jno test sti popf jg nopl dec out pop fsubrs xchg adc out mov lock out es ja out cli data16 into inc push out outsb ret jns add movl mov push out cltd mov in inc cmp cmpsb xor inc addr16 popa sbb subb push jnp sbb fstpt insl push out inc mov gs out dec ret add pop out lea xchg shr pushf dec or les repnz cwtl out jo cmp add jecxz push mov lds pushf jae out inc sbb sub and out pop sub mov or xor sti out pop push dec stos inc scas cmp xchg or enter sahf sbb jmp imul pop sub dec xchg push sub inc mov add jmp out imul out push scas cmp add daa xor jge push and pop popf xchg sbb in lods in dec enter out ljmp push out movsl inc ficompl stc enter mov push cmp (bad) cmc loop lahf adc out (bad) pop or push mov iret xor in and dec pop push or push popf call jbe sub inc mov repnz int aad icebp jl push inc add je sub out incb push sbb dec pop xchg cmpsb sbb (bad) out in cmp mov mov push (bad) xchg add pusha out sahf fs repz lret movsl das cmp and outsb aad in cmpsl cltd popa movsl out xchg xor ss repz gs loop aas inc pop aam xchg imul ljmp xor mov loopne loop insb and out fs fldl mov cmp addr16 and mov iret into pop ljmp out sbbl (bad) xchg adc loopne cmc adc paddusb add in in aas and out ja mov pop dec push nop out or out mov cltd imul icebp mov pop jbe out mov and fs inc cmp adc xchg and clc mov dec push out into mov mov out pusha push hlt rcr scas sarl fcmovnbe mov mov mov push mov pop fwait out in pop or mov mov pop sbb cmp out xor mov rol test insb (bad) popa mov xor mov jp (bad) dec out call lcall pop (bad) fsub pop mov pop stos mov and stc adc cmp inc data16 je inc ret in out dec repnz xor mulb shrb dec xor aad sub xchg mov repnz cli out mov jb jmp out popa negl btl add ja mov (bad) aaa cmp jp mov repnz iret mov push out inc xor aad out (bad) out rcr stos mov ja outsb fisttpl mov adc out test cltd lret out add loop cmc mov jno jmp out sub out (bad) aaa inc jle out insb pop dec mov push ljmpw xor stos cmpsb imul call sbb sub mov xchg xchg out mov jb jno jl out das rcl icebp or push cmp ds lahf popf sbb test insl popa sti mulb arpl fcomip js ljmp insl mov popa cmp fsubr push xchg push inc pop movsb xor leave add lahf or pop shll cmc dec out push leave sti out mov pop fs xchg std in out cmp sub (bad) icebp pop add out jmp mov ljmp out mov xchg cmp outsb out dec incb mov or or es aas repz ds test push out sbb cmpsb out divl inc out mov addr16 push xchg out xchg test pop and cld out sbb gs fsubr decb sbb cwtl movsb mov (bad) out mov pop pop fucomip fwait jle push and pop (bad) out movsl sbb cmpsl cmovp loope mov pop outsl push jge cld jb push pop hlt lcall add adc mov cmc mov mov push insw (bad) and lcall imul imull and les and jnp inc mov sub cmpsl test scas (bad) xor or cmp inc out pop lock pop fidivrl pop and (bad) test inc (bad) fs pop inc movsb mov fdivr das cmpsb jecxz cltd pop pop xchg bound out loope addr16 cli xchg cmpsb out outsl jnp and lock out xor ja (bad) or pop out jae (bad) ret adc xchg call mov mov fwait les or out iret test lods outsl push icebp cmp push push push pop xor and ljmp cmpl out fistp and jo jo lods loope jb fadd inc out xor icebp pop out sub in and push push out cmp xchg icebp push jg fstpl imul lret push add pop iret out punpckldq enter ljmp inc xlat ficomp xchg loope fnsave outsb dec out push lods jg les push out sub in sbb out mov fistp insl aaa xlat sahf adc out je pop add adc dec add popa out gs and jp aas in cmp out in imul bswap lods xor lahf cmc orl lahf push inc pop icebp pop push js outsb ret out stos and pmaxsw lret ds daa pop dec out mov icebp add out xor sbb mov inc mov rorb pop mov or jns jle out rorb jne push and push pop test inc fwait jo stc xor cwtl repz out cmp push pop gs out in fimull xchg test imul push (bad) (bad) mov cli push stc and out mov sbb mov sbb call pop repz xor inc push nop xchg lahf mov mov in push mov dec aaa inc out push xchg push imul lods cli or xor aaa pop mov add jno sub cltd push jb gs mov out mov mov jp xchg outsl out cltd dec fldenv lahf jl ja add pop xchg rcr xor lret push add popf pop ret out loope xor sub or out nop jp mov xor jbe push pop ret mov push shll outsl mov mov mov call pop dec in out mov (bad) rorl jbe out in add pop ljmp out andb sbb aas enter scas jno (bad) mov xchg pop xor sub mov lcall in outsb jnp aam and push jno std sub out xchg lods ja rorl xchg sub and dec scas mov pop sbb adc (bad) mov xchg mov or jns mov sub xchg mov outsl lods mov call sub ficom jg rcll pop vaddpd sub sub sahf outsl vmread inc push mov pop lods mov sub cli cmp mov or sub mov dec mov outsb out jmp pop jecxz int3 shrb out jg pusha sub fistp dec repnz mov out push fcmovnb mov sub xchg das sbb out lahf bswap out test push dec out adc fsubs out mov push dec lods out lea push cmpsl xchg movsb jg mov cmpsb xchg pop out test decb (bad) idivl int3 jns add std (bad) ret ds adc dec in mov or cmc ficoml mov or adc jl pop push xor push mov in mov loope fildll lret out insb in xchg add les out adc xor cmp data16 dec cli dec in imul jmp pop xchg mov mov ljmp out mov lea gs iret mov sbb out cltd je sub mov xchg dec sbb out mov jne pop out loope xchg mov adc repz fisubl inc xchg jmp in out in cwtl test test jnp cmc divl out nop je dec sbb or int out outsb and adc push out jg imul rcrl inc cmpsb icebp in xor out mov or lock mov and out jbe out mov repz mov jmp sub sub scas xlat jl popa sub pop into outsb out mov cmp xchg insl push cmpsb out and ret popl out rorl adc in out sub insb mov out cmpsl out cmp add mov jle lret mov out fs mov pop dec pop out inc (bad) jne sbb push jg in dec push cmovp add mov cmp pop fldcw fnsave insb aas out mov xchg sbb dec pop outsb out js mov pop in out cmp mov sub call add mov xor (bad) fildll mov (bad) lret aas push sub out mov and (bad) divb sbb adc inc (bad) cld repnz jp push jmp das rclb out mov dec in xlat cmpxchg addr16 jp mov pop push mov fdiv add int3 lret out cmp ret pop mov scas enter cld pop or pop sub sbb push cmpsb out mov inc jnp out xchg mov cmpsl in dec mov mov rcr into jmp out dec xchg sub jno pop repnz sub push (bad) insl adc out sub xchg lea roll repz (bad) lock adc dec cli out fyl2x enter push sub jno ret arpl cmpsb out and fwait add test push (bad) imul or adc sahf out lcall mov xor jecxz pop push inc cmp sarl cwtl sbb lret pop add rolb jmp mov andl pusha jnp mov (bad) sbb mov mov adc iret mov pop out jmp sub and stc insl outsl decb cmp jnp adc mov lds das pop pop ret (bad) in fs xchg mov pop cmp in sbb sbb and pushf or je sbb leave pop pop dec push out inc mov lds add out sti pop fisubrl out pushf mov xchg fdivrl xor out mov mov cld mov out mov into push and or aam cmp pop adc loop inc jmp cwtl sub std mov test push movsb sbb mov lret mov fistpll xchg fbld out or bound pop sub lcall out int3 addr16 cmp cmp lret xor fstpl in fnstcw pop (bad) mov bound sub lods mov call or jnp xor add in lock les rcll lahf cli dec out shr push fcmove mov xor xor out and xor (bad) jns int3 (bad) aam popf inc add cmp fidivl out xchg les fs ret jbe jge inc dec fildll repnz jo dec out jle into out (bad) dec (bad) pop out pop lea and lahf fwait xchg rcll out sbb cmpsb cmpsl sub and xchg push mov unpckhps in mov data16 ret ret mov inc mov roll mov iret adc icebp xlat push in gs scas sbb (bad) pusha je adc out call pop mov xchg adc outsb ret and or sbb lcall ja (bad) push clc dec insl inc xchg add outsb mov (bad) pop mov cmpsb jmp add (bad) sti in mov shll hlt pcmpgtw pop popf and (bad) jmp cmp cs cwtl sbb xchg faddp in out out rep popl push loope or mov lods mov sub pop cltd (bad) mov insb out arpl into fbstp inc sub mov in ret cmpsl stos cmpsb mov in lahf stos (bad) push mov out xchg add cmp and out xlat mov sub out mov mov fwait push jge gs test add xlat jno cmpsl mov in inc repnz pop xchg fs aad adc sbb out leave or aad je in inc and bound jns push pop in data16 out ljmp push push add cmp cli js xor negb imul mov call pop out xor mov sahf jle jne jp out inc mov bound push movsb push lock stc mov imul cmp out pusha (bad) enter and sbb aad gs ljmp mov out int3 mov in movsl fsubrl out lea mov pushf hlt in adc out and popa jbe or mov dec out xchg mov and out sbb sbb jecxz,pt add cmpsl aad fdivrl pop or add push fisttpll mov push sbb lods xchg push push (bad) push nop push push jg jmp pop fs repz jmp xor adc push mov test aas mov out cmpsl (bad) (bad) (bad) sub jno push jb mov bound out mov mov adc and sbb (bad) mov out push ret dec insl (bad) xor das pop adc xlat xor in inc insb lret mov sbb xor loop outsb inc daa dec out xchg add sbb jno test iret mov jbe shrl out fistp fcoms cmpsl test jb mov pop addr16 xchg enter mov clc stos fsubrs jecxz dec adc (bad) ficomp aaa loopne in out and cmpsl xor jl out add mov sub cmp mov mov adc push mov add inc dec push ret cmc call dec sahf jg js vshufps or mov dec pop dec push rcll out fiadd push add cwtl adc out add (bad) pop ror dec pop loop inc das and aam daa in jmp in shr mov int (bad) mov jge in xchg mov jno mov jb pusha loopne ficompl lret xchg out adc jne mov jnp in mov loope or mov push sub out mov pop lret lods int out jno sbb push pop adc dec aas mov xchg test fucomip int cmp lds (bad) adc rolb hlt or pop aam mov in sbb insl sub add cmp add mov roll (bad) out cmp xlat cmc xchg cmpsb mov push out lods cmp ljmp addr16 das dec int3 insb out jecxz mov in fist out pop mov push or xchg in jno fild out bound cli jle repz jns jnp lods xor in and out jp cmp out ja mov out outsl call aam loope loop xor sub sbb inc adc xor (bad) mov push in mov out sbb sbb (bad) pop stos cmc pop mov inc insb fwait cwtl or test and (bad) rclb aaa out pop outsl out and out das jo add lahf lret rcll mov call fcomp cltd inc and jl pop sub xchg loopne movsl insb int jp (bad) outsl lcall (bad) out cwtl fmul out push cmp inc or mov fs loope insl xchg cmp sbb mov jne sbb jg aam and fsubr mov dec mov (bad) jne sbb je lret movb out les cmp sbb sub xor addl sarl scas pop into and xchg push stos pop jp fisubl out xchg sbb out adc loope fildll pushf sahf add sbb loopne dec mov (bad) lock pop out decb pop sub adc je sub mov out das mov insl out es in pop pop cmp xchg mov push xor jbe out rcll xchg (bad) and mov dec xor out add and pushf inc jle test enter mov fucomip fsts (bad) lock data16 cmp push lods pushf cmp jmp jge ja lods push push or ss iret xor lcall xchg insl sub sub out xor jg addr16 jmp xchg add mov push aas mov xchg add std imul int3 das sarb sbb push iret andb mov out xchg jnp in sarb pop in sbb fsubrp cs dec stc ss xchg jae sbb out lahf lods ret inc test in sub sbb cmp sbb scas (bad) lcall push sti inc jno mov adc loop mov push leave out sub mov rorb loop xor out xchg fcoms pushf inc cmc pop lods pop out dec ret jnp sbb divl mov fild out stos fnstcw dec dec (bad) and fildll cltd sub pop pop pop cwtl push cli in mov (bad) (bad) in mov inc sbb adc fbstp or ss mov lds or mov or hlt out mov mov push push dec fcomps out fsubrl sbb out popf and mov fcomi inc mov in jp xor out add add out enter mov repnz ss and popa lcall out sbb test stos aaa mov mov push std outsl and jg or xchg test int3 in jmp cwtl arpl loopne (bad) cli jecxz and shl rcrb nop iret add out scas shr sbb outsb loop out cmpl dec out not mov lods in sub cmp mov (bad) mov insl call jecxz lods push iret pop faddl adc out js xor push lcall pop xchg cwtl (bad) mov sahf loop push jecxz test inc test jbe je hlt mov or out out lret sub xorb jb arpl adc xor lret jno fldl2t inc xor out hlt (bad) (bad) mov jle int3 jmp fwait jmp lds repz out and pushl push daa inc cmp push cmc sbb popa call and xor add out pop adc js mov outsl out adc sbb jmp mov pop out lcall es lret and cltd jge out mov fistpll (bad) out ljmp mov call push mov xor push into inc out stos and (bad) movsbl cmp test mov or add out and in rorl rorb (bad) stos jp clc in inc out imul out ja pop push xchg fwait jl scas xchg pop sbb add cmp out fucom pop cli gs mov sbb out jb ja pop or jecxz pushf cmpsb loopne or ljmp test rcll add nop mov xchg add vmovdqu out mov or sub cmp jo out aaa jae pop push mov cli sub or push rcr lret adcl push adc out fist cmp in cmp out bound mov push aas cli ret shlb add sbb dec (bad) pop xchg out dec xor lahf shrb xchg out popl mov sbb hlt adc mov xchg pop lcall outsb sub or xor sar sbb test hlt mov (bad) fist dec mov mov outsb in out or add sub out daa adc xchg out xchg data16 jno mov cmpsb out pop lret ja popa mov push jo fwait inc unpckhps aad call stc loop and jnp add mov pop sub (bad) enter add fistpll (bad) pop jns insb xorl dec pop out out ds lret fwait call dec cwtl xchg xchg iret sub ret pop lods push (bad) out xor imul rcr in xchg test je jg push in bound or out insb and loopne pop out (bad) mov movsb mov test sbb pop adc mov pusha imul pop pop sbb aad lcall cwtl stos lahf shrl out daa dec pop inc fnop pushf addr16 out ds call mov lret jnp adc out xchg lods sub cmp mov movsl xchg adc cmp mov and cltd inc fadd mov and (bad) out jge rcr mov packssdw rcrb and sbb cmp jbe jle stc int mov rcrb and adc loop inc lret or fisubr sarb inc insl and dec test jg out es or ja and (bad) or aad mov add cmp jmp call xor xchg scas push (bad) out mov dec movsb sbbl mov call out test cmp pop add inc pop rcll sbb jecxz and mov sbbb pop cltd clc call out add cmp cli push mov adc mov jle,pt xchg sub in sub sub ficom iret and push sbb and repnz mov sub pop out sahf mov jg mov (bad) ljmp (bad) push and scas xor dec pop dec add test inc fs cmp lcall cs and inc adc out push test pop push cmp fsubrs ds into outsb mov sbb push out insl and shl and out fildll dec int ljmp fucomp mov inc dec xchg mov aam push xchg pusha outsb dec rolb daa scas dec mov (bad) lret mov xchg sub mov fs (bad) incb push push stos out push add test negl int pop push out add xor out es cmp mov mov hlt dec push icebp stos inc mov xchg push jb pop jno aas push adc mov and cmp add fcomps inc iret shrb stos mov sub in ficompl lret loopne cmp or into fucomp ljmp jae xor cltd das pop movsb pop pop loopne pop loop mov mov insb adc adc fidivl dec pop add (bad) out adc mov pop test lcall ljmp pop pusha or add out imul in sbb int3 adc stos push out test sarl cmp nop (bad) dec jno add mov inc pop inc inc mov gs cmp cmpsl mov out sub sbb cmp mov adc mov in or out inc and mov cmpsb and stc lea lret mov cmp or sub out fistp inc xchg call mov sti ret aam out inc add test adc (bad) ja or mov jl dec aam in adc inc push lahf leave cmp sub sti jnp in dec (bad) incb and bound cltd and jno xchg fidivrl out xor and dec mov jge ljmp call add inc aam out daa int3 lods xor out lods pop and sub (bad) shr add in (bad) enter adc icebp popl in mov loop xor rol in lods fildll faddp loopne leave xchg dec mov mov sbb pusha movsb pop test mov in sub xchg pop lret test sub jle in xlat in iret ficompl stos dec lock pop pop mov xor (bad) pop out (bad) pusha sbb out dec stos ds sbbb out int inc and mov mov in lods mov mov xchg sarb out sahf push fiadd pop xlat and pop pop cwtl jmp (bad) imul insb dec xchg xchg inc sub and enter out or shll ret inc mov ljmp sub data16 jge pop mov push les jecxz out je incl xchg xchg inc (bad) xor shrb out rclb add ret bound jge cmp imul sub push imul in test or out dec aad hlt adc aaa out pushl lret xchg sub test (bad) lods les or lret in xchg mov aas loop dec aad loope xchg inc (bad) cmp imul mov (bad) (bad) sahf out xlat and push jecxz out or lret adc (bad) std mov mov daa add jno push ds mov pop fcmovb pop pushf outsl loop into cmp das sti cli mov bound sub jmp je mov fiaddl jge xchg inc mov jmp cmp ss loop push mov push sarb mov cli pop dec popl cmc js mov out cmpsl ja sbb std cmp out mov pop fs push test xor scas arpl mov dec sbb dec xchg xchg mov xchg push das out pop jge push jne push inc pop adc rcrb mov call push int3 xchg pushf out xchg mov sub sub out imulb ret iret pop add int3 inc xor push in in aad sub xor into pusha lahf out pop lds je std clc out test bound inc xor mov cmp xchg (bad) popa jl pop test xchg in out outsl mov add lea mov sar pop stos xchg ds mov xor ficoml mov dec pop xchg push inc insl jecxz aas sti jge out test addr16 cmpsl imul pop sbb out cmp out push fildll shr fsubl inc mov dec push cli outsb xchg pop push mov jg jmp clc mov mov xor or and and mov push fisub adc or jb imul out int3 cmp (bad) fistpl rcrl (bad) in dec out insl inc into clc iret pop fiadd call xor or cmp les pop inc loope out dec sub add cli push fwait adc add mov sbb or out test mov pop xchg add cmp cs mov (bad) outsb xchg mov xchg pop out push mov lock jne sub push mov shrl (bad) sub (bad) sbb pop lock add add loopne repz out lock (bad) cwtl mov lds cmp out lret nop iret inc out sahf xchg andl ljmp test in pushf out jbe cmc fisttpl or lret dec cmp pop aaa sub xor data16 ljmp out xor inc dec jno xor xor xchg fs cmp repz (bad) out loopw or or jbe and jg mov nop imull pushl sub out out jb jl cmp mov push ljmp out enter in and pop push sbb sahf out nop sub out xchg out mov out push mov stc push xor iret pop jne inc call mov or cmc mov inc jecxz cltd lods into addr16 jmp dec mov xchg mov xchg imul loope sbb jnp es mull mov jbe out cmpsb mov sbbl out clc jl lods pop mov pop sub jns hlt popa icebp out mov cmc cmp out gs outsb (bad) jmp dec dec mov (bad) out pop pusha ljmp jl ret or sub das adc jb call out jno scas push sub add mov adc or in repz leave mov fidiv rcrb iret out pop shrl stos pop mov push or or ret out stos sub test outsb cli out inc sub cmp add pop out divl pushf in leave enter int push (bad) jae loopne in push scas sub aas xchg inc dec xchg repz imul pop lds lods aaa pop int in jecxz loope inc mov push sar sbb jmp movsl popf arpl addr16 sbb and call ror ljmp test loopne push jge ret pop bound push adc xchg out jnp mov cmp push out sbb ret and pop mov cmp xchg jmp imul (bad) push xchg ret inc stc je lret xor frstor dec push int out add rcl jmp (bad) (bad) out and xchg mov push int3 fistpll push dec mov loop es xchg out stos and pop test int mov faddl cmp scas jns xchg out out and outsl mov pop stc xor mov inc or mov jae addr16 out les and cmp lds mov mov cmpsb in lcall lret sarb inc cmp jb sub xor push daa out or out cs push push in mov sbb out repnz push outsl hlt sbb mov (bad) pop xchg int push shr jmp push out (bad) mov out sub cs mov add add cmp lcall js xchg out mov xchg cltd add dec sbb sbb fildll inc sbb pop aaa xlat out push dec repz scas fdivrs mov pop push inc out out and adc (bad) out sub mov rcrb nop pop cwtl out orl out jb push scas hlt pop xchg push ret out int3 xor mov sub (bad) cmpsl sub mov add stos sub mov jmp (bad) and ljmp shr mov mov mov lahf test pop out shlb arpl arpl out ror loope xchg mov test sub cwtl stos rcll mov je push in dec push cmp negb xchg jmp and lcall out fildll lods enter pusha or pop ja add std jb loop lret repnz dec dec jmp or je inc lcall scas or inc test xor insb lds in mov mov xchg jle mov sub fwait sbb dec sub inc jp xlat stos or cmp inc jns pop push sarl lock out ss jle sbb dec push mov loope jmp pop xor in mov mov adc loop sbb mov and leave jmp inc call fwait push icebp mov popa imul aas adc jns out jae stos ja or scas pop cmpsl xlat sub aaa (bad) xchg daa dec inc lret out ljmp into xchg cli inc mov movsb lds pop sti dec aam out sub inc int3 mov push es sarl mov fnstsw lret dec leave mov lock mov cmp xchg xchg and cltd out cmp mulps mov jns out loop lods stos pop push pop lods aas mov pop mov loop xlat push sub scas cld xchg out iret and test mov inc inc sbb out lods cmp imul cmp out xchg mov std pop les out popf adc js sbb loopne lea pop xchg mov das fwait adc mov sub test sbb fild jnp out mov push cltd cwtl out add jne iret call out cmc add mov push out jnp and shll adc and cmovo stos out in popf xchg in out mov adcb sub jae mov jmp rolb ljmp and cs mov inc fstl sbb jl,pn jecxz cmp sbb add out adc cmpsb pusha cld (bad) sub dec test daa adc add and pop das mov sbb nop in (bad) clc adc loope icebp out push push adc out outsl ret push jge xchg out roll jp out test ss outsl jns cmp ljmp fs ds mov call iret xor cmp in out xchg stc call repnz adc ljmp xchg dec aad lods in mov (bad) mov mov push xchg aad cltd push fadds xchg lock out fsubrl jne xchg das mov jmp pop dec cmp scas lock adc dec test loopne or fcompl or test lea add cmp mov mov mov out add push test fwait cmp pop mov cmp push out pop rorl call cmc iret (bad) xor je sarb lods ljmp out mov inc es jp inc mov nop pusha jle push sub xor (bad) insl roll aaa fwait pop scas mov out cmp (bad) mov out xchg ret push enter lock or mov xor cwtl cli out leave xor dec shlb inc or mov sti push sub mov add out xor enter mov aas subl lock out scas mov out xchg inc pusha movsb jne push pop out mov mov xor push xchg mov jmp call xor repz les mov push mov idivb and (bad) add out sbb push lock iret push imul bound out xor mov out sbb leave (bad) out xchg popf adc or lahf sbb dec ds jle push out cmp inc aad stos jl inc sbb mov mov and loop out xchg popa mov sub fsubr jl out iret fnsave fnstenv out stc mov in push adc cli ficom (bad) imul stc jmp lods shl cmp cmp loopne jnp arpl dec das mov test dec out lcall imul insl lea sysenter jne mov adc mov out jmp sub or clc mov mov cmp out cwtl mov lret add pushf lds push imul fldcw xchg arpl push ljmp leave adc cmp jg das mov stos imul push xorps sub insl ret out cmp iret sub cmpsl out in sub lods adc lret adc add (bad) shll xor add dec (bad) sbb fs je mov mov popa xchg rol sbb mov pop ja out jae push cmpsb and ss mov jb dec sub (bad) mov cld sbb lods loop out or addr16 push fs inc dec add xchg jmp popf mov mov jmp fsubrp cmp xor lret ss mov mov popa sbb fwait paddsb sbb dec mov pop outsl sub sub sub pop jo ljmp fcoml leave lahf clc ret sbb fistp pop mov jecxz cmp jmp out enter imul (bad) mov sub nop mov js and inc fdivrl les pop js xor insl push fninit sbb push inc mov adc pop push mov jnp inc sbb lret sbb iret out xor and push jnp jbe outsb inc sub pusha mov aam iret fdivrs data16 mov ljmp nop std jno lods in out mov push xchg fwait cmpsb push out and jecxz or mov out lahf cs xor (bad) es clc and lea fs sub mull aam cmp push mov or sahf insl sub cld out scas mov in nop stc and out mov icebp inc pop out jle ss push stos pop pop (bad) rclb sahf sub movsb push or lcall pop scas mov aas adc jg fldcw pop push nop adc jo jmp in sbb shrb cmp ja mov ljmp out test mov mov stc jnp pop cmp (bad) clc out aad or jbe pop xchg imul in jg push loopne add out and cltd fs outsl sub inc cs rcrb cmp (bad) iret clc out in sub out cmc cmp jo push dec ret out outsl jmp pop jl pusha adc ret cmpsl rcl pop inc out pushf mov sub popa js xchg shr mov jno xchg adc jo mov xor and fsubr mov inc sub add out mov icebp jp xchg cmpsb sub fstps jbe negb sarl dec cmp (bad) out or push out out pop fcompl mov scas call jmp (bad) and es ljmp (bad) mov inc xchg add sbb je cltd clc pop and push sub aas inc or test xchg and insb mov out sbb rcll jne (bad) mov push fs out jb mov pushf mov push test jb shl lret xchg js add sub shrb sbb cltd test aam movaps shrb mov in and pop sahf je (bad) (bad) jge lods pop mov out jg jae js jle out testb dec out sbb xchg cmc call mov or cs hlt ljmp mov out dec pushf aaa out test xchg inc pop scas xor outsl adc out pusha jb cmpsb mov sbb stc and loope outsl xor xchg insl out mov xor repz in sub stc aas (bad) cwtl arpl ljmp pop mov mov pop (bad) (bad) mov faddp mov rolb add iret xchg insb adc out lock xchg pop stc dec push scas imul (bad) lea shrl mov out mov push les sbb jno in popa (bad) sbbl out or xchg push loopne out mov push out mov lea adc xor and mov outsl ss aaa push (bad) inc xor mov ja mov mov xor inc out inc je cmp ret inc out pop jns lea hlt inc out addr16 push push xchg jo ds out mov int3 aam pop jbe outsl or (bad) ret out and adc out adc jle inc jg stos out mov xchg lahf out out sub mov pop cmc in fild movsb jle push loope mov and pop cld jl mov pop (bad) rolb je out dec addb hlt xchg mov popf inc add sbb cmp out mov lods mov (bad) add cmp popa push mov xor in xor je jo inc mov loop pop sub (bad) pop int3 (bad) mov mov mov loopne xor and jb sbb adc out es jmp fsubr add adc pop aas mov jns dec out or xlat dec mov dec jo mov incb lret (bad) decl sub add inc imul insl push ja cmpsb out dec xchg pop jg xchg xor jo imul cmp mov das popf dec out dec in roll aas jb popl ljmp xor loop push or popf out adc sub add je mov imull pop in sub xor outsb add xchg hlt std jp shl mov xchg sub pop inc jno and addr16 jnp or enter add aas jg sbb loopne test in or or jmp pop nop insb sbb inc stos pop inc popa mov jns out scas xor movsb les lock mov enter hlt in jae out js sub jl jmp push cmp xchg es fwait ret rorb xchg sahf or imul fldenv (bad) xor loop fwait sbb xchg fidivr mov lods fimull out in mov and push inc andl adcl mov cld (bad) fsts enter psrlw sub gs mov xor scas test aam xchg rorl pop pop out pop pop clc faddl daa (bad) cli mov dec jge xlat and mov addr16 rclb add out ficomp daa mov push call xor repz out push cmpl (bad) aaa rclb out jge ja or into out mov les out pop push xchg and js nop addr16 mov push adc push outsb sbb imul adc dec xor add std inc out lcall sub rcrl xorl loop sahf imul call test and and insl sub jg (bad) rorl (bad) cwtl (bad) sub maxps push mov aas out or pop hlt sub out jmp cld sar decb sub in (bad) mov lods cmp int cmp je mov adc mov xchg mov rcl inc je adc enter or pop jl ds inc jno addr16 (bad) or sub jmp fnstenv ja (bad) fstpt pop ds dec adc dec and cmp fwait ljmp pmaxsw pop daa mov mov mov mov dec ficomp cmc jbe out mov xchg jo push insl decb cwtl loop xor mov pop lds mov and mov pusha scas shr dec in push cmpsb jg enter out in pop mov inc and out xor loope xchg mov out or stc outsb cmp shrl push jmp sub inc and push add aas sahf je test int3 out adc rolb lcall xchg loopne repnz out call fdivr dec rcrl mov xchg xor aas mov cmp (bad) jns fs fwait movsl daa sub inc out mov ds in and dec cmp ljmp out pop ss bnd aam jns into mov js cmp push out mov dec mov (bad) sbb arpl dec loope sub or loope popa (bad) mov and lahf jno out call fnop gs xor (bad) movsb or out pushf pop test push cltd nop test adc out rclb movsl sub and pop (bad) jnp xchg lods dec mov out mov mov out stc gs or leave mov dec xchg xchg pop std enter xchg push nop inc out jecxz aaa imul mov adc nop (bad) xchg mov and imul out jle xor aam loop rorl sbb test out call aaa cli or xchg cmp (bad) out adc stc sar out or cld and inc xchg fsubr and (bad) push addr16 ret pop bnd sti out sahf clc inc mov pop and lock in mov mov out xchg outsl fwait sub jp and fildl mov out xor mov lcall out xchg ss xchg xor out lods mov inc enter out in cmp ljmp mov out sbb iret add sub sti mov mov test es ja add sbb out mov cld mov mov int cmp ds mov dec inc cmp call test bound mov xlat cltd push cmp shr cmp adc out mov out jl outsl inc jmp or sub es hlt (bad) call pop inc dec pop and fldl outsl inc dec sub sub outsb out sbb (bad) int3 push push repz (bad) mov fsincos jle sahf daa pop sbb inc cwtl xor mov mov out adc or nop lret outsb out lcall xor sbb out sub aam jge out shlb push and and xchg out sahf icebp ja adc out stos (bad) push sub cmp movsb sub leave push movsb (bad) mov outsl mov cmc shlb mov pushf out sarb fimull pop bound cmpsb push loop ret mov out and and jg dec iret dec out jnp pop fs push test pop jmp repz mov or push fldt sub mov fstpl out (bad) (bad) pop dec out je push ret (bad) jg sti sub sub ds stos insb lods in into jg out mov xor (bad) sahf ret sub and mov setp (bad) xor mov orl cwtl dec add outsb dec out pop cld cs mov cmp jnp and sti ret out ljmp inc jmp dec jbe mov mov dec out or sbb push cmpsb mov negl negb mov out rcrb add out mov and and (bad) push loope push out or mov dec out mov pop jno ror sbb jmp adc movsl call js pop cmovl out (bad) dec jo addr16 sbb stc out mov mov mov cmp insb jne and xchg jb jge out inc out subl sub or pop jmp mov (bad) popa pop out cmc in pop stos adc leave std out and jle pop in adc int adc push mov pop xor pop cmp pop mov add push inc pop push out adc dec inc out hlt add push push sub out outsl jb gs jae scas shr adc sbb cli push daa out and ljmp das mov push pop mov lahf mov mov sbb gs pop ret pop xchg jnp pop lock inc mov jp mov pop iret stos dec adc imul lahf rcll cmpsl xor lock cmp out pop lret xchg jbe xor pop (bad) jns inc pop cli xlat sub scas adc bound push out jmp xchg fs icebp push add fldcw push mov sub popf outsb not lcall scas out and pop lods leave sahf in arpl fist out jl sub cmpb lods lock dec push out je int test imul mov xchg push mov in mov jp test testb ja shl ds or push out xchg scas mov (bad) out mov fbstp aad cmc pop jae inc jge dec stos cld sbb push in mov pop rcll pop pop test ljmp cli mov fiadd out unpcklps pop jmp out and outsl out xor (bad) icebp and lahf stos mov out gs jmp sbb out sbb mov out iret std add test in mov xchg and xchg pop out dec pop add hlt gs mov dec cs cltd dec jae push imul cli add stos pop out push lods call popf out or cmp out hlt clc lea fisttp xchg out xchg cmp xchg decl (bad) out out mov cmp clc incl sub movsb sbb mov jnp xor mov jl sub xor pmaddwd icebp jo out out jmp in push out fstl pusha add hlt push insl ret aas (bad) stc pop adc out cmpsl inc popf pushf or inc mov stos fcomps in fwait sbb sahf test ret repz mov notl aad fsubr cltd call pop xor cwtl jae and jno outsl out push or sub fcmove enter mov fldz pop cli (bad) jns bnd lahf in mov jb int (bad) mov xchg mov les pop jbe pushf cmpsl out jecxz xchg ret out xlat dec jmp rorb out pop repnz cmpsl sbb shl stos cmc and fmul ss pushl out inc jg sahf push test mov add inc in mov ljmp lcall jnp (bad) test jp out lret cmc inc inc xor jecxz out addr16 push mov adc mov les shr int3 in inc mov cmc xchg pop xchg fcmovu fwait addr16 es int mov icebp sub lret xor out out xor push lahf xchg cltd lock and jmp iret sti jns,pn aam call test push sbb jle loope (bad) mov fldenv jecxz and cli stos js cmp sub icebp xor les out aam sbb add out mov fldenv xchg outsl push and fsubrp inc out xor sub (bad) cli dec sbb and out pop cmpsl (bad) xchg scas inc pushf push out sahf ds mov jno (bad) pop cmp sbb lcall lahf adc and pop dec out frstor popa add push xchg xor push and es rcl movsb out (bad) cld lahf jnp out (bad) push mov insl mov int stos lea push jno or xchg cmpsb out insb mov fisub call push nop out and sub jno xchg out jns sbb mov ds jge mov js loopne out fwait dec ljmp jns bound cmp pop push sahf out aad (bad) cmp inc gs dec xchg stc pop xchg ljmp fisubl in mov cmp or in jecxz rcl (bad) (bad) pop mov add ss popf out insb scas mov mov fidiv and adc into int lahf cs out shrl adc add xchg bound test fimul xchg jmp sbb lret add adc out jno sbb (bad) mov cmp dec xchg out xor mov out lock les sub repz sbb mov fisubr (bad) ds and cmp pop insl or push cli cmp push lods pushf out mov stc dec int lret js mov xchg out test push pusha out aaa xchg jbe out xor mov fild int and xchg je fcoml inc cmpsl add jg mov jnp pop jg in or outsb cmp xchg jae mov out xlat iret notb clc out repnz je fs out insl shlb enter or xor ret sar in ljmp rcll mull xor push sbb and test and out sub dec subl (bad) out daa mov js leave xchg xor scas adc xor push loopne mov xchg mov push mov popf jmp jle pop pop imul out mov mov ficom pop fwait mov sahf (bad) mov jae icebp repnz loop pop xchg xor or inc push sub lret mov js into out clc sub dec ret lods out aam rcll (bad) cmp sub sbb jns out popa jecxz sub out (bad) mov in xor sbb flds xchg repz jecxz push das lock das mov out dec xor out jns pop out adc popa add mov int xchg add xchg (bad) jecxz xor pop and mov or iret daa mov lret sbb out repnz rcrb push test es out leave mov inc and out out fdivrs in hlt in out pop jbe mov sub fwait out inc int3 pop pop popa adc fistpl push mov jmp outsb push sbb shlb xchg ret cmp pop or or ret out inc adc fldt cs mov mov mov cli dec insl pop lds ret inc cmp (bad) mov sub lods dec pop (bad) jbe mov push inc and lret (bad) loopne xor cmp pusha xchg int lcall pop inc mov rcrl sarb or adc inc xor pop cs mov enter lret or mov mov mov jae mov sahf xor push xor mov lea decl mov sbb repnz sbb push jns in (bad) inc sbb imul mov out adc daa nop lock int3 int cwtl mov mov mov insl jge subb push sbb lock sub jno jb (bad) xchg or xchg lds push jnp pop mov sbb inc iret xor mov shrb out xor mov xchg mov adc in cmpsl out pop pop or jnp scas cltd out ja dec mov mov out andl add das fwait rcrb mov inc mov mov xor mov ja mov rcrb pop inc out mov int out push jno xchg gs jecxz pop cmpsb ret mov pushf lret cwtl out dec nop aas sub push cmp push jo stos or shr mov lea (bad) popa jno cmp jmp jg cs xchg dec imul or fiadd sub in addr16 lods and out ljmp nop insl idiv int3 xor mov dec out dec or out ja fwait out test add outsb cwtl out adc cmp test sub dec ljmp dec fisubr call arpl jmp mov out pop sti mov inc iret stc mov scas cltd jg aad push jb push stos push and fiaddl dec ljmp pop pop add jg addb dec mov out cs push fcmovnu and jb ljmp stos nop clc out je push fidivrl sarb ret sub out jne lea adc xchg js add jnp pop in (bad) xchg push (bad) cmc std and arpl sub jae,pn dec cmpsb imul in iret pop mov (bad) pop out out mov shr out or out mov frstor movsb sahf clc out (bad) outsl xor dec les jecxz sub push mov ret out fcmove insl xchg outsb (bad) stc mov std sti out mov (bad) inc or sub push inc or (bad) iret repz lahf lock sub enter xchg mov idivb mov cs out sbb into pop mov push scas js les mov insb mov out xchg mov nop sub cmpsl adc js pop dec icebp out insl std nop ljmp out aad adc scas aas arpl jo fucom ss dec push fbstp sbb cld xchg cmp insb xor out outsb aaa out cmp push jns mov xor data16 out and cmp rorl and scas adc xchg jg push in xchg ljmp popf jae and mov sbb sub shr pop out mov mov sbb sbb cmp add out inc xor sbb js,pn pop imul add (bad) sub push pop int3 dec jns mov or fisttp outsl pop xchg inc lock jge out cmp adc inc out (bad) push mov test xor das dec fucom fldenv xchg (bad) in jecxz ja int (bad) jno push es mov fdivrs pop ucomiss repnz into loop and dec ret mov aas jecxz or fsub xchg stos lahf mov btc sbb cmp in or stos pop (bad) mov fmull clc into dec or arpl lods out mov dec mov movsb jl and aam xchg movsb jge out icebp add (bad) decb mov movsb mov dec push out jp std inc inc xchg lret dec xchg dec out (bad) add mov xlat pop xorl imul cwtl cld mov repnz imul ljmp stc add pusha cwtl cmp cmp outsb mov fcmovnu incb out xchg test cmp sub push jbe out jne and ficomp out dec aaa movsl inc insb out enter pop shrl mov mov testl jecxz sbb sbb loopne jno rcrb nop adc push mov and jbe outsl clc out test inc addr16 and loopne inc push xchg pop sub lahf ds mov and cmp inc loop pop out push xchg xlat sub inc inc (bad) cmp mov cmp cmc cwtl pop jb outsb dec addb cmpsl sbb push dec in cmp and test pop sub fild mov out dec adc cmp aas lea push push and mov fcompl (bad) out in xchg mov out es and sub out dec push dec and (bad) lret dec iret sub dec mov in jno xchg popf out add mov xor out and xchg stc jns jo iret jnp xchg xchg adc sub outsb push cltd cmpsb out pop test push cmp jmp test jbe pusha andl lock outsb mov in insl fiaddl cs pop pop gs push cwtl pop (bad) ss imul (bad) aad (bad) xor mov mov or and cmp out daa pop jecxz test and out xchg mov fisttpl (bad) daa dec out out loop mov inc pop or rcr sbb dec mov out imulb mov out loope jle sub sub mov jmp out fdivr pop out mov sbb in das lahf gs movsl dec out jge jmp out or movsb add test gs scas jle (bad) icebp xor xchg or lock js mov fdivs movsb mov out mov rcrl pop out pusha adc pushf in xor iret cmpsb xchg cs ljmp push shlb mov xor outsb out sar jae (bad) mov out in xchg sbbb imul rcll and out cli stos xchg pop movsb outsb adc pop in mov ljmp out cltd (bad) adc mov sub cvtdq2ps push cmp (bad) jle pop xlat out push mov in (bad) sub es sub add dec pop mov and mov pushf leave call pop fbld pushw pop sarl outsl icebp sbb cmp jne jno or jb (bad) mov push and stos nop in cs ret adc out sub inc push jmp clc push nop hlt out mov popf inc imul loopne cli mov jg es jo lret pop mulb out out xchg mov dec decb js sbb stos in fsub out or pop mov and sub cmp sbb arpl push out lret mov lock adc add mov in sub cmp std mov out adc test out dec je imul jmp sbb pushf fld (bad) sbb cmp popa jmp inc inc bound sti xchg stc dec lahf je repnz mov and movsl cs jno insl outsb scas jns out cmp inc int3 out xorl adc cmp lods stos out (bad) out mov jp sub int mov xchg shr and adc jns push jb sbb dec into mov pop hlt mov jmp nop outsb xchg (bad) mov push cltd jns jae and das imul insb lret ljmp addl cld mov out arpl xor lret mov jge mov xchg out jmp xor (bad) repz push iret or mov call or pop cmp cmpsl cs stos push scas out insb mov xor das (bad) xchg sub cmp jg ljmp sbb in adc loop and push push out adc mov rcr mov sbb lcall and pop pop fistpl enter xor out mov jmp inc mov push (bad) dec in out jge ret rcll mov out adc jecxz add std loopne dec mov mov add mov outsb xchg out insl addr16 adc fwait dec out push rcll lods mov dec cld inc neg jb mov lds pop pop mov sbb (bad) mov sub cld cmp mov (bad) jg insl enter mov sbb cmp mov jns std sbb dec rcrl inc mov lock sbb dec dec fsubl out icebp popa es dec sub divl out inc jmp add sbbl repnz movl mov inc pop out dec loop sub popf les out adc mov sti mov jle outsb xchg js jmp out inc mov sbb pop loop in mov pushf std out jg lods and rep sub cli xor sub fidivl push xchg push test xor cli test (bad) imull out inc mov rorb sti stos out or roll (bad) jle in pushf aaa scas or cltd sti insl push out push aam loope into mov and sbb dec ss sub in fwait clc ja iret add add out inc ss out or push test sbbb in pop es mov cli enter outsl test pop jbe out xchg test push mov jo loopne mov push mov hlt das push movsb out lods adc mov adc mov jl (bad) and pop inc scas cmpb pop add and or xchg inc and mov enter pop and dec arpl mov fadds cmpsb clc jnp cmc repz into lahf ret pop rorl and or mov lds and adc (bad) cltd push jne jl int rorb negl push shrl out fwait pop test inc xchg ja pop shrb mov fldenv aas mov std jg adc ja mov lret mov push out addr16 mov push ret xor mov add test std cs mov js test jmp out xchg mov aas fldenv mov or lds inc mov mov mov push push inc loope repz jae jno out push sbb dec adc mov sub xor insb xchg out cmp sbb cmp fstl lea out out sbb out add mov out mov out ror rorl int out inc movb xchg lea bound out fistpll out out leave jge popf push addr16 por mov or or hlt dec in outsb mov pop jl outsl fstl scas sbb out pop mov mov push mov shlb popa data16 push fwait xchg dec push lock out fidivl (bad) dec out inc jmp and cmp inc scas pop jbe,pn add jg mov out out add xor in mov enter adc sub out sbb testb repz xlat mov loop leave call or mov inc jno call add push jb jmp sub (bad) pop or nop (bad) out mov pop out les repz adc cmp mov xchg mov bound xchg nop arpl out iret (bad) out lret sbb or sub mov data16 std dec (bad) cmp insb push xchg stos push sub and loop lret icebp stc pop sub and mov (bad) pop jmp cmp xor out pop lcall out xchg push jle or jns or movsl data16 sbb test jne fistpll out xchg push cmp adc sub cmp or das pop mov leave push xchg ss jb mov lahf fnstenv mov mov sahf pop cwtl xor out bound mov je jbe jae xchg inc jle sub fs and aaa out xchg cs add push repnz mul insb test push pop jmp in movsb xchg out push lock mov iret mov lods mov lcall into inc inc inc cwtl cmp xor mov mov call mov movsl xor xchg sarl repz pop call out xor in rolb mov loopne pop (bad) mov push cmp test idivb mov or out popa rol shrb xor int in pop mov out cmp add pop cli loope leave sub adc gs jne mov inc mov shrb or add outsl (bad) xchg fisttp sub pop and cmp sbb clc fsub fwait xchg int test ljmp decl jmp sbb dec out fnsave jnp mov cmpsb out add sbb push test fs in ja (bad) jl test shr out xlat mov jno or cmp or repz mov add push out mov sbb cli or sahf loopne ret cmpsl mov xor movsb xchg jbe adc gs mov in in mov fwait inc sbb insl ljmp adc das ljmp aas loop pop add add repnz out in sub push and out insl idiv or ret out scas or xchg xchg out mov add fucomi sub fiadd ret sub inc dec clc xchg cld ret jecxz imul sbb push xchg push cwtl jmp or stos lock pusha or shr adc bound test out (bad) incl pop out jp hlt and or movsb out xchg sbb lea fcoml ss out push and cmp mov hlt nop and out in aas mov inc out das ja mov (bad) daa out jge dec cmc push lea adc popf sbb out in ss sarb jmp call movsl js jns jecxz sub out inc push push push out sbb clc outsl jg sub adc pop das dec sti add iret test das test cltd popa jmp xchg aaa jne pop out xchg scas and mov push out and dec imul mov out sub adc (bad) sbb add aam fsubp (bad) cli push inc mov cmpsb dec out mov dec aad out inc dec nop mov mov xchg sarl mov pop out mov xchg dec lds and xchg pop xlat ret insl (bad) out jne jns sbb xor (bad) dec cwtl jbe lods lret loopne data16 out xchg push inc sbb inc or out data16 and cli movsb (bad) dec cltd int enter fucomip sub dec adc int shr ret das nopl loopne cmovbe cmp out je push inc (bad) rolb loope lret fwait shlb inc hlt pop lock fs cmpsb xchg xchg cmp fimull addr16 aad (bad) (bad) cwtl add dec xchg add jmp and inc xor (bad) outsb les pop fisttp xorl sti out pop out cs cwtl scas out mov pcmpgtb jno hlt enter and jg int das pusha divl ljmp push sub sbb pop xor out sbb jne xor scas mov in movsb cmpsl imul fdivrl sbb stos andb xor xchg jne pop sbb pop mov push out mov ret aas out jne xchg lods xchg fildl jb adc add (bad) sahf stos shlb sub pushf das mov inc xor cwtl test jno sbb repnz into inc add push ja inc mov jecxz out icebp mov jle (bad) sti repz ja inc pop inc sbb stc out pop xlat (bad) mov push (bad) mov out mov imul add fbld call dec iret push or out aad ret out test std push es les xchg push (bad) fdivrl adc dec out fcomps lret or xor adc bound cmpsb out leave add dec sbb mov popf in and mov sub lcall dec jl out adc or sahf cmc (bad) (bad) pop cmp loop pushf or out pop and mov in (bad) xlat push ljmp pop jl out dec pop mov cmp mov mov push pop mov sbb mov in or aad mov mov out scas or xor out push dec out sbb sahf adc jo sub sub jp pusha in andl jo jnp fistpll iret call and imul pop call xchg sahf les sbb cltd dec in in xlat jae out sahf iret les cmc loopne or push ljmp out push lret in add lahf das (bad) push dec sub sub movsl inc pop pop insb add int pop out or clc and jno lret sub scas stos shr mov cltd repnz std or leave pop test mov cld lock mov jecxz out fcmovbe jp and inc iret cmc int push in xchg out adc fucomip dec test pop xchg push insb mov mov jb movsb pop and in inc mov mov aas (bad) sbb jmp repnz es js out dec fwait dec mov in test out (bad) in repz mov jecxz mov sbb out test stos xor mov in fisubl cmp fs cmpsl enter insl push pop or cmpsb int3 out sar popa out cmp mov add outsb sub das int icebp mov push adc or out stos xchg sbb cs ljmp out leave into adc outsl mov scas add xor mov jb cmp insb jl push sahf mov inc jae movsl out out adc pop jno int (bad) pop imul sub out popf clc jae jne mov dec maxps mov out out adc jl or sbb cld jle inc mov mov imul arpl lret stos out bound mov dec call inc xchg cs out sub and pusha arpl jmp pop dec loop mov fucomi mov rcll push lea and out push xchg nop lret fisttp sbb out jno mov mov sub fdivrs out jmp or movsl movsb jns (bad) cmc and dec iret iret test in pushaw pmulhw push dec lret imul push xor lock mov jecxz jp jge or jo xchg jns out sbb (bad) dec out mov pop push loope fildll jg into xor hlt aas sbb pop lcall les ljmp jp jmp jne xorl leave inc cmc xor ja dec lods cld out jo out outsl out lock sub daa into pusha jbe dec adc mov mov inc inc gs sub mov out xlat sub stc mov mov test fs lock out pop inc jno int3 popf dec xchg pop inc test aad (bad) lcall ljmp loopne lcall sub nop and das fistp repnz mov (bad) aaa jb inc mul xor xchg sub into xchg and jge out sbb pop out (bad) mov sbbl mov add ljmp test sub enter int jae inc cld adc push or out ljmp test aad in jo mov inc das hlt jl aam out mov mov adc out rcr and pop cli or xor stc pop add scas insb out rorb pop pop pop jmp imul int or in pop add aad subps xchg fnstenv arpl in (bad) (bad) in mov stos ljmp and jno decb stos pop push dec (bad) push call out adc sub int bound out mov imul adc xchg loopne aam in out lods idiv out test sbb mov pop adc lcall adc jns sub aad (bad) cld jge pop lods stos xchg aam and inc push inc pop mov shll das xor xchg jne pop and incb jno hlt loop xor out cwtl xchg xor mov cmp dec outsl out cmp sub popa sub or sbb mov mov outsl mov imul (bad) shl into push adc fidiv sbb dec addr16 fs lock mov push jae and or and sbb out push neg enter stos out adc sub sbb and adc mov mov movsl xchg (bad) fistp add pop imul (bad) pop sub scas xchg dec push negl mov fidivrl out stc cmp cmp xor hlt push fs add out push test bound insb sbb lahf push (bad) outsl js cmc pop in shr pop sub out (bad) sub xor add leave cmpl mov mul jp cltd hlt out dec push stc push test das out data16 push push out jnp jns fcoml in arpl lods pop dec out sbb adc inc fnop clc out push (bad) mov xchg jg xlat out push out pop lock mov inc shlb cmc push mov cltd jb xchg stc in mov xor lock inc xor xchg mov adc sahf js xchg sub or jmp inc or mov adc pop mov (bad) xchg inc cmc mov adc push (bad) sti or in cmpl popf mov lods cmpsl xchg xchg xchg fucom enter inc push sahf inc cmp dec stos int pop xor shlb sbb movsb ret lret (bad) adc sub shr or push pop mov aam dec les mov out (bad) aaa mov push inc out dec fidiv jl or mov mov dec out pop aam and or cli out scas jecxz gs ror mov lret push idivb jbe or jp mov sarb cwtl pop (bad) or inc clc sbb xor pop sahf (bad) sbb mov cs inc addr16 adc (bad) out aad pop jmp ss loop mov pop rcrb cmc push loop adc ja add xchg jbe adc repnz je adc pop cmp fnsave mov (bad) out ljmp cmc int pop hlt (bad) loop repz or pop into out movsb pop gs dec out inc mov jmp cmp call sti mov out (bad) adc pcmpgtd mov and add aas pop adc mov out or xor jb movsb sti leave mov es mov sbb loopne cs sti add mov xchg dec decb outsl push dec push lods aas mov hlt cmpsl pop rcll pop or jo (bad) insb out adc mov pop pop addr16 pop fs call loopne pop push xor push xchg and sub out lret arpl out xchg dec enter and adc out aaa mov pop xchg push cli (bad) and sub por in test inc mov mov xchg adc sub pushf in dec or lds sbb sub bound dec cmc mov cmpsl out add mov in inc pop jno call roll push dec out cmp fdivl cmpsb out adc xchg orb addr16 sbb xor out jno popf mov jo (bad) sbb add adc mov xor popa imul mov cltd sub popa jo push jne dec out or or out std mov int shrb xchg mov jl ljmp dec sub shl sbb sub sbb push and mov xchg sub (bad) and jne,pn test out sub js pop out lods aad arpl sub sbb push in xchg out dec aas mov xchg ja or cmp push lods out or mov cmpsb pop mov jmp adcb lock outsl ss adc incb imul aaa jecxz in js xchg xchg lds out je inc hlt xor xor sub out rorb daa add fnsave fdivr mov and ja and adc ss out adc push and testl out xor test aad mov or orl movsb sahf mov xchg mov cmp xlat out in dec in xor out lods mov xor in cmp push xchg out imul loop out add sub iret and enter xor jmp js out outsl push cmc push pop mov push aam jae out mov sbbb mov mov (bad) outsl data16 into out push je xlat dec lcall in adc in pop pusha ljmp outsb test lcall xchg push jns or inc jae test lret shrb or repz orb inc jae sub inc add sub (bad) pop testl mov lahf and repz mov pop xchg xchg mov or push out test adc lods out adc and addr16 gs pop pop out jae sub push scas sti add mov aaa fild and out ss and mov cltd (bad) or div sar stos add cs out les push mov test lret scas shl adc stc inc cmpsl xchg xchg xchg xor sbb in (bad) (bad) mov outsl sahf sub push push inc jmp or dec jb paddsw out out repnz popa adc imulb (bad) pop pop ja stc in inc xchg outsb cmpl ja out jne push mov lret test loope sbb inc enter in jle adc sbb stc das out in pusha and loope xor incl pop mov xor add sub rorb out stc sub xchg sarl cmp fadds jp mov push push xchg (bad) mov mov repz or or out push adc adcl sbb mov and and or sahf jmp dec pushf out in out xchg jp stc out pop ret cmp cwtl push out cltd sub adc out hlt cmp loopne out das mov es or sub addr16 ljmp xchg out stc push fwait xor dec sub test fidivrl out sbb push sahf out outsb pop aaa pusha cmp stos ljmp jmp xchg out jnp jae jecxz fdivl out imul out adc sub data16 nop (bad) out sarl (bad) ljmp dec cmpsl lret and inc out es out fdivr sbb sar test hlt sbb into fisttp gs loop jecxz add xchg lods sarb pop out pop loopne not mov int and mov pop ljmp sti add iret rorb mov adc xor xor fisttp mov sbb cli call out xor jg test fdivr and push out jl std mov jbe in cmp (bad) fiaddl aaa jb loopne ret mov out dec dec push mov loope pop mov (bad) scas push leave lcall out mov addr16 out scas and rcr push lea aaa jns mov iret shlb lods sbb inc add pop dec cld repz jge jp out repnz jle fist push cmpb adc xchg test mov out push or repnz mov data16 xor jmp inc push out fsubl aas or (bad) out out pop shl out and daa mov arpl cmc out sti enter push imul clc loopne cltd and xchg out cs and out (bad) aaa mov mov xchg out jp add orl jecxz jns insb addr16 xchg aam (bad) inc loop dec out out les ficom insb out cmpsl pop sub out inc loop rorl inc and push sti cmp mulb loopne pop in dec icebp sarl popf jne out jbe into lock xchg sub pop mov das lret inc mov mov add stos daa scas push bound ja in pushf into dec cmovl in jnp out stos fwait lods xchg (bad) sbb pop out or out mov sahf mov xlat out shll dec shl out shll sbb jo inc pop (bad) lds popa push notb sub push in inc sbb inc into fucomp rcrl jl push pop out pop add jbe out js inc jns stos leave add or out sub fnstenv push out icebp or lret mov ret mov jb std out je and lock pop (bad) out xor xchg imull out inc daa xor outsb fdivl cmp inc fdivrs decb jne and mov popa mov pop jge pop test inc loopne lcall ljmp out in or out mov sub out mov pop fwait sbb xchg out lcall add cmc dec lea xor xchg (bad) popf push ret dec fsubrl jo repnz data16 cmp mov loope fisubl inc dec orl push aad inc test adc push lcall mov push out lret push pop push adc iret and enter xchg jge subl sub out cmpsl aas out or xchg pop and out mov out test xchg sub xchg jno mov push mov sbb out cli repz ss cmp out fimull les push nop cld pop xlat iret xor enter and scas push pop xor cli (bad) out frndint mov sub fwait insb mov jnp sub sbb in sub ret pop inc dec mov cs iret popa adc push out loope lret sub inc fsubl out test int3 and xchg leave push out std (bad) sub lret dec out cmp fimul out push xchg fucom popf xchg repnz sub jmp xchg xchg mov sub js xchg shr out testl sbb sbb call fisubrl test ja ret ljmp stos jl sbb xchg add jae pop mov dec enter push out push inc daa mov decb xor out add fisubl jmp test dec call lock ljmp jg fmull sub jecxz dec fisubl scas (bad) test push xor adc sbb ljmp rcr dec call mov mov cmpsb and test xor pop leave icebp cltd call ret out cmpsb insl jns push jmp mov inc sub jb cltd out or mov push pop mov mov xchg shr hlt jo pusha test subl mov aaa ja lock out jbe and dec cld addr16 popf (bad) clc mov sbb call imul gs rcrl mov insl (bad) (bad) sub pusha jmp hlt fs (bad) loope test or (bad) in pusha sub pop jb sub xchg xchg cli roll daa dec cmp (bad) lds je iret lods and cmp in cmpsb sub sarb repnz pop xchg out lock inc movsb or pop test outsb xchg into fild in idivb xlat dec inc ficom imul lret out add or outsl rolb clc enter sar pushf and pop jae and xchg mov negl dec aaa imul pusha les sub stos bt xchg or clc pop fcompl popf leave mov jge pusha lods das mov out adc aaa out mov test cwtl pop pop loop (bad) shr movsl das add (bad) mov sahf pop sub cmp cmp (bad) repz or das insl mov and sbb and (bad) adc std cmp addr16 adc in out ja sbb sbb (bad) dec outsb ss stos sub cltd (bad) imul xor add out push mov sti xor mov mov mov adc outsb cs inc (bad) ss addb cs aam fwait jecxz sbb insl out in pop and out mov notb pop in or xor std loope aas in push sti scas inc fist in pop dec data16 out pop stos add jo out jae inc jge psrlq pop mov cmpsl and add cmc fcom (bad) and xchg inc (bad) scas inc out mov mov xchg push insb sbb ret xchg jb push mov pop mov daa out pop in icebp xor out pop jb insl sub or out lcall pusha out xor inc adc repnz add out or mov cmp jbe inc push jmp sub lods movsl setnp cmp push jmp and out out arpl push popa movsb lock mov hlt xchg sahf cmp je inc dec pushf in mov cmpsb xchg or arpl sbb fwait pop lahf and jns es cli popf adc push dec loopne loop out jmp mov push adc mov push adc je gs push outsb (bad) mov jge popa jno dec fsubrl push ret pushf jp pop fstps mov (bad) icebp imul push nop insb rcrw xor mov inc inc jmp shrb repnz mov stos jmp mov sbb jno in sbb pushf mov or mov pop xchg pop cmp (bad) je mov mov (bad) out add sbb dec and repnz rclb jmp std push cltd (bad) out jecxz mov add jb push out inc pop cmp (bad) mov sbb out stc adc popl mov movsb in cmp cld out push mov std out call ds inc out les mov sbb adc push xchg fwait pop and ret out je mov fucomi std sub mov out cmpsb cmpsl xchg xor sbb pusha aam (bad) into lods cmc out (bad) js inc dec or sbb les mov pop and jb mov cld sbb mov push mov aas std out add sahf or clc inc push mov aaa nop lret pop int3 (bad) ljmp pop dec jns pop xchg punpckhdq (bad) push fdivp test js (bad) movsb pop jmp jecxz dec inc mov sub ljmp dec arpl fwait out fucom pop mov out roll sbb mov pop aaa ljmp mov cmpsb rcr pop lods sub mov inc inc cmpsl cmp lret dec data16 sub int sub loop fisubl out inc fildll xchg test sub aad pop pop (bad) sahf leave inc xorl (bad) mov aad push movsl stc rorb (bad) je dec (bad) in stos push out or or mov dec sbb cmp push out push cmp inc pop adc xchg add out jo and sub cs mov out mov inc sub sub inc shr dec gs adc daa fs adc xor out pop les lcall repz lods test adc cmp out popa and and out mov xor out out xchg mov cmp xchg xor inc xchg xor ss out mov std push mov les js out jle lahf fistp adc xchg sti out pop (bad) sub cmp dec std das repnz insb cmp out and leave xchg mov out enter pop addr16 out (bad) cli andl adc push das mov or loopne pop out and sarb sub fsubp push repz (bad) in jmp lods je inc mov das arpl call inc sbb ljmp mov out sub fnstenv sti cmp pushf fdivrp and fsubrl fcmovnb sub mov or cli loop iret in lahf sahf insl insb call mov ret rcrb dec out jmp dec push lds pushf test outsb hlt das out inc adc test jp xor cs cmpsl lock inc add ja aam (bad) sahf cmp push out fs inc jge push in lea pop add add (bad) pop shr and xchg es fwait jno out int3 rclb cmp dec repz negb jmp xlat gs sbb inc in arpl add loopne test in xor pop aas mov loop aaa out jmp out and fidivr cmp or add hlt int3 (bad) mov xchg cltd xor iret fnstenv lret sub iret mov sahf and jecxz movsl test mov js loopne dec outsb loop dec xchg pop fimul iret mov sub cmp iret or js adc add aam xchg fxch dec sahf pop pushl out and out arpl push das stos je cmp (bad) addr16 lods pushf sbb iret popa (bad) cmp out lea out mov (bad) icebp out aad mov pop aaa and pop add leave rcll and sub jnp push mov xor je cltd imul ss push in xlat ret (bad) jo cmpsb hlt mov iret jo adc push sbb add lds mov jbe (bad) mov mov rcrl (bad) cltd xor jb mov cli mov outsl xchg out les hlt xchg pop mov lds mov out add sub jge movl movsl out pusha adc inc les out fwait jo fsubr out leave out ss nop xchg dec pop push cmp in adc insl mov dec es cmp loope out (bad) lods call repnz mov mov sub shlb pop ljmp mov shl and enter push repz push loop adc out movsl or decb fs dec jo leave das outsl pop fcomps push lock or xor and out and jmp mov pop loope ret ret das incb icebp cmp cld in pop int3 out mov cmc xchg cmp gs sub (bad) aaa stos lea xchg mov iret out bound (bad) int (bad) mov jl and jne iret shll jnp (bad) (bad) jo adc jno loop add mov test inc jns nop dec pop pop out ret cmpsb fadd lret lods mov aas test (bad) add jnp pushf out divl sub out ret jb les jmp pop ja,pn mov std xchg push lret test in mov outsl out cltd sub std mov test in mov pshufw das xchg ret out or ret loope sub out pop test pop xor stc sub pop mov mov push dec rol imul (bad) out add jp mov pop push stos push popa xchg sub xor out pop dec fldcw mov xchg sar scas dec fsubrl test mov flds in mov loopne mov jl out fsubr xchg daa jle lds dec cmp mov fwait xchg out rcll jne (bad) hlt fistp cmpsb push sbb (bad) out divb cmp inc fs out cltd and inc mov pop imul xor cmp lock push mov jle ret ss or repnz lods mov (bad) insl lea outsb mov adc out je fcomps nop mov pusha rolb or and mov push add jle lcall dec jge pop add test sub push je mov out call adc sub mov inc xlat mov nop out fnclex adc mov inc adc (bad) hlt mull mov iret xchg mov leave int3 sub xchg jecxz out nop pushf add out dec xchg sub lds pop xchg cs inc sbb notl jg in int3 adc (bad) out rcrb outsl (bad) out and subl push std dec cmp cmpsb (bad) repz insb out in mov ja lods sbb int cmc sub orl adc aaa data16 imul cmp ret jmp outsb ljmp call lret out loopne and bound push mov les push push stos (bad) popf out outsb shrb aam fild or ljmp (bad) xor ljmp and cmp daa xchg pusha ret xchg scas jae jno mov (bad) mov into pop mov push pushf iret imulb movsb push sbb nop scas sbb jo push mov push sbb sub out xor pop fistp push outsb mov jge out rorl sub fstpl cmp dec sub call test jo sub cmpsl jno cmp icebp xchg inc push ret xor in xor in out pop lcall (bad) (bad) das mov imul out xchg js mov adc jl cld pop or pop sahf adc pop in xor lcall out xchg xor cld pop inc dec int3 out dec in out fiaddl out cmp movsb inc xor in lock mov call mov mov adc mov pusha sbb ficomp es dec mov cmp lods sub rolb je jo xor mov mov into lahf out add adc test clc lods insl mov (bad) (bad) lmsw jl ds pushl inc jge adc lret inc mov push push mov add mov andb data16 mov shl out push mov cltd pop out pop icebp sbb adc sub inc popa push in (bad) xor int3 imul sbb jle lock dec jnp sbb and pop push xchg dec mov test subl mov mov in xchg mov sub out aas ss cltd es shr mov clc out loopne pmullw mov jp shr sarb scas shr mov xchg (bad) adc movsb pop jnp mov push xlat jmp pushf mov sti jmp (bad) mov (bad) outsl sbb loop in fmull xlat fisttp popf jg jp mov (bad) rorb repnz out xor sbb lcall cmc (bad) hlt pop push mov enter mov pop (bad) into out add mov out and fstpt loopne test loop pop mov out push aas ret jmp (bad) pop pop fs xchg (bad) lock int leave addr16 loope or cwtl pop adc (bad) sub sbb out scas daa xor mov jbe mov stos ja out mov xchg sbb cmp add adc or jne push in adc mov test mov sbbl addr16 dec cld mov dec out xor push inc (bad) sub inc xlat xchg mov mov repnz jbe and out test mov and (bad) lock pop xlat add mov out repnz xchg subb dec lret fucom sub pop in das pushf jo adc leave andl jge out cmpsb pop test mov jno das stos or scas (bad) out je xor call mov fidivrl fadds es out lret mov (bad) data16 int movsb pop and (bad) aad cmc jl pop iret (bad) out test sub cmpsl aam out sbb aas imul aad shr inc in loopne daa fildll es jmp sbb outsl out lds hlt sbb inc bound jae rorl out sbb sbb mov andl mov aad (bad) cmp ficoml lock out imul cwtl jg fsubs xor cs imul out lret jns icebp lds out or (bad) addr16 add jb pusha push and insb movsl loope cmp mov pop sahf fwait mov pop aas loope or mov es repnz push inc ja gs lret push out test xgetbv jp adc pop loope out add in outsl out or mov jbe data16 inc push jmp out xor (bad) pop out or bound out hlt pop (bad) xchg enter lods push out fbstp mov mov sbb jmp nop daa dec cli scas mov mov inc cmp and or test out push (bad) das mov movsb out xor ljmp sub add sti (bad) mov out sub imul movsb cmp out xchg insl aaa das into stos loop out call xchg and rorl xor lret (bad) out cmp loopne fbld (bad) xor aas in dec pop mov jmp pop dec (bad) pop push push cmp scas nop out add mov push fcoml adc sub ret push mov pushf dec xchg xchg out outsl fcmovu cs call out sbb mov (bad) push pop pop in push out mov adc and ljmp push fistpl arpl (bad) cvtdq2ps in and nop mov inc push cltd and push icebp ret sarb movsl aad mov fisubl or aas mov rorb push pop out pop and push mov inc in shlb out out adc cmp (bad) adc jge (bad) insb leave scas out sub ret jbe test out xor (bad) (bad) fs sbb out cmp inc sub or push xor out jp in std je xor fist xor xchg rcll daa sub iret adc and jae pop outsl ss insb mov leave out (bad) mov fstpt out test out push cmc sub pop movsl add xchg rorb stos fimul push mov icebp scas data16 cltd out and cmpsb jmp dec out fwait das mov add xlat insl fsubp stc or mov fldz sbb cmp out xor add into (bad) pop fxch mov out out lods mov int std mov imul jo mov mov (bad) iret push xor es add out jnp add imul mov les inc int xor adc decb daa divb out push pop adc xchg dec loope in sbb lock sub out mov cmp repnz out inc imul push pop mov or ret dec inc je xchg mov mov mov inc sub into out ljmp add inc test insl pop pop cmp cmp push out lock jp insb out add push fsubl xchg pop (bad) lret sbb insb or jb popf scas or outsb pop lahf add fwait jle (bad) and pop loope dec loope or es mov mov (bad) dec cld and jmp jmp add and sub sbb dec out mov (bad) sub ljmp pop cmp fnstsw xchg dec out les xchg ss pop cltd cmp out sbb rcrl call lods fild add jecxz,pn cmp push idivb mov mov add mov inc dec jp add ds mov cmp leave in xor ljmp jmp pushl out pop ret jnp inc popf idiv out inc (bad) pop in jno lods arpl dec push js (bad) pop push aad in rcrl jp lock outsb mov bound or out push inc test push cmpsl lret xchg divb rorl std mov push and jl enter cs jl jnp loopne dec shl or out (bad) xor adc mov cmpsb lods cmp jno push stc cwtl jmp fucomi (bad) notb lock lods lds adc in xor out mov or outsb sub jle ret popa in leave jmp rcll dec mov jle ja mov imul sbb jle out jb inc xlat push cmp sbb out out scas xor sub mov pop mov mov lret or into cmp out aam pop xor add inc fs in ret insl mov fwait dec push sbb push add fistp jp test mov mov inc popf insl (bad) xor outsl jle fistpl sbb repnz or pop dec lods pop inc jno loop sbb mov xchg jnp dec push insl out push dec ret fsubrp dec fs sti dec xor pusha repz (bad) out ret jle mov push movsl imul xor loop xchg lods xor fidivrl jl pop xor push cld and stos lcall sub ljmp cmpsl jecxz xlat icebp push mov push xor out call addr16 rcrb jl decb cwtl nop rorb pushf bnd outsb and mov push (bad) ljmp sub mov in dec inc insl push adc fidivr (bad) int sbb aas cmp add andl pushf push daa xchg mov in and sbb cmp (bad) (bad) hlt out push rcll out arpl xchg push inc notb adc dec insl fs lods cmp jp rclb scas movsb adc pop sub cmp add sti iret push (bad) jno (bad) push xor push out mov xchg rorl xchg out cwtl mov sub movb and cmc das out cltd sub loope jne int3 int dec les push inc lods out or in (bad) outsl imul repz fistp cltd fsubr in nop pop inc push into xor pop in and in xchg out adc cld js out inc push ljmp (bad) cltd ret add jmp or sub add stc rcl rorb jo fwait cmp mov repnz cmp (bad) or iret or jg mov dec testl sbb fisubrl pop gs in pop jl out xchg cmp test jb cltd shrb (bad) les xor jle xchg inc lods orl dec or cs push cmc arpl ljmp xchg out mov adc mov (bad) cmc pushf jecxz pop and pop out cmp dec and xchg out in ljmp out sahf mov push mov push pop imul cmpsl xor or aas cltd fisttpl xchg pop mov dec mov imul lret out popf cmp enter iret lahf jnp (bad) out in (bad) out out fild cli xchg cmp mov jmp ljmp imul mov aad insb out ds or pop inc add cmp and adc cmp out scas sarl (bad) in aas call (bad) negl sub insb ljmp out cmp shlb xchg (bad) out cmp jecxz out ja jbe pop adc xchg or out stos shl insl mov je sti xor into icebp push and imul movsb xchg das outsb sbb jg jne push out jmp data16 jge dec into mov (bad) sbb enter inc jno mov lret jo (bad) out mov sbb out or adc hlt fwait cld jle out add out cmp ficomp mov and jbe mov push je pop push xchg xchg out in xchg fnstsw pop out sub push mov mov dec push iret adc cli add imulb (bad) in adc pop (bad) lcall or mov fisubrl adc or or imul out icebp cmpsb xchg pop sarb out pop in jbe addr16 mov shll jne out and dec and leave cmpsb (bad) out sbb add mov add xor pop shrb pop adc loop es (bad) mov addr16 out push or movsl add dec out je (bad) aad sub les out sub jl fcoms repnz notb outsb mov jbe cmc imul push jno fsubr in xor jmp pop in pop mov ljmp out in push rcl cltd hlt mov mulb movsb pop insl mov dec sti je gs pmaxsw cmp mov lcall mov enter xor out push xchg sbb pop xchg lahf loop fmuls push mov movsb inc lea out jne inc daa or nop aaa out pop push aad mov subl sti roll xchg mov cmpsb pop inc adc out add out mov mov jae cltd in lahf aas arpl icebp ljmp rorl test in push int jae loope dec and jg daa int out (bad) cmc (bad) gs xchg pop xchg add sbb adc push or xchg xchg mov test push pop cmp out mov adc int popf minps jb dec loopne iret xor out movsl and mov pop jmp out mov mov mov stos (bad) repz cmp popa out dec scas jp sub xor stos js and or mov xchg mov out sbb cwtl sahf pop out add push (bad) jne lret imul cltd sbb out dec pusha and lods out sub cli dec inc loopne or out rcr in test out mov xchg in push fcoms std into hlt test out in jl outsb adc in sti (bad) xchg adc lret out mov mov out ja (bad) inc aaa adc popf xchg out insb xchg enter loope add insl mov imul out mov stc ficom adcl clc mov imul test or mov jno inc out and std mov sbb cmp push loope xchg out movsl sub in int3 lods adc (bad) enter sahf (bad) mov pop and iret arpl out jo ret xlat xor and mov mov stos mov sbb push out es pushf rcrb mov adc insl out and cld arpl data16 out fs inc ret pop and pop fstpt pop pop cmpsb push jmp das pop sbb jnp push aas ljmp hlt dec data16 in fstpl cmpsb lock fild sub repnz and pop sbb in push inc adc xchg (bad) repnz rcrb cmp loope sub mov pop dec je and add mov es and shr pushf (bad) sub jmp mov inc push push loop cmp dec mov iret sub scas sbb sbb js,pt outsl rolb xor push (bad) cmpxchg jecxz jmp or push sbb stos dec loopne std les das or icebp cltd call insl imul xor out pop shlb out push mov jnp out jmp jne ljmp mov xor push add js xchg int out push stos loope xorb sub sbb inc out mov cwtl js cltd jbe pop jp add push inc adc je out jnp or xchg in xchg shrl push mulb adc push insl scas mulb lods xchg rcll popf in cs out and and adc (bad) adc and inc mov movsl jne sub fsubr jl mov cmc (bad) xor jno jns outsb xchg inc pop test adc in (bad) stos cmpsl out arpl sub push out out mov out das popf loop xchg out mov jns dec sub repz aad shrd loop or daa lcall gs test mov popf out fmull out pop fisub xchg sub das or iret lahf out lods push in stos fadd xchg out xchg push dec aaa xchg fnsave sbb cmpsl vrsqrtss imul dec hlt mov scas cmpsb pop out gs into push mov push or ret out xchg adc cmp ja cwtl mov daa cmpsl mov stc and dec add xchg fs test xor inc mov mov imul out inc clc std inc test push xlat pop jg push pop in ljmp out icebp rorl incl aaa nop push (bad) popa mov xchg mov pop cwtl out lods and dec mov ss iret rcrb add or movsl lea add (bad) pushf repz mov sbb sbb rorb and das xchg repnz pop fsubrl fs adc and sub fimull ret sti mov and outsl mov idiv insl mov jg js in xchg addb inc mov add mov sbb rcl pop leave fwait push dec shll sbb scas adc test push out fcompl sahf imul fildl outsb (bad) loopne in adc imul popf xor sahf popa jns (bad) out pop mov scas lret addr16 (bad) xor ret adc insb add sub test jl xchg or out mov dec sahf sbb add out sbb xor lds jg cmc xchg pop pop xchg pop pop jecxz mov push out andl sarl (bad) and sbb test loopne faddp ljmp out mov ss mov roll inc jge inc push xor mov dec xor out pop fidiv xchg sbb repnz push popl incb stc ljmp pop lods xor lea fs das out incb and dec push out xchg pop sti les xlat out jno push push sbb out jnp xchg mov dec ss mov inc adc aaa pop icebp push (bad) mov mov loope decb push jp sbb loopne sub ljmp out adc in shll out mov mov fucomip movsl mov or rcl (bad) fsubs pop enter pop mov arpl xchg in sub xchg push iret mov pop inc cmc lock jb ss les pop mov rcr icebp mov popl bound pop xlat leave les loop fcmovnbe cmc imul cmp out fnstcw ss mov (bad) pop and or (bad) addr16 rcll dec sbb sub aam out repnz mov test or jns xchg lret pop jb das push es popa lahf loope mov push imul call fsubr in outsb arpl test xor jne jbe push enter inc out inc cmp repz ret xchg xchg inc mov mov test imul in std shll adc cmc popf data16 (bad) lock in lds ficom xor ss mov xor pop jae aad xchg push rolb xchg out add pop sbb out and int cli adc xchg and sbb fmuls add push lods jb shr aas out cli cmc xchg inc cmp pop cmp pop cmpsl xorb sub jecxz or pop test cvtpi2ps out pop and push test (bad) jge inc icebp (bad) sub xchg out arpl pop push pop jne sub cmp insb xchg (bad) out push inc mov out xchg ljmp out sbb pop popf dec mov out push pop fcmovu sub push and lods jb leave (bad) out cmpsl loopne (bad) and xchg rolb add inc (bad) out or cmp jb or jo lcall mov out dec mov pop mov lock cmp popf and jg (bad) cmp out mov pop jmp mov aaa rorb and icebp adc jb out mov fldcw out out push icebp fsubrp adc out xor jl mov sbb push aam arpl fdivp out sbb lock jl xor adc xorl add icebp mov aad cs imul loopne mov (bad) arpl (bad) hlt sbb xchg test cmp cmp mov jp and fcompl and fucomp leave mov ret lea push jne out push cmp inc xchg loop loopne sbb out mov push (bad) mov stos (bad) push stos test repnz push js out fbstp loopne mov jle outsb inc adc xchg and pop sbb sub out pop cmp inc (bad) out adc test test xchg or add or test in mov test sub pop sub mov sub dec pop jo push and jmp lock out cli adc push cs js push pushf out mov cmp cmc mov cmp mov push rcr pop push xor xchg popa and das std (bad) out bound pop daa out (bad) mov push loope xchg cli rorb pop jbe xlat lock lds mov out icebp mulb call add into or ret sbb daa outsb cmp les test mov jae ret dec cld out test fbld scas sahf mov fcmovu leave out lret js sub pop (bad) out push mov into sbb out daa inc add iret (bad) out stos push fmull pushf inc lar and iret in jge imul in jecxz roll lea xor in out clc xchg hlt out push push jne xor out cltd pusha adcl imul repz dec fisubr out out je scas nop push das cmpsb or cltd cmpsl mov sbb in fs inc (bad) fsubrl adc (bad) loopne cmpsl mov and xchg mov pop sub sub dec addr16 xor pop cmc int mov imulb stc into jns sar sub iret das imul xchg out jmp scas outsl je out punpckldq dec pop loop sub xchg mov (bad) jle ror jne dec out pushf push loope ljmp out lret lcall sahf int jecxz sub out stos and gs push int3 out xor les and sub add outsb out inc inc in pop popf call (bad) std sub push out mov fs pop repz push inc jecxz jne inc cmpsl leave insl mov lds or out scas dec daa es outsl test aad mov add out test xchg push repnz and mov leave lret fisub daa out mov in out jle testb inc stos push jge jbe data16 fsubs aaa (bad) fs xchg mov push ror in xchg test push push adc cmpsb outsl lahf inc out push mov dec popa xchg repz ficoml loopne mov mov xchg push out (bad) stos imul pop (bad) in inc popa mov mov mov dec jb cmpsl mov out xchg push xor adc xor loopne add push jp in ss sub in mov imul pop inc xchg pop dec shr (bad) in sbb iret and movsb adc out dec outsl xchg scas push mov bound cmpsb out addr16 out mov mov (bad) mov lret sbb jmp es ret out adcb gs sbb aas in and notl out fwait js stos (bad) pshufw and sub pop sub rcl adc hlt addr16 inc loope mov out ja sub inc xchg stos xor hlt push outsb iret cmc lods pop idivb xchg dec inc push jmp rolb jl jbe out mov out lods aad xor push cltd negl shrb imul inc rcll adc inc fnstsw sub or or aam jecxz jp out and outsb add int3 pop push (bad) in dec test adcl notl push out and sahf pusha cmc jno pop lahf cwtl mov (bad) call icebp decb adc sub in mov je push andb push inc push ljmp shlb out add mov movsl or mov mov pop (bad) or aaa xchg push addr16 out xchg lock and mov rclb mov les out (bad) lret testl out cmp pop xor cmp out popa sbb test mov jl cmp mull or xor jmp mov mov xchg mov xchg mov cli xchg and leave out int3 popf xchg or cld push cmpsl out je daa (bad) sahf mov mov sarb or adc test (bad) stos pop pop mov inc in out add int3 imul push pop adc lods in cmpl xor gs mov leave flds out lret movsb adc and out push stc iret jecxz notl shr fwait add (bad) imul cs push mov cmp popf xchg out loop push std arpl sub sub or loope mov out pop adc jnp pop push mov test out repz (bad) push inc and adc xor in dec sbb ljmp outsb or out sub xchg shr sub into sbb pop dec inc lods sarb (bad) dec out out rcll loope out and push pusha leave mov out jp (bad) testl cs (bad) jl ljmp incb subl mov lcall clc in stos pop (bad) iret enter sbb dec out imul push out xor xchg push (bad) inc stos mov stos and jnp mov shr xchg iret mov xlat xchg dec push out add mov push cmp int3 fsubrp and in dec xor ja out jo (bad) or mov and ljmp out dec pop jecxz repnz jmp mov psubw fsub (bad) ljmp ds in insl sub inc or mov jge icebp jl out pop inc ficompl push stos faddp (bad) cmpsb sub xor cltd mov lods xchg out arpl mov adc jl xlat je ljmp fsubr inc out test (bad) cwtl dec packuswb iret shl push xlat sub scas adc inc push jns daa out in out push inc push out pop pop sub cmp popf imul inc loope lock fild int iret add jecxz inc out (bad) mov inc jp je out sub dec cmp rorl fsubs (bad) lock out gs jb mov cli cmp mov or push insl enter outsb aas data16 out cltd ljmp out stc das add sti movsl (bad) mul jl pop fldcw stos ljmp sbb cmc out mov or (bad) mov mov xchg aaa loope repz icebp cmp dec mov push lahf mov out jl sbb mov outsl mov bound out dec push out clc adc movsb (bad) cwtl out into or (bad) or pop adc jecxz test cmp dec push jecxz leave insb movsb jo sub push dec (bad) (bad) popf xchg aam mov out pop lea mov cmp out add leave call sub push lea int3 daa mov ja xchg pop cmp pusha jmp pop mov sbb shrb xchg out xchg pop lds jne dec sar lods sub imul ss loopne dec (bad) pop out test pop mov popa sub (bad) cwtl sbb add adc mov cs inc int jne lcall push mov inc cmpsb xor jno enter movsb pop (bad) sahf push push jl into xchg sub add cmpxchg mov out xchg sbb test push sub dec jp into out std dec out adc mov adc je popa cmp xor add pop mov sbb lods bound xchg (bad) or inc dec mov out jno inc clc jns mov out xchg xor leave jne push out aad or or iret addl setae scas pop push inc fwait mov inc sub out sub or push mov push arpl ret in jb sahf fucomp movsb enterw mov dec out (bad) idivl xlat out ret mov out push mov xor jns shrl ficomp das int3 stos cmp jmp jb cmp mov aas xchg les inc sti stos loope xlat mov out scas push pop push inc bound lock push add iret call cltd out imul das jne movsb (bad) out mov or imul out loop and clc jg,pn and pop (bad) cmp lret cli scas cld fucomp mov mov loop loope push nop stc cwtl out arpl or mov or mov pop dec push insb pop xchg pop (bad) mov cmpsl ds leave mov push hlt (bad) (bad) stos push cli mov cmp leave adc pop imul dec and and addl push out push inc and out shll pop or pop and sbb and out test dec push inc mov and (bad) loopne adc out xchg aam pop js mov push push sbb mov (bad) out in lock lods mov aad add fbld pop or sbb (bad) pop and cmc pop outsb sbb mov cmp out mov mov or pusha insb pop ss (bad) jle push ja jp test out mov fistpll dec fsubp mov out push xor jno out inc pop stos add pop pop inc out bound adc pushf scas push xchg cmpl into aas nop hlt pop je insl mov repnz jbe xchg fnstcw cmc imul xchg call aaa xchg test inc mov push imul outsb out or daa out push lret aas pop outsl nop push je push mov clc mov add sub push xchg mov imul mov jbe jne adc loopne repz insb cld xchg incl test mov add and hlt pop subl (bad) insb adc fsubrp jl scas out scas je (bad) adc cs insb mov sbb mov in enter out pop cmp cltd jns push push arpl sub jb bound mov out mov cmpsl add jnp daa dec sub orl aaa stos and pop out scas mov insl pop mov loopne xchg xchg clc lahf out sub xor jmp jb dec fistp mov popf into insb push dec or fiaddl xchg cltd pop sub out adc pop adc dec jae out ret lods mov pop out dec adc xchg adc das out jg jp (bad) xor out and push jl and sbb xchg or push push repz jle ret mov cmpsl outsl jbe inc or xor xchg sti out clc fscale adcl movsl out (bad) (bad) jo inc add out out fdivp bound xor cmpsl mov out lods flds fbstp (bad) push mov and cpuid out stos movsl adc ja ret loopne,pn push loop movsb xor mov (bad) mov pop out pop cmc add ljmp (bad) out mov int push mov lret ret pop test mov in mov xor fmulp pop lds xchg mov xchg mov mov jo push (bad) cs jecxz inc out sub add push cmp jo mov push or lea out out push sub ja leave push push out lds (bad) dec pop dec out jo mov lods sbb or mov test mov jmp rclb pop iret push iret ss xor loop test adc out out or call enter push xlat pop stc test inc cld lock mov sbb lcall lods adc in cltd fwait out (bad) dec jbe mov sti pop jge loopne sbb sahf inc adc out inc shrb out mov mov scas (bad) pop iret inc cld cmc jo push mov out in adc sub dec lret subb lcall (bad) fs movsb out pop xchg mov pop ljmp adc sbb shlb cmp adc xchg add shr mov scas (bad) mov xor fwait (bad) call data16 bound push imul out pop pop add (bad) mov out loope mov push out pop adc and xchg lahf push lods inc cmpsb out xchg sbb adc sbb cmpsl lahf out stos fbstp dec cmp in pop out mov dec xchg pushf xchg mov jp fdiv (bad) sub out xchg enter cmpsl pop or or mov mov adc in mov adc sub daa (bad) sub out mov lea mov ss pop (bad) sbb adc out fsubr stc add ljmp addr16 rorl push jge daa flds bound cmp test mov and mov shrb pop into movsb pop js or loope xchg and xor pop out cmpsl ja (bad) stos mov popa into jmp xor retw outsl or je out push jl and cmp loope mov dec dec dec inc push clc ret out loopne and mov jbe adc adc fucomp xlat into lock test out jl (bad) (bad) das lret out cmp ja sti sub out bound out (bad) or and jecxz inc sub shrb popf (bad) ret in ljmp imul sub dec jp fs xlat dec call xor lods pop pop ja push repz out repnz jg cmpl pop std out push jne xor sbb (bad) dec mov in dec jb pmaxsw iret xor xchg push mov pushl jp push xchg test out (bad) pop push flds lods inc pop punpckldq fwait mov gs (bad) out shlb or loop shrl test jmp insb inc jno mov out xor pop sub or sub push pusha out sahf mov popf out and jmp sbb pop pushf push mov jp addr16 dec or xchg das lods loopne adc dec dec xchg jo push xchg out stos sbb dec xlat cmp ret in fisttpll push cmp fcompl xor dec sub or add mov jo out es mov (bad) fstpt xchg or scas out jne xor mov mov cli les lods push pop xchg icebp out in cmovp daa or fisttpl dec ljmp pushf mov dec xor sub pop and push stos scas and jge xchg xor stc iret enter mov xchg jge out arpl jo ds mov jle ret in adc adc int clc test out adc push in sarb inc xor out imul out test addr16 push mov out fsubrl clc out test mov addl out dec mov insl std arpl sbb push add gs out in inc in mov xchg mov fwait jo (bad) sub pop sbb sub outsb inc addr16 jmp bound add test jle test xor rcrl jns stos insl mov sbb stc dec lahf stos mov out adc mov add inc notl out pop jecxz test inc cmp outsl pop cmpsb ret and in out or int3 mov ret out sbb mov fwait loop sub xchg jg and mov fcompl pop ss pop mov out cwtl xchg dec pop orl rol sub cmp pushf jbe inc (bad) or cmp les or lea fsubrl out movsl sub imul in or mov outsl loop inc push ljmp xor ficoml add mov sbb or ss mov in mov and mov cld cmp pop mov out fistp jmp xor adc or idivl dec faddl insl xor std jl sub jb mov out jnp ja and pop loopne jae jo icebp sub cmpxchg cmp or adc cmp (bad) sti and inc sbb ds push lods out or fidivr arpl add out mov jnp push xchg dec pop out jns icebp or mov dec ret aam lcall (bad) jo out bound jl cmp mov in jecxz repz hlt out out js decb loope aaa rorb cmp xchg push adc sti aam inc sub in push cmpsl iret pop mov sbb addr16 sbb pop xchg jne inc daa mov lods cmp imul adc push dec pop movsb xchg in test xchg loopne ret out data16 push nop cmp fcomps imul push repz cmp addb inc out aad loopne imul mov (bad) xor leave jae adc sub jmp out lds jb out rcl (bad) loop xor clc add mov dec int3 mov jge mov mov lea push (bad) js pop fwait dec es mov out hlt dec mov test popf pop jmp stos shrb int3 (bad) aam push movsb jle cmp jae cmc or fsubr jecxz mov push ret cli inc (bad) push jae xchg std call (bad) ds lods int3 pop xchg jae dec fsubrp lea popa out mov shlb and pusha jbe scas push testl outsb dec ret mov jg movsb xor out ret and cmp out fst fiadd mov out into insl repz (bad) sbb out and cmp xchg fs (bad) cmp add jmp icebp mov out fwait add cwtl inc test loopne jae loop loope fcmovnb xchg and mov jp (bad) fiaddl fwait clc in mov out ret dec add jns out imul xor pop scas jae out push sub jnp call out or jle out adc mov add call iret push pop insb dec stc out mov xchg xchg dec out push arpl push out fildl icebp out add subb fiadd gs js mov jecxz jno ja aaa pop (bad) je stos movsb cmp jg cmp pop mov out sbb push stc aas decb js imul out fisubr test (bad) clc dec inc loopne arpl cwtl inc sbb push xchg cld addr16 mov movsb inc jne pop pop mov cli xlat pop lret ret popl cmp inc loop,pn out clc movsl cmc pop imul xchg loopne add jae pushf out es mov pop or and pop adc sti xchg inc and pop les mov (bad) xor push xchg jp,pt fist fwait stos ljmp (bad) in mov data16 outsb pop out jae mov adc (bad) std dec xor mov in ror inc test mov pop pop daa andb lea pop ret adc stc or out pop jb mov loop pushf fsts xchg imul xor je mul out out and xchg or cmc or out adc rcrl push jnp mov out cmp add fucomip or imul inc stos push mov jo inc out jmp xchg (bad) out fcoms xlat outsl ret out inc loopne mov sarl pop out sbb int3 lea out xor in jne pop cs jp xlat adc out test mov out incl cmp imul mov pop xchg imul push pusha testb push outsb lahf mov mov (bad) xchg out and cmp (bad) pop out roll inc ljmp mov out pop sti call popa mov cmp add or in pop ljmp out xor push pop xchg xor push jmp sub pop xchg push push out fimull mov (bad) out mov adc cmp pop nop cmp dec pop call lahf (bad) and out mov int dec add loop or inc out or lods lock daa cmpsb push lahf cmp add out adc push mov clc dec (bad) ds cmp test pop in add loop add xor pop ds cmpsl inc out jg scas (bad) pandn pop (bad) stos (bad) aas (bad) sub insb push loope xchg pop cwtl pop into data16 mov in pop pop test daa mov dec imul mov inc imul fiaddl xchg out push or dec jnp bound cmp cmpsb test out or daa mov fs (bad) sub cmp sub pop lret leave mov clc cmpsl sbb jbe push out push lods pop in cmp and jecxz pop out add in and mov jo in bound add jp sbb out pop cli xchg adc cld rol mov ret (bad) or add out or adc add mov sbb lods fdivrp out sub repz mov cmpl incb dec out add rclb insl inc ljmp loopne repnz das ret sub cld in in lods aas mov cltd jl pop xlat jg (bad) sti cmpsb out mov (bad) nop mov outsl xor inc aaa movsl fstp imul outsb dec lock xor popa lock clc imul cmp (bad) sbb pop push (bad) je jp cmp iret das dec scas jmp dec aam and ljmp adc fldz adc cwtl orl in rcr add aas sbb out inc xchg xor dec push flds jnp jl pusha int push popa imul lret push out xor sbb fwait lea out aam mov sahf add stc out test add sti xor lret rorl int out stc shrb out icebp mov rcrl in pop aad popa jns add out sahf cs or inc mov cltd fistpl aam pop pusha pop mov (bad) icebp jne xchg arpl ja cwtl jnp out or pusha inc loope out pushf scas (bad) outsl mov mov jne ljmp out dec cld sbb cmp fsub cmp sidtl in cmp out icebp jb int3 ds fidivrl out lods or dec (bad) sbb sub aaa xlat out adc mov lods sub gs out imul jbe sahf dec iret pop adc jecxz (bad) push test push pop shr bound cs xchg fpatan sbb lods jl and inc out jnp sbb fs out es xchg xchg mov and test loopne movsb lods loop sahf pop fcomps cs out and jo adc jmp mov or xchg ljmp and shlb xchg out sub into dec shrb (bad) fbld mov sbb cld insb jecxz out mov sti lods mov shlb xor jle ret fcmove out or cwtl xchg adc jg shrb mov gs and pop orb push jne nop sbb addr16 push test xchg sbb out arpl lods and out in leave in fcmovnbe loop out inc fwait push cmp sub out adc gs punpcklbw xchg lret out fs lds push lcall xchg call and jo sbb mov ret adc (bad) fbstp push out das xor dec hlt nop (bad) jecxz daa dec stos shll jp addr16 int3 mov lea out cltd (bad) sub push mov jns mov adc push pusha call or test aas cs jecxz cmpsb lods lock dec decb ss orl cmp imul pushl or aaa sbb leave out dec mov test out roll sbb and jno inc mov jae shr dec push clc pop add lock mov mov iret ficom jecxz jmp clc imul adc mov out cld or fbstp (bad) hlt mov mov sub xchg sbb pusha xor jb pop out cmpsb sarb jmp je mov (bad) out lea mov out xchg shlb std pop sub adc shr or jne jle out push mov outsl mov lods je fs push out or cmp out mov mov adc pop jle mov outsb xchg dec bound bound cs scas sahf imul imul pop (bad) rorl sbb sbb jecxz,pt (bad) lods insb scas sbb sbb lahf xor xchg inc subl jno sbb mov or (bad) cwtd mov insb fldcw das call xor out inc push add scas cwtl sarl adc and ljmp shrb adc test in mov outsb mov push jnp arpl shlb adc test aas dec cmc out or sahf jns mov mov mov shrb gs sbb fcmove cli sbb push mov or insl ljmp adc cwtl pop or sbb out das push mov xchg mov mov and shlb push out insl fldenv scas or sarb out inc rcl (bad) and orb daa ficoml mov pop aaa inc jge in mov out movsl jmp adc pop lods (bad) sbb iret and pop xchg outsl aam insb mov mov lret push (bad) cmp push sub jge jae sbb lods out test pop jmp popa inc cs sbb iret xchg cmp adc daa jno lret inc mov test out dec mov fiadd xchg loopne pop and fs xchg ja cmp out ret mov daa push sbb cli out dec test enter jle loopne nop jmp bound push (bad) fildll mov in add inc jl mov pop pusha lahf jo adc ja repnz adc pop hlt mov loop push (bad) icebp xchg out call ror aas sub addb sbbl out push and in fldt into std cs in pop mov out mov xor out push dec out pop jo add (bad) addr16 (bad) jae clc sbb scas fst xchg mov jp dec inc mov sbbl lcall push pop out aas jl test in jmp push stos xchg sbb pop movsb loope ljmp push out jns test je insb push xchg fstpl dec add (bad) (bad) inc lock cld pop in popa iret mov dec aas sbb jno neg lcall insb (bad) sbb (bad) lahf outsb push out lret sub adc dec out rcr jge outsl lods (bad) cmpsb or sub loopne mov xchg out xor pushl dec cltd fwait iret fcomps push lock shl pop iret out (bad) cmp adc dec (bad) xchg out test xor mov sbb fisub jbe in adc cmp pop or jae or xchg or mov push loope pushf xchg out cmp sbb pop and mov scas cmpsl xor sahf cmp push (bad) jb mov mov arpl push pop mov jg outsl addr16 popf sub push mov insl lock sti mov ss out (bad) dec and push push pop idivb push cmc sbb insl loopne adc out aaa (bad) push cmp sub xchg dec cmp lods inc loop stos fidivrl out imul adc push sti loope bound and mov idiv mov mov pop jg shr cmp out aas jbe in mov sbb xchg xor es (bad) insl fs pop arpl data16 out int or mov jg mov shrl mov ja pop xchg sbb in cmc repz push and xorl aad xchg jbe out pop js dec cli loopne and sub out pop popa push mov push stos out inc push jmp mov shrb mov xchg sub pop adc inc lahf jae lret jno mov push push cli pop mov mov loop pop clc out popf sub les fcmovb arpl incb loop xor in or push cs sub cltd out push push out (bad) sti sarb fsubrs jp test cmpsb jbe ljmp out (bad) in mov out addl adc (bad) pop sti adc and repnz fldl mov out mov or pop xchg and cld mul inc dec push sub out js int3 out (bad) push push mov mov in out dec stos fnstsw sub jbe add inc enter scas mov out rcl ss (bad) pop test cmc ds jp out lock nop call ficomp add cmp mov adc adc sbb (bad) in or (bad) stos or inc out jo mov sarl push aas imul out xor mov dec xchg ret out pop imul or lcall sbb ret sbb out inc inc jnp jp mov mov ret pop out sbb mov pop inc shlb dec cmpsb (bad) pop ja sbb je loop xchg lret out lods out jbe shrl cmp test subl mov mov addr16 cmpsb cld adc movsl out sbb lret jle scas test out inc cmp outsb mov pop scas dec arpl mov dec iret ja push pop in push std ss fild fcoml lret pop pop fwait sbb bound test jmp ds cmp lea xchg xor out push add inc inc and out cmp out adc push aas out outsl leave into in out movsl dec cmpsb repnz and xchg rol push out imul into mov and push fbld imul sahf and adc addr16 out push add mov fistl fmulp stos add addr16 nop test lcall dec out cli pop shrb stc jmp add out js xchg jno out mov pop (bad) out das ja dec imul pushf daa pop in iret shrb (bad) xchg out test out lods push pop loopne dec xor loop xor out inc jo arpl outsl mov or mov jae sti (bad) popa dec cmc jecxz fwait cwtl push or out aam push lcall mov imul sbb cli fmull (bad) (bad) sub fnstcw jge movsl lret push sub test add test std adc ja loop pop popf into cltd pop int sub in in or gs xchg imul daa lea xchg cmp popf mov out icebp dec lods xor out decl adc dec insb pop aas lret outsl out pop push aad push xchg lcall stos outsb sbb fucomp enter jns mov xor movsl mov push inc lret pop iret leave out fdivrl out mov (bad) sti fistp pop push aam vmread push sub add cltd xor daa xor in lahf mov fldl xchg mov inc adc pop outsl adc mov inc pop out add movsb adc jns out and hlt and stos jo imul mov int3 hlt out mov stc shrl out pop aad sbb cwtl xchg pop pop bnd push ss in and cmpsb inc call cmp dec push nop xchg jne imul pop push ja out mov hlt out frstor or jno sub xchg add out ret pop lock pop or xor pop aam cmc xchg out or push xchg mov (bad) cmp mov xor je add sbb mov adc sub int out cmp shlb int add or iret ret dec mov imul shr xor adc fs mov mov out mov xor mov sbb push std loope sbb inc adc mov mov out adc loop (bad) out ret mov sub aam enter lods sub call mov adc inc iret dec xchg xor out push sub cmp in and mov xor add xchg pop jle mov sarb popa pcmpgtd dec stc out sub fisubrl cli out outsb lods cmp andl out popf jno cmp mov aad pop or or out or mov fnstcw insb out dec lock mov insl add pop adc inc out adc jg mov iret mov out or mov loopne jle xchg and lahf sarb out test or mov enter imul and in std out cwtl out pushl add insl enter popf popa mov fstl mov xchg (bad) in out pop dec xchg xor jno cwtl mov imul out sub xor pop mov mov out js or xchg mov (bad) inc sbb jae jge push cmp sbb jns inc out movsb test les push bound (bad) mov lahf sub rcll jnp add inc dec xchg and xchg out fdivr fnstenv or sti popa aas (bad) inc cmp test lret out sbb pop xor sti out mov pop dec lret out sbb into sahf mov inc sbb out sub fcoms or les outsl ss clc out (bad) out xchg loop pop (bad) jg mov inc mov out pmaxub push mov ljmp mov scas jnp (bad) cltd sbb lock out inc fild mov out lea sub xor pop jne insb div sub ja jns mov (bad) lret sub jge jmp out out xor adc and jp out scas call iret (bad) sbb das out mov outsl jae push or pushf pop lahf sub and out fistp xor iret adc lds insb sub mov out (bad) push jns add movsb sbb and adc or clc out xchg mov xor (bad) push pop xchg sahf scas fsubrl hlt pop push jmp fwait iret pop pushf out mov add cltd lods rcrb call fstpl xor mov push xchg loopne jno int3 into loop pop imul out mov fidivr push push cli iret in sub jne bound add pop lods mov clc mov mov pop call sub popf inc out adc add ss lods jecxz xchg and jns add out xlat jne je shrb mov (bad) jae and push fmull insl scas out sbb adc out xchg mov repnz out and rcrb out jmp out dec shr cmp or scas mov mov add out jo (bad) out mull or mov iret arpl out test push daa mov or jbe adc inc ret pop sbb out (bad) aad negb lods fwait mov add push and jl jne test or and test das pop out inc nop add out movsl repz es sub outsb xchg xor out in inc cmpsb adc mov incb stos lods inc adc loope out (bad) stc ficomp out push sub fistl adc test stos adc aaa enter inc sub xchg stc pop idivb sub mov jle fisttp fsubrp pop xor data16 mov sarb mov lret jno mov out adc push cmp pop inc mov xchg xchg fidivr out stc push pop cmp cmp loop enter add inc (bad) and paddw sbb jno outsb andl frstpm(287 iret dec pop fs ret fwait mov outsl ror add aaa imul sub cmp and mov add pop out aam mov lods dec sbb push out push adc mov scas jg scas lods cmp pop mov nop call int (bad) out loopne pop mov test out enter sbb and mov in out sahf fcomi bound lret insl out add xchg jp push out movsl xchg xchg out sbb push adc daa bound or lock dec push out lret sti xchg popf (bad) cwtl (bad) daa jp mov and push push fcomps lods pop xor add out jne cmc push sbb pop loopne lods pop inc out jo jg out push cmp out jae push cmc lods (bad) lea ljmp pop das jae sub fsub add out adc pop mov shrb mov xor pop adc loope or mov and stos cmp mov popa ret out mov cmpsb xchg roll in enter ret mov add out mov jne (bad) out fist adc and (bad) adc mov inc add cmp std pop xor sti xlat (bad) ljmp enter add outsb jge stos dec insb out arpl mov pop xchg adc ljmp (bad) jno test out or out jl cli cmp mov pop out pop nop jle adcl lcall aad fsubr add (bad) sahf hlt cmp sarb xor test cltd push jns cs or mov outsl pop pop xchg int pop and dec arpl cmp movsb mov add in pop je (bad) jp out popa adc sub sub dec xchg mov out dec call icebp out dec or xchg mov push out cmp or ds adc xor sub out push sbb fwait jg lock ljmp or ret enter dec out lcall loop pop mov ret adc cwtl xor xchg (bad) cmpsb mov out shll aad cwtl call loop and sub dec leave aaa adc pusha mov fisttpll xchg push xchg push pushf jnp (bad) xor sbb jne cs aas enter scas (bad) push rol notb out mov fcoms (bad) and xchg sub inc ljmp cmpsb jl xlat push (bad) loop add or sub out xchg lods in and mov push mov fs out mov repnz out hlt cld sbb and mov out jmp mov pop out sti dec test iret (bad) je mov (bad) data16 pop (bad) push push lods jecxz pop loope push inc sub insb sbb mov pop xchg cmc icebp sub bound xchg push out inc sbb add aaa sbbl cs out mov dec out jns xor and out xchg (bad) and push jnp sbb adc mov out aaa jno clc xor dec scas out outsb sub sub xchg xchg push out (bad) in call mov setg pop subl pop nop mov dec out aad mov sub mov adc loopne les cmp call pop out das pop mov mov dec sbb cwtl sbbl push adc enter (bad) out xchg out sahf in or mov sub ret lcall cmp stos inc out rcll ret out js daa aas mov push jno cs and jmp aas out xlat pop or imul dec jb pop rorb lea repz sub pop insl dec out xchg jle adc mov clc and adc jo xor popf inc ljmp popa mov imul pop jle jp fsubrp inc sbb ret push out mov imul ljmp out mov movsl push je cmp jmp jno mov (bad) and out xchg jns add mov xchg es fcmovne loop hlt jbe jmp cmp lods jae mov loope imul in mov cmpsl ds out and aas cmp jno cmp (bad) out loope aam sahf xchg pop shll inc int3 xor inc pop iret std lret pushf popa ljmp xchg (bad) iret scas mov out or mov test pop xchg jo out (bad) fnclex xchg scas int adc out push lea test mov gs mov or sahf cwtl add call popf lcall ljmp fs outsb dec cwtl (bad) ljmp sub cmc out das shlb xchg cs fs rorb lahf aam xchg in fbld push out insl add js mov pop add call paddd data16 lock or sbbl sub lods ret sub fwait adc jl clc jb xchg sahf out cmp repnz dec and data16 or popa adc dec out fist push cmp test popf ds insl iret push loopne pusha and xor jae ljmp out adc ss add shr cmp arpl adc fdivrs pushf push mov xchg mov adc xchg xor push push out insl or lcall pop out jnp adcl (bad) jb in mov aam decb (bad) xor movd je fs sub adc and enter or pushf int call add and sti andl out out out lods (bad) adc out lea jns mov loopne jecxz xchg out call jmp push xchg inc adc stos (bad) fsubp ljmp xor cwtl out loop dec popf jbe out lock (bad) (bad) sbb mov shlb les out dec insl fbstp or fwait mov xchg aam rcl adc push shr roll mov scas xchg (bad) arpl cmp jg and sub mov push sub int3 in inc insl pushf dec xchg mov in mov aaa fsubr nop out sbb repnz mov xor mov stos cwtl lods inc mov (bad) nop loopne push (bad) push push jg fstpl cmpb test fucomi pop dec cmp mov in and lret out xlat and popa out pop dec out xor cli xor movsb out xor mov int sbb sahf inc cmp mov inc push icebp jmp jl sub add (bad) decb and add ret out or jmp sbb pop push xchg (bad) xor in sbb pop out mov jae push dec push out je test out xchg pop xchg out cmpsb rolb ret inc pusha fwait addr16 inc dec out out (bad) mov cvtps2pi pop (bad) xor test sti add mov loop fucomi pop push pop mov insl sub sbb mov xor mov xor rol xchg fcompl in ficomp inc add jecxz push cwtl out or shll mov popf dec in push daa mov pop mov jecxz insb (bad) loope dec movl cmp cs add hlt sbbl fwait out sbb out sbb sub jae jbe loop out cld jmp mov mov jg push aaa je mov cmp mov loopne shll loop scas mov cmpsb xor rcll jge xlat pop sub jae or pop cld pop jmp mov mov ljmp lods fcmovnb (bad) xlat jmp out dec mov push ds fucomp push addl pop sbb out cmpsb out test pop fwait out xlat in mov mov or ljmp xchg bound inc (bad) das out inc gs cmpsb cli xchg jae lret call test in pop aaa mov icebp xchg sbbl stos mov (bad) jg sbb add cmp pop lcall out pop cmc lock gs and mov fldenv dec ds (bad) jne les scas and std and (bad) gs int cltd pop ret movsb out add popf repz push arpl xorl mov pop inc leave fsub sub (bad) rcrl xor je rorb jmp loopne jg out push or test inc push das out sub cmc les lods cmp lcall pop out ds dec enter xchg out cltd fs adcl rorb out inc jbe jno xlat lds out mov insb sub sarb pusha ljmp out test sub inc out arpl pop xchg subb outsb add xor jnp or mov lahf sbb fstl pop call ja sub out aaa (bad) das pop scas into popf rcr mov jg push test pop js push sbb cld add pop mov lock insl out loopne dec cmpb inc ror fs (bad) loop inc cmpsb pop adc and mov loop icebp into or (bad) mov int out divl xor pop dec and mov jae sbb cmp out sub or out (bad) (bad) in cs lret pop aad xor inc (bad) cltd out mov (bad) lock dec in out pop mov jbe xchg mov pop lds jne add clc cmpsl add ds sub cwtl xor xor insb mov xchg frstor in xchg mov sbb fucomip cmc loop dec dec mov mov les js out hlt inc f2xm1 cwtl aas imul dec loopne mov loop push mov mov in cmp mov or cmp lret sbb ss aas ja daa cmp jo (bad) lahf call fwait lea pop cmp bound call push out mov in cmp and loop je (bad) jne push jb or pop cld out sub cmp sbb out rorb imul sahf out fcmovu fs insb cmp dec out push notl stc outsb cli bswap push push daa push or int wrmsr xlat (bad) xchg ss cmpsl imulb out imul mov xchg rolb mov and imul mov dec out xor mov out (bad) jmp add push call test sarl inc or jbe wbinvd mov push fsts lods cs icebp repnz and mov movsb outsl add rcr xchg push insl pop call jo jmp ljmp lcall stos xchg decb sub jl ds (bad) push out ret nop mov out cmp test xchg adc clc out (bad) das xchg mov lds ja out xchg inc jb dec iret or mov mov lods insl adc fs std out sub pop pop fucomi jns mov jae popa inc cmpsb mov clc sub daa pop ljmp sub cmp or add cs lahf mov sub pop pushf test jns add divb daa repz xchg stos pop mov loop popf js (bad) icebp (bad) fadds shrb push jo pop insb in (bad) data16 mov bound lods out sbb pop cmpsl out imul insb cmp or popf mov mov cmp inc loopne sub (bad) lret adc push out inc jp aas ds or faddl in xchg lahf fs xchg cmp mov or lock jge sysret call in adc mov ficompl out adc (bad) fdivs or push insl out inc mov ret cmp lahf jp push nop out lock insl jno push jmp fwait out inc ret inc sbb pop jg mov mov xor dec push (bad) out mov mov cmp idivb aas lahf scas lock pop push or insl out out test jl lahf pop push mov fsub sbb aam ss test mulb imul mov mov mov imul or sub add or out aas push xchg fidivrl mov insb jmp cmpsb pop incb stc pop lahf push outsb sbb rorb mov xor mull sarb pop adc ljmp neg lahf xlat xchg in and in adc add jg mov cmp pop test insl out hlt iret jo loope jns out mov mov out sti iret fdivl test pop addr16 decb out mov pop push (bad) mov int3 dec and lea fadd push dec mov int out sbb jo dec and out lea cmp out in gs clc lret (bad) jmp (bad) out into pop adc das (bad) je sub cltd or iret out and cmc lcall mul (bad) cmp xchg aam mov repnz popf dec sub das add adc fs test loope (bad) xor repnz inc sub (bad) icebp in mov shrl loop call out push jp jle pop adc dec xor cmc clc loope push sbb jno xor cli loop idivb pusha jecxz mov sub push jp or es dec inc adc rorb mov data16 ljmp xchg call fistpll mov cmp xor iret push test lock lahf push jg fwait mov out push sbb pop ljmp inc cmc pop jb cmpl push loope jns push pop mov stos mul sub out mov scas jecxz gs mov test ss out lcall dec iret cwtl sub xchg inc push cmp out adc punpckhbw (bad) jne je lahf mov inc and incb cmpsb in into xlat out stos rcl dec sbb loopne out fwait xor aam push xor out and and popa scas cmp xchg adc or jl push outsl daa test fcomps adc out jp (bad) cs adc and mov cmp dec xchg outsb movsb js sub je jmp das cmp add push out push daa dec push out sbb sub cmpsb sti add inc gs jl push mov dec cmp adc lret icebp std loope push out jl dec jnp sbb inc out mov mov leave out xchg jo add fwait sarb iret cmp fist ljmp and out pop mov lcall jp (bad) mov out test leave and or lret mov mov out aad push leave gs fucomp pop add out hlt sarb push push mov (bad) popa add (bad) fucomi sti int push lods xlat je out mov loope cmp sahf aam hlt cmc pop xchg mov push xchg out jns shrb push cs (bad) (bad) xor (bad) pop push (bad) notl mov out das out xchg in cmp jl fidivr pop mov rorb out (bad) int push xchg clc xchg cli dec popf nopl ljmp jno in pop lea mov je out daa xlat inc imul cmc cmp stos lea popf cmp pop push xor xchg outsb mov iret sub inc out das fnsave and (bad) test pop cs cmc popa aaa adc into call faddl arpl scas adc inc mov aaa xchg inc inc mov dec jge (bad) rcl and xor fs aas xor insb jmp ret js dec repnz cmc imul loopne mov dec stc adc xlat (bad) xor jo jp and mov adc outsl out dec les add sbb inc out int add decb rcr in or jl (bad) movsb faddl in aas outsl arpl insl loopne popf adc mov daa inc das bound and ss negl in addr16 sbb push mov out push shlb cs out pop push mov insb stc fwait push pop (bad) pop sbb icebp jmp (bad) push mov lret loopne push xor lcall cs lds icebp mov dec into adc inc and inc stos dec insl inc jmp out stc cmpsb push add push (bad) mov xor je sub mov pop outsb (bad) enter push sub pop dec daa sbb push lock inc out stos mov sti std pop je out in add pop adc out mov enter cmpsl cmp xchg or (bad) imul cwtl xchg dec add fnstcw dec out mov jp jae outsb es cld push lahf inc jmp rcr push rcrb ds dec push xor aaa mov out bound aam out outsb (bad) pop inc sub adc xchg daa in into jns fisttp rol js dec out fiaddl xchg (bad) sbb subl test adc aaa test cmp inc ret pop out lods (bad) add (bad) jae repnz jle and mov (bad) cmpsl loop dec repnz cmp jns sti test mov xor push cmp xchg out (bad) insb pop aam outsb bound or pop ss push jmp xchg dec push out mov rclb mov loop dec xlat iret scas push mov xchg subb shr sahf out clc ret (bad) sub adc and sbb adc or or leave (bad) cmpsb out push or jns loope or cli ret fsubs aam test out fidivr cld push dec out push mov or incb mov out jecxz or testl aad mov fistl mov (bad) ljmp mov lahf movsl mov insb loop out and js repz cvtdq2ps test pop loop pop sbb shr add aaa cmp cmp out movq hlt bound out pop idivb cwtl and imul xchg adc outsl andb ds in out xchg sub out cwtl push std jge push imul mov rcl leave (bad) push in inc xchg out xor in imulb out cmp std shr sarb or insl add dec mov pop lret adc in cs out fisubr xor fcom or aas lock mov cmp xchg jo cld clc pop mov in cmp es ffree cwtl loop or les sub stos stc xchg mov xchg xchg and out pop or push jecxz and out jbe pop inc outsl mov push jno push insb sbb gs push out loop pop fstl pop cmp imul mov or xchg xor in lret js jp mov out loopne addb stc xor out rcr test out mov sbb mov add in lcall and adc xor sbb sbb rolb shr mov or pop lcall cmp or std out cmp lods xchg cmp popf jb adc out sar popa sbb adc out insl iret ljmp adc inc and cmp nop dec jnp xchg push xor cmp out fsubrs mov inc push jnp add mov sbb (bad) mov (bad) call pusha adc cltd leave scas dec pop shrl mov insl pop sahf push jns push inc jb out pop bound mov or aaa fs cs xor sahf sbb ss pop mov sub loopne xchg jmp adc incb (bad) sub aas out icebp sbb mov sub pop (bad) jl xor inc scas push outsl (bad) xlat out inc iret test out mov mov mov call xchg outsb cmp insl mov out pop push jne out cmpsl aaa jb into std push int adcl sbb out add mov xor or inc sbbb test xor add (bad) ss inc pop fsts daa out sub mov push and dec sbb scas lea push out enter jecxz sub out (bad) lcall or not and adc xor xchg pop pop out fistpll rclb in dec cwtl out aad (bad) cmc and mov push cmpsb int3 daa sbb test out or mov jmp xchg (bad) fildll shrb scas xchg call cs js xchg xchg incl fisttpll and int3 loopne dec sub subb mov (bad) mov shl jo mov jns loopne in pop xor sub sarb in sbb mov jns movups sti in pop sbb mov imul pop inc sub inc rep rclb sub dec out arpl out mov cltd sahf ss cmp xor push inc pop out lock adc jle sub js (bad) lds xor bnd jg sbb sub daa pop lahf add push fmuls adc aad adc fistp dec xchg test (bad) out pop push and es xchg test in (bad) hlt sahf adc iret (bad) pop or mov out rcr pushf lods mov das out or sahf jns or out dec dec or pop out cmp fidivr loop sub imul mov lds imul pop sbb mov jp mov mov sub mov popa mov jno cs cltd mov xchg out leave and fwait cwtl nop loopne out push xlat xchg mov and (bad) jmp clc add loop es out pop lds or mov scas inc out (bad) sub jl loopne insl jnp outsl xor dec call dec sysexit xor movsl loope xlat jle imul dec jmp jbe out pop clc outsb add in out nop shrl push loop mov fistpll cmp dec cli in (bad) sub pop scas mov push popf shll adc push jno iret addr16 mov out jle (bad) push cmp out and cmpsl gs shrb mov pusha es movsb out fwait sahf divl add jmp dec jmp nop out hlt jmp jg out or lret xchg out cmp jg clc lock (bad) cmpsb xor push (bad) mov daa movsl add or xor add (bad) mov pop add (bad) dec cmp mov cmpsl mov loopne iret sbb sti mov push xchg sub push adc push (bad) jne push out xorl fdivrs mov cld in mov test (bad) int shr jno mov jne sbb addl cli out sbb mov incb je mov jae into outsb fs cld mov or fild adcl sarb cmpsl inc ds dec mov clc and imull out outsl lock call (bad) jle pop push jno popf insl sbb cmc cltd push xchg lods jb mov mov out fmuls (bad) cmc shlb push adc addr16 das sbb xlat xchg sbb out add imul mov add jno mov out push clc sbb call rcl (bad) ss jnp adc aas jge jg fildll pop lock enter loopne dec mul mov fidivr test jmp adc popa imul mov pop lea or sbb addr16 jp scas ret pop into push insl rorl pop out push popf and or cmp mov pop loop cwtl cmp pmaxsw adc sub popa pop or test or push add les in mov pop mov out mov lea ljmp out insl pop out lock fdivr mov fwait pop jo inc rol pop insl mov arpl movsb pop or push xchg fisubr call push cmpsb cmp push cmpsl pop divb icebp popf sbb out inc mov cmp dec push in rol xchg cmp sub mov pop mov (bad) adc mov mov jge movsb out push lods push inc sbb icebp mov (bad) xlat mov sti out mov out outsl out xchg xor xor pushf pop out sti movl out ss cs pop fdivs mov cmpsb mov out push icebp imul ss jbe out jmp lret out jno push bound pop insl pop test daa stos outsl fwait out enter insb outsb repz push (bad) icebp mov aam iret xchg xchg cwtl dec in out xor mov and xor testb (bad) in mov daa mov cmpsb sbb in xchg push sub jno dec dec ret lea js xchg xchg push inc xor pop mov and in gs jmp out in mov rdtsc roll sbb xchg loop das fnstenv shll out cmp in out mov cli mov jne inc lcall lret out lock je rolb push dec fisub cmp (bad) mov stc adc dec scas call xor lahf hlt pushf ds push cmp cmpsb or inc les push out ret cmp aaa out jmp mov sti out sbb cmpsb imul in and or xchg adc jo sub fsubr fildl data16 ljmp xor inc pop incb push xchg sub lahf cs or (bad) out push jg test push repnz jmp sub (bad) aas ret aaa push shrl and pop ja jge xchg add pop pusha adc and ds jbe cmp and lret ja sbb (bad) jle mov xor in leave jno push or xchg insl sahf and in mov push sti sub (bad) out xor adc mov xchg ja or out mov mov push pop out (bad) cs daa movsb jge out insl or dec (bad) dec mov jns fstp in jle sbb push xchg bound sub push aaa out inc push xchg sub jecxz rorb add jle sbb in bound jae cwtl insl fimul pop mov sbb out out pop xchg inc pop dec xchg mov in sub dec add sub xor inc mov sbb push in test out in dec sub ret das mov lods xor loopne ljmp xchg stos jg dec stos daa out inc mov jb test xchg cwtl jo enter jg aas fadd pop push fwait and cmc xor imul out jne sub subb pop fwait into mov call mov cli pop add lahf jnp xchg scas out sbb xor adc stc bound aad xchg stos xor inc lret xchg cmpsl xlat pop pop adc lcall mov inc into or fwait pop loopne cli push out mov jb dec out clc adc mov stos out (bad) in dec call out rol iret fsubs cld sub daa mov lds lea rcrb mov out sti js imul fwait loop xor mov dec enter aas jne xchg inc out and aad jg or mov fistl xor mov stos mov je adc pop jae dec and push daa pop stc push push fwait push int3 jg out out pop fmull (bad) jne out loop mov out mov add push out push sub and xchg or and clc sub jne stos loope loopne addr16 in (bad) out or mov lock repz out popf daa out enter or cmp out les out pushf (bad) rcl adc push (bad) jle out aad mov cltd push call mov repz imul and mov nop aaa push jmp pop adc out pusha and (bad) pop lods sub shrl ret jmp aaa out or ljmp jbe xabort lahf mov stos mov sbb dec mov int3 aad xor mov out jl movsb sub in adc mov pop fistl rcll insb (bad) fmull out and adc out or repnz imul arpl lahf out out inc pop inc push in jnp rcrl loope rcrb ss out ja cltd mov cmp lods rol (bad) pop cwtl out sub dec xor imull (bad) es in out xchg xchg dec sub out mov and jge stc ret out lods sbb push out add out bound imul xor sbb jge fstpl out lock adcb xor arpl cmp inc or and xchg insl (bad) sahf or mov cltd fiadd adc das imul xlat loop or (bad) (bad) pop inc mov es out xchg hlt mov in call jmp es push jbe mov cmp ljmp fwait sbbl jg test out sti adc mov into or out inc fcoms inc ljmp mov fistl bound xlat mov out les or mov fisttpll pop cmpsl fldt mov shrl or xchg mov mov es out cld adc and out jp gs in imul mov push xchg into sub lods int3 (bad) repz cltd loop aam pop in pushf aaa push hlt in jmp pop mov jl loop add push or cmpsl out (bad) adc ja ss add (bad) addr16 cs out jb dec push cmp je pop mov cwtl out out stc aam inc or and out cmp bound iret xchg sub and add inc aaa jb dec mov imul es bound out inc mov dec push xor jle bound rorl (bad) test xor lret pop dec (bad) int3 jnp addr16 pop lret xchg imul cmpsb xchg pop jb cs out idivl push insb test push out scas es (bad) jle jge (bad) in rep inc outsb xchg (bad) push clflush pop addr16 sahf lds xor cli call (bad) out int pop sbb das xlat movsl xchg out out mov mov xchg out or ss lods insl out jmp pop and out ljmp out xor mov xor add loopne jmp pop pushf rorb pop inc gs add sub incb sub fwait in cs out jns mull nop sub inc enter outsb scas repz es test in and pop or mov and out adc jl cwtl mov out lds mov jo insl jle test mov mov mov out nop shrl add xor pop lret (bad) bnd out pop mov pop jnp (bad) stos (bad) push mov orl fcoms pop pop in mov out fbstp cmc mov push ds jp sbb insl adc fwait sub or (bad) mov cld in ja cwtl xchg out inc cmpsl and fildl out gs xor sbb fiadd into push mov clc out dec dec arpl adc mov cmpsb inc (bad) adc popa out aad add inc jae cmp das and xchg shr jle aam loopne push or lret inc negb mov into lahf cltd xchg int sub push (bad) aas ret out sub push into out bound adc movsl lcall push repz fimul mov mov and or orb mov mov shrb xchg sahf add mov xchg adc les jb lcall mov pop gs sub push sub mov cltd sarb adcl out dec lret sbbb out xor xchg (bad) clc out pop dec push mov out mov cltd and out mov leave sub daa cld outsl push adc out test call mov xchg inc push outsl out cmc add push push pop scas jge dec sbb pop out out inc daa jle enter loopne in push add jmp pop adc stc icebp pop hlt mov fmull (bad) scas pop sub std mov or out int pushf (bad) (bad) out mov push outsb out xor cmp pop int xchg mov sbb loop pop ja out jnp lods stos cmp out in subl dec fsubr cmp push mov out adc ret std jmp and pop sahf ljmp jne cmp jno iret out imul pop fistp inc cmc je mov sbb push sub out mov and inc mov rclb insb out sbb hlt ja or sbb out lret insb iret (bad) lret bound cmpsl (bad) dec (bad) jns loopne bound orl aas mov (bad) imul xor nop jo or ds or jae out push jp das lret mov adc push addr16 push out idivb add fwait out ret in (bad) out mov je test das mov out xchg insb xchg xchg out xor mov dec sbb out in xchg out hlt and repz push inc outsb out imul dec or mov jp repz jnp xlat pusha jle adc cmp inc test mov out sbb loop mov sub push outsl mov insb sbb ret sub subb movsb xchg mov out iret pop push fucomi fcompl push sbb mov out insb bound out rcll out jp stc mov dec imul cmpsl xchg test out inc jne pop and cltd mov pop inc in repnz push sarb ss fwait cmpsl int3 inc out outsb cwtl dec adc mov out in outsl push es xchg or lods push xchg call xor test mov mov out mov push lock jae addr16 dec pop mov xchg aam mov out movsb sub popf fsubs xchg out sbb outsb nop mov jne ljmp pop jl insl sbb push and push std lock add stc popf jmp testb movsl out sahf xor push pop out icebp sti std fimul and or das es out mov (bad) or or jg mov cli out jnp,pn add jmp frstor (bad) out dec mov out (bad) cmovp xor ljmp adc hlt nop mov sbb inc push (bad) out aaa iret pop addr16 dec fsts fs push out mov popa cld sub call adc (bad) out xor mov push mov mov and out jns arpl into mov sub sub or adc add cmp ljmp out stos cmpsb shlb jle xchg xor out or mov out or adc dec dec pmaxsw aas mov stos xor addr16 mov test in jno pop jecxz add xor mov cmp aaa sub mov ret pusha out enter test pop pop mul iret outsl stc out push scas push mov out and xor mov scas int3 out insl add fs test push and mov das lock inc movsb dec xor sbb sbb in ja mov push pop sbb shrb jo scas jp std imul out sahf mov movsl (bad) (bad) fdivrs jle fidivl lods xchg popa out xchg lcall out (bad) int3 lods push sub mov pop out xchg add popl pop or jmp inc stc xor jl jge,pt push arpl pop loopne sub in in mov mov out mov dec inc ljmp lods mov movsb fimul mov out or and lock imul dec pushf test mov push out stos mov push dec sub and fistp dec adc sbb (bad) pushf sbb dec xchg (bad) mov cmp in out pop stos out jb aas movaps xchg data16 and in (bad) ss jbe std ret fstpt loopne cmp (bad) pop inc mov xchg jae sbb imul outsb xor lds lods add adc stos ja lahf jl add ffreep pop push cmpsb add jmp xchg xor in out xchg pop (bad) pop cmp lahf in stos sub or in fucomi xor dec sbbl out mov sarb out pop or imul inc (bad) out mov mov leave cmp test out jmp arpl jbe xor or loopne leave pop push push push repz mov add fist push pop (bad) cwtl cmp lret fwait mov out jmp push fucomip xchg cmpsb xchg sbb rcll cmp xchg push pop jge pop lock repnz cld xor cwtl and (bad) out ds hlt lret aad cs jle movsl or push jecxz inc adc lods mov sub out dec insl mov das or imul in xor and out pop jne icebp sub pop xchg pop pop test mov out jne adc mov cmp inc mov xlat icebp inc in clc pop push into shl lock arpl out mov dec push jns (bad) mov pop or cmp ljmp out fucomi dec push (bad) adc out bound pop xchg fiaddl inc out mov mov push xchg and out dec test mov out out pushf mov mov adc inc push push push xchg pusha xchg sub jo adc out xor mov mov push push jmp out (bad) pop mov inc out add pop (bad) test add arpl out xchg xor pop push lahf inc pop mul pushf mov mov cmpsl pop dec aas (bad) cmp jns scas jbe out fidivrl int out push lock jecxz pop pushl dec adc jae jno add sbb mov out or negb fild and call out iret adc repz call stc or dec out jb dec jle lahf mov call mov add mov dec out jl int insb out cli and ret es mov out sbb arpl out and aas fsubrl push rcll out or arpl ret out cmc addl (bad) jg leave xchg pop imul cmp ljmp sub dec int3 jno push inc ljmp cmp stc out rorl push pop xor mov arpl out add push imul mov out cmpsl rcrl mov or jmp or icebp or cmpsl (bad) fsubr xor pop xor inc aas aad stos add fadd sbb loopne in push sbb push mov xchg fnop test pop push add xor jne mov insl addl inc out sub out subb jge sub xchg es and cs bound mov cmp loop jns mov dec (bad) fisub fsubl sahf testl mov xchg out push outsb (bad) dec rorb sbb push pop or jns xor out push test std out fimul jle inc (bad) insl out adc inc and out mull sti ja push inc push xor test sbb lds jo (bad) test test clc add sub out jns and cltd sbb mov fidivl push out add call pop jmp jae mov out cmp clc mov ds mov (bad) ret xchg stc push push push mov mov popf into hlt fisubrl pop out divl (bad) stos mov pop out mov dec imul or xlat daa out in je jecxz pop out dec sqrtps inc sahf lods dec out int3 mov mov out jae mov add dec mov inc jle ljmp or mov add test stos sarb shrl daa mov fnstsw jl shrb repnz sub add pop mov sbb out or arpl xor xchg mov cmpsl (bad) lods hlt cmpsb xchg out sbb mov lods loop test jno test iret daa adc mov and ror or and pop out xor jnp fcoms mov pop mov fildl loope stos les jge fucom adc enter and add xchg sbb bound cmp fistpll sbb push jb adc mov (bad) fistpl jb stos in dec arpl mov ja (bad) addr16 leave lea sbbl fild mov pushf cmp adc add rorb or out adc jl out adcl jnp xchg fcoml lahf lods movsb ja out push lods add les pushf out push fildll in out cmp mov inc ret (bad) cmc (bad) aam push loopne js loop sahf (bad) les rclb mov imul xchg int3 mov ja cmp and enter fwait cltd (bad) fstpl mov cmp imul or or xchg lret adc or and out std cmpsb sbb push lcall stc mov pop loope push add scas gs mov jns or cmp insl adc pop testb xchg sub lods xorl cltd adc out (bad) lock out shrb add pop out inc (bad) test jp push jge adc fist ss sub aam mov sar sahf sti adc jecxz sub fiaddl mov ret dec lods sbb lahf sub out and xor mov popa loopne int mov xchg out push cmpsb clc dec (bad) (bad) pop out cli xor mov push jmp pusha add div andl out and or out (bad) lods loope shr inc gs mov mov ljmp loope mov or jg popf xor dec outsb jge pushf je lcall pop dec out pop fnstenv pushf leave xchg aam out das out (bad) shll test iret mov (bad) out out (bad) pop movsb inc iret fsubs adc in sti arpl push mov shlb sahf ljmp shlb std sbb lahf call enter or out lods jnp add dec push out into rol (bad) push movsl jecxz sahf negb mov outsb push add mov sub jbe scas add aaa into add mov sti cmp cmp out fldl adc xor loopne fidivr mov ret add jle mov hlt arpl dec jge jg mov pop push mov out push or lock push pop mov sub jp pusha movsb cmp xchg xchg and ljmp xchg imul and adc ljmp out sub xor push pushf sbb out add aad cmp jae movsb popl ret sbbl mul rcr dec xor fstps dec xchg lock data16 aam out stos jo cli fcoml jg adc out xor test outsl mov notl out push data16 (bad) loop out shrl jle,pt fsubrp pop shr std add nop sar and jno ret bound dec (bad) xor mov dec js push out push in xchg jl out imul lret push mov add addl xchg out out and mov pop int3 in add rcrb jo cmp shr mov pusha lret (bad) out arpl in fs lods out push loopne xor xchg dec and cs push iret or repnz in mov push aas jg push push xlat out or fcmovb cmc js add in cmp dec sbb dec (bad) push movsb fisubl bound call mov pop pop cwtl cmp xlat xchg mov dec pop arpl cli adcb sbb pop test mov (bad) ljmp mov inc stos into xchg pop cmp clc fisub incl push mov (bad) or dec pop xor hlt fmull inc in pop std out sub insl pop jb mov in (bad) sahf inc or mov out jno sbb je out adc dec xchg mov sbb cmpsb out (bad) lock out insl in push gs cmpsb pusha pop lods std out out or pop lea scas xchg lock mov jp cmp jmp div add pop jmp cmp dec mov out lret sbb pushf pop push and push mov loop xchg fdivl fs push xchg cmpsl bound jmp into jo dec sbb xchg adc aad out sbb pop sahf push adc out sub dec lcall push shr and addr16 cmpsb pop imul adc inc dec outsb xchg ja out adc movsb cli cmp fs shlb xor popa jp loope ja pop sub in mov cwtl imul scas shlb out or es ljmp in stos mov adc mov sbb push push js,pn mov out scas fs ds out sub xchg jmp xor test iret (bad) in cs ljmp xor sub sbb xchg hlt inc int out outsl jo lods adc jl jmp jle out dec imul mov mov int3 out sub cmc and out call mov push adc mov popf mov pop ljmp out lea mov and pop movsl cld jmp jo or test sbb push lods emms out mov sti jmp (bad) das jae ret (bad) or in fsubl iret jo dec ret ljmp or (bad) out aaa xchg out sbb xchg (bad) out mov pop lahf cmp cmp xlat stos lock mov leave add rcrl jge mov ljmp lret imul sub (bad) bound add push loop in aad push (bad) xor jle xlat aas and pop cmp cmp pop stos (bad) in enter pop rcr jns fs fwait aam stos insb out sub aam mov jecxz insl setne cmc hlt jge stos mov sbb leave xor and xchg adc out push cltd loop xchg test (bad) jg cmc das and mov (bad) cli mov cmp pop enter ja out and mov fisub out mov cs fistpll or int sub xchg pmulhw mov push out mov cmc jae pop pop or sbb jmp jb add sbb (bad) mov ljmp (bad) sub out cltd shl (bad) xor lds out fs lret push aad outsb test xor sub (bad) loope xor xchg mov lods adc or xchg sahf pop ret xchg rcl addl out insl mov clc loop out and jo flds loopne popf sub mov and ljmp dec arpl out addr16 jg out mov lahf nop adc sbb push jl and (bad) movsl pop inc add pop fstps insb lds out pop xor enter ja cs mov div dec out inc (bad) loope mov addl inc cs push out stos xchg fwait outsb lock addr16 adcl out popa sub loop aaa jge out movsl ja nop push xlat sub notb xchg cmp sub out push int mov (bad) cli out loope mov push scas addr16 ja add in out pop mov and sbb and cmc cmp dec push pop js stos (bad) mov mov movsb lret aam scas lahf push push repnz cmp lahf jmpw mov daa out adcl adc fadds inc ret xor cld in inc xor mov mov push or out xor sub leave xor push or call test out sub aas jmp sbb or popf jmp adc aas jl jle movsl out lods scas out xchg leave insb and push mov pop mov ljmp gs or imul outsb loop fldt cs inc fisubr stc mov sar mov mov mov decb mov imul data16 mov mov out mov inc cmp xchg jbe out push stos mov sbb jns cmp push out (bad) (bad) je out xor fstl and inc xchg das mov dec ja pandn cmp mov shr hlt imul add and aaa stos out and jg adc nop lea lcall call sub or popa pop sub (bad) cmc sti push out mov cs cmpsl lret sarl (bad) out xchg popl (bad) push add mov fcomip mov out add lret add mov out cld xor pusha bound (bad) mov mov and sbb adc pop push rcrb (bad) mov sub jmp jl xor sahf and pop leave mov add les roll ds cmp test xor and push pop mov repnz lods es pop lret mov out mov test fisttp or cltd push push sti pop add call mov mov out sbb or mov sub dec int3 scas cwtl pop addr16 out sbb sbbl outsb lods pop mov sub pop call jmp insl jb mov mov mov push imul nop movsl out inc inc push mov daa out ss andb cmpsl mov push mov test mov jnp xor xchg out or sub push jg out out mov or add push data16 xor or das in or add out repnz lea out pop push cs lds movsb mov pop ja xchg out fistp mov (bad) mov out ftst roll inc popa out ja sbb pop out test les imul cld jno mov out dec divb lahf pop fucomp std mov roll sub cli sub out std push pop lret mov sbb dec dec loop inc lds xor out imul push mov add out xchg insb push xlat aad insl dec loopne test repnz negb sub xchg jg add popf xchg movsl push out into loop mov push or cmc (bad) int rorl jmp and ljmp bound sti add aad mov mov imul (bad) jno aaa push dec inc out xor mov xchg inc or mov cmpsb (bad) dec lds and nop daa loop pop out ds inc pop push rorb (bad) dec mov cmpsb sub leave mov and inc adc push hlt jg pop mov or psadbw ljmp out jl in lret sbb lea out push or out cmp cmpsl jg insb cld adc dec mov adc push and pop ljmp lret and ljmp push imul js pop dec nop out int3 mov addl cmp stc jbe out inc and adc adcl decb je test push push mov or add in out push jge notl out (bad) movsb lahf xor es cmc jb movsl sbb or fwait loop xor fs out or aas jnp mov pop (bad) mov mov in pop sarb inc leave loope add lea loope stc push mov out fistpll mov add xor int3 xchg inc sbb cli fiadd scas repz cli or and push lahf jl mov sbb fwait (bad) pop sbb and and lahf adc sub jne cld cmp rcrl sbb sbb imul xchg jp idivb movsb loope out and out xor test cmp outsl out push adc insb mov mov pop pop dec out mov jo mov jae push sbb sbb and out inc xchg xchg out cmpsl mov (bad) pop ja neg sbb scas or (bad) aas je mov mov add and data16 jae mov pop js xchg (bad) jo imul cmp jbe out mov push (bad) das add loop sbb push enter xchg xorb cld arpl inc xchg out pop or or out or fldl (bad) mov mov and dec pop ljmp into push sbb in das in pop mov push or gs mov cmc daa sub xchg dec pusha sub xor cmc cmpsb out xchg jecxz sub xor push pop mov cmpsl add cmp stos loope out test and fs out repz aad jle out stos xchg stos insb add out pop les aad pushf inc or xchg adc imul mov xor (bad) lock mov cmp pop lods sqrtps ss ds adc mov out (bad) fcom insl imul aam or adc imull js jno (bad) xchg add xchg test out push ljmp pop out stos mov xor bnd hlt sub mov aad lahf call in loop in pmaxsw adc (bad) mov adc (bad) mov push xor xorl scas test ljmp cmp sti pushf out dec les xorps bound lret pop (bad) clc push (bad) mov ds jle fidivrl sbb stos lock pop inc out fsubs fildl out out and (bad) jbe pop ret or adc popa das fistpll cmp and jno pop mov call hlt fucomi pop adc cmp sbb push push dec aas (bad) test lret cmpsb lock mov dec mov out ljmp aad aam cld test sub scas pop mov clc popa sub mov lea pop ljmp mov sub pop cmpb ljmp mov mov rol dec fist mov out out mov stc xchg les gs dec mov jle ds int3 pop iret jne movsb and addl add repz dec (bad) (bad) ret push or inc es ljmp sub cmp (bad) repnz ja push adc jae and addr16 cmp mov js rclb (bad) cld or inc negb xchg arpl add int xor pop jl cmp mov inc jo shrd mov call mov push push out add sub mov xchg arpl stc xor out out lea int3 data16 xor add bound mov xchg mov out mov fldl icebp out lret loope mov inc adcl fwait repnz dec es sar xchg adc popa pop xor call mov mov adc in and pop sbb out cli cs popa mov xor pop mov flds mov out movl pop out insb cmpsl and int test xchg aas add test xchg (bad) out xchg or adc cld xor xor pop pop shr mov fldl cmp xchg out cli scas sub inc leave mov dec in pop pushf in mov ret fdivs pop in xchg popf fs test pop out xchg sbb dec sbb aas clc aaa add das es movl dec sub pusha sbb cmpsb out iret out push loop pop pop int3 xchg out inc sbb sub mov ret jmp in dec add pop xchg scas test mov push stos rclb insb out pushf mov insl adc xchg xor ljmp adc or divl add xor or movsb push in xchg das std in mov sahf out push aad ljmp cs adc sub cmovnp in out fistpl cwtl mov nop mov push int3 cmp getsec lods or mov fsubr sub add out aaa mov inc ja mov movsl push bound int3 out adc out sub mov js fsubrl dec and sti pop push bound loop xchg insb (bad) jbe push out dec ficom sbb mov jns out arpl cmp lock pop insb jbe stos and in xchg pop popa and inc or sbb rorb rorb sbb ret out loop adc out fcoml test ss iret insl fcomi jmp stos sbb jbe cmp sub into mov cmpb jbe adc jp in (bad) iret push pop cmpsl pop stos cld stos xchg into push insb aad shr push inc or bound bound adc (bad) call in jo rcr pop push out (bad) add lods cwtl lcall in cmp outsl rorb out insb enter lahf lea test out (bad) in popf xor mov sbb mov mov loop sbb jecxz in sbb adc sahf pop and pusha jae sub xchg mov hlt inc jo xchg andnps into leave xchg in sub push out out dec pop fcomip and out das arpl imul mov push push sbb sbbl cwtl out in jns clc pop xchg ret divb out data16 in cwtl mov cmc jmp or out sbb in sbb ret ljmp out adc std mov (bad) xor mov (bad) pop push dec mov out addr16 icebp cmp inc inc dec lods pop pop daa fdivr sahf jmp les pusha por xor imul sbb in mov xchg out repz sub fidivrl mov test aas jns (bad) test icebp testl cld pop data16 push cmp es (bad) outsb sub out mov movsb cmpsb xor pop inc pop rolb popf out jno cli push lret cld push repz aaa in out iret cmp arpl push xor xor aam pop mov push push inc bound push jnp ds out cmpsb fs imul out jmp lods leave mov (bad) xor mov call push cltd dec bound loopne test bound in js,pt cmpsl sbb mov cmc adc fildl xor dec out div xchg dec mov jnp and cmpsb data16 divb sbb int imul and push dec fildll or test enter ljmp add (bad) lods lret sub sbb (bad) pop xchg add xor ret js push push mov loopw gs fwait xor in adc out xlat mov mov inc and push mov and insl out sub jnp arpl sub or pop jl fldz add in mov dec jne and mov prefetch or leave out dec sub aam sahf dec mov sarb push popa test push roll xchg sahf int cltd ret loop sbb and aaa cs fldl out sub mov pop or stos pop int3 sbb mov (bad) and test xchg pop xor cld jecxz lds cmp jmp cli out dec scas or pop pop mov shlb push in or out sub je dec push aas enter bndstx imul out std sub mov mov fcomps ljmp out push or fsubrs (bad) push lret addb leave sbb bound out pop mov adcl ds out mov cli rclb ss aas pop shll int3 out mov addr16 pop and (bad) and sti out in add pop push push in cmpsl or enter lret pop leave std inc pop push test out scas in xchg xor out aad pop fist rcl adc lods mov aas out sbb push sub jmp ror cmp pop push jae test in arpl cs clc je scas xor sub cmp mov out cwtl sbb and mov inc and or in xchg jge loop cmp js adc out dec fisubrl popf xchg mov fdivs xchg (bad) out daa in push out sub ljmp xchg add or inc sbb fmuls lds mov push pop (bad) rclb jle cld (bad) cmp scas sub fwait mov push lahf mov jge and push shrb rol adc cld xchg mov cmp loop pop stos pop out sbb daa mov out mov outsb fisttpll out sbb jnp das jp lock mov cld call pop das dec out adc jp push out sarl aad inc aas test mov clc and sahf mov aad out fmull inc pop cmpsb (bad) mov jge jbe loopne xchg repz out aad add push out rorl xor push pop rcrb imul pusha pop add mov mov out js pop dec xchg out fdivl (bad) fucomip cltd jae,pn in stos loopne pop fld jnp jno inc fst ret mov mov fidivrl push jns and movb out das outsb inc sub add or out jmp inc pop out mov inc lahf jg push pop (bad) scas in hlt outsb xor push cmp insl mov loopne jmp repnz pop jl bound jg aad out or xchg (bad) out rclb push inc jle push xchg mov jmp xchg sub movsb push fisttpl mov adc pop int3 pop cmpsb xlat pminub call in mov (bad) out fwait sbb negl out adc jne lock sahf or out cmp cli in cltd push inc ret sbb sbb out mov cmp arpl (bad) cmpsl enter xchg or (bad) xor and insl inc sbb push xchg inc jg cmp js movsb daa inc push iret pop add ljmp stos push dec scas adc pushl (bad) sbb and (bad) jecxz in inc pop (bad) repz and xchg mov orl out lahf sub xlat xchg rcll and xor mov iret push and in outsl insl xchg imul cld sub mov out shrb pop push pop jl out mov fbld out inc in imul out inc jae les add add out xchg repnz arpl out xchg sub sub out (bad) dec in xlat sub out imul fisttpl and hlt stc out icebp and (bad) out xchg xor in jmp (bad) mov mov aas mov pusha pop mov inc mov out sbb sbb fcmovb test push pop shrl daa jecxz lcall cmpsb out fcomp dec sti test push and jg mov pop dec cltd mov out or mov push ljmp les arpl push in adc mov outsl rorl clc out jg gs mov js xchg mov xor sahf int3 (bad) cmpsb scas xchg and or fcmovb (bad) fsubrl out mov push pop test jp xchg movsl out pop outsl and xor enter in rcrl sub xchg aas out cltd lea jg (bad) xor add loop clc aam add xchg nop jb (bad) sub xor fsts dec sbb jnp sbb das out sahf cld adc (bad) jb push idivb sub jge fistp into mov mov sub out inc in test sub mov xor out movsl (bad) mov lcall sbb inc je jbe ss into mov and jp fldl dec pop xchg lret je (bad) jbe dec mov out mov or jae idivb or iret pop (bad) cs and in hlt add imul ret and inc out popa neg (bad) (bad) pop xchg dec aam mov jo fbld js sub pusha shrl push adc fiaddl out mov mov jle push ds lahf pushf ljmp xchg mov xchg jmp pop adcl mov shll fcmovu sub add and out mov cmp mov enter dec pop push xchg xor xor and sub hlt sbb repz xchg (bad) lret lret into mov mov and lock mov ja cmpsl push daa out (bad) fisub out sub sub and pop out add jne inc cmpsb sub mov and bound insl inc (bad) xchg mov lret push out add adc inc pushf sub inc add or pop nop leave out cmp sbb ss aas out adc dec mov int3 jo mov aas xor xor gs jmp ret add adc inc icebp push out out arpl pop xchg rolb cmpsb fisubl in imul adc dec (bad) sub adc mov subl inc xchg (bad) not mov mov inc lods ret cwtl leave pop push inc lcall jmp pop inc cmc mov out loopne fnstenv dec sbb hlt (bad) adc cwtl xchg pop out pop imul popl inc dec dec insl lahf sahf std jbe inc sbb cld or pushf inc (bad) xchg xor (bad) out jmp and cmp (bad) ljmp fidivrl pop iret cmp out adc xor jbe dec in ret scas jb out dec xor mov mov mov sub sbb pop push xchg push mov pop jmp loopne push jb out orl xor lds out or push ffree xchg and test sar push xchg mov mov jns into add sbb xchg shl cld mov pop add iret test nop fsubp mov cmp jno icebp sbb xchg in cwtl xchg mov mov cmp dec xchg gs push mov inc cmp iret pop ljmp cmp out loopne subb cmpsl sub clc (bad) pop fcmovnb popa mov stos inc mov sbb push imul (bad) push repz daa out out xchg jge sub push lock dec pusha out cmp or jno sbb inc mov in ret jb out fistp inc js insl je push enter or daa push mov lahf xor add (bad) sbb shr shr loop pop loop mov inc aad xor mov iret mov arpl pop out int xchg in adc stc out cltd and fisttpll pop (bad) dec inc xchg out lahf test (bad) addr16 fs adc sbb sub out inc mov aaa inc sar mov push movlps out pause sub pop pop popa sbb cwtl out adc in push add ret out pop and repz out jb out push jnp dec sbb push in sub loopne js out lret adc ja out inc repz out xor dec sub (bad) jb out and lds mov fs dec out nop push cmc inc (bad) xor out enter xor jae (bad) in lods clc out loope xchg cmpb jp sbb ljmp iret fs hlt inc adc out fwait data16 clc inc and mov push push and mov stos push (bad) jg out pop cmpsl std rorl fs lahf fwait jnp out mov xor mov or out (bad) out cmp jmp stc sbb mov fbld and aad push cs loopne ljmp (bad) out inc inc mov out mov lock sbb inc or xchg (bad) jbe lret add jb,pt loop out test inc inc jnp xchg mov mov xchg insl movsb jno iret cmp cmp gs loope addl jg pop mov enter lcall icebp xchg in orl repz (bad) fsub iret les mov sub hlt aam add clc mov adc (bad) imull (bad) out mov cmpsl jmp out lods aam jl in xor sub int repnz push (bad) out jmp inc pop xor scas fdivl ds push addb cmpsb inc add push in pop out push mov adc aam ss stos test aas inc sbb iret cmp mov pusha push out stc bound leave rcrb iret inc pushf in sub std cmpsb loopne test loop push dec mov ds pop xchg imul bound outsb frstor in cmpsb pop push sbb add add xchg insl nop in sahf out or mov adc push mov push xor out pop testb dec xchg insl popf out out xchg adc out mov sub sbb das in add inc ja pop cmp mov int fucomip mov push dec stos push sbb lock ljmp pop in push iret nop add shr sub mov cli mov cmpsl mov mov jge repnz mov into push (bad) mov negl jmp xchg xacquire ret aaa lock out jne jle sub push out xchg daa and out adc sahf inc lret out and cltd popa jmp and iret push jbe (bad) xor sub sbb int3 fist test in in mulb mov das cltd fstl fcomps mov (bad) mov cmp in (bad) out xor lds cmc jns stos (bad) out mov and jbe and xchg fwait repnz adc cli (bad) push sahf les movsl notl xor sub jl pop sbb or pop jno jns and add rcrl lods aad and dec xchg test data16 jb cmpsb mov out in mov xchg out xchg push (bad) or insb pop sbb outsl popa cmpsl in fldt int cmc jl or mov cs (bad) inc out xor mov cmp jne mov sbb jbe pop jecxz pavgb push add aad test fildl xor lret jne out movaps pop je mov push pop cmp jmp adc mov arpl out add hlt sar mov out and xchg repnz nop cld lahf popl or mov jb mov and ljmp (bad) addr16 sbb inc imul popf out jae test push pop push stos (bad) idivb lock mov mov and test sti push rorb lret or jmp cmp inc xor out mov sbb jg inc push pop push insl xchg ror inc out les sbb fmull jmp push (bad) out mov mov hlt out ja ret push jns and mov push push scas test sbb inc js popf mov jmp into lods leave lea cmp insb arpl mov iret sbb or mov imul sub imul xor repnz pushf push lock sub out inc in or ret mov out (bad) mov addr16 push push pop xchg stc push jmp out mov sub mov mov leave lcall (bad) xchg xchg in (bad) mov mov out push xchg popf push shr dec out pop mov lock es add lods fsubr bound fucomi lds rcr sbb adc in add pop das out xor fistp add jne xlat clc jl mov mov add or in mov out xor mov mov sub rcrb mov in shrb out pop addl dec xchg ss (bad) out leave divb add (bad) mov scas jl jmp sti and push cmp sub push loope test lea jl xor out adc sub shlb cltd sub das out jl outsb mov sub pushf pinsrw push jae (bad) rolb sahf push sarb ljmp out rep or mov and xor (bad) jmp sub push dec cmpsl lds fist in adc mov dec mov or std mov mov ljmp out add int out icebp ret out push xor popf sub inc (bad) scas aad notl (bad) test cltd out (bad) sub push sbb (bad) pop (bad) clc push pop push enter mov cmp in inc out (bad) hlt push loopne into in adc dec pop mov push (bad) das out jp pushf jns in push out retw mov in incl pop in das sbb inc mov fwait push and dec shr lods adc cmpsb jmp fsubr sub scas and pop xchg or mov xor inc in mov lods (bad) outsl xchg int push out jo icebp cmpsb sub les xor (bad) jae sbb inc or push out cmp js mov and in out push push out mov pop out pop ss rorb aas out aam pushf pop adc out mov push mov (bad) imul mov fistl int3 push popf xchg fsubrl out imul cli fisubl aam fisttp arpl (bad) popa inc out push jne add xor or xor push push out fiaddl mov and js mov mov dec gs push push imul loope push cwtl (bad) jb out jno aas (bad) xchg xor (bad) ficoml dec add mov ret inc jl test insb (bad) out dec cmpsb outsl mov xor ret sahf fldz push jp sbb insl in repnz (bad) lidtl mov out sarb sbb int ljmp test pop dec xchg or out pop nop mov movsl ss pop out inc daa cli in hlt inc cs lgs (bad) out sub xor adc aaa out ss loope jo and shll lods mov or enter mov jnp stos mov ds (bad) fcomi loopne pop cwtl rorl ljmp daa sbb mov push sub out lds in and jge (bad) xchg cmp psubusb jnp loop lret jo aad and out lahf sub adc or out (bad) lods mov ljmp or jne outsb sbb mov repnz adc sub mov lahf push in jmp aaa outsb jns cmp out push mov add xor out sub jne iret out adc xchg fwait iret arpl inc in ljmp bound in pop or loopne or xor push jbe test jg adc xor cmp iret pop jno (bad) cli fucomi jle push lahf mulb (bad) jb mov push add jmp xchg pop scas out mov lea sub loopne movsb xor js aas lock push repnz testb out lds xor loopne xchg outsb sub ljmp mov dec cmp pop outsb sub rcrb lds out dec mov sub out push les inc notb mov xchg ror and das (bad) sbb dec jge push gs mov outsl dec outsb (bad) hlt into adc out lahf and adc and jle call out out pop out lret mov popf out xchg mov and shrb pop jns jge push imul pop or test adc out xor imul das adc out in push out shl fistl xchg adc cmp inc clc out fstp daa leave popf or mov insl out mov fs negb jae pop mov inc outsb addr16 out sub in cmp mov mov mov iret aas insl out (bad) mov mov fldl cmpsb das push pop lods mov es imul add and mov adc sub push repnz out cwtl xor ja cmpsb mov lret lret mov stos sti dec scas js out or lahf popf out dec mov mov out cmpsb add jo,pt aaa and jecxz push gs sahf xchg cmp out out shll out xor mov push cmc mov and inc push out ficoml dec dec outsl mov lret out les rclb fwait imul decb mov push sub in sub enter xchg out dec push (bad) xor outsb mov ret mov add adc push and jecxz pop das dec ret inc mov (bad) ficomp xlat les leave dec sub out js sti and cmp pop movntq out cmc lret adc xchg fs mov arpl les shrl pop rorb test jp inc out pop dec or lahf mov add icebp cmp adc fsub xchg push ror mov inc xor (bad) mov out loop jo out cmp or mov es repz push xor lods xor lret mov mov movsb bnd mov outsb out incb pop inc dec push or or aaa arpl jae lret mov jno pusha cld je out pushf pop push xor mov fsubrp cmp mov jb sbb xor (bad) loopne stos and jge pop and sub out or push jmp ja out call mov out hlt lds and xor out (bad) adc fs lods lcall cmp dec out add popa push shrl inc pusha cmp out in mov loop out cmpsb push ja push mov fsubr stc das lds sub out push ja xchg dec adcb lds add in out sarl popf dec in movsb inc (bad) out or (bad) push inc out sbb lcall out fxch cwtl and fcmovnu xor cltd pop mov add sub jmp xchg lock mov lods fwait jae jnp (bad) xchg xor out lahf and add pop enter and out ljmp out add lds loop aad in lds sbb leave jbe mov push mov out es jecxz cwtl cmp xchg pusha fcoms mov and or popa leave adc out sub xchg xchg mov lock data16 ss int out mov test mov sbb push test mov stos out sar sub cli rclb notb xor dec sub pop push dec fmull rcr out sbb (bad) mov (bad) or das lahf ja aad pusha loope fldz and (bad) pop dec cmp dec mov dec or js nop out dec sbb stos rcrl cmp jno mov ret aad xchg sbb popa jecxz dec icebp int3 rcrb movntq int in out lahf xor pop (bad) sti jae outsb sbb das mov sahf out add iret cld int3 jg call insb out and popf lret fmuls xchg add pop sub mov and adc cvtps2pd scas iret mov mov pop daa pop into sub outsb push dec leave out pop int mov jno push pop daa lcall jb mov pop add xor xchg gs mov fisttp cli adc mov shl cmpsl pop out stc mov xchg les int dec cli ljmp cmp out jnp in inc sub mov cmp inc lods arpl sbb mov jbe out fwait pop cmp popf in push push jg xor out repz fnstenv (bad) shlb inc and and xor stos pop out les rorb out sbb and (bad) (bad) dec out mov bnd and leave sub xor stos lods ficomp jmp inc (bad) iret rcrb pop jnp push cmc cmp ljmp mov test loopne out sub jge pop push out mov cltd mov negb and sub test hlt pop push bnd data16 in (bad) sbb mov sub mov pop sbb loope sbb xor in mov cwtl cmpsb lret dec (bad) lock (bad) dec adc hlt xchg push pop sub arpl pop insb push out mov dec and dec push push mov cld out push fcmovnbe or out sub hlt pushf dec mov inc pop shll lret outsl scas out xchg loop leave les cltd out or sub sbb call sub lcall ret dec out mov ffreep pop sbb add xor push sbb dec in gs jnp mov out or fnstsw mov or sub rcrl xchg pop cwtl in ret cmpsb in into daa xchg mov sub pusha lcall (bad) ja jbe repnz fildll sbb cmp xchg daa or sahf stc xor pop push fimul xchg adc int rcrl out data16 mov rclb loop xchg or xchg or and push mov sbb pop push (bad) cltd movsb test sub fldz les and test dec test aas push repz push pop inc cmpsl loop negl popa xor imul dec (bad) out insb and push and cmp xor sbb out insb mov inc fucomi adc call std aas jmp cli mov (bad) out mov and iret iret dec jg out (bad) push pusha push out test jne xchg out insb psubd dec cmp loop push xor aas out daa mov in xchg das jp out jge adc xchg int in mov sbb and (bad) in xchg out popa (bad) in push pop aas sub clc out insb mov adc adc out and cwtl faddl mov fsubrs cltd mov lods jle outsb xor xlat stc or xchg repnz lds push dec out cltd fist sub clc bound add in push out cwtl xor sbb mov ss ljmp and inc jne add pop cltd jmp enter mov push xchg jecxz lret addr16 sbb pop add stos sbb pop out cmpsb xchg loope fwait es jb out or loop out mov adc aaa mov jp jne or ss orb jnp mov fcmovnb mov cmp out pop andl jecxz or pop pop mov xchg lret lods sub push adc push out mov pop jle inc jp out push mov inc xchg out andb and aaa and jp cwtl outsl pop rolb xchg adc out mov gs xchg std aad out mov (bad) scas (bad) mov pop and outsl jo cmp fbstp xchg scas (bad) imul fisttpl sub outsl mov repz shlb add sub and dec gs adc adc or pushf push loope cmp and inc adc cmc pop (bad) mov out lods cmp outsb out inc imulb dec mov jns inc out adc add xchg es mov jnp sbb test pop push lcall xor out or adc call dec pop mov sub out inc clc fwait pop bound sbb fsubl aas xchg scas xor sub pop mov mov stc adc mov out fcomip adc cltd inc mov stos stos (bad) push js mov out gs lods cli cmp add into out test pop and push movsb adc fisttpll push bound test (bad) out mov setg outsb jnp in fsubrl xchg dec and mov fimull pop insl inc leave loopne inc pop testb and xchg mov push ds outsl mov mov out (bad) imul lea out mov shlb out aad fldpi push enter cld adc pop adc dec iret out addl adc mov push pop nop ret faddp cmpsb scas and or out dec mov push cld jle insb or cmp lret (bad) fucomi fisub outsb testb mov aas jae lea je lcall mov jbe push sub adc out lods cmp out pop notb lcall push pushf lds aaa js out imul mov ds out ffree xchg lods les cld xchg pop in (bad) jle loopne mov sbb adc ret out fadd lods xor push out jae stos xchg pop aad imul das xor xor addr16 ret shrl xor jecxz out or mov mov sbb call out push or insl nop inc xor out and jl and iret shr pop into pushf out inc mov (bad) in xor sbb pop cld outsb push push or mov rcrb ljmp out and mov xor xchg dec mulb loope lock push out mov imul out mov push cld hlt mov lahf xchg dec mov pop dec mov mov mov scas mov cmp fnstsw jmp jl popa ret push push pop in pop xchg in or sub lods (bad) rcll mov insb negb loope xchg cmp adcl je cmp inc jecxz pop dec repz mov sub jns adc sub in add cmp pop int3 lock dec cli into scas out mov add bnd mov add mov sbb sar cmp xor sahf gs adc jne fldl test ret push in (bad) pand fwait mov dec es out mov sub sahf je out sbb lock adc jae enter mov sahf pop push mov aam insb sbb aas out pop lods jmp push test inc xchg push (bad) xlat pop dec std or mov es xchg jle cs cltd fwait cmp push into lahf cmp xor sti pop jge jle push out sub stos aas js pop inc inc mov fisub les aas sbb int xchg sub cmpsl into jg outsl mov jp int3 jae inc pop fcompl in (bad) aam in jl mov fnsave (bad) inc fwait inc ss sub jl pop pop hlt jnp add sub sbb mov cmc and sub jb pushf adc ds enter xor out pop shufps push dec shr jl jbe test cmp mov out mov push push dec mov fldcw mov loopne call jbe sahf popa push scas mov enter loope dec movsb negl xchg sbb nop idiv enter out shlb pop int mov out pop or xchg mov sub (bad) mov cmp sub lock sbb xchg shr lcall cld out xchg test dec adc dec mov jne (bad) sti and xchg jl out fsubl psrlw inc ret ljmp jmp or adc rolb cmp xor call jecxz cltd mov enter js push xchg out pop pop idiv and push ds push bound mov shl out jbe fbld js xchg out mov xchg xchg out dec xchg cld inc mov out jae stc fcmove lahf and mov cmp mov test push push jge pop popa enter cmpsl test adc je fdivrp loopne in ret idiv sahf pop lock pop imul rorb cwtl call xlat xchg push sbb out cmp inc int (bad) data16 mov sbb mov ss iret ja in stos out aam (bad) loop std shl lcall mov lock notl out outsb dec mov and out inc or add loope rorb jl out cld ljmp out mov mov arpl cmp out jb pusha fwait gs add out lret push out ja or addr16 sahf pop jae pop loop dec shll jmp jb xchg icebp call mov mov jo,pn push out pop push in mov (bad) cwtl outsl out stc pop add and ja addr16 test in repnz cmpsb or aas sub xchg test xchg ljmp repz and inc test out sub dec cwtd jmp das clc cmp (bad) je je scas or inc (bad) arpl mov pop pop imul cmp mov flds pop push mov cwtl mov insb xchg mov out rorl mov into pusha into xchg push mov and jno loope mov or fcoml rclb lds mov sbb mov out popf fstpl pop ret (bad) hlt jmp ljmp jns xlat aam mov cmp stos pop out andl xchg lds push ret and in sub call add in out jno xor jb nop out ret push mov xor popf sub xchg and push int3 iret mov pop in cmp dec pop xchg sbb cld mov lds dec cmp jmp in clc xchg and lret dec pop pop movsl cs (bad) in out sahf andb out lcall shr and loopne push out ret jne rorb repnz dec daa jbe pop aaa test or loope dec or out insb popf mov xor popa ror cmpsl xchg mov lcall xchg push lods call xchg and xlat ret in and rolb data16 in adc sub insl mov push les aad lret stc fucomip cmpsl or ljmp cwtl cmp cltd or adc insl mov sbb jmp dec add jp sbb adcl out lret pop out jb xchg push out jg sub mov (bad) pop enter cmp xor outsb int3 and test xchg xchg out mov (bad) mov pop out inc mov sbb fidivrl adc dec inc inc pop out in les fs inc aaa out and or jle jp sbb adc lods out fs fildll pushf xchg insb sub shr dec adc test cmc xor out (bad) aad inc cli or inc out inc xor inc (bad) and pusha mov or pop fcoml push mov xor lahf push (bad) mov xor out rcrl jle mov dec (bad) adc sub jmp xchg incb inc in aam cmp push mov pusha xchg out enter adc mov or sti test add mov mov insb sbb mov xor out or (bad) loopne fldenv out adc xchg push fsubp push in in xor insl and adc xor mov test int3 push decb sub sbb pusha mov inc pop loop and leave out adc sub out in outsb mov insl das stc mov or lahf pop lcall scas test aad inc dec outsl pop xchg fwait arpl push xchg out sub jmp clc mov scas dec (bad) dec inc add xchg leave push mov pusha sub cmpl test adc sub pop (bad) mov mov out out mov movsb pop push pop inc icebp cmp jbe repnz out adc (bad) fisubl lcall sbb imul xor mov shl cmp lret pop mov mov add fcoml subl (bad) adc mov push out out divb (bad) fidivrl mov (bad) pop push sbb push scas out stos cmpsl mov out notb or out and std push iret adc arpl lret cmpsl mov dec and sub pop loope ret out sahf test dec pop jno (bad) xchg out cld jbe leave jne sub es adc pop aam mov aaa nop (bad) out inc jne fistpl pop out mov (bad) scas sti mov mov addl add push mov inc lds imul pop dec xchg fiaddl test xor sub adc lods mov std pop or shlb or sub xor jle out mov mull faddl out or dec pop cli pop mov mov test or pop ljmp sbb out int3 (bad) aaa imull out or jecxz sbb cmp sbb movb cmp xchg dec (bad) jg ficom out sub bsf push (bad) dec mul mov sub bound adc fs out test aas sub mov mov out icebp mov lock mov je in imul in mov pop cmp loope out clc inc xor mov cld out adc ficomp in xchg out lods fdivr xor out pop add ss lret stos out sub decb loop lahf and out xchg imul cmpsb (bad) push test cltd out mov push sqrtps cmp ljmp repz push cmp stos (bad) icebp aam mov out push mov lret scas test adc cmc xchg enter nop out test ret popa cwtl fs xchg nop push xor mov stos inc xlat adc push jne sub mov incb lods adc push sahf (bad) shl cmp xchg fs mov mov mov and lahf cltd std hlt in out loope mov sub in ror cwtl prefetcht1 ljmp lods xor lcall ret mov xchg nop fidivrl out es aad gs into aas (bad) xchg dec mov push adc loopne inc gs push (bad) retw add addr16 mov jle sbb jbe cmp out mov push and inc or iret sub (bad) data16 jp pop fucom jmp jo ret out or sbb jb (bad) call je in pop sub lods or xchg lret push mov addps call dec out pop (bad) aad xlat or andl imul jecxz cmovnp inc pop sbb push scas stos sti pushf daa fsub out or lock jg mov sub cli jno out out mov dec test dec ljmp dec repz push jbe cmp gs push adc fcompl or jmp xor sbb aaa mov mov add pop fwait push inc push insl rcrb call nop xchg push lock jnp scas mov mov ljmp out dec cmp divl xchg inc or fcompl sub out fs popf and (bad) out push xor xchg fbstp inc push repz out int3 mov (bad) icebp out xor inc nop jmp out pop add or lret jno daa test out imul pop scas push cli loopne sbb push daa in sahf xchg dec rcr stos out pop subl and lods iret cmpsl les bound out (bad) mov repnz xlat mov push add and lret sbb xchg loope or adc inc jo mov lahf cmp dec mov xchg pop push jp call out in or fnstsw inc in out inc jg jp jecxz insb ss mov mov add xchg push cmp cmp push or popa sbb xor inc inc sahf xchg rorb sbb adc lahf jg insb negl fsub dec js mov lcall out cmp nop out dec fwait jns push je in sbb cmpsb int3 popf outsl vrsqrtss xchg lahf test mov ret dec inc shll dec clc lret das jmp imul and add or imul in or scas hlt cmpsl out mov fiaddl sgdtl ljmp sub mov data16 shr outsb or fwait out and mov pop xor dec mov jmp xor pop add test out out mov sub pop jecxz mov xchg ljmp aam sub (bad) mov xchg out push loopne or orl sbb jmp data16 (bad) pop fsts cs leave xchg push jne xor lea daa push fsubr and out adc rorb pop sahf push out cmc or sbb es jo ss pop das imull pushf aaa gs out xchg test mov lahf cmpsb sahf jb out adc pop dec mov inc lahf inc (bad) mov inc shr xchg inc sub xor mov sbb dec jl mov sub imul xchg (bad) lock xor popl push and sub inc lret inc sbb loope push movsb and into int3 mov out mov or popa outsb push out int lds sbb ja mov mov (bad) stos pushf in sub imul out mov (bad) pushf inc ljmp loop out dec pop adc cmp push sahf sub scas lret mov inc push sbb sub sbb push pop jne add fs inc xchg out movsb jb pusha adc out idiv sub sahf out cwtl pushf es stos mov cmpsb xchg or out jnp xlat jb xchg out cltd mov jge outsl out pop push lods pop outsb imul call out inc int3 pop cmp add call push inc mov cltd sub dec mov (bad) push xchg out push lret iret inc cli mov fstpl divb xor mov add out pop iret fwait push mov xchg out (bad) mov popf adc mov addl mov or ret test in adc nop stos sub imul jmp sbb push jmp stos ja xchg in fiaddl ss notb fnstcw jmp sub imul cmpsl lret xlat jbe pushf call push xor xchg pop hlt scas in out jo aam push je add cmp pop push int shll xchg dec jl out sbb mov cmp cmp (bad) mov mov or jmp sub mov out int3 loopne cli loope int shlb and mov mov out push mov push (bad) and scas xor cmp sub out daa and shl jle pop lahf arpl ljmp or (bad) and aaa out (bad) add adc cwtl adc popa pmaxsw jle aaa cltd dec inc out mov fwait iret cmpsb add aaa mov out mov out sahf repnz out and aas push xor jge es sbb pop jnp cmp jg push leavew in out cmp jb adc add add push jbe out stc frstor dec bound xchg inc int3 repz xchg adc fs out inc mov mov int3 nop out add jae sub and out push pop jp pop scas or out adc into lea jns std mov xchg xorl ja in das loope insb imul out or sbb xor sub mov cwtl sub pop gs and mov out test mov fadds xchg xor out imul cmp sbb (bad) mov push adc mov add jb ficompl in push mov lods xor sbb test cli mov xchg pop inc push out xchg subb out dec push (bad) (bad) das adc test mov mov ljmp out (bad) call movsl imul cmp leave inc jmp (bad) movsb lock ss out push pop xchg pop adc sahf addr16 push pop out iret (bad) out clc sub xor shrl mov in jb and out push pop fbstp push les cmc ret int or (bad) and inc xchg mov pop add lahf out jo rcll out xor fmull mov add bound (bad) lods out sti jp shrb movsb xchg push pop inc loop dec lea repz cmp pop sub and adc lea dec or aas cmp ret imul sub out add rcll imul iret xor in call mov fwait lret in stos fistp int3 in ljmp cmpsl mov roll (bad) out (bad) lret xor fdiv out (bad) dec in mov test dec and jb aaa das adc (bad) jo ds in in mov ljmp pop pop hlt cmp pop jl pop mov cmp das sub ret in pop pop ljmp push jns scas rolb xor sbb (bad) out fcomip lret jb jns repnz stc pop cltd sarl dec cs out js inc jo jge mov cmc add add test jge (bad) xchg cltd push ljmp mov jmp cmp jmp mov dec imul sub fwait shr in cli movlps in and inc aaa in lods xchg repz loopne push int3 imul cmc out sub mov mov sbb in out and push pop xor lahf fcoms out movsb fsubrl mov lret fnop in sbb push xchg or pusha cli inc es cmp cmp (bad) sti mov dec loope pop pop jmp mov out jo inc mov popa xor sarl pop mov cs out lea mov out pop add or dec mov lods push and (bad) sbb out xorl imul lods inc xchg out pop pop jle xchg loop mov mov pop mov jl pop shl int3 dec adc jae inc shrb addr16 repz sub cmc cld iret inc fistp insl sub lds mov lret cmpsb out pop jmp inc adc ss fs ljmp or sub mov xor inc daa out push sub negl out mov (bad) addr16 fnstcw jl dec cmp (bad) jmp inc cmpsb lods dec dec out sbb mov or mov jge (bad) jg pushf add adc rcr pop movsb loope movsb stc es ljmp out mov cmp mov incb pop ss mov std lods imul pushl in mov jl push stc out push or out xchg mov lret mov jno or std in xor push es mov inc gs cld xchg or and (bad) in jns (bad) dec (bad) leave mov cmp pop mov mov cltd mov fdivl fwait push cmc pop mov jmp sbb pushf out push dec add sub inc rol (bad) lahf fs cmp mov or out rcrl adc ss push dec adc xor sbb jb pop out adc xchg (bad) dec gs dec inc mov xor xchg fistl outsl pop or js add or add outsb stos cmc sub movsb mov out dec inc std xchg adc js mov pop pop cmp out ret andl decb mov sbb sub and lods jbe and cli push scas sbb (bad) cmp xchg loope arpl mov pusha fwait loop jg pop loope enter jmp aaa lret push sub sbb int cwtl aam arpl repnz faddl push adc ja mov insb sti inc int3 lret jg pop sub out cltd incb shr xchg aaa insb or stos cmp in out inc movsl cmp xchg bound fcmovne push xor push xor cmpsb pop inc (bad) mov out int jmp in mov mov imul test xchg insl in fimull rorl push ja xchg out sahf enter scas add in std pop mov lret fwait out push test pop lret sub push inc adc sub (bad) lret enter movsl pop idivb and gs rcrb push mov jg xchg jmp (bad) out or xor xchg xchg hlt pop sub repz das outsb xor push sbb cli sarl inc out (bad) mov iret pushf xchg clc cmpsl mov fsts rcrl dec sbb jae ljmp mov mov je jge pop scas dec out out test sub cs movsb pop inc pop jno (bad) xchg push imul inc push rcrl negl rolb mov push cwtl xchg iret dec pushf inc inc mov out shlb jnp imul out out xchg outsl and dec add iret out jle xchg push jecxz jnp out scas and daa mov push mov out adc lret mov fwait das xchg out xchg jmp dec sbb push push out sub outsl jb mov xor cmp mov lock or out ret xor pushf and out lahf pop test mov pop ss enter mov lcall mov (bad) push dec stos ffreep out push sbb jge pushf jl in and inc rorb aaa add sbb xchg out insl js dec xchg pop nop adc ds (bad) xchg insb lahf dec fcompl mov in inc jge or out jp jae add call arpl jne mov negb fbld loop stos dec popf int3 out icebp dec sahf pop ffree or out jecxz insl jmp out int mov ja ljmp fsubs inc push adc out add addr16 out and pop xorl fmul xor cmp (bad) adc mov pop outsb sahf mov out cmp cmp inc aas dec sub loop ljmp sarb cltd push cmp out push rol fiaddl leave sahf popa test out outsb pop (bad) dec addr16 jp sbb mov sti scas in repnz jae ret sarb cmpsb outsl dec out jg (bad) imul xchg push out fldenv lea in mov xchg pop cltd jnp push jl out nop mov pshufw jg,pn mov (bad) adc int sub push ror xor xchg jl pop std in stos imul pop ss xchg aam sbb adc pop inc push ljmp fsub nop test fildl cmp rcrb add je lret int loope and adc sbb jno stos shrb repz fxtract jbe icebp xchg sbb in mov dec (bad) ss pusha in pop popa out js aad lcall mov and out push ss jb cmc out mov aas int3 or inc and out in or xchg out fs pop jns rcrl insb out inc rorb sbb jnp (bad) xchg fdiv sbb fcoms out mov push sarb movsl push rclb addl sub lahf cs mov adc jne das cwtl out test xchg (bad) mov mov out adc cli (bad) fldenv cmp adc push (bad) int3 js loop les nop or mov lret out inc in xor jmp push js clc or xchg and sub stos rcrb clc in andb ljmp fucomp xor mov loope (bad) pop stos in cmp out pusha mov inc inc lock rcll loope and mov push inc dec and cmp sub roll sbb jge xlat jnp aas leave loopne (bad) pushf pop adc out out nop jbe out push xchg sub adc push mov out fdivr mov insb add outsl xlat stc sbb in out ds scas mov fildll inc out int sub pop insl inc pusha repnz out ds push jo out push pop fs test push xchg dec jne lret fadds out adc adc out sub jmp out xchg adc movsl aam movsb mov ret xor shr pop popf daa cli dec fsubrp (bad) dec popa aad jnp xchg out jno mov jg inc cli adc inc and sub in add ja xchg cmp das std push out pop imul cld out je aad int3 adc (bad) push push mov imul sbb movsl fmull dec sbb fs ja dec adc dec out cmp push stc out ret lds insb jg les movsb das iret fnstenv dec mov mov add jo out shll hlt cmp sbb lahf inc add and icebp out aad inc xor jecxz loopne repz outsb xor loope xchg jl,pn xchg into (bad) ljmp sbb out rcrb ret or jne dec fistpl xor sub fcmove cs lds jecxz out and lods aad scas sub mov sbb rolb cli ljmp out mov dec popf ljmp mov (bad) popa cmc andb mov jge cmp pop sbb sbb data16 jge dec imul out xor sub ds ficompl xor cld xchg (bad) iret (bad) cmp mov sub mov out pop je lods test inc mov pop fnsave add and inc pop out xchg xchg shll (bad) imul xchg jns dec in xor out out es pop clc daa cmc sub mov mov and rcrl out xlat inc or out and out add cwtl pushf (bad) pop std loope jg lock lods cmp cmpsb or mov es leave xor das pop lcall mov out fnop (bad) lahf push cmp rolb addr16 es adc pop fidivl rcrl divl xor out (bad) lcall mov push adc out add int3 repz jbe hlt sub mov fucomip ss and in inc mov out cmc mov out adc movsl mov out jle sahf jne in in outsb lret pop popa jno push scas out dec fs out cmpsb dec inc cmp xchg pushf iret popf loopne jnp sbb dec mov xchg je out fdivl rcrl jl out outsl movsl in fsubp out lds jno out xchg jae add das out sub rcrl aad jp pushf inc ljmp xchg scas jne xchg test hlt mov out dec xchg fistp xchg daa (bad) out (bad) mov sbb and movsl lcall push ss and mov pop sub in mov mov je (bad) and ret xchg sub pop mov fcmovu cmp and cmp out sbb int3 jg mov in mov (bad) aad out xchg xor ret push (bad) and int out lea jo sbb jl ljmp mov out jge fistp pop imul sbb push push aaa inc out sub std mov cmp in pop in gs push lcall ud1 add xor xchg loope sarl out test ljmp inc repz insb out in cli inc (bad) lods mov jbe push addr16 sub mov cmp cwtl dec (bad) out mov xchg adc inc xchg jb lret test adcb out aaa shrb jg mov lock test and popl sbb cmpsl (bad) movsl xchg push inc out mov out xchg arpl out mov out cwtl or roll out lods jae jne test adc pop push xchg mov stc jae out imul dec ror cmpsb pop mov les daa fs out sti jg sbb stos in out xchg repnz idivb mov out fwait jmp subl xor mov (bad) aas cld (bad) es lret repnz shl and inc cmp jg push imul adc pop out fcmovb pop out push cltd stos pop adc xor rorb out fwait jecxz in out add and ljmp in pop out testb lds sub hlt pop mov (bad) adc dec fldcw pop incb sbb pop addr16 sbb or out mov jo xchg jmp jg lods das mov ljmp in inc fmulp xchg xor cmpsl sub jo mov fcomp ds lret arpl jnp adc in out push rorb lds mov lret repz ljmp lret xor mov stos pop lods push pop mov repz cmp movsl leave sar dec mov sub out add xchg jno add out inc js stc xchg loopne fsubp ficompl dec movsl fbstp jp stos out mov int3 out fldl jecxz or mov mov out rorl fbstp out push repz in and sub cli test jo sbbl and (bad) fistpll aam (bad) pop pop out add sub inc push ss rcll orb notb jb shrb fdivs data16 mov jo iret jnp mov hlt or call add leave fidiv int xor inc incb in loope pushf scas (bad) mov das iret dec dec jno sarl xor and rorb jne jmp pusha out lcall in mov push (bad) pop push call pop fildll (bad) xor std jle fnstsw push in push jbe fadds adc psubusb adc movsb out nop cmpsl icebp cmp xorb fdivl cmp loop mov xlat sbb out dec arpl mov cmp or push andl fs out adc sti mov mov sarb jno rorl inc cmp xchg mov (bad) (bad) mov or pop mov repnz out push add push inc pushf sbb mov (bad) mov clc jbe mov adcb and ret pop inc les out sbb inc stos cmp out lea movsb scas pusha xchg pop fs std popf jo outsl (bad) repz out out add xchg jae pop ljmp xchg sub (bad) push fadds cmc xchg int3 (bad) out cltd sub jbe inc fwait jl xchg andl xor inc dec (bad) cli sahf sbb pop lret imul or ret out cmpsl gs fisub xlat xor aam pop add out cmp xchg lret xor xchg jle popl rorl sbb inc xor push ljmp jns push shr jno xor add out aaa cltd adc (bad) cli push xchg ljmp fdivrl out push test pop push (bad) push fcmovnb ficoml es sbb mov (bad) arpl cmp in dec add adc bound jmp ficomp sub outsb enter pop jp fmul stc dec sbb insl pop dec in adc adc cmp xor inc pop rcrb fsts movsb fisub scas sub stc out cmpsb je (bad) xor push ror movsb popa out (bad) mov in sub (bad) mov mov sbb pop dec jge sbb out hlt stos std push push in or out xchg jo insb int and out add iret ret out mov sbb adc jnp imul lods fildl and cs aad out xchg pop xor pop sub jne xchg mov icebp iret (bad) out inc out and jns out inc addr16 movsb mov add out mov je adc scas lock sub and aaa xor xchg fucom push dec pop adc xor hlt cmc call popa xchg sti pop inc out je pop out data16 pop push movaps pop xor cmp push dec ljmp sbb out mov xor mov insb mov gs popf mov imul stos pop mov out lret movl imul bound clc push xchg fprem1 xchg and shrb cmp outsb pop mov mov mov sub les jp das jno sub mov int fwait ja scas push pop imul jmp pop rorb jnp inc push or sbb imul addr16 xor adcl cli inc loop popl das out (bad) hlt inc pop (bad) lock in int3 std into or jae adc sbb into jecxz popa adc std leave (bad) mov pop push mov into out push cltd xchg fs int3 push popa loop jnp inc mov sub out sbb sbb jp cmp xor xchg hlt (bad) dec nop out dec lds dec fisubl and cmp and sub fwait aam insb jno in out les push mov scas sahf push sbb push rclb inc test sub stos ds jle in inc out scas adc pcmpgtb pop out inc out shll pop mov rolb dec pop out cmp popa fstpl xor vpmaxsw push push stc out sahf dec push sub rorb or adc adc cltd and sbb xor mov popa jmp cmp aas mov lock sbb pop pop sbb ret or pop jge ljmp je adc out add enter cmp push push jb and insb inc out int xor push repnz test fisttpll dec popa sub out (bad) fidivr test xlat sub inc cs and add push xor mov jge add inc pop mov out addr16 (bad) imul pop or inc jnp (bad) dec out lahf mov jmp or cmpsl out adc adc mov (bad) xchg push test push es repnz cmp out add (bad) pop and cld fldl inc xchg test cmp pop mov push lds push mov add or out imul in adc sbb mov fcmovnbe out imul pusha hlt icebp sti out in sbb in jmp dec ffreep mov adc ret es xchg fwait cmp push push rcll clc jns mov shl pop out cmpb add out call dec sbb mov loopne cs add sub mov xchg out fwait sbb add out loope outsl cmpsl add ret jmp out punpckhdq loopne outsb jmp mov (bad) loope fnstcw add mov ds clc adc and xchg lea pop loop int xchg sbb xchg out pop out fidivrl movb sahf mov jnp add sbb dec adc (bad) mov ljmp dec xor jecxz sub cmc mov or sub std js enter or fcomps sub sarl pop je in pop shl or in out or cmp xchg push cs dec sub gs jmp mov mov call (bad) loope and fild push dec mov insb xor add lcall pop mov mov mov sub inc sub fsubr mov ret out lahf inc or adc and mov (bad) dec int into out mov or das sbb popf out push mov push shr push xchg ljmp inc out ss dec rcr xchg inc sbb mov sub in push movsl test adc push pop dec and mov in push decb inc pushf mov rcr xlat es jbe in dec out sbb jne jge pushf or push jb sbb out lret mov out and ljmp scas loopne sub (bad) xor mov imul fwait xchg pop push cltd fiadd ud1 push inc fsubs out push cwtl push or les jns jno or sub pop out out popa push pop sbb cmp mov (bad) fiadd call mov hlt out je cmp sub out fwait add lret xchg out mov scas pusha out int pop ds jecxz push xor sbb stos mov popf sub mov dec cld aas lahf jo mov out add stc fisttpl cmp jno das je dec movb test sub addr16 pop or mov bound cmp jecxz pop mov pushf insl push vxorps ljmp iret fisubl out pop in sbb inc ret lret adc add xchg ljmp or jmp adc inc rcll movsb pop repz or mov sub inc fimul sbb pop dec cmpsl inc mov popf push fsubrs shrb xchg or shl mov cmp xchg push data16 mov pop cmp out mov outsl (bad) test mov out inc cmpb jnp (bad) arpl in (bad) cwtl mov cmp test xor pop jae es in int inc das xchg out test xor out out add fsubrp in popf iret push push ficoml pavgw xchg mov mov sub mulb ja stos pushf out adc lods jecxz outsl (bad) out movsb dec pop add xor addr16 icebp shr ror push xor inc cmp cmp xor repnz pop daa xchg mov adc inc push xchg mov cmp test clc out dec (bad) xchg scas sub cld push adc mov pop sbb mov cmpsb push out xlat cmpsb daa pop lea hlt mov ret sub in inc out inc push jno pop push jle outsl ficomp in sub push mov in out test sbb out add popa aad mov pop out mov dec cmc in jnp out inc ja xorb and repnz test shlb (bad) (bad) out iret jne xchg loop adc jo jg gs adc pop xor cmpsb adcb aas push push out xchg or out ret popa jmp movsb rcll mov pop loop adc into xchg jmp sub js cmp lret out mov outsb rep push pop and out sahf xlat (bad) mov icebp mov xor pop sbb mov out pop std incl out cs addr16 mov outsb lahf fwait and mov stc cli jl xor repnz aad add (bad) cmpsl mov cmp mov or mov push outsb jmp sbb lods repz scas mov push push in sahf popf out jns jg inc sbb out sbb pusha out sbb adc (bad) rcl dec addr16 subb sub lds out add in imul inc mov push insb fnop rol loop fcmovbe adc lock into mov out adc add out push jo sub adcb out dec push jne jle mov push mov stos ss out xchg adc pop out (bad) inc fstpt das sub xor fisubrl xor jecxz cmc and scas addr16 movsb sbb (bad) test out mov in push add rcrl push ss fcomps jecxz sahf push loop and cmp imul cmp jge scas sbb mov ss push pop sarl mov popf jmp inc (bad) fwait insl and jg lahf ljmp imul or sub ljmp sub dec add pop cmp or cwtl xchg in pop adc sub popf loopne push imul xchg (bad) repnz jp out and icebp sub test mov inc xchg cwtl clc cli push fwait in mov out insl sbb in jbe fcompl inc jne cli test insb push mov out loopne push or add adc imul pushf mov imul jae fnstenv out mov mov (bad) out jp outsb xor out lods fnsave jg rorl mov lea out push jb or cmpsb mov pop mov sub out out int in pop push sub mov jecxz sub push or lea arpl in and dec cmc out dec jnp shrl mov out xchg nop inc push std sub sub and das fnsave and sbb xor pushl adc xchg out or mov xchg out fs loope mov ljmp jb out cltd inc xchg cmpsb mov push out sbb icebp xor popa outsb call mov imul fimul inc mov cmp xchg lret in lea dec je inc and lcall lods jns repz in mov add cmova movsb jb out adc xchg lods mov loopne and and xchg loop daa or data16 loope ficom jp add cli jecxz out daa aam mov out stc test cwtl inc add aaa mov es mov not cmpsb out adc mov pop xor shr sub jno push inc adc ror xchg xchg xor mov lods mov sbb push out cs sub mov cmp inc aaa add les mov (bad) xorb adc les xor dec int inc cmc dec xchg mov push (bad) xor sbb gs mov ret ss push dec pop jno (bad) pop stos mov jg xor dec add xchg mov insl (bad) xlat or pop sbb jne ljmp pop push iret hlt xchg in pusha movsl in rcrb hlt mov cmp stos in iret stos add mov cmp cmpsl sbb imul cli out xchg push add int3 or adc ljmpw out pop subb jb outsl mov push sbb das bound out dec hlt daa xchg inc adc and mov divb movlps mov sub orl test lret (bad) pop pop (bad) fmuls jo adc cmp xchg xchg jmp ljmp sti mov out cmp movsl or cltd loop fdivrs loope sbb ja test and push loopw outsb (bad) lock out mov pop add in jae mov mov hlt fwait mov call lret out (bad) enter lret into xchg es dec push adc xor jnp cmp int mov stos mov movsl addr16 sbb ffreep ds push pop (bad) mov mov jnp out jecxz ret popa cs adc iret fldenv jmp cmpsl or (bad) and jge insb outsb adc and mov cltd into ficompl loop jo push push add loope pusha or inc movsb sbb jns out cmp sub xor gs or xor outsl add pop hlt jecxz add lahf out and jle fimull popf jnp inc in out dec inc sbb lcall lret out cld loope add lods dec jb mov mov add out (bad) pop pop sbb mov ljmp xchg out xlat adc xor pop out push inc in cmp cld test movsb xor add fdivr out cs dec dec xchg shrb out sub imul add stos sbb sub (bad) adc (bad) pop lods (bad) iret out jmp movsl loope out inc adc sbb lret mov out arpl das bnd (bad) xchg ljmp mov mov cs fisub lods jae dec scas cmc pop movsb sub fcoml out ljmp sub sub inc insb cmpsb ss out dec lea bound js addr16 or out je cli xor cs (bad) mov arpl lods shll xchg lds push or pop push (bad) mov imul push mov fucomi cwtl fstps imul jne inc leave and xchg mov sub mov psubsb fdivp cwtl inc mov ss shr sub out cs dec lcall pop pop fstl negl sarl sub lods in insl dec ret push lahf push xchg sub cmp push push movsl (bad) mov (bad) stc rolb xchg cmc jne out dec outsl in inc push popa lds jmp cs nop loope or test testb inc (bad) cmp in or ret loope cmc push lock stc loop mov shlb inc push push pop adc fwait jo outsl dec pusha cmp popf push repnz jp lods and out loope mov inc mov aam xchg jmp cld or ljmp sub popa lcall cld daa lods push mov cmp (bad) stos loope jecxz cmp sbb cmc iret mov dec inc mulb out and movsb sub rcrb mov inc popf xor pop (bad) sub int daa lcall insb or sti lcall mov out push xchg jge das sub std out xlat add (bad) cmp and out push xchg fxch xchg or (bad) push pop push out mov ret data16 sbb dec mov clc out call adc sub xchg movsb out imul mov sbb push test popf adc jne dec cmc out and cld pop movsb jmp shr lods shrb (bad) (bad) adc push sbb or pcmpeqw sbb ljmp (bad) f2xm1 sub js mov push xor aam dec int push mov mov rcll out cltd sbb sub add test add in out cmp aam mov ljmp popl gs jecxz sbb lds or fiadd out jbe adc out (bad) sub gs cmp mov mov (bad) jno mov in inc aaa push add xor pop lods test jb arpl les jp mov sbb out push mov mov mov xor sbb iret (bad) push iret dec and out incl lea dec add mov dec out fcmovbe xor adc enter xchg imul test out es cmp and sub daa xchg int3 xchg out jae jbe cmp (bad) (bad) out addr16 popf mov mov inc outsl lret push sahf in or sbb out popf jmp and sub int3 push mov loopne xor lcall sbb ret xor or xchg cmp cwtl xor out cmp fistpll pop insb nop xchg pop and sub stos pop daa insb in push mov push add mov leave mov xchg cmp inc notl je or sbb mov outsb add dec xchg dec (bad) inc jbe out lods scas adc cltd (bad) pushf bound ljmp sbb and pop adc adc cmc sahf push out cmpsb jno ret test es scas sti shrl aam sbb in mov in sbb mov mov out std cmc pop rol in cld fld push sub out sahf cmp mov mov lret rorb pop (bad) and mov fucomip negl gs jecxz pop xchg push rcrb push push ljmp bound out fcmovnb jle push or lahf mov jns pop sti push imull sbb out es mov fcmovb je push cwtl subb push xchg out mov xor int lea out mov aas fsubs (bad) je adc pop pop loop aam test lods das inc mov (bad) mov adc dec cli inc int3 dec jl xchg jb movsl pop out loope cmp jns inc (bad) mull adc aas out xor dec xchg push out cmpsl and (bad) mov xchg (bad) js out sahf daa sub adc out lea mov out lahf pop inc cmp or dec movsl imul pop and fistp out lret cltd (bad) inc out mov or out pop xor jns and dec jg pop (bad) out rol ds out xchg negb ficom jg out sbb in inc fstps test aad loop gs out mov sub push xor roll stos inc out test lods add add sbb fs negl stos lock into xlat out push dec loop out pop das fnstsw and out test inc call aam insl mov pop jp cmp fs mov out loopne add xchg xchg out add js mov sub lahf xchg push adc out les out sbb lock jbe inc dec inc cmpsl test jle test sbb out je jmp and dec stc jnp fs andl jg cltd sbbb sub xchg cmovb push sub (bad) (bad) jo int add mov and push sbb imul xchg xor cld loope enter cmp mov pop iret lea imul adc pop push repz fsubrp lods cmpb ret (bad) xor rcrb mov xchg je jo lahf dec mov ret ds stc out fisttpll sub lods in sub dec cltd sub xchg popf das movsb (bad) je mov (bad) in ljmp out cld daa cmp sub xchg rcr or out push add stos and ret ljmp lods and out mov push xchg int pop testb fldt mov fdivrs sub sub lahf shll mov pop outsb call adc out fbld outsl push mov (bad) adc rcrl push aam push dec xchg mov pop popa inc out insb js mov dec clc loopne dec lcall out cs movsb int3 cmp adc in out (bad) xor dec mov iret icebp loope js pop add cld mov out shrl xor decb out sub cmpsb aaa out and jmp adc inc imul add mov inc out into iret insb push flds dec imul es insl repz lcall sub out cmp jbe push cmp inc test xchg out cld xchg ret out adc out imul dec lcall js push cmpsb jne xchg (bad) inc xchg out push dec aas ss fcomps mov mov adc (bad) lahf (bad) out xor (bad) out mov jo cmp push in mov jg loopne pushf rclb jno icebp xchg sub cmp mov adc push out mov mov js pop jmp aad pop cmc cmp hlt fcoml mov or nop loop sbb ljmp rcrb cmp icebp ljmp out in adc mov lret out sbb gs mov and or leave bound out sbb add imul loop inc imull icebp out sbb mov fldz dec jmp pop addr16 cmp or ret inc pushf out push movsl inc jle aam popf lret pop add pop addr16 lods cmp nop or push pop push xchg iret (bad) call (bad) out dec mov xor xchg mov cmpsb je push lcall sub pop sub out es out aaa sub and add push movsl add jbe leave fisub jmp fwait out std sbb jns loop out mov push and mov out pop and ret movsl leave out mov mov enter mov (bad) pop (bad) mov in aad out cmp sbb out dec adc (bad) in jae out sbb in outsb out mov out fmul out fisubrl sahf sbb faddp lahf add cmp xor push (bad) push mov frstor inc insl xor out subl aas gs in jmp adc mov outsl sbb into out in sbb (bad) pop jg ja jle (bad) js add repz jno les push sbb (bad) dec push ja mov out jmp scas cmp aas stos fs mov mov mov sbb mov js ret sbb (bad) pop adc cmp dec cld xchg jp in push mov mov sub jg insl es jns pushf dec outsl das push xor call idiv into push pushf out adc push ljmp adc outsl jae leave ss dec jge dec push call das nop sbb test push push lea pop jmp lret cltd out cmp or out lret push mov cltd out cmp inc fucomi dec shlb sub jge ljmp sub pop lods jne mov fldenv sub mov mov inc add in fwait test addr16 dec movsb push out in xchg cmp adc xchg pop inc pop jmp cltd mov sbb fwait jne les push int dec pushf out xor push dec out std test (bad) pop (bad) dec fldcw jns mov pusha loope dec jecxz (bad) pop in xchg mov fs sub test mov fisubrl loop out mov aaa sbb sbb lock mov clc subb mov hlt fcmovne adc out sbb and adc insb push fistpl ret (bad) lahf jge in out clc push push add das call loop mov aad aas mov pop xchg pop push lods call loopne (bad) adc out dec imul fisttp xchg push mov rcrb xor xchg xor cli out aam dec std jecxz popf loope cwtl and sbb xchg and ljmp adc scas push jl das out xchg mov les out divl jno out (bad) dec push ror out and mov out push adc loope xor adc bound mov out (bad) js lea and pop mov pop subb xchg sbb dec or dec cmc xchg push pop bound out mov xchg stos out mov sbb or sahf jnp or push test adc push add inc shll adc cmp (bad) xchg stos mov out mov into pop add imul loopne adc xor pop xlat stos out push leave lcall xchg (bad) in mov inc jg in or pop mov in scas xchg sbb mov jl jo fbstp repnz sub xor (bad) pop andl xor mov aas leave lahf fcompl lds loope sub call ss repz mov lds lock xor lahf pop out adc (bad) xor sbb cltd sub and fstl sbb xor xchg fdivr adc pop in add aad jp inc loop pop out icebp mov mov out insl scas arpl pop mov fsubrp ss fucomip (bad) sbb xchg xchg sbb cmp (bad) lret or mov xor xchg stos xor iret cmp flds mov and mov adc inc out imul cltd xlat and xor dec bound sub sti lds ss pop mov sub jo loopne arpl mov jmp pop lea xchg cmpsl mov (bad) sub ljmp add add add cmp mov lret inc pop inc xor movsl sbb mov popa (bad) dec insl (bad) flds mov ret mov adc push or sar scas ljmp out stos sub fidivr test ficompl in xchg out dec jecxz sub scas sbb inc mov lock push out add push icebp movsb call add cwtl testl insb ret gs dec in cld clc int3 cmpsl pop loope dec lahf jb sub inc sbb divl mov sbb std scas shr fnclex pop xchg push fiadd cmp mov (bad) or js push (bad) out jle jle mov inc iret nop outsb xchg out or inc mov cmpsl push leave scas daa (bad) out cmp lret or or (bad) cmc mulb push shr sbb jle adc and (bad) test sub pop repnz mov sahf rorb lahf pop out in stos imul aaa out pop sbbl popa nop and cld in mov leave xor loop repz cli sub sub out xor dec push pop mov push fbstp ss mov mov xchg test jne addr16 push out dec outsb out (bad) cmp cltd test stc xchg aad xchg addr16 mov sti lods dec or daa (bad) out cmpsl in lock xor pop adc lock out pop (bad) int3 sbb ja sbb mov lock out loop cmp push jg pop out mov sub rorb gs in mov es imul cli jns mov push or shr repz mov outsl imul push xchg and push and adc outsl jns and mov push cmp inc imul cmpsb fucomp adc sbb push cmp fstl aad xchg inc jbe enter mov adc push push popa pop (bad) gs ja and shrb out mov (bad) and das repnz mov lahf xchg out insb adc sarl push out out test repnz flds inc movsb loop pop cmp mov adc out push sub jno gs movb or aaa out jecxz adc lds mov out leave test ret (bad) mov xorb dec lock or into (bad) movsb adc call mov jle sbb into pop (bad) sbb insl stos mov loope and mov jbe and pop add ljmp or out out xchg scas mov pop dec cmp xor callw fistpl mov dec cmpxchg mov push xor push inc out xor insl aad nop out pop mov and xchg push in dec out mov enter inc xchg out imul (bad) in fisttpll mov cmp inc pop cli push pop or jne mov pop out cmp sub lods mov pop and dec inc ss pop movsl popa out xchg sbb xchg mov xchg gs mov scas in jle xchg mov (bad) adc add xchg orl inc sbb shlb outsb mov out inc enter push dec repnz inc cmp (bad) cld push xchg ljmp pushf xor xor cmp inc or push pop lret pop in mov sub xor (bad) mov out ds sbb jl out outsl mov pusha mov jnp push mov add inc icebp out lret test pop pop push out inc fldt out mov mov stos mov xchg push lods test out pop push out mov jne sub jecxz adc jmp out fist (bad) into (bad) cld pop cli push (bad) daa pop pushf in outsl push out jno insb jge loope shr sub int mov mov out cli jo outsb outsl mov std adcl out fwait shrb sbb pop pusha push cmp out loope hlt cs inc jp scas outsl lods out bound mov out and repz jno ja fucomp mov icebp (bad) in cli stc les cmpl pop ljmp testl loope mov lea mov xor (bad) mul (bad) pop mov xor pop mov dec std out and push ret xchg inc adc (bad) out stc mov js dec adc out dec cmp lods pop lods outsl hlt mov in ljmp cmovle and sbb add inc (bad) out adc lcall repnz adc jb jnp jae jg outsl (bad) mov mov arpl and out icebp jecxz jno je sti out xor lahf sbb imul xchg test insb sbb dec push (bad) lock adc int ja arpl jo sbb ljmp out or mov in js movsb lret mov aam out stos sub push in push (bad) adc lcall jb dec sbb cmpsl mov arpl out ljmp dec out and push pop cmp loop jo loopne hlt dec and mov inc or test fstps popa sub push outsb negl jg push sbb int3 inc pop sbb fsubrp jnp test into cwtl out sbb ljmp pop out jg,pn or inc stos mov es dec xchg mov call xchg xchg or out pop ss or mov adc out in add inc out mov or fisubrl xchg adc lahf xor and ljmp cpuid xchg loopne xchg sub add jne xor xchg leave ss (bad) cs mov xor iret inc jb jbe in adc out dec adc xchg sar (bad) jp,pn imul je (bad) push and mov xchg (bad) mov sbb rorb (bad) jmp sub xor dec pusha mov out repz xor sbb push lret pop cmpsb push push out cmp cmpsl xor or out dec (bad) roll push insb inc jmp ss call (bad) sbb mov iret cmp movsl and cwtl (bad) mov mov xchg jae adc scas xor add and pop sti mov cltd out and loope (bad) mov out imul loopne and pop (bad) push call sub cld push std out lea sub mov cltd out movsl aaa insl push push mov or push out and mov jecxz cmp adc or rclb aas pop and mov (bad) cwtl out and xor xor xchg xchg jmp adc imul das rorl inc (bad) xor mov js imul mov dec jnp ds sbb iret jae enter aaa cmp pushf pop sub iret mov pop hlt add push sbbl out cmp mov add andl jmp iret hlt sub (bad) in imul sbb out pop xlat or ret out mov imul sbb fucomip in xchg pop push mov add sbb int lds ficoml pusha xlat dec loop data16 push pop scas mov jecxz in mov pop out arpl fsub mov shr fnstenv shr aad pop adc rcll dec adc popf or aad pusha loop and js (bad) xlat pop (bad) xor cmp mov out ljmp out out jle outsl pop push movsl xor in mov inc sub lret jl inc out mov xchg and stos pop or out dec out mov je push sbb add cmp jmp sbb adc aam jbe (bad) jmp inc lsl int3 and pushf or inc push ret scas ffreep inc push imul faddl push pop mov jmp out js inc xor int3 adc jmp pop call out and add jno dec iret push xor jnp out (bad) fdivrl (bad) out mov xchg xchg push xchg adc lahf pop push pop test sbb jl cmp sub jecxz jno mov dec aad cmpsb inc sbb icebp ja inc fadds and pop daa adc out rcl cmp out mov out outsl adc adc push cmp mov dec fstpt mov adc pop data16 inc (bad) (bad) push rorb in push xchg lock out add pop mov out and adc loope out jnp lods sti pusha xchg js out jp pop xchg out subl pop jecxz mov out inc push fisttp fbstp out xchg sub icebp out out or pop pop dec sahf in ljmp out (bad) adc cmpsl mov (bad) cmp aas jmp xchg push out sbb sbb jnp adc jg inc mov out xchg lds daa pop dec icebp or repz jne out out test sbb stc inc ficompl idivb insb dec repnz cltd push loopne (bad) mov ss xor das fwait or call lcall add lret xor dec pop lds pop inc outsl addr16 mov sarb jns jbe adc pop cltd lret out call pop xchg stos out das hlt push aas lcall ror aaa (bad) push aas ljmp gs cwtl (bad) scas xor cmpsl in xchg test add mov xor rcr aad ljmp out push popf out (bad) rcrb out test xor imul andl jmp add mov (bad) movsl movsb in out inc sbb ljmp imul cmp (bad) sahf call mov scas jnp mov xchg leave push sbb das in loope (bad) mov shlb mov mov (bad) dec dec mov sub mov jmp out and jnp jns adc add mov insl mov cld inc aas dec je dec add cmc dec repz rorb cmp scas pop incl out loopne (bad) lret aam aad lcall shr outsb xchg std sbb push adc jo ss dec fistp cli test push ljmp mov sahf cmp jo add das mov sub arpl (bad) cmp out mov mov xchg insl clc rorb rolb out mov out call mov adc mov lret mov in loope mov xlat int out das (bad) mov fldl add dec add clc sub sbb mov ret out fisubr jmp popf outsb aas in stc cmpsl pop out lret xor dec adc sub ret lahf mov xchg xor inc mov (bad) mov repz mov xchg or in jnp out mov subl fucompp and sub daa pushf nop jge mov mov inc jmp lcall out pop jmp notl push test clc pushf mov cmpsl jecxz cs pop push jp ja lock add ret xlat das mov and inc jmp ja push sahf fs daa stos mov es cmpb jbe out xor stos call out pushf cltd lock jle dec lods out aaa and mov xchg push xor fistp iret cmp paddd (bad) fs pop out jp mov mov sub mov popa decl ret or out or xchg rol into sahf cmp inc jns and cmpsl or jne xchg in or lods out (bad) or lods mov adc cmpsb xchg pop push pusha (bad) out sbb in fsubr inc rolb rol add and int sub rcrb jle outsl (bad) xchg in pop mov loopne sub out popf (bad) xor fcompl inc insb and out push jbe fs repnz xchg mov fstps pop es sub jbe pop test in stos ljmp (bad) out iret cmpsl mov lds fcomps push out ret into movsb sbb addr16 lahf mov add jb jl jno aam jbe das push add pop ret daa dec push inc in xor adc outsl mov lods cmpsb out movsl sub or out and pusha mov xchg xchg jae loope out mov bound inc out and sahf push mov xor adc adc cmp jae cli push xchg push jbe mov inc (bad) je sbb pop inc stos jge daa loop js,pn mov sbb inc xchg pop xchg pop pop push dec out jecxz jnp jo xchg sub cmc cmpsl in mov fs fdiv ret jno ljmp (bad) scas or push (bad) mov int repz jo js out cmpsb addb out dec xor imul outsb (bad) mov mov lods insb (bad) cli clc lods sub fbld sub loop mov stos cmp test push sbb imul popf cmp in jno xchg push movsb add scas fidiv jb fildll inc adc xchg mov scas (bad) mov mov or out mov adc lret aaa jecxz stc aas imul inc xor in inc outsl push paddsb je iret es in (bad) jb (bad) out add pop push out xchg and cmp (bad) mov out cmp aam (bad) out xchg or insb out std (bad) mov adc push shld lret fs mov pushf jmp mov call inc push add add and pop fbstp daa mov pop jns (bad) cmc mov dec enter lret (bad) loope mov (bad) ja daa pop popf push std sbb out cwtl xchg cmp js xor leave out xchg xor inc in lcall dec in and mov push jl and mov loop test push lods call dec movsl out xor iret test jb data16 inc sub xor mov ja add orb and out repnz hlt pop lock lcall out pushf leave rcr cltd pop fucomip and scas inc lds push lods dec xor inc sub xor adc xor lret insl mov jno cmp in icebp mov (bad) mov arpl cld push pop jnp hlt jo sub out stc dec outsb mov push fiadd sub cmp xor (bad) mov rorb push je in leave pusha push (bad) lea in ljmp pop lock fs out imul pop adc cmp jp loopne xchg aas decb pop imul jmp push (bad) test adc adc es sub mov inc or inc and cwtl out sub mov leave mov out push pop sbb pop out loope lret scas mov pop pop mov add ret jecxz movl push mov and out sti or cmp cmc lods adc xchg adc addr16 pop cmp jbe out xchg jns (bad) shr or dec mov jmp clc push in enter sbb push xchg push sahf fnop pop ss aas inc sub out adc insb pop and pmaxsw inc sbb pop sub out cld lea ss daa inc cmp ret push notb jl in sti xchg (bad) pop push lods sar pop loopne test mov sbb ds jb loope push push and adc cs out rcr jb xchg xchg mov out lea adc ss aaa mov xor xor roll mov mov sarb pop mov bound pusha movsb shr in dec adc jae mov stc insb out fldt pop xor cmp orl push inc ss sbb mov (bad) out pushf (bad) xor enter rclb out loop push or out sti xor push out addr16 cld lods sub and sub or rcll mov fadd cmpsb mov dec adc out and jmp jmp sbbl cs out mov je icebp out mov xchg les out jbe cmp inc test lret sub lods add movsl es or pop out vrcpps js jns pusha cmc push jne pop xorb lock inc popa out mov mov sbb pop in xchg jecxz mov inc out mov cmc xor test add mov movsl out sbb sub out xchg scas icebp add sub (bad) xlat adc pop cs pop xor in cmp push mov out jo jge xchg data16 xchg xchg cmpsb adc sti jne imul pop fisttp xchg icebp decb adc push or out scas (bad) pop jecxz push inc out and mov in je dec and or fistpl jnp in mov adc out es scas in mull (bad) into and mov into mov (bad) out out ja fwait test repz rcrb lods (bad) mov aam nop pop or add or loopne mov out popf int3 clc xor aaa out xlat push lret cvtpi2ps add ret out inc shll sbb mov lret jbe out dec movsl lds out aad inc enter xorb daa ja push adc das mov daa sti (bad) mov cmp adcb aas (bad) into add test sbb in bswap push std (bad) int and push fisubr jl iret pushf cli fsubl ret and es mov sub add repnz shrb cmp xor out sub push pop jmp xchg (bad) rclb pop je push lods fwait sub vpxor repz nop ss out and xchg pop lods jg out xor repz pop adc or scas xor loope out bound mov xor mov out movsl lahf inc xor sub test push pop test sahf cmpsl push sub push mov cmp (bad) mov lcall and out cmc cwtl or lods out loope negb adc sbb popa lret dec loopne mov fildll nop xchg pop jns push insb in imull push and sbb dec fldz pop int push adc jnp cmp xor cmp imul leave cmpsl push sbb inc out adc xchg mov lods repnz bound stos iret pop xchg jae mov add fwait popf xchg push lock dec aam push into mov out das (bad) pop jle cmp push xchg test lods repz int xor dec cld out mov or sarb xchg pusha loop (bad) mov jb out arpl imulb outsl mov or inc pop out mov fdivrl jg inc pusha out nop add (bad) mov mov out mov dec ds inc mov scas jae mov out je adc sbb jbe incb popf push mov jp cs (bad) daa and jge out xchg mov jnp in mov push xchg push push push mov adc inc adc pop cmp fsub add test hlt aam sbb mov push fsub xchg sbb ljmp out push imulb xchg push in addr16 rcll fimull xchg movsb out add popf lahf mov mov inc loop cwtl pop xchg sahf lods and stos sub lret mov out and lret cmpsl arpl jp jge push (bad) cmp mov (bad) sub jns out cwtl sbb arpl sbb dec mov in aad xchg ficoml push les mov ljmp (bad) mov out roll and pushf in jne cmp out mov push outsl out incb pop scas xor cmp and out xchg mov xor pop (bad) out repnz or jg dec cmp adc dec out lret dec push lahf xchg sbb inc out sbb mov xor cmc (bad) daa out xchg call sub mov dec movsl stos sub mov in xlat mov in test mul enter and scas mov push das inc cltd or xor dec fstpt aam arpl push sbb sahf into mov mov rclb jmp inc shrl out xor dec add mov mov inc scas in jne shr push cmp pushf mov jmp lret (bad) out icebp adcb popa mov imulb mov add aas cmp pop imul out pop stc xchg scas fnsave out loopne jle icebp xchg xchg jecxz imul (bad) std insl ds fisubl or push out sbb jg mov sbb xchg out add jle aad mov sub sbb mov sbb sbb popa and (bad) mov fcmovne hlt in adc lcall in out mov inc pushf xchg js fwait mov mov xlat jo in repz push (bad) out out nop clc stos jno and out jg cmp xchg psrlw fbld adc test das ss push mov dec aad scas push lea out cmp std cmp out pop push lea add outsl jae xchg xor loop insb (bad) (bad) mov ret out or mov cmp ret scas out outsl push icebp addr16 out xlat out sbb in ja fcmovnb clc out or fs xchg xor sbb xchg jg adc out push cmp insb dec out fsubrl sub jecxz push gs pop push nop out stos testb out cltd or jmp mov rcl out dec loop ljmp sub lods ljmp outsb call cmpsl das bound xor out adc xchg leave in out sub push lret out cmp cmc cmpsb or cli out pop mov sub cmpsb push (bad) lods xlat jp adc jl int or cld xchg and mov push adc out es insb push xchg ret (bad) pop ja int inc out jge dec out cmp and cmp cmpsb xor pop stos fstps and into add imul jecxz scas fistpl sti add in and sbb js stc in sbb (bad) aam mov push pop call in pop push int or and fildll out mov std shlb jne lcall hlt inc push cs pop loopne sbb jnp cmp repz pop xlat out int3 addr16 xor jecxz sbbl ret (bad) imul xchg mov jle cmp loop cmp sbb adc ror xchg enter iret jge mov lock out push lahf mov das out cmp mov out xchg (bad) faddl arpl push insl hlt xchg sub out push sbbb lret adc sbb out sbb jns in mov scas out les add out jae mov es sahf rorb and in das jbe inc movsl (bad) mov sbb pop adc push in scas pushf popa out mov test dec out mov outsl dec pushf out jmp push fadds push in bound sub or pop jae push mov adc pop mov out imul cmpsb adc stos out pop iret insb sbb cs addr16 push movsb insl out jnp jo cmp cli sbb push cmpsb ror jb xchg pop out test add sub jne in sub out mov in push add jp jecxz out dec xchg (bad) repnz ret inc xchg in std mov (bad) mov push stos cs in lods cmpsb out rcll jl icebp leave test hlt mov fcmovnbe jo and adc scas out out inc dec mov hlt outsb out stc inc arpl out jne push adc out pusha dec int3 xor jmp shr in stos push mov inc (bad) out ret push push arpl sub or cmp adc inc or adc nop jecxz cld divl dec imul and inc lahf cmp out (bad) sarl push or cmp out lea dec hlt out jo sub (bad) pop adc (bad) clc iret notl out stos aas pusha std out aaa mov cwtl movb xchg mov mov out ljmp lea sub pop jg in push js loop sbb inc mov jnp sbb push push cs ss call mov jp scas sub clc and inc lahf imul mov cli sub mov xchg sbb xchg nop mov inc flds pop scas xchg sub adc jo mov pop out icebp pop sahf in out pop (bad) mull and subb push stc push movsl ret loop dec jne pop in pop in pop adc mov out loop mov and sbb sub jo int ljmp xor jp imul pushf cld in out sbb imul (bad) cmp js or mov add or cmp sub iret mov into fnsave dec sti out jbe mov sahf aas xor ja cmp add out ret push lret stc fwait mov sub outsl lock (bad) in movsl daa nop lea rclb pop pop push jo add pusha in test xor jae mov aam (bad) lods out sbb mov loop wrmsr jge mov (bad) sub adc pop fcoml out test pop pop out adc mov fildll xchg mov movsl push xor sbb outsl xchg test js fnstcw adc sbb (bad) int stos jg mov jno dec push or out sub pop shlb out cmc aaa fisubl jle test fadds (bad) (bad) das mov dec es lock rorl mov ret out popa (bad) daa xor pop rolb inc mov mov scas mov sbb jbe hlt mov out std xor adc and mov lret add les and je jmp repz pop sbb pop out cmp lret dec pusha in jecxz scas out pop lods push xchg cwtl ret lds dec fist mov mov xchg icebp pop js xchg cli xor out bound or lock shrl in jmp inc sbb bound imul incb sub xchg pop push cli xchg insl int3 test aaa (bad) into (bad) test fxch (bad) jmp mov inc adc in mov out out cli push loop bound mov les jl sub rorb (bad) divb es loop loop xchg xchg sbb test pop test js out int xchg fwait aam ret into lds cmp mov xor lea in push sub cmpsl out (bad) fldcw mov call dec outsb int mov inc xor lds fild out aam xchg jbe,pt scas cs (bad) out jno mov je das (bad) out mov inc xchg adc rcl and mov adc in fwait test out dec add mov bound inc push sbb push jmp cmp push out out jge flds ss out add push lret cltd data16 push mov sub pop int pop mov inc ljmp or xor divl out clc mov add jecxz jle or out fidivr cltd scas (bad) mov push push push pop mov dec mov ds out pop inc push mov inc test jo xor jecxz push sbb call jg pop mov subl sub out pop je fmull test cwtl pop lods imul adc mov lret test inc dec out out clc icebp jg repnz out or xor out inc push out fidivrl push iret lock loope adc xchg out jae mov xlat dec sub push fildll (bad) mov popf jbe aas fdivl cli xor cs outsb push push aas inc test out std loopne xorl int3 pop out in inc lods mov or bound or pusha dec adc rcrb arpl bound imul cmc inc out xor jbe mov cmp sbb lret jne mov (bad) out enter je push jle inc pop adc test lcall pop cmp (bad) (bad) out popf (bad) and push sub into ret sbb out imul (bad) fbstp mov and and add dec cli out shll sub (bad) adc xchg or inc mov xchg push mov cwtl xchg mov (bad) lret dec adc ja push dec fwait mov iret dec in jb ljmp or mov imul jl pushf bound (bad) sub sub in out xor movsl lods mov call jne subb ss xchg (bad) xor xchg insl or mov adc fidivr (bad) jnp push int lods out (bad) ljmp shrb fwait lea pop inc aaa out push test lods ret fidivrl jbe jno xchg mov loopne subl dec loop xchg inc pusha pop lret mov mov pop imul mov fst loop adc lods mov xor out adc pop xchg into stos (bad) imul push push add pop jecxz or pop or out orl (bad) jl fstpt push mov lahf sub out (bad) push test or js mov cmc stc and clc or or sbb gs xchg adc ret out subl loopne out nop shl loope mov fwait (bad) out pop mov push movsb iret mov (bad) ljmp (bad) js push sub inc leave lea pop sbb adc (bad) pop test or adc out push mov xchg out addr16 dec pop unpcklps pop adc and lret int in mov inc xor push or das jp mov adc add je pusha iret inc mov sbb pop aas sub and xor pusha out or pop (bad) iret xlat repz pop imul inc jnp cli add lahf xchg and push out pusha sub jns in mov movsb (bad) roll xchg ds divb fs repz call (bad) mov pop out clc out push loopne push scas out cmpl jge iret daa dec sahf adc push out inc pushf and (bad) scas fcompl loopne scas adc or mov pop sbb xchg popf inc call dec sub jle or cmpsb pop fs fistpll sub and loop popf pop data16 cmp pop and jno mov sbb jmp cmp jmp xor xor fcomip pop xlat dec lock add test fs mov (bad) out clc data16 mov gs push rolb dec xchg fcmovnb adc pop push pop das lods jne xor xorl lret or mov sub outsl and out add adc out add in mov ret pop call aad out sub loopne out xchg lss out sbb cmp iret faddp jmp out movsb mov adc jp add loop mov (bad) jnp out jbe ljmp mov iret or pop jg bound loopne xchg mov cli dec cmp inc imul lods push mov out xor or je push test ljmp jb inc out (bad) packuswb out cmp mov out jmp or dec out mov mov dec out stos scas lods push pop lcall imul int push scas fbld out call scas push into in (bad) fnop out pop test ljmp push and sarb call repz adc neg in push cmp in mov push movsl (bad) icebp mov pminsw xchg rcl mov jo out idivb xchg fldl out pop lret icebp pop out bound cmp loopne or pop rcl lock out cld repz scas pushf push cs sub idivl cmpsl test ljmp ret fwait jge std loopne icebp jne test imul cmpsb add jg nop out outsb je jbe mov sub repnz (bad) fldcw loop pop out cmp loopne inc into xor out add iret rorb loop sub popa out mov push xlat fldcw sub cmpsb sub and icebp sti imull aam into outsl xor xor xlat inc hlt call add dec push nop into or js cmp insl loopne shrl out movsl lods inc add mov sub out dec cmp aaa jb and test sbb out std fcoms movsl pusha adc add or lods es es orl pop out xor inc xchg out movsl jb inc cmp mov xchg pop mov dec mov lods rolb lcall stos out sarl xchg xor push and stc sub and xchg dec mov outsl gs lcall in inc ds (bad) cli xor jb xchg gs int3 dec sub andl mov out sbb lea out aaa jno nop adc pushf pop js ljmp mov ss xchg loope add and inc xor jno outsb pop into mov sarl (bad) aad jp shl lds in bound cld nop lods cmp insl not sbb adc movsl lea not lahf adc out fcmovne js imul shr mov pop (bad) sbb das jle inc and jg lock jne sub in int out (bad) mov mov out rcr xrelease lret es fidivr mov or repz outsl add sbb out push inc push xchg inc test pop movsl cmp adc cmp into push sub xchg jne in or mov sarl mov mov xchg sti cmp xor shr or add jle lret or shr in pop int cld or cmp pop sbb popa push (bad) push jmp frstor out pop mov adc out adc sbb out jbe push lahf mov push sub add ds inc in fisubrl add call stos loop shrb mov fdivrl jecxz lcall adc (bad) sarl (bad) cmpsb loop mov mov out sahf push cmp sub fsubr pushl jne mov cmp loop cltd sbb out push sbb jge or inc add out jb test mov push or lea (bad) out movsb fmul push jle add out cltd add dec ljmp int3 rolb and pop (bad) in xorb out fsubr pushl aaa int ss jle pop cmp test les push (bad) dec rorl out sub pop mov inc pop insb out mov out xor mov mov mov ret scas dec mov pop xor and (bad) aaa iret jns inc inc cli inc mov enter out cwtl xor dec loope dec xchg out push mov in test out aam std push push jl lock nop push icebp jb daa loope inc idiv out push (bad) dec inc rcll jne push (bad) icebp out scas or sub out adc jb mov or lock out outsl mov ljmp pop gs pop popf and lahf dec pusha pop out aaa lods sarl mov iret test (bad) xor test dec dec mov xchg sub fldenv cmp out icebp int cmc mov add fsts jp sub cmp shr sub xchg aad es xor pop out in pop jl sbb mov gs jo hlt out fsubrl push sub adc retw out xor ljmp arpl testb xchg mov ljmp out fdivl test iret imul dec test lahf push mov lret jae rcrb stc xchg test out mov dec push pusha mov lahf sahf mov outsl in insl cmp cmc scas add fucomp lock cs lcall hlt adc xchg cmp scas add jp mov (bad) bound daa icebp mov cmp sub in pop jle or iret popf out jmp push mov (bad) in lods push lods lcall cmc ja out sub fild fldt jmp fs ljmp lahf xchg mov (bad) sub lss pushf ljmp je rcll out lahf in arpl sbb mov imulb mov and bound inc rorl pop mov std push (bad) imulb dec outsb out mov and test dec lock in jmp mov mov das push push sahf addr16 ret hlt add sbb cs sbb lea out jecxz cmp push test in out loope stc outsb xchg dec add mov dec cmp repz add mov mov loopne inc adc xchg cmc out insl (bad) jmp out (bad) xchg out popa jg leave out push mov rcl inc mov cwtl loop pop inc or fs nop aas repz out cmpsb into mov xchg or insb bound inc mov out mov cld mov adc data16 cs into pushf inc aaa jl fcmovnbe out dec outsb push cltd mov shr sbb sbb out loopnew repz xor dec sub imul sahf or xchg mov cmpsl ljmp out call daa into andl test rcrb push in fsubrp scas std mov scas mov dec ss popa out cmp sahf and je and (bad) and adc pop mov sbb pop and lahf push mov xchg (bad) in push out std sbb sub xor xor xor xlat out (bad) xor lods gs sub popa mov divps and (bad) std in push subl lret xchg and out in rcr popa add lea sub mov loop cli in cltd dec fild xchg sub jg out pop movsb mov and daa test sahf xchg out popa xchg mov cli sub je repz mov out popf pusha and mov sbb inc sub cmpsb out push loope and push rclb dec out pop pushf repz in loope hlt mov push pop sub xor xor mull out cwtl out jl jae fwait in shl inc out aas pop push sbb test and xchg pusha sbb shr loope hlt cmp push inc loop push fstl mov dec cmp sti shr call cmpsb xchg rclb out jmp xor loopne add call (bad) out sbb lock adc jb mov outsb or les push sbb out xchg xor and sub mov iret jle adc mov jno shr jb out xlat jns mov out cmpsl sub sub sarl push mov nop inc addr16 fnstsw xchg out test jnp lret cmp inc out lods adc addr16 jo pushf out mov xchg ja mov mov mov daa imul mov adc aad inc sbb popa jmp lds jg out cmc xor pusha push out inc and adc dec lret push jbe mov add pop mov sub mov (bad) jl cli push push pusha popl sbb in (bad) out mov push out sti xchg fs test fdivr out cmp imul inc repz xchg push popf daa (bad) in out xlat pop rolb mov je lods adc imul mov sub out test ja out int inc psubsw (bad) mov inc out and call shrb loop adc sbb mov cmpsb (bad) (bad) shr sub fs sub and rorb push adcl xchg out pop add and repz xchg out (bad) test scas inc pop mov shrb xlat loop test xor mov pushf cmp cmpsl dec out cmp fwait xchg (bad) sahf incb add test loopne mov jp sub clc loopne aaa rolb xchg mov shrb xor pop adc ljmp mov or mov adc gs fwait lcall scas lds test push scas clc pop ds cmp sub out fsts aas cmp or mov mov push out mov fstpl out and test out mov sbb jle insl and push mov movsb stos mov mov out xchg push and adc (bad) add adc adc out das movsb dec sahf ret and mov ds in sub addr16 lcall push addl sbb push jmp mov pop mov push (bad) and jnp cmp imul and dec arpl mov inc es jo push lea sub push pop ficoml stos pusha insb out icebp sbb mov out mov shrl out mov pop sbb das push lock dec adc (bad) lret push dec inc test dec inc bound xchg shrb gs jle lcall pop push out and sub add xchg out push test push loop aas jbe cs (bad) adc nop sub lea xchg adc add scas sti cltd and adc (bad) xor mov cmp fidivl fucom adc sub lock loope sub out cmp iret inc fbstp cltd sarb mov sbb repz xchg mov mov aad (bad) aas rcr sbb and movsl frstor add jmp or pop pop out add xchg roll xor out push mov adc scas dec (bad) loopne and push push aas insl fwait leave out data16 addr16 dec js repz mov cmp jp or mov cmpsb pushf out sub fcmovbe push jae arpl push dec push sub fyl2x out inc je outsb pusha mov loope jge out dec (bad) cmp lods out sbb addr16 ret out cmpsb adc xchg push ljmp das stos sub cli (bad) sbb stos add inc setbe icebp add xor pmovmskb ror int xchg loop pop mov sbb stc (bad) rclb lea mov sbb mov xchg nop cmpsl fist loop call xchg mov sub add add out jl movsl ficompl cli jns mov push test adc test shl rcll pop fiadd insl adc mulb pop xlat lds loop jne pushf out pop push sbb pop pop std push add mov jle xlat das jmp shrb adc ds mov hlt cmpsb out or mov dec out adc sub shr or mov pop add stos out cli out mov push fist inc dec call jl cwtl ja lcall imulb loopne adc dec or cwtl int out xor cmp mov out mov (bad) nop cmpl pop mov aas sbb and repnz rcl lock out ss test out insb data16 add xchg dec out inc imul jne pop push xor and dec mov add cmp push popf and cs push rclb jns pushf lods js xchg stc out mov cltd push pop add mov (bad) testl mov iret sbb sarb push mov int cli mov push into dec pop in sbb sub and movsl stc mov inc jge dec sub push push jp and inc out leave push jne fsub in sarb mov cmp (bad) push inc xor jl lods xlat cltd mov test xchg in clc decb cmp dec call cmp aam std mov stc pop dec fldl pusha (bad) cmpsl out sub in imul push out fsubl xlat jnp loope out jmp xchg cmp lret or outsb gs xchg xchg push out jbe lahf loope push lea mov add or jb mov in mov scas sub inc out rcrb ljmp mov arpl jbe (bad) pop mov stc jnp pop pop in test loop push fwait imul mov jmp ljmp out or inc jb sub jne xor dec lods ljmp in les jle xchg in adc lds push cmp inc cmp push testb insl sti push cli repz out sahf jmp out dec push scas int popf aam jl jmp in ret pop lcall bound shrl dec inc mov push jl push stos call lock nop inc jne int jo out xchg cmp pushf ss jp std in adc push inc inc test cmp out or inc out js aas and shr cmp mov adc push xor cs out jmp mov sbb jno mov xor out sub pop pmulhuw dec dec mov in scas add mov inc pop jp jb mov mov lret pop sbb cltd in lcall (bad) or sbb sub adcl adc out lea and xlat or xchg daa stos out inc mov and out rolb dec clc (bad) mov jno out inc out mov out fmuls pop xor sub ret icebp lret sbb push push in mov mov out dec pop sbb das je enter outsb icebp and xchg cld (bad) ja mov mov addr16 subl movsl mov add imul cmpsl and inc loop fdivp mov or stos in pop sub ljmp out dec pop jb out and mov out setae jmp pusha jbe add jg fwait (bad) aas dec or xor out clc inc daa inc jl icebp and xor fbstp es jo jecxz mov xchg pusha movsb out sbb jg lock push out sub inc fnsave lret int dec fildll loop xchg push xchg fwait jne fisub test jns adc out xchg and aam mov jmp add movsl cli pusha and push adc push fdivr dec mov and ret repnz out lock fidivr jle xor cmpl cmp jecxz das out jnp ffreep insl test iret in (bad) out std lea scas cmpsb pop and push popa mov lahf fist (bad) imul xor adc out pcmpeqd cmpsl in xchg and push jns fstpl inc mov out ss test sub pushf push cmp cmp out sbb push out cmp in dec pop mov out aas mov cmp out adc lods daa mov xor (bad) pop jmp sbb outsb push imul mov adc shll pop dec mov ja or test pushf ds inc cmpsb cmpsl fstl inc fcom out stos push outsl hlt fs push sbb lahf xchg movsb pop pop loope xlat out (bad) adc imul push pop loopne iret fsub cmp lods sahf sub dec mov mov insl cld push xchg add out (bad) pop mov xor mov daa (bad) int loop std sbb adcl fs das cmpsb mov mov scas or and or sahf mov pop add push out out and movsb int3 popf das out pop movsl out (bad) out lea add out pop in mov clc (bad) adc xchg adc imul repz sub push xchg pop orl notb dec insb xlat out fldl nop sahf adc clc xchg pop mov scas jo lock je push dec out and clc insb cmpsl out pop fistl enter cmpsb add push jecxz cmp int adc jmp xchg mov ss popf or dec out sub pop xchg cwtl adc dec call pop mov fildll ret std pop pop stos mov cmc mov bound cmp mov insb push push pop lcall das out mov ja sub popa inc aas cmp cmp push out outsl out in push out push adc push push fcomip pop ljmp sti jmp out mov test sbb lods clc or pop lahf out jb fldcw out pop adc ljmp jb mov and das mov push and lock sti xchg in jg ret fs out xor push and insb cmp mov fisttp pop sub pop jmp mov sub or or jb sbb clc out fwait sub sub fsubrs out mov xor xchg push and repz in cmpsb mov mov cmpsl add es xor sbb xchg out dec arpl mov jne and and pop popl out movsb push add out pop iret lret and int iret inc lahf enter in sub push or inc push (bad) lret test adc and mov jecxz cmp push lcall sbb lret inc mov sbb inc pop cltd mov out cmpsl jle sbb sbb jmp imul adc sbb mov mov sbb sahf pop (bad) in xor daa mov pop lods out sbb push add xor movl add xchg imul out test loopne cmp pusha fbld iret rcrb sbb jmp out sti xchg out pop loop mov adc gs scas aas jecxz inc clc outsl out imulb out xor stos out out stc repnz mov call ret jp in jecxz adc inc xchg out push mov scas divl fsubs xor lahf inc cmpsb cmp adc sbb push mov mov int insl push pop aam pop xor out lea clc lret cmp inc out sub jg shlb out clc mov push push subl out push or adc inc mov out notl xchg adc xor sbb xchg in leave out (bad) cld fwait jo stos mov cmc std mov xchg out ret in or push test cmp mov call mov es mov xor out add sub mov sub xchg popf mov lock out sub leave notb add fwait insl sub fs inc insl stos pop xchg ljmp pop pop inc xchg lret imul adc leave pop adc (bad) push pop cld out xchg or gs rclb adc hlt inc jb es out pop mov jl ljmp add stos bound adc es insb mov insl fdivr outsb xchg out jmp pop cld jns and push sub stc int3 out mov repnz dec out dec mov inc xchg in test in sub aam out scas mov sarl mov cli nop/reserved in pop xchg rcrb out sub cld or cli inc jle cmpl mov sub xchg mov out xor sbb mov xchg lds movsb out into xorb jge sti (bad) fbld loop das shl popa es dec dec mov xchg scas fmuls scas cmp pushf jnp out dec xlat and push out lret mov into stc out arpl or out xlat pop push xchg xor lods or out or fmuls jb ljmp and cmp lods out sub sahf cmp push stos adc mov cmp nop mov sub out cmp fwait lret push decb mov fmul push test into mov and ficoml stc mov sbb enter aas imul stos push out adc outsb pop cmp (bad) out lcall int3 out mov sbb sbb xchg pop sub fcompl lock mov lcall cmpl out or lret daa in and loope push sub sub out loop adc cld xor out jge enter cmpsl add jle imul inc cmp push ds ljmp inc into sub fnstsw out aam outsb inc jbe pop cmp mov pop in xchg pop popf hlt push test out sub push pop sarl sub ljmp inc cmpsl popa out les sub or lods fsubr pop jnp push fstpt pop xchg out nop push bound xchg lea dec out cld (bad) mov cmpsl push adc in jbe roll bound out or jle scas mov xlat push js out sub (bad) sub fildll enter out mov xor cli rcl sti mov lea adc rcll (bad) jo and jb out aad push inc vmovq cmc push out insb std gs idivl dec out neg dec outsl pop bound (bad) pop xchg sub inc xor sub xor mov dec mov pop jl sbb arpl icebp cli out or jmp movsb push out loop test test out xchg sbb pop mov loope in add cld out lret dec mov push das (bad) sub pushl fsubrs in (bad) icebp fbstp inc aas pop cld movaps push inc ret sbb stos pop out hlt mov (bad) jp insl sbb push stc fisttpll pop out adc jno cmp jge dec out popf scas adc push icebp cmp ds in jb sub lahf push stc daa and add sbb mov xchg out in jp lea add jecxz loop pop leave adc jne dec pop sub out call xchg out jmp lret rcrl add out pop pusha arpl out (bad) ljmp out jne je aaa (bad) out xchg out or jge inc icebp dec loopne inc jmp outsl iret and out push lods not ficompl repz mov popf sbb outsl orl addr16 dec aam and std cltd ja lods lahf push sbb ja out nop test scas bnd xchg (bad) fisttpl out xor pop (bad) and push (bad) in stos out das push sbb xchg pop cmp pop dec neg (bad) pandn iret sti add out fs and inc mov clc ljmp or in les stc out into mov push adc xchg jo scas xchg js rcll add or pop pop inc or xchg pushf out repz int out adc scas xor xlat jnp sbb daa add lock ds mov out cs xchg out dec dec sub pop sub out jg sub pop push cs idivl mov jnp xchg shrb mov push aaa out mov dec xchg dec (bad) idivl popl in (bad) das jae and gs aad adc es xor jp xor aad jmp jg int jg les sahf popa sti lods cld mov repnz xchg xchg imul push fwait pop dec xchg pop and out out mov lock icebp push andl push out lahf imul pop addr16 dec fimull or adc sarl ret out jbe gs mov xchg push out dec leave (bad) daa cwtl bound adc into ficomp outsb mov aam roll dec out enter add push repz std out jmp sub sub movsb xor or int leave mov inc pop inc mov in xchg push fdivs push jnp out dec add xor pop sarb out (bad) lods jne or jbe mov jmp lret in lock adc call data16 cwtl inc inc sti xchg daa (bad) (bad) cmpsl pop rolb in adc or out arpl dec mov inc ret movsb out push rcrl jns inc or mov jb or (bad) cmpsb jl cmp mov fsubl push pop and pop psllq inc cwtl test adc mov insb and out or cmp push pop mov pushf mov push cmp (bad) out in cmp rorl sti mov out xchg ret jno (bad) sbb int3 into popf out outsb clc iret pop (bad) ss inc xlat pop scas out push jge push add int out ftst scas jp imull aas ljmp jl xchg out insl jbe out and loope mov ficom xchg add imul mov mov push inc rol arpl sub mov cltd fst mulb push ljmp ds push add sbb out incb push add xlat push and out jo lds sub pop xor and popf into xchg and lock es pop mov les js and (bad) out cmpsb hlt push addr16 adc into out iret mov sub bound (bad) sub bound jmp mov (bad) push and fisubrl xchg sbb outsb sbb (bad) jb pop loop mov aas fdivr pop pop cmc andb xchg jmp addl imul out inc mov add sub rorb pop xchg (bad) jb stos pop in dec push out ret aas ds cmp push aam mov pop push push icebp out or xchg dec test pop pusha ret lock xchg mov out daa hlt js mov pop mov pop and fstps jl iret hlt dec roll cltd fsubl inc imul std and out mov or out sub adc out jle dec fwait lret out out roll insl mov push sahf jno in or push div mov xchg into in xchg or and xchg enter jg sbb imul sahf insl adc pop sub das xchg sbb xchg imul jl shr gs jg test les or adc xlat outsb loopne push out jle add aas fisttpl fistp test sub pop jb outsb out xor cltd xchg mov jo inc cmpsb and ret mov loop sub ds pop dec out sbb in out add std imul jbe aaa addr16 push xor pop and (bad) mov jecxz lock (bad) data16 cli inc add cs (bad) out stc mov fs cmc dec mov (bad) (bad) mov ja lods pop pop pop inc aas aaa and or out pop pop mov add clc out pusha fs call mov mov xchg inc adc mov pop adc test or out (bad) fs push mov mov lcall pop insb cli push sub pop (bad) (bad) les and mov adc push (bad) jle mov xchg decb mov pop ljmp ljmp pop fucomip addr16 addr16 mov lret jmp out outsb or inc adc pop out lock jbe xchg je jne ja out xor cmp rcll adc ljmp ljmp push dec enter (bad) mov pop adc out sbb mov out inc pop push sub mov shrl jge push jbe out (bad) mov sti scas aas push push hlt movl loopne movsb (bad) sub adc xor loope call cld or arpl das fsubs mov mov stos lret out (bad) mov lods cltd das push add aad pop push push out or clc out decb fstps jb in dec pop idivb cld mov pop int3 bound int popf jno xor push into and or push xor out js cmpsb imul call (bad) xchg mov sahf dec call mov int3 pop or stc jp shlb out mov lret loope lahf cmp stos fwait jo leave mov fbstp add pop xchg mov out in addr16 out out or out cmp stc shr cmc push push pop repnz cwtl ret imul fwait xchg (bad) mov out add clc or sahf push repz bound leave dec dec cltd loopne xor or out (bad) sti xchg jno fiaddl ljmp shrl ljmp out sbb ljmp mov sub fdivrl stos jne xchg out dec js and addr16 cmp sub ss loopne dec stos out cmp jp or jge xor fnstcw ss add in mov loop adc push out cwtl pop inc jmp loopne xor idivb insl mov lret jecxz in and inc arpl adc cld dec js,pt out xchg (bad) jbe pop xchg mov or fucomip mov lods xor shr addr16 push xchg outsl (bad) sub or ljmp mov lea adc pop xor sbb mov mov mov not mov (bad) mov push and mov leave out push fs xadd jmp cmc sti out ds (bad) outsl xlat mov out pop subl fistpl loope dec test cmp mov add adc cmp cmp cwtl out or xor push xchg std out add or xlat outsb mov lods xchg insl test add jo stos xchg fcom mov sub jg fisttpll and test daa loopne xchg lds icebp bound or out pop cmc pusha pop scas popf rcrb mov and dec inc loopne frstor das shr push mov es out dec out out push fsubr iret mov insl cmp push shrb stos or mov sarl (bad) in out adc dec iret cmp mov cs sub mov rclb pop dec lds (bad) jo out movsl push loope mov insl mov je out lret repnz sbb (bad) mov sub (bad) je in mov mov out fdivrl pushf out mov mov fwait push xor sbb lahf (bad) jo les repnz pop push dec mov daa test stc out repz out in inc or jle mov xchg push daa fisttp stos jmp add mov adc outsb xchg pushf out pop into pop or cmp imul iret mov repnz jbe adc xchg xor dec es jmp shr std pushf push sub pop inc ds (bad) call data16 out push jl cmp ficompl xor in out xchg nop das daa sub out or outsb mov mov mov and inc xor addr16 mul jnp mov arpl cmc adc iret jge lock ret out add fisttpl mov and mov in push std sbb inc pop sub pop sbb sbb sarl mov out cmp mov mov fwait out out enter push push pop bound push jbe jmp sub hlt cli popf sbb or xor f2xm1 jge jecxz xchg icebp (bad) push stos xor jp (bad) mov bound dec add (bad) sar mov mov mov test and mov test (bad) jnp lock dec out (bad) mov jns sbb adc lock mov insl out pop mov push sbb imul mov test shr add or (bad) adc xchg scas lock cs sbb hlt test and bound push push mov pop mov lds (bad) out jge inc push push xor scas iret inc cmpsl daa inc out sub mov cmpsb mov adc pop clc das sbb xor adc cmc sbb mov dec out arpl sbb repz mov leave in push sub cltd xchg out mov das fistl push jnp or mov negb insb loopne ret out pop pop (bad) xchg mov out or das clc pop mov pop out jno pop mov in mov stos sub mov out mov xchg leave (bad) hlt sbb out dec cwtl iret bound add mov xchg stc lcall stos mov pop (bad) dec push jge sub out xor out mov lret out clc jge popa pop dec jbe (bad) push mov scas int3 pop loope sbb (bad) mov and out add mov out dec shrl icebp push push adc mov pop test in push jns adc or dec dec cmp xchg (bad) xchg or (bad) jg push insb mov imul cmc mov popa out sub sar inc addr16 push xlat cmp or test xchg pop and mov adc repz mov insb inc test and xchg pop mov das enter pop in out cltd adc mov out pop test test out adc cld cmp add sub stc adc out cmpsl lds adc incb inc out sbbl into int3 sub inc (bad) and push rol into (bad) pop pop sub adc xor xchg test push jmp mov out nop sbb push adc mov test fldcw jne (bad) xor mov mov sahf iret cmp push shr cmp lock xchg insb mov jb (bad) lock pop test xor out popf inc mov cli out les out push or shlb pop dec mov lock imul pop fwait or test mov movsb xor xchg jle mov popf dec xor out clc lods test (bad) icebp xchg out pop mov sub outsl xorb loop,pt bndstx pop push jae dec inc adc pusha inc mov mov jb imul imul dec out xchg lahf xchg or into (bad) ljmp out stos hlt lods movsl test sahf (bad) aaa add jb jl dec push or add jnp pop sbb mov xchg add sub out test insb sbb add dec inc cli mov fwait shr popa mov dec out or (bad) xor hlt cs adc fdivs stos gs (bad) dec pop dec or pop shr ror jmp adc dec xchg add stc loope and out cs inc jo out sub fsubs inc mov jbe aad enter (bad) push loop mov out sbb icebp sub out dec movsb stos lock push xchg out ds nop add sub xchg repnz or (bad) int3 sti mov xlat dec sbb out outsl vphaddbq js pop sahf nop add and jg out cmp out mov lret mov out movsb fwait mov jg push stos jecxz cmpsl pop fcomip cs ljmp aad inc iret cmp dec ret rorb rclb loop push push stos mov les adc dec pushf out sub push jbe out or push outsl sti add jbe pop fstpl pop out sub inc (bad) sub xor xchg xchg out repnz mov adc in jecxz out out push adc sbb and mov jg cmpsl (bad) iret out push jne add xchg decb scas mov daa push push sbb sub mov cmp lock enter inc mov out sahf std aas aad pop cmp pop mov in fimul jbe and xor jle adc adc ret sarb mov lock out insl inc cwtl insb mov repnz rorb int3 adc push in pop shrl ret and movsb xchg out lock out mov push sbb cli out push iret sti out int3 pop sub xchg out divl ljmp mov jmp inc jb xchg push cs cmp test aad out sub gs mov push (bad) je cmp push jmp enter dec mov out (bad) xor out xor cmp out int shrl into xor aam out es outsb mov xchg rcrl mov xchg imul out enter aam jbe xchg and and popa ds add sub inc jl shr ret xor fcoms push es fistp ret xor int out out push push mov out xchg lret sbb sub ds ret (bad) dec aad enter push mov out cmpsb in xchg out pushf push out popl mov adc pminsw (bad) ss jge in shrl paddb ja out test and je push imul dec and xor jg repz xor movl mov ljmp jae inc xchg lahf loop popa mov xchg rolb loope jo adc sarl movsl mov push negl xchg int3 mov repnz shrl mov hlt out js mov adc ja xchg inc mov mov nop cwtl rol mov pop stc gs imul ljmp shll into out clc sbbb out lret les in out adc cmp pusha add stos pop mov in and jecxz mov fwait loop cmp jle xchg ljmp mov jge subl hlt pop pushf mov push xor in orl paddusb jle imul jbe xchg xor sbb icebp js rolb ficom adc movsb out aas push out iret push pushf jns test adc loopne lret dec call out bound call iret (bad) cmp cmp mov pop roll mov lds adc gs in sub das push aas cmp add jmp (bad) lods cli out inc insb sti addr16 movsl mov out out cmp enter add (bad) iret mov (bad) fcmove mov popa cld enter shr mov adc iret sbb xchg in outsl sub mov js mov stc out cld sbb pusha sub jb cli add std outsb (bad) xor fbld out lahf xor jb,pt ljmp sbb jecxz xchg adc sbb adc jo popf mov in and paddusw incb mov das cmp mov aas (bad) (bad) mov lods pop outsb push sub or int3 or lahf in inc dec pop mov add orl xchg movsl add push out lret stc pusha sbb sub fwait out dec iret loop jns mov push pop mov scas aas icebp out add cli (bad) out (bad) nop cvttps2pi adc add adcb mov cld (bad) xor jmp stos mov and iret inc cmp pop xchg out je cmp aas push mov dec les dec mov out inc std hlt (bad) xchg mov cltd xchg push out mov jns out pop leave in repnz out hlt mov cld adc xor loopne mov cmpsb dec jle mov out or pop loopne (bad) cmc add pop loope (bad) push jmp jmp aam xor in mov cmp adc adc jnp push out (bad) call mov fucom pop rclb adc xor jo loop movsl push out add jg pop cmpsb push fsubp insb pop pop cmp stos loop (bad) (bad) jg mov enter adc fst pop and sarl add dec lret data16 sar int popf mov rol ljmp mov loop repnz imul in dec fsubrp and ds and outsl movsl ret sahf das iret jb pop push cmp xchg ds sbb xor adcb pushf call mul mov inc and add (bad) or add call out xor push rcrb add out xor pop scas cmp int sarl in repnz mov mov loop cwtl scas call insl sub adc call out inc adc (bad) push fwait mov incb fucomip in loope sbb nop mov iret sahf (bad) mov mov call int pop sub pop imul add stos dec or (bad) es mov jae xchg jmp push js in ja jnp in out test movsl movsb shrl dec (bad) mov pop push xor imul out adc into and insl vmaxss cs je stos out xor ss insb jp lahf adc flds fs adc inc les mov jnp out dec pop add (bad) mov scas fs mov out add adc insb push push pop mov cmp adc or dec out stc arpl cwtl add cltd mov adc lock pop int loopne push jmp xor and mov add sbb cwtl stos out fwait and rolb (bad) out push mov outsb (bad) das dec out push fnstcw xor call aad punpckldq daa cmp pop into sub leave imul sahf loope out jp push or mov xchg push outsb push mov inc out stos movsl lret inc mov lods bound pop xchg push orb cmc push das (bad) imul dec mov adc inc mov rorb loopne out push mov cmc (bad) (bad) negl shl nop mov imul rcll jmp arpl sbb xchg jbe add mov loop cmp out dec shrb jo mov clc pop sbb cwtl paddd jmp ljmp sahf lea mov pop mov pop stos orl sbb jg pushl push mov sahf imul or xor jno pop popf out pop mov in aad push loope pop push and out or lahf in in xor lea sahf push daa dec insl pusha pop mov out adc (bad) hlt adc adc imul int mov xor scas dec iret mov lret call pop insl fsubr push xlat mov mov add pop xchg add mov ljmp outsl test lcall out movsl add xor scas jnp mul xchg add insl loopne out add or lret addr16 jge cli insl dec xor sub in notb out mov sbb out mov cs call negb in daa out sub mov pop and in fnstsw push fbstp out outsl and xor in bound popf dec sbb inc mov adc inc pop das push xchg scas adc in inc mov outsb out jecxz je outsl js out rclb popf ljmp aam out addr16 int3 aas out or popw inc arpl push mov out lods and (bad) hlt and xchg jno xchg pop lods sarl xor sti fnstsw enter out push mov mov mov out ljmp ja fistl popa aas test in jmp xor (bad) into out mov adc icebp lahf cmp adc out repz push lds push mov out lock jecxz adc es out and jb fadd or push nop loop mov aas test mov (bad) mov popa cwtl inc int3 out test (bad) idiv movsl out in or xor push mov inc jle mov sub je les shrl jbe ja sbbl jg or out ds out orl xchg xor movsl and out into add out cli dec out pop ret inc mov jnp inc icebp lods jo rorb lods sub pop dec inc (bad) out adc aam ret cld out pop in cwtl mov push push imul sbb xlat les jmp out shl inc int3 stos adc xchg sti fiaddl cltd out lods cmc sbb pop addr16 xchg xchg and out fisub sar out cltd inc inc popf movsb cmp out cwtl (bad) push jbe push dec cmp leave lods mov xchg add or out sub sbb dec out push (bad) push fidivrl xor outsl mov dec cs mov daa stc bound es mov and out inc arpl ljmp cmpsb enter sub mov stos xchg fsubrl out sahf xchg mov gs imul (bad) out out insb aas outsb sbb icebp mov mov out mov pop insl mov xor (bad) xchg mov dec in mov out jae outsb and mulb je out pop mov les scas mov shr aaa fs out add push mov adc aad lock lods aaa (bad) in roll cmc rclb jecxz mov js (bad) xchg ret divb push cltd out lods xor nop xchg rcpps mov jbe data16 add or out mov inc push int add xchg out fiadd (bad) fwait aas push add mov out mov lods cmovg daa push or aam rcrb inc into aas lret mov loope push andl loop or out (bad) out popa ret fs fdivl test mov stos xor pavgw sub in out imul and jnp mov hlt into and push add xchg aas out int3 movsl mov or jecxz pushf push pusha jg (bad) out jle mov out add mov cmp scas jno rol cmp (bad) sub nop imul mov das mov adc (bad) movswl mov loop ss enter mov and push mov jo in dec test mov add cwtl nop lret (bad) in popf (bad) sahf jb daa pop mov dec add (bad) out xor fstp pop repz out inc (bad) push cmp out lahf ret or outsb in sub out int mov insb out ja and mov cmp ret ret out sbb pop subl push ja lock (bad) call out and adc popa sbb das loopne add fwait ljmp aas je mov dec push data16 (bad) mov mov stc pop loop push sbb pop cmpsl push lea pusha cmp movsb jecxz es out mov outsb pop cs out sub push out mov imul and fild jle loop icebp pop stc movsl pop xor sub in sub push stos out sub arpl mov rcll insb xchg ret out xor xchg les stc inc mov push push mov sbb pop data16 loopne out cltd inc mov mov inc push xchg mov cwtl scas push in push fsubr mov jp iret or rorl (bad) mov lds mov jge push dec sahf jns pop lods fwait loopne bound out lea into rorb dec insb and dec out push loope hlt lods xchg dec push in movsb ds and iret lahf stos test loop insl ss in sub int xor lret adc test sub shll ljmp pop gs lahf push ljmp pusha insl push arpl adc push xor ljmp sarl push out dec sahf add pop (bad) in sub aas mov (bad) ljmp push test js popf idivl lock mov jl iret fstpt pop push dec cmp pusha jge insb push sbb adc std test outsl ljmp xor iret jecxz dec rclb sbb jne pop add fidivrl jmp xchg out push enter mov jns out inc lret pusha cwtl pop popf mov xchg mov or cvtps2pi cltd hlt dec xchg daa out lods mov movsb lods out adc mov dec outsb jb add stc adc repz mov xchg lods mov fisttpl sbb sub (bad) or ret and sbb outsl add pop gs arpl movsb lea into out scas xlat sub out add cmc or repnz out push insb std lea sub adc out ja inc xchg mov in mov ret jl cmp out sub xor mov jle cmp std inc test cmp fsubr mov adc and es dec test sub mov stos insl daa add sbb rorb mov xchg testb les out fwait loopne push xchg movsl lds sub or test jecxz sbb out sbbb xchg pushf arpl out jmp lret shl lods or push xor fist mov adc add mov sbb pop mov and mov lret dec lock data16 rcrb push out sahf xlat xchg loop out jbe es jne jno out sub daa and iret inc out enter pop jecxz xchg call in mov in jg push and loop push pop out aam mov in jecxz inc in sub xchg fnstcw inc cs out fsubp dec or lods xchg inc imul pop mov daa jle and stos mov sbb add je push psrlq out dec inc rcll pop ret push adc jnp in test fldt in add (bad) jne pop shr mov test mov cmp and (bad) pop out ljmp dec out add dec insb add out mov lret testl pop scas fs xor dec sbb fdivr push mov or icebp (bad) leave sub sub shl aad push xchg push sahf mov popf out cmp pop out sbb cmp out (bad) out imul dec and pop ds mov (bad) cmp mov out inc clc out jnp pop mov sub mov out push sti push lret pop out xchg incl (bad) out push in or adc lcall fstps mov adc dec xchg cmp push out mov push inc call push ret pop out arpl inc andl test test mov out adc and or sub popf leave mov mov jle push pop ljmp idivb out and in or mov cs out gs mov sti adc sarb add mov lahf mov push (bad) push mov sub aaa sbb cmpsl jmp imul (bad) pop insl cltd add cmp movsl aaa cld adc sbb jae es out xchg lods inc mov xor pop pop cmp pop int lcall mov gs sub arpl ss test out push push out pop aaa cmc lret sbb sub std jne out (bad) clc mov or cmc (bad) loopne pop in xor mov mov or (bad) mov push push cmp dec jg lock inc pop fdivs loop popf push mov or xchg mov mov adc adc add adc pop out sub in out mov xor cmc pop inc add test adc cmp iret lods cmc cs fsubrl pop xchg es cwtl rorl std add lahf fwait push adc jb clc icebp orb lods inc push jmp pop or jg stos adc out sbb aas inc icebp pop pop mov outsl scas out xchg sti mov jb out mov sub addr16 gs mov ds aam movsl add push in nop mov fwait stc fisubr icebp push mov dec mov jp out inc push add mul in mov jmp bound adc (bad) cmp into cwtl cmc mov cltd out movsb stos xor ss xchg rcrl icebp push sar add imul mov test xor rclb mov mov mov out push jne inc popf fiadd pop out cmc mov mov test in int3 mov in dec scas mov jmp bound iret cmp dec inc sahf push popf rcr xor gs pop push nop push out int lcall pushf mov lret fimull adcl add push lods dec jg and cmp rcrb jle or pop cmc fcmovnu mov (bad) push inc add inc js mov movsb or ficomp pop jnp jne cld jmp aas (bad) jbe dec sub dec jmp dec loop inc test mov ljmp ret mov mov adc pop movsl incb jmp iret and out pop out (bad) jnp sbb incb pop jecxz out lcall pop data16 addr16 mov nop dec mov movsb fs push in loope mov jns popa sbb out sarb jbe jno rcrb ffreep mov add pop add push out js jecxz and in out std push adc sbb mov xchg call mov lods in dec loopne xchg pop pop dec movsl add or shrl jge cmpsl sbb test out cmp xchg inc sub in pop sbb dec pop out outsb fistp pop shr out fstps mov xchg jb,pn adc ja insl mov out xor cmpsb (bad) push push cmp fcmovne bound imul out fstp test fwait pop (bad) std rcl pop out cmpb pusha add jp test rolb sub add mov push jne cmpsb lock pop icebp cwtl iret mov add (bad) lret and hlt sub gs out and call popa test or fwait ljmp fs (bad) out loopne loop lods jae xor (bad) jmp leave adc test test xchg dec ja cmc jns xchg lret lock (bad) jne mov mov jge push mov popa xchg iret or add insl add jnp dec cmp jge mov fs add jo out lock sbb js,pt cmp loope shr out xor and cli ss dec out lret sub jge sbb out or push cmp loope (bad) les push out call loope adc mov insl push bnd into (bad) ljmp xchg inc fcmovnu or data16 out test (bad) leave out pop sbb xchg insb mov cmp adc (bad) xor adcb cs pop test in xor dec sbb imul lcall cmp mov mov aaa jno jge sub or xor adc lahf out jmp in xor addr16 mov scas push paddsb in enter mov jne out stos lods pusha imul lret adc outsb and xchg clc jecxz mov cmc xchg jmp stos lock xor (bad) mov xchg add outsl mov jbe leave mov cltd mov xlat outsl loop in cmp rorl push cmp dec out insb adc (bad) in scas add sub push jns int out xchg pop or mov and out lea xor mov test lcall mov out loop out pop mov lds out or xor cmp jbe xchg enter fstl out mov adc aaa sti mov ljmp out inc (bad) jbe jg xor fcom ljmp bound ret inc push mov out cli xchg and push jg mov (bad) sbb sbb clc cmovl loop inc push jbe dec jl out pop and xchg mov (bad) pop jmp add add test dec sbbl xchg jp lcall int pop cmpsl push mov cmc stos mov imul shl out cld xor insb add xchg out and cltd jg insl sahf out andb push sbb mov and cmp jmp or movb mov sub mov dec sbb loop cwtl sbb ja hlt mov es in cmpsb mov add out xchg sbb lret mov cmp xlat shl outsl dec push lods mov jge lds add test insb in jne jb sbb fsubrl ret in pop xchg out sub jge (bad) cltd add push and mov mov mov dec scas or pop test adc mov (bad) out mov inc push iret arpl out dec push or outsb lods outsl daa mov jle cs adc sub push sti cld ljmp out mov xor imul sbb sub mov pop imul mov adc je mov out scas sarb and fisttpll es jbe loop insb mov aam jae inc jno or loopne arpl fist stos shr faddl sub cld out mov add jnp inc jno aas je out inc sub add inc sbb pop lret std das adc xchg out add decl cmpsl cmp mov and sti (bad) pop fnstcw cltd (bad) cld xor aad popf inc pop sbb mov imul mov or adc out xchg sub in int3 (bad) test sti ljmp jmp jb jle es decb cmp inc or xor ja add out in in and adc sbb sbb dec gs mov cmp adc out push or pop test fucomip adc lods std xchg push pshufw out loopne push xchg or mov cmp jecxz sarb shl jae xor inc fbld adc insl mov add mov out lods sub sbb jmp in out and jl aas (bad) iret daa mov in pop or push inc jecxz rol or sub cwtl repnz ret faddl aaa insb in mov mov jecxz adc out cmp add imul mov sub cli jns mov ret ss imul xor addr16 mov int aas pop (bad) imul icebp loope cltd cmp inc out lahf sub push stos out add adc decb lock lret and jle sbb roll fldenv add sub lock lds test pop outsl movhps test loop sbb out (bad) dec push sub xor adc mov iret add insb call mov mov jno out cmp out outsb sub push push (bad) sbb test out pop fcomps in loopne dec sbb dec sbb pop mov push sbb loop (bad) imul decl mov das jle shlb xchg push jg mov mov push out and call add into cld cltd std lds out (bad) popa jmp mov jne cmp les xchg jb jmp or cli in add fwait jl (bad) pop dec push aas out mov or jbe aad lds pop stc cmpsl mov or out mov pop sahf mov in and mov rorb dec out lret mov imul mov scas fs in xor xlat ret sahf cli loope fnstenv ljmp (bad) and mov (bad) out xlat into lock dec mov mov out add fucom notl adc shr jp out insl call inc mov adc movsl sahf lock rorb out into inc mov jnp inc mov mov out sub pushf jmp das and pop mov push add sub int3 pop out mov das xor push test jg add fild loop sub loop call dec fldl out ds fcomip xor es hlt out and adc out lret push test mov out pusha mov sti incb outsl lock out lock repnz or mov push js sarb (bad) in shr subl out jae aad add lahf fucomip dec fldt cli out pushf xor xchg aam dec pop (bad) hlt out push sti mov xchg dec jbe pop fs ljmp jno popl jne (bad) repz negb or (bad) out shlb xchg cmp pop loopne pop scas dec dec out xor fimull xor loope mov stos aas loop push stos out pop xchg loopne lahf pop push push iret out out imul stos sahf push inc out (bad) out push mov add cmp or and add push out jg adc sub insb setno popa jns int loope out aaa enter loopne out aad sbb sti and shr adc loope mov test lcall addb iret mov or and mov add jecxz pop dec jmp scas out in dec xlat xor xor aad lcall add mov sub pop lahf scas pop dec pop out mov cmp nop and sbb das clc (bad) fild jo or mov hlt or mov mov call shl or out (bad) mov out or xchg daa and icebp sub shrb orl stc insl add sub and sbb mov inc ret push mov sub iret out ljmp mov lods or ljmp (bad) out jno (bad) out adc xchg jg sbb sub pop pop (bad) in out inc jmp js out and xchg sub dec or (bad) in mov call test cmpb sbb test out insl arpl dec adc inc or cmp cmpsb cltd lcall inc fcmovnbe xchg mov out out fmuls lahf std mov imull and push cmp push shr adc leave adc (bad) cs xor out mov push test xchg out out aas outsb pop and or out (bad) imul (bad) or iret cltd sbb adc dec out lret inc mov adc add add scas inc out sahf aaa dec push out mov jg push pop adc arpl pop jmp push shl out xor lods in mov mov arpl das movsb dec sub push sbb call in lahf insl out rcll and xlat data16 add add and out pusha and in dec pop lods daa (bad) adc cmp jne aad aas ds lods loopne out xchg clc daa add pusha cmp jp dec stos or leave out pop inc mov in out pop jo cmp in out leave and out sub adc mov fsubp ss inc mov out sub cli mov cmpsl sub pop or js (bad) fadds fbstp flds loop out out lret push into jae xor ljmp out lcall push mov sbb mov orb in adc (bad) dec arpl and mov sub jp out in lods push jge and fild rcr sub push leave mov out mov xor pop out out xor test fld or lahf mov arpl les shr enter and mov push and iret test lea leave xchg mov imul cmc adc push das shlb lock out repz es out cmp daa cmp push lock fistpll into movhlps pop fld dec sbb out or arpl sbb insb fsts and push int mov (bad) out mov pop aam xchg sbb stos insl out xchg mov je mov insb jns outsl push in arpl aad (bad) ret test in call xchg loope mov out (bad) pop cmp outsl push jmp call add push push mov in push inc fs cmp pop fucomip cld loopne push dec jne xchg out fabs jb out (bad) sbb xor dec pop mov mov ret outsb xor sahf test insl cmp xchg jmp loop dec mov push jae and ja ljmp mov push sbb addr16 mov mov mov int3 outsl cwtl pop in push mov (bad) pusha in daa test xor mov sbb and mov repz stos pop test dec repnz out aam xchg int add sbb cmp or lcall out repz movsl out mov add inc adc dec lods ret mov out xchg addb cli jo cmpl cmpsb pcmpgtd adc outsb and call or ss push hlt add test mov jle rorb test loopne stos das fwait mov xchg int jne out je sbb out mov mov popf xor (bad) pushf pop in mov mov push mov dec jp popf int3 dec imul lods pshufw inc js or adc loopne mov jecxz insb pop xor int3 js out xchg cmp mov (bad) sahf outsl ficom adcl or out xchg scas leave or add out (bad) icebp (bad) in add xor dec sbbl ljmp and or push rorb jge cmpsl fucomi call lcall out std sar mov cmp lahf (bad) lea loope jno out mov ds cwtl or and jp call outsb out test (bad) lret xor test jge sub aad add out lahf gs clc pop rorb cli cmp daa in fldl mov sbb inc mov popa das jno sbb mov popf pop test or adc out dec jge js lahf xor mov mov les (bad) imul jg jecxz mov decb jl out mov jecxz aam hlt inc (bad) xchg or dec add idiv inc stc aas xchg insl push pop sub cli (bad) cmp in (bad) or add das leave jg stos cs (bad) xchg aas bound add pop inc sub (bad) ljmp loope push out sub in push cs xchg stos subb and cmp loopne sbb in xlat push xor dec jno sub mov ret ret xchg sub dec dec decb ror push sub stos test popa nop mov sub dec out fisttp aas les out jnp push pop and sbb out push outsb cltd out inc int (bad) enter out cmpsl addb (bad) jae jno mulb and jbe out aas push inc cmp and add ja mov in out mov cmc adc (bad) dec out sbb cwtl in or inc add out div pop xchg xor mov jecxz iret mov push lret push sub cli adc (bad) and mov jmp mov cs mov out xchg test hlt lcall gs bound outsl pop or ret push test mov pop xor in cs nop (bad) clc sub (bad) out push dec push (bad) cmp out sbb in mov daa sahf jp mov out add (bad) mov fs mov xor pop mov out les out imul out xchg sbb sbb out cmpsl ds inc fcompl xor rcrl and out out add cmp or mov out adc sub imul mov xchg loopne jge out cwtl (bad) mov jne or fsubs xchg out lcall xor pushl in cmp (bad) mov sub inc dec mov jo out insb jg xor enter shrb insb int3 xlat out adc mov flds adc or mov fbstp clc inc mov call scas lock aad sbb ret xchg dec ljmp jne loop fdiv adc pminsw xchg addr16 xchg in xor into fidiv inc adc push repz sahf sub imul push test scas inc and mov pop mov stos enter in std xchg fdivl mov lret mov out mov xlat push xor push repz out push ja out out pop clc sahf into mov xorl fbld aas sub shrb cmp or fiaddl (bad) inc jl mov outsb xchg bound out pop loope xchg insb or (bad) xchg cli mov and out je push int lea mov jmp pop je push push mov cld aas mov lods sarb test dec mov mov rol ljmp out aaa fwait call (bad) out hlt mov scas fs nop out notl popf jp ljmp mov call (bad) fsubr sti xor jle xchg pop scas mov adc (bad) mov mov jb adc and or cmp lahf insb out aaa rcrl push mov aas and ret fwait sbb cmp aaa imul out dec push aam mov xor mov pop leave mov sub jp adc pop push ss out mov push sbb fcoml dec pop bound in out ljmp mov outsb jnp in pop adc out sub lret cs out cmpl fucomi test sub mov out sbb out inc xlat push call inc mov lcall nop push imul push sub sahf mov enter xchg cmp insb out dec js mov push pushf dec jg stc sbb out icebp xchg and push jl jecxz cmp lock daa jp dec repz sbb cltd pop pop mov inc mov or and jp outsl out iret push push rcrb add pop sub xor xchg cmp aam int sti pop stos push loop shll adc push nop mov fisub mov jns cltd lret and pop (bad) hlt dec gs out cmp lret dec cmp and push mov and sti xor insb mov mov add cmp enter imul jb (bad) fstl fsub ret jecxz pop out popa mov dec jl mov add (bad) cs sub xchg jb pmaxsw push in and jecxz jno out repnz test jne mov push out call add add and push cmp stos daa fucomi fldcw sub imul leave out xor repnz sub push out or jbe out (bad) mov fmull mov out das testl out out adc in js fdivr stos or pop (bad) lods and cmp adc fiadd push jg lods out pop jecxz inc xchg out or lock lret mov jg mov jmp mov ljmp push push and (bad) mov jne sub mov clc daa out (bad) je popf and int3 push ljmp xor sub test out cmc push decl in mov imul out adc xchg xchg (bad) aam mov xchg add or (bad) sub movsl cmpsb and decl push movsb jno repnz jecxz shrl push rcrb push popl pop or mov pop loope sbb out (bad) outsb and jo daa push out ljmp sbb push push jle cmpsl loop out cltd pop xchg fisttp and in leave sub out push adc (bad) popl arpl xor pop mov out jmp je les xor out aad push inc mov rcrb and insb mov (bad) cli aas or lcall out sub dec outsl mov notb pop loop push ljmp rcll in xlat or nopl pop imul jp out ret xchg sbb out fcom inc mov out adc jge daa gs pop xlat add jl nop out stos (bad) sbb push insb call mov out in or sti mulb stos jae xchg mov xor test (bad) mov mov js xlat lods arpl pop jae cwtl pop cld out loope cmp push jno popf and or outsb clc mov jge pop pop push jb repnz insb std cmp out popf in jp sti lahf into and dec xor outsb scas pop cmc inc in sub add xchg adc adc sbb fs mov je sbbl push sub scas push sahf jecxz and pop jo mov in mov test cmp dec out fwait push (bad) out cmp (bad) mov adc dec clc out sbb mov and out jbe ljmp addb cld iret adc iret stos xor sub mov out cltd mov sarl xchg fs stc out sbbl aad jmp icebp out xor fdivrs stos ja xorb pop xor outsb (bad) adc push insl call ss sub das xor std data16 xchg or andl mov out xlat nop lods (bad) out gs test pop (bad) (bad) mov pop loop out jo lret lahf out shll popf push push sahf pop sub pmaxsw jns add popf daa cmpsb cld mov fs loop add jmp in popf in mov dec xor out inc jnp add lahf jbe xlat int3 out xchg scas sbb pop insb in inc mov push jmp in ljmp icebp or sbb sub pop mov ss inc (bad) mov xorl and movsb or insl mov incl sub cmp movsb mov inc in mov (bad) dec out aad shll test push mov dec add pop xchg pop out loope ds sub (bad) mov push fwait pushf rclb push js cmp push (bad) outsl push out push leave (bad) pusha les ret out addr16 push dec out add pop inc hlt ljmp movsb insb pop push pop shr pop popf dec call out and jno sbb inc xchg adc cmc out and jmpw daa (bad) xchg and pop inc out hlt imul (bad) out push out out mov sahf xchg arpl ljmp sub cld (bad) mov dec inc stos rcrl insl popf pop cs pop popa cmp fadd adc or jns mov push pop stos pop sub insl xchg out push dec xlat pusha leave out daa out (bad) lahf pop fstl xchg out rorl mov sub adc out scas out fcoms mov pop ja and sbb dec dec jb sbb out test fldcw sub in add fadd out aaa cwtl xchg ficomp mov mov jb xor test out mov mov fcomps imul push call bnd jg (bad) fwait iret pop xchg in jno sti cli nop out and fldenv jne add and dec pop push jmp out mov movl mov iret sbbl fisttp fnsave push jo push aad icebp iret out dec jle jo subl lea jmp in dec xchg sub out sahf fimul cmp int3 push push mov and cmp adc out (bad) in sbb lret mov mov scas dec mov push mov data16 push (bad) mov pop dec out sub imul or cmp inc adc out loopne loope pop xchg jnp lahf imul jo iret call mov out sbb fnsave and fdivrl insb mov sub fisub xchg jecxz iret jle ljmp mov icebp adc adc aas out in xlat xchg test adc push ss psraw jb (bad) out xor xor loopne out inc sbb inc inc outsl loopne test and xor push test push in jno jmp cmp lods in pop mov pusha pop ret xchg add daa cs out inc sbbl lods loopne cmp xchg lods sbb sub mov out inc cltd hlt jecxz add mov out pushf add out and roll int rcrb ret or das sub add imul mov dec push out xchg lds fistl sub and and shll sbb loopne ffreep out ljmp add add add pop les (bad) jne out js mov out stc call mov jnp out cmp lock pop test negl jbe call xor pop ss inc inc and outsl (bad) je mov mov loopne das dec ljmp fild xlat arpl mov enter leave jmp cmpsl popf int or lea inc sub adc xchg int3 out std mov fldt cmp sub (bad) stc fnsave fs jg pop test sub jmp (bad) xor mov out aad mov addr16 sbb mov or xor and insb leave xlat fs xchg out and adc sub std cs ret jno ljmp lods imul cmpl mov sbb push inc call aam sbb pop jb jb (bad) xchg and stos mov out mov mov adc mov aaa ret bound ja in mov sbb (bad) sub notb xchg insl jmp pop out pop push ds out fistl out orl fsubrs popa lcall pop rcrl fist inc in insb lods out loopne pop push cltd dec and rcl mov add ss pop xchg mov insl adc out inc mov jo out sub pcmpeqd mov pop sbb (bad) jmp adc mov xchg addl out dec cmp push mov shll out lea movsb out fistpl scas pushl lds out test push xor out cmp je shrb inc out int3 inc pop pop jne out xor add je cltd dec cmpsb and pop mov push pop mov js pop cld loope jecxz and and jnp sbb (bad) stc daa push push call xchg or out or (bad) xor mov adc (bad) pop push xchg or fstpl mov mov movsb test in scas cmovb stc and stos repz outsb cs out add pop cld jo push xchg test in in pop icebp pop pop mov xor sbb jmp push or fist push cltd jns sbb hlt pop cmpsb aaa es mov lds popa data16 loopne rolb daa mov adc roll out xorb sub xchg mov out xor fsubl jbe jo ljmp cmpsl je xchg lcall mov xchg bound mov mov cmpsl adc mov iret mov and std gs (bad) pushf xchg out mov mov dec push xchg sub xchg pop rcll imul and inc mov test adc push das out fwait jb ss shr icebp jns in inc xchg mov (bad) andl jae popf pusha xchg (bad) int mov sti (bad) loop inc mov cld mov jo cs xor adc lea xchg pop ja out imul imul pop xchg adc out insb and popf xchg in jnp dec xchg cwtl ljmp sub stc out xchg mov das lcall sbb jecxz mov iret lock shl cltd pop push sarl lock out lahf inc out adc mov out (bad) sbb mov adc sub or mov out inc mov loope iret fsubr pusha fyl2xp1 jne pushf push shl mov test scas or out je fwait jo push test js push rol jne repnz lret mov ret mov fldcw pop push out jbe loope and int3 ljmp in jge jecxz jle in or pop icebp mov push mov bound adc sub ja add push out mov fnsave dec (bad) dec fcomp pop outsl adc sbb sub in push out xor pushl sub mov jns adc pop and insl imul inc out (bad) fwait mov cmp int add scas mov adc or iret push push test cli and (bad) pop jb sbb (bad) loop sub xchg add mov sar cmpsl iret mov movsl jbe int (bad) cltd ja or data16 mov loop jbe cmp adc insl dec ljmp xor out mov mov ss dec lods push push out in (bad) or mov iret sbb xor cmp adc out shr test pushf pop dec out mov cmpsb or pushl repz adc lcall bound jg iret out push movb xbegin mov jnp ljmp in (bad) popf out lea or data16 daa bound out ljmp mov setno imul mov push push add jno out and cmp inc out loopne sbb sub pop push dec dec in out imul imul addr16 fnstcw sahf adc add or dec int3 push negl pop movsb call lcall repz das sub mov ret xchg push (bad) insb (bad) push push xor (bad) sbb cltd je loop add xchg call pop loop dec dec jg in and pop mov inc neg cltd in pop jbe arpl shr and jl out or in jne jge xor cs test (bad) enter add stos iret xchg sbb add loope sbb cmp shr sbb sbb cs scas mov lahf adc push push sub out add call jl and loopne sarb fs and insb jbe out out rcrl xchg fidivr add sti sub cmp aas and movsl mov lods out push pop (bad) sbb pop lods add out xchg pushl out in sub mov dec pop adc rclb out les mov fstpl inc (bad) cmp sbb ret out mov fcomps adc and and sbb imul push and pusha call mov jecxz stos jb inc out jmp lcall pop aas adc rorb fwait in adc ja es xor lret out pop cmp jae insl xchg das mov movsb jns ljmp add or cltd pop (bad) adc sub in pop pop jns loope sub sbb aam cmp ljmp out clc leave xchg movsl mov test mov es cs xor pusha insl in mov adc fwait adc (bad) je mov les imul lods mov jl add mov out icebp inc negb lea jmp pop xor sub call out mov fisubr das femms fcmovnb xchg xor jo in iret adc ljmp std mov push insb mov fucomi sbb lret into (bad) leavew push sbb inc out test (bad) daa int3 or movsb dec pop mov or call jne out adc leave sbb test outsl mov add out xor mov sub adc cmc mov daa mov sbb dec xchg or dec mov push and sub cmp and push pop out xlat lods (bad) mov pop jnp out sub in cs cmpsb sub shl in aad cli loop in std enter mov (bad) bound sti pop out xor inc jp push cmp lock stc xchg out xor mov bound out out cmp loope fwait push pop int3 lret bound ffreep cmp popf mov push inc or jmp (bad) jmp inc ljmp sti cmp hlt cli imul xor lret fs aas loop push repnz cmp outsb push cmpsl mov sti add cmpsb pop addr16 and mov rcrl repnz push movsb xchg lock stos lods jbe sbb out insb scas mov (bad) xchg loop lahf shrl cmpsb movsb lods js xor push test rcll fs (bad) mov pop add lock jp sahf pop aaa sbb push dec in movsl ret out insb xchg int sub and iret movsb in mov enter popw rol lock scas inc pop repnz pop jae push cltd lret jne push fisttp inc sub addr16 xchg mov insl mov out out mov cmp mov outsb inc nop xchg out cs sub int3 cmpsb inc mov jae or sbb sahf add mov lahf lret sub out shl cmp sbb mov pop shlb fnstenv das out jmp js es inc shr sub cmp xor ret idivl mov mov or pop loope out fiadd mov mov test test inc sub xchg shr pusha std aam (bad) out push or pop jge pop sub jg bound outsl cmp mov out bound inc dec mov fdivl dec int xor jne add dec loop cmpsl (bad) add (bad) jl xchg mov scas inc int3 xchg inc addr16 fucomi add out fldcw xchg loope pop or imul int3 xor or fsubr push (bad) repnz std fistpl aam enter out out stos xlat dec cwtl add adc mov and push out jae es aam call lods mov xchg stos or mov out cwtl lds dec mov pop outsl and (bad) sbb jo cmpsl cli cltd orb stos sahf dec sti (bad) stc push aad sarl (bad) jmp inc in cmp push cmp inc test out jl movsb fdivrs or pop test inc ret dec in xchg out in jbe je jmp jg push push push loopne shr leave loope bound dec push out xchg fidivrl xor jo fs pop (bad) xchg rorb pop call hlt (bad) sti add into and jle lea out (bad) (bad) (bad) jnp sbb push mov enter nop out ljmp add xor sub out cmp adc or ds sbb jnp sub adc fisttp lods mov out jae ret int in xchg mov push adc dec out popf repz lea inc xchg pusha mov push mov cmp bound nop push cli fmuls cs add mov xchg inc int loop outsl cltd scas mov inc jno jbe mov daa push insl out dec (bad) aam cmp ret inc xchg jp out push ret rolb jae dec insb sti mov pusha (bad) push out sub sbb mov out out int3 jno xor xchg shl sub aad mov gs mov vpmaxsw dec icebp mov or popf pop cmp mov xchg sbb stos in (bad) and out mov xor test out sarl mov dec cmp notl fcmovne (bad) movsl stc xor into lock out adc inc sbb mov jo aas jbe iret push lods or (bad) adc inc sbb lds lea or out in inc aad decl test cmp and idiv popf xor push pop out test push or and insl loopne call out mov jecxz push jg cmp in out aas mov insb out mov push push fstps loope nop jns (bad) fwait repnz out inc imulb mov adc sbb sub mov xchg cmp dec mov in xlat pop sub add in fwait mov out std outsb dec dec ss sub inc stos mov pop or xor rolb arpl aas ss adc cmc out push dec cwtl dec insb stos jle lahf lds push clc movq cwtl dec mov aad xchg dec xor sub and ret out jp pushf mov sti ja clc loop mov xchg gs loope pop insl xor leave adc out ret sub jg jmp out jns adc rcrl in and (bad) lock mov fiaddl wrmsr out dec into sub or sahf in out sbb sbb sub les push test out or (bad) out cmp pushf pusha ror mov push popa xchg div cld xchg insb add movsb mov add out dec out sub test repnz dec out arpl pushf out adc clc pop xor pusha jp mov or iret loope daa outsb pop pop in out insl movsl leave popa rcrb xchg ja xchg imul sbb call lcall test mov cli sbb pop rcrl mov movl jnp xlat inc clc out adc popa fbstp jmp xor push pop lock ljmp cmp inc jecxz adc out xor ja out add sub cmpl mov mov and loopne xor mov push sbb jg adc fisubr xor sbb sbb loop mov out (bad) daa push jmp jbe cmp std add jmp sub mov hlt enter xchg ret insl out xor mov jnp es adc imul cmp rolb int sub mov out fisubr movsl (bad) cmp mov ffreep push cmp pushf cmc lcall adc jg jmp sub stos mov (bad) xchg loop lea out add jnp push and mov std add daa or and test int mov fisubrl pop cmp mov (bad) outsb mov outsl push out mov inc pop adc stos xor push addr16 dec jb in xchg xchg bound mov (bad) mov out imul inc fiaddl xor fiadd imul and dec out loope xchg adc adc jp add inc test (bad) je xchg pop push mov jne cmc inc (bad) repnz out lret sub imul or push leave mov adc xchg lahf repnz notb sub insb mov jp (bad) mov xchg (bad) or add jle pusha rclb out in xor or sub clc lods mov out xlat mov ss insl out into fnstsw lcall jl push out mov sbbl push mov imul aas xchg xor in outsb stos fucomi ficoml xor nop mov push mov push jnp sub std fsubrs jb pop sbb inc mov xchg out vmovlps out mov jno push loop inc dec sbb xchg call daa pop imul inc xlat pop cld pop out stc lods insb pop sbb sbb fisubr ds xchg (bad) out inc das mov nop and shrb ss loope (bad) sub and pop jg jns insb ss jg gs sub cld cmp or push cmp out inc adc jo pop popl loop dec inc sub mov cmpsl xchg repnz stos and fistp loope add mov out aas dec push fcompl jp data16 pop ret jae jmp aam test (bad) xor repz mov rcr push xchg add inc mov inc std xor and out icebp rorl mov movsl dec dec sahf jae cs (bad) scas inc int3 xor jp sti dec in xchg out cmp movsl xchg adc cltd sbb pop xor push out mov lret orb push mov mov sub pop repz cmp into lret mov bound (bad) fdivs scas in call inc sbb outsb inc mov out adc pop jg out xor xchg loope sub out fnsave dec xchg push out outsl lcall fsubr jp fldenv adc mov inc cltd add pop rolb cs out xor xchg or jns fwait in test push mov rcl or in lcall repz sub mov outsl in push pop xchg movsb out mov adc cmpsb xor sub fwait out movsl fisttp cmpb inc out das and out dec stos ljmp popl jp dec cmpsb sub pop cmp stc fsub inc test lahf or sbb mov (bad) ffree sbb hlt sbb jb push mov push inc scas pop ss sbb dec in rcl pusha jno pop int3 mov call mov mov cmp ds sub inc loop out mov sar fildl out jl,pt jb sub pushf lods mov in xchg or out jle inc mov adc mov sub arpl push lods in aam lahf jle dec aas out push push mov adc test jl mov rolb loope (bad) insb ss jecxz xchg outsb scas adc adc bound cmc xor les cmp inc mov aaa (bad) mov cmp dec out pop addr16 pop (bad) lret bound or out or f2xm1 in rorl dec loope cmpsl bound test in call ret stos movsb cltd jb leave pop xor loop push out jbe mov out cmp outsl int or sub dec dec (bad) jge mov pushf or mov sub movsl sub aas cmp mov adc sbb (bad) faddp imul and cmp sub mov stc adc mov (bad) lea es cs pop cwtl addr16 das xor sub int pop ret out or push cs out and push cmc jnp aas or jecxz pop sbb pusha add xchg ljmp test gs out cmp mov dec cli jnp out xor loop jp add iret mov cs int addl push ret xchg xchg xor add adc outsb pop out lea lcall out in movsl adc frstor dec out (bad) pop jae outsb (bad) movsb sub divb ficompl test clc xchg (bad) cmp lods dec in out bound gs add out std (bad) lods push testb int outsl into lcall cmp out jecxz inc ds push std xlat aas jmp (bad) or out push push (bad) jbe out push popa pop sub mov sbb jnp pop mov mov pop out insb cld adc (bad) shlb out lret loop ja lds mov dec out fcom add xor mov cs pusha pop iret dec push cld call cltd pop jmp jae add sub outsl fisttp sarb notb stos dec fwait iret idiv insb push call cs cmp push or aad call xor mov mov inc pop mov or enter jmp mov push rorb loope out xchg fcomi pop xor sub aas les mov add cs fidivl inc or loope sbb jecxz ja pop jge or in push ret iret nop sub pop pop test cmpsb lcall jnp (bad) (bad) js mov stos mov out push xor les fsub pop dec hlt out or sti mov (bad) out jne dec insl imul xorl imul fwait dec mov out bound mov jne out addr16 test call jg pop hlt xor ret out dec icebp add push dec in out mov (bad) aas fs loopne addr16 imul dec mov rcrb inc out jp xchg sub lahf out addr16 inc pop imul inc cmp out aas mov xlat insb mov sub outsb mov out cmp int mov mov (bad) cmpsl movsl cltd popf adc out mov xchg jno xor sbb jmp mov xchg out cli cmp insl cmp xchg pop mov aam stc insl pushf mov rclb cli pop and out loope out xchg cmp xor push pop pop es iret dec fmull mov clc pop xor sub lods jbe adc jg push out (bad) fwait rcrl mov call out test lods sar or pop out sub stos mov out inc mov xchg dec out ja pop mov out pop in ds popf sub out rclb inc fcmovnu pop ljmp or pop ret xchg xchg xlat ljmp add adc wrmsr repz arpl (bad) popa inc pop pop mov ret mov mov and data16 in lock xor adc fucomp or jp fprem jno (bad) stos lret sub (bad) cmp out data16 and xchg mov outsb cmp mov stc shr div xchg or mov xor out js pop adc mov test aas cmp f2xm1 sbb mov and out dec add outsl out mov lahf arpl imul dec xchg lret xor jle pop adc xchg out das scas aaa jbe nop and out sbb insl outsb ljmp mov stos add dec rclb inc addl out xor jg xor cmp mov jmp inc out dec mov (bad) mov lcall and fcmovne push jo fwait push or in push out add mov or push xchg inc (bad) out dec add or mov cmc out ret test push out inc ficomp int lds jb in push movsl jl fistp (bad) int3 ljmp cmpsb inc push out dec (bad) mov lahf shr dec (bad) movsl mov adc lods sub xchg out inc into sbb shll mov xchg or stc aam std je rolb inc ljmp pop xor or mov mov xor subl pusha out out jo add in lock jmp mov push out xor xor pop cwtl ss (bad) xchg dec insl int3 push jge enter out clc cwtl mov xorb hlt mov out mov sub pop jo js sbb sbb add xor in in lods aad repnz jmp insl imul inc sti in rorl test adc ret out cmpsl sub jmp cmpsb push mov xor shr out out movsb jns test js mov mov push ljmp out lock inc rcll arpl mov add aad inc jnp or stc pop mov out pop sarl xor xchg jmp and arpl mov add jge xchg dec test inc les int sbb xchg or out adc (bad) out lods sahf lea test mov ja cmc xor or repz rcrb push xchg out stos icebp mov pop sahf adc jg cwtl out sbb jno enter mov adc out pop push pop fstpt (bad) jno (bad) adc aad ljmp xchg (bad) bswap push adc xchg stos pop nop xor lods (bad) push cmc adc fmuls pop out mov out int3 daa mov add and or insb aam data16 pop inc cmc xor pushf push mov sub inc loope or xor and lea and in ret movsl subl imul mov smsw mov mov shrl sub out es or sbb data16 mov lods pop sub xchg movsl inc les scas insb out xchg repz ficoml js push cmpsl scas and arpl (bad) out or lcall insl sub cmp mov inc rcrb outsl loop out push out fs shrl out dec aad xchg add add (bad) add adc in mov test nop daa fistl add loop das add mov pop dec out rolb bound push out (bad) ror addr16 notb rolb insb rclb pop (bad) pop fildll (bad) xor int out fsubrs pusha lret xor jo test dec add xlat sti jle out outsb pusha iret bnd fs xor cmp in cmc sub imul lcall mov rcr loope cli ficoml out testl inc out mov outsl out out (bad) and lret cmpsb mov lahf xchg ljmp mov ficom adc test cmp mov out cmp add loopne out cmp in ret mov es xchg movsb in rcll (bad) rorl lret lds adc in pop sbb xchg test inc inc sahf and (bad) pop out sti cmpsl imul xchg or adc adc fcompl jg ds (bad) out int jns (bad) xor ret cmpsl inc out (bad) stos pop or sti inc out add xchg imul push cmc popa aad adc mov (bad) out aas psubusw pop adc imul insl (bad) jp outsl xchg pop cmc lahf inc inc add movsl out insb add out mov cli xchg inc jge or sub mov adc rcr aas loope pop (bad) jns jmp (bad) aam dec jbe fwait (bad) inc into scas mov sbb mov lret call lahf aam cwtl mov je out push mov xchg xchg imul and push adc inc int and mov jmp jecxz mov icebp ja je sti (bad) fstpl into fistl inc sarl out sbb lea mov out cwtl jecxz or loop mov pusha pop addr16 pop jge lock movsb out fcmovnu sahf ret (bad) pop test pusha lock mov loop icebp shr mov clc push cmp mov or sbb jp scas in pop out pop pop mov fstpt inc cli out mov sub imul divl fstpl push jns (bad) lret sub out sbb repnz or sbb test pop sub push cld icebp xor xorl xor out fildll outsl add mov out or insb cwtl mov sub lods jl adc add (bad) jmp out (bad) push scas fildl lret mov adc das xchg out jno (bad) cmp mov out xor aas jl mov sbb out jae outsb iret xor les xlat adc shll push or push mov hlt outsl jecxz adc pop inc xchg out xor lods out sti pushf and ret sahf (bad) mov adc jb adc out jle popa lea cmp jecxz out loope push sub imul sub pop test out jl dec in gs fwait xor xor out in cmp adc out insb xor and jmp cmp xchg xchg in into out stos out (bad) (bad) sub repnz xor aas mov fwait ror out adc enter out sbb imul insl mov loopne adc lahf cmc aas aas adc push xor mov gs scas incb jecxz pop jbe ljmp call roll aam and mov data16 cmc int xchg iret stc cwtl je mov repz scas outsb push leave les xor add mov inc (bad) out xchg popf sub mov mov aaa bound out lea ja ss dec daa icebp mul cs into out inc sbb lret rcrb cld int dec dec inc aaa cmpsb out into mov mov (bad) (bad) js outsl mov js jmp jne int3 xchg out cld loop mov cmpsl xchg stos shrb mov push add out mov ficom out mov out cmp jnp outsl bts fsubp out rorb icebp out call int3 gs adcl xor negl adcl adc and xor (bad) push fimull mov stos mov je xor ljmp stc mov arpl xchg pop jmp scas out inc rorl push insl inc sub lods (bad) cmc (bad) dec hlt out mov push xchg push aam out aas cmp push imul int setge jg stc sahf out xor inc les out loope xchg push pushf rcr cli loop paddusw or mov sub test mov mov xorl jg sbb add jl xchg rolb outsb mov out mov adc bound cmp adc shrb int dec call loope xchg or insl stc lods jmp adc mov insb cmp out xchg mov leave jno iret sbb xorb hlt outsb (bad) out jne outsb or pop bound sub pop aaa enter push out cmp lcall and or pop or dec std push cmc out mov dec lods ljmp add sti mov jle ds bound adc out cmp popf incb mov sub dec movsb lahf xlat out ja push adc out out pop pop mov aad lock push je jb aaa fimul lods lret xchg in int3 ljmp in push lahf adc push cmc out into inc sti inc out add xchg sub stos arpl loopne or jp (bad) (bad) mov das mov and push cltd pop pop cmp xor stc lret (bad) jbe loop cmc and xchg dec loope cltd ret arpl jecxz mov and xchg aad in pop out rol scas mov jp (bad) cmp in and in insb adc xchg fimul js jge add out outsb mov les dec jg out cmpsb xor (bad) sahf cmp movsb (bad) xchg lahf loope cmpl test mov and lods imul aaa jnp jne sbb out jle pop mov out lods mov xchg jge out fcoml cmp mov xor mov jmp pop ds mov or jl je out xchg or or pop jle and out mov cltd mov fildll stos dec cmpsb in out bnd out enter xchg (bad) out inc scas lahf aas xchg shl repnz fwait dec jns ljmp xchg pop mov in pop mov mov cmc mov sub ss xor mov fadds mov mov lahf mov outsb ljmp push insb jecxz push int das popa lret xchg mov js clc cmp movsl out int3 push and cld bound stos fistp cmp imul mov dec sbb pop cwtl push aas loopne mov addr16 outsb out test (bad) insl cmp adc stos insb lahf add jl repnz and bound pop mov imul pushf cs outsl pop iret in lea push std push aaa lcall fs pop mov mov out dec outsl out add pop push out inc rorl lods push xchg out stc imul push out mov clc lds out out shrb push out mov push pop fiaddl punpckhdq loopne loope inc ljmp (bad) aad sbb cmpsb mov add stc mov es out cs std jmp mov jge insl (bad) out in add out (bad) (bad) push mov mov stos stos add mov fdivr test mov push sbb rcrl cs out sti xor (bad) xchg (bad) mov loopne fwait jge jmp push stc fsub or ljmp cs add nop push (bad) rcrl add in or fwait out mov pop inc mov sub daa sub add cmp out mov jb ja sub out sub pop push movsl pop lahf out xchg mov cmp xor mov (bad) ret inc xchg incb pushf hlt ljmp cmp shrb sti push pop iret loop cmc test ja ljmp stos mov leave push add xchg mov insl adc (bad) mov adc jmp push sbb pop stos test fnop sti push adc mov pushf (bad) in adc cmp mov stos jmp xchg mov pop out push push jl sub insl clc sbb fs (bad) mov adc mov mov mov out test int xlat xchg cmp out in and out sub sub dec js faddl aaa mov mov push sbb cltd adc out popa stc mov xchg and pop jg js std movsl out cwtl lods out sbb push mov out jmp push pop aas bound out adc xchg xchg fcmovnb jo out add enter inc es or roll mov mov push out lret xchg jmp sub out adc or push ja je cmp jp add and push test fsubr adc addr16 pop cmp push in out pop outsb out lret stos (bad) sti pushf dec mov and out pop call pop and fisttpl jae push push daa lret fsubr cmc dec or pop (bad) sbb stc and push divl pusha xchg cwtl aad push in rorb (bad) fcmove das addr16 ljmp icebp out outsl fnsave xchg mov adc jno jae out sub jp and sbb out fcmove or ljmp das adc (bad) jmp out jo inc sbb fsubr (bad) sbb push out (bad) testb out out push pop dec adc adc lods xchg mov lahf call pop (bad) add js addl pop pusha (bad) out movsb mov fwait pop fdivrs dec push push out test sar fildll cmp add stos movaps out movsb mov lods and mov jp push or mov movsb loop test adc out inc scas aam lock lea inc push mov mov push cmpsb sbb mov sbb movsl (bad) test out adc mov sub add iret push pusha jno loop ret (bad) nop (bad) fbld loopne sbb pop (bad) pusha lods out sub incb sbb out in mov adc imul adc popf bound mov sarb sbb jecxz mov out aas push xchg mov xor push mov inc shrb mov and lret scas insl push lahf mov sbb dec and xor ljmp out iret pop push xor (bad) pusha cmp mov stc xor out (bad) mov aaa ss jp push jecxz out (bad) cmp sub xor scas test fwait mov lock inc loop aaa rclb jo std int3 aad cli jne or push pop push flds pop leave (bad) jmp lods xor mov fldz cltd sbb fmull stos push out sbb mov pop lock xor loopne jns sub movsb cli ss popa and and xor push sub (bad) (bad) repnz shrb imul out notb sub shlb out std sub leave pop cwtl mov add or pop das pusha add dec insl mov jbe pop xchg js sub xchg or push jb mov lea cli lock mov out push mov iret in out es insl push jecxz cmc push out movsl negl call dec push dec sbb out sahf sti rclb out pop movsbl push lds arpl lods jne add adc push into out rcrl fcmovne push rorb mov xchg out xor (bad) or mov bound out icebp inc xchg sbbl cld das ret aaa jmp mov and bound (bad) out mov (bad) mov movsb fcompl fisttpll mov test pushf ss pop dec lock lea xchg dec int shl pop out push lcall cmc out push jo fistpl add and xor out (bad) inc xchg jecxz adc ds insl mov out add push sbb cmp sub mov adc inc push or cwtl nop fwait imul pop ds movsl out or jae lahf in xchg jno test push add sub popf insb add hlt out jge lods shr xor cli sbbb out std lahf sub int3 xchg xchg jne push dec shr push ds int xchg (bad) cmc popa sbb lret loopne cli dec in in jle loopne repnz ljmp out add mov jecxz fld out mov (bad) mov loope push (bad) push pop xchg mov mov ja out mov xor in gs es out cmp add mov and out jnp ljmp repnz out add out cmc mov rorl pop das xlat inc (bad) adc out aas mov cmp sub jmp jns out pop and lock outsb push out cmpsl sbb in jg divl pop xchg add in push pop dec push cmpsb dec xchg inc push adc mov outsl sub and pop rolb push out xchg pop mov xchg push sahf mov lea cmp out daa shrb rolb cltd cmp out and outsl popf out push sbb push out mov fadd mov lds mov xor mov fbld add es stc push jmp leave bound out sub das aas dec xor adc push add mov out jae mov data16 iret sbb stos mov pop add pusha sub out adc lods jl imul out (bad) aad ljmp arpl clc rcrb ljmp out out dec outsb push sbb (bad) out mov bnd loop cmpl out test iret movsl scas mov imul jns test out jo lds enter sub xchg out loopne push mov push (bad) mov dec add out xor ret mov xor pop test mov sbbb dec push mov stos mov cmp xchg push loopne popf or jb jecxz mov iret fild int (bad) jb out sub mov test and fistpll pop std pop cmp insl in (bad) jmp push cltd inc jb cmp sub data16 push loopne,pn cmp sahf into cs mov and nop cmp int pop fist (bad) push (bad) je bound xchg out out aam movsb jo xchg and mov outsl adc repnz inc sarl jp ljmp cltd mov cli lods dec call sarb jmp mov sbb fisub fcoml mov dec in xor out pop (bad) mulb cmc xchg xchg push jg setp mov mov xor aas dec or xor or out ljmp sbb (bad) shrb cmp test ds xor pushf add repz je rol push notl repnz out sub xlat mov cmp pop dec std pusha out mov jno add mov cwtl and inc jl ret movsb cmp sarl notl out es inc mov sub aaa xor decb sub pusha lahf out pop push fldcw ror aas das and lea lock sahf in (bad) mov out (bad) rolb in outsl xchg cwtl jp pop lods xchg sti lods push out out dec sahf sbb (bad) stos xchg push dec notl out jae pop push sub inc jno (bad) xor xchg or test subl divb insb push dec out xchg or fldt sbb pusha movsl inc add pop xchg in jns iret fdivl xor loop adc pop scas out movw daa out aaa test jo sbb ret mov jno out push subb les dec out and cmpsb mov and aaa hlt jmp xlat mov dec cmp out pusha cmpsb fmull sbb imul dec jmp and fnsave out mov add bound pop out rcrl mov fnsave out pop xor dec push out push call pushf pop jg mov mov int jl push xor out add lahf push fimull adc fsubrl mov stc out mov dec arpl shl out mov data16 nop and mov or pop shlb out adc stos ljmp (bad) sub ret lret mov mov xchg (bad) nop fisttpll push out dec iret push and (bad) aam daa cmpsb xchg cmp add xchg push aad mov and out jle scas lock nop pop sarb pop int add mov jmp inc out test notl push add lret arpl inc fstpl in adc mov cs push jmp dec out sbb ss in and jns pop push flds stos imul dec or jp repz cs ljmp lock pushf cmp orl call pop mov (bad) loop repz add imul or mov popa int3 jmp hlt sub ficom call pop push movb add mov dec xchg sbb and lods adc loopne xchg xor pop loope jmp icebp (bad) jg or mov out (bad) inc add push enter insl out punpcklwd xor (bad) dec or pop xor out mov adc mov add push cld xlat out add jae movsl push cmp mov pushf out insl cmpsb jl (bad) pop je in bound out test push or sub das jne enter sahf push addr16 arpl lea inc stos cmp testb ljmp push test mov adc pop out les jmp (bad) and out pop in cmc cli out sub sub mov inc dec ret cltd vpmaxsw sbb mov dec push (bad) and out inc push (bad) sbb movsb and out xchg xor aas bound ret enter sub mov out cmp js or repnz icebp in xchg jo iret xchg out mov push lret mov inc push push sbb mov iret add mov cmc sub jg loope (bad) adc lret (bad) addr16 cltd mov cs scas das movsl inc pop je stos and out movsb mov adc cmc repz mov adc pop jmp add pop cld mov call insl xchg cmp out adc fistpll loop push imul out push int3 cmp es call push jge popf push sub push pop ret jmpw cld pop icebp outsb sahf js call aad mov fwait and (bad) cwtl dec xchg inc sbb sub sbb sbb jmp into mov cmp inc out or and xchg cmp pushf xchg cmp sub pop test (bad) stc clc out mov (bad) out mov mov sub andb xchg out cmp sbb dec cmp jl aad iret (bad) out cli je jno add lret movsb jns pop push mov loop loop cmpsl inc pop insl mov in push xor out push pop pop out inc scas pop xchg dec and call mov out push pushf daa mov cmc dec rol mov (bad) fisubrl mov shl ret lahf pop jno and xchg das pop (bad) adc xchg pop xor in dec repnz out or (bad) mov sub cmc aam out cmp (bad) or (bad) jbe pop mov inc cmp out sub fisttpl jbe pop out jge (bad) jae out aam adc pushf imul jg sub xchg and mov int cld and ret xchg std mov mov mov sti out ror test add stc dec pop mov out jae jecxz test mov out adc pop test bound jbe mov out pop ljmp dec gs push out cmp xor test out xchg sub insb out ffree pop jecxz out daa sarb cmpl stos or sbb adc es inc out insb test sub jb out and push inc mov push (bad) dec icebp clc test fsubr arpl aaa in ficom mov test mov jg xor out in cmp and aas stos push ret xor repnz pop or push inc jo sti cltd and inc (bad) fistpl dec out and out jns gs lock out add jb pop sbb xchg ljmp mov xor adc out (bad) lock or jb repz xchg sbb xchg ret loop dec out in xchg push dec adc inc jae stc sub imull out xchg sarb ficompl inc loop aaa inc lds or icebp leave xchg loope push pop mov dec cltd pop push lock sub xchg (bad) jbe stc inc fstps inc pop outsl addr16 adc xchg out stos mov pop inc mov (bad) shl push push push inc jg (bad) out jnp adc call out add xor xchg push or shlb stos mov rclb sub add (bad) xlat out jecxz dec (bad) movsb inc ret out repnz xchg xor lods loop leave outsl pushf lahf sbb lret out cwtl xchg cmp mov stos xor out scas hlt aas pop fist adc out jg push fwait xchg test push out icebp xchg jns ds repnz cli js call mov int3 push ljmp jg cmp (bad) decb xor stos imul out test imul ja out insb rcrl xchg push (bad) out inc push mov aad pop cld fistpll imul mov jmp sbb dec push bound push jno out dec inc movsl mov repz (bad) out jnp push xchg ret mov (bad) mov shrb pop cmpsb arpl insb push enter jle mov jecxz pop out sbb popa mov pop push jnp frstor push cmc push out insl lcall out cli fistpl add mov push out leave xlat push cmp fstps jnp fs jo stos pop out (bad) icebp adc push mov in push cmpsb out xchg xchg cli push push mov cmp shll or sub scas or (bad) mov add ljmp (bad) xchg lahf inc mov jb jmp out mov inc lods les mov imul call fild loope out jl sbb out xchg adc mov dec pop out jmp mov pop jno push js daa out sti stos lahf xchg pop mov and jbe bound out add rcrb test or loop enter popf pop repz dec jne cmp mov in adc sbb and dec dec push aaa fnsave int3 xorl push out lcall fs fsqrt dec and jb loope sti lock data16 inc jl lret out sar pop aas mov dec inc out xchg lret out mov jne cs test out out decb adc pop adc out mov sub test push cld dec pshufw sti shr mov out je jne lods lret (bad) out call sbb or rorl jecxz out hlt inc jp push cwtl insl sahf sar or out sub sbb out and xchg and push (bad) cwtl (bad) ja out cs inc sub nop pop scas arpl mov mov dec shl repz mov mov mov sub jo pushf popa cs lea fild int3 push pop xchg jno jb,pt out std sub test repnz lock xchg inc inc fimull in lahf jmp jmp xchg popf xadd shlb frstor mov in (bad) pushf jmp cmp xor jbe lods popa lock je and (bad) adc out addr16 push dec hlt cmp cmp loop out ljmp mov and fistl movsl aaa mov push mov sub mov outsl sub (bad) jge rclb sub xor and xchg loope jle jbe iret pop sbb cld stc mov lretw xchg (bad) lea fwait popf in test cli out sarb test out sbb daa jmp fisttp inc out aas mov jae jb xchg adc hlt push add pop jo xchg push inc push dec in iret pop lods je outsl jle int push adc mov out mov pop aad fimul out inc icebp cmc addr16 stc jbe and out rolb out pop fwait aas mov or je movsb or cmp clc mov mov fucomi pop lahf push jmp lcall dec insb jmp (bad) lret out xchg clc and (bad) and addr16 adc cmpsl dec cmp loopne and mov ret jp jge fstpt nop loopne jmp out loop sub movsl repz in ss mov nop push je and lcall in fcmovne jp repnz pop pop lods test sbb adcb sub push add je pop xlat push dec or cltd lods out mov scas jge jg test mov enter subl mov inc lcall push out popf jns jp mov inc out lcall mov movsl push xchg lock push out xchg jns lods out xorl jo cmp inc xchg sbb in stos mov push push lahf xchg pushf stos out in cmp scas out xchg mov add fcomps (bad) (bad) xor jb popa push adc sti cmp mov jns sub out xchg jmp mov loop or movsl mov popa insb xlat out inc je (bad) mov sbb maskmovq notl add out aad pop cli inc add out xchg mov (bad) xor cld pushl das mov mov test lahf inc add rorb push ja lahf jb sbb cmp push outsb xlat int in ret out xchg dec jp cmp inc setbe imul lods xor rcrb pop xchg insb and out and sarb jo mov and or adc jmp das inc or data16 sarl test out test sbb pop cltd insb mov jg xor mov sbbl xor xchg call inc xor in push sbb in out out fwait insl jecxz cmpsl ss sarl stc outsb test xlat out daa leave sbb stos ja out js jae ror bswap orl mov pop ret out push ret mov out gs fidivl out and call dec or mov (bad) lcall xor and pop mov loope lods sbb iret inc mov sarb mov push adc out mov je cs cwtl and jbe cs out rorb push (bad) cld lcall push (bad) mov out outsl sbb pusha fiadd enter xlat stc xor pop inc mov mov mov jg out mov xchg mov imul or out test push cmp lret mov ret out lods scas into imull out adc arpl adcl sbb scas ret sub cmpsl into imul out insb cmpl sub cmpsl mov std adc lods inc pop mov ljmp inc add inc cmc cmp shr jle dec orl xchg inc pop mov loop pop leave out cmp mov out mov push (bad) push out or and leave pop pop int dec xchg inc cmp test out jl fucomi aaa (bad) repnz cmpsl cwtl out bound or xor test xchg shr ljmp jp jle fstpl in push (bad) loope es ljmp out cmpsb sbb jp mov out or cli imul push mov or mov pop les fnstsw call cltd xchg js pop repz and imul fsubl push jns xchg dec out dec dec sub (bad) lods negl outsl pop mov aad aaa sbb iret sahf inc mov pop xchg mov lret cmp mov mov or (bad) daa xchg mov pop insl outsb scas addr16 push (bad) out xchg mov mov dec (bad) ljmp push out jl inc fldt nop pop xlat sbb cmp movsl lods cwtl lahf out outsl sti or mov jge lahf inc test call sub xchg dec setle iret push hlt ljmp push cwtl popa (bad) mov push out lock testl arpl rcl into repnz shr ja (bad) out adc xchg xchg es shr adc repnz xor mov out outsl jp jbe jle stos xchg nop das sarb loop jb cmp push lods add fildll inc pusha pop out mov (bad) (bad) pushf cld loopne sbb inc dec loope rcrb jle or imul and mov cmp push sub add std out pop js,pt adc pop in pop notb out imul ret dec xor out adc cmpl or inc push ret sbb out out (bad) mov out pop sbb inc pop add jno lcall jnp cwtl out sti or add push and fbstp loop mov dec push (bad) out test add out cmp cmpsl mov scas mov aaa imul (bad) pop cmp popf mov outsb mov roll dec inc int fwait out inc test cmp (bad) dec decb and mov rcrb mov and push push inc out sahf add out dec mov mov stos hlt in jo incb jae pop les fiadd add lods icebp mov mov jnp inc scas mov out jne call stc out dec adc lods pop shrl mov out cmp fsubr (bad) inc dec xor jl pop call out std xor jb mov insb ljmp pop (bad) lret test (bad) lock cmp out cmp lock aam dec pushf out xchg push je imul fisttpl div pop shr aam popa pop repnz orl cmp loop movsl flds mov aas jl mov ret out fdivs lods jp (bad) loop dec push ret fsubrp cmpsl ljmp cmpsb jnp sahf sti daa out mov xor ds cmp bound gs loop out mov adc sbb dec (bad) fsub int loope sub out add cltd xor ss (bad) and les aad push pop out mov sar add dec pusha (bad) (bad) sub cmpsl push test stos sub imul cli repnz (bad) adc mov scas test fsubrs jg mov jmp push cltd jbe jp hlt and enter xor pop pop pop pop pushl cmpsb jmp outsl fsubrl cmpsb push ror rolb pop cld loop xor add loop inc cmpl jns xchg fldcw push pop rorb push aas popa mov in inc enter mov fs add or cld jo je cmpl adc pop in aas out arpl add pop (bad) or out jnp dec fstp push addr16 sbb lock pop das mov push out fucomip adc pop iret loopne fmull or outsb out rcrb inc pop jle mov out jg scas icebp mov adcb test mov and out push out xchg cmp inc out add clc pmaxsw ljmp out push inc jae ret lcall (bad) out or idivl mov test es mov fucomp (bad) (bad) faddl xchg test pop or jb pop pop sub and repz in out lds pshufw ret out popa jmp out push sbb gs mov jg pop mov push insl out inc test leave adc loope cmp out pop mov stos loop out push aaa or inc mov out and pop xchg clc out dec mov push pushf pmulhw popa jle in mov mov mov das cmp test mov data16 cwtl cmpsl enter and out push pusha and inc sar and cmp push in jns sub pop fldt icebp imul dec outsb test out int pushf pop push dec fs lea sbb xor xchg gs hlt xor in out es cmc aad mov in inc and jnp pop out mov test jo push sub fmuls push jle mov bound adc xchg shrl out pop add (bad) test pop adc and inc add mov push jl lods mov (bad) (bad) pop mov pop mov rolb aam lds mov dec inc repnz mov xchg stos mov lahf mov adc push sub cmp or ljmp fidiv je ljmp inc and and out repz mov test mov push cli sti ljmp into clc sub rorb jecxz push jl dec je sbb imul cs das jo cmpsb push in out mov inc dec iret lods cmpsl shr aam pop ja sbb cli arpl std in loope dec data16 mov or loope mov cmp push jecxz das push push add cmp out xchg xchg lds out inc push dec (bad) sbb ss and or out push mov loope mov cmp jge push iret jg movsl mov adc inc insl out test sbb movsb out pop pop adc in (bad) aas xchg mov int3 xlat out or in out in and xor repz rclb ljmp lock sub or aad add jg insb mov test xor pop packssdw jns lahf loope inc mov cltd mov adc testl mov out sbb add lret out xor mov jne jp cmpsb ret mov sarb add (bad) sbb repnz loopne xchg fisttpl clc mov scas mov cmpsl call out xchg sbb data16 adc test shl cmp and add jl pushf dec ss movsb inc addl imul into xor cmpsl loope pusha cmc out fdivl push out rcll fnclex movaps xchg mov and movswl adc popf fistl add adcl pop out pop les add xchg rdmsr lcall (bad) adc inc fs out int3 jbe mov out pop pop stos (bad) repz dec mov (bad) outsl or rol in stos out test xchg lret out jno adc fdivr divl cmp push in xchg jg fsubrp mov sub std pop push fstpt pushf cmpsl sub scas adc push in sub out or cld inc mov mov out sbb adc add xorl popa out hlt jge fcoml sub push addl mov jge pop dec outsl or in adc (bad) out cmp shll out out (bad) cs test sahf adc scas xchg cmp rol call int push repnz cmp sub ret dec out mov inc add push lea (bad) int3 pop lret in cli pusha addr16 dec out mov mov cld adc push cmpsl lahf push in xchg in out hlt (bad) mov mov fistpll test ljmp jmp aas jle (bad) cmp insl sub aad xor or pop mov pop insl cmp stc daa lods or mov pop xor mov loop in int push pop lods xchg test adc popa add out add mov inc jns mulb clc cmp nop push insb outsw out and adc lods aad sbb cwtl sti push push std (bad) xchg sub sub (bad) xchg xor cli addr16 cs pop xlat lahf lods pushf adc xchg push mov inc adc fdivr inc test xor arpl div je xorl out mov mov cmp out push ret mov push popa imul stos add int ja xchg jae or mov or pop subl mov dec adc icebp jl cmp pop out arpl xchg (bad) incb adc jle and sahf rcll out and push out mov mov out bound jl adc das cmpsb and out js add dec lret out mov outsb lds jle lahf out lods rcr adc sahf test xchg (bad) xchg mov out mov inc outsl jge fs mov call xchg ja pop movsb iret fs cmovo ss ret icebp jne aad jo js (bad) and jge int3 in adc xor push jl pop sbb adc vmaxpd rdtsc sbb sahf aad imul test insb out leave xlat sub dec sub push mov and sbb push imul xor pop jl call xchg push mov shlb rclb sahf inc sbb dec out bound push out mov popf cli scas int3 sbb pop movsl insb clc inc fiaddl cmp inc out ss sub insl ljmp inc inc in nop cmc mov dec lds movsb loop (bad) out pop lcall out rcl mov (bad) pop sbb ljmp xchg out cmp push mov inc push ret (bad) adc test in loope cmp push out add add cmc fstpl out ret jmp ja rcrb xlat minps jge ret jmp idivb cmp mov scas jle inc das mov jge jo sub xchg out xor mov sbb out cmc ds push loope int3 push push lods xor fistp sub iret xchg or dec inc int3 out test out mov je mov insb cmp mov cmp mov lea ds out xchg push fistpl jmp fcoml pop idivb lahf mov clc inc inc inc cmp inc out nop iret jg es mov gs sbb out jne sahf cmpl notb push (bad) fnstsw (bad) adc loop sub (bad) mov xchg sub inc out xchg lret fwait jno mov add hlt jmp out mov dec or out mov pop adc inc mov outsb xchg mov and in out sbb insl push pop shll icebp jno or fisttpll ret out push mov jne cs sahf jge adc lods and fs lds mov shlb loopne repz pop lcall call mov jne push cltd pop mov out in jno scas bound dec dec sub sub into stos push mov shr scas and add mov gs cld add push dec clc and popa jecxz mov imul out adc pop adc sbb repnz icebp out sub sub ret imul jmp jle dec popa loopne inc cmp repnz mov arpl push cmp fwait mov lods pusha icebp out loope std fs mov jge inc jl ja incb dec pop cmpl lock into aam mov (bad) dec cs in pop lcall lret out and jnp jb lcall insl inc adc and daa in pop sbb pop and repnz dec pop sbb popf add out xchg repnz dec push ds dec and mov out dec mov insl test js inc aaa mov dec out cwtl lret lahf stc xchg jae mov imul pop and adc sub sub sbb sbb jp fisubrl in je out std js sti inc fnsave push push pop jle imul push lahf push add not sahf out fwait stos and mov fdiv pusha add leave pop dec addps and lods cwtl call push dec test cli xchg mov fucomip fisttpll jbe adc leave mov mov daa mov imul out (bad) and mov notb (bad) lock dec out pop jp xlat negl imul (bad) dec leave out pop xchg xorl lods movsl in xchg popa fimul (bad) mov lret int3 clc shr out shlb out (bad) out lods and rcrl fisttpl push fistp sub xchg out pusha int lahf out inc jnp flds xchg in inc mov cmp mov jmp pushf push push movsl (bad) mov sbb mov dec out adcl xor sub add out push mov in inc adc sub mov cmp inc out ret fcompl sub in call (bad) (bad) call aam ljmp daa jne je out xchg (bad) sub (bad) push sbb imul out test inc cwtl loopne lahf cmpsb daa adc pop movsb clc inc aaa mul mov in std insl push pop cmp fist clc mov push test push out (bad) loop repz (bad) jo xor xchg ljmp mov xor add dec das out xor cmp rolb out adc rol aas push ds enter or sbb mov out cmp xchg addr16 jmp mov dec dec hlt loopne and add mov inc xor lcall sub adc (bad) cld sbb loope gs dec aas movsb out lcall cli out orl inc lock (bad) aas stc push add dec cmp xlat push outsb arpl mov jo out cmpl aas dec insb push out mov lods push out jne mov xchg out outsl out mov test pusha push inc in out mov pop iret ret adc cmp pushf jb and (bad) fcompl mov mov cmpb incl lret out test fadds push std add in add pop cmp mul sub cs ja lret cmc adc xchg lods add in jp cmpsl jecxz cmp xchg mov sti stos mov test (bad) jp stc pop and cmp lods retw out sub mov imul out shrb add push mov jl cwtl movsb cmp aad sbb outsb ljmp push jg cwtl out inc push xchg bound imul sub xchg test dec rclb dec out les lods sbb xchg lods in fimul in loope or ret add jo fs xchg movsl push movl (bad) cmc pop inc iret push or popf lock cmp out push mov inc mov and push insb and out xor jecxz fmull imul out or in push push sbb out sub leave adc aas and iret jmp push jmp out adc xlat dec cli (bad) mov cmp pop scas or imul pop mov out add bt sti out cmp mov loopne mov cld cmp cltd sub jmp out xor iret xchg cmp mov cmp add out icebp pop lods sbb aaa aam out fs inc daa mov rcll push loop ds (bad) mov out pop cmc and test sbb shl (bad) xor pop add or xchg loopne hlt aad jae (bad) sbb fisub lahf data16 iret imul out jae imul (bad) mov cltd outsb sub ret (bad) xor test test pop add lahf call jne out jp pop inc loope push int3 sete sbb mov call outsl sarb dec gs pop xchg inc bnd xchg inc out in int mov (bad) out (bad) xor xchg xor imul (bad) repnz test jno scas and cs push jb inc out jo xchg movb iret xor push pop push jmp out icebp xor leave mov cwtl adc sub xchg rol pop loopne popf lret sbb out xchg outsl insb lock add fwait shl dec push cmp cwtl jecxz push je inc out xchg jl mov rcrb out out out inc push loope adc aas mov mov out xor lods add sahf inc dec or daa outsl iret cltd pop rcll or mov or mov lea dec out inc add and lcall dec (bad) pop xchg out cmc pushf add jmp adc inc sbb aas out cld inc mov stc out out rorl les sub (bad) and add pop sub popf jo push pop out sbb pop jno iret shlb mov mov ret test lcall mov xchg pop imul popf std out xchg mov mov addl shrb sbb stos out lods mov pop pop adcb mov mov test xchg sub mov and loop sbb addr16 mov xchg adc ljmp cmc sbb out adc mov ss (bad) xor inc sub bound out or add mov mov mov gs fidivrl movsl and lcall cmp out and cmp rcrl pop negl or inc xchg iret loope (bad) (bad) hlt dec and (bad) stos adc dec pop xchg aam pop sbb into push out pushf ret imulb (bad) ss jle mov aam cmpsl fucomi sub arpl rcll nop out icebp aaa loope in jb inc jp jg fnstenv pop sbb dec push jle ljmp cmpsl out xchg sarb inc and xor mov pop repz lods shrl pop fcomi dec sbb dec es inc test aas out dec cltd jns sub test out popa sbb mov fidivrl xchg out (bad) sub (bad) lret mov aas sub push dec ja fdivrs inc add loop and xchg in (bad) mov push es pop mov xchg inc adc cmpsb jecxz daa shrb out pusha mov xchg cmp cmp mov out out pop xchg jmp mov add mov js lcall add xchg cli adc sub mov and jnp shlb (bad) sbb fcmovbe out add fsts xchg lea sub (bad) xchg and pusha or outsb pop sbb push iret cmp lock pop mov out ds fiaddl pop stos jl push call out add outsb in cmp mov jg jmp out or mov insb out mov mov mov xchg stos pop adc inc aas pop or stos mov arpl enter gs out mov aad push out mov (bad) cli inc movsl sub ss rcr repz jo jno cmp out pop jecxz out bound jbe xorl lock out push and lret adc out popf mov rclb clc jg pop push jns lea aaa (bad) ljmp out loop data16 arpl fs aad pop xor movsb push and loope and mov inc jae push xor fstpl stc adc out (bad) xor aas int3 idivb outsb cs jl inc data16 (bad) out ret push jb out inc aam in incl mov push das inc sbb pushf out out cmp push das push sub mov int3 out dec data16 mov iret (bad) out xor test or out sbb (bad) rcll mov das lods (bad) pop cwtl mov cmp fcomip dec (bad) mov push fs ljmp in out mov subl pop (bad) jno iret lcall jo fcoml jge out out fidivr inc (bad) stc jl imul mov icebp push out call sub xchg shlb lods into out test mov mov or hlt pop and mov mov jp push fsubrs xlat mov xor fstpl call lock dec (bad) push out pop ret pop push xor pushf loope cltd cmp out inc out jbe pop fndisi(8087 arpl dec rclb inc out push and ja fisubrl insb ret arpl out jae imul pop pop mov jecxz dec adc out add mov loopne or cltd mov ss (bad) jae in std pop jge (bad) out outsb lods mov or dec mov fmuls adc int sar stos out mov fwait std dec inc mov (bad) js pop sub push xor cmpb inc sbb jecxz inc (bad) push xor pusha stc in int3 fsts fistp pushf std mov cmp ficompl jbe adc fwait mov mov cmpsl jo out in jae fldl adc (bad) mov out andl cmpsb jo (bad) lcall cmp mov out inc push inc jae sarl hlt or mov cmp cmp jmp pop scas pop dec lock xchg inc fnsave mov xchg mov rcrb dec mov pop pop mov in cmp push xchg and scas stos fdivl cmpsb or pusha arpl ret in mov (bad) out xchg lods mov sbb out jecxz aas jge mov ljmp out (bad) jns add out inc add out mov push add adc mov out mov pop in inc pop cwtl xor xchg jmp lret test outsb adc out add push inc cmpl outsl popa out jge cmpl movsl jbe inc in jb (bad) (bad) fisttp add stc fldl mov repnz and ret xchg out cmc insb (bad) xchg ljmp and arpl xchg push xchg jbe jmp mov and out inc mov lds sbb dec jg pop (bad) cmp dec jmp test lock idivb fwait inc frstpm(287 sub pop cmpsl dec rcll pop iret push dec mov scas (bad) popa out mov dec cmc add and leave xchg xchg sub (bad) cld fild xor lods lcall hlt (bad) mov dec mov in (bad) jb inc xor pop in adc mov mov adc sbb dec outsl loop movl mov gs dec sti icebp int arpl jl enter mov jge out cmp mov stos lahf xchg mov stc out lret ljmp rolb ljmp fwait xchg xchg lods lea movsb pop xor fidiv pop in std push mov sub pop (bad) and (bad) shrb outsl xor jo scas out inc jg mov sbb push aas pop pop in ds lret jle adc fisttpl cmpsb mov mov andl pushw out pusha adc fnop addr16 out imul and andl out insb hlt xchg test (bad) pop mov sahf sub dec bound pusha ljmp out leave mov dec popa out xor sub dec out rep (bad) xorl out clc ret pop les scas test lods sbb out jns lock loop (bad) out fs popa lods pop test adc jmp rclb mov push fwait (bad) mov adc mov push jmp (bad) std in shrb adc in or fbld repz test push lods stos out out mov ficompl xchg mov std push jmp dec loopne lahf jle insb stos jecxz mov aaa mov mov out data16 cmp sbb sub xchg push pop mov in dec mov out test and fwait out movsl std scas sub pop insl cmp out ljmp leave insl popf iret or adc idiv es ret lcall dec daa aam inc sub fptan fidivrl xchg cltd mov xchg insb out (bad) leave shr inc daa out adc in and in scas repz imul clc sub aam lahf and out mov sub movsb sub push addr16 fbstp sub in sub or insb mov add pop ret xchg jo push (bad) pop cmp aas cli movsb into jno xchg das addr16 test pop ret sbb std out addr16 std adc lods imulb (bad) adc cltd xchg jmp inc stos adc mov jmp int fsts out sbb xchg imul push das hlt adc adc lahf pop insb in jnp ficom push out pop sbb cs out sub jbe cmp sbbl loopne (bad) aam icebp push push out and push mov dec in mov lahf (bad) sbb fstpt out in stos or xor push sub push cltd insl in cmpsb sub out jmp cmpsl es push dec push out leave mov dec jl inc sbb lcall xor out xchg push outsb jo arpl (bad) pop jbe mov movsb iret mov xchg ret ret push add shl (bad) lock ficoml xchg jbe sub add mov das les sbb cmp iret test out mov outsl call out and xor out negl push or out jmp cmp add out out push mov and xlat fnstcw pop inc test inc shl dec pop jl out insl pop mov or aas pop out pop call into cltd push sbb fldt scas xchg out mov lods xchg bound out dec dec fincstp lods (bad) pop jne es leave popa and mov mov (bad) iret (bad) mov add out pop enter jge or add inc out out (bad) int (bad) bound insl mov sub mov popa push repz pusha jnp out daa and lds mov test rcll pop sbb and gs pop sub pop fadd ret fcoms jmp push outsl xabort int out sbb enter lods out out sub or mov sbb notl xchg xor adc test out mov sbb mov mov jo lahf inc loop jge adc push adc stc xchg scas sub inc leave xchg fmuls shrl push in or (bad) sbb cmp in mov imul jl xor out push inc inc or jg cmpsl out out sbb cltd add sbb dec cmp mov imul lret sbb dec dec xor out pushf lock test (bad) loop mov les sahf out fadds sub cmp insb inc (bad) cmc cmp push xor ret mov jb es cwtl shrb xor inc je mov popa insb out nop mov lret out and test adc xlat add adc or jp out inc push mov pop iret pop mov xchg inc pop out and sbb pop xchg mov and ja out fcmovbe les out jne fistp fcomip repz int3 ds clc ret and in jp mov xor stos xchg mov sub mov insl out jge idiv mov std inc (bad) lret jle shr dec loop (bad) cmpsl cmp lea xchg insb mov test loop sub aas daa into sub sbb pushf bound in nop outsb mov out (bad) iret les popf ror add xchg mov (bad) out cld lods in aas cmp inc out cltd ficompl addb out scas jo (bad) fsub outsb shr aaa pop sarb sbb or (bad) lock xor sub and pushf ror pop cmp sub mov pop imul cltd (bad) out mov sub out xchg ret lods (bad) pusha lret sub scas mov pmaxsw orb ss insb push into and aam rcll out je pop mulb jp out sarl imul popa jl pop mov sub cmp (bad) lcall push inc fcmovne mov loope pop sbb push xchg loopne xchg out aaa repz mov (bad) sahf ret test xchg xor sbbl xor mov pop fwait mov cmp lahf daa int insl out mov iret inc xchg sti shr dec cmp or push push push cmp adc es test and jecxz lcall push aas mov cmpsb ficomp pop rcll (bad) imul pop inc pop call xor and jp cmpsl frstor out pop push xchg pop sti sub (bad) in jge arpl scas jne push shr pop (bad) jle jno mov loope or aas adc pop dec cmp movb and sbb aas mov out cltd out cmpsl loop out lret mov iret sbb sbb sti mov jmp jne sub shlb out in pop (bad) xor loopne js mov add dec mov not xchg mov push jge popf fisttp cli mov sub mov out ja mov mov daa test test movsl lds mov xchg push out out fwait pop out jae ljmp cmp inc mov xor adc das mov jg cmc lds jb shl fstpt pushf jno out push cmp xor nop je pop inc or in mov cs inc push mov das jbe cltd out (bad) lcall xchg test or pop sub scas out mov (bad) sbb out cmp jl pop xor bound out fstpt jecxz pop jns (bad) je out fidivrl repz fcompl mov lock xor movsb pop sbb cli das xor sub shrb test ljmp es movsb in xchg std jp sahf adc push divb outsl out incl imul push scas out out pusha mov add inc mov adc sub fwait pop out call cmp adc adc addr16 cmp outsl into add iret das cwtl rolb mov ljmp stc (bad) mov cmp cmpsb xor into push add out mov imul xchg shr (bad) and pop aam das lahf cmp mov out je mov cmp in pop xchg out nop lcall (bad) inc jge inc lahf cld pop mov mov xchg pop add pop push jg outsb inc pushf pop pop adc jecxz sub xlat std inc push sub mov popa cwtl and pop xchg jnp push out addr16 mov pop or jmp sbb hlt out pop push mov fs mov jge lea out loopne test insb inc xor pop dec inc shr or out pusha sub mov pop xor out outsb call mov lds out addr16 xchg push pusha fs add xor xchg popa sub and xchg aas out enter das mov add push pop jb ss mov sbb (bad) pop pop shrb addr16 dec cmp inc es pop ljmp jne xchg xchg mov out clc jo fbld ja out sti stos and cmovp out sub lcall sub dec push repnz push jl xlat inc push sbb and ds fucomip shl jbe lea out in test out dec in jg ds (bad) out lock xchg cwtl inc pop loop mov arpl sbb in xchg es jns jp ret out mov add pushf (bad) mov in xor lret mov adc enter jo ljmp test xchg lret (bad) das xor mov push sub fsubr jo mov sub aad out sarb loopne xor idiv inc lods aam mov out dec (bad) hlt jo or sub loop (bad) cmp arpl and out xor daa shrb test out jmp adc mov mov (bad) sub data16 xchg test out jp inc inc cmc jo pop data16 fcomps icebp out sub (bad) add mov jb jp pop repnz xchg (bad) (bad) jle pop cld inc in mov lahf shl adc (bad) out leave dec cs iret push adc scas je xor out or adc cld lods out dec pusha inc xor and orb mov pop mov out mov xchg out cmp jecxz mov and shl add (bad) lds mov adc push stc cmp inc cmpsb mov fisttpl out outsl sarb xchg movsb xor adc sbb mov dec mov dec enter (bad) lcall inc adc mov rcrl fwait ret xchg pop mov and loopne mov push adc sub fs pop mov push mov cmp sbb sbb cmpsb icebp fisubr jg pop or div call push adc xchg add xor sub and inc jo outsl fwait lret test addr16 gs adc pop insb xor notl ljmp cs jo mov cld rol imul ds cltd ret or out mov push jno xor jbe out shll mov or and out and daa pop pop insb or mov inc ficoml inc out mov mov out out or push xchg enter lcall add mov out (bad) notl add push gs testb out jns xchg outsl out adc call lcall xor xor test adc (bad) out mov mov lods test sar jmp adc out fnsave push push pop dec mov test in pusha pop scas out cmp repnz fdivrl mov insl cwtl pusha bnd pop in xlat add (bad) fist cmpsb push arpl or out mov aam lock mov cmp jmp xchg or aad out inc mov dec inc loop out lock rcrl mov or out and fistpll dec cmc fwait out xchg cmp les pop cld pop out push fcos loope in out sarl iret mov xor imul aam xchg (bad) (bad) fadd xchg jmp out xor out (bad) dec ret jmp sbb mov sub cvtpd2dq push out hlt imul mov or out cmp mov arpl dec sub inc (bad) out or cltd out push in out rcrb mov push mov jl cmp cmpsb insl mov xor mov aas ss (bad) fisubr lods lock out popa out sub jg pop data16 adc ljmp lahf loop mov pop push ret xor lahf sub out aas fs arpl cli jmp out (bad) sbb outsw jecxz xchg mov cli pop fcomip inc enter cltd out jo popa js out lods xor fnstsw xchg mov fldcw clc xor cmpl (bad) rolb roll push scas sub sub bound inc loopne out loope mov pop (bad) in test lret out dec cld rolb fist rcrl jne and or aaa subl out cs lahf ds cmp int3 in (bad) out dec mov rolb insl hlt icebp aas (bad) out clc push shr fimul loop pop cmp scas out push sbb ret out iret and arpl fsubr cli or gs cmp aaa pop repz dec add mov out stos addr16 and xchg (bad) push push out repz xor sbb les push out pop add es test je lea imul cmpsl xchg mov (bad) sub outsb dec test mov xchg sub stc mov je push (bad) stos (bad) fsubrp in loope inc mov outsb out les enter fsubr (bad) mov loop out (bad) (bad) movsl cmp and push mov test mov test jmp in (bad) out bnd outsb mov mov lret flds push and cwtl ss pop pop aaa loopne and ljmp fist dec rcrb test movsb fcoml adc out adc fcoms scas mov mov movsb sbbl mov iret jae inc add and pop push xchg sbb repz inc enter out out pusha divl jo lods iret xchg jp and (bad) rolb icebp out sub cltd js popa out sbb and mov aam in mov mov in and shr add sub stc sbb push jmp sub shrb and cli pop xchg idiv sbb fsubs jb jns cmc pop sarb push mov jle sbb mov inc lret lods rcr mov or out lock pusha push in ss sbb sub jg pop loop out lods mov stc mov sbb pop cwtl mov movb or orl sub (bad) sub lahf xlat test cltd sbb divl scas mov (bad) xchg jecxz or add dec aad inc jl mov out pop scas sbbb pop fnstcw out aaa call (bad) sarl push int ret out add pushf js mov push repz xlat iret mov (bad) pop lcall adc out jl and clc repz out sbb out int mov pop push cmc xor jbe fdivrs lahf aad in push aas (bad) dec (bad) sub add cmc (bad) lods push cmp fcomps dec mov enter xchg cmp cmp sbb out dec cmp mov mov das out daa not (bad) mov inc adc inc in out cld daa pop insl sub out js aaa xor mov lea sbb out push mov cs outsl aas or and movsl mov fsubr das mov xor or mov xchg jg,pn adc in shrl lods xlat cmpsl xor in outsl jne pop lods lret fwait pop call insb cwtl (bad) jo imul sbb movsl xor aam push and and cmp jno out gs sbb rclb (bad) out cmpl in bound xchg mov out or clc int out iret aaa xchg movsb icebp lcall push cmp sti xchg inc loop pop pop out mov mov aaa out fcoms xchg sbb pop xchg out scas jge jl adc ja out sahf fsubs xchg sbb insb out or inc mov out inc mov (bad) imul or mov int lahf cmpsl or add das mov dec loop push push out sbb out sbb add lods (bad) xchg roll sbb out shrl rclb leave xchg insb movsb pop pop or dec pushf sbb adc mov fimull dec in mov cmp (bad) push lock sub popaw or pop pop aaa inc inc dec fisttp xlat cmpsb sub decb push iret sbb out mov jnp mull pop popa out (bad) xchg add addr16 cmpsl out inc ljmp out incl aam pop lcall or adc lods sbb push out adc shll out xchg jl lods push dec xor pop sub jb arpl out shrd mov add stc xor push hlt outsl (bad) lcall jb les add adc sahf fs rorb repz enter cmp lahf xor xchg jle inc adc xor ret ret sbb cmp out enter add out push xor out sahf in push lods mov das adc jbe fist inc xchg push push mov adc out (bad) add iret or push cmp lahf xor out pop push lods in rclb insb out imul push sahf bound mov sub ljmp inc out and (bad) pop inc mov ljmp out nop pop pop dec and out xchg or int aas add push and dec sub js aaa in lods inc outsb rcrb fwait jmp out jg xor test cmp adc pushl addr16 pop arpl out clc cmp push fwait xorl pop mov mov pop (bad) pop jns stc fcomip mov dec enter xchg out pop dec xor out adc xchg adc imul loop and mov rolb lods or (bad) cmp lahf sub stos sub aaa call pushf xor and frstor dec rcl test lds out fs sbb out jnp addb or dec xchg add std out loopne ljmp or out xorb lods push out inc jns inc and jmp es mov jge out mov mov jns pop bound jle xor jge xorl jecxz jg aaa js dec cmpsl pop out imul in cmp xchg mov test push adc bound lahf add xchg cmp and mov shlb test sbb arpl push jo and and out ds in mov mov mov sub and xchg stos out (bad) ror out push mov ret out fadd das (bad) xchg adc or or sbb outsl rorb jmp in sbb roll xchg jae icebp hlt fcomp dec sub call out dec loop popa scas or xor enter rorb incb outsb pushf fcomi mov or jle out inc shll jl or push (bad) pop lods rclb out lret or popf push mov pushf (bad) bound in fistpll add in and insl out cmc mov shll pop out test jnp (bad) lcall and test int3 popa out (bad) fdivrs xor sbb aas cmp jmp nop je jmp in push dec out sbb mov in out mov jecxz jb jg pop push push ljmp push mov xor fwait ja out jmp inc testb cmp and out daa out add ja dec jbe out shll out fidiv jno ljmp mov in je dec out sahf lea daa add out out mov jbe xor inc shr pusha or mov imulb mov lahf out pop jmp dec scas out jns and mov mov lock sub cmp pop ftst jmp add jle mov inc int3 into pop out pop jg lds out iret add arpl mov cmp cld call (bad) out stos add inc sbb out notb cmpsb lahf fwait aas sub push out sub sarl sbb dec sub lret shr popa push rcr mov (bad) out into or xor out push test lods adc pop lcall fcom pop pusha and pop xchg addr16 test cmc jge sbb pop out ds add repnz out adc in mov andl iret jns aas pop xchg fbstp (bad) sbb jecxz dec int3 roll (bad) mov lcall sbb out adc int mov push xchg xchg mov add mov stos adc jge lahf cmp data16 repz dec jno fcmovbe mov (bad) fwait jns movsb pop popa and pop mov sub enter cmp sbb das and xchg push sahf out add mov jno dec mov fldenv xor xchg mov mov out inc std xor pushl andl loopne xchg or inc out fs lods popf or push and addr16 dec out ret ljmp lcall cmp jbe out call inc lcall push cmp jmp add (bad) (bad) ds out test rep iret (bad) out int sti inc push shll (bad) hlt test mov pushf sub cwtl aas pop cmp or out xchg popa jge loop iret das mov in pusha mov push push jge cwtl enter cmp out test sbb out out pop dec cs loopne ss out aad fldl mov lea pop dec outsb call sub out out (bad) sub scas xchg ret pop out mov mov sbb mov out jle pusha cld and push mov in adc mov ljmp mov add in movsb pmulhuw sbb lahf aaa imul call mov js repz dec cvtdq2ps cli out stos cmp loop jns xor repnz outsb and test pusha fldl sbb xchg call out sub xchg mov mov inc push out inc inc xlat loopne out and popl fimul mov pushf in out push mov js out pop dec jns mov dec fisubl adc sbb mov sub mov out icebp adc xchg xchg xchg push imul nop jb repnz jbe (bad) call cmp ja lods mov sub (bad) mov lahf xchg (bad) in fistpll push stos in inc xchg inc cmp out cli bound jge adc sub je ret fcmovnbe nop xor in out cld (bad) stc jbe fwait or xor pop jb sar call pop pop stos sub or outsl enter fwait lahf pop jl jae jo (bad) jge pop sbb jbe mov pop cli pop dec sub pmaxsw imul pop cwtl lret cli adc and in into loopne sub push mov pop mov sbb insl rorb out fistl or out xor orl outsb push pusha dec out and ljmp out loop scas xlat movsl cmp out stos cmp fidivl out (bad) pushf aaa js test pop pop add jo sub clts sub enter out cmp roll fnstsw aas movsb fldenv add popa sbb aam out sub inc mov pop daa xor dec ret rorb out inc sub into int3 jp jo bound xchg xor ljmp mov jnp stc imul lods pop mov out sar sub outsl fstpl out (bad) popf clc add dec jae and (bad) out jge inc icebp pop cs xor popa cld ffree stos loope nop out insb mov and push push aas call lret lods aam shr jecxz jbe push ss jb out (bad) push clc es test pushf out sub adc adcb (bad) movsb pop adc lret movsb test testb jb scas out jo in shlb or rcrl insb out add cmpsb mov mov popf fsubr out stc ficomp pop push mov pop aad jbe jmp std out fsub mov hlt lcall repnz pushaw loope orb scas pop dec fldcw outsl xchg insl lret (bad) es movups in gs loopne inc stos int out jnp pop aad bound sbb rclb movsb dec cmp mov out mov push jno dec in add jo jmp addl or pcmpeqd adc loop pop out loopne fsincos fldt loop mov hlt push pop les push in and je sub mov inc xor sbb insb jl aad fistpll or fmull and fist imul mov mov loopne push adc jmp add (bad) sub lret jo mov mov iret dec insb fstl cmpsb iret out add rolb mov fistl xor out mov and mov lahf cmp aaa adc push dec mov xor (bad) sub ss inc sbb imul or push lods imul out sarl and ret gs popf movsb xchg repz or clc pop cmpsb test mov sahf push out xor adc dec push xchg mov insb push adc fmull out sti inc adc jge aas repnz outsb inc and pop out (bad) addr16 scas push out icebp daa jne notb nop out pop adc int3 inc xor insb out jbe loop mov data16 mov mov cmp out sbb mov add push mov shr insl imul add add (bad) cwtl out loop push push out or call int icebp sub out pop and mul cmp out (bad) js push or cli mov rolb sahf pop push xor test out dec or fucom xor sub fsubs cmp test out rcrb jne mov pop std test push mov out or jmp sub es aas out lods cltd das inc out push xchg in push arpl out pop xor das iret cs xchg out inc add mov xor lahf out fimull sahf movsb jnp (bad) jne pop sti cmp insl popa imul pop stc mov fsubrs (bad) jle rclb fnsave push icebp jp cmp dec pop mov pop adc push movsb and sub out nop jecxz enter add push out mov pop cs arpl fmull out or lcall or hlt mov sbb fld cmp mov out (bad) repnz call (bad) jb aam or int3 jne out cs or loope pop and gs les outsb stos out mov and cmp insb loop mov cld push les add aaa ljmp inc hlt push out sub out into push inc arpl ss out js loop daa rorl lret (bad) fiaddl pop push jo test sahf add loopne test cmp jp pop data16 xorl xchg loope mov cltd mov or pmaxsw jo out cld sti rclb sbb push stc pop jmp insb out sub pop dec sbb push fisub xchg sarl das ljmp imul pop fs (bad) push ljmp sub xlat push push out mov xor sahf popa pop sti popa jecxz cld pop lock jmp sub out mov sbb pop sub les mov das push xchg pop popf in add lock sbb in out fwait add out out (bad) (bad) es leave dec pop xchg push add repz outsl pusha stos out (bad) ja xor pop adc push xor in add push imul lea in fbstp mov pop ret dec or adc push mov out (bad) sbb in repz cmp shrb imul push outsl pop sub or jo cmpsb insb xchg popl jmp add cs out arpl in mov adc push test out and cmc lcall ret or out ds xor cmpsl push (bad) call xchg jns cmpsb lods pushf insb out sub imul js xchg hlt pusha lea inc adc test mov mov mov mov and jns ret mov movsb out lea jg xor jns dec xchg dec inc cmp or loop out out jns das test roll out push jge mov out (bad) or loop out scas jnp push push insl adc dec rol push cmc sub out lock rolb dec out and and into add movsb stc out lea ret mov loope push test adc outsb hlt out aad pop mov out push dec mov aas out data16 cmpsb push das xchg mov popf ds into mov push out inc lods push imul sarb rcl sub test sbb in imul push loopne pop (bad) push addr16 xlat xor js pop (bad) xchg int3 xor (bad) mov xchg sahf fsubrp stc ds jle mov imul mov pop sub add dec out add mov adcl cmpsb adc neg (bad) in xor cmp lock pop xchg mov push repnz or adc ds fistpll mov mov xchg (bad) loope xchg mov push out add mov mov jo fidivl out xchg sub aad jg mov sti dec ret xlat and nop test jo push sahf dec mov push push xor fs inc adc push xchg out fwait loope scas jns adc daa mov incl mov out (bad) adc outsl mov enter dec dec test fisttp cmp and stc dec sarb out push ja in cmp stos mov or pop arpl lret (bad) jne loopne push sbb or (bad) bound out lret shll inc dec fisubr add out mov cmp dec aas sbb push or loop jmp aaa mov daa out mov mov adc dec lret and popa int3 sub inc lahf out mov push jns in out stos fldenv add repz aad and adc mov pop loope push cwtl push sub xor or out in push cmpb dec pop cmp stos (bad) decb out and repz mov outsb adc push xor out insb in into adc push mov pop dec mov sbb fwait out jl arpl mov loop dec (bad) cltd xchg outsl ret jl mov mov test mov bound push gs (bad) xchg and push (bad) out pop lret jmp fucomi (bad) icebp sbb adc jle pop clc ss adc int inc dec mov out dec push mov jle push (bad) pusha inc and arpl cmp add es pop mov mov push test xor xchg in out adc jg push enter mov ljmp sar (bad) out rcll out mov jge ljmp (bad) stc test scas int3 fdivrl imul out dec xor pop rorb pop pop mov insl adc dec mov lods jl aam push dec push scas (bad) out mov ds in dec fcomps pop dec or mov adc mov test xchg in clc cmp inc in xor out xchg out cmpsl loopne fs out mov pop imul cld lods adc mov mov dec stos sub pop push xchg sti and repz stc outsl cs cld ret mov sti in sbb test mov xchg add and jge xor or sub jg lock pop call rcrb jnp mov or inc mov push out (bad) pop repnz cltd out sub push cmp lods xchg shr jne dec inc fildll inc out mov adc jge push out adc call add stos out mov mov adc into imul xor jecxz adc push out jnp loopne sbb ret xchg inc sbb stc out pop mov lock sbb and sub sbbl mov repnz adc sub push fistl push sub pop out mov sub and nop movsb mov leave dec jg pop iret fsubp (bad) mov sub cmpsb out sbb nop out jp xor fwait out jno xor das cwtl jb xchg imul out sbb and out daa mov in out mov push rclb orl test and bound jns stc mov (bad) out fdivl pusha mov in xchg jecxz stos adc outsb es add mov out data16 and xor in fisubl scas movsb out mov repz push loope sbb (bad) and out jmp xchg out or sbb (bad) lahf or pop sbb imulb jg imul stos adc out mov push push pop mov sub ljmp test inc xlat add pop dec and sbbl ds in out pop jno xor jge fisttp mov ss dec out js lds cli rcrb rorl and stos or add pop je push arpl sbb dec scas (bad) xor dec fcoms jl fstps std inc cmp pushf pop out (bad) int aam call inc mov dec loop ret out mov iret add xchg cltd loop out fsubl out fstpt push dec clc mov cs sti lock lea cld ljmp (bad) mov loope cmp xchg (bad) push sahf (bad) xchg add mov ds testb mov call cld or cmpsb shr fldt call subb add lcall out stos movsl lods mov ror out insl out or (bad) or sbb das cwtl cmp lret (bad) iret cmpsb subb inc call fwait iret (bad) mov (bad) add out push push outsb out rorb mov jecxz in stc ds or outsl out js addr16 das mov dec shld inc ret out rcll and fs cs cmpsb xor aaa insl jge into mov out ljmp sbb stos aas leave push pop xor mov loop cmp xor negb jle inc mov cmp inc xor inc out xor jne scas pop and out sub icebp xchg iret lret xchg lahf pop mov add (bad) das icebp loop aam xor jae jno cmp mov ds jbe out pop cwtl ret or popa push xchg out lods sahf add aad and hlt inc mov shlb in dec inc pop aaa mov pushf insb mov pop aam out sub push out std adc fiadd ja add ljmp insb sbbl loop jg xor sub pop jmp mov in cmova pop mov in bound ds popf pop sar pop sub fcoml out leave test cmp in push push and mov ljmp cmp xchg mov push lea out out das loop aam sub mov sbb and shr icebp ret ss push js test lea loopne sbb sub pop inc popf sbb mov (bad) out push push cltd stc das inc cwtl inc xchg (bad) aaa mov out rcll pop call call lahf mov mov out stos push inc ss dec push xchg sub out ljmp (bad) sub push mov addr16 pop imul mov mov fwait pop sahf and movsl xor lods xchg sbb pop leave (bad) mov ja jae arpl and insl pop bt mov or xor push mov out sbb fmul cmp out and pop fsubr mov pop pop icebp subps out or daa pop push mov das (bad) pushf sub les rcr in inc movsl xchg mov dec movl test inc cmp adc jecxz jge out stos add iret aam lods nop sub call shrl out out add daa imulb dec outsl push or pushf and mov and sarl jmp adc aad and mov mov dec out jns shl inc outsl inc or jecxz xor insl pop adc rcl xor dec xor adc (bad) xor cltd jno lods jae out mov les out addr16 inc add cmpl cmp sbb out xor lods out pop dec pushl lock repz leave cmp test (bad) xchg xchg adc sahf dec dec jmp pmaxsw inc add in out (bad) cmp out inc sbb adc out ds push jb (bad) mov outsl (bad) or rolb es shll out jb mov in mov cmpsl fldl mov xchg addr16 fs jecxz push movl lea popa mov and push cmp lcall mov out jle or mov lds and jnp test sbb iret aas notl mov dec idiv out test out out sub sbb pop stc cmp push out es jo sbb std out imul sub fwait in mov out fidivl call icebp out (bad) mov in inc or mov mov pop pop ljmp jns xchg sti xor out in push sub test xor out sbbb or mov dec fs (bad) ret call inc out sbb daa sub in out cmp mov pop xor out orl int xchg inc out repnz int3 cs add lahf pop mov fwait push mov push jge jbe jg mov xchg stc add (bad) rolb or sub sub fs rcrl jno xchg xchg cmp repz stc inc pop xor roll popf out jbe sete loopne out lret or out test (bad) mov adc out xchg pop imul fs repz mov adc xchg ret push push and out sub push imul cmp cmp fcompl cltd je (bad) loop imul mov out dec or icebp stos jge push movsb cltd out out mulb fs popa mov jl jg test dec (bad) fwait out pushf lcall xlat faddp sub pop xchg imull loopne xor dec out push cs out push (bad) xor sub pop cmc enter (bad) mov fnop movsl iret ljmp pop jo mov out and in loope out mov mov or data16 pop cs (bad) pusha mov push mov pop xchg addr16 in call pop dec mov xchg bound push or mov je into dec out pop fnstenv sub adc sti out push outsb sbb out xchg in pop arpl popa inc lret pusha call jb iret pop loop jecxz fwait sub ljmp cs das loopne out pop add fisub movsb fcmovb (bad) negb scas adc stos pushf xor stos cmpsl push cmp faddl insl pop add data16 mov or out cmpsb cmc cvtpi2ps mov test jns fs insb mov (bad) stc in (bad) daa into out outsl pop ja xor sbb out dec mov (bad) sub (bad) jno pop (bad) jl push loope pop out lcall std out adc lret cwtl rorb add imul mov test and mov pop or adc test or shr (bad) fmuls pop dec push sbb cli pop jo inc jmp out inc stos stc push pop out je enter loop out add adc test jno xor loope push (bad) outsb out pop aam rolb hlt jnp sbb cmp stc sbb pusha adc and fnstcw mov lret sub sub push pop arpl mov sbb mov sbb xchg adc (bad) add xchg cs loop call jge sbb sub jo fwait mov mov dec imul sbb fs (bad) jns pop and mov mov add scas pop mov je nop and push sub xchg popf cltd pop add aaa mov cs incb mov xor sub pop in loopne in lods movsb mov enter shlb in push out inc mov and mov imul rorb cmp adc stc dec ds xlat sti shr (bad) out fcoms pop mov push mov mov negb insb out hlt int cmp sub push cmc and dec xchg hlt mov lods test and xchg mov jecxz cmp jb cmpsb sbb jge iret testl or add mov adc scas ss out adc mov ljmp fwait imul xor xchg inc pop jl enter daa jne outsb fbld test es dec dec fnop mov adcl out call sahf push push (bad) pop ss jns (bad) popf inc lcall imul push mov xor das or inc ss out lock xor mov push cli scas dec jb scas sarb cmp lahf out xor push add out stc movsl mov mov mov out add imul aas cmp loop dec push aad out lea jp call fwait jb pop dec mov xchg aaa pop jo pushf jmp mov loopne in sbb jg and out test stos (bad) lods out int3 xchg addl pop adc inc das test imul pop or sbb (bad) add clc cmpsb (bad) es in ljmp cli (bad) pusha out out sub pop jg imul lock inc aas in insl cmpl push in imul adc mov out cltd push out push cmp xchg pop xor out (bad) fnsave push jo push xor mov out adcl (bad) mov mov outsb clc pop add jmp mov pushf inc outsb jle out push pop and xor clc (bad) xchg sub or out fs out (bad) xor out xchg cltd cs xchg jl dec mov push aad insl sub aas inc js dec pop sbb xor incb xor fldenv mov outsb add fimul loopne out cmp popf sub xchg ljmp outsl repz lods rclb js xor mov test lock cmpsb dec xchg sbb add xchg and shr sbb es stc push fcmovnb repz xchg jno jb cmc out sbb jp jo int sub sbb inc jg jbe pop push out xor test jmp mov mov push dec popf roll cmp push adc loopne cmp movsl (bad) out loop dec xchg out repz jnp sti pop jg (bad) je popa movsb mov pop test inc ds out dec fstpt call in cmp and mov dec xchg mov call arpl lcall adc (bad) out xorl movsl out or adc into mov rclb cld push movsb rorb jl jg loopne cmpsl out das sbb cmp sbb out popf test (bad) (bad) cmp jmp cmpsb mov pop popf out dec mov push (bad) out insl mov mov cli xchg push adc add movsb cmp mov sahf in dec out (bad) repnz pop adc jp sbbl out fsubr jno not dec lahf fistpll inc cmp insl and sub pop xchg das into out pop testb jle mov stos loopne ljmp push pop out imul in adc leave out pop ja mull inc and test xchg sub jo add and adc pop ficom popa inc cs hlt mov aaa sti sbb mov fwait dec nop mov push inc out xor in xchg adc or lds addr16 sarl (bad) xlat enter xchg loopne xchg sub push (bad) loope xor mov out fsubrs dec push out jae and jne add push outsl stos pmaxsw movsl cltd fsubr adc jne das cwtl xchg out fwait std mulps adc jb (bad) lahf inc or stos imul pushf addr16 movsl fildll push sbb pop fnsave sbb fxch xor rolb mov out jmp lcall lods add xlat mov in (bad) repnz push pop jns cmc into in cmp lods mov in std loopne pop push out pop push (bad) divl adc jnp mov out or arpl in xor jecxz out gs xchg pop adc test push (bad) cmc adc out jmp sub push stos mov fcomp out loop push cmp mov mov popa (bad) out or xor out adc test jecxz (bad) pop ja sbb push pop test sub out aad arpl xchg js sbb dec and popf mull sahf sub pop xchg cmp jae (bad) jb mov mov jmp (bad) imul and out jecxz cld lea je sbb jmp imul clc dec (bad) ljmp outsl sub inc sub inc adc (bad) out neg lock fs jbe test jb loope mov shr shrb out jg adc sti rcll data16 and fwait mov loopne shlb loop notb mov (bad) int3 push jle push push out rorb jg idiv sbb or or sbb (bad) jg mov (bad) lock sti jns cwtl fbstp xchg jmp in adc test xor pop out inc jecxz and mov (bad) in sarb mov dec inc inc and xor xchg outsb lods sbb jae sahf xchg lock out and aam out pop out imul scas push mov jbe out popf lcall out sbb leave mov pop sub pusha out dec jmp push xor in (bad) fs das xor sahf dec imulb inc jb mov out and imul loopne push out xor cmc idiv inc (bad) cmp int sahf push inc pop es out (bad) dec (bad) mov lods (bad) jne inc or push mov out call cmp out cld sub sub gs aas popf out scas mov inc xor mov push jbe test and xor fnstsw lret mov jge ret cmp sti out hlt push push pop pop xor lods out add jno lock repnz sahf out insl mov dec push out mov xor out fadds repz sbb out inc test movb push fs jle (bad) cmp or out in mov test fdivl sbb insb push mov lds out movsl cld int3 inc test in cmc mov rclb dec out fstpt and mov sbb mov cmp mov loopne cltd xor jle dec (bad) cmp std js sarb xor out push fucom mov xor out cli es and icebp push and into or jo in shr adc sbb adc out sahf outsl sti cmp lods out addr16 pop xchg cmp add rcll and jmp sti out loopne add pop inc sub negb out jae (bad) pop add xchg pop insl and lahf jg cli ret insl sets (bad) xchg xchg sub dec jbe out cmp les repz fist sbb fstpl out pop mov cmpsl add dec sub jl in ss (bad) out bound sbb nop xchg lods out cs loopne sbb xchg or jl fwait mov pop sahf adc cld (bad) pop and pop add es out jge inc xchg jne push lds pop xchg inc andb ficoml xchg add call mov pop or out sub fisub out lods pop in (bad) (bad) adc mov inc add inc push int3 inc push cmp sbb jae pop das movsb cmp mov out xchg mov cmc mov xchg idivl jns push fisttp inc jae cmpsb mov sub adc pop ljmp mov push ffreep (bad) mov sti arpl aam cld push sbb mov repz int3 lods jnp adc add in or lahf sub insl or out push or jno adc xchg lock out out rol pop decl push popl jno add pop inc mul push in xchg imul adc into ss and fldenv and ljmp hlt mov lea ja (bad) push mov outsb sub (bad) xor inc adc aas and push repnz cmp jp add sti pop into out popa xlat fnop mov xchg sub xor ja out mov sub (bad) addr16 das mov pop mov mov adc movaps nop call lods out push sbb hlt adc (bad) fwait loop mov mov int jg lahf in ljmp dec out xchg or es sahf adc pop dec push adc insb pop push push and sub sbb sbb out fs jno mov pop pop cld push dec add enter push out jmp pop scas ja frstor popf and lcall shr mov adc cmp out in sbb das xchg xor enter xchg out cmp stos sub aam in jmp xchg in dec pop push iret xor ficoml sbb fcmovnbe push sub je cs pop aam fidivr cmp cmp repz aam (bad) jle pop push mov push das push and pop xchg int3 out fmull shll scas add out mov add test xchg out nop ret aas push out xor and daa adc push sti adc add out jae mov xchg add push sahf jb and shl outsl les and pop rol cwtl sbb pusha shr sbb in (bad) cmp mov pop or mov es decb jle fidivr push aaa and sti pusha std cmp pop push out out aam or (bad) jnp (bad) xor push scas pop into or jl,pn bound adc (bad) shrb in jbe mov mov (bad) out cltd and inc jg and inc rep sub leave adc cli push and dec stc ja mov cmp data16 stos jmp outsl lea pop push cmc jecxz dec add inc or not leave test push pop mov scas add cmpsl and inc xchg or mov outsb dec iret push lahf and mov loop mov pop out int pop cmp mov jecxz mov xchg les push out adc and rorb repz inc icebp popl pop sar inc lock jnp not xor sarl adcl imul xlat mov in lods xchg (bad) mov fisubl jmp testl out sbb stos jae cld insl push cmovae xor jno mov ja in adc push (bad) xchg in lahf mov and das ss mov (bad) scas out std cli add mov call xchg xchg jo (bad) enter inc fidiv jl pop out lock test repz xchg scas jecxz fmull lods nop out ret (bad) push xchg dec test imul stos icebp pop mov out xor in test dec adc mov or lret jmp loopne mov mov addr16 popa jb loop mov xor cmpb gs dec repz inc cmp movsl in push (bad) not imul inc push test fistl jmp pusha mov adc into lea (bad) sub adc adc inc (bad) mov out add mov or iret mov mov test pop jo clc test mov sti in jle lahf dec out xlat xchg mov pop out faddp sarl xor sub addr16 pusha and dec cli fildll pushf pop scas xchg out sbb mov insl out sbb dec push pop mov pop inc push lahf insl int3 and xchg lea push lods daa movsl out xchg sbb lock outsb and pop jae push stos add cltd dec or in sub or xor les lods in (bad) popa sti xchg push jle sub out xchg adc out pop std sbb cmpsb sub outsl arpl (bad) mov fisttp pop xlat mov fstl loop int3 sahf lock xor call adc xchg int3 jmp sbb xor out in (bad) mov stc mov loop aas pop jg insl push mov out jp sbb pop push and sti push xor ljmp add jp out mov xor xchg jbe or fucom fxch int or xchg stos loope hlt adc inc es out mov adc jmp subl mov pop js jle out add insl (bad) movsl push sub mov or out fdivl cmp or xlat pop cmc in push add mov sub addr16 mov dec out or shrb push (bad) pop jne int sbb jge nop cmpsb mov popa lds xor pop xchg daa lahf adcb mov push cli out dec and (bad) sbb or leave out sub inc and cmpsb out xor mov aaa jecxz dec out mov inc jno int rcrb mov mov push pop sarb and ljmp inc inc mov mov (bad) push loop rol test testb add inc pop into push mov fist mov gs in inc out mov insb jg mov iret stc adc mov add xchg mov (bad) adc pop lods sbb (bad) (bad) jge sbb int scas or push adc xchg mov (bad) leave daa dec (bad) out jge sbb test loope (bad) fsubrs jae pop jmp push ljmp in xor add mov adc aas sbb call mov jle ja dec shrb xchg out or out insl insb outsl (bad) jle out adc repnz xchg mov lcall ljmp aam mov idiv out lea sub aaa xor push sub push jp xor jge out test js (bad) out out and sub xchg cmc adc sub test lcall out jno dec cmp int3 jmp popa js xor out aas das pushf fisttpl scas lret loop push and lock cmpsl js mov add lahf pop jb push push adc mov iret mov mov pop cmp popf mov sahf mov je arpl out shrb aas out test jp lahf std push pop or out fld leave pop jg mov mov mov sub int jno das shlb ja jne sbb sbb or dec ss out pop sub jo push (bad) iret jecxz fmull pop scas aam repz pusha sahf jne xlat mov out int push mov out repz sub sahf lret lds push mov popf xchg push xor jle sub jmp gs add int3 or int push cmp test cmp mov inc out lcall out lret (bad) hlt pushf lret xor clc out stc cli mov push out aad test jp mov inc jmp jns aaa insl push xchg adc dec aam hlt into pop lods push shr lret bound imul xor sub out in out mov out lahf movsl push cld push dec dec jb sbb lret inc aam push mov iret fisttpl pop and in stc xchg (bad) jecxz (bad) scas add push xchg insb imul out stos iret mov int pop repz cli (bad) jmp adc sub inc fldt xchg out pop add add push ret out mov inc xor push sub in xor iret jp sahf inc test lea loope int inc jo mov push jbe mov test fucomip push rcr out fistl xor iret cmpsb and and jmp stos enter clc jno push icebp lods xlat mov cltd (bad) push sbb push int3 popf out lcall or jmp (bad) jnp xchg sbb add sahf outsl lock push sti adc mov or cmpl scas pop insb mov into push mov mov push mov jae dec push inc dec scas sbb jl add or insb xchg jg out rorb (bad) (bad) imul stos imul mov push repz lahf add mov and inc and scas mov ret out mov and mov mov stc push int3 out mov pop sub notb hlt test xlat out dec stc fs cs rcrl out inc mov mov (bad) pop and mov push sub push out mov cmc cltd stos mov out pop cmp stos push mov ror rclb mul pop into mov pop cmp in push sub mov cmp out loop (bad) icebp and sbb adc out enter movsb pop pusha push dec aam jno xlat cwtl addr16 scas pop mov pop out or sub jp pop imul jo inc out lret out iret ds cmp in scas ljmp shl pop mov fcmovu test stos push gs call rcrl pop xchg mov fisubl out int push xor outsb out out cmp mov dec out mov scas and adc (bad) out dec jle std imul lods mov inc fmul mov mov insb lods push addr16 imul (bad) aas out fcomip sti push out out pop dec xor lahf jl out xchg sbb mov sub (bad) xchg cs out subl pop xchg loopne out push push (bad) or adc sub pop rcll in cli dec inc loope out in ss cltd and loop jbe lret mov push test test loope dec push jbe mov inc roll jmp sub mov add sub daa mov lods mov xchg mov icebp adc mul aas imul mov movsl mov int fwait jmp outsl (bad) rcr mov iret xor or in test push outsb inc or lods jae lcall addr16 stc call cltd out (bad) pop sbb out xchg mov and mov mulb sti inc xor pop std out add xlat movsb cwtl jno rolb out pop daa sub insl out fcompl mov out sub (bad) shr imul and mov (bad) shr push cmp out stos ficomp jl push loop sti das or jns (bad) dec add enter aam out jae das lods mov fildll iret dec out pop (bad) mov es lock loopne sbb cmp xchg adc fbstp sbb shrb out aaa xor popf push sbb test lahf mov out imul mov clc mov pushf in inc sub fadds inc xlat ret adc xor cmpsl ucomiss in mov sbb loop insb lea mov daa into or loope test (bad) mov clc aad ljmp sbb subl rcrb pop lret sub jge jecxz (bad) jmp mov jae xor out push inc mov mov out push bound stos movsb pop shrl std sbb sbb and push cld pop ss and test inc mov pop test arpl mov out xchg dec jns fldcw mov fsubrl xchg jge xor push out inc loopne addr16 js out mov adc cmpsb add scas jmp lock adc movsb out mov push inc fistpl push inc push mov jne rcll aam and es cld popa jl jbe enter adc dec rolb rolb out push leave fwait outsb outsl xchg push mov mov jnp out int3 inc jge aam sub rcr sbb repnz xchg pop cmpsl das imul push (bad) jb stc out inc jmp in outsl sbb iret loopne dec inc xchg cmp out cmpsl popa dec repz inc sub aas (bad) mov cmp xchg and out (bad) lock out inc inc lea outsl pop (bad) out pop das jae lods pop push or icebp xchg add jns or out pushf cmp cmp das push mov jg dec (bad) iret out dec loope sbb out jle and adc das ljmp repz stos jbe out sub lods test pop xor movsl xor in cmc pop mov add gs enter add les and sahf jno jg xchg in imul mov in jl (bad) jae dec or arpl jns or (bad) xchg out xor xor in out sbb les das push icebp fist push push loopne imul jmp insb aad out neg xchg ljmp call adc pop mov cmpsl mov sbb cmpsb mov inc jns out fidivl aaa mov je sbb dec shrl xchg xor out xchg inc adc dec sahf out jg dec aad dec mov loop insb dec jge sbb add aam add push jns jno arpl sub mov fldcw mov xor adc xchg jle sub test jmp movsb pop test out pop test inc mov and out mov rorl sbb adc fsubrl adc out fldt into lock loope (bad) rorb jecxz test inc iret xchg in xchg push push push in mov mov pop push mov adc iret loop or fsubs xor pop test jecxz repnz sbb bound xor or push sub push xchg xchg mov outsl out dec stos cmp scas mov out negl hlt push cmc pop out mov loope das out mov stos cltd clc int out mov lods (bad) sbb push xor mov and sbb cmp sub cmp dec mov pusha test sub icebp test movsl adc aaa jae fcoms pop jns sahf pop pop loop xor sub into cmp cmp cmpsl scas out aaa inc cwtl in adc scas jo testb sub cmpsl fsubl and push lret mov xchg cmp imul pop ss lods xchg loope dec pop cmp pop jae (bad) notb cmpsl ds gs iret cmp mov out xor sub or pop out and xchg out nop lret jns aad inc mov jbe mov push xchg rcl xchg mov lock jo fwait rcrb push test cmp mov and or out push in fsubs in jbe fs sti adc out sbb mov mov lock out cld inc sbb out je xor popa sbb lods xor repz out cmc inc pop cmpl test (bad) scas xlat and aad ds in cmp fisubrl and dec test aam imul roll mov and adc mov dec ja pop outsl add lret and js fildll loope add add aaa cmpsb pop jecxz mov push mov sub sbb or jns ss and pusha xchg mov ljmp jbe (bad) push std mov subb mov mov and addr16 aas lret fld das cmp sbb sbb in movsl adc (bad) shr xchg repz std scas dec xor push out push jbe jo or pop out out push push mov jmp fnstsw dec out out inc fidivrl cmpsl dec sbb mov sarb sub out ljmp js nop push sbb shll out lods (bad) idiv imul test push jle sbb out sarl or sub xor (bad) repz and add pop imul in rorl out sub mov xchg cmovns outsb inc (bad) jle out lcall repnz cmpsb stc push mov cwtl movsl dec push sub push jns or ds out dec mov add lcall loop nop sub inc (bad) push rclb and out xor cltd mov out sbb mov fsubrs out pminub pop xor pop jle jg add jge sbb inc xchg push cmc inc lea ljmp stc pop cmp push jae lahf mov xchg add push pop out or mov xlat in pop inc in push mov movsb sub in jb and out add mov insl aam sbb add inc fs push and imulb mov push pop jecxz cltd out jo dec (bad) push add into xchg (bad) dec add mov mov and ljmp aad sbb lea das neg jno call sub dec or (bad) cmp mov lcall js lret dec dec jnp das int adc pop out pop inc (bad) mov push jle lea jns popa lock out fbstp jmp std popf pop mov (bad) inc push mov sub push sbb test pop scas fsubrl pop mov inc out loop inc sub (bad) jae (bad) stc and push bound fimull jnp (bad) xor dec cmc sub imul pushf mov sbb and out sub sbb scas mov and testb and pop je int or (bad) fistp lcall mov cmp mov (bad) loope cs icebp out pop inc out mov cld mov fs (bad) adc jbe mov jl je inc cmp (bad) pop jmp pop sbb out clc movsl dec test data16 mov sbb cmc out or sub out out add push into lds lcall test adc rcll imul add sub stc sbb dec push adc int3 fucom out adc in stos ljmp mulb adc (bad) pop mov sahf dec jno mov out mov popa sbb cmp jne push js in lahf subl mov pop jo imul adc mov out mov sbb enter out mov movsb dec mov xchg push fstpl popa jg into jmp add fcompl fistp js stos or fdivr out cwtl (bad) cmpb popf out and pop sub out pop pop mov mov jbe pop call out (bad) mov pop mov pop pusha lret out dec or push shrb insl test imul out push and out and fild ret xchg out add cmpl mov mov sub xchg push lods xor pop jns fsubrp xlat inc add push cwtl out orl hlt mov pop push mov cmp (bad) iret mov into cmp push in add in (bad) adc fldl add sub cmp fidivr aam clc shrb roll push mov das mov out xchg insl xchg push cmc sub sbb sahf shlb mov out aas insb dec inc movsl loope cld rorb jbe jne shr pop xor fs bt or (bad) lahf sub or out cld or dec inc mov stos hlt (bad) mov out dec enter fnop (bad) out test dec dec mov xlat out pushf jnp fwait cmpsl cmp iret int3 into adc and in push aaa sbb pop ret jmp push test fistpll ja ljmp cmpsl dec jp (bad) in daa push mov cld pop adc jmp pop aad fisubr mov out negl inc pop out inc in das cmp lret push out std repz mov movsl xor testb jecxz imul rclb adc fucomip sub into pop scas imul dec decl cmpb push out inc in inc push pop push push aam dec xchg xchg loop mov out mov ss fstpl (bad) hlt and push adc sarl mov jecxz out mov fs mov pop loope push and xchg jb sub mov push dec cwtl lahf cmpsb and adc and out push fisttpl outsl jbe and pop out lret out call fcmovnb adc lods out push lret mov or rcl movsb into mov dec gs sub mov xor sub xchg rclb add xchg fldcw popa push sub jge ucomiss loope xchg jne outsb (bad) jae pusha out adc lcall arpl cmovns inc es xchg pop scas or pop orb adc adc jl xlat sub call fistpl push out cmp cmp aaa clc or int lahf fistp loopne or dec add stc cmp adc inc vpmacssww or test shr push stos mov sub out dec scas inc sarl imul out out in or ret pop lahf push insl xor out mov push sub mov std out add fbstp bound mov sti lret lret loop push call cmpsb push push out cmp mov ret out fwait lahf mov out mov jnp ljmp mov sub out xor stos ror mov or pushf xchg or sbb cmp loopne mov andl fisttpl imul and out push mov pop and lret pusha pop sahf stos out loop pop mov and mov jnp and bound mov mov push imul dec mov sahf int cmp into andb pop out adc lret mov out xor fcompl jg test out jns cmpsl gs jle jge pop sti lea or xchg pop shl hlt fiaddl jno out dec outsl rclb out (bad) mov out movzbl std xchg outsb jb push aaa lret dec inc repz insb stos pop jbe mov cmovg es data16 out loop or xor jae out push sub nop shlb jmp xor mov aas xor pusha clc sbbl insb mov inc xchg mov pop mov les pop int3 std adc repnz hlt sub ljmp mov out out popa cld scas es rcll out loopne rorb pushf dec lcall out pop push sbb pusha fdivr call out cmpsb xor outsb inc out sbb jns jb mov data16 enter mov les add xchg sbb push push adcl out pop dec mov xor loop pop cwtl int3 pop pop xchg outsb jmp clc pop fsubrs add sbb imul loop push push outsl xchg jecxz jne out mov and cmp lods aad jp shr ds or adc dec lahf out ss insb leave mov imul out push (bad) out jge add int mov mov jle mov scas sbb inc test dec in fucomp cmp mov inc (bad) imull pop lret mov cmp xor out fdivrl ret out and sbb push icebp jne int mov pop mov rcl or in jae icebp or out mov jns in and jp mov arpl into imul das in xchg aam push out or mov scas out insl stos ret popf addr16 out pop shr jno push aas adc xorl cmp mov bswap fs jecxz add fstps mov ljmp imul xchg jmp fwait lock sub aas mov pop std cmpsb cmp ror jg lods out aas out push adc or out js jae nop add pusha out lret push dec out (bad) out and jecxz call cmp loope outsb (bad) (bad) mov mull sahf out popa fild test mov jne push cmpsb add into out enter inc xchg adc out mov mov loopne pop jb lcall test imul push adc xchg mov test popf sti sub out dec das push inc pushf xchg push xlat lahf dec dec ret lds or lock mov pop push iret (bad) (bad) mov divb jns jmp pop out dec jno aad push cltd jbe ljmp sbb out jmp adc imul push fidivr lret aam and add push add movsb enter mov or jns loop sub shrl or out inc (bad) out adc insb push xchg sub (bad) ja jle hlt out mov jne daa call out sub sbb and arpl pop (bad) adc out adc or int rclb mov nop mov jle out cmp adc outsb pusha out xor mov jmp push dec push sub out hlt outsb cmp inc sbb out inc (bad) jo sbb sbb test push out test fwait cmp aam mov xchg sub xchg xchg es ja jg push lret cmp mov xchg insl mov sub ret pop adc (bad) in pop mov jmp sbb out cmp cmpsb dec out push and (bad) push iret lret lods daa jg lea out sub and mov repz or add xchg cmp iret sub adc (bad) lea fsubr enter cmp and daa lgs in into sub cld fisttpll xchg (bad) (bad) push cmpsb ds lret push push adc out leave dec mov and daa out stc notl out out prefetch or mov mov lods sbb push push xor push test push xchg lahf xor aaa adc add in pop lods sbb cmp rcrb push (bad) jno inc test jnp cltd inc lods in cwtl adc rcll insb aas rclb fs xchg mov adc xor stos xchg leave pop sub cs cmp out or or int3 xchg ret out push or mov out arpl aad in fcomi in fwait cmp mov or pushf rolb iret (bad) dec cmpsb shr sub mov cltd jg fwait ljmp sbb sbb mov mov icebp daa popa repnz lock dec call and push out lods je call out jg adcl mov sub xor loope push and daa outsb in (bad) out or mov test push mov and inc in lods out adc cmpsb mov je out sbb pop out dec sbb mov out jp les xchg cmp xchg pop xor or mov jg dec out pop insl add aad mov cmp fsubr hlt adc mov loopne test out (bad) sub cmpsl shr adc fstp in bnd ret out mov dec cwtl xchg popf mov je jns das add xchg daa pop rcr scas xor lods out out adc mov out push mov (bad) pusha jg pop jl hlt out sub jge addr16 jns out scas jp xchg pop add or decb jle cmp mov jnp and aas inc (bad) aas jno out fsubp pop out jne and rolb cwtl sbb pop scas addr16 repnz data16 shr sub (bad) out and test mov push cmp pushf testl pop xchg out lock dec push sbb mov mov out pop xchg and and sub fsts xchg xchg loop in insb int3 sub xlat xor cli pop pop inc sahf out mov out xchg repz iret fwait sub mov push fbld insb and rorb out leave mov adc roll add in iret dec or lret mov cs mov (bad) and out outsl mov mov out or iret mov pusha out or push ss sub xor push xor iret das out js cmp (bad) sub lgs out pusha imul adc iret push add jg pop lea mov mov fcompl (bad) mov jnp rol xor pop pushf cmovge repnz shlb mov and ljmp rcll out mov enter out daa in ja jbe inc xchg out xchg dec dec mov mov inc out out dec and clc and or mov mov mov add inc out push outsb pop jns push push in out push ret sti dec or shr cmp and rclb mov sbb dec xchg jo ret fmulp (bad) mov xchg nop sub add dec sbb push fs f2xm1 sarl mov loop rcl and mov push mov mov lea pop pop (bad) stc adc inc insl dec repnz out jmp imul sub out xchg cmpps and movsb icebp mov xor call insl mov jmp pusha pushf sbb add bound mov fs (bad) stc fcmovbe mov sahf cli out pop daa out inc dec stos sub adc xor sbb mov xor mov pop test jbe out push mov pop out xchg dec adc iret imul push pmaxsw imul sbb ret xchg xchg mov xchg mov xchg jne push mov jmp inc iret ds pop push (bad) out adc fsubrl dec in out cmpb jecxz or fsub xor mov adc ja inc mov fs sbb inc ret mov out aas jmp or jb add mov xchg push and dec mov out out push jg add mov (bad) out adc outsb in icebp out in pop aam out inc jl repnz xchg std sbb movsb shrl out pop pop rol dec fistp outsb out jne into push out mov jle in ret out inc jbe jl popa jecxz (bad) mov or mov or and out adc (bad) mov ljmp sbb incb adcl adc xchg and push xchg and sbb push into add out rolb adc imul fidivrl (bad) xchg out push dec jmp fneni(8087 or (bad) ljmp out cmp mov insl out push call cs cmp cmpl stos cwtl out sub insb sbb or repz sbb jmp rcrl mov mov inc push lahf ljmp push pusha and cwtl iret jb xchg jne std sub ja int3 ficoml inc mov aam into lods add out jno or lcall or pop out pop movsl jno sti data16 cmp xor sti xchg ljmp sarb cmp jbe arpl cmp outsl ja stos lret pop loopne xchg adc and cmp mov out call mov out outsl pop outsb fimul or out pop (bad) es sbb popf (bad) ja out imulb ret push inc (bad) cmpsl xor sbb js add sub imul out fisttpll and sahf mov out add sub xorl out loopne mov pop out mov jo popa out mov mov add cltd cmpb lcall sub pop out cmp js mov push sub cmp subl call outsl pop out (bad) pop push ss mov in pop test hlt divl insb pop xor sub ret ror data16 jmp (bad) mov pop jge jnp lock cmp cwtl inc add (bad) mov nop xlat or sahf loop sti ja mov add ljmp inc adc lods lea adc out push sub push cli or sbb fsubrp jle mov sarb cwtl push sar cs (bad) jne cld (bad) cmc push jno ds iret int3 hlt subl in mov cmc adc jns shrl push call lahf jl sbb out in and xchg out fbstp movsb push out hlt push divb jmp mov sub addl mov leave test (bad) push inc enter std push push iret pop gs push mov cmp in dec ljmp xchg sub mov gs xchg mov push sbb into or loop out mov outsb rcrb jmp jno cmp mov std in or cli call and add insl aad fdivs out cmc lea rcll ror mov out inc sbb pusha out pop push push add insb cmp out imul lock or inc sar js inc and mov sbb push popa rorl out inc push lea sub push and adc repz mov out push in loop and out stos hlt imul jge xchg out jle sbb out cmp rcl cmpsb (bad) fst xchg scas out or sub pop notl out js fist rcr push loop (bad) pop popl adc imul inc test (bad) out or test mov sarb divl or jbe and ret icebp mov neg cmp pop lock lret aas shl aaa lcall out and stos mov add or sub add pop jnp or inc xchg loop sbb mov jo and jmp out inc fidiv xorb js out xchg bound jle add xchg dec imul and jge dec pop pop inc dec popl (bad) (bad) ret xchg (bad) push pop ret dec cmp inc mov inc (bad) insb sub out push je,pt add lea out lcall jns sub mov int pop push and call pop pop sbb outsb or xchg jg push sub sbb (bad) fs dec inc add cmc add imul pop addr16 repnz lds mov ds and and dec or sub test iret int3 pop push out loop stc adc adc sub rcll sbb push (bad) bound jne xchg dec cwtl ret gs xchg sbb std and ss daa sbb push cmp xchg (bad) (bad) push fwait lcall sub pop scas pushf ss sub sbb jne xchg and mov mov scas inc leave inc test sub and add (bad) div aas ret sub xchg pop out sti xchg and daa xor add scas adc push lock and mov add pop das jae pushf push jmp sub fcompl mov insl mov sub inc mov and fsubr (bad) das out cld aad fst inc sbb xor push sub inc out cs sbb repz pop pop popf mov out mov dec push mov and popf jo (bad) mov daa or (bad) mov orl xchg inc xchg out test mov call adc or addr16 dec out jecxz addl out jb jo mov mov out pop rep jmp pop sub fwait and or out cld ljmp (bad) mov lcall pop lds out fstl mov and mov mov push daa add flds inc dec aad xor xorb out addr16 and mov xchg insl lea jne mov call fwait push cmpsl adc sbb out es lods push sbb inc leave xchg dec out loop add out aad adc fs and inc adc roll or cmc sub movsb stc incb mov pop mov test (bad) call out ret rcr loope out fisttpll repnz mov push aad movsb or icebp lahf mov sbb ja xchg in div push (bad) mov xor xchg mov hlt pushf pop mov stos adc dec jo xchg add mov ss out fsubl adc aaa sub push fsubr pop call aas fs mov sahf outsb mov fsubp xchg pop stos pop repnz cmpsb rcl test out mov sbb jl adc xchg push loop inc into and dec (bad) js sub cmp adc test jne fistp lahf add inc out lret pop xor jbe aas mov and (bad) insl jne push sbb mov sbb mov xchg cmpsb scas fxch mov and sbb enter aad adc gs loop (bad) fcmovnb rol (bad) jo pop lahf out fs in dec dec mov xchg xor psraw addr16 test out das aam mov out addr16 jno int and pop mov in sbb shr dec cs mov enter scas loopne (bad) gs push into in pop cmpsb xchg or push sti ficoml dec add out lret (bad) int3 sbb jno push mov mov mov push ret call cmc popa mov xchg sub sub and pop mov adc nop xor xor push in xchg pop out int3 stos push scas les loopne cmpsb fucomip adc push cmpsl mov lahf mov sbb (bad) test cmp cmp shr popf out fcoml mov mov pop fisttp dec adc in negb sti insl scas imul cmp push pop addr16 roll jmp sub out rdmsr loopne out and cmp arpl out scas xor push out lcall mov or aad and in xor lods out jno pop push out fisubr push pushf or icebp out lcall fs shlb mov out test sbb clc dec lret mov pusha leave nop int rolb in aam (bad) out shll push stos inc and mov bound adc jns xor sbb and das or out cmp pop subps lret imul fistp les pushf push mov mov incb mov add sbb insl mov fbstp push insb leave xor shrb xchg mov stos insl aad adc sub push cmpsl jo loop cs jecxz decb adc sub mov imul (bad) cmpsl mov rol push push imul stos inc add (bad) mov push pop jns ja out out dec mov add inc mov mov mov xchg cmpsb call out push mov dec mov out mov leave jl pop fisub jge mov movsb pop imul pop jp jb repz mov add test stc add out push pushw aas fnsave (bad) (bad) loope pop pop scas iret imul ljmp xchg int3 outsb mov fsubrp dec sub mov scas mov sub out mov gs pop in pushf push sub xchg add arpl lods cs xchg dec out jne xor rorb push sub in ljmp mov push ljmp outsl or bound shlb add cmp in insb xchg mov out je fstps rclb fs pop mov aas push lahf test mov fsubr inc aam sub cli xchg shr cmp and push (bad) in or xchg hlt out stos xchg mov mov lods cmp mov sbb cmpsb sub (bad) out out cmp aam sahf in dec negl cmp in and ljmp jmp loop loope push shlb jb out dec (bad) test jnp out hlt lcall out mov pop insl es jge mov in test dec ucomiss or pop push and test (bad) adc dec sub push xor mov out in cmpl stos dec out out mov xor out addb dec pop or xchg mov roll sbb cld lods in mov aas out ficompl out mov ja out or sbb out out mov sbb (bad) ds out pop push in sti out aas enter repnz mov out sbb or mov mov or fwait xchg int3 dec xchg mov push push nop ret out cmp fcomps lods out cmpl push out jae mov push adc and mov sbb in (bad) mov out icebp adc pop xor (bad) push xchg mov leave mov dec js mov sub and jge xchg cmp test lret shrb out push and jno jns (bad) and sbb mov out das xchg mov loopne inc je push imul sbb xchg adc shrb ret lds bound fsub pusha dec aam lahf mov adc and push push sbb lret add push insl lods mov xor jno and daa gs push pop inc out cld loop dec mov sub in out shrl ret add xchg inc inc test cli je bound out insb out popa test fisttp sub clc push (bad) test out fistl test add adc cwtl stc popf aaa in push out jo adc mov fcmovnu clc inc inc arpl pop out icebp mov ljmp das inc xor mov hlt out loopne ror pop xchg sub out adc sbb out inc loop mov scas enter test fs mov add xor daa pop andl jp jmp fsub fwait out and lret (bad) popf cmpsl vpcmpeqd pusha push out adc push loop push add in inc sbb mov das sub test dec cmp adc xchg (bad) pop das (bad) cmp je mov (bad) cld cmp (bad) jno (bad) mov mov jecxz pop push mov imul aas adc push xchg and pop mov add fisubr outsl push cmpsb mov in xor pop sub out lds dec dec mov fs cwtl jp js fisttp aam out dec adc in (bad) or sbbl or pop sbb cmp inc lret insl push and stos mov sub mov mov cs loope insl out in xchg dec add and lcall loopne or out mov test xor and lahf inc out fadds pop jns inc ret push mov inc jb pushf out (bad) cltd iret in mov int xor add shrl out ljmp cmpsb out sbb (bad) out out ja sub out push mov xchg (bad) popa adc sub jne mov outsb pop push ret inc lock inc push test xchg nopl and xchg out and mov in sub mov ret out (bad) cld iret into daa out (bad) stc out or inc cmp clc sub mov mov or out mov mov or outsb lret ss inc out (bad) sub mov xchg into cmp mov cmpsb lret mov sbb pop dec xor fs sbbl push rcl out arpl lahf mov les xchg out or add out fwait mov push sub ds xchg and rorl insb inc popf jb aad les pop add out jge cwtl (bad) ljmp out icebp test push cmp test outsb incb lcall adc jg and loop es scas jmp push sub jecxz,pn xchg out fcomi pop mov out xor stos sbb ljmp jb pop into out push lea adc sub push imul fsubrl out pop or jnp xor out hlt push pop popa cs es jae cltd mov pop or push jne jmp shll xchg xor sbb and cmpsw call add (bad) gs ljmp adcl test test popf push lods push out fwait (bad) ja (bad) jg outsb outsl out xchg rolb push push sub mov jns call out (bad) es pop pop sub call jg mov push inc or jns xrelease inc scas cmpsb fcmovnbe push movsl pop push mov out fsubr jae or lahf rcrb in in sub arpl pop jno adc sbb inc sahf and mov cmp ss les repnz or fs xor out push inc mov rcr jg cmp out adc jge int3 imul xchg int push mov pop ds ljmp stos outsl push ja lcall inc xchg out xor out out jno or ret (bad) mov out push inc cltd lds sub repnz popf sub inc mov mov pop out cmp mov in jl (bad) out int3 pop cld js inc out inc mov int ss xchg out jmp jne cltd pop adc out sub xchg cmp pop sub sub ja lret pop push add jp jmp out loopne dec adc scas test and (bad) ja ret mov push push mov out repnz loopne sbb add std xor push bound incl jo mov lahf jne sub out xor outsb jg out rolb cmp test ja int3 lcall out mov dec pop dec mov inc outsb cmp rcll or movsb jno push out xchg add aam out xor mov popf loopne jo out shll xchg push into in (bad) out push cmpsl nop adc jle iret out adc outsb paddusb ret sbb inc xchg adc mov mov pop sub mov out cwtl sahf adc push out xchg ja cmp jmp mov sbbb rorl push pushf iret fdivrl lods call out and incb fcmovnb loopne testl mov push lret out hlt ret fdivp push rorb and out divl cmp (bad) aaa mov ljmp insb adc icebp shl cmp fstl push push std hlt addr16 or out dec sub cmpl fnsave clc data16 jns pop ljmp out jo mov jmp shr insb dec xlat out and enter out test pop pop dec jmp ror and call sbb sub shl test loop jnp (bad) jp (bad) imul rolb out mov ret sbb stc sti shr or in xlat and xor pop push cmpsb lock cmp roll out fsts pop out lock pushf movl popa mov imull (bad) out sub aaa inc popa lcall stos divb sub lods (bad) clc les sbb jbe ret out in inc (bad) cmp xorl xor (bad) int3 mov mov jmp xchg sbb pusha xchg lret out repz mov mov xchg jl mov fist jmp sbb add test jl (bad) push pop (bad) pop jne (bad) jecxz xor test jecxz leave arpl xor sbb (bad) fcomi ljmp loope std out test add mov ffreep inc ret push cmp lods jmp jnp xchg ljmp out ret and iret repz loop push ficompl out es mov in xor inc ljmp into out cmp fstp mov (bad) out push adc mov out fcompl mov sbb ljmp mov sbb (bad) xchg sub push mov adc aam cs xchg vmptrst ljmp iret mov lds mov fstpl out lcall jge mov lods add js call cs mov adcl fdivl aad repnz mov push mov xchg ret movsb fdivs incb push jns in imul xlat sti push add stc fisubr sbb je pop lret push popf out and xor scas and pop (bad) sbb out frstor dec and cmp inc pop mov ret dec push cli dec pop pop dec ljmp or loop out pop or mov (bad) mov ljmp out and and sub lret pop sar and out fcomps sbb lods add out mov jp fsubrp ss (bad) int sbb xchg add (bad) iret push movsb into pop and lock out mov iret sub xor pop stos sub sbb mulb jno in xor lods out aad out add je pop pop in pop rcrb cmp cmpsb es in insl cmp xchg mov out mov mov out fimul inc push out stos mov xchg movsl out fisub xor out xor lea xchg (bad) adc jo ljmp cltd lahf lods dec dec pop out xchg fnsave mov inc xchg data16 mov or adc out xchg bound jmp in pop sub cmp fs out xchg bound loope push repz dec add sbb ss adc pusha hlt and rcrb (bad) sbb arpl jp outsb fsubrp popa lods mov pop dec xchg (bad) jmp out cmp sbb out jecxz (bad) out rorb (bad) idiv push sbb rep addr16 mov add sub or lret out imul repz (bad) xchg repnz daa (bad) jbe les (bad) test and or pushf icebp mov dec cmp adc sar out push push sub xchg les icebp sbb fucomip outsl or sahf cltd mov xor aaa push push cmpsl mov push mov mov pusha pop rcrl call mov loop das sahf cwtl push test sti pusha jmp inc (bad) ljmp sub mov adc lret out nop sub xor out xor jo jb or mov out sahf push cmp gs movsl rcrb jl out pop fisub out push pushf pop cmpl (bad) js fucomip cmp out mov sbb xchg cli jecxz and lahf out and decb pop cwtl xchg xor xchg jge dec adc out js insb out je xchg mov mov push test mov pop xchg gs adc xor in fldt out bound (bad) xchg inc scas mov insl pop popa nop xchg cwtl cmp xor jge clc or sbb mov ja jae fwait sub jg inc out mov test out movsl push xchg add pop int3 ljmp call and arpl sub or push imul scas leave inc fistp lock lds push xchg push cs push clc inc shr and addr16 or sbb cmp fwait or hlt out jb (bad) (bad) adc inc in sbb iret vucomiss fildl addr16 mov movsl push ret push jge ljmp push addr16 sbb out adc pushf leave xchg xchg ljmp hlt stc test out insb shl inc lock lods out or jmp and pop add adc push sbb out rcrl sub negb out cmp cmp test popf add out je adc ret or jg loope cmc pop cmp jmp (bad) (bad) out dec dec jecxz sbb cli daa out jae pop mov movb in adc adc out cmp pop out cmp ds or lahf out js out cwtl es ljmp add jae dec shrl adc popa mov out xorl cmp int iret cmp xchg mov rcr imul in enter int fsubl cmp pop xor out loope mov add dec push (bad) xlat adc out sub mov fist cmp push sbb pop mov dec cwtl ljmp loop mov out sub mov dec or cmp in or std xor dec lods adc mov sbb test pop sub push xor iret in hlt bound (bad) je jno sub stos cmpsl pop cld fld push (bad) adc in ja push pop mov loop add push and loop,pn xorl sbb mov out mov or jbe repz std cltd inc pop shr pop (bad) and test mov out mov loopne cmc jmp fsubr xor xchg xchg fisttp insl sbb adc call mov mov aad cltd jge pop imul cs iret push jns in mov insl sbb out out xor int3 repz test xchg shr ja addr16 inc mov xor jnp pop jl push sub fildll pop mov int3 icebp add (bad) xor lcall xor vmovd cmp out aam xlat and fisttp call jg fcomps movsb inc and bound aam push xor xchg int out sub arpl cli and bound imul or loop or and rorl idivb out insb pop loop out dec xor daa dec fild hlt flds (bad) mov add aam pop ret je inc dec jmp pop fcomip sti lock test int cs out cmp mov repz out dec loop adc (bad) fwait push lods out xchg mov pop jp out daa je into mov add divb js mov xchg negl cmc push clc imul out mov push nop sub movb ds out roll lods or int3 fstps sbb mov and add xor jns cmp sub inc hlt (bad) xchg (bad) ja lock dec stc pop mov sbb negb mov jnp fcmovnb rclb ljmp decb pop pop mov sbb outsb fsubr (bad) testb dec pop leave out ret fldt cltd ja popf fst push add add insl jle (bad) iret in inc imul and push loopne sbb dec jg gs (bad) push add lock loope and jne pop dec xchg es push out or scas cmp out enter xchg out xchg ret xchg cmp sar rcll shr pusha aaa nop (bad) test in aas mov sub adc cltd loop loope jnp popa (bad) imul outsb push inc out inc cld stos addr16 ds scas popf gs or ret push adcl pop inc int imul loope imul push add push push (bad) out jge xchg insl les sub sbb mov push pop or es hlt push cmp add test dec shrl out add mov xor xor or jo cmp add push loopne out fwait rcl cs lods faddp dec xchg ficoml jae outsb cmp aaa dec pop sub out enter push enter push dec lock mov out push push call and aad fbld or out int daa roll pop outsl jno fdivrl cmp mov adc inc ljmp out cwtl fsubrl xchg pop mov jl clc pavgw inc leave push out push (bad) cmp mov dec out push (bad) (bad) shlb out mov xchg pop and push mov add push out sahf test loop sub ret inc xor inc fsubs lea pop pop (bad) test cmp outsb lea push pop aad (bad) push addr16 (bad) mov andb pop cmp ljmp fsubr and loope mov in xor test jne xchg (bad) out outsb ja rcrb cmp das shr (bad) out lock out adc mov xchg cmc and dec cmp out fs movsb rorl cmp fbstp mov jp sub fwait push add or scas mov cmp xor into dec or mov das mov xlat movsl ljmp out xor dec jecxz out loope mov push out add xor call pop leave jecxz clc scas scas imul jo sub jns sti pop iretw push (bad) pop out call adc add out adc clc mov fstpt jne ret notb xchg cmpsl mov or gs jno and sub out dec sbb mov inc add cltd imul outsb pop out pop leave xor sbb pop stc addr16 add fbstp dec arpl repnz mov out test fildll push jns inc push sbb out addr16 push scas xor push out sub jmp (bad) loope fsubs pushf adc add das xchg shrb in sub jbe cltd adc jg jle mov movsb jae es addr16 add or call mov out enter inc and bound pop mov cwtl leave (bad) ss adc pushf cmp mov jbe es in iret (bad) aad add sbb clc cmpsb sub jo xchg dec jbe pop inc jecxz xchg sub lea sarl int3 pop fstl cmc std lock out sti outsl jmp cmp mov inc in nop dec xchg dec out mov gs lods data16 xchg xor (bad) out loop sbb loop (bad) movsb pushf xor mov movsl out int3 imul mov out dec add add mov (bad) fistp fs data16 cmp xchg test inc add int ljmp leave in push mov or pop xor fildll pop popf in and fldt xchg cmp imul out outsb aaa xchg test neg enter mov lret insl insb push iret and mov dec mov xchg or xchg ljmp gs and jae xor imul jmp dec mov fldl popa cs push jle mov out loopne dec xchg sbb pop dec int mov sbb fcmovb paddd push lcall pop mov sub or call jb out loop scas sahf das add adc insl movsb mov andl xchg or pop mov xchg outsb fdivr pusha jnp mov (bad) sbb (bad) pop sub pop push arpl rclb std aam fildll ds popa inc imulb cmpsb xor out jg (bad) jle cs movsb and ret loop xor pop mov and sbb adc xchg push repnz aas lret cmp out test jmp add jg mov dec outsl movsl out and lahf cmp cmpsb adc sub mov daa stc inc out or shr adc cwtl sub in pop and or (bad) (bad) sbb pop jbe mov sub jno adc sub lahf mov mov cmp cmp out test adc xchg out mov sbb cmp lcall pop dec lock dec dec outsb out mov inc and lds jns add jne out lahf adc lock (bad) mov rcrb negb mov lods (bad) ss scas or inc in mov or mov xor repz out lea ljmp int (bad) arpl dec (bad) stc out xchg faddl inc out mov out dec setae push add pop cmp out mov imul sbb mov xor out out fsub xchg outsb (bad) out mov int3 sbb push push out add or out mov divb iret sbb daa pop call std out or out xchg xor (bad) mov popa and pusha aad out fst imul mov push nop iret leave mov and out adcb mov sbb fiadd shll outsl iret mov es adc testb sbb pop cmp (bad) jmp pop loope out push adc ljmp test push mov out push outsl jecxz jb push decb ljmp cmp push out dec call imul loope,pn (bad) out adc or out xchg mov enter in in arpl or or ret repz ds sub je int (bad) jmp stos dec jge or mov push jecxz pop dec sbb daa psrlq cmp cld out (bad) xchg test sbb int lock incb xchg or stos in jp push sbb mov scas (bad) pop cmpsl or mov incb mov ljmp test inc out mov jbe cmp aam and inc lret in lahf mov in je das rclb fidivr mov out pop xchg xchg or aam mov (bad) adc lea inc push jmp ss or mov sub insl sbb (bad) lret fsubr dec in sti cmp (bad) clc sub out stc rcr sbb sbb (bad) sbb (bad) xchg out sub mov (bad) cmp push jp dec in arpl (bad) repz mov rcrl enter fwait and pop out mov popf sbb sbb fsubr xor test nopl fucomip addr16 mov shr push xchg data16 jecxz or dec (bad) pop sub fadds out adc nop sbb dec mov cmpb xchg cs out lea mov jl out inc sbb loopne inc sbb lds es out mov sub push out lcall and xor aas (bad) jbe shrb es loop jne outsl scas and cmc hlt cmpsb dec push pop decb pop sbb lods push movsb aas sub mov fwait daa arpl cmp rcll dec jb movsb dec mov out (bad) and jecxz daa (bad) xchg leave outsb mov xlat xchg movsb loopne fbstp inc mov int3 or pop out jno ljmp jmp xchg scas fwait add enter fs xchg mov addr16 push out sbb imul sti cmpsl out loopne sbb push xchg hlt decb pop scas scas rcrl out repnz ret lcall outsb or arpl daa loopne icebp mov loop or out mov bound out enter xchg pop push jno fstl in imul out fild or in jb add incl lea pop cmp outsb icebp insl dec popf mov out jmp (bad) cmpsb bound jge test xor pushf hlt les jecxz shrl and sbb push sbb jp push mov ljmp out push dec subl and cwtl xor mov ds lcall outsb mov ljmp out mov out mov loop aam xor out sub test insl sbb add sub xchg adc lods das stos jbe pop jns jno lock mov stos ds mov adc jp add (bad) fnstsw add pop call lahf outsb jnp cmp out add shr xchg in cmpsb cmp repz leave mov xchg sub in pushf call cmp out cmp xchg daa out fcomps stos ljmp adc outsb add pop (bad) (bad) jmp sbb mov fsubr lret js lcall fist aas jmp ret dec xchg cmpsl mov jno scas push sbb pop (bad) out mov xor or out sub mov and fcmovnb imul mov clc in jns out inc ss mov jb shlb loop cmp dec out aam inc out cmc sbb iret incl sub dec inc cli adc adc outsl out cmp cmp mov mov add mov jg pop dec xchg out pop ljmp mov jne (bad) cld jmp sub (bad) push inc (bad) iret lea imul ljmp out repz mov lods mov in out dec mov cmc push mov outsl adc ficomp fldt jecxz ret cltd cmp xchg cmpsl jbe dec inc loope dec mov adc inc loopne mov sub imul and rcl fdivrl shl in dec test test lds jg stos xor incb mov ret in mov push scas test push imull out setne inc int and (bad) test mov fmul sbb jmp mov xor out inc or jge out jnp sbb cmp push dec dec cs pushf push movsl add pop mov push mov cmp mov aaa jo mov shll pop es mov icebp cwtl pusha sub xchg out insl mov out bound out dec mov out dec push xor push dec lcall out out adc rcl jns adc cwtl adc fnstsw out leave rcll and mov cmp pop jle push lret imull cmp out adc js out push popf fiaddl (bad) cmp add loope out loop lock pushf fsubr ret inc out or lds inc adc cltd insb imul mov adcb stc jmp pop push sbb dec add test cmpsl aaa pushf pavgb sti dec loop sbb out loop in outsb cmp xor pop int3 fwait popf jmp sub cli mov mov mov (bad) (bad) iret push mov out mov sbb shl sbb fwait lds fildl pop sarl lock mov mov push or mov popa mov ljmp cmc sub stos outsb adc out xchg popf add push lahf (bad) and out pusha adc dec sub subl mov or out ss xor and inc sbb aas cmc std pop push mov fbstp jle mov inc xchg xchg sti and sub sarb jae jl sub or pop xor adc push daa fsubr push mov ss popf add mov ja je out and out and arpl incb dec jne push (bad) sahf mov iret and mov (bad) int pusha sub scas jbe pop pop xor mov int popa dec int3 mov cs scas into push or (bad) mov inc xchg stos sub hlt stos mov bound iret mov xchg clc (bad) (bad) out push div movsb or fild fldt in adc adc mov and addr16 push clc push jae sbb setg ljmp cmp cltd mov adc sub nop push out jno or dec out mov mov sub aad mov iret out ss lcall je sbb repz lods sub push xor jp sub inc pusha aad inc rcll hlt xor jmp out pop outsb bound out stos inc icebp mov mov push inc out in inc (bad) fsubrs sbb gs mov push int repz clc outsl cld dec scas jmp sub jg mov pop (bad) pop lods adc pop jnp incl sti and dec call and mov movsb and pop test mov out add inc xor out mov cmc ds out add inc imul test cmp jmp xor jne mov push sub jecxz test sarl inc pop pop outsl test insb and jle or add js add imul pop cld cmp outsl icebp cmp lahf pextrw pop subl out insb dec fbstp cmp incb aam xor mov (bad) xchg add das sar lcall push pop cmp fcomp iret or add jg xor out and pushf loope xchg movsb out cmp (bad) jo (bad) jnp push lahf fisttpl std insl loope popa out outsl or push out cltd sub addr16 mov out jecxz or pop imul add fs out xchg xchg and sub imul sub mov pushf xor loope out xor and inc mov ja sub lock sarl fsubr imul fild insb insl call push xchg mov out pop arpl mov es xor nopl dec push outsb in jo in out jns repnz adc dec xchg cmp add dec inc das push shrb adc lods loopne cmc pop (bad) cli jmp dec mov out pushf cs movsl lock idiv (bad) xchg (bad) jbe fucom sub imul cmp (bad) out jg (bad) out sub pop add jne cmc jl mov out jb xor cs pop out iret (bad) ljmp stos aaa std inc adc sub lret rep out jp movq out cld or push scas or push xorb add insl add (bad) out mov mov in adc dec jb cmp xor push gs sarb cli (bad) out iret in aaa sub jp pop push clc and call out sub push dec push adc mov inc out in dec xchg cmp and in push xor jne call (bad) lock out adc lcall xchg shrb insl inc dec aad out xlat cmp out scas inc sahf mov cmpsl popf cmp imul xchg sub inc mov or aad shld and mov add (bad) sbb fiaddl jbe cs sbb pop cmpl jae adc fsubrp mov insb jbe push out notl add fwait xor sub cltd add cmp aad sub fcomps ljmp insl mov vmaxps jb mov ja inc mov aas in sub push (bad) (bad) xchg inc clc xchg rorb addr16 sub incb (bad) into inc enter rorl lret je les es in imul adc mov jmp jo mov notl sub aad (bad) jb das repnz dec ffreep add and out fcoms push mov out and (bad) ret out fstps (bad) xor (bad) in sbb push cltd jb (bad) iret out sti sarb call or sub mov lock sub push mov cmp xchg cmc popf mov push dec jae (bad) out push (bad) push cmp adc out xor movsl int3 jl sub adc mov sbb push xchg sub pop insb mov out test inc imul std subl rcll push add out das sub fmull adc inc hlt pusha push lock mov add outsb (bad) mov (bad) or sub out and fnstenv popf or movsb aas and out jns jnp pop subb mov lahf mov icebp loopne adc pop push bnd out and dec push mov dec xchg scas xchg pop arpl inc sbb test pop sti cmp pop cmp dec (bad) sbb rclb addr16 push out add xchg stc pop ljmp out mov inc mov sbb out in cld mov pop pop cmp push dec aas insl insb jnp ja mov ret mov fidivrl dec nop and jge shl push call cmp scas xchg or pop xchg loop sub push in or jmp imul pop out push or lcall mov cltd fnsave test loop lcall cs out jge cwtl dec mov or adc inc pop mov cmp xor lods gs mov jl out sbbb fldenv stc mov mov inc imulb je jmp pusha xor int aam shrb inc jnp (bad) iret jbe and adc dec out push lock xor and pop (bad) sub sub xchg out jle (bad) nop outsl inc pop out push mov cmp fist daa aas mov sahf iret out lahf jbe pushf mov pop xor rclb pop xlat lea xchg out mov mov lahf out pushf dec (bad) iret push inc out mov call (bad) out and (bad) call mov or aas outsb mov in inc push jno lret pop addr16 aaa xor sbb jo je cmp mov ret pop xchg or arpl outsb xchg push ret imul cs inc out gs repz repnz fwait pop pop xor pop ds stc mov xchg ror add mov add out or arpl fs flds pop dec out and and in fsubr sub (bad) mov jp sarl xchg lahf and aad out push loopne,pt xchg movsb scas out push xchg xchg push cmp out add (bad) (bad) (bad) push sub out fsubrl sbb dec add jg jl dec out mov cmp xchg add add mov fcomps pop imul int aas pusha and fldl fs cltd pop loop jg mov xor sub popa repnz pop xor push sbb out int3 pop nop sub mov adc shr shl outsl jp out dec out cwtl ret jmp dec imul push mov ds cmpsb mov out cmp sub hlt out clc jns iret push adc stc es pop dec hlt inc cmp out movsb ret rorb and dec jg cs insb pop popa out jecxz xor ficom loop push and das out or xchg inc imul sub (bad) xor out mov lods ds sbb mov xor imul inc (bad) xor clc out imul test out xchg out repnz test mov pop in (bad) ja out mov movsb (bad) mov std and ss insl dec jnp cmp adc movsl mov js inc out (bad) xchg dec out push out and iret inc dec lcall mov jnp xor in out mov add testb bound cs lods mov mov (bad) out xor aam sar jmp roll mov push mov add cmp out stos xorl mov dec out sub or or pop fchs sub jnp ret push add adc inc pop out sarl push push out jae insb push in dec mov push push addr16 and out out inc fst sub insl xor push daa je and out loop pop cmp jne out xchg aad imul mov cs fist enter bound in or sub out or lcall inc push outsb out lahf in mov arpl pop pop jp mov ljmp repnz lock out and pop fmul adc pop testl out adc jl (bad) sub add sbb add mov xchg and mov xor mov xchg in pop mov sub inc push insb pop jns lds and out cmc jecxz sub or adc sub outsb das and add inc subb dec fimul call pop (bad) movsl mov icebp out rcll gs or out sbb xchg mov (bad) cld js pop inc pop mov xchg lret and stc sub roll ss and pop mov addr16 ljmp jecxz mov pop insb addr16 push pop cmc cmp fwait in mov xchg or hlt add fucomi dec out cmp mov sbb cmp jmp xor xchg push out xor jmp in shl in out aad in pop nop cld adc cwtl pusha hlt movsb rcrb push aad push out das mov out pop mov push (bad) in sbb pop mov add cltd loop adc add cmp aas push pop lods (bad) (bad) push insb push sbb mov push out dec cwtl add fs test (bad) sub xchg inc rcrb enter out lods add mov pop fdivrs mov mov push fidiv cmp xchg loope out es jnp pop adc cmc shr mov mov scas out add mov mov gs fild iret pop cmp fsubrp or das add dec cmp sub js std scas or dec in jae dec or xchg cld leave cwtl sub out mov adc fisttpll pop adc addr16 int3 push out bound inc movsb xchg loopne out push nop xchg inc and dec movq mov nopl push jnp out push sub add bound out insb jg cmpsl fidivl dec ret imul out jbe das (bad) xor sbb les (bad) cli add pop cmp jl mov push jmp stos lock (bad) movups imul mov sub mov ret adc pop fstpl mov ss out cmp mov pushf insb push xchg lods ljmp (bad) insl jno dec jl and fwait popf out jns adc adc dec out dec jp scas (bad) stos sbb in jne sub sub pop je pop int3 cmp out cli inc sbb xchg push add out mov pop arpl lcall push sbb mov pop mov in stos xchg sbb dec mov pop mov mov jae test push out sti push mov aam out push icebp jb mov sbb push push sub push out out xor pop mov cltd mov fwait movsl adc es out cmp dec pop (bad) iret xchg (bad) pop out (bad) jb out sub hlt pop cld ss test cs pushf adc and out aas or repz mov add xor in lds (bad) (bad) mov jb outsb out ficomp push push or (bad) sbb out mov test outsb adc out or mov and fwait call jb cmp insl mov push xchg jmp push cwtl out jno xlat xchg sbb (bad) or push pop mov push out jmp out pop insb xchg jno cmp inc (bad) or sub pop sub pop sbb inc jb dec (bad) addr16 mov cmp loop hlt fwait aad adc out stos lcall cmp in mov sub pop out xchg pusha mov cmpsl inc jb out cmpl rcrl repz imul push adc out xor adc xchg jbe mov mov lret mov out fsubs xor pop cs dec and inc dec xchg popa (bad) mov cmp sbb shl shr icebp mov pusha pop iret add mov (bad) ss jnp jmp (bad) cmpsb or out rcll gs push out (bad) lcall out sbb (bad) sub xor out aam int mov hlt push or add sbb fucomi cmp sub stos xchg mov cmp pop out push or insl cmp or rcrb inc xchg inc aam out iret add sub mov arpl jge adc ror sbb or lock out and mov pop in pop sub cli outsl loop xor out or dec (bad) daa aad jb adc cltd cwtl stos add xorl mov shl sbb aad cmpsl out push mov (bad) popa out outsb daa cltd jns mov in das adc inc std inc push iret mov dec loopne data16 cmp pusha mov sub int adc jecxz inc xchg pop out cmp mov imul adc xchg sbb mov movsl gs xchg push mov stc adc mov in mov push xchg add js lahf out inc in xchg cwtl inc addr16 add movsb xor fistl (bad) lods popf out sub into pop fdivrs mov clc pop test loopne fnstenv enter fisttpl ret movsb scas adc push (bad) (bad) out nop jp scas outsl mov xchg push stos jmp pop ja push push out push in mov fnsave push out test xor push out into fistpl mov iret (bad) out loop shlb out cwtl xlat push mov xchg jge jmp push clc pop xchg hlt scas pushf out je and cmpsl movsl dec repz mov jns loope test aas sbb rcrl xchg mov pop shr scas out addb cli out push mov xchg out mov (bad) gs sub pop dec out scas xchg xor mov fcoml mov cld aad cs arpl add rcr out pop push in testb test gs hlt and mov cmp mov xor out adc lods fdivr push ret (bad) je add iret xor cbtw sbb lock pop sahf pop xchg jmp pop repnz in sub or push imul xor test popa loop mov lods sarb mov fstp out out pusha in sahf adc outsb gs inc ja mov cmpsb test imul or out pop mov dec ficomp dec dec cld cmpsl loop mov popf cmp add roll fsubl fiaddl xchg call out pop fstpt add fs gs pusha sub jge test (bad) (bad) fsubr cmp fnsave jmp jb cmp scas adc lock ficoml lret pop ds xor int les in ficomp push ret adc out aaa push mov iret pop jb and pop out addl (bad) out pop inc cmc mov shll mov int lahf mov insl hlt push aaa out inc fidivl push out mov xchg dec std out (bad) jl aas pop inc and (bad) sbb and movsl mov cmp jecxz in mov pop popa push mov cmp pushf lock jae lods mov mov cmpsb loopne iret xor or fsubr adc fs inc out xchg rol lock push xchg xor pusha pop jae out lret pop cs (bad) in mov rcrb or fidivl jmp loope push inc xchg aas dec cmp inc insb out dec sbb int3 out mov cmp (bad) int std push out jge dec ds push out inc cld jge push cmp daa cmp movsl fild cld (bad) ja push pop sbb fs xchg sbbl sub pop leave and inc in and cwtl mov adc ja es cmp fsub mov addb jmp cmp fild dec sahf clc pop pop xor lea sbb jmp aas cmc iret test ljmp mov sbb hlt loopne jb jle lods jecxz add xor (bad) push adc pop fucomp sti shrb add and test fwait call hlt loope outsb movsb dec sub mov insb cmp sti cmp jg pop das loopne lcall dec or xchg movsb cmp inc jne ret mov js mov movsb mov add out (bad) call (bad) inc gs out fidivr jae add imul push ljmp sub data16 dec aas lret push cmp imul icebp push cmpsb into out lods pop mov stc jmp mov flds pop iret lods adc (bad) xlat out icebp lea mov out fs in add test jle mov add push add sub int3 stos out mov adc adc sub std insl add nop pop mov popf aad push aas das out mov daa dec push ret insb mov adc mov dec sub push sbb lods enter and cmc push cmp shlb xchg mov les mov lock mov dec mov iret cmp out dec dec stc popf loopne xor popa push xor (bad) pop (bad) call out sahf les out push cmp (bad) out test adc dec psubsb ds mov negl (bad) out fisubrl xor sbb or (bad) stc flds and jle mov stos test (bad) out cmp clc fs adc and call stc es cs cmp test gs mov mov and lds jnp mov dec pop mov add dec sti jl inc sarl cmp sub outsb icebp out pop inc pop and outsl out inc mov dec repnz insb adc out inc aaa jne hlt mov and jbe push xor mov xchg lret cmc and and jb call imul ljmp mov out jns jl (bad) mov xchg lret sub test test xchg cmp pushf (bad) mov ret jecxz pop mov xor iret fs jb mov pop loop push or mov jle mov into fildll sub mov xor (bad) icebp pcmpeqb addr16 rcrb fst inc aaa mov sub js int3 add ljmp leave lcall mov lock mov xchg jg sbb pop jge inc out or lahf sbb cs (bad) cmp xchg insl data16 cli (bad) test jno popf out xor and pop pop ja pop sbb inc jbe out fadds push and mov push pushf (bad) roll cmc adc or addr16 cmp lcall mov mov out jmp out sbb xchg and leave out rorb sti cmp sub aas xchg mov lret (bad) out mov ss cwtl adc mov xchg xor out inc out xchg push push cld mov ret cmp hlt push out adc mov push fwait mov xchg fmuls cld sbb (bad) cmp cmp or ja stos (bad) out loope popa and out movsb or aas jb inc (bad) lock out (bad) repnz push or fwait dec fidivr jmp pop out sub ret dec cmp in fdivr lods hlt jno jmp out dec bound sub inc std out push sar inc in dec (bad) sbb pop pop push pop sbb gs fist loop or sbb xor out jb fcmovbe dec lods lret xchg sub ss lds out sarl outsl incl dec in call xchg out mov mov jne (bad) out jg lahf mov andb sar fsubr out jo mov pop fucom movsb xlat test insb add aam sbb adc outsl loop mov pop (bad) bound and xor push movsl out popa js out fdivrl sub pop out xor std cld ret out and in into mov cli or stos jp mov in loopne adc js sbb out sbb out stos push repnz sti cltd xchg out (bad) xor (bad) jge cli out sub mov push (bad) jp das mov jns out sbb ja cmp into imul mov push mov dec hlt call xor mov mov in fstpl icebp inc mov daa jns push popf dec gs mov ret sarb out in xchg push (bad) int3 out (bad) hlt jae lret adc xchg xchg xor scas xchg sub cwtl and addr16 push mov (bad) add out sub js pusha pop test add aaa sbb popa push scas pop jmp out jmp dec pushf push bound out mov gs int3 sub (bad) repz ss sub or or adc out add pop in repz out data16 popa imul shlb loop loope fwait add jae push in decb flds popf out jmp adc in and arpl or or (bad) fdivrs adc xchg lock sub (bad) je jecxz mov xor jle ljmp out into movsb pop mov out mov cli push hlt pop dec daa arpl pushf pop out cmp fsubrs in daa sbb mov popa enter pop pop xchg or mov shlb cwtl mov mov (bad) out xor cmp aad mov sahf sbb pop outsb pop out icebp jno (bad) in out sub pop movsl dec in mov bound out xchg fidivr dec (bad) in out in fist loopne ljmp out jmp dec or gs out stos sbb int3 jb test (bad) jne inc pusha mov lret dec jle or in cmp xlat and xchg cs out sbb mov adc mov mov jbe dec (bad) ss mov push in cmp lods out and and out mov cmc dec cmovl adc xor stos pop imul cmp jnp es imull ds pop jmp loope pop xchg mov cli cmp pop incb and (bad) jns,pt stc pop (bad) aad mov pop (bad) out in lret cld mov xchg call fistp jnp adc cmp vorps lcall loope cs jb mov inc stos and or push gs xchg loop bound jl in sub mov cltd dec mov pop xchg (bad) out pop je push out pusha adc sahf mov nop dec imul mov cmpsb icebp jl stos scas ret imul xchg mov xor adc adc out adc sub cwtl loop mov jb xchg out push cmpsb les mov out xor pop sti out daa jo lahf inc add xchg out xchg xor or sbb mov add aam dec lahf mov inc daa out xchg mov xor add inc xchg shr jecxz popa mov jo add mov inc lahf stc xchg jae mov scas mov lea (bad) lods out xchg mov lret jle pop xchg clc testb popf fadds das (bad) pop push and and inc insb ds lret es outsb or and jle xchg lock or subl out rcll test ret loop pushf pop inc xchg dec sub mov stos out or adc imul pop in cmpl iret pushf imul idiv (bad) dec stos loope sub imul insl add xchg test adc dec jge out loope push out jns xchg cmp push pop pop in out pop push xor adc les fcomip cmp shr sub repnz lods ja stos (bad) (bad) push xchg pop push fcompl std push test inc out cmpsl pushf icebp cmp out insb cld xor sub adc jge test out (bad) pop (bad) scas xchg arpl call cmpsl xchg push in outsb pushl jmp xchg out xchg pop data16 gs imul push jp jge mov stos jmp jb sahf cmp mov add popa mov ljmp pop shr mov ljmp test push out sbb cmp lods dec sub insb ret inc mov adc jl jg mov test daa mov (bad) and leave out xchg imul out (bad) movd mov stos out push sub repnz mov cmp pop inc xlat mov rcrb push adc (bad) scas cmp inc pop jmp pushf (bad) adc mov or ljmp xor scas ljmp add jmp mov aam sbb pop pop out cmpsl repz je jb loopne hlt cld loop xchg fist xchg mov shlb fdecstp das xor or mov mov lock add mov outsb jbe out push aaa andl out es xchg mov data16 aas out and out pushf mov test push sub lcall push push cmp sarb shrl mov and stc in outsb sbb enter xchg cmpl and out cmpsb push or sub push lret pop imul xor addr16 inc push add sarb iret sbb cmc adc mov dec test out sub inc adc incl imul jns or fwait push out xchg imul inc addr16 out sub jmp arpl out repnz enter (bad) push divl sub shrb mov lahf xchg sub jo lret mov outsb out pop jmp pop xchg adc xchg sub pop lock cmpsb pushl addb jg int3 sbb sub jno out cmp out (bad) pop dec push lcall push inc movsl sbb inc jnp jl out sbb pop out push jge xchg add (bad) out rcl mov sub pop push sub xor out mov push and out js push ljmp inc loopne clc jnp leave pop or dec push xor xchg or jb sbb xchg push cmp out gs lock aas pop sub xchg (bad) sbb adc ret (bad) out cmpsb addr16 jno gs push loope xchg inc xor adc dec dec test das add cmp popaw (bad) xor mov out inc hlt sti aad dec cmp inc adc push movsl add mov ljmp mov mov jno addr16 in pop dec aaa pop out add hlt cmpsb out (bad) notl jp jno out push in sbb mov aaa ja arpl sub or xchg mov cs sub mulb push imul dec lea push pop outsb into pop add cmp adc call cmp out repnz pop sti sbb clc sbb and mov fnstcw mov (bad) movsb es out mov roll test psrad xor or sub mov pop shrb ljmp out in jns push or xchg and sub jle mov push jl rolb mov add or pop push addr16 cmp mov out inc adc push push lahf add push add jae jecxz fadds out insb das adc out fnstcw cmc (bad) xchg cmp loopne scas imul orb jo outsb mov out dec int inc fs out pop test mov iret daa outsl pop xchg (bad) adc inc jns out (bad) add xor das or int3 jne ljmp inc out enter lahf sahf repnz and dec out das sub pop pop aad push add sbb dec push mov insl daa insl cmpsb inc out xchg mov lods out frstpm(287 mov fwait lahf pop adc cmc daa jb testl sbb or xchg in pop mov add mov out add add mov bound jg (bad) push insl ljmp and cltd outsb sub jecxz and pop int3 and out push pop pop push cmp out pop out roll and aas xchg cmpsb int out pushl shrb int add push pusha mov and cmp adc pop jp and ljmp xchg xor sbb jg ljmp sub (bad) (bad) out in outsb adc addr16 jns fnstcw test hlt mov jmp out sbb outsb mov rcrb jno (bad) mov sahf or aam or cmp int mov sub movl iret lret in call adc insb push jbe int out aam or pushf nop push flds jno mov les pushf lock mov icebp jl cmp gs cmpsb dec out pop (bad) and sbb test out push mov push out (bad) mov inc sbb push in mov hlt jle out push push inc stos mov push jp in jmp adc xor or (bad) sbb insb sub sub pop out inc mov stc ret out shrb test out or lahf lods sub push pop stos mov mov dec cli mov mov loopne pop popa jg xor loop cmp stos cs ljmp pop mov (bad) xor test (bad) js mov adc jno inc (bad) jmp cmp push mov bound xchg pop adc pop mov and divl out stos outsb add imul jae jmp and pop mov cmp bound ja sahf xorl aad scas push mov outsb pushf int cmp push imul ret mov (bad) xlat xor or (bad) jb out cmpsl and pop lock out xor arpl cwtl lret out sahf mov jge out push dec xchg idivb push mov mov int3 add daa out sahf imul (bad) push cmp stos adc clc mov out cmpsb dec js pop push xchg pop inc lds (bad) cli cmpsl out inc add inc popa imul cmp jl mov andb xchg mov add out lods jg out push popa enter push (bad) mov in int mov mov ss inc dec stos fs dec pop push aaa xchg outsb loopne mov lret dec shr scas pop pop leave mov cltd and add aas mov out aad pop out dec inc and push repnz fiadd andnps sbb xchg std out mov mov call enter out xor pop mov cmc cmp (bad) or ljmp out out leave mov ja xlat out dec mov fistp mov out lods in test push cmp inc femms iret mov add loop or (bad) sbb pusha or ljmp mov andw divb adc imul pop mov xchg sti xchg in loope or pop dec hlt push shr jmp movsl jle sub (bad) cmp ljmp mov fwait xor (bad) mov dec cmc out cmp jne out pop push dec jb stos out jno andl stos int jne out enter (bad) jp addr16 sbb sub call or int3 mov out lahf mov in xor loope mov das and pop lock loop mov dec popa out rorb or inc (bad) and das pop lret xchg lods mov jmp out and pop (bad) cmpsl cli sub xchg jl loopne fsts mov popf insl in clc pop rorb mov sahf push dec daa in pop scas cmpsl and scas dec mov imul dec jp pop das dec push adc loopne imul push xchg fisubrl xchg mov jg jbe dec out push pop (bad) inc cmp out sub in movsb or sbb daa jo mov pop aad out sub jne adc into aam rorb pop incl fsubr loopne sbb sub cli (bad) xor arpl aas push jne hlt out mov lods out push push sbb out cmp xchg mov pusha inc inc decb or sbb mov es jmp or out or push scas dec cmp out sub fidivrl test sbb out and sub inc xor icebp out shrb mov push or sti inc sbb cmc dec push xor decb fwait subl jg fs iret pop jmp mull into out mov lea sub (bad) and jmp gs out add xchg ss out popf aaa icebp ds mov cmp xor daa or out mov push aas loope pusha (bad) js and jecxz loop dec stos out push mov and push (bad) in pop jge push data16 pop or imul je add roll add push jne pop out fwait aad lahf out or sti lcall jne add cmp xor out jle (bad) mov adc cmp es insb stc scas incb and in mov sbb adc push (bad) adc out mov loope cld lods popa out lock mov lods push inc (bad) mov into cltd insb in jo pop fwait popf sub mov cmp scas out stos negb out cmp repz ljmp stc cmp imulb dec xchg push sub jb out popa xor jns repz sub cwtl inc jbe jno push xchg mov in adc scas out adc lea icebp lahf cli push in cmc jne sub xchg adc jno imulb out mov fiadd out fnstsw push mov cs out xchg mov pmullw mov xor ret aas and out aas push loop in mov lods inc pop test and out imul mov aas mov jecxz (bad) out lret scas adc fsubrs fbld mov out in rcll cmpsb xchg add sub out (bad) pusha mov pop fildll rclb daa pop cmpsl dec cld out push or imul flds mov jp (bad) call push out (bad) sbb xor (bad) and test out mov pop push inc lods sbb pavgw ljmp scas outsb xchg dec std mov pop push mov cli hlt addr16 sbb mov push lds push lea jno iret (bad) loopne cmc outsl mov or mov out les inc sar popf loop outsl fisttp inc out sbb mov out jbe and scas (bad) cmp pop (bad) loopne push cmpsb nop pop out xchg mov and mov out in pop rol ja pop mov in sub lret out push xor loope adc jp push mov call pop and ja sbb lret cmp cmp sub lret imul sti or imul enter lock jno and out mov jl sub pop dec jo push in in adc ds sbb dec fimull mov (bad) out xchg mov dec incl out mov daa mov and or test xor iret ja cmpsl dec cld imul (bad) pop jle stos xor data16 gs adc insl pop stos out mov out and bndldx fisub push cmp mov push subl cltd add push mov movsl pop fnstsw add cmp mov leave pop in mov lods out cmp mov push mov adc lcall mov push mov js das mov ret mov jmp mov into addr16 (bad) in mov cmpsl scas in mov ss in xchg popa lea add sbbb out fsubrs out ret jg mov and addb inc push out xor mov hlt (bad) xchg and sbb std inc loope inc adc outsb (bad) sub adc inc aas inc insl call push lahf jle imul sub aaa stc out fnstsw add test xor in cld hlt fsubrs (bad) out mov mov xor in (bad) mov in xlat xor in out out sub jp dec (bad) aad dec jb icebp out faddl sti mov cmovge pushf fs out mov out push sti adc shl repnz mov add or movsb mov out cmp test data16 lret adc sub js adc out push call cmp out jle dec into fidivr cmp sbb add cs dec adc popa push push call testl out jne sbb out cmp sbb addr16 push add pop scas mov inc repz xor dec out pop lods inc sbb inc frstor lret js sbb adc pushf out or adcl add aad cmpsb popa mov ljmp (bad) sub and jge (bad) ljmp shr mov pop adc out sbb arpl in out mov sbb xchg aaa out (bad) xor push gs mov sub in mov leave mov or mov mov enter push push arpl pop shl inc (bad) out test mov push (bad) xor pop mov imul pop sbb mov fistl mov push out in enter mov imull loop ljmp mov (bad) xchg mov daa out push sarl test jge (bad) out jp inc push xlat lahf out push ret push push stos push out push test sbb lahf out sti xchg add out movsl pop push aad adc sub jb,pt outsb addb mov push xlat push outsl (bad) out sub je or pushl ja jnp dec in push (bad) adc mov repnz push and out add mov dec xor mov mov or loope loop pop enter ret stc mov je dec adc shl sbb inc and sbbl xchg lahf out sbb and dec mov cwtl out jl inc push and loope jne (bad) popa arpl fs out adc adc fucompp xchg out sarl pop out (bad) loopne mov call lahf out and jl inc das jmp out sub mov push lahf sbb mov jg daa (bad) adc mov dec fsubr xchg out scas in cli shll out push push jnp sub stos (bad) jns jge add testb cld jne out jo lea cs bound je fnstcw out add mov xor out movsl jg leave les cmp mov aas addl pushf leave (bad) (bad) test jle xchg mov mov xchg mov nop push ljmp stos pop xchg insb jnp push in sub out mov mov sub jae out aaa inc arpl bound scas xor pusha jnp adc lock and out xchg into ss jo test or pop fwait (bad) dec rcr in insb or inc adc fild sub sub jg outsb sbb out sbb add repnz addr16 fistp fild pop mov push xchg dec js mov (bad) mov call cmp dec loopne stos (bad) out insl dec daa push sbb jbe out in sub sbb pop sbbl pop ss push lret in outsl out out das and data16 add jecxz inc out aas xor push scas aad pushf xor lods out pop aaa and push repnz bound movsb adc rcrb ja sub pop movsl push push icebp loope out scas lds (bad) das jo xor pop addr16 mov add cs push inc sarb jle js shll in (bad) aad sti jns (bad) cmp popf (bad) dec push in scas pop cltd push int ficoml mov mov imul int mov outsb adc addr16 out cmp hlt icebp loopne call cmp adc lods or roll rorl or mov adc push sahf sti pop (bad) fsubr or cs and pop and add repnz popf push add add jmp in cmp aam mov lods bound incb lahf jl (bad) (bad) out or in and adc jns and sub pop iret js push mov out and or insb out bsr mov and mov jl scas ljmp das mov orl int3 mov movsb pmaxsw cmp and push fucomp push mov mov out mulb mov push adc lods test (bad) test out jne in fisttp out jb inc pop data16 jno push cld sbb out pop outsl push in scas mov test (bad) fmul imul mov sbb xor insb loop and aaa nop mov cs out jge jae jg xlat lret out xorb inc out adc pop testb out adc out lds nop hlt add sbb cmp cmpsl mov nop jb stc sub ss daa das adc cs xchg mov sbb xchg push mov cmp incb je in (bad) jbe out js push cmpsl add decl pop mov out lods out and cmpsl xor add repnz dec cmpsb cmpsb nopl shr pop mov xchg int3 cld out cmp ds iret test cltd out je or arpl jno lret mov iret push out mov cmc out shr add aad out (bad) aam xchg lods out add fsts push in lahf dec shrl in cmp movsl jmp dec or fadd out sbb mov jnp sub add out push jmp jg adc out mov fstp loopne pusha pop mov push jmp out sbb dec lret inc xchg or out jecxz and cmp cmc (bad) mov out and sub mov (bad) and out xor dec test pop cmp push xchg push out mov xor enter push dec decb (bad) xchg or fwait lods out mov movsl pop repnz pop daa mov xchg test iret aaa dec pop insb out pop pop repz shrb (bad) mull aam sbb imul dec sbb outsl xchg iret jmp or pop push mov lsl nop push cltd fucomip pop dec gs push pop pop push (bad) adc (bad) pop scas xchg fmul mov inc jne shl lock pop and jb,pt out fldenv imulb and out cli sahf mov jle pop mov out pop bound sbb int3 pop sbb shr (bad) jae jge test clc out aaa mov (bad) mov enter negl incb inc out outsl push mov jge cmp mov js xchg xchg (bad) mov movsb mov xor mov push lret xor out mov mov mov jnp out ja and adc and mov pop in out fsubs jb leave decb addr16 pop insl jecxz (bad) icebp paddq shrb push (bad) out loop enter pusha out xchg testb or inc xchg imul xchg sahf pop add scas add stos out mov (bad) xchg dec out in add out xor jl ss sub mov add iret or push movsl loop jo xor (bad) xor push (bad) jae add and dec add adc cs clc inc int xor test jl out sub inc mov or add scas out dec pop nop leave lock and jle jp insl (bad) dec (bad) sbb imul out jmp scas out mov xchg in call xchg lock in out cmp cltd dec ljmp pop push out jecxz and adc jmp and push lock out std xor rclb or dec xor jns sub mov rclb addr16 sbb movsb out mov push inc out out mov out add sbb (bad) lahf jns aam out in daa out (bad) enter ss cmp sbb add scas (bad) data16 dec call out adc and bound out leave pop (bad) cs jns sub adc out sbb inc call out cmovge push cwtl sub mov out int fnsave (bad) fdivr adc sub sub push mov pop and adc out xchg jecxz adc loopne call in push mov mov cli mov sub push (bad) xor cmc scas mov out adc pop lock (bad) sbb mov negb stc sub rorb es ljmp lock pop add mov xchg out mov push shr mov bound pop mov inc xchg cli popf call add sbb jp pop inc mov add je dec out out shrb movsb pop add push sbbl and adc xor lahf cmp mov pop test mov imull fs out push add js inc out sbb mov mov xor lock out sbb sbb fistpll and out fs mov mov les pop (bad) or add arpl stos cmp ljmp pop push and pop stc add movsl jb insl cs xchg mov insl repnz out pop scas out cmp mov dec icebp fnstenv sbb adc daa sbb stos les out in jb std jp sbb insl push addb fdivrl outsl out cmp or push adc inc popl xlat jbe out pop dec mov iret out add and mov mov out push dec mov push xlat sbb dec or in mov jmp sub data16 lahf (bad) jo add xchg mov mov and adc stc dec push je or adc xor jle adc test out repz jo mov cltd pop lret xor leave out add mov mov xchg add sub push out addr16 and out sub adc pmaxsw leave sub loopne dec arpl push pop mov or aas shr fstpt mov mov inc mov xor mul (bad) lock jg aaa jg push out dec xchg aad and (bad) pop imul fnstenv nop popa data16 xor xchg pop sub jl pop push mov (bad) and jg scas cmp out or roll int orl xchg push pop aad xchg fs out cli icebp cmpsb in movl cwtl push out fwait cltd ja (bad) ljmp dec out sub pop insb aaa mov jae popf mov flds jle das loopne (bad) ss fbstp jo dec out in popf sahf lods pop cmp sub sub aad (bad) sub out aas (bad) call inc lock dec je sub addb arpl lds dec daa in nop xchg shrb jmp out xor out (bad) aam jle out mov mov adc add lea push jg cld adc daa sbb not dec ret scas xor out or jmp movsb mov xchg mov mov fcmovnbe mov cmp pop mov insl js jg divl fdivrp mov aam xchg repnz adc and insb out mov leave int lahf icebp xor mov pop or adc out call push (bad) xchg lds cmc or out fist xor xchg mov xor xlat cmp xor or pop imul xlat mov pop push js addr16 out xchg lcall out sar jne (bad) dec mov or add add sti rorl out cwtl insl push and repz pop jecxz rorl clc sub inc out mov adc stc out or xchg js out subl sub paddusb or sub outsb mov out push out add pop stos lods jno out es fdivrl ss cmp fucomp mov out scas movlhps (bad) cli mull out cmp add iret push pop pop lret repnz aaa push fwait stos es test gs xor rolb mov jl iret sub stos push out dec inc cli sub jg xchg and or jbe js test jl data16 sbb pop fadd and gs es divl xor sub fprem popa sbb push cmpsb sub scas add decl out cmp sbb lret xor mov hlt or jnp jae inc stc mov cmp cwtl lods mov dec inc daa xchg jno push (bad) adc mov xlat neg lock data16 push out in push cmp out pusha fist stos lret imul adc pop notb ficoml aas pop mov xchg xor pushf (bad) scas out and (bad) aas rcr aaa jno hlt pop push cmp xchg push das call push insl push out pop sub loopne scas mov jp cmpsl cltd and push or inc iret addr16 lret lret fsts iret loopne out jne fs (bad) jno mov addr16 pop mov inc (bad) scas (bad) push out popa gs xchg sarl (bad) (bad) fucomip in pushf xor movsb pop out dec in das insb jecxz jmp out xchg aam insl xorl and repnz mov packsswb adc xchg mov sub push popa clc cmp out mov mov imul ret repnz ficompl out dec negb jmp xchg rcll test mov push mov or sbb pop xchg movsb incb dec outsl pop adc xor and rclb loop (bad) adc inc aas and fucom call out or cmpsl lcall mov arpl jns pop and or fbstp insb ljmp and hlt lret addr16 mov mov ljmp arpl pop lock adc inc push out mov mov ljmp mov outsl xchg loop jp scas cld mov sbb mov sub outsl outsb test dec into out mov push mov out cmp in adc int3 mov adc xor mov mov out std mov lret notb lea jbe inc mov enter fdivs mov sbb pop lea cmp push xor inc das insl pop clc xor add dec jno insb push jmp push icebp test loop loop dec mov call or mov sbb pop xchg mov jle xor jo fbld xchg lret popf ljmp push xchg sub outsb adc (bad) out xchg mov das out xor setg add xor and int aas dec and scas mov in out and push push out dec push popa sbb ljmp xor push movsl rcrb push rep jge fisubrl leave test int3 repnz sbbb iret mov daa pop sub addr16 sarb test out xchg popl jo push jg fildll out cmp mov test jmp jae or mov sub fistpl mov inc xchg push scas push cmc dec sarb mov hlt and xor out and push pop adc stos sbb push lods (bad) pop addb fldenv fsubl int3 jmp xor addr16 lcall cmc and mov xchg outsl pop popf push and jge jns test sti push mov sbb movhps inc scas xchg loop lods (bad) out cmp test xor mov lcall xor pop es fild in cli cwtl cltd fsubrl sub ljmp mov push push out adc es mov sub loop jne (bad) ret xlat jl andl cmp push cmp pushf bound mov sub jb icebp loopne cmp sub fs or out adc out cltd les bound sub fmul pop adc movsb add push fs lods or rcll (bad) icebp lock push aaa les cwtl xor addr16 mov xchg jl lock movsb sub cltd or out lea jae out rolb inc es or lahf out pop pushf cmc call out idivl mov xor and adc mov xor add pop rorb out cmp enter clc jo scas fsubp ret mov sbb dec cmp and inc inc mov out sbb cmpsl add scas jne stos sti sub xor setbe pop jl dec ljmp movsb inc or pop (bad) scas mov mov jnp out pop ret inc pop adc imul push loop adc pop xchg sahf repz aam test in mov into idivl xchg out jno sar aam popf out ljmp je call dec or out xchg mov aam and iret inc mov push jp push mov out jecxz sbb pusha in cmpb pop (bad) push pop mov mov pop rcl test je out add cmp pop out pop cltd mov push pop or inc out aad xchg das push push lea cmpl inc sub jmp sub popa shr inc std lret pop dec int3 out jg cmp pop (bad) sub dec sbb sub inc pop pop xor cld insb loopne push in out call sbb cmpsb cmp mull inc inc xchg rorb sub sub ficoml out movsb xchg xor jmp mov es mov sbb mov cmp or arpl push jb sbbl push mov in add aas or xchg in (bad) cmpsb vfnmsubps ret stc jl push insl pushf js insb repnz fnop dec insl add adc sub inc cmp out jge mov fucomi in jg sbb fwait pop pop popf xor adc push mov add leave jnp fcompl rcll sub sbb outsb mov pop popf mov xor (bad) out sub sahf lea cmpb jg mov mov andps inc shrb imul and orl in addl adc out mov mov jae and scas cs mov ret dec push xchg mov je xor das pop jne cmp fildll (bad) out ds push cltd jmp adcb out insb fdivp mov sbb out xor cmp add mov dec out mov xchg push inc adc mov add loope fist gs in adc test mov mov in xchg adc into push lock xor ds out cwtl sub pop sti adc push in (bad) in inc push pop mov test lret jg pop adc lock outsb (bad) mov adc aas rolb xchg call mov ljmp mov test in add bound out add data16 ds stos pop and jne and lods out inc adc into in jmp fisttp push inc dec sub insl cltd loope out stos and popa out bound and rcr mov sub int3 out pushf cmpsb pop sub pop in out in out daa cmp push out (bad) jb out dec cmp push xlat jle fmul jmp cld pop xor xchg jnp aas dec out cmp and mov js addr16 cli out sub xchg pusha sub push xor adc out jb int3 fwait rcrb sub sub xchg sub in push xor scas mov jg add mov adc dec cmpsb xchg ljmp (bad) loope lret add sub dec push and or out push es int3 dec cmp cmp pushl and out sbb imul scas cmp ss jb add xchg lcall push mov nop leave shlb xchg pop sub mov pop flds insb (bad) std jecxz leave lret mov push mov or dec (bad) pop cmp cmp xchg mov insb fidivl out xchg test add mov out idivl and bound dec cmp xchg or out add in stos dec out out pop loopne popa cs xchg iret jbe es fnstenv pop sbb out mov mov out xchg fstpt push out idivl xchg xor and jg fldlg2 inc sub xchg add push ljmp aaa out push jne and inc stos out sbb ret cmp add out outsb jb push jo or insb jecxz inc inc out sbb xchg rcrb (bad) sub aas in into dec mov cmp dec loope cli push out out test mov out sbb pop mov das lretw in sbb pop (bad) lcall mov inc call mov fild loopne das lock sub dec sub jae pop cmp sbbb out mov jne int3 xchg inc leave fwait xor mov xchg into dec jmp insb jno je insb jmp jg pushf adc out xchg xor out lods mov sub out mov popf xor push and xor pop mov adc imul decb out iret sub jge pop rclb cltd psubsw imul mov cmp and in dec insl jg out sti subl pop cmpsb lea test and xor out jge adc adc (bad) (bad) inc pop call push sub jmp out jno iret rorl cmpsb es xchg out lock push or jl xchg pop cmc lret addr16 adc mov (bad) mov out inc push cmp out xchg jmp dec push mov fwait adc dec js loop pop es lods leave push pop lods xchg mov out arpl das fdivrl push and lcall out sub lahf xor pop sub outsb cmp iret ljmp dec lods mov (bad) outsb fistl add cld ffreep push push xchg and es xor call out mov repz addr16 enter add cmp push add jge adc cli mov out dec das fnstenv orl adc out ret cs mov loope jb mov imul cmpsl out sahf pushf jns cmpsb cmc test scas jmp repz cmpsl clc notl lods (bad) test jnp test pop (bad) pop push out mov inc push add out movsb adc call out pop aaa dec xchg add add rcr cmc sbb cmpsl test outsb and enter test out in cwtl or shr (bad) mov iret add aas jns insb push xorb adc mov out cs lock dec ja or jle lahf push mul addr16 xor xchg out in or push sahf (bad) mov pop ret xchg in jbe (bad) pop testl lds (bad) aaa and scas das sbb xor pop cld popf aad push popa loop sbb push les mov push xchg insb inc pushf loop fcomip cmp mov clc in push outsb lcall test adc mov pop dec data16 pmaxsw test mov mov mov out iret and arpl (bad) mov lret cltd out cmp push rol xlat leave mulb out fcmovne and jo in out jne dec xchg pop and enter adc jge repnz jno pop nop jnp in popf jbe daa mov xchg fucomp call imul cli dec pop mov cmp clc pop lock sbb pop sub fdivrp jmp fnstsw out (bad) xchg pushf push mov inc shl pop adc inc add out inc sbb jne movsl cmp push sbb (bad) bound shrb mov pop mov inc add scas push bndldx in hlt xchg xchg lods out add sbb pushf mov ret std lahf out stos pop (bad) mov or out push pop xor lds adc pop pushf mov xchg mov lahf push jle addr16 movsl sbb mov adcl push ret jo add pop ret and daa push in jmp lods mov in shlb out ja mov dec call sbb out jmp in ja push ljmp sarl (bad) out sub xorl rcr and prefetcht0 push push sub js mov in push (bad) jo adc jg out dec push cli es out xchg cmp mov dec add scas xchg xor dec daa dec test mov in ds inc jmp adc mov add (bad) inc aad ljmp (bad) ds and adc jno out push xor outsb mov ljmp xchg and pop push xchg sub mov aam loopne adc (bad) sbb mov (bad) mov mov cmp loop xchg adc cmpl in pop femms mov es test jne mov adc dec outsl xchg mov jge mov mov mov in (bad) aas or mov pop pop ror outsl mov jmp out push mov out mov movsl sub insl in push out and daa xor out cld adc mov xor out imul lods add jle (bad) jne popa mov cld dec ret jb addr16 add call dec push xor in aas out in ss pop popa pop mov ret insb roll and cmp xchg push mov mov mov dec lahf add gs test and mov aaa sbb pop test imul or jl sub mov pusha dec mov xchg jo pop adc mov sub icebp pop lock mov cwtl ret xchg xacquire or sub jbe dec sub sub fistp lcall jp add lret test pop imul push (bad) scas into dec popf popa or cmp rcll xor push (bad) iret (bad) cwtl add ror (bad) out (bad) xor outsb inc xchg push decl lret out pop int sahf inc repz bound sub or push fwait xchg pop jmp push ret loopne pushf iret mov pop adc (bad) and mov movsb fsubr and out pop data16 jo jne cmp lds pop mov adc in test mov shrl iret mov and dec push (bad) add (bad) movsb sbb aad shrb pop das arpl ljmp out idivb xchg and jp pop add fcomps insb mov and fist out dec inc rcr sbb mov and test push cwtl imul out or pushf out fsubrs jno ds dec incb mov pop in xor push out aas mov cmpsb out dec mov cmp mov pop (bad) and adc fwait cmpb lock out es mov sbb inc adc or enter add out cmp cmc inc sarl sbb add aad out inc dec dec pop mov cmp out adc xchg int3 dec into sbb pop out pop inc stc dec pushf (bad) (bad) out sub pushw out int3 push dec and dec out mov addr16 mov cmp add lock jge (bad) and sbb bound push mov jecxz sub into mov sub sub lcall mov loopne test adc sbb out in test cltd out xchg cwtl and out xchg cmp icebp out (bad) mov psubq out popa inc dec sub dec mov xchg (bad) frstor push out lret or adc insl xchg aad enter adc out pop dec out aas push in icebp lret jg mov adc insl imul add mov inc and jne out mov ret iret pop fs xor push add ljmpw adc in mov sub sbb ljmp mov pop adc xchg popf cmc push ljmp rclb fidivrl scas add fwait js,pt add inc mov jae insl dec xchg out sahf loope lods shrb jle stos mov je sbb add xchg stc xor out jnp test pop dec insb sub xchg mov out (bad) fs inc adc daa hlt out jae add imul pop (bad) fisubrl push ss and add stc daa push in fistp sbb inc mov lret insl pop xor lods ret xlat adc leave shrl ja lock out ficompl dec in aas jle mov enter fs out and insl lds ljmp pusha adc sbb lret xchg fnop mov ss xlat pop test dec push sub adc bound mov aam mov xchg out inc xor imul cmp lock sahf shrl popa and imul pop imul repnz pushf (bad) in mov out fimul inc ljmp dec inc pop out insl fisubrl in dec out push mov rcl in cld sub mov adc cmpsb mov insl imull out loop fcmovnb gs shrb cmpsl ret (bad) mov fidivr test xor (bad) pop dec out cwtl ret std (bad) or ljmp out andb mov mov cld push xor pusha rcrl mov (bad) jle sub mov js sbb pop adc push leave push aaa inc mov lds push cmpsb jbe stos rcll mov add insb out mov xor mov and or into outsl inc add push in cld sub das js lcall cwtl (bad) sub lods (bad) sbb (bad) insl les push jl iret xor out push push add jle dec push loope pop cmpl sub imul out push add jmp cs test jnp jmp mov scas test push inc out pop movsb adc (bad) xor and xor aas dec or add ljmp decb xchg and test out ds xlat or out jnp icebp and (bad) xor in pusha lahf shrl mov push loope loop dec or pop dec or xchg push dec sbb insl stos xchg sub mov sub out fisttpll scas in add shr cmpsl or lods pop in ja jbe and je (bad) jge icebp pop outsb mov pop fbstp mov (bad) loopne mov out lock shr inc out pop add icebp jmp dec jg popa or xchg or inc repnz xchg cli call je mov inc or push adc push mov xor pop mov dec sub (bad) jmp (bad) cmc push jecxz xor aaa ljmp cli imul pop and es fidiv lods cmpsl mov mov sar (bad) push sub rclb stos aad ljmp out inc and mov adc out out imul punpcklbw xor cmpsb add bound out aad out loope mov lcall in dec out fs inc mov hlt and (bad) jmp ljmp out imul (bad) push mov scas sbb movsb enter es mov out fistp xor pop lret loopne cwtl adc push fdivrp je xor stos or shr xor xor scas sti roll inc into push (bad) adc shr repz out es (bad) cwtl pop add cli clc mov and in pop adc pop adc leave mov repnz aam out mov jae popf sub pop or xchg insb mov out cli jno movsb (bad) jmp xor out pop add push push loope lret aas mov in dec mov hlt mov outsl mov out inc fstpt jae and ret add inc xor fsubs out add dec xchg lds jmp pop or xchg jl out pop fdivr outsb (bad) sbb rolb dec jge jle ret pop sub imul sahf (bad) loopw mov outsl notl popf sub xchg or (bad) jmp jl push sbb stc sbb pusha jmp and repnz test jns je std add push lock imul scas loop repnz fs inc push nop imul jecxz insb cmp mov bound out cmc int cmpsb mov or dec mov int out fcmovnb pop inc add add sbb sarb in sub (bad) iret dec (bad) mov shr xor xchg insb in dec aam ja sub fmull fist int3 out cmp jns dec mov pop divb sub hlt sub xor push mov in mov in je imul sbb (bad) or or clc loop int3 adc cmc shr cmp dec add out cmp imul push jge xchg lods (bad) xchg pop out popf push inc dec cmc sbb mov out push pushf cwtl pop or mov ss dec std inc xor sub cltd iret mov aas adc outsl out in das cld ffree adc mov aad xor jl out fldt xchg lret or pop mov arpl mov and pop test adc push mov inc pusha xchg out aam pop out ret lcall xchg std mov add cmp push out outsb push dec mov xchg lret sbb (bad) imul in (bad) nop cwtl pop divl and (bad) jae sahf jle jne mov lods outsl aad loopne mov or movsl jae data16 daa out add mov (bad) lcall and pop popa out call pop lea add push int xchg movsb loopne daa jle xor aaa adc mov into mulb cwtl out lods mov jo stos aas test mov (bad) jae push inc lahf out and sti add add imul jno out mov repz lods xchg inc sub mov orb mov test sbb lods fistp in jmp push mov je outsl loope out bound xor mov hlt mov out mov xchg cmp fist push cmp sub xchg jo addb push out xchg imul out arpl sarl pusha cltd xorl mov fild xchg out or lcall mov sbb es mov dec pop jl fisttpl xor inc clc cmp xor mov sbb (bad) iret lock inc mul jmp cmp and fldt fsubrp enter adc pop ret movsb sahf testb jmp jg ret inc cli mov out sti sub mov push ret jl out insb das (bad) pop lods loopne loop cli push pop addr16 cs adc lret es mov cmp into ja mov stos add (bad) in sub cwtl xor dec in xchg sarb cmp cmp iret test test icebp xchg jb ja push cmp out push scas cmp mov and xor out (bad) loopne push sbb aas mov loope scas out adc pop sub cmc lahf test mov out popa dec sub sbb push dec scas stos xor fstpl into and insb pop xchg mov loope inc push mov clc call push push out xchg fisttpll pusha out xor cld daa (bad) xchg ret jae push sbb test test xchg lret std mov inc out xchg push add sti sub pop out mov push fldt out dec shll lods loope dec jae stos jnp and xchg mov jb lcall fcompl out mov lods enter addr16 adc mov push insb movl (bad) push in xlat or sub call and test inc inc jb,pt popa mov mov mov cmp xchg jae sti mov lock mov outsb sub mov sti jl out lock sbb movsl icebp and mov xor and cmpsl iret pop lcall (bad) insl adc pop jns pop mov aam push xchg cmp or pop aaa push loop mov add mov push je cmp pusha sarl (bad) out repz gs fnstcw out push test mov jnp adc aas je repz out cmc pop pop stc xchg mov mov push mov (bad) sbb andl fist iret (bad) jle jl xor pushf out mov add add inc imul pop sbb int3 adc jb das push mov out sbb aas (bad) xchg push jo and lods out pushf sub mov (bad) int3 xchg (bad) ret jmp add in pop repz jno stos dec lahf push dec jl (bad) adc jmp mov fcmovu or repz jno push add hlt xor xchg cmpsl pop (bad) or jb mov inc add jmp in mov ret and mulb mov lock mov push out out fwait inc dec mov adc (bad) out dec mov bound or nop mov repnz jecxz (bad) movsb mov imulb out sub in add push xchg or out insb cmpsl or lods fwait (bad) jne dec aad in jle,pn out (bad) rorb mov repnz xchg out adc sbb lock insb popa mov leave mov out sbb jecxz (bad) cmp fbstp push imul mov sbb sbb test aas jg xchg mov lock repz and and or out jae (bad) neg xchg pop insb mov push push call out in aaa xchg scas pop fadds pushf mov inc mov pop mov mov shll push ljmp out and cld les leave sbb rcll in sbb inc push mov sub inc in cltd aas mov cmp jle clc pop jg cmpl mov fcompl add lcall adc test dec out fwait (bad) flds lret push stos decb inc cld and xlat push sub push int (bad) pop cwtl (bad) out into lods sub fsubs sbb lahf insl int mov outsl push iret cmp lret popf aam test push and ret mov lahf jno out out arpl nop dec out or pop mov bound or cwtl dec (bad) cmc push out dec ja arpl fdivl addl sub ljmp cs out mov std mov fcoms imul je cmp jne dec out sbb mov pop dec pop out mov data16 iret mov mov add out dec pop stos mov cmp out mov fnstcw mov out and sub xchg mov jp ljmp out jl cmpsb push adc out or out jge push cmp dec add ja je fptan fiadd mov push out push mov lahf cmp jns dec lret fucomp ret dec sub mov xchg pop faddl stos fs xchg les dec in insl xor (bad) adc sbb mov push in lods fldz mov mov stos insl sbb out ret arpl (bad) aaa cmp popf mov mov sbb lods movsl mov push cmc test inc out lods leave mov mov cmp out add jp js (bad) out pop xchg adc or add loope and stos aas dec (bad) fucomi cltd adc loope ljmp pushf out scas les aaa rcrl mov adc lret cwtl call ja dec sub sub mov xor loopne out sbb jge int mov cs sub sub lds test dec lock fisubl sahf or jae inc out scas pop pushf lock mov xor das loope sub out sbb hlt sahf lret pop sub icebp cmp aam out push lea outsl xor std out jl sbb (bad) sahf xchg jne inc xchg ds sbb fidivrl out pop invd in out push ret je add sar out push addl sub lcall enter movsl out sub pop mov in pusha mov (bad) sahf hlt addr16 jge in push out cmpsl or add mov pop incl and out adc and xchg out (bad) iret jae push sbb ljmp out push dec jae dec test inc add xchg sub jecxz dec sub loopne or push out cmp xchg jg push mov (bad) xor movsl fsubs jl jns out pop ret dec mov ret out out movsl or push xchg jb adc into out int call (bad) leave and push mov mov negl add ljmp decb lret std push loopne dec shll mov push out jns xchg repnz pop xor dec movsb adc pop inc out outsb lret cli cmp dec xchg out in fsubrs mov xor jo jge push sbb cmp out xor imul mov addr16 pop dec fnstcw in lea outsb pop cwtl mov pushf pop cmp push jbe push out das ret fsub aad int out lahf lock lods pop call loope xchg stos pop (bad) nop sub in dec fs mov in movsl movsl packsswb iret xchg push sub mov jge std cs mov int3 pop mov stos sahf jg dec addl inc mov ljmp imul jp fsts out orl ss adc out jbe and sbb out and daa inc popf xor out (bad) cltd and mov je (bad) jmp push imull loop mov fldl lahf add cli sub sub pop (bad) dec adc rclb pop out cmp adc xchg loopne jb cmp cmpl movsb (bad) xchg icebp in add out sbb out mov aaa (bad) cmc inc out pop push lcall pop mov repz adc (bad) nop out jle xchg (bad) leave and push inc out aam add inc cmpsl sub pop dec ret sub enter push loopne jge out mov out outsb stos cli xor cwtl dec add bound xchg jbe mov outsb pop push inc scas call push mov xchg jle jp in ja fs fstpt mov add pop push xchg lds mov mov inc mov dec verw mov and ljmp mov jle out or fidiv mov mov (bad) js out inc sti arpl add sub pop int add dec js dec (bad) in xchg bound out pop push adc xchg xchg mov adc shlb imul test out or xlat aad add jp push jmp out sub xchg xlat sbb cltd sbb sbb push mov push sub mov inc test and in lods out mov dec incl out repnz sub shlb mov or xlat out adc push sbb xchg out hlt loop sub js test ficoml mov popa ja int3 fadds out loop (bad) fstps sbb mov mov test mov and push arpl mov cmp in jg mov cmp lahf sub mov stos fs outsb sbb adc xchg sub xlat mov sub out ds call inc in pushf jb xchg out push mov aaa pop jmp ret pushf vpmacssdd call stos mov mov push out xchg shrb aaa inc lahf les lock mov sahf dec or sbb adc jo and sbb out jmp fisttp out or push jno (bad) movsb fcompl cli (bad) out mov mov pop mov jnp xor push xlat out dec notb clc out (bad) lock mov add popa fiaddl xchg adc and push cmpsl xor sub and aam and outsl pop fwait out sub jge shrl inc sbb jp fwait das popa jle lods add mov push adc movsl out jecxz adc and (bad) and call clc adc in push jb outsl jne adc mov (bad) jle adc sub shrb sub dec pop mov loopne sbb aas loop andb ret cmp test daa stos pop cmp and ja or aaa aad mov add jno loop adc mov sarb insl sbb hlt xor loop push jno,pn dec out icebp push sbb jge mov ljmp call out jmp fisubrl mov inc out aam es push out clc getsec lret in pop faddl in cltd push cli xchg shl jg mov ds pop test in popfw out mov loope fcomp sub aad ljmp sbb sbb (bad) pinsrw insl ret out cmpsb in xchg xchg xchg mov inc out mov jne pop cli or sbb inc jecxz add out js scas mov (bad) jno out jl popa jne (bad) (bad) and cwtl and loop enter sarb adc pop (bad) ret jecxz dec lods push (bad) jns dec and scas jmp sbb out out mov dec fwait out out mov adc xchg out pop cld push gs sbb out out (bad) dec xchg and mov lock push fisttp ret cli das std shlb pop fucomip fmull dec jp scas xor or add dec mov cltd cmp sbb in jo and imul mov sahf ficompl nop mov push pushf sub enter jmp pop mov sub fs adc test or jmp dec sub stos mov nop js fbstp sbb push in out xlat ds xchg popa out pop xchg fidivrl jg loope pop xor in pusha inc jp out lcall cmp add out sub sbb inc xadd out test daa insl cmp sub cmp lahf sbb test in mov sub clc lret fildl dec push xor inc test and lods in adc xor (bad) cli push cmp sub arpl jb and ret sub out mov ss inc mov (bad) loop popf xchg out in mov and out or int3 push adc mov mov push lods out popf fwait cmp dec out mov out pop outsl and daa add mov jae push stos imul cli out lods fidiv xlat pop dec in add test mov repnz nop out lret or inc sub fisubr imul pushf push pop imul add xchg cltd popf add out lcall cmp sub dec jae xchg xor subl outsl or out js inc xchg sub jns out sub jbe dec in (bad) out jb xor iret xlat lock out imul rolb fldz adc jo cltd dec fsubrp inc or pop xor (bad) dec cmp roll out sbb shlb push cmpsl inc inc jle scas push cltd movsb and popa cmp (bad) sub rol iret push add and add inc inc imul out out jg xchg push ret ret (bad) imul adc es push xchg iret mov or pop rol lock dec xor ljmp and daa es jp mov into clc out or std stc push add setb ss xchg in repz mov repz test lret (bad) xor mov jbe loop and je or sub sub push mov mov (bad) out out fwait hlt add mov aas out roll fidivrl sub enter xchg (bad) sbb mov in inc dec cmp sub icebp in fnstcw in push loop sub cli xor jle ds in rorl mov push or mov out mov out pop pop insl lret in and movsl (bad) adc xchg fnsave push mov outsb repnz inc adc arpl and push mov fdivp fbstp lcall sahf jae jbe pop fwait adc (bad) lods out cmp and out lret mov or pop sti lock push push pop xlat cmp cmp add jnp fs insb xor out xlat xchg mov je iret aaa stos jmp sub mov xchg fs xchg push and out pop sbb imul out mov dec scas push out cmp int3 sbb js lea push out mov iret out sub negl cs mov fistp jne mov fsubrs imul leave fwait out and dec pop shlb aad adc push je fwait (bad) mov leave (bad) xchg jo mov xor lahf inc pop xchg inc push into xchg cmp jns push xchg and add in mov call iret push add in test out mov mov std cmc or mov mov jmp icebp mov lock mov push push in leave mov push or in popa inc leave iret sbb mov das sarb (bad) lods out mov jae and icebp das in xlat dec out enter sti ret out repz fwait aam push in add shrb out jns outsl adc in jp xchg push mov aam dec pop out js mov fldz (bad) dec inc mov (bad) enter jmp cld ljmp dec daa nop in sbb push ror adc test pop adcl imul pop jo leave dec jg push add xlat cmp jp fild out pop jl (bad) pop pop je cmp and xchg add rclb int jg cs (bad) jge daa cmc pop fimull test adc xor cmp int test xor (bad) repz out inc pop pop nop fisttpll dec out push test add mov cmp xchg xchg jge out repnz repz lcall xchg mov scas sbb add cwtl sarb sbb rol out cmp mov push loopne fiaddl push add dec push (bad) arpl cmp inc adc pop adc out sbb testl mov (bad) xor sbb dec inc cltd mov out adc icebp mov out and pop frstor inc call out call xchg jecxz stos xchg out (bad) ljmp call jno mov push out push fisttpll std xor push mov insb push out inc or in or comiss pop mov inc mov lret pop xor cmp popf cli mov out push outsb push out push xchg (bad) dec icebp mov cmc adc rcrb out jecxz daa xor cmpsl mov out jl aam cltd popa adc mov fiadd fwait xchg pop outsb lahf divb out fs stos sub xor bound ret out inc call sbb push mov jp pop out push lods dec xchg data16 dec ret enter or sub sbb pop dec xor iret dec fnstenv adc out aam add lret sub fsubr adc xor sbb jl imul pop insb sub sub lret dec out sbb sbb xchg mov mov lret inc push (bad) cltd add lock push push cmp xor (bad) jae (bad) mov js out aaa push sub test out ret jecxz gs sub add ljmp xchg pop push lods (bad) ds je mov dec gs (bad) js pop les sbb inc (bad) out adc xor jmp push mov out jl pop icebp movsb push and cmp test push or nop mov out scas sub mov mov cmp jb dec add cmp (bad) lret fidivl sbb out sbb jmp rolb je adc es out popf push divb or mov out ror pushf or clc xor xchg shrl mov bound out insl call out or xchg (bad) lret or and out push jae (bad) or cwtl iret push scas orl push xlat out jb pop cwtd scas stc and adc packssdw loop sahf shlb sbb xchg mov aas mov adcl fadd cmp push xchg stc rcrl (bad) aas out and (bad) outsl ret mov ljmp mov pop xor out pop and adcb mov ljmp out mov mov out xchg and push out and xchg loope ljmp out ja xor jno pop pushf lahf fmull mov ss lods and xchg stc pop jl stos mov aaa lods out push xchg adc test fs cmp out ss std loop jae mov and inc xchg in mov cmp mov or xchg test jnp inc mov pop out ljmp mov mov out cltd cwtl push test test pop bound pushf and out repnz lock inc inc sbb iret iret push jns ljmp adc es mov add lcall adc divl jno adc stc fcmovu lea inc lret jle xchg iret nop mov cmc push (bad) aaa movsb loopne jmp mov sub push jns les sahf fildll out sub or push outsl fsubrp jne mov inc (bad) daa in pop inc (bad) bnd push out or sahf mov clc ret out (bad) mov add (bad) mov cmpsl adc in ss clc cli gs xchg outsb mov out lret scas enter das cmp fisubrl (bad) data16 push scas xor mov iret in test aad mov (bad) xchg out jne js stos nop inc jg,pt roll jle mov (bad) int3 push (bad) out cmp out out dec leave inc out mov pop enter shr daa sub mov mov out lock rclb outsb mov jp mov cltd in push pop ljmp push nop adc into jl inc iret popa in push out hlt mov mov scas out push xlat push mov std lods out adc and das and fsts mov movsb or decb mov pop dec lods (bad) adc lock out out sbb adc sahf outsl js movsl cmp xor aaa test mov lock lds insl mov lock ljmp sti stos aam loopne into fucomip data16 cmpsl out mov xor or jb iret stos out inc fsubl fidivl imul inc test cwtl pop push xor push inc sub nop rolb pop cli push in std jmp lcall out adc call sahf shrl ja inc int in stos sbb ljmp daa test out test or insl repnz sbb pop lahf out push fs jle inc out cmp fisubr mov out rcll xchg test mov jmp dec fdivrl nop dec das adc out leave adc mov out dec mov sbb imul rcrb mov mov sbb pop rolb outsl pop adc test stc out out enter or dec mov lret cmp jl mov orl fist add movsl xor scas push (bad) mov call or ret push loopne mov push sar mov sub imul (bad) ljmp xchg add pop sbb insl jb out push pop mov out add push adc rorl xchg test int into es out nop dec mov prefetchwt1 pop or xchg (bad) pop stos fiadd inc cltd ljmp mov sbb cmp in std mov mov hlt out in or adc xchg int3 and mov sub rorb iret cld decb pop in mov std mov test scas dec out mov push out lods jge cmp xor fsubr popf cli jmp pop lea xchg pop lods scas jmp js and bound lds jno call xor mov fstps ret mov mov push out mov jns and push rorl scas out inc outsl cmp shr cmpl lock xor out ret jg push loope jno and sbb sarl xchg lahf in sbb leave sub loope jge ljmp and dec adc xchg out pop xchg pop (bad) shl es out jne add pop cmpsb ja mov lods xchg negb sub or lock adc movsl rcl sbb sub (bad) jo mov repnz push out (bad) fwait push stos scas and adc cmp sub mov mov sti jmp js cltd daa fucomp xor (bad) ret push jns or stos (bad) out mov push in ljmp and or pop arpl call and addr16 pop cli xchg sbb popf dec mov inc dec lcall mov jge,pt test mov mov iret rcrl mull out (bad) loope xchg push mov jb cmp call sub out (bad) xlat test fildll mov loop jmp ljmp out es inc gs repz xchg imul mov xor mov repnz jmp or jp add scas add adc pop subb jno fsubr jo xchg xchg or cld fldenv mov out inc call stos cmp mov jae fisubr out push jecxz gs adc inc lods push mov std sub mov aam push popf mov xchg fnstsw mov in (bad) (bad) pop xchg or mov sarb or fiaddl rorl cwtl jbe outsb sub inc dec lahf js mov incl push fildll mov xchg pop outsl shrl cmpsl jmp pop out and rcrl lcall out test xchg pop clc sub pop outsb xchg out mov push cltd shr push sub mov cli sbb dec test jmp adc or loop xchg insl pop dec fistp cwtl (bad) fild mov xchg jecxz iret xchg jns out mov jmp movsb push loop stos push lods mov fucomip inc sub cmpsl xor pop out adc cld scas pop ljmp repnz inc or test push sub mov mov dec bound cltd push mov xchg sub insl jge out pop lea and mov mov and jbe pop aam sar cmp push or sub fucomi sbb popa cs ja es cmpl fsubr test mov addr16 fs das pop pop out lods jb dec add cmp out jnp jge adc ja and mov push daa (bad) pop js mov mov or out cmp decb inc adc and sbb stos (bad) aad arpl pop push jno pop ss jge sub lods (bad) stos inc stc imul pop mov xchg xchg jmp les scas out jle test std adc push out (bad) fwait out in int3 pop loope dec test add xchg xrelease push in int ret push mov push test adc fisubrl mov (bad) dec mov cli addb jge out out sahf and lock and iret fldl out aaa pop pushf dec add push push pop les mov pop mov xlat pop and sbb jnp out lahf xchg or iret roll add into adc cmp pop xor insl xor out mov dec stos mov cmc aam aas out call or jg fist cmc insl in dec scas mov out adc leave jl lock iret sar (bad) inc sub dec and push mov out or pop add stos ss bound mov xor aam sbb test pusha out adc sbbl inc xchg (bad) cmp test mov push mov xor lret insb mov out jmp push or (bad) jo inc pop lahf clc movsb pushf out imul mov out or push mov push aas push adc sub in mov out inc or sbb das sahf (bad) out dec pushf dec pusha cmpl and (bad) fnsave int cmp cmpsb out jo mov loopne push or cld jbe out daa xchg mov insb (bad) out adc dec data16 sub push add test out arpl pop dec test add sti out cmpsb je mov xor or out es mov fwait push ds out jg addr16 enter call and pop push loop in or pop pop mov adc enter ljmp out rolb data16 repz loopne stos push ljmp in lret out lds lahf das pop stc sub mov fistp and nop lock jb xchg and mov sbb fwait jns jle sub xor cmpsb add fsubrp sub js stos test addr16 out call iret loopne hlt (bad) out xchg outsb adc lahf xor loopne or xchg inc iret push out test lods or lcall aam and pop jmp jecxz out xor jl pop xchg dec add out nop in (bad) out push and rclb add pop jae xlat in cmpsl lods out or pop sbb cltd cmpsl shlb loope test sbb jb clc xlat aaa cmpsb dec loop pop (bad) mov xchg push push xchg cmp xchg push cmpsb out inc sbb mov out cmp loope leave fdivs std out cmp dec fst insb xor mov out outsb mov pusha xchg pusha push adc pop mov xchg mov mov xchg shll out push repz xchg iret sbb adc aad loopne (bad) dec dec sub fcomi sbb negl sub and mov xchg (bad) inc outsb in imul pop pop inc lds int ljmp xor imul pop push push and test adc ljmp out repz ret push sbb cmp mov dec inc out push push aam bound daa out push jp out les inc add and idivb inc or cmpsl rorl mov data16 out mov das and (bad) pop loope inc repz out rorb pop (bad) xchg pop fcompl rol loope int3 out pushf std int loopne add imul jne ljmp xchg test int lcall mov sbb dec pop xchg rorb shl (bad) adc push jle out xor sbb nop mov lcall iret mov push ret je inc jns (bad) push inc in out pushf jl setne out add clc scas out roll and mov out xchg (bad) pushf push push inc xchg rcrb sbb out and pop in sbb ljmp inc dec insb shll jecxz out mov add mov jnp clc cmp push pop xchg stos aaa out (bad) call and adc jns,pt pop and sbb loopne ja out dec xchg out or outsl mov xchg cmpl xlat rcr mov out lds xchg mov xor loope out xor pop stc sub cmp (bad) out arpl dec xchg aad and out testl pop push int3 out mov fisub jbe out push in mov cmc rorl out mov notb adc cmpl imul sbb out cmp or (bad) jbe adc int3 out fdivrl in out imul or (bad) mov out mov and add cmc pushf out adc xor pop fidiv dec pop sbb cmp out popa rclb mov inc ja push or inc cwtl movsb iret inc xlat fwait sbb scas pop dec loop out es or sbb (bad) ret cltd aas sub adc fistpl jbe mov out push call int loope push or movsb add lock push mov out adc lds mov out add lret es js adc dec (bad) dec out sub jns imul jp xor out nop ja leave sbb push int (bad) fsubrl pop push push jmp insb xchg pop jno call adc repnz push cmp add sti mov xadd xchg outsb fwait adc mov mov loop fnstsw or out xchg sbb pop ffreep sti add cmpsb (bad) ljmp sub ret jnp sbb out rolb cs out lahf movl out out addr16 inc lret xor out dec jae sbb arpl adc (bad) call mov lret mov pop out into cltd jb enter dec popa sbb decl jbe adc or or mov jae mov or test out jnp mov mov rclb arpl cli xchg add fcoms loopne pop (bad) xor lahf and jnp repnz jl push fimull test or xchg pop mov or sbb ljmp (bad) clc xchg jbe inc (bad) out jp stc int3 xchg call cmp mov pusha mov jl adc fwait out loopne dec and inc dec sbb jae add out push mov adc call aam (bad) fist repz scas in xchg jb mov (bad) or push inc xor out js pop mov add and sbbl int3 loope jbe inc fstl dec pop lds xchg sub imul jl xlat insl mov inc lods jb stos or mov ljmp insb cmc xchg pop xchg icebp xor je insb aas mov in fwait and sbb out and inc inc pop cld sub fsubs in adc push fstpt movsl inc inc pop xor das mov ret mov jge mov out xchg adc cli lret sbb jbe out les fistpll rcrl mov ss xor and daa out js push push pop fwait xchg cmp subl aas and push xchg shlb xchg out mov (bad) out je lea pop rcll xor cmc mov fs loop adc jge sahf imul mov pusha pop fldcw dec or adc orb xchg cli sub dec jnp iret and ret imul or loop (bad) and (bad) into dec insl mov test test push mov push or repnz cmp pop jmp int dec (bad) imul adc adc cs outsl lods mov jne loope sub add dec stos push sub out cltd bound popf cmp mov imul inc sub jmp dec dec sbb enter add sub sbb test daa (bad) xchg scas sbb negb es insb fnsave lods jg fcomip hlt xchg inc lock inc lret cvttps2pi in stos in faddl and jmp pop dec jo sub jne lret cmc lds ja sub xchg mov add adc in imul pusha test pop xor adc stc mov loope inc jns adc dec fild add inc fwait arpl push jecxz and mov out lret pop fwait js mov enter push mov or in loopne lods out sti push lcall cmpsb rol and mov out mov push (bad) mov push mov xchg xchg loopne in mov bound lods out lods dec ljmp and out stos repnz ret movl stc bound scas pop je pushf adc jecxz test (bad) xchg pop fidivrl adc aaa out ljmp sbb jbe nop jb push mov mov sahf (bad) out xchg popf ljmp arpl lret inc xor js movsb (bad) cld gs mov jp push addr16 dec test loop xchg add scas inc pop mov out push push out pop and jg push int3 shrl xchg xchg mov out ss (bad) in bound stos cltd add repz test push sbb jg in dec xchg fwait push push les sti addr16 jnp out and mov aad push mull (bad) push pop out out outsl mov sti (bad) popa add or jns cli shrb loopne pop daa push (bad) cmc das in mov jo test push push sbb sti mulb pop or lds or je out sarb inc out mov stos xchg inc cmp fidivrl aaa add or push js rcl adc iret imul jecxz add adc or pop nop mov mov jg scas int out int3 (bad) fdivrs (bad) les out xor jmp add mov and sti insb lods or out mull lahf sbbb mov iret jae cli (bad) out sbb bound fisubr daa cmpsb into mov lods jnp aas rolb fisttpll stos (bad) cmp (bad) clc in out push out sbb xor mov out xchg push test out mov sbb fildll inc xor imul and cmp mov push lahf fs fucomp outsb clc in cmp out sar aam mov sub out pushf xor mov (bad) out pop js xor inc movsl jno jl lods push sbb es and push insl push inc mov mov or sub push sbb int3 mov push jae inc mov sbb iret cmp jmp (bad) rcl (bad) jb int out cwtl adc sub push out fsubrp ret add out aam daa inc and (bad) loope xor in cmpb dec pop out aas test jmp out mov or out mov and (bad) jmp sbb bound shrb cmpsb loop outsb push mov in out sbb pusha xchg xchg push out sbb imul xchg out xchg xchg push aas pop sub movl pop adc pop dec lahf pop mov loopne out imul push xor ror xor sbb pop dec dec mov addr16 and pop out and mov jg aam dec out and lret insb mov adc enter push mov or cltd dec ds push out fidivl das mov rclb out sbb mov jns cltd mov mov xchg sbb add arpl xor inc adcb repnz pop (bad) fs pop out or out stos or add xchg push lds xor out mov pop jle lods mov cld push shll in sti pop push test dec (bad) cmp testl pop es pop out movsl loopne mov (bad) jne (bad) out lods jo (bad) and xchg fdivr out jp mov lea (bad) jne loop cmp out rcrb mov jg dec data16 push xchg and push jp ret test cmp cmc pop ljmp testl out dec pop inc dec ja lock ljmp cs out scas xchg imul xchg xchg jb adc mov out not inc sub mov sbb xchg sahf fcompl ljmp out clc push mov pop jns adc pop loop dec mov push sti out testb outsl dec inc or mull pop sti jnp and sbb out adc enter loopne loopne loop movsb add cmpsl stc out cmovbe lret imul sbb ficoml push and in cmp fsubr pop fildll xchg jecxz ss inc je inc sub out das lods sbb jae xchg out pop imul sahf test out xor adc fcomps popf cmp repnz loop mov mov push dec loopne mov fmul cmp adc inc ja loope dec out (bad) mull cmp dec movsl jg mov pop xor test shll mov mov je inc cs jo push imul out sbb popa ss insb xchg pop mov out dec xchg icebp xchg pop rorl out ds pop jo jecxz and sbb mov ret inc push je mov int cltd addl fbld out sbb enter push push mov (bad) call rcrb lahf dec xacquire lock push xchg loop cld xchg pop dec pop out jmp push (bad) out adc jo std jg jmp shr nop sub push cmpsb shrb cmp stos mov insl movsb out and xchg imull out sbbb sbb push adcl (bad) mov es add stc push and cs insl sub (bad) in mov sbb movsl mov fucom stos cmpsl aaa call out inc daa pusha jmp out cld in lea aad out cmpsb popa fstpt add out push xor call fsubr fsubp aaa aad ja idivb mov in and push icebp bound xorl add out sahf stos sub mov aaa sub cli cwtl mov cmp and xchg out jecxz scas sbb inc dec push pop ljmp cmp in xchg sub adc xchg jp dec sbb or sahf imul scas out in push add cwtl mov sub sarb bound pop out ret scas xor fwait sub dec imul pushf in fbstp outsb xchg out (bad) jo enter mov xor int3 inc out ja loop movsl pop pop and sbb orl mov sub and add jg shr mov out inc std xchg in mov jmp imul or pop xor mov sub (bad) out cmp mov insl inc int pusha scas rolb lods pop and jmp call out mov sbb push imul xor movl insl push adc es pop (bad) pop push cmc out ret test clc sbb out adc jo addr16 mov cmp cmp pop out sbb decb (bad) out mov pop insb jg cmpsl sbb aas mov jnp inc clc ja test psubsb cld cmc mov out or negb xchg loop adc xchg and rcrb adc sub inc mov daa je pop pop push mov (bad) das jl inc mov inc rcr rclb iret (bad) lret cmp push (bad) push sbb call shr mov (bad) incl andl movsb loopne push dec cld int push imul loop shll addr16 stos push lret out add jmp ljmp pop jmp jecxz add or adc and adc out stc out push pop in mov (bad) stos pushf xchg int3 push sysenter loop gs (bad) mov jo push xor fwait jae repz mov inc or fsubl movsl fwait out in cmpsb movsb dec lret rcr mov fs stc out int3 adc or and push pop adc xchg inc imul out out mov push out jno jbe out fprem1 xchg (bad) int3 xchg xor rep jmp adc jb cli out pop in mov popa and cmp mov pop xor push sub fnsetpm(287 lods push and lcall call jbe mov ljmp jb shr outsb into push sub scas sbb add mov push cmp icebp fisub stc es out mov fistpll xor (bad) push (bad) jecxz cmp inc push cmp jns sub mov mov cwtl dec fstl sbb xor out or int3 aaa lret xchg fild mov in mov out lock ret cmp lods mov rcrb sbb (bad) ss in mov ret hlt rcll out js addr16 icebp pop xchg push out cmpsl jae inc cmp lcall std bound rclb arpl add fwait or sbb add in out cmpsb in dec out or ror cli ljmp out cmp dec jg (bad) cmp cmp inc fldenv dec fs jl push movsb xor sub out sti cmpsb (bad) jmp xlat rcll mov push pushf pop adc push out or push cltd xchg pop insl push out cmp or out cmpsl push inc mov (bad) push in xor ret pop das lret xchg mov aam fstpl cs bound fisubrl jnp outsl inc and jg ja inc addb xchg jo,pn dec dec lahf adc fisubl aad push inc nop je inc add out rcrb repz notl out es aad sbb jb adc ljmp push sbb fcoms dec cmovbe xor (bad) pop ljmp pop fucomi ret into inc push enter rcr xor bound jno,pt and aad (bad) jp adc movsb cmc aaa (bad) out sbb mov out inc lret or inc push insl in jge dec xor pop or dec (bad) sbb mov push push push loop (bad) jne out pop scas leave pusha sarl out insl outsb js lret xor aas pop adc sub fsubs mov nop dec cmp outsb scas out shlb mov out xchg loope in sub fcmovb jg sbb out jo lock adc out shl stos ret fs mov out jmp jecxz,pn addr16 mov jmp (bad) sbb (bad) stos mov out dec scas sub pop loop (bad) es in lret out rolb sahf sbb inc fimul out shrl test out sub mov out out xchg (bad) sbb mov enter insb je in sbb jb test fs into out push in test sbb jnp inc jmp lret add fucomip in mov xchg cltd pop ja inc inc sbb pop jmp xor fucomp stc jb (bad) cmp xor lods mov push pop mov mov aas mov out repz scas add pop cmpsl dec stc pop outsb out mov int3 mov lock cwtl jnp adc cmpsl sbb fsubrp jp imull (bad) out jno cmpsb push aaa sti sbb bound sub fucomp arpl mov inc xchg xorl jb xchg mov out rcrl sub loope outsb ret pop imul out push popf leave inc xchg or adcb pop adc out stos add outsl mov lods sbb push enter icebp out movsb lds jb int3 or sbb xchg sub sub js movsb sbb or jmp push adc int loopne fld dec in out out push cmp cs inc adc add push repz mov cwtl and lods jae fst out cmc inc mov push out sbbl cld iret cmpsl insb xchg and icebp shr stc jne push sub jb pop out int3 pop pop inc inc int out push inc cmp sub in adc adc xor sbb cmp hlt shr lock mov dec pushf add sub sbb lock sub das cld jge sbb xor imul mov outsw cmovg cmp outsb and jae sbb lret cmp push out mov out stos pushf mov (bad) adc out xor dec lods mov notb (bad) dec stos or sbb and push adc (bad) out mov dec xchg daa mov inc cmp add or sbb inc out push jl repnz iret xchg cmpsb sbb or cs mov rclb cmp jno jp cmp lock and int push lods or out mov inc out out and arpl out inc dec notl out mov lea repnz lret sbb out pop (bad) (bad) mov pop mov stos repz outsb cmp xor gs pop cmc jecxz ror (bad) inc jns arpl pop pop or fldenv ljmp mov inc cmpsl push mov mov (bad) insl popa jne xchg add and inc int (bad) lods dec icebp out and ljmp push (bad) sbb cmc xchg sub lahf ret hlt jle movsl lea sbb push xchg xchg mov add pop addr16 sub pop icebp out sub mov xor movsb cmp imul and popa adc in inc cmpsb mov pop xchg sub xor and jl inc sbb aad xor icebp stos adc lcall xchg loop (bad) out cli cmovo and scas loop cwtl shr push add and mov lret movsl cmp pop movlps in mov (bad) sub cmpxchg cli sub mov xlat scas clc rcll mov pop ljmp movsl out sbb xor imul xchg and jle mov cmp xchg and push mov mov test outsl pop sbb pop aad cmc sub ficoml or jmp mov lods sbb xor das shr cltd xchg test loopne (bad) jp mov pop xchg push adc das out mov cmp pop pop out adc sbb adc jbe jge sti sub imul and cmpsb xchg out mov jae xchg xor out lret cmp and out cmp push mov and je (bad) aas xchg sahf xor pop or fcmovb out fs dec divl test in scas jmp add jbe bound in or aam mov mov or lods clc out sub lods cmp jno fs cmpsb mov ljmp jb fcomi lret ljmp rcrb pop xchg jle arpl cmp stc mov or ljmp icebp in lcall fstps dec lds add and dec cmc aas and ljmp sbb call add lcall pop lock out dec inc push xchg and sbb sub lods push jae cmp dec xchg pop out pop jl outsl fist xor scas test push out pop fnop sub cmp aad (bad) es adc out imul mov enter ds fs out repz fcoms out dec sbb or int3 mov out out and out mov dec add aam mov mov shrb into cwtl imul outsb mov orb cmp ja xor dec ds jno fsubrs mov out sbb das add testb popa jmp and out aas lods adc (bad) jo fstpt mov int in push pop inc mov push xor mov (bad) jg mov repnz lret jno inc sbb mov out dec dec mov pop call out mov pop test (bad) mov daa pop (bad) mov dec xchg jb,pn bound cli xchg (bad) cmpsb int out pop mov rorl out repnz push push sbb cmp in and adc sub lahf insb in cltd das push push in pop enter cmpsl cmp push xor out cmp ss addl cmp rcll mov xchg mov iret push cmp icebp scas pop ret imul out enter mov imul sti ljmp stos inc dec pop fsubrp imul fist jmp or or out jmp dec pop mov push clc loopne jle lods xchg lahf cwtl and ss sub cmpsl jl pop (bad) jb fimull dec loopne pop ljmp push lret sub pop je scas push addr16 pushl sub mov out cmpl dec ss lret cli lea xor pop inc mov je test mov dec pop sbb in fwait daa mov jp (bad) xchg push clc sahf ljmp (bad) leave sbb and cli shl sbb mov out jb mov sub sbb cmp mov rorl xor test xchg ret out jmp (bad) aas daa out and (bad) and xchg pop adc cltd dec lahf inc mov out pop mov mov push daa out cmp inc cmpl ss or cli int lock jno pop mov mov daa and pop sub in add mov mov inc out sub push scas sbb jbe (bad) and mov or mov cs mov aaa inc push mov mov insb (bad) loop pop or js jp rcl ja,pn pop or push and ljmp sbb jno fucomi xchg sub jne popf lods add sbb negb and ja test out or sti or out movsb jbe or ss fucomi mov mov pop popf das pop (bad) (bad) in out sbb or fsubr clc into repnz adc push in ds mov insl push pop popa cmc test or call inc pop cmp or xchg out fsubrs sarl xor das adc (bad) mov pop (bad) fstl es stos jae inc mov lds rcrb shlb out enter xor icebp mov mov in xor adc out jmp lea pop push aad sbb mov xor jno mov dec jg fcmovnu cs scas mov dec test xor sbb imul dec sub mov test je sbb in cs dec inc scas or xchg dec lahf lahf hlt or ljmp push dec mov push fs incb xor sub out (bad) (bad) adc jg rorb out mov out add or arpl pmaxsw mov lcall cmc in aaa sarl imul push cmp aas (bad) xchg or dec in into mov and repz jp xor cs and mov xor leave xlat jb imul rcrl push push pop xchg movsb out popl (bad) and adc stos add in sub (bad) out mov (bad) jmp dec dec test out loopne pop (bad) pop jnp mov and adc rcr popf fidivrl add and insb out adc popf dec in loop dec idiv and jns mov push jmp and or jno cmc cs out out or mov add mov out lahf ret cmpsl mov push inc dec pop dec adc lret cs inc adc call and dec xchg inc mov add daa shr hlt sar inc in imul out aas pop ret lret movsl dec pop cld js out (bad) fildll mov xbegin sub icebp mov sub jb dec dec adc add ret push push pushf out cmp seta xlat out mov pop test fbstp xchg push out paddsb out mov push xchg xor cmp inc ret cmp cmc pop jne data16 insb xlat in into repnz ljmp adc daa out cmc ljmp pop mov (bad) out lea mov lret data16 bound outsb in push fild iret aam xor lret mov rcr fs cmc mov adc xor jns out mov sbb sub insl xadd mov rcrb ljmp ret dec in test mov push and jno sbb insb xor gs movsb pop out lods imul out out cld fcmovnb ljmp out adc jns pop jo xlat fsubrl ljmp lea sub mov push pop aad xor out xchg int3 inc sbb out or test fldcw xchg lahf imul push shr add and inc fdivrs pop andl in cmp std insl xchg aas or pop pop outsl call sbb stos pop add mov test or popf fwait add leave xchg xchg std inc aas loope movsb stc cs aam xorb pop xchg out push mov test dec inc jnp aam aad inc sbb adc xchg or sub inc insl xchg out lock dec pop out loopne test out or in push mov jbe mov dec fidivrl mov xchg ret and popf loope cmp mov cmp inc xor push inc add out or inc dec shll shrb movsl out xor and clc add cs out mov fwait push sti ljmp out mulps cmp adc int3 jb arpl mov inc cmc out test mov and jg out ds xchg shr mov inc pop lods out add sahf aam cmp dec mov idivb dec lea icebp cltd je in inc movsl daa mov into lcall es imul loop add and call push pushf movsb mov sub cmp jb std (bad) push lds pop fcoms lods jno push mov cmp daa xchg out cmpsb or insb cld sbb and out jne xchg dec add mov jg mov cmp rorb mov and sub sub pop je and jp adc cld out xor gs rcll out or sbb mov nop out jb idivb mov sbb jo cmp mov jecxz inc sbb scas add dec jmp arpl mov fildll (bad) jbe jnp sub pop mov out or lds in cmp add rclb xor stos push xchg jecxz iret xchg sbb sub or out push xchg sbb push data16 pop out imul test and sahf inc add out popa loop leave push int3 dec mov sbb out inc pop xchg push out push mov sbb pushf fldcw mov pop out push cmpl pop xchg in cmc push test push adc jb dec out popa sahf mov int (bad) stos out cmp mov cmpsl out or push out push les cli dec js loope dec inc out in stos (bad) sahf sub jecxz jns out daa and sbb loope insl leave out cs add lcall or test fistpll ret in insl ficoml lret jbe pop and pop bound inc js cwtl jb pop dec (bad) popf out xor (bad) add imul xor outsl push insb and push adc dec (bad) mov out jo in shrb addr16 mov cmc mov jle lods daa mov mov cmp test jge sbb sbb cmp arpl xor lds or lahf add jle (bad) or out mov adc bound ljmp out mov daa insb mov dec add xchg lods stc jb cli xchg push pop out jecxz sarb shrl mov sbb addr16 out add xchg jp adc xchg cmp out es test out cmp inc mov popf xchg out imul cwtl roll scas jnp mov and lcall add fstpt mov cmp jae push push sbb and icebp add adc das call jmp outsl lahf xor pop iret lods mov fstl xor insl js jp and subl out xor test push out sub jp lahf cmp int3 scas adc jnp mov inc in imul stos sbb xor (bad) sbb push lds mov mov test out mov addr16 out sub in scas out lret pusha xchg fcmovb shlb bound leave sbb adc lcall leave push jmp clc out pop enter pop or jecxz lret sub jp add sbb ror fwait mov mov push sub jb pop sbb pop ret bound push movsl out inc vmovdqu mov mov sbb xor cs dec test out sbb sub dec adc push jns out stos mov out inc push jnp pop adc pop push cmp push or test lea and out mov push nop roll divl sub pop inc jnp push sub shrb fidivr insb rcrl out mov cwtl dec sti adc in dec sub arpl pop mov insb or in fcmovbe sahf mov out cwtl mov add in pop test cmp or ret xor mov mov in lock lret nop aas pop adc mov cmc push stos shr addr16 pop loop xchg push and adcb inc popa mov mov shr adc lods xchg fild out jle mov pop out bound insl pop mov and cs (bad) pop lahf hlt xlat iret sub sbb out (bad) mov lods inc push out imul pop push (bad) into icebp fnstsw (bad) or leave lretw loope push movaps call pcmpgtw out test cmp shrb scas inc movsb loope out ret sbb insl pop inc in pop mov arpl adc cmpl clflush fadd inc loop pop (bad) jno mov dec push pop gs lret xchg cmp cmp out out idiv es and pop push inc stos in stc jnp mov or out popf imul sbb nop aas daa sub jns out test push push pandn adc ljmp out add pop ljmp dec (bad) bound push fnstcw xchg adc das and pop sub out out mov repz lahf pushf dec outsb in aam adc sbb out int3 inc aas int scas out loope xchg mov loop (bad) inc ret mov dec pop into (bad) aaa push out imul pop xchg mov bound scas in mov pop insb add jno out imul rorb mov pushf scas stc je in fucomip push sbb ljmp and repz jmp imul aam mov outsl popa lods shr xchg push pop mov out fdivs out or (bad) xchg add cmp pop cltd sub dec je std hlt and mov xchg lds out (bad) fmul jmp out idiv cmpl int mov out in subb ja push add movsl mov int dec jae mov mov in push out add lds or imul loopne aam add fnstsw out jmp mulb ret out mov test xor (bad) (bad) fnop mov adc (bad) imul pop lcall (bad) fisttp in fsubs stos and insb in loopne lret (bad) (bad) in dec add sub push out mov pop mov inc xor ret sub add sbb out pop sbb inc dec clc xor push bound out push mov adc mov dec xchg or out push dec rolb mov out cltd xor mov insl inc cmp sahf test mov xchg nop lret pop xchg out or jns out jb sub mov jne pop inc iret cmp sar adc in stc inc out fwait cmp mov adc movsl bound jl push cmp jne and subl mov adc shll lods (bad) addr16 daa xchg pop lea push mov fidivr les aas lock or push dec fwait sbb mov (bad) adc mov pop fldz stos and fs inc pusha xchg pop (bad) rcl call push shr test es jecxz dec sub rol jae adc and xchg inc (bad) xor out mov jae (bad) mov and sbb ja out fwait arpl or add ficomp mov cmp ret jp lcall out addr16 jbe sub mov pop lahf jo dec in sub pop adc aad xchg jecxz enter mov jb push push ffreep adc fisubr out lahf or int in insb out test test loopne das mov rcrb out sub or pop lcall test repz xchg shll sbb and aaa jp lds bound out in cmp add daa pop pop lret (bad) in mov adc nop (bad) sub in (bad) sub dec outsb xchg inc loope (bad) and adc or frstor loopne cltd out push fs lods mov adcl xor push mov loopne insb inc or sub pop inc ds push iret jmp mov enter (bad) out aad pop arpl int out push movsl adc data16 push out adcl out stos and mov jno jg cmp loop jbe xchg xor fnsave mov adc fild mov addb or (bad) jge loope jb xor jae clts lods xor or addr16 inc or ficoml sub jns out pop add inc fbstp rorl (bad) in push fdivl adc out out push mov out lahf jp jg aad jne xchg (bad) pop aas addr16 out and mov add jg out sub out arpl push pop mov jecxz xor ss out or mov push push mov fbld insl out ret adc nop push mov clc addr16 sbb sbb sub inc adc and lret sti jle repnz lcall mov outsl in out pop (bad) repnz in out (bad) and scas out test sub (bad) in je lret les (bad) sub jle jne cmp inc out lods mov mov push sub inc adc xchg out or out (bad) mov out mov in mov iret cmp jo pop xchg pop out jb ret mov bound push sbb mov aaa mov mov xor mov inc ljmp out not insl jle pop stc pop mov shrb icebp sub out dec sbb (bad) and mov push arpl adc mov pop add leave lahf (bad) adc out mov jo or dec pop dec inc pusha jecxz push dec mov xlat out cld cmpsl lcall pop jecxz popf jno add mov dec (bad) xchg outsb push jnp je sub jle leave mov xchg int3 repnz pop add add in pop stc pop jg js out xor cmp daa fldcw ljmp dec rcrb jmp out out mov loopne (bad) (bad) bound iret lock daa out aad push sub repnz in test jno xor mov divb out (bad) stc dec dec jg add xor add mov pop adc ja push movsl and out jne leave mov (bad) xchg test or inc xchg ds jae xchg addr16 mov mov movsl xchg ud2 and adc push in pop mov mov lods xchg out lahf int cmp popf jl inc sbb sub push js cmp call mov out inc insb fnsave adc mov out mov xchg mov push (bad) out dec mov (bad) pushf pop jmp sub pop iret jno rcll stos (bad) add out mov jo or jb (bad) out mov je and out faddl cmp fwait gs shll mul xchg out push sub push out lods dec sbb dec push out pop test (bad) out mov lahf shrl pop mov sarl ljmp cmp sub pop notl outsl jge out dec mov sub test fimull shr xor mov xchg (bad) cmp cmp out icebp xlat mov sub and jnp arpl xlat lret cli cmp sub inc jbe mov ret xor push adc lret xlat cmpl pop int bound out mov jae out push fidivl dec add lcall pop xchg stos scas mov dec ljmp (bad) pop pop cmc mov jae insb and aad push inc stos out (bad) sub lods pop aam out test pop inc mov out add pop inc out movsb adc loope out in out repnz incb push repz insb or loope icebp pop push push inc loope dec jmp fwait jns jle (bad) adc jp xchg lret xchg addr16 fwait xchg out rcl lds dec xchg sbb xchg out (bad) and jnp out outsl pop sub scas adc iret insb cmp push mov and cmp leave push sbb aad loop jno mov pop movsl (bad) icebp ror jmp cmp out mov mov imul inc hlt out sub cmp je xchg sbb jae out or out fwait adc clc out stos lahf out inc hlt mov or lret inc mov or sub lods ljmp lock pop fistpll mov lcall add pop loop dec and sarl leave stos mov out pushf add (bad) mov xor (bad) push mov lods and or or lcall fdivs out sub pop inc xor ret xchg xlat xchg push out fnstsw fcomp inc (bad) cwtl jb mov add es and je fcmovnbe ret out aas pop pop pop out mov jo sbb fild pop and cmp adc (bad) shlb dec jae adc leave ljmp out test (bad) aaa incb mov mov out or (bad) icebp dec push out idivl mov out mov jno xlat ret and ds and jnp movsb std and xchg jg lds fild idiv cmp and xchg mov mov cltd dec jo inc pushf mov pop add sbb test or pop enter fwait call (bad) repz pop loop insb ja in jb sbb lahf jl,pt push adc lea mov arpl push adcb pushl outsl imul xor test jge leave out clc jmp jae testl jns scas pop dec (bad) je xchg jnp insl movsb lock out sub jno in or out leave (bad) ja adc rolb ljmp inc cli and out insl (bad) cmp mov mov das cmpsl test add push out out imul push adc add in sbb jo ret out imul push xchg push cs out sahf scas jmp add test (bad) mov sti nop inc jmp dec out pop or mov lock mov mov mov call cmpsl inc xor and or pop pop orps arpl out adc lret mov push sub jmp push xchg cld out jg pop pop into mov fucomp nop xchg out jnp aaa pop out rcl mov arpl out addr16 das bound (bad) movsb out pop enter out fwait xor fs sbb call out test xor out mov sub out or inc cltd and sub xlat scas push sbb pop jp cmp scas xchg jne mov or (bad) stos lock in outsb jbe out cmpsl inc and inc xchg stc ds out (bad) pusha sbb (bad) inc pop sahf mov or xchg dec push ljmp rcr in in add out xor in xchg mov pop fxch dec fcomps ljmp test lret sbb push cs data16 out icebp sbb popa push out ret lods fnstsw out fidivrl daa cs inc rcll out cmpsb dec les insb popa out sahf xchg xor sub pop add iret fildll dec out vorpd pop sti les cmp (bad) int3 lcall mov mov push das jle in jmp insb int ffreep shrl pop sti xchg jns (bad) jb pop sbb xchg das stos pop out cmp lcall cwtl pushf mov jmp loop xchg roll lret pop notb insb push cmp dec out ret popa (bad) call rorb movsl or xchg pop repz call mov loopne lds sub stos push xchg mov inc dec cmp xchg xchg jns stc psrld push mov jp scas jmp jno push lahf pop insl adc lods (bad) fsubr adc mov int xchg ljmp ss jo mov ljmp xchg xor push mov or (bad) repz mov push cltd out sti loope mov (bad) sbb push das cwtl push aam in cmpsl out jl xchg int pop movsb out out xchg and dec cli push out xchg popa and js iret loopne add lret mov push mov out adcl subb cltd sub stc sub lret (bad) cs mov pushf sbb insb or xrelease loop pop lret sbb mov call mov pop loopne and loope mov inc add (bad) shl pusha (bad) adc add stc test enter fwait adc pop imul out int rcrb jg or adc sub or mov out movsb push pop push jo mov mov inc fs lahf repz or hlt inc and ss lea aaa cltd push ljmp pop (bad) jge sbb mov out cmp call cld jp fs fldl (bad) mov adc bound out in (bad) xchg rclb popf mov out lea push out inc stos std adc mov mov jecxz loope sbb push jb in out mov xchg iret mov pop jecxz loop cwtl rorl mov loopne inc pop cltd lret cmp pop pushf add jne and sti hlt xor (bad) out and imull (bad) clc out add push outsl lret out mov imul pop ud2 xlat cmp stc mov out mov outsl cs shlb mov lods hlt aas out ds mov sub out in cli xorl xor mov (bad) jbe fst sbb out das imul adc cs push (bad) mov arpl add out loopne sub inc mov in hlt mov sub fbstp cmp sbb xor xchg fs xlat push leave sub out int pop subl dec push loop mov push xor and addr16 sarl jo add jno out push call shr in imul data16 (bad) sbb in outsb cmp out mov hlt scas inc pop adc jmp imul std out push scas out push mov movsl sub aad out jmp int pop pop mov movsb push cmp add jecxz lahf sub out xchg or dec dec test out stos dec repnz mov icebp pop out out test pop out lcall and out fwait pushf xchg and xor stc out ja sub incb ljmp cmp icebp jb movsb sub cs push adc out lods icebp xor out arpl sub cmp pop stos cmp mov mov ds (bad) and out rcl fldz mov lret push cs mov and jb outsb (bad) ss pop jns adc out icebp enter jno inc out dec sub sbb pop xor dec rcr data16 cmpsl in scas dec outsl add lcall (bad) pop jnp sahf fwait test sbb pusha cmp add cmpl imul les in out cmc dec enter mov mov jg cmpsb (bad) loop or or jle ficoml out lds loop orl mov in lahf adc or dec ss adc lock pop lcall jl ss (bad) pop push add and (bad) (bad) imul xor clc adc sub add scas push jno push push jne movsb divl jb (bad) cmp in cmp neg into das rolb addr16 mov sub call aas add jns jb bound test out fwait cs sahf ficompl idiv out mov cld (bad) pop outsl inc mov out scas out mov jb lods les pop cli xchg ja push inc xchg inc out add nop mov jne scas fidiv out mov cmp daa adcl xchg pushf stos push mov fbstp cmc sahf push pop and push dec pop inc subl jle imul js addr16 push ljmp add mov or daa in mov pop mov outsb add fwait out sub (bad) icebp push out sti (bad) mov add xor dec jbe insb or (bad) dec addr16 push out mov incl out pop stc fcoml iret xor or pop movsl mov fcmovnbe ljmp negb adc mov fsubr movsl add sub int3 out (bad) push push xor lods jns mov popa addr16 cld pop out (bad) mov mov xchg mov mov fs out (bad) loopne (bad) jo fisub jnp int3 xchg dec andl (bad) shl (bad) mov jns stos fdivrl out les mov pop out mov jbe bound cmp jnp mov imul (bad) (bad) out or xchg and cmp pop js fwait sub ret pop mov hlt mov in nop push and inc test inc out popf or cs mov in mov xor ret push add adc loopne push iret cmp push xchg lods and out xor fisttpll or (bad) out outsl pusha mov cli push xchg dec int jnp sbb xchg jg ljmp in ja imul pop pop push stc aam pop cmp pusha dec shlb cmpsl push aaa loopne add stos decb inc cld cmc mov cltd push out xor xchg out inc loopne or jns out cmpl insl mov lret or jmp push hlt or icebp rorb rcl (bad) sub shrl out push mov mov ljmp mov xor jp mov jge ja push pop ds dec das or or inc out add test fxch aas pop iret lret loopne mov mov hlt ss inc fnstsw stos repz inc or test out pop jns in out sub (bad) out inc nop insb ror subl mov jmp or out setae (bad) cld fcmovnu dec outsl popa fdivrp lret call pop mov sub out out mov mov repz leave das dec cltd xchg out mov lock dec adc movsb mov fisttp sub ret cmp out jbe daa shlb sbb out dec out cmpsl mov lret inc cmp div mov out test inc pushf nop test xchg outsb or push dec pop stc cli out lods jg lock repz mov call bound dec addr16 pusha mov pop icebp cs and push cmp pop or sbb test lret ja out (bad) dec shll jbe fimul xchg push dec insb aad test js add push push test test xor out inc pop data16 dec pushf xor aad js add (bad) out adc mov mov outsl push (bad) pop fsubr (bad) cmp pop out xchg sub out pushf pusha sbb aam pop xchg out mov adc pop push xor dec stc stos in ja mov aas push or mov inc in dec push (bad) iret insl mov and shrl add jmp push ss sbb fisttp sbbl mov out inc (bad) xor loop mov sub cmp inc shr inc xchg popl fild les pop jae aad xchg out jmp test jb cwtl mov out pop sarb jno or cmp fcoml mov xchg int ret (bad) clc pusha movsb out in pop (bad) xchg xchg shr dec jle push inc mul adc repnz into ja dec xor nop pop mov out cmp int fisttp clc les inc out add out lret inc scas mov out outsb inc dec push xchg out or mov add lds pop out mov jge out out in xchg jmp jle aaa fild rcrl mov mov out dec clc dec ljmp push scas (bad) repnz lock out inc imul shrb int out jge testb jae mov mov jmp jmp sub cmovne iret dec stc stos ss pmaxsw (bad) (bad) dec fs jecxz xlat and adc aaa out sub scas push out sti pop pop aas stc ja jmp loop xchg mov daa out int3 sbb in shr repnz xchg xchg pop into fsubrp loopne and out pop cmp in mov stc out inc popf arpl adc add insl mov jl aam push add jae loop xor cltd into lea lahf and je cmp dec mov inc gs mov lock add in fnstcw pop scas lret inc sbb daa sbb cmp mov mov out cmp lcall mov idivb pop sub (bad) and xchg mov adc jmp or iret xor imul jae cs pusha out or inc push lods sub pop lods leave subb out sbb or and add push pop cld roll mull adc xor mov mov jl rcr les or fcomp sbb sar cwtl jg divl dec in imul mov jmp sbb cli rorl jbe cmpsb stos out roll and jp lahf out inc adc movsl or cli in jo mov loop mov lcall stc mov lret lock add cmc add cmp lea clc fucomip popf loopne in xchg adc sti push inc add (bad) mov ljmp in xchg mov and imul out hlt mov jnp mov sbb mov out cs sti repnz jecxz and in inc cli mov js and je aam out repnz push mov push mov (bad) ljmp mov dec scas lods addr16 fs lea out arpl push cmpsl inc ret out inc mov data16 pop jle lods clc fbstp (bad) cwtl cld xchg pop mov stos jg out dec test dec ja mov xor stos (bad) sbb inc xchg pop repnz xchg imul and js add or leave loop aaa ja in adcb pop aad ss jge xchg mov cwtl mov lahf jo push inc out jns add shr test hlt jnp out adc cltd repnz xchg rorl jmp sub out pushf dec mov out dec lds jns sbb (bad) xor lods (bad) out lret jmp out (bad) loop xor jmp cwtl out inc cmp movsl and push out call push out sub mov jnp repz mov (bad) loope mov jg into gs jmp js jl cmc sbb das fimul out sub imul icebp cmp out jo mov pop fsubs arpl inc push cmpsb xchg stos jbe out lret cmc sub (bad) mov leave out or or push and popa mov inc or aad mov (bad) pop or mov mov out flds cwtl cmp lret stos js xchg out in pop lea lods mov jle fimul repz mov stos dec jl add out rclb jns lcall aas int decb (bad) shrl outsb xchg idivl sti and cmp iret std fwait adc or (bad) or (bad) outsb xor mov xorb sbb hlt mov mov push shr dec mov psubsb fldenv pop adc scas leave or adc push mov out bound dec scas nop addr16 mov cmp fwait andb dec dec and pop push shlb cltd mov addr16 stos mov xor out cmp push mov mov mov mov mov dec (bad) mov mov lock fwait mov inc pop nop popf sbb subl (bad) (bad) mov loop jecxz jnp rorb mov adc push int adc out xchg xchg pop out and imul and cmp loope mov je sbb jg rclb dec maskmovq notl in xchg repnz call (bad) sti in fldz jmp dec int3 test mov and (bad) mov cmpsl out mov mov push in jae push orl aam push out pop xchg or (bad) clc add mov mov out fdivl imul xor add inc loopne push mov iret out pop addr16 in or mul xchg mov (bad) ds pop and mov into js out das stc (bad) dec xchg ss stos out push leave inc mov out add les ss arpl out push adc cmpsl inc scas cmp pop movsb aam js push dec out and or out or jmp fildll ljmp adc fst pop das les fistpll sti and fsubr xchg inc lcall rorl insb (bad) jge ret out sbb (bad) or pop out or aad push cmp cmp cwtl pop mov js mov loope sub lret pop mov mov jmp (bad) and mov scas lret negb cld inc out aas jno dec in add out push adc sub jb lea or (bad) out loopne sbbl adc mov or mov add out jnp mov xchg out aas cmc in movsl push fild sub mov out push out mov daa cltd cs sub mov pop push dec pushl lock enter xor les pop add fwait (bad) dec xor cmpsl test addl inc adc sbb mov rorb jecxz in sub out popa mov mov out fbld cmp lret aas aas aad into sub sahf nop jb call pop hlt in ss (bad) xor push jne je stos push sahf cs jmp xchg pop dec jbe (bad) add popf ljmp (bad) xchg sbb loopne bound pop out mov test sti inc xchg adc sub jge out xor adc dec mov sbb ja xor pop adc movl jle mov je adc lea in cmp lcall sarb gs (bad) out mov adc bound pop loope idivl out add out lret push jnp mov adc mov sbb aas popf sub lds xor pop repz push cmp int3 xlat aaa ljmp mov (bad) insb cmpsw xchg out mov sub sbb out adc lods shr pop xchg jl repz imul mov rorb std out sbb jge lret pop outsl sbb imul jbe add jp or push mov mov pop in out add call or std xlat jbe lret (bad) cmc stc mov cli icebp jecxz and mov outsl xchg ss or push mov xor pop cs pop imulb mov out hlt fcomp out test repz mov (bad) std and addb sub jle loope xor (bad) sbb push adc cmpsl int pop sbbb decb popa xchg in js pop out insl mov addr16 mov xor xor sub inc inc mov out sarl jmp mov out movsl inc and (bad) cli decb adcb (bad) loopne xchg dec fmuls xor mov cld pop popa int3 movb (bad) adc out jg xchg xor jmp (bad) out test jnp adc adc add out repz outsl lret dec push in mov negb adc das jne add xchg mov dec add mov andl stc ljmp cmp shr xchg lcall fnstcw adc sbb or inc cld bound inc jg add jo jge pop into (bad) imul inc fdivrl call iret inc imul lock or push jp std inc and xchg pop push jmp out jne and cmp inc mov xchg lahf in pop (bad) lea push loop jp,pn sbb shrb cmc out addr16 dec (bad) mull out jae jg cmpsb mov pop jo sub adc push fs jno push dec push cmp sbb out inc testb fild pop iret mov pop out fnstsw lock repz imulb adc or xlat push outsb sbb push mov mov out sti lods jo imul pop push lcall mov loopne cmc loop,pn mov (bad) scas lahf out xor and sbb mov test push sub adc sahf fidiv test fsubr fadd out mov in inc out insb jl bound repz add push in (bad) sahf or cs mov scas push push cli inc daa call std popf jle (bad) out pop push add out xor push mov xchg loopne outsl xor lret sbb (bad) mov loopne into sbb nop xchg out (bad) or fcmovu js out cmp jnp jge mov out lea leave into cwtl dec out dec mov add mov lret push fistpll nop (bad) mov pop sahf lock loop imul out (bad) scas in fidivr vcvttss2si arpl lcall adc sub push aas ja in inc sub iret push cmp sub inc out nop cmp test add xor mov jmp iret xlat (bad) out or fistp jne fildll in divl inc out xor aas push or lea je adc enter mov jbe ds fucomp push arpl ret pusha into jl xchg out fisubr jne mov (bad) sti mov jp pop out sub out cmp sub mov imul xchg (bad) (bad) les and pop lret push test adc cmp imul jp frstor out xor in jb xor sbb and in jp sti lcall mov out scas int clc mov (bad) inc into icebp dec mov and fidivrl jl repz arpl pop out xor in mov clc jl divl test (bad) in dec inc jp xor mov mov ss push mov enter fsubrp jnp lock push lcall imul jp rorl jle inc call in fs popf or nop popa sbb add add mov dec inc int3 (bad) jmp shll imul and dec insb (bad) out orb sahf mov dec je test loope repnz out push push jno pop (bad) int push fmull sarb out or mov scas lret cmpsb pop cltd cwtl inc pop and aad mov jmp (bad) es aam mov pop out int push adc mov sbb and out sti in iret pushf ja mul mov pushl incb daa ret in push fdivrp dec popf inc jl push out out imul dec or stos pushaw in (bad) jbe sti insl imulb mov push cmp lahf inc orl sub daa in add jne ja and cs cmp loope mov xor xchg ret lds mov out out add inc push jbe fcomps jne mov push cs and dec mov enter mov repz add outsl loop fild push lds jno adcl jmp addr16 int mov cmp ror idivb inc je (bad) xor mov (bad) cmpsl imul jmp ljmp push rclb dec add inc lret flds fisttp jo pop mov inc or out cmp (bad) xor pop mov arpl xor out pop in in lods js cmp jnp shrb mov mov sti bound fstpt jecxz lahf repnz in aam decb js lret jo hlt pusha (bad) in push fisttp fwait lcall int ljmp je imul xchg lods xor push push fs out sub mov es (bad) cmc or push sub fsubrp movb clc fbstp mov cmovs mov dec push insb lret out sahf push add jg jg add rorl dec pop test cmp fs (bad) pop mov cli sub aam imul cmp fsubrp scas dec lock divb push jp xor out je mov pop out ljmp push or push sbb add and sbbb xchg (bad) mov or cmpsl leave (bad) push sbb cmc mov push jo cwtl jp out add ror lret out fdivp nop pop dec out pop or (bad) pop mov shlb or push xor loop pop jecxz cmp sbb xor loope xchg sub (bad) shr jb or addr16 fiaddl cmp insl mov dec cmpl ficoml dec es inc jae push insb xchg pop out (bad) ds int push out sahf push adc cli dec dec xchg mov jb out imul sbb fsubrl lods jge gs hlt dec fildll in enter jmp cwtl mov adc mov and cmc inc pop (bad) das push or out mov jns sarl pop push push icebp ljmp fistp leave test test movsl sar mov idivb jae pop lea pop nop xchg imul mov sbb out inc jl add (bad) jb out push cmp out mov push in xor cli (bad) mov lcall jge jo fstps out das pushf adc dec fldt call out fsubs pop (bad) jo out xor scas imul enter jb fcoms aam mov sub lods (bad) iret mov out fsubl fwait aaa ss into inc out jnp out jl mov popf xchg in and push mov pushl ficom mov fs sbb adc jp subl inc testl int3 jmp prefetchwt1 aas es call (bad) pop mov mov jbe pusha sub push xchg in ret push (bad) das out sub sbb cmpsl lea pop mov xchg pop movsb stos mov jb jge jnp out xor dec xor loop (bad) xor jne sar call cmp jae jo inc out sub ljmp mov or sarb jns loope adc pop adc cs out out or sahf mov out pop stos xchg lcall into or pop dec or mov outsb pop jecxz pop push pusha xchg push (bad) aas imul push mov inc adc (bad) js jns movsb jno in dec rorb out insl std dec xchg pop fwait add push out rcr gs add lahf push or xor out pop or daa out dec mov aam sbb aas or nop bnd push inc (bad) out aaa in mov leave pop push out add inc xor (bad) cmp int3 out mov add nop push jne into jp xchg out lret test (bad) out dec adc jno add repz pop imul (bad) pop push pushf (bad) sub sar mov xor sub fisttp ljmp orl xor dec pop mov xchg jo out sbb jp out enter mov mov pop bound dec lea add insl out jbe gs sbb mov mov incl lock pop out fs mov cmpl lret loope push aaa out sbb mov push les sub sub mov mov stc (bad) in and fiaddl mov xchg cld jmp (bad) dec pop or pop out or out (bad) testb punpckldq arpl push pop out mov cltd jne mov xchg inc add out popa lcall or push (bad) call or pop fs xchg movsb out subb loopne aam out xor mov pop stc inc popa aaa data16 idivb out lret xchg adc iret pop jl (bad) push push pusha dec out insb int3 (bad) mov sar xor push and fs out inc dec fimul pop mov fwait xchg pop sub cld arpl jbe push add jecxz data16 or dec mov fistp sbb (bad) in mov lds xchg fbld sti in (bad) out push (bad) cmp mov test rcll mov (bad) out pop je mov mov cmp push inc test rclb and lret daa xor jo icebp movsb and lds out cmc jb aam (bad) pop imul mov cltd mov stos adc mov pop pop push out lahf mov mov jmp jbe in inc out jg cmpsb mov inc pop nop or cld add sbb push sbb jp xor mov out mov outsl cmp shll frstor jl pop in popf jl add add cmp push cmpsb jge lcall hlt out lea push mov ret insb xchg add jmp pop push sbb sbb ror ljmp dec pop (bad) out out scas add pmaxsw lcall push mov out (bad) push sti sahf inc jno xor xor inc push enter lret sub dec mov (bad) sub mov pop es cmp int sbb jp mov mov mov lahf popl pop pop inc notl lea push pushf popa outsl mov lret es mov (bad) pop sahf xlat and mov xchg pop xchg mov (bad) pusha les mov xorl cmc orl sub out pusha popa jnp cmpsl sbb jae xchg push dec cmp push push push jne push or xor sbb adc in push xchg out cmpl icebp das pop sub ljmp adc mov ret js mov xchg dec enter mov mov mov (bad) jne dec arpl pop in push out xchg out push subl out mov cli (bad) cmc sbbl mov aas add out pop dec adc mov in add mov inc mov xchg adc in mov fnsave (bad) ficomp ja jae mov and das imul in inc out movntps lea sti cwtl out fldl push cltd mov sub mov imul mov roll out cmc jecxz leave dec inc cld shrb dec sub push scas push jmp add incb pop shl sub xor repnz push call or sbb push leave out inc lret sarl out test push outsl cmp inc jb iret mov adc and inc in jge sub out jbe out jno insb xlat loope dec mov xchg out stos adc push shrb out or ret in jl out mov insb popa mov dec xchg jno mov add cmp popf dec push out rcl sahf dec pop out mov adc and xchg ss dec jo je inc cmp out mov cwtl mov out cmp into jle cmp add or mov je and mov pop es lods mov xor fstpt add mov jg lahf pop divb jnp insl out (bad) lea sub mov in les xor or mov sbb sti out push sbb (bad) pop or push mov add setle sbb outsl adc pop imul and sbb shr das push xor decb call sbb mov gs jle add (bad) push out xchg lock xor out arpl movsl mov mov push loop mov mov cmpsl cmp jle mov insl mov lahf jne sub mov or js fildl and cmpsl add lret jb add add mov (bad) mov ljmp jbe out iret add xor in stc out ja xchg jle leave push pop out pusha nop dec notb dec lret lds inc push out xor (bad) push cmp add dec loope push xchg jae inc sahf outsl lods ja (bad) shrb faddl test mov fisttpl incb lods lock inc jge pop adcl ljmp add xchg mov lods inc lret out les mov add cli stc xor xchg out out lcall pop out lret movsb adc lods mov lahf jbe pop lret out movsl sbb icebp rorl mov loopne inc push pop stos scas push and in cmp cli jp movsb mov xchg xor inc popf adc xor out sahf mov xchg or out sub xor out dec inc repz insl inc sarb fnsave sarb repz jnp loop dec jne mov mov jge push lcall sbb pop mov xor xchg rorb jnp movsl in push mov popf out (bad) fldt sbb dec arpl and add (bad) adc mov test xor mov push loope cmpsb xor jp mov repnz mov lods pop push out pop mov xchg and icebp iret lock test lods in std mov (bad) out in mov sub lret (bad) ja ret aas or add movl or outsb ja out xchg mov bound aad jmp out rorb rcrb cmp test lods in mov decb and sbb mov dec sarb jb out mov pop test xchg push out xchg mov jo repnz jbe lret loop das daa add xchg call inc fstpl out pop or lret xchg mov hlt adc cmp ljmp fsubrl inc fs jl repnz lods (bad) pop in fisubl add mov xchg push mov mov dec lock lahf in cmpsb cmp lods or adc mov int imul cwtl and sbbl out fadds lret (bad) stos push stos push aam stc add shr out xor adc add and or test mov out jo imul xchg mov stc jbe jnp into sahf gs add repz and out dec xchg xlat test clc scas fistp mov ss out mov idivb out aad adc jno out test mov lea fsin cld out (bad) cmp repnz ss pop push mov out sbb add out mov and shll sbb push mov sbb ljmp push out loop pusha test mov xor (bad) jne mov hlt adc out xchg js pop pop insb xchg les push (bad) decl mov push and inc jns jne push jp or fdivrs mov xchg xor or dec icebp xchg loop or (bad) jge jns push ja daa ljmp inc mov cmpsl out push aas insl mov rorb int3 xchg pop pop in pop mov out jmp mov ss jg mov loopne imul in dec int3 scas push inc cmp sub xor xchg in dec les push sub mov test cld (bad) ss xor add sbbl in call mov test ds jle mov dec pop mov xchg out out xchg nop fsubrl (bad) ljmp or popf mov push push fsubr cltd cld data16 imul in sub dec outsb push or daa mov jmp dec clc cli sarl sbb dec das push fstl pop mov or loopne pop out mov loopne lcall inc pop mov pop jp dec push test out xchg sti enter push dec out push jecxz mov lock (bad) mov cmp (bad) ja stos adc (bad) sbb andl mov aaa aad and inc sbbb out loop mov fxch dec pop add in push xorl out add cmp add pop xor pop ret jo jns jge hlt dec mov xchg push fistpll out push xor stc loop int3 (bad) fldenv jecxz out ds out push fisubr and mov cwtl add sbb scas pop (bad) orb out repnz and push fnop aas aad lock dec (bad) insl frstor mov repnz sbb aaa into test in out and add inc mov mov scas fistp cmp jmp jp fild lea mov out outsl inc push mov mov data16 lret jl fisttpl std mov into push sub cvttps2pi jmp out mov jg sbb (bad) xchg mov call out aas test add lret dec mov add push fldl jmp les xor mov (bad) push push aam push adc jo mov dec out into imul mov ljmp out sbb sbb out cmp sbb xor int sub mov lock ds repnz mov out into idivl test aas pop ljmp push insl out jae mov add out mov mov rcll out add mov test out pushf rorl or cmp call pop out fwait xchg pusha int out sbb dec jne xor movb pmaxsw push icebp jge fnstsw lret sub rcll xor sbb bound (bad) out and dec iret stos mov inc lret lods out shlb mov jmp lret xor (bad) dec lock dec insb popa jae,pn push and adc jecxz push pop lret xchg jmp jb out pop imulb sbb cli jge sbb push sbb out add aas shrl addr16 inc ret out mov mov sbb push inc out in das adc dec rcrl xchg out ret inc call cmp inc mov push cli mov mov out cmpsl push test pop subl bswap xor in xchg lods jns sar shr xchg ljmp decb mov pop out movsl dec pushl xor jb ss aad lret xor lea out or mov mov mov out mov push xchg out rolb jmp pop out jnp lock or out xor and push push jbe push inc add movsb repz bound jae insb outsb inc into pop pop and aam dec adc cmp (bad) loope out jge pusha popf std cmp xchg dec loopne mov addb out in stos pop mov or clc shrd mov ljmp mov rol incl arpl out or pop std push add out cs rorb out inc add lds outsl sbbl in pop pop out int jmp out fs jb sbb ja subl xor xchg pop loope loop jl sbb xchg loope mov (bad) cmp pop add mov xchg scas leave int aas cmp (bad) in pusha ret and outsb out add mov pop sub (bad) and fucomp int lret or das enter test ja ret andl sahf mov in aad dec cmpsb jle aaa loop jae mov mov xlat mov pop push adc pushf loope rorl add push (bad) mov out pop hlt (bad) fnstsw push popa and adc add sub aaa xor cmp xchg fwait jecxz add pop pop mov lret xchg pop xor mov aas (bad) sub inc out (bad) ds or and adc inc mov out (bad) cmp stos lret cli out pop flds pop (bad) pop cmp and test xchg decb lock mov sarb push in (bad) icebp shlb stos shr addr16 scas jne jmp lea pushl jo imul mov push dec xchg dec jbe fs popa jge decb lret jb cs xor nop jns jp cmc les in push lea das lret push mov lcall cld in (bad) int loopne loop aaa (bad) clc mov rorb ja rcrl mov repz incl xchg ljmp in out sarl daa insl loope push adc jbe ficompl out mulb lods imul icebp xchg push leave pushf aaa xor inc inc jmp das je out jnp jle push arpl sbb add add and jb jns jecxz loop mov scas push cmp insb add ljmp push mov fwait stc ljmp sbb pop push add and mov inc pop sbb pop testb stos jecxz cmpsb sti xlat push jb jnp cmc shr jge scas lea (bad) mov mov sub (bad) mul sti stos lock in pop fbld outsl sub imul in xor (bad) hlt out (bad) xchg adc out push out idivb mov ja,pn mov jp push (bad) ljmp pop testb out je lock lret push lahf mov aaa ficomp dec mov imul and inc popl mov lahf xor in xchg pop ljmp mov in out (bad) sarb pusha xchg cmc jecxz sbb aaa push enter jg shll sub (bad) (bad) out rolb out lock js test jns dec test jecxz out mov clc outsl nop and popf xor and sbb je icebp js lcall cmp out or in fistp xchg mov jl mov push sti mov lcall xchg pop cmp mov popf adc dec pop mov inc add test push movsb pop mov loope mov pushf mov cmp adc xor push sbb push out fwait dec sbb xor aas bound xchg push repnz mov icebp pop (bad) dec movb ds (bad) adcl jns ss push cmp xchg pop xchg fwait into cli dec out mov jne mov out sub sbb cmp mov out inc pop jg push push js out jp adc mov lahf test out repnz mov xor pop das inc sub push out cmpb sbb in aad in out popf dec adc xor ljmp out cmp test das mov sub push stos loope mov cwtl sub (bad) push into gs aaa test cmpsb fldt xor in or loop movsb out dec mov aas mov mov pop add xchg dec inc mov lods ss (bad) and push fisttp es push mov lods out mov cli push push out stc scas hlt mov imul popa movsb int3 add loope mov out xor or imul cmp sbb fstp call sub daa jae cmpsb fnstsw jmp test leave and (bad) scas mov jbe xor pop out popa mov fldenv push and dec shlb (bad) jb loope mov adc mov xchg push lea or dec out ret sbb iret out in pop pop repz rcrl pop imull xlat dec xchg out and out adc mov out push cmp pop aad ret and shrb cmpsl cmp out jg push adc nop sub cmp ret insl out movl call out and jle stos push cltd out insb repnz (bad) mov std mov ret fbstp out aaa in mov mov push dec mov enter lds jns out xlat mov clc push pop inc jo (bad) iret push inc in repz add dec cmp (bad) jl inc sub jge out cmc jg out cmp cwtl pop mov test pop out aas push divl xchg cli les mov jg cmp pop adc (bad) jp (bad) or adc xor sti pop out mov jle loop lret jp xchg das out mov mov adc inc clc out mov mov aas (bad) cmp dec loopne adc cmp jl out pop pop pop mov iret (bad) adc repnz out (bad) out arpl bound pop rcrb out test xchg out mov jl add clc (bad) fildl out popf pop pushf pop fcomip ljmp push or pop jns (bad) xor mov out clc jl ja loopne lcall mov sti ljmp out mov add bswap out cmpsl add push sbb pop jae out jb je lea (bad) sti or sub add pop lahf mov mov (bad) testb pop movsl push out mov or mov jno out repnz js ret mov lcall mov (bad) cwtl add adcl out lahf add out cmpsb xchg pushf (bad) mov bound push out fsts adc sarl out std jg cmc mov adc out test pop jns cmp rorb mov sub pop mov mov inc test out ret dec sub (bad) (bad) xor das mov mov outsb out jno int js or out (bad) je push ja jmp mov mov and or cmpsb mov adc jg add push shr adc dec push or rcrb xor aad scas mov jae cmp pop cmpsb sti out ja jg or cmc out dec inc div cmp in mov outsl fbld out hlt jno push loopne orl fsubrl fadd loop cmp iret in xchg push in jmp pusha cmp int3 int push and dec psraw addps and imul out insb fmull jge sar out jo mov sbb lock mov mov scas out aas add mov jno push stos sub pop push out clc sbb movsl and shll bound cmc pop ljmp out inc cwtl incb sbb fsub sub out xor imul out push push sbb lret out hlt arpl bound push imul in hlt data16 rcl dec (bad) decl popa inc inc cmpsl out jno pop jge jmp cmp mov js sti sbb add sahf mov out (bad) aad dec insb adc bound icebp pushw pop inc cmp pop inc or repz push mov loop xorl push lahf cld sub xor andl push and jae test push cmp sahf and sub sti js jbe mov sbb cs mov jno loopne add aas push push das dec dec lcall and repnz pop xchg outsb in sbb sti jns pop das lock cmp dec (bad) xor ret and jae aas out push nop outsl add mov sbb jo aaa daa ljmp out sub lahf int mov pop push lods aaa enter clc lea out scas out outsb es or into lock dec inc or push cmpsl dec out pushf pop call dec and inc out rdpmc mov push jp mov out sub (bad) xchg fs out cmp pop ret out cmp repz jge xor and jp adc pushf iret out push inc or je fwait and (bad) pop loop cmp dec (bad) xchg stc addr16 mov cld nop data16 inc and or out sub cltd mov jno xchg or seto pop jo in nop bound cli movsb lret mov jb sahf cld out mov xor dec mov dec adc mov out mov in dec xchg sub out mov shrl mul add add fwait mov lock xchg xchg out fxch in jle push imul lock out icebp clc pop sarb and repnz pop cli ret ret les lcall out push fcoms aad sti xor mov and adc (bad) ds test in jne repz das add pop pop movsb mov in cmp and in arpl adc dec inc adc into movsb aaa sub xchg inc pop lock out jnp push dec jle je mov fistp pop ljmp shr mov cmc mov (bad) aaa bsf pusha adc adc cmp mov inc cld movsl and dec mov xor loope push ljmp out fidiv jno out mov imul aad ror aaa jge adc pop loope pop out mov push pusha or push cld rorb cwtl faddl jmp ret insl lods mov (bad) xor add lahf inc stos (bad) xchg in repz jmp scas adc or popf std (bad) outsl lret xor aaa out add fs xchg pop mov fdivrs pop mov push call mov ret fucom xchg (bad) mov sub leave (bad) xor jb push out dec mov push out mov push push jae push jp sbb (bad) push cmp out xor daa mov aam jp out jge gs mov cs jecxz sbb out mov mov aad in (bad) sbb lret mov das (bad) xor out pop pop aam flds das ret int or hlt xchg lods sti mov xchg sbb pushf insl dec arpl dec or xchg jecxz je outsl jg icebp xchg pushw std pop dec cmp push xor inc aad nop je out (bad) sub es inc clc loop mov jg push jmp pop sti (bad) mov mov out leave inc push enter stc cmp add pop xor movsl out mov pop pop int cli ds (bad) cs push loop cmpl mov or or xchg xor push out out repz push lock jmp push into jle mov popa fwait mov sbb iret mov mov shl xchg add test inc cmp fildll loop mov adc inc out js mov sbb jge out aam mov adc mov outsb (bad) (bad) aaa out inc in pop jp cli (bad) push popa orl xor jmp push mov jno jecxz in dec dec push out loopne mov shll adc inc out (bad) fnstenv add adc cmp icebp pop lds push lea out fwait jns inc in mov mov jb or and cmp dec gs sbbl inc ffreep and rcll pushf fistpll enter dec add mov or push xlat outsb xchg mov out fsubl rorb cmpsb lcall clc inc inc mov or adc jp inc cmpsb out cmp addl jae pop fmull out (bad) xchg mov jns pusha sub adc jae jb fild pop xchg (bad) push and dec sbb pop mov jne inc clc outsb cmp or cmp sub out sbb cmp icebp pusha rcr adc mov and outsb lea bound (bad) subl jle rorl lcall fstpl es out mov (bad) xor out jnp sbb call xlat cmp lahf jmp rcl out out (bad) mull cmpsl (bad) out popf add sub das (bad) shrl ja out add pop out divl cmpsl sbb insl pop out aad or mov test ljmp dec push xchg xor xchg xchg and mov call lret or js out arpl mov jb jnp sub andl adc jge jno,pn cmp arpl in add fnstcw adc mov and into lcall out xchg push inc mov (bad) cs add cltd aam pop mov or out push scas cltd push ja lcall (bad) (bad) dec imul mov clc cltd xchg jnp (bad) cmp out pop pusha dec xchg or out lods insl xchg leave jmp pop aad ljmp pop inc jns inc (bad) out adc jne out loop adc mov out push ficom cmp sbb stos pop in insb out add (bad) dec mov cmp dec (bad) cmp addr16 xchg sbb out ljmp call pushf jp out (bad) sbb test in in out pop dec (bad) jb xlat inc popa out ds mov pop push and dec dec add mov out add cmp out aas loopne or mov out sbb pop mov xchg insl loope push xchg or (bad) push dec pop push out add fisttpl pop sarb out in nop pop popa insb dec lods pop mov shrb mov add xor dec xor (bad) pop popf test cmp in xchg push out mov bound lods sbb cld movsb pop push or out insl daa es or adc xchg pop popf shl lds jbe and add (bad) xor adc out (bad) hlt sub and inc out adc lret in cmp jae mov insl lahf repz dec out mov ffreep pop xchg cmpsl ljmp ljmp pop out mov (bad) xor out push pop (bad) xchg aad xor test mov mov test push shrb sbb mov sub sbbb cmp jo (bad) test negl and sti and sub or outsl mov xor imul cs jb test das pop out push mov or out loope test jle adc lods xchg pop dec lahf aam mov mov push loopne and mov aam mov inc test mov mov pop out add dec test dec add mov pop iret fsubrp aas aam hlt mov out inc mov ja out mov loop adc dec adc out out cwtl pop cmp imul ret aaa pop es hlt mov out je mov ljmp push outsl test out dec dec repz out cmpsb scas mov jmp inc call mov aas mov xchg xchg pop sub adc fistpll push loope out in push scas xchg xchg insb pop gs out push sbb mov xor and cmpl clc jbe out lahf into std in loopne sahf outsb mov arpl mov jg test das xchg pop xor scas push adc mov decl out (bad) out pop jns push std push sbb push xchg in (bad) mov mov push out xchg std push pushf mov mov mov mov xchg loope pusha xor stc dec fwait arpl mov out or cmp out (bad) movsl sbb jne push sub jg out mov popa inc sub cmp pop and mov decb cmp pop out add xchg aas clc insl out mov jmp pop out and out cmp add insl out xor fiadd xchg test out rcrb fsub repz sahf push adc adc lret xchg pop (bad) xor data16 aas cmpsb and imul add xor (bad) xlat xor pmaxsw sbb mov sbb dec cmp jne jecxz dec jmp mov cmp fucomi mov jg js mov bound mov jbe out (bad) jbe out (bad) mov push push out mov pusha xchg push mov jne mov xor xor out jns fistl and pop mov push inc out (bad) test mov adc test call out or cmp or (bad) sahf imul or push loopne cwtl sbb adc dec jecxz notb sbb mov imul xchg cmp out and xchg jne out imulb es ret push rcrl pop or loopne out mov dec (bad) out sub loope hlt stc lcall gs in pop out xrelease clc xor js push push sub push inc fildll out jae inc or (bad) mov ss pop mov cmp out iret (bad) fcomps (bad) and iret imul std daa fldz fwait mov cli or sarl pushf mov jo dec or nop int leave inc stc push rorl (bad) loopne sub xlat xchg dec add inc decb fisubl subb mov add xchg dec je aas paddb mov test std movsl dec ret xchg push xor lahf ss hlt sbb loop jge cmp mov out mov (bad) aas scas out cmp das je add push out cli inc test adc inc push idivl or mov cwtl dec sub xchg push mov dec or and jbe lods adc movsb inc ljmp lods clc out pushf in test mov mov rcrl fimull pop ds cmp mov out js (bad) jbe pop add cmpsb mov (bad) pop dec in lea and mov mov sub arpl pop out push call popf in (bad) push in (bad) out xchg lcall pop xchg sub ds std push sarb mov enter dec mov mov jg clc out cmp pop or sarb xchg repz inc outsb popf pop pop out sub and out incl loopne out pop test push sub out je (bad) jo addb pop movb push in and adc jg out mov jle in rorl out scas mov jmp (bad) xor sbb mov shrb sub int aaa sub sub imul arpl and dec jle fcompl in repnz scas pop icebp pop fucom add or xor and mov in cmp fsubr push pop sbb aad out jecxz mov cmpsb int out jae lock out xchg pushf cltd dec mov scas ljmp out ja call mov push jne stos sub jno iret adc add mov aaa lcall xchg or vmread imul (bad) fwait push inc out scas (bad) loopne scas push mov ficoml inc out cs scas mov pop not push adc add pop insb adc or fcomps xor xchg mov add and inc or xchg out jp hlt out cmpsl stos out dec pop inc cwtl jae inc test xor out enter sub ds sub fdivrp mov (bad) fbld pop stos and out sub xchg iret in jno (bad) loop shrl add daa int3 iret stos aas stos enter (bad) je mov adc (bad) xchg addb rorl repz ja adc lea sbb and leave (bad) fwait in push sub mov clc mov sahf out add movb out (bad) scas push out addr16 mov add out lds scas fsts out mov adc mov in lcall jbe jns call or mov dec sub push push pop outsl inc out xlat mov cmp adc leave push mov movsl push addr16 (bad) pop (bad) cmp lea out pushf and inc cld inc sahf inc out in mov dec lods std sbbb (bad) dec mov push out imul rorl and ds adc xor mov adc invd cmc lret scas in loopne (bad) popf mov mov lea add and and roll out cmc adc and push sbb cltd paddsb icebp mov shr fldl cmc les test xor sbb adc dec shrl addr16 sub int3 cmpsl pop xchg cmp icebp or mov mov out mov pop cmpsl pop xchg ljmp test xchg dec out in adc repz lock xor mov sub cmp aas mov shlb and sar mov out imul int and pop loopne js and cmc fistl lret cs in out loop (bad) mov pop out je imul xchg enter sbb aas mov jle lret mov out or popf (bad) dec loop out sbbl xor mov pop mov cmpsl pop out xor push fstpt jae fisubr mov adc xor andl dec or cmc cli out je test pop sbb out or mov pop daa push out cmc mov dec fnstcw pop add jo pop leave out mov add data16 out js jne je popf (bad) push dec inc subl pop in out lea stc mov sub out arpl push jle hlt cmp outsl (bad) pop mov lahf out xor stos adc xlat mov repz or dec sub add lods jp call mov add loopne push pop fs jmp mov and (bad) das push push mov fwait dec (bad) out in fmuls or loopne inc lock bound xchg lods imul jg negb and hlt jbe ss xchg es out dec les repz sub inc pop shrl fsub xorb out adc call (bad) lods xchg jbe cs xchg xor das mov lea neg sbb sahf pop cmpsb out mov xchg xchg outsl das out jae xor hlt inc cltd bound cmp xchg push jb jecxz sbb (bad) out decl shlb les cltd inc incb lea shrb mov out sbb dec loope add fdivs jae jg push aam mov popf inc add cli mov xor loope xchg jns stos and mov out mov and loop xchg pop andb stos adc out mulb mov out ds pop in or sbb cwtl call add cmp and imul or test aam mov push insl push xlat fmul out pusha or into sti cmp add movsb vmovaps mov jno adc (bad) out push repz push out xchg test push dec (bad) jb mov shl or ljmp xor js jb push jg lcall icebp out mov pop jg add cmp adc pop and je out pop inc jno mov aas out xchg sub pop xchg (bad) in je xchg jmp hlt loopne dec nop movsb jge out mov jp mov xor loop fstps jns in decb negl in sub out jecxz sbb out lods aad mov inc inc and xchg pop subl push xor out push push call jmp dec fwait insl mov jp sti pop aam mov int3 sahf out cmp pop lret (bad) out subb xchg fisttp (bad) iret shr push jo outsl mov dec mov imulb out inc insl or out sbb cmp insb out fs inc adc mov xchg out cmp xchg inc push imul and call (bad) pop mov out lea push jne ja repnz jecxz and aad pop pop out push imul inc ljmp inc int3 mov roll dec cmp out (bad) test adc lcall fdivr test and imul or es sbb ds out call mov mov pop jb movsb mov inc add out add stos cmp jl sub inc lea pop aaa in cltd out xor out cli jno ljmp test ffree out pop enter pop je cmc and clc xor mov rcrb fild iret ss sbb test (bad) mov aas add je mov out mov iret xor push xchg lcall insb inc or push addr16 call push int3 fisttpll subb out repnz (bad) jge (bad) out out inc and lahf enter (bad) jp dec (bad) in (bad) out pop dec inc hlt xor inc ljmp mov mov xor pusha out sbb out or lahf mov pop rcll and ret xorl mov out dec and out leave mov js loop sbb hlt test out pop in (bad) fstl cmp cs (bad) (bad) lahf or into push jb call jae addr16 inc scas imul cmc mov (bad) out fstl ret ds inc int mov cwtl out mov mov mov xor (bad) ss xchg lods push pusha fcomip dec (bad) fnsetpm(287 or ss iret jge ds out cmp js or test cmp mov inc out movsb xchg pusha adc pop jmp xchg stc test aas repnz push out cmp or pop aaa iret cld add jne or and sbb pusha nop je icebp out push xchg jmp clc stos pop and dec sub pop outsl push mov ljmp mov out and arpl cmp out xchg adc sub inc mov fucomip inc push jmp je pop sbb out adc fistl lret repz dec dec popa lock aam cmp mov cld in cmp mov ja (bad) sub and sub adc (bad) testb daa out test cli mov (bad) aas cmp call dec or in addl pop ret jl in or out dec cmc lret lahf js div (bad) cmp sub dec insl xchg negb jne and dec scas mov imul push cld pop jae xchg push or insb mov xchg ljmp pop mov gs cmp dec into stos pop push outsb jg adc sub dec scas out cmp sbb popa out cld rcr stos mov clc ds sub adcl pop jb lret push jecxz out mov pop cmpsb test lods push out fidivl sbb leave call sbb lcall inc mov out pop in or loope push adc out mov mov xor xchg loop ja adc pop push in mov (bad) icebp out hlt aam xor cmp out jp inc push cmp cmc out inc and lock repz or mov rorb adc and unpcklps mov (bad) mov xchg and sti sub in scas fwait cmpsl push sub dec call clc push iret inc data16 aaa ja ret out lcall sub notb and imul out push inc xchg inc xorl out nop mov mov neg scas insl jb outsb mov fsubl into pop out je sbbl cmpsb sti ret out pop lods sahf lds int out repnz add test mov jnp and insl pusha (bad) aad inc xchg sbb dec out push aam iret push (bad) mov call cli out add push xchg pop or mov inc jb outsb jno sar ret mov fs pop adc test mov loopne sarb or lahf jb pushf pop repz pop and push xchg out out out add pop in xor (bad) out clc mov add pop xchg out add repz arpl push sub pop add cmovle cmc jg ljmp pop jbe insb or idivl ljmp ret clc mov into scas out pop in orb pop ret or inc hlt je push cld pop out popa sub mov imul gs mov out dec xchg data16 out lret xchg adc out jae mov xchg das out stos jb addr16 js push (bad) adc ljmp ss xor jge and into out cmpsb out or sbb test out mull test nop xchg add sti (bad) and and ret pop mov push hlt xor enter xorl xchg cli in iret mov push cmc pop imul and mov mov out push (bad) adc jmp dec mov jne mov adc int3 lahf cli xor out inc xchg xchg icebp lret loope xor test (bad) (bad) dec or lods pop mov popa ja inc insl pop inc mov jecxz scas push push adc (bad) (bad) cld aaa imulb repz popf inc (bad) jo (bad) out xchg adc aad (bad) ds inc or shr iret outsl js imul mov (bad) ficom repnz ds (bad) (bad) pop jno insl jne adc imul dec xchg xlat pop out jo cmpsb sti pop adc decb mov out cmp je mov lods nop jmp inc out (bad) fsubr js mov out test sub xchg cmp aas jmp ljmp out cmc mov fucomip pop push test lds sbb out orl repnz into out mov (bad) xchg xor popf out (bad) jae dec ret adc iret outsl aaa mov in aam cs (bad) out pusha inc jmp dec jmp shrl push mov push cld nop mov out sbb fnop icebp insl push jl adc pusha mov pop loope loop jecxz out xchg sbb jp inc pop enter push repnz in add mov jno flds outsb (bad) lret call jae out xchg ds in and jb out ror aad push sub iret paddusw sti pop mov add mov jno shrl inc inc decl add outsb sub stos mov dec repz xchg enter (bad) xlat xor out adc repz movsl inc xor and or xchg xor out push rcll xchg scas fs mulb mov std jo out lods int3 lds in out and cmc adc mov or nop sti fsubr je mov sbb (bad) jbe push inc (bad) mov sub pop dec jae fld1 or sbb pop dec adc mov loopne in aaa pop nop ljmp out pop fidivrl test fistl adc pop gs leave pop mov push sbb arpl push lock mov jae adc mov dec shr or pushf jmp movsl cli ficompl xor adc ljmp pop cmp in adc std or push mov out inc xor pop add in lcall out arpl je loope jb (bad) in outsb outsl inc pusha or call adc outsl (bad) xor ds push ljmp inc mov sub out add incb out xchg popf sbb inc scas pop xchg cmc je loop sbb mov insl out sub addr16 add nop and mov out pop dec fdecstp push push pop adc inc push push fistl das inc addr16 nop mov push imul insl mov mov aas cmp mov aaa adc ret test nop jl (bad) lods xor cmp les jno push cmp xchg mov or ret loop std mov (bad) jmp out mov ret pushf mov out call popa add sub jecxz mov les out into pop pop or inc mov out call jl cmp mov dec mov push lods out cmp scas pop addl aam push and or loope out xchg sbb aas je out mov cmp out mov mov test outsb push aam jns mov inc in (bad) out stos xchg sbb sub inc inc fwait dec jbe test stos pop add sub ret push lds cmp mov std out and jmp mov ljmp cmovge ss add dec lcall mov insl pusha out (bad) fistp fcomps push out lret mov xchg iret out in mov shl mov xor ljmp out dec in xchg or sbb (bad) mov iret jge in jmp jl push inc mov out out in cwtl test fistp and inc lods add or inc pop stc jne out cs setb mov sub xchg out loope and inc sbb stc out mov dec je inc lock pop xor fwait mov xor int3 cmc out dec or loopne,pt mov cltd inc in mov jo xlat and mov out sub add pushf out outsl sbb cmpsb cmpsl insb stos push out push iret push js fldz fsubrl and dec pop push out imul stos pop pushf loop out mov xchg sub shr and cli leave pop ficoml push cmpsb test mov aad loopne xlat ror or std pop rolb mov out loop mov xor add adc push in dec sti loopne scas push out jle inc xchg dec add out dec pop xchg sbb pusha pop or pop xchg pop ljmp insl std adc loope (bad) jno outsb loop popf add (bad) shrl or out push xor mov js sahf enter test add cmp arpl push lods call incl test lcall sbbl mov lds pop shld jecxz cmpsb or or (bad) cmpsl dec pop lea (bad) cli in ficoml pop cwtl jg pushf outsb call out repnz mov andb xor sahf mov icebp (bad) out push xchg pop clc xor ja out push and add dec adc test jg dec pusha out cmp mov add and out jnp decl icebp inc gs les or out sub shlb mov adc sub xchg aam stos movsb jns icebp pop cwtl add xor dec mov stos movsl push sbb add ja test push lock out or scas xor inc dec out jnp mov cltd push jle push lret push out push jb mov xchg xchg jge (bad) and ret out xor or out and jo hlt cwtl xchg adc add add out mov test dec popa outsb notb cmc xor jge out (bad) adc jg scas fucomi add sbb repnz rcrb ljmp jmp shrd jg arpl bound cmp out sahf push xchg in dec mov push mov out sub daa sarl bound data16 inc lahf dec jg push mov test jb xor xorl adc jmp add ds out or ret mov lea out cs pop popa (bad) aaa out xorl adc shr test jl sub jp stc mov int3 push mov call aas jmp out fcomp aas pop cmp mov mov inc xchg jmp jecxz sub std and mov cmp sub push je push pop in das iret ret shr movsl pop (bad) lods out (bad) pop je sbb lea push in lahf mov (bad) (bad) push imul das push loop in lcall cltd ret insl out fwait mov add mov std pushl mov movsb out roll mov out nop in int jmp scas inc push out inc mov iret add rorb cwtl call pop (bad) sub sub add xor pop js fisubrl (bad) pop mov insl in in lock out inc loop jmp xchg icebp adc out pop push (bad) cmc mov pop arpl cmp adcl lret aas (bad) arpl pop xchg or mov mov or jb dec pop mov sub enter jae pop in out push outsl hlt insb jp fldt cmp out (bad) mov lods add jmp (bad) loopne mov jp xchg lods mov fcoms dec dec cmp pop cmc les cmpsl notb fucom inc jmp push out push loopne jg ret sbb out or push shrl mov or push adc jne jae sti das fwait or daa add imul icebp and add in loopne sub rorb add add out out inc test mov out jb mov js int out loope dec ret mov push inc inc out out test repz (bad) pop cmp inc repnz insl dec adc lahf movsl daa (bad) mov dec out out or jae xorl add es pop xor sahf out jmp and iret jo add mov xchg xchg pop icebp out cmpsb push dec out sbb andl cmp inc out arpl pop xor (bad) sbb and jecxz jb fwait out movsl das inc fisttp gs fistpll fdivp in clc lret xor movq and and fbld out loop xor addr16 shl adc cmpsl scas iret pop imul icebp push pop jl mov cmp iret (bad) dec mov int3 pusha fmul out (bad) test test dec insb adc jb jecxz push mov shrb mov jo mov dec dec mov hlt adc aaa mov addr16 arpl mov sti out lahf hlt fs lods mov pushf cmpl loop (bad) out je pop adcb inc out adc dec cmc lcall call out sub mov mov xchg cmp out and pop cltd repz jecxz (bad) lock jb call les faddp out adc sub and push cmpsl clc sbb fstpl in jne scas adc adc dec clc sub std sub mov (bad) sahf insl cmp push cmpsb mov lcall push out insb mov nop or repz cmp (bad) mov pop lds xchg hlt push shr in sub push out repnz pop inc xor roll jo push stc out imul (bad) and cltd out push xor dec test pop out jp stos pop xchg sub or mov xor out rorl bound out fadds arpl stos xchg js push jmp out aaa not inc outsl iret sbb out (bad) (bad) sub jmp mov mov cmp (bad) push bswap add loop popa xor xacquire (bad) icebp out ljmp cmc lods push aas sub ljmp aas in loop int3 imul jg and out pop sub out insb add fist fmull mov lock out int3 cmpsl jno (bad) ficoml out cmp les sbb push mov adcb imul out dec sub add adc mov xor out dec jb,pt jbe out sbb fstpt je (bad) xchg dec test cmp push fistpll aad subl sarl out pushf xor cwtl mov shlb dec mov divb push cwtl inc sbb cmpb cli out pop (bad) pop or pop maxps mov ljmp ja out shr es inc jo out (bad) pop inc stos cmp out jp and inc or sbb inc mov push loopne out adc push push push lods ljmp pop xchg (bad) sti inc pushf bnd stos movsb xchg inc data16 out add mov into les addr16 out xor add adc loopne mov cmp jae insb loop ret (bad) jmp andb out sub out movsb and cld test out jg push and xchg loope out cmp ss sub pop idivb jge fwait stos xchg mov sbb sub out mov add lahf out pop fcmove stc inc mov (bad) out and cmp js push out fdivrl ds mov out mov pushf (bad) mov insl scas or in xchg pop popf mov sbb fsubl cmpsl xor idivl mov fxch mov cmp xor jmp aam shlb out push mov cmp and fldcw out adc pop pop test (bad) cli out xor (bad) stc add jo out mov out out inc sahf sub mov test (bad) inc (bad) jne repz lds push or out aam sub rcr lahf pop out cmpsb icebp iret add pop mov movsb fs out pop push out or leave js pop dec jb lahf out xchg lock imul idivb mov sbb or dec lock les (bad) fildl lret outsb lea clc cli aaa adc jbe out sbb mov pop icebp add call loopne js test ds out mov out xchg hlt add test icebp out dec repnz mov mov add push out out pop pop pushf loope mov mov sub cld movsb sahf ja (bad) out add lock or icebp sbb das cmp adc sbb cltd mov stos jne stos and adc mov xor sbbl out mov mov out push imul (bad) adcb cmp les push out xchg pop xchg out fcomi outsl or inc (bad) dec outsb cmpsl out or jl and inc mov add das and cmp push pop cmp iret push ret loop inc or out inc sbb or pushl inc pop push popf push jp loope notl pop (bad) mov jae sbb adc jmp out ret sbb jp pop mov jecxz icebp pop fucomp mov sahf ds sbb out ret inc mov test into jo inc cwtl insb mov and cmc xor jmp jl das outsl cmp in fildl out aam stos pop mov out les xor out ret leave movsb jb cmpsl in out cmp (bad) imul dec (bad) repz inc out mov mov popf out xchg sub mov fistpll pusha repnz lods into push rcrl out pcmpeqw and in inc std out sub stos lds push out (bad) xlat mov mov pop shrb enter rcl pop jb fdivs jl jns adc lret stos mov push cmc out (bad) idivb gs inc pop push jnp jne arpl xor pop test mov (bad) push inc out and outsl mov dec inc out scas mov (bad) (bad) lods cmpsb repnz add jge add xchg xchg out dec dec pop (bad) fnop aas loop pushf xor mov pop jns ss outsl mov mov mov mov call bound out mov dec or jmp jb xlat out addr16 or fwait popf xor xor movl xorb jno scas and imul pop jbe out cmp cmpl dec imul fs push shrb jbe iret mov or int pop jmp lock dec xchg out cmc and out sbb test loop fiadd pop (bad) mov je aam insl bnd out xchg and fucomp roll test iret clc pop jae xchg mov int3 incl or pop aaa imul push ret sysexit xchg addr16 and and ljmp notb out mov cmp dec adc and mov xchg out cmp or addb pop int push or cmp xchg out (bad) into shlb mov out and repz lods out clc out into pop xchg mov and movsb out fcoml sbb out lock out ficom push bnd jg (bad) clc popa out repz test pusha mov lods jns push leave and daa add dec push pop mov icebp idiv cmp in cli cmp or mov sahf (bad) sub stos ret jp (bad) test dec divps movsb lcall rcrl out sub enter fbstp push call or ret loop adc mov jge jns cmpsb jmp ds fs inc jnp rorb mov cmp pop mov out jmp xchg jae aas add sbb ret ljmp xor sub fbld (bad) aam fcomi or xchg out adc xor pop popa pop pushf lahf add out xchg stc mov test add dec jp pop jne ds or mov lret ret jno push ds stos adc inc jb enter outsb fucomp dec inc std movl subb jno inc out dec test and js out (bad) xor mov es xchg out leave rclb dec out mov xchg xchg out sub pop std dec xchg xor (bad) inc js imul out pop mov mov jg fiaddl push adc lret sbb dec out out mov out push push popf or mov xlat xor out push mov clc decb popa out jne pop jge pop sbb mov adc mov enter mov jns mov mov cltd dec cmp xchg movsb push out gs sahf sub lret push xor mov cs stos sub stos jne out pop or iret jle inc jb inc imul icebp out push adc adc xchg xlat fwait jl out xchg mov mov jno call xor out ret data16 push (bad) jo and out and adc lahf cwtl xchg xchg call cmp sbb ljmp out add mov xchg aam rcr inc lret cmp push pop lods in js xchg dec mov adc divl out in push andl out in lock xchg mov push or out popf xchg hlt or push or ja out cmp imul loope scas inc fdivs cmc out in jle ja adc mov jne in jmp (bad) test pop cmovns xor pop dec jp out push or iret loope cld jb cmp mov les mov mov sub dec dec push xchg out fistpll fdivrs test out mov xor lods js cltd inc out (bad) jb aaa pop je out (bad) (bad) cmc fidivr aam mov mov and insb sub subb push mov pop std fldt jne out rcr into mov push out push fs hlt les mov loopne cltd dec pop jb inc out mov popa int pop call (bad) jle xchg in xor jno in mov mov testl mov adc mov out sub data16 out test inc cmp dec mov xlat push loope jl push (bad) fldenv xchg loop fdivl out or out lods xor push xchg mov inc (bad) (bad) rcrl das sbb outsb ljmp (bad) mov cli out out push sahf pop push out mov adcb jb xor add scas jne iret ja js,pt frstor mov (bad) xchg into jns test push into ss inc xchg jge adc (bad) xchg js cwtl enter test ljmp sbb enter push out cmpsb pop or sub xor mov mulb mov pop fstpt mov mov cmp push into leave mov cwtl gs lods cmp pusha and sbb pop out xchg dec or inc rcll push dec scas mov cmc mov das or inc lods pop dec mov push call (bad) (bad) lods scas xor ss sub pop or js lret out jecxz das cmpsl mov test sub aaa xor xchg repz out pop test cmp jge leave cmpsb xor xor in cmp and int3 andb push out adcl ds mov insb imul test out and cmp mov in push (bad) iret push (bad) and pop addb add mov ret push cmp in test sbb jne push popa outsl mov dec xchg pop call out sbb mov rolb xchg lcall adc iret jbe (bad) mov sti cld jl js pop and (bad) mov jmp testb test mov out je daa or out aam das push mov inc fildl out dec test xor jns cmpsl jne cmc jecxz bound pop out movsl ja xchg push jnp or fxch loopne mov dec mov out into fnstsw inc les sub js push dec (bad) pop xchg or (bad) in add pusha mov leave sub out call cmpl mov and cmp ja pop push xchg (bad) sarb cmpsl jo push pop imul push out jle nop ljmp fstpl jns ror push popf cmp (bad) ljmp popf ljmp push test pop out js je cmp stos pop or in fabs aam negl cmc imul rcl in adc mov mov test ret in pop sbb pop jae loope mov out add dec dec outsb adc sbb out in dec out (bad) mov xchg jo stos loope push xchg out jno ljmp push fistp (bad) pop pop cwtl jge stos mov cld xor scas out add fs insb and lock out xchg mov xor adc sarb pop dec xchg imul adc xchg cmpsl ds in data16 shlb and jg jmp es jnp dec inc mov pop adc lods iret or xlat adc stos (bad) out out sti push pop (bad) ljmp out lods mov add mov jnp mov lahf rolb idivb mov pop icebp popf or inc out in out pop in pop pop xchg out jns sti jl add adcl sbb push shll out stos lret repz out push mov and inc or out xlat imul mov jo (bad) out cmp xchg das jns aaa cmc out dec cmp notl fildl out jl and sbb mov pop addr16 add in push lahf sub xor out mov fs rolb loop lock xchg cmpsl jmp jmp inc cmpsb in mov push sbb lods call ss adc jg ds mov loopne jle dec sbb jae out sti jno add push popf out loop mov scas mov aas pop std push sbb gs in lock or insl cmp (bad) mov jge push repnz dec jl xor data16 dec adc out cmpsl sub jmp out ror nop jno out fistpll adc jge out dec popa or xor cli test sub jb pop and pop scas test push jbe dec loop sbb out mov xor xchg out xlat (bad) std mov roll adc dec push lahf (bad) fcomps inc sub pop fsubr fucomip and adc xor pop out xchg xchg mov arpl mov movsb in jl jmp sbb adc xchg pop sub pop into out push rcrb ljmp cmp push clc out mov test popf into xchg iret out das data16 test mov popa dec out clc lock icebp repnz push cmp aad loop ret dec std out inc cli movq loopne (bad) stos jae mov js or mov inc jge inc loopne xchg ss out xchg pop rep cmp jb (bad) test inc xor pushf xor pop cltd out pop outsl in push and xchg xchg daa lock or shll addr16 and jecxz adc dec push fcmovnb sti (bad) pop mov jae pop out movsl push xor mov ss and fsubrp call mov je test mov (bad) out cmp out (bad) lcall mov fiaddl daa jb dec fidiv pushf out in pop insb in or jne xor stc mov adc out sti dec lods jecxz out sub mov out add cli out push imul pop pop inc or mov xchg add lret out (bad) pop pop push jo dec dec jecxz jnp into inc cld (bad) icebp xchg in insl xchg out es cmpsl fiaddl xchg into insl insl mov mov stos sbb (bad) lahf ljmp mov and fiaddl sbb out ffree pop jno cwtl out mov leave or out jmp sbb dec adc out pop pop (bad) cld jnp adc out rcrl and out mov adc sub test ficom addl add add adc add push mov out and dec add loop add adc add bound push xchg (bad) pop inc pusha psubusw int ret mov (bad) jns je adc mov lods out jl aas repnz inc xchg icebp pop add insl (bad) push ucomiss mov lahf (bad) in push inc out xlat mov out out pop scas imul je push out (bad) loope mov jo mov icebp dec jb cmp jg std and in das outsb sub lock sub lds inc push push out sbb sub out cmp jle push out xchg inc call mov mov add insl out int3 jb ss fidiv loop bound in das jg dec aaa jns jns push popa out adc or popf mov dec mov jbe test data16 mov sub inc stos loope mov out add inc add mov xlat bound out push jecxz dec sub jp and jbe jo scas mov (bad) jg insl adc in push and xchg and adc (bad) call out pop out sbb clc jg mov sub in (bad) pop loop mov scas jmp dec mov cmpsl or das push xor sahf mov scas sub (bad) mov pop pop out cltd imul out pushf into scas sbb ss out fdivr es mov push out nop jmp lods jb cld out adc xchg cli pop dec adc lss in enter (bad) je inc aam (bad) mov jl adc outsl jbe out pop mov fnstcw (bad) bound xor clc dec ljmp pop out test out ret out inc in lret test (bad) js dec test not sub mov ds push js xchg xchg mov mov out and popa imul (bad) dec lock mov sub test xchg out loopne ljmp idiv jne cmp orl adc (bad) ffreep lock xor pop (bad) push pop jno xchg call jae inc and out jne aam xchg add adc or mov jns into pop push outsl jle push push push jne jno pop mov (bad) push dec (bad) dec loope in rcrb pop jne adc ljmp iret sbb mov in push or push dec xor out je loopne aas fs out inc divb stos pop dec cmp mov in xchg fwait out jne pop jle jbe cmp daa dec (bad) scas ljmp sahf stos mov mov loop fistpll lret out jp add dec mov dec inc out inc add dec ja ret add jo popa fs add mov js mov sbb push inc pop test dec lods out pushf ja outsb and rol enter (bad) fnstsw inc inc adc cmp pop das out nop rorb bnd dec xlat xchg push push jp into pop push sbb aaa out (bad) dec cli ljmp dec pop je lods pop adc rcr aam or daa rorb sbb test sub inc lret ja movsl out aam mov int3 xchg imul es out (bad) cmp psubq out pop jle mov out aad cmp and lahf xchg and out xor scas cmp (bad) mov popf ljmp fadds decb insl mov sub inc out fildll push xchg adc pop or enter dec insl test sbb and popf aad fiaddl test xchg xor cmp (bad) jmp fnstcw xchg xor pop in inc jne ret out and or or loop (bad) mov (bad) jg mov lahf xor (bad) mov out mov dec das hlt shrb jno out xchg aas iret mov adc sbb mov cmp rclb jp negl out jnp adc jg stos pusha adc lret incb xchg xchg jns,pt cmp out psrlw pop push scas or arpl popa push sbb jmp out inc or and sbb xor fcomps pop jmp mov mov push incb jg pop jmp imul (bad) ljmp mov fs dec loop out dec jge cli psllw cmc push clc ljmp push loopne lock cmpsl jnp fisub jmp sub sbb dec adc or cmpsl leave pop dec icebp pusha cli jge popf out and xchg enter mov cmp mov sub pop push out adc jge jb xchg add icebp pop les xor out sbb and iret lea inc pop or arpl jnp jae push mov js outsb jmp pop jg ret xor cmc push out pop or push out mov cmp mov mov jb shlb pop aam mov cs idivl loope pop (bad) cli or jg data16 in test into clc push test adcl out out aad add jno out pop sub push cmc lods or mov sar mov (bad) popa mov adc stc jecxz inc jo mov mov dec scas (bad) iret rorl jge lods cltd push (bad) test pop out mov xchg imul cld bound (bad) repz lods cmc push ja inc jmp in and outsb pop pop or out outsb cmp out incl stc sbb add pxor mov pmaxsw fistl mov in out jnp movsb xchg ret ljmp adc pop iret cs jmp pop mov in lock icebp stc push jge mov adc js,pt shr jg (bad) dec ss cli in xchg sbb add lods xchg gs lcall xchg xor pop rclb mov push sti push and pop jge negl mov das sahf xor xchg and pop out out lods orl pop pop movsl pop loop sub test mov inc jge adc repnz push or shr lds jge xlat adc arpl ror adc add aas loop repz out or jne xchg xchg cmp push jno pop sti in out jle dec fstpl leave outsl (bad) aas xor cmpsb xchg out test sbbb outsb and jbe jp push loope ljmp out (bad) fdivs jno sub jp dec fstpt into cli popf fimull loopne push sbb add clc push push xor xchg mov cmpsb jo mov xchg pop in (bad) (bad) out push out aad int3 sti inc inc push mov shlb movsb insb lret cmc in jno cmp out fsubl adc (bad) pop imul loopne mov inc mov test mov out inc xchg movsb adc xchg add jo cs sub adc mov mov mov xchg mov out xchg xchg xchg je (bad) inc dec pop xor mov jnp ljmp out xor mov push mov (bad) imul data16 or cmp pop out ja mov pop add mov push xchg sbb or jg xchg mov aam jo mov (bad) xlat fs outsb (bad) push push int3 test ficomp out add clc sub (bad) add out xor jecxz in dec (bad) repz insb out je shll jae jle push clc lods sub pop dec jmp cmpsb inc std cltd addr16 and jge repz mov push sbb inc std mov shr das inc mov ret push in out (bad) sub sub test or mov jnp lcall push out cmpb xchg test cmp (bad) inc dec sbb sti push and (bad) xor pop out mov (bad) cmpsb out ret pop cmp js out divl jg fisttpl xchg pop int3 das cld nop or out and sbb aaa out leave lea out mov add cli out lcall iret out push fdivr dec jmp into (bad) or xchg imul push push pusha es stos push mov jno sbb pop (bad) lods gs out add add (bad) ja fidivrl and adc out add lea aaa sbb daa xorl add fistpll mov lea ret arpl out xchg sti xor and jnp jge jle mov das cmp mov or js xchg fdivl cmp (bad) icebp push jno test out imul out rcll mov pop cmp inc out inc jo ljmp repz xchg out dec mov aam call pop sub xor push sub test fisub cmpsb cmpsb out punpckldq and xchg cmp jmp mov pop add mov outsb inc (bad) cld xor aas xor out xlat fsub test xchg ss out cmpsb jmp pushf mov sbbl je vpcomud fcoml adc iret aaa cmp or sarb or mov mov or mov xor jecxz sub pop (bad) cmc xor insl ret inc cmp out push or imul int out or inc bound inc pop mov call push (bad) jle out decl lods jnp cmc sub sbb push movsl mov mov jo pop push ljmp xor xchg cmp sbb add inc sbb lcall aas lock fstp mov out test jne add bound or insb lcall cmpsb xor outsl lods adc pop add neg dec mov xchg push fs ljmp das xchg mov cltd xchg xor out mov sbb jmp mov fiaddl inc das int pop cmp in jp xchg sbb ret add gs jno loopne clc out imul out rcll xor aam dec and vucomiss movsb dec push pop fist mov cs (bad) mov out add (bad) mov mov cmpsb or or out popa aaa or dec aas inc push lods (bad) push in cmp out addr16 xchg mov into inc and mov rorb stos adc out je xchg push xchg (bad) imul pop int ret fnstsw sub and mov lret out cld notb xchg in (bad) jns sbb or fbstp imul std (bad) push mov mov fstpt xorl ret out aas mov out out mov xchg fstpl push sbb mov sub les add jg xchg mov xchg out sbb pop jae loop push test fs orb aas (bad) iret out rorl mov or xchg repz ss ljmp insb ret pop inc lret out lea in dec out ret xchg leave push out addr16 loopne lret iret out add outsb dec ss push mov mov scas clc mov es inc mov decb xor cmp aam shr iret xor and or mov mov sub jbe jns test mov jp out rcrl mov xchg cmc xchg fsqrt adc or lods addr16 lret pop fs movsb pop inc mov mov xlat dec fistp lret push jge fucomi mov mulb push stc mov jge decb aas shr popa mov out mov or sbb pop fs xor or cmpsl out jno mov mov jecxz pop or sahf mov (bad) (bad) mov test push out outsb adc adcl (bad) mov sub lret and test in cwtl sahf or pop fxam jne inc jnp pop dec addr16 imul lds iret out dec sbb inc out subb or (bad) xor les mov add mov leave out lcall adc (bad) in sbb mov sub mov test (bad) jbe mov and ljmp out push push in sahf xor jae cli scas xor adc sbb test add push fsub xorb adc dec xchg push mov pop pop cmp fucomip jbe cmp ja push sbb data16 sub js mov mov and dec out pusha xchg cli cltd jg call adc push pop addl or mov outsb xchg out stc push ret outsb or cmpsb clc pop add sbb jle in adc mov pop dec mov sub dec lea xor xchg xchg rol and inc and pop inc and das push in stc mov out ficom inc push aas imul rol out test dec js jp ds (bad) in lret and fldlg2 dec xchg outsl and (bad) out clc popf into dec loope daa (bad) out decl mov xchg cmp hlt mov sub movsl out cmpsb loopne mov sub jle mov out ja sarl jb jmp pop cmpsl int loop jmp push rolb cmp mov rcrb shl and adc jno push xor test mov push mov scas mov mov aas cltd out (bad) or in pop (bad) out fstl (bad) loopne ja out movsl lods and mov shufps push aas push in subb clc out and fwait pop adcl test xchg sub dec mov jecxz jne sbb mov rcl dec out adc fwait cmp jmp out mov loopne sub add aas mov inc pop nop out fldl2t out cmpsb adc aaa sbb pop or int test out pop sbb aas in and cmpsl push insb xor scas adc fwait pop icebp adc add jle shr xlat leave fsubs xor push outsl pop mov push or ja mov dec iret sub cmp imul divb arpl mov cmp out cwtl cli cmc mov iret mov dec jae sbb stos (bad) ds repnz rep pop mov adc adc (bad) jnp (bad) scas push xchg aas jnp es mov jmp inc loope mov aas mov jp dec xchg adc test out cmpsb (bad) push dec negb out cli jns sub cmp out push ljmp fidivrl cmpsl inc inc comiss (bad) ljmp out roll ja sti iret mov mov iret xor mul or add cs out fs pop push loopne adc mov leave inc mov in cmpsl out dec out add and out inc mov mov jg in shr adc add mov adc dec jne dec out push or mov sub jo add pop hlt ret jg cmp cmp in xor out (bad) push (bad) lock mov adc subl loopne nop divl mov xchg pop outsb mov fsts (bad) pop out fcmovbe imul cmp (bad) addl add xor mov (bad) xor or mov push mov inc (bad) icebp nop or jmp and into out out loop pop add fsubrp jb push push or mov dec pop inc mov fucom jbe out shrb or and shrb pop inc sahf std mov lret aam loopne scas sbbl push (bad) lea nop dec pop shrl xchg gs adc or cmp dec pusha pop imul iret movsl add and cwtl pop sti daa xor testb cld push adc out sbb xor sub cmpsl inc mov loop pop jl out stc inc jae push or cwtl out adc lret or or test sbbl loope mov es out mov (bad) mov outsb xchg or mov mov mov and loopne out mov lret pop xchg scas pop cmc cmp push sub pop out adc mov fimul jg aaa inc or repnz leave pushl sub lock daa fwait out mov shr cmp cwtl xor dec sbbl out popf pop out std mov and and (bad) das jns loop xchg dec ds out bound fcompl xchg cmp add dec xchg arpl (bad) out sbb push pop xorl imul jg les ret push jbe pop cmpb ljmp adc push decb (bad) mov rsqrtps sbb or sahf aaa out je jl in mov push out sarl sbb lods mov shl out ret cmp xor mov push dec fs mov ret pop mov lods addr16 imul mov jg outsl int3 or inc adc sbb cmc ds xchg sub mov add out mov aas pop leave out fs and add inc push out sub pop arpl xchg pusha dec adcb das out or fstpl or out nop push add sub out dec dec mov ja sti in rcrb rcrb mov pop in cmc out ds rcll jae push inc inc cmp lock lcall cmp xor into aaa mov jg out xor bound mov push int3 sub out mov faddp popa pop and out das in (bad) mov cli in in (bad) hlt out out inc ljmp out or mov enter out xchg cmpsb mov cli arpl test pop clc std mov mov mov test and out mov aas rcrl bound push outsb jmp pop popa pop (bad) mov lds jb ljmp neg push add pop jbe mov or xchg pusha xor out and int inc jns jl repnz ficom out ret cld (bad) sbb cli mov (bad) or out mov or into or imul mov cmpl sbb cmp stos lock or cmp out sbb psadbw (bad) stc adc pop xchg test mov in sbb fs mov cmp icebp mov popf notl out shrl (bad) out loop aas add or lds out inc mov out pop insl scas pop sub xchg push mov shr and stos cmp in sub dec in popa (bad) popf pop std inc or out gs and inc lahf add fldl xor fldt xchg loopne push loop (bad) push add mov dec (bad) sbb sub rcl test sbb cmpsb bound aam (bad) sbb lea in cltd sbb call fldcw pop xchg fcmovu ljmp loop bound mov out test pop and cmp jmp pop cli test movsl stos pop movsb adc mov out icebp icebp xchg cmp sbb adc jle (bad) jb and mov lret jmp out push mov cmpsl or adc iret sbb (bad) sub xchg xchg jecxz push pop lock mov out sub ret movsl sub (bad) gs outsb ret loope inc out sub inc dec incb iret xor jg mov mov incb cmp push jb sub das lahf lods enter bound fs mov aad out jno das out xchg xchg scas dec jecxz sub inc ror xchg in shr inc jno sbb lcall sbb rol lret mov mov add dec xor sub cmc in and xchg lock stos jge dec push out dec into fisubrl iret mov repnz jl rcrb out mov ret leave mov pop rcrb fs out sbb inc xor push adc fsubs and cwtl (bad) mov mov cld mov out das stos add sub in mov cs xor dec test push fisttp lods push cltd and out fucomi jo sbb lock out pushl mov cmp push fild cmp push xchg push xor dec out int cwtl xchg fisubl and lock jo div jns sub jp sarb mov je out aad pop xchg mov adc out sub movsl xchg jecxz out cmp in push data16 pop (bad) outsb addr16 jae xor in ja dec and stos mov jmp iret daa imul enter rorb cs adc inc xchg xchg js jecxz ds jae fdivrs mov push mov cmp ss cmp cmp (bad) mov pop loope popf jbe clc mov aad aas inc rcrb sub lret cmp out insb fcomp enter into out jmp test (bad) (bad) out mov (bad) push or or aad pop cltd mov cli sbb out (bad) bound mov mov fbld jb push out insl mov in mov mov lods leave shl inc out ds jns push out cmp sarl out stos mov mov inc sbb lret cmpsl jae dec xchg (bad) nop cmp movb lods cld pop sub lahf out int das roll sbb fbstp (bad) mov push jmp stc fnsave dec enter fmull outsl shr ja xchg fs pop stc or gs fildl jmp mov cmp xor sbb push (bad) daa imul out into (bad) addr16 call rcrl push out sbb or add repz mov pop scas sti mov stos dec out xor pop hlt bound out pop cmp or jmp push mov out fidivr dec lahf add popf stos push hlt push out ljmp (bad) lock xchg jnp fucomip std rcrb (bad) (bad) mov adc push stos mov lret out xchg sbb push mov in (bad) out cmp popa imul (bad) popl pop bound mov jb,pt out and sub inc cmp fwait out or sbb repz (bad) mov sbb in mov lret push xor jp sahf pop call aam js push scas cmp jge jns mov cmp mov out rolb push pop xchg inc out out sub push add inc or pop test fadds xor ljmp out inc js aas aaa sti mov out mov add (bad) and and lcall or push xchg insb cmp inc out sbb (bad) je cmpsb or and mov rol call mov test xorl mov mov in mov mov scas lock loope (bad) ds subb jo or or iret aad repz in enter out stos pop lds and (bad) mov out insl xchg dec test gs imul hlt js idivb push xor mov pop jecxz pop cmp push pop and mov lcall dec dec push int pop fldt in mull mov out sahf xor fildll jg ljmp data16 cmp das mov sbb lahf and scas mov mov mov or (bad) pop add adc adc in aam ja jge pop ss lret loopne imul add xor adc mov in out xchg test test jge in xlat test (bad) cmpsb mov hlt xor test jecxz imull pushf or aaa idiv mov out sbb out into sbb push xchg add out inc pop sti jl and (bad) ds adc in jg dec out pop mov xor jp loope jmp sub test pop xchg int dec out (bad) nop xchg outsb dec push pop cld out dec jge sbb stos push in pop (bad) lret ficomp xorl dec aam out jns lcall jge cmp or lock (bad) lock lret in push scas adc out pop dec out mov pop jnp (bad) jo fldt pusha mulb iret mov mov icebp in push cld push dec mov push out inc inc cmp out jl (bad) sahf cmc fs out icebp jmp loop out jl outsb or test stos mov cli imul and inc in jae sbb add fcoms cli in cmp test jl pop sub std (bad) ja sub ss cld pop add mov mov out iret nop cmpsb and push or loope xor out enter in mov scas inc push iret add sub out jns inc in (bad) lods add call insb inc pusha enter lods jbe out mov add rclb dec insb mov jmp xor sub and out cltd pushf pop mov (bad) inc pop cmpsb lcall cmp rclb mov add xchg jo out (bad) out int3 dec lock out shll (bad) xor out or imul andl (bad) pop and out cmp lods int out xchg add test clc push out mov cmp inc inc mov cmp fildl ret cmpsl pop imulb insl movsb xchg push out fsts pop sub bound iret lret in je push cmp adc xor out pop mov (bad) mov aas mov fistpll in sub and ss stos into rcrl ja and xor (bad) ds out sbb pop jp (bad) xchg loop push push adc jle cld out jecxz std xor add shll aad dec in out mov insl mov mov inc adc ss inc shr lret or int push out and jno adc or rcr jnp push mov icebp xor and iret or cli add add mov cmp and sbb mov out mov xchg imul pop pop leave aaa inc fst xchg out (bad) xchg push aas lcall es sbb sub jle xchg test mov sti imul loope mov mov sub int3 call inc dec and out xchg mov jp (bad) push out ds cmpsb cmc dec inc lock js cmp push (bad) lahf bound std fsubrl leave or mov aad loop bnd das inc out jl mov icebp out add ja jg in pop add mov loopne out data16 in out xor mov and push pop mov cmp jmp or and mov addl pop cltd jle fadds in (bad) add adc sub cmp mov push fcmove dec fistpll test sti cmpsb out add bound repz mov pop fstpt (bad) or cld pop mov out sub lds xchg sbb cmp (bad) in lods fcmovbe in sub xchg iret data16 fstps bound sbb sahf dec inc xchg ds cmp out aas inc aam jle scas mov int3 xchg mov cmpsb and add out sbb sbb aam lods push sub sbb out test jg movl or push out xor fbld pop dec fcoml (bad) adc into mov fwait out insl imul jmp or push push cmp into decb inc loopne mov and mov scas xchg jmp arpl out adc (bad) inc jae,pt xor fildl aas mov fdivr mov icebp inc push push mov or xlat stos fldl js jg decl imul ljmp pop xor pop in js mov dec add ret xchg push mov mov (bad) mov insb jg icebp cmp jns push sbb add pop in ljmp cwtl imul out js adc out or rclb out ss das dec pop int out cmp cwtl stos mov inc or and out test outsb nop int3 mov add out jns pop fsub and jno adc jo fucomip xor cmp inc add dec or xor pop pop dec dec mov xchg outsl dec scas pushf mov xchg out test mov addr16 lock and mov xchg out into sbb xor (bad) out sbb in lods dec cmp fs ljmp jbe xchg out mull mov ret (bad) dec (bad) jb fs fucomp pop orb jge out daa mov add arpl pop adc mov pop xor popl xor lock ret out pop mov test fsubs leave stc icebp incb out add nop xchg and loopne adc fwait outsb andl lea lods (bad) loop sbb test push sub out jg not mov (bad) xchg out js rorb (bad) mov loop cmpsb sbb scas out mov xchg test mov fst jmp repnz lods or pop or aam xchg fistp aaa fcmovnu in js dec out icebp xor jno lds sub stos out in and sub pop pop jge push mov sbb iret mov or loop test jmp out jp sub out or mov dec out fstps (bad) mov sarl out mov xchg arpl pop mov mov cmp fidiv and xchg mov mov xchg lcall aas pop sub push loope fucomp fsubl xchg insl mov mov inc jno and ret push lcall mov jns and loop mov leave sbb jg aaa add out jle pop out add pop adc mov pushf movsb scas mov inc sbb repz push xchg out imul add (bad) shlb xor cli sbbl popa out (bad) fs call push aad xchg jnp in add aas cmp xor ds pop jne cmp or sub mov dec clc ret pop cmp les aad out or adcl (bad) imul insb inc pop (bad) mov add stos or xchg cwtl out mov lahf je mov mov inc and stos jp dec das add jle clc xchg dec pushf out sub ja testb add sub push out imul jle xchg leave add ljmp or std mov or xor out lea jmp adc xor or test xchg out xlat inc nop xchg xchg inc mov lea ljmp adc fwait pop ljmp mov (bad) nop stos add das xor fwait mov sbb cmp pop rclb addl mov loope fcomip incb icebp push push (bad) aam inc dec bound out jp mov mov adc sbb pop xchg (bad) shr mov imul push push jb cs in je lods (bad) lahf insl jl outsl add jb jp adc push mov xchg adc and or cld cmp in repnz in loope ss inc ret out leave (bad) cmc aaa push and and andl test inc sub mov fistpll aad imul call nop out lahf inc mov add ljmp adc out pop mov or cmc ja mov loope push loop insl pop out cltd cmp fucom pop sbb ds lahf sub lock inc xchg inc xchg (bad) in insb pop aad jg out and add sub inc fild or push addr16 mov mov ss or aam (bad) mov lods pop dec fsubr stos jle sub test sbb scas pop cli out mov dec flds call pop out push and push add (bad) mov out xchg (bad) cmc popf je outsl fucomip (bad) push cmovnp sub pusha adc mov jne lahf loope scas hlt out cli out push aas add pop push mov (bad) out push test mov daa sub sbb adc out test (bad) call xchg fdivrs ljmp out jle bound fimul mov add jne push jecxz les andps adc out push adc ret adc sbb iret ror mov sbb repnz ret out leave inc xchg pushf jp iret fcomi adc push loop or cs imul fildll add stos push out inc pop inc mov jp or movsl (bad) cmp push sbb inc sub les out test jmp sub push jl fs sbb arpl xchg or pushf push cmpsl stos les push cwtl lret ljmp loope dec sbbl popa and (bad) mov adc pop in cmp scas imul (bad) out popf jl cmp mov lods pop setb jae mov adc call push imul mov sub mov or jb pushl out nop mov sbb (bad) int3 arpl add mov push decb cmp cmp movsl and stc jne inc dec sub pusha mov mov aaa je mov test mov ljmp out aas sbb sbb test mov fs popa iret iret aas mov sti loop xchg jecxz xchg movb sub aas jbe out outsl or mov test pop inc mov xchg fs jbe (bad) sub (bad) mov addr16 and in dec std xor ret out sub jnp or out (bad) sbb fs std out out jne in sahf mov ljmp out pop mov addr16 loope out add ret out jbe add fdivr sub push loope push mov icebp cmpsl dec push dec call std clc leave insb pop jns mov rorb js cmp je xchg in out dec jo loop ficomp iret jb jne in ljmp nop add (bad) push mov pop data16 mov out sbb add lea out fisubrl pop arpl into or jp bound movsl lea jg jne fcoms jp (bad) mov jp lea popf push aas out mov pop repz ss pusha xor xchg pop faddl push mov lods jo mov out frstor adc xchg (bad) out and cmpsb loop into sub mov out lock scas (bad) cmc dec mov inc or enter pop popf test xchg dec in fcompl mov test cmpl pusha add pop xchg enter sbb int3 mov lods cmp test idivl or pop arpl jno push rcll push mov orl cmp pop adc jbe dec jmp jge or in xchg dec push clc out mov (bad) cmp out xchg (bad) arpl jmp test into jb mov jmp mov fdivrl push sbb sbb orb inc cld out push add mov jae lahf push setns loope mov dec mov popf inc jp dec aas outsb mov out std out out pop mov xchg call ja fistpll movsl rcrb out inc inc push dec add incb cmp push push mov enter dec ret sti rolb cltd (bad) aam sahf out loope mov or dec mov ss call mov lock mov les out das gs in sbb (bad) out pop sub push cmp loopne push lods jnp jmp jne iret push aaa test aam adc dec loop int call cs out add fldl dec aaa iret out leave inc in mov or imul sub and cwtl (bad) mov dec jg xchg sub inc dec sub fidivl dec mov sub push and jbe jbe cmp pop jae imul mov in jmp lahf lock add mov jns aam stos into sti ret in cmc out push jl sub jp pop mov cmp sub lahf add mov dec (bad) out ljmp push lcall notl inc out add and icebp lret mov xchg out pop jb dec fwait out push out subb xchg js push jbe pcmpgtd dec jecxz hlt push outsb insb xchg dec out jns sbb pusha pop inc data16 insb test jnp dec (bad) out push enter ja mov mov inc mov int3 ss add mov lcall shr xchg sub xchg mov bound push out jmp loop scas sbb shlb xor lmsw roll or mov cmp test mov xor pop xlat arpl iret cmp jnp push lea addl or pusha or sbb add ja adc test pop fstps jmp (bad) mov lods sbb lea dec out das cmp out xchg (bad) repnz mov in jle sti daa stos sub jnp imul popa or inc cmp mov add aam push inc stos into cltd adc fcoml ljmp out cmp mov push out or mov lcall lock sbb sbb sti scas out bound iret (bad) out das test (bad) lods int movsl out into or imul push in aaa fimull inc and cmpsb add push fistl mov out mov mov push outsl cmc out push jl mull stc (bad) push (bad) dec jmp jge and sar les out jnp jae dec jb add and sbb cmc rcl xor out out nop push dec pop fs jbe push imull dec frstor lahf out pop cmc (bad) fistp pop out pop shlb sarb test aas xor fs inc mov rorl std mov frstor jecxz or mov xchg in add fmull out cmp push andb aaa rcr ljmpw nop stc out and ffree cmp mov js out je repz mov das out gs jg stc rcl out and mov xchg (bad) repz in fnstenv sub out jo and dec jmp imul fs aas adc push push jl je or mov hlt cmpsb pop out mov dec addr16 dec push cli xchg adcl mov out pop leave in xor dec push jmp add cmp lahf xorb pop adc ret imul out xchg out jb xor or push arpl fisub out adc or in ds scas insl sub std punpckhdq and mov test fwait (bad) leave mov push and pop jae cli pop mov xchg sbb pusha inc dec int insb lcall mov or jg push sbb xchg fnsave fwait jno ret out mov pop mov out std push scas js adc lds inc out cmc push mov data16 bound jg jge push ss imul push or add outsb sub adc fildl cltd ljmp xchg add call pop out adc je in mov dec in test mov mov arpl or out xor fs inc lock scas nop lods lods mov pop inc pushf xlat push (bad) in inc push push pop negb (bad) jle pmaxsw decb xchg addr16 dec mov stos inc push pop out ljmp hlt sub ja cmp adc out mov jge push lods stc movsl out mov scas xlat dec inc (bad) jae repz mov movsl or sub pop (bad) in jl (bad) loopne insl out dec dec mov mov mov pop add out xchg nop ja scas data16 push and and ljmp inc lret jge in out sbb cmp adc rclb pop mov dec out je inc add ja loope push mov out cmp pop iret mov leave test adc pop shll pop stos sahf call out xor in inc ja xor push push mov xor sahf loope ret sbb out enter jbe cmp sarl pop jmp stc sarl arpl pop add lock mov push sbb dec stos mov les mov xchg jp insb xorl mov fdiv out mov lret pop repz insb mov mov cmp fadds rcll mov (bad) push dec insw out cld or inc jg (bad) pop imul inc iret std dec pop ret (bad) sbb fisttpl es aas sub ja iret xor mov (bad) (bad) out dec xor insb xorl mov out aaa daa popa (bad) aas push push xor push pop cltd pop and sub dec pop idivb ja das pushf in pop test js push push ss inc lcall add sbb sub (bad) out mov movsl inc test mov mov int3 sbb mov insl sub aas inc inc out scas mov xor jbe sub inc xchg maskmovq idivl inc sub aaa pop ja out or mov sbb or pusha out pop dec idiv mov sub icebp loop and inc jl add out sti je push in imul stc or sub jno insb cmp xchg push jae clc scas call push pop inc mov mov or cmp xchg pop jb (bad) out jge inc mov dec shll push jb cmp or jl pop xchg clc hlt (bad) pop ret rcll sub out dec mov jno out sub xchg pop std pop mulb icebp insb mov cmp or leave popa mov sbb push sti inc loopne mov xchg lea sub setns les xlat push aam cmpsl mov lock out and push clc xchg fwait jns out cmp jle xchg shll int stc lods xor fs cld mov es loopne add ficompl int3 jl out dec sahf mov dec add out lea in mov and movsl jp test stos shrb out and lret mov out mov pusha inc mov sti aam jle je dec jno or sbb mov leave mov mov movsb pop fild mov push mov mov add jno aas loope xchg iret sbb push (bad) and repnz in lea sbb cmp (bad) popf sub js mov sbb push xor add mov mov mov out fisub xor out popa nop stc frstor pop mov lcall (bad) cmpsb fist sub lock adc iret xchg (bad) xchg inc out cmp and mov adc popf xchg test pop lcall add imulb jns test inc insb mov and out mov imul loop pop jmp or js or movsb cmp (bad) out cmp push (bad) sbb mov pop neg sbb out mov pusha in decb pop stc loope test jnp dec jno ficompl hlt (bad) jb outsl loop dec addr16 mov push cltd sbb jns xor jecxz xchg sbb lock mov pop sbb jmp xchg cmp mov lahf aaa sbb out insl shlb mov cld xchg xchg dec sub ljmp or cmpl stc mov or pop mov (bad) sub cmp fwait or xor out loop xchg pop jne arpl das out shll push test pushf out jmp cwtl xor jbe pop into popa mov das (bad) nop pop (bad) leave add scas ret data16 jmp fidivl xor ljmp mov cmp jp jne jns das out mov fidivrl into sbb cmp jle out add inc fcompl imul xchg loop out dec out adc test push lock xchg out push nop fisubrl sub pop cmp jecxz out (bad) adc lods xchg mov adc mov xor je or popf loopne fstpt fistpll in pop stc into in (bad) mov inc cld sub insb out adc push push out mov leave xor out movsb cmp cmp pop fwait mov pop inc ljmp (bad) push sahf mov (bad) lea sbb hlt inc cwtl cmc cmp pop mov je push out push jne,pn out push lss and andl pusha out lea adc xor arpl (bad) xchg lret out hlt push outsb pop jo out adc push lcall in xor (bad) push scas into cld pusha sub (bad) ja dec loop push adc lock out lahf daa sub cmp aaa xchg pop std jne (bad) iret out dec mov adc jbe inc adc iret pop sahf xchg pop or in leave push push iret jae clc xor and pop (bad) jo sbb test mov cmpsl orl stos jns or sbb xchg lret out mov inc push mov dec jb clc mov sbb out or cmc mov dec out xor negl fs out fist mov pop or mov (bad) jb jg test ss mov sub mov int incl adcl lods add adc out pop pop xor out lock dec outsb mov imul imul pop jl repnz xchg mov mov mov pavgb (bad) sub insl out fadds mov rorb or mov and roll xor stos daa out xorl inc pop (bad) enter push out mov dec aad sbb lock push xor scas loop and out insb cli inc pusha (bad) xchg iret mov int repz repnz xor adc notb lods in mov cmp jle call loopne add cltd les inc repz mov adc add cs in aaa xor out sbb or out ret xchg arpl es mov icebp pusha inc sar push inc mov test rolb and int xchg data16 inc cmp popf imul imul push push out xor dec icebp out mov popf sub adc cmpsl sbb lahf xor mov out adc add or dec xor pop out pop dec inc xchg cld mov std (bad) sub mul push jle add lahf xchg fs out add dec mov push pusha out sbb out fstpt (bad) scas xor dec arpl das stos mov lods insb push popf jmp out jecxz das xchg out fwait jmp jmp lahf and push out push xchg jecxz mov mov sub inc data16 push jno ss out loope lea shlb and out sbb js subb or dec lea dec xchg cmp arpl xchg (bad) lods loope fwait sbb out push mov cmp loop repnz (bad) mov stos (bad) xor lods sahf test arpl and mov jle push nop add out mov dec sub out aad cmpb mov out aaa in ret mov cmp push xchg inc rorb sbbl loop jge movsb fbld (bad) rol (bad) dec add or je popf mov sahf call ja dec out mov cwtl data16 (bad) in test jno sbb mov dec lahf mov lds add cmp cmp and nop (bad) out pusha cwtl out out stos mov or ret push clc jl movsb xchg add in fstpt popa sbb xchg popf (bad) fistl inc pop out icebp fs mov (bad) mov pop xor aas mov mov jge push loopne out loop cld icebp lcall pop bsf (bad) cmp xchg out pop mov adc push dec imul in adc lret stc or call popa stos mov ss into out lret (bad) out push sbb das movsb cs (bad) lahf push mov call enter jecxz mov ljmp out cmp add mov aas and out push add je adc jmp int3 mov mov dec mov mov push out insl fsts (bad) xor in cltd inc push sbb (bad) enter call das cmp fild xchg enter mov sub shlb dec (bad) jbe add ljmp dec (bad) cmc mov iret mov xchg cmp xor add pop cmpl loop xchg mov dec jmp xchg jg test mov push pop add mov roll pop fiadd jb incl mov cmpsl dec mov or int out push pusha lods pop jge,pt cmp fidiv mov out mov mov js adc fnstenv inc jbe pop roll (bad) or in dec in cmp into iret dec mov loope jle fidivr and ja mov int3 out jecxz sub (bad) pop call shrl cltd xchg xchg out jmp insl rorb out sar iret or xor popf xor insb leave cmpsb mov packsswb pop xor fildll pop push icebp push xchg aaa ret cmp jl adc sub jnp bound icebp out inc repz inc inc or cmp movsb in mov dec jecxz and data16 outsb jmp insb imull iret pop mov xor lea out loopne gs sbb cmpsb mov or (bad) int out aaa jmp pop rcl mov sti mov jl or push dec push lahf xor jg push in mov xchg cmp in xchg push sahf or cmp mov rolb inc push hlt cmpsb in inc sqrtps push repnz out inc or rolb cmp xchg loopne dec jno pop cltd sbb aam xchg mov incb cli es das data16 test push imul out xchg loope jp sbb fistp call ss cltd outsl inc out sbb nop xchg add xchg rcrb fmull xchg das mov jne loop insb mov push push test aas xchg xor (bad) or mov add in addr16 sarl out mov je and xor aad clc pop add mov jmp test in push add hlt out inc lods or pop jmp ds inc pop loope out pop or outsl xchg fs xchg jmp add frstor or xorl inc dec dec ja stc imul lcall sub ds pop jle pop aam pop pop sub mov xor es out xor jbe out sbb cltd sahf adc cmpsl aad cld or jle and cmpsb out lods xor push sub fistp push enter dec push sub test cs js cwtl (bad) outsb add into and mov push iret sub lcall insl and out (bad) adc shlb lsl in aam mov mov out je js or mov sub lret jne or xchg xorl insb jl pop loope mov shr (bad) cmp out std add scas jg fs mov jmp lods mov test pop fbstp and (bad) ljmp adc xor mov pop fldlg2 imul cmp stc jbe ss shll mov or sti out test xchg lahf loope bound out sbb inc jmp cmova scas adc cmp pop lock jnp and out ret (bad) outsb mov xor xchg test xchg or (bad) cld ja in scas out out add mov push testb in pop (bad) sub hlt iret push xchg repnz icebp (bad) out ret popa mov in inc insl out dec push rep loop push xchg pop ds dec popa mov mull pushf scas inc shl loopne pop mov sbb pop mov cli gs lods and popf sarl pop and out push adcb out mov dec xor out jle adcb jbe ss pop xchg and or cltd push insl sub std and pop inc mov in in cli gs (bad) je jo lcall add adc int3 dec out loopne fwait adc pop stos loop xor jb test xchg lock out add mov jns loopne push mov cld fldt xor scas push jle push xor gs pop out je sub movsb call enter pop out push lret or mov and jno aad aaa mov xor test mov out jae add arpl stos fimull and jl or cmp cld aam mov out mov imul mov fildl xor and ds and jp fnstenv in jg test lcall xor icebp call add push dec out in lahf push hlt aam es std fldenv add out inc stos popa cmp pop ja inc pop sbb outsb push movsb mov inc adc jle scas cmp cmp ds and jo mov cmp aam push imul jl sub rol jae dec xchg adcw loopne mov jns or stc out xor xor cmpsl jae scas icebp xlat outsb imul out (bad) loopne lahf mov js in or out (bad) ret push out add xchg adc out std pop add out mov inc xorl inc (bad) mul idivl mov and sbb rcr (bad) aad movsl rcl adc popa out push lcall lods test jecxz cwtl ss rcl xchg (bad) dec hlt adc cmc andl out jg and call (bad) xchg dec inc push clc scas inc stos and outsl out add in pushf call ja imul int mov jb and enter (bad) sahf hlt movsl xchg arpl adc out xchg sub pop movsb xchg out jecxz pcmpeqw pop mov mov loopne out inc or dec cmp jb pop lea outsb inc lahf push outsb imul out aaa cmp mov (bad) addb out pusha (bad) repz fwait mov aaa cmp fsubs adc sbb int3 aas pop xchg mov push das jo leave or jecxz mov adc adc xor ror sub lret in out pop out cmp push push out cmpsl add shrb jge push fmulp push out sub js out xchg fsubs ror jb ret fldt mov je and lds mov pop (bad) push aas push insb repnz mov push out mov enter xchg and data16 cmp out mov cli sbb loopne fisttpl fcoml test push out jae int3 stc or push jl mov out fldcw adc jb jne and fcomip movsb jge out jnp add sti loope out mov mov push out aas cmp (bad) xchg cmp (bad) pop cmpsl adc dec std stos mov out mov fisttpll cmp dec or out adc lds fcompl pop les addr16 imul push out xor pop outsl sub sbb or pop (bad) add movsb mov dec push (bad) sub mov lock jp pop out out inc fcoml gs into mov into out xor out scas out lea mov in in setle mov (bad) cltd call or mov out aaa push pusha rdmsr xchg xchg mov aam out inc mov jbe or loop mov and mov out sbb cmp or dec out fcoml jae aas fs test mov call lea mov pop in inc out out iret and inc push inc es jae int mov push (bad) out lahf mov sbb out repnz scas jmp out gs cli flds xlat fucomip pop and cli sbb out scas mov int out lock inc lcall lea push xchg decb sti or push in fbstp sbb fchs sti out out cmp ds lds inc leave xchg push mov std imul jmp mov cmp fwait or adc or pop dec rol push add sub cmc or and out lock push repnz ret cwtl sub aaa imul adc out nop pop movsl rorl out in (bad) pusha sbb es push out sti or inc cmp cmp add lds sarb cmc out sub shll push xor xchg jl out lods popa and jne or (bad) pop sti std repz mov xorl movl test mov xchg imul out push dec into aad out mov lds out adc xlat arpl inc out mov push jnp and adc insb xchg fs movsl out rclb cmp stc xor dec insb (bad) xchg into xchg out cltd mov adc lea and jb cmc mov out push jo,pn cmp stc jno or fdivl lret es sbb (bad) cmp pop push or push adc out jp mov mov pop (bad) xchg and out (bad) out ss inc pop cmp cmc lock repnz aaa mov test sub popf sahf je out lret addr16 clc mov (bad) xlat vmovq in out adcb out or cmc inc imul push push sbb adc fs subl inc push pop add in mov xchg out sti in push rorl and out ljmp iret and es out adc out ss cmp or sub cld sub mov push dec andps popf xlat mov in imul int3 add xchg lret out clc pop dec idivl ficom fucomp sti iret sbb lods daa pop insl test add add jle stc mov pusha xlat stos in dec leave and lds cmp in pop sub push push shll shlb outsb or jo loopne fs (bad) out mov sbb jnp mov xor lcall popf ss out xor fist fidivr adc es out stos sbb pusha nop add jle cltd lds loopne dec lods in dec out outsb addr16 jmp lahf jbe pop and out icebp xor mov int arpl pop cmp decl popa push out lds jg mov pop jne jp xchg or idiv add in loope (bad) dec enter jge ret push or cli xor outsb out xor inc shr mov out xchg cmpsl adc xchg mov out add cmp sarl (bad) jl xor xchg sbb mov out int3 or into sub (bad) decb loopne pop es dec out daa aas insl jns (bad) push fucomp jp xchg xchg cwtl outsb sbb stos (bad) out rorl push push pop out in stc enter ljmp xor out cwtl fldenv shr xchg pop cmp dec add jecxz or cmp lock out sarb stc out push icebp or jbe add mov out ja inc nop je pushf cmp push insb out outsl (bad) stc mov lock shr loopne fisubl mov dec (bad) popl inc add cli pop lods add adc sti dec mov pop mov cld dec out enter or cmp out push mov roll mov add sub mov xchg pop (bad) bound push outsb and lods mov ljmp movsb xchg orl add inc sbb (bad) ds outsb stos jo aad push loop std jmp shrb es rcl ret out pop push addl lock and sti or cmp pop pop pop imul bound pop lock mov cmp int out mov push faddl xchg int out mov sub shlb out call jb adc (bad) lret and enter out imul adc out dec or push jmp cld mov icebp mov mov dec adc pop sbb xor (bad) call mov fstl out imul loop xor stos lahf cmp cwtl ret fbstp scas cmpxchg (bad) sub shr ret cmp cli iret mov shl out and insb xchg fbld xor dec fsubp pushf int3 scas jmp jecxz or mov cmp imul jle xorb cmpsl icebp add out mov push mov inc xchg inc das iret rorl pop fucomip mov sbb ret mov out cmpsl sbb shrb jne pop push cs out imul fs ja dec scas test mov fisubrl push xchg jb out xchg inc pop out in test xor mov or add (bad) (bad) pop adc or cs fidivrl push sbb (bad) xor or pop sub insb nop (bad) and cmpsl xlat pop pop jle and jg push push mov ss add out aas lcall aaa and xorl popl test (bad) sbb sti mov cmpsl cmpsb or push adc sbbb imul push pop mov dec lret divl fldcw arpl dec pushf xlat out cmc pop movsl mov outsb test js xchg cmpsl fnop es cmc nop iret idiv scas xchg rclb sub xchg pop lock int mov jnp ds (bad) mov (bad) icebp jecxz inc push pushw jae (bad) xor pop pop outsb std (bad) out dec push pop in mov cmpsb or dec bound (bad) stos dec fwait mov in insl sbb push xchg out mov xchg or jns or in or stos add sub test loop movsl loope out arpl xor and test pop cltd dec mov dec scas in push xchg mov out lea and and out push fisttpl (bad) ljmp xchg fcomps dec or fisttp icebp into nop xor sub iret lea out push test mov (bad) jb out inc add push popf jmp add jg lods sbb lds push mov push out imul mulps arpl out xchg shrb and loop jl mov sub aaa nopl ljmp push jp (bad) fdivrp out out push and dec test jge insb inc ljmp pushf jl and dec dec jb movsb out mov push mov mov ljmp xor mov sbb in adc testb cmp cmp (bad) aas mov xchg enter xor pop sub ret xlat insb fprem1 (bad) pop lea clc rcrl je cmpsb test andl sbb stc hlt xor ljmp push mov loopne call out xor es out push inc jae lock inc xchg out adc (bad) fwait jno les dec xchg ret loop test stos pop pop xor jge xor pop stc push push popf dec addr16 xchg fs pop dec push xor jmp movsb cmp (bad) dec mov pusha (bad) lret aad mov mov xor jg cltd jbe out and jmp (bad) and out sub push cmp lods add incb es sbb (bad) jle jl loope mov adc or or fcoml test push pop push in ja das out in imul out mov mov push mov ss xlat nop inc pushf lea dec inc out push or ja pop aad pop imul push out mov aam ds aas mov inc sahf fild in sbb nop cmpsb fadds imul loope fild in jb scas pop stc out xor aad push (bad) add jns in lds xor out (bad) inc push inc jnp out adcl int adc insb popa fnstenv fistpll inc (bad) lock adc js cmp addr16 pushf clc arpl lret jl cltd in and daa xchg xor outsb repz mov cwtl xlat rol mov sarl jge (bad) loopne mov notb bound sbb ljmp push movsl ljmp add outsl jl jmp dec xlat mov or cmp in cld (bad) fnstenv mov mov int rsm je push mov in lret jge adc cmp cmp bound out maxps shr xor bound test dec pop cmp out add pop mov insb (bad) dec xchg stc out inc repz aad notl jmp adc (bad) es in xchg dec mov aad sbb dec inc out jl es mov inc (bad) insb cmp aad mov or push loope jne fdivs lds cmpb movsb es aas stc pop popa mov movsl dec iret dec test aaa (bad) js int popf cs cli jb shrb sub jle mov push insb (bad) mov out ficoml xchg fldenv pop popl xchg dec sub ds mov popa loop aaa push push incb cmp ss nop cmc das loop sbb push in fs jmp scas xor outsl jb std pop inc mov out dec or aaa adc jle mov push mov out ret rorl cmp xchg out dec aam outsl aas in test cld adcb in lcall jge and or xor push out mov sub jle fs jg or jecxz or fbld xlat pop add adc mov out lahf out mov xchg fisttpll daa and pop nop (bad) xor (bad) das test imull ret lea jecxz and and popa adc xor out mov xchg rcrb insb sub inc jo lods xchg inc mov lret iret and lods adc mov pop out ds orl jmp push and push mov xor or out xor ljmp add mov cwtl xchg rclb mov test lock jae pop enter (bad) cld lods popf popa push or fld sbb (bad) xchg push inc repnz pop loope jge mov out and or mov aas out jae mov fadds in out pop mov jle mov sahf iret out mov sbb and enter and arpl adc xor out pop jg icebp add (bad) insl dec cmp mov lods iret jns call shr mov xor xlat lret je pop scas pop mov cli pop (bad) mov out pop addl cwtl ja (bad) mov out sbb ret out push mov lea inc or mov fdivrl sbb leave jbe das insl shrb out rclb and movsb repz mov mov cmp sub std mov test (bad) in out mov lahf sti sbb ja les mov mov cmp jb out test in fstpl cmp jns inc sbb loopne gs cmc shll xor and test mov roll add jge sbb imul xor mov sub push jno loop add mov fsubr push cwtl in lods andl dec cmp sub rorb jmp lds out nop mov repz sbb pop dec ret outsb in mov and sbb xchg xlat sbb push mov jne or test out ljmp xor loopne ss ret mov bound (bad) jns out pushf nop xor jbe jo fist leave out inc (bad) xor or loop out out shl lock addr16 dec out add or nop add fstpl add jb push out (bad) pop cmp or iret loopne fiaddl call pop out psadbw or out mov mov xchg out push jmp ror fwait mov cmp stos and stc dec hlt aas adc mov out popa test das xchg mov jae ljmp shrb push mov sub adc shr mov sbb (bad) xlat iret jo xchg jle inc ret sbb outsl adc clc imul xchg xor pop in jg jecxz stos push fildll ret pminsw test xchg inc movsl jb mov fiadd push out insl cmp xchg pop pop ds push scas repz out ja cmc pop popf sub cmp fmul bound aas out cmp jge iret and hlt sbb pop imul out dec mov pusha lods nop lahf out and out mov and pop sbb or cmp push sti outsb xchg in dec pop daa cmp out stos mov mov out cli std ss push cmp movsb fisub out mov out es bound movsb cmp fbld rcrl loop or fs jmp jecxz out add mov push xchg pop pop mov insl mov mov mov in inc (bad) insb loopne dec mov mov fs and xchg (bad) push push icebp jns adc cmp pop fsts fwait mov jmp xchg sbb loop and fwait push inc mov dec out bound sub out pop mov adc fdivs push and arpl out imul pop lahf aad inc mov nopl mov lahf popa mov adc cmp fbld sub lock int stos jae pop aas fcmovnu pop push jp out fwait cltd xor mov (bad) (bad) idivb fdiv stos dec ljmp mov outsb push push out cmpsl lret pop mov es popf imul pop out mov psllq ds mov and call shrb add fimull xchg enter ljmp iret xor xchg mov jp scas into in mov ss push out push (bad) imul into jmp insl sub adc out test (bad) jnp outsb push or adc mov push dec popa mov into mov sub sub jno movsl jnp push aaa (bad) dec cltd mov sbb std ret push in je push sbb pop lret sub pop dec aas movsl sarl adc or out (bad) and jbe das adc pusha insl jle out lods loop add aaa lret jg or (bad) pop sbb bound js fild jne je out fisubl int outsb sub adc and jg mov (bad) ficoml (bad) jo fs jns sbb sbb fwait push jl lods add sbb sub cmp mov cltd inc inc cmpsb xchg fisttp out or sbb pop mov pop lds sbb jnp dec mov add out (bad) xchg pop push push dec cmp icebp sbb xchg incl add ret (bad) fsts or cmp sahf xchg or xchg cmp dec sbb out test enter fbld and jae inc jg (bad) mov fdivp jb pop repz and push loopne or loop (bad) mov lock adc mov out fistpl aam sarl fcomps mov int3 out enter sbb jle mov testb mov cwtd pop sarb sub fidiv mov jno das pop add inc push (bad) and push repz out xchg shr addr16 or mov xor adc jle jbe push insl ds bound mov in es stos iret sbb xchg (bad) cmpsl xchg cwtl mov nopl mov xchg in lods mov cs scas int mov pop xchg lods out aad pusha sahf popf mov mov xor dec call sub pop out cmpl or and sbb mov hlt (bad) in add out pop xchg ljmp ja lods mov add insb cld cli adcl jo fildl push mov mov mov es clc fnstsw and jae sti push xor pop stc xchg mov call pop dec (bad) test andl fdivrs pushf mov sub popa inc pop sub lret push cmp hlt aaa lods xchg and aas mov adc mov or mov add pop mov lock sbb sbb rcrb addl ds and data16 mov mov shll mov adc outsb xor (bad) jbe jae jmp or decb mov (bad) fisttpl jmp imul lcall sahf xchg clflush ljmp aas xchg fnsave cld mov mov xchg data16 out xlat test icebp inc in push ret les cmc xchg (bad) cmpsl sub cmpsl jo repnz (bad) jl sbb ljmp gs jns in xor mov icebp hlt fmull xlat push pop xor push (bad) repz outsl xor and sub cmp cld xchg cmp in push mov out adcb push mov sub jg cmp scas jmp mov push cs test dec cld fistpll out loope pop mov cmp out pop cmpsb fidiv jmp clc dec mov jbe imul xor stos icebp in inc mov lods add jno call (bad) cmp test and test nop cs out or inc insl fs dec mov inc jnp scas outsb adc push fwait out lret in jg xchg add out ds pop mov pop jb out or dec mov dec adc out push andb mov call lea fidivr iret ret xchg and push (bad) shrl adc adc out adc and mov mov push lea imul mov test fistpll arpl inc sub js lock inc mov icebp imul movsb into in outsl lahf shr xchg add out xchg leave xor je (bad) iret inc loope and jp sub sub insb in mov or test xor cmp dec int out subl into lcall add test aad loope xchg pop jnp add jecxz lods sahf xlat xchg out jne cmp cmp ja enter shrl out xor or jo mov pop dec xchg inc (bad) jbe cmpsl dec imul or lret dec out cmpsb xchg insl repnz xor xchg dec pop xchg shr mov (bad) ja out or or xchg mov mov out lahf mov out mov imul sbb addr16 rcr ss repnz or mov arpl shl adc pop jg,pt push cmp adc (bad) movsb inc mov in pusha out js jnp pop pop jo out mov cli push jge jne popf or out xchg popl pop mov pop adc xchg loope out xchg push mov jae push sbb loop call mov sbb jg scas (bad) test push out loopne sti inc sub and mov rclb iret xchg mov mov jecxz sbb arpl repz je inc push loopne int3 xchg out imul sbb (bad) stc lods fsubrp mov add pushf ret in out or gs rcll insl (bad) aaa mov push sub mov sbb jno lods lea pop pop xchg enter out mov jecxz pop loopne dec sbb ljmp js pushf (bad) repz and dec out mov es ret and cmp jnp insl enter xchg out sbb cltd ja data16 push inc lahf adc or shr jae jo daa sub pop sub dec push out sbb sub inc addr16 int imul inc mov jnp aas or out mov or shr lods jns xor shll push jmp out sbb mov jl stos and pop sub out aas rorb adc (bad) xchg mov lcall mov cmp std fnstenv mov out sub dec out ss sbb or das cs xchg jbe xchg fs bound aaa iret cmp out and push push or mov outsb scas out into inc clc and gs xchg rcrl jb lock push or in ljmp std lret imul test dec jne out enter leave testb dec xchg inc add nop pop push xchg jmp mov dec out ja cli sahf pminsw and push mov in shl dec mov insl int out scas iret (bad) sbb jecxz out hlt xor mov loopne movsb outsb out (bad) xchg mov pop je push and repnz fdivr cmp and adc out mov cmp mov sub out das leave dec and mov fcmovnb sbb jg out out faddl push inc pop lahf hlt aas stos pop cmp xchg out andl or push mov pop mov loop ja repnz mul sub es add out pop sbb add inc xchg aad jbe lcall pushf js mov pop sbb test out es inc or jnp rcr icebp mov pop mov aam gs out mov out es sbb xchg cmpsl cmc lahf cld or jno loopne (bad) (bad) cmp cmp sahf call mov push xchg leave dec setle loopne xchg and push inc lret out (bad) sub hlt imul out cli pop (bad) cmp pop xchg jb mov rcll inc lret data16 pop xchg pop add shrb dec int3 sbb add mov movb repz out aad nop sub in pop out inc jb lret sub mov fdivrs pop negb enter out adc ret pop (bad) vmread inc mov (bad) sbb out imul into subb (bad) sub out push data16 jge add (bad) and pop xchg stos out out dec cli in mov in mov in inc mov out es into xchg jb jle pop out fldl2e push bound or loopne push std sbb rcrb sbb popa gs and sarb out mov jae lcall cmc xor out add arpl (bad) jmp loopne aas ja lea adc xchg xor mov clc push mov pop and lods jne (bad) mov mov fs dec push shr push sti and call lcall out push jb or fwait out je mov inc push mov ficomp dec inc imul cmp push adc test enter mov movsl adcb (bad) mov je leave and loope cltd adc arpl jb ret mov push out lcall push cmp ljmp in andl out or sub enter ja mov scas insl in push (bad) out test dec jnp xor and cmp outsl mov push xchg out jmp xor adc mov fisubl sub in gs sbb out stos mov jp out mov xchg inc in and inc cld mov in and mov jl fistl out mov mov xchg out xchg test push add xor es jmp js pop icebp movl mov jl stc xor movzbl mov loop das or out sub xchg jl (bad) jbe adc xor mov nop jle and mov loop add scas (bad) pop and sbb outsb in lds pop push xchg (bad) or ljmp jl cmp hlt out scas inc xor xor or cmp mov sub add dec fistp pop dec repz (bad) jmp out test inc or in xchg fadds out lods dec into xchg jno stos sub and jge out outsb and sub mov jp out jnp cmpb out jge insb sbb ret daa sahf or adc js ficoml idivb add and push cs mov add scas in pop dec and mov int lods cmpsl xchg mov rol out xor or mov pop out sub lock lods sub pop in mov mov pop popa mov (bad) fidivr pop adc addb pushf pusha fwait and inc mov add out js aas int aam jg,pt out outsb out add push shr adc jbe stos out and (bad) cmp push loope out lret int3 aad lods and jb out push jnp out hlt outsl xchg lea mov (bad) or jo pop movsl scas push or add pop lahf (bad) push dec loope call cli daa add mov sbb (bad) rclb or ss push push push imul mov setno nop das sub and stos xchg por jno sub fisub rcr lods mov dec mov sub sub and lods call test aad jg repz aas inc adc lahf ja bound out mov sub (bad) hlt pusha mov sbb inc jo sahf lock out jns int jg shrb adc push mov iret outsb add enter jge jg ljmp and or test or lock mov out sbb stc jbe dec int3 nop out (bad) negb (bad) mov mov call inc call imulb imul or (bad) out popa xchg in cmp (bad) adc jno and (bad) mov bound (bad) out (bad) jbe imul lods jge push push daa push fbstp ret sarb insb loope dec adc cs mov push das cmp call lock jg into testl mov sbb (bad) pop lea jecxz cwtl in jno fs scas pusha leave add or sbb out xchg gs push out pop jne push and xor mov out dec jp adc outsl shr add (bad) lods cmc adc lods aaa out outsb shl sub cmpsl loope pop xchg jbe add xchg jnp mov mov lods mov out and push add inc dec inc fidivrl mov dec jo push repnz xchg test ja shll cs sub (bad) outsb outsl xor dec jnp mov sbb fidivr test cmpb pop enter pop inc mov adc cld je (bad) out fstpl out mov in xor mov incb pop out pop in imul dec call mov jl xor out ljmp jmp cs scas mov sub pop dec std push xchg sub out mov repz movsl pop inc (bad) or pop pop in add stos mov dec (bad) pop push outsl loop loope xor repz andb out push inc dec mov in int3 out mov mov sbb mov dec ret popf in out js,pn dec in or leave dec iret pop sbb pop sub adc out mov sbb mov push je out add gs or mov into or or rcrl out sub imul mov jns ror pushf and mov sbbl sbb (bad) lock stos aas bound gs jns inc stc movsl xchg lods cmp shr dec arpl jecxz inc adc sub (bad) sbb jg add fs mov dec loop jnp arpl insb mov into mov repnz insl mov lcall sbb inc loop dec and (bad) push and mov add cmp out decl ret fs mov movsb push pop xchg (bad) pop in adc pop icebp out mov pop lea mov popa (bad) out shr nop and out cmp inc jbe subl push shlb or adc jl das cli inc hlt mov out inc insl mov pop adc xlat mov icebp stc add out loop les leave jne test outsl hlt daa pop (bad) call addr16 sbb mov cmova cmp inc xlat in add jnp lret ja push test out (bad) inc ret sbb out mov xchg fwait or dec xchg mov xor stos cmp out iretw testl jl icebp gs (bad) fmull add repnz inc out and xchg arpl xlat hlt out pushf pusha jnp scas iret push add pop gs lahf in sbb sbb out push xor ljmp (bad) fdivl int3 imul push pop scas pop xchg mov lock add es ret fwait shlb insb icebp out test nop insl iret adc inc pushf mov fs xor inc dec xor fadd add sub out pop cs mov jl testl dec adc fstl xor fcomps pop cld mov mov mov or sbb and loope push repnz xchg cmp in mov jnp cmp mov (bad) stos mov in push das cmp and gs daa adc dec out shrl push jno adcl dec loopne push out dec inc iret jp cmpsb enter lcall call xor out mov hlt repnz pop add sbb dec rolb cltd outsb mull lahf or inc loop or shl out sbb cld (bad) stos lret (bad) je loop or lods or out inc loope in out xor fisub imul or mov aas xchg rol push sbbl xchg ljmp int3 out and out mov addr16 out stos mov fsts xor out pop mov cmp iret (bad) mov dec lods int3 pop dec mov out decb push lcall (bad) mov sti add (bad) outsl ss mov imulb int mov or addl pop mov out jns xor loop jnp or loopne popf push aaa pop out lret xor push sbb add fnsave xlat cmp push and sbb xchg xor fild movsb out push fiadd xor sub sbb mov xchg mov add mull out adc subl rolb out xor cltd jne (bad) fbstp or add inc inc dec dec rcrl mov incl add fisttp or cmp lahf mov sub mov ljmp loope sbbl fisubrl add or jle push dec test stos push sbb aaa jno div int3 out mov shl cmp ss mov and jle iret add sbb scas out xor lods inc mov add cs out inc cmc jge dec rsqrtps add adc jmp sub ss mov jns jne pop inc icebp pop out dec cmp push (bad) out and jl shr stos or ja je mov (bad) (bad) iret out jno popf ljmp xchg out inc mov aaa push data16 popa lock xchg mov loopne out push stos add adc inc shl ficomp (bad) out cmp imul pushf mov jl push sbb out call rcl fsts rcrb push xchg int3 orb lds add dec ja fisttp cmp adc sub mov es hlt das and dec jg lcall fs int lret mov mov movsb add std in popa mov pop pop adc sub out adcl (bad) xlat iret insb jae les addr16 ja sub mov out sub xor sbb (bad) daa or fidivrl insl adc mov inc add loope (bad) mov lods add enter lock jmp into jnp inc rolb sbb jb ret loop xchg ljmp or jb mov movsb adc jne ja sub push or (bad) out shrb dec out jb mov pop push arpl faddl mov cld aaa rcrb jmp mov (bad) scas xor scas mov out sti subl mov icebp outsb lods mov std xchg movb xor (bad) mov out (bad) pop xor loop jb test push cmp fmuls je cmp jecxz cmp mov mov jno xlat aad iret lods out mov pop loop inc xchg out aaa bnd mov loope pushf scas mov icebp dec mov adc xchg sub iret dec (bad) lods out pop ficomp repnz dec dec push mov cli add fucomi or out rcrb push mov loop loop add out clc jp (bad) push pop fucom out xor movsb dec inc sub dec icebp out adc pusha jae mov mov push ljmp push mov sub or out sub dec test ljmp adc push std jl mov sbb mov xchg loope mov out cmpsb call sbb xor adc mov mov cmp dec sbb (bad) mov loop pop imul dec fiaddl add and push jo sbb xchg push add dec (bad) jnp and insl xor dec cmc cmp out sub adc (bad) popf jp arpl mov or out aas mov bswap enter outsb and bound lahf sti call push lcall cmc rcrb mov add mov sbb outsb mov cwtl inc stos rclb sub and iret mov setp cmpsl mov or fiadd and jp cwtl lret rol ffreep cmp in cmp xchg aam add in mov mov xor or and jae cltd out sbb dec mov mov incb mov inc in nop out (bad) pop mov imul and out adc out cmc mov mov mov out or (bad) stc test out sbb push lretw push out je push loopne cmp loope mov popa inc pop rcll ret mov xchg (bad) xchg cld out mull sti ljmp pushf mov movsb int imul mov out jmp mov out dec pop cmc pop leave stos aaa shrb out pop test mov fisttpll mov insl xchg in out xchg js iret lea pop cmp xlat sub sub out push pushf aaa mov (bad) mov loop and adc loop xlat jl je out sub das xchg test and xchg popa mov (bad) pop xor clc out in jmp (bad) jmp sub out adc jne sub int aaa leave cmp (bad) idivb cmp ljmp sar out loopne adc ljmp loop mov out cltd popf adc lds in ffree outsl test pop xchg fwait mov imul sbb mov inc hlt mov aaa cmp mov rcll lahf aad in (bad) out popa cmp jbe (bad) jnp (bad) jl (bad) aas xor xor pushf lods mov push push icebp out cmp jne add push hlt out fnstcw js dec mov mov fs bound loop fnstsw push and lods rorb and or jno lea lods imul inc sbb mov (bad) je dec push mov out shl insb sti adc into rcrb xchg jle loop gs inc mov mov (bad) out sub or popa mov movsb pop push loop push xchg addr16 subl loop rclb push xchg sbb in sub sub sbb mov push out testb ret (bad) cmpsb lock pop push aas mov pop xor out or mov orl jl loop call movsb lods aaa mov jge jp ljmp out setne mov cmp (bad) fnstsw shll inc mov int shr or jo xlat push sahf icebp sub lret mov sarl testb aad adc cmp and loope ret dec pop cmc push xor lret push sahf (bad) in cmp les repz lods sub xchg or cmp pop out cmp (bad) sbb (bad) outsl mov addr16 clc or fadds dec lds sub (bad) ss push iret mov mov cmp or (bad) mov inc adc icebp pop outsb add push in imul mov dec push inc dec push xor bound inc mov sahf (bad) cmpsl nop loope adc mov adc test jno dec std mov pop jge add out push inc inc ficompl push pop push out pop divb rcl or add jo sub out push jecxz orl fistpl rorl ljmp jge inc int lret mov xchg addb daa loope fisubl roll movsb or incb dec jmp shlb movsb shr xchg rorl sub pop lea in loope (bad) jnp and out (bad) push lock popa bnd sub ljmp aaa pop je das push add mov (bad) sbb xchg test in jno in sbb (bad) test add out aad dec or pop leave repz ret stos mov cmp cmp movsl cltd (bad) stos in cmp and test jp test pop mov mov cmp mov cld test leave out (bad) pushf lods mov push lods bound out fidivl mov adc outsb pop sbb push out dec daa imul fwait pop loope dec es cmp stos cli dec ss out out stc push jbe push lea out mov jmp mov (bad) stc mov lods cmc aad inc fbld shrb ljmp jl loop out adc sbb lahf push jge ljmp sub scas jb adc inc pop adc pop fcomp addl sub clc out mov or adcl gs out jge cmp in fiadd mov not mov sahf out clc pushf pop and xlat jg test jmp pop stos out cs cltd xchg add pop movsb les dec mov cmpsl mov scas out pop mov sahf ret shr (bad) dec xchg cld pop add out lods ret (bad) fidiv push das pop lea mov inc pop (bad) arpl xor enter aas mov ljmp push cmpsl add or and out jbe lods mov leave cli in xchg or pop push mov (bad) jae cmp in out lods int ss sub jl scas cli or in jle pop dec dec rcrl popa mov add mov or add out jp or (bad) push push imul in out cltd sbb and out ficoml mov ret (bad) and in sub stos lock jb into sbb dec xor ficompl fisttpl inc out scas test in fwait jle push sbb stos incl leave xor lds fucomi mov inc lahf gs mov cmp (bad) dec (bad) mov jb fcompl sbb and inc (bad) cmc scas iret ret xor lds iret xor xor push out icebp enter mov pop hlt push dec and (bad) (bad) outsl sub mov imul adc mov in and pop adc dec jmp pop xchg pop push push sbb push out adc cmp out jecxz sub jmp pop out out js cmp insl cmp scas cmp ljmp mull adc pusha sbb stc adcl fwait mov jge dec rorb leave mov movsb out or add (bad) mov rcll leave js in xchg (bad) in fneni(8087 pop jb sub std out jge pushf dec out (bad) cmp sub out fbld push std sub out arpl adc test mov push addr16 (bad) xor hlt aam add (bad) and fdivrl mov or out stos jge dec cmp loop mov insl add mov sub jno fiaddl fstl fbld movsb in push and adc dec sbb push (bad) xchg lret xlat hlt lock test (bad) fadd out cmp mov icebp out lods rorl and out cwtl scas sahf lock add loop out sub and ret pop adc out sub xlat mov xchg hlt popf sbb pushf out imul adc jns sahf sub aad test sub nop iret sub out cmp test push cli (bad) jb data16 xchg mov int loopne inc cmp dec pop je scas fsubrs out mov sti in in push pusha mov ret cmp cmpsl mov push out xchg (bad) adc mov (bad) out popf sub or dec (bad) ljmp dec sbb pushl and popa jl sub bound mov mov out sbb or dec pop in xchg mov aas out ljmp lock xchg gs pop lea fmuls mov out pop lods jae jmp out rorb mov ja xor imul loopne cmp je out mov int adc and xlat and (bad) hlt jne xchg out sub push xor imul mov in or or or ret mov mov adc mov xchg add scas push fildl mov aas mov mov stos out daa mov popa sbb lcall sbb add decb je xor in mov fbstp push (bad) daa fisttpl test sbb jmp cmpsb out push dec mov (bad) aas das (bad) lock and out pop leave jbe sbb push dec iret shll and push adc test pop push mov jecxz and xchg jne ds sbb add sbb repz pop test adc sahf dec push or bound mov std arpl imul icebp aas cs push mov je jle inc (bad) int3 ss sbb out cmp aas mov std jae xor mov pop push sub out (bad) fdiv punpckhdq inc xchg js icebp lcall fcoml inc lock mov out sbb inc ret (bad) (bad) out pop or add mov out and (bad) hlt and mov cld test sahf xchg das add sub bound out mov dec add out push repnz xchg sbb jbe insl and pushf ljmp out (bad) outsb lahf pusha jbe cmp scas sbb or push in push mov scas out ret sub out lret and out pop jb std sbb sbb aas (bad) xor fsub sub xchg out and nop mov (bad) stc ss scas (bad) mov push out push xchg in shr jl out sahf pop int ss mov xchg insb cmpsb out bound sbb and rorb adc testl mov xchg xchg fsubr jecxz mov ret pop mov aaa adc mov adc les out push pop and push xor out scas mov sahf and or ljmp bound push mov in popa jg xchg arpl dec andb and (bad) sub xor out rorb cmpsl cli dec pop xchg jp mov iret in ret bound cmp bswap lret and (bad) mov adc stos in out mov int3 add push sbb popa mov pop ret out jnp jbe adc in dec pop sbb das xor mov outsl lods (bad) jo fsubr cmp out jle mov imul in pop jae push (bad) ja addb dec mov aam (bad) xchg out sbb jmp lret adc cmp jne jle lods out (bad) outsl orb inc mov fildll loop call out push xchg outsb pop cli std aam pop ret das add sbb lock dec or out in imul faddl out test int3 rcll sar rolb leave andb mov lret dec std pop jno fadds cmp insl rcrl mov pop insb pop dec push out adcb sbb add out out sbb ror hlt pushl imul pop mov sbb pop imul es sbb out mov shr xor popa mov popf inc xchg xchg ret icebp jl pushf xchg outsl and mov mov pusha and mov jae inc (bad) jmp out inc push gs pop dec sbb insl xor sbb xlat adc or fstps out sbb jmp cmpsb fild (bad) iret aad bound outsb xor cmc cmp fldz repnz repz fstpl ror cli leave inc (bad) fcmovu adc popf add fcoms or out fldcw jae ljmp (bad) fs pushf incb dec mov mov add sti fisttp js xor andl or les scas cmp jb out movsb je jg mov shr and imul test popf mov out into enter sub pop out jmp push pop das std adc pop dec and test push or popa xchg jbe add arpl pop cmpsl sub xchg icebp scas out aad cld mov out repnz pop pop pop fisubl sub lret iret outsb out nop mov dec pop shrb ljmp pop (bad) das xor or mov sub mov bound ds pushf out ss jno jp call add mov jl mov adcl test movsl rclb jnp negl mov add push aaa bnd cmp loop mov pushf xchg arpl mov fbstp gs loopne dec inc stos out mov inc dec pop push cmc ds cmp push mov cmp mov (bad) sub jne sbb int bound fstpl push mov jne shlb ja inc loopne call xchg orb js out and es cltd inc and pop xchg jp jne mov mov sbb push shll mov push insb aas fmulp out jne add rorl paddd sti aad dec jg add idivb out push sub mov mov out call jp out fistpll mov hlt hlt push cmp loope shr sbb or dec dec jmp loop out insb ret mov lret push test out out clc daa adc out rep lock out or movsb jb push ja jb cltd out popf repz jp out inc loope std (bad) mov nop mov mov pop out fistl mov out loopne pop in jp (bad) out xchg ficoml fldcw xor ret repnz (bad) dec xor iret leave repz pop push push orl pop mov imul add mov out fwait add adc shld outsl sbb gs out fistpll mov (bad) aam lods dec cli (bad) out pushf popf aas xchg das push out mov stc inc notl push push out pop (bad) pop or lcall inc imul pop (bad) pop cmp ljmp cmpsl loopne fstpl (bad) aam out rolb jne (bad) insl push out cmpsl out xor add test fbld mov mov push in out jb enter popf in and push adc inc out movsb std cmp out fs mov out outsb sarb dec aam out in pusha jbe enter pop out cmpsb cmp fimul push insl xchg stos ds fwait shrb xchg in pop sbb in mov addr16 mov add ficompl (bad) rorb pminsw rorb in test js mov jecxz out or and xchg (bad) cli out fisttpl lret add test or mov mov iret cmp mov aas insb lods mov fwait out push fidivr inc lods dec and imul lock mov call loopne pusha sbb pop insl push add cld out cli cmp sub mov repnz in xchg invlpg mov cmp cli popa inc cmovnp cmp lret rorl mov pusha int3 je pop adc loopne xchg cmc out xchg mov jne or or cli add clc dec jl jp jae jns jbe out and imul divl mov out dec jge mov mov jbe (bad) out cld paddq out fdivrl daa les ja aas int3 jmp test dec xchg out into in (bad) dec mov in dec jns add out dec ja pop xor inc mov out (bad) je insb inc mov ljmp dec pop sub sbb ret xor mov push arpl mov push sbb fidiv int3 int scas mov jnp js out cli stos xor or fsts cltd jecxz out sti fmul cmp in insb pop je cmpsb in jecxz fmulp mov out xor mov cld jbe movsb lret shr out mov push push xchg int ret imulb rcrl fldl lock insl out out adc xchg sub adc add loope adc or aaa loopne or notb lods inc mov push add lds (bad) sbb nop xchg out cld mov gs push xchg (bad) ljmpw and outsl (bad) mov sbb leave sub jl mov pushf pop addb (bad) stos inc out rorl int3 xchg xchg fndisi(8087 sub out test out sarb mov xchg (bad) pop fldenv pop xchg lods in (bad) scas into out dec (bad) mov mov imul push push xchg mov fsubr aaa fucomip outsb test cli adc daa sub repnz in pop je movsl xlat ljmp dec xchg int3 std out or and dec sarb decb mov icebp ljmp test outsl jo inc inc pop es lret bound lock sub dec add cmp dec cli dec sti (bad) in out fdiv jecxz lock loope sub dec out cmp dec jo je out or hlt js imul cmp int3 add mov testb pop push out xor cmpl cli and stc mov and mov xor int3 cmp enter incl add xchg xchg es test shlb ljmp out out bound pusha pop mov sbb and jb out add lahf jle inc fs and push push push out (bad) dec inc jns pop nop or jnp cmpsb out leave fwait dec rcr add pushf bound shl cmp cs movsl scas in cli adc or push and or shrl cmp bound aaa mov push in cmpsl movsl mov pop rcrb out fcoml inc jge add rcr fs jo int3 mov ss xrelease leave scas data16 out xor (bad) cvttps2pi push out or ds iret and cmp sbb push xchg sub jns popa out add xor xor cmp and (bad) sbb push aas mov aas dec popa ljmp sub nop cmp popf jbe dec stos mov out push dec jb (bad) fisttpll xchg mov mov cli mov push (bad) cld out lret jae (bad) outsb xchg push out aas push repnz lret mov enter fwait and or and out add daa jae pop inc shrb fs in sbb mov fcoms cwtl adc in outsb add xor test les pop add in lods sub cmp enter pop jno sbb jo mov flds out pop jae pushf cmp aaa xchg test out pop (bad) lahf sub xchg and out ljmp stos dec sub pop jo add pop add mov cmpsb (bad) (bad) push in jp std jle pusha loop aas sarl inc lods lret xchg rorb fildll fimul push out mov xchg xor in jecxz pop push stc fsubr dec sbb mov push sub lea mov jb out jmp test xor insb sbb sbb (bad) pusha movsl jmp out mov xchg inc (bad) lds mov rolb pop cmpsl into out push lock mov sti pop mov data16 jbe lahf mov fwait pop leave loop loop jne jg cld fwait ss lcall (bad) sub mov pusha mov test ljmp out call and or or xor fs add mov or hlt ret xchg jmp into pop mov mov push and pop adc mov out mov das in out (bad) incl imulb dec mov stos sub push dec jmp inc or push mov scas lret movsb dec scas (bad) divl ret mov rcll into (bad) push sbb mov (bad) lcall into xor jno out fldl mov cwtl or mov jl loopne in fbstp xor add pop insb pop adc add out xchg mov ret or mov pinsrw fwait daa mov test data16 mul cmp out cwtl add aad (bad) (bad) and dec loope dec ds cmpsl out adc xchg sub or pushf out inc adc dec jge test out sbb (bad) lock ss (bad) out icebp mov inc cmp (bad) and outsl inc dec mov mov stos sti push leave hlt xchg lock in or (bad) pop push shr mov in mov dec sbb scas adc jns aas or or les imul xor outsl fistpl aas mov sbb aam lock lahf int3 fistpl sbb jnp out popa add adc dec xor out xor jno mov xor out xchg mov loop out mov insl out mov dec rep xchg aas add (bad) repnz pop test inc mov cltd fidivrl cmp pusha decb aas xor xchg push ljmp (bad) testb in movsl jno mov sub lods es (bad) loopne fldl outsl repnz jg or inc cmpsw out stos add mov push arpl (bad) and and fiadd mov scas out loopne loop xor cltd cs (bad) xor imul cmc call shrb out cmp js inc jbe mov rorl pop ljmp outsb decb dec mov gs mov adc lods dec or out push inc mov (bad) dec xchg adc fwait and cld dec sbb pop adc rcl (bad) dec and push fsincos out xchg mov (bad) out cmp (bad) xor clc fsubrp cmp popf lcall into mov bound iret mov movsl lahf outsb push repnz mov fcmove inc cmpsl pop dec out xor xor aaa pop mov scas push xchg sub mov pop (bad) mov mov cmp push ret int3 and push adc fwait push fs mov in out loopne adc lock fnop mov pop lret out add out and pop mov cmp xchg lcall out mov jecxz fistl jmp cmp out mov inc fistpl xor out push sarb (bad) mov mov jmp or jne aam js es out stos clc int3 cmp xor jl sbb ja inc inc out xchg repnz add out (bad) mov mov adc out or pop add pop xor add (bad) mov push (bad) out out sbb (bad) shlb pop loop into xchg repz pop cmovb test cli out fs lahf hlt add or mov out inc cmpsl push scas orl and adc fstl lret sti popf dec or rcrl lock cld xor repz outsl sub out jg icebp outsb dec andl in js push mov jge and iret mov (bad) pop jns ja jmp jae push lahf push cld xlat (bad) pop inc mov mov mov adc push jnp add push stos in push pop sbb sub mov lahf mov fwait out cmc movsb aad lss out loopne test pop mov mov out cmp nop loopne out jecxz in cmp sub jnp mov movsb out push inc jo sub and repz out (bad) sub cmpsb pop xchg mov je pop push in call out mov pushf pusha imul je jbe out pop adc lahf out data16 lcall fstp cs jg arpl fbstp repz pop inc pop loop fdivrl mov push xor inc out (bad) dec add jmp pop (bad) pop sbb sub movsl scas bound xchg push shrb jo mov sub mov cmpb jg faddl bound push lret aam std and scas scas fsub push pop mov push cli pop movsl push mov iret lods stc push aam xchg fisubrl insb mov sbb xorps dec xchg loop cld das out fs xor cmc push out fldl leave mov lahf mov mov xchg and inc jno push jmp mov popa stos out and lcall ret es pop aaa (bad) fimull cmp or popa jg out sub cmp fs pop in faddl or xor clc mov out sub or enter pusha out jmp mov fcmove jae cmp pop and insl adc icebp inc mov out inc imul adc mov test mov rcr mov adc jno push and pop sub add push add cmc mov sarl cltd inc or mov dec leave loopne xchg (bad) pop hlt dec mov fsts out jnp std out stos push divl hlt mov scas aas outsl outsb xchg out cltd scas dec sub sti out inc jmp mov pop mov xchg out dec clc pop jp shrl call xlat je sarb out mov inc movsb adc push push cmpsb out pop call inc andl insb sbb lret in das mov ss dec lea mov push mov sti nop out cmp je loop mov jl add lods inc aas mov sbb jae mov mov (bad) jp call push and mov incl mov andl sahf (bad) add sbb xchg adc les adc ror int3 mov push out (bad) jb std mov lea je mov out or or and jmp push repnz adc ljmp xorl (bad) mov xchg push rolb addl (bad) out or out mov imul dec and psllq jp (bad) in addl out jnp rorb jl adc dec xchg into bound cs sub mov sbb call cmp dec pop int mov mov repnz xchg push jle imul out (bad) maxps outsl mov out cli push jne out jo mov or inc out das sbbb scas (bad) push out cmc and add sarb loope or dec idivb mov loop clc rcrl leave stos pop std shlb mov sub sbb insl out pop or jae insb test out (bad) out pop adc mov sbb test dec mov xor cmc xchg clc mov sub xor fidivl aad outsl cmp out mov pop sahf xchg cld sub js lds mov or cmp pop push add mov aam vmovdqu packuswb inc xor (bad) pop out mov dec inc adc push or push bound aas (bad) out jns push jo jp (bad) (bad) pop lea or jb (bad) sti xor scas lahf arpl stc mov jns jl iret sbb cwtl (bad) in testl adc repz insb repnz xchg xchg mov push cmpsb or ds pop imul pop loop xorb and sub jb repz mov in aaa xchg rolb fimul add ljmp out (bad) jmp int add sub popf adc or inc pop enter xchg adcb and jno or mov iret inc lret pop iret out (bad) loop test xor test jmp insb push jne cld scas xchg cli incb inc fisubr pmaxsw stos clc pop insl xor mov test inc (bad) aad mov popf icebp dec xor xchg clc iret or xrelease and imul dec aaa or in iret add mov out icebp pop adc jnp (bad) jo test cli (bad) imul jge jae xor adc pop out sub rclb call xchg insl (bad) push pushf add sbb mov inc xchg inc movsl out cmc cmp and xlat out mov cmpsb mull inc xchg out ja dec xchg stc jne or lock xor popa jecxz sub jo int3 pop scas and out xchg outsb rorl insl mov in mov cmp push add test adc push adc (bad) xor nop fstpl out in push jge jle out jno outsb and (bad) mov out dec (bad) xchg and push xcrypt-ctr cmpsl fsubl shufps xor insb inc stc out mov inc dec mov out jmp sub insb mov out add (bad) jae pop sub cmp or js call (bad) iret dec (bad) jo shl sahf das and out fwait jnp dec loopne les test lahf out sub mov out lods sarb jnp mov pop out in xor dec loope or adc (bad) cmc (bad) enter out pusha cmp (bad) fildll xchg jg jl xchg iret loopne mov out pop jp push add test and pop sbb and pop (bad) data16 (bad) cmp (bad) jnp loope inc rorb jmp mov mov sbbl cwtl sti stc xchg jg and bound outsb aaa mov lahf mov jns out shl mov sub inc push jmp pop aas inc sbb pop sbb aad pop jae iret mov loopne mov std jecxz or xchg scas repnz (bad) or mov cmp arpl xchg xchg jmp stos mov out push js bound push mov loop inc notl out mov pop aas out ret icebp (bad) mov insb out mov add int3 add jne fidivl pop out aas enter pusha or push out lds (bad) adc sar dec in out out (bad) mov or pop jno cmpsb ret adc imul push mov out add mov inc out lds loope in lret dec push popf jae push mov adc arpl int3 xchg pop add in mov adc jbe cmpsb mov loope icebp les test add out fisubrl emms (bad) xchg inc jns mov sub jae jge push test push out fsubrs mov pop jg out outsb fcmovne sub (bad) mov dec pop or push mov hlt fwait adc pop out (bad) or pushf (bad) movsl pop clc mov push pop jle imul xchg jo mov cmpsb sbb jno xor xor add cmc inc popf dec out sar push aaa imul iret in addr16 sub popa inc (bad) pop ja,pt push movaps out std into fisubrl shll xlat sbb jns jmp xchg lahf and aaa xor cmp pop (bad) jl push arpl fsin call add in add bound push mov lret xor xchg repnz inc in jp jbe jl sti adc enter dec or mov sbb push cmp iret mov (bad) mov out lods jae pop inc pop out cli cmp xor lock adc pop push lret jmp inc loopne out stos or xchg notl out pop jp and inc js das jne jb loopne jmp addb jns out inc ret sub mov cmpsb inc out push sub or fnstsw repz out inc dec jmp outsl dec shr mov pushf or sbb dec cmp inc xchg cltd mov imul lret or sub repnz fadd or imul out outsb stc fildll movsb jecxz out add cld mov movsl cmp pop pop fdivl seta and (bad) out and xchg stos fs or pop sub sbb out outsb testl movsl test repnz cmp lods mov (bad) cli out aam std lcall arpl gs inc mov sbbl push outsb das pop outsl mov push xor xlat out mov data16 push xor out lahf sbb lret inc xor test xor mov push xor pop jnp pop out in fcmovbe icebp inc (bad) mov inc nop xor and iret jl popf mov lods ret xlat out dec and fs add out bound sbb iret into jl pop sbb imul xor push pusha jo sbb gs mov inc sti fistpll pusha mov daa jmp in out scas icebp inc add cmp out lret mov out test (bad) mov shr leave aaa jge or sti push or sub out xchg sub mov sub cld cs sub sbb icebp lods mov mov cmpl test adc jne dec fnstcw (bad) std add pop leave push mov popf loop inc dec mov nop mov in in inc add mov scas imulb mov out mov xchg inc lret cmp inc das ficomp std or stos mov les cmp out jl repnz pop in xchg mov loope xchg jbe out rcrb call inc dec push add out sub and cmp scas push mulb jmp inc xchg call out mov lret mov (bad) out jbe jnp or xchg out arpl and inc stos jg rolb mov repz mov stc fs or inc mov ret push out hlt jno jecxz out mov (bad) in pmaxub sub xlat jns mov pop sub inc or dec into xor add lea lock loop stc push icebp out pop xchg stos sbb cmp add mov fist fldenv in xlat sub out dec (bad) stc inc mov jl inc (bad) out mov loop sub pop xor movsl push inc jmp cmp ret jp dec xor aaa inc (bad) lcall add mov cmp arpl mov jnp mov mov jbe mov hlt xor sbb cmp enter (bad) call outsb aad jnp jae out and sub out lret pop (bad) dec push out add cmpb sti shr pop (bad) sub fdivs out (bad) xor pop out mov insl icebp xchg (bad) addr16 scas mov pop dec loope dec mov lods sti cmp out repnz xchg popf and dec mov push add mov xor out add cs pop dec cltd test ljmp loopne jo sub sbb popl mov imul lock adcl xchg (bad) jg roll in aaa jbe mov jnp loope jmp cmp ds mov xchg out sub jle mov mov (bad) jg or fucomip dec fnstsw mov aas rol out xchg cltd mov ss out jl jmp cmc int3 mov sti xchg loop aam out mov jne out sbb mov dec fild sub or lds rorl sub rolb outsb mov out or pusha cmp mov outsb addr16 or xchg ljmp push mov stos sarb repz cmp data16 loope pusha push out xchg sbb sti gs out push frstor push movsl and jnp shlb out sti xor dec lods out xchg pushf (bad) nop or mov clc ljmp in add out (bad) popa sbb out add (bad) fstpl mov push repz and push push into adc loopne mov pop xchg jns test mull pop out in loope or xchg aad hlt loop push xor roll mov sbb adc outsb decl je (bad) fadds adc mov (bad) sbb stc add mov out sub pop mov pop dec or add std mov lret inc mov sub aas daa inc repz ds out cmp (bad) out cmp movsl xchg jnp negb jecxz es sbb xor and cmp stos test shr inc (bad) mov out push push add dec and pop out bound sbb jecxz lret pushf inc sbb fldenv shrb mov and mov (bad) ljmp mov rorl cmp hlt icebp push fisub das out out imull leave lret xchg inc (bad) out dec xchg jp mov out jb xchg jecxz ffreep lcall xchg inc rclb addr16 dec dec or pop inc pop cmc enter out loop cmp ss iret dec sarl inc rorl and or cmp icebp pop adc cmc and icebp fcmovu in add (bad) out leave insl mov mov or iret push xor test cmp je adc cmpsb pop (bad) movsb add loopne pusha cmc into jmp push mov mov popa dec js scas jmp (bad) out orl lret call pop cmpsb inc dec sbb inc and aad ret stos pop add cmp push push stc loop inc into out add or comiss push stos inc insl addr16 lods mov lret mov ja stc inc iret sub (bad) jb and sub out jns xchg leave lret lahf push mov (bad) mov or cld xchg adc inc movsl mov rcrb out js or insl shlb fdiv gs xchg out leave push jnp nop cmp imul daa int loope jns jne push je leave sahf imul in (bad) fidivl inc jl scas push xchg mov out xlat cmp jle and pop test sbb cltd cmp push (bad) ret or mul loope repz jae and out xor (bad) mov add (bad) (bad) mov out jne mov push inc mov out loopne sub (bad) paddq daa dec out ljmp int sub aaa cmovbe or cmpsb sbb out push imul mov xor out and push mov out add ret out xor jg arpl sar out sbb cs push jmp adc sub out sub mov out mov (bad) negl ficoml add pop pop insl lret loope cmpl pop jae jns jmp push in dec outsb cmpsl divl aaa out xlat loop cmp lret mov aas dec shl out or xchg fwait pop out enter inc lds daa xchg ret xchg pop xor inc xlat out repz sbb jae std je out in sub idivl int3 pop cmp inc cmpsb out in fnstsw test fsubr mov lea and pop inc sub ljmp xlat push out frstor pusha dec out mov lds gs rclb out out push ds dec push (bad) out xor add jmp mov lods xchg mov mov popaw mov pop and test sbb out xchg aaa xor (bad) stos repz out (bad) ss ss test sub out and jp ds out (bad) push push cmpl imul cmc and nop out mov rorl inc clc stc inc lret cmp push out mov xchg adc enter jae pop mov mov ljmp lock add jne adc out sbbb loope sub lock dec mov dec pop cmp add outsb cmp pmaxub xor loop or js mov inc cmpsl (bad) jbe lock and mov sub in jle fnstcw adc xchg jbe out and dec imul mov aaa fldl or sub shl out movsb aas fwait gs rolb inc cltd popa mov js pop pop push sub jmp push jmp out inc shrb mov rorb mov push rcr loope jbe in dec sub popa xchg cltd cs pop cmp out xor pop push imul call add jge sub imul loop jg stos rolb out mov ja add pop jns mov daa jnp out sti lcall out jmp popa push nopl cli in xchg int out into lds and pop out pop pop in stos int out out sub fisttpll mov xor sbb dec (bad) out cmp ret aaa scas push cmc mov sub sbb fucomip daa call push out arpl out fdivl fwait and mov inc jg pop cs cmpsl pushf and clc aas ret pop cmp loopne xor scas sti out dec jo lea mov (bad) (bad) hlt cmp and outsl test fs out repnz pop sbb cmp aad jge xchg jecxz adc addr16 jbe xor mov pop adc or inc shrb ficompl or lcall cmp popf imul jecxz (bad) jl lret iret xchg out push lods jmp pushf ror pop out stos repnz sbb out mov (bad) lds int scas ljmp out add sbb lret lea pop mov insl insb ljmp lcall mov and repnz jmp sahf out jp (bad) cmpsl repz incb add push popa out sub jle hlt out mov jg nop iret dec mov push mov mov (bad) mov xchg jns stos enter cmc out ja adc cmp push jmp ret out fistl mov cs mov out xor loopne int3 ss push (bad) out mov cmpsl sub dec ljmp add mov gs pop push jl pop out inc lock icebp mov add jle pop out add push cmp mov cmp ficomp fildl out xorb fs mov inc xchg out mov idivl add out mov jno fldt sub out mov ljmp xchg hlt out mov push call test push sub jbe (bad) jno mov or pop pop sub dec in cld adc dec pop iret ficom (bad) lock sub ds out idiv test shr sahf out adc sub (bad) sbb out stos cmp xchg insl mov sti mov cmpsl pop mov mov lahf int iret ds clc lea mov loopne cmpsw (bad) out or adc (bad) ja sub xchg js dec hlt dec (bad) arpl les (bad) xor jo popa xlat xchg mov or out push movsb sarb mov mov or call and sub or or rcl out ljmp out out cmp rcrl pop add jle fdivp sbb or xor cmpsl xor mov lahf cwtl fsubr inc jecxz push daa popa aad (bad) xlat inc out pop adc sbb mov fs out call and push jns push sub into adc and mov cmp call shr lods mov stos or in pusha mov jbe mov shr les pop loope bound std cld adc pop jne jbe rol into pop cmp mov cli sub push and mov and inc orb jae fisttp out mov adc lods stos xor mov jo ret or dec or fildl out sub jno out mov icebp cmp pop roll fldenv xchg ljmp mov test hlt adc jl das pushf and mov jno sub inc (bad) test jecxz repnz lock adc mov out adc cmp sub adc mov out sbb subl out aad (bad) push mov das sbb sbb mov data16 fbstp rep (bad) negb inc mov (bad) out pop cmp aas inc jno jae out sbb dec hlt and push jo in out (bad) mov cld xlat cmpl push mov (bad) mov push aas mov repz sub lar out jge xchg (bad) jl cmp call popf out adc pop sub mov cmp out jmp out shll data16 xlat pop rcrl sub and xchg ljmp and out jle (bad) push mov mov add fwait push push pop lcall pop mov xor and cmp jb outsl pop sbb ret and insl mov ret push js out mov push sarb mov mov push ret inc sub out pop push out mov popf repnz mov jl inc out int jg mov lock push enter pop mov out je cli sub dec jno nop xor and xchg mov out into rcll xchg push sub in testb push fnsave in jns add test xchg mov es jle xor mov xchg mov cmp leave scas dec iret (bad) jne cwtl lock stc lcall iret dec push popf aam enter imul mov mov xchg sbb fnstsw data16 mov int fs aam jl fcompl dec out adc jne adc or jmp test shrb ljmp test add loop pop les push mov outsl ss cmp daa inc or pop jmp out xchg (bad) in lret mov push jno ljmp out cvtpi2ps stos adc int fist inc adc push push aam fmul mov cltd shl (bad) mov cli mov call rol cmc pop pop xchg dec cmp call addl out shlb jne push fbstp out inc jp xchg scas jae dec pop inc lahf xchg adc mov cmp out sbb mov js add mov pop jl in scas insl out inc leave je add pop sub jg xchg out adc dec lret (bad) mov out cmp shrb out sub and lods mov ret out cmp shld (bad) jbe out stc push nop in test test sbb jb test dec out imul mov icebp sub in mov pop out test push sbb jmp jl jge cli out adc out xor shufps sub scas add cmp mov aad mov xchg lcall mov mov sub add xchg xchg mov iret out adc stc in (bad) lcall loope dec out xor fs out mov sbb inc dec rclb jle sub and mov xor cmp mov out mov icebp test jmp ffree jge mov pop out ret std push cmovle cmp int3 stos insb mov imul mov sub shrl push jge lret lcall xchg out je (bad) ljmp push mov xlat iret adcb sub aas dec inc je cmp and jle dec push mov mov or aas fldenv push add pop cmc add nop (bad) hlt cmp mov sbb or dec jg repnz out in pusha addr16 mov sbb mov sti out jae rcll lds imul or inc xlat inc out dec dec adc iret jmp mov pop aad out mov mov out iret icebp lret lahf xor add int or jl insb movsb ja (bad) clc pmaxsw dec cmp enter ds inc jne out es out test aas mov xchg lahf xchg fxch jbe or out pop xor (bad) mov out mov mov push out xor push xchg add mov pop mov insl adc add fist ret imul rclb xor in dec jo stc in ljmp dec ret jg adc xor das ds fdiv mov xor dec out les lret fimull fnsave repnz lcall mov out fs jle mov push out ja bts jbe cmp inc sub call es into (bad) in sub inc jo pop push jp loop mov dec incb cmp std ljmp fisttp cwtl mov push loop call iret mov xchg mov add jne stos sub out inc ljmp (bad) xlat dec adc jl lods xchg aas scas (bad) outsb mov loope push pop nop dec lods fidivrl (bad) lock xor sbb add cmp add (bad) lea xchg es push pushf lods cwtl and out sub gs (bad) pop in ds adc js rclb inc sub addr16 (bad) sub int3 xchg call dec out inc pushf push mov out mov push xchg adcb xchg mov dec je sub aam mov popa or cmpsl sahf and lcall mov in test in out pop push cmp outsb lea jo mov in jns jb mov sub es add (bad) sbb outsb mov test in jo cmpl fisttp mov flds mov sbb mov lods (bad) cld inc popf push sbbb in movsb stos int3 pop inc out pop pop xchg (bad) stc jne out adcl dec (bad) hlt mov out (bad) push jmp fcmovnbe (bad) (bad) jns or mov out scas pop mov adc (bad) jmp cmp loope pop dec sbb xchg hlt sbb out mov add jp out inc jnp lahf rorb outsb sahf in stos lods jecxz xchg and out jp push push sbb scas sub mov mov out push rolb out inc jecxz inc int3 adc xchg push adc dec cli cwtl mov jmp out mov pop jg add fsubr movsl fisttpll lcall sub hlt sbb dec out lock test shr jg fwait or fbstp jne std dec sarl lcall icebp sub add pop dec push jp (bad) xor fild jae imul sahf iret dec ljmp inc pop sub rcrl scas push ds adc das sub cmp mov lods fildll push xor aam and mov sub icebp ss ret push out (bad) pop cmp lahf jno add popf xlat aaa jle test and push out mov out inc scas into pop insb int3 push push inc mov jg dec mov xchg sarl jne inc xchg into pop cmp dec out mov (bad) and or sbb in pop lahf add or add out rolb inc lods (bad) jmp out mov in clc jle (bad) out mov test pop pop mov in scas in inc inc jno out in mov adc adc sbb mov mov insb lret xchg insb out (bad) dec mov insl cmp mov inc mov les or jmp xchg ret adc mov or jo and std xchg loop out mov xchg jp outsb stc repnz dec push mov and jo xchg imul pop lea (bad) out sub fistl pop xchg ret rorl pop or rorb or sub daa out sub mov loope dec ljmp out adc add sbb in dec jno out xlat nop stos out mov push add mov mov or into add inc mov jp out in data16 jne out std adc lea stc in pusha push fwait (bad) out mov pop pop movsl dec sbb jmp movsb xchg out stos or add out inc fist dec mov ljmp cmpl dec fsubr sub out mov xchg sub inc cmp aad nop inc ret pop fisubr movsl call rcll imul adc pop adc jno mov popa pop xor jo out cli popl fsubr mov xchg lcall out mov pusha sahf jno pop pop ss push add adc int mov (bad) mov lahf inc loop adc ljmp xor cld adc mov and out xor stos jb mov insl jno das push adcl cmc xchg mov outsl pop out mov (bad) out or push or and (bad) fsts cltd je loop adc xchg pop push rolb test xor int aad cltd or in nop inc cmc icebp outsb (bad) out mov pop cmp push lea lods iret jns ret mov mov pop ljmp dec adc sbb xchg xchg mov in sbb inc loopne mov (bad) shr arpl dec (bad) push (bad) jae (bad) add fsubrl pop lods mov clc adc cwtl out inc rclb jae dec cmc out push cmp xchg dec push shll in and xlat out jmp in bound call pop stc adc das xchg xor std jg int3 jmp shrl add adc (bad) scas push fdivs orl add out mov mov fs adc mov sarb lret shll out pusha and pop in stc jecxz jno sub dec lahf fsubl add cld and xchg bound into inc loop jns (bad) and sub je jmp or xor cld fs sub or std mov imul sbbl aam data16 xchg out stc cwtl jge add push mov loop sahf jnp (bad) and outsb out sub rorb (bad) sahf or xchg jl out jae push dec mov popf xor cmp sbb fucomip mov negl and add out mov jmp loop in popl repz xor idiv (bad) xlat (bad) push out sub js xchg ds cli sbb jo cld lahf sub popf out int3 lods push test (bad) (bad) (bad) mov jp mov icebp repz pop mov bound das (bad) out cmp (bad) mov inc mov mov fldt es out inc dec std xchg in mov dec push out idiv ss mov (bad) mov cmp (bad) lock mov les jle sbb std out cmp mov out adc push xlat mov cmpsb (bad) mov mov in push out enter fnsave out (bad) mov out test dec lea mov cmp inc (bad) iret xchg sar jnp out loop xchg sub mov dec inc mov cmp std dec test pop psubw ljmp sbb (bad) lock (bad) xor sbb sub out test aas arpl jno adc lcall movsl mov popf adc lock or mov nop inc xchg pop repnz out pop sbb add and dec aad mov ja or enter (bad) out ret mov mov int lea cmpsl arpl aad cld test int3 sbb adcl insb imul sub (bad) js dec jge add shr xchg inc addr16 (bad) daa fwait (bad) mov les out inc cld jl jo or mov push loop negl arpl adc cmp and (bad) (bad) sub mov dec enter pop cmp in pushf imul insb mov sbb clc xchg jmp imul mov xchg out xchg sub jge movsb dec iret pop mov mov (bad) mov xchg sbbl pop ret out sbb (bad) out clc cwtl call ret dec bound push jmp out add jecxz out dec es push jge movl outsb xor (bad) mov ret addl test add mov repnz (bad) out and push cmp cmp xor fs lods fucomi sti xchg jmp and out shlb cmp adc pop inc shrl sti out inc mov adc out sahf into mov mov out push in sbb ljmp aad mov mov xor out xlat mov loope out push xorl ljmp outsb pop insl cmp incb xor (bad) sbb inc mov movsl in sti ficomp in arpl (bad) xlat mov inc sub call xchg stc mov aad pop pop out cmc xor imul add das dec jmp int jo ss push gs xor push sub jmp xchg cmp pop bound xor leave arpl out ss sti (bad) out lods cmpsl in xor out add fnsave pop (bad) xor nop pop rclb aad pop aam sbb inc call hlt add ss dec sbb out sub int3 rcrb out mov out out jo cmp out test xchg mov out lock out cs out pop push add es dec loopne std repnz fldz lret xchg fadd (bad) cmp pop xchg outsb insb out mov push es sahf mov rorl loop iret adc mov iret jg cmc or or sti out test pop dec or sub (bad) cli dec lret push into out jmp mov out in mov cmp test in inc ds mov aas push mov lods xchg lret in inc adc add fs out fcompl add aaa jae add out (bad) mov dec ss gs (bad) cmp add push mov out mov jge mov inc push push fistp arpl in addr16 daa pop mov push fmuls out xor pop and xchg sub mov out pop mov jns mov sbb mov notl loope pop test ljmp dec add sub add shlb and sbb jmp sbb or repnz lds dec jo mov loop (bad) mov mov imul js add out (bad) cltd jmp mov mov mov jae cmpsb pop out inc (bad) aad xchg xor dec jb cmp sbb add loop mov repz loope cmp adc into popf out sub mov dec mov out inc daa jle mov (bad) lods loopne sbb int or rorb je,pt test jae divb cmp sti out add leave popa pop out out pop pop ja scas lods and aaa cmp dec rorb leave aas (bad) pop faddl out imul test hlt les sub inc lock into div jbe out divb rcll out imul in pusha mov loope adc mov push ffreep push test pop (bad) addl (bad) arpl js jno,pn mov dec lret jmp out dec testb lcall push enter in push pop shl adc into mov sbb jge jmp fucomip and das stc cmp jg (bad) lds mov pop xor je cmp pop test jmp test inc dec in ret jbe iret dec stos movl push pop xor das and imul pop (bad) adc iret in ret mov inc xchg andl and pop xchg (bad) cmc out (bad) jl xor loop push push fildll jnp lods add add stos mov jb sbb call push in lock and or cmp adc incl call sbb push out dec enter into insb (bad) out fdivl bound loopne addr16 inc ret addb add pop movsb mov sbb test xlat sbb cmp sbb out jne je mov xlat adcl mov (bad) mov std or in ret cmc repz movups cmp loop es pop shll out jge repnz lock or fbld notb js ficom dec pop lcall outsl aaa ret pusha in out aam cmc and and mov mov jl outsl pop push adc ja adc inc out stos add out int add fistl out lods push nop std mov mov imull inc cmp (bad) jne cli (bad) (bad) push icebp in mov mov arpl push lds add out inc outsb sub imul or shl mov jg hlt ja nop pop sbb and sub pop inc xchg dec pop push push ss jnp cli (bad) repnz inc out dec xor outsb mov push add das or in shr daa pop ljmp lods pop xor push jae mov xor push jno mov imul sbb iret sub mov xor mov mov enter jb push mov lds jmp xchg pop mov ljmp insl cmp hlt arpl mov out push (bad) jl inc jg out sahf pop popa loop jns cmpsb decb iret pop addr16 in in jp out push std pop sbb ljmp xchg loopne call out lcall std cmc packsswb push xchg pop mov mov push std out xchg sub pop and dec and and pop lods imul loope lret fdivl jmp test adc (bad) push iret lea fs pop xor lock enter push in fucom call adc movsb ret jge jo adc pop cmpsl cmp mov add adc lret (bad) repz mov xchg out (bad) (bad) cld call out mov stc inc rcrl movb pusha out pop jge pop add mov add bt pusha ss cmp and pop out dec lret clc mov repnz push lods orl push sbb out mov (bad) repz adc (bad) adc inc out fild dec push dec pop push test (bad) jmp fdivrp ret das mov jns out pop leave jge mov in push js pushf nop mov daa es loop fisubl shr mov inc test pop pop clc sub loope push into pop data16 cmpsb jb imul out xor (bad) cmp pop out (bad) jne sub out call scas mov sahf stc in lcall adc push (bad) mov out scas daa popa dec mov stc ljmp pop push pushf inc push shl mov push out dec repnz (bad) out fsubl fisttp or out add lods sbb dec sbb loopne out les out mov outsl fst out mov aad cmp pop pop jge cs out push lret sbb xchg lcall push subb fcomip loopne push xor out (bad) mov pop pusha mov stc cmpsl movsl scas hlt repz leave mov mov out pop and mov xor dec inc out stos leave push mov loop ss sbb inc sbb out mov into incb mov add (bad) and popl push cs leave (bad) stos xchg push icebp xchg and (bad) xor xchg dec std pop mov int3 mov out scas (bad) ja lea fcoml fbstp sarb in and mov sub insl idivb cmp (bad) xchg scas fcompl dec loope cld or add jnp decl xchg out lcall (bad) out push cmp (bad) leave icebp dec out xchg mov repz push xor das pop and aam ljmp call or xorl adc cmp xor lea jb xchg stos popa out loopw (bad) lcall sub pop dec jl fistpll hlt clc aas call cmp adc rclb mov daa out test add mov fs (bad) aas and mov lods mov out lods dec adc nop iret jbe push xlat loop mov or out xchg fsubrl je call dec cli and (bad) sub in or out push ret and or out xor sahf jb xor mov sar sar mov push out dec pop cmpsb add xor loopne pop or and jo addr16 js out dec cmc mov or dec int add out pop in daa aad pusha xor xchg cmp ret out nop sbb into fcmovnb out repnz dec add xchg and loope and out das loopne lcall cli xor fxsave out aas out mov pop add sti cltd out lret mov xchg out loop repnz fdivrl mov pop xchg test xchg cmc and imul adc test loop in mov (bad) pop out inc jg es jge out inc std testl mov ret xchg sub sub out mov jae out es inc or jge push adc sbb out test sbb sbb out nop xchg jne add add out test (bad) and repz ljmp jno adc out pop shr adc ja sbb xchg add imul xchg or test (bad) es or mov pop addr16 xor rcll out js je inc es push pop and sbb cmc in (bad) into test mov in mov ds cmp xor js repz out sti ss prefetch cmpsl outsb (bad) out jecxz sub bound jbe dec insb int (bad) and jl out cmpsb mov mov mov inc fsubp fcomi mov dec jb push iret insl sub mov popl (bad) in out cmp cmp iret test js mov jmp out mov lahf bound out (bad) imul out test gs imulb mov out xchg mov sti jle sbb out xchg (bad) sbb sbb xchg jnp cld lahf orl icebp hlt ljmp es out nop ss cmp cmp out (bad) pop lcall imul in dec out mov xchg jl fist adc cmc inc out insb push frstor adc sub out pop out bnd mov inc push sbb fwait js jecxz adc pop pop mov jp pop call fsubr sub or mov sub and xor test mov mov mov rol test mov lret out push aad iret push popa mov out pop add xor out into es aam sub jp cwtl cmpsb pop add dec xchg je es add pop pop int int lods fldz adc cmp fildll mov fs out cwtl jno xchg call push or out or mov (bad) hlt mov adc mov test cmp mov dec jg (bad) inc loope sub out or push sbb imul xchg out pop cmp pop mov fucomi pop inc arpl jbe out loopne dec mov in jnp inc xchg jno adc mov shlb fidivl sbb fstl fldt lret cld lods insl mov mov sbb or push push (bad) cmp out lods jnp loope mov arpl cmp lret jne push inc in add mov mov mov lds test jl out xchg ret daa jp or jge mov aad insl mov (bad) push ret int (bad) lock pop insl pop (bad) mov icebp ficom imul add or int out iret jmp mov (bad) dec mov cli pop xchg mov dec pop clc cmpsl in fwait outsb pop push mov inc mov sbb ljmp icebp jl pop fidivl (bad) inc mov popa mov out in push add jno lods addr16 subb scas fs xchg mov out aam inc adc dec out mov stos push mov ss (bad) in xchg lahf dec push ds out andl sub iret divl pop out cmp test pop rorl daa mov mov fisub decb (bad) mov loopne out ds mov adc sbb ss adc dec inc out mov lret outsb fs imul out outsl dec (bad) cmc orl in jmp sub jmp dec test cltd aam cmp inc jg pop (bad) out and gs dec mov out xorl divl in (bad) flds lcall andl out daa out imul and cmovbe or xchg sub mov pop sub stc jmp pop push aam pop (bad) int out push test sub mov push cmp sub pop (bad) lock (bad) out cmc jbe push or out aad adc movsb rolb loope dec test xchg push out mov push cwtl (bad) iret nop or fmul out movsb xchg leave aaa fcomip out xchg sub pop repnz push mov sub jno sbb insb jae mov out imul add loopne mov bound xchg pop in mov movsb aam out mov xchg mov gs push cmp cli adc sub js add gs clc bnd push insb mov push pop enter push jns dec and into daa cmp xor pop adc (bad) in cmp call pop pop jns mov subb stc loopne ret mov cltd inc jecxz inc push add adc fwait jle out push cwtl ss mov push decb dec int3 imul sbb add sub out push stc dec xchg test cmp int (bad) push out pop (bad) mov dec cmc (bad) call movq xchg jns cmp movsl inc pop in imul das xor jnp jecxz inc stos adc out sub inc mov out insb iret xor ds or pop loop push mov sbb in jp add jg push mov loope and ds imul or dec (bad) loope daa out xor xchg fucomip (bad) xlat mov jo out js dec pop (bad) or call jne je cmc mov cld scas xchg es xchg pushf jmp pop xchg cwtl out ljmp pop mov mov adc out mov mov out call ja test sti jmp xlat aas out mov jb test jns (bad) xchg lret (bad) jnp lock out int3 push sbb mov cmpsb mov fist out pop add inc pop and add push imul adc lods mov or pop sysret xchg (bad) mov out mov js idivl lcall jno mov sbb mov loop pop adc add scas jmp out or aam ljmp jle ret mov pop sar fs jl stos negl lret cli scas test jmp pop add ds in (bad) sub pop outsl mov fs pop adc hlt out je jns sub jle jmp data16 lahf rolb cltd das pop push sub jl dec testl or pop lahf mov in adc or mov add (bad) out push ja push xchg mov insl mov shll fdivrl sub pop or push push (bad) loop mov stos inc jge sub lret xchg jecxz xorb rol pop pop fiaddl sbb push jle dec add push xchg or mov nop jns or iret in pop in and (bad) xor arpl adc and dec fadds mov push cs ja pop dec sub or ret inc jl lds sahf mov xchg ret iret add out movb dec fmull mov iret cli add push out mov movsl dec out xchg lods popa xlat mov jo std test out (bad) addr16 les (bad) test adc imul lahf out adc bound nop mov (bad) push cmc js adc jae adc inc lahf mov divl cmpsb (bad) adc out jb dec and fistp push out imul fs jne sbb and xchg lret cmc fldt cmp jb ljmp fstps (bad) out rcrl sub mov stos arpl add out pop pop xchg out jp pop scas sarb jle insl jb pop (bad) setae loope int3 sbb cmp pop cmp mov xchg js cmp pusha mov out xor xor out mov sub (bad) cmp mov sti aam push mov scas gs pop or pusha dec stc add pop rcrb inc lcall fild daa inc (bad) jb jb add in inc pop xor (bad) out mov int pusha mov cli out iret jp pop xlat inc loope and jg push cmp iret ret sbb mov into pop nop jle mov (bad) in sbb cmp xchg cmp lret outsb pop fwait pusha or (bad) test xor insl jbe fidivrl popa jmp push decb cmp mov jmp sub inc out jmp and imul push and iret fwait hlt inc outsl in mov pop shll add (bad) loopne ljmp fbld insl pop lock addl out sbb adc mov jb scas shr data16 xor loope leave je xchg rclb jbe push das test xchg pop popa and cs in mov sbb push gs lea dec push or jo insb add and push push fwait (bad) mov cmpsl shl aas out mov fcoml fs add sbb pop and js fsubr int3 or mov pop addr16 dec fisttpll pop rcrb jne and out pushf push aas jp adc out mov imul pop cmp mov and in inc xchg lcall xchg pmaxsw pop rorb data16 pop out cld in mov dec mov mov (bad) xor xorl repnz mov adc xchg jo cwtl xor xchg pusha adc aaa push lret scas add hlt pop jb adc mov cmp dec (bad) mov adc in ds fcmovnb cmpsl out jp inc mov mov mov in out ss mov sub add scas add std adc push pusha addr16 mov xchg mov pop inc in decb xor scas jb lahf inc test ret fisubr mov mov (bad) hlt (bad) mov shr out sub mov add bswap ds sbb mov dec out pop dec adc decb out cmp mov jbe add sti int3 divb pop xchg (bad) cmp out dec cmpsb pop inc rorb stos sar inc cmpsb in cmp mov arpl adc mov xlat jb out cld je lret dec mov leave out xchg xor mov int out sahf cltd (bad) xlat sub or ljmp cmp jnp pop (bad) aam dec imul rolb and xchg jae mov xorl sub idiv aaa pushf mov and and in (bad) loopne mov fwait scas out test push cltd stc jne aad out les sub out jle and jns out das stc dec mov ss sub jne sbb out clc fsub jmp out lock fimull and movsb push lock push cmpsl xor lea xchg out (bad) add adcl cmp jae push imul out rorl sbb ds push test rcrb imul je sbb sub out mov icebp jns sub in dec out js and push pop add out and cmp and pop and adc ds pusha leave sbb and dec ljmp mov adc lods out lret shrb inc push mov jno mov mov faddp jge out mov push js mov and ret push insb push sti addr16 rol fsts mov clc out es jno out xor mov pushf cltd xor popf mov jnp pusha push out daa jecxz cltd (bad) loopne mov and dec in mov pop iret mov dec xor out fisttp dec out mov cmp xor sub daa test js aas stc enter int popa (bad) mov mov inc cli or cs in inc mov adc out xor mov fwait aaa push sysret lods out dec lds cli jge (bad) and ljmp hlt cmp xor sub cmp iret pushl icebp aad out jb stos js push pusha inc loopne lret cmpsl mov mov xor cs sbb pop mov iret scas divl les adc mov pop enter (bad) ss rcrb loopne lods addr16 inc int in and push adc fistp mov jns out and scas fstl fldt iret cmp mov out cli push shrl rcr aaa sub cmc push and add mov movsb imul imul pop aad mov cs or out sub fnstenv xchg mov add sarb push ret or xor mov in add divps outsl test ljmp in imul mov pushl xchg mov or out lds out push iret into dec rclb out test outsl dec dec jb push out and add das mov dec sahf jmp push in xchg out ret add and pusha out loope cli or out inc pop mov cld (bad) divb iret mov clc add clc (bad) insl stos jg mov push out pop int3 out mov xchg inc dec out inc mov mov inc sbb aam das sbb out ret lret fwait popa mov cmp adc cmp out (bad) sti and ret push in mov loop xchg rsm pop daa sub (bad) adc (bad) xlat adc mov or sahf jno and popf out cmp out pushf addr16 lock sarb add jmp ja sti das pushf mov xor adc aad xor push or imul inc jecxz xchg sub into push (bad) out dec (bad) out cmp ljmp cmp addr16 push in nop (bad) mov xchg movsb (bad) lock std mov leave jg lods jnp mov out faddl jns,pt mov outsl pop adcb leave (bad) adc mov out gs sub out aad and inc out (bad) hlt paddq imul das rolb js push mov xlat (bad) sbb jbe in or out (bad) dec push dec rolb dec out je adc jbe cmp or lret out or pop lods fldt mov sbb pushf dec sahf xchg jo sarb (bad) mov inc sub repnz test mov jae inc xchg fistp cmp lock push and out dec sti mov jb jp out push stos inc (bad) and pop fwait push int hlt sub sarb pop pop cmpsb (bad) out das jno inc mov (bad) add jge push stos stos out nop mov dec cmpsl outsb inc push arpl and jmp push inc out icebp pusha jno mov mov adc imul or out rcll pop loope pop lock mov inc out clc out paddd repnz jae,pn push aaa decb sbb push sbb (bad) fsubrs push inc imul xchg lret aaa in out mov and pusha cltd pop out adc pop fdivl out sarb andb add out cmpl mulb stos and sar lret neg mov outsl bndstx repnz dec out add adc cld out (bad) enter jl sti aas (bad) test jmp aaa (bad) in xchg xchg sub mov xchg shr mov stc jno test js inc fnop jle in mov out ret sub sub loop mov loopne ret ljmp xor leave mov or out and fldenv popf pusha imul push mov negb push test xor fsubs lock sub mov clc mov out fcomi or lea fildll pop push in idivb dec mov or addr16 (bad) mov (bad) adc out aad loope fcmove lea aas push (bad) fnsave ds mov scas cmp pop jmp mov pop xchg out mov xor push out (bad) push sub xorb pushf in repnz cli mov test outsl pusha outsb aad out mov add inc pop out add out cmpb add aad jne stc in mov gs out ret mov and push pop or je push pop addr16 stos xor fild mov (bad) mov xor repnz sub sbb xchg and in and pop out push adc dec cs popa out fucom push out sbb out add test xchg popa fldcw sub in insb loope push cltd adc rclb xchg pop mov fdivr cmp je scas test mov sub add xor ret xchg jge in cmp out jg imul scas xor cmpsl rcrl out jno iret and pop push (bad) mov adc out jno jg mov pop mov in lods xchg shr sbb inc add nop lock mov xor scas mov mov or out push pop lods inc into out xchg sbb scas addb call loopne imul repz adc iret inc rcl cmp notb imul (bad) inc mov out xor dec lcall adc std int push sbb add (bad) jb sbb xchg ret in push out adc pop adc sub cmc rolb jge add sarl sub dec pop (bad) js ljmp (bad) out loopne popl test cmc hlt dec cmp outsb mov stos (bad) ljmp jmp ds xor mov cmp add out jae ret or out xchg cmp out adc push idiv mov pop fcomip fwait sarb xchg lcall add sti jno loopne push out ja cli dec adcb jae sahf leave jl fsubr lcall add push mov (bad) loope movzbl xor mov add out sti rorl jbe inc and mov xchg out lret inc aas enter push call in xchg jmp cmp ret ljmp scas nop clc and (bad) xlat add jg xchg add icebp inc inc imul out adcl repz jl test jp lea and out lcall pop iret xchg aam popa rclb sbb jp lods jns inc out mov xchg hlt or test rorb adc frndint push in outsl pop out jecxz push mov aad gs lock pop das mov sbb pop pop inc mov imul lock or outsb mov out pop sahf inc sbb jns jecxz xor ljmp dec bound xchg xchg shrb ljmp jae xor daa cwtl out add mov cmp int3 insb sbb out sbb ja jae dec cmc jg xchg lret (bad) das adc inc shrl out gs inc cmp lea mov mov mov js adc dec out out loope repz xor icebp mov cmp add ljmp out sub mov xor adc jnp sbb les out jbe xchg sarl loopne mov (bad) (bad) dec je cmpsb mov pop decb push test loop mov es scas sub mov mov fucomip pop ds jp loop popf and loopne pop and cmc js push jle stos and loope jns out push inc inc stc push mov dec loopne dec call out sbb incb add dec out cs pop pusha (bad) std add pop adc test js loop inc out pop xchg dec iret mov mov inc lcall das jl jnp push je pop mov inc sbb out enter xor repz lock nop mov jmp (bad) stc in mov mov or repnz ja adc imul sub mov (bad) cltd sbb jo lret push mov xor pop mov xor lahf xchg std iret sahf jne pminub pop imul shrb das pop out mov gs inc test inc mov dec mov insb sbb push test add jmp je loop mov sbb mov and imul pop cmp lea arpl out shlb mov mov xor out sub cs pop mov sbb xor lret inc into (bad) repz cltd in imulb sbb aam aas lahf xorb imul cmpsb ss adc pop scas insl xchg out outsb pop push stos fwait add mov dec dec aam sbb jl out ret (bad) cld pop jecxz out cmc dec outsb subl sti gs (bad) (bad) mov jnp mov pop mov and dec mov loopne inc les gs fisttpll std pop iret aaa sbb sbb xchg and out sbbb (bad) jo mov dec arpl jno mov movsl clc (bad) dec ret out add cmpsb rcll add pop std shld sbbl dec cs je loop mov dec mov loop (bad) sbb fs ljmp in rclb scas mov pop out or xor lods and (bad) sahf test xor int3 movsb inc out push push push hlt mov out cmp pushf add mov cmpsl pop loope or jae je es add imul iret jg outsb xor incl dec in dec out mov jmp lea pop mov pop (bad) cld add sahf iret dec sbb clc imul icebp ret hlt outsb test xchg out mov push and mov jl mov in out jmp cmovp dec (bad) lock pop aad out test std lea mov lahf mov sbb xor popf mulb fildll (bad) hlt add pop imul or pop lar stos sarb cmp dec or cmp push mov cmpsl pusha in pop pop loope mov fisttp dec sub lea js fwait cmp outsb add fist out ret popf push lcall les loop adc std in jmp out mov sub add mov in xlat and sbb aas mov push sub inc pop pop cwtl jbe ja adc insb or jp jnp ret data16 pop (bad) adc out mov push cltd in inc pop clc loop mov gs pop aas or adc inc iret fdivrl out inc cld fcmove insb inc sub cmp int3 jp ljmp stc xchg out and or push and mov mov movsl les push pop inc out pop (bad) mov mov out sub data16 icebp popa out and insl fmuls mull (bad) aas push ret mov lods add cmpsl sub and jb mov out jno xchg into cmp outsl jp mov push fcomp out add and mov push jl scas xor movsl shl out pushf cs cmc pusha adc xchg scas jmp rclb jne insb loope and sbb push ljmp movsb push pop jecxz ds push out push insb jmp cmc out mov or iret leave mov adc test aas and fisubrl pop add ljmp in out pop ja mov fs mov rolb jae addl adc repnz sbb xchg adc ret decb sub mov out frstor ja xchg jle xor pop outsl aas out sub pop ret mov jecxz adc xchg movsl pop add sub out mov mov clc mov inc outsw sub inc out pop inc mov and daa out (bad) add jmp scas dec sub sarb jle pop or test jmp add aam in icebp scas shll jns lcall sbb jmp add add pop out popf inc cmpsb adc xor jge cli shll add xchg ficoml daa insl in mov sarb sahf stc cld in cmp fist inc andb popl out out leave aad (bad) mov stos rorb lock and js dec inc loop mov jne push inc mov or out mov pop stos xchg cwtl lds in (bad) adc out mov std xor fcmovnbe movsb push adc pop shrb adc test xor test cmp push push inc xchg out sarl stos iret sbb lods sub mov test jo call add call (bad) jp,pn push in out js inc mov out stos imul jnp adc mov cmp cltd out mov jbe test into mov jmp pop aad std inc dec loop lret pop out in and out and sbb ljmp shrb bound inc lea in cmc jmp ret cs data16 rclb push shlb pop stos (bad) std jg ret lock mov cmp sbb loopne jne out scas fwait cmp pop (bad) scas ljmp inc test mov jl mov push dec cs push cmp cmc or or mov sub test out inc or int3 out mov jl or jg fisub scas (bad) imul xor out jge sbb ss testl mov in out jg stc xchg adc outsl cmp pop pop and imul xchg cmpsb std idiv jbe lret hlt and cmc out iret sub imul (bad) pop out insl mov cld pop inc adc pop lds (bad) jg lods push pop fild adc cmp mov int ss mov pop jae xchg mov adc sar push fwait insb das ja (bad) sbb out lret xchg push insl scas and out add or (bad) push dec sbb outsl push ldmxcsr addr16 jo mov loope xor inc sub fistpll in dec lds mov leave mov xor jl dec into sbb and mov pop movsl hlt stos out sub add aaa add mov out xlat sbb sbb loop out ljmp sbb adc fwait out and add push adc fnstenv es add xor pop ss das lds out jb out test inc std mov mov dec push and lcall in pop subl inc fs es or out jb cmp out cmc pop dec pop add push or xor dec jecxz cmpsb or xchg out test arpl out cwtl adc xor xor inc pop or mov push mov out sbb ds jmp out push push xchg mov mov jle frstor mov (bad) sahf jo stc and xchg out push das popf getsec adc rcr (bad) mull std xchg push adc lret out add sti test loop test incl jp push and out je sbb pushf mov stos lret repz decl cs pop scas and dec icebp mov fiaddl mov sub ljmp out sahf (bad) jbe mov and ljmp insl imul push jne aad test adc mov out shrb out add jg xor jns insl outsb out add xor sub jbe cmp in pop sub mov (bad) pop ljmp in je cmc js fs xchg out xchg sysret (bad) lahf aaa int and out imul push les pusha push out and loope js imul pop rclb ljmp xchg cmpsl call inc out inc jae mov push pcmpgtd (bad) or cmp loop add iret jns les lock dec xchg cltd out shll cmp lcall mov enter xor fcoms je (bad) cmp imull mov das sub xor adcb and push mov out adc (bad) xorl std push dec pop cmp (bad) popa pop insl pop jb or call inc out frstor xlat sbb mov jmp jae in sub xchg movsb inc jnp icebp sti insl adc add repz jb out in sub cmpsb and pop mov add adc enter xor in popa in pop pop out xchg mov mov fdivr pop xchg stos cmpsl popf inc out imul or sbb pop out enter (bad) (bad) cmp and fs push jb test stos cmp push dec mov add xchg sbb adc iret cld xor dec in loopne push (bad) out lret mov out fidivrl sub fdivp mov lea adc sub out lcall aaa out mov nop lods inc rorl mov loop ss jmp pop out movswl out out adc dec out mov dec push (bad) clc adc leave out aas inc adc sbb cwtl jmp fst pop daa or or inc mov or cli je pop out push xchg pop das cld stos adc add jo jbe out sarb cmp leave orb mov ds add out inc pushf jb sbb out inc pop mul shll xor ret mov xchg out and (bad) jno mov pop out and adc mov cmp sub out clc pop push sar test int inc inc push data16 mov push pop ror aad fstpt nop sarb xor xchg inc into out aad inc add sbb ds pop jmp mov inc adcl jg clc push or cmp adc xchg xlat xchg jo out or xor subl mov ljmp out xchg test (bad) je sete cwtl mov cs jbe add lret mov jmp scas mov movsl jnp lods dec (bad) pop frstor (bad) repz out pushf das sub out imul pusha in cmp (bad) out sub insl add movsb or add ljmp inc test add loopne add out xchg aas sbb movsl xor jnp xchg sub pop fldlg2 cwtl xchg clc (bad) out pop jno scas inc pop add out push pop mov out mov inc rcrl pusha mov cmp stc jmp adc inc lods (bad) jno outsl fisubr ds (bad) mov mov cmpsl mov lea inc mov or pop adc out push ljmp adc ja pop jl cli fsts aam out gs dec xchg mov jge out es jae cli mov and dec mov push adc sbb addr16 out mov fwait in inc mov push xchg jp fdivrl mov (bad) xlat mov pop aas dec iret stos xchg pop out cmp data16 rcll xchg cmp cmc mov jecxz jle dec (bad) out out std mov dec mov jne bound fsubl bound iret cld mov sub aam out lret ucomiss cmp jb sub mov nop incb push push sahf jmp xchg sbb xchg sub cmp ret imul in mov ret mov ret push jp sub out cmp push test and daa lret mov push xor mov jp sub rcl leave sbb mov lods ficomp out daa xor push xchg imul push ds outsb mov xchg pusha cmp pop jnp (bad) pop cmp jae mov jne mov jnp push xchg mov add movsb (bad) cld enter out xchg out mov cltd pop (bad) mov push jns mov setbe roll add into mov out inc jne shl daa xor or dec jo inc sbb jecxz xor out mov jg sub iret mov push sbb ljmpw (bad) out fmull testb pop or sbb cmp addr16 sbb cmpsl out jb rol or cli out pop je xor xchg orl in aas popa out push imulb popf repnz mov sbb pop repz push outsb inc out push enter int dec in sub xor inc repnz (bad) je jb in mov out cmp jo loop adc out sbb fcoms out mov cmpsl insl xor hlt clc out iret xor cli sbb cmpb decl out hlt xchg mov mov clc xor jge out insb inc cs and mov inc fstp out sub out cmp loope test mov adc lock out cmp sub cmc mov or imul lods subl cmpb cmp xor (bad) dec jbe cmp (bad) fadd cmp cmc fneni(8087 popa ljmp pop js notb push out lea jo mov out add sti out mov out loope,pt xchg jb push call cli movups icebp sub cld pop pop (bad) jnp xchg popfw out sub clts orl mov lahf iret out loop add mov gs insb or adc lcall into jns fistl addr16 scas pop popf hlt icebp or out jle push fbstp push stos mov test adc popa in mov cmp ret push aaa in mov pusha ss out (bad) stc cmp inc outsl shrb repnz mov lret outsb jo push cmp mov mov dec hlt dec fdivs js rolb ret out push sbb dec loopne addr16 or or push (bad) std push add xor dec mov dec lea ret fsubs ss das out inc mov ficomp pop ret int enter xor jg pop and or aad arpl out popa or pushf lahf pop mov fcmove cld adc rorb pop movsb or add test xor sbb fimul movb push lock nop out es mov mov xchg add out mov je shlb (bad) out cltd cmc dec dec iret sbb loop cmp popf sub imul xchg scas out dec test push push xor out pop pusha sbb sub fstpl (bad) cli adc (bad) fcompl in inc imul push adc jg aas inc jno outsb dec mov out nop mov out inc pop dec push andl sbb cmp pushf out cli xchg clc adc xchg ret iret inc add imul sarl popf (bad) bnd fmull out aaa jo dec out jle ds lret push out out hlt (bad) ljmp mov ret add inc outsl ror enter xchg fs lret aas (bad) movsb dec imul clc ret dec loop stos lock xchg imul aaa clc mov mov pop mov into dec push out movsb (bad) jl,pt mov aam pop inc mov jae dec leave pop ret inc int popa sub stos (bad) out cmp gs pop and xrelease pop mov dec outsl imul aad add sti rolb adc xchg aaa movsb push ret (bad) lods imul xchg xchg subl cwtl out dec rorb leave xor mov nop out in jnp gs es aas mov je loop js pop sar mov or cmp mov mov insb cmp out pop fxam icebp push jmp mov out out cmc js popa cmp stc push inc andb fnsetpm(287 scas or dec dec pop dec mov mov nop mov mov loop ss arpl je mov adcb sbb sbb loopne stos and cltd mov jl pushf dec out or pop xor adc jnp fstps lret addr16 jp (bad) cmp and ret out mov xchg mov mov mov adc ret adc out xorl leave pop in movsb add clc jne cmp pop and ds add test in out stos sbb cmp sti pop out adc push clc (bad) mov sub in xchg adc lods add out and (bad) cmp nop sub out in lods or aam jb aas pop mov in aaa cmp pop and leave (bad) aam pop popa arpl movsb add flds mov jo dec xchg pop pop faddl xchg out test bound cmp outsb jne inc aas loopne in aam (bad) cmp shr mov outsl pop (bad) out mov fwait (bad) out dec pop cmpsl pop es pop out int3 jnp adc jb out out sahf add aaa pop out ss imul iret mov nop xchg in shl jnp out xchg faddl jae inc out test insl cmc pop std dec dec mov in pop (bad) out dec rol mov adc cli out aaa incb jg stc test movsl call scas lods xor out (bad) fxch jecxz jl dec mov out push fnsave inc sub add cmp aam js adc out adc out add enter push daa out and mov mov mov mov push pop test xor or or in jno jecxz or fistl cwtl sbb and push iret jne in mov inc fistpll dec std mov add addr16 mov notb cld jl sub dec or inc sarl fs icebp jnp cmp and adc cmpsl into enter call nop sbb in pop (bad) push xchg out dec xchg pop mov push xchg mov call adc jecxz shrb xor cmp add mov pop fwait arpl lods mov movsb (bad) jecxz sti mov jg adc iret xchg adc outsl sub and jl int mov jg sti push jo (bad) lret push sbb iret push lret jge loope sub pop decb dec or adc mov inc out enter out test push and in mov scas mov jmp xor scas inc adc push xor or call aas xchg shld out mov rorl shl inc in imul (bad) out lods xchg dec xlat aaa mov movsb es clc daa in (bad) out dec enter aas arpl xchg pop xor dec sub dec bound xchg mov mov out sbb push ds add xor ret int leave sar jns out inc push and add aad push inc mov push sub pop fild cmp fs out adc pop in clc cmp out cmp popf insl xor dec jecxz (bad) mov lds outsb popf out dec addr16 cs sub adc lock in test out inc cmc xchg loop testb and mov inc sbb adc es popf sahf gs fdivl inc xchg ss and pop inc bound xor sbb in outsl loopne ret cmp jbe add pop imul (bad) pop in and mov mov mov nop aaa sbb das xlat out jns lea movsl lcall xchg lock fnop sub out and pop (bad) incb in insb mov loope (bad) xchg jno fistp repz out int3 out lock xor adc out pop mov shrb aad (bad) push lods in cmp or test xchg cwtl push pop scas movsb out iret pop inc lcall shr aam mov or pusha lea enter mov push cmc out push lret or out fs mov mov xchg jae push das add mov adc loopne inc sbb jno jle sub push flds dec adc out sahf aaa decl (bad) int3 (bad) in and in out mov inc mov outsl mov mov cmpsl in jns dec out push stc sbb mov pop insb test cmpsl repnz adc lods fucomp std int xor and das add aam mov jmp mov jecxz subl aas cmpsb xchg out lods lahf push mov out or adc pop out (bad) cmp jno jl addr16 and cld pop mov mov push scas mov loopne mov pop mov into or xchg xor inc (bad) out imul pop pop jecxz test mov iret and aaa mov out fcoml lret and icebp sub jb xor xchg shr ljmp cmc fwait lret push sub out dec jbe mov aas cli sahf imul (bad) icebp add adc js lcall xor mov icebp jb cs out popf mov xchg pop in (bad) (bad) data16 mov outsl adc leave out sbb fsubrp xchg out subb int3 add adc sahf lea inc les adc out int adc loop out dec mov pop push inc xlat in pop fs mov call push clc fstps andl pop insb js test mov mov cmpsl sub cli mov pop pop je leavew sbb in cltd add xor out jp ret push add inc mov mov mov dec pop cmp das out in lods bound mov imul inc pop out adc lret xchg outsl out xchg (bad) rorl sbb add sub and push dec add enter flds sub out (bad) das mov adc add jg lahf and mov mov pushf xor xlat cltd add pop out mov outsb sbbl mov cmp sarl (bad) pushf ljmp mov out jne pop mov shr inc fs sbb mov adc pop out aam out or out popa jmp cwtl aaa sarb fbstp js pop mov xchg leave pop ljmp into cwtl out bound xchg push out addl push jno cmp pop mov cmc loop pop test insb sbb out movsb sbb scas mov inc cmpsl add sarl sbb add (bad) sub (bad) or ret inc ljmp lods out jmp adc icebp ljmp clc push ffree and cmp in out negb fdivs insl aaa out push mov out clc in out push sarb mov push dec pop out dec sbb int3 out xchg inc jl stos cmp pop jno xchg pop sub lods push jne fildl iret sbb add adc xchg cli fs cmp push mov pop rorb out aaa aas pop test jecxz lock iret pop xor loope cmp push lock out rcll mov add fiadd push mov lret out mov sbb add jae and push inc out adc aam (bad) mov out lcall shr dec mov daa aas fldenv std xchg cli inc lret push dec iret adc jmp inc nop sbbl addb fistpll mov ds scas push stc leave rcr jae sub xor jne inc pop pushf out xchg inc (bad) dec mov pop lret repz test cs adc jg lret sbb sarb sub or pop inc out adc pop mov ss out push mov mov (bad) rol out pop xchg lret pop xchg xlat (bad) fstps dec out movsl int3 mov repnz test xor mov push or mov std pop cmp cmp jae adc mov scas jecxz scas jp (bad) out out dec cltd (bad) icebp stc cs and push lea pop add (bad) xor (bad) in out cmp fdivl shr (bad) fcmovu fadds (bad) out push mov xchg lods out jns push test ljmp adcl mov out inc mov and adc repnz add (bad) (bad) sub xor xchg repnz pop iret in aad jle cmc movsb out shrl sub cmp out xor (bad) or out add dec jg pop pusha or fs js add sbb out popf (bad) push je cmp sti mov in or out iret xor (bad) mov out sub sbb iret rcl bound pushf enter xchg xchg sub mov sti cltd adc mov add mov mov out sarb dec pop bswap push je pop sbb pushf mov sub loopne sub jecxz (bad) mov cltd loopne cmp add push or mov jns mov cwtl pusha js mov lds jmp inc (bad) push push scas das xchg mov (bad) mov shrb cld in push sub mov das bound push sbb test jb das lods sub push (bad) mov iret imull xlat sub push bound adc iret adcl in mov popa push xor push xchg insl xor jge mov fcompl jae out xchg and lcall outsb ja and pop xchg pop arpl mov pop test pop or xchg in xchg cmp jnp rcll out pop jno push into mov cmpsl bound test in mov in sbb aad xadd loop jbe out lcall push cmpsb int sbb add movsl pop flds mov test xor xor cmc jg jne or rcrl xchg out fnstcw xorb imul in lahf ljmp adcb and scas xchg cmpsl out mov lea jnp rcrb out pop ret or arpl out popf pop jb push ficom scas hlt lock js push pop mov dec (bad) lea stos add adc mov out push pop pop test mov lret mov scas lock mov out dec rorl jl nop int3 out mov rcrb pop hlt jno iret punpcklwd push or pop mov in sbb insb inc add pop movsb dec into cmp cmc cli sarl lret jae out dec imul xlat dec sub out adc pop test xor jnp fwait out cmp lahf jbe out or rcll jno cmpsb cli shlb mov inc test (bad) out shlb dec adc or int3 loop xor jle aaa ljmp out in fdivs pop repnz into (bad) mov out (bad) adc cld imul test lahf mov fisttp repz pop cmp fldl2e pusha in stos adc pop jecxz push mov sbb loop jecxz inc insl jecxz sbb imul out jne dec inc push push stc pop sub sbb aaa push mov inc enter mov dec mov mov pushl int adc call pop pop aas in adc cmc stc jne mov inc fmuls insb sub jae inc mov dec out shll das shr out sbb lods cmovo and and fimull and bound popa mov mov sbb int3 adc addr16 mov insl dec jl mov mov out pop xor cmp jge (bad) or adc fsubrp sahf mov ss stos outsl mov pop ljmp out xor cmc jb jno sbb idiv mov decb mov out loopne sahf lahf xchg movsb das sub out (bad) cld outsl push mov (bad) or cwtl out lahf aam sbb loopne and push cli movl xchg test jle out lods xchg out sbb ds push repnz and out das sahf dec xchg call or cmp sub out aaa pop je adc cmc mov xchg sahf inc xor push out loopne and inc out lcall stos fild mov (bad) xchg imul mov aas hlt insl adc adc stos idivl ss ja push pop in sbb popa repnz loop insb pop (bad) ljmp or xchg icebp dec popf pop mov jmp in sub dec fcomps adc in test cmc cmpsl out imul mov mov (bad) or mov mov ja fs add pop dec sbb lods jmp xlat cli or stc push nop mov cmp and mov out imul add cmp icebp xlat dec xor jne xchg in and jae pop push out xor and sub xor shll arpl xchg adc sarl push inc pop cli fldt rclb push insl ljmp lret lea (bad) cs push lods aam push arpl mov stc cwtl xor sbb xlat mov inc mov cld mov mov adc adc out sbb mov fwait scas rorl xor or mov push dec ret (bad) arpl jl insb xor addr16 xchg cli ljmp push cmc sub pop and sbb ljmp test scas cmc sub or xlat sbbb aad imul testb jnp iret mov test mov sbb ja jne out pushf jle mov nop or repz sub pop (bad) mov hlt pop call sbb mov fdivrp adc jns mov mov jl xchg insl cmpl xchg sti pop int cmp loop add mov fcompl lods mov arpl xorl mov loopne popa inc pop shrb pop jmp pushf cs push cli mov cs jecxz (bad) out pop loopne cmc pop pop call push iret je pop pop rcl call cmp dec stos test pop mov (bad) out push cmp shlb cmpsl imul inc xchg rorb out mov cmp out dec jne xor pop gs jmp imul sub pop cmp imul loopne dec xor lock cwtl or out icebp lret das sub cli out imul ds out aad clc push adc int out pushf je in mov hlt mov sub and xchg in in pop popf jecxz xchg inc hlt out jg sbb jecxz lock jae (bad) test aad movlps aam xor cmp inc push and push movsb or repz sbb cmpsl jns sub ret cmpl pop fcom adc or add gs clc decb insl icebp jg adcb out or push jb inc out (bad) push sub out xchg sbb pusha (bad) xor cmpsb vpmaxsw ret (bad) sub int3 cltd (bad) xchg cmp out push xorl stos and add add test or or (bad) sbb jb pop bound leave mov incb and bound pop jno jne fimul out hlt jb rolb push xor pop pusha insl adc pop or ret in inc xchg and jg mov mov out pop xlat (bad) or jns jne js xchg sbb cmc bound lcall pusha lcall add xor xchg lods push lret xor add insl (bad) fistpl out jns or sbb sbb push ss (bad) jbe out xchg iret sahf test mov push (bad) mov xor (bad) sbb push jle out mov sahf outsl aam add gs pop in sub jmp jne pop pop push sbb push pop xchg xchg ljmp dec out fistpll ds adc ss jp fs fsubrl divl sahf sbb out mov jg adc cmc out cmp mov push inc test in inc pop roll jno pop imul xor shrb outsb pop cmovp mov cmp icebp mov push pop gs sahf out inc add mov adc or dec rclb mov out insb inc adc mov sub iret imul icebp insb insb pop (bad) out or lret cltd xchg ss call cs pop insb xor ljmp mov lods mov pop push lods mov in (bad) nop (bad) push sbb push mov pop pop loop enter cli sub pop and shl lods in out xchg insl mov out cltd sbb insb stos sarb (bad) test add cmpsl mov add pop in jecxz mov pop js ljmp out push (bad) push push or sub out push and out fbld and in in loopne push inc (bad) ss dec ret das and and xor xchg lods out jecxz (bad) mov pop insb loopw cmp rsqrtps leave out lret pop out pop jg cmp (bad) xchg push lret leave sbb adc xchg out sub or lods and fsin (bad) push adc imul into (bad) push push fsubrp nop jbe mov cs sbb mov or mov cld mov fisttpl add inc jno out jmp cmp inc loope dec aam (bad) je dec imul sti sub pop jmp clc dec pop cs mov xchg lds movsb (bad) ljmp (bad) arpl out lods push (bad) sbb int inc sub leave ret or shlb and jns jne loopne push (bad) ss dec cmpsl jg mov (bad) jb (bad) sub pop inc fisub out adc outsb je adc mov jmp out sbb orl dec in xchg (bad) shrb aas loop shlb sub jmp jnp (bad) xor daa (bad) daa clc cmp inc les xor add lcall push jb out out cmp and mov repz (bad) lods test jg in add es lea or out stc and mov out mov dec sar or add (bad) ljmp in lcall and lds out push or cmp sbb out mov mov arpl movl mov push out dec mov inc pop jne xor sahf push (bad) push jmp loope and call adc fwait enter out inc ret jbe cmp jmp in dec mov mov mov and fs mov add mov jge sub mov movsb jl pop pop or (bad) pop mov jmp cs mov in xchg adc dec (bad) mov (bad) pop movsb inc cwtl mov (bad) pcmpgtd sbb or iret out test ja je push mov enter inc cltd das js jl mul movsb add test test scas pop push dec sbb mulb and ss aas es jae pop jbe out adc pop sub or push das out add mov js jg (bad) dec jne in and adc je and js or jmp gs xlat sub (bad) (bad) out pop push mov cltd rcr ljmp out mov xor add stc std sub or cmp aas or (bad) mov push ret fildll xor sbb out (bad) mov out test inc xchg fisubl pusha ds sarb sub test imul ds adc ljmp loopne or jb fwait (bad) sub mov mulb mov cmc scas mov dec in test movsl mov (bad) in xchg out sub add inc cltd stc or popa mov pop out fisubrl inc inc mov jg add push xchg lahf out scas cmp inc cld sub add xchg mov addr16 ss mov inc dec push mov bound inc or out inc cmpsl xlat shrl xchg add jbe cmpb pop mov jnp jmp out ljmp push (bad) ss and out push hlt addl out popa jne jl mov pop inc nopl cmpsb jb xchg fisubrl mov pop xor fwait (bad) sbb mov (bad) out or jg cwtl aam adc repz lods mov enter test popf out push sti mov (bad) mov xchg mov pop sub add mov aas pusha pop lods adc pop lods (bad) and push dec or mov pop pop or pop test or enter push push pop push add aas push ret bnd cli or sub sarb add cmp lock outsl aaa xlat mov push jecxz or fidiv fcomip sub (bad) ljmp std jns pop je sbb out jmp and iret push cmp mov push clc ret inc mov popa out add loope mov xor out popf xchg adc jl sbb out and mov (bad) imul add jle jp sbb jbe jmp xchg jnp pop push or pop popa fsts movsl xor push loop cmc das (bad) enter je inc sbb frstor jge jbe xchg out xor add lods iret jne das sbb or pop movsl cs push out into push loopne jecxz jae out add adc xorb gs (bad) mov mov pop add out push jmp jne inc out cbtw push or fs rol lea shr cltd pop push push adc or adc insl out iret bound mov inc cmpsl (bad) js xchg mov int3 inc xchg std jmp inc xor lock fidivrl add sub popf jb ljmp test out pop fstpl xchg pop sbb les arpl enter jmp push add push inc stc daa lds mov les fdivl imul inc xchg pop jno cmp fsubr mov dec test ds pop loop aad dec sbb pop into xor lea out xchg lret outsb jnp pop loopne (bad) cmp pop mov jno pop out mov push in pop arpl insl std and out cmp xchg xchg add pop out ret pop fucom inc dec out jae xchg insl mov fsubl ret call sbb xchg jmp test mov xchg out mov dec out ljmp (bad) out push mov addr16 mov out push push and out mov cmp lcall loope adc jne (bad) jb add and sbbl sub in out nop or mov and out jno dec bound adc push jl xchg (bad) mov test inc mov mov push out push or out dec jecxz xchg or ret ficoml cltd push pop jno (bad) int pop out add push mov (bad) mov test pop mov push push shr test lret inc (bad) mov dec out xor mov out pushf rolb cs pop xlat inc popf xchg out push fsts and fmull outsl and and sarl out out in fldln2 add int3 xchg arpl xchg outsb sbb ret push out js dec jae push mov pushf jl jecxz jno test push xchg lahf pop int3 mov ljmp psubusw (bad) push clc or stc and aad (bad) xor xchg imul lahf adc jns mov fsubr sub in jb pop jge lods sub insb and lahf inc iret (bad) outsb aaa and ljmp inc adc pop leave mov pop inc jne aam mov ss out lcall cmpsl pop in out inc movsb or push add out jecxz jno add aas jmp hlt out cmpsb mov into xchg or imul xlat sub arpl out jae or loopne mov push jo out mov icebp ret mov out ljmp data16 adc mov mov lahf int3 call xchg jmp pusha jb dec das jnp fs in xor mov jmp out or call dec movzbl out sub push divb (bad) mov setl (bad) popf jmp xor mov push mov out ss jb cltd nop xchg out adc ret jae pop andb mov xchg (bad) (bad) add out push cld (bad) add bt pop (bad) mov sub mov out cmpsb sahf int mov iret xor jno es add sbb jmp mov lods in aas js orl cmpsb insb dec insl fldt lods pop jb push mov or out popw aad inc cmp out arpl dec sub sbb mov int (bad) out jle adc std out gs fidivr adc call (bad) out ret push sub out xchg stc aas fdivl jns out push mov in and iret pushf es ljmp jg jno push adc dec lods cmp out inc pmuludq push and imul out mov mov (bad) pop add cmp jbe shrl pop jp out jl cmpb ss out pop fadds jae fs scas rcl mov jl mov and rcl inc cmpsl out mov repz add test xchg add jp out dec pop pop pusha and ret sbb push fdivrs lahf (bad) (bad) into ljmp pop mov fdiv shr aas mov lahf xor decb mov clc int loop xchg dec shr scas inc popf adc (bad) adc mov mov aaa in (bad) lock cmp sahf jbe lcall or (bad) sbbb je xor out dec xchg push shrl cmp pushf push cmp cmp mov notl out rorb mov mov mov jecxz lods jnp mov pushf lds mov (bad) xchg mul inc xchg adc cpuid push xchg xchg rcll jb xor mov adc repnz xchg repz cmpl xor dec cmp out sub mov and or das cli lahf rclb lods push mov (bad) xchg pop out (bad) and xchg pop hlt adc sbb lock ret xchg decb mov in (bad) cmc out inc xchg (bad) stos out (bad) pop (bad) ja pop out cmp bound dec (bad) cmp out fisubl push pop fildl lret data16 lahf lock out add dec push xor sbb cmp dec enter inc out daa or jmp or fst mov pop call loop js popa out cmp mov cwtl out pop out cmp push roll sbb ret negb test scas lret mov inc sbb std jae in jp lods lods mov xchg repnz push out jmp sbb out leave push xor sbb fs in mov rclb out fwait cmc sub test repnz dec sub jge in lret and stos xor out insb sbb mov out jno faddl inc add mov jg test out (bad) sbb outsl mov cmp cmp xor add and xor scas sbb mov push push sub push out lret pop jae repz inc (bad) mov cltd jecxz iret int jge out sbb imul lea sbb out pop mov xchg out or adc sbb sub mov lret jae pop fist lcall cmp xchg rolb or jge repnz sbb enter xchg insl lock sub ror adc outsl in (bad) mov imul fwait xchg pop inc sbb imul out pop jl add push dec cmp loope out lea add out lods dec add xchg mov in inc ja mov outsb (bad) adc push dec in aas sti data16 sub imul or fidivl and jl push pop or in or push mov outsb pop aaa mul jmp loope fs nop and popa dec jb mov sub or daa inc leave imul sti loop out popa out fnop xor cld rcpps xlat fldenv mov scas (bad) out scas stc push cltd pop xchg mov lock jmp push stos bsr sub fcmovnu in pushf xchg push rcrb aas out dec mov in mov mov mov sahf xchg insb sub out (bad) out mov and add repnz mov inc icebp sub xchg adc xchg mov out adc decb mov and out dec inc xchg lret xchg mov sbb push out sub xor lods out cld mov (bad) fwait adc sub add dec push inc lcall movsb mov (bad) jns out jle pop sub inc icebp outsl out das mov pop pop (bad) jbe push push sarl jecxz push xchg xchg sahf (bad) out inc dec adcl int inc aam addb mov das test adc or mov dec scas out sub call mov out or insb sub add out jae jmp or out xor push push stos leave enter out push mov push xor jae push (bad) out cli add xor inc cmp push sbb mov sti dec out jne add mov xchg insb out jmp scas div xor mov ret out mov and cs (bad) jge fsubr lods and pop ds (bad) out or (bad) xor inc jecxz rcll dec mov mov call in scas sub arpl out cmc imul sbb xchg rorl adc xor cmp and inc mov sti fisubl pop out clc xchg fadd mov or push and cs rcrl sub and xchg add rolb adc dec cmpsb cmp push bound mov sti cld and (bad) testb scas shrb int3 adc out in rcrl add mov or add es inc jp or lret loop std les loope pop inc mov movsl pushf xchg xchg pavgb in out xor scas sub out inc add clc mov (bad) ret shrb xor outsl rorb pop jne push sbb fidivrl jae push test xor mov insb inc or lods mov iret jl and lcall mov rolb adc inc mov cwtl pop icebp cltd aad or dec daa in jns dec adc adc sub fstpl add xor test or out push dec rcr mov lret adc mov (bad) cmp clc out loop fstl mov out mov in inc mov jp ja out cli dec popa gs sarb mov pop mov add data16 sbb out mov add add orl lahf sub rcr fcmovnbe ds in and adc out lcall sahf (bad) sbb cmp fcomps aas push sub jno push sti in mov fisubrl pop mov out inc stos sbb pop in aaa cld push rcl call mov loop iret scas cmpsb shrb jbe xchg insb or out lods movl (bad) imul aas add mov (bad) outsb rcrl std fsubrp pop add insl mov scas inc daa push loopne clc into push push jne mov ja cmpsb jle lds pop mov pop xor adc xchg sub es cmp sub cmp pop mov (bad) mov js jle es jo out leave or insl jne test sub mov lret loope mov mov das fmuls movsb popl xchg pop loop testl int cmpsb call lds jmp and xchg cmpsl adc inc inc cmp (bad) add outsb ds adc bound jnp movsb int push jle and out xor pop and dec (bad) inc iret mov push out (bad) sbb je out xchg lret pop loop in pusha out xor sbb or daa mov aam cs aaa out popf adc cmp js je jg pop ret jle popf or pop aas out mov cmc push cmp jp test out xor js sub sub negl repz push jg mov lods cld loope rcll shrb jl xchg out rcr test js lods fildl push lock out lret mov mov pushf mov pop out lret jae call jbe out dec push adc adc icebp dec setnp xchg mov pop mov dec out lahf mov aaa and pop ficompl cmpsb out jle mov out out mov inc into xor (bad) int3 aaa jno sub inc repz push lods adc aaa or push fbstp mov jns cmpsl popa jbe inc lea xor dec pop cld and xchg mov mov setne aaa add ljmp cmp jns mov faddl out add cmc sub sbb xchg int xor out sti mov and aad ficompl out lods inc jo pusha out mov lcall push pop pop ficompl push mov push (bad) jne jp push test insl xchg push adc push xchg add push or mov data16 jmp imul fucomp jae (bad) icebp mov xchg adc loop pop (bad) out call sbb add (bad) jge ror add cmpsb inc out inc xchg xchg js jecxz jns pop out add sub negb push xchg ret aad cmp leave xlat shrl call stos loopne stos cmpsl out xchg mov aas out out inc xchg imul (bad) sub clc ljmp dec sahf outsb sbb xor out dec push fiadd out orb inc mov popa or and add loopne lea jae in ret or sub imul fistpl mov adcl std xor incl loope sbb loop mov mov out cmp ds inc loopne push pop das mov jb call out add imull out xor push adc mov jbe outsl in mov pop jb nop jl loope push (bad) push insl or and jp jmp out testl and sub dec test std (bad) adc out jp ret pop push sub jnp xor leave pop pop loop out and add jle ljmp mov lea out (bad) adc stc loope sub les push out insl or call dec loop pop inc std out movsb sub test addb mov lock ss push iret daa into out ret rcrl jmp test pop dec lock pop push mov shl xor insl cmp out pop loop sbb xor cltd stc xchg and xchg inc jb hlt mov lea push push (bad) fwait clc mov movsb flds lock xor push xchg mov jo out sbb out pop jmp das int3 clc or or call jmp adc fist push loopne out xor add jno out mov mov push fiadd clc or loope cmp or pop jbe mov mov test outsb xor xchg test adc adc adc out sbb cltd jl ss out std push dec mov int pop inc push jb cmpsb sbb out xor adc aam sub xchg out dec pop lods jecxz loopne sub xorl push mov sbb test lds sti jecxz mov (bad) bound out imul pushf fucomp insb addl (bad) pop es stc fs out jo xchg rorl pop inc je int3 (bad) fimull sbb imul test (bad) call mov into sbb xor mov cmpsl das out or ret add out mov xchg fsts xchg pop push push ret push ss ret out int fisttpl push push jne dec mov cld test xor push out dec hlt add jns ja incl jle lods decb mov rol les pop ss pushf jge fucomip addl mov in aaa adc and outsl xchg sub das inc add lock adc mul adc out test add rcl cmpsb ljmp xchg out lcall pop out and xor and movsb andb adc and (bad) or out int3 cmp notb mov fwait inc mov fistpll adc xlat mov push push cmp ljmp sub sub xor sub lods mov iret mov sbb out push inc (bad) fistpll or sahf jge jns cld out aaa pop pop movsl mov push jmp jno xchg lods inc clc inc neg in sahf pop outsb lcall sub ja in push lea adc fsubr nop and mov jno ljmp ds fwait loopne mov lods imul out bound mov outsl mov mov insl jle fdivrs je pop out repz inc push or es inc out adc cwtl test loop jb cmc adc out data16 adc fistpl and or addl insl add insb out push add and loopne cli xor pop push mov xchg pop enter fidivl insb push popf ss add add icebp pop fmuls test dec jo cltd cmp out and movsb cmp xchg jecxz out push outsl mov pop cmp mov in (bad) mov adc jno cmp cwtl out stc test enter pop lcall pop dec outsl iret mov mov pop cmpsl and jmp jne adc fsubl (bad) xor loopne mov out add lock dec lret push mov call fldt leave mov mov jge lahf push jle in mov add enter dec adc add bound out xchg mov out fwait lea out push movsl test imull out adc cli ja test and or xlat (bad) dec or jmp out into or cs (bad) adc popa fisttpl mov inc out sub adc out jmp sub rorb xlat push pop into xor (bad) fnstsw lock movsb movaps int3 out je sbb cmp imul add pop std fsubr fcmovb clc xor out cmp and ljmp out inc jbe jae push sarb jnp push pop stc jg jl inc icebp loope into jns sbb mov lods dec mov jbe out (bad) mov or cmpsb jbe cmp dec sbb inc mov insb out sarl out (bad) icebp add mov movsl out out xchg daa sub loop inc es in ja insb ds pop int pushf fcmovb loop jnp mov cmp inc pop ret pop call add xchg xchg out mov cwtl xorl push xchg out xor xchg rorl arpl pop int fdiv out push or fsubrs lcall test jl add loop xorl inc xchg fs into add sbb out pop mov dec (bad) out jns and jecxz cmovge out in inc fs leave sub out in cmc insb pushf scas or aaa test fist xlat jbe out dec lods insl adc fcmove lcall xchg push lds mov xchg out jne push loope pop (bad) iret ss mov in jecxz mov in ljmp out mov jl lret or lahf sbb icebp xchg adc mov pop lods push add stc fist ret icebp call (bad) out and xchg int and add popa aam lock fs movsb out add test das movb mov aas pop cmp rep and add mov cld cs out jb into js push daa maxps jae mov ret jge outsb in hlt out sub cwtl and incb lcall xor adc jge fcomps out in lds mov push data16 arpl call dec and bound (bad) cmc mov xchg adc fwait ret cld pop jmp push sbb pop cmp out push arpl add adc lods loope and adc out pushf clc jge das in jbe fidiv mov cmp push insb cmc jge pop pushf int xchg push out mov je out jbe mov jmp adc push dec popa int inc ret pop aas rcl xchg mov scas stos out push lods ljmp add out mov (bad) push or mov pmaxub movsb mov jo or xchg fild aam rorl ljmp or push cmc inc stc pusha decb fwait and (bad) push das push outsb cmpsb out and lret xchg mov lods xchg (bad) ljmp loope mov ljmp fsubs sub xchg push jl or incb mov lods scas sub lcall xchg push mov mov movsb loopne add (bad) pop or dec out gs mov test iret hlt pop push pop sbb insb mov scas out xchg and cmp mov (bad) jbe aad fs stos cmpsb or mov pop and sbb and sub sub jo mov mov outsb loopne (bad) mov pop popf mov imul jne rolb shrw lods enter jmp push out outsl jne add pop iret pop in popf out cld aas cmc test out ret sti pop inc jge mov jns dec mov lds ljmp loop lods shll out aaa popf mov lahf lret gs out mov mov leave mov jle mov dec lock data16 out repnz inc mov push add repz mov jg sub (bad) xor clc and fistpll repz jae pop aam enter imul out sbb mov (bad) rcl insl inc out stc js lret shlb jae out jae lods movb notl fcmovne imul out sbb dec fwait out inc enter fnsave push out or sub shr cmpsb inc pop inc xor aas inc add addr16 sub dec add stc sub data16 divb mov dec popa push aaa cmp pop imul mov fstl sbb fs out inc loope nop lcall mov out pushf mov out cltd fs and out mov leave inc mul insl sbb lret cmp cmp insb into out pop mov or scas push jae pop jo push jg dec push xor xlat push out rol push mov add push or repnz cmpsl or sbb jg ljmp ss lret pop jmp in test xchg mov adc fstpl loop lahf cli mov jecxz stc mov ret jb cltd add and aas sub mov pop xchg test popa inc xlat push bound or jl lds push xchg mov sub test push (bad) and movsl mov dec (bad) ja stc dec pop cmpsl mov std pop push adc hlt out aad pop mov outsl or (bad) xchg xor movsb jecxz jmp adc int3 out out or jbe leave jns xor lock dec xchg inc dec pop ret rorb test dec pop mov xchg arpl push stc sbb or inc adc add mov jnp mov loope shr pop test pop sbb out gs sub roll add imul aas sbb out add or sub lods out std insb xchg add adc add jnp mov out and movsb fwait loope push mulps ljmp mov xor mov test sahf out fsub out fbstp mov (bad) in fimull add je into lock lfs pop xchg in inc jp add pop jge adc sarb sub ljmp and adc notl cmc dec rol inc arpl jle je addr16 in stc xlat movsb sbb jmp and shr sbb adc sti sbb sub cs out fidivl mov out (bad) aam js sub mov fmulp gs popa bndstx out and or fsubl dec ljmp jb iret mov test mov mov nop inc jnp push aad std out xchg inc or pop fwait sti repnz loop pop dec test fisubrl jle decb push push das ss in mov rorb out cmp mov ja pop jcxz lahf inc je outsl pop xor das dec add mov addr16 mov insl ret out faddl lds pop pop adc xchg jle out rcrb adc out sbb sub out movsbl mov push dec out push xchg aaa movsb insl mov push cld cltd outsl push (bad) jb mov daa outsb fiadd in insl pop incb add (bad) lea cmp push iret push and adc jge xor inc out push repz sub out outsl and fs cmp sub inc mov cmp out movsb or aam jns or lea out dec (bad) sub popf jmp mov out outsl push inc into xor jns jae je,pt lea sahf imul jecxz jge out mov sub retw inc xchg push iret repz mov iret push in push shr sar enter rcrb fs lret out out inc stos mov adc sbb push push mov incb dec mov sbb aam out and jg (bad) testb jbe sbb and sub out jle adc (bad) lods repnz add add outsl inc loopne popa xchg add out jl inc pop pop mov outsb pop sub jno,pn das adc loop imul pop add scas into lods pop out mov sub mov lock cmc add (bad) aad cmp pop sbb ret pop push or imul icebp mov outsl or sbb call (bad) stos lahf int3 mov (bad) repnz fstps test jl in ds pop or or and out call popf out add mov repnz cmp or xchg dec ret out ja in daa rorl psrlw push fmuls in pop mov pop clc das test xchg jmp test (bad) aaa mov jbe out adc stc push dec lods jmp ja xlat mov dec pushf cmp jbe push outsb jo mov mov add (bad) cmp (bad) (bad) or dec rolb push mov out add negb mov out adc pop aas mov xchg loop push leave push push iret (bad) pop js loop imul or push fs mov fiadd lcall inc stc (bad) (bad) mov pop sub mov out inc aam mov lods cs jg decl xchg out (bad) inc push movsl das mov out iret mov fistp aaa loop and aad (bad) shrb add sub sbb (bad) (bad) push dec das in mov fdivrs fistp add imul adc ret xchg movsb mov mov jne clc adc sbb xchg and or jae pusha push sahf xchg lods in into adc fs inc (bad) mov cmp mov (bad) (bad) into xchg add shr or xchg jbe mull out mov push and out push dec or out rorl pop loopne ret cmp mov test sub out mov in jo mov (bad) std enter sub in lock and out out dec add mov aas push out push and je xor popf loopne enter and scas repnz or cmp (bad) jns push into dec inc jb out mov addr16 rolb subl jae sbb mov mov leave xor fadds stos stos enter jae hlt inc and loopne std arpl add pop mov xchg push imul cmp ss ret movsb mov pushf repz xchg loope les cmp sbb lret xchg call ss mov sub xchg pop out xor jnp fsts or inc daa shl add adc sub in rcrl das shl imul push jg and mov mov repz pmaxsw mov and out int3 fwait cmp lods lcall fnstcw push and loopne mov ljmp out sbb lret std clc dec xor out pop pop dec jle sbb out sub rclb orl adc and add mov rclb push xor ss mov push pusha push in jle inc scas test subb std out or test mov mov xlat sti jg and iret push mov dec ljmp jno push add push in pop fdivp daa imul out pop xchg xchg pop mov jnp jns insb decl or lcall lret add ljmp outsl out xor inc jo jge mov sub pop aas fwait xchg mov push jl fcom mov adc mov xchg xor in out push adc jae pop dec test pop out jo mov in adc jno inc cld popl sti cmp dec test in (bad) ss es and out (bad) rorl mov push push hlt or out push ror xchg mov xchg data16 movnti xchg jnp movsb in icebp mov ljmp loope sub sbb enter je push fsubr mov jg test test or xchg xor xor add icebp pop mov mov cltd adc decl sbb mov stos out out mov icebp rorl out ja pop nop add push out mov xchg (bad) dec pusha push aam jnp cld xchg pop fbld insl pop jp or sub out jmp rclb femms inc mov incb in cmp bound out xchg xor out and sbb out rcrb (bad) or clc (bad) push out jge mov fist jb out push ret xchg push shlb push test push in (bad) push int3 out push pushf imull int push adc inc lds ljmp in pop xchg aaa out mov pop sub pop out sbb dec jecxz iret icebp jb mov mov jmp push xor dec inc push adc vcvtdq2pd mov pop add push outsl cwtl loop pushf add or ja adc add add (bad) sarb xchg jnp mov jns rclb ja and int3 movsb loop xchg stos pop out dec push or out adc aaa addb push mov (bad) out cld xchg and xchg cmc (bad) out mov sbbl in call (bad) negl scas cs pop shlb out arpl jl push and push mov fs push out ja mov mov fidiv jb mov insl jmp xchg sub xchg out (bad) lret dec xchg in jno insb out cmpsl dec shll fsub sub out gs mov xor lds xchg out shrb les jne cmpl das add into xchg imul adc and lock lret push out icebp js cmp iret repz inc adcb out pusha pop adc push add mov sbb jb loope out cmp inc or push imul shrl dec out jb or out fucomp test mov sti add xlat cmp rcrl test mov jo enter mov sbb mov cmc gs (bad) out out mov std sub into test ljmp popf rcrb popa or jge enter lea bound scas rol sbb and push mov loope in fdivs xchg (bad) fildll arpl idivl mov jp mov xor mov or decl (bad) aam out jne cltd and cld or or addr16 in jge aaa sbb jmp dec pusha std dec mov mov les int sbb pusha in push stc pop add cmc mov inc xchg outsb in jno cmp xor pop shrl adc idivb icebp gs call xchg out insl lds sub xorl jmp xor cli mov add shlb in insb out adc push sti popf jg out roll es cltd pop mov (bad) arpl out (bad) pushf repnz out sub lods xchg jl add pop out jmp mov mov je shr mov ljmp out and cmp push adc cli cmp mov out stos js out mov out out jb in inc adc jmp mov and shr fcompl mov xchg jmp ss pop xorl mov or fsubr jmp out push adc sbb mov mov and and jno xchg loop ljmp or jecxz lock out mov test outsl pop dec out out mov xchg fcomps outsb mov out push test aas cwtl out jno xchg and stos (bad) fcomps sub das jbe jmp mov or jns psrlw adc stc in dec std jecxz mov push out push jae mov push pop dec decb repz in push inc shr push out adc mov imul out insl push mov leave ret cmp out xlat cli mov lock sbb int3 and or out add jae out mov std dec jle gs jmp bound jne out imul cltd into cmp stos cli in sub imul rorl jno test push dec cs xor jl xor xor mov and (bad) rorb and lret ret in xor jge pop pop into (bad) out adc or jo mov adc hlt loop in fcompl mov out jmp scas sbb lds psllq dec jae cmpsb gs iret out push js jns outsl push (bad) mov (bad) popa pop add scas sti pop insb dec push pop gs sbb jg jp js fild push fucomp (bad) jbe mov addr16 inc pop outsb inc push out sub (bad) clc out cmp fsubp aam cli xchg iret push mov fsubr mov adc aas cmpsl loope add ss (bad) cli adc mov ret shrb xor js pop fbstp mov jle dec popa push shr jnp add mov sarl out faddl out enter jb pop cli out call test ja xchg inc out lret cmc clc mov adc out jo (bad) out adc fcoml cli push inc add dec mov aam xor movsb iret outsl jg (bad) sbb fdivl jg or out jno push popa sbb out ret fmul push sarl mov cmp decb pop xchg sbb aas dec test cmp (bad) into adc repnz jo pop cmp jb adc call and (bad) xchg or lcall inc (bad) ljmp push out test push mov xor jbe out cs insb cmp pop out (bad) stc pushf mov fildl out sti cmp lahf lds cmp cltd mov in push push out aad int data16 sti js insl out and pop pusha out xchg jp stos int3 push or jbe pop sbb ljmp out dec pop rol mov out and dec xlat es out pushf ss popa mov xchg out mov scas stc sub out jmp je cmp mov das sbb mov jnp,pt mov out dec mov push jb push pop xchg cwtl pop mov mov out fcomip testb sbb add mov js rcl jne sbb pop iret in clc test in popf dec jle out jp repnz jns gs push sub ret cmovae mov insb mov sbb jg ret lahf outsb incl (bad) cmpsl arpl mov int and rcrb loope adc add xchg lcall iret insl dec out xchg cmpsl mov sbb inc nop out rolb mov dec iret dec sub fistl incb push insl loopne clc adc data16 and adc adcb pop cmp out setae jg mov aaa jbe movl bound push adc cmp out mov aaa into xchg mov pop cmp nop push popf pop jbe cmp push out mov (bad) push imul push testl sbbl clc out dec (bad) lahf out mov mov add xor and push imul pop int sub push out imul std sbb mov add xchg xchg or ds sbb aas xchg insl cmp and fdiv cmpsb add dec out push sub add push movsl out push lcall inc out xchg loope pop div dec test stc inc je into pop jbe lcall push out (bad) cmc sub unpcklps mov stc out sub pop ret ja jl clc insb rolb xchg add mov inc jmp pop fisubl stc ja ss sbbl out add adc dec sbb in ret out leave bnd call cmpsb adc out jbe jo adc xor icebp mov or pop adc and hlt ret and or scas aaa or push sub xlat fnstcw ljmp or mov gs pushf std mov push out (bad) xor inc add adc jns mov jo out cwtl mov leave pop add mov out mulb mov out data16 (bad) lock aaa addr16 out cmpsl sbb out cli popf mov pop push (bad) fcmovb adc add movsb pop lock lods aam lcall lret sub test lods mov test mov mov sbb xchg cmp out (bad) jae jp test jo or xor xchg push sub push out inc ds insl mov out adc mov mov movsl sbb aaa lcall or pop dec (bad) lods out mov push mov inc pop xor push dec mov fwait and mov add pop adc (bad) xchg loopne and out or mov mov in stc fs mov pop ja sub leave es mov lock xor sub adc rclb inc movsl ja sub aas pop jno nop lds mov push mov out fisubr out fwait cmp out pop pop nop pop ss lea mov test in mulb sub cmp mov test enter adc ja movsl mov out inc iret inc mov jae scas pop inc jg or pop xchg test stos cld out divb mov out dec inc push lret cwtl mov aas (bad) out lret jecxz jg mov and pop int sti daa loopne es out lcall jp icebp cmp push jecxz into sub add or ret jmp push sub pushf out sub xchg out xor mov stos cmpsl (bad) aas iret jbe mov out dec scas or ficompl push push bound or out fisubr dec paddb (bad) cmp add lods jle pop ljmp jmp lret mov in cli inc dec ja gs jno in imul fstpl out jp popf mov (bad) push push pop jmp sub shrl shr in cmp jecxz lods clc sub sbb mov (bad) cmp inc push divb loopne ljmp inc xor xchg pop and push repz out fidivr pop aad lret in push push jb in xchg iret mov scas xchg out fs daa (bad) pop and sub out in mov sub xor cltd popf jnp cmpsl out leave add int adc or push cmpsb out out cs mov out inc loop (bad) fdivl mov sub incb gs fs xchg inc add out dec add stc cmp cmp xor push pop out sbb orl mov pushl sub xchg mov out jno add mov std push out out dec dec cs (bad) shr xchg push enter adc out adc jmp fcmovnu das sti lods gs sbb jge out in mov cmp mov out or or outsl xor insb out push inc int3 repz test lea iret (bad) push jno loop call pusha mov test mov iret jnp and ds int out adc arpl push mov out test xor enter out popf ss repnz add stc cltd (bad) cs cmp out out (bad) cld jmp mov cmp mov fisubr sub out pop movsb daa jne add mov loop pop sub push cmp cltd mov in adc push test ds adc ljmp (bad) dec mov pop imul xchg adc push out sbb rcrb (bad) out sbb or ljmp ss jo or roll out movsb arpl lock xchg sub pop fbstp cwtl imul xor adc int out andl cld jbe mov int3 test mov lock out outsl inc test out xlat adc or mov ficoml popl mov out data16 (bad) in lock cmc test loope loopne (bad) jns pop bound xchg les cltd dec movsb repnz mov cmp popf lcall out fcmovb add sbb sub pop imulb imul mov (bad) (bad) subl sub jl cmpl mov mov arpl rcr or lcall (bad) mov (bad) out cmc jns cmpsb out dec das cmp sub clc and and es hlt inc pop inc int3 imul out sub lret cwtl push adc (bad) movb (bad) (bad) push mov test imul lret jecxz jbe pop ret out push or mov add mov inc call cmp icebp test aad mov push add xchg push arpl cs jl inc (bad) out mov aaa gs incb mov sub (bad) loopne insl (bad) out rcll cli pop (bad) sbb mov cmpsl out push test mov repnz clc imul push mov fnop cmp cmp sub xor mov mov jbe popf add push loop stc cmp int3 dec aad (bad) adc jo ds xchg pop xchg dec xor inc cltd mov push and push imul ss sub xor aad mov adc lods fistpl scas sub shrb out push xor movsb inc loop loopne lock sarb sub in out in hlt ficoml fsubrs jnp push adc jmp lods add repnz jmp cwtl scas jnp sub test fmulp lock ljmp lret clc mov shr inc push push fisubrl aam (bad) test loopne (bad) adc pop pop jmp mov loopne movsb movsl add ret xchg inc or and (bad) cmp insb arpl (bad) lock aad das xchg add push mov sub rcrl or rcrl lahf push popa imul rol mov pop out enter and mov xchg sbb add lahf cmpsl in das or ljmp and insb pop fdivl fs mov inc lock sub or sbb jle outsb fdivr out mov mov loop mov and (bad) es out imul ds dec mov fimul pop sub sbb or xor or pop adc mov and out pop push mov or iret xchg ja mov adc mov jg arpl out mov loopne movsl and mov rcrl push rep add out mov (bad) ss xchg mov nop mov dec pop arpl test into (bad) xchg xchg out test sub jns jl in mov (bad) mov sti jb push repnz mov inc xchg ljmp lahf dec jg mov xchg out adc out stos xor out enter jne mov and les push aas aam cltd mov das xor sub cld out (bad) lods sbb sahf push push nop mov xor pop mov (bad) je push punpckhdq out insl mov xlat xor push hlt xor out movsl dec test out mov inc mov jnp mov clc (bad) cmp cmp push mov pop dec out xor or out push mov jne das and (bad) outsb out out xchg sbb aad push movsb cli (bad) ja cmp outsb add cmp pop sub test ljmp pop int3 test inc sbb mov sbb icebp mov sti or in jnp popa out xor lea xor mov aam mov rclb sar cmp cmc xchg fstl lock jb (bad) mov out mov sbb out test repz (bad) stc out mov xchg rorb ror in xor cmp jb,pn (bad) call addr16 cmpsl test sbb cmc adc cmp push sbb psubd ljmp (bad) push sub sbb mov jle scas and and fild aam inc ljmp out sub mov es lret xor out fwait sub adcb out mov push out push mov pop sti ss pop xchg sbb and pop out add fsubrl lods popa aas pop int mov push sbbb add out jo inc push mov pop stc adc outsl sub mov pop lods sbb mov sbb pop out in inc or jecxz sbb or jbe orl out adc push sbb pop fimul dec push jnp popa inc jge out jle enter pop push imul loope push notb xor sbb add add dec cltd in pop xchg mov xchg lret punpckhdq out mov mov mov pop jmp mov jae pop in icebp pushf mov mov sbb fwait mov sbb xchg insl aas out cld decb dec inc xchg stos out clc icebp lods and outsl add or fucomp mov orl pop arpl mov xor js cwtl sbb push out or push add ja sbb mov aaa scas xchg aam mov mov inc mov movsb push mov je into cs dec (bad) pop xchg out pop loopne scas sub lods loop mov mov jecxz das mov sbbl hlt xchg loop test out out out sub repz pop mov push dec pop test icebp (bad) dec int3 sub xlat xor in lahf xchg add or xchg sub mov jno mov mov (bad) scas xor jbe jns xor pop ljmp jbe addr16 fs test dec push out arpl mov lea and out das test out pushf in push push mov repz fidivrl enter xchg movsl out mov rol lea or or in out mov je inc bts add aaa out dec lods gs pop icebp adc jge adc insl mov out leave (bad) xor xchg lahf cmpsb jbe (bad) fnstenv fwait lock cmp sub cmp sub loope pusha dec mov outsb or andl out gs adc and cs aam aas out mov stos jo adc loope movsl lea fnstsw pop (bad) jge xchg jecxz fsubr push or push enter sbb mov push pop adc push aam xchg xchg ds pop outsb rcrl sbb mov in ljmp js mov out xor sahf lods insl mull add mov pop aam aaa imul mov fiaddl insb (bad) pusha cmp cmp cmp pop xchg pop xor mov sub ljmp daa and or xor mov (bad) out inc push neg das dec rorb loop jnp inc dec xchg pop loop jl pop mov js push or inc ljmp (bad) mov daa addl fldenv xchg out dec mov xor and ljmp sbb push fbstp and or aad das mov mov iret (bad) push sarb fnop fwait mov pusha or ss imul (bad) adc mov test mov repz lret iret fidiv (bad) in jae push mov pop shll mov call sub jecxz inc lods dec xchg or test stc mov push mov pop pushf out inc aam push mov popf mov arpl or fs fldl (bad) mov jb std cmp popf cmp pop pop xor outsb je sub out lret stos jecxz adc loope pushf ljmp je jl in scas (bad) xor out cmpsl repnz gs lret imul inc adc push clc xchg int sti ret int3 out insb push test stos pop out enter aam jl pop xor jecxz mov cmp mov and jae addb pop outsl pushf sub cmp insb addr16 imul cmp push out pop fcmovnbe pop imul imul or test out pop packsswb out pop or int3 out lahf scas movsl mov sbb mov xchg cld sahf mov cli popa lea dec xchg out loopne (bad) and jp pop out outsb inc js,pt (bad) push mov loopne mov fst sahf xor stos imul pop add in push jl mov mov jp out adc sub out mov sub test adc mov sarb fincstp out sbb mov cmp loopne imul cli fimull cmc adc movsl hlt cmp fist push out mov imul push fsubp bound out sbb add add rcrl in ljmp mov inc pop dec inc push mov rol stos jge,pn out or jmp pop out ja mov incb out popa pop and (bad) mov push enter out xchg or test out ss sub out jno mov add imul jg out xchg (bad) and lahf fstp andl push jo dec jmp out les (bad) or sbb decb in fisub pop js dec sub incb inc divl scas jo pop (bad) mov out push call xchg adc hlt (bad) fildl (bad) out add in out pop test push add cmp loope negl inc jle sub call ds and jge hlt sbb jecxz adc dec pusha jle mov stc popf out add cwtl xchg and or push xor ja or mov and and movsb out cmp lea mov xlat scas adc out sahf loope jle pop mov out xor mov ljmp fucomp stos (bad) repz cmp iret aas push out pop sysret mov out push mov xor call dec xchg pusha mov lahf push stc sub insl test xor sbb pop sti out mov arpl ja in pop (bad) pop pop fistpll dec push jno cmpsb dec xor cmp mov add inc fdiv es shrb out push mov sbb ss xor push xchg mov dec pop insb (bad) cmp sbb xor out or imul rcrl inc cmp add pusha in pop cmc loop stc mov jp cmp adc dec (bad) leave call inc inc cmc rorl ret out sarb add (bad) in out loop push popf or xor movsl xchg inc stos mov mov cmc cmp mov xchg loop int3 and jmp dec lret mov inc push ljmp out js negb std repnz mov frstor xchg xchg pop scas (bad) js dec pop insl pushl sarb shl out int sbb pop iret xor fs pop jae es and (bad) cmp dec das cmp rorb jge testb out push and (bad) mov mov popa cmp xchg inc adc xchg or lcall jg lahf or (bad) je out cmp pop ret rcrb jecxz imul mov pop push pop mov push push mov (bad) out pop cmp ja lret or out cmp jmp lods (bad) mov pop dec jb es arpl or iret jne pop std in mov mov jb jno dec out push stos jp xor fistpll fdivl es insb cltd push lods ja lea int pop enter cmp jo and pop pop sbb into jle mov cmc mov movd bound out inc push pop (bad) jo scas loopne mov adc nop ficom add mov pop mov jmp call or dec divb mov mov loope adc and call iret hlt (bad) push pop inc pop fistp xchg and jmp mov movsb sbb ss jp pop ljmp or insl sar enter xchg pop lock adc sub push or mov jne cmp in pop or fnstsw inc lock (bad) bswap jae adc push pop cmp rcl ljmp cld push negl stos out jb repz mov mov pushf and mov out lret pop (bad) pop gs mov push xchg scas and dec push aas jno push out movsb mov cwtl inc out loope into cli rol adc pusha dec out sbb out and jno out push decb adc cmp jp gs or dec mov inc dec push orb xorl push in add aad jle pop movsl (bad) iret sbb push out inc out push out add cltd shlb shr repnz mov dec outsb push ja mov inc lcall mov dec cld push in lret movsb aam out repnz push fwait pop mov out pop daa dec (bad) leave mov mov fcoml xor lock out adc add dec std out loop ljmp das dec addr16 or outsb out mov lods ds negb xchg out or mov add dec dec out hlt adc mov add push mov rcrb xor out outsl enter jb loopne xchg (bad) in fistpl fisubl outsb adc insl push push out mov cmpsl pop out insb icebp sbb push fcompl out in lahf jl inc cmp fs imul mov cmp (bad) inc sbb ret lods (bad) (bad) (bad) push out push cmp aas inc dec data16 push ret (bad) out xchg jbe xor dec mov shr adc mov inc adc data16 imul dec sbb lds mov sbb idiv subl aas xchg pop out les mov ljmp sbb mov cmp out adc je repnz jae sub scas inc cmp sahf outsl lock (bad) dec insl xor mov int3 mov mov cmp call movsl or repz in loope lock and cmp adc cmpsl xchg ljmp nop cmp mov xchg pop sbb bndldx pop xchg sub push push out out clc imul cs mov insb pop in out jne icebp stos jo and enter loop mov lock in es addl aaa out clc call (bad) mov jl fwait jnp fsubr cmpsb out in mov (bad) shr nop (bad) loope,pn std stc pop cmp mov daa in sbb fnstenv mov imul das shr in and mov add lds pop arpl repz ljmp test xchg dec pop out jae sub (bad) loop push and enter push out es add jecxz cld pop out cwtl pop inc jbe dec mov mov jg rclb aad and sub add fnstcw push out enter int3 lea iret icebp (bad) xchg pop out jo pusha sbb mov out in into jmp rolb (bad) cltd das les icebp call leave out rcr xlat and orl out (bad) pop xchg mov gs out int jbe flds adc loope ror add jbe imul fsub daa mov out gs incb outsl push insb repz out xchg sbb push rclb scas in mov jb out cmp (bad) out pop loopne in xchg je pop loop decb ds out ja sub movaps aad out sbb xchg push pop add sbb push shll push and sbb (bad) sbb je imul xchg and movsl dec ljmp cltd fwait inc mov push out xor pop les jbe icebp out cmp cmp mov ss and out cld leave sub pop cmp pop shl mov in mov mov ljmp out mov out pushf xchg xor out fs cs mov push out pop jecxz mov xchg xor out cmp sbb jae std out cmp adc mov or jbe sbb inc aas lods pop jnp or loope les push cmp out ficompl popf jp cli out xor xor or out (bad) cld jmp rcl sar cltd mov loop lods mov jns,pt fidivrl mov insl xor (bad) out add and js mov xchg out out xchg int3 add mov ljmp fcoms ljmp out mov lret out xor rorb mov es push push cs pop pushf lods insb or bound out push inc jns dec movsb jae fucomip call insb out and stos aaa cmp push loope inc push popa in pusha pop pushf push dec pop lahf cmc js push outsb out je mov aas fnsave out mov repnz iret sarb pop add scas adc aaa out or sub dec cltd or dec or or mulb es test (bad) (bad) mov pop dec ja in in out or inc push cwtl pop cld pop insb sub xchg adcl fucomip sub mov push outsl sbb add or inc sahf mov adc ljmp (bad) jg xchg sub bound xchg cwtl out and rol mov leave jae inc sub je mov call or adc cs add xor rcrb adc ss pop sbb add cltd mov adc int3 out adc cli orl jge push out pop ret ret out xor arpl (bad) mov jno mov in mov out push mov adc pop lods cs out lret lock out push out out xor mulb imul xchg rcrb scas jp imul ja push gs out js lea out ret nop ret and out pop (bad) mov adc loop test in jno xlat das ja sarl out sub lods mov (bad) icebp xchg aam and test out adc pop xchg push mov mov gs imul adc (bad) (bad) test int3 lods jmp pop xchg mov jp rorb cmc les inc ss inc xchg insl mov push pusha repnz mov inc jmp nop inc fisubl cwtl les add xchg dec negb out add xchg out sub and mov cwtl sbb dec (bad) stos push lods sti out fwait (bad) dec xchg xchg je sbb outsb int out test mov out mov jp inc fidivrl out in cwtl inc pop jae push lret pop bound aad insb jle dec ljmp or fwait xor out jecxz inc jge xchg ljmp movsb mov dec cltd aas shlb cwtl xor insb xchg push sti adc xlat mov lahf mov scas clc fcoms test mov jg xchg add loope mov js pop in xchg out adc xchg cmovle sub or stos dec (bad) jmp pop ljmp adc pop outsl sub out outsb sub popf xor jg out dec push imull and adc cmpsl out pusha jle push (bad) jae or add shll cmp pusha adc cmc add cmp repnz out xlat and mov inc leave mov sub sbb stos xor imul das push popf pop pushf or fsts jbe jle mov mov (bad) dec leave out mov jbe mov das int3 mov out mov mov test xchg add lods push jle insb inc pop ljmp pop (bad) mov movsl adc xchg loope daa out imul aad (bad) repnz lret xchg push (bad) fucom out cwtl insl int out in (bad) or cmp adc mov rcrb sahf rclb (bad) xor jecxz out or add lock mov and pop cs stos ret sub insb mov xor (bad) push push pop aaa or jmp xchg bound mov aad lods outsl out jg cmp test xchg lea add lahf jo adc xchg adc mov inc mov add fidiv scas xor jno flds out (bad) into iret out sub xchg and lret cmpsl jp jb sbb or mov (bad) cmp imul adc jmp stc ret loop jl out movsl pop cmp andb add fisttp adc pop out mov in ficom out dec fldl (bad) mov out lcall scas out jmp cltd push icebp mov repnz repz sahf mov pop jle pop divl out cmpl nop dec or pop mov and in (bad) push pop adc dec xchg in shr pop je add out stc int push push call xchg out jmp dec daa fisttp loopne,pn leave out sub dec push test (bad) add in dec bound lea and mov push pop in outsb or and jb push mov lods shrb out fldt stc dec loopne or sarl push inc ljmp jb call inc jp es push xchg inc clc les nop jg sub addr16 js inc add xchg (bad) jge cmp sbb rcrl sbb or mov out jnp add cmp jns jbe out mov cmp ja jl pop or mov mov out scas cmp stos out pop jecxz fnop dec call shll cli rcl pushw xchg in sub movsb sbb (bad) mov xor insb push push rcr jle mov or xlat (bad) out cli sub inc xchg add repz aam loopne jb mov insb sti (bad) (bad) push pushf icebp jns aad jp lcall mov jno lds add mov ret loopne hlt iret int jbe shr gs lret dec sbb jb inc push stos pop jae out loope inc cmc inc lea mov nop dec out add shrl adc test add out and dec iret add xchg cmpsb add and faddl sbb call push pop lock sbb lahf xchg add mov sub loopne test cmp ss (bad) mov lret (bad) or or mov enter push pop (bad) jg cmpsb sbb out pop push or roll arpl cmc jmp inc push out stos rclb out dec cmp mov xchg jmp (bad) xchg jmp imulb out pop sahf lods les jne out out add and push dec mov mov cmc mov stos rcll lock rcl (bad) cmp je (bad) out adc cld dec data16 ss or out fidivrl in std out adc push jle ss out jae aaa call push push inc cld inc mov dec mov mov (bad) (bad) ljmp out mov into sbb mov scas jg add cwtl (bad) inc adc (bad) stc pushf ljmp or call push adc push jl movsl in jmp icebp scas pop jbe jae and sbb clc pop out xchg mov ljmp out mov add into outsl lea jmp add sub xchg lret cltd out or out out adc add movsl fcomip jl (bad) xor es sbb mov std xchg cmp xchg add sub inc and jmp bound out sub mov addr16 mov push loopne mov mov and insb add in jno ds popf icebp enter xchg movsb out cmp sbb std ret fcmovb out lcall pop mov clc out mov xor pop dec out jle in or pop out jo call push out inc outsl mov (bad) lods es fistl dec dec xchg mov (bad) jbe insl ret out gs cmp iret jle inc (bad) loop cs push cmpsl scas adc inc loop lods jg xchg sbb in imul jecxz repz lahf lods jmp xor xor add sub pop jge iret les in mov xlat out mov icebp negl mov dec out lahf scas adc ds rorl pop mov stos paddsb push fadds mov pop popf addr16 loopne out jns fisttpl (bad) mov push out push jg sbb inc fs (bad) mov sti out sbb divl enter mov pop (bad) decb ja out gs mov push xchg repnz (bad) cmp (bad) js rorb test jb cmp mov gs out dec cmp mov sub test insb out aas xlat cli push inc mov adc inc or adc jno add pop movsb ret scas out fdivl mov cmpsl push not mov jmp sahf sbb jo mov addr16 inc mulb stos push sub lret xor lock xor lahf test pop das inc mov push cmc scas fwait out adc adc out inc sbb jmp lds inc loop push mov xor out jle out jl cli mov add cld out out out mov lret enter mov pop out cmp and xor dec push pop mov add mov dec sarl xchg jg loopne sbb push ret sahf inc scas out pop fisttp pop pop or stos and enter xchg sbb das mov data16 in sub (bad) icebp pop push ja das sbb mov (bad) out aad inc scas xor xlat adc xchg fstp out mov dec mov aas pop sub pop push in out (bad) (bad) xor repz adc movsl mov pusha leave (bad) cmp stos or mulb roll movsb mov add dec out or xchg push add xor inc stc mov mov arpl sub divb fnstenv mov loop repnz shlb mov mov imulb aam mov std mov pop inc repz inc add cmp rclb lret stc adc mov out or xchg pop inc jnp (bad) (bad) lea dec hlt and call xor int3 out rcrl jnp iret mov fldt aas inc ljmp mov push add ror mov pop inc out scas cli mov decb pop push and stos subl mov jbe jmp lods pop xchg out maxps sub xor (bad) (bad) outsl (bad) aas arpl js test cwtl xchg or jge out inc loope outsl inc cmp add mov sub scas out mov adc int out cmp icebp xor out jno pop jp sti sub in fabs jmp pop jae pop jmp clc ret leave out fs into push lcall push jne test outsb cmc repnz in sbb add data16 mov aaa out (bad) stc lahf stos pop push aas or mov add push inc sub fisubl jl out inc repnz rdpmc pop dec pop out lahf sub dec dec sbb imul lea xchg (bad) add sahf inc in push inc inc insb lahf add clc aam dec mov sbb roll es out js xchg scas cmp dec adc or xor shlb in testb xchg or jb mov sarb jo jl dec call out adc jb cs js fsubl inc lret icebp sub add push (bad) mov in scas pop or cmpsl mov data16 and mov imul push jnp aaa dec inc or outsb jb jl sar pop inc sbb push lahf xor mull out les call pop dec lret (bad) call out out inc int push jmp sub out mov enter jle std ljmp out pop cltd shl sub xchg ljmp dec or out pop add mov out jp sub shlb (bad) push mov cmp (bad) ja stc adcl jae jl xor ror and out push sub sub lods push mov sub ds divl or movsb out pushf aam mov cltd push lea xor pop nop ja jg xchg lds sub aas and ss inc adc out mov shll push or (bad) out sub out (bad) cmc cmp fcmovne scas cmp or cmpsb add or hlt xor in push call pop in or mov pop ljmp in lea mov int3 pop faddl push out jb cltd nop mov jae out add cmp out adc bound into (bad) push xor jo jbe test popl loop lret out add sahf mov arpl ficomp dec icebp mov jl dec jge scas mov and lret faddl ss xor out or jge add test out movsl mov cmp in movsb push sti push psllq out adc outsl add and out jbe cli mov or jmp mov outsl sub xor cmp xchg lds jg mov (bad) dec fucomip daa pushf popa sub dec jmp fwait gs cmp inc iret scas xor push out ljmp mov jg mov out sub cmp jae notb or inc mov gs xor adc mov insb push out sahf dec pop fucomip jecxz mov in mov and lahf scas shr enter bnd rcr int3 (bad) out (bad) mov inc pop push out sub lret jg jae bound xor mov pop push or pop scas add fwait pop out xchg sbb dec mov inc xchg loope aaa mov push lods mov das inc pop or dec mov dec out dec call jp adc mov cli (bad) xchg iret add es out jmp loope out lock sbbb push pop call aaa push dec out out gs dec dec cmc mov loop adc das insb aam mov (bad) push sub rcll or insl mov gs jno ret scas (bad) int3 push pop (bad) xchg add pop fsub in adc in cmp aam sbb pop push popa mul maxps in pop rol lock js int jg push rolb fsubrl cltd mov pop out es cmp and mul lcall popf incb stc mov add jg lods cs outsl inc (bad) fisub sbb jecxz out dec mov xor test jecxz out aaa jno into jp jae sub sti call mov sbb and add xchg xor fs daa and (bad) lock push xchg mov fnstcw push cmp out aam (bad) ss aas pop cld stc cmpsb sub add out jno out int3 dec (bad) dec push test enter loop inc jle pop popa fisub pop ja push aas nop fsubrp cmp or inc je mov xchg in push call xchg inc lds test out popa inc cli push out test call (bad) jmp jle out adc jge out (bad) mov sbb in push int3 je dec lds pop stos dec pop adc pushf ret inc (bad) jg dec ja arpl mov (bad) cli jnp mov xor sti es out imull out test or out inc mov xor xchg jno push out inc pop insl jge out xchg jle arpl mov pop out ret leave mov out xchg jae mov out fstpt das jmp fisub repz sub push cmpsb loop sbb out cmp out add repz rclb scas mov jns (bad) lar (bad) mov iret xchg or rol out xchg cmp dec out push sbb pop xchg (bad) fistl fcomps cmpsl xchg out jmp in test xchg xor mov out cmpsl xchg pop lock mov mov jmp shlb jmp and mov sbb mov aam jo andl sbb mov inc xchg lcall imul cmp lods shrb mov dec (bad) adc inc daa jmp inc mov addr16 movsb (bad) xor sti lock pop ja push inc insb mov push sbb fs out in int3 mov sarb out scas add fnstcw out ss in pusha mov mov icebp orl jns pop test pop push pop test pop out pop es and mov js mov shlb std out ljmp nop out icebp sbb notl and outsb inc scas sti and mov push mov dec out mov ja lahf out js xor push out dec dec and xchg cmc mov popa das and inc cwtl rol mov daa push and mov imul mov push (bad) fnsave fwait push rclb pop (bad) jle sti cmp jbe mov mov or (bad) mov outsb sub mov out xchg cmp in fwait decb pop subl push test dec loope ret mov mov jo icebp (bad) pop inc pop ss mov mov pop call outsb add inc pop ljmp mov das cwtl ret add mov hlt jno aaa out xchg sahf (bad) xchg sbb mov out inc dec or leave (bad) stos push mov es pop sub jp sbb hlt dec (bad) and outsb cs test jg stc addr16 xlat pop pop jmp out mov insb loopne or jp pop dec or adc stc fsubrl adc lods test and movsb sub loope sub jge movb icebp (bad) mov add inc out jg loopne out jge push mov sub (bad) xchg mov ret jg repz inc mov xchg jno das into out and mov xchg jbe adc (bad) shlb xchg int3 out jne cmc push xchg scas out or add je (bad) stc out push das xchg inc jnp cmpsl mov rcrl mov or cltd icebp jl xchg enter lock inc pop out push pop mov push aam out es stc jne pushf fsubl (bad) (bad) fcomi xor sarl lods jno js (bad) push cmp and pusha mov xor mov (bad) sub clc mov fiadd dec inc sbb nop scas lods dec lret loopne repnz or std leave ljmp push pusha aam xchg ss sbb jb lcall lock insl add add dec push or ss push xchg sbb outsl mov out inc popf into dec push xchg cmpl mov adc add ljmp or jns iret out scas adc xchg mov dec es into out test jbe js pop jle push mov sub (bad) repz in mov or jne pop daa je es imul xor pop dec mov out icebp repz xchg mov sbb xchg clc inc push jo dec loop data16 jge mov stc rcrb push lret pop in lea dec fsubr call mov inc ss (bad) pop xor inc icebp (bad) pop in add out shl jns dec mov out scas jle (bad) and jae cmp test loopne jno out jbe in rclb mov xchg out addr16 test pop stos adc inc and dec je push adc mov cs cmp dec out cmc popf add pop mov pop pandn (bad) (bad) fucomip ret and out lret fildl push cmp test mul xchg pop (bad) in popa in (bad) icebp out js sub loopne (bad) ljmp das xlat test cmp pop (bad) js (bad) adc and sub data16 and add cmp fucomi mov push adc out repnz mov dec in movlps out js ffree push cmp mov stos inc ret jns or mov mov out ljmp mov fdivrl cld fs xchg and out pop sarb sbb out cmc lret cmp out dec clc inc out sub dec mov pop add cs inc mull in data16 sub jl out xchg sbb xor push xlat addb pop push out stc sbb and loope xor cmp in in pushf jne out (bad) sbb pop leave pop in pop iret into (bad) mov sub out cmc jle loopne and out mov inc xor and inc stos pop fisubrl pop fcomi sub out frstor sbb pop inc and aaa out loopne inc pop push or hlt loopne jmp out mov jp outsb sahf out sbb fnsave out mov imul repz inc inc ret (bad) in mov out mov pop dec jns sub cs push daa xor mov jne int loope inc pop adc xor push (bad) out ret insb int3 in (bad) iret push out inc stc int adc orb lahf pop ljmp or mov inc pop loop push sub push add inc iret push (bad) out fcomi fildll (bad) int3 lds out push lret add jl push sysret insl cmc mov in je leave sbb mov out cli scas insb cmovno fbstp pop fs dec pop xchg lock push iret (bad) jnp add hlt daa mov rcr jl adc lods add inc cmp push out mov outsb dec xlat inc pop jge pop dec in sub nop add mov dec lret push mov push je xchg jno ss sbb mov (bad) mov call xchg arpl aaa test daa mov fiaddl in lds les xchg pop sub mov out in mov dec cmp iret (bad) mov cmc jno mov pop out push dec sub or ljmp movsb jg iret in daa inc pop pop lret (bad) lret pop subl push lock xor xchg out push or cmp mov incb add pop jnp out sbb pmuludq outsl lret sbb call sbb out adc es sub cmp shlb iret and sar ret mov and inc fucomi out cmpxchg loopne mov rcrl sahf adc sti in and push inc out and test fs sbb lods sarb sub int mov inc cmp pop xor out cwtl add ret or xlat out aaa test dec je fsubrs fucom push jnp stos popf mov outsb out fwait (bad) ljmp dec (bad) add cmp push jae push aas ja imul mov xchg push out pop sbb mov dec gs cmp and add out jne jo sub out adc (bad) push rcr push out scas insl adc (bad) sbb popa ss les dec cli dec add bound fmulp jbe cmpsb or cmp jge xchg rcr int insl push adc cmp pop int3 (bad) pop ret insb sub push adcl cmc and repz jns movhlps dec or in lcall out cltd xor out (bad) aaa (bad) (bad) and adc adc nop outsl es cmp insl sbb pop out int3 lahf mov pop mov in adc pop out in xor shr mov and jl out or dec jecxz lea lahf inc sub fsub jg pop icebp or push adc push sub fldcw xor fdivrs add mov fstl pop mov push in xchg out (bad) push mov or (bad) out lea sti cmc movsl add test pop mov inc in out stos out cmpsb test sbb xor cmp xchg popa cmpsl out inc or (bad) jmp mov adc in enter mov insb xor (bad) sub stc adc stos insl cmp inc out imul mov push mov push inc mov enter in (bad) aaa pop jmp jmp jo and add scas push push pop dec ret int3 dec outsb xchg fs or out jl (bad) fldl mov shr mov xchg dec sub dec sbb shr mov or out iret add arpl pop out test ss cld sbb lods xor mov scas jne (bad) fidiv xchg into dec out dec and pop jo jg aas jp xor pop out or outsb dec negl (bad) push inc jge out lea dec rorb (bad) stc mov xorb add sbb test js jae out enter lods add es dec xor rclb sub pop push xchg push hlt out loop lcall add in ja cmc out mull gs mov mov ficoml das out push cmp out fistpl mov lret cmovle out cld das ret negl pop jl pop inc mov add jns inc lcall jae mov movsb xlat dec out mov mov or faddl std xor insl inc (bad) icebp out in inc out jae and or dec test cli adcb loopne cwtl cltd aam loop mov mov cmp aas aaa xchg pop insb jecxz (bad) push push movsl outsb aad dec cmp jns out paddd add xchg fistp lret inc ficom out sub out pop out inc adc loopne jbe lsl ret hlt popf or cmp scas out test mov sarl push das jnp pop xchg orl and repnz mov popa cmpsb and mov loopne xchg lock out inc icebp ds mov repz out sbb push cmp out adc outsb pop loop clc pop fisttp (bad) aam adc pop sub push (bad) cli xchg mov mov dec out mov adc pop xor addr16 sub inc (bad) xchg xor xor push js dec sub arpl push sub dec mull out xorb insb mov mov imul in adc out aaa pminub fs mov xor dec mov mov fidivrl vrsqrtss (bad) or add out add sbb xchg out pop int push mov sbb lahf and icebp enter bound call mov sbbl push out jbe or cs jg pop jne pop dec mov ss add aas pop aas adc out push rcll sbb jge int fbstp lret ljmp adc mov fidivrl fild mov mov out inc inc push sub pusha or es out pop std add fs sbb sarl and int3 das xor mov sub pop jl out fidivrl sbb jo mov push jns sbb icebp dec adc cmp cmp push jae cltd mov mov jle mov jne in scas push adc sub in pop mov mov mov jns mov ror xchg mov lahf shll inc out stos je aaa pop repz xchg out jecxz mov xchg xchg xor mov inc push fisubrl jle fidiv cmc pop lcall jns jno outsb fnsave ficompl ds icebp xor mov jp jnp sub pop in mov cmp pusha ja imul sbb xlat rep jmp adc aaa sub les pop lret xor out popa in cmp or pop movsl fild aam imul push out pop sarl cld jb into push jg or out mov sbb adc mov (bad) cmpsl aam sbb jmp add out cmp icebp jo mov (bad) xor adc sarl out stos dec jmp push pop cmp daa add ja sub out mov push ror (bad) pop xchg pop lock subl (bad) jecxz int jmp (bad) xchg in fst (bad) adc (bad) imul out int3 cmp dec push lret stos daa nop dec xor and pop or inc push push pop ret jge jo xor fs fwait loope sahf (bad) sti out add push dec push xor fsubr les mov lahf push sbb fbld incb test nop addr16 jns ja mov mov push (bad) pop cmp out cld (bad) xchg pop imul in imul out lods ljmp out sbb mul das cs out jl jmp inc mov xor ljmp (bad) fldcw imul jns repz aas or and dec mov push (bad) mov in repnz and xchg test shrb dec push cs shr fcoms out pop fwait ret or jne sub pop cmp hlt inc jo (bad) mov nop test fs xor aam adc iret xor xchg (bad) (bad) cmc fbld out mov incb or imul lds out adc mov shlb inc pop cmpsl lods out or jbe in out (bad) not adc push push shlb outsl gs or dec inc out sub sbb decb outsl fsubrl jl out push jno and loope mov dec out jmp out ret leave cs pop jns inc (bad) ss mov popa iret in xor inc or cwtl arpl imull out (bad) mov jl jmp es flds (bad) xchg in push add in out daa cli pop ljmp jmp inc pop (bad) sub xchg shrb stos (bad) (bad) cmp mov dec lods ja jb push mov out mov mov and nop pop fs ljmp push add scas in jp push clc adc test sbb repnz cmpsb out lea test lock mov lods in (bad) sub fldt out loopne mov sub mov xor pop pop xor mov in push jg push mov mov enter scas dec pop ljmp call mov lods fsub fdiv dec out les adc lea or push ss out scas jo mov xchg add ret lods cli rcrb ljmp out movsl and fisub xor jae push pop repnz mov jl push push sbb out mov inc sbb mov mov in mov out ror movsb adc fucomi movsl test push scas push jnp subl jecxz loopne fist sub push out in mov es out cwtl (bad) out cmp jbe int mov sub sub dec dec add dec add pop cwtl in sbb js pop (bad) ja add out out insl out add fsubp pop daa out imul cmp aad pusha sarl out cmp inc and mov add push mov daa mov cmc out inc push pop imul sub adc sbb into dec (bad) inc push pop scas pop adc cmp cmpsl imul (bad) inc (bad) dec jne xor das fsubrl push call cmp in fisttpl into gs dec dec add lds insb andl adc pop sbb push js je es or and aas jnp adc enter lahf fsubr mov jmp sahf dec fiaddl cmp repnz cmpsb in add or lock cmc fs (bad) into arpl cltd adc sbb enter pusha (bad) xor jbe das and fldl push cmp and adc ret mov out push mov and mov pop aam mov (bad) insb leave repz cmp jmp mov jl inc or (bad) cld lahf xor xor out pop out icebp out cmp mov std enter aas mov addr16 cmp (bad) out lea push idiv aas rcll lock push pop out and popf mov aas mov (bad) jg (bad) mov imul jp shrb out jno into cli pop fucomp xor mov test push daa fbld and cld out or aas jae setbe push fsubr stc in push jl int loopne push push pop and add cmp scas or icebp inc dec stos push mov xchg bound loope push out lds decl out mov out mov push jl adc ret lock bound inc adc sbb xor inc jo cli out pop imul into loope add js inc iret lret popa pop into push jp or in adc out stos sub cld xor (bad) aad adc loope mov jne or or jbe out adc cmp out xchg popl jb stc pushf in iret push out cmp aas adc push jp daa jle push inc cmp dec cs mov xchg dec out mov mov adc fucomip mov out jns cs ret fldz test jecxz mov xor fcmovnbe out aad out add test movsl adc add (bad) imul adc pop out or fs cmp test sub fstpt jne sub test adc mov mov scas popa add in out fwait outsl add fucomip xchg movsb pop sbb (bad) out sub cmp jae aaa bound push fild xchg movsl imul pop (bad) sbb push out pop mov jp js shr sub xor cmp in push out into inc mov nop fdivrl pop inc cwtl mov (bad) aam (bad) daa xchg pop xor mov push push and dec out cld add sbb jp imul cmp mov out (bad) hlt push lret xchg in pop icebp cwtl ret in and gs or bound out mov repnz jno jo mov das mov cwtl sub lods out js ljmp scas mov sbb test shll stos out mov or mov mov mov mov out add mov xchg add xchg xchg test out push out sbb cmc (bad) fnsave or testb mov xchg pop (bad) (bad) and mov push fcoml loope fsubr int3 (bad) mov out pushf lahf repnz xor aad ss lods movsl push scas out push adc push out cmp notb jecxz jnp add ret out xlat sub out rcll cwtl sbb out mov (bad) rorl jp out adc push leave jg mov xor and outsb addr16 xor xor cltd xlat dec pop mov push sbbl add xchg mov jl or jno rcrl out mov outsb fidivl aam popa insb loopne rcr mov mov insl dec out scas xchg icebp push outsl enter sbb hlt repz sub leave sub lods vmwrite sbb jae add outsb jle cmp insl pop rolb pushf mov adc lock rcll out lds (bad) gs mov cld pop jbe cmp inc lret test je movl out sti cmp pushf out subb movsl stos ret popf pushw out inc lcall out mov adcl lret out dec add inc std pop test insb pop ja inc out mov sub push push rcrb push cwtl out nop cli bound iret out add cmp out cmp xchg movsb mov out mov mov cld pop stos dec xchg mov sbb test fwait jo ret rolb popf mov repnz jg dec or jne out add sub xor sub jmp out in out lods sbb imul fnsetpm(287 je xchg push add or cmc cmp or ljmp cmp dec jb aas mov outsl cmp outsb arpl sbb mov xchg cmpsl out jno negl lea ljmp loop or pop adc xchg mov out or je (bad) mov add sbb out jl xor in xchg mov pop out push adc fbld xor mov out (bad) mov lods popl dec loopne stc std pop jne pusha jns mov imul out ljmp out (bad) outsl adcl loop fbld ja ljmp sub pop (bad) and (bad) push dec mov fistl mov jae cwtl add push rcll negb pushf out jnp std fs mov push jmp sbb mov mov iret mov sub in out daa mov dec xlat inc mov cmpsl (bad) mov cs sbbl out insl aas (bad) lcall cmp outsl mov fsubrs jmp pop mov adc js ret sub out inc sti addr16 cld scas cmp add mov jne sub call push out jb jmp sbb btr mov rcl loop icebp cmc rcll cs pushf sub push lahf repz dec ret lods mov pop test bnd cmp cmp sbb jno push data16 decb add xchg cmp iret mov out mov jae test or xchg jns inc in ja pop mov stos ljmp pop call out adc or xchg out xchg mov mov out ret orb lock jecxz cld mov in outsl push out sub movsb ret stos mov cmc out sbb hlt shrl adc or lret lret xor movsb mov imul jno aaa add add sub lret ss call pop ret in aad arpl pop mov call out xchg xor dec iret xchg movsb jbe test or es push out and cmc insl sahf (bad) mov out jp adc cmpsb xchg inc fdivs sub xor imul aam jg fisttpl out or mov out je pushfw dec mov fwait adc push cmp ret dec ss sbb mov pop (bad) ret inc jecxz xchg pop cli mov out xchg push pusha mov out add decb imul mov add push fsts cmpsb fs inc imul in and sbb pop ficom fdiv mov shll mov push cmp fstp (bad) xchg loop add fdecstp mov sbb aad mov (bad) cmpsb cld popa cs mulb add out dec ja mov (bad) sub pop mov (bad) inc add sub pop in popf out pop aas xor mov out mov rorl shlb ljmp out std xor or cwtl adcl insl inc cmc out mov (bad) in inc push stc jle cli popf lock cld mov rcrb cs xchg imul add inc insb adc adc addr16 dec pop pop dec jge and outsl lods ja sarb mov sbb dec jae lods (bad) icebp cmp into sub adc xchg xchg pmaddwd jae xchg fsub test (bad) fidivl push loope pop das dec gs ss mov imul (bad) out insb push inc add lcall out xor fmulp pop out sti cmc testb xlat sahf jecxz imul sub add sti in pushf pop xchg daa movntq out in lock lods out pop fldt inc adc nop (bad) jne jae aas sbb pop (bad) mov out adc aaa into stos gs out out psllq jp sarb out cmc mov pop out pop mov inc inc arpl test sub ljmp out lret adc lds lcall adc out inc stc int repz fistp mov (bad) movsl cli sub int les or inc dec sub clc xchg jbe fldt out mov jno insb adc out arpl inc pop aas test das xor bound inc call (bad) mov xor out (bad) clc lods and dec nop (bad) rcpps out mov bound and icebp (bad) out stos pop jae std jge mov and mov or jp sub sbb pop inc and das jo jge out mov fild sub jmp sarb sbb dec push xor out (bad) sbb in cld out add aas cmc xor mov mov sub mov arpl mov push out fsubl dec pushf out loope (bad) outsb scas xor cmc dec (bad) dec (bad) mov jns jmp imul dec xor arpl pop aas push out lods mov and and and push rorl or out test aam out in sbb pop adc inc aas das push inc sub es jnp test out or stos mov xchg cmc out xchg lds pop ret mov fmuls and mov imul lods out xor pop inc cmp cltd in jo fwait stc orl dec jmp push or xor push mov decb imul (bad) mov aaa scas or and xchg imul mov sbb subb out mov lret xchg ret stos jecxz popf mov repnz xchg cmpsb inc out lock or xor push sub in les jo jbe mov out xchg loop cmp test and gs adc push sti push (bad) loopne (bad) loop jb lods iret sar mov mov out or adc sarb out test ss out mov and xchg icebp fdivrp out xchg mov pushf out jbe pop xchg addl jne push sahf mov pushf sbb mov out cmp insl push loopne sarl inc pop xchg pop jb movsb push (bad) insb push fdivp inc stos lock aas xchg lcall xchg sti (bad) inc pop int scas pop test in mov xor aam nop out dec cmp les fucomp out jo aad pop xchg mov pusha loope test sbb sbb and push out dec xchg sahf lods leave cmp and xor mov testb out mov rcr add sahf mov cmpb loopne call or leave out test in (bad) call cs out in jno push or lods mov push cmpsl xchg lods cmp mov into (bad) jae cwtl xchg out cmp and mov adc mov push je daa sbb cmp in loope inc lret out (bad) das push aaa push push sub or (bad) mov icebp in add and cmc or pmaxsw cld in cmpsl cli mov out gs imul adc jb and lret daa out sbb and xor call jno in sarb es pop mov jbe pop mov (bad) jl xor xchg push mov xchg mov aad mov insb out cwtl in ja xchg cmc mov mov scas rorb pop aad shl inc push mov imul out movlps push out sub out xchg leave jmp xchg loop lret push inc add inc and xchg fld push out sub aaa je std push xor sbb push fnop mov xchg (bad) mov shlb jp loopne xor sub in lods cmp mov mov sbb cmc add cmovb out pop dec inc js (bad) push scas stos ljmp jns inc pop inc adc fldcw jmp jecxz fnstsw cmpl in arpl mov pop repz cs loop fdivr out inc inc out pop or lods mov (bad) mov data16 push test bswap out cmp sbb rcl sbb iret ret repnz push loop cmpsb negl fldcw ret xorl in out arpl dec jl xchg jmp out mov xchg xchg jmp mov ljmp divl mov pop in notl out ret (bad) mov gs jbe mov push in je out adc mov ret out jg cltd jns mov out cmp xchg add sbb xchg out dec ss pop xor loopne lahf pop dec push lahf out cmp stos add and (bad) push inc out jp into or out repz sbb imul jmp out test jle ret dec inc sub (bad) call lea hlt add in out cld cmp push in fisubr aaa les jno cwtl stos xchg insl mov or xor and pop popa imul and push call int3 xor out cld fistl test (bad) or repz push push ljmp mov adc jne push fdivr xchg mov (bad) jmp lcall test sbb sbb add or sub cmpsl lahf dec sub pop pop loope inc pop fistp out stc ficompl dec out gs imul sbb out aad dec sbb stc sahf dec (bad) cs loop repz in pop out popa fisubl dec push jae dec out mov pop repnz stc mov mov sub in or in dec pop iret jo in add lret and (bad) xor rcr jmp jbe cmp test jp paddd loop xchg sub gs sbb movsb (bad) hlt out jno jmp jae popa add cwtl and fs out xchg andl out or ss mov inc cmp jecxz insb in (bad) out mov dec test out fs xchg das out or lahf cmpsl and inc out addps dec imul in adc or int adc ret out add rolb cli daa test jns (bad) add or nop scas mov or in jb test js pop mov into lods shr aas push flds (bad) mov popf cwtl ret add ss lock mov add adc sbb inc adc push lods jno in inc pslld cmp out lea (bad) and icebp out xchg or inc jb out inc (bad) fidivl ss fsubrp adc fnstenv out stc lret push loope pushf mov cmp test rorl cmp pop mov stos mov cmp out jae dec mov adc ret push mov les mov inc mov shlb scas pop je scas insb lds mov jge mov sub loopne rcl ljmp out dec fistp movsb out mov stos mov in dec push call test out or test cld mov fbld movsl leave pop iret icebp shl rol int3 mov sbb rcl mov adc popf out popa mov add sbb in test adc cs ljmp shr or sbb xor dec xchg lahf aam sub loopne and xor pop cmp sub (bad) xchg iret or out lea lock xor ds out and ljmp jb sub sub out and sti mov (bad) push std (bad) test test xchg icebp pop xchg scas xor add ljmp xchg test cmp xchg pop push jge aad inc and cmp out lret cmp (bad) iret mov mov jae in mov mov jb sahf aas mov cmp test out out nop cmpsl data16 movsl jecxz and cmp pop xchg stos ljmp scas adc out and adc out or push in aaa jno jecxz mov adc mov push push (bad) out out iret imul scas out mov fdivr int test lahf or test adc out std and xchg (bad) and out add push adcb mov mov adc out xchg sbb rclb or sub je or (bad) sbb in arpl dec mov movsl mov push mov or out jmp ret inc imul dec adc aaa aas fisttpl iret pop daa out xlat test sbb xchg out cmc clc mov out addr16 xor pusha out aaa das call jmp (bad) iret cld mov arpl mov es dec gs and outsb into out (bad) (bad) (bad) mov mov mov imul out pusha sbb push out jb cmp mov (bad) dec jle xchg icebp stc adc mov aaa pop (bad) mov cltd pop imul stc lcall cs icebp out sub (bad) imulb cmp push mov adc jbe pop (bad) (bad) mov pop fsts inc out xor daa push inc je jp jae dec loop lock mov mov movsb ret (bad) pop fcompl out outsl jmp imul out mov xor xchg imul pop push pop out xor enter cmp out stos outsl lcall pop lahf jmp insl into je pop out or (bad) sahf scas cmp outsb out jge mov and imul out arpl out fisttpll lcall addr16 pop outsb jecxz (bad) out sub sub cmpsl popa jnp jl mov icebp jecxz es xchg add inc pusha imul and mov out insl lock mov imul lods out (bad) shrb jbe dec out jp jne or out pusha push jno xchg dec mov (bad) xchg fwait jl (bad) imul sahf in mov stc cmp mulb inc mov jns jle push cltd int3 pop sbb xor push mov dec jl aam in pop es pop mov dec outsb fildl mov xor mov (bad) shrb mov dec incb arpl jbe sbb mov negb sub imul cmpsb in int lret (bad) out adcb jo lods into and fistpll jl scas or add jecxz in test ror out jge mov push (bad) dec xor adc out ljmp movsb out mov xchg pop cs sbb iret and fsubl cmp scas test loop pop jbe jge pop inc jle (bad) je xor fdivs dec xor sbb jg xchg jle out popa std fdivrs (bad) scas nop cmp inc jnp shll out mov or xchg mov inc nop lcall outsl inc vmovaps push sbb add les in pop fucomi or add sbb jge jg dec test cwtl mov add lret sbb in cmp inc dec clc lods jmp enter repz xor push je push jo fcmovb inc loop shr fdivrp sbb or jb data16 fs mov out (bad) int test out fist or cld (bad) sub test pop stos pop out aam mov and dec (bad) and ret or and out int push test adc out in hlt fs call push test ja int fist testl in cs cmp sbb int3 sbb mov sbb test pop pop jb and inc in pop insl lods lods es add scas ljmp push repz out jp inc cltd jecxz add out cwtl push aam daa mov and call iret jg xor push fwait shl lock incb (bad) into out fidivrl push dec arpl pop add xchg xor and in decb fwait adc add insb loop out popa arpl and outsl stc (bad) out sub (bad) mov mov mov es scas jb pop iret sti inc inc xchg cmp mov push and xchg mov sbb mov rclb rclb adc inc jae pop push lret arpl sti fwait dec jbe rcl nop fisubr loop repz inc int3 pop xchg out das test xchg mov xchg stc add ss out mov movsl mov push mov (bad) jl scas add xor dec mov (bad) leave in adc push add push and out or icebp cmpsl aam xlat sbb int3 push and out push outsb out fs lods loop mov xor sub mov (bad) push std (bad) ljmp daa xchg sbb (bad) out sbbl mov (bad) mov leave jae fidivl mov push ja adc or (bad) xchg test lds (bad) sub xchg push fistp add adcl cmp or add adc jle out ror cmpsb push pop jbe jno repz pop dec inc daa and fisubr out sub int3 and out dec xchg testb shrb mov push repnz pop mov mov outsb test adc cld sub mov fwait in (bad) xchg pop insl stc xor outsb out adc lcall sbb add out into ror jg jae pop fmuls push cmp and adc jg notb out dec in lods xor xor push pop inc out and mov loop mov mov je mov test pop inc push insl (bad) lods pop leave (bad) outsl ja mov dec shr fsubrs bound out or fbld sysexit mov out cmpsl cmp fimul sub fsubrs pop jo inc cmp dec cmpsb inc mov sub xchg xlat xor cmp in rorl cmc pop ljmp into stos out xor sub in jmp push sahf pop xchg dec or mov fdivrs cmp cltd adc cmp call insl das jecxz,pn mov sbb xchg xchg call pop fstpt sub adc pop jmp icebp jp cmpsl xchg out in nop addr16 aaa (bad) sahf out rcr or in or inc jb push mov fldz jo pop inc cmpsb fdivs xor out dec mov mov (bad) movsb xchg (bad) and and sub out (bad) pop dec fucomip int3 leave push pop dec mov out fwait mov xor cvtps2pi out les xchg mov (bad) int3 outsb out je or and aas and notl test pushf sbb push mov sub pop out cmp (bad) repnz mov push das adc mov pusha out mov push loop lods mov incb inc cltd lods jbe out xor xchg mov cmovae insl inc push sbb add (bad) jmp out push shl clc sti mov pop cld stc ret addr16 sbb call push and lock cltd dec xor out push repnz xor stos or push inc movsl cld shll out mov (bad) add cli push out push push out inc iret sbb jmp push (bad) (bad) mov hlt fsubrp insb xor mov out jo in push jge mov ss out mov test in in cltd out push mov (bad) mov mov and fimul out ljmp cmp (bad) pop xor (bad) out or hlt pushf sub je jmp dec cmpsb push xchg jg jb jnp (bad) pop out mov xchg dec fwait inc push mov mov movsb jns out (bad) and add stos dec addr16 stos (bad) dec jl nop lret mov xor jge hlt out mov mov sbb rcll push inc cmp xor fnop in pop (bad) mov jp insl mov inc xlat xchg jbe out sub sbb or icebp mov mov dec sti cmc mov jg loop mov push ja out lret movmskps xchg add repz lods mov out inc mov out sub or pop fsts lds inc lcall mov out mov mov aas pop dec jne aam stos ljmp movsb in aad jnp (bad) inc push hlt call arpl adc sbb pop out mov inc imul mov je mov loop or and mov lahf fs iret xchg jb mov sbb clc imull dec mov out push and popa add imul outsl rorb push jmp dec int lret aas gs mov ljmp out out imul cmpb cmpl jb es mov inc imul (bad) dec (bad) out add int3 iret js fisttpl nop inc out out inc icebp cwtl inc out (bad) mov or pusha cmp sub push cmp mov fcoml sbb scas idivl sub mov mov popa xchg fdivl xor nop call jns les in sbb shr ljmp pop aaa lods push rcll jmp ss loopne leave js sbb fisubrl loopne inc addr16 mov mov mov or fcmovnbe out sub repz mov out (bad) imul sub ret add and pop pop mov scas cmpsb mov xchg lods loop dec jg mov cmp mov sub decb jle lock out push imul cmp or sub pusha popa mov or or outsl ror out repz jb mov scas xor mov jae fldenv leave lcall in fildl out xlat mov cli loope mov aam (bad) adc cs ret adc jno mov and aad mov cmc sub cmp cs dec ret out js addr16 negl cmpsb pop out scas (bad) pop pushf (bad) into pop sbb ss add inc fimull xor out repnz push jne leave imul jb loop jmp sbb out push cwtl sub ljmp add arpl fmuls out bnd add xor out fs push aad test xchg pop loope adc enter out mov mov out fdivrs movsb vmovupd mov daa stos mov out aaa mov loopne dec div mov test pusha out mov xor dec enter aas mov pop cltd clc (bad) in jg sub mov aaa pop jno cmpsb out xchg aad andl (bad) (bad) xchg dec out mov mov das dec loop jl out pop pop cld push out outsl out ljmp (bad) or out popa movsl add xor pop iret es cmp add sub dec (bad) jmp add leave ss push pusha (bad) xor or xchg jge fidivrl data16 jle mov mov dec mov cs jnp je xchg sbb adc out repnz loop inc test std or aam cmp cmc leave loopne out sub fs outsl or andl arpl pop xchg inc stc mov in lret repnz jl pavgw (bad) or imul out orl adc xor pop xor pcmpeqd pop mov mov inc pop ja mov mov adc inc mov jg mov ucomiss sub add jp jbe xchg push inc out test and pop addl sbb bound cld rorb enter and and add mov add cmp fildll inc cmp out into jmp lea stos or shl and xchg rcr into bound es jle cmp add fsubrp fwait ja inc ss push in out jp jno idiv mov insl pop ffreep sahf xor out mov mov adc (bad) fidivrl adc in dec fisttpll mov repnz arpl and fs outsb cmp pop adc push add pop cmovl jmp aas and xchg ljmp or mov out jae ja sbb gs lods out pushf fbstp add (bad) sti dec aam push mov cltd pop ljmp mov pushf aaa xchg mov lcall js scas mov aad out cltd inc data16 xchg jno std out imull sahf xor jge ret or jg repnz popa dec in (bad) jecxz test bound out imul pop (bad) jb adc mov pop sbb popf clc (bad) ss jecxz pop popl jns sarb out imul dec sbb push out pop dec (bad) jae xchg out insb jnp rcrl or and jo push mov out pop sub stc imul add dec out cmpsl out adc ja lret sub daa xchg (bad) add xchg push fs aad cmovg push out shrl lock movsl mov dec dec dec icebp iret cmp and jb leave push shrb test shr mov out ret nop xchg pop pop jb push scas (bad) xor bound and out sub jp fcmove mov push out outsb sarl pop or pop imul or push sarb jge mov xchg jle or (bad) or outsl add mul jno xchg movaps decl inc ret pop push inc (bad) inc out jge pop dec std imul dec inc rorb xor (bad) pop bswap pop nop ds jp push jmp fucomp jo sbb pop shrl cmp push out dec push push js cmp adc and out pusha add iret pop xor jae mov pop int sbb out stos (bad) bound xor mov sbb inc fcompl lods ret inc popf mov (bad) fistpll aad call mov mov out mov adcb mov int3 out sub imul daa mov loop ljmp inc sarl sbb mov dec fwait rcrb sbb sti repnz ds lods xchg js je aas fs jnp out mov ret clc (bad) loop les data16 pop ret pusha mov out push stc addl out iret (bad) jle push call add pop push les sbb jle out insb clc ja out and sub add cmc cmp push out int mov mov xor xchg bound mov jbe mov mov iret loope push call (bad) fs call mov push pop aas dec mov mov imull pop jp lret out movsb jb cmp out cmp dec adc lea jb jge js out (bad) and lahf leave and iret pusha mov sbb (bad) in pop mov pop mov pusha in das and dec mov adc (bad) jle divb iret loope cmp ljmp and movsb lds mov bound fisttpl dec cli sub pop pop idivl loopne das fistp loop movsb pop jnp jecxz mov sub leave dec mov out mov das repnz inc pop sarl pop out divb jp adc mov dec ja fs and or test pop repnz mov sbb sti jne int outsl in test in fildl in inc adc call es out pop mov in (bad) stc (bad) adc sti shr rcrl xchg dec out xor jle adc fsubl (bad) repnz ja ret or outsb lret mov sti or std popa out outsl mov out pop js mov xchg pop fisubl adc nop out xor jno out mul sub dec lea pop shlb pop imul outsb cmp ficoml cs into jae enter insl incb insb push mov lcall ficom mov lret int3 leave iret clc xchg mov popf in (bad) fmul scas or out call mov aad lahf out das into jns ss fsubr sti xchg mov sub jno xlat cmp ljmp ret in push sub sahf mov pop mov push out dec stc out add inc idiv sbb std loope dec or adc mov ret push outsb aad imul (bad) nop aas int3 lcall sahf mov rolb ljmp (bad) jp xor sub push mov and add sub mov xchg aas xor mov cli add cmp or pop out mov adc xchg out cmp xor sbb adc (bad) cs and xor cld out mov cmp add mov das adc jg push pop mov mov and inc out lods sbb xor pop (bad) nop out lds std mov push push mov sub pop fbld iret les mov push outsb pop dec out call xchg and (bad) mov fstl fsubr aad push jl xlat lods out xchg jne lds in mov out loopne cmpsl dec pop adc out xchg aam ljmp out daa pop imul pusha out mov sub arpl jmp push cmp je movsb xor push out stos and mov jl out js mov sbb popf push incb sub adc mov aas popf dec (bad) ljmp out pop imul sbb jne inc test xchg out push fstpl out pop stos cmp or push fs sbb (bad) or insl sahf sbbb jnp xlat dec ljmp divps cmpsl inc lahf dec lods scas out push fistp and repnz push mov out lcall add insl cmc xor and mov xchg jg loope jmp out adc addl mov mov repnz pop adc xchg std mov gs ror fildll sub xor arpl mov add pusha vmovdqa loop adc push sarl add sbb out push imul inc loope int3 fild mov push movsl mov mov fadds mov shl enter xchg scas mov mull jne scas fisttpl xor jno,pt loopne out jb mov cmpsb pop stos jp xor call out push aas xchg dec test xor adc cli pop mov hlt xchg xor jecxz mov (bad) test out arpl dec pop fnstsw sbb incl sbbl and dec mov out xor cld xchg jno out sbb icebp fnstcw xor int dec add out sti lcall out jne push adc mov cmpsb out adc mov push cmp fcomps lahf js daa fucomip jge pop nop xor loop inc rcrl push loope push jecxz (bad) pushf repnz cld add cmp fisubrl push jl or popa out ss push cmpsb inc (bad) mov mov out inc rcll icebp (bad) inc out push xchg lods mov inc xchg out inc add (bad) incb mov movsb insb fstl xor (bad) mull lret jg mov (bad) mov mov imul sbb out mov dec sub mov pusha into fwait jl sbb mov mov out push cmp push mov imul je xchg mov das cli test xchg repnz jne add js dec int3 mov stos sti push add out jge popf pop xor aaa out xchg push enter out sahf jmp notb ret fldt inc or mov push add js out aad lea out repnz fisttpl ds out jp jg and mov hlt or stos int3 mov out popl xor xchg (bad) lahf pop out ret jb mov xchg out es (bad) out xchg fdivr cmpsl cmp jb push dec out mov shlb inc or sbb push fwait inc sbb out push das sbb arpl push xchg loop cltd jp cmpsl adc or ret out aad sbb (bad) aam out psraw mov xor hlt sub cltd out fidivrl ja imul out mov xchg pop test out dec faddp xor push out inc add jne out jmp cmp push add adc push decb jnp lods sarl lret mov int push mov loop sbb fisttp movsl test cltd mov out and idivl out lcall jecxz xor sub or adc fs add cltd imull push sub cli enter pop push jbe lds xchg sbb int loop js adc sub shrl dec or ss push hlt add test std cli loop mov insl sub data16 mov sbb or sbb das cwtl icebp out xchg push pop mov mov and mov mov cmp repz or in orl out iret repnz rcll shl push cmp stos les xchg std sub inc in jnp xchg and fiadd enter sub notl xchg daa jecxz (bad) mov add cmpsb out and mov out cmpsl cmp jmp rorb mov push nop int3 scas sar fnop aad fisubl je and push loop std dec (bad) dec sub (bad) add subl mov add adc dec out into imul and out jecxz fstpl (bad) mov mov push cltd push outsl out fs mov add xchg mov push ds add xor adc insl bound dec shll adc cmc setg in or (bad) and out (bad) into ljmp dec jecxz mulb sahf out mov xor daa aaa push (bad) out xchg pop lret fsubrl cmp out pop test push cmpsb out mov rorw loopne push repz pop mov xchg into fisttp push movsb ljmp and mov out subl adc rorb insb (bad) adc jae pop ss jb pop xchg (bad) cmp mov push dec add pop aad int3 clc push imul adc inc add cld jl push mov and fisub xchg cmp ja imul and je imul pop cmpsb (bad) out xchg outsl or xlat (bad) stc dec bound fiadd jbe mov add mov pop out repnz mov mov call cmp push pop out (bad) rorl ret hlt push rorb push out int loopne imul out push sub pop jmp out mov lods push in outsl pop add into ds pop es lcall xlat pop aam stos pop scas out lds sbb ljmp ljmp xchg roll icebp movsb in xchg cmp out lock inc or aaa inc pop loope push and cli in cmp mov in xor pop mov cmp adc adcl sbb ljmp adc out xor push cltd bound out sub (bad) jle mov loope jo rclb pop test cmp sub out call shrl hlt cmp mov mov ljmp mov cld cmp ljmp jne or jb je out shrl inc push jbe jns or in dec mov out xchg add push bnd xchg jo fisttpll adc ds push add pusha push push jl mov repnz popa push lahf in lcall mov outsl dec sub aaa mov or push out leave int3 imul out pop and jge,pt cmp iret lcall xchg insl push lods cmc out std (bad) arpl push push mov rclb dec mov popf push mov out ror dec and addr16 (bad) sub inc mov out or adc loop sbb (bad) lret (bad) inc out and and scas lods out adc push mov lcall sub sbb out adc pop iret fadds ror jno pop jo push sbb push aaa fsubr in or inc xchg pop jnp or repz imul jno arpl imul add mov and push fs ds out mulb sti and mov adc add or (bad) mov inc push sub repz dec leave outsb xchg aad jne cmp add sahf adc inc es lods test (bad) pop xor pop lds imul push in dec out jl js shlb sbb lcall push jns and inc push shll cmp jmp stc insb fistpll dec pop rcll sti mov (bad) sub icebp repnz xchg mov out pop push sub push xchg xchg ret (bad) jne or mov out addb xor inc cmc icebp repnz loope push insb in adc mov jne adc add out icebp in mov mov sbb mov dec shlb fs sbb cs loopne jg stos xlat addr16 frstor jbe out test dec cwtl aad cmp daa icebp jae or xchg shrb out sbb in jmp aas inc lret cltd or fucomi fistp or mov insl movsb push pop iret inc inc xchg ljmp loope (bad) mov adc sbb or add xor pusha shr pop push out adc xor rorb in add into (bad) dec dec xchg pop lods enter iret add mov clc inc iret (bad) arpl and sbb lods push cmp xchg fldenv loop dec lahf hlt out pop mov scas or add lret ja xchg cmpsb loopne pop mov lods and sbb mov test std xor xor bswap jg dec sbb into fadds iret andb inc push mov cmp mov clc cli pop fnstcw repnz rolb out test test out lods sbb sbb je fucomp scas sarb setb lcall mov sub loope out in cmc mov and cmp out jge cmp dec and mov fwait and out xor popf (bad) aad arpl push inc xchg add loope dec jbe punpcklwd outsb out jae ja scas out pop xor or pusha adc adc jge mov arpl les (bad) test out cmp out mov int3 adc jo aad mov push sub and and out ss cli dec gs bound sbb mov jecxz jo shr pop add xor out or and fsubr (bad) dec ja cmp loop mov out xchg cmp add outsb adc into adc inc lock mov and mov pop mov enter add or push aam mov push es lahf out mov test fldl fucomip inc push mov xchg out pop pop mov daa cmp xchg mov out sbb cmp js dec popa xchg inc cltd test and into sbb jge adc or mov add jp jo addr16 cltd push mov out repz loopne sub fbld dec mov in pop mov pushf add subl xchg test xor mov in or daa push push pop sar lahf pop mov adc mov push dec ds stos iret pop jle mov arpl and and mov mov and sbb ljmp fsubrp push xor imul sbb pop ficom out ret push fstps into dec dec out out add sbb shl adc ljmp imull outsb xchg lock jns xchg loop ret out xchg push push out ficomp loopne and or mov mov sub (bad) mov pop ret test xchg jecxz mov repz lods pop xor ret sbb in push add out xchg adc push and loope lods add orl incb inc insb dec je (bad) dec mov shr xchg sbb fs jle mov inc fisubr popf xchg in xchg hlt shlb dec in imul out aas ljmp out loope cli adc or cmc cmpsb movsb sbb hlt js insb push out loope lods add jbe mov lds pop (bad) out das sarl ficoml push jecxz repz and or inc incl cmpsl xor dec jno lret pop cmp sti iret cli jge or pop and xor cmp dec jno out dec or or clc leave xchg adc loope out rcrl out test xor adc pop outsb cltd out sbb loope sub out mov out xor (bad) sub dec call out out inc jl mov xchg loopne test repnz icebp out dec pop inc or nop into sub (bad) mov push out pop add aam dec jnp iret fisub mov fsubrl xchg xchg add cmp iret lods mov jecxz jns jae mov pusha and movsb cli int test out push mov cmp ss out mov stos mov dec ret dec loop xchg out arpl mov (bad) out test xor out cmp pusha pop xor xor call fsubrp lock pop cmc mov (bad) repz lea xchg jb out jbe or (bad) jbe out hlt cwtl es mov jns xchg jecxz jge sti out sbb adc xor mov fisubrl jmp out movsl mov aas test fistpll mov pop fsubp in out xor mov inc mov daa mov les out addr16 jmp add jmp jbe add cmp into rolb xchg mov jno mov xor inc call mov das xchg dec (bad) out ret ds xchg mov sbb pop sub movsb je movsl out mov incl (bad) jl mov test and ret jg sbb out push dec out inc jo bound mov idiv adc inc and shrb push imul lods insl das xchg or pop dec jecxz dec lahf lret out push (bad) lods les aad mov mov sbb mov insl adc mov inc add jl addl pop arpl ljmp (bad) sub mov andl dec fnstsw mov daa jo mov ss add ficom pop mov push cld out push mov rorb int jne dec test ficompl add pop sub xchg stos cmp adc out push mov in insb pushf movsb jp sub in pop or pop (bad) std jl loop xor imul es inc loope aad enter mov outsl xor pop push lahf int3 orl lcall mov push jno cmpb inc out xchg lods xchg push push xchg pop dec cmp je sarl out xchg (bad) btr cmpsb jge sub test es add in add push test int3 pop dec popf jg,pt in outsl loop scas out icebp shr insb mov lret sbb (bad) out andb xchg pop sbb fsubr ljmp sub adc stos out mov out xchg daa fwait mov jp push out std and dec dec out pop out ret mov lret adc push rcl or out mov out leave out jo std add jnp lahf mov inc (bad) out add or pop xchg les mov fs jo shlb jae dec or outsl in stc mov add clc xchg or mov ja mov out add mov sub xchg ljmp mov add cmp jmp scas lret dec sbb add aad push mov stos cmc addl sahf or aas leave loope pop js push fistl out stc cltd pop in popa int shr imul sarb ret je imul rclb fild mov mov mov mov outsl or adc loop jmp fdiv push (bad) xor js and loopne out xchg xchg or jl repz out mov sub loop cmp out sarl push jnp out xchg or jmp icebp nop add pop std iret mov loop jle fcompl mov mov cmc call loop out addb push iret push rcr pop loop inc enter fisttp gs mov aam adcl out repnz shr mov xchg push fs orl and push in xlat xchg repnz out inc stc cmpl int imul cli adc (bad) pushf out enter repz push xlat out xchg icebp dec (bad) ret out fbld mov jg aad add mov adc out sbbb inc sub out adc xor je ljmp pmulhuw jle out repnz cmpb sti push adc daa lods out push imul out cltd jbe mov mov xor or (bad) (bad) cld pop sahf jno push mov out adc mov out mov mov push fmul shlb out xor in or mov imulb std mov in int out out or idivb (bad) adc loop dec inc mov fucomp mov dec jno arpl int3 bound mov out lock jns outsb pop jb push roll inc js sbb decb mov adc int3 and mov fmuls sub pop pop mov mul nop or out test mov (bad) out icebp push cmc pop (bad) inc ds lods mov xchg jno push insl out jae fcoml jp (bad) (bad) testl in pushf in or fnstsw fwait push sbb jp inc loope insb pop mov mov fsts enter insl push pop jbe dec xchg outsb cld les data16 lds mov mov mov fisubr inc rclb ds sbb dec lods pop loop stos (bad) sub int3 cs out jo push cmp push sti push cmpsb fsubs lcall lahf cmc mul sbb dec pop sbb scas sbb out jmp fwait test mov out or sub clc in aad ds (bad) pop subl jmp add fnstenv add pushf icebp stos andl out std test dec jns mov out sbb cmp out mov add mov xchg push lcall rcrb mov out jne sbb out push xor mov popa adc ds out sti leave adc movsb int3 mov in mov jp mov sub xor dec sub imul stc sub out mov aad into pop jbe lahf jae test xlat test out roll sub in (bad) out dec adc cmp xchg sub in add fucomip iret shlb mov mov das fildl fs pop scas jne insb add movsb or test sub ss mov scas pop mov mov dec cmpsb out mov inc dec or (bad) lcall sub int dec les and out push sti popf stos aam dec test ljmp fwait xchg cmp cmpsl and ret out inc mov iret out jb push idivb bound add pop outsl (bad) out or aad out cs mov push jl fcomip cmpsb cld mov inc aas out dec lret cmp repz mov sti pop ss aaa into sub loopne sbb mov inc mov sub jg out shlb test mov daa xor out shl cwtl (bad) cli (bad) or inc inc shr add cmp psubb adc inc and push mov cmpl fidiv dec jns push ret xor loopne rcrl out cmpsl ss fwait aas (bad) pop out xchg fcmovnbe stos cld rcrl insb jbe push outsl imul call xchg test bnd and jl ror push iret xor or out jecxz pop xor loope insb (bad) xchg fwait int bound out test loop adc mov imul scas sub scas or dec out inc lea or out push inc stc lds and jns arpl and out mov xorl cld dec sub call loope and fsubrp pop jmp scas das test jne lods mov xor push adc mull fucompp cmp jnp mov loope hlt xchg dec out sbb lret push sub out xor xchg xor sub push pusha xor scas fldcw insl lret int sub inc or call in scas xchg ds xorps idivl (bad) push xchg and fs fadd ret pusha or cwtl pop int3 (bad) cmp xchg jecxz pop pop addr16 mov lea insl adc inc iret mov mov outsb push addl (bad) mov ja cmp repz scas sub or adc jno fwait and leave lods dec ja movsl push repnz or pop jl mov out (bad) inc jne push out push mov lahf push imul inc xchg call dec mov inc (bad) iret (bad) ss jb aaa pop add xchg bound repz mov add enter in mov cmp sahf xor out push jecxz pop out sub jl aas gs pushf lock jle push out jae and std or mov or clc insb in imul into out stos rcll ljmp push mov out lds ljmp or adc push inc ljmp jno scas pop jge pushl in sbb adc lods mov stc je out jl into push cs push (bad) das or std out push push add es xchg pop mov out pop testl dec les in add mov jmp stc int3 mov out arpl repnz mov into sub (bad) or in pop dec in mov out push push xor add fcmove icebp lods fs sbb ret fbld pop fldcw mov sbb imul out xor shlb push mov mov insl iret pushf cmp adc sub jmp sub out mov dec mov mov andl les aas and lret out in clc in mov push in adc pop lahf and cmp ja iret or out cltd mov inc sbb shl cmpxchg8b ja xlat or cmp jg sbb insl (bad) jmp jb shl push push mov fistpl icebp je mov ljmp sbb dec xchg rcll gs fwait pop test fnstenv inc xchg andl pop ds les lods pop out sahf cmpsb loope lahf sbb dec out out nop mov (bad) out lea mov out in fldz add enter inc test es movsb test pop fsubr in pop inc push cmpsl jle adc xchg add icebp negb mov out jl push loope scas adc out out js imul pop (bad) out int3 (bad) sar (bad) xor mov in (bad) or or shl sub and dec (bad) cli adc jecxz cmp shr push xchg sbb pop xchg out adc mov (bad) mov jo in cmp pop out pushf sbb cmpsl es inc out out sub mov inc fstpl push cs sarb add imull into pop xor pop loopne lock subl adc lods xor (bad) fidivr mov sti gs push test div mov fcoms imul inc jne jmp mov scas lahf sbb (bad) and (bad) icebp jae (bad) jo mov jle push out adc push leave outsl aam aad enter sbb sub mov fucomip das dec xchg push sbb xchg out inc hlt fsubrl sbb loop out push aas push arpl outsl or out jge mov jns jle out mov sub out add idivb insb add iret cmpsb dec in cli cmp js shr or fiaddl leave and sub out push pop jne test in gs mov jge xchg out push mov lret (bad) fnstenv mov (bad) lea dec pop xchg jge loop inc pusha loopne mov fmuls xchg mov fs xor ljmp int3 push mov (bad) push sbb pop jno inc loope mov mov push pop fisttp shr xor andl pop sbb and jne xchg inc sbb outsl xor inc sub and inc cltd out pop dec adc into mov insl out pop push xor inc or js jp out loop push (bad) pop dec test (bad) cmp inc shr loop push or imul hlt inc or mulb mov pop rclb push and dec mov movsb repnz push in jns and xchg pop (bad) into or or cmp push dec (bad) (bad) out aad inc pop ja movsb sub mov add out jmp cmp mov mov out mov cmp mov (bad) pusha adc in xchg lret in xchg mov test and fisubrl lahf out or push jnp out (bad) mov lcall out hlt xor xchg xchg rcrl mov repz fnstcw jmp jl out xor jge bswap cmp mov call push out std and inc adc dec out (bad) xchg cmp test add pop sbb mov inc loopne sub loop shrl fimul mov mov bound push rol outsb pop sub fbstp sub out loope xchg jnp pop (bad) iret lds mov out aam push movsb push pop add cli cmpsb and and out loope cmp ret pop pop jbe repz lahf dec (bad) cltd in mov loop pop fnstcw cmp out or mov (bad) ljmp mov out scas add test leave add sub cmp fistl out (bad) lcall fs push xor adc push (bad) dec movsl out xchg jp in jae out imul push pop out pop pop cltd inc sbb xor xor or mov jp sbb and mov sbb out nop repnz jo fiadd out test aas inc jne pop mov repnz cmp xor in jle cmp xchg out (bad) mov pop lock int3 xor fdivl and cli jl out ja (bad) cmc sub add in lcall in mov adc mov leave out xor out mov fwait push sub cmp mov sbb add cmp decb les mov out repnz xchg aas aas and loop sbb (bad) aaa pop inc jle and xchg outsl push out sti push (bad) js fwait inc loop dec imul loope imul hlt popa cli out sbb jnp in pop mov out fcoml add aas mov mov xor adc xchg es iret cli or test fucomip mov lahf (bad) cmp dec inc push js fsubr mov fimull cli xor xchg or dec aaa jg sbb (bad) jecxz cmp cmpsb jbe xchg inc das andb stc (bad) out cld loop xchg sub inc add lret imul lods adc mov or cwtl rclb pop push jp pop mov out sub xchg pop cmp (bad) out mov mov insb sbb addb lods inc out xchg xlat jns push je,pn call pop daa jnp arpl lcall dec out cmc shrb xchg out scas movsb aad cmp (bad) stc mov push mov cmp and xor rep push in mov mov push lcall sub fistpll aad insb add mov and xchg xor fs sub mov fdivl out out iret leave (bad) sbb in insl or pop xor test aaa mov mov lods dec mov ret out sbb out xchg popa adc fs pop loope push and fstps or movsb out lods out mov idivl popl and into dec jg jl loope in sbb insl and fbstp lock pop mov cmp sbb imul push push cmp mov ja iret (bad) or or lods out add scas out sbb mov push mov adc pop dec outsl sub jp xchg rorl mov add loopne insb add add fsubr repz or mov cmp jno dec mov fisubrl (bad) lcall test jae shll (bad) imull xchg int sarb ret adc cmp add jns or fwait pop mov aad cmp repz sahf enter or (bad) xor jb add dec int push sbb push (bad) or xchg pop jbe lock popf pop out push test out jne movsb sub (bad) jae xchg mov sbb jb shrl lds lods xor mov push mov or ja (bad) scas imul push das dec repz mov loope int out lds cwtl pop sbb pop xor repz arpl jno insb adc pop ljmp fstl test mov sub iret sbb dec xchg vcvtpd2dq pop jne mov stos loop dec mov mov les inc loopne sbb or (bad) xor add pop adc push scas pushf insl inc sub pop mov or out push xor xor int or stos aam pop xchg mov nop (bad) pop loop clc xchg fs popf add xor cltd iret adcb inc pushf jg jo into out mov fldl2t sbb lahf stc out hlt adc mov jl push out arpl insl push out jge cwtl dec adc adc (bad) loope scas mov mov in push iret out gs xor (bad) shll mov jno movsb mov out out xor pop pop cmp xor ret sbb incb xor and or jno outsb mov lock dec idivb inc (bad) js xchg out adc enter mov xchg imul cmp xor mov mov out (bad) mov sub out movsl cmp lahf mov mov sub mov xchg movsb push dec cmp mov fildl jo out pop add add jl mov jmp sub mov jns aad mov popf loopne xchg into push out daa mov mov out or in jnp incb mov in pop and inc push les (bad) jnp pop (bad) clc cmp (bad) mov jo sbb xor adcl sub inc out pop andl jb lods out mov push pusha pop out loop insb xlat mov jmp inc int mov fnstcw cs aaa push in cmc lcall push xchg jo fwait dec out adc pop sbb xchg fbld inc pop mov out inc lock cmp mov sbb jnp (bad) pusha out jecxz test call adcl lods ss out pop cmp jns je add test mov (bad) xor adc ljmp mov subb xor xchg and (bad) out pop cmc sub mov mov add ja adc mov xor mov or inc jae cmp or out cmpsb xchg cli lea jmp out lret mov jb or jne dec (bad) out add hlt ds pop push fistl ljmp insl out js and jp push imul dec out imul repz sbb jno push mov fistl jmp ficoml (bad) out cmpsl fidivr xor rcr jle jg push test pop pop lret pop out out outsb jb mov cli lock jo bound js cmp mov jmp outsl fucom mov add scas das fldcw lcall push xchg jb sbb stos fs and adc out xor fcmovne mov das fildll inc lret in lock sub dec (bad) std stc into popf jno out in aam dec cmpb (bad) icebp push js fnstenv xor out (bad) cwtl inc movsl ss sbb out scas imul lahf inc mov jnp add push jne xchg jp sbb inc mov cmp sahf mov xchg out cmp push in jg ds cltd out aam ljmp gs test sub sbb arpl ret pop ret stos rcl push loope inc icebp dec out mov push enter nop out insb inc cmp (bad) daa lret jbe es call mov jecxz or push xchg adc lds jnp mov push in (bad) jns or in mov mov xchg dec dec rcrb arpl das xlat (bad) sbb std stos jae enter out sarl adc out mov lods bsf jp pop lods pushf sub dec orl out ret test mov push lret mov dec sbb sbb push cltd inc push repnz scas js and sbb adc inc jle sub ret out mov xor stos out jns push inc inc fidiv xor nop (bad) (bad) imul mov adc aaa loopne xor lcall lret xchg mov call lods out ljmp dec out sub dec notl out pop repnz mov and push nop mov xchg out lret add xchg insb ret scas (bad) dec out (bad) (bad) fidiv imul out clc dec mov out mov mov outsb pushf mov and jg xlat (bad) in mov jae mov adc pop sub out inc out mov push fnclex jmp cmp push out stos aaa inc test mov cltd out insl aad and out xchg ret xlat imul mov ss imul dec out mov inc sbbb loope imul icebp fistp ja les clc iret decl ds fsubrl out add stos lret xchg pop in pop xchg lret iret ret pop ja xor mov stc ret fs mov out rolb pop out sub loopne inc out aas out xlat sahf fsubr movsl mov mov xor insb out xchg stos movsb in icebp push pop out push jns pop mov shr mov pop lds sub sbb dec lods cmp aam pop inc aaa andl xchg sub insl outsb cli cmp aad xlat lahf ret out dec icebp mov out mov sub out xchg popf sub (bad) mov jl add cltd out mov or push stos pop adc aad pop xchg mov mov fidivr add mov in sbbl mov fs jns inc imul ficompl cmp js dec ljmp ds in pop fwait xchg sub ss jle xchg out inc push mov repnz mov sub leave loop call into jmp repz cld xor adc add jne icebp nop jb mov push decb ss aad dec out adc cld leave iret jg,pt mov negl test sahf mov in scas test push push mov call stos out ret and roll fsubrs sub out insb in push inc (bad) dec out cmc mov hlt inc pop add and pop xchg in sub push ret out js (bad) fadds push cld xor call addr16 mov adc lock sub xchg loope pop movsb lds mov ret jmp ds out mull adc jecxz add in xor pop imul mov mov out adc sub push pop adc xor xchg or out mov jae loope shrl xor mov inc fcomps add pusha aaa cmpl sbb cmpsl push out push mov jl adc jno (bad) out add pop inc in ret mov xlat movsl pop push adc or pop fnsave pop xor cwtl imul daa push jmp (bad) adcb out inc clc ljmp mov out adc movsl or out mov sbb cmp jg je lahf xchg pushf fucomi outsl jp dec push pusha cmp add push int3 inc (bad) leave insb outsb cmp test dec add (bad) out adc decl movsb mov jns stc xor fcomi out (bad) mov sub inc pop repz pop in insl xor jns inc mov mov aad xchg ljmp aaa xchg xor xchg push nop out dec or rcr push add iret cmp xor adc aam (bad) adc cmovl pop out stos lcall popa xor daa jb imul mov daa bound out or mov push int bound or sti out out andl ljmp or push cld cmp adc push fcoms ss rcrl jne sub les out sarb xchg and xor pop jbe cmp bound decb pop xchg in xor imul ret mov jle inc cmp push sub push std dec jp and out aam aas push (bad) neg (bad) fisttp sub fnstsw mov jge or sub mov nop fxch and loop cli lods aaa out push pop xchg xchg xor out mov es xor jne (bad) rorl pop pop aas jnp add sti movsl popa out pop cmpsb sbb out lock fidiv fs jg mov sub data16 pop ljmp sbb sbb jmp test mov jne rorl mov andl lret fucomp (bad) push pop roll mov fisttp and out and in mov pop insl adc add xchg pop sahf inc cmp xor iret jae std imul pop in movsl adc out (bad) sub test out aad mov out inc and shlb mov xor insb cmpsl fsubs fisttpll pusha push xchg mov movsb sarb adc sbb arpl adc (bad) or inc leave dec sub xchg adc jae andl iret out mov popf sti (bad) sarb stos loop test fisttpll shlb bound es sbb shr mov jne outsb addr16 jle pop repz mov xchg out and ret imul dec lret in sbb les jb sub cmp jne repz fldz mov scas adc (bad) insl pop pop mov imull jns (bad) jmp cwtl mov add divl pop inc or jb lock push dec push jl cmp xchg dec out dec pushw mov frstor test out jle mov decb out sbb repnz mov cmpsw mov or and repz call js mov xchg out dec out or daa and jnp sahf sub inc out lret in inc jg iret jns push ljmp cmp adc sub inc dec les out pop shl fdivr push sub imul or adc mov push out outsb cmp ja out (bad) and popf aad (bad) sahf dec cli xor repz xchg mov sub fcomi aas js inc test std repnz xor (bad) stc je out pop pop pop mov out add push push pusha fadd xor inc repnz cs cwtl std out rdtsc mov and call scas or out cs adc xchg sub lea addb test mov repnz into inc movsl out sub jmp std popa jge mov ficomp cmpl out jne push insb or fldenv out repz mov cmpsl and rclb and add sarb out pushl inc inc jmp xchg lea cltd sahf out mov (bad) pop out fsts cmc inc addr16 jae bound jno out mov dec xchg cwtl push mov ret aas add inc (bad) jl cs sbb lods popf clc out cmpsl push cmc mov jl arpl xchg sbb pop sahf mov cmp jge add xor adc sbb dec push pushf cmc mov push dec stc paddd pop sub push lods out and out out mov adc loope outsb mov sub cmp mov (bad) jne out adc and add lods add and out in in mov js (bad) out ret movsl cli mov jmp cmp mov (bad) add jl pop jge jae jbe out jmp outsl mul mov scas sbb xchg (bad) out xchg xor xchg out mov jecxz pop out shrb fucomp mov aas out mov jmp arpl jmp or mov loop stc loop in mov rcpps (bad) adc jg inc sbb and out cmp add out rorl jmp out adc jno xchg out bound xchg push out xchg shrl inc mov cmpsb mov insb jl out sub sbb xchg cs jne xor ja push mov mov mov aaa cmpsl (bad) mov (bad) out int and mov scas (bad) sbb bound lock int iret test xchg cmc mov push push dec and out sub sbb cld loope pop out mov pop aam push bnd push negb lods sbb xchg sub aas xchg or (bad) push loope out in xchg adc insl inc dec out ljmp and icebp in rolb add aaa sub out popa mov into je (bad) dec out ja mov ret jne (bad) in ljmp out fbld popf test sarb cmp out in jne addr16 or mov js pop mov or cmpsb cmp mov xor jmp add bound out jmp insl sub sbb push (bad) in and pop jecxz lock out fidivr xchg add int3 add out ss sbb out scas int aam pusha sbb push out ficomp xor enter pusha out rorb inc mov jmp out cwtl out (bad) ds pop mov push in jmp out adc mov in es out je nop push or rolb xlat out cwtl shrb cmpsb aas out xchg xchg xchg repnz adc dec push mov (bad) adc insl dec out mov out cmpsl cld out fs jge inc cli add xchg sbb pop out outsb xor pop jl repz ret lahf outsb (bad) sar (bad) pop lock out xchg stos rorb sti mov add test gs call in jg inc push hlt mov clc daa xchg or ljmp or push mov push mov out stc (bad) shll dec inc out mov jo push sbb (bad) clc hlt adc shrl ja pushf xchg mov inc mov rorl dec ljmp jb iret lds jle jge jns out sub lret ja (bad) out addb test mov pop loope (bad) push cmpsl shl pop aad lock mov out cmc jno dec xchg sub sub daa in out or mov mov add mov jl and add mov lahf dec mov jp jo pop imulb sbb insb into std repnz mov mov fstl popf gs aam push out xchg mov shrb mov adc (bad) fdivs xchg out out (bad) pop loopne cltd push xchg repnz sub inc mov popf xchg lcall cmp push inc xchg mov fwait (bad) sbb out pop dec pop out xor pushfw inc int3 mov cmp mov incb leave icebp mov push in (bad) out test mov lods out ljmp leave out or mov (bad) loopne das insl ljmp out lods cmpsl pop jp lods adc in enter mov or out adc (bad) cmp mov mov cld push jge aas add xor enter pusha ja fsubrp rcrb dec sbbl fildll mov lcall lahf xchg fs lea adc out mov inc mov dec push (bad) data16 ljmp push xchg int3 out xor or jae pop in adc jecxz out rcrl lcall push pop xchg out mov xchg push fild inc fimul xor out mov and adc test out or lret inc fbstp loop push clc aad imul jmp stos sub gs sbb out push jp popl sub cmpsb call mov pop sub pop out popf cmpsb jmp jns push incb adc div add pop or add repz scas adc xor mov mov mov lds call int3 add clc jno jo jecxz gs dec push call out cwtl imul incb fucom xchg out in sub data16 adc xchg xor pop pop jbe mov ljmp iret inc enterw outsb loope push out dec sbb ficoml (bad) out jmp je cmpsl iret fs dec lock in mov dec xor addl mov std cmpsl or popa out xor lods fldcw mov mov fdivl out adc dec or xor fnstenv out xchg mov imul loop cli sti add sbb jne mov mov adc popf jg lods jg (bad) jge divl ret (bad) imul imul (bad) in and push inc sbb push sbb lods lods mov fimull and mov (bad) mov jp and jbe out pop daa dec (bad) push popl int les pop adc cs pop mov adc movsl fbstp push fwait out xchg mov mov test hlt mov out imul in inc xchg jge stos push jae insl nop stc mov or inc out (bad) mov out stos mov fistpl je jle add stc and out xlat and jae cs xor decl and push mov (bad) notb pusha out fwait dec xchg inc gs mov pop out int3 sub out jae movlps and rcll jg clc push or cltd and fimul mov lahf into jb push xor pusha out nop out sbb pop dec cltd roll in add divl (bad) jbe cmc pushf out mov inc xchg dec das push repnz ljmp add mov mov in fs (bad) and in push in add int3 clc nop es (bad) out pop stos pop cmc mov xchg icebp pop sarl or in push pop shr push imul div lret movsb pop adc xor scas adc je jl imul out mov lods xor inc mov mov cwtl (bad) bound or push popa sbb insl inc out out xor mov mov sarl aas or rol lock ret pop popa add lret cmpsb fbld mov fistpll pop dec cld insl fisubl out call or push jl push xchg out les cmpsb sub dec and outsl jge pop adc pop and or mov psllw ljmp xor out jmp mov jne sbbl mov and pushf out (bad) lret add aam into mov mov pop out fcompl sub cmpsl mov jg insb inc (bad) lcall xchg iret aas adc ds sbb loopne and mov scas mov pop (bad) mov xchg push pushf and int in js imul scas jp pop daa push je adcl xchg xor jno out adc pop out pop xor mov das out sbb mov push out and sbb push sbb mov mov inc cmp stc arpl xor adc fsubr mov out sbb loope dec in or out pop xchg mov cmp outsl int cmp mov mov nop insb push mov mov mov mov lock (bad) add sbb loop pop sbb xchg (bad) popa in xchg dec es pop push xor test or leave pop insl les (bad) jb mov addb inc fildll bound and out cmp cmp mov mov lcall push rcr imul push xchg scas add cltd xchg inc popa jbe cmpsb mov sbb sbbl out inc lcall xor push sub in aam out sahf xlat mov dec out aaa cmc jne sbb scas xchg out mov sub push ret pop ss imul dec call aad sti push cli addr16 mov jnp loop mov vpmaxsw stos mov push pop fwait decb and and mov jo arpl ja out inc nop and mov push out pushf je rep ror xchg lea dec fiadd mov outsb sbb jnp out loop outsl cmp jmp popa int pop jbe sub in push add out or jg out pop push repnz loope sub sarb call xchg mov mov jno push push int push std out push arpl out in mov add cli pop aad cld cmpsl outsl inc imul xlat (bad) ja (bad) pop xchg out xor jp jb ret outsb testl mov dec popf cmp shlb shl pop clc mov adc adc jmp mov cld lock scas test add cmpsl pop adcl call mov inc (bad) out mov aam lock ds dec out dec out lret repz add incb sbb mov fcmovne mov or ljmp cmpsb psubsw lahf inc sbb ds mov mov mov dec fldt sarl dec out mov jbe fcoms negb lods mov jl xchg and cmp mov adc push inc and clc stos xor insl push ficom iret rcrb inc out jle sub (bad) (bad) into das xchg dec lea adc dec pop cmp push lock mov (bad) loopne inc jbe das pop loopne mov mov jno std xchg aas inc in scas mov pop ret sbb jp lock adc in cmp test fwait outsl pop leave mov lea int mov jmp jl adcl mov or mov cli mov fxch decl aam out cmc mov add sub push outsl pop add jge jnp in jg out ffree pop push js push sub jmp daa jecxz pop loope jo ss out lretw icebp mov loopne jb fsubr mov mov andb outsl lret into repz xlat lods xchg and popf or ja out stos leave gs inc cmp sbb xchg movsb out inc push lret in and cwtl cmp add push push out pop xchg mov mov sub inc in shrl arpl (bad) fist xchg jecxz sub loopne pop js xor scas lcall mov subl (bad) adc ficom out sahf les in (bad) out pop mov sbb mov mov out lods insl add movsb (bad) push dec scas (bad) sti invlpga sarb (bad) test es popf out jl adcl scas mov fdivs out push mov movsl (bad) bound out addr16 xor decb div cmp cmp jg mov jo scas jp xchg out lock mov daa out bndldx push xchg xor and mov arpl out sbb and call loopne adc push out popa fstp mov loop and (bad) mov cltd mov std ret mov jp inc xlat pop out mov inc xor sub jae addb mov sub add mov dec sbb cli jne cmpsb xor xchg dec pop adc out inc sub outsb out jne out mov js mov push incl into out outsb lock sbb out lds sub mov sbb insb out ret daa fisttp xchg add cs (bad) push out adc xor in (bad) in iret ja pop mov ljmp movntq out or les pop mov cmp lret dec sub out xchg cmpsb push syscall pushf pop and xchg cli out lock loopne rcrl and das out cwtl mov xor add in mov jbe out adc xchg add pop mov (bad) insl sbb out sbb sbb and ret mov out jecxz icebp lret lcall out sub fcoml (bad) (bad) out stos scas pop imul shl add clc test mov sbb cmpsl sbb xor push fnstsw loop aad or inc pop dec nop mov lock fistp sub fwait push pop inc sti jecxz (bad) push mov dec mov push push sahf (bad) adc out repz sub sbb mov or adc cmp std sti out jl jle add xchg cld out mov dec out mov rol outsb adc out imull sbbb mov out push movsl push rorb mov pop bound mov enter lret pop into and xor xor or and imul jne or bound cmc in cmpsl adc cmp movsl jecxz je (bad) dec mov out icebp pop and jmp mov gs push add in xor out inc cmp ret sub shl movsb mov add jge fcmovbe mov sbb loope aas push std jmp sbb push mov out add mov jb in out idivb (bad) adc mov out popf and call pop lahf xchg mov out jle dec nop stos sub adc out stos mov xchg pop sbb pop pop cli push cld mov out xchg cmc pusha push aaa mov loope aad inc mov fs roll add into stc ss out jmp lret add pop push xor push mov (bad) arpl bound (bad) pushf mov adc outsl incb sub repnz jecxz jns nop dec push or cmp mov push dec vpmaxsw push (bad) and mov jl mov loop std mov or popf ljmpw pop and add ss lods out push mov xchg das les lret xchg out cmp outsl (bad) push lods aaa push pop and add pop inc ljmp iret or out ret jl push popa mov add fld sbb test rolb std shrl outsl out cmpl popf inc outsb mov mov pusha cli push pop sub push js std dec insb out fwait test dec pop inc pop adc pop mov xchg insl (bad) in jge test out into xor sbb mov aad ret adc popa and jns pop lods out xchg aaa int3 push pop add out pop mov cmp pop cmp in xchg lcall out adc push (bad) xlat cs call inc inc push sub pop mov aas mov out cmp or movsb or push dec lahf xor (bad) lock pushf mov jp jg paddd xor lods sbb adc lock inc pop cld dec mov arpl (bad) and loope sub shl iret pop scas in cmpsl notb fs pop inc popf jp pusha cmc adc (bad) in push push mov repnz por cmp mov and push out daa fimull or dec pop and pop rolb sub out ret lahf repnz xor mov add sub int3 (bad) imul jp lods mov out inc xor sub sbb xor ljmp and ret push icebp out sahf and test mov (bad) mov out sub jno push xlat jae iret (bad) imul dec jnp and mov mov lret test jmp sub mov sbb neg pop sarb out jl rcrb xor nop pop lcall push jno mov or int push call jp loopne or jns cmpsb sbb push inc mov dec and leave and cmpsb enter icebp iret inc je ljmp lahf mov push out orb adc or out shll iret inc fdivrs push jns xor add jb sahf out push hlt idivl mov mov mov outsb inc insb test lret jns nop xchg adc cmp jl cmp jle lock ret aam push jno fadds cmpl nop gs arpl out pop ror lea out lret or ja cmpl pop aas mov cmp into jmp cmp jg mov dec scas out out inc jmp or les xor mov xchg fbstp sbb shrb mov lock push out fwait jmp pop mov ljmp pop out cmpsl mov dec and xor or arpl out mov jo mov mov add out jnp and xchg or test out lock push push (bad) mov cmp loop mov pop jmp push inc mov push inc outsl subb pop repnz cmp out std aas and rcll out fs inc out cmc inc inc fild int and out jo sbb jb in xor test pop or push xor std outsb mov enter insb in mov out lret (bad) adc xchg out loop jp stc sti rorl (bad) cmp test fistpll ljmp push sti jb adc rclb push lods test cmpsb mov ja adc xor xor push mov lods (bad) lahf es sarb xchg out pop cltd test cmpsl xlat cli sbbl push jg xchg lcall (bad) fidivrl movsb (bad) cmp xchg daa divl or push xchg cmpsb xor lret das dec out xor jle mov pop popa mov stc push pop sbb cld fistp inc pop or xchg loopne lahf (bad) loop lods test adc decb adc sub iret add arpl in ljmp out mov fldt test int push or sbb add jb sbb div je aas add xchg movsb movsb inc out (bad) xchg cmp dec aam sub mov cld lods addb movsl mov mov stos movsb out mov test inc jno mov sub jmp jne popa (bad) out mov jo std sbb mov clc insb ret loope iret cli dec sarb adc inc mov iret out ljmp (bad) ljmp mov stos rcrl jl jb in cmp lods cmpsl mov js push orl scas dec xchg in insl lea (bad) loopne mov aam aad xchg shlb and cs pop push out fisub mov out push popa mov sbb (bad) paddd mov cmp mov out fstpt mov addb movnti in out (bad) jl sub pop sub dec or out push popf outsb nop mov les sbb mov push cmp add jno mov ret out lea mov mov mov out ret outsl pop inc cmc sub push scas sub mov push popa out sahf repnz bound mov pop mov add xchg inc insb mov sbb xor pop ss xor divb or jne cmpsb pop nop cmc sahf (bad) hlt xchg sbb inc add mov dec xor pop or cwtl insb jmp xchg test mov dec mov adc push stc mov ja xchg jmp pop es jne popa fdiv outsb cmc call clc (bad) in xor adc int out dec enter fwait roll mov pop mov (bad) adc cmp pop imul das loop fisubl pop mov mov pop dec lret push dec (bad) inc push pop mov cmp xor adc aaa bound inc pusha adcl clc or mov les fcomps push pop sbb xor fild divl scas ljmp jle mov aam out ljmp pop or in add and lods pusha dec out sbb (bad) jmp mov out loopne aaa adc pop stos out jae xor and push jno jae inc jecxz adc lds out lcall lret fs mov out repnz imul (bad) ljmp addr16 xchg push rclb jne scas repz fildll cmpsb pop sub imul int3 dec gs in inc xchg movsb call pop mov cmpsl cmc add xor cmp xchg sub jecxz loop,pt cltd iret imul arpl mov test jno push push shr push or cmpl insl pop and lods out nop movsb rclb sub icebp mov xor adc cltd jae inc stos or in sarb out cwtl mov cli xor mov xor and pushf jle cwtl bnd sar dec out and das (bad) xor out fsubs push lahf mov mov int aas (bad) ds stos shlb dec into jnp pop push add sti or int enter xor sub pushf out mov mov dec xchg add adc out lahf aas hlt les jns out mov xchg sbb add out mov popa leave adc inc add out aas je push push push xchg fs mov out cli dec lds cld pop xor out fs cli inc push jns mov mov mov jle jp fdivrs sub in out xchg sub push pop sbb jecxz ja cmpsl cmpsb aaa jg stc aad out or (bad) int3 or push addr16 sub lret pop in orb cmp daa jmp xchg addr16 out sbb push xchg out adc mov movsb jmp out push push cltd or sub in jp sbb dec das pop imul out iret dec cmp xor add es adc frndint aad enter and push test out cmp out fbld cli push (bad) mov mov das lock stos mov ljmp lods and fisttpll jnp dec dec ds icebp das lret mov xlat pop xor test movsb and sbb jmp into iret mov aaa fucomi imul dec add sub out stc pop mov sbb out sar mov out fistp ljmp sahf out xchg mov push xchg aad or pop add (bad) dec in imul rcl in push movsl test jg jae clc cmp and push fcoml xor out sbb test idivl jg lods (bad) mov jmp out adc lcall sbb push out jp js out (bad) iret repz sbb out in rcl fnstcw cmp push xchg movsl lods andl or ljmp xor push test mov roll rcrb imul ljmp dec jns mov movsl inc in cmp pushf scas fwait je pop pop icebp bnd inc test sbb test xor cld push (bad) lods fsubl out inc push adc xchg mov push cmp inc out lret fisttpll jo ljmp or loop pop (bad) lcall mov fisubr ret adc out jp sbb out mov dec add pop push push je mov inc clc xchg push cmpsb inc pop xchg fs out cmp pop mov out push xor mov dec (bad) mov pop lods decb outsb xor xchg dec leave sbb test (bad) out fistpl mov lret gs mov loop dec out clc decb call (bad) lods sbb or lods iret cmp jmp out or mov adc push pop out inc fild or cltd xor out and out push mov or cli iret dec inc fsubr inc xor jno mov loope js (bad) lea popf loopne sub sub mov int3 repz inc nop fstpt cmp mov js call mov enter adc sub pushl fnstenv pop sbb aam sub (bad) xor (bad) (bad) push gs sbb sub (bad) das or incb dec (bad) cmp push cmc inc outsl lock out in (bad) fwait mov in sub popf push cltd rcll lea push out xchg jle out sub xor jp mov lret mov cmp mov push sbb sub out mov scas dec paddsw in add pusha out xchg repz popf sbb sti out pop jg sub mov and cmpsb int out inc inc and or scas sub mov jp mov push sub mov leave fucomi mov out mov mov in adc in es pop inc sub push cmc call ljmp fildll push int movsl cmp call inc ja (bad) hlt sbb pop addr16 pop push les movsb nop cli out in and mov sub inc push cmp out pushf jb push fild out xchg (bad) fwait movsb das (bad) pop outsl xchg stc pop lock loope dec fbstp inc call ljmp mov rorl dec iret and push (bad) out test lods (bad) cmp (bad) mov or dec lods pop jmp nop out pop lret add mov fwait jne cmp sbb out stos pop xor pop (bad) ficoml cmpsl out xchg sbb scas (bad) (bad) (bad) dec shr movsb jno xchg lock iret fs adc adc lahf jl sbb out adc pop decb cmp out dec pop push sbb cwtl dec xchg push ret nop in xchg mov roll push dec out mov sub arpl push sti sub out out out xchg dec mov out (bad) outsb movsb sbbb int3 push out or loop setns jg sbb out xchg and insl cltd xchg out int or jmp iret xor and (bad) or nop (bad) ja sub std incb pop push adc mov mov and push push xchg lock mov test cltd pop pop push cmpsl dec arpl in adc mov ljmp inc std push movsb ret cmp or push iret pop xor fldl cwtl stos dec dec nop pop jl fsubl rol mov add jns pop in cmpsl leave pop rcl out push fstpt daa pop lds mov push inc call (bad) stos dec enter xor (bad) (bad) repz jb frstor lods sbb daa fild out out jmp push out mov arpl sub out mov jl shlb out inc aam adc (bad) xor pop inc lods std cltd fbld sbb pop pop (bad) cld lret in xchg mov (bad) std out mov jp fildll fucomp test mov jmp mov enter fcmovnu es lcall (bad) jmp gs fdivrs jne out add and out ficomp test mov (bad) mov out mov sub ficomp fs pop ss push daa push call mov lret movsl hlt mov out decb test repz out jns xor and cmp pop movsb sbb sti add pop imul cmp inc adc and jmp int scas xchg push ret mov fcompl or idivl add push out out mov xchg or dec mov sbb dec dec inc cltd push and inc jns jg cs lea out dec mov ja mov out xor push xchg loopne cmp mov lcall mov fbstp inc scas call cmp or push testl out mov or pop out or leave xor jmp je jne sti (bad) lods stc xchg mov repz cli jo,pt xor xchg ja push sahf cld cmp test adc aaa ret out negb xchg sarl ret jg bound out mov out ljmp mov xchg lods fs inc repz jle cmp sub call or je loop inc out push mov decb ret xor sbb pusha pop out int3 adc stc xor cwtl sub test adc push shll add int3 mov out adc inc sbb dec mov (bad) sub mov and lret adc das mov in mov mov dec inc pop cmp iret mov pop shr mov push pop int mov aam sar call push inc insb je decb into imull (bad) xor inc xor in ds test pop or xor push cli out xchg pop pop push add (bad) xor imul movl repz push lea push jmp mov xchg fnop sbb inc out out and stos inc out adc add in lods add iret push (bad) in mull xchg jno popa xor inc dec ss fsubr mov int inc xchg push push adc push jg cmp xchg mov into popa lds popf loopne (bad) dec (bad) lret jnp in je cwtl addr16 pop add jle rolb add sbb aad lretw addr16 pusha jo js or sbb in pop aas lds loop mov mov out test or or shr mov (bad) shr or pop sub mov (bad) jmp iret enter out fstpt mov out push fisttpll and xchg pop (bad) fisttp mov adc adc inc push in call pop dec test inc jo mov int3 pop adc cmp cwtl dec xchg (bad) and cmpsb fdivr popa lea xchg out xor sahf add sbb inc test imul cmp cmp sub jle in out outsb xor stos in cmp xchg gs sub aad repz repnz outsb or jle out out fdivr out xchg repnz mov sub pop ljmp push out loop add out xorl pop inc loopne shr xlat push lahf fsub (bad) push out outsb xchg and cmp mov pop out sti pusha add out in incb mov inc dec pop imulb inc cmpb and js pushf aad jb jl dec xchg add cmp push dec loope mov aaa inc testl cs push outsb es pop rcr stc add mov or mov cmpsb fs jb (bad) out sub out xor clc pushf pop popa jne fistpl call iret xlat ds cmp fs ret rolb fbstp xlat pop push bound or out dec (bad) arpl xlat fs out adcl xor shl pusha (bad) pop mov jg ljmp xchg jae adc jns test es insl add fistpl out loope add adc add repnz mov out (bad) cmpsl das adc or inc into dec and popa out adc inc (bad) outsb dec (bad) int3 pop push push fsubr jbe and rcrb daa icebp pusha push out call in aas dec rol test orb push push sub sahf mov aad sub in jne outsb out lock loop mov inc cmp sub jb (bad) ds out xor jg jbe in test fisub iret out loop mov (bad) out daa push aad mov ss jb leave inc das iret out pushf push insb cmc mov mov jge out jne je out sbb or mov in aad mov sbb inc push inc sub out dec mov pop iret std push in in (bad) int3 or pop out out subl lret out mov loope icebp push cmc les pop xor inc out loopne out push cmp inc out dec add pushf jmp mov inc and out (bad) jno mov out lret and add cmp push cmp lcall test jno out push (bad) mov and imul insl in das out mov jae scas push in out loope xor daa je out je mov popa ret out mov or imull (bad) pop in cwtl jbe jg int3 push imul (bad) jmp int xor pop clc mov mov in pmovmskb in aas fbstp push sbb inc mov inc test outsb call (bad) idivl out xor aam inc out out mov mov xchg xor mov jne or in cwtl (bad) decb and in jmp pop andl sbb jns add cmp or sub cmc dec leave mov int rcrb cs dec or jo xchg mov mov cmp mov adcb or nop jg sbb inc xchg clc fsubl add dec fwait cli out lahf push (bad) sbb loop adc rcl jg (bad) mov das mov pop jmp incb insb ljmp xor std adc jle pusha xchg pop mov out cmc or popa out push dec dec xchg (bad) into jg out add push in push rcl xchg shr scas and in jecxz add xor mov inc loopne (bad) ljmp out sti mov sbb cltd (bad) shr dec orb xchg cmpsb push push jno xchg add out dec movsl lods sub xchg jl sbb mulb pop adc pop (bad) jg mov ljmp cli or dec insl lret and out pop mov out cld jg out mov or pop add out jb cwtl mov xchg mov pop out loop fcompl sahf ds popf push jns mov xor dec movb xor mov push data16 out inc ret scas dec push bound lahf outsl mov ret jecxz xor out adc inc iret sub mov inc out inc jbe scas add sbb cmp jle mov dec aaa rolb xchg push jnp icebp mov push inc (bad) xor xchg add lods push cld out mov stos push out ss xorl sub inc popa (bad) cmp aad cld jecxz lods call pushl adc push out inc jle jp insl push out adc dec xor int3 imul popa arpl out jnp mov int3 out and pop add repz out inc or movl (bad) out out jns lret and dec out jp pop jno icebp test movl mov loopne out lock push adc das jno out adc pop xlat pop mov in jbe mov xchg cs mov xor push stos out sub lcall inc xchg push shlb xchg (bad) out fsubl cwtl adc mov daa jmp xor bound (bad) arpl stos ret jl outsb xlat lods out jae in (bad) ret pop mov sbb insl in outsb adc out fwait pop int cmp cli or dec andl sub sbb popf out ljmp push ret xor cmp or pop and fidivrl aas mov out lret scas mov push pop pop (bad) cld aad sub push mov jge out mov sbb (bad) icebp adc jno sarb mov sub sbb popa loop out push xchg insl fucom sbb pop jmp pop jmp int3 lea popf out outsl pop mov adc add out mov inc jg js sub fs cs pusha cld aam add lods lods fucomp xchg jecxz out sbb lea or pop enter mov cmpsb out lods in rorl loopne sarb mov or adc jae push fnstenv adc jge loop imul inc int inc xor sbb enter adc iret faddp out sar xchg pop mov cmp jecxz cmpsl mov pop jno dec sbb out xor push mov mov adc xor cmp sbb outsb (bad) pop jne sub (bad) jecxz rorl in iret shrb movsl jg pop or scas sbb (bad) addr16 mov inc xchg aad pop out push sbb mov je out mov dec sarb cmc mov out out stc push jo mov rorb out pop mov mov (bad) mov in pop mov push sti ljmp jge mov in (bad) xor xor dec (bad) jae lret cmpsb out imul outsb jns gs mov out xor push nop xchg insb xchg jno pushf jp xlat push cmc dec out jmp loopne xchg dec (bad) push push fbld xchg adc inc cmp cmp pop movsb fsubrs dec sbb push adc xchg pushf xchg pusha lds test insl popa aas fs loopne jmp loop nop jge xor out xchg pop add xchg fild pop fwait loopne pmaxsw pop (bad) out xor in divl and les (bad) mov add ret aaa scas pop out dec test mov jmp in cmpsl loopne cltd iret sbb pop xchg in cmc push arpl lret shrd lret bound scas out cmp je pop xor outsb gs test fstpl cmpsb add outsl in xor call pop repnz sub out or mov in lods test movsl jg fldenv mov xor inc out insl out cltd js xlat testb cmp popf lds lods sbb mov out int3 test popa inc push jmp out daa dec jnp out (bad) pop xchg mov ss pushf repz rorb out ret mov out scas jp popf imul jge pop pop or (bad) jmp mov cmp idivb xor cli add jmp pusha into test add pop (bad) in push adc mov and mov ja mov out iret fild test hlt mov pop out loop addl out cltd mov push out out push ljmp ret test fstps in jbe shll mov cld sarb insl out cmpsb mov je jmp or adc jnp add adc loop bound clc enter jbe cwtl mul mov cmpsl and aam loope mov inc dec jg mov (bad) adc dec pusha rclb out jae mov addl nop into cs add sti sub int3 mov movsl out imul xor lock xor or dec mov xchg aas add (bad) out (bad) in push and jnp jg stos out pop nop pop aad int3 mov add call sub repnz xor out and imul fildll mov rcrl adc xchg jle xlat call xchg popa mov jno fisttpl pop loopne jmp jl xchg out jle mov std xchg icebp dec pop clc pop mov arpl sarb (bad) mov push cmc mov stc stos out mov mov in add int3 (bad) and out out cmp rcrl (bad) out pop mov pusha and adc aaa mov out ljmp xor sub inc jmp mov imull aaa (bad) pop add jecxz dec arpl out sbb clc jb ss out test xor mov adc pop popf out push add xchg fisubr mov (bad) pop mov (bad) out imul mov mov mov push jl imul (bad) mov out clc xor loopne sahf push insl out jp lods push xchg loopne lret pushl pop push jno sub dec out push popa out jg mov jb rol dec xor push out push add pop repnz pushf cmp pop cmp push cmpsl std mov rclb cmpsb imull icebp cmp (bad) ret out clc pop (bad) lret mov enter bound adc in pop jge,pn out push dec stc jo cmp int out lock mov xchg push clc pusha pop mov js push dec or pop mov out (bad) loop mov mov xchg jb or out add test inc stos sub (bad) sub (bad) and stos in add push and fmull lret or in (bad) (bad) aam fs int3 sahf or fwait inc pop or xchg je jbe jmp mov cs cmc mov lds inc jmp jb adc imul add pop dec cld ja mov cs out add jge leave test aaa inc das xorb mov int3 inc cmp mov fsts or int jge or clc fistpl test adc icebp adc rorb or dec aaa fwait out mov mov xchg hlt add push pushf pop (bad) roll sub sbb jg ret pop out test xor lcall out out push and xchg pop out inc test cmpsl out lret xor pop loop,pn jno push jns and icebp xchg out (bad) mov loope into daa pop out fmuls push sub jne dec pop cmp loope inc mov lds (bad) or or push pop lcall lods pop xchg out mov test aad ret inc dec push jg repz jle pop loopne hlt push out add mov scas out mov cltd lret xchg nop push pop das or mov pop mov mov push fdivrs fdivrp ss and (bad) jo out out inc ljmp add out pop sahf sbb incb stc mov dec or test and adc add mov stc outsl jge xchg lcall repz leave jp and mov mov bound adc xor push pop inc js out xchg sbb add cmpsl mov xchg xorl into into xchg dec xchg js sub jp out sub jne (bad) fsts leave push add (bad) mov mov xor xor inc pop in (bad) (bad) mov aam and loope test outsl push dec nop jo pop inc pusha out sub push pop adc inc ret out (bad) cmc mov out outsl sub push (bad) fdivrs xchg jge fwait test sub pop xchg dec data16 jg fs test iret out js leave (bad) mov test cmpsl lret push lods cmp and adc nop inc in jo (bad) icebp iret enter xchg mov lds test out adc addr16 mov (bad) fdivs into xor in mov mov aam sarl gs orl dec pop jb push cmp out push aam mov outsl cmp out jnp ror insb gs xor inc clc lahf pop pop push xchg xlat out scas mov push lock shrl mov mov daa (bad) incb push sbb ljmp push lock mov jg jnp loopne mov das sahf leave popa sahf out sub scas out mov or adc adc pop push negl mov push push fcomip (bad) in push add and ret jg inc xor xor imul sub xor (bad) or call out and add jbe out lods shrl dec xchg pop ljmp arpl enter mov out imul pop out sbb pop repnz pop in data16 ljmp sbb add add gs popa out inc imul and dec test mov outsb lods clc (bad) (bad) ss and dec je out fdivl in out inc outsb jmp sub jne movsl cmc out (bad) mov inc inc out ljmp (bad) (bad) repnz cmpl inc bound out sub fcom and out (bad) push jle push pop adc or out add rcll stc add xlat fnstcw push xchg out mov insl jg inc lock (bad) jmp pop xchg jne shr pop push out xor push lahf out into cmp je lret inc adc fiaddl out inc fnstenv mov (bad) jge jp les inc es or xor cmp adc aas test pcmpeqb aaa out sub lds inc or jae jb cmpsb aas out out cmp mov out pop pop cltd iret xchg add out mov aam (bad) sub mov dec jmp pop sbb ret je mov out adc xchg sbb aad ret stc jmp dec sub mov sti call mov arpl loop mov in insb aas ret shlb loopne or out pop cli std in rep adcl (bad) jno movsb mov lock pop dec jp xchg mov (bad) cli pop pop or push mov idivl jno (bad) fidiv pop sub and imul mov adcl sbb or jae cmovg xor inc mov add subl decl nop pop mov aas or add dec xchg es sub imul mov neg xchg out jo xchg mov movsl sti push loopne ljmp push scas jns push pop mov xchg pop out (bad) or sub sbb (bad) xchg lahf cmpsl shlb adc cwtl mov cmpsb jo pop mov insl out add shlb enter cltd aam in dec sbb and mov out pop (bad) lcall jecxz push or test dec daa sub subb je ds std decb dec insb adc push out sbb jnp nop mov sbb mov dec loopne sub lea stos mov hlt xchg ret mov out movsl jbe inc xchg and xor cmp or clc adcl mov in sbb cmc out jnp int pop lods outsb or jns (bad) lea popa out aas (bad) push cli sahf adc add imul aas lods dec mov mov or popa leave out mov pop in out mov adc adc mov ljmp sub adc in jmp shrl outsb mov jp bound cwtl shl aad jb adc cltd imul mov test data16 jp adc or pop and out jge decb push fldenv stos in pop sar arpl in cmp pop je fdivl outsb xor pop or cmp add push cli out repz jecxz or fbld push in (bad) rorb stc sub mov les aad int push outsl lods test in fmull jmp jg ljmp sbb xor mov inc xlat (bad) (bad) out outsl mov and test xchg out mov push sbb sub les adc addr16 mov xchg dec out pop lea rcl adc add xchg cmc dec xor xchg hlt sbb daa mov push (bad) out jle test pop pop jmp jmp cli sbb js xchg popa loop adc mov xchg and adc lods sub push jns inc js push imul dec out lahf mov test jge or mov jno jecxz rclb das lcall push and sahf out fstpl ljmp sbb js xchg mov cltd jmp push aam push fsubl sub into jecxz and inc out or aaa inc (bad) pushw rcr sbb js je out mov push add adc xchg adc inc mov (bad) push inc dec out or scas jecxz rcr xchg or dec push sbb cmp push cli sbb and push out adc lahf adc dec mov mov loopne adcb pushf movl negl enter out (bad) daa pop or lcall dec push adc out ss lret mov loope mov loop jbe jnp mov push test pusha dec lret sbb push fnstenv sahf pop xchg arpl mov movsb inc xchg test dec inc or out lods jmp out psubq int sub ljmp iret mov into mov xor mov dec mov inc mov mov mov outsl bound sbb sub and or jl cmp adc inc dec daa sub nop pop mov pop iret push jno push fwait popf or outsl xor (bad) imul test iret ljmp out jecxz ds pop push (bad) fldl cmp out add push in repnz sbb jg out stc movsb push repnz pop roll stos mov xchg out ja and sbb out das iret sahf jg shr xchg out sbb repz mov sbb mov xchg (bad) inc cmpsl (bad) ljmp loop inc lods out hlt stc pop push adc (bad) dec mov jb xor pusha out dec push xchg decl outsl enter insb push lock inc cmc je out pop xchg daa mov mov jg out jecxz xchg mov and out fldcw adc jp stos (bad) out lea cmpsl aaa hlt or add pop insl add jb jno inc mov nop (bad) das dec out lcall and dec rcrb iret imul out jecxz push mov (bad) xor outsb or push jb ljmp inc cld movsl cmpsl in stos hlt (bad) push cmp push (bad) cmp or mov stc addl sub outsb push fistpl jmp ja sbb outsb shr out sbb jno stc push jo or pushf jge add imul outsb adc loope jmp jne out and out add jb adc leave in sbb lea push xor mov mov je outsb inc fcmovnu out mov out es pop je and (bad) call push jmp cmc sti sbb dec sub sub add test lea shl add sbb pop mov mov lret inc mov movsl push icebp mov xchg or jmp imul icebp sahf scas loope out subl jbe out lahf ja popa adc lock out fwait mov in pop int3 or add xor cld sahf pushf jae (bad) sbb in test jge lods cmp pop out (bad) insb fcomi pop in mov vmulps out int3 enter pop nop lret lock in cmp call xor and ja mov sub imul js mov (bad) xor (bad) lods and dec adc mov mov xor in sar pop shr sbb out mov xchg roll jle pop in push and aaa stos sbb xchg in inc push shrb xor dec dec pop int out xor (bad) adc sub mov sbb fnsave sbb out xchg or test push ljmp loopne addr16 xchg and inc pushf out mov jp ljmp ljmp sarb bound add mov cmp cld jg mov adc insb pop or jp pop in mov (bad) sbb je xlat cld mov out (bad) jbe mov out xorb pop and out fist outsl iret fnop add call push (bad) (bad) aas (bad) and dec sbb pop pop xor insb push pop imull cli jbe ficompl popf ljmp fnsave icebp pop push jecxz add test mov push push minps push add es pushf roll dec (bad) int pop repnz test ljmp dec xchg jge cmp jo xor out push jae ret push rol mov (bad) cmp xchg or loopne popf xor lret inc xlat sbb or leave out or aaa jno fildll repz in and movsb lret stos cwtl out mov popf and cs fisttp xlat mov add jmp jb xor repnz jbe sbb out jecxz adc out sub loop mov mov ret xchg and mov ljmp repnz fist add xchg adc ja or les and jno dec mov dec clc add out jp arpl jbe out pushf imul repnz lret xchg fs adc xchg insl dec les scas gs mov ret stos iret mov dec lret sub jo jl lods div out adc sub popf push pop mov xor inc dec shr jno add xchg hlt add xor insb mov ljmp (bad) xor repnz js pop jnp lods rcr out push jb ja mov cwtl out mov imul sub pop loop and push dec iret and sbb cs sti and decb out fsubl or stos push inc and pop inc repnz xlat cli pop xchg push loop dec out lcall jmp cmp mov (bad) out pop scas fcompl movsl ror aam icebp mov fnop or push pop jle cmp loope lds mov clc out fdivrs das push xchg ja fbstp lock in sub pop ljmp test adc adc or jge dec lahf push jmp push aas xlat add ds fcomps test sub pusha jo imul sarl xor mov push inc cmp dec xor sbb jle loopne stos or js (bad) jbe repnz ss jnp std or push xchg lret mov lock mov out popa in sub pop out pop add sarl push dec out aas push inc dec aam push cmp sbb mov cmpsl fdivrp inc pop test (bad) sbb jnp dec in out adc mov (bad) pmaddwd pushf jmp mov into iret adc add ret das rorl repz xchg jbe lret or (bad) icebp mov out cmp fcmovnbe mov pop movsl ljmp sub dec out arpl inc data16 pop out shlb lret jg rcl sub out stos inc hlt jae adc add sarl imul cld out lahf test or fwait xor gs mov mov outsb push popa out push or xlat mov lcall inc pop mov call dec add mov jmp mov loope in xchg adc add (bad) stc lret das pop out in mov shr push test inc inc pop jne mov pop outsb mov dec fiaddl bound xor adcl mov out add adc out test cmp xor xor jge je pop inc rcrl out add sarb out (bad) aaa dec add mov int3 decb jmp ds das mov jle out cmp cltd (bad) sub aad and mov and and (bad) xchg fidivr imul mov mov lods jbe cli ljmp out pop data16 call jne jle push sbb pop or (bad) sub cmp rcl push (bad) cwtl jae cmp loope lahf push icebp out sbb jg xor movl mov inc xor in add rorl cmpsl xchg push addr16 out mov fdivrl (bad) out mov leave aam sbbb mov in test xchg stos in inc jo aas push ret outsb out scas xchg inc push (bad) in mov mov out xor bound out cld xchg dec xchg lret (bad) popa jge fs jnp push (bad) shl rorb push out dec xchg test jb stc push ljmp (bad) pop add in or into fsubl outsb push addr16 bound push push rcrb popa test pushf jae jge adc or pop mov adc enter out xchg push cli out shlb aas lcall add movsb (bad) imul sub pop je arpl lahf push xor pop mov pop cmp out stos push sbb jne jge out adc mov notl (bad) int loope in test std imull mov cs sti or in stos add cwtl clc push inc adc (bad) xor add adc pop repz cmpsl xchg jns psubq out lret add cli bound pop jae push sti xor in mov push inc xchg aaa lret in in add mov fcoms mov pmaxsw cmp in mov rolb dec out (bad) mov lcall jno mov jecxz xchg mov jae outsb ret orl sahf add and xchg outsb scas out cli leave xchg idivl in das mov loopne or inc out addl out add test in (bad) mov and es out pop mov jg mov add loop callw pop aad pop inc jmp sarb mov jne cmp loopne out clc or lods push pop cld xlat addl dec lahf mov idivb pop push outsb out lahf add (bad) (bad) xor bound xlat and out mov sti inc ljmp out jmp int3 xchg pop (bad) mov out or ja in mov mov aaa xor inc sbb sub (bad) (bad) lahf add sti adc sbb push mov xor cmp cmp jbe and out imul inc push pop mov pop push (bad) jbe jnp mov sub test xor clc int jge out aaa sti xorb lcall out cli gs mov pop stc sbb jmp xor jle jo mov repnz nop fcos mov pop jo movsb mov pop inc rclb daa test mov into jmp dec cmp (bad) rorl test xchg aam inc pop cmp ljmp push cmc add scas cld out mov (bad) pop push jo xchg out pop out xor aas loopne (bad) jbe ret out fisttpl mov arpl fwait stos (bad) lods dec jne cmpsl outsb add out sbb sub inc dec es insl ljmp out cs jecxz ja popa lahf adc cmpsl and jne mov out fidivr loope shl ss xchg mov out pop jp push mov cmpsl mov int pushf nop ja adc test jl out lods shrb into jge push mov cltd pop pop loope fisubrl mov mov mulb (bad) rorb add xlat mov clc adcl xchg fdivrs push and sub sub pop cmp push outsl fidiv pop enter push out bound incb inc testl cmp (bad) jmp int fild fidivrl stos cmc out xor mov test out sahf mov cmpsb les (bad) or adcl in insb shr mov pop or mov scas jo subl push ds push out cmp add cmp in dec std xchg mov out xchg iret clc movb push out js sahf lret inc xchg cmp out mov sub inc xchg mov mov stc or mov cmc int3 out lret ja hlt dec cwtl xlat inc out cld insl clc repnz in iret cmp pop jge ljmp out imull mov out (bad) and push daa xchg out aas sub aaa pop (bad) cli paddd mov mov pop out mov outsb adc cmp pop (bad) (bad) dec sar push in into out inc daa push mov cmc cmp popf lcall jge call jne jnp xchg (bad) outsl out pop push mov std jle fbstp cmpb jecxz xchg pop out lea push sti cmpsb test xor loopne (bad) jle cmp sbb pop mov ret out adc cli cld pop ret mov out push push jl std test stos rcl push fwait int leave ljmp and add or outsb out aam pop sbbl nop out mull daa and cmpsl stc sti adc inc pop inc aad out fwait imul push int3 lret out mov pop mov and adc dec stc push pop in push out push cmpsl push sti sahf push scas and shr fstl push push les out insl cmp das dec inc int out sbb and cmc test mov sub pop xor adc fdivl out jb into or inc pop and jbe mov lods sbb mov fdivs jbe push and outsb or (bad) jnp push and cli jb test out int ficoml push inc imul sti stc shl out push sub dec jmp pop out lret scas in cltd test sti daa jnp std aam inc bound jecxz int3 mov fldenv mov xchg jne in pop pop adc repnz dec and inc adc mov pop negl lcall pop pop loop and loope test or js xchg mov scas out mov int3 imul inc push adc test mov sub push iret les pushf mov out sbb (bad) daa push gs out push dec sete xor inc popf mov mov pop sub (bad) mov xchg pushf stc add popf (bad) ljmp je dec xorb test outsb dec add push add in jbe dec divl aas aam data16 nop and out outsb ljmp ret out leave mov jb jo (bad) fistpl ss ljmp jno adc fbld loope jmp (bad) aaa out lds imul (bad) out cs cmp mov shr pushf push stc (bad) repz cmc xchg xor lock mov sub mov cmp push push push jmp adc mov ja push lret rcrl out sub cs out pop fstpl out aam mov repz lock out inc adc add push xor arpl mov js cs jns,pt loopne fwait mov out fld xor sbb scas int dec and out cmp sub loopne cmp orb inc rcll (bad) cmp sub int dec enter xchg ret movsl (bad) call repnz cs (bad) out stc lret (bad) sub mov xchg js fcoml jecxz imul or pop aas gs into jmp push aam push test repnz pop dec adc sub push lods (bad) in xor mov push xchg pop std ljmp outsl adc out stos add aam fsubl inc pusha imul cwtl inc xor mov test xchg cs imul fimull mov ljmp aas out mov sbb cmpsl stos xchg aas mov pop pop pop out sbb sub jbe adc dec pop mov loopne out icebp fucomip mov add pop push std out pop insb cmp mov (bad) out adc imul mov pop mov outsb inc inc in sub lea aad xor scas shrb sub jne aaa mov mov hlt sub sub repnz push push mov scas sti iret out mov cmpl pop in negl ds adc hlt add or lahf (bad) mov and add jmp out iret jp sub push out adc pop cmp xlat mov jo test inc sub adc ljmp hlt stos or add dec out sub nop andl push xchg adc out pop fwait mov sub jp add out or lret mov sub ficom out in inc stos or pop mov js or ficomp push bound imul into cmpsl stos fstpl push in dec mov push out movsl cmp out pusha adc mov out fisttp sub xchg ljmp cmc dec out mov fstps shr repnz std inc xorl xor fsubrp pop test dec add sbb push aas cmc fild mov popa lcall aam mov addr16 mov bound sbb dec cs mov mov mov jnp jbe hlt jecxz cld out aaa out (bad) or dec push xchg and out adc repnz cmp sub mov cld push xor outsb jp mov pop cltd test in (bad) mov mov jno mov dec or scas and xchg sub mov in lret out shrb (bad) out mov js movsb mov and hlt (bad) (bad) cmp xlat fisub xor scas pop rcll test je mov fwait jle repnz std icebp mov jno out popf jmp push fsubl ja ss scas jne es xchg jg sub insl aas (bad) in add addl divb mov cs fbstp jmp incb in lds ret lods and pop shll sbbl shr cli movsb cmpsl leave fwait push stos out or dec stos sahf roll out xor cltd out xchg mov mov (bad) sbb repnz adc outsl cmp out jb xchg jge subb pop and out cwtl cmp mov out jp adc push sub pop out es adc jecxz or inc lret mov out jo xor das jb mov pop in pusha maskmovq testl mov mov rorl out cmp and pop jl negl fs icebp push jae in in shr sub mov into out pop push dec inc mov push insb jmp sub lahf push jg xor ja (bad) (bad) mov jo insl sub inc and rorb xchg push jb xchg or gs fsubr incl es stc insb je sahf and fucomp mov adc repz sub push in out clc add sahf jns pop cmp imul (bad) mov clc sub cmp push lcall and jns (bad) out les rorl loope data16 sbb mov xchg sub dec out xchg orl nop or addr16 mov cmp or shl xorl mov in mov pop gs shr pop sbb imul jecxz pop in shr fwait xor xchg out sbb adc ss mov (bad) mov out into sti push pushf out les (bad) mov push cmc out test or push dec mov lret out xor sbb imul mov xchg jae pop out fcom int3 cltd out push push lcall xchg out pop mov scas jb daa out push xchg mull mov fstpl sbb or pop out ret fmull rolb insl out popa xchg std mov movsl dec lock and push pusha bound mov xchg xor pop out sbb pop stos sub cld push jno out xchg cmp pop rclb mov sub sti and dec lea jbe lds jae testb cmp jne mov out movq dec or push dec das xchg ret and jbe (bad) mov (bad) mov jno adc jge repz decl sub imul hlt les xlat xchg ret out adc or in jbe ljmp add pop and imul push lock orl ljmp (bad) fmulp inc shll jmp mov push into dec pop call jmp push repnz sahf xchg shrb mov cwtl pop rorl aad xchg loop sbb (bad) jae cli sub in mov popa repnz rol dec jmp lods dec cmp adc aad ja cmp jge sub ljmp jl shrl sub jbe sarb lods ss out add ljmp rolb and mov out dec test repz sbb jno addr16 out aam mov (bad) adc sbb add stos mov cmp or repz out mov fsubl ret adc ljmp js insb pop adc jns add cmp aad popa adc cltd out loope pop push insl daa xor (bad) sbb arpl es sbb or inc les daa imul loop sarl lea (bad) fsubrs stos out imul inc dec scas fidiv rcr test int lock cli shr sbb dec pushf mov mov ret and outsb cmp pop sub push (bad) sarl mov dec int dec and andl or push mov scas (bad) pop repnz xor subl and and inc int3 xor nop sbb ja arpl ficomp loop cmp in insl xchg out pop lcall out jo bound es inc aad mov out jmp mov push add clc add arpl insl out rolb pop sbb dec loopne jecxz xlat out in jae push popa pop out xchg mov gs lods addr16 inc in jns xchg lds out inc lret je jl in dec movsb add (bad) xor mov jns fildll dec mov xor (bad) rclb pop sti stos pusha jae lock jb iret aaa xchg mov andb in (bad) xor daa add jecxz and cld out jne xchg push div dec aaa out lods call push outsl cmpsl mov psllw add in test mov inc jle ljmp xchg xor shlb popa out or and sub imul mov lock ret out lods adc or cmpb and popf cwtl fs daa shr fsubrs inc push out jno or hlt nop lock out or push leave scas rclb dec xor jbe out sahf pop rcrb out fldl mov out push stos (bad) stc ret or decl pop adc out ljmp loop pop inc rorb add notl enter jb mov adc sub dec xchg out adc pop or into int3 out mov pop mov pop out cmp jbe xchg loopne mov out mov ja orb imul loope mov loope lods js out mov out lahf leave popa sub insl and rclb pop jmp mov add jne pop (bad) jno jecxz,pt lcall out pop push pop or xchg jg or gs sbb pusha repz lret pop stc ja xchg es xchg ret add scas cmp sub add fisttp or out lock pop adc dec imul sbb pop mov aas xchg dec push cmc pop push nop fdivl add pop adc cltd pop add enter div out clc push lea aam mov in adc cmp repz clc sub js pmulhuw mov inc jl pop orl mov jne cmpsl jo data16 fnsave or mov mov aam mov jbe sbb loop testl push or cmp ja in lock jg xchg pop sub psubsw lret in dec shr int push jnp in inc sahf out jle mov gs jb (bad) jp call dec pop mov bound pop pop mov jge imulb pop out adc cltd test jns xchg lock ret pop (bad) sub push popa mov pop xchg jle jne push in add out pop mov clc out mov pusha out fnstenv jp aas repnz sub std insb out into fildl push pop hlt mov rorb inc jb cmpsb out je fiaddl aaa or jl les xchg add in pop leave xor decb xlat lods je xchg es les out add into (bad) out sub pop add lret jo ret imul (bad) jno stc aaa mov jmp sbb pop mov mov rolb out jns cmpsb lea into outsl out xchg pop dec push ret push cmp iret (bad) testb scas movsb mov xchg dec push xchg ds das adc inc xor sbb out lock add mov push sub dec and xchg adc jmp clc or pop sahf in cs aas push mov lock add in mov insl pop movsb push push lock mov int3 in lcall inc mov mov out scas xchg jb or xchg jge mov mov andb dec adc sub fidivl cmp mov out bound pop xor dec jl adc outsl push in (bad) sbb (bad) xor jg lock out stos pop add rorl int3 mov (bad) outsl int out xchg cld (bad) orl repz insl out mov jecxz cmp cmp enter repnz jbe mov jmp adc out dec xor mov pop ret (bad) aad mov add les sbb (bad) lock jge hlt ret push or negl out addr16 inc fnop cld push and jb (bad) std out fwait dec add adc je cmp shlb stos into or (bad) jmp and out in inc push cmp and out (bad) sub ja pop int3 add mov adc out enter outsb mov inc out jg adc xchg sub out popl xchg in out mov imul bound or out pop or adc out imul insl dec out popf inc cmp lock adc jge mov inc pop das popa xchg mov je fmuls xchg dec mov or ljmp push mov cwtl out outsl sub pop fbstp call (bad) fisttpll dec movsb jl out xor daa loop cmp adc inc xchg lahf adc mov add outsb das iret lods lret call inc cmp lock inc xchg xchg arpl cmp cwtl add pop mov lcall xchg adc lret lods mov out std jb loope in mov nop les mov mov sbb sahf ljmp clc push push push jns movsb jbe push mov repz (bad) pop out jl out (bad) jne sbb out pop stos cmp data16 insb adc and mov iret fyl2xp1 repnz add popf fistp aas push sahf dec idivb ljmp and mov or inc test dec add mov push imul xor pop jmp out test test jns rolb mov xor sbb insl or adc (bad) pop lods stc inc cli rcll inc out cltd jmp aas lcall push mov out (bad) paddb loope push out dec mov sub int out hlt aas cmp pop mov sti mov sub nop push dec out (bad) jae inc fdivrp mov mov leave rorb jg push ror out and rclb mov mov call jmp push add dec adc or arpl aas and insl jp imul rol mov scas out push shll into and pushf ret out jg add add out or xor mov out fistp inc lea clc data16 pop cmp (bad) out and jle cmp cmp xchg js mov or and out cmpb mov std out stos sub cld inc outsb fucomp or and pusha xor mov pop loop bound cwtl ret out jg fs or lea push sbb iret xor icebp cld (bad) insb cmc (bad) (bad) lcall insl or iret pop sub mov aas test adc mov enter in movsb call into int stos mov sub repnz gs mov mov stos out and bound aaa sbb mov jmp out mov out call inc fildll sub out incb jns xchg or dec or mov loop aaa pop cli and mov movsb jmp mov (bad) lret mov inc add in push sbb xchg fs mov jmp and cltd je ja pop dec jne ret and push add out push or stc lea push lret addr16 ja add pushw out push test lea mov cltd (bad) les out cld in xchg arpl mov aam fs out add jle xor leave sbb fs out fistl (bad) cmc xor mov out ret pushf push cmp aam loopne sub mov scas aas mov out jbe test movsb testb or imul xlat out lret rcrl insl sbb mov pop and push sbb iret add (bad) xor fsubrl inc pop jp adc fwait daa in push pop xor imulb loope rclb loop sbb loop push mov cmp insl clc jl mov and adc cmp std push outsb xchg add into mov and loop,pt (bad) mov jmp adc sub das dec sub test mov stos mov lock lcall inc div or fs jmp sbb imul dec rolb out cmpsb dec adc inc out adc int3 out push lea (bad) sub add add clc add jl xor sbb mov out adc push push jno shr call sahf mov add sbb xchg inc xchg mov inc cli stos (bad) adc add xchg out mov sub mov jmp int3 shr inc and rsm int pop cltd lahf scas pop insl mov divb sarb out movsl cli jg enter (bad) ds jne xchg scas ret in out xlat dec lret outsl inc pop out cld jae call push and add jp sti loopne cmp loop cmpsl pop ja aad and fwait cmp test enter sbb out in (bad) jp in sub adc jnp lods (bad) mov xor pop jg out scas aaa hlt jo pop mov out adc push pop push cmpsl lret outsb add stos insl das cltd stc out shrb movsl fsubrp mov in loop scas cmp iret (bad) mov inc in add jecxz inc out rcrl iret out fnstsw repnz out add js adc cltd mov push adc stc push cli ret lock adc jmp gs je fsubp repnz sub test mov cs xchg sub insb out scas shr lods aas fwait cmp clc nop adc dec sarb fs jo cmp lds sarb push mov mov out xchg bound imulb sub out cmp subl mov out rorl mov xchg das enter repnz pop pop or mov cmp repz out sbb jbe cmp setg xchg arpl or ret sti arpl loope insb xchg sub les fs jo push out repnz aam pop lcall add (bad) pop mov fdivl iret iret aad or lock dec aas mov insl fstps out call outsb mov inc data16 cmc jb loopne mov mov jae push (bad) ljmp pop jecxz lods adc mov or cmp sub test mov sbb mov int call jl (bad) pop ret mov in mov mov jmp repnz sarl sbb push (bad) sbb inc cmp pop push xchg jnp ds mov mov or push xor pop mov jge jmp bound or in xchg jecxz inc mov jae push sub jo add outsb sti push push ret jbe cld (bad) icebp dec clc out sbb aam pop adc or sahf sub sarl inc in stos jle fstl pop sbb inc divl std mov push xlat sti mov rol sbb mov stos out inc and pop lods aam icebp jb xor ljmp mov lea xchg cmp into inc out ds sarb ss (bad) or xchg xchg fcmove fistl out sbb cmp mov sbb cmp jno ja hlt xorl (bad) mov mov (bad) arpl jmp lods cmp pushf jl leave xchg int3 aam push imul jg and adc imul ficomp cmp das push adc inc or stos mov and outsl push or daa or clc cmp arpl test rcrl cli cmp ds jl stc lahf stos pushf mov pop pop scas bound adc jbe xor push test mov sbb push cmp mov ja (bad) movsb pop xor inc add inc test dec ljmp pop or out out addr16 inc push jb out sub lods mov out imul xchg mov int xlat imull cmp inc ljmp out pop xor jg cs sub arpl add or pop jmp lods xor mov cmpsl jge and mov mov lods and fcom loop jl xchg jb out push pop stos loope ljmp push and lcall add push sti mov shr loope xor sbb cmp sbb jno mov sub iret inc mov push stc xchg jmp adc push jg (bad) push xchg inc mov or mov (bad) mov test test pop (bad) mov aam pop out insl (bad) jg jp cmp xor inc imul pop mov lret push in ret and out jle sarl sub xchg out sti cld lods jae scas insb (bad) out call cmp (bad) out mov aad xor out repnz out (bad) gs test or push out cwtl sub mov sbb ljmp pop fdivrp adc fmuls sarb gs vmovd iret mov data16 cld adc push stos push fsubrs jge popa cmp add jle aas pushf int3 out pushw movb cmp and lret lock leave fstps notl dec pushf in mov ss mov sbb out ja push sub xor xchg pop lds adcb pop daa mov imul fiaddl out int push out ja jb sbb (bad) (bad) jge add lods dec xchg pop lret les inc mov aaa (bad) (bad) inc pop enter cli sti icebp mov add cmpl mov ficompl xchg stos jl mov test or sub inc mov in adc xlat push imul cmp mov mov jle add push xchg out inc mov push clc cli pop push cmp out mov ret xor cmpl les outsb ja movups dec sub loop or mov scas fdivrl int fwait out test xor add dec (bad) sub leave shr mov out stc pop jl mov sbb loope add jb cmpsl incb and inc jmp mov mov loope xor sbb lahf and dec pop sbb sahf jb out push lret outsl (bad) fisttpll out and test push out xor (bad) jo es out jne and and cmp data16 dec test jecxz roll mov xchg adc lret (bad) test sti mov sub mov mov xor loope enter dec jp dec mov clc add lods jb aas or (bad) or js push jnp mov pop push fild jae mov inc cmc sbb nop stos cmp sbb ljmp cmc mov scas movsb mov dec pop adc sub pop cmpsb ja mov in in mov out and mov dec jg jmp pusha stc mov jecxz (bad) cmpsl enter or jns insb lock xchg fild cmpsl imul insl ja (bad) hlt xchg mov test iret bound out sbb jns divb out sub mov test lock out in jno and daa or jge cmp movsl fwait sbb out neg movsb ret stc xlat out out or ss push aas or mov add pushf je sub adc cli push loopne jmp test test mov arpl in movsb stos (bad) insl jmp sub int3 (bad) xchg out js nop xchg mov mov out cmp jo push cli outsl int3 pusha loope (bad) out mov inc mov jmp ljmp fldt fisubl mov fimul repz sub (bad) xlat xchg or stos movl inc lret jge sub decb sub dec xor jle ljmp (bad) bound imul test into push clc mov out xchg pop mov out pop xlat jp sbb push movsb roll and jns cwtl dec and gs cmpsl adc xchg or outsl in cs jmp adc pop add arpl or jnp cwtl lcall ret cltd out xor xor insl pushf out ret add insl mov or scas cwtl fsubrp out test (bad) (bad) out (bad) inc nop int3 outsb xchg add add pop clc dec leave inc notl jl (bad) pop movsl mov push shrl out decb aad (bad) stc push loopne in push sub or adc popf or inc xlat (bad) ljmp insl jbe out lahf sbb fbld sbb out cmp add inc jo out (bad) pop dec push out mov jge jnp jo out icebp negl out add in aaa jns cs adc lock out add (bad) aas adc sub lods movsl call pop lea xor or out mov sbb out add cltd leave xor iret test out add in (bad) scas popf dec test int3 mov xor lret jb out (bad) int xor adc icebp cltd push sub out rcr mov out lret imul cmp iret add lea rolb (bad) cli ficompl jg push stos movsl pop jp jbe push push jle jle int3 lods pop fucomip jo or iret scas in mov ja fsubr mov int test push popf (bad) cli mov or out ss cmpsl pop test out adc adc movsl pop cmp out gs in ljmp mov out repnz test out inc jl mov add add hlt xor add es mov andl lea pop test mov sub push rorb mov cmp hlt lret loope and sub aaa cltd jp in (bad) into sti enter mov xchg pop (bad) pop sub (bad) out adc inc std out xor stc sub pop les shl mov push pop jnp push lods loop lea mov push out imul out inc jg ds xchg inc out cmp jb jmp lods dec out decb jbe std push stos out adc jp sub test xchg push lock sahf or pop outsb das pop xchg ljmp std sti dec fwait out inc push scas sub sub out sub js dec push or clc jg out fwait loopne mov or rorl in lods js imul adc popf jno scas out sbb inc (bad) out shrl test push iret xchg jmp scas inc sbb or das cli push popf mov imulb mov jp sbb hlt fwait data16 insl (bad) out xchg xchg jnp enter out dec movsl mov and pushf dec or lcall test popf add jg ljmp aaa pop push das and dec xchg mov (bad) dec mov into jne leave cwtl out jae push adc xor jno pop push push or mov das push out and fwait es push jmp out loopne daa test in lods ja repz clc push pop (bad) xchg cld jno pop int lcall stos sbb out or rcl clc (bad) imull mov rolb inc scas out mov ret xchg xchg cmp cmp push dec out push scas mov pusha adc xor jo sub addb mov js hlt xchg jmp mov sti out adc dec aad push lret and stos out sbb dec pop out adc xlat inc xchg out inc fidivr xchg flds fwait push dec out leave and mov sbb outsb pusha roll lds cmp inc inc xchg out dec sti cs mov (bad) mov pop fstpl rcrl insb into jmp adc movsb imul sahf cmp and mov inc out xchg sub popa out sti pop lahf adc inc insl dec sub mov sub lahf cwtl ljmp jo mov pop fcoms add dec in pop icebp push mov jns adc fwait sub test out mov xchg push arpl adc add pop repnz nop sbb into sarb out fs pop ss mov mov cmp or stos cmp in mov dec loope es mov (bad) jmp andb js cmp out outsl (bad) repz inc fwait ljmp (bad) loope mov ret out adc aad das mov outsb sub imul (bad) stos pop ljmp cmp push mov pushf (bad) or negl dec rcll or das jne cld es xlat or inc xchg shl mov fildll insb cmp inc mov idivl dec mov adc mov fldz (bad) fistpl push xor icebp sti (bad) pushf pop out pop loopne lea mov out es sub pop add sbb lock and dec data16 out push out mov or mov xchg repnz mov stos iret cmp pop (bad) cli ljmp out add and test jge mov ja push fistp insl out add lods fsubp ljmp les fnstenv pushf andb int push or or mov out mov mov lahf clc sbb dec mov das ljmp and pop popa sahf aas sub sbb jle inc popl pop out jecxz (bad) xor out mov cmpsb arpl daa addl xor (bad) rclb xchg inc ret jno insb movsb aaa mov jg ja jbe mov addr16 inc aas incb mov jns pop das sbb push mov mov pop or fsubr fwait adc pop and int xor loope jo ss hlt xchg idiv leave test add lahf (bad) ret mov lds inc dec js dec ret test push out jl dec mov adc int mov sub pop adc inc adc cmp inc movsl aaa sbb mov out cmp enter fwait push cmc (bad) mov (bad) lock sarb ficomp popf cmovnp mov les fstps in cmp faddp jmp xlat jle addr16 mov dec adc or dec mov sarl rol jl dec and mov out rcr mov cld sbb out adc jno cltd out or push les scas cmp jl lea fild sub mov ljmp jecxz jae movsb rcrl xchg negl out cli cltd scas ja daa out xor mov ficom js mov pop out cmc and or lret int out xor mov testl fcmove sti mov pop sti xchg xchg je lock test and push adc in jmp add bound mov cmp sti aas ss mov mov dec fisttp jecxz dec andb test aas cltd jbe xchg jge xchg (bad) out (bad) mov in fcom fidivl dec pop xor jle psllq mov sbb daa push (bad) (bad) out jl add inc ljmp out jg push ja leave mov (bad) cltd sbb sub or out pop cmp or mov mov dec inc jg jae aam add mov shrl sbb inc pop out cmp adc out push xchg sbb pushl inc out test xorl sbb rcr adc cld int3 mov inc push pop adc loop in push ja mov stc out pusha mov scas and scas cmp mov sbbl test lods (bad) adc ja cwtl andps mov pop cmp xchg cmp pop cmpsl out sub sti imul int3 ja (bad) mov stos pop or out add xchg out cmpsl aam sub hlt cmpsb inc aaa mov popf (bad) scas je imul test mov jbe sbb adc out pop pop repz push mov popf mov test (bad) push push sub jbe and cmpl pop out inc out (bad) xchg (bad) inc cmpsl ss mov out add lea test cmpsl loope int ljmp insl stos jne scas out fwait xlat mov loop aad out sahf pop cmp jnp jle out or jb enter out test (bad) int3 xchg aas cmp push cltd pop ds out push or sarl into movsb mov lods pop clc loopne ret mov lock repnz mov sbb arpl hlt out test jp sub mov xchg idiv hlt xchg out rclb popa test (bad) lock imul pop (bad) out cmovge fbld mov inc push add out decb jl mov fsubr adcb pop jg sbb inc mov xchg ljmp out cmpl dec out incl mov iret out jge xor call mov and inc or xchg mov pop in jp mov pop test sahf xor out out orl out test sbb sub imul dec out ret and xor lcall xchg cmp call inc fwait or lods pop dec adc test out orl insl xchg es out mov pop out loop stos pop mov or push int3 mov fwait xor js,pt push out mov mov stc out ds sbb (bad) xchg cmp pop pop cmc add push adc sbb outsb rolb iret shl xchg xor ljmp arpl repz imul xchg pmaxsw inc mov shrb aam movsl in jl cmp cmpsl divl xchg movb test sub js push push int fwait cmc adc jl out xor iret cld cmp jb shrb out ja test fdivrp insb cmp sbb adc lods repnz shrb out inc sub mov xchg movsl inc push orl push and mov andb das jle push in adc xor (bad) cli nop or jge aam mov push scas insl jbe in adc push cwtl nop das in xchg inc mov mov in bound call test shr xchg std addr16 mov cli in cs scas pop sub (bad) repz out cwtl mov mov sbb push addb inc pop (bad) fdivrl xchg (bad) adc sub mov hlt imul inc or jle pop out pushl xchg out fidivr adc std and stos in addl inc mov out int clc sbb jae adc js mov fcmovu out add xchg adc pop out pop int orl xchg or cltd out into shll fsts xor stc jp push fbstp fsub lods in (bad) loopne push in jge data16 jb clc out cmpsl jo call xchg out mov adc out (bad) sub push add inc mov fimull ss or mov fs call je jns ljmp or out cmp mov out arpl dec xchg lahf mov push out mov cmp xorl sbb xchg out cmp scas inc and shr mov leave jae rep xor nop mov cmc xchg imul out sub into repnz push jge inc cmp (bad) out lock test mov arpl or mov dec dec out rcr test or lds data16 out sub iret pop or out cmp mov out (bad) aaa (bad) out xchg enter out mov cmpl fcomip out jge clc inc in jne loop cmp ljmp and sbb es pop lods adc out imul out pusha inc out jo inc or iret ss lcall (bad) out in popf call jbe mov bound or lock inc push adc jb ss fbld sbb scas loope inc outsb pop pop out sub pop in pop push jge mov xlat loopne sti pop loop stos test in out cwtl push shl add jl xchg call jecxz and adc out mov int3 ret add dec sbb push popf cmp stc fbstp dec cmp or shr movaps out into loop rol out sarb sarb sbb sahf jno add dec push sbb jo fdivs inc subl adc dec sbb add lcall out dec xlat mov cmpsb out ss bound pop mov int (bad) mov push jp repnz mov mov xchg (bad) loop add inc std out arpl and inc xchg fucom enter inc outsl and jl jp adc lahf (bad) mov lahf out das out xor jb and or push ror pushf jo xchg push out loopne xor xchg lret push mov inc ret mov xchg dec js push out je sbb cmpsb incb fdivs dec sub lret out cmp pop adc pop mov cli adc lea daa xchg and out add mov shll aas push mov idiv adc sti inc fstl sbb insl jmp into hlt jmp sahf int3 ljmp in in aad outsb loopne or ljmp out or es xchg xchg or pop or (bad) xlat leave pop push inc out cs or pop dec push mov pop je mov and nop (bad) jle scas (bad) pushf das adc out sti in and mov and or arpl pop sub pop out mov inc loop xor mov out andl int3 push mov sub mov ja pop push and push inc or int3 mov xor aas out ret repz xor xor push cmc pop out or mov or push into in ret stc out lods insb pop loope (bad) jae mov pop sub mov pop mov sahf adc push lahf out mov push outsb (bad) les or jmp jbe sbb out xlat insb clc fisttp cld pop (bad) sti inc lods dec out in dec lret out mov ficompl sub test mov out jmp dec mov lret jecxz dec adc in or iret dec leave out dec jnp clc ss leave shl cli aad mov rol sub hlt divl sbb mov stos in xchg xchg adc imul rclb xchg sub mov pop mov sub jb (bad) out push cmp add in adc pop mov sub aam sbb pop int inc (bad) jmp push sub lahf pop xchg adc or imul data16 jge push shrb adc cwtl cmc sti dec icebp mov mov ds shrb out cmp cmp popf mov sbbb int3 out sub pop clc ja inc mov test aam imul rol sub (bad) mov lods jmp and lahf and jne out in pop push test out ljmp mov sbb add dec adc out in popf adcb inc jne (bad) lods repnz data16 das jl and test loop aam cmp enter popf cmpsl adc mov cld call ljmp (bad) int cmp outsl xor mov sbb div loope mov add jl out call pop test out daa notb lods out pop movsb sti sbb push push mov push pop cmp jg mov add out sbb out inc jnp add fsubl (bad) xor int3 mov notb fucomp pushf int push roll mov decb and movsb hlt xchg sbb mov mov pop sahf scas inc jo (bad) negb in or push push out pusha inc dec test mov pop mov sbb out xchg add aad lea adc and dec jb sub xchg mov test out pop pop rorl xor add test mov jg jnp xor popf inc push out xchg and imul ja mov out jb mov mov repz push mov (bad) fadds mov out jmp or mov mov push or push inc cld icebp outsb in loop pop sbb jb jmp outsl add out dec scas add iret pop test insb enter mov add (bad) int3 pop dec xor stc incb mov in popa (bad) mov and je,pn iret xchg cmp push loop lods dec dec mov aam cmp out popf repz xor sbb dec jns mov push cwtl add inc addr16 push (bad) sub jnp xor pop hlt or into out sarl rcrb (bad) jns sbb out lret xorl es mov jecxz popa popw pop cmp jmp cmp or push xor sub pop in out ficom jmp add mov shrb insl sarb xchg inc xor leave aas mov add mov loope push xchg imul dec (bad) mov arpl adc shrb jp inc mov insb mov cmpsb mov sbb in test bound int fistl or xchg movsb or test fstpl sbb out xchg arpl push out cmp das out in inc xchg das ret into out arpl xchg shr in (bad) aaa xchg cmp mov sahf mov (bad) arpl call fisubl out sub pusha push mov loop out addr16 pop lock sbb cmp cwtl out pop out and rol fwait add sub lock mov rorb push jns inc pop in mov inc enter popf dec popa out xor insb movsb mov push rsqrtps iret shrb call repz es aaa add out rorl cltd xor xor inc test ds insb add out mov xchg add xchg out cmc mov cmp sbb inc mov loope icebp out pusha or cli pop inc sub jb push int3 jbe mov int jns lahf repz push mov out popa enter out mov xchg mov sub mov adc fidivl mov cwtl inc xchg and push push fsub (bad) out mov out push pop jl sahf or dec out xlat push mov push or das out jle jbe fwait insl push jno repnz push xorb cmp sti add dec dec jno mov cs out test lock rol in xchg (bad) sarb jge sub out out lods mulb ja fistpll out out adc sub mov sbb push call cli inc cmp cmp in mov sbb lea add clc xchg addr16 fwait mov mov cmp mov or or adc sbb fwait or adc rcrl js fistpll push dec data16 pusha jns xchg cld sbb cmpl bound cmpsb sti rcr xlat (bad) loopne ljmp aam test insb push push jl imul loop push sti test dec push popa push out mov or lds test lods push loope popf call dec jle sarl cmp xchg and ljmp (bad) stc mov mov inc js pop pusha scas cmpsb (bad) jb cli addr16 mov lahf mov outsl out fdivp mov loope (bad) aas xchg push inc (bad) negl scas ljmp test xchg loope lret xor sub jle clc out pop stos stos cmp and push iret jl sbb mov (bad) sub insl in adc push sbb jns out cli push or repnz pop les mov addr16 mov mov icebp (bad) hlt stc out push fwait (bad) nop cmpsb insl fiadd jb xlat repnz lea (bad) xchg pop mov mov jmp cmp or (bad) add or stos fnsave xlat in xchg shl imul xor pop (bad) out dec add ja or xchg mov adc mov bound sbb lcall add cmp in nop (bad) in sub xor ljmp mov ds mov and bound out adc ret loope add scas in or rorb rorb out mov jbe out jl into dec fstl fucomip adc dec pop testl cmpsl mov sbb jl xchg push pop pop pusha outsl push mov cmpsl or pop push sbb out dec pop out testb xchg cmp cmp in out nop inc fmull xchg mov in (bad) adc (bad) out pop test fsubrp icebp fstpt adc mov stc jge or out lret pop mov jo xor mov cs jge lods cmp ss in (bad) jnp mov jbe dec in xchg cmp cmpsl pop add cmp out xor push out xchg sbb mov mov mov outsl addb mov in mov add test mov in aas (bad) xor jg lret ss pop push fwait pop (bad) hlt std iret test lock dec jne mov je js push icebp std dec iret in push clc bswap es in mov outsb adcl sbb test fdivrs add mov scas adc and push repnz xor gs cmpsb out aas ja push out andb outsl out or clc or xor jmp pop shr xchg int3 in jns cmp sbb cmp negl out add ja repnz shr or cmc aas lcall out lds cmp mov push aam xor repz jb lds out add daa lods movsb arpl pusha out xor mov out popa cmp loope inc jne cmp outsl hlt jnp mov repz jo test jbe (bad) ja or sbb imul (bad) and icebp fbstp jl scas outsb fs out xor arpl int3 sbb sbb jmp cmp out lahf cli xor add cmpsl push pop insb stc adc sub lods jne pushl jbe mov mov rcr add fsubrs pop loopne add out testb xor pop js jmp ja (bad) add dec or pop mov adc test pusha int jbe,pn or out movsl insb mov imul sub mov (bad) loope out mov adc xor call mov xchg cld mov bt out pop adc ret out cmp in push sub bound sbb out sbb ficoml out (bad) add add jecxz call mov dec std xchg pop xor (bad) and xor movsl pop imul int3 lds xchg loop cmp leave nop jge xchg movsb and adc in (bad) insb (bad) outsl insl mov dec popf sti insl ja pop fsubrp pop loop (bad) xchg mov out fnstcw mov and add loopne pop imul out orl add nop lret adc inc dec out andl push cltd out fidivrl fsubs aam mov cmp pop lea xchg fildll mov push aad mov sub jmp ljmp (bad) hlt or push mov or pop rcl out out imul out (bad) push cld push out lahf inc add fsubrp (bad) jne (bad) stos fldenv out push out es mov gs mov and notb lds and inc ljmp lock pop add out push loope lods lcall add sahf lock scas inc or pop imull xor fsubr jb lock popa out sarb js xchg out cs iret lcall xchg mulb pop stc iret cmp insb inc lock out push (bad) icebp cmp dec pop mov inc aas inc push cmc xor inc dec data16 aad mov cld xchg mov out lock mov pop int3 gs push xchg jmp rolb (bad) sub out loop (bad) jmp fiadd mov sbb out xchg jo out lret jne jae sub inc std inc dec sti inc push rclb jp or xor mov and cld inc fiadd out jb xchg movaps mov incb pop adc aad iret pusha ljmp cmp xchg mov rcpps testb fsubr push push ja pop pop pop push (bad) (bad) je in pop mov out js sub movsl jg jle loope xchg jl clc sti int out insb inc idivl test mov xchg jae repnz out mov dec stc (bad) lock add pushf lcall enter cli lahf test pop push push mov loopne sbb push xchg dec and loopne pop mov add or je push sahf popa jnp out or test out orl cmpb pop push (bad) aad ja movsl xor (bad) sbb inc pop mov ds js out mov mov push call ret popf scas push jns mov mov push xchg mov or or int jno inc rclb add movsb push push mov mov addr16 mov xor (bad) xchg adc pushf sbb jmp jg pxor add cld or sbb aam rcr rorb in (bad) jmp dec loopnew out out push out cld inc out cmp fs inc jp add push out cmpl popa adc daa inc gs fwait and (bad) in add fldl jle mov daa cmpsb pushl xchg xchg dec push inc out test inc mov (bad) je mov into (bad) imul inc out stc mov jnp adc iret inc jle,pt push sub in mov or mov out mov test pop sarl out int3 je int decl mov mov dec out dec cmp (bad) out subl daa out push jl sarl jp adc push jne cmp icebp out out push push xor and test jnp xlat fs (bad) orb jmp cmp aas aaa out std jb cld mov jbe hlt das xor mov int3 in dec fistpll or push mov les xor ljmp mov mov dec fist push pop jecxz and cs out pop mul lcall dec ret push out mulb pop jmp pushf imul ljmp xlat rcrb inc call jbe scas bound xor sbbl pusha lcall mov adc data16 lock xor jno cltd fwait sbb jmp pop insb sar insb data16 dec (bad) inc pop leave out ja xchg and sbb pop add dec (bad) cmp aad xlat test jmp pop mov out sub xchg ss out aaa ds or dec add push push jbe mov cwtl push repz test shrb and jp fs int3 push (bad) hlt (bad) jae cmp pop inc outsl mov sahf test outsb je adc pop push push leave jno shrl (bad) fsubs out dec (bad) dec (bad) mov imul imul (bad) sbb movsl jo out pop xchg lcall add xchg sahf shlb push xchg cmp enter hlt or mov xchg dec mov out in sbb mov mov adcb out fs xor icebp jne dec xchg inc hlt (bad) andb out xlat push das leave mov xor add sbb dec shrb rcrb cwtl xor mov dec xchg insl repz psllw mov data16 in sub out mov pop outsb push out inc enter xor dec out movsl push sub int3 scas aad or sub sbb rolb push out ds mov push loopne movsb iret mov jle (bad) (bad) cmp out fwait add out out pop cli jno mov mov cmpsb mov popa out lcall mov mov inc cs jo add or xchg (bad) push mov popf push stc mov testb pop fsts out jp fildll pop sti xor test outsl in movsl or leave sti repz sbb sbb push rcrl mov repz movsb out lea (bad) out xchg inc jl orl sbb aaa je (bad) ja fild inc cmpsb in rol push out cld pop icebp iret adc jns jae dec out mov and fisubl sbb jecxz dec pop push mov mov or mov push stc pop ret add shlb xchg out out mov stc aad out das sub nop pushf in out or pop repnz call lock ljmp out sbbl xor lret nop out outsb pusha xlat or inc (bad) mov iret into push fmull je push pop mov push inc (bad) lahf dec push sti add jge cs pop out adc xlat jbe (bad) notb shlb loop and xchg je out cmp repnz cmpsb out dec mov and mov loop jno push mov out insl push xchg (bad) xor adc adc pop imul add outsb out jno mov add out iret stos (bad) negb xchg rolb xchg ljmp loop sahf and mov dec adc push out mov xor pop (bad) mov cmp jmp mov lock cs pusha mov push dec loop in sub rorb out dec ficom mov xchg cld add (bad) enter je jae repz inc pop out ds in push movsl fs test into push push mov outsb and add and pop jmp pop and out add mulb cld ljmp in jp push ret aaa mov imul sahf out pop iret aas fbstp in and ja push out xchg rol adc out mov (bad) push mov xchg stc pop jns cmpsl jecxz ret fildl mov popf out cmp lahf out and mov sahf shrb xchg mov sub pop sbb stc cmp in shr push (bad) mov cld push and rorl mov insl jecxz sub pushf mov push in out dec pop fidivrl or rorl decb inc adc das sub xor jl subb mov out jb out cmp mov rclb pop iret jmp dec and ljmp jae out pop mov je test xor enter stc sbb jmp sub jae rolb cltd cmp out or (bad) gs lret into arpl push xchg pop adc imul inc test and adc inc sarb jecxz jg mov inc mov repz imul decb cld popa flds sbbl loop fimull sahf push insl popa out out dec push jl inc xchg pop lret or xchg stos out add fsubrp sub test (bad) lcall int3 mov xor inc int pop jae fildll push lds iret jecxz std xchg and cmp ss pusha arpl imulb and jmp out (bad) cmc dec or (bad) enter jmp out loope mov or rorb or sar in ljmp dec sbb popl fnstenv cmc in (bad) incb das out sbb add fist push mov call insb in sbb popl lret lods out pop mov mov inc cmp dec pop out andl divb out inc (bad) pop je mov dec (bad) push rcrb stc enter mov (bad) and insl mov add loope xor loop dec cmp push sti out addb xchg push sarl dec mov pop nop ljmp xor cmpsb (bad) lea or sbb inc xlat ljmp add sbb pop shll cli inc jb outsb sub loope jne fisubr out (bad) popa cs xchg sub mov push xor mov push out faddp or repz lahf cmp sbb arpl adc sub inc add jge jbe out push jne cmpsl aaa decb es add pop iret and fucom into inc xchg mov mov icebp add popf sbb insb (bad) in out sub sub je ds je adc xchg sbb fnstenv (bad) popf cmp (bad) sti in adc lcall in dec insb sub sbb inc cmp loopne pusha adc (bad) pop adc lret out cli dec popf repz mov dec insl in and iretw jo jmp lahf movsb (bad) adc repz or aad mov out fsts roll push jle vmovd jb mov sarw mov mov out or insl pushf imul sbb mov stc add sarb mov mov aam pop out daa inc sbbl test fildll subl push add stc mov dec gs adcb in test jno jg lock out shr fsubs fcmovnbe cmpsb nop push push je ljmp sbb pop fmuls pop shrb lods popa mov js pop out fisub rorl lea jno pmaxsw mov (bad) fmull out pop jge dec out pop push jl mov call cmp sub (bad) mov fildll add ljmp push (bad) push cmp push out test in push mov pop fistl sbb (bad) cmp mov push mov out xor sub out adc pop sub cld xor test jge out jg sbb out mov movsl cltd cmp out xor popa mov out and mov jmp push dec push rorb out dec dec enter (bad) movsl icebp mov jmp aaa pop lahf xor fnsave add imul pop xchg pop jl lods imul (bad) clc inc cmp out jecxz inc mov out push dec aad mov ror out insl lahf inc inc jle inc movsl out dec dec cmpsb push add inc mov (bad) xor std push or movl loope ret xchg pop fisttp pop push jecxz sahf loop iret loopne cmpsb push xlat cmpsl in adc icebp das jge adc movsl (bad) out xchg sub adc push inc fcoms pop push jmp mov adc dec movsb out sbb cli jb pop (bad) test inc pop xor mov adc mov push cmc adc pmaxsw mov xchg daa dec adc xor xchg aam cs sub jns dec sti cmc call fisubrl push fist xchg std out jge aaa sbb out test adc cltd pop pop adc cmpsb mov data16 sub out sbb ret out adc arpl out cmp imul pop (bad) cs jp adc fucomp push xlat stos out inc stc sbb out loope,pn (bad) xchg add add adc addr16 add cmp jge pop xor sbb loopne jne (bad) in nop mov push int in pop xchg (bad) test out fs mov lods mov or mov out jns out add std insl int mov (bad) push pop out jge push mov decb cmp and inc push mov cs and pusha test repnz fsubr dec xchg pop ss rolb rcrl out mov imul in out jecxz push fildll pop add xor xor stos insb mov and dec or pop push in push and jns sub (bad) pusha (bad) out inc idivl or mov mov sub out xchg daa call mov pop mov fcomip push pop mov push loopne pop int3 add sub pop push es push repnz ljmp xlat out xlat pop outsl out stos sub cwtl aad sarb test mov inc dec jmp popf out std or push xchg jnp outsl mov add in call aam inc sti mov inc cltd add out lock jmp pusha out jnp adcl imul cli int3 dec pop sbb xlat bound jno out mov mov jnp push jo pop sahf push loop mov aas int lds and lods gs lea out in in mov fneni(8087 imul (bad) lock mov inc aam jle push mov or and jmp xor pop out xchg mov fsubrs cld into std sub sbb inc mov jge in arpl xchg (bad) je adc cmpsb fucomp xchg sarl or adc inc jmp jle add pop fwait xchg cmp out out test (bad) mov ss mov into xor fimull ficomp out xchg jge mov pop mov jns repnz out lret push out add (bad) mov int3 xchg out (bad) out push fstpl leave adc addl loope dec pop fs lcall push add adc inc in pop scas into mov pop sub shlb out int data16 xchg mov out jns jmp jl imul into out in push rorl lcall into fsubrs jbe jo inc out (bad) movsl mov jge (bad) js jae mov jb sahf ljmp test adc dec les es aam insb push lea cmc aad dec cmp jbe out and mov out lock (bad) mov out sbb push cmc loopne aaa repz jle xor movd (bad) in push insl sbb mov or scas mov mov mov out leave and dec out rcll ret out add push mov or xchg dec ja mov jge out add and (bad) adc popa aad mov stos fildl out sbbb mov mov lea sarb jle mov add test pop jbe fdivr imul mov sarb mov mov cmc movsb out mov test sbb pop add mov movsb jecxz out cmpsb cmp out mov jp insb int or lock ss int3 xor mov inc enter test xchg mov push push jno sub mov and movsl mov (bad) mov fiaddl inc and and mov and jno ficoml xchg jbe jmp lock cmp cmp popa (bad) (bad) in lock xchg sub and pop out test outsl (bad) xor sub mov iret imul pop pop push xor test lods fsubrs mov out cwtl out int3 add push arpl jle lds mov in and pop mov loopne add out hlt add mov mov pop out and fld push adc vorps or xchg out dec xchg cmp (bad) sub pushf fdivrp lock jb dec popf mov sub ficoml mov pop movsb shrb mov pop push mov pop sub dec push rorb adc rorb repnz mov lock addr16 out pop je cmp jbe into insb push ror sbb mov sahf iret pop mov and jp out fbstp sub or mov or lods movsl inc mov popa pop mov adc cs mov mov (bad) arpl (bad) sbb test cwtl fisubrl (bad) mov fldz ss cmp cmc pop push push pop cmp push insl insb or cmp jecxz (bad) fwait out xchg ret inc les mov fisttpl out shrb in out sbb mov out lods mov and (bad) xlat cltd sub adc pop scas aaa dec out outsl push push and push xchg shl xchg cs out and nop mov xor xor in sub xchg (bad) out or (bad) lahf aad mov scas mov push xor in shr xor inc inc pop arpl out push fimull test fldln2 out or adc and mov jnp addl mov mov xor and lea arpl pop cmp mov jbe,pt cmpsb push out dec pop daa pop or or dec shrl out ds add outsl dec sahf dec out xchg inc outsb jo pcmpeqw pop (bad) fnsave dec mov adc in sbb imul and jns (bad) aaa ret xchg xchg out pop dec adc dec fistpll cmp mov (bad) jge arpl push inc jg lret push neg sub cld imul lock imul out addb out pushl leave pop lcall aam jo cmp dec adc fistl xor enter and pop shlb out fcom mov sub push mov push out push jl (bad) xor test loope pop mov imul pop jns add in add arpl sub stc dec rorb test rcrb clc sub in push add push lea aam out mov mov lock push mov xchg dec inc cmc addr16 push das pop mov in pop jecxz mov push inc (bad) rcrb push fsubrp aam std test fwait lds adc lcall mov pusha and cmpsb out iret sub test inc shrb out mov add (bad) xor and insb mov out inc imul cmc sti sahf lcall out xor inc imulb das pop jb jle test sub loope call out and mov js mov inc enter xchg fidivr sbb mov xor fsubs loop fwait out inc daa add push icebp adc cltd mov arpl out mov popf cmpsl cmp sahf cld inc sbb jl or mov out nop mov loope subl sbb xchg xchg or imul jnp pop cmc mov fnop stos add out sub loopne push push in rol xor lods inc mov xor inc or pushf call pop add push imul dec or xchg fistp hlt push pop in pop mov dec lahf mov loopne inc fs out sub jle sti mov (bad) out daa xchg insl iret cmpsl sub aad pop jae cld imul ss loope call push mov push repz and loope or stos (bad) push out dec sti cmp (bad) out adc jmp bound lods pop push popa dec pop add inc mov fsubl dec out inc in inc fucomp inc cmp test addl push pop clc out call icebp sahf dec (bad) out hlt mov outsb push add sbb mov call in arpl pop sub aad in call les cmpsb daa pop xchg add inc push jmp gs mov mov lds ljmp out pushf outsl mov insl push push push in pop dec nop push lahf cmp hlt xor push das int in jne jmp addr16 ret icebp stos loope and andnps arpl mov dec sub sbb jg jp jmp dec xchg movsb iret mov pop (bad) lods cli cmc rcrl orb ja mov imul idiv leave int cld (bad) fadd out mov bound mov out fisttpl and mov out faddl push and ret cwtl (bad) cld xchg dec jmp aam out std or mov pop ds repnz clc lahf popf js (bad) idiv mov sub loop int mov xor mov repnz and push pop js ljmp mov inc clc rcll decb add sub inc out adc cs mov inc int3 dec in fsts add mov out pusha inc aaa pop sahf mov rcrl imul std xchg out (bad) and mov sub (bad) std mov outsb out inc mov decl imul (bad) pop aad fs jg cmp lahf pop pop xor xchg pop out cmc pop mov xor xor push nop jp mov fwait out cmp push decb cmpsb lods loop xor out adc repnz pop or jp ret in in int out movsl insb cmp sub xor out push mov xlat mov xchg push xchg out sbb or shrb push popf (bad) xor mov jmp out in out test push loop or lods pop punpckldq (bad) sbb outsb mov imul pop xchg push (bad) dec pushf in std aam cmc js or sbb lods pop out jne cmpsb mov clc jns out frstor pop adc shl aad ds sahf sbb (bad) mov jecxz fsubl ja xchg mov dec push out shrb sub sub sti jno cli xchg out mov push popa test inc out mov jge jo push jne in xor rclb fmul loop data16 jmp xor in in mov daa jae mov and cs adc mov jo out adc jge aam out jno xchg divps mov and jbe aaa push xchg loopne std aad xor ret jmp enter mov test ficomp inc push out out mov xchg mov lods sbb mov sbb leave repnz add dec dec pop jg in jb adc scas push das out xchg push cltd shr popf xchg jmp cmp lret sbb aas inc int3 push adc out xchg adc iret mov sbb stos sub lret or out xor sbb movsb pusha (bad) jbe imul imul pop aam cmp (bad) lea sbb into stos mov incl or xor out aas cmp scas or je ljmp and jge enter jo out dec mov sahf (bad) icebp ljmp out pop sub scas push sbb mov loop imul push out (bad) std js add pop out push call out cmp mov int3 jno xor pop (bad) lock dec std ds jecxz cs push cli stos mov dec pop fs pop std test fwait shrl jns adc and mov xorb push mov dec movsb fbstp xor cld ret add (bad) push movsb or out jmp cmp movsl push out movsb jbe and aas pop outsb iret fwait sbb out add fbld out in loop (bad) dec jne pusha ret mov fwait es clc outsb push aad xchg jecxz fbstp pop inc mov lock mov push shr adc sub mov loopne pop negl lods out ficompl push out call mov test out sub (bad) sti je jbe outsl pusha pop lds nop adc (bad) fsubr out pop loope pop jnp jl xchg fistpl dec fadds or sub jne add cmpsb jb sbb call jp dec out and shl dec dec push or test out out inc nop push add xchg inc rcll out push orb out sti jne pop mov mov mov inc xor shlb mov inc ret mov loopne jbe out loope ss jp loop data16 outsb dec dec out movsb lods mov fmulp and xlat jbe xor out mov xor mov sub pop pop adc imul pop sub fs sarl nop sub cmpsb leave sub out mov sbb (bad) in xorl loop xchg adc cmp test mov (bad) mov aad scas or scas ja outsl (bad) or movsb gs pop loopne mov fsubr add out (bad) sbb mov cmpsl mov push out lret dec push pusha mov mov xchg ljmp out push sahf pop je aam hlt out sbbb xor add push xlat mov out int3 out clc jg cmpsl and fistpll (bad) dec out arpl adc out stc out clc daa mov lahf pop das std rol lea inc mov addr16 pop push fcoms push and dec mov int3 jg out dec rcl or ja and cmp lahf jb push inc (bad) int es adc (bad) and push push jmp dec cmc outsb movsb (bad) lods mov xchg mov (bad) mull out (bad) jo sub mov out jg xchg fidivrl jmp out ss pop scas jge bound out ja iret in sti push shr gs sbbl loopne push pop movsb cld jecxz test out insb outsl (bad) cmc int3 sbb jp and insl jb out cli xor and scas add out lds or rolb mov data16 xor pop push int add movzbl ds mov lret inc out jle (bad) fldenv fsubs out in sarl push pop int or adc mov pop out cwtl xor rolb jnp in xor insb (bad) stos out int3 sub xchg pop mov (bad) mov bound xchg pushf out mov jl adc xor jno jg out sub test sbb push sbb out mov icebp (bad) (bad) cltd out sub incl fdivrs or mov mov fwait sbb (bad) add mov pop (bad) outsl adc shr xchg insl push int3 sub (bad) cli cmpsb push or cmp jo loop jge inc jb loope clc adc in repz jl lods sbb push enter bnd and mov aad cmp fucom loop out inc movsb pop inc incl mov mov and mov out or push fnstsw dec ljmp ret iret jecxz mov dec lret sub stos (bad) lcall in add bound les push sub popf cmp xor or pop out or xchg xchg sub out mov into cmp adc cwtl out mov xchg adc leave lcall sub jl in lods cmp out jmp sbb cli int cs mov pop movsl mov test push sahf out insl mov dec mov cmp pop mov aad leave mov icebp xchg inc out adc or dec add int ja lock out push or in mov and and cltd out ficomp cli add imulb or sbb lods cmpsl lcall cwtl push jno out dec mov fdiv test xor loopne jne mov stos hlt dec lahf pop sub sub arpl xorb sub cld (bad) push mov and fdivrs ljmp pop xchg cmp out loop inc fcoms mov lcall push out test jmp fsubr and push cmp (bad) jbe cmp xor pop dec das sbb xor sub xchg iret mov lods xchg adc mov cmp pop icebp out jae and push cvtpi2ps (bad) mov adc push repnz and dec push insl clc cmp inc aad ds mov xchg loop popa (bad) sub jno movsl mov cmp out dec das mov adc loop mov in sbb sbb (bad) cmp pop mov cmp mov mov movsl (bad) push (bad) outsb cmp pop jns sub add imul out out rcrl mov lock dec jmp out addr16 jge test std and pop loope in cwtl insl xchg out in or mov out sarl fwait and sti xor mov and test mov mov (bad) inc cmp out push sbbb inc mov shr push pop rcrb leave mov xchg xchg cmp mov push out fidivl nop and iret sbb in rorl scas (bad) in out add fmulp dec or xchg dec out add adc outsb and or ljmp push sub loope push xchg out shr mov mov enter push inc mov pop cmp mov notb loope daa ss push jae fwait sti and xchg loope sbb in lods inc and or push jno (bad) pop les add daa in lcall out add leave jae push cld popa out mov sub insl xorl fcomps cli push lods inc pop mov repz or hlt sbb scas js jp jmp fisubl and push sbb aas lock aad divb jl insb or inc cmp mov repz faddp out sbb mov out insl push push sub add xor (bad) imul sub dec scas clc loop popf insb push pusha or out mov aas out (bad) stos je xlat dec push jle mov push scas sub icebp in loope (bad) out mov xchg pop ret scas adcb outsb jns or (bad) lret cmp movsb and jl movsl (bad) in mov aad stos jb movsb pop (bad) addl addr16 stos (bad) jbe out into idivb xchg jae ds cmp adc negl xchg xor or xor xchg xchg push fstpl lods int adc sub popf pop and xchg lahf dec out div ror inc out sbb add imul out sbb ds out mov adc jb push inc (bad) in ds int3 cli in push push push push outsb adc loopne loop les xor lock mov iret imul out pusha addr16 out push adc jmp fcoml ret jo add popf (bad) dec jmp outsl in out int loop push (bad) mull outsl lcall out push inc loop loope test (bad) pusha sbb in sub in (bad) daa out mov xor cmp ja loopne in pop cmp out mov mov jle les out out adc push sub mov pop inc lret xchg mov das test (bad) push adc xchg (bad) addr16 lock fnstenv push out pusha es aam repz repnz movsb out sbb xor mov or sti insb int3 lret pop push sub pop lods pusha dec iret pushf mov and popf mov lret pop sub negl test pop daa xchg add gs cmp pushf adc lock scas ret negb push jp add insl xlat pop out addl ljmp mov out cmc repnz idiv insl out jns fcoml out out jmp mov lret mov loop lock push js,pt loop mov (bad) aas cmp out jae or enter aad dec lods sub fs pop test hlt sahf adc add cmp pushf sbbl loopne call in out pop add cmpsl (bad) mov imul mov xor in mov addr16 mov out cmp sahf pop and dec mov in test pop jae (bad) fdivr into mov insl or sub sti scas lahf cwtl arpl mov mov (bad) xor fcomi jle pop jmp jecxz xchg mov ret mov push out mov (bad) aaa mov in mov xchg out mov jmp add mov movsb push dec bound out cld pop jl lods test sbb xor sbb out (bad) mov int3 mov test mov mov mov add sub test sbb push jge out push sub test push icebp push inc sub xlat cli enter jne cmp dec std call jno push aam nop aas (bad) out push adc stc mov pop loopne int3 push aas fisttp fnstenv xlat push xor test (bad) shll inc rorb sub idivb arpl lock lcall push pop mov stc shr loop jnp ljmp (bad) out lds insb out aas dec stos jb adcl add icebp jne out movsl out lods arpl pop sbb out adc insl (bad) lea lahf pushf xor out leave pop sub jne cmp iret pop repnz dec out (bad) je xlat stos xchg push add outsb stc jp ret out cmpsl fstpt (bad) jmp inc repz jne (bad) (bad) cmc mov mulb push scas (bad) rcrl adc addr16 sbb dec out lcall lret sub outsb int3 lahf lock mov push test mov pushf mov pop cmp (bad) aaa out movsb fild iret les xchg lods out jmp nop (bad) daa gs call lea xor in mov out cltd (bad) push out je lret std loop push jo les xchg mov inc dec sbb sbb dec imul sar xchg push or cli hlt push in js out (bad) clc leave popf and mov and sub mov mov adc and out xor cmc jne test pop mov and cmp loope (bad) lds jg or cli (bad) jne and mov in fdiv mov adc mov iret enter aas adc aam mov jb fimull pushf xor mov cmp arpl jg test out xor jmp pop pop sub add pop cmp (bad) push mov push out jg xchg (bad) push pusha aaa into cmp out push pushf test jns test pop shrb sbb pop loopne std nop stos mov out ljmp and sahf mov in adc insl fisubrl mov inc ss mov mov sub cmp (bad) xchg jne repz in ljmp xchg jg out dec adc daa dec enter shrb popa imul insb call mov idivb loop mov sarb iret (bad) sahf or (bad) out test mov scas into repz sub inc pusha out sahf adc jge inc jns out xor push shr test mov add xchg (bad) mov lods xchg xchg mov imul cmp jo inc push stos push repnz cmp (bad) mov pop inc aam mov xchg or mov out ds push lcall popf and (bad) inc pop movsb push dec popa cmp out testb out loope adc and xor pop out fstps fisubr rorb pop movsb jne push out std sub mov pop out push mov shl xchg xchg dec sub pop int out int3 inc mov push pop fucomip inc pop jae mov das es enter fst movsb out push push fimull les nop movsb test loope mov gs insb mov pop aam fs out ret cwtl ret add imul testl rcll frstor xor xchg out dec or mov mov test xchg popf jo inc out loopne cmpsl ja xor or leave xchg mov out hlt fisubr out mov pop loop out mov js push out sub or fstps cli out dec outsb movsl sarb cwtl inc cmp les out push (bad) and out add jmp mov stos inc mov pop adc (bad) out sub inc ja pop add xor mov pop mov mov push out mov xchg adc addl inc push dec clc iret imul dec and mov sub shlb ret jl xchg out pop mov out icebp push and out xchg mov int andb pop add data16 or rcll mov xlat fnsave pushf out and sbb ds into xor inc (bad) jmp addr16 jmp add iret mov sub (bad) cltd ja add aaa icebp loope sub pop lds js out mov mov push addr16 loopne daa stos insb out push popa jbe dec mov lret out adc fldt repnz ret mov scas int es mov jae inc dec pop (bad) mov enter mov popf inc lret and mov xchg xchg sbb pushf out xor (bad) scas lcall pop xchg cli mov pop xchg push mov inc mov and lahf inc out shl pop rcrl lods and cli push (bad) sub lahf mov fidivrl mov adc aas out xlat sbb test mov in leave pusha push sbb loopne shrb cmp sub es out int or out mov ljmp and inc scas aam fwait out popa mov dec jae ret xchg and push jo (bad) mov out mov lods push pop out (bad) mov mov jo (bad) push xchg lret inc das pop pushf imul out loop dec out repnz xchg mov mov and xchg (bad) mov cltd mov dec es (bad) sub enter test mov sbb mov bound xchg jns out mov mov enter in dec aad fisubr mov jns lds sbb add fistp loopne outsl fstps out aas jmp adc out add xchg sar jle sub jmp (bad) out cmp imul xor cmp daa ds rcrb loopne out pushl imul mov fnstsw out stc leave mov insl nop out neg js xchg std inc cmp cmp sub mov in fwait or push pop loopne (bad) jmp fdivr sbb jmp and jae pop in (bad) (bad) cmpsl js dec call test movsb (bad) clc (bad) std loopne lahf or sbb aaa push cs push sahf repnz (bad) sbb bound sub hlt xor in inc rclb dec imul mov in mov aaa inc jg test cs iret push rcr out nop ret push out ret popf shlb mov fimull adc test shrb adc mov scas out mov pusha cmp mov mov out sbb idivl jbe bound fild and out imul or push test jbe mov icebp xchg push out les xor jmp xchg fs aam out mov add mov mov inc push cmp (bad) in mov jo adc jp xor in mov dec cmp inc aad add push mov pusha xchg pop pop (bad) jns inc jp push fisttp and jmp adc inc dec jp pop jo stos out fs and in repnz ret pop pop jmp rcrl pop dec stos dec cmp aaa call out pop lock adc lcall dec daa test add (bad) cmc push imul int push add into repz (bad) jo (bad) out sti pusha xor out call xor out cli sbb je repnz fiaddl xchg or dec jb fist xchg xor mov imul out push sbb mov (bad) cwtl push (bad) push dec rorb mov loop sbb mov xor jbe jle cli jge lods out je and pavgw mov aas adc fadd test aam int3 jnp cmc test in or or mov in ds push sub mov fstps lods xlat dec out out pushl mov xor fs lahf jecxz inc test (bad) rep sbb out sbb jle push out daa pop ss movsl scas shrd ja dec fadds sub pop in cmp mov sti fimull enter (bad) data16 pop in mov insl test roll and es out pop jge mov out inc dec (bad) sbb adc xchg idivl insl mov xchg movsb out in sbb pop mov lods mov jae in test outsl icebp leave mov mov or cmp pop out cmpsb (bad) out ljmp push out mov nop test seta out stc out push pop mov push rorl add cmc ja adc pop (bad) lretw mov pop mov fist out faddl je in int3 dec push (bad) test call lock add out into mov sub int (bad) loopne cwtl in fsub mov (bad) cmp pushf add leave mov iret mov out mov push stos push outsb lret (bad) icebp mov fsubrp xchg stos out mov fsubrs and jecxz mov (bad) sbb bound imul aad or pop mov sub insl mov mov fnstcw call jp leave mov mov mov imul push cmp lods pop movb out and push lcall and out jle cli sub iret add add insl movsl outsb jo rorb repnz xchg jl lods jmp pop xchg adc dec aam out adc addr16 fsubr xchg popf aaa or repz cmpsb mov imul into jp call push adc sbb push (bad) adc (bad) gs lods outsl out xchg in jo cs out xchg (bad) fwait cmp out mov dec shr ss iret lea xor daa fcomip jne ljmp or add das jl push adc inc push and outsl mov jp fcmovbe iret ror call repnz fdivrl pushf (bad) mov inc mov in (bad) out push arpl mov cmp dec and pop cmpsl adc rorl inc push and (bad) jbe jp leave xor jmp (bad) mov xchg in les gs (bad) icebp mov cmp push pop out sub adc imul outsb xchg dec add out pop lods mulb adc out test mov cmp aam out pop (bad) cmpsl enter shr mov and sbbl je sti in fimull and aas in sarl out xchg lahf pop and inc or imul out xchg (bad) mov out mov (bad) mov mov dec pop loop xlat mov sub (bad) (bad) in mov test pushf xor fsubp lods or test adc cmp sahf jge xchg xchg out movsb pop xor orl std or adc sbb movsl or in jnp iret fwait cmp xor jno repnz popf out push inc push hlt pop ja shr sbb pushl cmpsl inc stos out sahf cmp push (bad) imulb adc adc lcall fcompl es push cltd push pushf in fildll add (bad) int3 test repz icebp add xchg add mov or push aas dec pop test cwtl sub jbe (bad) mov (bad) cld and sub adc scas xor aam daa je mov jg jle dec iret aad insl inc sti (bad) std cltd in loop push mov (bad) jge dec and sbb push push out scas into xchg out xchg mov or jle rcll dec in out aam out out sub push test call js stos jge out add xchg jp xchg outsb aas adc ret out jnp out jg mov in lret ret mov shl xchg inc inc cmpsb out push data16 jg push loopne (bad) (bad) loop outsb lahf addr16 out sub sbb (bad) sub (bad) mov add in (bad) add aad cmc mov imul push out mov (bad) pop cmp cmpsb data16 orl out add fistp out clc out nop sub inc (bad) cmpsb pushf dec inc mov mov sbb (bad) fwait xor xchg push popf pop (bad) mov das loopne sub loop dec cmp fs lcall pusha cmc mov out sbb dec push in xchg xchg shll sahf imul mov cmp cmp insl xchg pop stos out xchg cwtl insl shl shr daa adcl (bad) nop add sbb out dec jo push movsl int xor jmp adc xchg pop xchg sub or xchg ret out push sbb jno xchg out inc jecxz mov or fisttp fbld or or xor data16 gs enter sbb imul frstor push out sahf (bad) sbb enter lock sub sub pop insl jl lahf imul mov mov je loopne jbe jnp addr16 cmp xor lods inc cs sbb out fidivrl xchg shr mov loop dec cmpsl add pop jmp and lahf in imul rcrb push enter add dec fbstp fwait out jnp xor mov inc xor pusha jecxz mov int out test and adc loopne pop add out insl in movsl inc cwtl inc jb,pt test fcoms nop (bad) and or mov xchg jb (bad) loop lcall and jg call out inc sbb outsb push jae mov jge mov push and (bad) out sbb push sbb and xor pop xchg cmp dec xchg aad or in mov adc test out gs or cmpsb out (bad) cmpsl fxam cmp add je test pop sbb jno inc in (bad) ja out gs mov push jns inc ret out cmc lret pop repz imul (bad) cld pop (bad) lock sahf push mov loop mov inc pop mov ss jmp mov iret pop pop mov push arpl fildl lret out jae call sbb xorps fcmovnbe in and out inc das add rcrl mov cld push pop fild mov insl jmp out cmp mov aaa je cmp add xlat mov out pop scas addr16 or into sbb outsb and dec push xchg and fs dec enter inc xchg adc scas mov out sbb add out out aad lea in clc mov xchg cmp jne jno callw outsb add mov ret loopw jbe test sbb fstpl clc repnz or mov in cmp jmp ds out add rcpps or xor iret xchg mov shl popf mov mov xlat cmp mov enter (bad) lea movsb fdivrp out sub jmp outsl int3 scas out imul sub cmp pop xor pop outsb out out mov xchg jno ficompl mov or test adc pop pusha pop test inc sub sbb xchg sbb push outsb je stc in out sar mov fmul dec das lock loop dec mov mov xchg dec jle mov fdivr popa inc cmc out fstl mov out xchg subb pop daa xchg out jo mov imul pop (bad) je sahf stos movsb mov iret mov out repnz out inc sbb out ljmp add sbb movsl xchg inc sbb add (bad) aaa push stos or pop icebp imul push inc sbb les xor rcll lock sbb out (bad) bsr rcrl in out mov jmp fildll sbb out pop or std sahf dec into int ss ret icebp es xor add ljmp sub dec dec or loop push hlt sub xor xor ret fsubs out movd loop call out sbb or and jle je and dec out pop insb cs mov test cmp outsb pop xor out jno std mov into (bad) out iret and loop je movsl clc jmp mov int adc stc iret add ljmp repnz out lea pop sub add push out and pop lret decb lahf push sub push out cmc adc stos aas rclb pop out dec adc cmp push dec cmp mov sub out push leave popa or jno add test mov mov xchg add dec xchg lret out test jmp bound aad cmp lcall pop test out scas sbb pop ret scas mov (bad) mov stos cli and icebp (bad) xor xchg push add add out dec sub outsb imul jmp roll push add divb stos pop std cmp add adc subb push pop fildl ret out xchg sub inc fiadd out (bad) xchg loopne insb cmp pop fild shlb out mov mov xchg cmp test ss arpl mov loope lret xchg mov jns stos ja (bad) scas adc out xchg dec out push dec xchg lcall std adc mov stc jns sar lret jecxz loope jp sbb mov leave jno dec nop out mov fcomps cld (bad) out sbb push dec (bad) add (bad) push dec inc dec pop es fs test insb mov xor rorl jecxz fistpl out sub push push cli sub mov insb in lea lock and sbb orl aas outsl cmc adc ljmp rol push andl push jp cmp test hlt cmp int out push cwtl jo mov mov xor sbb out lock push pushf cmc roll out or arpl mov (bad) test dec add sbb out lea stos pop out pushf jmp inc repz pop out ffree or adc dec push and xor das sarb stos push sti fldz xor (bad) dec and scas cmp cmpsl dec out incb subl mov repnz in hlt loop sbb push shlb push daa loope insl es mov insb mov adc clc rcrb out mov xchg in pop (bad) lret lds sbb dec movsb jecxz push in cmp pop loopne test out lahf xor and insb sub sbb cmp enter pop or test sbb dec pop or xor gs mov fild lahf shr ret mov lret (bad) or mov sbb je adc lods movb loop xor out in push mov rcrb and or out sbb int xchg mov inc out out pushf (bad) arpl sbb pop jge jecxz out movsb dec sti (bad) fcompl cli push mov mov cmpsb out movsb aam out and fwait out add lock icebp push push out add mov jno mov pop call add xchg fsubp cmpsb jle call cmp lret mov adc icebp (bad) jb push push out push mov out call sub xchg pop sbb imul dec out outsl push pop or push bound out shrl popa jmp mov mov inc in out aad mov clc xchg repz arpl daa jbe test out in push (bad) fldt fnstenv xchg out ss out outsl pop enter mov mov inc stc lcall gs adc push out lock mov dec xchg les xorb fsub sbb mov jb sbb das leave xor push out cmp mov fisttpl mov (bad) mov imul mov out pop int outsl jecxz out add lods call (bad) dec in push or sub out xor fnstsw out xchg repnz (bad) or repz inc insb push sahf (bad) and jecxz xor (bad) or ljmp out mov int adc sbb test mov enter xor hlt sub cmp popa xchg mov xor dec dec xor ss pusha xor add or lret or pop popa (bad) lcall sub adc ficoml sbb mov scas xchg mov and inc out or mov mov out pop psrad fincstp mov nop mov rcll out scas sbb pop adc ljmp (bad) ds lock (bad) or loop cmp incl xor out ret and lods push mov stos mov pop push inc out jecxz shr pushf mov (bad) fistl setb out test jns push mov lods in inc sbb in sub push fwait mov xor roll (bad) pop test cmp in cs popf mov fidivl icebp out sbb ds call sbb mov mov inc shr pop jnp and out aaa xlat fsubrs cmp pop out cmc sti fdivrl jle push mov and nop xchg dec inc push jmp out inc dec fnstcw pusha jmp out pop (bad) jne (bad) cmp sti lock jae lret add cli rclb push and xor cmp or leave xchg sbb mov in fwait outsb loop fsubrp pop add mov xor in mov fcoms mov fld popa inc out dec rolb push (bad) fadds movsb mov pop pop enter aaa out ja imul std pop fldenv jmp and mov push stc out out sub fisubl setge mov in mov movsl pop enter jecxz mov (bad) dec out and and or sub ljmp out mov (bad) adc insb jge arpl xor or xchg xchg mov clc dec jecxz lock iret insl es mov outsl aaa out in out daa idivl push adc pushf push mov mov decb push sbb rcrb push pop mov in daa inc jo sarb out ficoml cmc sub insl out std xchg push (bad) dec push data16 stos pop jno mov push mov push cld enter cli out xorl call cmpsb pop ret mov fidivr pop je mov pop xchg jle xor mov mov sub add sub fstpl push rcpps mov pop jne bound push pop mov in (bad) std aad jo lahf push mov call sbb fwait rorl mov hlt xchg lods adc (bad) repz in inc push nop mov and sub pushw xchg in add pop mov out mov xlat imul out cli vminsd scas xor out popa repz and mov movsb sub xchg mov out test pop fucomi jbe mov out into in (bad) dec test repnz test xchg es mov in mov (bad) pop out jo inc jno jg jle mov ljmp fsubr xor dec mov cmp stc mov or adc in and enter inc shrb es inc (bad) mov out mov addr16 out sti ja push mov arpl popf (bad) in mov jge xchg cmp xor jae xor dec or addr16 pop ds mov lahf dec lods out adc outsb mov aad cmpsb xor pop sbb and sub mov in mov or jo loope mov fmul icebp xchg cmpsl jecxz lods pop ja and imul lds dec or cs push out mov inc repnz shr pop js das xlat cs mov jg shl out (bad) pop mov fidivrl xor cmp scas out mov sbb (bad) push and stc insb push outsb out cmp lret lods mov cmp (bad) ja xor test mov mov pop sbb push out inc xchg icebp je xchg test lahf fiaddl test mov sbb add (bad) call push fldl2e mov (bad) mov test iret testl push out dec fadds mov cmpsl in out cld or push inc popa add mov sbb out popf hlt mov lds xchg dec or pop shlb in enter mov pop jle daa in in mov lods adc dec cs jae repnz mov pop fucomp pop mov pop pop mov pop push incb aaa mov adc scas cmp out roll arpl arpl adc in pushf sub add xor (bad) xchg push cmpsb ss mov add cmp cmp imul pop pop outsb inc stc mov (bad) aaa pop loop pusha jmp push mov push sub jbe loop mov (bad) repz iret inc out cwtl xchg mov aaa sub xor pop rcrb cmpsb push out call jae dec fist dec adc pop and xchg inc mov stos add in pop mov out jnp sbb leave shrb xchg (bad) jb (bad) in shr mov inc mov fimull push mov scas loopne pop pop ljmp sbb imul pop xchg xor es call out jecxz sarl fiadd repnz or loopne xor loop and cmp out fistpl cmp pop test icebp cmpsb mov movsb mov inc push inc lahf out js nop pop inc mov pushf loope jbe out (bad) jmp imul pop out (bad) sbb fucomip cli out and lods add mov in (bad) icebp adcl pushw andl and jae bound pop mov out pop xlat push pop out push cltd aad out in mov push (bad) (bad) out out jge xchg or pop out mov sub dec out sub cmp dec push std pop (bad) mov out fwait cmp (bad) xchg cmc xchg mov int3 (bad) div add jge lods nop lahf dec stc cmpsb inc jle hlt out sti adc inc out cmp mov xchg inc jl out push dec cmp out mov out cwtl xor inc out xchg mov loop out inc pushf dec popa inc sbb and mov sub insb out fsubrl jns jge jg ljmp jmp xchg sub addr16 (bad) cmc out out rolb or stos loopne ljmp jb inc popa sbb sub push mov out addr16 movsl xor ret dec insb xchg outsb and sub mov dec movsb outsl mov push xor aaa mov out out pop cltd xchg push in cld out popa insb popl adc push loopne push (bad) or ja ljmp (bad) sarl adc xor repz fisttpl out fadd cmp js out cmp fisubl push or sbbl sahf je fsubl cmc jbe adc jge out divb loopne xor out in ljmp push mov jge mov sub push std pop hlt daa xchg cmp js insb aad lahf out inc arpl add mov pop imul loopne (bad) insb push (bad) out inc jl imul mov xchg imul mov repnz divb fnstcw inc outsb cmp repz in mov shrl xor cmp jo,pt and out mov jg hlt out add in orl outsl pop iret arpl add lret pop add sarb fwait cmc adc adc push out test adc cltd out movsl mov dec dec or mov je out das (bad) jl nop fimul loope xor out testl add (bad) rorl out imul (bad) pop push ret scas or in xor stos xlat (bad) mov cs or xchg jecxz mov xor cmp jae and out loope addl pop add out jne add mov jno mov movsl jl dec out xchg mov pop dec cwtl (bad) mov fwait mov js sbb pop addr16 xchg inc adc add cld test out nop jmp (bad) add sbb cmp push mov mov stc lahf popf jp dec sbb mov jne dec loop xor (bad) mov cmp imul popf mov add inc mov out inc sub xchg loopne int3 mov jno scas dec (bad) fbld lds shr movsl imul out sbb dec cltd aas ja xchg jbe jge not and fs (bad) out data16 xchg or sub out xchg mov divl (bad) leave out sub out push cmp push out sbb insl aaa mov out nop popf add cmpxchg outsb out sbb pushf push fcmovnb test shrb stos pop mov pop movsb outsb cmp (bad) (bad) mov sub pop and out push daa pop mov test fildl icebp out pop jmp mov (bad) sub in xchg add inc ljmp out lock xchg pop xor mov dec jmp stos lahf jmp out subl push movsb mov jp popa aam jmp jne cmp xor les out jmp roll (bad) mov loopne ret mov adc jcxz clc out fiaddl aam push dec sub jp push push leave inc call movsb aas mov loop cmpsb sub pop fwait dec into push jo sub arpl sub add xchg jecxz fisub (bad) aam dec std sti loop lods sarb xchg or lods cmp sbb addr16 aas lret cmpsl xchg ja rcrb out fsubrs jbe push mov xor popl dec xchg orl outsb inc loopne jmp (bad) leave out sti in inc cmp gs or lock fildll repnz (bad) in nop leave jmp ss stc out dec lcall out sub out sar and iret mov jecxz pop inc outsl jmp mov sahf add hlt test mov sbb clc dec (bad) je out pusha call push add movsb mov sti cld lds (bad) sarb out dec add push mov je jmp xchg out rorb loope inc mov add sbb and nop movsb fcmovnb inc ret jns adc fcomi (bad) out pop std push push and push and jne or mov xchg and pop out dec outsl add pushf out dec jne sbb (bad) (bad) repnz push and pmaxsw pop jno push mov pop jns stos pop shll cltd jb cmp ljmp or (bad) out or and (bad) push out xor jbe in cmp loop xchg test ljmp test or pop hlt xchg dec inc fcmovbe cli loope push out fsub movsl lahf sti data16 cs inc jg aad jnp (bad) pop adc (bad) arpl pop mov sbbl dec jle jmp out pop lahf xchg hlt sbb ret div cmp mov dec out cmp inc dec fcoms and xchg arpl ss pop lods sbb in fcomps ret push inc xor and into scas incb pop xchg push sub cmc bound mov sarb inc repnz jbe mov stos in and push cmp test int dec addb jmp lods out mov inc dec repz cli out imul fwait adc pop out inc (bad) cmc in dec push test pop xchg or leave out xor mov or aas adc mov mov sub stos fnsave or rolb pop add push and lcall scas cwtl sub sbb and dec fisubr sahf rolb out in jno pop stc pop cmpsb pop shll lods cs mov pop ficomp push js (bad) fistpl sub out test mov jb scas insl out call mov pop lret (bad) sbb mov push out test pop mov jle out leave faddp or pusha mov movzwl mov lods ljmp jbe fldcw repz lods pop xlat lods sbb dec lret add out jnp jno (bad) out insl out xchg ss cli stos in fistp out bound ljmp xchg out imul loope push out scas xchg jnp jo sub xor jmp sub (bad) std lea out loope rcrb fild inc push mov dec lock ficoml insb test adc lods mulb sahf lods stc in out gs add or (bad) fcoms fwait out jmp nop pop pop mov imul (bad) loop jne inc test mov jle (bad) sahf adc out sub inc in in jg dec cmpl mov cld mov aam out std push sbb clc mov sub mov and sbb imul adc push imul insb push out popf and loope test xor add test in insb sbb out fsts addr16 out mov stos sub jb insb out cmc xchg cmp inc shr mov dec ret loopne xchg push mov addb rol dec jnp ret shlb out mov mov out or and clc xchg mov out ret sub out adc ds fsubrl ret test dec out mov xor stos mov xchg adc enter and mov cmp mov repz out dec lahf icebp mov pop outsb xchg out sbb dec es incb out pop notb or (bad) movsb bound inc push (bad) out lcall inc in mov (bad) push mov push fld1 mov loopne pop dec jo enter imull add dec jne jp iret and out call gs aad movsl out (bad) push mov dec cmpsl pusha loopne ljmp push sub sub dec aaa rorl lods fldl mov cmp xchg (bad) fidivr fwait add ret out imul fldt out lock jo xchg mov xor adc xor inc mov adc (bad) lods iret shlb jl lock in rcrl xor jnp and popf out dec in enter loopne inc gs repnz xlat xchg xchg fbld sub out out pop sub arpl lcall pop inc cmp pop cmp neg lret scas sub aas jg inc adc dec loop lock out inc cmc adc out mov cmp std pop cmp in ja xchg out pusha (bad) push ret cli mov and lret add jg dec sub inc lret mov fcoms sahf out pop jg cmpsl xchg push pop out pop inc bound rclb incb loope insl ja out js arpl push inc fbstp out and das sbb loopne mov cmp sbb jb ljmp xor jo xchg sahf scas jp out and inc je ror out std outsb xchg jno cmpsl js out push lds cmc clc movsb fnstcw push jns lcall in rclb cmp daa adc sbb (bad) loopne scas add xor cmp push nopl xor je sub mov mov cltd out sbb outsl dec push xor mov ljmp (bad) and les in xor xor jbe xchg mov ret je fnstsw out mov xor push dec jno mov mov jle inc aaa jo jnp push sub sub insl add out negl popa repnz adc mov jae or out cld cltd loopne or add sbb inc adc iret pop cmpsb lods sti hlt push bound insb pushf mov fsubl mov cmp (bad) rcrb int3 ljmp dec cltd mov ja xor lock cmc sub fs mov xchg pushf fucomip xchg int3 out lcall sbb jbe and popa in in rorb jae scas out in ret jge fwait pop mov or movsb pop (bad) cmp pop lcall lret pop out push push leave push adc sub push call daa loope xor adc push push movsl in stos xchg repnz adc mov test shrb nop (bad) out sbb outsb mov ja out jo push pop aas lea jp push sub push cmp (bad) out scas ja bound insb xor int out jae loope mov out lret out aam fcmove out addr16 sub ss sahf std xchg jo jno jp sbb in in cli sbb les insl test jecxz mov cli (bad) lahf (bad) in pop ds in add mov mov popa and mov and dec sar cwtl out insb test movsb fnop out cltd or jmp pop push xchg adc xchg into insl addps in sti sub xor dec es out out xchg or ret out mov inc insb ds fsincos adc adc xlat mov out or xchg insl jmp inc gs lcall aam insb test xchg out dec push jbe mov mov cmp out out sub mov mov es pop push dec cltd (bad) ss ljmp sbb xchg pop xor into jge lock cmp out add mov int3 mov mov mov jl jnp mov out ret rolb jle jns loope mov stos mov lret jl add sbb fdivr and aaa ljmp arpl xchg je xchg out (bad) adc repnz js out mov pop lds shll out ss mov hlt mov mov fstl bswap jne sub xchg sti out lds test fs pop out jb mov test mov push mov jne or stos adc cmp (bad) outsb out inc mov xchg xor fidivl jg ret ja xor out int (bad) imull out jns ljmp sub pop out enter loop fdivrp out insl jg jp (bad) rcrl int jl add in mov and (bad) mov daa add out cwtl imul out pop add faddl insl mov ret (bad) out fstl or (bad) sub or pop xor ror andl dec add out mov adc or out mov iret cmp add popa iret fmuls ljmp mov arpl (bad) stos (bad) jge lods jae lock call out sub (bad) mov out or jne out (bad) cmpsl push fs leave push aam sub or int3 (bad) and cmovae push sub xchg mov pop out push outsl mov int (bad) fimul lock xchg out dec xchg imul mov ret out xor int mov mov lods std sbb out (bad) in jl push icebp lea mov push xchg (bad) xchg in push out dec adc inc fucomip dec xor (bad) (bad) pop ljmp jns pop dec nop icebp out pop (bad) xor xchg std out imul push mov movsb out add cmp stos lcall xor pop inc jmp daa sbb or fnsave jecxz jmp je cli movsb fisubl rol aad out lret xchg and mov js and (bad) xor mov lret push pop loope loopne xchg push pusha iret xchg mov or sti mov xor mov add (bad) push mov pusha inc out lea ret out sub rcr imul ds enter cmp ljmp xchg jae jecxz aam pop push enter gs out pop fnop jns (bad) hlt sbb stos lahf rclb sub mov pushf dec sbb je insl in push jbe out ficoml sub pop jecxz fwait mov sbb imul push and sarb cwtl shrl out (bad) fldcw in mov call cmp cltd popl cld out sbb or jno mov jb out mov cs fs fbstp dec outsb or int3 fst icebp add push xor jle xchg push jmp out lret pop cli jae lods mov cmpb loope out mov loop push dec out lahf and js mov xchg pop call cld sub imul and rorb jmp jnp gs or lahf adc inc popa repnz fucomip out int3 in sbb stc (bad) in (bad) ljmp xlat stos push push cmp (bad) cmpsb fildll aas aam in out fs shr sbb fs nop xchg lcall int3 jmp rcr jmp loop fs and loopne daa jecxz ret push imul xchg ja push fnstsw or mov cli ljmp out imul dec lcall push mov cmp addl push insb scas (bad) out jb xchg cmpsb addr16 mov and mov mov jp lret xchg sub sarb add imul iret testb mov call cmp out xchg clc push lret out sbb adc out inc and jno out (bad) aaa outsl lret fistp mov js cmp adc clc add movsb mov cld jge (bad) xor pop dec data16 ret inc mov xor pop pushf clc loop cltd xor aad lods xor cmpsb push out jecxz lock (bad) jo fstpt pop xlat add cmp out aam cwtl add add mov xor daa out mov sub imul jb push pop (bad) mov pop cmp pop in subb (bad) iret sbb pop in adc std (bad) (bad) mov insl test mov out xor out xor xchg negb or out mov push int inc addr16 aam and imul mov sub jge mov test fucomip test sub inc (bad) lret iret jo and ljmp enter icebp ja in sahf out sub repnz out mov (bad) adc xchg fmull mov out jg (bad) xor hlt out xchg xor adc sub sbb outsb iret add add push adc mov lds (bad) adc push test sbb xchg xor sbb testl ret mov in inc mov bound leave lret int3 cmp rcl dec jnp push loopne jbe jp xchg outsb add inc sub xchg inc aaa aas cmp int3 div in sub (bad) mov (bad) out jge popa loopne aam mov (bad) gs jmp cld out push mov repnz es aam pop pop mov in jecxz sti mov push fdivrl jo out inc jg xchg adc loopne mov mov mov mov fadd das xchg dec int ljmp mov mov jg mov paddusw mov mov out aam dec push arpl inc cli out xlat or dec ret rcl lret out pop jle mov push inc ljmp (bad) imul in dec out inc xchg push in or fisub sahf fdivrs mov adc inc push xchg out mov pop ret int3 in out dec es sbb aas mov roll push scas xor fs out ret sbb mov cmc out xor out inc inc icebp push push jnp jbe popa sbb data16 mov aad clc out mov cmp (bad) fmuls jmp dec mov pop jo jg xor fildl dec out push mov mov aas inc repz out sbb out cmp cmpsl adc out mov dec fbstp push jb sub xchg aas test loope les push (bad) iret fldcw loopne jns std and jne popa (bad) out dec arpl jge imul inc mov mov pmulhuw lock push xor jecxz fdivrs jp imul xchg add dec sbb pushf sbbl push pusha mov (bad) out int inc test ljmp jo mov mov sarl jge rcrl mov rcl inc out movsb js std out dec aad fiaddl sbb out cmp or dec scas lret in enter mov xchg ret xor push jge out fdivr mov lret push test ljmp out xchg in int jmp mov insb repnz aad pop add loop mov roll jmp xchg cmp push daa (bad) xor xor int jbe jo ds mov (bad) or insl ja jb lret xor lock mov mov xchg popa (bad) jnp push scas pop repnz fiadd insb cwtl std ja jmp lea out xlat enter mov and pop ficomp repz test xlat mov (bad) mov (bad) xchg out mov lds jne cmc subl lods shlb ficomp and pushf jg ja rcr insl push (bad) loopne inc cmp jecxz fsubr shrb into (bad) xor out inc inc pusha lods jne out ret lret push std xchg push sub hlt out xor notb xlat jle aam push jg lods rorb aad daa popf out jo pop inc out add out insl mov cmp and orl lret inc pop mov insb gs out pop pop les out or imul mov jecxz js xor hlt (bad) pop add xchg jl lds push cmc mov out pop add mov lods cli adc mov ffreep call jne,pt out ljmp popa jae out pop sbb test xor out fistpll pop jl (bad) mov cmpl mov or sub sub jmp push fildll divl fucomp (bad) ds dec movb or mov out add xor push xchg out ss call jge sbb out fs jecxz jno int3 ds lahf inc imul out push pop xor fbld insl inc pop test sbb sbb mov outsb or dec pop fs aas lcall xor sbb js cmp clc pop cmp push mull gs sbb loop jb sub out and fs and lock bound mov out outsb pop push loope popa inc pop test inc in gs dec jecxz push repnz ljmp imul out ljmp lock jno xor (bad) call push and sti sub cmpsb sub outsl push das popa out push and loopne jae outsb mov out mov jmp sbb ljmp lret adc adc aam adc push sbb sbb sbb push sub lock bound iret pop in loop out out pop jmp lret ret pusha movl out jmp in jecxz add lock iret or lret sbb sbb call add push enter ror xlat or dec in or lret sbb stc sbb (bad) clc in fdivl aaa jecxz (bad) mov repz xor icebp xlat mov cli sbb std sbb in hlt ret (bad) cmc jg in (bad) addr16 int (bad) xor icebp loop in addr16 sbb leave jo das push fs push mov inc loop call jo (bad) mov int3 jmp imul jg shr jne xor out in gs js mov cmp (bad) sarb insl (bad) (bad) imul adc arpl (bad) fs mov loop push lods pop out addr16 call push out outsb xchg ljmp popa mov out adc lret pop and inc in (bad) imul lock bound in inc iret imul push (bad) jecxz arpl aas jmp loope xor jo in aaa insl jecxz lret imul out sbb shl stos push sub pop gs and into pop and lock push jmp push cs addr16 gs loope pop loopne and push outsb adc shrb imul popa (bad) fbld test test ret pop jmp mov inc lahf jecxz rcrb ficoml out sahf shrb (bad) lock xchg loopne adc lock out out leave jmp sbb rol js out out jmp cmpsb sub pop inc loope lock xlat lret xlat mov int3 jecxz sbb xchg inc outsb xchg ret or in pop xor lret add fs aas popa ljmp jle mov xor je mov (bad) jnp mov pop jg (bad) divb xor in addr16 out push ljmp shrb sbb loope lock push mov out mulb fs and imul push outsb es and test jnp and push out mov in push out xchg jmp jnp enter in in pop lret add out and mov call in sarl insb sbb aas ljmp inc ss out loop in cmp clc (bad) out cmp jp jb mull ja popa in out cmp jns pop add in jnp in xor pop add and bound push jmp jns,pn xor and es ljmp jmp (bad) and or push mov outsl in jecxz out and pop out fs in pop pop sbb (bad) sbb pop push pop fistpll sub adc cli push cli pop ljmp out sbb ljmp push imul dec rclb arpl ljmp call sbb popa xchg push ds cmpsb dec (bad) aam sbb popa cltd outsb fucomip pop adc shl and push iret (bad) nop std mov (bad) adc outsl jg imul repz mov jns out mov fs loopne insb mov push hlt push mov cmc pop aaa sub pop cs negl in stc outsl mov cmp push imul mov aaa fcomip fs repz xor icebp sbb in std push imul fistp outsb mov out mull (bad) in mov jge gs fsubr stos movsb mov pop addr16 push jecxz mov std ljmp jmp in in sbb jmp loop fdiv cltd out loopne sbb jb cwtl jmp (bad) pop data16 lock fldl2e sbb sarl in aam out xchg jo loop arpl call in pop out mov js es hlt in in out mov out jmp in scas push jo shrb in jmp out push loope in xchg out push out adc imul decb (bad) test jmp jbe movsl push ja cmp ljmp test fnsave in in shl cmp jae and ret (bad) jb xor jnp ljmp call and iret sub out jo mov in sbb out aas lock and mov aam adc pop out in lock or pop adc (bad) (bad) fsubl xchg out mov out fnop lahf scas loopne jmp call std in in jmp loop lock pandn push scas fisub outsl mov loopne loope daa insb in out in cmpsl gs out lods ljmp push push jo cli mov jb int rcl lcall out inc nop (bad) mov out cmp data16 out iret in fcmovu and aad xchg popf fsubrp mov jo xchg dec test push call fiaddl out jbe out inc mov idiv pusha cmp f2xm1 or in shrl jb fsubrp xchg sbb dec sbb dec dec (bad) mov loopne fstps out fsubrl add pop call mov rcrl mov out out xor out movd jno and insl add and mov lahf loop arpl test fistpl sbb insb bound data16 out dec call out add cmp mov or out jb pop aad clc pop dec out fs mov out mov inc (bad) sbbl je xor mov mov jmp out inc cwtl mov repnz stos sbb adc sbb jp add bound mov push repz add jp inc xchg testl xor lcall out push mov sub jg (bad) dec sbb out loopne ret arpl sub out mov pop fnstenv push imul mov je stos fs iret add lds cmp jae push out pusha push xchg shl jmp jne je jbe fucompp dec push (bad) jo xor scas and sbb jg pop lods out jg enter xchg mov and arpl xchg mov jae cmc test mov out mov inc lcall dec add sbb sub out sbb (bad) mov xor test sti daa gs push push mov inc iret loopne pop push and arpl fisubl or addr16 xchg push or xor (bad) or lahf pop add mov cmpsb es xchg jno mov dec pop dec cltd icebp xchg jb or cwtl xchg mov out stos xchg push push ja out mov add imul mov jl jo xor fucomip xlat inc cld and or mov jge add in addr16 and es cmpsb sarl jl outsb and dec out add out mov add sub xchg dec bound mov pmullw dec out sub sub repz sub out lret xchg mov cmp std cmc cli out test cmp lea in push movsb lds dec imul and jl adc sub std dec jmp xor xor arpl mov mov ds (bad) pop adc test jns push mov jb das je inc icebp or ljmp out mov cmpsl push cwtl mov pushf ljmp fstpl jge out and out mov pop cmp rorb push and out inc js test loope out cltd dec push xchg leave push mov and and pusha xor jmp neg mov in cmp ror push mov stc pop outsb imulb and jg cmp test xchg mov in cmp lcall mov ja and cmp fiadd ret and cmp push lods fs push mov ja cmp shll out imul xchg aad sbb sti sub pusha cwtl fisubl push inc sbb push out pusha jmp scas std shrb insl pop mov out xchg fs xor add dec add out popf mov outsl adc in xchg out adc mov popa or and ret stos mov out sahf in adc cmp fcmovb pop sbb test push int fwait out push shlb pop cwtl push loope pop aaa pop sub fucomip out lcall mov adc call pop shlb (bad) push ret cmp dec inc movsb js pop pop cmpsl hlt jnp lods push repnz adc add icebp xor or pop fisubr dec pop adc test hlt loop xchg out loop fimull adc aas cmpsb sub insl test xor xchg push sub jg sarb lods pop (bad) roll (bad) mov ljmp out pushf out dec sub push inc mov xchg jl adc pop pop iret or jle out movsb adc jmp lret dec inc out (bad) popf jg pop popa out pop ss sbb inc push dec mov push push jle out xchg adc and out mov and mov pushl mov std jbe es out test mov popf pusha push and dec jne (bad) cli in sbb pop test arpl cld loope dec nop mov xchg xchg push mov rcrb mov mov cli scas mov pop out mov call fisttpll out daa jns sub addr16 into inc out xor mov stos outsb mov rcr arpl loop loope aas icebp jl and sub xor (bad) jecxz lahf sahf push jp jg (bad) xchg int call popf (bad) sahf sbb inc add out out adc push (bad) cmpsb jns movsl loope push stc inc and mov arpl aad int lahf pop call xor xlat or xor mov popf lock sbb push inc push adc loop xor xor mov (bad) out or jecxz sub or jo addl into pushf pop in sarb dec ljmp out pop out jae and out xchg cmp or mov or inc dec pop (bad) rcrb mov dec loop fldcw sbb and stos mov out lds mov clc movsl out std mov jecxz (bad) mov mov arpl fsubrp xchg jmp negl fmuls fldenv cwtl mov out cld loopne pop inc shr push insl test in popf mov xchg repnz xchg adc repz scas xor pop inc es out jecxz aam decl cmpsl pusha out das xchg inc and lods lahf mov adc into sti daa and mov enter lcall jnp hlt in out mov sbb inc rcl ret adc into out lods xchg pop ljmp (bad) jecxz and cltd inc pop inc dec xchg insb shr aas or dec repz xor jecxz cmp mov xchg inc cltd xchg xchg subb ljmp sbb insb sbb cmc push inc jnp hlt aad out lods in mov adc xor sbb adc fisttp xchg std mov inc scas xor into sbb sbb inc dec lret pop movsl decb out mov cmp (bad) iret xchg mov pop cli (bad) fcoml sub pop out outsl or ljmp mov fbstp sub mov sbb ljmp lods xchg xor imul pop fwait push cld sub mov jae,pn int3 mov out jl rcrl inc cmp lock xlat out fcompl sbb test pop andps popa or (bad) fildll adc aam mov in lock inc int out push roll fsubr mov movsl lcall scas xor out push std xadd ljmp jmp rcrb out aas cmp jno inc add add jecxz icebp sub ljmp and or sbb cwtl out repz cltd or pop xchg dec pop enter in adc add sub fstpt (bad) pop out xlat stos iret mov inc stc mov adc inc test and lret ss mov pop adc mov pop scas jecxz and (bad) out jmp les jmp movsl in fldl add sbb out popa xor addr16 pop idivb mov in mov add in xchg jp jae mov sbb jmp dec cmc out adc xchg and sbbl pusha (bad) inc out mov xchg add mov sub jno shr and jecxz frstor mov movb push fimull inc mov fldenv lret pop int inc fimull dec dec cld cmpsb cs out divb cmp ret mov nop ret pop adc out cs out in call lret sbb push push movsl jne push and jg bound out pop arpl das jmp push pop in push jle out insl xchg jmp out pusha ljmp sub in int3 out xor xchg in arpl cmp fisttp (bad) test lahf out les out (bad) in out jl mov imul cmpsb sbb dec jb and int jbe call jno lahf mov sti mov ret leave mov inc fcomip gs xchg loop out pop in mov hlt es push push movsb shr faddl ljmp vpsrld push xchg jp out pmaxsw adc addr16 mov cmpsl push lds icebp (bad) push jmp push movsb out dec out inc cmc rol adc lods cmp and jns (bad) fidivr add sub vmovaps rolb das mov (bad) es (bad) in dec out lahf jb rcrb cmpb cli sbb outsb cmpl ja out mov push mov scas dec iretw push shl addr16 ja jnp sbb mov mov mov mov xchg (bad) iret xlat js es addr16 and lods inc push inc into cmp mov pop (bad) fildl das add lods scas or leave jns repnz insl loop shr pop iret popf cmp pop dec and mulb mull xchg jno adc xchg pop cmp xor jg cmpsb les rcr iret mov xor clc pop in lods out or out jns ficoml pop mov (bad) (bad) jne aas or jbe adc xchg ljmp xchg out mov push insb out test fcompl adc mov mov sbb sbb (bad) cmc fsubr mov cmp push fcomps xor sub insl negb rcrl movb jg inc jns dec fistpl jmp iret pop nop or (bad) mov push leave bnd iret adc outsb ret (bad) data16 adc cltd sub std cmp gs or cmpsb out (bad) leave xor repz lods subl stos pop mov repnz mov popf in and out aaa divl mov out fdiv outsl or dec sbb ds stos lods aad out xchg inc mov adc push jb inc xchg rcll decb push in mov sub xchg pop out in out jb jmp adc les out lock js out jecxz dec xchg mov ficompl rcrb push loop mov or mov mov add out xor jmp xchg loope fisttp (bad) aaa lret pushf shr push das ret mov test (bad) rclb enter (bad) jecxz,pt int jecxz push push out jle lods sbb and xor in dec (bad) int aam lahf or in mov out scas jecxz mov insb push out push mov sub popa jo sub and inc xchg out push jbe int3 pop pop mov pop inc (bad) ds lahf out ficom sbb mov ss into cmpsb das js adc xchg push jbe dec mov jae addr16 dec pminsw push jo in push ljmp lret jne cmp shlb out icebp push nop inc sahf movsl out jb dec push and scas fsub mov js out push push gs sub push (bad) out jns cwtl xor nop test lods jo fildll mov iret jge rcl outsb cs sub lock loop jl ficoml jmp mov dec stos add xchg (bad) push or cmp call lods mov pop out lods (bad) stos mov and mov enter adc jl xlat sbb aaa or sub jbe inc xorl or jmp push mov fdivrs xchg or in out dec push cmp or mov arpl out mov jo,pn sbbl or cli xor inc ret (bad) cli out repz in cmp out (bad) call adc int3 out push sub stos stc popa mov adcb arpl add ljmp cwtl jl rorl gs adc push jmp fcmovu into lahf pop mov cltd adc jb out mov cmp in push mov xchg or inc adc loopne mov out push lret push ret out pop push cmpsb fwait inc xchg out je push push outsl push or add mov bound sbbl cld and nop add jge adc mov push fist loopne push sub nop mov (bad) pop dec test push aas mov aaa mov mov insb adc push out mov das fs fistpl ss sub cld out pop (bad) mov pop out and clc popf lock pop push jge out fstpl lock out in mov mov ja jg xchg xlat add xorl adc pop push out jno cmp xlat out lods pop (bad) aam mov mov xor test dec sbbl fcoms ret mov gs jo or mov in in inc cmp jmp imul and mov enter push out ss jb push pop fmuls cmp inc movsl or hlt sar test ret out fdiv lcall jg (bad) test mov cwtl pop fiadd or (bad) jmp cli xchg push mov push (bad) ss cwtl adc dec out into or scas fisttp stos out scas movsb mov not rorl pop leave inc and nop xor cmp ljmp loopne mov mov xchg and jnp mov xor mov das scas pop loop,pt lods cmp imul jno idivl mov popf fstpl push out cmp inc xchg inc pusha insb pop out adc ret push push out push rorb xor out add pusha cli push sbb scas pop jg mov ss and stos out fs or mov (bad) daa addb sti mov mov mov sbb data16 push in inc push out dec outsl add push cmp das loopne jl orl pop sub (bad) lods mov fucomi pop inc sbb arpl cwtl jb out (bad) lea cmp mov out mov mov adc stos into cmc (bad) xor inc in pop ret and mov out mov (bad) loopne pusha aas jbe (bad) sbb and lahf xchg xchg out shl dec xchg decl inc mov sub andl cli out cwtl in mov mov or (bad) cmp cmp sahf out xchg jb pop test std and sub stos das mov out mov mov test or inc xchg pop pop out pop insl inc cmp iret add xor fnstcw aas cmpsb cmp dec dec out scas cmp in mov out jns inc jecxz hlt push out std repnz ljmp push fisttp jmp out push (bad) ss out and jmp stc mov iret arpl out inc mov les out mov sub mov roll loope push out adcb fidivl das data16 out jo ljmp push push pop notl outsl push pop out or push js outsb lret pop out sbbl lods add lods xchg jl or movsb stos pop jb out es fstps enter sub out mov stc mov jmp sbb out mov les push (bad) out iret pop sbb cmpsl fs dec out add enter push sahf ds popf pop scas inc (bad) cmc insl into gs fmulp ds (bad) cwtl sahf and xchg adc mov xor (bad) mov or pushf xchg jns and mov jnp cmp bound sbb or mov jg icebp (bad) pusha adc (bad) js,pn stc inc sub push data16 xchg push aas xlat sbb pop pop out or out xor stos mov loopne pop out lods lea mov mov dec cmc fiadd jbe xchg scas push fs imul loope or bound jae insl or (bad) sub notb in and push dec (bad) dec sbb pop ds jmp inc out xor sahf test and add movsl icebp mov sub ror or mov test aad les jmp cltd cld fmuls popf or das add push adc xchg push and jecxz mov ljmp (bad) or fsubr fimul test jne enter pop loope cwtl out loope sub out or push (bad) cmc mov fucom cmp test pop push pop (bad) pop ret incl dec lahf rorl rcl push sbb mov std lahf ror call jle xchg out ret scas cmp cmp clc inc or or mov shr inc xchg fsubrp bound mov jmp out mov xchg xor out repnz inc out imul pop pop test mov mov xchg mov (bad) int3 out divl aad out inc test out mov out data16 fdivrl stos arpl fwait (bad) repnz in sub ret jp je int adc repnz jb fisttpll xchg jns dec ss data16 and clc cld pop pop daa jne sub jns and test dec push lods jae ret out mov les pop test dec inc stos jb jb daa xor mov out fcoml iret xchg mov mov enter mov rcr mov or hlt mov adc dec mov inc xchg fsts cmpsb mov ljmp and and mov cmp inc sub daa pop call lods out sub push icebp iret sub fcomip push dec loop out pop lods pop inc pusha pop dec add jmp hlt mov mov rorb jmp sahf add stos lods and out aam (bad) loop mov and int3 or imul sbb (bad) lods out and sub xchg out js mull xchg (bad) push out repz dec push jle roll (bad) loop mov out add aaa mov lahf jecxz xor fs bound add shlb mov out leave push stos sbb out xchg inc jp sub movsl jbe out add mov (bad) or out out push cmp xor in out mov or xlat out add (bad) dec sbbb out (bad) je jmp out in jns pop fwait adc mov xchg je aad lods jp mov mov pop call (bad) or out pop add jnp jp data16 loopne cmp cmp out dec cli mov xchg notl push sub mov je out cmp int3 xchg push out jno adc test roll push nop loope xchg in insl mov ds stos movsb or scas add jp icebp mov sti add dec rcr mov imul adc lea cmpsl jb inc xchg imul int lock test pop mov in out xchg es rorl cmc mov je xchg out mov jns repnz push iret mov ljmp jmp mov xchg daa call int pop jno sub stos fwait inc pop sub in out cmp adc (bad) ljmp cwtl out imul pusha (bad) pop addr16 push inc nop cs out loop pop push in lahf jl out xlat push (bad) test test in cwtl sub xor pop scas pop in out pop inc jmp add push (bad) mov fdivs sbb insl out rolb data16 not ljmp add add push iret lods out in lcall loopne jbe out es insl clc ljmp mov and fsubr lret out into cmpsl push out int3 popf shrl (bad) rcrb leave and pop in mov ljmp rclb and jmp fdivrs ja dec iret test mov (bad) push adc mov movsl or out add addr16 sub andl ret xchg mov test outsl loop push mov call repnz out mov mov stos fwait rdtsc clc (bad) pop cmp daa bound stos jecxz out jns das iret jle xchg dec xchg sub jecxz sbb sahf inc dec mov (bad) adc imul int3 push aam or hlt in mov mov mov setbe and xor pop ds repz inc movsl nop je mov and push mov int3 outsb adc xchg cld sub xlat mov push jg in mov inc loop (bad) cld pop mov into mov (bad) loope,pt loop and xchg fldpi pop cmp dec je outsb rcll push xchg fldt (bad) xor adc out aad jb (bad) fmul loop rcll stos dec int3 je out sub push dec ljmp adc leave push sub lea xchg sub aad out jne repnz sub xchg inc (bad) out jle test or sti add leave or dec cmp lods mov out add je fbstp push pop jae in pop dec jb push stc mov rorb cmpsb mov test dec popf fsubr int3 and or jo dec cmp xchg lahf fnstcw out addr16 lods push enter out xorl (bad) test sub (bad) out dec in cmpsb xchg fwait cmp imul pop inc fmulp xchg add xchg pop (bad) jle sahf movsl popa push adc out lahf out out push notb dec (bad) arpl aas lea mov xor mov add mov or push cmc icebp out sbb xchg out push dec push and iret imulb mov scas enter sti mov call out ret xchg pop fldcw pop inc ja stos xor push sbb in clc fsubr mov pusha (bad) scas mov imul fs call push aas lock add mov or inc div xchg jg dec pop out adc cmp gs dec or movsl adc and xchg push ficom insb dec cmp add (bad) add outsb jmp sub les inc movsl xor pop out mov mov add cmp (bad) (bad) (bad) icebp adc (bad) (bad) pop xchg imul cmp popf outsw incb jno push sub sub dec out fisubl add lret push (bad) (bad) out jbe std repnz push push aam out cld mov mov xor cmp iret and leave push repz out andb inc out cmp push fadds push stos fbstp push stc mov movb lahf das pop jno push inc in (bad) cs xchg out jnp in inc sbb add fcom cmpsb (bad) jo sbb (bad) and sti jmp sub in lcall out ss fcomi sbb popa pop pop and (bad) jge aaa ljmp or ror jo mov fist mov jmp or mov sbb out popa xchg lods mov jnp (bad) xchg out push popa out jge dec jmp cli out cmpsb cmp mov scas imul loop mov fimull in dec ja mov add lods ret fsubrp push ret fs xor loopne andl xlat adc in mov mov mov mov xor add mov sahf out repz into sub pop clc jne pop lcall jns (bad) ljmp out dec adc mov cwtl push out jmp jbe pop pop test outsb pop inc pop pop and jg push xchg inc xor fildll stos out fcoml and jp push and loopne push rol hlt and pop popf mov lahf ffreep fs loope mov out pop loopne jmp jne cmc (bad) insb shl xchg mov dec nop pusha and outsb sub and in mov sub dec out jno pop loope imul (bad) (bad) (bad) cs jmp adc test imul ror mov aad (bad) out dec ret pusha sbb mov mov mov mov (bad) out out mov inc inc out addr16 scas pop sub sbb mov js push mov mov adc xchg out dec repnz pop icebp xchg in inc jns addr16 push (bad) in mov cwtl cmp dec add outsb mov sub cs loopne sub dec (bad) out cmp sub inc call cwtl (bad) cmp push daa cmp and jp pop movsl fsubrp cmpsl mov push dec pop cmp lcall mov out xchg or jae das aad imul sahf adc mov fninit pop push sub data16 out dec inc idiv loopne adc or popa cmc and insl sub jecxz inc neg aaa xchg out mov cmp pop pop xlat xor mov fldt xchg (bad) mul jae ljmp out repnz push mov and gs push imul les push sar add call lahf cmp rcll mov sub mov jl sti jecxz out mov ds in pop out sahf mov xchg xchg out and cs sub ljmp movsl into pop jnp imul mov jmp int out xchg push int3 out sarb arpl inc jge cmp or fist out jecxz std xchg xor adc cmp nop out mov (bad) out mov jbe xor adc jns lahf pop fsubr adc mov adc popa ljmp cmp sub ljmp lods inc out inc cwtl cmpl push test repnz sbb sbb imul jns popf ret push pop (bad) call lods pop push out jmp inc sub mov mov cmpsb (bad) out jl xchg sahf sub mov pop scas push sub out mov inc mov insl out or loope jecxz pusha ljmp movl sub and addr16 cmp adc out inc pop xchg nop call popf jl xchg mov repnz jp or and jmp push leave sbb xor sub gs xchg lods mov clc sahf mov jbe pop push cwtl orb out jg and xchg scas movsl popf jp ja call out pusha lds and into fstpl aaa mov outsb fistpll lcall sbb mov jno daa rcl sub out int3 adc repnz lods imul mov xor push inc sbb bound dec inc ret jno pop pop add jp mov pushf fs pop aam loope stos test ljmp pop push jno movsb (bad) mov ret mov jns and cltd jle,pn out clc cmp pushl push es jg lcall xor ss push addb pusha stc aad std mov ja pop mov imul pop test ret push add mov je out pop add mov jb sub fisttp repnz rcr insl pop (bad) out loope stos mov mov out mov mov mov pop and sub sbb sub cwtl jge out shlb jecxz push adc add inc loop test out fs popa dec or sbb (bad) jae ja test sub bound out push add mov jmp divw (bad) mov pop out test movsb pop out jmp int3 push jge mov mov adc (bad) mov paddd jle sarl pop shlb ja mov inc leave mov or sbb arpl inc dec lods and inc pop fstl out cmp mov dec in decb loopne cs fldl pop out shl xor lahf xlat daa popf stos out or jp out lods mov aad push out pop pushf test scas mov out ror (bad) cmp ror jno fidivl lds and out and and mov lock out add test or push cmp xchg inc out stos jne jo cs out pop cli mov in pop sbb push ds mov sub or ds push fwait (bad) out shrb dec jbe dec stc in gs rcrl clc or xor cld mov sahf out out push sbb pusha push lock mov sbb dec push out loopne adc out mov (bad) lods push out mov push daa out push sub cwtl or sbb mov mov out cwtl loop out imul ret jg scas (bad) arpl out out and mov sub dec fsubrl fldl enter mov ret sar out outsl lock sbb int3 push pop jecxz xchg xchg pop sbb insb jne fnop cmp out aam dec push xchg out repz leave mov xchg or push lret shlb (bad) mov mov lock or and and iret pop data16 into mov shrl or inc ret jns xor dec adcl nop lret mov test cwtl lahf out fsub notb lea stc loopne and out xlat loopne dec xchg mov mov out das adc jne loope adc aam push out mov and mov pop arpl cmp ds xchg xchg rcrb test ret out pop pop push push add pop mov sti jl lds add mov jmp frstor pop cmp cs cmpsb fucomi sbb loope pop gs cmp or push in out mov dec pop lods out xor gs icebp int3 mov jnp repz lret movsb movsl aaa out jbe mov push test scas fnstenv mov jae inc out (bad) call pop push out lods das stos mov loope push insl jae cmp lret outsb mov mov pop mov (bad) ss out cmpsl sbb mov iret in fdivl jmp pop jg mov cmp out cmpsb (bad) lret xchg (bad) dec in data16 dec pop sarb es rcrl pusha jg mov mov pop pop je jp hlt in or dec out cwtl mov scas push (bad) je xchg fstpt outsb fnop out lds dec xor jno imul lods (bad) xor lret xchg out mov cltd leave insb cld lds mov out xchg sub popa inc aad sbbb jb out or xlat pop mov fs mov mov out out incl mov iret ret fcomps into sub inc fbld insb and mov decb add popa mov mov pop cli cltd out in jl loopne repz fwait sub sbbl loop mov push out mov pop addr16 in pushf mov sbb jno mov lods cld sbb lock push out fwait lea out (bad) push outsl xor scas pop out xor jbe xchg imul js loopne mov dec xor pusha adc inc sbb cltd ljmp out dec inc xor pop (bad) icebp out popf inc push pusha addr16 je cmp les dec insb sbb mov outsb pop cli pop cmp cmpsb sbb pop xchg fisub xor clc adc cmp out xchg pop inc push dec fild stos jle in dec lock push xor jns (bad) pop es ss inc in mov mov (bad) je das int xchg dec ljmp cmp pop jecxz or out imul scas dec cmp cltd out inc or xchg push dec out arpl jnp mov pushf pop push out jo jge sub and gs xchg xchg out add ds int inc out in lret pop arpl mov lock and pop and pop fdivs jecxz xor xlat int3 gs sub lods xchg sub jmp sub sub mov cmp jecxz add sub sub cltd les mov dec lcall cli cmpsl in inc lahf or es jmp adc sub (bad) ss sub or dec insb inc pop out or sbb lds in or out dec add gs jno sbb pusha lods test jle adc dec push out mov es jns pop (bad) out insl lret mov xor loopne jmp xor pop mov sub scas push and sub mov fbld inc or jbe push sarb push out jge fistpl and lods out mov mov or clc addr16 pop sti sub les sbb xchg dec dec je jnp ljmp rcrl add lods pusha cmp out or dec inc inc (bad) sar out aaa mov mov jecxz cltd xchg xchg je (bad) sti test jg jbe ret sub repnz mov sbb movsb fnstenv outsl pop and xchg lcall out or ficompl ds in cli push insb arpl cmp jge adcl out aam fs add or jl hlt mov jnp or in enter sub pop xor setl ljmp sbb out (bad) outsb das test push mov pop insb jb mov dec int3 out xor adc out add sahf mov pop xchg adc test jmp out fistp add out push mov (bad) (bad) lahf fistl out (bad) push and sbb or push rorl out je (bad) in gs loopne push sarb out aad xor shrl xchg into mov out jb sbb mov out dec push cli stc loopne dec aam push xchg xor mov push enter lock daa mov cmpsl bnd int3 cltd sub fldenv out pop adc paddw push sub push lcall out xchg fld sub icebp fisttpl mov out sbb push in std out push or fdivl cs incl in aas mov rcrl pusha inc xchg mov out inc cltd jle push mov fistpl push cmp pop fistp adc (bad) mov pop int mov pop jo out and shr popa sub pop inc out in test hlt push inc xchg sbb xor mov loopne xor push addr16 test sbb jecxz (bad) mov jo loop rorb (bad) xchg ljmp pushf dec popa mov mov or mov pop jnp push jb int3 (bad) jecxz push mov pop push xchg jp out mov movsl cs sbb rol daa (bad) mov out (bad) xor out dec lods iret and ror call mov rolb aaa out sbb mov icebp xchg insb out jl ret add not addr16 mov (bad) mov inc pushf adc and mov insb adc sbb outsb hlt fildll adc shl test rorb jp xor shr sahf aam add outsl movsl test outsb (bad) mov xchg inc dec icebp out sub add shr lret out jno or xor shl imul lea scas out mov jnp mov xor inc dec ljmp out mov sub out add or push out nop lods lret sbb iret jmp adc adc sub das popf iret inc (bad) jg shr enter mov mov mov repnz jne push aaa lods (bad) lds cwtl mov dec add inc clc xor mov xor repnz test jmp xor in stos lcall dec sub out pop jecxz int3 adc inc in push sub out (bad) repz fbld movsb loop jmp lock jb push cmp out loopne jmp sbb sbb cmp dec pop in pop cmp mov out pop repz jge xor mov out syscall adc dec out mov mov jae pop adc dec call out addr16 inc mov out (bad) mov mov jmp out imul fs jne out and push push jb sub fyl2x sbb or pop mov push test mov jg mov mov sub out out ja and dec pop stos shr addr16 test push out xchg (bad) outsl imul cwtl insl or cmp out loope inc push xchg out test cld out ljmp push or fstps jmp and mov in outsb mov fdiv int in outsl pop out ljmp mov adc out and inc test out ljmp mov in fcoml adc shrl loop imul mov xchg jmp mov xor dec jo (bad) call fsubs out add movsl out pop popa mov inc (bad) call xor in jecxz pop mov shrb push dec pop xchg sub out sbb pusha mov out out loop imul jecxz out in data16 in cwtl lods sar insb ss jmp loop fldenv in out sbb iret fsubrs decb adc ret shr xchg jmp call dec sbb xchg cmpsb out arpl out add mov add loope fsubrs pushf lock divb mov out (bad) jg sbb mov imul mov jmp scas out fidiv outsl in dec arpl mov mov cmp out sbb notl mov pop mov fildll pusha inc insl lcall leave sti loopne stos sub or je fldl out das (bad) jnp xor scas sahf out cmp outsl pop out fcmovb out in test jnp out mov inc vmread mov sti push ds xchg cmp stos rcrb lret or fsubrs fnstcw pop pop mov and or mov pop (bad) out rcrb (bad) pop pop mov addl inc std inc push fsubrp xor jne dec nop sbb xlat cli xor add add out xchg rcrl lret pop jbe xor gs aam jge mov push and mov lods mov rcrb out jns scas or or sub xchg js sub cli out xor mov lret pop xchg pop insb pop movsl push out mov mov xor lahf out dec xchg sub int adc fisttpl adc and inc mov clc (bad) int3 roll les stc shlb inc or cmpsl (bad) cmc in (bad) decb cmp push or and sub cli shr sub je les cmp mov aad cmp lods fildll enter movsb push pop adc lock mov xor imul cmp pusha add popa push out fstpl jmp out idivb mov out ds push inc sbb ljmp out and lcall (bad) out movsb dec (bad) out test add pop outsb dec xlat cmc adc jne jnp arpl in out iret mov in std mov add cltd jne out test mov pop out cs sahf mov adc jecxz lods jae shrl mov and jnp inc out out outsl sbb mov mov dec call call out je push aas jbe hlt cmpsb out adc cltd jns fidivrl xchg cli xchg icebp and inc and sbb fwait out adc pop out sub imul xchg cmp les out aad pop mov out jne scas scas insb or loopne push (bad) dec popf out mov lahf and pop int3 out cltd ss mov jle jp neg loope cmp pop fistp icebp cwtl cmp cmc ficom jo sub sbb int out scas sub cmp push lock gs push sar out dec mov sbb pop imul enter cmpsb in (bad) jae mov mov je sub xchg mov imul pop out cs int3 adc dec out sahf pop push jbe lea popf cmp jne and mov sbb and sub fmul cs lahf out fucomp pusha jmp adc pop stos hlt cmc fnstenv mov lods ret adc dec popa mov out ftst ret test xchg pop aaa xlat mov xchg pop inc sbb mov pusha (bad) (bad) stc xor adc out jae ja xor lods divb add test jne aad outsb (bad) xlat jmp out or jo out pop lcall mov pop push out call outsb pop scas insl jbe jg inc in leave sbbl and out inc jecxz xor sub jns out gs out popf sub jmp (bad) cs push cmpsb loope sub out inc mov cli fadds mov scas and in ds stc loopne fisubl out (bad) int fwait sub (bad) or jo cwtl add pusha dec outsb xor js (bad) out stc adcl scas inc mov ret mov cmpsb shl lahf mov leave out ffreep fdivrs ljmp test call lock push lea xchg add jmp aam jmp sub out push and pop je aad fsts out jle lret mov out push data16 out testb int3 gs clc (bad) jbe xchg out add xchg inc movsb add jb arpl jne into cmp add out push cmp sub mull popl add out popf cwtl jg sbb mov xlat jae jle mov jbe pop pop stc test movsl or movsb enter inc lret cwtl mov fs out aaa mov and cs dec mov rolb inc lods jno cmp aas (bad) loope andb mov mov pop or push and pop inc add jmp sub xor call adc and pop dec stc out sbb inc scas mov sbb out pop insb pop aam es (bad) cwtl sub in pop cltd ljmp jecxz sub out jle push mov iret mov mov test pop adc xchg iret sbb out fmul push adc sub pop ret test push xchg inc cmp push jge sub jp push ret add sbb out inc lds rorb sub xor dec push jecxz lods mov or push out and out push pop and mov cmp xor mov popf faddl out lods jne stc test aas out (bad) jb aad imul out loop or push cmp mov popa sbb pushf out out push test inc out jno cld not mov inc out insl lods push sti imul xchg pop sahf dec jmp mov fisttp cmp out push jne jmp mov dec push adc cs mov push les mull push out dec mov lds mov pop in out xchg ds push mov push rol aad scas mov fwait mov xor test mov int loop inc lods pop mov out ss xlat pop out insl dec jne push inc sbb iret mov stos ja pop (bad) out rcrb cmp out ret (bad) jbe repnz gs stos sub jne test pop pop adc repz mov fnsave insb fdivs sarb rcrl or (bad) xor fisubr out jmp pop fsubs (bad) outsb cli pop (bad) popl enter mov jg (bad) mov movsl push xor sub mov mov mov ja pop outsl inc out xchg jg movsb mov xor sbb icebp inc out insb mov pop sbb and cmp out mov out fstpt lret mov mov dec push out push (bad) jbe and rcr into ss int out in dec adcb pop pushf insb pusha movsb ret dec rolb out inc ja mov dec pop cwtl and fnop imul jo sub je pop das sarl lret push xor pop (bad) enter lds in (bad) ss mov inc mov in push das sbb inc out and mov sbb rcr lods xor jl push mov aas push dec ret cwtl push out cmpsb push outsl pop daa sbb and outsb call mov mov cmp sbb mov cmp negb dec cmc mov (bad) in pop out push rclb fiaddl es push xor (bad) xchg rorl popf out dec push sbb push data16 push jb cmp mov mov enter mov cs data16 and loope jbe mov nop xlat out jnp loop or fildll adc in jbe cmc out std scas jnp inc sbb sahf and test out out mov popa out shrb lock out jns imul cmp cmpsb out fs sti cmp or pop test sbb in out test out pop (bad) test xchg cli test and lock pop or out pushf pop arpl mov adc scas gs mov out inc mov xor ret out xor in data16 cli iret and xchg ljmp dec push xchg (bad) out jp je out mov adc dec decb lret (bad) and dec out and shrl stc js cmp jb jl es add fidivl incl out arpl mov (bad) in or imul inc (bad) jo es loope lahf nop sti out mov inc jne out sbb mov xchg out lds mov sbb lods mov out popf mov pop clc or mov movsl ljmp pop lcall cmc cld lahf in shlb out push je imul mov cli xchg jp out or (bad) es bound leave std pop or (bad) lds fcmovne out fidivrl lcall fwait or in (bad) inc jmp pop pop repnz mov sub push shl aad jmp out xchg mov xor out sub test stc or dec and inc xlat pop lock out int cwtl or push out pop pop outsb inc xor push jle js stc mov pop nop out enter ret inc out test sub out mov fsubrl sub ja push inc (bad) sbb mov ds lods jecxz aaa mov sub cmp out div push cmc hlt test imul mov mov mov inc (bad) ja cmp scas mov out mov sub out xor notl or pop fistp or add out or add mov cltd jecxz mov retw imul int3 out int hlt cmc mov sarl inc push mov loopne popa js (bad) in push push cmp (bad) mov gs push pop lods dec lock or imul cmpsb das pusha sbbb xchg out cld mov aas js or jle (bad) out mov sbb (bad) in jmp pop pop sbb inc repnz (bad) out and inc mov mov addr16 and mov out fmull sub pop out lahf pop inc movsb push movsl out adc jle xchg sbb mov out iret mov nop and cmc sbb xchg (bad) out lret aas jmp push cltd push lahf out (bad) cmpsl dec data16 sub xabort in inc inc mov fmuls loope mov adc movb mov dec add hlt sbb adc test mov imulb in or mov pop mov out aam adc cmp inc out xor icebp aas inc push imul loope pop orb xchg push push jge dec scas ror ja cmp or mov out adc jge mov add and fldz test or into cmp mov add out scas mov enter inc pushf sbb clc (bad) out das fildl test cs mov inc lahf fadd sub cmc and mov imul jg out pop cmp inc xchg xchg popf imul fldcw loopne (bad) mov push pop push loopne add loop mov cmp pop inc out xorb or xor jno dec (bad) mov pop and or loope,pt addr16 rolb outsl dec pop adc pop xchg mov cld hlt add out fsubrs out loop inc out fwait and push out sbb jg decb das xchg imul jae jns jge xchg insl or enter hlt pop dec push inc jmp mov iret mov loopne rorl arpl pop jg xchg sub rcll add ss jle inc mov (bad) pop cmp and mov mov and out aaa int cmp mov sub ljmp pop fist lds (bad) sbb call fwait out out dec pop push js dec out insl xchg pop pop mov sub (bad) fsubrs enter ss inc xchg (bad) ds lea inc push out mov das add xchg nop out xor mov sbb mov hlt inc xor decl jo or lods iret xchg out sbb push test (bad) adc repnz jnp cli add sub (bad) sti int3 sbb (bad) xlat gs out shrb jmp out imul cmovb pusha mov aas out xor out add lret repnz pop jo pop pop int mov fadds daa loopne or and jmp sub aad push cmp jl fwait dec out and lahf adc out jecxz ljmp test cmp xor jle into or cmp mov out shrl push out jmp mov sbb jmp ffreep xor and inc std mov aaa dec adc pop pusha out data16 pop into xchg xor decb mov imul lcall out icebp mov dec popf (bad) and ret out push sti (bad) sarl out pop mov out out sbb jge dec mov addb dec or adc pop adc jbe movsb add xchg call mov mov mov aaa repz push cmpsl mov inc mov sub xlat pop addr16 fwait mull cmpsl xor sub repnz fcoml scas mov push imul out add (bad) hlt (bad) cwtl inc cmp mov shrl mov cld push jne int mov mov lds out adc jl jo push out std (bad) repnz imul mov test and punpckhwd das roll scas mov out adc sub decb out xchg iret test call mov test push repnz dec insb sar cs sti or dec push cmp aas jne mov pminsw cmpsb in and cmp adc (bad) xchg lret out mov fcoms mov xor pop shrb dec fbld mov rolb out xchg cmp mov cmpsb in out push sub pop jecxz sbb mov dec push aas sub fsubs out adc icebp mov sti out pop cmpsb scas js mov andb mov lods jnp repnz and push insb les inc outsl mov or mov scas out lret mov mov out ja push pop jae xchg fucomi cmp add pop cmpsb and xchg (bad) mov xor xchg outsb cmc mov sbb (bad) jnp fsubs pop push add outsl hlt jmp sub cmp out mov mov push add out mov cmp push out xor shlb imul add loope or mov dec out ret jb stc out int imul xchg xor mov out dec pushf sti cmpsl mov inc nop ret xchg js out test pop popf ret cmc adc cmp dec sub out out sar dec cmp mov ficoml movsl inc (bad) mov daa out jg xchg hlt jl scas dec jecxz adc aas pop mov xchg sarl out je stos stos (bad) or or iret pop inc notb mov sbb mov sbb outsl inc or out mov test pop out dec stos insb push add test xor inc push xchg cmp dec dec mov jns (bad) sbb adc sub cmp icebp add jo pop arpl (bad) jns mov ljmp cmp inc lock and pop jo jmp ud1 (bad) xlat xchg sbb sbb lcall ret in sbb cmp mov cmpsl or out add push xchg xchg or dec cli and push adc subl dec dec call mov ret mov or sbb sbb sbb lcall sti jb dec out ficoml jl ret divl imul mov out and mov out pop sbb push xchg test mov sub xchg aad and dec or pop insb test sbb inc push lods sub das out repz fisubrl data16 ds and ret sbb mov cs es xor ja or int push sub cmp pushf movsb ds (bad) loopne mov xchg jmp outsb out loopne sti xchg mov in std out test mov aaa hlt loope jg fsub pop out adc or insl push (bad) pop out in pop jns movsb cmp sahf scas inc out mov mov xor pushf cld mov jbe xchg nop aas and inc insb cmp push out (bad) mov rolb loop adc adc data16 push ss pop scas stc mov pop xchg sar sub in inc mov addr16 shrb out in insl out sahf (bad) gs data16 test lret jno in xchg (bad) imul inc xchg dec insb jle inc push ds adc pop (bad) lahf push mov rclb add jbe cltd outsl imul and and mov cmp out (bad) push xor jge push push jecxz pushf fistp negl inc inc mov xchg mov stc out or pop test scas inc pusha stos arpl jb in in pop lahf xor (bad) jg lock inc push jno popa mov push rolb mov int3 pop repnz and popf fsubrs sbb xchg daa dec jnp insl rolb out adc sbb iret or fwait dec mov pop nop aam fimull jg jl add dec int out je lods push enter lea in imul ret test and mov pop pop in nop or insb out ret cmpsb cs mov jge scas mov repz add mov imul sbb pop dec lahf jbe or cwtl pop mov in hlt mov daa iret loope test hlt fdivr adc pop insb in push (bad) xor (bad) adc pop mov push lods les int leave lods shrl in out ret lret inc (bad) out pop xchg cmpsl or pop and call out mov jno lea cmc out pop jmp pop xchg sub in adc cmp push dec aam ja (bad) rcrl jl ljmp ljmp out loop fwait jae out fdivs mov pop inc pop and icebp mov in (bad) int add pop or xchg out push gs mov cmp stc push lds fsubrl jle jmp lcall (bad) repnz cmp fwait pop sub xlat cltd push shrb sub divl inc test inc cmp test add lret sub mov dec test ss add lods scas add dec repnz mov out or sub inc mov xchg aaa (bad) jle jnp sub popf add lret test xchg out xor sub dec xchg negl out int3 lret test cld out pop (bad) std imul out enter and sar into inc int3 jg inc hlt or mov inc out ret movsl push push out stc repz cmpsl shr cmpsb xchg pop add jle jae stos mov icebp aas sti and es test add rcrb xor mov fwait out pushf (bad) repnz out lods mov mov cmc lea or les sbb out sbb or out mov and loopne jnp jg lahf and test push inc shrl ds out out mov mov sub imul xchg int popa fisubrl out jle mov ret mov pop sub pop jmp sub mov xor ja sbb xor int3 dec cmp hlt jns mov div push jge sarb xchg sbb out enter xchg leave dec out or ret fidivl jno dec adc adc mov out icebp pop add dec jbe ficompl les dec push test addr16 mov and mov data16 outsl idivl and dec xchg sbb test sub pmaxsw adc jl mov out les pop mov fcompl cmc ret aam in add push loop test sbb mov cmpsb in pushf lea jns or xchg mov out jae (bad) (bad) daa call push aas sub lods movsb pop mov mov or pop push out xor sbb out mov das mov jg pop sbb out cmc adc popf and mov jnp cmp adc xlat out sub adc outsb mov cmp movsl add cmc data16 fwait arpl sbb adc enter or outsb sbb imul and movsl add out aad jno sbb jbe out adc xor add mov aaa rorl pop jb xor dec mov jbe outsl icebp pop loope lcall fst out scas rcr js cmp jmp xor call out or and pop out add sub pop out repz jno out out cmpl add xor notb loope in pusha test scas mov rolb sbb inc cwtl pop and ljmp or not sbb int mov xchg shrb pop mov arpl pop (bad) fcos aas cmp (bad) imul jne int or and je fldt es jp pop faddp mov sub (bad) dec and out mov mov pop loope xlat mov or inc out and pushf mov stos cmp push cmp cs xchg das lods hlt sbb mov xchg push popf dec out xchg mov jg pusha (bad) dec out add lret sub jb cmpsl and loopne dec cmp dec inc rorl das add dec pop repnz xorl cmpsb out adc fwait sti add jmp add push or jnp ljmp out dec fildl mov pusha in out mov js iret mov cli mov jmp xor xor aam loope fbstp dec dec cmc adc fist shrl (bad) dec sub pop scas xchg ja mov xor dec mov inc xor inc mov out jnp mov push mov lods out sti pop cmpsb mov add pop fimull jl lret mov pop icebp mov (bad) repz out pop inc inc sub sarb loopne cwtl add out daa add sub jno push mov out jnp push enter repnz ljmp add (bad) xchg push jbe (bad) pop inc jmp jbe cmp rcl gs cmpsl rsqrtps dec leave loop xchg xchg out mov arpl out repz imulb push loopne out out inc sub xor out repz std out fstpt insb mov fucomp jns sbb xor mov mov push mov out pop mov inc cmp jbe out decl mov sub mov mov lret mov push testb adc divl out dec add int3 rep cli out insb andb out ja jg nop iret sbb xchg jle or ret sbb out jb (bad) xor aaa adc lea push out xor sbb dec jns ljmp out popf in jge in dec loopne cmp mov sub mov mov cmpsb repnz (bad) adc push push test in hlt out cmpsl sbb in inc lods aaa and jb sub jnp pop or cli sub outsb icebp shr jb out adc repnz imul addr16 icebp pushf add pop es cld adc in push repnz shr fs fadd pop sub lahf or mov xor out insl outsl inc int3 nop push mov idiv fdivrl addr16 push icebp addb adc ret loop add add out push pop sub cmp or sbb hlt jne mov xlat enter xchg push popa pop sbb out std aam negb dec xchg mov out or pop out and aad jnp jbe adc sub cmp fiadd cmpsl or mov enter mov dec push adc dec aas dec fucomip cli xorb out repz insl out repnz and xor pop pusha (bad) in mov lods pop scas gs repz adc sub pop out add xchg cmpsb nop out imul fsubrs shll jbe iret daa mov lea fisubr loope (bad) or ja pop and pop in sbb fsubr idivl jb and out bsf andb or pop push push cmc test cmpsb jmp ja pop shr iret test jge push cmp ljmp fist (bad) repz adc dec push mov add (bad) repnz out cmp cmp outsl out or add jmp out loopne fwait jno mov adc mov xchg aad sub push clc out rorl lret loopne dec xor inc mov add js int f2xm1 into jg or cmp rcl sub dec rol out mov sub push out sbb test fucomip jno jle idiv and push or insl dec inc cmp add adc push mov out xor mov sub ds jg push dec mov dec inc imul push rorb out and adc (bad) scas scas sbb into push pcmpeqb fwait dec or in push aas out loopne,pn (bad) jle test jecxz mov sub adcl inc pop mov mov dec (bad) repnz and test out sub lcall xor in test pop aas and pop inc lea inc cmpsb aas out call lcall sub call movaps in hlt loopne sbb and push inc pop jbe and arpl out imul or (bad) fdiv out add lods enter aad out pop add out mov out dec les es xchg sbb inc and addr16 inc shlb push ljmp out and call mov shll cld mov decb fs add stos nop inc sahf dec cmp in xlat lock jmp jle lods sbb sub (bad) sbb xchg inc mov sub out xor mov lcall dec xchg or sysexit pop sbb rcll out out insb jge adc push jne data16 out push ds cmc imul xor pop loope icebp sub (bad) lods inc cmp sbb imul insb jle jge pop lcall addr16 out out mov inc fild out sub aas inc out movsb cmp and jb ret ljmp xor xor and cmp iret loop out jp mov jae mov test mov rcrb mov (bad) insb pusha xchg sub lahf out movsb (bad) lds loop sbb xor mov xchg out inc mov inc xor xlat aad xchg movsb inc mov fwait sub xchg out addr16 push out (bad) stos adc mov cmpsl (bad) loop (bad) mov mov lds out jecxz addr16 mov lret ds ficom jmp jo addr16 adc mov push popa mov cmp or (bad) cltd xorl loop int3 call mov push insl repnz xor clc in das jecxz out mov mov xor push loope fstl pop test imul or sbb add test push pop jmp (bad) pop push jno (bad) ljmp daa xor arpl (bad) insb (bad) jb jo imul mov mov add stc nop cmc test mov sub push cmpsb jne inc pop dec (bad) mov and lretw mov fucomi lock pop out xor in aas fbstp scas stos rolb loopne rcll out out gs fildll or push xchg adc insl sahf out mov jae mov dec popa mov jle inc imul mov cs leave inc xor (bad) enter imul mov and scas fistl pop adc pop ja js popf in push push fs push inc mov sbb mov push jo cs fildll lock aad out mov test pop cmpsl pop or shr ljmp out (bad) jmp pushf movsb popf jge out out adc cmp leave sbb and xchg inc cmp jae mov into out pop dec pop out fsubr adc mov pop in and mov aas push fwait insl cmp inc iret adc xchg fistl fildll inc mov movsl mov ds out mov sbb (bad) out sub cmpsl clc jo outsb jae pop add lods shr jl sub mov (bad) addb dec outsb mov cmp xor sbb xchg or and pop pushf cwtl out mov cmp add jae movsl aam push cmp dec cld es out xor add cs out sahf dec mov movsb iret dec ret out and sbbb dec pop mov mov cwtl call inc out push addr16 xlat cmp jmp (bad) fistp (bad) xor inc sbb jg repnz inc mov addr16 adcl lds xor push mov mov jge imul std das bound adc xor xchg dec inc out jg and pusha mov sub in or jg fsubrl fldl pop hlt dec outsl inc lock push ljmp inc lahf fsubr or arpl adc fs xchg jmp rorb and or mov push mov inc sbb jb jns and fistl insb push dec out xor jnp jp (bad) fwait cld adc sbb aas dec out sbb xor pop inc out ffree (bad) pop adc idivb lcall repnz scas or lahf mov cltd insl cmpsb or add (bad) call inc xchg aad or rolb and mov adc repnz int3 scas mov pop pavgw shr cli jns mov insb fsubrl in lods sti fildl aad inc out jne xchg xor out pop push push stos out (bad) leave (bad) mov pop shrb jb sarb test outsl (bad) popf (bad) cmp push int3 ficom mov pop pop (bad) adc jne fldcw jge out xor aaa hlt out xor mov xor out sub sbb mov mov out pusha jle sub xor out mov and addr16 dec inc mov adc mov sub jmp cmp pop lock loop ret loopne pop jne in out jo cld cmc out repnz das (bad) ja xchg out pop xor mov push pop or push out push xchg jmp mov stos push out clc data16 ja hlt pop out and insl loope out (bad) mov jl jle ljmp pop sbb mov outsl (bad) cmp push iret popf mov cwtl aad xor mov out or xchg mov cmpsb or mov sahf hlt sbb es jb out jge test mov pop push push dec testb add mov mov jae inc jecxz jb pushf xor sbb cs daa dec es je push popf out or in lock lods out daa fmul mov out dec xor cmp pop mov add out clc fimul or jg (bad) out leave aas pusha lret ljmp pop xor out std lods sbb mov mov out fadd sti or pop mov mov xchg mov out xchg in pop movsl fcomps sub in stc popf mov sub and mov xchg test sbb push hlt cmp and pushf out xchg or jno (bad) pop mov mov cmpsl mov data16 xor pop dec adcb in (bad) push sub insb (bad) sub sbb addr16 clc outsb stc (bad) jecxz test dec mov sub ljmp jne xchg inc jo push dec std das adc out mov gs jne pop dec ljmp loop adc es pop xchg xchg xchg xchg out cmp adc push sub xor push or (bad) xchg loopne adc iret sti (bad) scas loop xor (bad) push mov scas push or arpl lcall nop in fs mov test sbb inc cwtl out jbe push and ret mov out mov inc add dec sub sahf mov in out xor sbb dec clc mov lahf xchg loop mov push rorl iret mov dec mov pop inc rcrb (bad) out pop add outsb cmp pop out sub sbb int3 (bad) cs (bad) jge les push mov in sbb out inc push xchg loopne ret adc xchg popa movsb mov out sub mov insl out aam dec adc imul fsubrp lock dec aaa jb in out rorb cld pop out sarb (bad) shrb and pop push adc mov int3 push nop out sub xchg mov lahf addr16 out pushf xchg push xor notl fs or mov xchg pop dec cltd (bad) in cmp push xor pop imul sbb fs bound ss and xchg pushf vpsllw pop mov aad lods out cmc in sbb lcall push stc andl sbb out inc adc lods fistp mov cmp mov scas out fimul pop aas icebp push mov call ja mov lcall jge in cmp jmp out das adc out arpl inc je in fisubl xchg sub dec aas lahf cs jecxz mov daa mov lods mov jae (bad) lds and pop call pop lock mov or aad jae out mov cmp out and inc psllw and stc xchg inc gs mov in pop pop xor xchg xchg mov mov mov out push pop imull sub dec xchg ljmp fldcw out dec xchg out out lret daa out ljmp jns mov cmp ficompl adc dec das int3 or pop sbb or lea xor mov imul mov pop fs sbbb sbb add (bad) push shrb gs mov jo dec loop dec add cmpsl rclb mov out int nop js aam sbb mov shr fistp jmp out out lahf mov and mov bound push inc adc xchg cltd outsb mov pop daa pop and pusha cli (bad) adc lea push aas jbe mov push dec out (bad) adc popa jb jl jl call push (bad) dec insl int out shrl pop stc cmp or es out and enter mov (bad) xor out pop cld shll (bad) repz scas in loope inc pushw and cmp fbstp cli gs shlb out stc mov jnp pop xor inc sub cli orb cmp fcomi adc (bad) xchg fbstp into jae mov iret pop xchg cmp loopne sbb rorl lret mov in sbb popf jns outsl shr std ljmp out (bad) push insb in jmpw pop pcmpeqd sbb pop lret xchg popa ss adc adc jge int3 mov adc lret pop xlat inc pop out gs in rcr push adc and jo aad out mov push xor out mov jle cli out push mov mov call adc pop xor sbb dec out jae test and dec ret inc out and ret inc dec cmpsb out fxam shl mov scas js addr16 out or ret imul push adc or or das sub inc repz adc sub cli cmp xchg into jg out pop iret ds out scas inc aam lcall push dec ret test in sbb sbb cmpsl push aad (bad) pop in lret es fwait dec push out pop in sbb xchg mov out repnz mov lods mov xchg outsl pop sub insl pop mov out inc and out lcall adc jno mov iret add jmp push daa mov ret add sbbl cmc lock loop jp lret mov xchg push aam inc jb lea test loop mov pop lahf mov out xor sbb mov (bad) and ljmp fcomps sti out pop xchg dec popa jecxz add icebp xchg (bad) sub out rcrb jbe dec cmp hlt sbb in stos pushf out mov push cwtl add jo es or jle add sti inc sub lcall movb xchg stc out daa mov mov std mov pop rclb imul sbb jns push inc iret cmp nop pop and jo repnz daa adc cld jne pop jbe mov pop pop loop mov out loopew push mov or test pop jne sub sub and dec pop mov bound push cmp pop mov adc cmc mov pop insb ret and out xor sub ret out lods xor adc xchg call fisub sbb (bad) fistpl sahf add (bad) cs mov mov add divb sub and pop jbe iret test int fimull mov xor xchg in stos (bad) jg mov stc pop jo je cmp rol xchg loop ljmp fcomps sub out jbe pop roll or pop mov in out stos and fdivrs push je (bad) out and test out and mov out movsl add mov mov jmp loop bound lock dec jecxz out inc out setbe mov mov add cmp out mov jmp xor out adc inc xchg dec jge lret out fimul jmp and pusha ljmp mov out (bad) mov test stos sub pop and mov (bad) repnz push in xor data16 leave stos inc lock enter out mov dec popf mov bound jg inc subb mov sub xor mov or imul push cmp jp or out xor out ss or out aas rol fstpt pop in lods out adc or das pop orl jmp lret push (bad) pop xor mov xchg or inc fildll pop int3 and fs pop aas pop fcomps es std jmp out daa sub jge jbe xchg cmp out hlt (bad) xchg sub lahf push ljmp sbb call push (bad) push pop lds out in mov add out insb pop test push push roll pop inc pop mov movsl sti (bad) leave jmp mov and inc adc xchg push xchg int lcall in sbb out add (bad) movsb sar and sbb xchg loopne adc decb out arpl lahf roll adc outsl pop cld xlat dec lock sub enter dec add push loope lret mov mov jae add out mov add mov sub data16 scas mov test repz xor pop int3 mov roll push push cwtl mov out cli (bad) lea test ds push lahf in jge je pop out jae mov inc setno fidiv push dec xchg ss bswap jne insb imul pop (bad) jns pop push mov out ret sub out imul out scas or call out push lret adc sub int sbb bound fldt es scas mov inc push inc std arpl fwait push fnstsw jmp inc out cltd scas popf orl stos and dec mov sbb cmpsl sti lock in pusha out jmp fild out pop popf call and xor xlat push out sbb fild hlt enter cld push cltd sbb pop popf sbb jo fildl xor ljmp pop mov jb out dec sub pop orl jg imul dec sbb out test jl adc sbb xor repnz jne outsb mov out shlb aam mov pop dec (bad) pop jmp sbb orl lea adc jecxz push inc mov pop rcrb and stos loope sub push (bad) fsubp out dec daa fcoml aaa mov sbb out jne mov mov xchg cmp sub (bad) fildll fldenv adc insl rol int out loopne sbb mov arpl lock decb movsl cwtl sub or xchg shll adc mov out subl dec fs cmp leave loope xor add or in push sbb xor cmc stos or out (bad) test and daa sbb out fs jb xlat add xchg xchg repz cmp insl fs and lea push js cmp sbb clc imul (bad) pop das in les mov mov xchg add mov lods sbb repnz jg mov xor imul (bad) mov mov pop add pop ret inc xchg in cld jp call out popa inc add ss mov xchg rolb jp mull cmp cld out je jns pop mov xor add jl pop mov sub test insb stc stos lods push icebp and (bad) jge loopne xor ljmp out dec push loope xchg imul (bad) mov sub ljmp pop jns addl dec jae repz hlt std out inc clc (bad) cmc dec (bad) push out sbb xor test shll mov jge sbb (bad) xor out sbb nop and xchg (bad) fildll adc repnz inc cld ficomp out pop jns mov lods lcall adc scas aad out or sub shr pop push pop xchg mov out sbb aas pusha mov jge es mov or (bad) fcom jae pop push out iret jg repz cwtl inc mov loope jo or mov insl rorl jmp out jle in xor hlt jmp iret sub sbb inc sub xor ret dec ja gs dec mov dec and pmaxsw cli popf add cld fucomp or jae or fisub out stc xchg cmpl outsl xor xchg pop adc mov mov orl in inc (bad) lret (bad) sbb (bad) lcall in out jg mov sub add or push xor lock cmp shr or mov cwtl out fdiv mov mov add (bad) in test (bad) fidivr pop or ffreep mov jge loope jge xor setge inc lret xchg (bad) repnz shr jne outsl push repz pop sar lahf lret inc adc lods and xchg loopne dec sub inc cmpl pop dec push lcall sbb xchg push jecxz fmul inc testb in sub lahf mov (bad) mov mov enter adc test and subl push lock gs xchg fucomip out sti mov inc or mov jno xor les inc rorl jbe out adc mov jecxz jo loope rolb push mov (bad) in out jmp add shr add pop ja or or clc into sbb cmp xor sti dec out out mov out dec xchg cmp mov sub inc lahf adc pop out mov push jne push inc mov pop mov mov out add aaa add enter push mov test push fadds lcall aas xchg bound jmp in pop ja data16 push incb jge sub mov movl cmp (bad) xor leave add ret lods fsubr out add sarb test xchg jg jl lods out lock out mov hlt in loop xchg ja xchg pop stc jmp push add pop mov lock sbb sub jb push out js cmp fadd out inc pop mov es outsb (bad) insl jnp out mov push std aaa (bad) jne out and jle mov pop icebp loop inc loopne in adc add xchg cli mov pop and mov popf jle call inc and sub out out push in xlat cwtl sbb into loope std add lock cmp shll out jle in aas in adc fldcw lcall in add sub cld jl bound adc fisubl mov bts mov js ljmp arpl fwait jo sbb daa (bad) out add idivl lahf and sahf adc test push xor pop je jge inc xchg outsb jle popa cmpsb stos out xor cmp sub pop pop leave mov stos push ljmp out pop roll aam mov lahf mov xor shll aam add std unpckhps lahf jb mov mov jmp pop mov xchg add out out cmp lods sarb mov pop cld fisubl test jl pop mov push push out mov imul mov mulb sbb iret test mov and xor pop mov out and xor repz dec or jecxz imul push out cmpl adc out dec xor push out xor and scas mov out (bad) sbb cld xor jle mov pop push fsubrp jnp adc mov das js in lret loopne out sub mov jg cmc in sbb loop call out lahf pmaxub dec jmp aas adc mov mov jecxz arpl xchg aas pop push lret mov stos sub or lock pop sbb pop dec in fcoms dec test xchg xchg lret mov mov inc jne push daa push mov out lods jle cmp cmp in jmp pop cmc imul xchg push movl xchg bound out jle ret out (bad) pop xchg inc dec cs jg insb in jmp jecxz cmpsl mov outsb jne out fsubs sub pop fcompl jno aad and (bad) loop jecxz cmp (bad) jl mov stc jg in xchg divl push out pop xchg insl push mov xchg daa add (bad) fwait ret pushf xchg sub fsubrp lock fldenv xor (bad) es repnz pushf pop out pop icebp out cmpsb push push cmp ficoml ljmp out mull mov out aam sbb out xchg mov loopne pop fnstenv shr repnz or cmpsb inc (bad) mov pop push push and mov int3 out inc icebp ja xchg pop rcrb cmp sbb xchg xor lock adc out bound pop ja or pusha out sbb stc add jne ljmp repz aam mov mov jnp dec scas sub sahf pop pop shr imul sub test gs jp pusha fdiv out addr16 cmpsl or ljmp lock cmpsb push push pop aad in mov fsubr jmp popa mov ffreep cmp add imul (bad) mov mov out jae cmp pop enter pop sbb pop pushf pop stos out imulb cmpsb pusha int adc imul dec insl inc dec push pop push outsb xor fld out cwtl push sub mov push in rcrb ja fstpl mov jmp out mov lds xor jle shl out ficom cmpsl in jecxz cmpl (bad) fmull out shl add dec mov not sub xchg xor aad inc pop stc test (bad) jno out fldz or cmp sbb cmp (bad) mov out addl pop out push mov es out cli xchg lock sti xchg adc out xor pop cmc out jmp popa outsb adc mov rorb jmp in out dec movsl add das mov testb int add test out fcoml push add (bad) pop xor cmp fs inc fcomip std sub in es sub mov out push hlt inc sti out pop mov pusha and sbb out (bad) mov leave mov pop pop xor pop sub in or xchg out push loop clc xor jle out arpl dec mov (bad) mov adc fbstp sub push in movsl or fscale mov pop icebp out pusha outsl xor mov cs jge insb sub int mov sub sarb xchg incl out insl and mov dec jb lods (bad) lahf gs loop out stc pushf out mov loop scas jge cltd pop popf nop sbb (bad) jno sub out mov jp rcl inc out in pop add int3 nop mov test mov adc push loop dec and out xchg jl xchg out pop pop add cmp or testl mov adc xchg adc (bad) aad pop in call out cmp out jle mov jp mov xchg push rorl jg test xlat xchg call sub cmc leave cmp push out aad jne sub stos sub fist mov lods dec inc out rcrl mov int3 scas xlat out jbe inc pusha test and out jecxz ja dec jmp scas out (bad) in mov pop xchg stos data16 jnp lret cmpsb call mov mov insl sbb dec repz or mov cltd push mov out popf addr16 add inc add ret sarl imul pushf insb lods insl fucomip mov mov call sahf aas and test out sub or lods (bad) stos lods add sti jnp popa adc fisubr adc fnstsw adc int3 call xchg (bad) jmp push jno test adc pop ficompl cli xchg sbb pop mov cli fwait jl push in lods out loop push nop outsb inc mov xor movsb dec (bad) aaa lea jbe (bad) test or ljmp lcall cwtl cmp aas sarl sti addr16 pop jge mov outsl mov and (bad) fwait in push out mov aam sub pop mov in lock xchg test pop pop mov (bad) jmp dec mov jne and mov and or jl sub pusha loope inc mov ljmp sbb pop mov out adc (bad) nop mov pop mov stc pop xor out popf or or rorb inc mov fsubrp js sahf sub sub sub jns dec mov push (bad) lahf push jle fldlg2 or sub int pusha std retw cmc dec scas pop jg jbe arpl xor lock (bad) je fldcw and ja cmp inc push jnp arpl mov loop psubd insb mov add out fidivrl inc or lret dec pop in es outsl cmp inc enter adc jb (bad) mov pop insl or dec out or inc je jmp arpl arpl push out add movsb je jbe jns and (bad) icebp dec xor and add push or xchg lods aas test stos mov out xchg in jle inc std (bad) mulb (bad) clc fidiv (bad) aam jb pop xor mov cmp mov test fucomip add sti or (bad) popa aaa out dec dec fmuls dec push xorl mov ljmp clc cmpsb jns jl or fiadd fdivrl out iret repz push dec xchg out les mov mov (bad) dec sub out and inc push mov leave shr jno cmp pop and xor xchg scas out div dec lret ret insb inc push jns cmpsl jg out mov pop (bad) sbb pop xor js cmp push call outsl into sbb pop (bad) cmpsl push test loopne nop je add dec out xchg rolb jne inc inc arpl xor sbb push dec repz int3 idivb mov xor mov fidivrl out xor sbb dec jns sahf xchg or arpl and (bad) fsts xchg in adc out cmc add test inc fsubrl mov leave loopne cmp jne cli mov dec lods decl cmp in fmull xchg outsl out sbb cmp iret mov cmp mov addb andl insl rcrb out popf add lods xchg or or and sahf fsin cmp loop ror out mov add in and cmc push out push cli jp xor (bad) xor xor mov mov push imul dec and cwtl imul movl ret outsb lahf imul out cmpsl js push jnp inc cmp xor mov adc out push push dec jg fild insb and mov jb (bad) lds (bad) aaa cmpsb xor fdivs xor rolb pop mov add ljmp enter je inc lods out sbbl (bad) out push push lret and aas (bad) xor sub popa and lahf clc out jns jno ljmp dec out sti (bad) cmp cs pop (bad) dec and cmp dec mov insb lods or (bad) jnp popf and xor out ljmp xor jl xchg imul add xor iret out popa jae test cmp or or dec cmp and sahf jns push sub cmp sbb sbb out pop in cmp jg aaa and add ljmp cmc mov sub jmp pushf movsl das mov ljmp sub adc out ss pop stc aaa in xchg cld enter imul xadd andb pop in bound out mov xor jb (bad) out push std push movsl repnz stc out push sbbb xlat pop or add mul incb adc and icebp sub mov pop jb add pop adc das out out out outsl push xchg ja xchg add mov notl sbb cvtpi2ps cld (bad) clc push push scas cmc inc inc xchg xor popf loop jns mov jnp repnz hlt mov ja jp out push add push add inc inc (bad) cmp jecxz (bad) pop lods xchg mov sbb mov loope out (bad) decb test flds int jo pop fnop imul cmpps or or test (bad) push jp insb ja iret cmp sub jg dec clc out lea dec in and lret mov into roll aaa mov in es out push lahf aam into popf adc out xor jecxz jnp loope pop pop pop stc stos jg imul mov (bad) nop jmp mov xchg out sub mov push jno rclb (bad) pop lods pop dec cmp pop ret mulb cmp repnz in loopne xchg add add roll aas repnz lcall aam in add mov pop xchg jae and mov dec add out push mov xor mov pop div mov cmp sub int3 adc pop sbb leave call (bad) fsubrs ret shr add mov or jb insl or push test imul cmp cwtl inc cmp rol in jp jo emms jge sbb call (bad) lods pop out push insb jecxz pop test (bad) cmc push call ljmp cmp mov jl out push jecxz mov out test mov add inc push frstor das (bad) lock inc jp stos jg mov mov in jo popl dec sub fist jae call out inc cmp lock adc sti daa lahf mov les out or insb lods and stc imul push test ja lock cmpsl out sahf cli mov mov pushf mov in dec paddusw enter sbb cwtl out insb jae sbb ficompl out push adc loop jb out and sub (bad) aas xlat in xchg jmp xchg sbb mov or push add test out fild sub mov mov loope (bad) xchg dec mov jne push adc mov jecxz lods jne xchg mov nop mov ljmp jmp mov in jl outsl add mov gs adc out inc lods jp cmp ljmp or xor cmp cmp addr16 dec add (bad) out or xor cmc icebp push out lea xorl out nop jo hlt dec sbb out xor add (bad) mov jg divb lods or mov mov out push ficompl inc out bound mov adc pop mov (bad) jbe icebp dec out js addr16 ret sarb out ja test cli xor in add js popa push xchg out mov mov sar cmc out into sbbl (bad) decl or out push pushf pop push mov mov ljmp mul and xor lcall out jp or lea dec out gs (bad) and dec push lahf std dec dec mov dec sub mov push adc pushf or out push into lret mov adc sti pop jge repnz int aas psubusw xlat xchg mov sub jg or pop movups cmp sbb (bad) cmp sar sbb sbb push ljmp add out pop sbb mov mov lds aad mov ljmp in or inc aad add pop enter lock out xor repnz sahf js mov lods xchg mov cmp addr16 not push cmp cmp in repz cltd jns and lret push push pop or push cmp pop gs ljmp loopne or pop lahf (bad) jno xor mov repnz shl jl imul jp enter sub out das mov mov push out cmp test mov scas shll jg and xchg push pushl push out adc (bad) mov push jo pop mov out dec out add insl shrb push sbb (bad) out push (bad) rcrl clc mov loopne cmp or (bad) and mov jg test mov loope js or daa push or imul push (bad) insl data16 jg xchg mov cmc xchg (bad) out pop and lods xchg inc or dec loopne push aas dec out iret aaa negl loop stos xor pop add adc or enter cmp lods pop jne iret loopne cmp out imul enter push push addr16 inc adc jns clc daa iret push dec loop popf mov out clc mov xchg dec sub out jp inc test mov cmp jecxz cmc ljmp mov test fldenv stos push inc cmp out xchg ss or lahf loopne pop xchg sub (bad) in adc add sbb repz lods xchg push aas mov dec mov pushf insl sarl (bad) in xchg lret out mov mov or lea pop cmpsb mov pop xchg mov gs dec std hlt push mov (bad) aas xlat cmp xchg clc cmpl (bad) js xchg mov cmp icebp das push push rcrb cmp dec data16 aas test xchg jmp add cmp xor pop movsb xor into icebp pop push mov test jg pop loop jae out xchg jns ja (bad) adc xorl mov out mov dec add sub stos out (bad) adc mov xor ljmp mov lods jno popa in (bad) jge repz ds push jbe push push (bad) test and adc dec mov ds push aas xchg cmp out inc inc ja mov jg pop fst icebp pusha push int3 ljmp loope push fidivr rcll stos mov outsb (bad) rclb fldenv dec mov mov add jecxz push shr dec mov jb push xchg es out sbb (bad) int les mov (bad) xchg push out inc mov push xchg jle mov push cmp call ficom movsl cmp jge pop xchg mov sti fadd loope outsb out out or js out cmp or das push adc aas push ds xor mov out sbb es out dec test out cmp pop mov mov lret xor dec jnp inc mov (bad) push fistpll dec add add iret ja imul or pop (bad) sbb xchg cld loope dec out arpl data16 test pop out mov out jae add divl leave pop out mov jle mov or jmp jmp sbb lret pop (bad) ljmp pop daa cmp inc mov xchg mov mov xorl out dec mov aas dec out sub inc sub pop popf dec (bad) xchg gs mov xor lds aaa out je push inc (bad) mov or cwtl xchg out pushf ja pop cli mov (bad) fs out xor adc jle adc fdivl cwtl out cmpsl cmp add inc and out cmp xor jg and outsb adc in and push decb xor xor dec movsb out cmp xchg pusha pop jmp jg mov das xor loop or out mov cmp out push xor outsl push icebp out test or les xor (bad) int3 push js loop jge out test repz cmc out iret (bad) jle or (bad) into out scas pop pop push mov inc aas in popl xchg and movsb fwait pop std mov jno pop js adc aas es cmp std sbb lret push mov mov dec mov iret sbbl push in aas mov mov mov test sub out mov mov push add fistp repnz add jnp out mov in cmpsb mov jb,pt jb mov in add outsb and test push mov out mov cli mov lds sub call jo jl inc ljmp out icebp imul pop mov out add aam clc adc cs out (bad) pop addr16 pop dec ret iret out adc stc push out or inc push iret mov mov loop out push ds in pop xor out sub addr16 or fbld out push pop iret jge cmp pmaxsw xorb imul out cld jnp mov out xchg sub pop sub out xchg cmp dec pop nop add mov (bad) mov shl insl xor mov cmp rol add out push mov out add negl out xchg push cmc lds mov out mov test fldpi cmpsl out jl lock loopne adc sbb cs pop inc or and lret jl stos (bad) cmpsb lods out cmp dec dec iret ja imul add std mov fdivrs cmp xor out insl pop enter sub out add cmp out xor adc mov jno out pop in jmp or sbb adc int3 sub mov cmp dec dec out jmp aam out std stc rcrb or adc jae add dec iret dec xchg scas loop dec pop data16 negb decb lret mov push xor aam dec inc dec xor xlat or sti loope popl push jns cmp push call adc mov pop (bad) jb dec lret dec jge jno sub out lods or pop shl into ljmp out ficom jl das aaa (bad) xor mov adc scas pop mov out popa add movsl out scas jl and add decb dec mov js arpl stos pusha daa shr cmpsl sahf mov out mov repnz cmpsb xor jo sti (bad) out mov lret call jmp mov je sarl cmp pop out mov (bad) (bad) (bad) push mov jns or pop sbb fs mov psrld (bad) rolb int3 in call inc stos cwtl cmpl out je sti sub nop mov out or in je out scas jns mov testl out push xchg xor mov lea out push push jbe mov in out lods sbbl out inc jno inc pop xor out (bad) in jnp (bad) or ss lods dec (bad) scas mov imul shlb test mov xor inc out (bad) je push sarb pop fucomip mov mov (bad) out mov int3 (bad) out dec or out mov out xchg (bad) mul enter xlat jnp in in scas push lret push incb cmpsb cmp out mov xchg repz (bad) popf pop popl cmp stos jle mov out rcll js out loopne push jmp fstl xchg loopne (bad) push pop inc jae fldlg2 jbe jno pop (bad) mov ja test int3 cmp imul pop out push dec sub jecxz out jbe scas push cmpsb jne push mov cmpsl cmc repnz lret dec xchg cmp out ss (bad) xlat inc jmp fst ljmp aas popa or test iret cli outsb adc jb dec push pop fisttpl gs jl popf loope out and jg mov mov bound loopne nop jbe repz in cmp add xchg out test jns je loope in and xor pop shr insl mov (bad) cmp xchg iret jb leave mov ja mov cmp sub and jp (bad) adc mov add inc fiadd sub or out mov pusha (bad) jno push mul dec mov out push add jg (bad) lock out or out addr16 (bad) test out xor aam stos (bad) jg addr16 mov adcb jo ja cmp jns mov add sub test pop call (bad) push repz and push jge loop add fidiv call sub bound out fs in inc xor ljmp add das pop sarl js jp std ljmp and sub iret cmpsl (bad) cmp out pushf mov pop add stos cmp mov insl inc out xchg xchg sahf inc or mov jecxz ret aaa mov mov ljmp push jnp incb mov out xchg outsb xor push andl cltd pop jmp pop cld ret sti push lods popa (bad) out pusha push call enter pop notl into jge in mov out fisubr sbb mov sbb push mov repz xchg (bad) mov inc mov out add xor je or bound cmp mov mov pop dec mov xchg inc sbb in mov push ljmp and add cmpsl pop jmp lahf cmp loop cmp and out xor clc sub push jae cmpsl dec lock sub inc scas xchg mov and rorb out jnp repz sbb and pop xchg jnp mov ljmp out sti dec enter push ljmp push mov icebp inc pop (bad) sub sbb jns inc jmp nop stos inc out arpl sti mov dec scas out leave ja daa lahf jns or lock aam mov sub arpl pop cld bound iret push jge shr mov mov andb and scas out jge mov out stc adc jns jo dec push pop imul scas iret jp and fchs (bad) jmp push insl lods xchg push dec mov or inc test out js jmp add in out (bad) pop nop ficoml out out inc push in add int3 rcrb out mov js jbe jmp out bound adc sar push jb (bad) leave dec pop rolb dec lret sub out outsb fs popa scas xor add jnp mov movsb jecxz mov mov out or push (bad) out jnp fcomps pop fisub pop adc out repnz add inc sti dec xor xlat push iret push cmovbe or in lds out push add jnp cwtl popa idiv sti dec mov jmp mov xchg cs lods in out jns mov inc int3 cmpsb push fs out fwait dec ja sbb and mov (bad) mov int3 in pop lods and out (bad) ja or std push or cmpsl lds cli lods out mov mov in mov test push outsb mov out pop inc vphaddwd jne dec in bound idivb in push repz inc call fimul outsl addr16 fnsave dec in into shr dec lds out test xchg jno mov out js xchg mov daa out mov jno mov dec ja cmpsb mov hlt (bad) insl iret out clc pop xchg fxch repnz pop xchg cmc data16 xchg out inc (bad) and (bad) jns imul paddw loop cld jmp xchg popa dec cs scas repnz sub jmp mov out jns subl cmpsb icebp or jl jg push popa inc out rol stc sbb sbb aaa addr16 jecxz xchg cltd cmp out push fidivr or fildl lcall add push outsl dec (bad) fistp xor cmp test test call xchg adc loope jle mov sub sbb out ja add out cmp sbb cmc fisubr out clc pop sub cmpsb outsb repz mov movsl push popf shl jno xor test xor lcall or dec inc iret icebp (bad) mov aaa out mov in test out out add (bad) adc lock fild cld or xor cltd pop or cs push and xlat hlt inc push sub sbb xor lea imul sahf cli sub add scas jno ret insb mov imul lahf in imul test xor mov xchg mov adc xlat loopne repz out ret mov inc data16 mov inc testb int3 push rcl and popa out pop std mov nop adc cmc adc pop movsl pop mov jne in fildl (bad) stos and mov sub in xchg lds sbb cmc ds pop push mov jp sbb repz jo mov aas imul or out xchg jb in ss inc mov pop in dec add jnp cmp mov xor cmpsl pop jg fnop cmpsl or pop xchg (bad) sbb push insl cld cmp pop add ljmp pop jns bound imul cli and cmp fwait std out test or data16 pop out or insb sahf (bad) aaa jge xchg ss sbb or push inc rorb icebp dec add add fild les inc mov sub js or aaa lock jns je or adc ss dec pop jmp cltd out jae add dec adc loop insl push push iret jge enter pop iret dec iret add popl int3 out or dec push in je fidiv push out xchg mov add jb jp sbb loopne call push xor cmp push repz xor xchg pmaxsw or (bad) cs (bad) aas dec mov popf insl test inc jb sti out (bad) out dec mov xor inc adc jnp js inc es lahf xchg mov mov test ds fnop mov iret out xchg mov or or push movsl out mov test mov and cs push out mov add mov jge (bad) push cld or out dec inc or push data16 into lcall sub mov jae jl out sub jmp pop leave cmpsb jmp xchg pop out mov mov aam mov dec and lcall icebp ret out xchg or sub lock out repnz push add mov push test push out dec adc jae mov stc push jo push gs (bad) out jmp in in imul mov lahf je cmp jge jbe add xchg aas out lea mov add stos out cld out xchg lods ret (bad) jae iret rclb out jl push inc push cmpsl mov pop and in add add out std test into lret aaa out mov and out xor lods std pop xchg into mov push out sub mov fsubp ja call lret out roll (bad) sbb icebp (bad) jne in out xrelease xorb sub in cmp dec test sar xorl dec pop subl mov mov and pop out (bad) sar cmpsl mov inc xlat fistpll sub sbb pushw dec push push sbb aam xchg in pop pmaxsw mov mov je push (bad) xchg inc pop sbb jbe cmc int3 and dec repnz pop inc out pop and jbe jmp and jg arpl out lret mov mov cmp mov icebp lds inc (bad) mov jne mov hlt js jnp in pop push mov sarb xlat scas jo fisttp pop jno xchg mov pop fmull out mov mov jns clc out or xor cmp cli ss xchg push mov inc jge iret repnz je std loope dec dec (bad) out sbb (bad) repnz dec dec inc out repz out sub test pop mov jp je dec aaa pop fnstsw imul mov stc loope sbbl movb out mov popf imul dec fdivrl mov (bad) ljmp js,pn incb push sub outsb xchg iret clc iret cmc jb add cli andb sbb (bad) pop loop cwtl push ss inc add mov outsl push dec ljmp cmpsl pusha xchg andl icebp xor hlt (bad) sahf fistpll add call sbb out jg mov dec out jno mov nop (bad) pop pop dec jp jecxz,pt mov (bad) in (bad) cmp scas out loopne push cltd lds into out inc pop inc test stos or or mov mov movsb push cmovle mov dec mov (bad) fisttpl dec enter xor sub sbb lret ja notl addr16 add test lahf leave sbb jp inc dec jmp push mov adcl rcrb popf pop sub out or out call js mov int3 adc out push sub repnz insl xchg out adc mov push ss adc andl test ljmp adc inc insl lahf sbb lock bound pop aad fwait sti lods sbb add popa out or pop jecxz clc test jg je out inc lahf adc out mov ficom out out lea out dec outsl dec pop jge inc repz ret bound mov pop (bad) cmp jle scas in iret pop sub add rorb push loop sahf mov mov (bad) int push push ljmp fistpll fmuls (bad) lahf jne out ds or hlt pop pop (bad) out push inc cwtl mov add les ret out cld and xchg jno xor lahf mov out jle fistp jmp mov daa lar pop cmp sbb cmp jns pusha (bad) out or mov scas mov xlat test and ds cmp jns leave xchg xor out mov mov cmp fsubr nop out stc inc jb jp pop in mov bound mov loopne and pusha jmp daa out add pop insl mulb inc sbb aas push jl insb xor xorb ss out scas lret sbb mov (bad) xchg cmp push je dec notb adcl lock rorl insb out lods or sarb (bad) push icebp jae jp dec out pop mov shr ficom insl in aas repnz inc out jb daa inc mov fcomp orb dec (bad) and aas fbld and sbb add pop stc cmpsb lcall cmc mov out sub dec push pop add out xlat sub xchg cmp mov pop (bad) fstpt leave imulb pop adc (bad) orl fbld add leave pop pop fiaddl xchg xchg out dec adc (bad) mov xchg xchg call xor inc add add test in pop sub dec push fisttp out jae mov nop movb stos je dec inc fs inc pop push enter repz scas adc in out loopne dec sub lcall out sbbb adc mov jne xor (bad) xchg das rolb add into (bad) mov dec iret out push mov das mov xlat push add adc pop pop out outsb pop sub cwtl insl xor int (bad) mov jb inc outsb out xchg add fisttp js xchg in arpl pushf pop xlat mov add leave or pop out pop jp in clc je (bad) divl pop mov sbb outsl jp pop into aas pop es jns leave add jmp and sbb or xchg mov mov lcall fildl out div test stc cmp shl pop mov dec jae or ja lock mov out in rorl sub xor js mulb jo or and cmp out xor sar loope jp adc cmp pop movl pop cli cmp out jbe dec cltd testl mov push insl jle data16 sti lds out mov nop lcall mov imull xorl jl xor ja aas int mov out push jmp pop fstpl add push dec mov jbe int jnp imul mov lea mov (bad) out jge dec pop cmp push or fs or pop mov or ss aaa jp arpl shr addl pushfw sub push xchg xor push hlt sbb mov dec sbb pop xor sarb mov jmp into jg xor sbbl cmp imul pop pusha psubq xor mov push (bad) adc out mov xor xchg std xor fsubs (bad) out call (bad) and addr16 out push cmp mov out in stc mov jle pop loopne sbb mov out in ja (bad) scas mov out or insb aas out inc mov pop into (bad) testl cmc aas out mov add out lds inc jbe inc push mov sarl das mov test inc dec sub clc cmp out cmp testl adcl fdivs cmp out xchg sbb ret iret out inc push add loop jns sbb (bad) adc add lret mov sbbl out lods into mov out (bad) lds push push out stc inc and xchg mov adc fisttpl mov dec bound js (bad) (bad) repz (bad) mov pop add popa sub test js bound or cmp mov stos test lahf in (bad) test push in hlt mov pop out test (bad) or push xchg into cmc xor jb data16 jnp sbb mov and std arpl xor call push jo xchg pop loopne pushf std push mov movsl jg push jae test out loope addr16 pop sub out sbbl loopne stos out mov cld pop pop add imul pop xor adc repnz out cmp loopne lret pop insb mov or in aam cmp pop push dec xor fcompl add cmc inc mov sahf call rcrl out das or push out sahf ret bnd push es sub lods movsl out jns imul ret xchg jp into jge (bad) ficom dec inc lock loop test (bad) jl cmpb add push or inc (bad) in adc out or cli mov out dec dec pop pop cmp jge inc push push popa icebp ret pop push inc clc mov lock mov (bad) cmp cmp hlt pop pop daa scas lahf sti push push rcrb lret (bad) clc call sub imul inc inc aam push js (bad) xor pusha mov push (bad) out call ds ret es or mov outsl push pop out lock shll hlt inc add aam sbb call fucomip lcall sbb cli pmaxsw xor out pop jp cmp cmpsb stc mov call ret psrld dec movsl xor xchg or dec xor sbb push aad insb out and mov xchg (bad) movsbl test jo imul jmp sbb fistp jmp loopne pop iret decl ret movsl in testl jne inc loope out mov mov fs mov out dec add cs fild je sti data16 xor ret out sub mov movsb sbb inc out adc ss pop in pop inc xor imul sar cli pop ret jp jmp jbe xchg outsb repnz insl mov out nop cmp jge cmp shlb in out push sbb dec movsl inc pop and jno sub adc cltd mov sbb dec sbbb lret loope repnz mov stos pop and sbb je int3 jbe push inc pop sbb jp or push iret mov jae call movsb fistpll add ljmp movb jp add pop inc out or je jmp mov pop rcr inc adc jne mov (bad) xchg pushf dec jp out inc jae sub dec mov lods inc repz push cmp jmp push inc pushf add idivl clc push punpckldq cmp mov repnz mov (bad) pop add mov outsb add inc inc (bad) cmc scas mov aaa out jg inc fwait sbb out stos dec mov jp pop out pop inc jnp rorl fstpl jmp out ficom push cmp push imul loopew in mov and out out or js xchg mov bound add ljmp push popf or in insb mov test imul lock mov divb sub out mov mov sub push cmpb or add fbstp sbb cwtl add jns or push out adc cld mov mov xor mov pop (bad) repz sahf out jp enter dec pop dec js mov mov jp out leave mov (bad) rcrb or lea cmpb loop sti xor xchg jp adc mov int3 mov mov xlat add scas repnz sub fistp and mov test mov icebp iret mov dec out repnz (bad) cltd and pop vmread push clc xchg mov stc xchg mov clc aaa sbb push ljmp jmp test loope pop rolb popf sub mov out jae in inc sub sub imul mov lret imul inc (bad) mov dec out (bad) bound xor test jo or lock int3 popf out imul add cltd mov jl ret add jns adc jno add push or out dec sbb dec xchg cs iret loopne cwtl jbe test pop clc fldenv shr in adc lahf mov push cltd xchg or out sub lcall insl sarl fsub xor add (bad) push mov sbb cmc leave scas movsb out je mov jnp fidivl xor mov pop out jae sbb shl clc mov push xor add addr16 out cmpsb scas pop shl adc sbb cmp add xchg lds dec data16 inc and insl (bad) sub scas cmp jmp test loop jne int3 or push in insb cs dec sub cmp mov cmp repnz fldenv or out sbb xor mov popf jmp mov rorl jmp pop (bad) test stos neg nopl out push lods jg pop (bad) xchg test cmp ja mov sub outsb scas arpl lods push in cs mov shl mov and mov mov popa sub pop sub add pushf or cltd jne ds call out negb jp js ror xchg int3 data16 scas push mov pop ja or clc pop loope pop cmp sbb ljmp lahf jnp popa fs out movb rcl rcll inc call dec inc cmp dec mov fucomi sbb or ljmp fstp stos xor outsb out inc or sub mov aad ret int lock xchg pop push ljmp push xchg incb push push push aad (bad) xchg pop int3 xlat or inc std dec hlt sbb mov icebp pop jo xchg sub out (bad) fbld pop out mov cli mov lods cmp daa mov push pop les test or mov xchg sbb lock adc out loop adc ds inc lods mov pop cli sub addr16 jns dec adc cmovbe ljmp out stos ja mov movsb out or dec mov call cwtl pushf out sub into lea (bad) arpl inc fsubr out adc mov outsb shll mov sub out xor push (bad) maxps add jae and rolb out add sbb dec out lods jle mov mov jp push out out mov sti les dec addl cs fsubrp cwtl xchg mov aaa (bad) xchg das out movsb es clc (bad) pop xchg data16 pushl mov push mov out mov (bad) mov out pop insb add xchg (bad) arpl dec mov or push out mov jl loope addr16 out mov cmp out and dec fcompl aam (bad) dec mov outsl xchg pusha mov xchg mov cltd fwait or mov mov inc pop es repnz xchg into int3 mov fnop mov add fildll sub mov mov out mov inc idivb out data16 dec jmp xchg lret shr mov out bsr stos out out sarb inc sbb bound gs loopne xchg loop in jbe pop mov lods in dec out cmp (bad) out dec sub outsb sbb das cmc xor (bad) inc xchg (bad) aam out adc inc mov push out outsb sub inc adc into (bad) pop xchg jl sbb and js in es push aas mov pushf push lds nop out xor in cmpsb out lret les cmp xor call out push ljmp jbe out xor sbb and call sub (bad) mov sbb push mov out movsl or pop int3 and cmp outsl xor xlat push (bad) lock mov fisttpl out notl sbb out addr16 xor mov nop enter (bad) stc test jl out sti mov mov push cld lods outsb sub out in stos ljmp aaa xchg out and loope and mov push mov sub gs (bad) incb sti push pusha jecxz shrb aam pop bound lahf cs enter imul jbe jecxz sbb jnp mov icebp out minps xchg movsl fyl2xp1 pop je sbb fcomip fsubrl push xchg xchg push out enter xor cmpsb (bad) rcr dec inc push out cmp imul inc mov out (bad) push push movsl xor in pop dec lds sbb outsb imul jp outsl cld mov fildll or outsb push or jl inc jle adc mul jne lds test or outsb inc mov inc jb mov jg das dec mov (bad) xchg jle popf repnz out mov (bad) leave push out jns imul mov xchg add jmp jle inc iret cmpsb mov out and pop movsl leave lea jae int push mov (bad) mov out fisubr insb inc and leave adc hlt xor or xchg adc nop pushaw out mov (bad) ror (bad) gs xchg sahf pop fwait dec dec pop jp clc xor pop arpl test xchg sarb out pop enter jecxz jb loopne dec sbb lock out xlat call in pop shll fld out out lock addr16 (bad) cmpsl aaa mov out or jno out push sub out (bad) jo jmp pop sbb imul add pop push lock sahf push mov (bad) xchg nop in in repz lretw call rorl inc xor cli js in mov dec pop fidivl or mov test ljmp hlt out sub call adc inc repnz arpl rol dec ffreep nop or out fwait push movsl push outsl xor (bad) adc cltd mov sbb out push and pop or cmp pop shr out icebp xlat test cmp out lock cmp push mov jb sbb out mov pop push push out mov rcrb (bad) into cmp test xchg pop jb push out cmp sti pop xor (bad) aas rcrl cmp inc sahf sub sbb scas add sub jle clc sub imul xor aad out (bad) mov (bad) dec cmp das arpl jns call inc out mov inc dec loop push add scas mov pop push fs insb imul lret (bad) out inc inc or shrb daa js sub ret cmp shl and shl inc enter cmp xchg pop mov pop cmp into (bad) cmpsb addr16 adc scas aad or out fucomip insb fnstsw es mov xchg push jo jne out call sbb out pop cmp jmp mov push ret xchg or (bad) out xor ficoml iret stos movsl arpl jge es out mov sub fadd pop dec adc (bad) xchg xor into aam (bad) jae negl jge sub (bad) enter push sahf out mov xchg mov push ljmp (bad) cmpsl mov pop jmp push lock or stos mov cmc rclb daa out mov lea xor clc (bad) pop xchg push (bad) sahf ljmp cli fsubr out pop jb lcall in jg out arpl test out mov fs out mov sbb sub (bad) ja daa inc loopne rclb jb sub out rorl push lcall mov cli out int3 orb or jecxz pop adc inc and pop mov cs or dec test insl jb sub jmp mov push xor call fcmove mov push dec mov push push sub ds fdivr dec cld insb sbb mov dec inc push xchg je test xor imull or ja dec hlt pop cmovbe fnstcw leave ret aas imul add push or pop dec jo sbb rcr and notb fucomi stos adc adc add mov sub jmp adc fs (bad) cli pandn out movsl jmp daa mov jnp ret mov repnz mov dec in adc dec lcall xchg xchg negl jle jns and xor cmp addr16 sahf and das pop push adc out mov xchg rcll mov inc in sub mov sub scas mov xor les pop pop in fmull push mov bound ss jne push out je idiv lea push lock pop cmp imul sti jle and lock (bad) sub sbb repz inc int3 cmp cs lods cmpsl or loope gs mov stos int in fidivrl mov cmp (bad) mov (bad) out jo cmp mov xor repnz or adc ret je xchg and pop loopne cltd int3 lcall jle xor or (bad) (bad) mov stc mov adc out pop mov cmp out cmp sub mov cli out rclb out inc orb pop mov jbe dec in dec lods sti pop push mov cmc lret pop push add std or cmp mov pop sbb out das lret pusha mov xor pop out fcomp mov inc out or dec les pop pop stos sub mov and popl add or dec sub dec sti push sub xchg jbe addr16 dec in push loope repnz (bad) int3 imul mov popa test ja stos cwtl dec gs adc frstor adc adc js out outsl push xchg les sbb mov adc test test in push scas aaa push dec rcll jmp popl ljmp xchg scas stc jge xchg add dec pop mov das xlat mov and jo sub (bad) inc in enter fistl xchg add pop iret fucomip push dec pop repz out sub (bad) movsl xchg push pop pop mov rcr jecxz das es out in movsb or ret out sbb mov xchg in icebp pop push cmp pushf (bad) outsl xchg out adc mul inc xlat ret nop cmp icebp out int3 sbb push out jmp mov incb mov dec arpl test xchg insb mov xor cli fdivrl fsts ds addr16 cmp iret sbb addps fwait (bad) mov (bad) je in es mov or sbb int enter in jae out sub adc decl push fucomip push add sub xorl push (bad) in cmp out repz cmpsb sbb mov xchg test xor inc fsts es and scas mov and pop push (bad) out pop xchg mov pop pushf int3 fcmovne push repz sahf psrlw xchg mov add push inc rolb lods jno jge jmp jb repz hlt popa stos jne ds xor inc pop out test or scas out loopne mov add stos adc xchg stc leave xchg or cmp pop cmc mov into cmp test mov cmp push jecxz xor xchg icebp fwait stos pop sbb fs mul out inc push adc in inc jmp jnp inc shlb loopne inc pusha in xchg or mov add out cmpxchg in pop ror cli ja pop aad out jmp jmp lods jo inc loopne xor (bad) pop and loope cmp mov push xchg mov out inc shrb in (bad) or jb jno xchg push jg scas and xor push aas push sub rolb sti xlat dec shr fldlg2 jns es sahf fistpl out mov add pop mov jae scas in fisubrl adc ret mov out sub clc out add enter negl jo out das mov ret jge out iret push cmp cltd shl jmp push jg mov add sahf push pmaxub stos in mov lahf mov out imul xchg lock sbb jb sbb fsubrp sbbl sub push stos mov stc adc hlt js gs ss loop sub mov xchg imul pop mov cmpsb aad js jp insb int in mov out inc jl mov iret cmc arpl in cmp cwtl (bad) push push idivb ljmp cmp push inc aas xchg mov shrb out cmp inc fisttp shrb cli out cld sub mov jg cmpsl bnd cmpsb cltd div xchg adc je (bad) rol ljmp out add pop repnz ds out cs insl fisubl and (bad) and inc shr add jo pop into pop mov xchg repz cmp jg imul shr addr16 xor ja aas out jg pop scas imul scas je ljmp enter and (bad) out ja call mov jmp or mov dec or lahf xchg ret pop push aas fwait jmp sub jmp (bad) psrlq movsb cltd and inc mov cmp dec adc int3 (bad) dec ds mov imul cltd or das ret out xor add repnz pop out lods aad fiaddl jmp out shll outsl push xchg fcomip cli mov push or mov adc mov push pop pop or test out pop out mov sti imul jae fcompl (bad) aad cli nop cs (bad) test dec loop rorb jb out mov loopne push pop jno popa ret push jne sbb call mov xor mov jle daa ret sbb out in push fidiv cmp dec xchg loope popf out jmp rorb rcrb and pop subb cld inc test sub xchg cli std (bad) sbb adc mov lcall mul jno xchg in adc push out mov outsb pop (bad) fdivs loope int cmp dec cwtl out call rcl adc jae pop jecxz lret out mov ljmp jmp out lcall cmp push mov xor loop arpl test sahf push lahf adc in fisubl popa adc out mov nop mov pop out jbe cld mov and dec aas or popf inc lret fsubrl mov mov out (bad) hlt iret outsl jp xchg cmp inc pop rorb sti mov iret subb aad lock (bad) scas rcrb insl pop sbb pmaxsw sbb imul and (bad) sar loope mov mov ror xor lds cmp dec mov (bad) jmp pop call clc mov scas pop lock daa data16 adc test mov fucomip jge push xchg das clc sbb add pop inc cmp xchg and cli sbb je adc sbb outsb sbb repnz aad inc dec shlb out andl jae mov leave movsl dec (bad) in ljmp push jnp nop shrb ljmp pop mov cmp fsubr pop sbb aam outsl xchg mov jmp out sbb inc dec out inc in jg loopne fistp mov cmp pop inc (bad) nop out push mov adc ret ljmp mov clc add xchg out dec xchg out data16 out test fidivr out lahf pop sub pop iret popf mov repnz push sti pop add xor sub and push add dec enter stc mov mov mov adc push mov nop out pop fiaddl nop out bound jne adc insl (bad) loop inc mov test popa inc outsl sbb iret test lods adc outsb aad (bad) jge mov mov out addl (bad) mov es out out or cmp hlt sbb out ficoml jb out jg cmp cmpsb pop mov cli sbb xor xchg adc ljmp in dec lahf loop fsubp out xchg jp add pop ja in pushf inc jl xchg (bad) out out loop pop dec jbe movsl xchg out add ret (bad) cmc decb xor imul cwtl popa sub mov stos iret xchg shlb dec xchg xchg add into fsubr push roll sbb mov mov mov cmpsl or call pop xchg mov repnz xchg mov and int cmc fcomps out xchg iret cmpsl lret ljmp aaa out outsb push js sbb (bad) fucomi sbb or add or je push out jle push add out fildll cli sub xchg push sub cli and nop pusha out adc pop dec mov mov outsl cmp aas ror xor mov mov pop jge mov subb stos out xor js add loop,pt loop xlat cs fdivrs xchg xchg clc sbb loope (bad) pop sub adc adc ljmp out cld xlat scas push unpckhps ret out xchg lcall dec test in sub imul ljmp mov (bad) xchg out xlat inc out enter mov divl xlat enter add (bad) jb pop mov outsb jl lods pusha (bad) out insl dec jge lahf xchg jns in rcr sti and dec test pop sbb mov iret and inc jge (bad) popf sub mov arpl lea iret stos xchg cmpsb pop mov sbb cmp aas cmp mov cli mov test mov jecxz sub test insl cmc out inc pop mov inc out in sahf ret sbb out loopne xor mov mov inc and ret mov jno (bad) pop fldenv insb mov out dec ret insl mov out nop add jmp and mov out rcrl mov inc and mov pop sti out add sbb incb sub in pop sarb mov pop or ret jb dec adc scas std push pop mov imul imul sbb pop cmpsb iret das les call (bad) das out lods or mov dec inc mov arpl fs sbb sub jl xchg out dec mov out push adc xchg cmc adcl aaa loop in xor in or fucomi xor mov out pop les out (bad) push shrl pop cld enter hlt loopne lret out pushf aam addr16 sub dec test push dec mov push mov pop mov adc mov in loopne or repnz scas out add outsb push push jb xor sbb add in inc test out xchg out je dec or and dec push out push stos mov cli out mov lds mov jb in sahf cmp fs inc loope pushf pop repnz pop dec or in movsl lock incb jae sbb xchg out adc stc mov cmp enter mov xor push mov out jno sub cld insb push pushl dec add out std dec push aaa adc mov out imulb stc xchg cmp push out jb lea sar inc outsb push jae jmp push incb mov sub mov ljmp out dec pop loope adc mov mov mov leave sbb pop sti data16 and pop xor fisubr adc stos out push xchg jnp dec out test addps lock adcb sbbl fild stc sarb mov hlt inc pop cmp faddl add aad xchg rcll fucomp inc xor out pop jl sub jb out xor std jno mov into sbb imul (bad) lret jae mov icebp out repz cltd jle lret inc adc loopne push fstp popa sub sub mov out mov mov push out (bad) jge (bad) daa into mov adc pop push mov paddusb pop out push aad pushf das cwtl enter lcall lret pusha inc (bad) push dec jnp addr16 scas xchg push out sbb cmpl sahf imul jg out outsb jo pop dec enter and out roll mov repz sub loope mov pop mov (bad) sahf xor xchg out sub (bad) jg cs stos insb out aam rorl add jge dec clc lea iret es outsb inc mov fucomip xchg sub sub cmpsl out dec adc dec mov data16 adc push push xlat mov nop out (bad) cmp jmp xchg pop inc lea arpl adc sub dec cmp les insb aad out outsl add sbb out fcmovb inc fiadd roll (bad) jbe out xchg int pop push sub jle jg call inc into stos jae mov push insb inc out fimull pop ret out mov fdiv aam mov jle lea or sub loopne sbb out pop adc mov mov aad loopne imul xchg out inc outsb push jmp (bad) xchg dec int fidivr mov sbb outsb call jecxz in out adc inc div std in out cltd icebp xor cmpsl loopne in (bad) out inc lds mov out push iret test mov adc scas add pop xor cltd out push (bad) aad jbe adc out sub or out outsb jmp cltd (bad) mov enter mov xor out push lcall push push out jne inc fmuls clc aam (bad) stc and test pop pand sar pop lret adc and (bad) out int3 outsb test in in mov lahf fwait add cmove loopne out ja mov mov loopne mov stc sahf fistp or pop pop mov jge add fildll sbb lea dec xchg movsb insl push das loope fidiv cli repz inc xchg in shlb inc in out mov jp mov aaa fsubrp cmp fwait sub test es out inc xor call mov (bad) jecxz and out repnz jne jge cmp lods aaa iret jb mov (bad) jp add inc lret call subb fsub loope scas out inc sub cmp out pop jl push out cmpl movsb adc lcall sti push sahf out mov cs pop inc pop pusha fadds push imul fsubrl jo xchg pop xor jmp lea mov xor cmp jo fimull fucomi stc xor out das jbe push mov in mov jmp xchg cmp dec mov adc (bad) repz push int3 (bad) pop push rol dec xchg sahf xor outsl sarb dec inc sbb lret rcrb out jbe (bad) and sbb out jmp push js ret sbb cmp data16 call push jmp out add sub ljmp and jl imul fwait pop out loop adc paddb out cmc inc mov cmpsl cmp adc out push xor pop push jae in js hlt aad mov xor mov cmp out mov push cmp fisubr aad pop insl (bad) mov sti out outsb cmp mov adc jb out cmp popf out pop fstpt in data16 loopne jmp ljmp incl clc sbb jb movsl xchg ficomp sub push mov pop out lods dec sub push fcmove (bad) out test dec in (bad) push shlb jmp out imul push out pop push fdivs mov push scas mov insl pop xor sbb mov cltd and fs out ss inc inc pop and stos cmp jno ret fs (bad) ror mov xchg jbe dec push out dec sub and insb in out fcmovu lods inc jnp js out inc cmp push sub inc mov imul ljmp mov jb xchg dec nop out ret js sbb cmp lds sub out aam loop mov cmp aad js clc lret loope out jl int3 inc or add push shr leave pop sub pop (bad) in pop inc fldz test jns xchg pop jl add mov sub dec jmp push enter in insb jb jbe out in ljmp popf pop mov add outsl mov xchg mov adc pop mov insb mov ret xchg out sbb jg dec xchg out lahf jmp loopne rclb jne sub int loop pop outsb imul adc lock ret pop jle xchg xor mov outsl push pushf outsb sbb in flds inc push mov mov cltd dec mov out aaa inc les push xor push push and js mov popf aaa loop mov and out sbb jno inc and jbe push (bad) mov (bad) hlt and mov (bad) out fsubs adc outsb iret cmpsl frndint dec out mov sub enter out aam jno inc sarb cmp pusha out push or and pushf gs shr in jle test mov push dec pop fcomip add shr out movsl xlat ljmp mov lret (bad) jg jno xor cs dec adc fimul stos (bad) sbb jne icebp (bad) insb mov xor xchg popa out push (bad) stos icebp sbbl stos das rcll out aaa sub xor push out adc xchg pop or or mov movsb out xor pop pop clc popf lcall pop cli ds repnz insb lods mov out rolb (bad) pop loop jnp out fucom and mov jnp in cmp pop or pop sbb cmc and imul or xor mov outsl popf add xor pop nop push hlt std sub add outsb aam xchg lock test sub sub pop iret adc int3 mov push sbb push jg jns add arpl test mov jo in push jle out insb xor adc mov pop movsb or outsl dec mov and in repnz cmpsb push push cmpb (bad) pop out insl icebp outsb lahf dec push iret ds loope test sub sysret mov push cmpsl adc sahf pop jg test loope push dec pusha imul or cmp mov aam jns das in pop cmp push sub out mov and (bad) out and shrb nop das iret divb (bad) ljmp push aad mov out or bound lock push push xchg adc sti push (bad) jnp test adcl aam inc popa popf mov scas xlat xor mov add jbe enter sub push and out xchg jo mov xor mov imul xor push hlt and or ljmp (bad) xlat mov (bad) inc call jge inc out or insl not or fucomi leave pop mov (bad) (bad) mov ljmp xchg out sbb jle ja mov fwait mov out (bad) xchg push push out mov cltd dec cwtl or out repnz les sbb mov test sub aas cmpsl jnp sub je insl add int3 out pusha push fmull std iret pop mov jp sub and xchg das mov fwait and fbstp fmull rcr pop dec idivb and mov add push dec cld xchg (bad) fldenv xchg movsb lahf js (bad) scas out mull imul leave or je cwtl xor call add mov icebp xchg xrelease out xchg push aaa pop jbe incl and fadds mov or out out setbe out addr16 es cwtl out or in jl mov sbb push mov cmp sub pop lods testl inc pop and in aaa pop sbb clc jmp mov mov out dec ds enter insl movsb out xchg or inc das ret cli jbe ss test cmp pop xor out pop (bad) fnstcw adc (bad) out sub out ss cmpsl sbb mov lcall outsl xlat pop mov cmp test out rcl out push notl xor sub nop out dec inc add out int mov or (bad) incb in ret fwait outsb mov sahf gs cmp dec push jp shrl cs hlt mov leave popa push adc std cmp pop jne xchg sub fs sub xor cmp add bound pop inc and dec sbb ljmp loop xor dec out sub outsb fwait adc iret fsubl cmp std lods jecxz fisubr out es popf insl jo add (bad) aam inc pop out scas pushf repz iret in dec xor and lcall jle cmpsb out push fisttpll (bad) cli pop add pop out in sub aaa out cmp jnp adc jg call (bad) loop lods or pop xlat gs bound xchg inc dec loopne jge insb ret fcmovbe out jecxz pop aaa mov aam cmp fnstcw out add xor cmp out lea das rclb (bad) (bad) cmp push fsubrs mov aam push jp jo ret push (bad) int3 dec push in clc imul mov out fnsave cmp (bad) sbb bound inc pop mov in (bad) shr or mov inc rorl or xchg loopne cmpsl shr and push push cwtl mov inc test push int3 into out pop iret dec jae std ret out fdivrl and scas push icebp stos (bad) mov sbb testb pop sar ret pop xor out (bad) fildll cli out lods push jl vcvtdq2pd test gs pusha jecxz add push into xor lods popf push hlt push out jmp pop and pop pop clc frstor xlat (bad) (bad) adc cmp mov int movsb out gs jnp shll out push mov pop push stc pop (bad) popa jg sbb and jecxz mov hlt (bad) xor stos sub mov aam jae and jbe xor jecxz mov cli pushf repnz lcall or rcll (bad) in xor out lock add out call out rcr lret out aad test mov push jbe ljmp pop iret stos or ljmp jno out xchg adc aas cld mov in out dec loop pop packuswb pop stc xchg in mov push jmp ljmp ja mov out pop sbb mov push inc jo rorb scas jae pushf jno mov cli pop cmc xchg insb jmp and push ja mov and outsl add cmp test mov ret out and inc inc sub iret and nop add out dec jnp jb arpl or stos shrb lods add shr xchg jecxz out jmp into cmp lret out mov int3 pop mov dec pop cs mov imul adc pop jg or fsub cmp pop xchg (bad) fdivp aas into out xor and out dec fbstp xlat std insl cmp scas sub out mov out mov mov mov test sub aad divl int out mov aas inc mov fiaddl popa pop push jmp out or hlt adc mov in or imul lahf das push lahf fs adc out ret fbld xchg (bad) mov push out imul dec or rcrb inc out adc or leave pop dec fsubrs add pop out xchg test fiadd pop jecxz (bad) out enter jno iret (bad) out std adc mov jl lahf push inc mov mov out ficoml (bad) xchg xor inc xchg cmp adc or hlt add xor sub cmp push sub imul pop shrb out sbb movsb fcompl sbb mov imul mov clc push sub jg add xchg cmpl mov out mov pop or out inc xchg inc mov aaa mov or insb popf hlt fucomip out mov mov adc out jg inc cmc xchg jb sbb lret imul movq inc ja add in out out and push fcoms jne out and leave xlat sarl jle out out ds icebp loope lret out adc pop das jnp pop rorb movsb dec out data16 cmp js add xlat das out loopne lods pop out addr16 jnp arpl lret xor in sbb fisubr in or (bad) in (bad) aam (bad) mov idivb pop xchg lods cltd out inc popa mov in xor jnp lret loopne and iret idiv out lods mov out test icebp (bad) js repz sub ret pop xor jno or adc mov fsubr or add pop mov xchg out test pop je fs ja std and in insb out mov pop iret mov pop int3 out push movsb sbb out mov call out pop lods jb push (bad) scas jne (bad) dec jmp dec in mov out pusha xor or pushf mov out (bad) (bad) stc shlb repnz inc dec inc mov lods sbb bound icebp push popf jl adc inc pop cs imul xchg xchg scas xor aas mov dec out cmp cmp inc sub mov mov inc mov out adc (bad) jge mov jmp jns pop dec pushf aam add loope dec jl arpl jmp jle xchg and mov mov pop cmp xor gs adc mov shrb mov mov adc js add inc stc xor jb inc jecxz dec pop push mov iret add outsl in fmuls loopne ljmp out xchg clc and loopne mov out mov pop jo xchg xor fwait int out fsubr fcmovb ret (bad) adc push mov roll fsubrp pop pop arpl push xchg arpl sub aad sbb mov pop cmp push loopne add into mov jns (bad) out cmp jae pop (bad) mov movb (bad) imul insb mov mov xor in push add lret out lret gs lds jmp in mov out cmp aas sbb stos xor jp ud2 scas adc out lea xchg icebp sbb push push adc insb movsb loopne cmp mov mov out xchg push insl lahf rorl mov cmp test cmpsb sub and jge sub pushf out vcomisd add sbb and out hlt dec arpl lock push adc jo push xor decb mov (bad) xchg mov leave insb dec lds cs cld add sahf aad into in imul xor lods jae rcr inc pop sub lret jo loop pop xor lret push cmp jo fucomp adc test fxtract xchg in incl jo out mov cs out movsb lds out mov out adc iret lret push pop roll xchg fcmovnu jl lret dec lods (bad) out push rorb add mov out out daa ljmp out xor or fndisi(8087 add into push ret pusha out mov mov (bad) out dec adc push adc movsl neg push mov xchg pop out shrl shl out lds jbe push xchg gs out in fcoml add push mov sbb ljmp out dec adc cs jge stos push mov fwait xor push add push stos (bad) mov out sub mov adc xchg outsl sbb sbb and (bad) fdivr dec out cmp xchg push or (bad) unpckhps xor popf out mul lds dec mov leave jge es lcall cs notb loope jnp ljmp jno or out mov scas or mov imul inc cmp add add push pop out es cli mov in out outsb pop out les add mov popa out lods jmp inc (bad) adc sub dec cli nop aam (bad) push insb add rcrb fsubrl sub jl mov ljmp (bad) push mov out lods xor mov xchg jg movl inc out fwait pop (bad) in and lahf and out push pop gs adc hlt (bad) out fwait stos ret pop pusha jp sub pop dec (bad) out sbbl cmpl cld inc lahf lods out xchg push pop xchg jno pop addr16 xlat out sti sub iret daa popa xchg sbb add imul adc sub mov aad pop adc and sub (bad) div test push ret mov ljmp xchg sbb repnz mov icebp movsb sti mov lret cmpsb ret out fsubr push adc ret out inc push sbb in stos inc addr16 movsb test jl xor xor fistp mov int cmp xchg bound pop lods out mov in frstor movsb out inc adc or sahf fcoms push cwtl xchg inc sub mov cmp std ss pop outsl fwait xor ljmp cs js mov ret and mov jb pop adc cmc pop pop popf aad sahf mov jecxz xchg iret inc fildll cmpsl push cmp out jae (bad) and fs or fs mov popa shr and sbb push out lret arpl jl shl inc dec movsb movsb mov fistpl clc jmp inc inc insb dec movsl and fcomip (bad) aas adc cmpsl sbb (bad) inc popf push out mov push mov decb (bad) mov push mov out repz sub dec fdivr insl out mov movsl add pop aaa lahf stos ja addr16 ds out js insb fldt mov pop fwait add fs (bad) mov xor in push out stc add fwait lods mov out or mov dec popa les dec outsb out or inc ret leave out out cmp aad dec lcall int iret enter test and and out test out or xchg pop fistl lcall (bad) or jle pusha jb adc cmp fimull dec jecxz sub mov or pop push cmp cli fnop popf dec (bad) cmp dec push push gs out push (bad) in xor out out test cmp xor push mov out stc mov cs mov das jge (bad) jbe ret addr16 and into sub or jnp sub mov jecxz out int (bad) or iret in sbb movsl insl stos out mov sub das dec jecxz divl adc cltd subl sbb out xchg imul adc adc xchg fldcw out loop mov pop pop xor sti xchg cs mov out cwtl adc nop in call xchg ja sbb outsl adc push rcrb xchg int3 int push ret fsubrs mov sti push mov out adc enter subl iret popa (bad) sbb adc pop mov out clc xchg pop jl push mov jge insb adc sub out jae push std subb aas ficomp or es pop hlt cmp push scas sbb int out mov push mov lret out pushf je fwait les (bad) mov lahf dec inc fdiv loopne pop in out rcrl sbb sahf xchg out jecxz cmpsl daa mov pop fwait in pop inc call mov and in aas dec xor mov push iret cli adc stos out push push pop call push dec and push iret imul dec out mov out sub fisttpll out ljmp adc fcomi mov adc (bad) xor sbb stc mov mov out cmp scas cs aad outsl out add addb out in adc and push inc jge sahf out (bad) adc out cs ja pop mov mov inc daa aas mov hlt insb sbb inc jle sahf daa in incb fs in imul sub push movsb insl fistp sbb xor in push (bad) aam imul or aad sbb inc fimul out inc cltd or fwait out out sbb movsl and sbb cli imul pop sub mov sbb sub adc arpl mov pop test xchg out out xchg push jne (bad) adc loopne push or add mov pop ljmp out insl push mov (bad) mov out mov push (bad) cltd or insl push mov iret push iret adc or cld pop out sarb (bad) xor jmp lret out cmp cmpsb and out rorb xrstor mov jns mov push out fldl cltd pop cmp test or ret xchg lcall mov cmp pop xchg pop adcb pop stc mov cld out sub jns sbb pop and jecxz and and jmp lret jb inc xor sbb lret mov int3 cmp mov or imul fwait in int orl add out in push sbb push xchg xchg add adc xchg out jnp jbe aas loope imul daa bound arpl stos adc out icebp add mov xchg test xor jne adc fdivs xchg aas (bad) pop out dec (bad) cmp or je sbb adcl out (bad) loop enter mov and or out push xlat mov popl sub out jmp in dec or sub cltd xor mov cmp (bad) cmc out adc shrl sub sub test push dec sbb aaa pop sbb lahf loop dec push in sbb test (bad) in lods mov xor test out fsts das aam movsl jo lahf add out xlat popa lret sbb imul mov iret lods insl rcrb lock mov dec or mov andl cmc mov inc jo fsubrs jnp out mov cmpsb xchg nop daa sbbb xor fsubp xor xchg cmp adc (bad) push or xor out sub insb mov xchg xlat sbb pop jecxz pop aad pop sarb jl cmc adc ret scas inc jno cmpsb subl mov xor rcrb out out inc jo cmc fucom push mov sti cwtl insb pop lods popa pop dec iret add add aad xchg out xchg loope push aaa pop jmp mov fimul cmp outsb (bad) sub dec inc rorl sub (bad) out push nop sub and cmpsb ljmp sub mov xchg lahf xor addr16 pop mov push fwait jbe popa flds sbb jne mov mov dec in iret test stos je xchg out dec popl ja js dec out arpl jcxz jnp out je xchg mov in nop push jo jbe (bad) jg mov (bad) mov stos out out js lcall xor xor add (bad) or mov cld mov dec mov fidiv jbe,pt inc out push push ret sub push out add xor ljmp and push jecxz adc int3 popf push pop inc push mov inc fucomp cmp icebp pusha out jmp divl out dec bound fwait rcrb sub jns jmp push aaa ffreep cld mov mov pop adc ss mov pop js gs std pop sbb inc cs shr popa cmp int3 out (bad) mov sub ss cmp ja pop push arpl jne xchg add mov out xchg jle push cmp das cmpsl and add jns xor adc or out dec outsl cwtl jbe inc out imul add out sub inc push dec insb out mov rcl call push dec xlat and cld sbb mov cmp push add rorl mov leave out aam dec xchg in jae,pt insl dec sub inc jp jp ror pop pop mov mov xor push mov (bad) (bad) (bad) insb inc out mov cmp xchg test out clc push out scas sti push mov out insb int shrb cmp out fdivrl sbb enter pop arpl adc into sar in jge ljmp jl in mov inc inc mov sbb cmpsl jb dec out insl push xchg or rcrb out xor (bad) cmp repnz out stos fs cld jae or rclb testb mov xorb jnp jg xchg dec shl jle clc leave inc out cld xor add mov ss pop ss mov sbb add out mov mov inc mov mov icebp repnz xchg mov pop out call inc push inc nop ja test pop jg push or outsb adc push jge scas aad (bad) xor cli dec out sbb addr16 push lret in insl jno cld xor cmpsl sub int (bad) pop outsl (bad) cli sbb push das sub out sbb add push pop inc pmaxsw inc inc imul jp add jmp cmc cmc clc mov lcall insl or ja cmpsl test dec xor out add sbb outsb (bad) out jp jg or jo ja loope ljmp sar out pop jle out ss pop xchg jbe movsb push insl sub ret jns cltd daa inc and arpl icebp scas stc cmp in shr (bad) ret or jl sbb bound cmpsl (bad) pop jle (bad) or push movsb mov and subb mov fldz (bad) pop fdivrp xor insl out and push adc dec enter pop push es add int arpl rclb inc cli ret (bad) jno xchg (bad) int push lods fsubr push jl adc pop clc sti sub mov pop cs scas stos jb mov in pop out inc jbe jo sub mov mov imull stos sub imul out or cmc pop inc jbe mov out hlt mov jnp,pn out bnd cmp mov out pop pop adc push out shl sbb add imul adc cmp sbb mov jmp out push mov loop xchg stc jb idivb repnz xlat inc pop nop adc pop sub mov jb stc inc out cmpsb repz inc mov test mulb inc cmpsl dec out mov mov pop or pop jg fsubrl out cmp enter imul jmp mov scas push cmp out rorl scas out les out ds xchg (bad) loop (bad) ja push in out xor lret jl mov das xor dec sub (bad) xor jge mov sub stc and jmp push out fcmove push stos mov bound mov out cmp push (bad) pop (bad) shr leave popa test cmpsl int adc out ja pop sbb mov js mov sbb xlat outsl or mov out mov push xadd loopne xlat std ljmp into out xchg in (bad) repz cli jae insb test out or mov inc mov jno mov mov (bad) out push mov mov mov loope adc cmp sub std scas loopne or mov (bad) out xchg mov xchg mov cmp mov loope push dec xor out pmovmskb out out test fldz mov pushf in jbe or out xchg inc cli inc fs mov rolb lds mov lea xchg clc hlt xlat fisub sub stos ret sbb dec hlt mov out adc pop popf pop dec add call pusha dec test out inc xchg adc pop mov pop aad lahf push inc xchg mov add pop out xlat jp cld cmpsb mov inc cmp xchg (bad) jnp pushf pop cwtl test xchg dec loop cmp sbb out mov pop leave scas and inc (bad) test (bad) out xor out sti (bad) push xchg push cmp data16 jg das ret xor cmp out imul lret ffreep mov mov cs daa or loop sub xor insl push jb adc mov out lcall jo cmpsb jmp sub out addl fdiv rolb xchg scas fs push in lock push in pop dec test shl pop cli jb dec ljmp out add cmpsb js out xchg or adc sub or pop mov out hlt cmp cmp or mov inc push adc pop out addr16 loop (bad) in fimul and aam mov out jnp rolb cmp xor pop fsubp xchg lods fildll pop fwait cmpsb push push mov jmp push out je mov cli add (bad) iret jp lds repnz sbb bound loop push push stos aam pop and sar inc cmp out sub xor mov push sbb mov out adc sbb xchg pop daa adc in les xor jb inc xor idivb imul imul jb mov nop mov sub dec mov arpl outsl cs mov or xchg inc je pop push jg,pn xchg call jne or mov std pushl repnz or cmp add aaa ja icebp jns inc and xchg pop decb lea mov pop bound out cmp out and and fistpll pop (bad) lcall ss es push and out adcl or (bad) xor fist mov add mov inc sbb jmp sbb imulb push incb mov mov jp ljmp out (bad) add (bad) mov bound outsl dec add sbb add fwait out cmp decl ret xlat jns out outsb pop adc lock push fidiv inc jnp mov cmp mov sub movsb fldenv fwait sbb push sub test out insl sbb cwtl push mov rolb mov jle ljmp outsl push jecxz sbb movsl xlat loope out call icebp dec aaa xchg cmc dec jg lds cmp ss mov or push lods adc fldenv lcall xor cs shrb cwtl fidivl out and popa outsb cmp or aaa lret mov mov out push (bad) enter sbb stos push lods cmp movsl scas das or icebp sub pop imul or ljmp xchg sbb add and fs out std loope jb,pt call mov (bad) jo sti sub int3 mov add mov sahf fistpll (bad) mov push cmp and test outsb repnz and (bad) in cmc out pop js inc add out pop pop les scas out loop adc xchg add inc inc out inc std pop cs inc cmp testb iret out mov loopne into out fs jae daa lods stc adc mov inc loopne out cmp and xor add out mov mov cmp mov popa out push lock sti jb dec in jns out mov and mov into ret fcomps adc pop mov cs mov stos out (bad) fsubrl inc in sbb and mov out dec add jecxz mov vshufps mov pop jp or cmp cmp mov mov or pop xchg xor movsb leave jmp pop cli daa out arpl jl in and mov (bad) jno cli scas ljmp pushf jbe cmp sbb jo scas call sub ror imul xchg out mov into out sbb in sbb aaa push mov (bad) fsubrp sbb jns lret pop out pop div imul pmaxsw add addl out or pop mov mov loopne pop leave stos push inc xchg in mov mov loop jle test sbb test sbb psubd sub lcall int3 imul fidivl je push push adc add iret xor insb jg loope mov push rolb jb jmp mov pop scas jno (bad) iret cli jb sub cltd leave sub out xchg (bad) pop iret and aad xchg inc pop or js pop push cli push fwait idivb jae jl (bad) out inc add mov insb out (bad) enter mov test hlt fistp sarl push push mov mov icebp mov rclb dec dec add cmpsb cli jnp je out pop or push inc out xlat cmpsb rsm dec pusha cld sti out (bad) iret dec inc jge out out mov xchg push lcall mov sub sbb xchg push sub dec (bad) sbb in clc dec (bad) hlt xchg add movsb and xor test das push out dec (bad) push dec xlat cmc dec add dec inc aas cli addl std xchg push adc mov pop jg in popa lock add dec out pop mov dec test call inc in jbe adc loopne jg pop add out mov push inc ljmp lahf adc fisubr ss pusha xor repz jg mov ret push xchg mov adc imul push popa jae call in and data16 xchg loopne ds ljmp aaa outsl sbb insl fs out imul inc xor aam iret shl dec (bad) out inc pop pop test jns sbb xor bound out dec mov jo mov cmp inc out pop scas setg cmp mov mov push xchg ljmp cmp ret dec rorl fs fnstenv cmp pop rorb pop (bad) out cmpsb outsl inc (bad) aaa fildll mov sti push pop sbb call mov test mov repnz das fwait out cmp les ja or jg jge adc inc and xchg leave sbb mov cmp mov mov pop xchg sub cmp and mov clc sarb out sarb enter mov fcomip stos stc dec out cmp sub mov (bad) lock inc movsl dec iret add jmp out add mov xor jo xor ja mov dec outsb sbb iret scas repnz jg mov and jp aad cld in xchg das out dec lock outsb pop push in fdivrl fdivr movsb cwtl sub scas inc push call out dec fsubl loope js jbe out sub addl add je adc cmp repnz out loope xchg mov push fs pop in pop out or bound shl pop pop nop imul cmp leave push push xor add mov or jp in pop je (bad) jns lret jae jmp jno push mov jnp fldlg2 mov mov pop scas inc shll jbe out dec pop inc mov push jns bound mov in loop loope je push test insl out outsl adc lret and or push cmpsb mov js adc stc or dec out mov rclb jmp loop imul lods mov ret fistp leave loop sub insb fs out pop idivb cld movntq out push pop outsb movsl in rolb out adc sbb pushf adc out mov add ffreep adc je jg imul adc mov dec jl cld rcr mov (bad) mov out xchg test jle jnp ret pop insl fildl repz subb out xlat push test jmp mov mov dec inc movntps xchg push mov jecxz jle sbb test inc inc mov aam hlt fsubr imul sarb mov mov data16 js xchg xchg divb push dec jnp dec ret mov (bad) pmaxsw repnz adc (bad) out lahf inc jg sahf mov iret pop lret jecxz mov jb jmp mov jbe movsb (bad) jne cli fnsave cmp (bad) out adc xlat fs fadd mov mov (bad) jns out call insb leave fwait dec jnp mov stos cmp lea out pop dec add out dec mov aam or in out or (bad) mov push mov stos in jns pop jmp out pop add mov in in incb clc ja xchg arpl out (bad) pop mov add aad xor mov jno push inc inc jnp add rorb loop or xor mov std jp (bad) repz loop cltd lret js sbb adc push (bad) pop xor and loope lods out sub mov movsb icebp xor jge pop out push cmc insb sar or fistp cmpsl enter push jmp pcmpeqd xlat js popf mov sqrtps aad mov mov test add fldcw nop add sarb ljmp out stos sub mov mov mov mov out arpl ds or pop (bad) in fmuls rolb out push out mov push inc in mov enter cmc in es out ljmp or iret mov xor pop testb incb loope data16 and enter adc jnp xchg loopne cli out fistp in (bad) mov test dec or fwait (bad) sub out pop or out (bad) cmp and pop das out test (bad) cmp xor lods repz cmp les sbb sbb out jb cmc xchg popa ja (bad) pop or jecxz cmpl notl repz cld inc sbb or mov dec inc xchg adc jbe clc in les pop arpl out in ret mov pmulhuw inc push xor gs iret sarb or cmpsb dec jg out icebp push scas pop out mov out aaa popl in adc jo or (bad) mov cmpsl scas data16 ret dec dec inc push adc push out arpl mov outsb ja sub xor out out mov dec dec loope cmpsl rcrl insl pop leave jg adc xor cmp pushl (bad) cmpsl cmp imul out (bad) mov pushf inc out pop and mov inc movsb push popf add loope mov xchg dec shr (bad) dec daa mov push insb decb (bad) adc mov mov out jo data16 lods sub cmpsl push mov mov push mov mov out cmp mov lahf sub add cld jae out jne mov psubsb dec aas (bad) or pop inc cmpl loop testl xchg aam (bad) out jne cwtl out js and pop jmp mov mov out or (bad) dec mov mov sub and test int out pop insb or imul out bound push xchg out test stos in sahf pop adc push mov loop xchg mov mov sub sub mov hlt out aaa and (bad) sub fs out lods ja outsl push or out xchg dec dec mov pop mov sub out xchg pop roll or pop out (bad) adc sbb (bad) mov cmp scas add xor push mov out sbb push dec sarl sti data16 out loopne xor sahf out mov mov mov cmp out in pop iret and test mov jmp dec xlat xor mov imul dec test lods dec mul daa insl cmpsb (bad) (bad) out (bad) fidiv repnz mov repz out insb cli add jl aas mov xchg pop jnp dec cmpsb in xchg nop inc mov out add xor js es outsb jp jmp fincstp (bad) out in xchg xchg mov out (bad) xor dec ljmp test sub xchg jb push and or ljmp in fs (bad) in lods shrb mov jg add mov pop add cmp out popf push mov sub xchg lret shll cmp movsl enter (bad) mov lods pop ret add ds cmp inc out ja mov cmpsb out fwait or and out (bad) mov mov cmpsb loope pop test sbb data16 jae out mov pusha push sbbb iret dec jg pop sarl mov test out and jno fst call das mov mov add add hlt lods jmp xor push mov lds or sbb adc cmp or pop jne jl ljmp jecxz xchg add jbe jno sub movsb popf xor out fmull mov das fwait (bad) out mov test scas cmpl int xchg sbbl xchg or ljmp es cltd (bad) incl cmp sbb xchg out jle sub (bad) mov in cli int3 adc in push nop je xor aam add add rcrl jns and out xor cwtl ds out jmp or jle neg out jns les out xchg scas xor mov jecxz daa inc mov push into pop out imul mov out pop in cmpb scas jae (bad) dec in jg xor popf pop orb adc out pop cmp inc jns xchg mov pop movsb pop xchg popf mov loope or movsl (bad) out in mov (bad) ret out adc xchg sbb shr shlb push pop and ds lods in push mov out aam inc sbb mov push scas sub into ja test lock mov xorb out and mov iret cwtl lret out mov test pop xchg mov loope cltd out xor mov ljmp mov shl pop out push mov xor jl scas (bad) nop stc mov mov aad addr16 movsb out clc outsl adc xor ret (bad) hlt jle repz push sbb stos fsubrs mov dec in fwait dec loope xchg pop test mov cltd in fcoms out mov fnstsw popa iret pop lret out cmp lahf mov int3 mov cmp popf cmc out sarl js out sahf fcmovnbe fnstenv xor push push mov stc dec insl sub inc and mov push pmaxsw and out pop out or push hlt xor adcb mov xlat out xor out ds mov and fwait mov sub xchg sub xlat fild pop mov add insb mov sbb imul jbe rcl pslld lea cli pop jmp mov sbb sbb addr16 and in cmp data16 cltd pop cmp sahf (bad) ja out repz nop iret ret mov or (bad) clc out push cmpsb fsts out andl mov jb fbld mov scas jno enter add pop aam dec leave add lds jbe out in xor jnp dec icebp fildll cmp aaa es xor inc pusha out hlt pop cltd rclb jp out scas jg movsb mov je mov rcrb and sar push and sbb push (bad) xchg (bad) (bad) dec notb sub or das rorb dec ljmp popa stc add add daa test cs push nop outsb sbb pushf pop sbb loopne por leave dec push out jo pop aad or sbb sub out pop and and in imul rol fsubr out dec mov (bad) and adc lds loope push fmull out sub pop cmp cltd jle cmp cmp jb pop rcrl mov es (bad) mov andl sub add push push jnp out and push out xor jns into stos xor add sbb outsb gs aaa ret sub into idivl imul mov out cmc dec lret jge iret jo pop fiadd xchg into and adc or xchg out sbb aam sbb imul xor les xchg into in mov sub fwait movsb mov fs (bad) pop and xchg ljmp add and add dec jmp shr test test pop mov paddusb hlt (bad) les jp int or aad ret xor aaa lock lret (bad) pop mov mov mov ss fcompl mov pop mov dec leave gs mov add mov ja (bad) arpl push inc sti out mov push frstor cmp lds sub nop out jle ss xchg and data16 repnz out mov es add xchg (bad) sti clc jmp (bad) lods in xchg jo insl aam pop or lods lea int3 out push pusha xchg mov push rol out mov dec and add or gs hlt xor mov loop cs out mov jmp cmp or (bad) lret stos push xchg lcall xchg loopne ret shr inc or mov insb push ljmp es (bad) sahf out dec arpl js and popa sti mov push out (bad) ljmp mov ljmp out mov xchg push push mov es mov push out and add out or push pop lret fildl push out mov in inc bnd mov loop test out and dec or in (bad) fwait pop daa mov and and out movsb cs and rolb push repz ret lret pop cld (bad) or sahf stos movsl jns rolb sbb aam iret lods push in pop sub mov out aad cmp dec shlb in xchg sub mov (bad) out mov sub and adc push insb pop out mov (bad) jo out mov inc pop movlps ljmp lods and jmp ljmp leave (bad) xchg out test mov sbb fsubp into (bad) cmc repnz jl mov lea ret cltd cmpsl mov sti jb sbb (bad) jns sub out ret in test jge xchg mov mov mov pop push je mov shrb push lret cmp icebp jge jno xchg lea xor (bad) mov add jb js in mov mov dec movsl scas out pop mov and dec out dec lahf (bad) adc lock inc out mov dec mov out inc xor add scas push mov sub or add repz inc mov xchg shll inc out xchg popf adc inc mov nop push pop cltd das xor dec js lret mov cwtl out ljmp sbb leave jp icebp mov out or jno inc ror inc out or idiv scas aam pop xchg sub adc stos cmp cli pop and scas shl jns popa cmp inc jle stc dec sbb or (bad) scas xor out stos dec or out push add stos fbstp repz (bad) jno cmpsb ret out xor jbe sub in sahf ja in lret mov (bad) idivl xor fistp xchg or jmp push mov add mov cld pop lea sbb lahf mov push jp add out inc loopne loop jo add xchg popa out push pop dec mov sahf mov mov jae cmpsb push je inc outsb out cltd and (bad) int pcmpgtd xchg push xchg xchg dec loope aam lcall stc ds out xor push cmp gs iret add mov mov sub bound mov inc addr16 insb xchg and popa push sbb dec (bad) (bad) jnp sbb rorl in outsl out push pushf inc adc sbb push adcb out add or add mov cwtl out push push xor mov ret jb mov imull out adc dec jns lods ret out leave and popa dec out movsl inc aaa stos add insl pop out mov push and in ja dec push out stos mov push push out jnp and dec adc cmpsl xor iret mov ficom mov xchg in faddl and (bad) pop jbe popf add call out das dec ret inc sbb sub pop fstl xchg cmp js mov mov mov inc jns lret xchg mov enter (bad) movsb adc cmp scas xor push xor lods or jle aas dec lret (bad) scas pop cmpsl addl adc testl stos mov and mov orl scas mov dec add mov jb cs sub dec mov xor aaa hlt pop mov or add popf (bad) adc mov lea xorb cwtl cmpsl sub pop in adc push pop call outsl out and xor xor shr lds jmp sub mov out mov rorb out (bad) mov mov dec and gs stos idiv cmpsb stc add pop inc test inc imul adc jb push jecxz lds lods icebp out shlb ret pop aad lock out mov (bad) xor out sub push bound inc sar sbb pop pop mov inc cmc outsb mov arpl fsubr imul fs (bad) fistp xchg pop or inc jae shr outsb xor aas adc xchg outsl cwtl inc out mov push mov jnp or sbb xchg jno ja pusha mov out outsl stos and mov pop ljmp in popa incb cmp aaa aas clc icebp cmp or pop jg jb mov xchg arpl out mov dec push movsl adc icebp out jae lods data16 out dec jb pop out (bad) mov pop mov push xchg jge jo cltd mov dec testl sbb lcall out and lret arpl out mov dec aas out into das and loope repz ds jge push out stos xchg jbe aad dec decb dec push dec dec sub mov popf in inc mov xchg test outsb mov into sub out call cltd inc ljmp int3 pop incb cld mov and fidivl xor dec in out out cwtl dec pushf cmp mov (bad) jne sbb arpl in out out (bad) mov int3 jg pushl aaa add out pop pop daa jge aad lods push xor pop ljmp es xchg jg lea cmpsb ja mov cltd add jo mov out (bad) mov out ds pop push pop in push add ss push inc jge xchg je out div fimul out cmp or sub in xlat xchg (bad) call push out push shlb repnz xor cmp loope adc popa (bad) out and and jns pop mov push mov and lock out (bad) mov sahf push xchg out adc popa test (bad) mov (bad) adc shr xchg sbb out test lret pop pushf cmp bound int mov in pop sbb ss mov (bad) adc dec in mov ret cmp dec sbbb cmpsl xchg dec movsb daa or mov out shlb mov dec jne cwtl add out test mov nop jbe out jmp rcl adc xchg inc mov cmp fs adc call adc es into in push sahf out sbb lcall int3 insl adc das mov dec jmp les mov xor mov xchg adc stc dec jge cwtl aaa ljmp imul xchg fild scas jne sbb pop or adcl jge (bad) or pop out jbe add iret mov ljmp out (bad) fnstenv and inc mov int3 pop out inc mov sbb adc mov inc out jge out mov xor push sahf adc inc out (bad) or xor (bad) inc out pusha imul jb cmpsb out insl fildll xlat emms jne pop sahf add pop pushf xchg or sub int out ljmp jmp mov sub imul out push or mov pushf xchg pop adc jp sub test pop fistp out movsl mov cmc hlt insb pop and and and arpl daa (bad) xor je or cld adc stos out jle fs mov fildl push jmp lcall sbb lea out aad bound or jbe loopne push out push mov add add pop aam adc fbstp mov mov (bad) mov or out or mov outsb xchg out out cmc mov pop sub aad inc out and fstpt adc out (bad) (bad) lods fild pushf mul movsb push pusha pop out adc xchg loope or out cs sub xor mov ja lods sbb pop stos incb scas hlt lahf mov cmpsb decb (bad) in scas cmp (bad) out jnp dec outsl fbld mov push out cmp data16 mov xchg sub mov daa ljmp mov clc mov adc out scas cmp out sub icebp mov xor pop call lret popf wbinvd jae loop add dec ret jecxz push dec repnz aad js mov mov mov rcrb fnstsw (bad) push or inc cmp (bad) out ret int3 sarb shrb lahf mov mov out xchg jle sub out cltd mov xchg pop outsb inc out sub sub cmp dec xchg repz divb sti xor add pop push mov xor sub and pusha ljmp out xchg lcall out cmp loopne jecxz in out es jmp imul out push rorb fwait mov dec mov cmc mov es xor pop push push packssdw jmp pop in or cmp xor aas push scas imul jns lock jg push insb int ljmp in push out adc cmpsl and mov scas add movsl je lds jb std fcoml jg stos push dec nop cmc test adc push fst (bad) out xor iret (bad) daa pop cltd out loopne outsl add sbb out dec scas xchg inc xor out and or mov xchg ja pop lds add loope dec out push xor rorl leave push arpl jp mov pop subl pusha cmp (bad) lock cmp jp neg addr16 or les mov jg pop push lahf repnz jno out (bad) jnp jb pop add pushaw ficom mov scas inc inc jg arpl ret sub xchg test in or mov adc add into test icebp (bad) testb pusha xchg in das sbb test jg (bad) mov sub out inc push xchg out aad popa pop sub leave in psubd int3 scas jge pop in push xchg dec mov mov mov push adc cmc and div xchg push pop jnp pop adc inc xlat mov out mov fcomp scas push (bad) imul out test sahf incl in repnz pusha leavew loopne sub and and out inc vpperm or sbb mov push mov (bad) gs xor jle or cli fsubrl and (bad) into adc add jns add xorl imul repz mov out xorb sub or inc lret shr inc mov (bad) pop inc out cmp push dec jecxz das jmp pop addr16 out sbb cs jnp bound xchg popa pop sbb inc shrb out mov leave lds movsb mov pop jp mov das ja (bad) push out pop cmpsl xlat or dec popf push out mov mov movsb insl out test fmuls clc out and xor mov xchg scas rorb movsb cmp pop jnp mov out (bad) js inc lret inc pop dec es rcr jmp push add rorl ja or sbb add (bad) out rcrl cmp push out inc or ds mov subl mov movsl and (bad) (bad) mull adc je in shrl rclb loop in mov and jo out pop mov jg aam adc jno ljmp jo xor jno sub adc ret (bad) rcl lahf jge js out sahf cmp cmpsl push (bad) xchg enter jb sbbl icebp pop lret loopne or out sbb leave lods inc les out fimul or in push sbb pushf add mov inc jns out push popa ret inc adc jne stc jecxz fsubrp (bad) jae add jns pop stos xor or sub loop and in mov iret jg add (bad) in out stc fild lcall adc imul add insl push out cmc xchg es enter popa negb pop movsl dec out push addr16 data16 add jecxz sarb out popa pop dec fs cmc jbe mov push or out add xchg fwait lods mov pop ljmp pop out pop fild xchg insl nop sub cmp clc out rcrl mov mov and sbbb bound ljmp std and es mov jns adc gs out sar mov push out daa xchg cmp test inc pop and sbb xor xchg (bad) out daa ja cmp out xchg or push mov je mov pop mov xchg lea ds pop push push dec je dec cs in enter mov xchg sub je adc dec or loope outsl out loopne stos mov pop mov hlt mov adc xchg in (bad) rcll push push sbb out in pop std mov (bad) cmpsl dec push in adc mov pop icebp pop out rorb ficom or test dec adc in or cmp not lahf lret (bad) aas and pop xor insb add mov cmp nop test insl cmpsb iret ret stc add out (bad) sub jle xor out cmovno mov out add xchg (bad) fidivrl and or dec adc inc out repnz jmp cmp js dec inc std lock jne mov adc inc in fdivr ficoml dec sub sub sbb out add dec cli mov pop jp outsb popf lds out incb adc adc or out add popa cmp test addr16 push mov in sbb jb mov out aad or push push mov shrb scas xor out sub pushf sub or (bad) loope push cmpsb imul (bad) pop inc seta pop (bad) jg call mov push out and aas push (bad) cmp xlat mov or or out mov ds int inc dec adc pop inc out push or lods xor cmp mov roll jb iret sub mov jno out pushf push pop adc adc add nop add data16 dec int3 or aad or cmp movsl jl out dec sbbl aaa out jp cltd clc shlb and repnz or pop rcrb loop fs mov xchg jle nop xor js push pop jmp test out or pop pop stos out inc fnstsw test mov mov pop or test xchg and sub pop in cmp jecxz jp dec push scas loope loopne mov add mov lahf lcall (bad) or adc sti xchg (bad) hlt sbb out xor sbb push mov push stc pop mov inc out xchg sbb out (bad) fistl cltd jle add pop push negb std pop in sub out mov adc lock jecxz fucomip mov jns out mov sbb cmp mov jg push dec xor out sbb out in or das imul out pushf sub mov iret pop nop in pop jge out fs inc scas dec outsb add jns push in mov or push (bad) xchg test mov sbb jae movsl sub cmpsb out loop xchg in mov pop ja out pop arpl dec (bad) outsb adcl les jmp negb cmp mov (bad) (bad) inc mov and ljmp push cmpsb dec lock mov in ljmp pop jge mov mov sar inc xchg mov push xor add loop xchg aas xchg hlt mov out insb jg fldt jp lods out lock mov addr16 arpl (bad) xor (bad) aam es out jb cwtl pop fsubs push jb cli out mov loop lret inc push mov jmp xor mov mov ret ret (bad) pop test imul sbb clc adc push loop bound dec (bad) loope int3 pop pop jns inc push popf push repz push out inc cli sarb pop out push cmp addr16 (bad) xor popa or repnz or fwait out les add jnp fnstsw rcrb cmp xor pop loope loopne mov loop dec imul in mov mov sub fs in sub pop cmp out es mov pushf out cmp stc fdivr push aam in test insb in sbb sbb out push xchg or cwtl xor sub sti inc xchg out jmp xchg xchg out enter cmp out lods xchg xchg mov in push fnsave inc out pusha daa or out jle std push aam dec scas out es aaa subl ja aad mov and cmp (bad) (bad) out or dec jnp div and es das out jae inc dec xor ret pop mov adcl xor pop dec cmp out int3 add daa pop nop cmpsl out lcall cmc lods jns scas fsts pop jecxz ds jbe in (bad) aad out mov mov (bad) adc daa int3 jno sub mov out or jl (bad) xchg mov int3 pop addr16 lcall sti xchg loopne jg add xchg mov jo dec push pop pop das (bad) cmc out cmpsb test mov loopne pop js mov out (bad) mov loopne inc (bad) ljmp out dec pop mov movsb (bad) jae jmp fwait jle out xchg lcall pop add sbb mov jno ja int3 dec fstpt jl int push test lea out add popa mov jnp inc addr16 lret out es mov insl mov je cmp (bad) rcrb andb dec push clc rcr cmp je out imul adc xchg inc (bad) out jmp lret or push mov cs push or movsl inc mov gs cmp (bad) insb lcall or ficompl xor div add fstps sbb in jecxz sbb popa cs das jl out clc lods push gs lds lock jp das repz xchg popf out pop fnstcw pop dec stc jl pusha jecxz pop (bad) fucomi mov dec arpl lcall pop out stos out pop push fsubrs (bad) leave pop mov dec jno pop pop or mov push or rsqrtps fcmovne fs pop dec dec fsubs imul dec (bad) dec out adc and in add sub (bad) (bad) in jp xchg shr cmp sub loop loopne xor jne insb or (bad) push fidiv gs (bad) pop sbb adc fsubrs adc out mov fimul lahf test call out or cld stos jo inc jae rcrl dec mov cmpsl bswap scas (bad) mov lods out sub fwait (bad) out xor inc add cmpsb push shr dec push inc out xchg mov test fbstp jno clc in sub ljmp divb sbb fist or cld sarl mull out push dec add decl adc test (bad) bound or pop out dec adc mov adc in test and ret rolb xor stos movl int3 stc sbb lds aaa xchg fst into mov mov jl or adc mov mov ljmp gs jb jle mov icebp sub dec xchg inc sub aas out mov and test pop pop cmp pop in cld dec insl out jge sbb adc stos dec inc xchg lods fidivl lods xor sub cwtl ret imul cmc fsubr mov adc add js inc mov inc lahf out cs xor and out jae test lods sahf out xchg int3 xchg lods mov mov out xor inc (bad) and popa lods out mov call out roll jge popl cld out jecxz jl call mov jp mov test out gs cmp test insb aaa sub push pusha outsl out sar or sbb add adc push mov out sub leave pop cmp test jge sti mov dec data16 imul xchg inc stc cld jo mov push sarb bswap jecxz sbb in pop enter out leave dec movsl or adc idivl sub push hlt jmp fwait inc scas sbb jg paddsb xchg out fdivr dec adc sbb pop mov (bad) enter dec and cmp inc lock and into pop loope jno fistpll movsl jne sub cwtl push pop sbb mov jl xchg add jae (bad) fisttp adc sahf loop dec addr16 out add dec shlb inc out cmp out dec stc cs inc xor cltd mov dec inc push movsl out push test aam mov pop and fabs lahf fstpt push adc test pop pmaxsw xchg or stos push jecxz and adc out mov aas mov jg lock out dec test xor sub inc loop or sub iret sti mov push negl adc outsb jl out loop sar pop repnz and and adc dec negl push jg cmpsb insb push movsb (bad) test mul in pop mov lea and xchg nop inc ficompl in sar mov in int3 sub fucomp jno pop cmpsb jg mov out push aad clc ljmp jmp or push aam xor sarl cli out shll xor out das or aaa ret or aas cmpsb xchg cmc inc out xorb sbb cmp (bad) out leave and inc mov xlat test jbe sub or adc mov mov mov insb xchg (bad) cmpsl icebp sbb pusha loop fwait (bad) pop stc aam dec (bad) jbe dec fucomi js in mov add int out adc xchg mov or xchg add xor stos or pop dec sub jge jl add jle incb js ljmp push adc fild loop imul rcrl cmp out adc xchg push mov out jecxz mov insl pop ds dec inc sbb lock mov fs push iret xor imull rcll fbld out jb push call push in mov xchg jmp jns cmp mov fsub cmp and push xchg std fbld aaa stos sbb push sbb test sbb les mov fisttp mov xchg dec out xchg xchg rcl inc xor roll test out xchg push sub lcall movsl mov jge (bad) ljmp lahf adc stc fistpll pop xchg out rcl lods push mov add adc (bad) hlt into and mov push xor dec pop jg outsb pop cld dec (bad) out test in daa lds out sub addl inc lret (bad) cmc push mov in out (bad) dec push sub jl jb pop (bad) lcall enter xchg (bad) in mov test cmp aad in add push adc dec in (bad) mov mov pop cmpsl mov pop sub xchg stos (bad) out scas je mov outsl sbb in popa jno daa out stc jg cmp fwait (bad) fild scas popa mov in pop rol mov fnstcw push out jp add das pop pop xor xor mov push aas (bad) in cmp scas out and sub adc test jge fsubr add lea sbb inc popa sarb jno cmpsl loope or out test repz adc into xor out mov in mov scas out sahf ds nop movsb orl daa sbb xor sub sbb dec aam data16 push out int3 adc sub out cmpsl and insb push mov dec in sub cld pop pop hlt out fdiv inc (bad) outsb pop in out (bad) (bad) bnd out rcrl imul daa pop je jmp imul add insb out aad dec out adc sbb loopne xchg out cmpsb jne mov pop sbb sahf adc shrl adc push jno scas push (bad) aaa and dec or or add (bad) jb xor sbb sub es int mov bound xchg xor out (bad) mov mov mov hlt aaa (bad) lcall dec imul insb and mov or insl pushf out lods xchg mov lock xchg popf arpl xchg insl out das push cmp xor ljmp repz outsl inc add addr16 std mov sbb int3 cmpl push lret mov lds hlt add xchg out jp xchg outsw ret out and inc sbb push fwait ljmp shlb out scas jb popa js sub or pop outsb cs add lock xchg icebp sbb sbb rcrb or in push into (bad) out push sbb jne inc mov jg and pushf adc lret int out data16 sbb push sbb mov repz aad jl xor out lods ret xor or jne push in pop add pop dec sub imul cld lcall cltd and pcmpgtw aaa int in jge mov cld sbb fadd mov (bad) push sbb push (bad) mov sub mov jb in add fwait xchg pop leave cmp rol fisubr out mov (bad) jmp out addr16 clc xor out mov jne jbe pop push fldt cltd data16 xlat jns mov pop fst fstps pop jmp out mov loopne lcall mulb jmp jbe stos sbb loop hlt xchg scas push push out pop daa mov rol (bad) lahf imul cli js adc pop stc jp popa in subl out xchg xor lahf clc cmpsb cs out lods mov dec sbb jp lret scas in ds inc or mov mov add aaa jo sbb xor (bad) out (bad) loope ljmp cmp mov scas dec out js push mov pop add (bad) push jnp out dec test mov xchg aam pusha push cmp arpl fadd ljmp call dec pusha movsl out cmp cmp sahf xor out sbb mov adc inc pop lods lds incb and push dec dec out jmp arpl in (bad) xor call jmp push sub jle (bad) cvtps2pi out gs cmova dec fwait stos insl imull cli ret pop jge outsl mov std jno xchg cmpsl sarl sub push pop call out xchg cld mov jns repz loope ret mov mov sub out adc divb push bound out movsl mov cmp out stc and mov leavew (bad) mov lahf shrl lds imul pop xchg mov push inc loope jae pop fildll mov pop jmp dec fbld xor mov out pop mov jp mov (bad) out and ja iret out or movsl insl out (bad) out ss jns lock sub push or jbe ret out inc xchg scas popa rcl aas and (bad) cmp jae out ss mov mov dec or out add or orl ja add (bad) jne repnz mov inc (bad) test iret mov hlt inc mov add stos push (bad) in xchg es in daa jge shl add fs adc or (bad) (bad) dec sti out bound sahf or loopne pushf inc lahf (bad) pop movsb out cmp cmc stc clc sahf insb mov int3 mov jecxz push out bound arpl out movsb adc push add xchg jae in push outsl pop ret fcomip out push dec sahf (bad) fsubl jg (bad) jno dec jb aas xchg mov jmp insl jne call and mov inc shr pop jle stc pop loope and fs out ss iret repnz aas loop nop jae sti add dec out mov mov mov hlt ljmp adc out pushf and mov mov push jno decb shlb adc (bad) hlt pusha adc out push jae jb ja dec in xor lea lock mov sub add push push out fild (bad) popa ljmp mov daa ljmp fsubrp ja sub mov push inc dec pusha mov xor in jg (bad) aad inc (bad) ja dec mov out mov push xor in mov icebp pop ror imul mov arpl jg and cmp adc ds pop mov mov leave jno loopne out cmp orb cmpsl inc mov pop pop xor (bad) call out ror (bad) fnstsw aad out js sub clc sbb mov std out jmp int fdivrs xchg out movsl dec mov out xchg dec imul loope out mov adc enter jno push and lcall jb stc cli dec mov add xchg aaa jmp pop lcall inc pusha imul and aas nop out cmp jns mov clc inc mov ret mov lahf iret imul out aad popl out ds jnp sarb nop jge sub dec pop lods arpl enter push nop out iret stc or pop (bad) lea ljmp lods mov or xchg jecxz add lcall out mov dec sbb sub out aad pop call out jb mov in in push test rcrl dec mov cmp mov dec hlt out push (bad) out add xor out test pop iret push jns and cltd sbb in and pusha adc pop (bad) mov imul lds je dec inc push jg stc out sbbl pop pop out bound cmp js mov push out leave lods test cmpsl xchg dec out aaa xchg cmp ds shrl lds push pop loope fcoml out or xor mov out xchg cmpsb int3 flds js inc out cltd mov and xor pop leave aam (bad) (bad) push pop dec inc mov repnz jnp jle ja pop pop and push mov test push clc pop and in call roll adc xor mov sub jne xor out or adc out cltd dec imul test xchg ljmp out or adc out xor movsl jo pop push shr andb in lock jno inc sbb lods data16 popa repz (bad) (bad) out rorb mov cltd xor or jo repz push nop out xor das lret in push add pop rorb ljmp out outsb mov pop add jge add or (bad) out sbb mov jae fsubr mov add push pop ficompl jns out insb cmp mov into test int add outsb faddl sbb fdivs ljmp jb push orl shrb mov enter (bad) out ljmp pop out movsl outsl lods cwtl frstor ss les lds lret and stos sbb out frstor cmpsl cwtl mov divl sub movsb mov stc mov test mov imul mov repnz in cmpsb out cld sbb push std mul icebp cmpsb in ss cmc adc xor xchg insb cld (bad) jge rcl mov push add iret int3 inc out fwait loop pop mov ret iret adc or pushf mov xor mov push mov jne out rcl push test ds stos aam outsb mov out inc arpl les mov sub jmp shll push fs popf scas jns jp xchg out push pop arpl mov xor pop insl adc jne (bad) mov out out test push cltd (bad) insb int3 pusha in xchg outsb cmp das inc sarl pop aam sub iret cs stos fnop push clc hlt cli or and jmp loopne fistp aas iret mov dec jnp mov push pop xor pop xchg pop clc imul shll sub out mov pushf add imul or xor lret scas in out dec jne mov pop mov xchg sub in mov daa out fidivl nop sbb xor push and mov scas push out imul popa out sbb ja jmp sub pop aas push mov stos push push add pop outsl ja mov push fs mov wrmsr imul (bad) pop jns (bad) jp shl sahf addr16 pop xor add or cmpsb adc in mov inc or sbb aas push daa jne (bad) ljmp pop sbb call lock sbb jle pop movsl data16 insb fs mov adc int pop push sub sbb pop xchg sarb xchg dec sub cli imul imul sub push mov push fldz in out repnz adcb out lock mov inc popl out popa jecxz lret pop ss adc imul sbb mov jg out test inc insl cmpsl sub (bad) out inc test dec cli repnz popa mov repz into out fcoms dec jmp pop loop sub out add in dec (bad) xchg inc aas fdivs xchg pminsw mov mov sbb push rorb push fsub cmp sbb sub mov es xchg adc shr repnz jmp out mov sbb sbb adc jp mov data16 and js or into fadds sub pop sbb fnsave cmp cli inc out into push aas and iret mov jle mov nop xor adc test cmpsb xchg xchg out lret xchg mov out add xchg pop outsb pop out rorb in lock sub lods cmc cmp sarb aas ljmp sub out jp push bound adc pop ljmp aaa mov fcomps add sbb movsb insl jo xchg xor sub cli data16 in test mov fsubr movsl (bad) mov in rorl ficomp js pop rcrb mov mov test shll pop out xchg adc push mov inc clc pop fsubr sbb push cmp hlt daa adc or repnz mov mov outsb (bad) out adc repz rcrb sbbl jecxz mov push repnz movsl popf push aaa insb std add dec shrl pusha xchg in repz pop cmpsb sbb sti imul addr16 out jb mov cmc iret pushf mov cwtl add inc push push loope jne rclb jecxz (bad) into dec pop cmp call cltd lret (bad) sahf out mov xchg sti movsl out push bnd push out scas push xor inc pushf xchg lods and cld out adc in out dec mov mov test inc cmp mov jmp ficom out jle cs dec movsb fwait xor add jae in mov sub scas mul xchg bound sub hlt rolb out push je in and out fidiv mov jmp aaa pop adcl mov outsb ja std bound jmp fisttp out cltd mov push jno inc int3 out xor incb and fnstenv cmc push jle (bad) popf in into xchg xchg out popa push sbb out push ret sub mov fwait pop inc push pop test ret out jbe or sub dec mov repnz pop cmp out out int3 mov lods xlat call sahf sub cltd mov inc out lds and out neg sub out sub mov outsl ret out xor jae scas or int3 mov mov pop pop dec lods pop imul call lret cmp repz xchg jecxz xchg xchg cs repnz mov outsb out lods inc cmp test jo jae out loop xchg mov in cli out pop and js out push icebp es inc add mov rorb dec cmc and dec mov adc je in adc mov sub xchg test fucomp mov (bad) into mov jbe or cmp imul ficompl mov cli mov in add jae je stc jmp inc in out (bad) out cmp pop iret or xchg mov fcompl insw cmp in jmp movsl (bad) incb out fist add addr16 lret jl in ficomp leavew sbb dec movsb push jae mulb outsb push push cmpsl push xor xlat pop dec pop lds sbbb shll clc fcomps insb (bad) push add adc mov cmc bound (bad) xor xor ret or fildl in inc ja lcall or cmp idivl out adc ds xorb pcmpgtd add mov out inc enter xchg (bad) xor iret frstor repnz sbb insl out push mov and sbb adc mov dec insb push mov add sbb push je mov lock out inc (bad) mov jge mov ss int3 mov sahf jg test sbb cs out xchg testb push jno fwait sbb test data16 push dec sahf rclb pop cltd (bad) decb mov xchg lock mov sub and shr mov out mov dec xchg call ss cmp add stos xor lods adc leave push (bad) push lods lcall dec (bad) or fldpi mov mov mov mov in pop pop jl ret pop xor mov out leave inc insl test mulps aas adc ljmp mov sub out scas fs pop sbb int3 jnp pop fwait aas fidivrl and ljmp pop add or ficom outsb push test sbbb icebp push addr16 fldt mov outsl dec jae inc or out cmp sbb iret adcl lock out pushf sar sub das push mov cwtl adc fnstenv inc inc ljmp loopne out jge jnp pushf shr cmp rcrb xchg out shr out dec sub dec out mov fs mov (bad) out insl js or and out out push repnz arpl xchg push dec sbb (bad) out dec rcrb out cltd pop movsl sub out out xchg sbb cmp les xchg pop jbe jne out stos insl or adc aas cmp mov fidivrl pushf rol pop repz pusha xchg in mov fsubr pop cmp sets mov (bad) inc sub fstp out mov ja or pop pop and dec jae in outsl jne or lods xchg push aam cltd cmp adc cmp pop add adc mov adc and (bad) out ficompl shll out inc fsubl dec adc xchg outsl aam (bad) test out cmp mov out es mov ja push sbb out mov sub xchg lods std cld scas shr jnp out lds call out hlt add pop insl or xchg out push mov xchg sub xor aam out nop push out push cmc inc xchg aas (bad) adc mov sub call jge jecxz,pt sub cwtl lods in sbb in enter adc push and punpckhwd out adc pop (bad) cmpsb jmp daa mulb out lea cmp ljmp or adc pop mov jno clc jnp mov cld push mov push ljmp out mov loope test push dec out inc ljmp xchg xor sub push dec (bad) sar int3 xchg stos in lahf mov daa ljmp xchg sbb push out fs adc das xorb (bad) out add pop out sti jmp lcall btc sub ljmp mov insl pop sbb push pop in scas pop out push out sub insl rclb shrl xchg inc out push mov and jae rcr hlt dec or das popa inc adc cmpl rcr out aas inc iret ja and adc out xchg push add mov xor int pop ja jge repnz mov push jle add sbb pop or or ret xor pop fldcw (bad) adc cmp inc test outsb push jbe ret push stos out dec fdivr inc int (bad) shr aad sub xchg or out rcll int3 (bad) mov aas movsb lds fs mov outsb out pop add add test movl ds mov lds clc and test sbb loope fisubl mov pop mov pop xor (bad) jns outsl leave aam clc rcr sub xor aad out sbb sub add xor pop push addr16 adc jp (bad) sbb cmp subl int scas xlat scas cmp ljmp add es pop out sar adc int out pop jle dec daa mov sbb in rcrb mov adc mov sar jg mov popf pop dec out lret pop mov add out (bad) (bad) xor popf inc hlt mov cmp (bad) mov ds inc sbb sti aaa in mov out test xor out arpl inc or sbb lock outsb jo insb rcll out jno xlat addr16 mov jl stos loope fwait lcall dec out cmp dec cmp fbld xor jge bound sbb adc fnsave mov xorl sub sti stc xor imul aaa xor insl sahf push push outsl xchg out in xlat inc adc cmp cmpsl rorb (bad) loop xor out jmp (bad) bound (bad) sub aad xchg fistp mov fs or cmp out inc in inc movsl (bad) sub sbb xlat lods jge add lea cmp movsb sbb mov outsl sti out fldenv mov repz jb pop out mov push ss lret (bad) sbb hlt cli es out scas pop pop lahf mov pop mov mov adc into (bad) sub popf fsubs ss out gs pop cmp sbb mov cli or and mov push out out mov push lcall cld and es in mov mov add mov in mov and push sub mov out popa scas sbb lds loopne mov sbbl insl hlt xchg in out mov ja pop lods pop add lcall jnp cwtl out test add dec jae dec jne add sub xchg mov nop jle outsb mov xchg adc and ret inc push cs pop das pop push std push mov push sbb mov xor les mov sbb xor imul adc xchg out (bad) dec lods xchg iret add nop dec adc sub pop out mov cmp mov xor mov push (bad) lahf cmpsl inc pop call jne xchg mov out jb and adc movsb mov int3 stos out test bound mov (bad) out pop sbb pop in ds in jne pop imul das sbb dec push sbb iret cmc fdivrp dec aad jb rorl xchg sub shrb pop cmp push sbb xchg pop or xchg (bad) (bad) jo inc daa cld fnsave mov jp sbb (bad) push jbe (bad) jmp cmp cltd xor in in sub xor or popf xchg cmp cwtl mov imul movsb pop xor (bad) out xor jne sbb ds ljmp out (bad) cwtl jle lahf jmp adc int3 cli sbb test (bad) cmpsl ror imul in aad out jecxz mov data16 out add out xchg adc loope ficomp out cmp outsb push icebp xlat push test push pop xchg add jle pop pushf jge pop out out sub loope (bad) and jb shr lcall mov out ljmp out pushf push mov jnp adc push (bad) arpl push inc iret int in xchg sub shr test mov sahf lock dec lret imul imulb push in sbb fadd ret push jmp out xchg pop into fcom push cmp out cmp (bad) dec sahf mov jl ljmp ret push xchg (bad) bound es jns adc out mov sub jb add leave xchg int3 mov fucomip add call out outsl xlat push or adc dec xor jp pusha out sub rol adc sete ljmp sub jge fucomi or ror sub pop sbb dec aam ret int3 dec imul and fwait mov add adc mov mov lods fsts repnz scas sub xlat pop outsb out mov out andb cmc dec cltd bound imul mov scas sbb add xchg out test out imul pop out cmp cmpsb sbb xchg inc shl dec sbb mov mov ds sub adc adc ljmp jg ljmpw mov push loop imul imul outsb inc sti daa pop jcxz sbb xor push out xchg cmp mov adc push sub mov fwait push out pop inc mov outsl out imull ds lahf mov jmp xchg das mov call push push popa shr (bad) icebp pusha mov sub or inc int roll test lcall (bad) lock ja loopne add lds ljmp out mov scas and out adc xlat adc mov sub cmp out mov fidivl test adc test push push jne add shrl out (bad) notl (bad) inc out cmp xor sbb or ret xlat sub (bad) out jl imul mov rcr outsl es out mov (bad) and jnp mov push aam jg shl jg out in daa pop stos repz addr16 fwait loope xchg inc or mov out push cmp mov xchg gs and mov das xor dec lret sbb out mov lods or popa mov inc mov ljmp out icebp xchg das lret clc xor inc cld iret inc mov testb xchg xchg ja cld in pop jne fnsave sub into jo out ret fcoml fildll xchg and pop out pop mov sub push pop insb out (bad) mov lock out sub dec in xor fstpl sbb add mov lahf rcrb sub (bad) jge int pop lret push nop (bad) (bad) xor arpl cmp sub int3 leave loop stos mov cmp icebp loop inc push rolb pop out jg inc fs pushf mov jg,pn out ret ljmp icebp dec mov pop sbb shr cmp xchg dec (bad) jg xor xchg sbb loope repnz loopne imul out mov push ds hlt or lods jbe rorb decb adc cmp in dec in arpl push (bad) xor pop popa aas (bad) lock leave cwtl pushf (bad) out push js andl rclb stos movsl sbb fcmovnu lock xor leave mov pop call cmp out stc dec ja jae jbe out xchg out sub dec push (bad) xchg sbb push fcmovnb loop mov push or mov cmp xchg xor iret loop mov or xchg lcall xchg and lock movsb push push nop sbb push inc jns insb out lret add lahf and testl (bad) xlat out mov lock (bad) (bad) lcall outsb ss out in push lods add dec (bad) sub or mov into out mov icebp (bad) out jae aad lds adc inc jo sub das xor out xor inc jmp scas std pop (bad) cli test add enter cwtl outsl inc mov inc (bad) (bad) into pop mov test jp paddw push xor dec out mov (bad) dec cmpsb sub mov stos shl mov icebp push sbb leave js out pop ljmp pop xchg xor out lds add or out mov fldcw fiaddl jecxz scas push mov cs dec pop and jb jge loop mov jecxz sub out push gs push xor sahf (bad) jp pop fistpll fisubr out pop mov jae jno adc roll leave xorl sub sbb test cmp and sub inc aas stc xchg in ficoml ret out lods (bad) fisubr cmpsb (bad) out lods stc pop inc jge inc (bad) out adc movsl and out pop jecxz push jo mov es out mov dec das mov aas xchg sub imul rcll fcoms hlt push icebp fldenv shl mov adc or out out sbb sub sub cld (bad) lea (bad) adc xchg cmp push sub in mov out push xchg xchg and sbb push sahf sbb xchg add cmc pop fild aad pusha outsl pop mov xchg jge pop sub xor out push mov aaa pop and rcrl jmp (bad) (bad) xor pop fisubrl rcl test test xor mov mov out inc xor aad out outsb jge dec cmpb mov push pop enter jp ret out add in out and stos imul dec out dec into data16 insb stos ljmp dec add xchg push lret insl iret and out xor divb out sahf loop sub out repnz push cmp jp out in push shll adc addr16 and ret or pop adc out shll adc sub out je js push das mov mov imul sbb mov cmpsb push out cmp mov jle iret movsl xor pminub xchg shlb pop divb sahf outsb js out dec pop push in lods sbb jno inc lret xchg mov out popf mov or outsb call push lcall mov loope lahf imul and ret dec sub out cmp jg jmp pop fwait sbb out cmp out addr16 pop jo inc add (bad) or push xchg push sub xchg das cmp movsl mov daa add push cmp adc mov add sti mov ss xor cmc and xor cmpsb pop fadds xchg imul iret les cwtl je cmp sbb or lock ret aas sbb cmc mov add push int3 add jb and lahf xchg out sbbl mov jecxz scas add in shrb out into (bad) incb (bad) out push jmp cmp cmp push push or push out sub popf ds pusha pop out add fwait mov loop pushf out pop push jp inc pop mov out movsb xlat jo and in sbb push jo (bad) push fsubp out jp popf les mov push dec push std insb adc lock pop mov movsb loop dec inc in lods out sub enter test pop cmpsl dec fs (bad) pop js jnp xor mov sbb sub adc setl out test enter xlat jle mov decb (bad) mov (bad) ja xor test repnz out mov (bad) add xchg mov out or push test jb inc popa fisubl into push outsl sbb sub xchg adc andl inc sub xchg inc je rcl pop out (bad) scas mov cmpsl mov xlat arpl mov fbld dec push loop sub sub adc cld adc enter aam push jns inc mov jno out loopne pop mov (bad) jmp movsl wbinvd xorb sbb ret inc dec gs das popl cmp pop sarl xor lods pop out into out sbb cltd aad xchg mov sub ljmp pop push sbb out nop mov int pop push mov cs cmp pop leave imul (bad) aaa sbb aad fcoml lret sub cwtl push insl (bad) cmpsl cmp pop out dec test aam and out outsl inc sub loop (bad) adc sub aaa sbb out add sub mov sbb jle inc dec loopne imulb (bad) pop pop in and out adc add out cmp out dec scas jp out repz ss jae (bad) ret sub push out out fstpl loope out sub in pop ret clc out daa popa mov cwtl call ja cmpsb decb out sub loop mov imul jae shr jle das fnstsw ret lret out scas push dec stc sub dec sub cld fadd mov call out mov iret movsb sti outsb shr out scas pop push xchg mov and imul insb ret push (bad) in dec mov scas imul dec jmp lds test repz sbb imul stos mov jns mov jg ss cli mov push mov ss pop mov not out sbb xchg js dec sub jae or test out mov adc pop or cmpsl shlb ja pop in sbb adc data16 roll pop (bad) cmp and ja mov pop add iret lds leave out idivb cltd jnp insb sahf out data16 cmpb loope xor out fimull fs jge (bad) icebp pop fsubl inc imul push rcl mov out push in sbb std pop jmp into push (bad) mov inc insb in jle pop pop ret fmull push iret sbb int3 jp lahf sub push inc outsb stos fist push ds and imul test out int fwait or cwtl mov or in jno adc inc call dec loope loop pushf mov movb sub fucomip cmp in sbb out and mov sbb movsl mov dec mov xchg iret outsl icebp mov lods xor xchg or imulb push out and inc cmp cmc popa popf das xchg cltd movsb (bad) sub mov out leave scas sub pop mov xchg insb mov arpl xor mov add out mov mov (bad) xor out mov push icebp in daa mov cld int out (bad) fnstsw sbb push lret out jo call (bad) and out dec mov repz shrl loop sbb rcrb and jnp ljmp js lret sub lahf in sahf xchg imul out xchg adc dec xchg pop xor push jp (bad) loope pop in popf pop test mov sub sub fs or test icebp pop daa lret xchg sbb inc push ror mov loop mov pop std arpl shlb roll in out (bad) repz push sub mov add (bad) xchg cli in lods fwait cltd rcr (bad) out dec mov dec add xchg pop adc adc out sub dec pop stc dec stos ret out aam dec xchg push and out je and int3 paddsw out add into lea adc int mov (bad) (bad) daa (bad) ja mov xor in aas std or shrl mov lcall ficomp in jmp push bound mov push gs jp movsb push data16 inc dec push and mov fistpll xchg push dec bound fldenv in cmp mov add aas lcall and lahf xchg mov cmpsl push pop rcl pop out push daa sbb testb jbe test pop je add lock cld loop or mov (bad) daa sbb push (bad) out frndint test clc push jne (bad) repnz orl xor adc jle in into imul push out dec pop decl out cmpxchg aad fsubr je adc mov xchg daa out adc scas iret out dec (bad) sub sbb rcrl int3 sbb jmp pop jmp push out adc es out xor clc push out stc or mov out xor std push mov inc mov adc push out jmp mov aaa xor mov test xchg mov rcr jo sub jnp jle pop out flds inc into push dec adc add loop (bad) jae je out sarb cwtl es stc cld xchg fcomip inc daa out lods fsubrs (bad) call loopne inc inc mov ret cs jne outsb ljmp mov mov ljmp out sbb xchg icebp fidivl daa adc data16 outsb inc adc stos pop aam add or mov jmp sbb pop jnp dec cmc mov jne add sarb loope mov pop dec jl inc enter pop mov and jae shlb inc fwait out stos inc enter out (bad) cmc in ljmp and insl lahf out pop mov sub xor xor out aas sbb lcall push leave jo in jns pushf (bad) jmp mov call sub mov (bad) (bad) fidivl pushf pusha shr and inc inc rcll sub outsl (bad) lds lret add out cli pop mov scas out sub adc (bad) jne lret aaa push mov out insl bound divb xchg clc inc call (bad) xor js sbb inc sbb push in and movsb inc xchg and std push test scas jne addr16 rcll int fisubrl lret imul sahf pop jo dec cs sub sbb sbb mov arpl out adcb test adc xlat pop ljmp jnp push lock dec icebp out cmc xor fimul xchg out cs inc xor pop negl loope xchg mov (bad) xor jae popf (bad) or fdiv (bad) in je test insb shll ljmp nop xchg popf iret xor mov lcall pop pop inc clc pop out mov int3 out dec dec fcomps in out inc cld push add lock out (bad) hlt stos scas adc mov rolb out xlat push stos (bad) jle out jl sbb lods hlt push popa xchg jp loope sbb jle mov cmp mov push out hlt test cmpsl out jp or jle pop insb out stc sub dec out jno pop mov cmpsb pop imul inc cli fwait mov out mov dec out pop enter pop inc outsl xchg lret out js push leave add jp adc xchg mov cmp sbb pop sahf aas xchg paddsw or mov jp mov into (bad) or loopne inc daa out push mov (bad) push (bad) out dec call aad out ss xorl mov out cmp xchg xor xor mov and loop sbbl jl jb xlat imul mov imul xchg fs sub icebp fldt sbb in lock dec cmp (bad) test sbb insl add scas sar lods push int es cwtl sbb lods fwait negl add addl jne bound das pop pop movsl or or in jo mov xchg into push clc fist rcrl hlt mov adc out push ds out jns or into call es mov mov sarb stos xor sbb push adc xchg inc and repnz mov pushf xor inc cmpsl insb sub movsb (bad) out push mov out and (bad) xlat mov add jmp or xchg xorb cli mov out add push adc pusha sbb (bad) out fsqrt jp xchg out xchg pop mov int out jge or shlb lock or lods dec jp sahf pop adc mov (bad) mov add pop push in out cwtl lods mov mov fisub pushf in adc and mov mov (bad) pop add cmpsb mov pop out negl (bad) mov jns sbb in xchg or (bad) hlt addr16 out testb aaa xor mov pop mov ds pop xchg fsts ss (bad) js rcr or jns adc sub (bad) repnz (bad) fs or dec arpl fdivs sub mov out pop das movsl insb pop xchg mov mov mov and out hlt jmp (bad) stos (bad) pop xchg fwait mov push or out inc shrb data16 and (bad) jl out adcl in or sbb lcall sbb and pop out push insl pop jmp call inc out lock std ds add sub loop and imul das test insb loopne jl push push mov add fsubrp and shrb (bad) and pop out into popf pop dec pop movsb lcall push out insb pop pop out cmp inc xlat out pop mov insl pop pusha dec sub push clc out cmp and out into in sub inc sbb les mov call (bad) repz scas out sbb je pop mov xor test inc shrb or ljmp arpl and and incb repnz mov lea cmp pop sbb fist mov pop inc fldz xchg stos sub aas cmpsb adc add mov fcomps pop xchg xchg out in mov daa sbb fucomi data16 cltd out js notb jle loop jb adc lcall xchg mov jnp jg in (bad) xor or cmpsl or pusha push fsts stos inc pop out shl loop lods mov das lock sbb cmp (bad) mov aaa aad add hlt loope sub lahf xor aas stos in call out jb lret out pop inc xchg icebp or and inc xor sub mov lods or cmp es ret push rcll mov xor (bad) jno ljmp inc (bad) aas out push daa inc adc sbb inc int mov jb or fildl mov out pminub out in and or fucomp mov outsb inc das out rcr stc mov call pop or dec lahf cs out scas mov test out arpl adc lock out pop or (bad) or ss out adc scas loop mov xchg sub xor pop sarb lcall aam lea sbb out jo sub fidivl outsb out and sub ret cmp out movsl movsb jl xchg leave pop das fbld add fwait es pop stos out dec stc jo in sub and cli outsb inc scas pushf cs and out out sbb ja pusha xchg push out push je and cltd sub insb jns out in jl mov dec test popa leave push bound sub push sbb test xchg (bad) out sti mov popa mov sahf (bad) adc idivl xor loopne jbe add stos inc dec push test dec adc das outsb pop xchg out mov mov push popa jno cld sub cltd ja mov mov icebp adc pop (bad) cwtl push call cmc in and lock rcrb rcr loop or in loopne fistl out ret and jae mov sub in mov in int setns (bad) sbb (bad) xor or jmp jae stos stos sbb or sub lock fist sbb mov mov jno fcmovnu pop daa (bad) sbb add leave lahf rol test sub mov and xlat outsl and inc mov ljmp outsb sub xchg cli cmp or ljmp pop xchg imul (bad) test aad int3 insl js out fucom jno mov push out mov push hlt insb pop scas loop cmp imul outsb cmp out mov mov rcr sbb xchg orl aas sub cs mov fwait jecxz cmp push movsb inc sub rcrb mov (bad) pop or mov test in addr16 aaa fsubl out mov push out nop mov ljmp mov jg xchg outsl out adc mov jl or fmuls out cwtl sbb cld pusha dec sti push outsb cmp out (bad) cs and xchg jns (bad) in mov out mov shl cmpsb in (bad) (bad) pushf out fs cld mov dec mov inc cltd imul loope pop and jb cmp jecxz aam insb mov mov popa inc addr16 mov mov xor pushf xor cmpsl adc lcall insb out ss (bad) daa add jp mov xchg add test cs mov cmp outsb sbb insl outsl out data16 mov lretw (bad) fisttpll out adc ljmp pop cmp push adc daa jo test fisttp jge push mov fsubrp mov rcrb pop pop popf ss add xor fisttp cli cmp mov lcall data16 add loop push mov repnz jg pop jns bound stos imul in inc out jge cltd and fcmovnb or mov fsts fs in pop xor negl and hlt je ljmp pop scas insb lret sub pop sbb jmp xchg pop (bad) mov sahf movsl pop test shrb inc cmp loopne or out mov out sub xchg inc xor in imul adc push mov dec fistl (bad) cs addr16 loope push out push mov jns data16 sbb add cwtl inc out add pop in sbb cmp push mov cwtl lock push lock int3 popa adc out mov sub (bad) sub mov loopne bnd test outsb fisubl pusha lods js cmp out mov mov (bad) lea out pusha push adc pop xchg repz sbb out jl pusha push adcl stos cmp (bad) popa cli cmc (bad) push xor addr16 repz sub (bad) hlt cmp iret and cmpsl sub pushf or scas mov out aaa lods movsl and sahf fnstcw fistp pop cmp inc pop dec nop and or out pushf pop sbb jno icebp insl out mov jnp ljmp loope es pop out mov fldcw mov std out sub sub mov dec mov pop loop stc out jle and rorb stos loop aaa mov cmp xor js fcoms ror enter fisubrl out adc test out xchg pusha and insl ret movsb pop mov (bad) call ss xor movsb push (bad) popa outsb test rcll (bad) sub mov mov jg ja and es mov sbb xchg mov stos jb out insl ss sbb pop add sbb push mov jge mov dec fucomp (bad) push push lods imul in out insb add push xchg inc out xor jae pmaxsw xchg outsl loope,pt scas mov in movsl std das ljmp inc jbe sbb pop push out pusha fsubr clc dec cmp lret int xor adc out xchg sub out icebp mov movsl lret fs and lock scas sub ret jp rcrl pop sarb sub test int3 and pusha hlt call hlt loope notb mov arpl sbb add je cwtl in aam and xor cvttps2pi fninit xlat addr16 (bad) out in xchg sbbb mov push pop xor cs mov das stos xorl sub out jae lahf push jle imul sbb out out xchg fist mov cmp iret lods push or testb lahf sbb (bad) out cli xchg inc sbb cs insb jle inc enter xchg push push fiaddl out mov jo jecxz clc xchg add (bad) (bad) mov mov sub popa xor mov std pop fdivrl in pop out mov in popa dec out fwait bound xor push in insl push sbb jbe clc (bad) test sub or lahf xchg shlb lret out aas test xchg out imul in out out popl out test jp pop mov dec xlat enter and mov outsl mov int out cmp subl out iret mov mov mov repz lock sub ds out in stos or xchg add ljmp scas push xor push ljmp out dec or inc (bad) xor int mov or pop sub testl push out xchg or loopne (bad) sbb out jmp add and cld pop sarb sbb xchg push clc sbb dec jbe inc mov lcall data16 in cmp inc das push pop (bad) (bad) stc cmp in or pop mov in adc ljmp sub jae mov cmp push mov cmp mov mov pushf pop push add sbb push imul sub imul js stos (bad) out dec ja stos call imul dec mov inc aaa xor lea sete into push in leave loop mov push out cmpsb ja cs xchg pop imulb out arpl lock add stos or lods out and int xor cltd xchg inc or pushf sub daa fsubrs jnp jnp sbb or out lock adc pop adc jle cltd jge ljmp mov out cli push mov fistpl ss xor lea push fildll xchg jp (bad) sub out test jns jge sub das dec sbb jne out incl ficoml inc pusha (bad) insb and dec lahf out fs dec iret and out bound fnsave mov out inc xchg xchg out in sahf in stos ss sti iret out add pop push pop mov lret mov sbb xchg or in outsb adc sub out cs sbb addl mov arpl (bad) adc jecxz aaa pop lods and jl sbb xchg sub insb and xchg push out andb dec ror sub iret sbb ljmp (bad) cwtl inc pop mov stos jne or xor test mov mov lea xor push out hlt cmpsl (bad) aas ss and out cmp cmp push pop sub dec pop and loope (bad) jmp js sti mov enter push cmpsb sarb pop insl or mov cmpsl pop cmp shr mov pop push (bad) mov lret test icebp loope push and sbb pop sub rcrl xor iret insl dec push push out shld out xchg loope cmc mov daa repnz es mov (bad) out xlat mov shrb into jb rclb pop iret in out loop out out push ret out mov insl lahf out call rorb mov fs jmp outsb loop addr16 ret movsb (bad) out sti or cmpsl (bad) dec bound pop cwtl xchg mov out les iret cltd out aad inc adc inc daa and mov je rol push out (bad) ss sub ljmp jg or out xor stos inc pusha out cmpl xor lods lods pop stc mov out mov hlt sbb out outsb lahf loope,pt lods out insb out int push jbe jmp xor mov cmpsl frstor lcall out into aaa push pop mov jmp aas jecxz pop hlt xchg mov pusha and (bad) out sarl pop adc sub jbe push in mov jo add scas mov out dec (bad) fidiv out mov out inc and fdivrl loop fucomi dec (bad) out push mov loopne fwait and sub out sub jbe dec out out sti xor out jo mov ficompl adc pop lcall inc call mov das pop lahf lods add shl xchg data16 wrmsr loope fsubr out mov sarl sbb cli push repz sahf outsb fsubr xor loop inc pop xchg mov not jmp mov test ljmp out xchg clc dec xor or adc mov addr16 mov (bad) out jmp sub lock into cmpsb dec sbb jmp std nop cs lret fidivrl mov stos mov out in xchg mov dec call push jne nop mov or das inc dec inc rorl ss push std daa test out loop clc stc shl xchg push out mov dec jl bswap adc jns in sbb es fistpll dec push mov xor ljmp out lret rclb mov insb or out jnp sub (bad) xor xchg cmc lods add cwtl mov mov sub jmp ja out repnz test aas outsl jge or out stos xor out fwait pop sub mov push pop out aas lods cmc dec outsl lret out aad iret sub jmp or dec jle outsl mov decl arpl xor xchg inc xor inc push jecxz adc lcall insl scas jle jno popf xchg out (bad) xor jbe (bad) in (bad) shlb mov jl imul pop push mov push inc mov pop lock popf mov add insb inc in xor mov out xchg push adc pop lock pop or push aad cld jp call aas aam pop loop testb outsb mov out ds mov out cmp ret jb xchg xchg cmovs in dec (bad) mov out and insb cld push out es test in repnz aas stos lret pop xorl adc out cltd adc push mov pushf test push outsb movsb pop ret dec jl stos ljmp mov xchg xor sub in out repnz or sarb add and pusha mov xchg jne flds or or adcl jecxz and push out sti cmpsb and mov in aas out push cmp ljmp in addl sub push mov popa lods in (bad) imul mov mov mov imul out ss orl bound adc insl inc xor push or mov aad cltd mov out push stos repz pushf sbb jmp fsubrl out and fdivs out aam lcall fwait mov scas out mov cmp jae aaa xor and insb inc shr repnz (bad) insl ficomp xor in inc xor add loop notb adc sbb ret pop xor dec xchg es shr sti dec jo xor (bad) xchg imul xchg pop ljmp cs ss loop ret lods adc ja jo cmovle adc es sub out dec aas clc nop cmp pusha shr and insb dec fs cmc out mov rcrb jne js call mov (bad) pop jns out mov jle add jmp push mov xchg pop xor xchg pop ret sub dec mov mov push and pop push mov cld (bad) in daa outsb aaa mov xchg jb ja jbe popf mov jge sbb push cltd pop mov pop cmp das lret lock (bad) int3 rcrb fdiv pop mov jle cmp mov out push mov cwtl push lods mov in out jbe int lahf and pop xchg gs out add pop sub js cmp cs int inc sub out stos out invd idivl push pop cmpsl out xorl pop (bad) ja int xchg in dec shlb out xor movsb jecxz loopne mov pop push and xchg out or out jb test test inc out jle sbb mov add mov (bad) or inc cwtl popf jge cld xchg add fadds sub imul je out insb cmp out push sbb (bad) out and push mov jns mov or jg (bad) lret out ret std cmpsb imul incb sub out adc mov sbb pop fs rol std adc inc jns loop jle lret pop aam mov sub das out inc fnstcw out loopne,pn add cmp mov ljmp in jl sbbl mov out out pusha shrb (bad) cmp cwtl imul shll sub xlat push mov pop or pop pop and fisubl mov mov (bad) out xchg rcrl push mov ss dec mov test out js cmp imul adc pushl pop lock xor xchg jne lods xchg movsl xor out mov jns cmp jmp jo scas xchg in pop jmp push in pop push and cmp ret pop repnz gs push out lret mov outsb pop sbb xchg ret mov mov insb jo (bad) cld scas insb jbe (bad) pop out dec adc insb push aaa psubsw les or mov stc sub (bad) ss (bad) xchg mov out ljmp inc out dec xor adc mov aam lcall shr leave pop std pushf xchg push test and sbb jbe pop sub movsb daa or or push mov sub mov dec clc jo jge cltd lods mov mov out (bad) mov (bad) out sbb or gs std mov cli mov imul (bad) scas sbb insb les inc jmp ficom mov xchg lret mov xchg and outsb push aad adc (bad) (bad) cmp dec loop sub (bad) out jge xchg xchg pop mov dec sub ret insb adc cmpsl out clc cli inc ljmp mov sub aaa dec or (bad) jmp movsl popf inc ljmp lock push scas test dec dec jns test lock icebp mov pushf push mov inc jno rcrl mov add xor (bad) sahf jb out adc fstpt adc push out dec and out nop sbb les in out js popa xor stos pop out sub cwtl or mov imul lcall imul sub pop mov pop loope inc sti (bad) fdivl jbe mov test lock xor jmp stos adc inc push dec in jo fbld outsb les add jp out xchg cmc sub pop (bad) push (bad) jecxz jno fiadd outsl insl hlt adc lds (bad) sub out fstl int out jg and lock in or pop loop push mov iret lods nop sbb scas and jg add (bad) loop push sbb sahf lcall push test cmc bound mov loopne (bad) jb push or out pop imul iret imul dec stos jg mov pop mov cwtl cmp jecxz hlt push fildl out adc fs lcall sbb jnp ljmp fcoml cmp out icebp jp es pop fmuls nop fbstp out mov mov (bad) out insb cmc mov sub test rorb jnp push and jne out int lds mov pop jg mov movsb inc mov and mov int rcr cmp out fs pop loop mov cmp (bad) cmp inc pushf jo mov cmp push xor aaa pop mov or pusha pop jnp mov (bad) setne cwtl ljmp sbb arpl xchg out and bnd cmpsl pop cmp xchg out push sub repnz nop push mov or in mov xchg (bad) mov out pop or cli pop adc xlat call out popa pop bound fbld aaa or adc add mov pop push out push in addr16 or out fcoms jg dec sbb mov or mov (bad) daa pushf das sub xor mov mov out jne cmp das push push insb sub pop out into jns call (bad) mov mov sub sbb sti xorl int3 inc (bad) or or (bad) sub cmpsb xor add sbb mov or fldt stos pushf insl adc (bad) div cmp inc xchg outsl push xchg mov icebp lea mov loopne test xchg push insl div push push sub pop add lcall xlat test push cmp imul pop add sbb jmp movsb dec pop aas jg jmp insb sar sbb cmpsb lock dec (bad) jp adc mov fsubr out ja and mov pusha lret sbbl sbb xchg mov out xlat cwtl pop inc pop jecxz inc out repz jmp adc iret out xchg negb movsl adc test (bad) jno sbb (bad) (bad) out dec fadds sub (bad) xor push sub adc push test ret out outsb lock movl int xor cltd sbb shlb shl pop in out stos inc cmp out jns out popa cmc test xchg outsb idiv out cmp fsubrl shll sahf sub aad out push cli inc repz scas test jge ds and les ficoml data16 or rorb out test in adc (bad) cmp sub js insb lock cwtl and test sbb out mov cs data16 push mov mov inc jns popa shr lds out pop aam xor push popl mov aas out xchg out flds sub lret sti roll pop jbe or mov sbb inc pop cmp (bad) stos or pop sbb push (bad) fsubl out popl sbb lcall cmp loop test and xor xchg pop cmpsl mov (bad) push das (bad) aaa jmp push pop mov push or xchg rol imul scas bound int3 call ret inc popf jne out mov test imul addr16 dec push ss stos xor imul dec negl xchg adc cmpsl stos out jns stc scas insl push lea out aad inc pop inc jne xchg (bad) push mov call pushf out rclb jmp (bad) insb out inc or dec sbb arpl fwait mov out in pop inc and imul xchg cmovbe mov adc popf lds fcom cmc pop cmp cmp add out adc fnstcw out add repz mov xchg cld jmp loopne out xchg cmp push out add (bad) fldcw pop jecxz xchg dec mov ja adc pop push jmp rol dec inc and fimull pop out lods cmp out sub xchg stos inc push mov out fsubrl ret out xchg daa das cmp or mov sub dec pop loopne or adc inc stc jg push rolb out out cmp fwait mov inc push bound dec out imul out push sbb outsb dec jl popf out mov inc int xor stos out daa jae test in xchg pop cs cmp dec shr add push dec pusha out sarl ret jbe incb inc out sbb sub push and sbb inc xchg loope and pop add jmp cmpl imul fdivl or ss out fcomps popa data16 push xchg cmpsl add out js jne push inc out push pop stos sbb cmp mov mov fsubrp adc addr16 loop stc lods mov arpl cltd pop lret pop fwait inc in movsl mov out xlat xchg stos xor add data16 and into or adc out jns loopne add out xchg sbb mov ljmp out cmp (bad) out cwtl inc cmpsl add cmc fstps mov inc std out and pop out dec pop xchg or cmp xchg fdivl (bad) (bad) lock pop mov out out int3 mov xchg clc pop mov cld xlat dec or shr rol das mov iret out mov lock gs and adc aad pop aam out stos insl mov xchg out int3 (bad) jge jecxz mov out mov cmp data16 or (bad) hlt out inc add jmp cmpsb xor lcall and aad aad das mov jmp cs loope ljmp out push pushf cmp jnp adc pop idivl push lcall cwtl (bad) sub pop cmpsl push out push inc (bad) mov jge jb (bad) mov fbstp add (bad) cmp out cmpsb out mov add pop fiadd fisttpll mov call pop (bad) pop inc inc out adc sahf rorb out xchg mov lahf and out pop mov push adc lret out sbb xor pop cmp mov call out insb sub mulb jle xchg (bad) push sub mov xchg sbb repz ss sbb in cmp push aaa out sub push das out fwait into and rolb sbb and addr16 xchg cmp out add out pop adc push mov rclb ret js (bad) jmp dec (bad) xor inc pop out mov xchg int jo dec out mov jecxz mov mov pop fdiv xchg xchg sbb out fs loope sbb aam and mov in sbbl test bt pop pop xor xlat mov jg outsl loop out ss (bad) hlt (bad) fild xchg test (bad) ljmp mov out dec arpl mov fcomi or ja out and fstp cmp out mov and sahf pop dec jae (bad) paddsw mov call mov sbb xchg sub out inc jecxz out cmp (bad) pushf (bad) pop sub test jmp arpl out adc xor out xor push dec mul repnz mov out shrb mov fistpl dec out lea leave pop sbb loop cltd shl (bad) pmaxsw ss mov and adc jb inc pop shlb out mov cli adc leave jmp loope lock loopne dec pop push in inc xchg lock xor loope xor out jno andl pop data16 (bad) xor out pop imul jg push xchg ss xor out or inc mov mov in sbb dec and cmpsb out jne lock sbb pop mov out lret out inc (bad) imull call out or jno push inc lds into lods pusha lods test outsb pop add decb (bad) inc push (bad) out pop lock aas dec (bad) mov outsl out jno sbb push xor cltd out mov (bad) mov out mov xchg add call inc add test lcall sub push pop rcrb sub inc in mov adc andb pop outsb in pop das fisubr sub adc out or sub adc mov sub or (bad) mov mov out xchg rolb lds mov lea icebp out mov shrb lds pop in (bad) test cmp cmp test pop roll je vpand fs fucom scas iret out xor add mov mov adc (bad) jmp mov add in popa fsubr stc mov sub cmp push inc pop ret iret fnop add call mov (bad) sti mov jnp pop xchg loopne leave sub mov (bad) cs ja adc insb push sub nop mov cmp dec out fldenv mov dec test (bad) cmpsb sub in sar jbe xor jb out popf adc (bad) xchg xchg and out or addr16 sub and lds nop mov mov in gs fucomp ljmp pop out mov xor (bad) xchg mov loope or (bad) jbe adc fisubrl push xor mov aam ljmp stc sbb mov pop add adc pop in or mov popf (bad) imul movsl fiadd out sub jecxz cmp mov xchg test xchg in out and scas out cmp pop inc mov sbb insl xor xorl pop jecxz addr16 bound out test inc push into out mov pop test xchg test imul jns mov inc divl mov test (bad) aam cmp ficom lods add cmp es in out imul loope lret les outsl mov xchg pop jmp ret push (bad) out and sub or push cmp out loopne sub icebp push fldt xchg stos les mov and sbb cmp out repnz out jb cmpsl cmp ffreep daa testb sbb out ffreep cmc pop rolb aaa mov lea aas adc rcrl or push and out inc (bad) loope push jno mov ljmp int mov out fmull les sarb mov cmpsb out cwtl cmp xor int pop ficom arpl push test sub xchg pop fcoms push sub (bad) lahf add inc sbb loopne mov loop ficompl shlb imul mov adc repnz movsl adc cmpxchg push adc cld adc lods mov jp ret popf add out in rcll fisubl jge xor out add in push leave out dec mov sub out add cmc das cwtl push outsw out mov imul xchg and push out addl aaa pop push jle out ss stos inc in xor pop sub push int3 adc cmp add jmp sub jecxz xchg push sub mov and (bad) out pop movsl sbb cltd dec test dec out jge jp sbb jmp aam cmc daa sbb rcrl cmpl rolb xchg repz push fsub mov (bad) (bad) out mov xchg and xor out inc cmp inc adc out rcl mov out inc xor sbb out imul js lods jg ljmp or jo data16 mov jae loop test inc sar mov sahf or cmp mov gs fwait arpl cmp jbe out repnz loopne mov pusha rorb bound ficompl inc sub sbb out pop cmp out or cli jecxz test int out adc mov xor pop sub and pusha xlat test out fstpt out adc bound push out inc stos std sub adc clc out xor outsl and insl jecxz dec add push out jmp or sub xchg cs pop inc lock mov int3 out cmpsl clc arpl mov xchg imul adc (bad) rorl cli aas out jge mov xchg mov pop pop insb mov lahf lea out (bad) push mov xchg rcr cld (bad) out int3 fcmove mov xchg cmp out and repnz popf (bad) (bad) jle inc sub sub pop lcall sub mov cltd outsl (bad) loope out pop ljmp sti and cmc or out test or push and (bad) out int3 push mov lods gs (bad) rcr jbe out dec inc mov xchg scas ja out xor push and add in test inc out lcall dec out or dec mov pop lock pop int movsb (bad) (bad) sub test adc lods nop aad xor adc out add adc add iret divb daa ljmp call mov jo out loopne clc mov mov add ret into std out sarb lods cwtl pop mov pop add icebp push mov pop ds ljmp (bad) icebp mov rolb lds mov mov in (bad) icebp adc sub xchg pop sbb mov sub cmp inc add out stos mov adc out inc xchg fsubrs add out imul mov insl fwait test adc fs adc push out sub lods jnp cmpsl push ficompl cli loop add out stos jmp push dec or mov gs out push sub std out pop in jmp push arpl test xorl fbstp pusha mov test dec pop mov out jne push faddl pop pop out mov pop mov shlb out cltd jae lret into push aam pop jnp in jns in mov aas fdivr (bad) mov jg movsl cmp mov push pop dec sbb scas jmpw sbb xchg out cwtl sar jb add adc pushf xor xor repnz iret mov xchg (bad) or pop xor sahf inc push out and out lahf ret xchg xor in pop popa out insl out xor xchg sbb clc and mov mov aad xor fdiv arpl mov ret mov out add outsb xor sub push mov mov mov imul mov fcom xchg out cwtl hlt out bound push call test dec sub in outsl out stos jbe cld xchg xor out xchg call sti push pop xor jae mov xchg std sub cmp dec imul jl xchg xor lods out xor inc sub and sti out imulb fxch (bad) ja out scas testl in mov out mov jb mov ds push sbb clc cmp cmp push sbb add rorb iret mov jecxz and enter adc pop push ljmp ja xor cmp sub aam fistl sarb out cmp push lods push outsb sub mov and stos clc mov xchg (bad) arpl mov cld ljmp pop (bad) iret dec frstor call out pop jbe outsl push fdivl out mov test std jmp fbstp out mov add mov out ror or jnp cld xchg push pop sub sbb mov sub (bad) scas cli imul adc pop add fisttpll push movsl mov push out out jecxz repz xadd out inc push cmpb mov out fwait mov inc adc div mov inc xchg mov dec add sar jno xchg out xor or xor push leavew das popa add lea sub pusha xor insl push cmp fld popf or pop pop aam add pop imul cmp rcrl ds icebp cmp mov div in cs dec outsb xlat cmp mov int jae out pop pusha nop inc (bad) out addr16 xchg mov out xor shrb pop cmpsb mull jns rcr mov lcall inc jne jno jp xchg xlat loop dec out lods out (bad) xchg addr16 sub fcom pop (bad) push (bad) push in andl sub scas inc incb (bad) cs (bad) rcrb in (bad) out dec (bad) jo jbe test mov xchg icebp (bad) inc sbb (bad) push popa sub jmp cmp aaa fnstsw out xchg icebp xchg adc push subl cs cmc jp in sarl out leave icebp inc movsl add adc hlt jno (bad) pop loope push outsl loope xor adc jle das and outsb dec jmp ffreep pop loope test dec stc inc int3 jns aaa cs jno lret jnp sbb out dec mov (bad) out xchg test cmp out sub dec int cmpsl iret xchg js cmp sub aad pop push mov pop daa out shrb out popf popa jl int out out movsb ret mov sub push test ds imul pusha sub shr std mov testl or xor es in aam cmp or dec out jmp leave out pop pop mov or ss arpl out inc cmp testl jmp fwait push into out int3 aas out xor push pop (bad) (bad) sub push jmp dec out pop mov cmp out mov jecxz (bad) out lret sub fwait mov mov test out cmpsl jg fnsave lahf dec adc pop sub xor jns push cmp cmpsb iret dec imulb loop mov cmp out push lahf cmp jb mov insb ret setl lods push sbb cltd out int3 inc out pop test adcl out mov out imul data16 mov sub out jb mov mov leave iret fiaddl test stc out jle (bad) dec and (bad) pop inc mov xor mov fcom call mov icebp lods inc out cvtpi2ps inc push loopne fdivr in popa xor sbb addr16 add mov jge jmp out outsb xor mov leave and inc incl jne xchg clc into or jb out mov lret push pop into aaa adc jno (bad) je out jbe icebp dec faddl outsb out add lcall and fs jb ja mov insb push call loop repnz hlt cwtl sbb (bad) mov fwait jp fdivrs mov lcall mov aas mov adc out (bad) mov pop xchg hlt mov repnz pop fidivr xchg and scas lea or pop mov mov push pop inc push jecxz jno jb or dec sti (bad) hlt out or sbb mov js ret xchg out aaa add xchg pop sbb subl or loop push repnz cwtl outsb xlat fnsave jo cmpl xor int insl dec out ret outsb clc adc sbb push shlb mov jle mov adc lods stos xor sbb push mov out in into pop test xchg shr out mov push add inc out xor bound jb dec or loope jl aas in (bad) (bad) fcomps sub add out das jp xor (bad) or out cli fistpll jae pop fsubs mov jg push fsubrp cmp insb bound out jl subb mov jno jle push nop cmp ja test aad mov pusha (bad) loopne out gs out mov (bad) out mov insb out (bad) shufps testl add fcmovnbe add sti xchg sbb fs nop mov (bad) aam mov cmp xchg int out and push bound movsl jmp sbb (bad) out jne jg jns or es (bad) (bad) dec pop or cmp cs sub into paddsw leave out frstor jae test mov jne lods or xchg jo adc push cs jle or sbb addr16 jmp push lock lret loop jb out add adc (bad) (bad) dec outsb sub popa mov push stc ss push sbb fsubr outsl divl (bad) push push mov jl mov daa adc xchg mov mov push dec mov pop test out bound lods fwait xchg loop sub (bad) out addr16 je xchg and mov out inc out jns repnz popa pop iret jge (bad) test and jecxz rclb cmpsb ljmp out sbb mov out or and inc decb jne in gs out sarl or enter cld incb dec fldl in push out xchg mov jne pop xchg push xor adc js mov (bad) aaa jnp or jae fldl jp adc bound jle xchg aas repz inc pop fsubr push cmpsb cmp ret dec stos hlt pop data16 call inc xlat mov jmp xor cli into pop pop jmp inc aaa (bad) inc repz test (bad) pop sbb pop test push push fistpll xchg out sti mov sub out xchg cmpsb xor jbe xchg and jp add or out push sub fidivrl out dec out stos mov (bad) test pop es inc add jecxz xchg inc jg in out loope scas cmpl mov stos nop mov and inc data16 stc or int3 adc add jns jmp mov or sbb out dec cmp outsl in out or mov pop pop hlt std inc nop es aas out test ret sbb or push pop roll dec out pop sar outsl out out ljmp jl fsubrp orb imul dec repz cmc mov js aaa sub stc dec dec test pop out push ja gs dec xor idivb lods push cmp iret jle scas bound pop aaa (bad) lret sbb cli negb add xor test sub es sbb imul out mov les out in jno in pop mov pop in ret bnd fbstp sub (bad) ljmp arpl dec out or mov arpl loop or aaa dec cmpsl out lcall daa out andl xchg add les outsb sarl pop mov fnop inc xor sbb call (bad) cmc out icebp cmp es jne imul out sub shrb repnz ja clc or (bad) (bad) out mov add and jecxz push pop jae insl stos out or sub adc addr16 rcrl xchg pusha stos mov out iret int3 jg cwtl out bound push ffreep insl out or pop loopne mov out or xchg ljmp (bad) push sub jns sub cld (bad) sti jae pop sub iret xor sbb ljmp rcrb inc cmpsb inc outsb cmp aam mov cmc add popf push out jmp jns leave (bad) jl adc push movsl shrb mov jne cmpsl mov push nop push mov out cmc andb inc dec cmp scas push jmp daa inc sahf shrb jmp (bad) sbb or aas mov mov jmp mov or std sub push loop cmpsb and fistp lret or mov aad in mov into mov (bad) out popf xlat aaa adc inc pop sub outsl jmp jo out pop cld pop repnz out and xchg or outsb mov loop xor out jle data16 lods push pop dec out dec or (bad) mov rclb ljmp negl jecxz fldl loopne (bad) or fs xchg test iret jp xor in and push pop out adc mov pop fbld clc jo sbb inc and xchg jmp test syscall cmp out clc jge cmp sbb test mov pop inc fucomp push or dec xchg rolb out das or sub out cmp jb out outsl (bad) fdivrs xchg nop out out mov dec xchg daa dec out fcmovnbe movsb add dec add mov jle lahf pop sti mov inc pop cmp sbb fwait push cmp data16 mov jecxz dec cmpsb and xor push test mov out shll aam pop jae ds inc lea jl call loopne pop sub ljmp adc adc das and (bad) rclb cmp mov xlat (bad) pop pop jbe sbb insl cmpsb out movsb fistl fwait mov out add sahf aas jae out cwtl xor sub xchg sub imul int push in add idivl dec and (bad) cld sub addr16 and adcl push outsl mov xor ret or cmp cli out outsb push mov pop scas xchg (bad) out sti stc mov rcrl repnz push pusha loope jg adcb lock or inc popa nop dec pop in or mov push stc shlb clc (bad) out jmp jns loopne shlb xor lret sub stc das loope push push and add cmpl outsl shrb adc sub inc test mov pop es mov xchg xor test jg testl jge rolb xchg jno fsincos pop push dec loop (bad) cmp das (bad) or or adc jge gs pop lret add pop ljmp (bad) jle jo nop dec pop repnz cmp test jp ljmp sti inc shrb cs cmp adc jae cmp cli or sti sub jbe insb cmc lahf cmp cmp out and clc lods sarb out xor sbb in sub mov lods (bad) fdivrs add xor mov rolb push mov jnp out (bad) cld (bad) arpl ret lock loope addr16 loopne fbstp (bad) jg out push call xchg aas mov cltd (bad) mov sub jb cmp sub mov (bad) pushf jnp xor scas fldl fwait xchg mov lcall int3 rcl arpl dec and in and pop imul inc add lahf pop xchg lock arpl in inc loope ret xor scas or out push (bad) and lods insb adc push mul clc js pop fucom cmpsl adc out xchg jno and icebp lods sub aam in pop (bad) aad mov mov inc (bad) daa clc add adc (bad) ds jb out pop or inc out scas cwtl cmpsl scas insl add out push imul (bad) cmp add loop xchg mov (bad) bound out jmp sub jbe out out adc jbe pop mov push arpl (bad) mov out push cwtl and out inc mov jbe pop pop pmaxsw xor in dec out dec scas sub sbbb rol fxch cs in test out sbb ds out loopne cmp data16 sar dec cmp pushf loope xor out inc jns or push dec inc notl test arpl out scas std hlt clc push aas xchg psubsb pop ja popa or push into jno push in dec out fs cmc cmovb ljmp cmpsb mov mov and fisttpll or dec cmpsl out iret stos dec dec (bad) addr16 aad mov daa clc jp mov out mov aam jo dec out sub mov outsb cmc pop xor and scas mov lret cmp mov movsb mov inc dec fsubrl pshufw stc push sbb sarl sub jg pop add fistpl cld out sub mov xor in (bad) cmp (bad) out frstor arpl out popa mov adc jp jnp adc enter imull and xor rorl repnz mov push cmp out xchg js push mov lock lret cwtl insb push insl out subb pop cmc jo fildll lahf js data16 xchg (bad) out xor mov push in nop mov (bad) out mov in sbb int3 lock sarb mov out or (bad) (bad) pop jo into mov xor das bound add out xor ds push push in sbb jb mov mov lods jns out call les push cmp scas int3 sub vsubss and out aaa add xchg or ss stos xor sub es hlt (bad) out mov inc jns out cmpsb repnz arpl mov out (bad) pop xor xchg out inc mov lock lods jae out mov test out js (bad) sub pop or cmpsl loope (bad) pop xchg mov leave jno xor out lret cmp inc xchg mov cmp loopne xchg cmc mov dec mov stos push jne fs arpl (bad) fs std xchg push out stos or lea lock int3 out add es rolb loopne in dec test sub incb dec popf pop lea sub (bad) push fnop xchg cmpsl xchg ss out sub inc cld cmp or dec pushf fidivrl push out out xchg inc sti inc jp stos adc xor sub mov lea outsb and icebp out push and cs insb inc nop mov adc cli inc stos decb call lcall cmp jmp mov cmp push add or ja arpl mov xchg enter mov pop or jbe iret xor add xor sbb cmp lods pop mov cmc in xchg cmp out fidiv popl jp pusha out inc daa push adc mov (bad) aas push cli ja ret adc movsb inc pop xor cmp jge addr16 sti xchg push inc xchg je jb ljmp outsl push ficomp dec leave xor mov andl outsl out or insb mov pop mov pop cmp pop bswap out cwtl push or sub mov sbb push cmp or insl mov inc out daa and mov imul out add push fmulp xchg fwait orb dec outsb push out jnp push sub inc dec dec jg xor lods movl clc mov xor out dec out (bad) cmc or movsl cmp out test push mov insl cmpsl mov sbb addr16 push pusha sub mov sbb daa cmp jle sub and fsub in imul fisubl pop or cltd dec out out dec fwait xor cmc push out pop jns mov out mov std mov ja pop test movsl scas ljmp and stos adc xchg xor ljmp mov push inc xchg adc jp nop or insl mov mov mov mov mov or add fisttp (bad) pop sarb pop fldcw mov out jae in add mov cmp jne pop out mov add dec mov idivb out pop pop mov into cmp out pop mov fisubrl test jg,pt sbb jg into xchg pushf out insl or and mov add pushf out push repnz inc or fmul push and cmp out mov cltd jge jp shr fistpll adc sarl (bad) out and and pop andb xchg jmp push xchg inc (bad) push adc scas sub or sbb lock or jecxz inc nop loope in js lods cltd sub mov and icebp ljmp (bad) out jno adc dec (bad) (bad) gs test sahf cmp pop (bad) lods dec push mov mov or lret cmp bswap jmp cli dec push mov add enter jno pop push adc push adc shlb cmp mov popa pop sahf cmp addl add sub jb scas ret ret enter outsb mov out mov add ror popf or push dec pop dec push orb mov cli fmuls fxch scas cmp sbb or lret dec cmp add iret out iret cmpsb mov loopne adc xchg nop pop incb lcall sbb outsb xchg out sarl ss sbbl xchg jno out fld jbe inc dec cmp ffreep test daa mov or out or out repnz or pop out shl jno adc mov stos or push xchg pop add pop lock jnp out hlt mov push (bad) xchg imul xchg mov clc sbb jecxz cs push arpl ljmp (bad) (bad) pop out add mov out dec icebp test cltd insl xor popa cmp sarl hlt (bad) mov push inc sahf inc cld (bad) out mov pop ret repz pop lock or mov or dec mov bound data16 xchg push popw pop sub jle dec insb aaa cmp xor jg js mov xor dec mov les lock leave adc out incl out cmp push or sarb insl mov sub xchg rolb or aaa sub xor (bad) lea ljmp and js (bad) ss (bad) xor sub fbstp mov jg jno,pn dec ret add push fstpl and or pop lea outsl mov out cmp inc xchg mov cli sbb out jae and sub ds fs mov pop or bound dec decl inc iret sub add sbb mov leave je mov (bad) sub cmp sub test jns imul lods lock xchg mov fistp ret mov sub xchg cltd out js pop jg sbb pop aaa imulb push push out push fldl2e sub mov xchg xor in (bad) hlt jp das stc push fidivrl pop jl mov (bad) xchg test out dec push and iret in xor out outsb fistl mul dec jb fsubrp dec xchg (bad) out rcrb mov mov dec (bad) std jae push das jp sbb pop xor scas or mov mov inc jp cmpl lock out add nop (bad) fisttp lea in (bad) xor dec out add lcall push stos out mov outsl aas ror mov cmp das mov out jb je inc jmp pop out lock xor out inc test shlb fsubrs out cmp mov js push jmp out gs std xor adc dec mov out jbe addr16 mov loope out mov mov shr jne addr16 cmp push xchg xchg dec adc jb inc int3 icebp arpl loopne cmpsl ds jne andl lods push sub clc vucomiss mov stos mov sub repz ja or mov es js test test push ljmp jl popa jbe sbb out scas mov stc mov cmp ror push cmpsb adc out imul pop mov pop cmp popa and sbb dec loopne (bad) lret ljmp out push jl fiaddl cwtl das pop rcrl xchg loop pop call dec out dec mov ss push jecxz movlps mov push mov pop mov mov sbb int3 adc ljmp insl cld scas hlt sub fild clc add cltd (bad) mov fwait jle mov clc mov push (bad) repz and push mov mov jbe mov sbb inc fucomip mov cli mov dec push das push push pop push (bad) je out hlt movsl add dec adc call jns lcall (bad) hlt lahf out int jecxz jle pop sbb mov add movsb popa mov jo sbb pop pop pop out roll test repz (bad) sub pop sub cli jmp ret xor mov out jle dec (bad) sbb ja loopne jecxz out cmpsl xchg inc test nop shl lock jle (bad) cwtl movsl cmp add addr16 (bad) out add mov push and or xchg dec xor std fidivrl push sar jg,pn insb mov lahf jg repz pushf testb sbbl jg enter daa mov xchg out ljmp aam push (bad) jo aaa test inc fadds out or addr16 xchg pop inc bound pop sarb (bad) dec or out push mov icebp enter negl or add pop clc push aam xor std popf int adc out int3 (bad) in mov adc jb fsubr clc push jecxz push cmp ds movq js cmp sub push test out inc or adcb js sub jp das pop test insb out mov push dec fisttp jns mov add inc (bad) idivl push je push int3 out lock push stc lods jp or out jmp add ljmp imul cmc aam mov ja out sbb adcl jge xor lock lret int3 push dec out add (bad) push cmp repz ja jl,pn aas int3 (bad) clc pop cmp aad cmc shr jo or (bad) nop add out jnp cmp cmovae ljmp testb sub addr16 sub inc in mov inc xchg out pusha mov jmp loopne aas not imul add push cld xchg out aam mov cmp fiadd pop loope jp mov push push out jl and jmp mov mov aam test adc lret dec das ss inc push mov andl mov push int3 mov mov jmp cs jnp lods out (bad) ja out (bad) fwait loop movsb movsl adc sub stc jl je (bad) pop cmp cmp (bad) mov mov pop sarl sti adc cli stc lret out xor mov inc inc jb jno std mov jmp (bad) (bad) out mov lods repz out jl imull xlat or mov or jne repz jo mov ret lahf mov inc add fsts insl out dec js sbb inc mov jge jae imul jb outsl and das sarb pop enter out mov push insb xor out loopne pop jnp dec test out imul push lret repnz rclb sub xchg (bad) cmp cmp push bound enter test lods aad xorl neg je call stos xchg lret ret out dec in cmpb jge jbe inc xchg dec ljmp in ljmp out cmpsb test cltd ja imul repnz cmpsl xlat mov (bad) pop pop in sub out mov cmpsl cmc fsubr push and mov dec out jns hlt inc cmp sub out pop pop nop mov out mov or inc out icebp mov scas add loope xor or dec and or ja pop shl cmp fstl pop push cltd add (bad) xor dec dec jecxz div sbb sbb mov mov pop fwait dec push ja imul and cmc mov out icebp mov (bad) mov into imul popa sub dec data16 ror addr16 pop icebp dec or xchg mov lcall xchg sub lret dec pushl stos ljmp out ja mov xchg out movsb mov decb aas daa int cmp dec in cmp (bad) dec or outsb cmc mov cli inc push fadds std idiv dec cmp sbb mov adc inc mov inc std addl rcrb out pop lret jne xchg scas cmc jnp pusha jg shr outsb cwtl sbb jne sarb (bad) out mov hlt pushf add inc iret sub cmp (bad) inc enter fadd dec inc lcall and add push mov cmpsb xchg cli insl mov lret and adc call clc (bad) aas adc jnp xor in xlat mov arpl adc cmp repnz adc arpl mov sahf imul cmp in ljmp out fnstcw in jmp out idivw into shlb add mov ret lahf loope lods out fsubrp sbb dec rolb cmpsb push out jo push in cmp cmc es roll ret js shl push pop cmp jecxz cltd movsl xchg in pop shr xor arpl or loop inc test ds xchg jg out fwait mov adc and dec or mov out sbb loop jecxz inc push cmp or push idiv jns je stos leave out add sub push mov mov (bad) fisubrl jns xchg sub out clc stos aaa mov sbb xor pcmpgtb in fistp jbe mov out sbb or (bad) xchg (bad) sub jp lods mov out or xlat sti jb sbb pop mov pop addr16 cli or mov jo divl out add fstps mov pop out fwait mov loope push cmp jmp je out cltd mov in fisttpl jns lock lea jle mov call cmp inc ljmp sahf add addr16 ja dec fisttp pop push dec out jmp sbb js xor cmp scas lahf fidivrl sti dec (bad) out stos dec pop push sbb xchg jg mov inc data16 out lock lea scas outsl xchg out mov and ss pop sbb int3 jle imul fild pushf and popf lahf std mov mov mov addr16 push lret inc or ss stc inc stos sub or (bad) mov adc lahf popf jne lock repnz mov cmp dec nop rorb cltd lret push mov ljmp popf or lock out jle xchg dec or lcall stos push sub out mov xor decb jmp mov push cmc pop imul out adc jbe fld mov adc out cmp inc mov (bad) jo,pt and inc out test xor or sub dec imul mov mov loop dec lds ljmp fbstp popf dec inc mov xchg cld lahf je push cmp add jmp dec ja addr16 jb notb imul mov out cmpsl mov jno (bad) xchg pop andb iret loope ds sbb push ret push add and inc push repz sbb ficompl loopne outsl ds out add xchg orl jno psrad sub dec imul jb aam out cmp out mov out dec mov jmp jnp gs pop (bad) outsb js das xlat adc cmp lret cmp out mov adc out outsb sub (bad) xor iret bound addr16 test sarl and shr movsb and repz push shrb fwait mov (bad) push shr (bad) push adc out jo or jecxz cmpsl in out std mov idiv (bad) aaa das inc enter in dec push mov loopne (bad) cmp pop in (bad) jge push in or movsb add cmp cli mov mov ret out out dec inc add mov mov push xchg dec xchg pop jne fsub ljmp pop add les shll cmp inc stos pop int out cwtl (bad) test jbe dec xchg sub inc loopne mov cmp loope outsb push dec jecxz sbb mov cmp decl xchg out add inc mov es out loop or cmp fdivp gs ljmp mov sbb mov push xchg inc test aas iret xor les adc lock push call clc xchg into divl shl mov xchg gs pop out icebp cld inc cmpsl ljmp pop push clc push frstor xchg sub sahf xchg mov pop mov cwtl (bad) pop fistl jnp mov jb out push push fisub out aam pop shrl jg repz loopne cmpsb out cmc dec icebp cmp cmp out sbb jecxz xor sahf sti out repz jp lods in ja add out push rcrl les pop sbb out xor cmpsb fs dec loope sbb mov nop out pop outsb add out dec mov movsl out test pop and dec and push mov sub or adc int3 cmpsb jbe in out loope (bad) dec pop lret out jns push popa jecxz xor lods (bad) xor jg mov imul push cli shl fucomp lret add out data16 mov dec mov xorl mov and xor in push dec dec pop out (bad) and outsb out test pop sbb or lock sti mov mov xchg mov addl aam mov mov mov shrb out repz les sti xlat xchg push out mov mov clc add jl ret inc jbe out add jae jne rorb sar jo mov cmp sbb jmp outsb fidivr out (bad) dec and movsl mov iret aas mov out mov out pop xlat movsb jo stc mov addl (bad) lret into int3 pop push repz pop cld add push (bad) pop lods cmp fcom cli in pop mov mov pop mov scas insl movsl mov out js inc fwait push sbb out idivb jne in cmc out mov (bad) imul push out pop cmp clc rclb xchg push fdiv out mov aas lret jge mov fisttp aaa push loop pusha inc mov out and mov jecxz ret fbld jge sub push push jg in loope into out xor xchg scas inc inc out cmp push mov aam sub sub jecxz adc mov xor mov icebp ja add out fmull fdivrs xor push pop call mov incb movsl je or imul jnp test fsubs stc scas pusha in add jns lods imulb les (bad) (bad) inc pop or mov sub ja shrb out xor and pop push adc push adc push and pop out subl push pop es iret repz cmp sub xor dec dec ret lods mov out mov xchg loopne cmpb or bound jg and stc (bad) in jb nop imul xchg lds mov jns jnp dec add cmp mov ret lahf or lret sub sar aas sub icebp pop daa xor out xchg or mov mov sahf out sub jp out loope or pusha (bad) push arpl mov pop mov lods negb (bad) cmc inc out stc jg (bad) dec mov mov stos aas or sub pop out inc lcall dec out pop mov cmc cld jg leave sbb subb dec imul xor out imull loope fwait aas cmp push mov sub push sar popa xchg movsb or adc lods mov call xor and dec cmp out xor sub pop dec jo fidiv rorb aad into ljmp test test addl (bad) out inc decb mov jl insl push addr16 les pop or ljmp inc (bad) aam and dec out pshufw out pop xor data16 sbb cs mov pop jmp popa push xor out push push sub leave out and shll inc aam add or std inc push dec (bad) loopne out insl sub push mov add bound inc jno repnz xchg ret sub mov pop in xor addr16 xchg out daa (bad) mov dec add stos inc into add lcall cli adc cmpsb out dec and call jns cwtl out in mov push out hlt jle mov or cmp mov sub fstpt mov aaa (bad) xor or sub lahf bound sar inc test ljmp mov add addr16 in (bad) sbb mov (bad) push pop xchg jle sub mov fcomps arpl push int cld loop jmp loopne hlt fucomi xor mov mov jmp jle mov xchg clc out scas test js test (bad) xor mov pop mov cmpsb out xor cmpps xor pop out or lods dec inc add inc (bad) repnz xchg xor in add out jle (bad) pop sub into out xlat dec (bad) or xchg inc cmp cmp jne mov mov dec inc xchg add cmp (bad) ja mov pop dec hlt pop in repnz cld out ret cltd out mov xchg into mov (bad) out cli cmp aad dec or cmpsl arpl int3 rcr imul adc pop test out or sbb arpl flds je add ss out sti mov out inc cld sub pop mov out ja jns outsb mov add rorl inc ret mov pop cmpsb push out sub cmp out adc das mov xor pop out adc adc xchg xchg fist insl dec roll dec int inc arpl or pop mov inc outsb jmp mov add out test sub out jo jge sbb in xchg jl and inc aam shr dec inc pop mov inc add imul sub mov add push sub mov outsb (bad) jg outsb repnz sbb pop test or ja test and (bad) pop xchg or jp sahf stos xlat mov xchg shr push lret movsb jl or cs out out push imul lahf (bad) mov ja push add out dec cmp (bad) xchg inc sub call inc imul mov cli or mov pandn push adc out and div sbb add fadds repz rorb out outsb inc dec repnz push xchg lock adc sbb out xor jp xor in inc out dec pop (bad) int3 mov (bad) scas sbb (bad) ja clc add push popf jmp or out js push (bad) iret rclb repnz mov stos bound cmove loope ljmp test dec aaa pop out stos adc pop or jnp push mov hlt ret jbe out jp cld stc xchg jb or mov sti fwait push sbb mov out dec push sub pop scas xorb ret pop aas mov push nop (bad) ljmp push popl sarb lods out test (bad) imul jecxz in in mov sti arpl push imul jo out pop mov adc mov out fcmove es pop fcmovnb sub push push pop out sbbb adcl movsb inc test sbb lcall int3 and subb dec (bad) pop mov pop cmp push jo lea jmp out xchg mov aaa out push fisubr sub sub dec or (bad) sub mov jne inc out mov pop gs jbe fwait out clc fcmovnu ljmp lea cmp stos fwait out jns rol test add shlb ljmp jbe clc cmp loop cmp enter pop out dec cmpsl sarl lea (bad) (bad) mov or mov out xchg ljmp iret loope (bad) or repz mov push adc mov repnz rorl psrlw scas arpl je mov out xchg xchg jbe nop jne sub je imul out jno dec pop jg ret cmp nop fnop fisttpll mov stos lds out js jge addr16 rol mov (bad) jl xchg inc lcall xchg cmpsb rol out insl mov (bad) xchg in adc out or fmuls mov push pop sbb jge cmp ss out ret inc mov into push (bad) outsl jle leave mov xchg out orl rcrl aaa dec push out movsl jns and mov dec mov (bad) xor or ljmp out test clc mov adc or out and xchg add mov add divb (bad) imul cmc out test stos mov imulb ja pop and pop mov leave fld in (bad) mov (bad) out mov test cmp in add xor jmp in out or test inc je lds xor jl add out aas mov pop loope mov movhps in adc out jb dec mov imul es test jmp mov aaa jbe mov dec addr16 js out fwait je sub xchg decb pop int or movsb ljmp imul sub push push cmp and jmp mov sbb add mov iret dec cli push sub inc das lret aam out pop jno xor fdivs in (bad) push mov mov out js loopne xor loopne loop loop insl and inc adc xor clc inc call cmpsl out inc test dec std dec lret lahf fnstsw pop out or cmp dec (bad) fidivrl cmp dec cmp mov mov hlt add sub adc mov out or xchg notb int jno push cmp (bad) ljmp mov mov aas pop popa mov stos cmp out pushl mov mov imul jp mov out ljmp lods mov or out (bad) ja out mov (bad) iret mov dec leave cmp cltd lods and mov imul lret insl aaa push out inc sarl je inc out jge fisttpll pop ljmp js sbb cmp aaa add and mov iret cs out int3 sarl (bad) cwtl icebp or lea popf adc adc andl or sbb push out mov xor or out iret and ss mov mov adc jbe inc push sbb jmp cmpsb cli (bad) mov xchg ljmp inc push je insl mov cli push cmpsb push push repnz out pop (bad) lret pop (bad) mov test insb sbb pop and dec out test shl and sahf dec xchg cmp popa mov (bad) sti out gs lea iret push dec sub pop or sub mov dec mov jbe out inc test fnstcw and aam adc dec cmpb lock cld mov cs cmpsb lret add xor mov repnz in sub clc iret mov scas add xor jp cmp es push xor xor std bound xor (bad) xchg adc out js mov scas push jne bound pop ds in jg insl jns dec (bad) cmc pop clc pop push lods pop xor push jns loope test and mov fimull (bad) jbe out lret push daa (bad) stos xor incb dec cmp inc pop cmpsb insl push add divb add (bad) xor dec daa add std out mov lret cmpsl ja inc aaa rclb sub (bad) mov aaa cmpsl (bad) xchg cmp xor sub inc xor adcl jbe fs out and ljmp sub (bad) in xchg xchg ret jl xchg sub lcall daa mul xor jne mov out push je fisttpl jae sti ja ds insb inc call cs out outsl mov pop fsubr dec xchg cwtl mov cmp xchg push sbb out pop sub cmpsl scas rorb xor xchg (bad) mov jg sub out cs decl adcb cmc addr16 movsl push pop xchg adc loopne add add jno ss mov xor inc pop pop adc inc xchg dec out in das iret add shrl push iret mov jecxz pop in out rclb xchg das pop insb mov adc repz jg cmp out leave xchg and out pop pop cmp mov out dec mov into dec xchg or cmc aam jge push cmp cwtl repnz xor or nop cmc std fistp out dec sub inc andb xchg out jne mov xchg mov es movsl loopne mov and je out adc test lret pop lret fisubl out sbb (bad) flds inc push xchg imul dec xor add gs ja jnp or out push inc sub lsl (bad) enter aas je push pop rorb loopne (bad) xchg sub xlat pop out vmovaps jbe inc out xchg clc cmpsb inc xor dec lods mov outsb lds (bad) rorb ljmp out ss (bad) jns push iret out incb cmp mov lahf add and lret mov (bad) mov cmp add out push ret out mov add stc iret sbb mov fistpll ja push push pop or xchg stos fwait add pop push mov daa ds decl stc out dec jno jp adc idivb stos lret in sbbb inc pop out int3 add scas pop incb mov mov fist mov push in mov push inc out or (bad) xor shl imul popa out insl js add pop xlat sub jl pop into sbb aas aam push out mov adc out ljmp movq sub fbstp jl imul push push jne out xchg inc test mov xchg pop imul (bad) out hlt sbb out sub dec dec test insb fimul cmc add jo pop pushf fwait mov negl and mov ds (bad) (bad) push loop (bad) cmc sub ljmp mov jmp dec repz test or add (bad) jo and push push pop or jns in pop mov lock mov mul out push xor cltd push test enter mov daa push pop mov (bad) (bad) jbe cmpsl pusha jmp btc jns sub and out out push add or sbb pop in inc test ja out mov inc inc push daa mov popa (bad) fisttpl out add mov jns shll jl ss mov ljmp icebp or xchg jp test imul in pop nop shl test (bad) aaa stos jmp shl repnz insl (bad) loope adc lds jecxz jg in sub shrb inc xchg loope and dec (bad) out lcall sarb inc fsubrs (bad) mov pop lcall inc and daa roll dec pop out lahf jl xor in (bad) cmpsl out iret xchg xor mov jb sub movsl popa out mov xor pop jmp out shll push jb unpcklps es stos in aas scas pop fwait mov ljmp sahf int cmovge clc cmc mov icebp out mov mov imul stc lahf shrl ret imul fistl lret (bad) inc cli jno es loop js cs sub fwait pop cmpsl out xchg imul das push (bad) sub aaa xchg sub mov das repnz push rorb pop xchg pop mov cwtl ljmp cmp xchg imul pop jg jno out cs stos xor out rcr push shlb adc and cmc outsl (bad) in xor (bad) (bad) imul in cmpsb flds jmp and je and add mov fwait (bad) cmp sub and cwtl pop adc (bad) adc or subl pusha add into shr rcrb fdivs jns ss test out sbb push (bad) dec ja loopne icebp xor xchg lock call cmp jl mov mov and jmp jns pop xor dec mov out aam lcall mov jns or sub (bad) mov xchg aad js out push jl (bad) repz rol js pusha mov out pop idiv push mov loop out xchg ret and test jnp sbb dec jne bound es nop out (bad) shr pop or in movsl jp xchg pop jnp push cmp jns icebp out insl and insl pushf xchg fbld ss dec cmc and cmp fisttpll enter (bad) aam mov xchg dec ss stc sar xor push aad arpl jecxz pop fdivrl fcmovnu enter movsl outsb add mov fs stos test out movsb xchg addl das int3 dec jg mov (bad) and or enter test dec test cmp fistp fs push fmul or stos nop ror data16 repnz out pop and lahf jg mov push mov mov inc jo push or inc lds adc and jmp pop xor sbb cwtl (bad) aad jo mov add inc stc ss lock sub cld xchg clc adc aaa ret sbb ds xlat adc pop addr16 mov or loope add lods int sub and xchg je (bad) jo push cli fucomp mov and (bad) push lock js dec in xor add jnp add iret ror and loop fisubr xor dec dec ja out cwtl aam cltd out in xchg mov lds out (bad) mov lea fisttp in test imul sbbb lods inc cmovnp repz pushf data16 add jo or push mov push add jnp xor loop pop add dec ret out or gs pop in xchg mov and fcoms out jae pop imul jge out xor fnop out jnp cwtl imul push sahf inc lds lret push inc pop loope xor or andl add loop and push out xlat bound mov js jge mov push cmp dec in cld decl decb orl pop out sbbl push ret xor mov arpl pop sub out push test in int3 pop and add mov test adc jecxz outsl aas out imul jge mov pop push das ljmp orb clc out lcall mov push jle out pop add in fs movsl aaa arpl and idivl or jg clc call in je test out movlps lods cmp outsb fisttpl push cmp bound out mov popa push (bad) sti popa lea nop je imul loope xchg sub cmp mov jp negb (bad) jb lock popa and xor out mov pushf outsb pusha mov iret jecxz (bad) scas stos or out xor loop data16 inc bound cmc sbb fucomip ret and es test fwait mov (bad) icebp push push xchg jbe fbstp cltd (bad) push add loop jb pop add push pusha out lods sub out insl aaa sti and fcompl dec ret test mov push push cli outsb in xlat lret loopne or mov out int3 lock jl inc (bad) out dec cli into mov scas nop test fisubrl stos ret insl adcl cmp and out je mov xor call push cmp dec pmaxsw je lcall pop mov fcmovbe or sahf lea test push xor stc or jae xor sahf movb iret loope mov pop sarb (bad) popf adc (bad) mov clc sbb stos in and mov aaa imul mov int aam mov stos pop clc xchg inc jnp out sub mov pop out std stos push adc sbb mov out mov repnz mov and pusha sti mov adc mov loop pop rcrb sbb xor out push sub push push xor and call out fld dec xchg add or push push out xlat pop es cmp adc ljmp out rdmsr inc push or jbe xchg push out lret stos icebp (bad) aas out mov add imul inc and es and ficompl jl jb push inc jmp fbstp inc out ficoml cmp sub add enter mov and negl pop xor loopne inc fwait call test xchg xor hlt jo push sub push out or mov add outsb mov jle imul js out inc xor xchg cli xor in xchg pop scas imul add jecxz fwait iret pop insl cs out jge mov test mov out mov adc xlat out jg fnop fs out insl mov cwtl mov iret add jae pop sbb lock push fbstp sbb out xchg inc stos insb insl mov xor test push adc movsb out ret xor pop and cmp addr16 outsb xor xor pop std shr mov inc jb mov sbb xlat pop lahf (bad) sarb cli in and hlt out gs in les pop rorl insb out sub and (bad) out pop fadd or jge test xor ja mov cltd out aam or daa push mov pop std push cs mov ret fiaddl out iret adc ja out push pop push (bad) ss jmp out pop dec sub push popa (bad) in shrb ljmp fistpll mov pop cltd ds jnp pushf xor sarl pop int3 pop aam sahf out push jb stos jns fldl mov imul test and pop test xchg cmp scas adc and push (bad) sub sbb jnp cmp mov fs push cs inc mov add outsb sbb mov pusha in shl scas ljmp in outsl cmpsb jl xchg sbb test or dec (bad) ret mov sbb loope,pn imul mov jg cmp adc iret daa fs mov in mov and out mov sarb lods out xchg xor xchg cmp push pop and rol stos imul or mov popa mov ljmp es sub in jo mov icebp out cmp pushf sarb cs push cmp jmp clc out push jno adc jbe pop (bad) int3 (bad) out fs leave insl sbb ret aaa inc les jbe scas out in pop dec adc inc inc cwtl out sbb loop push pop and into or imul mov stos in out dec mov cmpsb call in movl mov pop lock lret dec lock bound out mov sbb and mov out cltd aad adc rolb iret test rol out or xchg repnz (bad) push jo add das jl arpl icebp ljmp jae and dec mov jp mov into adc out fiaddl mov sbb std dec xor fs in jl jmp movsb xchg mov insb iret ljmp stos test mov jle jge jb and push mov roll stc mov fsubr shrl das (bad) sahf popa xchg cltd jno icebp scas push lods pop lahf fidivrl in loope dec pop cmp out jg xor out or or jl mov dec mov fisubr incb push mov or xchg out ja insb dec loopne pop push xchg lods mov cmp rolb out sarb inc aam adc mov push push stos loopne clc or out adc gs xchg cs addr16 add popf jmp ss xchg sbb out push xchg inc cmp jae out je mov das out popa xchg cmp adc mov dec push mov ds (bad) mov popa push cmp jns fwait (bad) imul sbb in cmp pop data16 in into out icebp mov lahf cmp ret adc repnz dec mov sub (bad) ljmp jmp shlb invd repz sbbl jae aad repz out in xchg (bad) xlat enter ss adc ret movsb push sbb outsb xor add push sub lods cmp or mov jg ja mov fcoml push loope and add sbb mov aam icebp adc out imul add dec jg push add dec imul (bad) adc (bad) add xchg adc mov add iret (bad) leave aam call dec out inc negb xor sbb mov popa pushf aas cmpsb and cwtl test jne in test push mov out mov js out repnz mov addr16 sub sahf lods jmp fsub fsub add or inc test pop adc mov cltd out adc das or ror sti fdivrs lods loopne lahf push popf adc jp pusha fistp test ds out push stos mov movsb out pop outsb hlt mov push out imul test jg stos (bad) xor call incb mov inc inc push insb push loope cwtl add jl mov out lret daa xchg or out lods adc lods out mov pushf das inc loope add dec out loop test dec jecxz (bad) in cmp inc mov inc loope (bad) xorb out mov pop dec jge push mov icebp mov aam loope rorb stos mov push fwait jne arpl insb (bad) out inc sub es inc out dec daa xchg test cmp loopne test sarl call mov movsb fisubl xor test iret insb add mov sub outsl pop xchg stc sarl repnz out sub pop gs fidiv aaa xchg out testb iret leave fwait in repnz icebp dec lcall xchg outsb ret iret clc out das jns mov rcll insl icebp inc add scas inc loopne xchg mov pop andl lsl adc cmp sbb mov and out jb not dec sti cmp out xlat int3 aaa pop adc fidivrl pushf test xor mov out jmp sti ja out jbe push or lods jnp cmpsl fwait fs adc movsl pop pop (bad) mov push inc call push pop cmp and mov jg inc sub cmp mov insb push lea sub xchg leave ss das xor loopne inc sub js pop cli addr16 adc movsl fs pop push gs out or cltd mov scas jecxz jle cmp push pushf xchg out bound add mov ja or mov sbb fldcw js add out mov push popf out cs dec (bad) sbb dec loope cmp lock xchg mov bound adc (bad) in arpl jo sbb daa adc sub inc movsl in jb imul sbb test fsts aas jno (bad) shr mov cmp xchg cmp sub cld aad repnz out ret sahf jg cmpsb insb out jmp jmp fucomip popa stos inc xchg xchg sbb out dec mov test mov js lods (bad) dec out in push outsl push mov push pop out mov out out test cmpsb cltd sub mov ja adc pop imul int3 sub lods mov ret or pushf ljmp subb rcrb cmp mov push sub out in in daa out or add out adc pop fcomps out lea sub pop push mov xchg mov add ja xor add daa out hlt inc adc jb push pop mov les pop out (bad) pop (bad) out nop jp sti mov sub mov pop inc out lds and xchg xchg insl inc in out pop cmpsl lods (bad) push (bad) out and insl add lcall ljmp inc icebp out gs sbb sub cmp imull out fs pop inc in out mov push adc push adc xchg dec ror loope xchg pop and add clc call ss ds mov out lods and xchg in fs inc push sbb sub sub shrb cmpsb das sub or push lret xor iret xor mov pop ss in adc xchg in xchg jno out nop jl bound sbb fisttpl jle dec adc push dec sbb call lahf mov ss fisubl sbb or jns aaa repnz scas decb jmp and stos loope out jp ja mov mov jg inc mov in pmaxsw add jns out xchg cmp das mov lahf ljmp fdivrp ficompl push neg pop mov nop sbb adc jbe daa out pop inc or push or add ret jbe xor mov fsubrs dec pop push pop jo inc hlt adc lcall sub out and push dec out fwait xchg pop or bound xlat jmp jnp cmp outsb jb out in jmp sbb push out add inc xor fisubrl fwait daa out cmp jb (bad) (bad) in mov aas cmp loope popf xchg push out push push sbb dec sub (bad) xchg mov fsubr sub out cmc adc add roll pop stos test sti adc pop out fstpl in bound loopne push ljmp (bad) cmpsb cmp cs pusha xchg mov adc lock (bad) je iret fisubrl call add in xlat testb in and out adc (bad) (bad) jmp (bad) jne dec lock pop adc adc (bad) fsubl in mov adc int3 cs mov pop sub push mov mov ss xor mov out inc mov daa sahf scas jae movsl out dec fsub adc pop lret mov stos xchg pop push pop xor iret adc inc jmp stc hlt sub lock dec push cmpsb push cmp out cs idiv inc int jg sarb xlat out ds out inc push sbb aas fst nop rol sahf (bad) pop ja fs dec in mov das scas jp icebp jge inc push fisubrl or daa fistp mov repnz aam out xor icebp out movsl adc sub push (bad) loop cs in adc iret js sbb cmpsl mov out pop int and push ja xor bnd dec loop out pop adc jbe popf in out jb cmp out mov mov out cmp mov hlt mov cwtl out add xchg mov add out mov clc jns out sahf std das jl test cmp mov mov enter pmullw out adc (bad) pop mov out mov in adc sub (bad) call pop (bad) xor sub jmp inc fistpll out bound mov push ljmp sub add imul fild add xstore-rng cmpsl test push push out adc mov (bad) ffree push dec lock lcall adc pop aas xor ja cmp (bad) jg mov jle mov sbb cmp iret cmp popf call dec iret xor sub mov cmp inc dec in out push adc loope xchg mov out push test out gs ja xchg adc out or push (bad) test push adc pop pop je add mov stos add out iret addr16 repz push out pop mov hlt pusha out mov dec lcall add mov cltd sub and sub inc xchg aad mov dec dec das cs (bad) adc jns test xor mov or cmpsb fild and jmp aad mov mov pop lret jecxz mov mov adc cli xchg dec push push lcall mov jp ja iret cmp sbb nop pop iret and sub ret dec pop mov jo ja pop lea out xor pusha cmp stc out cmpsb pop int3 push rcll out mov sub aas shrb mov iret mov call jge out loope jb dec sub (bad) iret scas xor push ljmp fsubr pop in out jecxz mov xlat out mov rcll inc notl sub stos out aas mov fwait sti out lcall pop out mov push sbb out sbb pop outsl out jb xchg xchg cli repnz cmpsl mov incb inc mov out and inc (bad) jae and sub pushf xchg lods int3 push roll popa mov es loop cwtl (bad) jne je sbb push add pop dec lahf repnz mov notl out (bad) ljmp punpcklwd scas sar inc pop in ret popf scas movsb ljmp jecxz nop divl pushf test pop out jae movsb out dec sbb sbb aad out cmp lcall sub popa enter xchg dec pop sub ljmp stos add es xchg das push or jae mov push inc cli shr mov sub jle xchg aas sarb pop out dec and jecxz xor imul out fsub inc lods and pop insl sbb cmp pop mov push cltd out (bad) ljmp and fsubs jmp daa lahf popa push loope jge dec cs cmp ret imul mov jo in push pusha cmpsb or adc ss movsb sahf call or dec out pop xchg (bad) outsb xchg test out mov das or add or add imul mov push push sarb icebp pop arpl (bad) push out or scas insl out xlat jmp cmp push (bad) mul in fwait pop sarl ret icebp mov out int3 addr16 cmp fnsave xor sub outsl roll sahf mov out pushf lahf pop stc rolb (bad) out push pop jns std dec pop cmp (bad) lahf aas js notb add fdivrl arpl (bad) mov lods pop mov lock pop out xor xchg andb aas fwait out in xor stos cwtl out imul sub xchg sub iret out cmpsl ss jns cmp ret repnz cld fisubrl loopne pop mov in insl dec pop cmp push lret lods in insl push cmp pop push lds xchg sub sub or push cmp sub adc scas outsl out fbld pusha and mov jmp cld out outsl pop jp repnz pmaxsw lcall out or out lods jecxz push jge push leave iret mov mov loop test insb clc movsb sbb lock sub int3 mov cmp out jne test in les cmp jbe stos mov mov lods jg cltd jne mov add pop aaa sub addr16 fucomi cwtl lret data16 mov pop in add pop lahf xchg out jmp sub int mov mov pop xor push out data16 mov out push sbb scas mov (bad) xor sub xlat cmp sub cltd pop clc cli push pop int mov mov outsb scas sub cmc out mov push out repnz enter push out jmp dec popa imul das jb std in out out sbb ret lods sbb icebp les fnstsw popf in (bad) push adc scas fs (bad) inc cmp xor out cmp xchg out cli lcall lahf out pop sub adc psubd loop inc sub pushf push (bad) (bad) jae mov fwait sbb in push out sbb repz add pop andl (bad) fadds dec int loopne leave cmp pop pushf dec jne xchg scas mov jnp repz je out test sbb xor out outsb lods out mov sub (bad) xchg ss or jne add fucomip (bad) std jecxz loopne push rcll xor aad (bad) hlt xor inc dec xlat repnz pop pop cmp negl test out (bad) pmaxsw jl fdivr jmp fildll ljmp out sub mov (bad) mov loope loop std (bad) (bad) (bad) push mov loopw ror (bad) and cmp lret xchg (bad) in jg leave lahf gs ret scas mov lea pop incb sub push add sahf insb pushf adc pop dec cmpb sub sti and jmp pop adc orl mov cld xor sub add mov insb out mov or in pop adcl add out out inc jl in mov xor nop mov xchg cmpsb or jp xchg out cmpsl sub mov nop loop sbbl jbe repnz mov test cltd test mov insb push rcll mov push data16 out mov or add mov cld xor sbb xchg jbe imulb stos mov in mov fisttp add push imul sbb mov leave (bad) jnp test xchg popa sbb and push jne (bad) jl in out and cmp mov dec pusha loope iret dec ret mov fwait add mov test dec push jmp or fnstcw daa cmpsb int out mov pop ljmp aas adc cmp clc sti adc aad into mov enter lds js test sub push adc fucomp mov inc push dec fcomi and stos dec sub popf pop shll push arpl bound iret leave inc fisub loop ret sub and out cli icebp dec push rclb mov jbe sub fsubr add shr out (bad) xor in outsb lds das (bad) cld cmpsb inc mov pop imul xor sub lcall out aaa outsb daa fwait push mov out popa loope sbb xor out sub test stos out jmp mov ret insb in dec mov iret testb (bad) cltd dec leave out sub cmc or add and xor sub rol cld data16 outsb push or fsubrl out std xor and lret pop xchg adc adc jno sub jecxz xchg dec push out pusha or mov dec push pop xor out adc or test out lods xchg rcrb in ja bound xor lock ss xchg repz mov lods and jg rorb cmp pop and das and cmp lret sbb inc popf es mov mov pop xchg inc xchg out pop in adc stos mov cwtl iret dec push cmp call inc mov dec mov fldl dec pop push ljmp sbb pop and and ja (bad) je mov sub mov ja lds dec xor jb icebp fs (bad) adc addr16 mov pop xlat or int3 pop out sbb sbb or hlt roll sahf pop stos in gs stos loope cmp repz and add cmpsl and ljmp dec cmpsb xor outsl out call inc sbb repz or and sub shl cltd mov out mov jge mov jne es push mov arpl jne and out xor clc mov sbb pushf dec leave imull cli lods mov out and sarb adc lock mov test les out adc xchg mov mov out stc push aas cld push ss dec xchg js jg ds out pop mov mov out push push rorl out jbe jnp fadd xchg cmp in mov (bad) (bad) bound pushf movntps aas pop ss inc inc adc inc (bad) das je sub sbb pop into xchg sub int3 test jb pavgb out jecxz sbb ret mov bound cwtl rcl push iret fisubl mov cmp fcomps inc xor sbb lods hlt (bad) out mov xor mov jne test or in out mov or out cmpl mov repz addr16 sarb in (bad) xor mov mov add push lcall repz mov lea sbb dec nop mov out (bad) gs fs jg dec and scas jno les mov ffreep sub out fmul sbbl jmp xchg ret js xor in insl movsb push adc out dec push jl jg movsl lahf out in out sbbl pusha pop out dec imul call mov sti push pop sub outsl cld pop mov out arpl fsubrl dec pop jg or in sarl mov jo sbb jae fsubr (bad) mov lods push jl out popa outsl out xchg lock ret (bad) cmp pop out pop mov add lret sub add mov into sbb pop xor cli jmp add inc pop pop jno push cltd out sbb addl jns fiadd (bad) xchg aas into icebp ror dec loop jno les jecxz jbe adc imul lock mov mov mov sti scas adc stos les and nop pop and clc xchg aam inc out jg shrb jo (bad) mov sub mov fnstsw shl pop fisttpl dec xchg inc stos push je test idiv xchg inc pop enter xchg sbb mov push cmp xchg mov xchg aas inc xor std mov out xchg cltd mov imul sar in in mov stc out outsb xor pop pop subl repnz insl jl inc push adc fist out jae (bad) rorb stos in das lea iret jg aaa cltd pop pop int3 jbe rorl ljmp mov ss fwait mov adc mov add insl vfmaddsub213ps fidivrl fildll jbe leave (bad) mov mov stos and add sub jmp arpl mov push push (bad) and imull (bad) xor pushf jge add ss pop out xchg test test fistpll into sub icebp jle sub cmp cmpsl sub in cli sbb out pop mov stos adc cmpsb je cmp mov jg ror push xchg and shr (bad) cmp sahf or pushf push push psubw ljmp sahf outsb xchg xor push mov and movsl mov iret aad jecxz das and cmp out insl sahf out loop cmp lret in stos push int pop out outsb xchg (bad) out cmc popf or push pop insb push mov cltd jmp (bad) mov in inc ret (bad) testl and xor out (bad) (bad) cmc push or outsl es lods sub xchg arpl sahf add out stc jecxz mov pop std sbb or pop enter mov movsl sti push pop add iret cmpsl or cltd call sbb mov mov repnz jbe ljmp mov xor movsl jg and mov jp cltd lods daa lods lods adc (bad) mov test dec ret fldz jbe mov arpl ret xor sti push sahf leave cmc and mov xchg xor das add push hlt push loope out xchg xor inc xchg flds jge fimul pop or out lahf mov (bad) movsb jb out pop pop ja hlt sub incb jae gs out out dec cmp jmp loope add push dec push mov aaa pop mov ja fucomip sub cli test pop mov cmp out std insb push out lea les pop icebp out push ret sbb popf pusha cmp lahf out movsl and mov push out jns sbb mov xchg loop movsl xchg mov out es je lret aam out ljmp or cli cs bound mov lret pop mov in out testl pop pop out fdivs bound push out jbe mov int ljmp mov sbb jecxz jmp mov xor cmp int loop mov jne (bad) test jns or mov repz out xchg jp push mov test sub out cmp addr16 out call lods push mov jbe int3 sarl push stos out ljmp out cmpsl js in sub es jl dec sti (bad) aaa mov and adc outsl mov push jae jnp imul xor lock jno add enter pusha push xchg out xor pop data16 inc add push mov cmp loope mov add aas icebp popf loop enter scas dec mov sub inc add push mov lret jmp out cmp out es scas test xchg jg mov out sub in xor out aas lock inc jg out flds add (bad) call mov test jno mov out xchg cltd (bad) out pop xor adc lret iret fisttp sbb iret jmp jg cmp inc jbe shll inc dec mov movsl mov and mov mov int3 (bad) jo shrb or ja pusha fucomip sbb adc dec rolb adc fnsave push int out add loop in mov popf xlat xchg cmp pop daa pusha xchg mov mov sub rorb loop pushf repz lods sub test bound rcrb xchg jl dec out add xchg fsubl mov mov shrb sbb shll sub xor enter rcrl and int mov in iret sub mov out stos daa and cmp cmc test aas pop pusha xchg cmp in out imul fnsave in cmpsb jp inc pmaxsw outsb sahf movsb xchg loopne js fs inc pop test daa out adc fildll imul ljmp and pop xchg mov add sub cmovo (bad) pop ret sbb ret mov inc cmpsl daa shr int3 sub and (bad) ds jb out sub push loop outsl inc scas inc fldz hlt int int3 mov stos push push out push outsb pop pop incb scas out das xlat in mov adc out ss cmp sti inc inc lds out push pop lret jl fistp pusha ljmp cmpsb out xor xor and or add sbb int push stos jbe movsl ja mov idivb inc in mov cli jp xor mov (bad) arpl mov mov insb ret xchg mov add adc mov sbb scas (bad) pop call adc imul (bad) lds mov dec sti ds addr16 shr lods sub xor bound cmp mov xchg cmc xor incb pop in xor sbbb xchg jmp inc mov loopne mov mov cwtl insb in xlat int3 xchg mov jne cmp repz lods push mov dec lret out sub pop loop cmp bound adc out sub jmp inc je,pn out pop jo fadds inc in das in clc mov (bad) mov aad mov cs lahf out dec add xchg xchg (bad) lcall xlat fcmovu shr xor cld popa (bad) mov pop insb jle test inc out arpl out roll daa out push mov (bad) cli roll ja in test mov out pop aad shlb jnp into xor iret popa decb adc jmp dec out bound or (bad) jle lock mov cwtl adc push repz lcall jns mov out jno jge xor rcr iret gs xchg dec js out xchg sub fsubl sti jecxz in outsl mov fistpll lds das out sub imul out dec push jmp shlb (bad) jo push out sbb mov xchg es out xor pop dec repnz decb out (bad) in in test aad push (bad) cmp adc nop mov (bad) clc icebp (bad) xor add sbb sub notb mov in add lret roll data16 jb cmp dec neg fucomi mov sub scas ret in inc outsb das out push sarl stos in push fs fistp lcall jl cmp (bad) push jle lods jo sbb cli test fsubl arpl mov out ljmp ret out cmc repz cwtl sub out sub imul jmp pop enter (bad) jmp outsb adc add call bound sub push jno pushf gs xchg notl dec inc out insb dec push push mov xchg inc add sahf lods loopne cmp (bad) mov mov out sbb ret out push out mov and pushf cmp (bad) into ljmp push or sub les mov outsb push out dec fist (bad) (bad) out in ds cld or stc xchg push inc jmp pop out loop and xor jb or xchg ljmp xchg add cmp aam (bad) pop xor testb stos add out lret sbb fwait shrl pop movsl getsec ljmp out sub imul or inc ljmp stos cmp sti push and scas xchg sub cmp xor je xor xor xor sbb ret test in pop cmp popa xchg scas jg out addr16 inc lcall xchg flds push push pusha sbb dec sahf dec sbb sub (bad) out cli scas xchg dec ja cmpsb out xor or lock dec xchg jae cmpl jnp adcb in jecxz mov push aas xor lock jb out sbb test xor in out ljmp mov push pop pop into mov cmp pop pop inc scas bnd out pusha repz jg jbe jno packuswb in inc sti push out add xor pop loope and or gs in cmp in leave fisttpll jns pop sbbl iret pop mov insb rorl (bad) nop mov xor into sbb call out mov pop js iret scas lock mov movsb mov mov mov mov sub mov pop fs addr16 fsubrl cmc push rcl decb ret hlt lods xor out and mov pop daa mov dec push std out rol in pop pop idiv aaa sbb mov mov jae out mov (bad) push out ljmp push pop dec pop or jbe dec and outsl bsf lods fisttp das out xchg cmpsl jae xchg mov dec arpl add sbb cmc jmp out xchg xor inc push aam int mov pop cmpsb pop and pop pop cmp mov movsl (bad) push cmpsl fucomip and xchg sti jbe adc and out dec (bad) in daa mov imul (bad) mov imul decb bound ficom or out dec mov mov (bad) lock pop jnp jp mov push push dec mov mov add icebp out out mov lds leave pop nop (bad) in (bad) mov out shl sbbl xchg imul std mov out pop jp (bad) (bad) mov dec push jbe,pn inc and loop push mov out push int3 sub (bad) out pop and fwait (bad) jo rorb jp (bad) ja push sbb out push adc out fucomi fidiv cmc test in out outsb roll push pop rcrb adc cmp dec push jb in popf jp push jno out dec lret cmp push cmp xchg cld (bad) scas mov push divb out cli outsb out fisttp xor push pop and repnz loop imul movsl adc jbe or mov ror shrl jne pop cmp ret fidiv pop es stos ret sbb jno mov mov xchg xor mov aad aaa call int out enter inc mov scas out rcrl lea add movsb dec nop out ret rorl xchg out xor pop add jae dec lea mov out aad aam jmp pop pop loope inc push (bad) in sbb movsl cmpsl cmp out lret roll ljmp pop and jae stos pop in mov jno push out cmp mov or roll dec ret out add je cmp xchg inc insb sbb push out shlb push imul jl fldl xor mov (bad) test pop out lahf out xor cld pop std ljmp dec push jno sub or mov push mov dec aas jl out (bad) hlt jecxz cmp add es jbe fidivr fadd mov push pop inc stos pusha lret mov out sub je dec clc ret subl add (bad) out es imull push adc mov dec adc ret out sub cmp out xlat popf lds aam lret inc and (bad) out xor jg loop paddd ja sbb out mov andl insl adc jecxz loope out dec mov test sbbl cmc rcrb out xchg insl mov fistpl sub add jmp nop mov jecxz sbb fld jle jmp inc iret xchg (bad) ljmp out lods add sahf out jmp fist (bad) shr test dec pusha jp cli mov lock iret insl fistl les out push movsb add lcall mov jg outsl stos xchg int or mov inc or add lods push mov (bad) out cwtl icebp mov adc and add insl lret lea notl add push pop mov cmp out xchg pop das insb push xchg pop push pop pusha adc jmp out xchg lock ss push rcrb mov out pusha js cs out dec pop jae fsubrs daa out mov out cli dec jnp add addr16 sub bound mov inc inc data16 iret (bad) xor push (bad) pop subl adc push hlt jmp xor in repz push inc xor addr16 movsl pop cmp loop fwait out mov jl inc std or stos icebp test pop flds pop mov hlt pop adc xchg and adc cmp fs sti out outsb xchg inc fwait pop push cltd mov addr16 jbe ja or out add ds out scas dec jo adc nop inc out pushf mov mull sub jmp jo (bad) cs inc ja out or out xor arpl sub xor jg aam or sarl out mov lret pop (bad) out outsb loopne and or dec sbb pop add std aam mov out aas jmp push push loope mov repz hlt mov pop sbb out xor jne jmp dec inc outsl cwtl cmc out stc xchg xchg test mov fcomps es mov dec cld jmp (bad) out gs mov lods iret in out lret xor dec mov inc and in xchg fbstp outsb mov out inc mov nop test mov dec fnop pop sarb xlat pop (bad) std sub pushf push xchg rcl mov adc clc ret push in add push ss fsts call iret fstpl mov lret bts inc aam jmp dec add subb sti push and inc imul mov out lret xor mov pop out cmp test fcompl into pop daa rorb fiaddl out jg addb push ret mov sti in (bad) (bad) xchg push mov lock push out mov jge sbb xchg shll out aad cmp pop fdivrs or mov adc push fucomp leave aam shlb pop icebp or out lea mov pusha aad xchg out mov cmp mov lea jns icebp js cltd xor adc stos ffreep mov push rolb fidivrl pusha mov sbb sub add fiadd xchg cmp out (bad) push out gs dec xchg cli out loope arpl pop inc jb sub push ja (bad) repz fnstsw jp mov out xor sbb pop sbb push or leave fimul out jecxz jmp es imul mov sbb fnstenv loope loope jbe test cmp ds sbb adc int cmpl pop xor out dec inc leave cmc imul cmp insb in and icebp xor sbb fstps aas jnp clc lock pusha sub push addl xchg (bad) xor fadds into or jge lea (bad) fs pop int3 pop aad jb dec ret in testb xor pushf cli daa push pop mov outsb test sahf jmp mov aas sbbl mov or out pop pop inc div stos imul loopne cs cld pop imul or mov out inc stos ljmp (bad) je rolb pop mov cmp pop jne aad xor dec sahf cli out (bad) sub sbb out mov push fdivrs push fs out (bad) mov cmpsl inc dec out pop dec jecxz lods adc adc add mov jmp ljmp inc xor out add mov (bad) repz pop dec pop jo out stos pushw btc das pop iret lcall mov ret and mov mov push pop out jno (bad) cmp lret pop pusha cmp sub and jne (bad) cmpsb incb jp xchg jns sahf popf lods out cld inc out mov push jbe mov sahf push dec ljmp xor push roll and fwait mov lret arpl pop cld or or loopne sbb cld fsubr arpl int3 jg push add xchg outsl and dec pop xor lea sbb pop push or add pop out mov leave fcmovnu mov nop les es mov dec dec out aam mov push out pop in enter sub ficoml sarl xor std iret cmc mov xchg push rcr pop mov inc test ds out jno popa sub push sub inc movsl lahf mov dec out lea adc out divl fucomp push fbld in cmpsb out dec gs xor lcall add push pushf and cmp scas inc jp out and dec sti pop bound and jae out cmc mov jnp pop test jge (bad) lods add fwait (bad) je sub jnp pop loop xor out aaa ret out mov out sub outsl nop jb jl ret pusha pop pop enter cwtl cli cmc push out div jp shl mov fild sub dec or or (bad) and or mov sbb sti call mov mov out fistpll fsubl mov push out adc inc push sbb nop out js lods jmp cmpsl or out xchg push mov xor fisubr push inc cmpsb cmp out out (bad) adc inc pop out or test outsb lret popf adc into out mov mov dec out ss jecxz mov and inc add pop ljmp shrb cs or mov jns (bad) out (bad) (bad) insl test sub dec dec pop je sub pop out adc into dec jne mov or (bad) lock in pop jb std sbb mov dec cmpsb inc in fwait jmp pop mov rcr out add jne push xchg loope int es out outsl push insb js cmp adc pop jnp cs adc leave out pop popa clc in sahf xchg lods out mov mov int3 out xorb jbe mov out bswap or rcrl les jp lods and pop cld ret pop shr inc (bad) dec adc (bad) mov mov push out test ss fbstp fnstenv push cmpsl fsubl (bad) fucomi lcall inc test int3 scas jnp xor out mov lds out pop inc dec ljmp xchg push jge popa mov add pop fsub inc push fistpl jno mov out mov out xor repz imul outsb push fcompl daa and std pop mov js nop jns (bad) xchg sub sub outsl xchg jmp movsl mov sbb out add popa inc mov insb inc iret sbb int push dec std xlat daa mov lods out push inc sbb xorb aad pop ljmp movhps daa add (bad) mov xchg inc cs es aam bound pop mov pop cwtl sbb in sub mov decb scas int3 rdmsr test sub movsb jg sbb repz pop mov push jns shll cld mov out dec es jns jecxz notl fs ret and lods cli pop pop fbstp es call test jne jl mov mov cmp and mov xor out popa xor in out leave inc fldcw loope psubsb mov fsubrl decl dec call jl out out push outsl test jbe sbb out ret stos (bad) sti test mov cltd outsb out dec push jecxz pop js std mov in xlat aad out aam cmp add sub pop sub mov xchg scas (bad) sub pop stc mov fnstsw repz out in loopne cmc xorl (bad) fistl pop push or lods arpl fwait xor into popa (bad) fsubrp loop mov out fcomi pop test push iret add sub fidiv xor pop sarb or outsl pop sbb xor negb cmp jo mov push jb fwait insb insl inc dec int out loop loope adc sbb jae xor dec in in aad out jne mov loope hlt movsb popa inc (bad) ds out or xchg pop push pop les jmp cmp inc pushf xchg adc data16 cmpsb adc out ret inc in movsb pop sti sbb ds and ljmp test or loop sbb push mov dec pop jge out mov sbb out ja jbe mov stos std mov stos mov mov pop add mov (bad) push lret clc cmp test cs out jp,pt sbb fs cmp jle xor cmp (bad) xlat and out jno les call loopne sub std sbb out adcb cmp inc stos pop out out jle cmp aad out jge (bad) bound sar add push mov fnop mov sbb mov and leave out rcll cmp aad sbbl dec mov dec add popa cmp outsb push shlb add test cmpsl mov js pushf (bad) (bad) jmp xchg jmp stos insb dec mov pop jecxz mov pushf pop clc fistp int pop xchg sahf xchg ja out (bad) aam fmuls mov out and inc add cmovbe and fadd out ss lcall and lret test cli out jae ret ja cmp sub loopne jg inc bound ja repz or jl or in dec scas jge inc out xchg out fisubr call js sbb aad out ret movsl push push loop loopne adc out fwait lahf shr sbb push ret gs push jecxz xchg mov xor cmpsb xchg xchg jmp lock xor test dec (bad) (bad) xchg insb aas inc ficompl addr16 dec lret ljmp fdivrl jp insl push out and fwait mov out dec iret insl xchg out mov aas loopne xor add xchg cmp push adcl insb clc mov sahf addr16 dec aam sahf out lds jecxz mov mov insl adc push push scas fimull rorl iret fsubr mov mov mov xchg outsl mov (bad) mov pop push jae dec pop imul out js jl call jbe jecxz adc out aaa xor pushf fucomp push fs rorb adc (bad) mov rdtsc repnz fild addr16 mov insl lcall jno imul jmp aaa (bad) lret adc pop loopne addr16 jne pop ret xlat inc mov out movsl push adc adc jecxz mov out mov jge sub jecxz cmp sti mov fwait int cmp out push mov dec pop iret scas daa (bad) jle out sbb loopne mov lds and xchg (bad) xlat iret ljmp (bad) lret aad mov sub ds insl out out push adc jns ret (bad) mov xor arpl loop and mov out movsl or loope sbb mov loop in adc loopne dec xor out inc add mov or pop cltd sbb sub in mov bnd (bad) nop andl push stos mov sarl outsl inc add bound and loope pop sbb imul cs dec sub fucomp sbb into aad xchg fdivs repnz fs mov (bad) aas mov ljmp data16 mov xchg iret inc callw shrb adc or iret scas fmul gs rcll out lcall gs sub call loope outsb xorb ljmp jge fstpt ljmp outsl mov out pop stos lcall xor inc dec mov scas mov (bad) dec jge jo push sub xchg in std lods mov mov out test jno jbe xchg out mov cld cmp out test push jae shlb mov lods ficom je into dec pop sbb aas in divl (bad) adc insl or mov (bad) popa movsl out xor imul std jl dec mov cmp das push ja out push scas xor jg lods mov in in cmp (bad) or stos std inc in sub dec inc imul push bound jp push mov jno mov mov cli mov out adcl dec add jl lret out lcall shlb sub push pop movsb jle rcl jecxz imul push jb scas aaa inc out test out js fwait xchg hlt inc push pop movsb loop pop (bad) clc mov mov dec je test fwait mov jg xor imul push mov push lea dec add (bad) lret fildll xor jle cld jge out ss mov out dec rcrl dec ret xchg ljmp inc mov mov insl fs lods fbld mov ljmp mov mov (bad) dec pop jb jns cmpsb mov push pop mov out add iret (bad) fsub sub clc in jle mov inc jmp jmp lcall insb sub inc mov ljmp push outsb pop out sbb sbb into out ret jbe shr data16 pop out inc fs and add aas pop loop js out sub inc mov (bad) test xchg es mulb aaa imul out cli loope mov out outsb jle popa adc (bad) jne xchg xorl inc sub xor push out sub mov les pop (bad) jno inc ror add out or sub and fdivrs cmpsb xorl js outsb sub mul jg cmpsl repnz xchg pop push in mov lret das fbstp into mov out pop cmp push mov out add outsb sub pushf fstps jo jno adc adc pop push mov (bad) pop (bad) icebp popf push in mov es les cmp rcrl out scas jae inc push xor jae ret out sbb or lcall adc jmp jmp mov mov mov mov pop jmp mov adc and test xchg out aam insb sbb ljmp dec jns cwtl push div call mov and push lcall add xor ret out outsl pop jecxz inc adc ds sbb test fwait out inc mov movsb pop push jecxz (bad) jno mov sti lcall jmp (bad) and (bad) jmp dec dec mov (bad) cmp lods iret repz inc push in ud2 lods and jo cwtl in or sub mov (bad) addr16 cmp (bad) imulb pop incb pop lahf rolb out test and es test xor jmp dec (bad) enter ja sbb pop test imul decl sub mov pop jbe mov jno dec ljmp cmp mov out jg dec mov out (bad) aas cmp lcall mov adc test jge out dec pop (bad) nop or xor mov inc sbbb in out (bad) inc repz mov cli or ret fcompl test imul nop xor mov out mov jg xchg adc xorl repz out fidivr mov sarb out push fsin lcall imul adc in sub or rcrl in mov push incl jecxz push dec jae push out rcrl aam sbb out call sub jno (bad) sub bound cmpsb rclb in xor out add out dec andl lods add repz out dec pop pop cmp mov sub rcrl lock push bound inc test sub add aam push sub test or out add cltd jmp lahf pop shr push mov (bad) add mov test pop xchg out cmpsb std inc hlt jmp and enter add sti mov rorb (bad) push outsl sbb inc adc (bad) insb sub int lcall aaa repnz cmp cmpsl in je sub push icebp sub pop lods out cmp dec inc dec out cmpsb aam pop fs cltd and inc loopne daa fistp in pop lods scas shr dec bound icebp ficomp popa cmp shrl (bad) xor (bad) out dec cmp mov test out mov rolb out pop lock mov mov aad popa pop lahf mov out cmp xchg inc in out (bad) sbb adc scas sti insb bound dec fsubl loopne jle mov cmp mov adc xorl out push (bad) or cld out mov inc adc movb and dec out cmp push jne adc mov mov push mov jnp inc mov out dec xor mov pop push xchg decb or adc in ja mov or mov cld stc pusha loope out xor sub out imul cmpsb out mov jmp int xchg sbb out push sbb mov bound cmp ljmp mov fsubrp out aad mov add js pop xor mov ret ret xchg mov pop and popf xor push out stos ffreep xchg or iret es cwtl jg,pt pop mov adc sub (bad) out and loop (bad) jmp rolb out sbb iret (bad) out jne icebp jb jno xor mov in lret lods and orl sti adc and push inc (bad) jmp or out icebp (bad) stos mov in jbe out je inc adc (bad) xor sahf cmp jle stc out sarb icebp (bad) cmc and mov add out sub sbb mov clc xchg out inc xlat cwtl cmpsl pop (bad) into in out (bad) int3 mov jle add loopne in es jmp je gs loope iret in dec insb and sbb dec jae out rol test mov xchg push adc add out pushf addr16 push sub jp jecxz sar mov pmaxsw mov push push inc add out fdivl inc pusha jp pop repnz ret in xchg push imul pop jb sti in test out dec aam rorl repnz sbb sub outsl xchg sub pusha out insb adc stos and xor cwtl jmp xorl add cltd fldz xchg fucom (bad) xchg faddl out cwtl aaa subb jnp das in cmp pop mov mov fdivrs out addr16 imul (bad) stc int adc ljmp push popl mov imul call jae (bad) ja nop pop daa cltd inc lods push mov out (bad) popf inc fcomi inc stc outsb out sbb (bad) ds (bad) mov out out adc mov popa mov xor fs inc int3 inc lods inc (bad) cld out xlat fwait xor and call pusha aaa xor mov mov dec insl insl mov (bad) loop ljmp inc inc fsubrs lods xchg pop or jbe loope imul sub mov sub cmc incb or dec dec insb pop lock pop (bad) mov xchg xor fcmovu shl (bad) cmpl call mov out addr16 pop sbb and inc aad (bad) jmp je es in cmc lods std mov ret ss aas (bad) mov inc into out vpcomud mov mov mov jle fisttpll sbb pop or jmp arpl lcall pop xor popf mov (bad) stos xor pop pop mov addl loopew dec pop cmp add out mov dec push add test mov jecxz outsb jbe out out adc mov aam fsub data16 cwtl js iret addps jne pop enter bound and sti mov sub out imul add jp out test xchg adc icebp clc mov dec jl mov out cmp cmp inc sbb pushf lods fwait out rcll mov sub jbe out sarl jnp fidiv test arpl sarb (bad) sub aad mov jle outsl js sub pop xor cmp out or (bad) pop cli lea sbb iret mov cmpsl push mov adc cmp out inc imul out cmp adc mov es jne sahf in xchg dec out fmull movsb ds test push loopne dec out add inc insl lcall mov lods in clc icebp or orl dec cwtl pop mov test inc in (bad) cmp (bad) mov mov pop repnz movsb ror fwait mov add inc and mov add out rorb std (bad) out and lods in pusha test js push (bad) jecxz xchg push pusha fbstp pop idivb inc xchg pop xchg enter in popa dec mov rcrl mov mov mov adcl mov add sbb in cld mov sbb (bad) xor out pop xor mov out test inc xor inc sub sub mov ljmp out push cmpsb xchg cmp dec fidivrl inc fwait sarb fcompl xor mov and mov pop les sub insl (bad) push cmp push inc xlat dec mov mov xchg in call inc shrb out or mov dec out mov adc icebp sahf add dec dec in popf out call adc adc arpl mov mov stos jae push xchg push (bad) mov sti mov loop cmp lods dec push test addr16 dec pop cmp jns pop lcall add ljmp sbb out clc pushf ret in adc loopne int out xchg xchg mov int cltd lcall cmpl pop adc out sti jns push lahf daa gs out xor push and mov nop mov or arpl sbb sub mov jmp mov out sbb cmpsl jnp cmp out adc or stos dec decl and out loope push mov aam out push loopne dec bound movsl mov cwtl or into push out push add insb out bound mov (bad) mov pushf cmp subb push push (bad) out or out cltd (bad) sub out mov add or ss and insb mov adc ret icebp xchg shl jp scas or fwait (bad) in mov das cmp sub lea imul daa popa mov stos mov inc sbb pop subl shlb rcll out mov not (bad) out jl in sub jne (bad) loope adc and (bad) adc out push xchg push clc and dec mov push jecxz push int pop jecxz in js add imul sub (bad) pop leave pop in fistp or adc push lock and pop pop push cmovo shr xor mov and ret jp xchg sub (bad) cmp mov mov push out je sub pop push fist daa hlt lea into push rorb jns mov stc ljmp pop sti rcrl jns ljmp adc cld lahf out test xchg out jl inc mov out jno insl jne popa sbb js add cmp (bad) mov adcl adc stos out inc (bad) mov jl adc dec push xchg pop and mov and jl sub lock aaa cmp test shll out push rcll out test lahf clc xchg out jle dec jmp in pop fist cmp cmp cli dec pop mov push sbb pop out inc loope (bad) lds sahf insb das adc or pop lret xchg push testl hlt push (bad) mov fadds xor jo popa (bad) aam inc push in jle sbb test sbb iret les je cld pop ficom sub (bad) lahf xchg cmc xor insb mov cli mov loope clc xchg sbb out or fucomp inc pop fucomip lods cmp faddl cmc sarb (bad) sbb jecxz fiadd push ja lods into xlat out mov jnp or ror movsl xchg adc sarb push loop dec stc in mov out jbe sbb mov xchg rcll lods pushf in xor sbb test fwait pop shr out gs fmulp cmp fmul nop scas add or shr pop xlat dec dec dec mov cltd push push iret xchg cmpsl mov fsubrs cmc fucom arpl dec xchg dec out fdivr pop clc and fs fsubrs or dec aad test leave adc nop dec out fwait (bad) ret scas xchg in fmuls fdivrl push mov nop test sarb pop mov das out dec jne in inc pop jmp out pop (bad) and into add out ljmp add cwtl inc test xchg or mov jne ss cmp or loope pop jns pop (bad) (bad) jp mul (bad) cmp xor mov mov mov inc jb sub data16 scas adc mov in mov fiadd xchg xchg scas call sar cmp jmp (bad) pop in pop jecxz pop shrb sbb inc mov (bad) std mov stc push mov jp pop loopne repnz mov rorb inc cs in out es outsb in test cmpsl push pop int dec push ljmp daa lock out sbb sbb lea (bad) lret nop mov or scas sub cld out scas ficoml bound out mov je mov test in jae ret jbe and lds test call mov stos mov (bad) out cltd or xchg (bad) jmp pop out loopne fwait sub dec adc sub jecxz mov test test mov popl ljmp fucom or out and cmpsb xor sbb push fsubr mov iret pop loop or jp loop in rolb iret push dec inc js adc and (bad) outsb out mov inc and dec xlat lock pop ljmp and out popf or (bad) jb lods out sbb push jae in inc out cmp pop pop repnz push (bad) cmp mov xchg out jecxz xor and fildll push pop in fwait (bad) jnp and jmp push out test ljmpw out and and es inc shl loop pop out adc out pop pop stc adc (bad) mov xchg jmp pop out sub sub insb in push out test loop mov jns add push inc cltd mov clc ljmp aaa mov scas or sub mov aas mov jmp out mov jne (bad) out cs mov (bad) (bad) mov jge cmp (bad) mov and sbb inc push xor out and add pop mov addr16 ss ret repnz dec xchg jne out jecxz push mov sahf mov loop frstor dec aas out dec mov sbb into push out jbe dec and pop out out (bad) pop leave sbb sub repnz out pop repz loop xchg (bad) push push out (bad) std push jge mov xor pop out out mov js sarb cli (bad) or push in inc push cld jmp xchg leave es xchg cmpb adc dec notb jge pop roll ljmp sub mov mov mov andl out bound add sbb rcrl cltd mov insb nop imul aas dec dec out mov scas jecxz xchg xchg mov lods lock mov nop pop mov hlt repz stos icebp lret fsts sbb or out dec cld or mov mov icebp std (bad) jo lcall leave add add pop mov mov dec loope xor mov pmaxsw fisttp fcoml (bad) adc fs nop js sbb push jo iret rep lds ljmp insl and mov cmpsb ss push jo outsl inc jmp pop loop rclb or mulb and das push js jecxz cmp push mov nop gs mov cmp inc out lods loopne call out sbb xchg sub (bad) fild jmp cli jae lods insb pop adc dec cmp fisubrl out pop (bad) sbb adc inc mov das cmc xchg (bad) std in out pop pop push movsl push and inc cmp (bad) adc out out in pop add jno pop push out cld jns and mov or inc pop repnz mov and mov cmc cmp jl mov lods cmpl loop addr16 out scas mov xor out (bad) lcall out pop aaa jns ds jp push mov ror xchg out sbb je rcrl mov arpl jae push nop add and enter mov ds mov jo (bad) movsb add jbe lcall out or adc pop sbb nop mov repnz push bswap es cmp jno sub lret and pop out lods xchg xchg addr16 sbb mov ds pusha add mov fisttp sarl sti aam push pop insb mov loopne,pn out cltd or js mov dec fdivs sbb mov inc out jb sub mov lcall cld ja sub enter xchg pop aam push push xchg cmc lock in aas out jno shlb lret (bad) aam adc mov (bad) mov mov in into insl sbb cmpsb mov cmp pop out mov int3 mov rolb fldt jb push mov pop add rcrb ja mov push fidivl imul pop xchg lods cld add out or and out das mov into xchg out jmp sub out add xchg in or pushf (bad) out test cmp clc jp sub fcmovnbe xchg push add je xlat inc test jae push cmp dec ss jno loop aad cmpsb inc (bad) mov cld mov out push mov ds ljmp lcall bound sub incl out cmpsl jo pop and lock sub gs xor out xchg cli or outsl jbe ljmp inc dec dec into mov fsubs lods push jge ret int3 fild out out dec jmp mov push and pop insb and cmp nop jg jmp pop xchg mov pop xor or pushl mov loop xlat or out add inc cmp sarl out pop movsb cltd adcl std sub (bad) in jle insb xchg stos pop and adc pop xor ljmp inc rorb pop mov inc das loope inc and flds dec stos mov iret mov popf (bad) and shr pop loopne test out rcl dec and cmpsl into sub mov (bad) lahf loop sub fucomip int3 stc adc add xor fcoml fnstenv dec cltd out dec imul push lahf xchg cmpsb sub out mov fucom or cmc in push xor xchg test out mov bswap test jnp out sbb push fisubr mov (bad) out xchg push push mov and push dec out jecxz dec rcrl xor lock into and loope leave push out pop sbb jecxz or lock push shlb data16 mov jmp mov loop movsl repz sbb fdivl mov mov dec cs mov and sub pop or sti push (bad) jmp lock xchg or push incb lds push out mov enter mov das jne negl out adc push jno imul out enter lods sarb pop pushf addb pop insb lret out and out mov cmp mov xor js adc inc out jmp in (bad) sbb dec pop gs sub outsl out jmp xchg out in sbb jno mov call js popa out fcompl stc mov out sahf orb push sub dec or in jle (bad) mov out mov jbe ja (bad) pop sbb push push mov (bad) f2xm1 push push cmp rclb dec (bad) mov cld sahf outsl pop imul mov add (bad) cli jmp cmpl (bad) jne and out frstor test sub (bad) cltd or pop fcmovnb adc add jbe out mov movsl (bad) ljmp test std insl inc rcll pop and inc mov lahf xor pop cli test push outsb push mov std in addr16 mov data16 leave sbb push dec jmp out loopne sub mov or dec add jb mov mov cltd fisttp or pop xchg sub cwtl das mov out (bad) mov xor out arpl jne push adc xchg pop shrb aad dec jmp cmp xor (bad) jo adc aas mov sbb in arpl pop ja xor xor rorl leave mov lcall lret xor lods mov add loop shll fldl mov cmp add iret je ljmp lcall ds js adc jne out out shrl fucomip mov imul adc fwait or add xchg mov push icebp iret dec xor or (bad) cld jl leave or cmp mov lret out inc cmpsl pop xor das rcll (bad) (bad) fcoml in (bad) mov out in mov in out lret jge mov push pop out repz pop cmp mov out add sub or lods pop and mov out arpl aam psubusb lods movsb arpl stc lahf xchg xchg cs gs mov iret inc in ret lret mov (bad) call or out pushl loop out push add or (bad) push fsubrp daa arpl xchg and out out sbb mov jmp in (bad) lods cmp daa pop pop nop push dec mov arpl xchg jmp sub mov mov and loope pop cmp dec (bad) out adc jge orl dec popf insl in and lods jb movsb (bad) lret lods cs mov and fsubl inc aam in rcr leave int push out push addl out lock ljmp ret leave outsb push ljmp out stos cmp loop icebp or lods (bad) out leave xchg cli out adc mov psubsw push movsb jns jmp out ret adc out jae in sbb orl mov mov scas (bad) sub notb sub aas push jns mov jecxz pop call ja in out inc mov cltd out inc jno jp xor xchg jecxz out pop movsb popa or lcall dec jge (bad) icebp scas pop out or mov push push test or pop stc pop paddw fcmovnbe jmp push out pop pop imul add into adc rcl pop inc fild lock or mov pop pop popa inc loope cltd xchg fstpt sub out cli and mov add negl out inc and mov movsbl imul in adc jbe cmpsb lock ret sub push jne mov sbb cmp xchg out icebp xlat hlt sti in ss dec xor fimull out xor dec cltd lods out adc push xchg aam scas aas cmc rclb push ljmp push insl lock dec push call or les xchg jp test imul push mov ljmp mov xchg pop push in cmp in ljmp rclb ljmp aas iret push movsb shr popf pop push in arpl daa pop lock inc out adc jmp pop fbstp insl xor and mov push cmpsl out and (bad) or out and lret in pop xor and dec out in pushf jne add bswap mov xor fisubl mov sub sub pop out hlt inc pop cmp mov (bad) out int3 in add inc std ja dec push (bad) addr16 push lds outsl in int out movl cmc push mov imul int3 adc push lret out popf sub dec lret loop jge sub ret and pop insl out mov das xor (bad) sub fwait das adc imul (bad) jo sbb fucomi or jge xor inc cwtl push jne sahf in push mov jns add add out ljmp iret lea xor cmp jp leave out gs fistpll out cmpsl ds (bad) out and loopne add xor push push out out mov lods sbb out dec inc mov mov xchg inc stos (bad) push adc movsb xchg mov shlb out jp sarl clc ret out add ss out (bad) cmp shrb in fist dec outsl icebp lock popa pop test pop xchg bnd mov imul or cmp xor pop je (bad) mov aas jbe adc out test pushf dec sbb push inc push bound in mov mov xchg data16 movsb sbb movsl ret outsb mov (bad) (bad) hlt out stc jne (bad) jbe test aad mov lret sbb ror cmp mov fidivr adc xlat fildl in hlt jecxz rol sub out xchg sbb mov loope cmp pushf cmc ret sarb out sbb or sbb lods and or inc in mov mov ljmp sbb lods pop or in mov (bad) cli or lods nop cltd out and pop sbb and (bad) (bad) scas enter xor dec (bad) out out mov fucomp lea cmp xchg imul je (bad) sti push mov push sub pusha pop cmc mov mov mov add adc imul data16 loope jmp out testb mov lahf rcrl jg and dec jl in loop out insl jp and dec or mov push sbb loop sub out add jl ljmp popa sbb js jmp shlb ret out push shl mov es outsb call (bad) imul jo or push mov mov out mov ret sti test xchg inc out mov jb push cs push data16 aas jnp pop cmp cwtl xchg lock mov out stos scas mov out fsubrs stc hlt push pop push mov mov pop fisubr fs adc sub out repnz dec pop inc fwait fs out adc insb xchg and mulb dec repnz mov adc add mov xor mov scas or mov (bad) ljmp push or ret loop mov popa pop call lret sbb push fs cld push dec xor jecxz movsl lahf mov in fisub cmpsb adc mov adc pop loop mov out das ljmp xchg out xor sub mov test sub xlat jl dec out (bad) or push scas daa addr16 out xor ret inc imull xor insl push out stos dec jp mov cmp push cmc jg,pn mov fsubrp lods xchg pop ja je push out inc out jge sub xor dec fs leave imul out dec outsb pop scas dec push xchg imul inc mov push jle (bad) out int3 testb and repnz cmp loopne out pop cmp (bad) fistp loopne xchg aaa pop out call lds fnstenv out sub mov mov add fwait pop cld or adc mov or xor fstpl or jbe and jle mov es pop out enter negb jbe ja or mov scas cs adc push push repnz cmc cmpsb mov (bad) decb ljmp (bad) out dec mov aaa xor fwait cli mov in jae push push xchg sbb scas dec repz fcmovu (bad) xchg loope pushf xchg inc loop mov je aas out push popf repz cmp jnp sti and fwait sub ds lcall cs (bad) negb mov pushf and call loope xchg inc and mov rclb movsb in lret mov and push (bad) pop out ja aad imul out push mov cmc daa xchg (bad) out sbb jmp jae push das out icebp repnz (bad) in dec jl out movsb int3 test call leave lods lea ljmp out jl repnz mov addr16 sub aaa das jae mov xor jle cmc gs cld inc dec (bad) out cmp movsl sbb and outsl or out push sahf fs scas cs out aas ljmp out repnz pop addr16 ficom xchg cmp dec popa adc (bad) lods (bad) push out lar loopne mov xchg loopne aam out in adc into mov ja mov pop mov or scas cld insb jnp xchg test add enter xor adc mov pop pop sub fcompl fwait pop imul in pop pop out repz call out and xchg subl out or fistl fcmovb xor fnop (bad) cmp dec bound push mov pop mov xor xorl (bad) (bad) lret mov cltd in out decl push imul mov cmp xchg or mov inc adc xchg roll loope scas or cmp (bad) pop (bad) mov out rcr std test rorb out pop pop aas out pop out int3 or and iret push lds add dec or ljmp ja cmp and pop out push lahf outsl push push sar xchg out stc mov dec mov sub sub icebp into fs push test in out (bad) xchg xchg pushf mov inc jbe inc adc mov sahf or out das and out mov mov cmp push leave lahf ljmp testl xchg ds add pop mov ficomp xor call outsb pop inc (bad) stc dec punpcklwd (bad) pop movsb imul sbb xchg out enter mov sub push and inc out xchg out mov iret bsf je cld int3 adc loopne mov jmp push cli out out dec aad (bad) lea out xor pop jl shl dec out lock adc fwait lea xor jl rolb in lea out jb fldcw js stos ret out loop sbb and adc pop xacquire xchg out mov enter and cmc xor test cmp mov out hlt xchg lods mov push dec sti out vcvttpd2dq jmp outsl cmp pop das inc cmp imul out sahf xchg or loopne xchg out push xchg jl insl out adc inc fidivr sbb push inc xchg rorb int3 xor out (bad) sbbl subl insl mov into pop sahf loop stos dec push out enter (bad) mov out cmp mov or out jo or imul fs xchg adc icebp push cld leave pop dec add rep insb cmp inc and jmp shr into lahf arpl movsb aaa hlt jns rolb and push (bad) data16 test pop out pop enter mov lahf (bad) popf jmp or cmc push fbld jecxz mov dec push add inc cltd popf adc out movb xchg out lret mov sbb cmpb in sub shrb add and jmp fisttpll sarb adc lret cmpsb rol fnstcw cmp jle subb lcall ja jle jle push and lar pop in fldlg2 fwait adc fnstenv jecxz into add fwait sub cld cwtl or in fcoml lahf adc aad jg pop mov pop outsb popa outsl cmpsb mov imul (bad) mov int sarb xor adc icebp pop and mov out push orl ret sbb ljmp out or jbe cli addr16 push imul imul or out push mov in jecxz push dec pop sbb mov jae cld bound push xor jb mov cmp out pusha xlat nop mov mov icebp enter into sub int loopne hlt mov mul push cltd or and xchg and gs push pop push shr jb notb out fildll xchg hlt out mov insl rclb cmp out pop lock ret out jecxz popa test lds xor jle pop jne and xchg in pop xchg loop jecxz pop stc fnop (bad) push lahf in fs iret inc dec das rclb out sub ljmp out cmp cwtl stos (bad) jo mov fistpl mov movsb call test dec and jle mov jecxz cmp xchg pop out stos lea inc jg out jno pusha sub jp mov cmc out mov into nop jb pop push (bad) movsb dec rol (bad) outsl pop ret mov pop lahf iret pop int3 mov in (bad) cmp mov out and ja out cmc xchg imul out mov xor add cmp mov imul out inc lret lea out test andb cmc repz push xchg inc pop pop cld out or push arpl (bad) and sti ljmp int out sub jl popa mov jae and (bad) hlt out xchg pop mov lcall insl add aas rcrb lret out fisttp inc in pop sti lahf enter out fs scas out mov and pop pop xor jge fdivrl jg shrb pop sbb in inc out popf pop ja and push out loopne dec sti paddsb jl cld push bound arpl pop int3 pop dec scas stos out or lcall inc arpl sub and cmp jmp pop pusha mov adc mov nop imul dec out mov in sbb test lret xor push rcrb jmp loopne test adc fsubrs iret push cmp jg cmpsl stc xchg out cs and xor decb lret mov (bad) or push in repz cwtl cltd fnop hlt pop adc adc repnz jecxz xor xor insl js insl cmp mov fistl xor loop xchg pop imul dec sbb xor arpl jno adc jecxz cs out pop add daa inc push lods sub test xchg out pop jbe cli movsl mov push adcl out sbbb imul dec and jno inc pop rcrb or ret pusha iret loope inc push push sub ds mov test pop (bad) mov inc xchg and pop rcll lock push push out dec xchg fmulp and clc mov (bad) lret jle in push loopne fwait inc dec fmul dec inc jg jbe clc fs out shlb loop jg insl sub lock scas incl xlat push inc in fs lret mov scas repz inc stos dec out cwtl (bad) xor xchg xchg popf jl outsb push jl jmp insb out jne repnz adc data16 aam stos mov and andb int3 dec fs xchg inc out cmp loope je inc inc mov pushf pop xor sahf sub pop std push int3 data16 jno or mov cwtl cmp mov in shrb in push or lea out or push mov out subb test pop pop stos jns repz es (bad) out outsb cmp (bad) and pusha sbb inc adc mov add add jns xchg sub (bad) cmc inc mov out pop data16 shrb lds mov pop mov in fs sub xor dec adc stos (bad) dec into scas adc sub lcall bound jmp add fimul cmc shr mov push xchg jmp sub mov inc out cli rorl jle adc pop or pusha add mov in mov cmpsb sub loop xchg test clc out xor and repz sbb scas cli leave lods push (bad) out out pop push repnz out cmp xor test out aam addr16 dec xor out ret stos xor out insb pop rolw movsb not add out sbb iret lret adc mov lock addr16 out mov iret iret xchg cmp mov outsl sub (bad) je imul xchg xlat in stos cmpsb fucomip push das repnz pop jmp pop out xchg aad lcall gs jae popa cmp in and inc xchg xchg inc add mov cld mov mov out cltd xor enter std out cld (bad) jecxz jbe out rcrb push movsl out outsl mov (bad) (bad) cmpsb ds repnz jmp xor in dec ljmp sti sub mov fs mov out push and and pop test xor push jle (bad) stc (bad) out (bad) fisub out adc cli aas pop xor mov out outsb add xchg das outsl loopne push fsub push mov ljmp and iret cmp ss out sbb in mov jmp xor (bad) popa inc (bad) (bad) sbb pop das sub pop test and jmp out jmp adc sub in cmpsl jle adc inc xchg pop pop jmp lahf out inc (bad) fstl xor pop xchg (bad) push (bad) cmp mov in mov jmp loope mov xor out iret test data16 into lahf sub xchg icebp add inc (bad) in jns sbb push (bad) jae out fiaddl gs ret fmuls mov mov xchg ds sbb into lcall out or aam sbb add mov out sbb inc mov insb cmp sar test (bad) cs aaa in add sbb arpl add mov xchg push out mov loope (bad) dec decb adc in std out lock pusha pop jb cli out or xor jae inc bound fldz mov and (bad) icebp add xchg stc ljmp mov cwtl sub (bad) fistl cmc imul jl pop xchg ret gs sar test jnp imul (bad) add sbbl loope add mov xchg nop imul in xor adc dec and dec and mov hlt loopne out xchg fwait push repnz mov and in sub dec test fidivrl out (bad) inc inc out lea icebp roll stos mov push push inc pop mov (bad) call mov fsubrp push scas adc ss enter out and sbb pop adc fdivrl jecxz int3 movsl lahf out mov test scas je loope shr imul in out jp aas sub pop mov push aaa mov shrl push popa out mov mov and xchg (bad) jbe out mov ljmp inc fild mov lock lret pop and inc xchg cmpsl cmp ljmp (bad) add inc shl subl adc leave daa and jg sbb xor inc aas inc out or shll stos lahf mov jb pop popa add fild add aaa test mov in xchg ds sub aas jecxz rcrb cmp inc sbb fmull mov pusha inc in out or popa push (bad) xor daa jo push xor (bad) out dec data16 mov add out popf dec pop jnp leave mov mov add lods inc adc jge pop mov add dec sbb jbe jnp (bad) lret lods xor pop pop das out adc or insb push out xchg dec pop mov push mov mov adc jns les jmp fsubrp ds and int (bad) out mov or sbb sti addr16 insl imul (bad) fimul loopne pop jno rclb rcrb and rcll test sub push inc out aam cmc xchg mov jl fs mov enter (bad) std lret insb aad fincstp xchg dec or jp iret mov fs xor pop dec add jmp loop sarb out xchg push lcall pushf (bad) imul jp jno hlt out test jle lock jge cmp lods fdivrl push sbb enter outsb ss out jbe cmp out cmp jl ljmp and out int3 mov cmp icebp inc stos loopne fsts out out jecxz test xchg (bad) out add fnstcw out push mov sub decb add push mov push (bad) push and adc shrl lock add test (bad) out dec fsubr sbb out or mov pop fist push imul xor imul or shr test push std fidiv rorl je test iret popa in out inc daa rcrl push jne cs ret repnz popa ljmp xchg cs das mov jle pop ljmp aam addr16 sbb inc (bad) ja push push loop out nop imul mov pop shrb cmp adc sub mov roll repnz pop in (bad) push pop fbld dec out enter sbb xchg out in adc jns lret mov or movsl xor arpl inc out or inc xchg cmpsl out stos lds sub rep xchg stc mov jp popa out imul add out add add lret pusha pop or fildll stos lods pop cs sti pushf divps loop jecxz out mov loope push aas sbb inc imul lock cmc add lahf push clc (bad) adc cli out mov je pop out aam in (bad) dec lea cmpsb add std icebp push int (bad) fdivs mov cmp bound jbe stc sub fwait enter mov adc jo (bad) testl aad in std xlat call repz rol xchg jge cmp mov std sub xchg mov out mov int cmp xor pop out push xor xchg out dec inc push pop or pop mov dec pop xor idivb ljmp out aad mov out inc insb inc out ret fist add sbb mov imul push mov out addl cmc dec stos or pop (bad) out mov xor cmp out arpl jmp dec xor out sahf cmpsl push and jl fwait out scas mov cmpsb ret into or lret cmp mov aas mov or rcl outsl call fcmovnbe ficom jne sti jg (bad) pop data16 sbb push or jge push enter and movsl ror and out lds push mov addr16 sub daa dec int3 xor push or dec imul out je inc inc fcmovbe psubb jo jle in xor xchg imul int out mov mov scas iret in imul out pop sbb (bad) insb insl je cmp add pop (bad) pop test cmp inc lock popw popf (bad) pop sub (bad) xor xor dec nop pop fstpt or out out cmpb cwtl stc cmp adc xchg aas pusha xchg mov or push pop (bad) (bad) fstps add out push out mov push je lock (bad) sub loop lcall xchg das shll mov out inc insb test out cmp xor out dec outsb add jge push popa out xor pop pop and fild test mov jmp jmp pop mov lods mov out sbb and cld push mov (bad) mov cwtl arpl enter cmc aas out jg push mov cltd rclb fcmovb mov orb icebp adc out jl (bad) jmp fucomip push dec lods out mov jnp push out (bad) loope leave jecxz jb inc inc rol nop pop aam pop jecxz add test add sti out mov jmp inc pop mov data16 out mov (bad) cmp and das push pushw pop pop out and xchg ss sbb gs stc adc jb out cmp repnz imul idivb inc out je jo repz mov mov or xchg out adc adc jmp cmp nop pop dec lahf cmpb xchg ret orl xor pop lea jbe aad js maxps xchg push inc icebp aaa (bad) pusha fdivrs xor not out clc cli fwait and sbb call jbe dec iret repz mov loope jnp in mov out enter inc popf and xor pop pop out xchg cmp aas out scas push mov or and (bad) mov sub mov mulb out jmp call les xchg sbb xor mov mov xchg sub inc out jecxz xor (bad) xchg cltd xlat test push mov push push cmp dec imul sbb mov mov xor clc stos outsl jne gs aas shlb outsb and into (bad) push mov pop out or pop roll out jmp mov lcall jbe fistpll call fldcw shr outsb mov aad push lods out xlat sti pop and std insl (bad) (bad) rcr out pop mov ljmp mov sub std inc sbb add mov sub mov push out fiadd or repz xor push int3 out lods adc jno cli push ss ret (bad) loope ret insl outsb cltd out or inc sbb or mov out dec xor (bad) (bad) fcoml mov dec mov cld mov and out sub inc lods stos sbb int3 out ss int out xchg cs jo jmp mov fwait loopne or jnp pop sub mov insl les mov push sub dec out stc fdivl aam cltd in insl out mov cld or icebp lock pop cmp jp xor pop stos sub and fwait pop adc rorb ljmp inc lods push ss xlat roll cmp out insb or outsb ret out lds out mov sbb push fsubrl movsl pop (bad) mov dec adc pop pop xchg mov sbb push outsl mov cli fiaddl lock or out jmp out cld popa stc hlt pop cmpl xlat outsb sub inc sub lods add enter or call hlt jmp sbb sahf out dec cmp mov pop cmp inc jle xlat and dec and mov pop lods jmp pop push sbb cmc fs inc mov fsubrl bnd add shlb fbld in dec mov cmp out jb int3 pop dec pushf inc lods out enter mov mov (bad) mov loopne in in out mov push push lret adc test and incl mov push push ljmp loopne fisubl roll rol xchg rcr daa loop lea in cmp sahf mov cmpsb push ja sub (bad) sbb out jge fstps xchg data16 mov mov xchg inc add lcall in fisub gs mov fild jae ds cltd push dec out das adc stos in jns sahf jb dec out scas cmp mov fst test lock inc xchg (bad) push and sub fdivs mov dec ss sarb ljmp out movsb rcrb out out sub add xor test jnp inc out push dec sarl xor out aaa arpl sub inc les xchg loop repz out sub and inc dec (bad) push adc add jne mov mov (bad) mov add mov cmp dec sbb xor add in inc rcrb fldenv cli sbb pop jb idivl ja pop in cmp hlt out jae aad mov sub xchg ljmp ret decb cmp fisubrl pop (bad) out push jp into enter out pop sbb dec ret out (bad) sub mov out movsl imul out shrb mov jge push mov dec (bad) push lcall adc xchg mov rcrl cmpl out xor aaa push mov ret push data16 scas ret add cmpsb and fstpt jbe jecxz and mov cmp xor test out fidivl icebp lods shrl pop mov lds movntq out imul mov je mov mov jb pop mov (bad) out dec (bad) or cwtl fwait addr16 and movsb xchg loop int3 enter push sub es bound (bad) jne out and je jb loope mov iret xor fstl out dec add jb iret addr16 out fldl pop rcrl xchg out je push push cmpsb pop add pop add mov and jb jb cmp aam cld add push xchg mov xor dec out dec jns repz lods adc (bad) leave decb or fucomip and xchg add out arpl lret inc mov out faddp in leave out dec out sub mov out (bad) imul sahf lret jge loop lret dec mov out imul inc add sbb mov push fistp dec out add dec jge aas and stos cmc out inc (bad) sbb dec int3 ret jb xor mov out push dec jecxz sub lret xchg (bad) sti out lods inc inc imul add mov push out rorl inc sub jo notb mov mov out mov aad cmpsb push icebp dec (bad) push in into sub in adc pop repnz sbb mov push fucomip cmp enter push dec into mov aaa dec out fstpt in jbe test mov cmp pop pop fdivrs addr16 lret inc mov pop inc test and pop out mov into cltd mov ret and lock dec icebp mov fdivrl jbe ret sarb pop out int (bad) cld pop sub mov fs lods pop cwtl cmp mov pusha out mov push outsl fsubr daa sub mov xchg sbb imul int loope hlt dec nop inc addr16 add mov ljmp shrl dec pop or out lea or add mov xchg (bad) loop lcall push (bad) ss jmp mov lock jb jmp sub inc (bad) (bad) sub mov jnp pop add out pusha cmpsb mov cmp mov js mov into mov pop jbe xchg pop ret out inc std rcl jne pop mov in cmc gs ficompl lea adc imul out (bad) pop (bad) in aam (bad) pop (bad) rcrb or fucomi add sub jnp cmp jl jmp fldln2 mov jp outsl cltd (bad) fcomps mov sub scas shrb scas out cmpsl mov pusha mov inc iret sub push sarb in out fwait test lea sbb push dec rcr out outsl sbb mov fucom (bad) test stos mov imul int (bad) push xchg repz vpunpcklqdq ljmp mov cwtl mov aam xor out pop dec jns iret and aaa ffreep pop loop rol out cmp mov mov dec inc and test shr xor mov clc icebp push adc std jns call cmc arpl in or popf xor dec cmp cmp fistpll call jbe,pn (bad) int nop dec out test cld ss push repz sub out loop notl imul sbb loop ds ja stos movsb adc aas mov scas cmp push push adc fist sti out xor insl dec pop lods aaa xor mov aas les or xchg cmpsb in pusha cmpsl jg push lea or out add pop mov out cld mov or (bad) ror test pop je lds iret imul and les fldcw jo mov xchg roll out loopne cmp imul stos and jle out test (bad) jb sub adc cltd das jmp out dec inc xor mov xchg lods add mov (bad) jno and adc das out dec aam lds insl ss pop cli push cmc add incb xchg ret cmpsl out movsl mov sbb loop mov push push lret push inc (bad) in movsl or jno ficom out fild popf add das pop lret xchg out outsb (bad) mov (bad) out sub call out jbe and pop mov mov push push xor sub and cmp pop pop sub cld lods outsb (bad) (bad) in adc jns addr16 out sub mov pop pop pop hlt in push lods jno out lock loopew,pn imul cmc fwait inc (bad) les ljmp out push pop sbb or test ljmp dec inc mov pop or and lcall int3 pop and in push xchg push out popa inc pusha xor out out lods cmp pop (bad) lock test in mov daa adc cli xor out mov and dec out mov sub out add mov or adc (bad) out (bad) in cmpb out push or mov pop add unpcklps shrb enter (bad) jb pop jne out and loope mov sbb out jp cltd les xchg sbb or (bad) aad jae mov mov int out fadd and sbb xor out push test dec lret adc mov (bad) out pop les aas addr16 loop pop (bad) out add cwtl sbb rcr fs jg (bad) imul int3 pop out rcl loopne adc out sbb cmp (bad) ss pop adc mov mov jge pop mov in sbb outsb dec movsb xchg pop cmp out or pop xor out inc pop leave loopne popf in out xor xchg addr16 xchg out sbb xchg lods out popf sub adc in mov mov xor (bad) (bad) out or or inc daa jbe cmp outsb xlat stos sub adc cmp and fildll mov inc pop (bad) out jmp sub into nop loop,pt in out xchg jbe scas or xchg addr16 jmp cld (bad) sub sbb xchg xabort psubq sub ljmp sbb sbb dec out popf mov push sub cmpsl out out fdivrl mov pop decl jmp aam cli pop xor ror jecxz pop ret mov ljmp (bad) adc rol cmpsb out rorb out cmp xchg cwtl pop clc mov scas sub out cli sub jnp out jp iret mov fs pop jmp mov add jmp push out push jb xor out cmp fidivrl lock stos add fwait out push jl clc or sub inc mov mov mov adc out cmp mov out scas rcr lahf hlt fiaddl pop xchg popf lods sub outsb push (bad) or adc pop mov addb into push or insl lock xchg es or inc ljmp jne dec (bad) pop add (bad) movsb cmp mov std shlb cmp add cmp insb bound div mov jbe mov jne inc dec sbb and scas ss out (bad) xor jae sub (bad) adc outsb or xor push int pop lock (bad) les out jae sbb iret and ficomp mov test mov push xchg outsb sub push ds jecxz jnp inc and mov xchg rcrb pop sbb sbb sahf out pop cmpsb cmp (bad) xlat dec out mov add and pop iret jae jl pop adc out movsb mov std out push xor andb cs mov in adc ret int3 xchg sub pop rcr pop out dec ss ja jecxz,pt cld lock stos push leave mov xlat cmp jp pop push jmp xor push cltd push mov push inc out and dec out jecxz pop mov out cwtl mov sbb push repnz or cli in stos imul fildl das lret mov push out jecxz add mov out int3 fdivs xor negb dec xor out mov insb (bad) mov mov in xor out pop pop jo jmp add out (bad) cs add out arpl add bsf mov mov xlat test movhlps dec push int in push out or pop push imulb fsubrp shll add fcmovb adc negb test and xor js xchg loopne lahf hlt mov ss inc cwtl lret pop insl push out out sti xor jo pop out inc mov (bad) rorb xchg mov push scas cmp imul inc inc xrelease mov jp xor loop (bad) mov loope cld lods arpl stos cmp mov aaa pop add add dec imul scas jbe pop out leave cmp mov in mov and (bad) in dec or cs lret and jo subl movl out sbb lcall jg fsts out dec jge inc pusha sbb out stos mov inc xor cmp inc aaa sub (bad) stos mov cmp (bad) dec sub jbe test out cmp mov out loop xchg mov ljmp scas sub (bad) dec int call sbb add push arpl aaa add sub xchg out add pop pop mov dec pop iret fisttp push lock add (bad) shr gs testl loope push fldlg2 pop pop push out popa popl adc scas ret xchg out adcl shl in jle in cltd out test aaa push stos outsb cmp dec sbb ds addr16 test push xor jle jo xchg lea mov push lock stos incb rorl mov out pusha sti or and cmc cli fisttpl sub arpl cltd test (bad) lcall in xlat aad out jg xchg dec movsl (bad) fcmovu jnp pop pusha data16 xlat out adc aas je sbb sbb push xor in sti call fstp or ljmp jle inc cmp sub dec xchg out fidivrl mov les sbb insb or pop out mov jne cmp sti call fisttp lock stos dec out lcall (bad) jle fstl das test push imul push pop test mov sbb sbb aaa or ret mov dec das out pop (bad) jo outsl jno jnp jns out or out cmc addr16 js mov adc das pop push dec sbb ja movsl ljmp es jns dec jl sub fisubrl adc ja fwait mov cmp movsb jne out cmp popf and pusha daa out inc xor test ss mov ja out loop pop jle push jno out lods push in fidivr mov pop lea (bad) fsubs jb ljmp sub ret fs jns pop lret push popa mov pop clc dec pushf call imul out cli xor pop rcrb iret out xchg clc popa sub inc pop add fucomi pop sbb cmc push (bad) push sub xchg les arpl int mov out mov aam (bad) cltd sub and xor jmp out cmp je out pop out repz out pop cmp xor push sbb jae repnz add test dec aaa cs push jno sub fs ds lock mov lods push xchg jbe push out or sub jns neg lods pop jp ljmp xchg xchg loop repnz mov jnp bound (bad) cwtl lds out scas xchg push enter inc xor xchg sub rorl into js add pop cmpsl xchg dec aam xchg leave mov stc xchg cmp dec sbb gs inc sar test les and mov adc xor jmp mov out sahf rorl ret shl cs jmp call sub adcl xlat out mov push push inc pop (bad) loopne fs sti sbb out jecxz in cmp (bad) (bad) out fsub inc ja inc xchg jecxz dec idiv cmp push mov popa out add orb sahf fnsave pop jae adc sbb lods iret mov jmp pusha ja jecxz out js aad (bad) fcomps lods test fistpll out icebp pop cmp push ret sbbl out mov mov call sbb out mov push xchg out add mov sub or test iret push sub arpl out imul push dec push lret mov jae fs sahf imul lret cwtl push add loopne xchg xchg push xorl into inc movsl out mov ret (bad) repz int xchg cmp xlat mov adc out xchg das jg cmc ror (bad) mov loopne test repz in sbb loop,pn and loope out jle add sub dec (bad) popa out test sbb mov pop iret test imull push mov ss orb add adc std out out add inc push mov or out int3 pop into les mov call push sbb pop incb fistl sub lss sahf idivl clc xlat int out aam stc mov and out xor (bad) out jp push xchg mov jge xor (bad) or out or outsb xor pop dec xchg test int3 stc jns lcall sub fs mov mov xlat jnp divl xchg sbb mov js repz xchg or imul int daa je out sub push frstor out leave dec pop sub ret cs dec jg pop shrl pusha or jb dec xor mov imul loope test aaa jge cli sbbl scas iret jl (bad) repz cltd (bad) dec call out mov adc iret or inc jbe sti mulb pop push cwtl dec std cltd mov out addr16 xchg dec add (bad) dec (bad) out xor sub pop int push aam or out je push dec loopne out cmp popa fucomip fs lock inc (bad) (bad) jecxz push mov pop lahf in push insl in adc insb add and clc mov mov out ds xchg push mov jg sbb sbb lret xchg test enter xchg mov out test push jne inc jg lods add inc insl push dec clc in mov inc push ficompl (bad) ljmp or repnz and or xchg or psubsw push mov loopne xor orl stos out and sub ret push rorl mov out mov sti and or out mov xor inc dec testl insb push out push adc push cltd out pop (bad) or push movsl mov xor lret (bad) jmp jns aam ljmp jno dec stos (bad) pushl (bad) icebp sub and cli gs fdivrs out rorb add lret out test test xchg out lea mov inc mov loop push stos pop out sti mov rclb ret add repnz rorb pop sar xor call out aad outsl sbb mov cld in fmul jle sub jg in icebp (bad) rclb out sub (bad) ret mov enter sbb push mov es les push lret xor mov rorb mov adc mov push in out arpl mov out sahf cmp (bad) sbb stos and adc cmp jbe mov pusha push and xchg jmp pop or mov mov sub repz out notb push adc icebp nop pop inc jl in fdivrl cli lahf sarl pop push call jns out sub push mov out stos xor rcll mov lcall jecxz out and xchg cmp mov mov out mov fidivrl xchg xchg mov dec mov mov rcrb mov push xor adc leave out sub test cmp negb in lahf cmp adc iret iret push dec repz cmp lods cmpsb stos out mov ret (bad) pushf out daa jae push outsl pop add cmp shll sub fldt int out popw jne xchg cmp mov fcomps ljmp popf out mov aaa mov push fistpll lcall ss push mov xchg out xchg push scas out push in out jg ss push inc pop outsl sahf lret mov sbb push push sbb adc scas pop leave cmp dec dec paddw sub pop pop pop insl mov cmp xchg cmp mov fdivrs pushl adc outsb mov or call stos jge out inc xchg lock add add xor out aas pop outsb adc mov in and add stc in (bad) (bad) out mov or out (bad) int3 inc dec adc fldz cmp dec ret decl inc out xchg inc or out fcoml inc mov push xchg psrlq ljmp xchg cmpsl push dec mov fs fldenv mov fmulp ret mov bound aam bound out in cmc sub je cmpsl mov pop jo pusha pop jns sarb sub mov push fmul out cwtl sbb gs je out xchg hlt in popa (bad) xlat dec out push lret or movsb xorb inc xchg popf pop out in mov or shrl out dec sub cli add inc (bad) ja movsb jp out (bad) cmp mov in jne pop adc out fwait xor and test sahf push out push out in scas jecxz pop dec cmp lahf adc div (bad) (bad) or sahf loop or jmp in outsb pop into out mov lahf mov sbb mov imul test sbb std xchg aaa test rclb sbb and ret leave jne add (bad) xor fild out push jp lds in mov mov flds paddb mov stos daa (bad) out lods sub dec ljmp out dec cmp push mov loope iret rcrl pop imul stc mov push cs cmp add pop jg out mov mov mov imul cmp (bad) (bad) dec fild and lods inc jne scas mov lret loope and inc dec shr (bad) ja fldt jl pop in cmp dec xchg lods dec lock xchg movsb sub sbb or sub popa pop out fsubr pushf xchg fildl stc repz push orb jno sbb aad mov stos out ds cmpsb add mov xchg xchg cmp or dec aam out jecxz subb outsb jo out arpl mov and mov into sub out mov adc cmpsb sub iret mov out push jbe xchg xlat fidivl int (bad) pop add nop loopne mov push out cmpsb es mov jmp cli hlt cmp and fsubr xlat push sub out or hlt jo jnp pop inc notl aad es cmpsl sbb das jecxz ljmp or sbbb cld pop dec or xor inc test or out dec push jo add inc imul lock out clc outsl insl jbe jne mov ljmp out jnp add lret pop (bad) xlat dec jne or in jbe loopne pop mov das jne out out out out mov arpl push out push js and fwait rcrl jle xlat pop int jecxz fs in in outsl push enter je push xchg add pop aaa sbb out jo rcrl out ret push (bad) call test add push or mov out adc mov lods in or arpl rol ret dec ljmp jmp mov es repz out (bad) mov mov add gs sbbl fs aad bnd lret fistpll mov in rol adc cmp lret xchg imul fisttp sbb mov sti repnz mov mov adc iret and sub mov call push fsub cmp in mov xchg dec mov lds sub push out imul outsb in cmpsb arpl ret pop sub pop fucomi mov mov and sub imul add mov push (bad) addr16 inc decb cltd inc push mov xchg ret call out mov sub pusha bound pop lods aad testl and push adc jl outsb pop mov shlb sahf adc and mov adc fwait loop fiaddl fstpt mov pop lret push mov fdivr out push sub dec jo mov lret xchg (bad) jp dec adc negl push loope mov out popa pop adcl out ds outsb test mov add xor mov loop sbb clc xchg movsl pop mov out out push gs call out push aam sub cmc jle (bad) push pop (bad) stos les sub mov pop inc and loope push in test sbb inc rorb movsb insl ret out fist xchg std clc out jne push mov out rorl aas test lock mov out sub sub dec mov and insb mov mov out cmc les dec out andl sbb mov repz xor xchg xor jae or psllw repz pop ljmp pop enter int je mov (bad) fist mov (bad) out add mov bound sbb data16 std outsb dec mov mov adc jae mov pop jecxz daa insl out (bad) gs adc aas sub les push insl out loopne or imul out xchg loope (bad) sbb push mov out repz out ds xor jl aam movsb loopne out cwtl test and (bad) xor sbb jb call (bad) xchg scas in notb ret sbb pop fucomip dec lock and xlat icebp loopne cltd out test mov cmc lods out dec mov mov cmp fsts out out adc into dec mov dec sub scas push je jb outsl pop jg dec popa out pop bound lds mov add mov outsl pop lahf add push and or xchg (bad) fs mov xchg sub xchg insb cmova out cmp mov mov fdivrl mov xchg add adc in mov sahf mov adc imul mov sub loope das mov pop inc push lods outsl lret dec (bad) (bad) mov andl testl stos sbb repz clc pop fcmovne inc int leave xlat mov pop mov out scas push dec and (bad) lock mov out mov push outsb mov cli jp imulb movsb cs popa push cmp cltd jmp and jg sti out in mov pusha xchg jmp out jns fistpll or dec push xor stc ror in xchg je leave out adc sbb fild mov dec in xor hlt test mov mov jmp stos fist ficoml out outsb fisub out scas or push fld push repnz adc das test popa xor adc out sbb cmp and into jns popa sub push cmp je insb push push inc mov shll movsb sbb (bad) jp add add sbb pushf xchg outsb js fimull or in mov adc sub dec inc pop insl or xor mov loopne xchg lcall insb xchg jg adc add mov pop out dec push inc pop jnp mov out pop push mov push mov pmaxsw mov push rcll add push jb std rolb jmp sbb pop flds mov out hlt mov loopne scas xor lret lods das sbb (bad) mov and out pusha sbbl out cmp notl pop out xlat imul add (bad) fstpl ret jle movsb fist xorl mov mov out out or loop lds out (bad) lock out pusha jecxz inc sub jbe out aam mov fcomp fsubr in ret icebp leave movsl hlt sub mov ljmp lods ja popf out lahf xchg xor add stc xor iret je (bad) lcall rcrl loop lods mov decl sbb daa stos pushf jnp xchg out jg mov push jge out xchg mov dec out enter xchg scas out sub mov incb insl mov rorb adc xchg lret sti out inc jno inc js (bad) lcall jns outsb cwtl adc aaa lret mov (bad) cmp mov jge loop lret stc (bad) adc in add sahf sbb (bad) rorl out pop jge push push in out mov adc xor mov ljmp out lcall jge jmp pop out mov mov adc cmp fldz push dec sbb cmp icebp xor nop (bad) sahf aad jo out imul (bad) (bad) adc call or pop into fwait or out pop jl adc mov cmp mov out movb in mov repz sbb mov jo (bad) mov pop mov add call (bad) push jmp loop rclb je mov loope jg iret jo outsl pop mov jl fucomi fldenv lahf mov mov test (bad) pushf dec pop sub data16 rorl mov clc jmp pop inc out lahf popf inc mov insb movsl iret out fisttp out jecxz (bad) mov pop (bad) jnp into out clc jmp lock out cmp pop push push mov insl and aam in into cld pushf movsb xchg ds lock imul (bad) in jbe sub jl (bad) scas out mov inc movsl out add fisubrl fcomps push rcrl mov and xlat in push cmp negb xor (bad) in mov out sti push or lods out jne jno in mov jge mov cwtl dec pop rclb (bad) and xchg or scas inc cmpsl out cs adc inc cmp pop (bad) bnd loop pop or stc in out add int mov test mov les ljmp mov xchg adc xchg mov out mov jno gs out out aaa sub adc push cld add pushf mov lods mov scas out mov xchg ljmp sub jno (bad) into mov dec in jge jo mov lea sub (bad) out and xchg aaa notl outsb mov cmp sbb or push out xor icebp pop sub dec xchg aad ret in aaa rorb outsl sbb in into or mov loope pop stos dec push arpl sub iret pop out or jge mov cmc out inc jnp and pushf out insl or sub rcr and (bad) jbe push decl das iret add or movsb xchg ds out push (bad) pop stc out (bad) enter mov out hlt (bad) ss movsl (bad) clc outsl out xchg adc inc movsb sar push popf push mov cmp out cld enter cmp out cmp hlt (bad) arpl jae sub xchg pop push xor stc insb push into jecxz test out dec out sbb pusha cmp imull arpl popa (bad) out mov lods or in jae aaa in mov rcrl pop in in pusha and out mov dec outsl mov lcall pop inc push xor arpl adcb insl mov inc push out sub push mov push out inc das fistp idivl adc out in jne fs pop dec lds jmp push xchg sti orl sbb xor pop xlat (bad) (bad) cltd out adcb rolb xchg (bad) adc pop pop mov or imul cltd out cmp xchg out dec (bad) mov push inc dec (bad) inc and das out cmpsb sbb sub mov sub fisubr inc pop rcrl fwait or jae lods jno jle jg push test jo mov adc xor dec cmp inc inc data16 dec insl sub movsb jbe pop cld jp pop mov dec pop sub pop mov subb push or (bad) dec out mov and mov fsub dec je ljmp iret (bad) leave jge out rcrb in out add adc jg xchg or cli ror out and iret es mov insl addr16 ljmp out out jmp psubsb loopne add fldcw in je push add jmp sahf std push mov shr popf lods sarl ret pop enter cmp inc repz out add gs mov lds test cmpsl loop and int3 mov push xor adc es insl clc sub sahf push arpl test or test pop add imul inc mov fs xchg bound inc out (bad) (bad) out jg rclb pop jno ret in xchg cmc in and adc addl mov (bad) push popa mov cmp sbb jo (bad) addr16 and pushf (bad) es or int imulb push push cmp lds mov ror hlt (bad) js scas sbb in cmp cmc shrl cli xor push out pop and std in push xor pop mov insb in out pop rorl add jno sub popa mulb rcr out sti inc nop cmp pop push pop mov xchg jbe cmp adc jecxz call mov cmp mov jo in data16 out mov dec and sub cmp loope adc xor xchg pop mov out ffreep mov dec out fnsave adcl cmp jae add lret icebp or sub jnp pop aad out mov push adc jnp push mov inc jp aad into cltd jb sub roll push mov inc shr or add or jo fnsave stos mov xor cli xchg lea cmc xchg mov mov (bad) and and aas inc xchg jge out cli pushf in mov outsb in jae out fwait leave push lcall pop lret add push pop adc test adc mov add jle and push mov push pop icebp xor loopne movsl out jbe cli inc loop lcall sub gs in push add aaa cmc out jb pop je push cld daa out js dec pop (bad) call cmp dec inc (bad) push jle dec out or pop nop mov sbb imul (bad) cmp shrd (bad) loop pop push in out lds iret imul xchg mov inc pop scas push jne xchg repnz rol push leave out insb rcr cltd out mov aas and (bad) push dec out cmp loope xor insb leave jle (bad) out cs jmp vmovdqu outsb ret xchg pushf xor bound lcall jmp iret pop test xchg cli out ja mov xchg jnp xorl out pop dec mov jge scas xlat in mov out inc cltd add mov mov cli aam out jle mov lods and popf out ficomp sbb ljmpw das sub loope ret shrb xor adc or leave mov gs jo and sub in cli lea dec (bad) cmp mov incl inc cmc push out inc xchg adc mov in bound dec xor mov das xor outsb int call mov sub aas hlt mov push orl push aam stos pop (bad) sbb repz mov insb xchg xor jno test in cmpl iret sub sbb lret outsl nop cmpsl out fidiv shll inc out or (bad) out int3 mov into (bad) out iret or jecxz fsts aaa mov or stc jl lcall lods call xchg (bad) cmp jmp cmpsb aam shr fildl (bad) jae out mov mov dec mov out fistp inc lea repz push mov cmp mov jno sbb xchg sub out adc push loop out ds enter and in sub fucom add and pop mov inc or iret hlt cmpsl es (bad) fistl jo pop xlat sub loope adc xor jmp push pop lcall aad mov sub cltd dec xchg xlat loopne addr16 or add cli cli daa lods test (bad) (bad) outsl fwait add mov mov pop pop inc stos out dec in jmp or out or out jle push repnz test mov ret ljmp sub out mov pop into out jb cmp inc adc out loopne push out sub data16 decb cmc and inc jmp popa push pop (bad) xor and mov stos movsb and or lret and das push dec jmp nop out adc shl out (bad) popa or jne daa jmp (bad) sub ds loop jb aam pop negb inc jle into mov pop lret in ret out mov bound sub jne insb add ret dec xchg rorb or inc arpl jge scas push fucomp out fistpl (bad) icebp add jnp mov gs pop push out cmp mov sbb test scas mov or cmp and imul insb fldz xor mov mov mov out dec lret gs adc mov popf jbe pop pop arpl insb inc iret aad or pop cltd push xchg xor out push mov repnz aaa repz mov test (bad) rclb or add jno call inc out es into xorb test bound ficomp xlat inc out ss inc imul (bad) cmpsb sbb jnp mov fsubr repnz mov sub lds adc sarl push push mov ja cld pop ja ficomp vandnpd push jecxz fs and mov xchg fcom pop lcall jns das (bad) jno stos ljmp dec popf push pop push out inc mov mov outsl xlat jle xor mov mov fldenv (bad) jo jmp aad xchg popa adc dec xor iretw pop stc dec push call test loope or popf in cmpl aad out in sbb mov and in std pop aas les jmp xchg arpl out movsl sub scas (bad) out (bad) (bad) das imul out out adc out xchg mov adc jne out adc push sbb out ret sarl pop pushf adc mov (bad) sbb out sub sbb data16 out jne mov sbb and (bad) test lock ljmp out sbb popa and out cltd pop rcrb repz (bad) nop aad pusha jnp jge sti sub pop push adc or enter and hlt mov and mov cmc push out inc not cli or and imul mov and or (bad) push out fnstcw mov stos sub jne pop pop xchg out out cmp (bad) push pop or lahf and dec lcall out fisub (bad) das subl mov loopne jno test jmp pop pop out pop jg sub movsl xor push pop (bad) jecxz int push out inc jb or ret dec lret stos mov (bad) out jp pop inc cld xlat repz popa pushf fildll out enter mov jecxz cmc cmc pop int arpl leave out out ja out sub xlat dec ds cmp out negb or cmp daa inc xlat jb pop dec pmaxsw mov dec out mov pop lcall xor jle dec insb dec imul (bad) out adc pop cmp pop (bad) jae mov add ret es dec sub jle fldt xchg mov call incb daa aam jecxz (bad) or or inc rorb mov inc and jo mov cmp push lods adc mov (bad) cmc je jne ss mov out cmp rorb into dec out movsl in push push out leave mov jmp adc fsubrp jbe mov enter jnp out nop adc sbb and mov fucomp and cwtl cmp out out mov out scas xchg (bad) mov aad loopne adc pop cmp fbld and ret mov in out ss repnz push inc out stos gs mov insb sahf mov mov and iret fbstp scas (bad) lods je sub cmp stos pop aad (bad) insl outsl out fs hlt out mov jmp xchg les out push pop jb sti lret sub and stc jp (bad) pop adc enter out sub rolb in sbb xchg imul jp push shr push mov jae scas mov adc jbe dec cmp js mov aad out xor jmp dec in mov mov add in std sbb imul inc (bad) and aam shrl insb jecxz mov addl sahf push push in nop ret out jne outsb pop pop das mov fcomp inc push mov mov fcmovne and pop mov xchg scas das shl out (bad) xor sub int pop out inc cwtl add xchg out arpl push pop testb (bad) rorb (bad) out cmp sbb lds ja hlt pusha out sbb arpl mul cmp out in mov add cmp arpl mov nop mov loop xchg jge jbe mov in inc out and jne lahf mov xor xchg (bad) sbb shl scas add adc call sbb fistpl mov rol (bad) out dec out jmp (bad) scas mov setns pop inc push fnclex outsl lock out dec xor mov cmp out mov pop ret dec cmp out daa dec sub insb (bad) out dec and enter (bad) je inc and out jns ret mov testb (bad) cmc lock ja out fmull out and xor xor pop mov sti dec push scas std out inc and lea cmp push insb push fidivl in adc cmp dec lds fs push insb sub xchg or leave in arpl aas xchg pop outsl scas subb movsb rolb pusha push loope out es xchg call out dec in outsb dec ss push (bad) fldenv incb js test or adc pop sbb mulb lcall js xchg out clc adc das rolb adc enter mov add out pop mov lcall pop xchg movsb cmp icebp enter in or pushf bound out rclb (bad) cmp imull in mov rcr pop imul cmp jno xor enter xchg pusha xor repnz pop sub shr popa xor mov je jg xchg or lods (bad) out repnz mov push out xor pop stos push insb call lods fs lods popf mov out scas push gs out mov mov jno mov cmp loopne xchg mov cltd pop sub xor ret daa repz or and jne loope incb mov xor sbb jns cmpl pop out mov jnp inc (bad) mov pop sbb lret pop mov cld or in mov sar push in and loope lcall sbb rcrl and push int (bad) xor push in popf loopne mul and xchg or lods movsl and pop and ret (bad) mov or cld jmp mulb add inc fistpll rorb out adc sbb pop jo inc jbe inc out mov jle xchg mov jge test into out xchg mov jecxz in dec out mov loop mov jnp jo clc movsl out inc loopne mov ds mov orl (bad) fnop int cmp lods shl ljmp (bad) pop loop in shrl test outsb ljmp sbb fcoml gs ljmp fmuls mov cmp daa incl sbb fstpl push mov push aaa (bad) daa sub push xor into and aas aam cmp lock jg cmpsl lods adc xorl mov fstpl (bad) mov or out pop inc xorl sbb push (bad) lock or gs inc call and and xor dec cli out arpl es scas mov pop dec (bad) out mov lods cmp sbb pop (bad) outsl pop cmp (bad) out jae pusha and out inc aad out pop xchg jp fsubl cwtl out out inc cli call pop call (bad) mov out nopl and stc rclb inc mov int and jg lods es out mov jmp loopne dec and mov fucomip sub lret movsl aas xchg stos jecxz cmp out jge inc int3 dec xor out and pop dec aaa sub ss pop xchg imul lea in xchg sahf adc fidivl xor aas sbb jo scas out mov fildll fsubs inc outsl ds pushl cmp inc or sbb cmp out lods jl sahf mov and fsubp pop lods int push loopne lock jno loope imul add icebp mov loope mov push js gs (bad) out mov dec lds das xchg ss push adc adc out std pop adc fcomps mov mov and out cmc inc jb push in out out sub stc mov loop pusha shrb mov mov out enter dec in out lahf mov mov cmp repz call push mov in daa ucomiss and xor or sti xchg insl sub mov inc fist cltd (bad) loop dec insl or inc (bad) pop idivl xchg jae daa pop or pop fwait pushl cmpsl xchg out movsl mov aam mov adc out pop addr16 shl xchg dec int3 (bad) cld mov std or gs adc sub dec add xchg adc cli loope movsl aad inc test push in aas pop inc sub repz xor pop jns pop sub stos pop sub sbb xor jmp xchg loop sub push shl mov fidivl (bad) fldz fidivr movsl pop fldt xor rcrl adc scas push mov sub int sarb cmp ljmp pop lahf (bad) lret out (bad) enter out lods jb (bad) lods inc pop repnz or in sub in out dec ret in xchg jae push aam in xlat scas push stos or mov mov add iret cmpsl in mov aaa loope testl icebp mov out int3 gs xchg jo or imul jmp mov out cltd mov inc lods out push jl or sbb out sub cmp add jp out fldenv (bad) lods pop fwait out gs cmpsl sarl or sbb mov cmp stc out inc xchg mov ret jg cmp out movsl inc fsubrp (bad) insl mov lahf xor jae (bad) ds fwait out lods das test pop ret loopne scas sub dec sbb pop out dec push mov sbb cmp (bad) xor fstpt out push test mov cmp sbb ret lods (bad) ljmp out xlat pop (bad) outsl (bad) jo jle fstpl pop ret in stc pusha mov in pushf ret sub out jmp roll vaddsd xchg ss mov out fwait leave jecxz scas repnz test or jo xor and cmp pop sahf dec lret decb test cli test in push push data16 pop dec inc xor pusha inc (bad) (bad) cwtl in mov movsb sub mov and and sub jle mov xor dec rcrb add clc (bad) out test test adc pop mov xchg std dec out sub sbb (bad) mov out inc aaa sahf sbb lock jne pop xchg pop mov cld push adc lods dec fildll (bad) rcrb cmc lock loop push add jns pushf and mov adcl xchg jo outsl sub mov push cmp fiadd out adc push out les ret insb out add adc dec out insl xchg xor mov mov out sti in hlt pop test pop mov (bad) xlat out mov (bad) cli sub fsubl sub aaa mov out out repz inc mov js sub (bad) fdivrs movb insb enter or stos out sub mov sbb xchg out (bad) dec add out cld and and icebp imul dec out mov sub sub repz (bad) xchg jle out xor inc ret out andl psrlw mov repz out or stos sbb xchg mov cmc int3 jne cmp insl fdivrp shr pop push mov loopne fs mov sbb jmp and in cmp sub (bad) cmpsl das sub daa dec sbb lret js into out mov jmp pushl sbb ss fs push cli jne fisttpl loop xchg mov mov out arpl lds ss rolb lret jne add sbb add call fmull (bad) lahf sbb mov and in rorl cmpsb faddl insb cmp insb cmp out mov xor pop push pop pop xchg jmp (bad) lahf inc pop call in dec cmp andb and add lods xor inc out dec pop sub ret aas out (bad) cli es out shrb ljmp pop enter xor dec out mov mov push out and scas pop mov ja add cltd mov cmp (bad) rol (bad) jle sub in out scas dec mov xor push mov cmpsb mov inc negb fbstp outsl (bad) mov jo out inc mov call jmp pusha lret imul and es or in cmp loop inc mov shlb jo jae (bad) push imul sbbb lods jge stos shr sbb mov out popa imul out clc lods ss mov adc push or jno std outsl loope jmp jo fnstsw xchg inc mov loope cmc and xchg adc or mov cli xchg rorl in iret mov jl xchg sti cmpsb pop jo insb and imul ret aad adc mov out push jo xchg jg jne setle adc cmp lret movsb pop dec add inc js sti jle add push popf pop aas popa xor mov sti out shrb in fldt arpl mov sbb xchg mov out (bad) or in mov das imul out insb (bad) jne test mov addl mov int3 imul dec push mov sub lea pop je test clc pop decl xor (bad) cmpsl and scas fist rclb leave out xorl popa add mov inc test out fcmovbe out js (bad) popa pop sub mov pusha mov aas sub sbb fs pop mov out loopne mov repnz dec aad xchg mov (bad) (bad) (bad) fneni(8087 sti pop push ljmp scas xlat mov mov out pop jae std int3 or pop out xchg (bad) sahf out inc push mov inc sub sub xchg popa movsl out jmp outsb fs xchg aam adcb jecxz out xchg mov push subl mov and ss mov inc out sbb xlat mov and loop jl (bad) push (bad) pop sub push jne add jp pop sub jmp and fwait dec pop adc jae ljmp out ss push (bad) dec mov scas (bad) xchg out push loopne cli ror mov and or rorb inc out sti jmp gs fistpll lret adc cmpsb stc pop jmp xchg pop (bad) das push test jmp aad lea jnp or in fs (bad) call add (bad) ljmp mov jecxz aaa pop sub (bad) xchg jge xchg mov out call inc int pop push mov out mov stos insl mov lds imul push dec js cmp (bad) xchg insl add popf out cmc cld pop (bad) call inc jne aaa in out loopne cmpsl xchg jo rcr int3 pusha or out inc pop arpl xor das loope add push mov jno enter xchg jge dec popf (bad) out cmpsl daa pop rorl xchg out loopne mov sub outsb inc out adc mov test mov jle popf ret outsl out sbb in sbb (bad) cmc decb jnp hlt lcall mov fdivr pop sbb sub insb dec adc std dec jns jnp je out fist inc out aad cmpl cltd insl out xor shr in das (bad) jo cmp fist lock out insb xchg or sbb mov dec ja jnp or push cmc movl rclb mov rolb xchg gs jnp loop jo call outsb enter and call cmp sbb xor jno loopne enter jg ss inc mov cmpsl lret add scas pop shlb (bad) dec sub out lock leave push inc fcompl push jmp jae out fisttp outsb mov pop (bad) pop mov pop fistl jb pop or cwtl rcrl (bad) out je das into js out mov and test mov xchg adc clc jecxz mov lret lods call xorb and push in dec inc out (bad) and or mov and lea out (bad) arpl pop xchg test (bad) push mov in aaa (bad) cmc fcomi xor pop out jge insl mov pop sarb out psubsb pushl or loopne mov cmp mov lahf push jg dec leave out test jo mov ja insb lcall xchg fs out pop ss ret out stos test xor hlt cmp xchg fsubrl daa outsl lret fs lock nop sbb pop cmp inc sub out xor stc rol pop negb inc stos mov in fildll shl xor out das negb pop scas sbb inc ret mov push dec mov inc (bad) insl data16 loopne daa bound call jns ret xor xchg jno (bad) mov insb adc mov sub push mov fsubs xlat lcall sbb cmp in out dec ret ja push in sbb inc jae ficoml mov xchg sbb dec jle outsl shlb push mov out xchg lods int pop in out jp aam hlt lds cmc mov imul clc out mov fcoms inc test add adc pop ret lret hlt add out jmp xchg jp out cli in mull int3 loopne add inc cmp lods (bad) ljmp pop sub addr16 mov jp gs push pop and pop sub insb pop xchg leave aas mov pop sbb movsl out aam fstpl pop sbb out adc add or std out pop stc int3 fadd cmp inc fisttp popa roll dec or into sub ja (bad) (bad) pop outsl mul cmp cmc push insb push std xchg loope and jecxz xchg sbb pop (bad) cmp and loopne das out mov dec sarl in out mov sbb jl out (bad) or out or sub scas inc inc hlt pop mov jge arpl (bad) jmp stc call jo mov (bad) out rolb es decb fisubrl gs insl lahf lods out pop cmp inc (bad) fs cmpsb xor (bad) dec repz push stos dec mov stos mov mov jg cmp out ret mov mov mov hlt jns rcrl mov xlat int xchg mov loopne in jp inc add lds fstpt sahf outsb xchg fisttp stos or dec dec mov ds in pop out stos or dec push lods aam (bad) in shlb push out loopne mov out in push pmovmskb in pop out inc shll mov push push movsl adc outsb or xchg out jl push sub pop inc arpl jle popf stc sarb dec cmpsb mov sub xchg jne hlt aad cmp (bad) xchg dec mov out pop sbb or sbb or mov cld loopne sub stc dec out nop mov pop push iret test pusha fmull out lea (bad) call hlt jno cmp pop push mov out push fisubr loope sti and xchg cmc xor out nop push xchg negl iret add jp out ret stc mov and daa mov cmp mov sub out aaa mov icebp pop mov inc lret lock inc cli (bad) push popf loopne std sbb dec adc cmpsb mov mov int3 ds icebp out aam mul mov (bad) mov shll (bad) stos int3 mov push mov mov in mov dec xor mov (bad) out jge xor mov adc es pop daa push pop data16 lahf out arpl mov dec (bad) fwait insb lock stos bnd jmp and push pop idivb add jge add or dec xor out (bad) sub out cmp fucomp dec push (bad) adc sub xchg stos sti insl out pop inc push (bad) jle mov in and lret (bad) out mov mov ret aas std imul mov out pushf dec adc xchg enter fildll jbe clc daa mulb sub mov out sub out add jbe pop pop ljmp inc out fsubrs clc xorl xor mov out add add out movsb out insl ffreep ret scas inc out call mov mov mov scas and jae out mov pop pop dec cmp ja in jo or mov in push pop ljmp scas pop jl fidivrl out (bad) out test insb jo fs in mov push in mov inc stos ljmp enter sub loopne pop fwait mov jns (bad) jnp outsb pop cmpsb (bad) inc mul arpl mov out out rorb fucomi mov push cmp loopne into out dec imul insl sbb mov and fldcw xchg nop out cwtl fsubrl lret (bad) push out adc out xchg inc push mov sbb sub iret cmp (bad) imul xchg jmp sahf out lods add sub (bad) popa sbb fcoms in mov (bad) sarb fs lods and push movl lcall xchg out jb out jno ret mov in mov out or pop push out ds xor out ret stos adc mov cs shr pop in dec push fisubrl pop call fdivrl sub icebp dec inc aad cs (bad) out pop loop outsl andps add jne sub dec sub push out test out (bad) icebp ljmp sbb or xchg xor mov mov out sub test mov push jge mov out lret rep xor aas pop inc out xchg adc fnstenv fwait out loope mov js stos (bad) xor loope in gs stos pop out (bad) testb out test sub out fisttp (bad) movsl and or inc push out into jns cmp mov out loopne jle xchg and xchg lock inc out inc stc bound cwtl movsl adc pusha mov movsb and andl mov and cmp out aas adc pushf push cmp bnd nop sub sti stos (bad) mov cmp xor lret bound imul movsl test mov gs popa xchg fsubs clc mov mov out and dec popa mov leave out xchg shrl out or pop popa add xchg pop enter in imul inc out jo pop sbb jnp out or and out mov (bad) shr fwait cmp add jg sbb adc cmpsl (bad) xchg xchg out aam scas aad mov out in jne dec leave addr16 (bad) in lret mov pusha iret iret stos mov or push addr16 out pop outsb and adc adc cmp mov mov aas dec cmp sbb (bad) ljmp adc ficoml das push (bad) imul push inc mov dec pop aad xchg mov add sti out test and fstpl inc dec fs push into lahf insl lock pop icebp mov cli out push push in dec idivl push add pop pop sub jecxz xchg mov xor jmp repnz mov ljmp sbb mov mov mov jb in loop rclb daa lret inc push cmp dec (bad) inc xchg mov icebp fcomi and jmp jge out push fnstenv cmpsb roll mov (bad) popf add out cmp (bad) dec jne popf adc inc mov jbe iret ljmp mov in cmp cltd xchg scas (bad) and xor ljmp pop pop xor fdiv fisttp jns out lahf ss lods and push out and ja ficomp in out out dec lret sbb xchg das sbb mov cmp fwait push add pop (bad) sti mov out leave dec icebp or sub out xlat ds mov inc hlt xor add shr or in aaa loop push mov test out ja xchg shrl cmpsl aas data16 es lods rorl leave out scas push jbe dec test push stos data16 hlt out xor push cmp pop out sub orb inc ljmp mov cmp xchg lods sahf xlat daa (bad) out push jl cld dec jg or mov lds out cmp xchg add out repnz outsl mov cld pop lcall sti test and inc out test iret mov dec adc mov sbb popf mov dec arpl rol out mov mov push clc adc je xchg cmp adc bound mov cmp (bad) jne dec shrl shrb (bad) stc push and sub xor pushf out push dec mov and cmc and cmp or jnp push sbb in push imul or or frstor cltd and cmp notl arpl jb sbb ds mov call inc ja iret std adc ljmp xor jo sbb sub (bad) pop and outsb cmpsb mov lahf sub cli test and out popf out adc xor pop in inc cwtl fwait out sbb stc out stos outsb (bad) dec mov out adc push out dec xchg (bad) xlat pop jno xchg lea mov add jns mov pusha inc add ret imul gs cltd int3 mov out lds aas insl addr16 out hlt test push icebp out and sbb mov popa (bad) (bad) out cltd lea into push or xchg arpl jmp in in add sbb add out (bad) lock ret push mov cld pop leave pop sahf loope push push dec out xchg and in shrb xor (bad) repnz sbb mov loopne mov pop popf inc pop jge jne std push outsb movsl stc mov js aad lahf push mov stos jno dec test inc in xor or sarb adc pop ret adc jl mov gs add mov out hlt aad ljmp sahf xor popa cmpsb stos rclb jge dec jmp xchg cmpl mov out mov popa lds rcrl or mov mov cmp shll cmp nopl xchg and dec insl addr16 out arpl mov je scas sbb lods jbe mov push add out aaa add int3 scas out (bad) pop les lds lea out fnstcw out movsl jns incb jnp loope (bad) out fwait pop and xlat (bad) mov add or mov testl shrl leave call das out in jb pop dec into test push pop hlt mov decl jb mov mov xchg mov ret xchg fstpt sbb mov sub mov dec xchg mov adc mov femms ret pop xchg sbb and mov out cmc mov xchg out out nop jecxz push cld dec es sbb inc loope out xchg cmp ja scas and (bad) pop out stos fistp lcall test add ret pop ficom clc xor xor ljmp repz fdivl inc es xchg stos mov cltd out rol sub pop les out mov cmpsb cmc lret decb and inc dec movsb lods push out lret jno jg out push mov sahf pusha out fnstenv pop dec out rcrl xor pop inc mov push ret xor movsb hlt fcompl jge aaa jg lret jge out mov outsl popf rcl ret hlt loop fdivrl sbb xchg ljmp inc arpl mov or cld pop aas fildll fildl mov (bad) call pop pop mov imul ret out pusha rolb mov pop repz (bad) in test mov jns adc (bad) ja ficoml lret push in mov out in push and jns jp inc xlat inc and mov xchg (bad) data16 sbb das and imul add int loope inc lods imul lcall fs ds daa dec cwtl test (bad) dec cmp mov insl adc or fildl lds dec (bad) mov imul js sahf test jne adc sbb outsl fs jb cwtl xor adc aaa out or jae loop out cmp lcall sahf hlt and inc inc shr mov jmp loope pmaxsw cmpsl mov insl out xchg inc test sub jbe sbb (bad) push int3 out mov clc gs out mov cmpsl insb fbld jg cmpl or mov jo and jecxz fistpll mov aaa in test out cmp repz in lds mov cmp testb or sub lea gs fisttpl pop sub loopne out and pop rcrb fbld lock pop leave push adc mov lret push loop cmpsb mov in mov ret das inc call jl les clc pop lahf (bad) jecxz out fwait arpl pushf mov out repnz lret adc data16 mov out fcompl xchg repz fildll in xchg sub out js add je push pop out fstp es fwait ds call fmul stos or out mov lods pop mov repnz ljmp jecxz insl outsb dec mov push mov pop imul out repz push faddl jg nop jb xchg outsb cmp out mov push sti mov mov xchg das jge sbb (bad) rcll xchg and dec out or insl and out mov out xchg mov (bad) fist cs out mov imul scas dec (bad) cld push ds int3 in mov test das popa or mov mov js cmp mov cli push and xor cltd outsl outsb leave cmpsb fild shrl in cmpsb aas adc and mov sarb std add out je fwait and or dec int3 rolb pushf jnp pop shl and jo pop sub loope mov loopne push rorl add out push ljmp aad in int3 jl ret dec leave jmp push (bad) lock pop mov (bad) imul mov out xor and insl pop sub mov (bad) int3 vdivss adc adc jns adc data16 out sbb push aad mov mov out jbe mov inc mov repz sub push fs mov mov push mov std nop or mov push mov inc push mov out sahf pop std sbb mov loopne clc (bad) out outsl mov jmp jge mov mov outsb lock repnz out sarl lret das jmp repz xlat insl je xchg push mov dec cwtl mov clc xor xor cmpsb xor gs icebp aam inc pushf add push out pop ret mov lcall fsubr and add pop lea cwtl or pop ljmp dec cltd (bad) dec mov xchg and in shrl xchg aaa lcall sub movsb out addb jo dec sub (bad) out fucompp jecxz fcomps mov or push xor je arpl out aam jae stc fwait aaa (bad) in out jp inc mov loop cmc loop,pt mov push out lcall push mov pop mov insl bound sub xchg add out ffreep int out and push test fadds mov mov cmpsl outsb imul pop sbb stc out jb push loopne fist and in inc (bad) pop xchg lahf sar std int in cmc (bad) inc sbb out loope xchg cmpsb stos imul popa mov pop jb or cli icebp popw mov out mov pop hlt loopne cmpsb cld push insl lret out test arpl ret mov jl cs out cltd pop std es loop out pop add pushf fbld ljmp repnz lret loope (bad) out jmp in dec outsb mov jle in cmp dec imul push mov dec cmp mov inc cld shl ja call push mov mov cmpsl hlt adc jmp je test les and es pop pusha adc sub xor sub lahf sbb pop mov sbb out stc push lods xchg rcr push scas add shl pop add aam lret jecxz push in cmpsb sahf jb es out pminsw cmc incb insb pushw push notb jno insb inc pop out push mov icebp cmp xor inc ffree out mov out (bad) in mov inc sti fsubr daa enter or (bad) out sbb cltd xor jp xlat jg in js clc pop test push (bad) fsubrp inc (bad) pop mov (bad) out push pop out scas inc push mov aad and sti inc sub or jecxz (bad) push shlb cmp adc daa sbb fild jbe in adc dec cmp pusha xor cld mov (bad) jge mov xchg sub sbb sub inc sarb jmp add dec pop out bound mov xchg in rcll pop mov out mov call aas pop ljmp out repnz cld movsl out jmp rol xor mov adc dec mov in notl and mov ret out xchg push cmovg mov sub bound mov stos inc mov push push dec out les xlat push out lds xor sub add in out pmaxsw sbb idivl jp hlt out cmc mov mov mov xor fidivr cltd inc in sub into dec ja mov xor xor mov sub sub scas fsubr cmp xlat fsubs cmp or jge das stos mov out pop push xor call bound cmp lcall sar into mov push out lcall lock mov jp mull loope out in adc pop adc subl je xchg ljmp in fnstcw jns lcall ds mov mov loope jnp xchg imul outsl mov test push inc adc out aam leave repz dec arpl inc pop shlb lea aad xchg jmp mov xor cmp out je or fnsave out dec rcr les push adc enter fdivs mull out mov sti xchg inc pop in dec adc sahf sub sbb inc (bad) daa sub sub xchg and mov dec lods into out mov inc (bad) hlt add sbb cmp mov daa sub pop cmp xor out (bad) fstpl fildl xor fbstp mov jp aam js (bad) jo scas rolb jmp adc sbb adc cli add negl mov out mov in mov xchg and gs sahf sarb pop (bad) int3 cs out and xchg call (bad) stc popl (bad) mov sar rcrl arpl ljmp adc stos (bad) js enter aad mov (bad) lock mov jnp inc dec push movsb cmpsl outsb sti fucomp xlat in push mov or repnz xchg lds out or mov (bad) push xor repnz fildl and out insl daa dec mov out sub sub js std lods ret pushf mov sbb mov loopne sbb out add int3 int or mov jae dec inc inc mov pop pusha push jp ret mov sbb imul std aam jge push cmp sbb out ss (bad) dec out push js sub sub xor adc pop mov pcmpgtb and out dec popf dec and imul xchg aas das aad rorl xchg jnp aad shr pusha mov mov dec addr16 dec jle stos pushf scas loope fwait lret sbb or mov popf mov dec data16 aam sbbl mov iret cmp xor loope andl rcrb rclb (bad) loopne in jle jno jmp sub cmp and orl jl in mov mov es prefetch adc xchg out xor imul sub add out mov in (bad) fild jp pop jl insb fldcw lcall data16 mov dec mov daa push out lea or das dec stc pop cmpsb test test ss in mov insb inc cmp pop into cmp dec mov sub js (bad) stc cli cld push pop (bad) out ljmp in lahf jp sahf out and push mov or shr push lods mov test push divb data16 mov sub imul mov push push out push fwait sbb jge out scas xchg mov mov fidivl jp loopne add xchg mov or fdiv mov lods add sub (bad) out or cltd (bad) popa enter ss sbb jp jne das std push adc mov lea add dec repz mov mov xchg arpl sbb inc pop scas mov stos out xchg outsl ficompl in out cwtl xor pop (bad) (bad) xchg cs (bad) cmpsb pop scas sbb mov repnz int pop adc mov movsb scas mov aas scas sub mov or mov cmp out mov mov xor (bad) out iret fwait cwtl nop loope out loopne push jge jmp insb jb pop iret cld or in jae negl stc data16 or and out loopne cld push xor sbb add ret xchg sbb imul ljmp data16 aaa adc dec iret (bad) mov int3 mov jmp push cmc fldl out std notb (bad) push movl lods dec cli and jg xor stos or mov cld data16 nop mov xor out arpl in cs insb cmovp xchg pop inc out jb dec imul aaa cmp stos out negl ds or pop pop adc mov js dec lods mov inc add call in out inc cmpl out pop inc pop add push out xchg pop or xor rcll out (bad) out xor mov out jp iret and sarb pop jg jbe arpl (bad) in mov dec pusha out (bad) lock roll and jnp es adc jle jp jge rclb fs lods cld fistpll adc push dec sbbb subl into btc push pop in xchg xor jnp push dec ss out push fildll iret or pop xchg xchg lea mov daa jle (bad) mov das push pop pop iret in insl movsb loope mov (bad) add and mov shl or pop out test mov out cmp jb sub lret cmp xor out jnp sahf sub test push fsubrp shrb cmp ja sub (bad) mov mov (bad) mov or es in int lea mov (bad) pop call dec inc add out xor out pop push push (bad) icebp dec sti dec out mov cmp pop out cmp mov push (bad) sub pop jl jle iret out in inc cmp inc mov insb out cld cmp (bad) inc mov fmull push ljmp mov int3 ss push out sub call sbbb lock pushf out nop std cmp arpl sbb ret fdivrs sbb jo out lds je mov inc clc icebp or lock mov cmp es jecxz in andl mov push push mov jle repz sub add notw movsb adc jl (bad) cmp push add clc and scas sub xchg out outsb cmp push mov sub pop mov cs shr push mov addl (bad) mov sbb aad mov int mov out fwait data16 nop xchg sbb in out sub add daa xlat and rclb cmp repnz xchg sub pop or mov push inc mov les pop add insb mov int (bad) hlt insl mov das out sub jmp out mov data16 ss sub adc sub fcmovb fwait out adc repnz inc cmp (bad) pop (bad) lahf (bad) mov pop (bad) or lret out dec lea int3 out jge lods out jecxz (bad) mov pop and in pop pop imul out xchg dec (bad) cmp sarb dec les cltd and pop out adc cmp cs popa ss xlat mov mov sub mov add sti pop or cs cs out js inc fdivrs popa cmpsl push out adc jecxz (bad) sarb scas mov dec out out sbb insb test mov push mov jl insb sbb mov dec fsubp mov out jmp jne shr gs pop daa insb add jno sbb cmp xchg sub xchg dec adc push add cmpsb dec lret and das (bad) and scas jnp mov daa mov out push repz pop jl adc xchg arpl push out rorb lret movsl sbb pop cmc xor or jne aad insl push outsl push pop sahf pop and inc inc out stc mov inc or loopne shrb add pop push mov into mov imul lock outsl jle or cmp inc out xchg pop jp adc cld mov (bad) cli std test and fdivr inc mov out adc push dec dec cmp ror xor mov mov push fldl out xor iret add sbb imul mov lock gs movsb das mov out push inc xchg pop sbb sahf dec add pushf rorl lret (bad) out (bad) mov mov fcomip push in lret shr mov out cld mov or loope icebp gs sbb xchg pop add adc (bad) lock divb jae,pn out mov jne cmp lock jne divl dec lock out sub sti imul pop adc outsb out push sub int cld sub test (bad) pop and sarl movsl adc mov adc dec add stos out lea xor push cmp xor push fwait sbb es sub fistp stos or push mov jp mov xchg inc aam movsb dec leave or mov jmp lods dec aad lock negl adc iret repz iret loop jbe loopne out movsl jp pop and dec test cltd sbbl cmp out aad out mov pop pop test jno out push add (bad) insb and xor lret push lahf shll push lea push loopne into mov cli adc fisub mov inc mul sbb out bound cli gs iret call in push mov loope jmp sub dec out mov xlat out push clc cmc xchg jmp cmp xor mov ret mov daa inc jmp ret xor xchg dec jnp mov cmpsl jmp adc xor add into push data16 push sbb inc out or jmp inc out push cmpsl pop push pop cmp pop mov in and inc out jmp cltd mov out sahf dec push orl adc iret iret leave call int adc out cmp popf jmp clc cs and mov out outsl sub xchg jecxz rcrl add sub divl mov mov outsl into out dec dec loop ja xor and out arpl xchg jb popa out fwait cmpl adc sub cmp mov shr pop xchg push sbb pop sub xor lret jmp stos daa loopne lea ja in aas hlt test insb xchg (bad) jge xchg mov stos incb lods in scas pop (bad) and sub stos mov out repnz sbbl pop xchg shl stos (bad) pop cmp lret and mov dec push (bad) cs scas inc lods sbb out std pushf subb outsl sbb out fbld cli lods out pop movsl repnz push add daa jecxz mov inc shr out das xchg adc arpl insl out es or inc mov sbb dec push mov jecxz jnp push xchg cwtl insb lcall dec (bad) xor mov int aas leave cmpsb sbb xchg sub sub lcall enter jnp lods adc xor arpl cmpsl mov sti shr and fwait decb les push subl cld out fwait orl mov push inc in popa xchg push nop repnz loopne cmp fldl mov xor lret out stos adc (bad) mov (bad) mov adc lods clc push outsb out std test add and pop mov push mov pop cmp cwtl adc xor jbe push xchg out lahf mov jle enter nop dec pop xchg mov pop call insb xlat out stc xlat push jns xor out cmp data16 adc and push outsl xor in or js mov bound outsl mov jnp out add or add decb mov outsb mov pop ret add out add popf inc fsubl in xlat ds out inc sbb outsl cld out lock mov gs push in inc sar jb mov out fidivr and (bad) hlt pusha outsl xchg ljmp lea pop scas out incb loope ds add rcrl pop cmp xchg ud1 repnz add or dec jo mov fmull xchg jne out repnz push inc xchg mov out xchg sbbl inc fs pop push mov xor cmp fsubs mov out ret mov jb orb xchg into dec lods sti sahf and cmpsb jecxz repnz jmp enter sahf mov inc adc cmp shrb out cwtl test addb int fisubr xchg pop test stos mov outsb ljmp pusha pop lcall add adc aad mov test mov adc mov pop jecxz lds cmovo or insb and scas shr inc das arpl pop insl (bad) mov in dec shlb cli aam scas push mov out (bad) sbb cmp pop fistpll pop sti bound push mov out jno rcl dec (bad) xor repz xchg scas xor dec out (bad) icebp cwtl rcrb push xchg mov mov and xchg cmc dec xchg test adc add cld jmp pop js nop push pop out jno dec in inc mov pop cs fcmove pop push out cmp cmp push lret fs out cwtl loope or je ljmp cmovle mov rcl adc insl leave and andps adc out stos in mov out sbb ret (bad) mov sahf xchg push mov in cmp mov outsb cmp mov or out lods dec out lock cmp out test and popa jecxz pop pop pop or in mov imul maxps jb cmp in out pusha roll test (bad) out cwtl xchg rclb movsb xchg dec out push and hlt push cmp mov xchg jmp jo ljmp out scas inc mov lahf das cwtl xchg cmp es fstl fildl jbe cmpsb fucomip cmp pop int out mov xchg jl out lods jns int3 sub dec fwait pop cwtl fsubr pop lret xor sti add lahf aam mov (bad) loopw and out dec dec jae loop lahf cmp mov dec mov cmp xor aas out pop (bad) mov inc push out decb pop jae outsb ljmp in cmc cmpsl imul inc mov out mov lods stc js movq add ljmp imul lock xor addr16 jmp out cmp adc pop mov jo push jecxz or outsb out adc jecxz adc xchg shlb mov scas call outsb out out jne xor aas movb lcall out inc movsb fnstcw sbb addr16 test ljmp pop xlat jns fadd insl mov cmp (bad) mov in ficompl in mov ret test test push arpl (bad) push add lret clc rorb add mov out arpl xchg outsb jg fs push out cmp test sbb dec jb xchg out pop nop and std sub out mov ret (bad) push mov (bad) out xlat fwait pushf jg cld movsl out and pop test dec jge push loope fsubrp out sbb ret rcrb adc lods jnp ljmp or inc cld push imul out nop fmuls push (bad) ja cli popa xchg clc std out loopne sbb mov and loope mov pop mov roll lret dec dec push jle dec jns cs inc pop arpl sbb (bad) or jbe xlat bound push ret xor or inc ljmp and inc data16 outsb sub test adc out cwtl into xlat inc movsl repnz gs or jno in cmpsl mov out inc mov lea stos push push out (bad) icebp int cmp cwtl and test mov ljmp out adc xlat push out sbb push xor enter (bad) lods popf lret das loope je xchg adc cmc test sbb stos outsb movsl dec and movsb cmp mov sub out idivl jle mov sbb push and dec jge es cmc out add mov jno xchg ret xchg fchs mov cvtps2pd int mov dec lahf (bad) inc (bad) lock mov pop mov pushf cltd mov or in pop pop xor dec dec adc jmp cmpsl xchg dec shrl pop cmp lds jecxz les clc xor fdivs inc jb out push pop inc mov cmp xchg xor and out cmpsl ror in jns jne mov outsl inc add std push and and and movsl pop cmp cltd clc stc jae fcmovu push stos mov adc out arpl out out test enter pusha sbbl mov cwtl gs out xchg pop pop scas lds fisubrl and add inc insb (bad) divb cmp fildll xor out dec dec pop (bad) (bad) or push lods popf frstor nopl outsl imul int xchg dec pop insl sbb (bad) out inc cmpsb lahf fs dec cli ljmp das add pop not loopne dec cmpsb imul adc push xchg cld and xor jg pop mov out cmpsl cmp cmp pop aaa daa lods ja mov lock dec pop adc push dec and cwtl (bad) sbb mov loop sbb fldt dec rcrl xlat or out mov mov call xchg pop out mov mov icebp mov ss ds out outsb fsubrl lret add or and mov sub out mov fstl (bad) daa push adc xlat mov out xchg cmpsl mov mov (bad) xchg inc lods adc aaa mov fs or sub rcr std movsb cld cmp push push stc cmpsl push cmp repnz sbb inc je pop pop dec nop insl pop or jmp test xor cmp mov mov out fisttpll cmpsl bound dec (bad) jg jmp adcb sbb (bad) xor pop add xchg call sbb sahf and jns lea cmp in out roll sahf scas out dec xchg shlb (bad) cmp pop pop jns pushl mov mov xor adc lods dec mov mov outsb mov dec pop movsb imul adc (bad) out cmp or int3 out sbb inc dec sub push push std in out push xchg and rorb mov dec adc dec cmp inc mov sahf adc inc push xor out pop sub push mov ljmp bound out pusha mov mov int3 bts sub dec stc jno ds jnp subl jbe stos (bad) jo out sub addr16 loop inc cltd aam imul shl push mov sbb jg sub push add jge,pn lret pop pop cld sub xor cmpsl xor int out cmpsb sarb adc mov jnp mov rcrb aas pop jg js push and gs out (bad) and loopne pop pop out (bad) ds arpl cmp dec aaa inc inc sub (bad) les out xor and jl mov ljmp fucomi addr16 test addl loope or out das sbb dec shlb adc and adc stc ljmp pop into jmp in sub and out lock mov out rorl inc cmp out xchg aas lock testl loopne lods movsb sbb or jmp out leave push xor das flds lret call mov cmp dec fsubrp sub adc jo out shll fcmovu in pop cs mov or push out jp int3 push inc jmp in dec xchg pop cli mov out xor (bad) scas in out jmp cmp out imul gs and aas push cld insl out add call movsl out (bad) bound jbe cs rolb xchg out loop call das pusha out int dec mov stos sbb (bad) mov jle ficoml daa pop out mov lahf rcrb ljmp (bad) mov pushl (bad) mov out adc lea in push out dec out or mov jmp xchg imul mov mov or or icebp out pushf push ret das ds cmc (bad) lahf dec mov (bad) out (bad) je inc sub dec popa rcrb outsl bound out xchg and lea pop and cmpsl cmp (bad) jmp lret ss (bad) inc and dec imul sbb arpl out xchg bound or (bad) pop mov fdiv in sub add subb fisttpll stc int dec in iret out inc loopne jp jmp outsl mov mov xchg int rorl in les insb fwait inc lret mov out ret mov mov cmp fsubr push mov dec gs adc jns ljmp dec (bad) push push out push movsb je jg cmp jp out xchg arpl inc inc test repz mov int insb or pop in mov sbb in aas pushf mov add or out jo lahf mov movsb es out sub insl and shl test iret cltd mov mov mov sub mov sub lret das fs sbb jo,pt stos and out into add pop (bad) mov sub jo mov add imul pop pusha out test pop inc sub out daa push enter out call addr16 call mov adc inc mov nop in dec fcompl adc jne outsl jecxz ficompl mov pop fwait mov adc mov scas out (bad) pop cltd mov pop in push push (bad) (bad) addr16 repnz dec out dec ss cmp in dec mov lods (bad) pop call cmp in cmp out (bad) pop aas add jmp pop xchg fwait sahf in inc pushf and mov test aaa push (bad) decl out test lods icebp mov cwtl sahf xor dec and out out dec jne shr out xor enter dec inc cmpsb cwtl iret jbe pusha sub jle push inc xchg fcoml mov pop dec stos mov pop adc pop adc fldl xchg out jp jo negb or pop (bad) (bad) in inc daa out sbb or cmp les out sbb data16 fucomi mov push iret push xchg js push mov jl imul pop xchg and push out add jg out out loope (bad) cmp out out sti dec js mov imul dec out push sbbl mov in fs out mov dec jl xchg out add push loop lods dec sub out imul mov or ja push ret cwtl das js add lcall fs icebp xor cmpsl lods mov lods out push fs rol mov out mov adc insl (bad) out scas push lock and imul movb icebp (bad) mov add sbb out jg sti pop and mov out xorl ljmp pop in test lods add and std or out lcall sbb xor pop shr leave cmpsl xor lahf push out roll out push and out repz (bad) xorb pop cld push popa out fnsave jmp loope imul imul or das inc out cmp std push aaa xlat xchg mov out test sbb inc adc jbe out fcoml pushf push push fbld inc or lea inc sbb adc cmp int3 pop push out les imul xchg dec cmpsl jae mov testl xor stos into cmpsb out push ljmp out in xchg mov push push adc xchg out inc adc push cmpsl addr16 pop sbb fsub test ss lock xchg dec out inc jle lcallw stos int3 (bad) lock mov pop ret out (bad) insb enter and xorl daa es cmpsl inc insl lret inc jl pop fist out lret loop fistl in mov mov lods push dec lds mov push xchg cmp adc scas push pop pop ja mov in js inc out sub in inc out dec (bad) iret out xchg scas mov pop cld addr16 cwtl pop mov out push mov or rolb out and and add xchg sub sbb outsb out shrl cmp ljmp mov mov mov mov inc stos data16 out mov push xchg xchg jg fsub fidiv cmp in leave cld xor mov mov dec inc out outsl std arpl push pop rcl xor mov push mov test jmp or adc jns stos (bad) xlat mov gs loopne cmp out je ss pop lret leave (bad) lcall mov sub js jecxz and shlb fs (bad) shl pxor aaa sahf (bad) popa pop mov loopne pop in add (bad) sub jmp fwait push dec adc roll cmp les adc mov or out jmp scas xor mov pop out adc inc (bad) out ja mov xchg push les push fsubrs jb js fwait add sub xor jae jle cmovge fwait imul add lods lcall inc lret out jns lahf loop aas lods shr sbb (bad) in je daa sub and out out int mov fmul sti or out mov add out jno xchg out (bad) aaa mov inc push mov outsb out pusha mov cmp add lret loop faddl outsb mov scas shrl insb out mov push cmp xchg addr16 mov cvtps2pi mov add out inc out aas cmp mov mov mov divb gs mov test aas add pop pop into cs and cmovne sahf jp push loop push loope cmp rorl pop add sub subl sti shr jbe out push mov xchg inc adc inc xor dec push ljmp sub and mov sbb add std cmc fdivrs stos cmpl lret jg (bad) lock notl push jp jge mov inc push in out into sbb gs jge cmp (bad) push pop jecxz cs mov lods in mov cltd shr sub dec aam test test dec ljmp out or popa xchg cld lods das or jne inc ljmp ficoml or out aaa xor mov add mov les xchg fs sub out in call repz gs (bad) in dec es lds pop test call (bad) inc sti out push push and lret add scas mov into adc iret mov arpl add pop pop andb or dec pop sbb shl bound xor (bad) jnp xor pop iret sbb push or mov loop es scas inc lret out sbbb add (bad) out out (bad) jbe nop inc out fcmovb mov ja repz lret mov xor roll mov adc and ret sub aam pop cmpsl add cmove mov repz lret outsb sbb js xor out push dec ficoml out fsub xchg cmpsb andl add loopne lret ss ljmp cmc dec gs push cmovae inc dec mov (bad) loopw pop orl rcl int3 out jae sti jmp addr16 in jle cmp xchg cli iret ret (bad) out lds dec hlt std movsl pop ret bound fwait arpl out jecxz xor cmp fildl out (bad) pop cli jmp out pop movsl arpl cmp cmc out sub adc adc push adc pop movsl xchg fisubr sbb cmovs mov rcrb lret outsb mov jmp cs int3 out lea xchg or shr movsl and or or jg insl arpl das or jae in (bad) data16 mov movsb mov cmp xchg test sbb scas loope shr cmp mov push mov cmpsb jmp cwtl cmp mov jl dec lods dec insl push (bad) push cld lret loop pop dec mov popa adc xchg les rolb pop divl dec xchg out jecxz jb (bad) out pop stos pop ret jnp xlat pop pusha (bad) cld (bad) scas out out loopne jg dec leave inc das lea (bad) jge aas in ljmp shrl mov cmp mov (bad) int3 fsubp repz (bad) insb out jmp mov push jb jno pop (bad) rcrl lret dec dec out lds aas frstor inc lahf enter xchg pop push jae out push push sub scas aas scas inc or das fbstp cmp add (bad) mov mov inc clc cmp push jns cs (bad) mov mov in mov jns mov inc frndint scas cs (bad) sub out aad leave inc cmp cmp imul jno sbb dec cmpsl xchg cmpxchg sbb sub repnz jp mov movl xor fs dec cmp mov loop xorl or scas mov dec jns loope les push sub ret mov push (bad) jne mov dec pop jo xchg push out popw das (bad) mov cmp xor cltd inc lcall andl shrb insl out dec pusha add push das jno lcall push fisubrl fcompl mov dec in cltd movsb test sar xchg es pop jb lods imul das out pusha push xchg test lahf inc out scas enter js sbb cwtl pop inc pop cmp repnz loop add out push je jae adc out dec int inc sub mov je (bad) data16 mov ret xor out jns cltd aam icebp or loopne mov fdivrs in pusha ret push in xchg adc repz lahf fisttp ret push dec (bad) jg pop (bad) in je lret jmp test sub or cmp inc cmp adc insb push (bad) repz xor test inc (bad) pusha mov cmp sti (bad) pop rcl insl out lods outsb ljmp mov (bad) dec push adc ljmp out adc cltd ret call repnz sub and inc push rcl mov sbb dec mov cmp mov pop add mov xor test xchg mov mov mov jg sbb shrd mov or in cli dec (bad) out adc negb aas sub test dec je jle pop mov fist arpl fsubr jecxz incl jo and es pop out mov mov out jp jo pop cs xlat out adc inc insl add loope rol js mov dec fcmovnu sub sub xor out stos mov js push out cmp les or push inc lret in ds enter out xchg stos xor sub dec aam mov pop pop sti flds aaa add in les sub nop jl pop cmp test mov dec in into push clc xor jp add ret rcrl out dec mov push xchg fldl and xchg jecxz movsbl sbb addr16 push imul mov lock iret mov xor lock out hlt or xchg sbb rorb out pop sbb mull lret push daa dec cmp jmp (bad) int ljmp movsb jge add adc repnz aam ljmp test sub push pusha (bad) out into mov stos cmp push je loopne sbb dec out and sbb jg arpl inc (bad) fldz cmpsl push mov xor xor xchg add fisttpll jp mov mov pop loopne pusha test cmc out loope arpl jns rolb jb dec mov pop outsb and push sti out push (bad) xor out pop lods mov into daa call (bad) ds pop scas (bad) cwtl sub pop fsubl out mov fadds mov lods out pop dec pop mov or lret test pop incb dec out fstps insl jge jnp fistpl out fisttp sub ljmp cmp stc sbb out ss in fsubr add and pop push or popf push call scas or jns icebp lahf jl pop dec mov mov (bad) insl gs lahf add push out mov xchg (bad) and fadd xor nop pop inc inc jmp out fist out push add mov xor push xor xchg out or xorl rcl mov out mov roll mov jb stos dec daa popa mov out jns lock inc inc rcrb jecxz movsl sub push imul jmp pop pushf das fdivrl sub xchg pop dec sbb push add (bad) out pop xchg inc cmp aam sbb xchg ja out les out mov fistp sbb dec and and add jg adc fmuls insl or inc mov out mov lret (bad) pop adc mov xchg jmp jns out xor jmp inc pop loopne (bad) outsb dec loop fisttpll out inc push xor shr arpl outsb jbe push mov xor add pop push sbb repnz repz push cmp lods ja ret adc fwait test mov xchg out inc test sbb out and popa cmc fucomp jmp add out int3 inc je imul xor movsl std ss inc xchg scas xchg xor out push sbb out mov sahf push sub mov push (bad) cli mov (bad) gs pop sbb nop js pop push mov mulb pop pop jmp das popf and (bad) das out push xor add out push inc repz and loop psubw pop neg or icebp and or pop hlt sub xor dec mov cwtl mov stos or pop (bad) out (bad) adc mov push add scas imul jmp call xchg cs sbb sub jbe inc pushf (bad) ss roll add (bad) mov repnz mov add out mov dec out fs es fldcw movsb xchg out out push and inc mov outsl test pop test sbb inc outsb add in out cmpsl jl add or addr16 push push out nop out in out fnop das lret lods ficompl popa out in sarb xor cld out and inc insl inc mov (bad) out push mull fucomip imul jnp cmc pop out clc testb xor fstps mov hlt pop lret sbb mov in push decb mov pop dec cwtl ljmp push lds roll mov aam nop mov das gs xor ljmp insb cmp in es test mov aam and cli cmp dec pop cmc xor or imul fisttp xchg ljmp mov push adc xchg jo lahf (bad) xchg out cmp xchg (bad) cld out mov cli fiadd enter fild je fwait inc aam loopne stos out sub orl out mov pop sbb out ss incb and mov gs xlat movsb movsl out aam in cmpl stc sbb dec lods pop out sarl fadd das (bad) test or out mov lock out sbb lods lods inc (bad) outsl in pop or jecxz dec adc movsl rcll sahf add jns hlt inc in outsb data16 (bad) lds pop ret xlat cmpl push jecxz out das jno pop mov jge dec or mov cmp jg pop dec dec iret fwait adcl scas add add imul cmp pop lret scas and dec ljmp lcall nop jecxz stos negl push jg fiadd add subl sub popa daa rorb mov ljmp out or jbe out add (bad) dec pop iret ret loope repnz (bad) pop push sub out mov jmp out test fwait jl decb jno repz in insb dec lods cmp sbb mov push out dec jmp in int3 push or sti sbb lret mov in out push pop test out xor out movsb or xchg popa inc xchg mov pusha xor shlb loopne bound out add icebp loope pop mul test inc call out loop in mov lcall (bad) inc cltd in lahf push pop out mov out jmp ret in xchg push add jg mov (bad) clc mov mov sahf test push xchg enter outsl xor (bad) xchg push jecxz sub loope aad push mov out push add mov scas xlat lock call divb jecxz shrl into pop out push mov je scas leave inc fiaddl cmp in nop aas jle and out jo sub jecxz sub (bad) push nop aaa pop cmp pop out xor clc ja xor xlat out push fimull sbb cmp pusha je xchg inc mov neg cmp pop and jbe out mov mov lret shrl jmp leave mov push rolb out fnsave lock loope fadd test popa ds out jo pop shr xchg loope das jecxz rcr (bad) daa sbb fucomp out jmp rol aam xchg test insl out mov inc clc jl imul in fisubr in shl ljmp sbb call out sbb fsubl jo out push mov shll in bound pop jmp out and addr16 out (bad) call aas fdivrs out lahf aam adc imul ds (bad) out loop fs das jecxz rcr andb mov loopne and cltd jecxz fs out in data16 in insb mov xchg jecxz sbb loop in out fcmovne inc inc rcr gs loopne mov shr out out loopne in arpl push call scas icebp jmp xor iret jo dec adc and out mov inc cmpsl cmp das jmp xchg lret mov push push pop cmpsl adc cmp push lret jns pop ja insl fsubrp inc gs cmp maskmovq mull movsb jne jbe out add lock out out cmp (bad) fistpll sbb das out into xor mov jl popa out jb and xchg pop lods push mov or into out mov mov mov pop aam mov lcall jle sti jns je push aaa daa (bad) cmc push push cmp lods and (bad) mov int adc insl or dec in pop hlt xchg arpl jmp mov sub xchg test outsb int pop ret out std mov sahf push pop out fcompp or in out adc repnz ret stos enter sub push ljmp and subl insl jnp (bad) dec pop sub into nop sbb (bad) mov jo lea push pop jb sub movsl sbb ja shrb pop push fiadd dec ljmp cmp scas aas stos push cmp call jbe (bad) xlat pop insb loopne jp xor push sub scas push xchg out sbb out movsb mov repz xchg mov popa orl (bad) or push out jmp mov jg fbld jmp jb xor xchg inc and sbb cmp xchg pushl mov and out xor sub lahf dec (bad) out mov jnp dec in enter push dec pop ss mov push sub (bad) sub call inc shlb pop clc push rcrl jmp mov movsl inc test mov dec lahf addr16 ja cmp (bad) pop xchg icebp xor push add mov jns cmpsb cmp mov mov ret pop push sahf inc add xchg out (bad) pop dec lcall pop popa push rcll les and mov pop lock movsl aas imul or in sub dec out sbb loope or dec iret (bad) mov (bad) mov xchg xchg cli jge divps xchg jg pop ljmp sbb pop out imul xchg mov in fnstcw negl ds mov out addl (bad) in scas or xchg (bad) arpl cmpsl (bad) mov cmc fwait insb dec lcall movsb ja (bad) out and mov cld pop mov pop push mov jbe nop push cmc sub stc test movsl jl push jmp fcomps mov lret inc mov cltd jbe out inc int mov imul stos iret mov cmc mov out add cmp sahf pop lahf or xchg ja cmp jnp insb pop xchg and push mov out int inc rorl adc jno mov and cmp jmp fmul or movb xor insl iret repz fs jg out push rcl popa sub and jns pop xchg mov jmp out sub mov and jmp inc jb pop subl cltd jne mov int3 nop pop popf push out and push out mov pop repz xor cli ljmp inc xchg test into in mov cmp inc call pop mov sub rcl mov or cmp jl arpl out ja sbb test xlat mov jmp and rcll lahf jbe pop pushf sbb and popa jmp mov push xchg jo push out push stos lret popf loope test es imul cmp roll out mov imul repz (bad) pop leave lret (bad) fidivl (bad) mov dec and popa cmp out mov jmp stc mov movsl out lea rol dec negb aas jp sarb stos call int stos push xor mov fistp xchg mov push ja xchg or stos mov daa movsl jno out dec mov push hlt pop ret shr cli sub and adc pop out sub push push cmc add push es push dec mov jp push popf pushf inc push pop pop push inc cld or mov xchg adc mov mov popa sbb push (bad) cmp jecxz inc je pop mov into jns sub mov sarb in pop push xchg in push lock std call mov jb inc mov cmpsb cmp (bad) mov sarb loop rcrl popa and cmp pop dec xchg (bad) jb pop out ficoml push adc clc pop out (bad) push out mov ljmp aaa push in mov xchg cltd shlb pop dec fcoms (bad) int3 jb and dec pop (bad) add cld pop cli stos adc das mov out sub push jp les sbb xchg fucomp out dec adc sbbb inc cwtl or pop mov and pop xchg fwait jnp sub mov lock sbb (bad) stc pop int3 push adc cmp sub cmp jns mov out sbb mov out nop jle out insb push arpl test test cmp jne lock jp add scas push imul mov arpl jle aad cs mov lret mov lret insb push ja in push (bad) out stc mov movsb push int3 scas mov out dec outsl sub inc add inc out xor std mov xchg movsl mov (bad) (bad) mov out adc insb outsb jnp data16 cmp jb and cld rcrb mov push xor xchg cmp out sbb lods sbb clc mov out jno pop jae test and lahf push (bad) xor sahf hlt stos in rcr std mov scas fadd pop fldenv icebp sub push dec gs mov adc call cli out push sti fdivrs add dec pop sub pusha out punpckldq repz adc jge push shrb jnp pop pushf sbb in fwait mov cmc out mov test int test stos lret data16 and xor adc dec lods lock loop inc add add out outsb mov into divl mov movsb stos gs sbb test inc out fisttpl cld jecxz xchg pop add clc fwait dec fnstcw out loop pop jge pushf and lcall jl insb mov mov mov insl (bad) jne bound pop sahf push in lds mov pop mov cmp out (bad) call mov mov incb dec mov call cmp lds out jge adc cmpsl cs (bad) jb je out mov mov sub (bad) sub (bad) and jmp loop aad xchg add out jmp xchg push inc sub fdivl xchg clc dec dec adc test dec (bad) sub and in js jno jae out (bad) adc popl lds lods pop es mov xchg sub and sbb out push jle aaa aad in out add mov jl xchg repz inc test or lods mov outsb mov mov inc dec dec sub popa out loope lods xchg pusha call mov push (bad) cmpsb inc cltd mov lahf fisub mov pop out jb push (bad) out xchg and push pusha (bad) xor outsl ss pop arpl mov or add ljmp cs mov mov or fdivs ljmp shr xchg jg and out lret sbb fsubr rorb test out (bad) xlat adc sbb add es decl cltd (bad) (bad) xchg lock or outsb lret xchg (bad) insl inc push jbe in dec stos sbb fstpl inc movsl fimul fs fsubr sbb push outsl mov push jnp mov ret popf out dec call lea mov call mov in stos push iret push std cld jl out cmpsl jne xchg test adc out add stos pop es xor mov cmp jns jg ret inc pop (bad) enter sub dec push (bad) (bad) out insl stos jg out inc pop push add out mov ret ljmp out dec adc jge jb lcall (bad) out add shr push scas mov cs jno mov into aas push lods xchg aas lret and push scas outsb adc icebp sbb repnz outsl add or aas xchg pusha push push add clc data16 mov addr16 aaa insb shr adc scas push out fist and lea loopne and xchg subl (bad) out dec es cli movsb lret pop push mov xchg and out jecxz dec or push jmpw js mov imul or push (bad) mov add out sub mov mov test sahf out into test sub mov add jle mov ss sbb sbb lret jne jnp push adc xchg test popa sbb sub in jge xor insb pop push and pop xchg jne (bad) loop int inc sahf cmp sub add lcall imull push mov jg lds mov negb addl inc mov adc pop ror rol and xchg outsl jle out insb shlb adc jne mov adc arpl xchg lods (bad) movsb dec sti in mov push ljmp pop insl jbe dec out test sub in fsubrs xchg mov cli or adc xchg out and sub add cld pop mov mov out mov call add out out test leave pop and jle bound jbe ja (bad) fist (bad) lds call test iret pop pop lcall ja out ret out adc fsubrp scas add (bad) out dec and xchg xchg out test pop mov in lcall out jg cmp pop lock in inc call imul hlt xor jno pmaxsw lcall fldenv stc fiaddl xchg jmp imul push out movl mov out in jg cltd dec out jecxz adc cmp fildl mov in cltd dec (bad) imul sub fucomi push fisubrl bound inc dec pop mov pop out hlt fnop jnp push xchg jmp cs out es cmpb adc sub daa (bad) repz jb xor cmp xchg dec mov pop cmp (bad) inc sub jmp xor fs cmpsl ja clc lock ss fisub xor ljmp out dec test fabs add pop inc pop aaa in ljmp jmp jbe or and jp call iret jne scas stos sbb sub xchg pop out (bad) std gs or cwtl in push pop jb mov sub outsb out out add stos add pushl push rorb push loop lahf pop sbb imul movsl mov subl lret inc sbb push not sahf out ljmp outsb jo cld pop xchg xchg sub in dec stc adc fstpl sbb fcoms sbb aam cmp out push cltd fucomip faddl loop outsl adc outsb xchg (bad) push pop push xlat xchg pop loop data16 frstor xchg in iret and loopne enter pop adc jnp (bad) xchg sbb fildll das rcll push adc popf and lcall xchg pop loopne in sub mov xor lahf sbb aad mov add mov fistl daa jg xchg fs das or addl out loop adc loopne pop ljmp and push cmp (bad) fs fistpl out decl mov jl (bad) fiaddl inc cltd jmp enter movb or pop ljmp hlt jmp sub arpl daa loop adc stos hlt loope jo inc cld mov inc incl daa and adc lods hlt loope jo inc enter daa ljmp mov ljmp dec daa (bad) aam addl adc outsb cmc loope loopne in add scas or loope fisubl in stos xor adc out adc or or loope push cmpsl adc outsl add lret sti or (bad) cmpsl adc outsl and or adc outsl dec or lods cmpsw adc in outsl and or loope mulb enter ret loope and add adc outsb push cmpsl adc aaa outsl (bad) cli or loope (bad) cmpsl inc inc sub in dec jmp adc or lret adc cmpsl adc mov push or loope jmp dec in outsl mov es shr inc out jecxz push cmpsl in cmpsl adc pushl shrb jmp mov loope insl cmpsl adc outsl loop or loope pop movl les movsl jo inc cli incl hlt or jo inc stc jmp ret popf hlt sub jo inc sbb outsb adc ret lods hlt push outsb jecxz arpl jo inc mov in hlt ret sti push out daa mov hlt daa cmpb inc aam imul insl stos jo inc (bad) in push jmp daa dec add ret pusha jo inc inc jmp daa mov adc mov out stc dec xor inc test in hlt in jo stos inc fdivrp movsb lret daa daa (bad) pop jo inc pop decl daa (bad) lret cld jo inc pop incl push daa lock or jmp daa inc pop hlt outsl pusha jo inc cmpsl jmp hlt in je bound jmp daa out hlt rorl in daa xor inc xchg mov hlt addr16 jo inc (bad) jmp daa outsl repz dec add inc (bad) jmp daa leave jge loope jo inc pusha xchg decl hlt or jo inc sar mov daa in push hlt lods inc jo mov call test xor and adc outsl lods pop hlt jge or dec xlat loop jl fsubrs rorb jo out adc pop xchg jmp pusha repnz dec out test in (bad) lcall xor xor (bad) pop dec es out aas sbb (bad) mov movsl jmp fdivl pop enter out notl mov add aad out out push out cmp dec out call out jnp xchg andl jae (bad) cmp add push or insl arpl leave xchg cmc or test push and jecxz rcrb (bad) popf arpl push sub inc data16 xchg scas repnz ja sub cmp clc icebp inc mov hlt in iret out xor push movsl push out xchg inc push jae inc dec out call ja xchg in leave out movsb aas pop pop ret ret out cld push mov mov jb pop (bad) call in xchg jg,pn (bad) repz adc jbe jl xchg and fadd inc and in (bad) sbb subl insb out in xchg out insl cmpsb xor je into mov out shrl adc lcall xchg das add inc sti mov out jle jmp mov xchg loopne into sbb imul jecxz,pt push push das cmp (bad) mov ja out adc or jp xor loop enter xchg push (bad) in out adc (bad) leave out and mov cmc inc out lret out inc les pop pop sub lret inc outsb cmp out cmp add repnz data16 fldl popa or jp bound jb call pop into out out andl dec out test insl nop out sbb fisubr jmp mov xchg or loope cmpsl ss out fidivrl jne jns add clc out out sbb mov out rcrl int3 inc out pop pushf out inc push adc jmp mov (bad) imul mov pushw jae (bad) test push (bad) lahf pop aam adc ds out (bad) jle push addr16 imul out or popa sbb bound adc jmp pop test ja or out mull mov shlb aam test inc leave out mov mov (bad) sti xor imul cli mov or jbe lods jno pop out out fdiv and out out fbld das fdivr decb jmp (bad) jbe pop ljmp sub ret cmpsl pop out stos jo or jns jbe push sahf xchg jnp mov pop lcall jb push mov js push popa call lret adc in and mov outsb aaa ret rcll out pop stc or lock dec cmovno cli out inc aad out out mov push mov iret out pop or (bad) jo out xlat or (bad) imul loope xchg out out mov jns jmp xor xchg push repz addr16 insb stc and sub adc xchg movsl aaa sbb jl ret adc stc out aam call lret xchg push outsl es popf repz iret imul mov outsb fiaddl aad imul cmp gs pop popa lock adcl mov outsb sub out aaa insl outsl movsb or push lcall popa ret lret shrl arpl add out out sub jg out mov cmpb pop jns xchg shll jle out jp push mov out push xchg push cmp out jge aaa rorb sub movsl add jmp call mov out out push dec std lods push out jmp stos and sub push xlat dec imul mov std sbb sub cmp dec adc lock xchg mov sbb jb mov rcr cmc mov mov out test and xchg mov outsl test xor out fldcw scas clc addr16 jns inc dec and jg pop out pop ret in mov inc sbb es (bad) (bad) scas testl push dec mov jge mov (bad) mov shrl in jne call cwtl out into fwait xchg add or (bad) outsl sbb jnp (bad) out out rclb out xchg rclb cmp and sbb out mov mov in out or loop fucomi aad mov xor ljmp out mov mov and loopne inc add out out jmp ret xlat (bad) iret in arpl mov xchg icebp cltd fcmovnu imul stos repz jbe cli push je jle leave fs lret xchg xor jmp out shr and test cmc xchg mov jb inc out lds add push iret ret push mov jg cmp dec loop sub xchg int3 fs push popa inc mov js push out and jg leave jo mov lcallw js fdivl repz adc inc fisttpll int3 or call ljmp inc mov pop mov mov mov sbb ds sub cmp cwtl popf mov std add pop loopne push jp enter repz out add xchg cmp sbb mov dec out loop cltd lea aas in push aaa adc sbb inc ljmp push dec ljmp (bad) sub adc enter mov mov ret xchg jl lahf xlat rcrb movsl fucomip pop jmp out sub dec imul xor loope xor sbb int3 je fcomps pop pusha les outsb pushf jb popa enter and pop push dec insl out inc jmp xor hlt loope insl arpl add sub out cmp dec and inc pop out test aam or sahf in push push mov lods out inc loope lods inc dec scas add out rcl ret stos pop mov call mov test cmc sti push hlt xchg loope cmp adcl sahf pusha (bad) dec jge call sti mov imul xchg out aam cmp jb pop icebp inc in je push (bad) sub push add push loop adc out mov cs jge mov (bad) lret pop imul jg lock fbstp je mov mov in (bad) push mov insb or ret in cli out xchg hlt mov aam dec push dec jle mov incb xchg dec jnp or loop (bad) mov sub imul cmp lret jae dec pushf pop add (bad) ss cmpsb jmp push out cltd jecxz push mov js mov sub shl lods out (bad) cli add iret jmp mov jge out es jb pop mov arpl out cmp repz sbb fisubrl out pop pusha push cmp les mov jns cmp inc or mov ljmpw jmp inc add jp out sbb shr xchg push pop mov jl test out pop testb sbb cltd jmp ja pop out cmp cs push push hlt ret stos insl ljmp pusha subl pop (bad) mov insb daa mov sbb xor mov push lahf dec dec nop push xchg aas jmp cli out fs mov adc push enter adc icebp mov fild adc out and or or add data16 lods fldt xchg out aad stc es pop add js sbb popa inc mov cmp (bad) mov insl and mov out xchg xorps fs jno call dec shl insl sbb mov inc jmp lock sub ret (bad) jo inc sub fwait scas cmp and cs jb js in dec out enter or imul push (bad) repnz lea stos dec js pop (bad) inc pop xor cs stc out lret sub gs ljmp dec adcb stos out hlt fbstp jno loop out divl sub mov ljmp mov adc mov dec lahf pushf adc ss mov sub icebp lahf xchg je clc pop out inc out adc jecxz in out fisubl mov call sarl mov movsb push (bad) frstor out arpl xlat jbe inc in out ret out aas iret sbbl sbb mov ja loope (bad) cmp out jp mov rclb xor dec adc incl test sti setg (bad) ljmp lock jmp jbe in adc xchg pop push pop cmp ja out iret mov xor adc movsl shr lcall push loop ljmp mov out fldcw test call inc bound fsubrp inc and popf daa or ret out mov jbe lods add (bad) inc out mov cmp popf mov scas pop lds inc in mov adc (bad) imul js popa sarl out test (bad) mov out xchg pop adc sti jne fucomi cmp cld gs in popf insb lea xor pop out mov out leave lahf cmp out in sub cmp jb mov cli pop loop inc (bad) jbe addr16 jmp out or mov loopne clc (bad) in psrld push ljmp mov lods pop xor mov mov jle in out (bad) hlt (bad) mov insl xor jge out xor ret push sub inc sub xlat rorl arpl es dec push cmpb pop jmp push mov or daa cmc push adc inc dec out jp sarb sahf out add jns mov jmp xchg fisubr jge fwait cwtl movsl cmp out xor mov adc cld dec xchg cmp sti jnp movsb jo out shrl pop push in mov cmp out or sub out xchg xor xchg lds lahf xchg outsl inc mov imull jnp insl push pop pop idivb pop loope jmp (bad) out out jp push outsl mov mov scas pop pop decb pop ret lock pop jecxz outsb inc fldenv mov cmp test loopne pop and scas in pusha jg mov in out add sbb out dec pop mov js mov pop gs pushf jns into inc pop test or insl imul out xor loope out push out xchg enter fstps (bad) xor mov lods std push out dec xlat outsl cmp bound enter mov lahf clc mov movl (bad) iret jns and fiaddl out dec loope or fbstp aam xchg xor pop out enter lcall in lahf inc dec add in out jns add out dec cmp xlat fbstp inc add lahf fild ljmp test fdivr out jnp roll jmp sbb aad jb bound out and loopne add inc jecxz dec xchg inc popa in mov (bad) imul pop sub push in dec (bad) in or (bad) ljmp movsb ljmp lea outsl xchg jle or cmp out fdivr test or lods sahf out popf ljmpw sbb fcmovnb ljmp jmp repnz add data16 sbb inc cmp loope scas and or out sub add sbb aad es fs add jp addb mov mov jecxz sub dec out movsb mov jmp xor das imul out and or dec sti or (bad) mov xchg jp out test fnstsw psubusw or mov (bad) (bad) out adc pop loope pop loop loop outsl mov fs je loopne mov and shr int3 ljmp out push mov or or cmc iret iret sub jbe int3 fcos clc in ljmp decb cmp dec (bad) and pop cmp out push fucom cmc jge cs pusha inc adc popf out out outsb cmp pop aaa out jae icebp jb fsubrs out das jo and out in mov js cld pop mov out lods mov push jg rclw fsubrl mov mov (bad) jmp shrl in out ss dec dec dec add sub scas loopne outsb out aas inc lock dec push mov aad fldenv jg add adc mov xchg call out sbb shll test movsl fmulp je and mov jl out loopne out jge (bad) dec lock adc adc adc mov aas aad out gs clc jns jbe insb iret outsb std lods push aaa push ljmp loopne mov loope cmc dec stc xchg fnstcw out lret iret clc scas cld push aas pop vandnps out stos add inc inc lods (bad) cmpsl outsb jg push sbb iret imul jne push fldz test pop insb xchg fsubl out cmc bound divl std stos mov push jb adc jmp nop lock test pusha jg insb xchg jmp add push fldcw nop push call (bad) mov cmp cmc jbe (bad) loopne mov sar jnp loop mov mov mov dec mov ja xor xchg insb pushf fldcw inc mov mov js xchg push arpl lea aad mov cs jno out outsb lds cmp call mov (bad) mov mov ljmp sub popa pop shrl ljmp test out mov xor push sti pop adc sub aam out dec push out mov out and dec jecxz cmp lahf inc add cmp pop push leave lret mov out pop clc ret jl push sbb mov incb push insl bound mov pop push jle push jno push nop add mov push movsb jle lahf in arpl sarl out (bad) popa push rcrb xchg dec jnp mov insl pop lds jp mov adc out loope inc rcrl push sbb pop sub in cli call aad push and push (bad) imul loop jle loope xor jno push jns ljmp pushf mov out pop (bad) stc xorl fmul popa jecxz dec out sbb xchg je jb and arpl jge dec or (bad) jne ss lahf pop xchg pop clc adc mov in mov mov insb leave sub mov call (bad) pop cld in cwtl in out (bad) inc dec jg call jl or leave cmp mov loope out lock sbb out in mov push dec gs test loope adc repnz mov test pop (bad) out ja push outsl insl out popf sbbb mov adc loop fildll repz out jg out (bad) (bad) push and aas loope (bad) out lds sarl mov leave scas and pop mov jp aad aaa js ss add cmp push pop mov shrb mov ljmp loopne sub and out mov jne out out dec add imul out ret mov test ss mov (bad) dec bound out cmpsl out jl (bad) shl ljmp out or mov out into cmp xor aam jmp out out js xor lret jbe out lds (bad) dec in out rolb in lret fmull and fwait in cwtl and shr out lock mov daa lds in imul out jb sbb adc ret sbb mov nop cmp outsb lahf jg std (bad) push arpl xchg imul orb out mov jmp xlat out ja adc sti push leave stc out jae out rol dec mov aaa lods out inc stos or dec pop out out push daa dec jne fs hlt pop pop (bad) pop out cmpsl arpl cmpsb jns jbe mov (bad) fiaddl into outsl ret pop sub out out std add and add mov iret shll lods pop ljmp out ss out sti mov cmp (bad) lock cmp ret jae int3 lock cmp fistp (bad) mov pop jmp icebp adc (bad) stos insl lock fist (bad) scas enter (bad) inc push push aad out lret jo jge and imul push decl in aas out fyl2x pop jl imul loop (bad) je andb jno sbb out in fimul imul xchg in out iret pop and lret stc test push sub fsubrl adcb out pop out xchg daa pfrcp clc adc pop ret mov out xor enter fisttpll ret fsubs cld (bad) push xchg pop dec lds xor jp out jecxz jle stos dec push push xchg push (bad) push aam jnp es adc js jmp jae movsb jecxz push test hlt lock inc mov push shrl rorb push into jmp mov inc push push cmc je das cmp jl fs mov ljmp mov out fisub mov scas imull cwtl subb or lods popa out sbb (bad) cli mov cld jno adc sarl divl repnz movsl sub push pop out cltd imul xchg (bad) adc cmp das es out xchg repz int pop (bad) stos test movsb (bad) out xor mov or mov mov mov in pushf rorl add dec les ret (bad) cmc in adc out fcoms sti je xlat lock int3 out jle mov idivl sub dec aam sahf subl add (bad) mov and outsl out outsb sbb and pop mov out je js gs hlt dec xchg push jnp lods mov jecxz push inc inc (bad) mov inc ret out and pop cmp sub out leave cld fs mov imul aam jg sbb and out out out mov rcll out icebp inc push (bad) aam popa shr push push iret dec clc hlt loopw ds pop int inc out dec pushf pop rol mov out mov imul ja scas out and cmpl mov xor mov inc loopne cmp loopne sub add out out jae ja icebp into pop mov jge shrb ds jmp outsl lret mov out cmp out xor data16 js xor pop out out jnp sbb xor ljmp lods jp neg mov jmp pop and jle jp mov fs cmp out push outsl mov xchg inc aad (bad) cmpsl mov dec gs insb ret jnp jle pop adc and and test lahf outsl xor fistpll add rol xor in push mov mov ret or (bad) lds add xchg mov shl pop mov sub (bad) pop iret push inc out cmp add rol adc add test jg inc push cltd pmaxsw ljmp sti adc xor test idivb and enter int3 stos or xor das inc in dec xor xchg cmp pop in outsb lock pushf out fildll (bad) pop cmc mov out xor jle in in mov push pop mov mov push (bad) scas xchg out outsl lret fstp jmp mov jp pop mov movsl fsubrp cmp jle loopne outsl test inc pop out in in shll sbbb popa push std cli jnp dec out mov das mov adc adc inc lods or jmp mull jo call dec (bad) mov jmp loope adc out adc mov mov ds out bound lock sub out pushf dec add out push into dec mov cmp cmc fbld xor mov mov shl push dec jmp out mov (bad) shr jno scas les jp cmc das mov push ljmp xchg sbb flds xchg dec out pop lds jne mov pop pop dec jle push ljmp xlat lock push in arpl out xchg out addr16 pop in xor cld in cmp lds fsts stos out out jmp ret lock sbb dec int sbb (bad) lret data16 pop out xor inc aas or pushf xchg bound mov out lret ss movsb mov out dec jle inc push (bad) xchg jmp xchg out int out rorl inc pop sub push push stos jmp inc out loop sarb mov mov (bad) pop ds lods out dec push mov mov adc out in pop stc int in lock pop ret es sbb jbe jg bound outsl cld push or ret xor jae adc dec fcomps aad mov jae dec int3 jl inc aaa ja pop frstor pop loop jns xor dec out jecxz hlt loop xchg mov pushf sarl loop adc iret fldl rolb out out dec lods mov xor stos dec mov xchg cmpsl out (bad) jne sbb mov dec lock dec aad inc movsl dec adc out xchg mov arpl in enter inc mov (bad) push jl xor inc mov pop jo pop lock popf mov std push cmp aas ja stos mov rolb out cmovns ja aad ljmp or loope and jne out xor lret mov les scas (bad) decl cmp push mov outsb ja dec lahf cltd xchg mov out outsl jno,pt lahf sti mov (bad) out lret jae dec iret mov int mov push in add out add nop xor in roll pop fistpl push loop bound dec nop push add inc or aam insb test in jns sti mov out sbb outsl jbe ret and loop rclb out int incb popf mov out and xor dec in out mulb out out add jg cli ss and and push or out pop imul adc jne pop jo jb test out enter jne mov add mov out mov out push enter mov dec popa lahf pusha cmp xor jb and sub imul jbe adc ret call in es in jne mov jp je sbb pop int sub fstps pop (bad) aaa shrb (bad) mov out mov inc (bad) lock fdivl aaa jnp sbb xchg addr16 movsb fadds mov pop adc push mov or pop stc xor pop dec fnop movsl ja ret iret push addr16 call pop jbe sti jmp fucomp out jp dec (bad) pop pop xor lock test icebp or lods rcll xchg pop fiaddl inc mov (bad) mov add nop in pop in out and pop xlat in push iret and pop out out dec jmp adc xchg out jnp and out inc mov testb test sub pushf insb in ss out mov mov dec mov ss sbb cmp psubusb sub pusha out push enter sub fiaddl push cmp or icebp out mov adc xchg jmp (bad) ljmp (bad) scas ss mov das jo bound stc mov out cld loop js lock sbb inc add out out xlat jae jno inc and out pop push mov dec enter lea stc ljmp sbb lock sbb out adcl call sbb pop shll pop jmp sbb aaa fbstp pop sub push in fs mov add movups testl in jae lahf mov cmp lea in fcomip in shl xchg mov bswap outsb pop fiadd pop inc addr16 mov lret out or add sbb pop sub rolb inc pusha out mov sub mov push fcompl mov out (bad) or mov fnstcw push jl push jp mov lcall xchg pop or es out jae dec lretw cmp cmp stc repnz aam lret push dec out xor sub pop (bad) loope sarb xor outsl ljmp out icebp orb popa imul in adc jb xchg loop inc mov stos out outsl and dec in dec inc or loopne push push loop les and inc scas dec dec (bad) mov ret je jbe movsl aam jns aad cmc rcrl jcxz inc dec fsubrp (bad) cld (bad) repnz in out sbb test out mov lds mov aam out pop and mov out add popf insb fbld dec mov or add xchg mov sbb pop push out inc std jg jge mov out lock rolb out push push push out ja adc lds cmp ret lret push pop push mov fucomi out mov push int stc femms xor rorl add roll lret out dec jmp xchg popa add outsb aad out cmovb sub out rcrl fs rclb sbbb lods pop out lcall ret mov pop add jge cmp fist add cmc jnp loope push and dec mov dec push mov out in lcall clc aad or (bad) js out and push ja pushf jl out mov pop clc inc jge popa push das int3 cltd adcl pop out in daa pop loop out out aad or in (bad) mov mov insl mov out (bad) mov test loope out mov nop jl lods dec mov das mov lea sub loope js pop pop stos out push fildl jmp in (bad) es push cmp in or addr16 jle loop xchg mov out inc jl jb jo xor loope cltd mov sub mov dec (bad) out test in fs mov movsl pop leave mov pop jmp xlat push jle out jbe push lret (bad) push mov notl (bad) das cmpl add push rol lret or das push pop push jnp sbb negl (bad) adc sub bound les out out ror push xor iret xchg push negb hlt test push test pop jle ljmp dec fiaddl inc mov jp cmpsb jbe push pop bound imul lock ljmp mov cmp out inc outsl ljmp xchg adc out push pop in jbe sub insl out out dec pop loope aam jo inc pop daa sbb aas shll jl jmp inc movsl push (bad) fninit sti mov loop scas jb out sbb out lods add sub pmaxsw rcr cmp out out and cmp (bad) mov out out jg jl jmp jb ret dec pusha jno fisttp iret out addl xchg (bad) fsub out and loop sbb jne inc pop out push and dec mov int3 xor pop (bad) add (bad) leave rolb pop inc cmp in jns adc dec popf cmp pop sahf pop out ret loop fs imul add sub fsubrl ficomp lret stc mov push das pop les fs jecxz ret xchg pushf insb iret seta aad mov sub shr bound dec pop shrl out loope jae test lret dec les jge mov in push arpl loop pop lock or mov out js inc aam lods cmp adcl sahf xchg (bad) jmp test xchg out out inc jmp sbb dec int fnstsw mov (bad) add test mov icebp shl and cmp clc dec fs jnp adc inc mov out sahf aas push xchg int3 push jbe and jmp loopne sti cmp std das push scas jne or aam adc mov jmp adc cmc mov xchg (bad) jae sbb (bad) inc cmovo imul out add dec mov out and lahf loopne fsubs jp add in mov in xlat out das push aad or es mov js mov out ret roll pop cs (bad) push sti outsb imul arpl fucomip or and and fisttp in adc jnp pop inc xchg loope mov cli sbb in push out in mov pop bound xorl gs aas xchg xchg cmpsl adc fsubrp fcomp jnp pop scas push jge rol jle les or dec int3 (bad) mov inc mov ljmp mov aas jo roll pop out call add shlb out or fdivrl pop adc fistp outsb out mov xchg sti lret jecxz push loopne or sbb mov sbb out jge cli subl je push push subl in jnp pop mov out mov ljmp adc setns in sub pop sbb jne lret sub mov push jp out sub jmp jnp (bad) jo mov insl mov and nop pusha (bad) mov int3 out and repz (bad) dec xchg sbb cmp ffree loopne or gs mov out adc int incb loopne out push (bad) aam repnz dec mov repz cld inc int out sbb movsb out dec ja inc hlt jg push out xchg out inc scas out subl shr out push incl insl push jo out mov jbe je dec adc xor and out es jne stos push mov outsb push xor sbb cmp mov out xor sub push xchg mov out xor popa movsl jecxz jb (bad) stos sti (bad) in mov bound loop xor mov and jg out xchg jmp out push bound data16 js loop jg cld mov aam rcr rolb xor and xor out jle out mov jno addr16 mov fistpl sub out sbb shlb movsb lahf pop xor mov inc (bad) inc stos jle pop inc imul data16 ljmp pop sub dec adc xor adc in jnp decb js add and ret push (bad) out inc push xorl push in out pop pop stc out loope out jg decb (bad) ja out lock jle or xlat pop out pop jae call mov pop loopne dec dec out addr16 out mov push jb out shl out out and mov dec jns and in lds divl inc out sub repnz xchg mov loope pop (bad) rclb inc jge (bad) repnz movsb icebp movsl sub mov rcrl popf push orb imul (bad) in out insb out mov rolb out imul (bad) lahf cmp cmp mov (bad) into pusha sbb das aam pop aaa mov cmpsb rcll int3 cmp out (bad) push jns mov sbbb add mov ljmp out mov mov std out insl sbb pop cmpsl adc and inc push es ucomiss loopne (bad) imul fistpll subl lock pop cmc push in and mov push int3 jle jmp dec sub adc push popf (bad) daa xchg (bad) sbb out cmp cmp je movsl fisttp mov ret out xchg xor cmc sbb jmp add std (bad) mov inc (bad) xchg cmp xlat hlt inc gs sub mov movsb pop adc or xchg out jecxz fcomps pop lock cmp scas out sub shlb adcl mov fsubr push sub imul in out adc sbb out movb fsubrs shr push popa xchg inc inc dec xchg imul lea pop add adc add jnp mov out (bad) loop in xor mov mov ret pusha addr16 mov loopne ss rclb out enter pop jbe push arpl adc inc jp push push mov out xor iret sub nop and fisub imul or out insl pusha add jno imul adc test std loop jae test lods test pushf fdivr repnz into pop out mov inc inc fs push pop xchg loopne inc nop ljmp fbstp int cld gs jns icebp shr scas (bad) push (bad) xlat dec dec cmpsb push pop lods jmp rolb xchg push out mov adc dec dec mov mov out push fwait dec psubusb out jl pop (bad) das sub (bad) xor pop gs out cltd jle mov fndisi(8087 clc dec lock xchg push sub fnstenv jno pop decb lods cmc inc out push jle xlat ss fldl inc iret arpl cmpsl cmpsb cli adc shll out js xchg push icebp rorb shrl push jbe or pop shrb out mov pop dec xchg and sbb test enter (bad) mov mov out jae pop pusha inc call pop imul arpl push icebp lods imul shrl push pop cmp cld ret pop out cmpsb insl mov popf fs push out jmp jnp sbb mov cwtl test scas out pop test fldcw outsb sub push out imul in iret push enter loopne,pn adc mov push push out mov stc daa mov insb jmp out adc and aas setl dec in fldenv jmp out inc pop lcall loop cmpl pop xor jmp push cmc shll out lret adc and aaa jg loopne out dec jo mov xchg push mov lods aas clc xchg (bad) in lock out jecxz in adc cmpsb out leave test xchg fwait (bad) (bad) ljmp out (bad) out clc jg in pop mov mov jmp dec call dec out sbb scas mov mov in (bad) out in ret sub lret sti pushf dec into cmp pop push inc mov outsb cmp pop movsb mov inc ljmp mov cltd jecxz decb js mov mov je jns jae in inc jo stos out out fcmovnu jmp mov repz sub imul outsl pop out out jne into ds sbb inc mov (bad) iret dec movsl xchg test push data16 loopne mov test sbb (bad) fsubp out cmpsb cmp aas pop cli lds out mov push andb in aas mov ljmp adc push pop sbb stos and into incl jno loope out dec sub out mov inc mov (bad) rorl ss in scas add repnz (bad) jl push lahf jmp loopne mov mov into cmp lock cmp fildll out xor mov add push lock mov mov shlb orl fcomip push in cmovp xor (bad) pop cmp lock cld bound out sub es out cmp icebp enter lock or dec int out loopne pop jns (bad) xor dec and inc out out push pop ss xchg dec push dec lahf mov ljmp sbb sarb xor testl pop sub in icebp out out repz jmp pop loop ja adc in daa jbe rsm outsl pop jno cmp out out cmpsl nop xchg (bad) fs out out pop lret popf shrb movl mov (bad) outsb stos out popa push mov mov out and or dec iret out push jne (bad) neg push das xchg sub les (bad) xchg out out movzbl int3 or jp,pt ljmp pop jae sub (bad) in cmp shr out mov cli repz iret out psrad inc loop sbb (bad) xor mov in cmpsb ficompl mov xchg out xchg out loop push adc bound sbb adc pop in flds cld and pusha push incb xor push fucomip arpl test mov mov jbe out xor in sahf cmp cltd pushf mov xchg dec jns push insb pop call cmpsb stos mov mov imul test out cli (bad) hlt add inc out out mov ret dec pop jb push leave sub stos out decb ja inc jg fucomi iret jb mov jne in out and lea dec test out dec mov xchg jbe leave daa mov in or fcmovne popa in mov out ja pop mov push push push sbb out cld scas mov jl xor inc icebp into dec ret ljmp les iret mov in ret dec in mov iret std les pop call out shrl dec clc das dec xchg fistp jae out cmp jmp mov and xor in out es dec mov cmp out jns adc int jmp jae add pop scas sub add mov bound jp outsl xchg sbb cmpsl push outsb inc out jns out cmp in int3 out jnp mov jl xor out mov inc xor out xchg xchg (bad) aad mov pop ret negb dec stc inc or xchg xor adcl ja fstpl out es dec xchg push dec (bad) xor out sub xchg sbb notl push out jae dec xchg inc stc pop dec inc lock or jge or out out (bad) into (bad) (bad) in out ret out out ds (bad) dec mov stos out out mov bswap stos shl jno int push mov push ljmp out fs (bad) mov sub out jnp pusha mov jg cli cmc sbb and mov mov outsl daa stos xchg aad pop cmp out repnz push pop ret testb xlat jmp in sub xchg cmpb dec hlt sahf dec leave icebp cmc out sub call push xchg pop lea out outsl xchg jge pop jecxz mov fadd add sbb jno and scas dec cmp add insb inc lahf movsb fninit les sbb into xchg dec (bad) jmp add adc cmp ja mov leave pop add lret loope pop out out rcr and mov outsb xchg out cmp mov adc in rorl cmp (bad) jmp cmc loopne cmp lods mov ret out ja iret xchg xchg test and xchg mov inc xor mov and (bad) movsb mov sarl cmp aam lock ror add mov push fwait jnp out clc push frstor sub data16 icebp shl dec push aad pop or jecxz push mov jb push pusha sbb rclb sbb aas lods xor sub (bad) lahf stc cmp pop out lea out inc inc cli mov test pop lds fucomp xor pop inc dec pop out divb cld and pop jle mov jecxz pop lock mov push and outsl (bad) das xor fwait and cmp das out (bad) iret out leave mov push hlt outsl sbb sahf cmovae rcr in xorl in jb pop or and cmp inc (bad) mov xchg jnp rcll adc insb movsl cmpsb ret jg sbb push and lahf out dec insb dec (bad) mov push mov pusha jg lock je out out mov lds adc mov inc out ljmp mov and outsl aas loopne mov fwait inc iret es mov out out push ss mov out xor push cmp sub jae or pop int3 jb lahf out sbb push cmp pop dec shl paddsb bsr xchg and int3 fsub mov pushf mov fucomi pop add inc jmp sub inc (bad) lock out out dec push or nop imul push pop movb (bad) outsl inc mov cmp jo dec test push loope pop jmp repnz cld sub out push push dec int3 les rcrl dec mov mov out call or adc mov xchg stc (bad) frstor sub mov mov cmpsb pop xor repnz jne jle add lret pushf mov (bad) aaa push out cwtl fnop out inc rorb aas pop sbb out out pop push aas cwtl inc iret pmaxsw cmc lret lret je dec outsb out out ljmp jb (bad) mov stc into and out add lds out jbe dec sar xor cmp pop sarb mov (bad) sbb out mov cmp icebp stos in out int3 push out jo call mov adc xchg pop out out jg fldl lret jb ss fcomps ror pop and aam movsl out out sarl dec in push outsl int jns ljmp jnp jae pop decb imul imul push jns stc es add (bad) lock je addr16 jae add pop sub psubusb push xlat (bad) push arpl in fwait or (bad) call push data16 and mov and jmp test push out fs jb loopne out mov xchg jecxz out clc cmp repnz pusha or lock out pop scas cli test mov dec and (bad) xor lock fdivl jl sub jg jmp fcomps out in add aad push movsb ja pusha lcall pop dec jecxz loopne decl loop pop (bad) daa (bad) jb pop and enter (bad) jno jge adc cltd xlat aaa (bad) out (bad) out or (bad) idiv jo call stos in push out (bad) ljmp das scas aam mov jmp dec fildll das sbb mov out divl xchg sub out enter stc lock inc pop fistpll outsb and xor mov jmp xchg in out cmp pop out lret jg cltd imul rorl add out frstor (bad) push out mov out push cs cmpsb test mov out int dec stc mov aas clc sbb xor push pop ret cmpsl cmp es out push stc int3 inc dec pop cmpl inc or ljmp push fwait sbb push jp out fdiv mov incb repz add jmp push inc nop mov pop loope inc inc jmp shr adc lret in out (bad) jns push fildll or out cmp jbe ss call fstl int3 shr daa (bad) imul out or or push mov movsb cli nop in ret lahf aam lock jecxz lock out jae push and scas repz (bad) pop out jl popa xchg stos out outsl lcall out mov test jns test jo out orl aaa fld1 fild and jecxz mov das adc lahf out dec out ljmp fisttp add pusha cld inc and push popa in mov andl jbe or pop loope xchg subl jb inc rcl jmp in shrb fist ljmp out inc ja ljmp incb push (bad) es fbstp call (bad) stos test inc mov in jmp pop push mov out inc sub aaa or jnp ss or mov cmp loope in dec mov xchg rcrb mov imul push mov mov mov out and mov sub push sub inc call out out push sarl (bad) cmp scas fidiv lds aad cltd adc mov mov push (bad) cmp aad test jge lret dec xchg mov lret push lods jae stos popf ljmp cld mov jns jne mov inc dec mov push jle jge out jbe iret ret out mov and test repnz imull jecxz mov xlat or xchg hlt out push in scas out cmpsb rcrb add xchg fdivrp xchg or pop pusha daa neg pusha icebp mov insl mov jg adc pop out dec sub out jno adc cltd aam out imul imul xlat pop ljmp ficomp andb and ja out cmp pop int3 stos (bad) psllw jmp lods xor jns inc ret jp fwait scas out jbe xorb in scas cmc or popa sbb pop cwtl inc scas fdivrs insb fidivr rcr add or and cs push out xor loopne pop sarl je decb gs out add xchg sub jae repz and ret cmp (bad) mov xchg push xchg mul fdivrs and mov out fucomp std loop shll out stc lods or fsubl (bad) out xor sbb adc iret test mov push pop mov out fs adc jg mov out xchg dec aam out out jnp sub out dec hlt int lock adc or jns cmp out out fcomps gs sar pop out inc xchg jbe fbld out pop xor gs aas jno sti insb cmp out int pop dec (bad) xchg pop dec out rclb xor fnop out into iret mov xchg addb add adc imul fsubr jne mov jl push pop iret jp in out add (bad) push out test ljmp (bad) rcr out mov jle pop lahf stos ljmp (bad) iret mov stos mov jbe pop add jo arpl daa lret std lock push add out jecxz iret jb inc cmovnp xchg or loop mov out pop mov dec and mov popa push repz jne pop sahf ret inc inc test push dec ljmp imul xchg test cmp push mov push aas cmp inc pop push or jae pushf in out (bad) cs cltd (bad) shr clc add in pop xchg jmp aas xchg jg hlt sti jb fucomp cmp jmp push movsl aam repnz call and rorl (bad) jne or xlat out (bad) out testb out mov mov loopne rcrb cmp xchg popa imul jo (bad) lcall push push leave ja rorb add dec pop in out cmp aas pop ds push mov out add jmp out cmpsb xor loopne int3 pop inc push test inc ljmp pop in enter add arpl lock pmaxsw xchg lods out xchg out fisubrl cmp sbb mov notb push (bad) in push (bad) push in xor out scas xchg jg int3 imul xor xchg cld jno ljmp dec mov ljmp out enterw out jle (bad) std mov xchg shll out into mov (bad) outsb int3 daa dec push jg insl jns pop cmp xor adc jg inc pusha in lods pop mov jmp int3 adc push fild das inc mov repz out jge out in push ja in sub popa push out rcrb xchg fwait leave in out iret add aad jecxz mov out mov cld test or sti insl out inc or inc movsb jg jge fbstp out in test ljmp inc adc popa es (bad) loop push in jmp fwait insb push and (bad) mov int (bad) jmp mov add pop xor out outsl or cld divb push icebp sarl dec outsb lods loopne in or outsb mov mov adcb cld (bad) enter call imulb (bad) mov sub or dec push scas xlat sub push or out das nop shl out push es (bad) pop movsl push out adc out mov add xor test insl and mov xchg call out in or ja callw dec out (bad) xchg add sbb cmp out lock out push dec pop in jg dec push out enter jbe jle shll lret pop dec inc mov jge insb jecxz jl sahf shr add fucomi dec xchg out push push dec dec test pop jne mov in dec imul pop (bad) in out sarb aam xor js sahf xchg (bad) xor (bad) hlt and out jle loop xor inc js leave cmp test cltd dec in cmpsb mov iret dec lock idivb xor stos pop jno fisttp and inc jecxz loopne decb in shrl sbb lods int3 aad in cli outsl sub pop dec cmp inc popa lea out daa or scas fisubr jae test call mov adc xor jae out repnz xor lea ffreep xchg push jl xor cmp xor adc inc pop sti mov or out shrl pusha mov popa in dec sahf lods les leave test int mov setg mov loopne cmp jno das sub dec mov test out inc (bad) out out cwtl dec insb into cli (bad) data16 les popf pusha fcom push mov mov out cltd loope jmp lock mov push push ja pop lcall (bad) out xor cmpsl xchg or out pop xor lcall fldenv push cmp xchg adc inc pusha hlt imul pop or imul inc mov notl out pop lret jmp mov fildll pop es int push (bad) pop (bad) hlt and push (bad) cmpsl out out aam cmp pop push lock ljmp ss insb cmp out arpl and out jnp (bad) cmc jne jbe out mov (bad) sbb out pop repnz call out pop lret mov xlat out add fdivrp lock dec insb loopne push cli push pusha pop call jmp inc mov out cmp jbe (bad) lret sub mov out outsb imul (bad) out aam shrb cli out fsubl sarl out pop adc mov mov andl stos jecxz add out xchg pop cmpsb imulb out push cmp out mov out imul scas pushl (bad) lret sub daa mov (bad) dec mov out out iret mov push clc aam in pop jg xor (bad) out lahf push sbb out push pop out (bad) arpl int3 incb ja hlt sahf mov pop rcrl dec insl jmp mov inc (bad) cmp xchg outsb add insb imul pop jnp mov aad cltd xchg loop mov pop scas sbb jnp add mov (bad) cmp iret cmp sbb dec mov mov adcb jecxz cmovnp loop loope iret xchg insl in adc add cld out inc les repz cmp jge fnsetpm(287 fidivr das jmp sub mov sti pop popf loope (bad) xchg jns popa add cmp out jno mov roll in out ljmp sub inc movb xor scas loopne and enter pusha daa dec out lds dec dec retw fcomip idivb out jle iret or stc push jcxz shr inc ds xchg adc in push repnz jne insl xchg out stos ss mov ja cld daa inc out fist out imul loopne int xchg ds les pusha inc gs mov dec pop pop ret inc mov inc ja cmc sbb push mov rolb cmpsb arpl fsubrp add dec (bad) data16 jno inc (bad) out add imulb test mov mov sbb out enter fucomi push stos pop jge scas lret sub mov xchg jmp fcmovnu pop sub loop fistpll insl sub push mov es push addr16 or adc out or in loop jl dec xor xchg call and out lea aas sub out mov nop jb insl out scas mov jp dec sub shll jecxz push in mov xchg (bad) int3 xchg sbb test out sub push pop je pop and sub out add shrb push int3 xchg jmp bound xlat push push iret scas test out out imul push push out int3 xchg sbbl mov sbb test and out pop rolb out mov pop testb mov js cltd dec std loop cmp clc iret es mov and push out stc andl mov push aaa test out jns xchg pop mov aas mov insl xchg jno push stc out repz pop fucomi and mov ja mov mov mov sbb call out bound push pop mov mov mov insb xchg out adc mov pop dec mov sbb pop mov dec in jg fdivr fimull xchg insb inc out mov test js std fistl mov mov scas (bad) repnz jge dec ficoml out mov and fistpl loop mov mov dec out cwtl notl decl or lret or mov out stc pop jl inc lcall push inc jns inc adc fucomi or pop loop daa out repz pop dec in sbb out vphaddubd aam lods out fiaddl mov and push ljmp (bad) or out pop std mov ret jne mov int fisubrl out mov outsl or push inc xchg (bad) aas out pop sub mov (bad) hlt out call push mov inc adc cmp dec test sbb repz add and fs out mov pop fdivp (bad) je enter add (bad) stos inc inc out loopne push xor mulb push into out (bad) out fwait jmp out or inc dec xor xchg push lea pop add fs scas mov in imul dec mov lock lods outsb mov pop fbld shrb pop jl xchg ljmp fdivl (bad) pop adc push popa xchg loop es fbstp (bad) out into lret cmp push rorb out mov sti jecxz psubsb je push xchg loop jmp jecxz sti push (bad) ss pusha mov aas cmpxchg dec dec in int3 mov lea add insb out push aad cld mov lds call mov iret ret out jge aam xchg movsl (bad) lds pop mov out mov int fsubr adc (bad) cmp dec es inc rclb push mov movsb inc outsb (bad) cmp pop jecxz mov cs pushf decl ror outsb stos jne cmp out pop mov jmp clc arpl loopne add shr push inc out dec xchg shr jl jae cmc out sarl mov pushf cmpsl cmp decb iret sbb add cmc push mov push repz mov jmp test cmp addr16 outsb mov mov push mov out push dec cmp push das lret cs mov inc sbb out stc ljmp inc in das out sub (bad) fistpll (bad) out call popf out je xchg lods aam stc cmp cmpsl in pop add dec insl sub fucomp std lahf (bad) fisub jmp or pop or (bad) jo ljmp stos mov (bad) (bad) and ljmp add out sbb adc shlb icebp pop xor jo inc dec jno in (bad) ror jns sbb mov xchg aas bound inc out jb add aaa loop or sbb xor ljmp das mov push nop or push pop (bad) out and mov or ljmp xchg arpl into mov xchg scas out out or or add jg arpl aad mov mov out cmp test loop xchg (bad) dec push jp loop add rcrb out aad mov nop out imulb lret lea pop jno shrl shl xor out and cmp mov cmp out jae ret dec pop movsl out adc mov xchg fcomip ljmp fcompl pusha icebp fucomp mov add dec call mov ljmp fistp mov outsb cmp out out (bad) icebp mov les out jbe out pop in out xorl adc fisub xchg and mov pop sti xchg out pop jmp sub fild cmp mov xchg popa out lea aad push pushf mov pop jae push lods xchg (bad) sub push out mov out inc inc jge mov (bad) and in movsb aam in cmp adc sub pop out and xor call out movsb aaa dec rcrl data16 addr16 das mov out je test pop in movsl out out push leave pop sub inc pusha dec popa repz idivl fimull jb ljmp scas cmp stos fucomip xor out inc ret pop inc inc ds mov stos out fwait out cmp jg mov scas and cmp (bad) mov jle in xlat scas xchg (bad) in scas popa ficomp pop xor jb cmc jno or jmp pop repz jg das cs dec (bad) sahf loopne incb out call decl stc movsb js rclb adc sbb pop leave xor test outsb sbb enter jae mov push inc scas ret stc out lahf scas and jl in int3 iret repnz imul insb jecxz xor or jmp adc outsb pusha mov ss dec addr16 out adc lock add movsb rep push sahf sub ljmp cmp dec decb dec inc enter cmpsb out (bad) mov ja and out jbe mov or xor negl mov pop aam idiv inc and pusha xor mov xlat out sbb pop push cli std and jecxz mov loope addl out loop mov mov mov push popf jge out sub cmpsb rolb (bad) cmc shr icebp fwait inc ljmp out or hlt addr16 aam or shlb pop (bad) ds push or lods adc push insl in jbe out jnp xor (bad) shr or push pop int3 out daa in cmpsl fsubrp out add out jge mov dec out ljmp movsb pop jecxz in jns sub int3 xchg xchg out xchg movsb loopne int add xchg jns pop and out aad orb sahf (bad) pop out fsubr inc lret mov out jge neg mov pop push out mov dec (bad) mov loop sbb pop std jae loop and and out (bad) mov repnz popf out xor jle repz inc int3 into (bad) mov les cmp in testl outsb jp aad pop dec js in insb out mov out adc fs dec jg popa pop in (bad) out sbb or add xchg inc mov pop (bad) adc out ret mov leave shlb xchg loope out out inc lock sti shrb mov mov (bad) pop pop (bad) sub pop sti fdivl movsl ja fisubl add mov dec lock cmp bound repz mov inc pop jne jecxz cld and fsubrs movsl cmp lcall out and pop out subw mov pushf call cmc push and shr aam notl jge dec xchg das out pop mov push xchg ror or jne out in jnp les cmp cmp scas mov jae test int mov ja imul inc xor out mov jp sti cmp inc out int add pop xor mov out cmpsb adc sub xchg mov jg jmp xor pop out popf in std mov out mov pusha sub pusha sar out dec and fdivrs push pushf ficoml mov jge inc pop mov and push out (bad) je pop loopne inc sub hlt int out fildl out (bad) repnz adc out pop js xor stc movsl inc in or fild inc fucomip jp jg repz and inc movsl (bad) fsubrp out lret js pop xchg xor testl sarb inc call add and ja push mov je pusha dec jl xchg popf insb push out leave and loopne cwtl push out mov repz adc roll out out cmc push pop loope in loop jge test pop iret mov inc push push fdiv (bad) cli rorb pop out mov pop lahf xor pop in cmp jge jo jb loop out xchg iret mov dec popf lret rcr pop ljmp mov movsb ds das outsb (bad) jns outsl pop jecxz xchg xor out das lock or dec pop and popa in mov out leave scas ret ror sub ja xor push (bad) int3 xorl fildl out ljmp out hlt (bad) mov cli out cmc jl loope gs xchg or pop in fldz jmp cmp hlt ret (bad) pop sbb pop sbb int outsb lods out push aam xchg out inc inc lcall ja stc out out lock arpl out mov jle iret lods rclb adc pop mov sbb in pop mov out jae cmp pop and mov pushf sar mov sub jmp ljmp into in sub push out insb xor les popa mov lsl aaa pop add out lcall out mov pop call lret je sahf xchg fucomip fwait das sub add clc jmp out jge rcrl jg inc outsl jmp in push out lahf inc jo (bad) lret cmp daa dec jl sbb jg ljmp js cmp in lds pop repz and jnp jmp sbb out daa mov ror (bad) test xchg mov mov pop cli ret jp leave pop pop out mov push sub pop out sar insl pop scas call add loopne and out mov jl mov (bad) xchg add sbb ss pop sub scas sub out out insl pusha inc je jl push icebp dec push mov in scas sbb out les lret int3 shll out lods lahf or lea dec out rol or out xlat cltd sub and fsubp adc pop jo in (bad) in fbld mov pop push add jnp xor loopne lock jle jns xchg outsb cmp out out jae stos mov rorb dec mov aad pop pop xor push ret jecxz scas lds enter inc imul jo out xor out jecxz or xor xor in jge imul loopne lock add shll cmp push jo add ret shr xchg cld cmp pop leave pop push addr16 outsb loope lret out mov subb and pop idivl ljmp xor xor push pop mov mov jmp shr jno es int3 movsl fsubr in pop sub pop lods jmp mov lcall fistp jno adc jne jecxz in push push (bad) push outsl mov out push and out push cs fwait int3 loopne push inc jmp pop aam jecxz (bad) out inc pop inc imul into enter mov out mov sub sub inc out cwtl in insb leave xchg fwait out (bad) imul dec dec pushw xchg loopne (bad) das out dec pop pslld ret and push sub mov mov fxch test mov jl ds div (bad) js fdiv cwtl arpl out and pop out jb sub inc xchg ljmp imul push in push fld1 cmpsb out imul outsb (bad) in out out inc popf jno mov or and xchg out adc rcrl mov cmp fimul (bad) pop das loop subps and imul jb mov out adc push data16 pop out adcl lahf sub (bad) aam inc fstps xor push cld insl inc (bad) out out lret ret mov out xchg push xchg in sbb (bad) test in inc sti mov out lret stc mov out jne shrl aad and inc loop lcall in adc shr in pop aaa movsb mov jno mov jmp cmp pop in daa xchg jmp push xchg fdivr jge je push mov pop jns pop or adc add jbe int out lret mov cmp mov pop scas xor out out push jg push insb or push (bad) cmp adc push in push out cmp in mov mov fimull jmp movsl out out leave fwait ret aaa xor test clc data16 jb jecxz clc pop loopne mov fcompl fs and jb mov repnz divl mov out mov cmp inc dec xchg iret scas out outsl popf shr mov adc xchg jmp dec aaa cltd jg adc out lock xchg out cmpl out mov out orb or arpl out (bad) icebp or pop sub or cmc dec lds push movsl adc push repz ss mov sbb out xor ret fs sbbl aaa in jno (bad) xor out aad popa cmp in push and push outsl jp xchg call or lods ret daa fstps stc add (bad) jecxz insl js pop mov xlat push jl out sbb imul dec decb inc adc insb test ljmp jno hlt out mov insl jle test pusha push dec lcall pop mov mov cmp loop jo out xchg xor cmc ljmp cmp fstp je mov (bad) enter out jmp movsb add in add xlat mov inc stos push popf (bad) lods dec push mov call or dec cmp cmp scas jbe out push mov or adc sub je pop nop adcl (bad) movsl aam jg iret mov out dec imulb loope cmpl mov jne cmpsb call (bad) pmaxsw test in popf jne (bad) js jmp mov xchg out test xlat in lcall iret test (bad) sub xchg cmp insl out push aaa sbb sbb push iret add ds in clc dec lahf push cmp jmp out pop stos or (bad) out pop dec lock adc ss out pusha imul out jge adc imul jmp adc addr16 and inc inc call out pop popf fscale and mov jbe ja adc es ljmp dec xor out out inc popa loope (bad) stos inc ss xchg in cmpsb in mov adc hlt pop out lea push icebp dec pop out or mov rcrl add sahf push in ljmp loopne icebp adc in pushf mov push or or fwait push out add rolb out (bad) jecxz (bad) push cmc out int push sbb mov lcall jecxz out popf dec out gs lret lock out rolb aad xchg cmp pop cmp jp push divl mov out dec xchg sub ljmp jbe out pop mov pop xor loopne mov sti jle out out (bad) cmc sbb sub pusha cmp jae push or inc xchg imul out js jb and (bad) je jecxz sahf jl popf aad out mov cwtl addr16 xchg out and pusha pop mov sub out out lods loopne or cmp call xchg out xchg (bad) (bad) mov and das pop adc ljmp sbb fwait mov dec es out repnz addr16 mov cmc xchg jae sbb (bad) xor and aam pusha inc out cmp ljmp mov mov aas leave xor cmpb or add in xchg rcl aam call out int3 push (bad) mov out pusha jbe and dec outsb popa aas in stos jo fldcw mov cld int lock cmp je cmp insl mov adc (bad) xor clc arpl out daa pusha scas push call jo add movsl cmc inc dec push mov insl pop sub mov pop and inc sub out add mov jge inc dec fs leave loope call mov fucom fldenv lock ljmp fisubr shr push incl and dec scas inc dec pop fistpll lahf stos (bad) mov jmp shll lods in pop dec out out imul mov or out js dec outsl mov lds imul in jg mov and dec cmpsb xchg push pop les inc loope cmp push js ret sub outsl in mov movsl lods inc sbb loopne push out pop jmp dec dec jge pop in out cmp out in pop xor or call push and push sbb cmp mov or or fdivrs and popf mov mov lret test pop shl std inc mov jne jle mov in pusha sahf (bad) fndisi(8087 pushf aam adc xor mov pop out ja movsl push push movsb out sbb mov cmpsb out ror enter xorb jge out das sbb ss clc jmp inc cmp out pop push stc mov out aaa cmp out lock out imulb ret jmp jb and scas (bad) push lahf pop push aam pop xchg jae addr16 iret into sarb lods inc (bad) repz fldt decl or out out out xor inc stos cmpsb sarl in xchg insb xchg aas add stc hlt push ljmp mov adc out fucom out dec mov je out xchg dec cmp dec push loop scas idivb js jns stos fisub daa into out out adc sahf out out repz loop pop or fisttp pop inc and pop insl out out pop adc add hlt xchg mov rcll unpcklps pop loop jne (bad) jnp pop out dec push out lret es (bad) jbe push ljmp jecxz dec int out out test mov jb and scas loopne loop shr push bnd mov in out rol cmpsb out pop jne loope cmp fstl (bad) in dec lret sbb popf out outsl or (bad) (bad) out adc xchg out add out xor out fisubr sub jg popa daa mov sti mov lret out xor pop adc push adc mov ret add call out loop inc jecxz mov sbb push in popf in mov in out aaa test iret imul lock aaa stos pop lods loope cmp ss and addr16 jb fistpl sub mov push in addr16 dec fs out out mov int inc in jbe out shrl mov and fidivl mov bound adc push movsl jne cmpsb and pop fs shl inc lcall xchg leave test lock ret add loopne fild call pop mov loope (bad) xor pusha out pop rol and cli imul xor dec or fucomi (bad) insb dec js jno enter movb iret jg xor fadds cld jge add stos cld cmp into ss (bad) mov push outsb add negl and pop xor jg xchg outsb out jb out fsubs cmpl fs pop push les int3 xchg in subb (bad) xor and int ljmp pop int3 mov dec scas xor stos lds mov mov dec xchg push mov add out je pop popf lock lods ds xor (bad) sub outsl push lret addr16 mov rclb mov jne inc test inc mov out out (bad) sub mov out mov imul movups push outsb aad mov mov lock or negb stos pop dec push sub in sub jg sbb out add movsb and or les jae pop pop rcll pop out mov das mov jmp cmpsb ljmp out stc icebp clc in xchg (bad) push std psrlq lret add push cli out outsl ret pop sbb ret dec dec cmp out iret es out lcall ja xlat aad in imul ret out add sarb (bad) ret mov out les lcall out jmp nop popf dec pop sahf ss dec out add mov pusha jle jns out lds sbb push movb jl add ljmp out (bad) enter jle ret ss inc data16 incl ja arpl push movsl into fstpt lret jns ficom out pop jmp ret sub inc pop movsb xchg jg sbb cmpsl out dec mov or ljmp loop scas pop pop jb pop loop sbb (bad) ds fistpl out arpl aam dec sub mov mov sbb fidiv scas mov outsl inc pop test outsb jbe in out fbstp scas push leave jbe mov rclb outsl cmp jne jp pop (bad) mov xor pop pop icebp lock cmp or mov or dec fcmovb sarb xor addb in mov (bad) mov dec cmp sub push out fs out lock scas cmp mov jns out mov adc hlt out inc dec jmp jne xor aas pop fbld call lds sbb loope fld repz (bad) icebp enter mov in sar mov pop jb mov pop cmp xor push cmp out mov sub jb int arpl and push jle gs out icebp jbe push pushf (bad) lret in repz js cwtl sahf xor sahf shr sbb pop xchg push adc das out decl cmp inc jecxz cmp out (bad) enter mov pop push and push xlat in scas jle ror pop mov aam lret cli je jle sahf jecxz stos mov cwtl or add imul call sbb in pop pop jecxz js sub stc pop scas enter or dec cmp fcoml cmc in cmp lahf and out addb (bad) out sahf ret (bad) sub jbe push es int3 pop pop bound push test fstps xchg test ljmp stc pop xor int3 inc in out cmpsl mov and into mov out sub adc enter into add jge fxch insb dec cltd sti in out in push mov adc xchg subl jge pop (bad) push push out pop pmaxub push movsl jno inc repnz callw das xorb roll (bad) out jge je out and sub out pop movsl arpl add data16 pop movsb and hlt adc loop inc (bad) loope (bad) stc call out or mov jecxz or and out addr16 push push scas inc stos jg rorb mov in jbe loopne idiv ljmp dec mov in call ljmp test out sti in mov fwait and (bad) ljmp sub xor xchg dec call pusha mov insb daa cld int3 cmp out les leave (bad) lahf dec out stos scas fucomip add stos (bad) out adc int3 je xchg loop idivl cmp xchg in mov mov cmp out jmp lret pop lods cmp fnstcw imul adc out sbb lock adc fisub mov (bad) loope hlt cmp gs pop lahf jmp cli push out dec inc jo out jbe add (bad) adc xor fldz int3 fisttpl xchg imul mov dec adc lods (bad) cwtl cmpsl jnp int stos ja sub dec out ret xlat fsubrp je jle out jno sarb and fs sbb mov sub mov pop push mov lea inc push pushf mov arpl jmp pop and out outsl stos (bad) out shll inc jge iret xchg mov mov sahf out nop (bad) out (bad) cmp xor (bad) outsl mov mov es data16 pop add jmp jg sti sti inc lods inc jle push lods lahf jbe lods out rorb mov out jl mov fcompl add loop xchg mov fcoms sbb adc push mov loop jbe icebp inc lods (bad) jle out neg stos popa dec in addr16 and xchg pop es push insl xchg pop (bad) call (bad) js jecxz call out das lret clc lahf pop jle das push notl fsubr daa out fnstcw cmp sbbb andl sub sbb in out sar (bad) repnz jmp and pushf pop sbb mov mov lret out push inc gs int out aad test (bad) dec jle push jp rcrl insb gs mov les shlb fs std dec inc xor sub out out aad cmp scas dec jo scas inc push cmpsb jbe leave jl mov mov xchg sub scas fwait jne out hlt pop adc pushf (bad) imul (bad) mov out out lret dec mov js jb clc out in shrd push mov inc sbb (bad) adc sarb pop push sub xor jmp ffreep or xchg sbb mov lock movsb cmpb movsb loopne inc inc aad bound jmp stos je js,pn out into lods fmuls mov jg ret aam outsl enter dec lock push out sub mov or les das out cld xchg xor sub mov lock mov shr pop je cmp ds jne out mov sti test out mov inc out push in cmp add mov jno out fadds (bad) scas out jg (bad) fist das insb inc adc mov inc mov mov add test dec jae sub data16 iret mov jmp (bad) pop jle les out fistpll fs ret aas dec fldenv sbb in test jmp or pop pop aad xchg int3 stc out lods shlb cmpsb mov es pop inc sub setne out and out les ret add xchg out dec adc sub mov mov pusha sub mov push popf add mov push in out out call mov jle sub loope lock in pushf pop jge pop lock xchg or cs push pushl xor jbe lahf (bad) pushaw inc jp aas out pusha shl cmc outsl pop and xchg xchg add dec inc ds cmpsb adc mov lahf cli pusha daa je jmp repnz mov and adc inc ljmp inc stos (bad) xchg das fs xchg xlat sar jbe sarb ds xor inc loop xchg (bad) mov add mov les push jo in shl jae adc stos mov cmp pop aas outsl int3 jns cmp call mov mov cwtl stos push jbe mov out imul out out (bad) pop pusha cmp fldt add ror ljmp jge or or add out lock lahf les in out mov out nop jo mov pop sub push cltd shll popf fsubrp push jb dec imul in out fbld push stos shll mov out jbe ja cmp in add jge jg loopne ljmp out rorl push out inc ds fucomip jmp ror pop dec push jnp fbld lret cmp addr16 loope in jle pop adc inc xchg pusha jbe shr out jae (bad) jmp out sahf je and push cli out cmc push insl out repz fucomi jl jne xchg out fs pusha mov jecxz xlat dec adc test out out es outsb mov sub cmp jg sub call fnsave insb movsb pop out les out mov out pop sub sbb mov aaa cli ljmp adc in out adc sub inc imul pop xchg (bad) jbe out lock adc xlat scas lods int out mov out out xor out call lea in mov jg jmp cwtl gs jb push loope popf out xor sbb or sub in dec sbb mov push mov leave pop insl outsb popa push icebp in ljmp push je mov adc out insl push addr16 sahf inc mov lret lahf lock movsb lock ret out test mov xorl mov bnd out ss and and xchg fwait out aas or das sbb push bound out daa jo cmp data16 add pop jmp iret outsl pop sub ljmp adc (bad) cmp mov mov ja out out push pop dec fisttpl test es jmp fucomp cld mov jmp jno mov out pop (bad) rorb insl test jne push es pop xor adcb je mov shr push inc cmpsb ja inc add pop stc pusha mulb sub mov fistp int mov cmp inc aas mov lock pushf cmp pop in gs add (bad) jae dec insb dec push rcrl shr repz out aad mov jle adc mov out sbb scas mov das or (bad) loop fistl pusha jl ja (bad) out jg es gs sti out in pop add out pop cmp mov enter out daa jnp xor fnop lock pushf sbb mov cmp xchg int cli dec mov or out lods cld je pop jnp mov mov jg gs stc jne fistpl scas call adc pop sahf inc pop and in mov xchg lret popa enter in mov out int push mov cmp imul mov pusha (bad) out out addl sbb pop mov cli vpminub lods pop sub mov pop insl jmp push push sar leave add cmp and adc out out sbb jle and out (bad) dec mov xor and aam dec jmp mov out mov sbb scas out inc popa ds out aas pop in repz fwait jg push outsl mov out out scas pushf shlb idivl mov out jb subb xlat mov sarb dec jecxz cmp lret idivb js cwtl out sub xchg cmpsl inc xlat push out cli dec jge dec sub leave out arpl cmc stos push cld sbb out dec push out ja bound xchg sub push out in aaa pop icebp stc (bad) in push test xchg les out test out je jle pop cmpsb rcrb inc out outsl lret dec nopl mov out aam xor jecxz mov jg (bad) pop aas jecxz lock lods out jbe inc mov lea shll jle push out aas mov mov das fcmovne call out dec mov (bad) push out pop xorl cmp (bad) out xchg dec stos leave out repz jle sahf inc ds pushf out jne fsubrp xchg loope mov pusha inc out or lock mov std (bad) push ret (bad) imul pop ds pop insb in out pop pop out pop dec cmp sub test mov mul fsubrp lds mov adc shl jnp arpl mov adc push mov out enter pop (bad) out arpl aam test push xlat lds or ss out pop adc lret xor test inc (bad) xchg xchg loopne and or clc dec sub pop int dec jno cmpsb cli push gs push sbb movsl es jae aam (bad) ss out ds outsb sbb pop popa sbb addr16 inc loop shlb adc daa sbb movsl insl adc ljmp rcl sbb pop or lock ljmp out outsl pop ljmp adc sarl popf pusha out popf gs imul out out mov popf fnstcw cltd not ja stc pop jp adc das imul (bad) mov lahf mov data16 lcall sti xor push dec sbb add out mov inc mov das loopne (bad) in push shrl xchg fsubl out ret mov movsb mov push call out out xchg insl and and adc clc adc arpl (bad) call mov fild rol adc and pop sbb jg or sbb out out test (bad) lods cmpsl mov sbb sub xchg mov rcl decw sahf bound fwait out into cmp jmp push psubsw lock (bad) mov dec lods cvtps2pd push insb jg pop popf push loopne lcall mov cmpsb out movsl out push gs inc arpl loope bound ss imul (bad) incb call (bad) sahf js out das and push adc mov (bad) addr16 out popf arpl fs mov inc pop cwtl out gs das icebp fs ljmp mov insl dec jo out xchg push insl repz call jecxz arpl out outsl sub divb lock bound dec out hlt adc ljmp iret jmp loopne out sbb scas insb sub sbb in data16 in insb and cld out xchg imul int cmp dec outsb loopne in xchg push out (bad) insl outsl jmp insb (bad) sti ljmp mov es test out dec gs mov out xacquire imul out addr16 call push insl lods std in in shrb pop outsb scas pop out push jmp stos insl lret in lods outsb ljmp out jnp (bad) push in dec lods pop out lea loop repnz mov cs out gs aad (bad) pop loop xchg in in std in jge mov mov insl adc jmp xchg call arpl insl outsl and fdivl ljmp std dec in push popa fs ljmp xor fdivr mov cli in insb out (bad) jmp imul out jo out dec outsl in out out imul imul mov ret insl push jmp insb sub pop lret outsb pop in cmpsl sub push mov test fs add out arpl out push mov jg jmp imul jbe aam iret fldt call (bad) scas sbb nop insb xchg push push jmp loope pop in sbb into mov outsb popa sahf out outsl imul mov lock std loop arpl lret jecxz fs sub out gs mov mov imul or clc pop or sbb mov inc sbb xor addr16 inc fs push movsl in das inc outsl jae xchg (bad) bound in rorb xor xchg jo gs shl cmpsb test lock loope push insb or cld call data16 cmp pushf jo out mov (bad) out into jmp insb mov cmpsl outsb loopne in mov xchg mov insb decb cli outsb or test ret in fildll jg movsb push out arpl xrelease test dec out addr16 mov push jmp out xor xchg out push shr js dec (bad) call dec lahf lods loop add jns mov in out mov push addr16 fldenv jecxz fs or pop xchg stos out xchg mov pinsrw data16 imul in inc outsb mov je jo out hlt lahf imul push call jecxz arpl pop push imul jo mov out cmp mov sahf add test jecxz insl xchg mov dec pusha enter rcl out inc sar mov cmp leave jmp pop mov sub pop cmp lcall out sbb mov cwtl and ljmp jnp negl es xchg or sbb rcrl or fsubp das and outsb mov dec adc out dec lahf std sar out aas aaa and or mov push lods ja or (bad) out cs ss and repnz out inc push icebp and enter lea jmp dec cmp adc (bad) fnstenv mov in ss (bad) cmc nop mov jecxz lods out adcl pop mov call iret mov push mov mov out loop arpl out dec in (bad) pop rclb mov xchg jmp xor test cmp adc outsl xor pop xchg aad push and decb ljmp sahf mov mov dec fidivrl fninit pop scas pop out lods add sub outsb (bad) cs mov stc out (bad) sti cwtl and adc jle insl out or fsubrs push mov ret pop inc out cltd test push scas (bad) bound out mov mov push inc pminub hlt fsts (bad) fucomp mov pop lret mov std ficompl js scas xchg mov (bad) jbe add out in sahf or mov pop pop xorl xor cltd iret imul sub adc mov or fistl mov loop xchg rcl out mov stos pop mov loop int ljmp shr jne repz push sbb out mov and shll mov mov cmpsb or mov loope add movsb jo out push or test adc (bad) out pop in lods pop mov cld out pop int3 mov dec push adc jle leave sbb mov lds (bad) mov test insb outsb fdivr sub aas ljmp out jp add (bad) icebp nop (bad) lock pop xchg in out mov jg mov xor loope out jae clc insb in std and sarb xor jb out sbb dec push xor mov lock xchg and cltd icebp out and jno testb or out and add fnstenv ret out inc test popa (bad) mov pop pop enter cli mov pop mov cmp mov pop and outsb cmc push cwtl lea outsl enter mov mov xor popa cld imul jno mov in add mov imul cmp decb (bad) mov imul out cs adc jl rorb jge or cmpl or out sbb mov mov cmpsb push aad push in fistpll loopne js cmp add pop jmp hlt addr16 push jle push xor and into mov (bad) clc jo out push dec movsb mov out lahf jmp xchg movaps leave push pop and cmpsl jmp fldenv pop mov loopne,pn imul mov loope iret aas test out popf push out test out inc add jbe mov nop pop pusha (bad) jno sti adc lahf test mov dec popa xor mov adc fwait out lds xor movsbl popa aaa arpl (bad) sbb int (bad) sub jo ljmp pusha mov xor loop adc out (bad) out jns stc std lret scas sarb xchg cmp xor bound pop sbb mov xchg outsb inc out cld test dec out in stos imul pop sbb out cld mov xchg out insl xchg lods xchg mov push cmpsb (bad) adc cmp into movsl pop out (bad) (bad) adc cmp fbstp call or and mov xchg lahf neg aaa or inc jb cmp sti ljmp in xor scas mov negb out aaa adc gs cmp jl adc xor and ljmp loop jne add or dec outsl out mov add sub xor int3 out mov and add rorl outsl shrl (bad) out fldl mov out cmp pushf dec push test adc mov inc wrmsr arpl adc and push pop loopne (bad) lret movsb mov push insl nop out ds mov inc insb cs out mov and adc es xchg mov fsub mov jecxz loop mov aaa cmpsb adc xor outsl (bad) and xchg push insb loopne add pop and or mov mov mov lea adc ret les pop cmp xchg insl nop rolb push add movsb out push xchg mov jnp add mov stos (bad) jb pusha out into lods mov dec aaa push xlat mov adc or lret leave adc in (bad) xor decb mov sbb mov xchg (bad) sub movsb sub in push cmpsb (bad) xor divl mov or push xchg fsub imul ret xor out arpl in out rcrb (bad) lahf or xchg stc out loop cwtl pop fsubr mov cmp clc dec push out int sub out iret xchg or mov cmc cmp jle jmp int aaa xchg out int3 jmp pop faddp mov add lock add adc xchg inc (bad) ljmp rcrb mov data16 dec sbb cs mov out jo jg sahf lds and lcall stos notb out jge jle stos repnz pop popa push enter mov push and pop lcall loope (bad) in (bad) add xchg out and and push nop out adc xor movsl xor push mov mov cltd mov cli mov add and hlt arpl cwtl fildll and cld out jae repz mov aam out loope roll fidiv (bad) out pop mov out es mov sarb out pop mov mov jle shrl aaa sbb mov call dec mov pop pusha lea stc in jns dec mov jmp loop lret int mov inc daa and nop out and xor xchg sub adc outsb cmp es call out sahf sbb fwait mov mov dec (bad) out jecxz fistpll out pop lods pop jmp or fsubrs insb fldt lds out lods lock xchg xlat loop jp push lds fldenv in push mov dec pmaxsw xchg arpl out ret in outsb loopne cltd mov repnz and int out xchg loope jns add lea out cmp inc push int3 stos mov iret jae aas loopne jns in jo sbb into add enter cmp adc (bad) push pop lock das dec out clc aaa or out mov xlat (bad) dec out (bad) fcomps jo sbb inc stc cmp out pop pop lea out fisubr sub shr push mov negb or mov dec out cmpsb xchg pop push adc in (bad) xchg fcomps into lea or int3 out cltd ficompl es arpl out out fldenv repz mov ret push cmp sbb and out push mov sti jg mov jle pop mov and mov inc xchg out cmp push mov sbb sub dec ss mov mov pop jecxz insl sub adc add data16 in pop mov sahf test (bad) cmp sub pop lods out inc jnp lods insl dec mov mov out shrb push mov jp push dec popa ret out lds jb mov xor ljmp loopne (bad) mov push xor leave pop pop imul insl sti in mov out outsb mov pop and lea addr16 pusha mov sahf xchg dec shr inc int out int cmp fdivr cli jp sub jmp lret dec xor imul adc xor adc in (bad) jno jmp dec iret mov push out (bad) ds cwtl sub imul pop pop sub outsb mov jecxz jge dec inc sbb cmp cwtl lret dec fbstp mov xchg pop mov (bad) ljmp add pusha (bad) mov jb rcll in iret fnop out (bad) (bad) cmp (bad) arpl out loop lds sti xchg jno test movzwl pop in arpl and pushf inc inc lahf ss push es callw ljmp (bad) xor hlt in jae inc lods push loope ss inc movsb and ret dec out sub jo inc test lcall pop lahf fistpll cmp sub mov mov sbb inc fidivrl fsubr aad push sbb xlat ret into pop mov in pushf jnp rorb out subl out mov jne xor popa data16 dec pop jecxz and aam xor in in (bad) icebp into ret out popf mov dec out insl fmull push dec movsl mov ljmp push lret mov call xor aam adc test mov into imul dec out call inc out test fsts arpl aas out mov andb loope and inc add out jns int cli movsl cmp out fwait pop or inc cs es aaa fsubrs push dec out ljmp dec out mov jecxz push out fdivs icebp mov out dec sahf jmp cmp xchg ljmp push leave and fsts out mov and adc push jnp cmp imul stos bound out rorl repnz divl sub out dec jne xlat xchg pop pop sbb sbb jbe test leave cmpsl mov sahf out (bad) cmpsb fisttpll jmp cmp dec and sbb jp mov or les out shr mov clc mov inc pop dec fldl out jge scas adc out addl mov jmp inc pop adc xchg cwtl (bad) out lods sbb and mov out js movsb cmp fsubrs jle loopne jns xchg lcall push inc pushf mov adc dec into pop out jbe fs js stos out seta push subb xchg in xlat lock shlb leave stc mov inc repz mov gs push rcrl mov pop jp out enter fdivrs add daa bound dec out scas mov lret fstl inc sub out (bad) mov lods out fnop mov ljmp sbb mov hlt jno cmpsb add lods test stos fnsave shl sbb lods dec or pushf out xchg fidiv inc push subl sub ljmp fsub fcmovnb push ljmp mov inc insb fmuls pop out sti out push push dec jp sbb stc push inc lods mov mov inc mov loop outsl dec pop xchg and jb jb negb loop cmpsl (bad) mov lock add call sbb lahf mov add mov add adc loope adc jecxz les (bad) loop into sbbl mov inc arpl cmp jl js inc cmp sbb push mov sbb ja js jnp sti mov std cld cs aas adc and decb jne (bad) sti add imul or imul cmovs lahf pushf aas lcall mov jle push out adc (bad) push pop out shrb mov fsubr cmpsl (bad) clc aad mov xor out stc or lret mov loopew xor push out icebp popf mov pop mov push daa iret jle imul test out cld sub add sti xor out (bad) cmp dec lret test in iret (bad) dec andb scas xchg in xchg ljmp in out jmp aaa pop xchg out inc bound sbb out add mov adc dec fildl out movsb cmpsb add js insb fiaddl or inc pop cltd aad call pop jno dec lock sub cmp out sub stos xor xchg out dec lea cmp mov rcl les out mov jnp out sub mov and mov cs es push enter push inc out aas cmp neg inc sbb xchg add hlt or sbb out xchg jmp and xor push or out or adc out shrl lcall xlat push notl cld pop jae fisub in test push cltd pop jmp pop leave aaa sbb fcoms (bad) (bad) into shr (bad) mov xchg pop gs push rclb or mov nop lahf jno data16 mov addr16 pop arpl ja out je das cwtl jae js push jns jne jp out daa mov jb and stc sbb enter jecxz sbb jp fbstp ja in outsb js sub je jp cs jns out jae js sub insb out or jno pop jle mul imul or jg out mov xchg ss mov out jbe,pn and arpl (bad) out loope mov pop clc xor out in out out lock adc mov out imulb dec mov mov insl sbb fdivr shll adc addr16 or lock out fsubl ja imul sub das addr16 fidivr mov rcl loopne int3 in loop stc loop mov icebp stos inc insb and (bad) xchg out (bad) jecxz test cltd jae das inc or jo push and stos or and push and (bad) or out jecxz mov add out aam scas out ret and out in lods rcrl daa add clc mov (bad) lock jecxz mov pop sub dec mov (bad) paddd psrld insl popa das mov movsb add in xchg add add mov outsl test and movsl (bad) loope xchg fiadd mov sbb pop lds push xor mov xor insl pop rclb add sub test (bad) ror fnstenv ljmp (bad) add mov jno out dec jge push scas xor mov aas cmc add mov rcrb mov mov clc mov out inc jbe jl cmp les clc stc scas fcomip aam stos ret or js outsl iret pop pop xor loop ss aam push (bad) adc xor push cwtl popf add out stos (bad) fbld movsl aas add out rorb push out popf pop icebp mov stc divb lret cmp pop xor pop fstpl imulb mov push es jecxz fsubl out (bad) and push call aam mov lahf mov mov mov sbb out sti mull push pop sahf fsub xor in mov imul cmpsb popf out xchg lret xor mov fcompl mov out xchg dec push push pop xor movsb gs out dec inc decl fiadd lds cmp lahf jge std push jne inc out test int mov cmp mov ljmp outsl push sbb xchg mov out stc mov cli ss (bad) mov adc out jmp fld (bad) call mov fsubrs cmpsb push out aam test lret pop out dec xchg js lods and daa dec push mov push push out mov mov lret mov out and push pop std add mov shr push inc mov pushf push in jae,pn out ljmp fisttpll push jo call ljmp out sub push xchg test cld dec lea test fldcw fistpll or out cmp (bad) push (bad) sub pop dec pusha loope cmp negl pusha out stos out insb mov lock sub dec sbb out sub add cmp clc insb call leave enter loopne loop cmp sub jmp out push cltd mov mov out add sbb int fsubr xchg or xchg insb ret inc sbb je call aad (bad) int3 adc ljmp (bad) push imul inc mov ss idivb add in ljmp jecxz xor into inc call inc out std loopne dec jge ds pop pop (bad) mov xor cli das dec xchg sub jmp pushf out mov sahf inc inc out rcl adc cli xchg pop lahf ljmp gs out xor mov jmp mov out dec dec push fsubrl test loop loop xor fsubrl out mov sub mov cli stc out cwtl xchg cmp iret lcall pop sbb and jmp (bad) jo sbb lret push out jl sub add fimull fucomi dec gs mov mov cmp icebp pop jg out fistp lods or subl mov scas (bad) shl mov lahf aad loopne cmp sub ret inc cmpsl pop (bad) xchg xchg xchg push je mov mov sbb mov rclb dec lods pop mov dec or sti ficom fstl jecxz jb out mov ret fwait lcall nop dec sbb or out idiv sbb pop jbe pop dec jg bound jle push sbb icebp scas outsb xchg out xchg rcrl mov mov in ljmp imul cmp out in aad push sbb mov sub add pop cmp std loopne mov repz push into mov insb mov test in push stos ficomp lcall xor sbb or shlb stc pop mov out repz sbb icebp or push sub rorb aad (bad) (bad) fucomip hlt mov adc cmp mov adc leave movl dec sub fdivs xor je xchg sub clc ljmp out push jp xchg jno and out ja sbb fist je xor adc insb dec aad incb loop mov or or xchg rorb es push leave lahf lcall pop dec ljmp jle mov aad add js xchg out jnp jmp flds lahf adc pop andl add shll cwtl xchg addr16 imul cltd in movsb cs fbstp pop rorl pop inc out into add mov out out and jp mov lock mov insl adc insb xchg pop or mov adc mov nop out mov pushf push in in push (bad) call in shr pop fs insb mulb lods xchg test xchg or or adc loope fldenv repz mov inc in cmpsl mov cs out aad mov cld shrb loop sbb xchg cli sbb mov push push je (bad) jbe fbstp inc std test bound hlt adc add je push sbb (bad) sub adc dec lahf shll cmp inc xor sub repnz mov dec push jecxz aad cli scas shrl and mov jl (bad) dec out lahf (bad) adc imul sub push fimul out xchg mov movsb pmaxsw test xor add sbb flds out inc xchg es mov inc cmc scas (bad) fsubrl adc pushf (bad) mov cltd pop fist mov out add int adc adc cld sub xchg out adc xor cli (bad) pop push (bad) push xor in add pusha mov lods out xor xchg movsb inc dec pop add fistp loope xchg xor popf dec je sti jmp scas mov and ljmp in lds cld fldt out fcompl ljmp or add and add shrl outsb movsb das insb cmp mov lcall out sahf ret cmp shlb jg dec cmc inc out sub or xchg adc js je in mov sbb fild out xor in out xchg movsb call mov mov pop add pop pop ljmp jns scas pop jg lods test jnp mov and cmpsb negb ret cmpb or ja nop out pop (bad) fmuls out push push aam mov adc ud1 inc ret inc or movb adc mov mov aaa (bad) out outsl push pop pop (bad) mov loopne push fbstp je mov loop out dec pop add das pop lret jge jnp and out add and roll pop je out sub sti jne out mov add mov lcall sbb loop push out push daa int or push shlb mov cmp xchg push dec nop out and dec not inc pop jle scas xor xlat fldl2e das xchg aam addl fidivrl mov data16 cld cwtl jmp sbb leave fistpl xchg jmp push push jecxz pop ror out mov xor push adc data16 xchg pop popf and cli and pop xchg push xchg addr16 inc mov mov movsl xchg mov outsb jge jb mov dec int or sbb stos out jb push out stc cmc add movsb add jp stos cwtl adc dec in movsl fwait cmc dec cmpsb fistpll mov xor fnstsw in dec leave out testl jo out enter sbb xchg (bad) mov je mov adc pop outsb dec add leave outsl xor sub xchg mov adc shrb out mov in test cwtl fiaddl fldl2e sbbl cmc stc mov enter push addr16 inc lcall roll out fistpll test repz adc mov test (bad) clc shrl call loop fist shr ds int hlt nop imul out (bad) fnstcw xchg pushf dec mov dec icebp dec pusha (bad) jne mov xchg sahf scas (bad) mov cld aad outsb push push xchg cmp mov wbinvd lods cmp aam ds add out mov push or mov out mov add pop movsb popf out inc and mov in in fwait ja xor es mov leave iret insl aam and xchg imul aad pop jge (bad) mov xchg (bad) cmpsb test out mov cli adc mov loopne mov loop dec cmpsb or out mov xchg push aas adc sub ret jns jecxz jecxz imul adc sub fwait (bad) xchg push loope jp cmp test fs popa out sbb ja jo out mov loope insb out cmp rorb cmpsb jp sub pop ficom frstor data16 pop insl push das stos mov sub mov jle sub jns adc out in (bad) and jbe in cs xchg into dec hlt push push mov popf shlb gs outsl sub insb xor out cmp xor or mov (bad) daa (bad) mov jb out push (bad) enter in xchg adc jo out pop cmp jp (bad) cltd out popf push xor push jl,pt out dec xor andl xchg add mov test adc sbb std cmp cld mov stc out jle xchg addb sub inc xchg je in pop or out mov iret cmc pop cmpb pop addr16 sub out sbb into push push ljmp lock mov mulb push sbb bound (bad) pop (bad) lahf data16 jle cmp jmp mov dec add scas fs ret push test (bad) hlt in aas push cmp mov addr16 pop in (bad) in push loopne jmp out sub addb push inc inc out arpl xor in pop mov and jp xchg mov test out mov pop lret nop push (bad) gs and pusha cli sub movsl clc xchg mov scas out fwait mov pop out fdivs pop sbb subl add fs shr xor push push out pop test lock out sahf mov lea add sbb jmp jl lahf lods aam shll mov jg out and add xor add and sub scas loopne sub out and dec pop mov mov jmp out rcrb jge dec mov out dec out scas add pop pop add pop xor jmp or loope inc push imul jle cmc mov cmp int mov and adc movsl dec mov xchg xlat push xor scas dec out jg jge pushf mov dec out cmpsl mov enter addl ret mov mov inc les (bad) repz mov xchg inc inc push sbb cmp lcall cmp ja test movsl mov mov hlt out xchg sbb cli jnp pop pop ret mov adc icebp (bad) ljmp lock cli out jg push rolb mov pop lahf jge out aad and in mov inc jecxz add add rcr pop xchg pop pop out or movsb fidivr jnp ss cmp loop insb fwait cld xchg pop int xor ljmp (bad) movsl cs dec mov out clc scas lahf xor data16 loope loop jl ret sub fwait out or inc jne shrl in out stos cltd in stos dec fmuls out insb add push and inc jne aas aaa mov icebp or (bad) push pop (bad) jae stc sets add jb iret mov jl push pop aas arpl jmp insl push aaa das (bad) ljmp in pop out test je iret xor pop icebp fisub mov (bad) sbb (bad) lock out inc add cmpsb es lret into cmp cli fst andb fwait aas jns movsl in nop decl iret mov push aam imul sub pusha xchg dec add les out (bad) mov push out (bad) jno sub dec mov push mov adc dec jo cmp xchg in out and lds out inc mov imul loope sbb pop cmp out inc aad and clc (bad) loop aam cwtl popf adc cltd iret lea out test out dec mov push mov inc fxch btl mov jmp out js int (bad) xchg or inc sbb or cli and shl mov out inc fist cld fbstp mov sahf dec insl sbb (bad) and push out mov jge mov out xchg mov cmp out ds dec inc (bad) cmp mov and shr movsl or xchg lea imul out addl aaa xchg icebp jns push pop loopne jbe ljmp out pop idivl outsl out adc nop xorb loopne sub sub out lahf bound lret mov adc out mov push fstl fdivrl ss daa mov mov mov aas iret adc mov loop repz decl fisubr mov stc sbb inc sbb mov mov ljmp mov mov inc daa lods xlat dec test out rcrl xor ret int3 out lods push or das cmpsb aas mov xor scas cmc out push cld lods inc xchg ret scas sahf mov lret xor test push bound push jle sbb out aaa xchg inc in dec divb out lods inc sub push (bad) aas out mov rorb adc addr16 mov jb fsubrs lret xchg rcrb mov and in dec addr16 push xchg pop das cmpl daa imul xor das push inc (bad) imul cltd in out gs hlt out rcll and mov inc (bad) bound leave xor push lahf popf sbb lret mov jmp outsl clc add xor pop daa lea imul pusha add sbb repz inc movsb in push (bad) std push xlat xchg aad test mov scas push out xchg popf sbb lret mov out out das jecxz (bad) fmuls nop mov jmp out out into cmp add (bad) adc pop addr16 arpl sbb mov add pop cld aaa jae repnz in dec inc inc xchg mov cmp cli js mov outsb mov arpl jg test movsb pop mov subl sub fisubr adc in lock xchg push addl jno icebp xchg xor out cmp out push add out (bad) enter mov mov daa test mov out add add jns sti das (bad) sbb loop mov rcl std (bad) daa out stos jno mov xor cli (bad) mov or into in out arpl add pop add in jno pop into imul sahf mulb lock loop (bad) add xchg lods ret ja,pt adc out jo adc out das (bad) aas scas add mov rclb mov je add insb sbb rcll jle push repnz pop fsubrl int pop scas ljmp in adc ss pop insl in out push jl or in push out pop cmpsb or cs out fidivrl or lahf scas dec cmp int3 cwtl push shlb ljmp out loopne cmovo iret repnz out movsl out outsb mov imul push les out loope leave sbb out (bad) hlt imul out pop fstl or push out fstpt test mov or (bad) push cmpsl das into pop (bad) jnp incb out test mov sbb repnz mov pop adc mov mov lcall sarl test (bad) adc jae xchg arpl jmp shr aad pop out ljmp mov push (bad) imul (bad) adc mov out mov mov and mov imul pop (bad) repz fcmovu xor ja and loopne adc (bad) popa shr outsl bound sbb pop pmaxsw jns push loop out ds push out xchg ss int3 mov negb pop ljmp cmpsb jle out adc cltd pop bound xor je jl aad outsb inc out pushf mov das xchg outsl fcmovb out aas sub mov jb test xor mov and andl xor pop pop addr16 out sbb pushf (bad) cmp rcrb inc and and xchg out pop mov cmp (bad) fnsave sahf (bad) test out pop aad and out ret out mov ljmp lock push mov pop dec out aam cwtl push rcl sbb dec leave add pop out gs adc dec fcmove (bad) mov pop (bad) xchg xchg leave outsb sarl dec ret jb mov ljmp out xchg push aas pop insl out lea jmp pop mov mov repnz jb je fisubr call mov lods lret lahf cmp in std cli in (bad) dec pushf add sbb dec iret shrl in subl sub pusha aas jne xor (bad) mov add push call ljmp stc out cmp sahf jb icebp sub es mov repz bound push xlat movsb call lods inc mov pop mov cmc cli out or gs mov push iret inc (bad) jecxz lock mov cld rorb inc stc stos pushf out lret inc sub mov jmp cmp sbb fisttp xchg ja mov data16 jg push out scas inc inc adc (bad) idivb (bad) xor mov adc mov push jbe out and aaa jg repz add fbstp loop,pt sti xor mov fdiv ja mov arpl mov fcomi push mov or test add out mov jb xchg shll adc jge add xchg inc xchg mov cmp loop cmp sbb xor pop cmp ljmp jge (bad) out lcall or xchg mov pop mov jo clc jmp rcrb xorl dec leave jl mov push (bad) mov jecxz es fcomps ficoml jmp scas mov mov jl lcall movsb outsb cmpsl adc out test push dec inc aam sub sub out pop pop inc (bad) dec cltd xchg aad push jle or leave jmp ret aam adc cmc lahf out mov xor jg int3 pop fadd out jl pop in mov or outsb mov inc fdiv iret add shl in jae push test jmp push aaa xchg and popa mov out xchg pcmpgtw out lock pop out mov xchg pushf inc pop fcmovne mov notl out pop sub scas pop lret xlat or cmpl cs ret xchg popa push stc loopne out pop aas adc imul in jl mov or jle sub out jmp push (bad) out cmp or push movsb out jl cli cs bound iret cmc sahf (bad) out dec mov sub xor sub and mov sbb mov xchg sahf sbb in int3 cmpsb popa adc aaa loope adc pushf das out stos pusha mov loop movsl out out mov jp xor leave mov ljmp xchg dec loop in jne pop mov cmp sti xchg out xor inc and out sub or cld (bad) shr mov insb or push int mov lahf sahf push notl and mov mov fwait cli jbe out pop inc adc out fcomps js xor (bad) cld out or outsb push out test dec mov out icebp int3 push aad adc out dec mov fwait add mov clc lahf cmp outsb mov in cmp xchg dec dec xor std addr16 out jg mov mov test add inc movsb test inc shrl (bad) fiadd fsubs xor out out bound mov out mov add jne out sbb stos cmp lock and xchg dec out or or sub pop and cmp in fwait jb test fsubr mov or out aam add ret out inc repz xor adc push or mov jo jg (bad) xor mov cmp jo repz fsubrs and push fnop cmp testb daa jo das test xchg stos push cmpsb jp mov mov inc pop iret scas xchg mov sbb cmp push loope (bad) out mov adc in mov in pop loopne hlt mov aam cmp out lods ds es cltd sbb imul cwtl pop (bad) pop outsl sub out sbbl call sub and jle out mov repnz out jbe lods sbb pop mov out sub out jne test adc jb sahf out outsl stos xchg in sbb (bad) iret cmpsl in imul pusha out jo dec mov (bad) jno bound push out sbb dec call enter leave loope jns inc mov ret out xchg frstor jno out rcrb loopne dec xchg push and and sbb outsl pop sti pop or addr16 fisttp int pop dec jns pminsw popf fs sub push jl and adc (bad) mov xchg out nop dec in movsb xchg out and inc xchg sub ror mov mov xlat push push imul negl mov jg hlt dec out dec inc mov sub negb outsb mov sbb mov shr cmp in lret xor outsb out lods test mov inc lret aad js mov (bad) push stos cli stos aas out dec dec rorl je mov lock push insb sarb add out outsb inc adc aas cmpsl jbe dec mov imulb pop dec bound cli shld stos or out or cmc out loope pop lret push inc call out xchg div imul mov or mov dec and adc inc cmp sbb mov fsubr pop adc test out test mov out fisttpl test std jb xchg sti mov negl push cmp mov loop dec in jbe out (bad) dec lret push bound inc fstpl lock xor adc xchg sbb lods mov jge adc out pop fimull lods inc pop cli add mov in out sub out mov loope mov sbb add (bad) mul pop aas incl test hlt xchg push cld inc jb scas dec iret out or or ficoml lahf shrb lds out (bad) aam cmp out frstor mov out fidivl sub test fistpll in or xor out push imul pushf or dec sub sub popl lcall dec lods lea je shlb ss out mov aas out loope outsl and testb loop les xor out mov lds fsubrp movsl adc fwait cmpsl or pop dec push imul sbb stos sub fildll enter mov loop jnp cmpsl mov jecxz bound ficompl fnstenv fild and inc pop sub jae mov mov jl cmp or mov out rcl nop bound je iret push xchg mov in les aad mov out push or dec or push das and pop mov fwait es mov cmp xchg mov push xor add xchg pop lret add ret stos enter xchg push (bad) lods test std pop scas es inc out jge je pop daa push push mov or out sbb cmp aaa out sbb gs dec sub mov in and lcall fmuls jnp push or add mov in test lcall fdivl pop ss int fist xchg add jno sbb fisttpll push mov cmc sub fdivrl mov cs out jae jns setnp rcrl sub xor add mov insb bound or loopne pop lret out out loope pop ss out inc adc fadds inc lds add mov jp out xchg push cmc stc pop (bad) mulb movsl out ret mov xchg out lods adc mov xchg repz adc pop pop add or push out mov xchg stos (bad) or neg sarb push cmc sub out cmp dec out and pushf push and test add shlb incb sbb (bad) lret mov lcall mov and inc loop jae jg out sub or mov inc pop inc insl scas aas sbb out jnp mov dec mov ds push subb je inc bound mov cltd dec fidivl cmp xchg cmpsb mov sub arpl (bad) jecxz mov sub cs dec loope add out mov (bad) int3 out cmp fwait in adc jp pop xlat imul inc (bad) cld xor lods movsl xor (bad) jb jno in mov cmp out enter out add leave sahf negb add xor jg mov out fildll (bad) xor out scas jns dec (bad) test cmp loop sahf ja dec xchg shrl sbb sbb dec sar cmp ljmp push (bad) xchg sub data16 cmpsb xchg mov add cmp dec mov stos aas cs pop sbb (bad) rcrb jnp scas and insl (bad) or int3 gs sub test add stos push shlb ljmp (bad) test ja stos add out xor push aas nop sbb jno shr fucomip dec sbb in mov adc inc inc loope (bad) ljmp incb fs testl (bad) mov dec inc xchg lret repz pop push aas sub or mov jmp cmp iret popa sub pop out roll pop cmp (bad) fs xchg push xchg out sbb pusha push cmp test and and out sahf cmc or jecxz (bad) (bad) jg pop pushf cmpsb das pop adc in test sub inc add inc dec out movsb aad sti cmpl enter mov pop mov in add add cwtl out in out (bad) retw mov pop push dec pop aaa out movsl test dec out and fistp aas jnp out xor push insb xor popf sub loop ljmp das dec or out call ljmp adc push xchg (bad) lods movsl xchg (bad) dec out add imul (bad) jmp movsb mov loop ds (bad) ljmp int jl sbb mov insb (bad) jo mov outsl xchg and or stos out push push ja into sub out jmp push and (bad) push ret mov push or movsl bound out (bad) das cwtl stos cmp push inc dec cmpsl xorb insb ret xor sub out hlt sub gs repz mov cmc insb popa mov jg cld (bad) test lods int3 mov imul in aas out loop pause cmpsb mov pop jp sub xchg mov ds jle jnp rolb mov jae sub xchg pushf and dec and lock add out and mov mov lcall mov push std inc cmpsl pop lods pop inc and jno jmp out fldcw out repnz out ret cwtl in mov ljmp in inc insl mov out or sbb push enter cmp out cld mov ret ss push xor adc mov xchg pop jno scas in out scas popa pop mov rorb fs xchg push rcl jmp push mov js or lcall (bad) repz dec out add popf mov push int3 pcmpgtb pop push in inc clc mov mov fnstenv xor popf add sbb ss repz out cwtl fmull mov addr16 fistpll stos aam sbb icebp cmp mov pusha add popf out decb popa mov out rcll sub push jge xor repnz cmp je lds and xor (bad) insl cmp icebp push ds (bad) loopne lret xchg iret out xor lds inc jp out lret insb std xchg push xchg ja out mov (bad) mov out or movsb xchg out (bad) js push cmp push (bad) xchg add add jecxz out mov (bad) lea add neg repz in xlat xor (bad) mov cmp mov mov and daa xchg (bad) inc dec ss jg push lods adc insl mov stos and push adc inc mov and push out jl lods pop test test pop xchg push lods aas in mov push sub scas cmp cli cld cmc je dec daa sbb push test pop push aam arpl loopne mov xor fadds inc and mov xchg ret dec mov jmp and add out sahf stos leave ja sbb push dec lret out mov xlat or jmp movsb (bad) jp out addr16 or pop xor add ret (bad) imul mov push mov (bad) ljmp dec cmp iret cmp inc fdivr nop test inc mov pop movsl mov and pop ss out jl fmul out cmp int call xor mov push pop pop out xchg loope adc pop js pop jge addl cmp in out lods mov push popf mov cs insb insl lods push mov mov mov or aam cltd out pop cwtl or jg push clc out iret sarl sbb les loopne or out cmpsl loop lock cmpsb and cmc insl jae (bad) jb or sub mov jp mov out clc loopne lahf les inc out repz sti scas cltd das fisub add mov mov dec xor rolb sti add pop jle push mov subb out sub sbb pusha sti jg,pt rcrl xchg cmpsb mov lock pop fiaddl add mov out xchg rcll cmp mov rorb dec out mov stos mov add pmaxsw dec nop dec gs xchg inc lea lods dec aas lods mov pop or mov pop sub mov mov push sbb popa sub mov or mov incl adc or jge repnz mov jae int3 out inc lea int daa fsubrs stc fucomi movb push divb enter push mov out mov mov mov dec into xchg out jge xchg rcll je xchg sub push (bad) mov test jb ffreep jo cli add add scas add out mov call mov out mov sbb out push mov popf cmp stc leave decb cltd adc (bad) sub lret and ss add rcrb jae inc call jbe xor mov decb (bad) xchg das popa imul orb jl sbb movsb jns out xor mov inc jne mov notb lods les fsts (bad) sar mov jmp sbb or lds pop jo inc out int3 xchg cwtl test out int mov push mov out test (bad) (bad) fistpll dec fdivp iret mov pusha jb addr16 push cld pop ja sarl imull sub xlat pop mov mov lret add adc mov push in adc hlt data16 push sub ficompl cmp lock in das dec popf push push out call sbb ret out fisubrl fistp fistpl pop out jno cmp repnz mov sub jnp adc adc sub in in pop cld pop imul mov jae outsb sbb pcmpeqb ljmp push int dec push mov push call into ljmp leave divl inc std sbb sbb xor out movsl or ja cs out in jns push mov or pop fs pop (bad) out rclb ljmp call repnz cmc push out ja scas test insl xchg lcall mov push jb or sub pop (bad) outsb dec mov dec (bad) int xor out xor (bad) aam dec movsb or jne dec push in enter div ficomp pop pop popa mov test xchg test stos sub std lods pop pmaxsw or out pop pop mov aad mov jl mov out es clc and addl inc mov jle aas hlt lcall dec mov (bad) stos push addr16 mov sub insl mov call mov outsb lods cmp xor xchg jo push push in mov popa inc push mov dec fwait popf dec cmp addr16 sub mov mov ljmp jno out mov push (bad) aaa leave out adc subb pop jecxz push loop movsl mov jnp mov (bad) dec out out aad jb cmp mov cmp or pusha mov inc mov fs push pusha notb mov in out data16 adc sub add fsubl lret jnp popf cltd mov aaa lods int3 out imul sbb xchg gs push aad iret dec xchg out faddl scas xor jp js stos mov out pop cltd cmpsl or test mov daa out jns inc arpl add ret xlat movsb mov in (bad) (bad) sub int3 jg lcall and inc sbb lds out mov mov cltd out jne (bad) jecxz and out adc mov out test xor push ds sub or adc adc mov (bad) shlb jge movsb loop xchg jg xor lods jge mov out (bad) pop lahf add je fchs cmp icebp (bad) push out popa mov cs mov inc scas or sub mov and push js,pt sub sub andb pop hlt or add lret push movsl icebp test aaa xchg out adc lock cmpb fidivrl add arpl mov stc inc shrb pop std pop pop mov dec push cmp lds daa outsb sub divb in data16 push pop push lret out loop inc repnz pop cwtl shl push pop shrl pshufw fs rorb mov inc pop mov test (bad) jno sub jb mov dec and shr xor sub pop fnop mov out stos dec ret and push inc loop xor (bad) sub popa pmaxsw out insl xor hlt xchg gs pusha int dec jb mov js lods jne mov xchg daa jno xor scas mov cmc out mov adc into loopne repz lea sbb push lds push out xchg leave (bad) xor or sub arpl (bad) aad out and out inc jg popl out and mov pop jo je out pop sub loope mov shl fsts cmp lahf aas out mov clc insb cmp cmpsl pop jne nop icebp push loopne xchg cmp aas out push stos xchg pop or cwtl push mov leave or add xor or pop mov hlt out mov loop push mov addr16 mov ret (bad) mov jbe adc xchg (bad) out fbstp mov jbe out sbb ljmp xchg test push and nop bound cmp xor mov or cwtl test iret dec xchg es sbb mov inc jg xchg lods hlt cld in ljmp xor jne stc or dec mov xor out sti mov outsl cmp std ror test out adc into das dec adcb jo clc add cmp cmc out jp cmp shr aad dec add cld pop call loopne lret into and out ret insb jle sub add out pop or jl (bad) int3 out and arpl loopne sahf inc out xchg cli lcall mov ficomp repz les jns mov int3 pusha repnz cmp mov mov out mov out xor pusha jg xchg mov addr16 or jmp dec out int3 sbb push outsl out lods sub jbe adc (bad) mov sub add push push ja cmpsb adc stos xchg ja mov pop out shl and add push das and ds adc xchg cmp jo out gs adc out rcr adc sub insl push pop inc aaa push lahf xor and out aaa frstor popf out adc push sbb lret movsl xchg sub (bad) lods stos adc dec shl push hlt push out sbb ds pop adc jle dec sub mov fmul adc xor out call lret out ret in pop mov es pop mov imul nop push adc jae (bad) adc in push cmc cs cmp mov sub inc icebp into mov in pop xchg outsl mov (bad) mov imul xchg sub pop out pop (bad) cmp add ja xchg push in jmp adc inc stos pop (bad) cmpsl cmp adc out mov jmp outsb xchg out (bad) xchg mov mov icebp cltd inc lret outsb test insb cli sub jo or out (bad) sbb add jg or rorb out mov (bad) out xchg push out or inc cmp mov cmpsl inc cmpsb mov mov idivl sti fldz and out bswap push push push iret js test out and cli cltd daa fcmovnb rolb pushf push ror out arpl fildl jge loope scas or movsb out dec mov push jecxz jl mov add int3 mov add test jne xorl das mov push (bad) cltd cmpsl xchg out adc insb enter (bad) xor pop mov outsb movsb xchg xor movsl out sub cmc pop imul pop push pop sub inc addl jae xor add mov add out pop mov aam out pop mov add inc jne movsl pop dec out pop iret aam inc pop mov out ret (bad) or sub pop ja (bad) jmp test pop pop cmp lds mov shr mov dec sahf adc mov jne add mov out out or adc leave push mov or inc push inc (bad) out adc insb out sbb add inc shll xor test icebp out add stos divl sbb sti out xlat inc mov mov shr loop mov xchg jb out ficoml sub out mov add out psrld inc test mov mov pop cmp out (bad) and (bad) fwait push mov mov out sbb xor in adc test iret stos je xor jae stos mov mov cmp push mov sbb (bad) (bad) in popf loop repz call xchg testl pop mov xchg add add and call cld push mov jbe mov fwait xor rcl pop in ja outsb leave cltd out in psllq mov stos fucomip mov decb and pop sarb jecxz push (bad) nop scas out fs ss fidivrl mov mov leave (bad) sub sub jnp movsl call jg icebp xlat cmp fwait jmp inc outsb pop inc jb lock sahf fsubrp mulb mov mov lahf jl movsl add jge adc push addl pop pusha lahf and shlb ret pop cs das mov or out dec mov out fistpll mov mov add ret mov int movsb sub add sub in push push sti or ret enter pop out push call std cmp jle xor and sbb xor cmp out icebp jge pusha repz aas xchg mov (bad) xor stos gs dec add push jns enter or mov out dec pop icebp jno jecxz sti jb push add out addr16 jmp out xor cmc inc mov xchg cmpsl mov pop jo xchg push test test jnp lahf imul cmp and adc je pop dec lods out add cmp ds lea xchg mov pusha add push mov scas cs js push mov out jecxz push fs stos popa out sub push daa out rcrl pop and cmp mov out inc mov lret in enter xchg or pusha loop mov sarl xchg dec out repz pop or decb negb insb sub (bad) stos push mov pop jmp mov and test mov out mov ret lret (bad) rorl out mov jae jg inc mov (bad) daa xor mov push sar push lods das push dec jbe push jle ja and fwait add adc xchg mov sub add jmp push (bad) leave or stos or cmp push cwtl pop out movd jns push enter pop (bad) in sub inc push cmp out or aaa cmp jbe xchg out pop outsl test jle ret clc mov xchg pop sub fisubl pusha mov pop sbb pop into push pusha and popf test std out lret pop push xchg jne inc jbe out fstpt fdivrp mov cmp mov sub dec xchg cmc jbe fwait out mov sbb add jg lcall lods out pusha inc loop out iret stos imul mov das jb jg xor pushf arpl out (bad) cld jp cmpsl mov es pusha jns or pop inc push or ss mov lea xchg aam je (bad) sub sbb pusha shrl jno into out jmp sub xchg add out dec cmp scas xchg xchg pop jmp dec mov pop decb push repnz (bad) iret pusha jg xchg in push dec divb push out std xchg mov sti jmp mov pop test out jle leave mov xor sahf loope mov (bad) adc adc call stc out cmpsl insb testb cli clc repnz out pop cmc rcl arpl mov int3 call cld in push loope mov fsts cli mov cmpsb mov cld sub aaa aad jae jne out pop dec cwtl or jns push iret and cmp pop inc lods sti iret ljmp xchg out mov bound out lods lods xchg enter ret lahf mov mov loope adc inc out cmp js xor out xchg inc jecxz out decb adc cmp fstpl jne scas pop imul push (bad) out popa adc xor shrb inc les jl hlt stc out push dec je cmp inc cmp out arpl out jge mov addr16 mov push inc rcrb flds popa sbb jae pop cmp sbb or out pop and xchg outsl push dec fbstp test jno cli out dec mov nop mov adc in ljmp xor and js mov test aaa movsl out jmp decb rclb cld pop out icebp pushf push in jl pushl push jo rcrb pop mov cltd mov mov dec data16 xlat repz (bad) push adcl lock into js pushf testb pusha das aam loopne xchg cmp lret call mov mov push mov jg outsb dec dec lds scas lret scas sub lods loop out lret lcall leave scas xor inc mov out dec mov jbe (bad) sti int3 std push and mov or jl mov jmp lea mov pushf dec jecxz jo out out in cld div das jge jnp mov lods inc fucom push ljmp push sarl iret cmp xor adc mov lret sarb cmpsb (bad) out dec adc out imul fucomp mov add mov lea je imul push dec pop adc adc out fnsave addr16 pop out movsb pop shrb push imul mov mov sub ret inc push xchg add je data16 adc imul add out jnp dec and test lahf out jo push and out pop mov imul cmpsb push out mov cli lcall adc push dec cli lock in (bad) inc out test push pop movsl les rcrb adc dec mov ret bound out rcrb ljmp sub dec or sub lea fwait cmp (bad) sbb insl and pusha test xor mov (bad) rolb notb repz addr16 cmp out mov inc scas push out xchg jecxz sub dec mov jg shlb out dec lret fisttpll movsb or loopne cld push nop and jnp jle outsl popa cs cld fsubrl push ljmp fist aad xor ja mov jns stc push sbb mov out dec es xchg int aam and and mov dec nop out pop push mov push dec popf out mov mov out in push jmp std add bound cmp pop out imul test out xlat in insb and out jge fisttpl mov mov inc jl (bad) jge (bad) cmp in insl mov in cmpsl out cltd add mov mov add xor fwait inc mov xor out out mov mov add or xor pop in leave dec dec mov or inc xchg neg out dec push jne sbb xor xlat das cld mov clc and nop adc ss push jecxz mov jle dec mov mov imul out stc outsb pop pop loop sub out pop out ss lret int out jl inc iret pop lahf aaa dec out (bad) fcompl test jae (bad) jmp out sub ret sar jns clc cmp and push cs xor out ljmp shr cmp jnp popa or push jle les fbld bound data16 aas sti fsubrs inc sub lea push mov mov xor out enter lcall test subl enter ljmp dec push rclb xor push jp (bad) daa mov jo call or pushf out adc fnstcw das adc iret (bad) out xchg call mov ja movsb add ds and xor mov fildl ret sbb xchg out outsl xor in mov cmc shlb jle cmp and out xor test jb cmpsb (bad) repz (bad) test in inc aas jmp sbb pop and sub jae lahf dec sub mov ds std rcrb cli sub out mov sbb add sub stos xchg cmp imul xchg int3 push or bound movsl arpl insb xor out cld bound xchg fldcw out mov mov nop sti inc dec mov jnp hlt cmp sub cmp dec outsb mov or and daa pop and outsb pop (bad) outsl shll push rcrb push or xchg mov in adcb out lods sti imul out ret inc pop mov mov push jmp hlt push lods outsl out adc cmpsl ja jecxz mov mov sbb fwait xor out nop iret jge fnsave adc pop rorl daa fcmovnb jecxz jecxz mov out dec sbb out mov enter sti jmp jns loop cli cli xchg lods mov xlat lods (bad) data16 movsb dec loop push add push adc mov jg mov mov adc imul mov in cmc out or xor adc xchg sti cltd test out roll fs xchg pop mov or sub ds movsl rep insb sub add pushf (bad) (bad) divl and push ljmp mov mov shr sbb lods inc and jecxz xchg or ja insl dec out and jb iret and ss jg cld xchg out (bad) outsl dec das ljmp mov jmp mov aas sub pop scas jge and loope xor (bad) cmpsb and movsb repz pop out imul cmpsl (bad) xchg xchg out xchg loope ret pusha out mov sbb iret fisttpl mov jo mov adc mov and negb nop adc stos jle popf xchg ja sub and out mov out pop rol (bad) out sbb dec cmp xchg pop jo fucom cmc mov jge dec (bad) and iret stos cli popf ljmp nop shrl shr mov push push cmp sbb cmpsb faddp js rep pmaxsw fistl xchg mov mov out clc and jbe xor mov xor loope ss fnstenv dec insl pop lods sub mov xor insb jl out jae xor mov push mov movzbl fldl xchg or pop repz je scas or daa out xchg pop lods rcll out jecxz icebp cmp out and sbb jmp dec iret pusha pop sbb lock ss pop dec inc lods or xchg out pop lahf cmc push cmp adc loopne (bad) scas and out gs mov cmp test inc iret pop cmp jno (bad) jmp icebp push jp fdivs das sti fwait pop andps mov int ret (bad) cmp ffreep dec insb (bad) enter sti pop lret daa adc jae mov add jo pop ret outsb das mov (bad) ja jle sbb js adc in xchg mov outsb mov xor (bad) pop test lods mov mov notb mov dec out jge pusha aad add cmpsl jnp mov pop fiadd in cli ror aas cmc insb nop sbb (bad) lods out lods push add mov sub mov fisub inc popa leave out loope sbb sub shlb out movsb add dec sub mov jp aaa test out cmp stc bound inc cli sbb cmpl data16 aam push (bad) ljmp in pop adc lods imul cmp outsl xchg (bad) ret mov push insl es out and out xchg enter or sarl xchg mov or out adc push dec (bad) aam mov lods (bad) mov push mov pushl xor pop cmc cmp jne lock and xor loope xor aaa movsb dec popf mov push jl sub fs fnstsw out imul into lods (bad) out sub cmp xchg mov out xchg and cmp cmp mov add loop lret cmpsl pop out outsl mov mov out arpl enter and test push push mov mov out mov sub out jmp dec mov lea jmp iret mov mov cmpsl data16 push add mov test mov pushf (bad) (bad) jne bound inc fs or cmp jmp mov outsb (bad) jmp bound (bad) push adc loopne fptan out div ss push push out xor mov sysenter ficomp aas ljmp push push out ss out inc mov and dec and ret jo lahf les sarb in loop nop pushf xchg es xchg into lcall out ret or xor scas push out repz gs out fimull arpl test xchg repz (bad) fwait lods out jns ja push test adc ss cmp pop jbe cs mov icebp inc cmp sub jbe mov push mov popa fstpl out push adc add clc add outsl loopne push mov fld ret out insl pop and (bad) out sub sbb xchg cmpsb clc into fwait addr16 shr pop loopne stos jae pop cli dec (bad) adc fdivr xchg or pop dec nop and cmp dec jg jmp xchg adc out mov adc out add (bad) push jg xor sti movsb imul cli and insb (bad) gs adc cld pop or je mov (bad) push cli mov pop (bad) and mov das sbb adc sbb mov jp jl and mov push sbb mov sbb movsb fwait pop out and (bad) loope jns rol out sahf ja lods inc jae aas adc out push test out cmp cli add dec (bad) cmpsl sub xchg jbe loopne and test or pop xor dec outsb push leave ja sbb jmp std or fsubrs push popf lods int3 out notb inc mov lods out mov xchg gs out or sub (bad) xchg fildl lahf xlat mov jecxz inc mov jge shrb out aas lds pop xchg mov xchg mov pop xor cld sub mov bnd pop xchg mov jns ja out ljmp mov out cmp out cltd push push push insb xor cwtl jg loope fstpl in cmp mov pop mov in bound push jecxz fsubr out iret dec mov std out sar add and lock popf xchg out push fldl pop cmpsb pop out mov add rcl inc neg inc dec iret pusha jo fist es jns lock sbb out jbe aam (bad) (bad) out adc out xor mov jmp jb sbb fisttp shrl (bad) jmp out fdivr cmp out aad jp push inc dec xor inc mov out sarl push or cmpsl dec dec dec rclb cmp shr mov pop jg pop ljmp cmp pop lahf jbe pop mov (bad) jb jecxz insl jbe out mov ds sbb fwait (bad) pop pop pcmpeqb out cmp dec repz in jg fldt push mov or insl inc rclb test insl imul xor dec or jle out fsts in xchg out xor popf jmp xchg mov mov test sub out loopne dec mov ja lock add outsl fs iret out (bad) cmp loop out ret aad into movsb stos pop push pop sbb sbb dec fsubrp xchg icebp dec or sub or out inc add lods call xchg out inc mov addr16 jns mov (bad) fbld int push fs ss out stc cs sub stos out iret jns sarl in lock shr fisttpl out int xor (bad) add decb out lock test push (bad) into repz inc les out pop mov and cli out dec mov add in vcvtsi2ssl out mov das ret leave movsl or (bad) aaa in movsb rclb out ret or (bad) mov mov jmp mov add hlt (bad) (bad) (bad) lret sti pmaddwd jno out mov (bad) nop daa inc icebp add push xor adc mov aas dec insl (bad) out inc mov inc xor add inc decb or inc mov cwtl out lcall mov mov ljmp aam jmp out xchg mov (bad) or push mov cld sub jbe jns in push int fldl add cltd jae xchg out cmp les lea dec mov add mov cmp ss dec aas mov aad and dec adc cmp inc out cmp xchg int3 popfw rcrb stos and sub mulb sub out xchg lods sbb fistpl rorl out push mov mull in out mov jp jbe add out push ret fildl ljmp xchg or rolb inc in cmp out mov aad add cmp inc mov mov out push xchg iret inc add repz and dec jge push out inc add test or pop pushf inc int repz ja sub cmp sarb (bad) out lds mov mov shr mov mov dec out or (bad) cld das xchg xor sub jmp pusha inc mov mov xor insl sbb les sbb iret mov scas or lahf inc mov mov lock out push pop (bad) repnz pop xor addr16 push push push mov sbb loop mov (bad) pmaxsw je fnsave icebp out out (bad) fucomi or dec popa (bad) in and dec iret loope arpl repnz sahf mov pop add mov pop inc mov pushf or jle mov in (bad) mov or lea out xchg xor (bad) mov popa or jg loop mov mov jae lret jb xchg dec (bad) repnz sub and cld jg jp out es loop push fucomip and xchg stos test xor dec shr mov sbb pop aad fs push std add mov sub sti iret jb jo (bad) not dec mov loope out test mov out dec mov int out out add xchg aas ret shrb xor pop pop clc enter out icebp push xchg out jl inc jae mov (bad) pop xor jne out dec jbe mov (bad) out push xor sub arpl xchg xchg mov lock mov les fcomps jl cmp (bad) fstp call lahf dec outsl dec xchg inc sub ret das dec mov lds ret out push sahf xchg scas cmp pusha out pop lret idivl cmpsb adc outsb xlat mov mov js cmp add (bad) out jle add ret xor out ret jae enter addl add sbb push out je mov pop out mov in addr16 xlat add or daa push push ret cmp out adc movsl push dec out push pop inc stos mov mov xor in pop pop mov add out clc cmp inc ljmp out mov jg push pop jne ret jmp xor mov pop loop and xor shr push notl lcall xchg mov call ficompl dec mov push xor out test ffree loopne jbe out fwait sbb sbb stc dec out rcrl mov pop data16 jp shrb pusha push cli fistpll pop lock pop push jmp pushl mov loopne sahf mov pop jb dec test out adc (bad) in call (bad) mov rcrb mov xchg jl fcmovnu in jne push das out nop in shr (bad) sub out jge lret or or enter adc outsl decl fild jg cltd daa scas jbe sbb lcall adc out push lret data16 sub in jmp addr16 xor addr16 sub call jmp iret sub cmp iret push in jne aaa pop sti inc xchg mov loop push aad loopne xchg repnz out or dec pushf iret sbb aad outsl fisubr outsb out ljmp or in mov jge movsl in insb ss xchg test roll insl in jno push les cmove shll xchg pop imul xchg scas cli mov xchg jb ljmp sbb (bad) pop xchg and sbb (bad) repz aaa xchg out cmpsb adc pop into inc sub sub lods (bad) dec fucomi mov cmc (bad) (bad) loope dec mov mov lret adc data16 and lcall fimull cld (bad) jnp out xor jo add push mov mov pop out aaa and out lods dec out leave xlat push test xchg mov out mov jnp mov fcomip inc aad loopne push lock push dec sub lods xchg cltd cmp and and (bad) or sub lret inc into push xor xchg cltd xor xor xchg sbb mov pop call in scas fdivp fist pop add inc jecxz cltd cwtl out mov xchg sahf out sub frstor cs pop in mov adc fs (bad) push out mov rolb pop cmpsl xchg sub xlat cmp cmp cmp jecxz fucomi push jne lahf in mov and lcall push (bad) aas stc xor pop xchg fistp adc std out mov notl mov jae (bad) pusha or xchg mov xchg (bad) cmp mov lock and xor scas in icebp imul sub out lock mov jne fmul cltd (bad) (bad) shll ljmp lock dec add popf inc sbb out pop cltd dec cmp pop out dec test push mov mov sub xchg add or cwtl aad jge int addl fucomp jmp cmp fsubrl out (bad) mov movsl sub (bad) insb push adc arpl test adc out sbb cld inc flds jl mov xchg adc (bad) fcomip sbb and sbb jl push push dec inc out mov scas xchg out fcomi xor adc out jp cmp cli out ret pop lods sar out jo int (bad) into daa iret pop in lahf cli mov xor ffreep sarb cld mov enter imul in (bad) and out add mov loopne pop jp sbb mov out cli mov (bad) sbb xchg push lock leave add ret roll xlat out (bad) fiaddl mov es lahf repz lahf xchg lret xchg leave out xchg pop (bad) scas pop mov jmp fucomip (bad) shll cmp in xchg cwtl cmp pop out mov cmp movsl arpl dec loope fs pop sbb clc add xchg out xchg lods pusha pop loope push pop out mov out and add pop gs lahf adc mov hlt out mov cs push push loope fbstp icebp mov xor ds jle mov lahf popa addr16 enter out fimul lock sub fisubr add cwtl sti out cmpl out sarb (bad) xchg ljmp jno dec fildl insb fsubl xor dec imul pusha in int3 pushf out lods fisubl out call pop loop pop rcrl adc rcl lcall xchg sub sbb adc dec and dec sub pop arpl out insb (bad) xchg testl out test sub aad out adc adc pop scas adc push mov movsl (bad) jbe sub sbb sbb out fdivrs stc cld out cmp (bad) rorb dec out or mov xchg mov jns pop push pop out inc or adc bound lods dec aas adc loopne iret lds stos stc out fistpl xchg out call arpl bound fucomip sbb sarl push rcll shl gs loope lods pop pop imul push repz ret test shr push adc fwait cwtl out mov jecxz mov mov (bad) sbb pushf loope nop add xor jp mov sub shr fisubrl bswap xchg mov int3 push popf jge push mov mov sbb std jns mov test fild out push data16 adc fistpl cld outsl pop push mov fiadd out jbe push adc data16 inc xchg loope scas cli outsl out (bad) xchg jecxz shll shr loop add inc ret test insl outsb push out sahf push fcmove out dec es or cmp movsb loopne pop pop push stc pop loop mov (bad) adc dec xchg jle iret (bad) out sub (bad) ffreep pusha aaa sbb cltd ljmp inc pop jmp int in xchg (bad) out (bad) lods rol jbe jecxz out popf repnz sub (bad) mov xchg sti out rorl (bad) out xchg ret or mov (bad) clc sahf test sbb pushf push imul inc xorl int3 lock out in xchg data16 cli dec aaa push out stos psrad out adcb pop pop out xchg cld enter push loope pop push sarb dec cli shr pusha arpl lods out mov in call icebp adc xchg movsl adc sbb inc mov add jmp outsl fwait jb push insl xor ret in es push lcall cwtl subl jge push jne notb scas jno and shl pop inc pop loop or mov pop jbe arpl or in xchg (bad) dec inc mov push sysret xchg cwtl mov in mov jb loope js ja out imul out fnstcw jb inc push pop out test add xor mov lcall rcl cmp test jnp fcmovu out sub sub out dec and ljmp out das fldt mov imul data16 lahf sub and push outsl add dec adc test es aaa jmp inc cmc bound out pop inc add add sbb pusha inc js inc stos sar push xchg mov (bad) jo (bad) xor mov arpl ss fildll mov (bad) out mov jl mov xchg in mov push xchg mov xor pushf fsubr add push pop lods (bad) out loop and adc lock push inc sub jne xchg out xchg dec jmp retw add out les out out jp mov mov lret test pop shlb mov aam jae,pn dec push mov lock ljmp out psubd std out loope and loopne out arpl pushf xor pop cmpsl lahf sbb push mov (bad) insl clc in mov les sub aaa fistpll addr16 sbbl sub mov cs pop xchg rcl sub leave push clc out sbb shll mov jb dec adc add adc push xlat push insl call fdiv imul mov and or out or adc out test rolb sbb out out data16 ljmp pop aaa in dec stc out push fsubrp xchg mov in enter sbb jbe pop in outsl ljmp or stos add push scas cmp fwait call xor xchg iret (bad) scas cld (bad) in jno rcrb lahf in push mov xor int3 xor subl stos add stos (bad) add ljmp jmp das xor ljmp loope mov sbb xchg xchg mov jg mov out repnz rorb pushf mov sub fbld jnp scas in and shll iret mov lock cmpsb dec mov in fisttp icebp das lods out mov bswap outsl pop jge cli ljmp lcall xor mov sahf cs out sbb aad (bad) jecxz jns sbb (bad) repnz ficoml push dec and prefetch or xchg push lods mov je push adc mov sub jne mov andl pop pop sub push arpl int3 fbld ljmp lcall sbb dec out mov jp mov fwait xchg (bad) adc xchg in (bad) out jne or aam mov shl push mov sbb clc aas loope mov into movsl jecxz and out shrb cmpsl pushf inc jo dec iret stos xchg test data16 (bad) imul (bad) mov jne push cwtl movsl out xchg imul out out pop in out pop pop xchg daa out jno xchg fidivl fimul mov sbb popa iret mov notb loopne roll xchg (bad) xchg sub in addl push out push (bad) mov cli loope (bad) loop inc and in inc out dec movsb out ja fisubrl adc jl add mov fldl2e xor mull (bad) clc dec adc (bad) loope lods fldt test out out pop pusha or iret lret cmpb addr16 and repz sub adc cmpsb out cmc in push fstps cli sti aas out jb in mov jge out daa pop lea rorb (bad) ds pop out mov mov mov out push ja or sbb xchg outsl fisttpll aas adc mov out arpl outsb mov adc push out lahf shll (bad) xchg mov imul loope ljmp leave icebp jmp aaa sub adc lahf out in and jnp sbb pop xchg pop mov lods bound mov out cld xchg mov mov mov mov ljmp push jl and mulb rol lock out cld dec in add bound out inc jno xchg dec lret mov incb arpl insb mov mull (bad) outsb jo out out fidiv lret (bad) in test mov (bad) out lods pop (bad) pop fldcw shr out andb cmp repnz clc test daa fnstsw jmp out jmp pop insb or dec cmpsl mov xchg pushf out dec jb sbb call js dec mov or xchg dec ja xchg mov ljmp test dec jmp pusha (bad) mov and pop andl inc test pop push cmpsb sub out push loop or aad mov pop movsb push fwait pop push clc shr daa sub mov cmpsl mov jecxz aam mov sbb in pop test addr16 or adc pop mov sub pop mov outsl in pop pop push out mov adc or mov dec cli popa bound out push jb fstpl stos xchg xchg sub out mov dec fcompl and cmp loop mov cmp insb pop dec xchg (bad) lcall mov (bad) lahf out gs xchg add repz fsin insl mov hlt stc into jmp push seto cmp xchg push xlat out insb pushf inc jno lret (bad) aaa jb mov inc sbb add shlb orl and mov push jns mov addr16 insl push push mov mov pop out lods pop xlat js and incb jnp mov out pop adc fidivrl outsl nop mov cld popf scas scas ds (bad) in int3 dec mov out gs sbb movsb mov shr inc push xor bound jo jp leave and mov cltd mov sub adc mov sti pop (bad) jecxz ss pop cwtl sub jg lds mov pop test out cwtl pop push int3 shr subl xchg out inc test das lock cltd out scas fildll adc mov jge push mov (bad) popa popa mov dec mov xchg pop out lds neg (bad) (bad) push mov popf mov cmp (bad) shr cmp fsubs push in in jnp gs std arpl pop pop adc dec into cltd out mov dec and inc inc sbb jg push gs (bad) imul mov out movsl aaa mov mov (bad) (bad) je out jg jmp pop cwtl xchg push aad mov or pop mov sbb jmp mov inc rorl pop sti out push jb ja or and pop xlat push dec out inc xor mov out or or pop sti aad call std jle fldl inc cltd cmp and or out jmp push sbb flds in push and jg pop push imul mov xchg (bad) out or mov (bad) and mov std out inc pop in pop fmul mov out ret and test and xchg adc xor icebp and out mov mov fisubr nop out insl push repz sub mov pusha imul cli out lahf pop inc mov fisubl pop xor dec mov fisttpl sub (bad) jge cmpl xor mov ds call loop push or push and lods jbe mov mov sarb es popw out or loope not jmp arpl mov jne pop loop lret cmp popa mov and out mov daa or cli das imul ljmp mov mov dec push inc lcall data16 mov adc in pop (bad) lock out pushf divl orb (bad) (bad) incb movsb and in mov fmuls sets sbb ja outsb pop cltd in mov scas lods sar aad shl ss sub add xchg stos jg lret out dec xchg push call out pop enter test pop out mov mov mov xor mov out cmp movsb in push out imulb xor lock add rclb mov mov mov or cmp cmp xchg out inc dec pop jmp out mov xor mov bound mov jecxz xlat push ret out mov sbb repz sahf mov mov push das repnz cmpsb out aam rol mov cmp mov cwtl lret out leave cmp fwait add mov scas cmpsb pop fadds shl sbb aaa outsb movsl rorb push out loopne fstpt out rolb mov fbstp pop (bad) sbb or sarl clc sbb out adc outsb in bound je mov mov imul repnz jp mov insl packssdw out sbb aam jmp insb out rol daa cmp jp xchg out and scas and in jnp mov pop in (bad) out fsubp xlat mov push dec cmpsb enter inc push xchg xor out ljmp out (bad) xor ret lock ror (bad) in aas out iret push xor inc ljmp push dec loope addl js sbb adc pop pushf (bad) sarb popf outsb jmp out sub jecxz movsl (bad) pop addr16 or fs inc mov jmp ds into out and out ja sbb shr jecxz movsl cmp stos jb sbb and test sub and ljmp add xchg out sti icebp cmp mov in jnp (bad) ds ljmp out leave mov cmp mov aad test out add andl pop (bad) xchg pop dec shlb (bad) in aaa lahf icebp jo add iret ret xchg pusha out xchg ja loopne sub jmp inc mov out or add adc out pop sub iret fiadd sub or call repnz (bad) aas jae out lock add insl push push and out jle xchg mov add ret mov rcrb lock int (bad) dec pop ljmp call ret out test cltd scas dec jecxz cld fidivrl out mov pop out cwtl (bad) sbb out out push xchg in mov cli loopne sub pop fs aaa sbb sbb cltd imul stc ljmp xchg fstps je (bad) (bad) out shlb out xchg pop push or mov sbb xchg pop aad (bad) xchg movsl adc xlat pop push push add loop outsb xor jmp xchg pop adc lock in add cwtl not hlt mov jnp xchg daa andb cmpsl xor iret lahf out cmc loop xchg add out sub fsubr cltd cs movups push bound movsb out mov (bad) dec out insl xor (bad) xor ljmp out pop add xlat or or fnstenv (bad) cs and scas ss adc inc (bad) movsb test fwait jmp sub sbb mov lds pop xchg adc into lods call mov out mov rcl dec dec (bad) out push inc hlt and movsl xor out lcall out dec pop fcoms frstor lock cmpsb pop shr fnstenv cmpsl sbb cmp ss arpl sahf movq fistp lcall insl scas out lds movsl das adc and fnop pop sbb frstor (bad) into mov fsubp dec cmp jle ds inc xchg jecxz dec pop pusha mov sub imul loop shlb fisttp test cmpsb out cs pop sahf pop xchg call popa pop dec (bad) lock lcall dec out bound int3 into push dec jnp loope mov pop sub add lds xchg mov scas (bad) out ja,pn psubq ret mov mov sub jp mov shrl lea jne lods adc shr xlat cmpsb dec (bad) in sbbb sbb out mov adc out push or je sbb out push push jo jae mov out loopne sbb sbb or aam mov in sbb rcr adc int3 xchg add jno and lcall mov pusha aad and pop out mov push out pop ror sbb cmp mov jae pop xor inc inc mov jmp insb adc jmp push and cld sub push push fucomi lock push out adc mov scas repz pop addr16 and jae ljmp xor sbb popf lcall into xchg ja dec mov sbb call fcmovnbe insl or inc inc outsb scas jb mov sub loopne push or push fdivs jae outsb shrl out stc push sbb pop shrb pop gs movsl push or adc xchg pop fs pusha popf pushf lock in mov xor gs pop mov in cmpl out in ret xor mov outsb cmp adc inc mov push cmc inc in loope out pop adc pop out scas mov movsl mov adc inc pop mov stos xchg out loope jge ror or mov sahf or or jecxz out ds cld jnp or mov ja into out push sarl negb xor nopl cmc pop mov jg and mov or imul push negb fs mov pop in aas jmp call push ljmp outsb insl push or shrb dec cmpsl loop or addr16 mov mov out xor mov out out fnstcw sub fild (bad) jb in ljmp cmp (bad) sti nop int3 data16 cwtl imul sub (bad) mov out ret bound arpl inc ja xchg push push mov push (bad) icebp shrl jae fdivrs ss out (bad) ja sbb lods loop das ret push lret in push jp bound mov in fbld mov or mov sub fsubrl out cmc mov jbe repnz (bad) pop es xchg jmp in jge out in daa lods test in outsb mov xchg mov sbb (bad) xchg scas add inc aas bound out repz ret dec daa loopne xchg pop shll dec std mov inc inc lcall pop adcl out ds xlat jne out and sub out mov cmp sbb pop insl xchg data16 jno push lcall in rcrb mov xchg aaa jno lock out lcall lds cli (bad) adc dec shlb sar repnz push mov mov std inc xchg pusha inc out imul adc or cld sub jecxz loope mov mov pop mov dec jg in dec sbb out or lahf out cmp leave mov clc push xchg out sbb push stos mov aam or daa out in pop or add fs add push arpl notl imul ljmp js mov arpl fsubrp dec pop cmc mov and (bad) cmp jo cli xor loop push mov cmc out jmp or lret dec mov bound fmul sbb cmpsb xchg push out mov mov mov nop loopne in push (bad) ljmp fistp cmp (bad) gs out pop sbb sub out xchg push aaa dec scas outsl rcrl fcomps outsb or ret out scas (bad) bound ret sbb (bad) mov out push gs (bad) jnp shr jb jecxz out and inc cld xchg mov fldl in call mov push mov dec out popa add or pop inc jge (bad) sti inc popa repz pop adc insl mov (bad) ficoml xor rcr push call in jmp dec bound dec xchg dec gs xchg sti jae outsl pop nop jmp cmp stos push hlt jl jnp push (bad) jecxz (bad) imul fwait out and addl sbb sub out les cmp xor out scas cs push mov inc sti subl cltd pop pop mov and out mov repnz sub pop or jns inc into cli push jno and mov fs xor cld in mov xchg xchg das or call dec jae xor pop adc xor xchg insl and std cmp xlat rcrb cli out fidiv jae scas sbb test fcoms loop mov out int (bad) jo jl shr (bad) mov push daa jne mul cmc (bad) mov mov loope mov fs repz inc xchg mov nop out cmpsl les ljmp arpl fsubr lret adc lea inc aas popa test fs pop inc daa (bad) dec pop xchg xchg fptan out add sub mov push bound mov pop xchg out aam stos out xchg push sub arpl aam (bad) hlt in and lods mov out pop jecxz and ret xchg pop jno fldt add sbb push dec cmc or jmp arpl loop in jl (bad) out jmp jp inc iret sub icebp dec in adc pop movsb inc in ficom pop adc ja daa bound dec js iret add xlat fwait push frstor jecxz dec sbb dec addr16 sbb pop (bad) cmc scas push test js pusha pop ja cmpsl push pop jmp loope inc adc outsl mov and cltd out (bad) lret ds xchg xchg push (bad) xor push push cwtl and insl mov or sub int3 pushf popa test xchg dec jmp push push push rcrl out mov out push jnp adc (bad) fist add leave imul mov mov ljmp out lds jo lods iret pop and inc pop cli mov bound fsub or ret xlat mov pop sbb adc fcmovu out lahf inc imul out out xchg (bad) es xchg insl test out push fsts mov imul push push movsl shr xchg push xor jns insl dec out cwtd jbe sbb sbb mov and dec mov xchg out pop jne push fdivrl fwait out ret mov out cld aam aas pop pop push in jmp jae (bad) into fs push or les sub stos divl mov call or mov data16 iret movsl mov jge data16 aad out xor dec gs mov out push pop sbb or xchg (bad) xchg jo jg xlat test in pop mov mov out push jmp into adc and daa out lcall out dec sahf cmpsb sbb call push xchg pop mov out xor (bad) rolb lea out imul push aam pop loopne rcl ljmp into gs sub ret and pop out bound lock aaa enter cmp xor out fwait addr16 imul loop xchg jecxz xor push sbb jbe (bad) out and les sub (bad) mov out movl mov ret or rcl jbe,pn fsts (bad) loop cltd xchg jns pop (bad) cmp pop add lcall test out jae and lods jnp xchg push pop pop sbb out mov out jp xor repnz push fucomip fidivrl mov out adc xor insb movsl mov dec push out ret outsb sbb adc jg mov jmp cld movsl pop scas jmp mov fiadd mov ja loop sub sbb push and jl stos jb pop stos fsubr sub insl mov enter dec lret sub pop lcall jns push movl out mov sub out aaa arpl out vpavgb xchg shr push cltd in outsb lea pop push jp rcrl sbb ss xchg push fwait out and sbb jne lods rcrb inc pop stos mov (bad) sub pop insl or movsb addr16 cmpsl stc imul cmpsb or sbb push jnp xchg lock fild push and mov in (bad) sbb or es pop xor adc aam dec ret in add shll fist fcomps loopne and mov rclb dec add js fucomp push inc test das out mov adc dec lahf insl adc call push (bad) std or out fistl addr16 cli test fildll pop fdivs out or (bad) out (bad) pop out pushf aam cmpsb jmp (bad) dec test or mov out add jp push xor bound dec adc xlat lret push adcl xchg out add lahf jle mov test fsubr insb dec and int3 cmp pop out xor pop je jmp adc jecxz les mov xor out gs xlat mov movsb into out (bad) jne ljmp out mov enter xor rolb into outsl xor pop in aaa xchg fiaddl mov movsb gs data16 jo loop dec fwait inc sti dec adc add sub out loop repz pop mov ds rolb xor shrb pop or jb pushf out inc push in addl iret (bad) jmp pop aam inc stc sub xlat out cmc insb sub cmp out push inc mov push and and mov xchg cmovle aaa repnz es mov xor stos out mov sbb out mov xchg push mov push or mov and call out mov loope cmpsw dec cld enter call in daa adc outsb and cmp ja loop pop cld out fsubrp xor dec out outsl push mov enter out loope cmp push (bad) out inc addb movsb xchg push pop xchg shlb ja je lock out inc add pop mov shr jnp push add adc out and add add arpl (bad) out mov imulb out in xchg and mov mov scas dec test call and and out ja leave adc sahf fdivrp mov jle into cmc jg inc adc int (bad) in dec push adc add (bad) call sbb mov fs jg cli js out xor cmc mov (bad) hlt icebp loope repnz jecxz out out dec mulps pusha and mov mov (bad) lock pop repnz incb mov pushl adc cmpsl ret cmpsb out dec fnstcw cmpl das push cmp ss ljmp inc lea jbe arpl mov out lret ds and dec cmp pop out pop inc cmc or fwait icebp jg leave das into mov inc fistp xcrypt-cbc cmpsl aam clc xor iret ss jg out hlt scas mov arpl jmp push lods sbb dec out bound je xchg mov push pop sysenter xor pop fildl mov outsb in mov push add jl and mul (bad) in outsb movb xor jmp pop mov out daa cmpsl in inc add out clc mov sbb sarb xlat mov xchg sub xchg pop out add rcll stos out dec and std orb inc sbb popa xchg jmp or lahf jb imul and lock out pop jge jmp lea movsl mov testb or or jo in cmpsb in cs out mov pop stos push popa std out mov movb shrb push test (bad) daa into in roll stos loop out cwtl inc (bad) nop mov dec fsubr dec andl out cltd aam mov push mov (bad) cmp bound out xor xchg push ret inc jmp mov cltd cwtl mov dec outsb cvttps2pi rcr sbb jg cmc pop stos out push jne int3 lret pop out std out dec xor push lods ljmp imul fildll cmp lret mov jne iret ret dec test inc and das sub out cmp (bad) scas or test dec clc (bad) in outsl lods nop cmp push mov and pop lret daa (bad) xchg ds out push adc fimul jae sub clc (bad) xchg xor mov imul mov (bad) lahf (bad) xchg ja cmpsl xor lods stc jmp and mov out push pop lret pop loop movsl mov or jl xchg into sahf out pusha mov mov add and stos fldz mov push in jae mov out push fucomp shr and add imulb mull out sbb bound out jl sbb sub and lds jno lret out xor imul sbb scas lahf jno cmpsl xchg out mov js inc (bad) shr fadd xchg stos xchg or xor out (bad) pop mov insl outsb out cmpsl sbb dec mov inc ror gs inc fldz jns jge aad xor sbb mov fstl subb pop or fstpt push decb push in pop push out test push xchg adc cmp bound add xchg int3 out jns (bad) xor mov out ljmp loope xchg and cmp and addl add mov out imul (bad) rolb icebp xor mov xor ljmp cwtl sbb push loop mov xchg mov fs add push out lock push or in out push pop dec push cld adc add xor push sahf adcb repnz js fimul and iret mov push repnz out jmp sub out xchg daa imul push out cmp cltd pop xchg xchg pop negl and jecxz rcrl (bad) push fisttp dec or dec pop in (bad) shr add jns pop cmpsb out dec call out fisubrl stos xor scas push add lahf lods jns sbb jb xor cltd and lcall cmc mov and pop (bad) aas push push into ljmp dec sbb dec sbb pop jmp mov push dec jmp nop adc out sub lahf xor ret out push popa imul imul lock pop icebp adc pop mov (bad) and sbb data16 daa mov sahf sub adc mov outsl ljmp insb aad xor stos lahf sbb lea mov aaa out in jecxz mov out jge loopne andb mov aaa sbb cmpsl pop ja (bad) mov stos cli in repnz arpl ljmp inc adc or insb cmpl add xchg xlat sub mov out outsl test les adc or out aad sbb shrb hlt scas movb das (bad) jecxz jne int dec loope pop out cmp loopne inc mov popa cmp popf push pop (bad) xor adc cs or out or enter aam add pop inc lahf iret and jle mov cmpsb mov call jecxz or dec cli cmpsb icebp out faddl out push sahf jl out push scas addr16 fistpl push cmp xchg sub fsubr (bad) (bad) enter sti adc mov pop iret push or (bad) out or fbstp mov xchg call push test pop and bswap cmp iret jmp outsb orl decb pusha push pop lock scas addl mov shl loop ret sub sbb int3 out leave xchg jne arpl (bad) aaa pop clc in dec add mov pop adc ret push cs pop add ret push in sarl cmc clc out jg xor cwtl out cmpsl jg addr16 ucomiss leave movsb dec cmp iret xchg sub out and sub sbb adc jmp push insl out in daa inc xchg ret push jns push mov jge out mov in dec outsl jecxz pop fisttpl fwait cmp mov out pop lret (bad) je pop out in std lods jmp xor xchg flds pop dec sbb push mov test jb int3 (bad) (bad) xor push mov jo in ds out or lret push lret fs xchg cmpsb pusha ss lahf and and enter add xchg mov push in out or ret lcall fs mov notb jle jne mov fsubl movsl mov out xor mov jg int dec aaa insl data16 (bad) mov sti outsb outsl out xacquire sub xor pop dec jle shlb inc out call out sub mov insl mov sbb aad fcompl in hlt (bad) cltd or fucomp xor xchg push fstpt pusha ja xor enter les (bad) int jg cmpsl mov mov xchg dec add mov dec int3 dec call cmc dec imul add ror outsl out fdivl cmp mov add loop jnp jb lcall push cmp cmc test cwtl out jns and inc out out mov test cmp cmpsl adc inc leave lahf add flds sbb or (bad) jge jae jmp test (bad) (bad) aam sahf adc arpl ret dec (bad) inc mov out sbb cmp dec scas sub cmc insl cwtl (bad) (bad) mov inc aam out nop jmp mov (bad) mov pusha sbb leave push ljmp xor sar or lcall out mov fucompp add les lahf fisubr jnp jmp insb jle dec shlb js fildl push and out pop mov out or mov out sub loopne call out and add jl push pusha inc popa dec out lcall scas and loop add data16 out testl out stc in hlt inc sarl fsubr test cltd psubq loop mov hlt (bad) insb gs data16 adc jp loop pop mov xor stos adc (bad) jno out mov pushf or stos fiaddl addr16 pop inc movsl jmp in je mov dec cwtl mov (bad) adc or push sub pushf int3 out sub mov pop jl push sahf lods (bad) out jmp inc inc nop mov outsl out xchg mov sub xchg daa mov jbe out xchg in inc loope xor out loopne (bad) fnop or out mov mov loop add pop fisttp adc out ss sub fucomp jmp (bad) dec in xchg outsb cwtl lock jmp adc jns mov or pop in jo iret push lods add scas or (bad) mov (bad) (bad) into lahf out insl scas loopne jmp loope (bad) out xchg add pop sbb and in mov (bad) xor cmp mov fisubl inc movsl aad (bad) and fistl jmp and xchg pop out sbb gs pop xchg jle out data16 inc in or arpl mov mov cwtl out call inc jmp add sti xor mov pushl xchg shlb dec call mov (bad) stc loopne and clc lahf out mov cmpsl outsb rcl lret out lcall xlat bound xchg out xchg mov xor jmp inc cld cli mul or push xchg adc aaa xor fldenv mov cwtl mov movsbl in xchg xor outsl add jle mov add push xchg jns rcl mov inc cmpsl repz mov push les lock cmp inc pop dec xlat fisttpll shl lds inc jnp stc pop or xchg inc int3 ljmp lods jp in hlt sahf out add movnti testl ljmp pop cltd push jbe stc jmp pop sbb out push (bad) mov (bad) out stos ja jmp dec sbb stc or ds add cmp inc pop cmpb pop add out sbb mov mov xor dec xor fisubr inc clc or rcl dec fsubl sysret pushf loope lock jle jle repz mov mov outsl pop fs push and data16 enter popa add xchg mov fwait je ljmp out movsb push push jmp inc mov jge daa and add js jno pop outsb jb inc out pop outsb ljmp fmuls push call movsb out vandnps and cmp and sahf mov pop mov fwait sbb push out out rclb aad jbe (bad) nop pop dec loop push jns pop out inc in pop mov ljmp test or jb fcmovne sbbl je out and push mov jmp and jl xor in insl outsb lock out popf (bad) out (bad) fs xor mov out and cmc scas rcl adc push out dec aad movsb das out and pop hlt out lods or sub enter stos mov add xlat and jb in out lea rcl clc out mov mov mov lahf lret ljmp insl ljmp out fimul das adc pop stc arpl loope into sub jo shll add imul fs and mov (bad) and fcoms test push ss sbb ds (bad) gs mov push mov out jge pusha mov cmpsb iret in fsubr imul push jmp xchg and pop cmc out aad mov test add iret movsb mov daa call es loopne lret or mov pop stos out mov aad xchg pop inc or insb or movsb cwtl sbb (bad) ds mov aas jbe es add pop dec push mov lcall lds add call clc xchg adc stc (bad) stos in loope call xor fbstp out jle es lock iret outsl in xchg gs dec jl popa jb addr16 cltd aaa js ja pusha out dec push xlat ret mov (bad) jmp adc ss (bad) out pushf or push iret fisubrl adc lret (bad) inc mov sbb push icebp adc jno fwait xchg out mov and sbb imul outsb xor and mov in scas pushf stos fistpll dec ljmp xchg mov sbb and jp out add rol es or insl dec out cld ss push aam popa pop out hlt test insb orl sarl cltd das xor stc cli fucomip jmp push mov fwait int3 push out (bad) jae fcmovb xchg icebp jmp addl cmc pop test and xchg mov out pop orl aas in dec xlat out addr16 sbb lret (bad) cmpsb sub and js inc xchg (bad) pop xchg cmpsl cmp cmp out fwait in shlb in mov (bad) pop call xchg (bad) mov jns adc cld pop js out jno (bad) in xchg imul je addr16 inc pop or loop out jae lret cmp out lods jbe mov and cmp cmc push out or dec fadd mov lock cmc and xor push dec out scas negb jo pop mov push lret mov ror jmp mov xor aad xor pop in jmp cwtl in fisttpl xor fisttp rcrb out ret ljmp imul pushf sub and cwtl pop sbb repnz ja fdivl xchg mov mov out sub lcall (bad) out cli cmovp pop fwait sub out rorb mov jecxz inc loope stos out cli jb push out mov ret add das mov scas push fist test adcb out test mov mov xchg data16 lds sub jg and xor out push push fidivr sub test shrl mov fdivl cld (bad) and sbb jno int out push repnz adc sub out adc dec mov int call stc inc mov fucomp adc xor scas lcall out imul cmp lret mov gs or out stc ljmp mov push out testl lock movsb pop out inc sbb inc rcrb rcr sub mov lret out in pop jmp mov and fldenv sub pushf add fidivrl movsb iret fnsave int3 out sub jmp push xor pop sub (bad) mov push push jo cwtl ret xor or mov rcrl fisttp lcall out mov mov aam or cli int lock xchg mov ficomp sbb jecxz and clc lock cmp sub cvttps2pi sbb mov mov or popf cli ljmp mov jno sti out mov jne mov aad lock xlat xchg cmpsb adc inc mov sub inc cwtl out aad sti ja fs rcl sub xor add out lock and add jmp mov fidivr push sub gs xchg out dec push adc lds mov xor mov add pop inc push out dec call dec sbb xchg mov insl adc int sub out mov cli pop inc inc push push pop out lds loopne lock mov orl pandn or stos lea daa mov and mov and push jecxz mov out fistpl popf push cld dec push push push das and or mov mov dec sbb pop sbb fisubrl (bad) cmp out or (bad) (bad) loop dec out jecxz adc adcb loope rolb push sbb and or jo movsb fucomip pop lods jns popa xor lret mov pop lahf cmp fnop in out sbb xchg out mov push out nop push mov xor pop inc (bad) jge or push and leave je dec (bad) das sub stc fcmovbe ljmp dec ss lock sub sti push inc es stos out gs lret (bad) xchg aas arpl shr sbb sti mov mov test sbb lahf adc out cmp call add mov dec hlt push js pop pop lea ror pop pop jo and fldcw mov cmp add je pop mov pop out aaa call repz shll out inc out jl mov mov xor pop push aas sbb ss sub aad out (bad) inc add push in jno out adc fs test decl imul inc sbb mov and push psubq scas cmpsl pop fnstcw les rcrl push bound in and ja lret shlb ljmp fist adc inc xchg lret imul push pop or cmp out pop jbe xchg enter pop pushf xor ljmp fidivr ret sbb ljmp cwtl inc sub out neg adc loopne mov xorb push out xor das inc add out leave mov cmp out fisttpl mov ss aas push push pop lahf dec cli inc cmpsb ds iret aam out jnp loop mov pop out icebp push outsb push es and rcr ljmp mov cmc mov popa jb lea movsl or clc pop loopne xchg out aas mov gs das loop inc and out mov cwtl out dec mov lds jb push xor cmp mov pop mov inc mov add and mov ljmp addr16 sti addb mov or xchg in mov jb test outsb and inc ficoml sbb jp mov xlat mov cmp mov hlt addr16 imul loope mov pop adc dec push arpl xor inc push loope fimull fbstp push dec icebp push jmp out nop data16 inc push push mov jno roll sti fwait out cmp xor and lds in out (bad) imul sbb dec push out sbb mov jg jae adc jbe mov lea jl test (bad) fs out insl adc inc mov aaa cmpsb xlat pop adc mov test out stos data16 jo rclb pusha dec mov bound (bad) adc iret lock rclb mov out and mov je std mov imul sub ret out cmpl dec adc (bad) icebp lea aas imulb aad dec popf ljmp out sub cmc jmp xor popf (bad) push cmpsb pop insb out add mov cmp call daa shr dec aam fadd repnz outsb arpl mov push inc add mov xor xor xchg xchg push push or fldcw out and scas xchg jg cmp lods ficoml cs sbb inc ja sbb je adc js jbe sub out sub (bad) pushf mov dec and add int3 dec and in dec (bad) cltd push out out lock mov fmull adc out mov inc ja out js mov bound push mov xchg adc mov xor dec ror stos int3 cmp lea push scas mov stc inc push cli out movb bound popf out mov mov hlt pop scas adc mov (bad) out fnstsw mov jmp out inc test and test add or mov fmull push sbb in xchg out enter pop (bad) test out aam inc lods push aaa dec pop out or inc lods out neg ljmp lcall xor shr stc clc ljmp lods (bad) out jecxz push out pop sar fsubrp push scas call test ss loopne or cmc adc jmp inc cltd jbe movsl insl ret repz and or xchg push fs xchg lock repz mov in adc jae dec in fsubl dec jle lock int das stc fdivrs js (bad) cwtl pusha in xchg adc stos gs arpl outsl lret mov test mov out popa ret mov or out lea sti (bad) sbb (bad) mov ljmp das fs cltd out in loope rorb repnz cltd out out xlat or pusha out xor cli inc and jae out dec push jmp mov aam fsubr jbe pop jne push lahf xor xchg mov push cmc pop pop sub push aad mov pop popa dec lcall (bad) out xor jae test sub imul call int sub (bad) cwtl in scas out pop movsl movsb sub push in out add jecxz out xor inc das js xchg mov fsubr push pop in push dec cmp ss and out pop (bad) nop ret insb popf pushf rorb stc jne stos or in jge push jmp push or sbbl pop push int3 cmc rorw imul adc mov out sbbb push insb lea or vpmulhw daa mov or xor arpl dec sub lods imul mov push (bad) out and cmp push out insl add adc inc jmp push leave mov pop push mov push mov jg jp and and pop loop mov dec out push outsb test mov add dec xor adc or test mov xchg movsb mov xor subl sub imul jle out sbb pop add je pop loopne pop adc lods pop push inc jns aas out js dec out or jno push out push loopne cmpsb adc pop into out out dec daa negl jae sub test icebp insb push in out lahf sbb out jae push jl ja dec pop push bound flds sar gs jo adc incb mov ljmp mov mov mov cld mov mov lea cmpsb mov dec das call push ret out jnp fnstcw inc shr cmp jecxz arpl rcrb mov xchg mov push pop dec or addl pop out sbb xor dec in (bad) jnp adc inc shld outsl ljmp add xchg jno cltd (bad) push adc pushf popf out loope das mov movsl (bad) xlat ds sbb xor stc push out (bad) cmp pop in scas stos lods fwait into push push mov sbb mov dec push popa inc fsub out push cmp and push out sub pop dec into bound out loop add or inc adc dec sahf imul push out in push mov rolb repz or test xchg dec fbstp imul fsub scas std into inc cmp cs push push out inc cmc fist int3 fistpl out lcall pop aas mov sbb mov out or dec aad out fwait mov adc ret pop push cmp adc sbb loop pop fucomip sbb loopne jg int das xchg out push dec sub popf xor jecxz les shl mov fsts icebp inc out mov lret dec repnz scas js dec mov xor push ja mov fild jbe push xor cmp cmp xchg cld sub xor out cmp insb ret and fstpl cmpsl mov mov sbb pop vpaddb add stos and leave or cmp mov mov jl pop nop imul sub cmpsl push push xor int3 loope mov jb cmp ljmp jg mov xchg cmpb inc insl test xchg pop jp add inc cmp cld cmp adc fadds aad mov fwait dec psubsw out push jbe cmpsl mov ret popa aad mov out cmp lods pop daa jo,pt push ljmp xor mov call add loope je inc out ja push movsb jbe sbb out fild pop arpl mov inc adc stos daa ja bound in and js jb out sbb leave std xchg dec or out mov adc inc mov sbb in mov out scas pop push adc pop add arpl push (bad) jb mov out loop adc std sub divl or pusha xlat clc insl das movsl iret aas jge repnz mov out dec imul out jge lea lret pop push adc addl ss jae sub aad (bad) mov je cmpsl out or jl cli mov test cmp (bad) cmc sub std and pop dec mov divl jne ja or mov cmp div jle rcr jg push sub std push sbb lods loop andb (bad) sub hlt test mov in rorb pop das fdivr xor clc bound push data16 out pop lret stos cs rcl pop push loopne xlat enter mov or jg mov and inc xchg pop cmp iret out adc pop push bound cwtl xchg mov mov xor js push or add hlt lahf (bad) insb fmul call fcompl push cmp adc jbe clc sub in jmp mov out adc test pop out les adc fsubr add lock es rorl mov jb add add push inc aam or out xchg lret dec ficoml imul lret sub fldcw jae ficompl mov add (bad) out or out movsb adc lods out inc insl sbb fnstsw std out imul pop in lods enter inc jnp fstpt out jp jne mov add jbe out jecxz push enter das and cmp pop divb add mov add gs jge adc xor inc pop out cltd rclb cmp jmp arpl out popf sbb inc test out pop scas mov xchg sub adc lret sbb mov stc sub mov cmc unpcklps fisttp sti jo mov (bad) cmp mov xchg push out js je xor mov jle adc insl out leave in or loope jnp mov xchg out jge push jmp push jo inc loopne jmp push jns leave loop add mov push out lea cwtl pop cmp mov ja and jle inc dec iret test mulb pop or stc clts sbb test sti pusha out outsl aad mov out push jp fidivl dec cmp mov fildll push add (bad) mov and in or aaa dec addr16 jno lea iret es mov pusha inc mov mov out mov push fimull xor call mov shrb pushw cmc xor popf jg mov cmp out or test and jp sub (bad) stc and (bad) outsb loopne push add negl add popa fiaddl push je ss out or fisttp out pushf imul stos loopne jns (bad) out aad inc lahf add lahf mov or ss xchg imul push cli test (bad) aas icebp xor clc lret ljmp out loop int pop mov jle out imul out scas sbb imul push or mov call (bad) mov ret rolb aaa arpl or xchg dec out je,pn mov sti mov mov xchg into jmp pushf rorb out shrb mov mov add lea out sahf push stc xchg xchg adc in test pop xchg jge mov (bad) fmulp sub fcmovb ffree std pop popf sbb pop mov push push cmp inc cs pop sub loop in shl cmpb inc int3 (bad) aaa ret test movsl push adc and rorl (bad) push mov jne xchg out lar xchg (bad) cmc xchg push mov dec mov sbb (bad) insl adc out lret sub cli push out inc mov xchg fildll int3 fisubr push fiaddl insl push (bad) insb cmp out jo mov push outsb into push mov mov cmp mov ret xchg (bad) into fistl out lods pop cmpsb or push mov mov pop or imul addr16 push out sbb mov out rclb les lds pop or lea (bad) jp pop clc push add jae lods pushf mov (bad) out dec jle and out (bad) loopne mov aas sbb and repnz inc jmp outsb pop (bad) mov loopne push out dec or or mov in cmc out cltd pop movsb faddp (bad) out cmp push push out enter and cltd shr (bad) adc imul aad daa pop out and jge xchg ljmp xchg push (bad) jne sub xchg in imul insb jns xchg and (bad) bound shr cmpsl push sbb mov mov out dec das jbe fldt pop out inc inc call or or adc das sub (bad) loope sbb (bad) mov out ret inc shrl adc lea cmp or mov out aaa dec imul push fs add out rcll loopne pushf pop sti lret sbb xchg loop mov out xchg ficoml adc aam out xchg mov insb mov scas sbb call cmpsb pop inc add dec rcrb aaa in out adcl cmp inc jnp inc jg out pop loope inc pop not jns dec aad dec adc lods scas sub and inc clc lock mov rcrl mov out push orb stos sbb adc inc mov rorl xchg in out push dec xorl int3 mov incl push test adc cli sub scas push jnp cmp ja jl or outsb mov out xchg adc cmpsb aam lret jns orl mov in in scas imul dec mov pop imul inc dec fiadd lods in mov mov mov out jno mov mov sub push mov pushf repz pop inc popl int bound push out div inc fldl movsl out ljmp test add out lret je push fucomp cld mov in mov subb lods ret add or pop out cmp movsl jge out (bad) pop mov neg iret mov out mov push mov out xchg add mov jecxz bound or sub lock add inc cwtl pusha iret icebp adc rorl xchg lea cmp divl insl es out push sub dec scas mov out xor cmp mov mov fldz jns loope daa pop movsb inc shrb xchg leave clc (bad) mov cmp sub xchg out jae nop sahf mov jmp (bad) sbb cmp pop sub adc aad push in repz out arpl insb mov add pop cmpsl mov lods sbb in out dec repz pop stc cmp pxor (bad) mov pop sbb addr16 ret out (bad) fistp fisubrl out and (bad) sti (bad) std inc cmp movsb clc sahf xlat and out sub add mov out lea add jae sahf aam leave out outsl inc scas push pusha pop adc inc fsubl xchg out xor and xchg cmp out jl stc pop and movsl xchg (bad) or insb xor imul jle aas sbb out jne sub mov add add pusha ljmp or out mov inc push js mov dec inc or addr16 std fwait loope orb jmp insl cs inc sub jno fbstp out or mov xor push push aam and lret inc imul or int cmp mov mov or or cld rorb mulb stos (bad) in out repnz icebp subb sub push dec je aam or push cli mov xor push mov sar out adc add inc ds and out sub adc fstpl stc sbb push test (bad) aaa inc mov in (bad) daa stos xchg out out (bad) loopne mov ffreep fild mov popa mov add adc mov (bad) repz out push icebp push mov xchg je (bad) fwait mov dec sub mov jge rclb lcall mov lods jae cmc ljmp sub imul mov out shll fcomps sti out pop jne lods sbb mov loope std out jecxz lea out sub xchg dec mov or xchg insl xor out call or pop pop shr xchg mov mov push mov push jmp xchg pop xchg xor push in or dec sahf out mov dec fwait xchg test pop cmp in and sub imul ss into jle out push xchg inc sub cmc mov imul iret and lahf pushf push stos cmp icebp ror insl lret fwait out jns lods in rcrb addr16 leave jecxz out shrb pop jp data16 outsb loopne (bad) ja pop inc in cs out arpl aam bswap sbbl mov test mov xchg mov pop pop ljmp scas mov movsl (bad) lods jg dec dec test cmp xor out icebp mov jae out dec xor inc repz sbb xor jle stc test xlat ja cmp pop repz das fcom out inc ljmp out pop iret xor mov sbb repnz dec jb arpl and dec out lret addr16 mov dec (bad) out mov leave cmp sbb push xor pop cmp insl push out add insl push xchg cmp (bad) (bad) std pop jle nop jbe lods or add push mov scas test out dec add out add (bad) mov push xor inc (bad) enter rolb std dec mov jmp mov outsb (bad) cmpsb mov pop sbb pop lret (bad) xor aam in repz out mov mov sbb xorl popf sub loope aas mov jo pop push ret adc or and adc fs adc lock mov jo loop jg das add fmulp imul daa roll out xorl repnz nop imul out scas push notb add out in jmp push mov fisubr mov sbb pop aam pushf cmpsl out hlt xlat mov rorb fcoms lret fwait push adc (bad) insb aam test sbb add shrb mov mov add pop and pop sbb add insb sub popf punpckhbw out dec (bad) cmpsb int3 mov repz lahf dec and mov jne mov jmp scas push lret out inc out test adc mov cmpsl int3 out sbb xchg jne or out sbb leave cld setne mov pushf jl popf imul and in imul sub or test jl mov out loop (bad) aas dec jg dec xlat lock lea xchg inc mov out xlat dec std (bad) push mov stos fild dec into clc sti sbb mov dec scas subl aas mov fstpt jne jp in xor sbb or xchg shrb sbb ret push daa sahf je jb out and gs mov stc jle leave and jnp out jp pushf xchg mov adc mov (bad) push test out roll out or mov pop or jae xchg lock movsl dec out popa dec jb mov cmp call (bad) fadds leave in cld mov jle inc mov (bad) aas js inc jno pop loopne aam out ret mov out cli and std xchg fwait outsl out mov xchg inc xor enter loope mov aaa mov (bad) sub jmp out xor mov out in cmpsl xchg jb jge or and mov lret push inc sti mov out inc inc cmp fistpll adc js aaa push cltd fstps cmp cmp (bad) push pop pop or stc pop lret inc imul xor call fs paddd mov imul (bad) mov notb sub incb nop fisubrl mov xchg scas aas add pop rolb mov sarl mov je mov dec xchg (bad) testb insb mul out adcl pop and mov out insb popf imul out mov in in lret pop fstpt cmp ljmp mov pop call out int3 sub jnp sti rclb mov jne out or dec mov cld xor sub cmp (bad) out nop push inc scas jg jae out dec sub xlat iret xor pop call sti out sbb xchg sbb xor fsin mov fisttpll cmp in dec (bad) dec daa add test ror pop (bad) loopne cmpsb jns push mov and mov cmpb lods jnp stos pop lock inc mov sub (bad) loop lods cmc je ja sub aas cs inc push out add cltd dec sbb lock in xchg dec jge cmp out lret and out cmc js repz icebp xchg xor xchg jp jb (bad) sub adcb bound cld lcall scas fstpl lds enter add fsts cmpsl popa push mov adc lods xchg sub mov out bound push movsb mov lods daa mov aad call in out pop add or mov pop push and push xchg test jae add out dec xlat imul lahf and jle pusha mov and mov out pushw push xor (bad) jle jne push adc xlat test outsb loop gs or sub add jmp insb or out pusha xchg cmp ljmp popf cli mov sahf (bad) lock lcall jb (bad) out icebp into lods (bad) sub xlat out ljmp out cld out sarb repnz in cmpsb mov jns jl mov std out subl mov cmp xchg adc cmp out xorl xchg ss pop std push ljmp cmp sbb mov ljmp les sbb add out adc adc sar mov adc or stos imull out loop fwait mov lds scas in add rolb mov push inc mov insb adc stc cmp fucomp push lods xorl imul cwtl aas aad roll cltd out xchg sub out stos jo lea lock fsubrp ffree cmpsb aas in insl cwtl mov cmpsb xor dec rclb out xchg idivl nop mov out out into in push (bad) in out out pusha mov ds jb (bad) fild mov cmpsl out jns mov repz inc push hlt in lock lahf std push cmpsb out shll sbb (bad) adc outsl inc push (bad) push xchg xchg mov jns add cli adc loop xor faddl (bad) repnz gs out xor pop lds add push mov fs imul push out cmovo dec shr pushl mov adc ljmp pop orl jge cmp xchg popf push mov ret add loop and (bad) adc (bad) xor mov call xchg xchg jno jecxz into out and arpl pop rolb cmp fdiv gs cwtl mov add ror loopne adc pop pop jp out jg cli cltd nopl adc inc (bad) lods fsubrs mov fidiv (bad) aad dec xchg dec aaa jb push out into inc jle mov movsb sbb add push sub inc add enter cmpsb stos in addr16 out xchg pop jl or xlat popa (bad) jp leave insb out mov xchg sbb cmp rorb aam add or sub pmaxsw repz out mov vpunpckhqdq xlat jge jne and outsl shll std dec and adc fcompl out lret xlat inc out in inc mov push pop out push push push prefetch pop mov in xchg (bad) clc add insl leave test in ds aad es jecxz jae outsl je add jne orl fucomp sbb fidivl dec mov jmp adc (bad) mov mov ljmp pop in (bad) push std lds inc pop and dec sub or xchg fs imul sbb int3 popa les mov sti or pop imul pusha cmp cmpsl pop out leave imul sub (bad) iret adc mov out adc mov out adc dec es cmpsl popf push pop mov pop sarb movsl imul out cmp ds fwait sub imul les push push fs scas out and mov inc xor inc cmp in out scas xchg ficom sub lock stos test repnz ficompl outsb (bad) xor lds xchg out notb sbb pusha rol and jl cmpsl xchg cmp mov stc jecxz out loope rcl jle jmp out aas int3 int sahf mov cltd nop cmpsb fist push pusha jecxz cwtl sbb jp mov outsb mov aas ja (bad) push icebp out cmp jg fxch out (bad) xor mov movb cwtl wrmsr adc sbb sbb mov pop xchg (bad) xchg js loopne adc sbb ror dec push out test adc iret pop cmp (bad) icebp out xchg loope sub push sub cmp xchg mov hlt clc sbb jle loopne ja outsb out pop mov out mov in notb out mov iret sub out and frstor mov (bad) lods pushf cmp jecxz cmc out rcl pusha push pop das test in add and out add cmp movsb fldln2 iret sub cmp push sbb xchg sbb add data16 out mul sbb mov aas sbb imul aaa cmp (bad) mov insb pop mov lret pop nop fsubrp inc cmpsl es outsl jge arpl (bad) or movsl out cmp das js (bad) imulb push pop ss pop push out xor push out out (bad) jmp inc mov imul and (bad) fisttp inc cmpsb (bad) mov out ljmp cmp jo adc dec out loope notb out or xchg mov push aam fimul jl lock or imul xor sub test nop inc test ja adc imul cmp xchg lods aad outsl ljmp push or bound or jmp (bad) ss mov iret out adc out jp add xor jns cwtl adc loopne insb cmp mov leave mov fistpll push add push loop pop hlt js arpl sbb lcall sbb imul cmpsl out repnz dec lret out dec jnp push repz shr sub hlt out mov pop dec call cmp (bad) push fisttp outsb pop addr16 in pop in sub scas aam add mov and scas shrb xor lds pop ljmp and push pop push aaa lahf adc or xchg out dec fcmovnbe xor popa mov push mov mov lods ret (bad) jns (bad) loop lahf cltd (bad) pop into out jp lock push add (bad) pop mov fucom call pop dec or ss jg out aas ret fnstsw out or cmc js ret mov jno push lods jle out aas arpl in loopne insb pop out call mov lcall adc icebp hlt dec shll mov sub insb loop adc lahf cmovne iret sti test in or pop out jp sub out gs jg fild nop std jns dec push fist out xor push mov imul sbb out inc cmp adc cmp es insl cmp mov andl pop repz pop mov dec lock clc out cmp or bound insl pop xor inc out popf test mov (bad) and iret inc xlat je call fist push mov out pop pop xchg imul enter dec mov imul rol jmp sub sbb negb ljmp pop aad outsl (bad) mov sahf mov push adc and out leave mov (bad) out adc addr16 mov and lods out or or loopne mov aaa mov out and jb fldenv out idivb cli in jmp gs mov shr pop dec in lock clc xchg jo inc adc dec sbb mov jge xchg out addr16 xchg xchg out jle popa daa sub pop lret cmp pop ljmp sahf cmp inc cmp add aas cmp lret out fldt out lahf fisubrl out cmp stc bound dec sub loop sbb js popa sarb lods add imul imul inc (bad) repz sbb imul add test xchg in push inc fldt out push xor sbb inc push fbstp bound cltd dec mov in loope out inc ljmp ljmp out sub sub out fsubrp popa imul inc sub out pop push imul out test bnd mov out scas mov mov fild (bad) sub jo iret out enter adc pop pop jbe loopne and xchg pop inc out pop ficoml ss imul push in in addr16 fsubrs sbbl adc ret call out test push inc mov ds (bad) ret or pop fstl dec ja lods cmpsl lock loop inc push inc js push fisttp cmpsb dec sbb adc out push adc gs call loop imul xchg dec pusha jne stos pop mov push out jp clc xchg mov pop movsl mov mov roll (bad) lods lock cltd mov cmp jle (bad) rcr mov or insb dec push sarb mov xchg dec (bad) jecxz ljmp pop adc imul mov out fldcw (bad) hlt lock out aad es mov pop lcall scas (bad) xchg out arpl sub lods aad sbb jbe enter jns xor sub int (bad) addr16 pop inc ds jbe sbbl mov (bad) pop out push (bad) ret loopne cmp mov enter jae out mov inc popf xchg stos gs rcl mov test lods inc fbstp jne out sbb (bad) shll mov out test jno or imul adc (bad) ja fnstenv fadds loope or stos jnp mov out mov xchg in sbb inc out out repnz adc mov out out sub fnsave es pop popa loop lahf bound stc mull ljmp sub loopne insb (bad) mov inc push add and jp insl pop dec sbb cmpsb addb (bad) mov out sub lock in sub popa or sub cmp lods adc clc in repz stc and in out cld sarb sarl mov iret outsl inc fistp lret adc das loop ljmp in arpl mov cmp inc sub jne shrb mov jne pop or jnp cmp aas jmp icebp cltd imul shlb mov jecxz xor loopne aad cld cltd xchg mov and fmul sbb fildl cmp add fsubr add inc inc xor call movsl or pusha push and je pop jge lock fsub pop test in insl pop adc nop pop jo out mov cmc or add cmp dec lret push in xchg hlt aaa mov out popa adc daa arpl pop cmp in repnz pop pop data16 (bad) inc ljmp and leave pop cltd and stc mov mov push fisubl pop xchg out add rolb mov out int pop sbb push lahf fbstp aaa inc ret lock mov outsb cltd out cld (bad) sub out jmp (bad) popa inc xor mov pop sbb out rorb out pusha hlt lea xchg test loope pop xchg out and nop and sub add jmp inc sub outsb pop ficoml fldt fwait xchg call bswap repnz push rclb sbb in gs repz pop and sbb out out dec repnz jne mov xchg pminub lret cld insl mov xchg fcompl nop out and mov movsl inc aad movsb loopne mov out push in and mov mov push call cltd sub iret mov adc in lods ljmp into loopne and adc jg mov cli ret iret les insb dec pop xor outsb int xchg out add push jbe mov adc (bad) pop xor mov iret call push out xlat fdivrs inc out mov sbb hlt rclb push fsubrl out rcrl cmovno scas jl push xor scas iret int3 dec (bad) lret sub out mov pop roll adc in xor cmp ret and insl in jge jne int xchg pop mov popa (bad) mov mov ds out mov mov scas das ljmp stos gs inc or loope pop cmp or lcall in fnsave jb mulb out cwtl sbb cld or mov insb sub addr16 xor mov scas dec aas aaa xchg xchg shlb push out push jp insb ds pop mov mov mov push and loopne pop sub into sbb pop (bad) in lahf cwtl mov (bad) pop or jge jmp js ret loope push cmpsb dec sub xchg outsb cmc pusha sbb sub nop jge jb ja incl int call sbb ljmp push incb sub pop popa ljmp and movsb push std imul xor pop out ret push pop fcoms adc fucomip test jae add jns pop arpl clc fucom sub pop mov mov mov leave xor out call cli aas sbbb xchg adc mov enter add inc sub pop fstps pop push inc outsb dec sahf aad jmp (bad) lods outsl mov in sub jns in xor rorb lods mov dec jl call push mov mov out adc iret add lcall xchg mov dec jb out xchg or into or dec fs fidivr addr16 inc push push cmpsl fcmovu lret out and or mov movsl repz loop repnz fsubrp pop out inc (bad) cmp das lcall and les in xor out daa push xchg out loope push cmpsb pop jo repz lock sub xor idiv sahf adc clc out mov jne pop das fwait jg mov and sbb movsl xchg scas faddp arpl clc out push pop mov cmp lahf dec mov testb imul jne aad out out je repz add inc xchg out sbb std imul sub out aam cli mov daa inc pandn mov and inc pop ja (bad) push cmp out hlt add and leave or in sub loope pop ja int mov mov movsb scas out add xchg in jge shr icebp sub call jmp adc lahf movsb fimull mov lahf loope loopne adc out sub lods lcall (bad) ret out insl inc push xor mov out (bad) xor fs out mov ljmp ss push cmp pop (bad) adc scas mov movntq outsl fs loopne shr add js cld leave sbb xchg or jno andb loope daa inc push (bad) jb mov fucomp out movsb pushf (bad) in outsl aad jle mov dec add lods fdivs into repz pop dec sub fisubrl xchg sbb test pop and adc pop out jecxz mov pop out mov int (bad) mov adc mov scas pop setnp (bad) out (bad) popf outsb mov out pop inc shr mov js xchg mov push push fwait push pop mov hlt stc fiadd out scas fisttp js push mov mov pop push ljmp xchg hlt icebp pop xchg sti dec dec sbb out mov std add out loope jmp (bad) mov (bad) pop out test dec movsb xchg mov dec out mov xor icebp les (bad) cmpsb cmp out and mov iret (bad) mov stc clc mov pop push in add (bad) cmp sahf push dec insb movb popa mov jbe lods mov pop cmp xchg sub stc and arpl pop stos fist adc jmp jge out xor and out cwtl jbe (bad) xchg in je sub lret and out dec insl outsl inc jnp into inc out jle sbbl shlb out pop dec das (bad) xor fstps xchg push into jmp inc out xor in insl icebp and push (bad) (bad) sub cmpsb and movsl cmp mov fstl bound loop and (bad) cltd out jl cmp cmp pop sahf insl ljmp out push cs sbb and fcmovne cmp xchg pop xchg movsl sub lds or jnp out mov insb enter in jge and repnz pop jmp mov test sub cltd loopne stos adc inc pop cwtl adc push ljmp pop in mov out push call loope pop sub jmp cmp lock aad push mov ss out data16 outsb cmpsl into mov rcl leave into out or push loop shr (bad) or and jle mov sbb (bad) out shll das mov xchg loopne mov add dec test (bad) xchg jp pusha cmc stos dec sub ror pop out xchg aad test repnz out mov push loopne inc pusha push out imul and fs insb aad pmulhuw and adc test pop jmp hlt inc repnz aad out std lret mov pop and mov es in fimull out insb adc out xchg and call pop outsb xlat add out (bad) int outsl (bad) (bad) dec addr16 jle mov (bad) pop out nop or sub loope sti jns and (bad) jbe sub adc je jge mov out cs fs addr16 push dec jp xor ret sbb idiv inc imul dec xor pop sbb in jg insl out adc inc pop out cmp fisub cwtl in add out testb fisttpl push ds ret adc sti jle jecxz out xchg stos and pop xlat subb addr16 neg pop sub in lret sbb ds test jecxz or mov mov pop and cltd sub fist cld xchg in in lods clc pushf out xchg arpl pop cmp addr16 out popa push jns add xchg fbld mov ja rorb xor mov sahf or adc xor push mov test (bad) out nop fistpll push mov out test mov mov scas outsl cwtl jmp jle aad xor pop leave stos in cmp add mov cld cli sbb or sbb out test jae popa shrb out dec mov push nop (bad) enter idiv fcomps idiv sub sbb mov loop add popa shr es mov inc in cli dec add ret sub pop out out push pop (bad) (bad) lea xchg inc or push xor rclb (bad) (bad) call (bad) lret cmp out fild pusha inc out dec xchg scas movsl mov mov fdivr fimull ss movd fs mov call inc mov inc pop mov movsb (bad) inc push mov push sbb scas adc loope out pop out (bad) (bad) fcompl cmp imul pop cltd lret cmp push out mov ja ljmp or idivb out das cmp icebp aaa push push in (bad) pop ljmp push std out or js out inc mov sbb out je dec ljmp ror std xor loope stos out fs loope push cld (bad) out data16 xchg jne push mov mov sbb out fldcw mov mov pop fldl xlat or and pop testb out clc mov nop lahf pop mov xchg frstpm(287 (bad) cmp mov clc dec mov mov ljmp out push ret imul xor pushf (bad) jg sbb incb mov scas jle mov das shrl mov imul dec sub shrb or xor movsl test outsb outsb out cmp sub rcll clc cmc adc (bad) stc out cmp push jmp div lahf repz lret ret sbb out lods mov pop ret out out or std js mov pop shrb sub or and push adc out rcr les int mov jnp cmp cmp movsl sbb scas movsb outsb jae fildll adc out loopne cmpb dec pop out rcrl inc fmuls cmc out inc xchg xchg fcompp pop dec sbb mov es push hlt mov stos out das push jmp out push adc mov sbb (bad) icebp out scas outsb dec dec arpl mov mov loopne add stc ds jbe out jns loopne sub out cli or jge fld shr mov pusha lods push lea push iret movsb inc in push ljmp dec ljmp push out test inc repnz (bad) out mov out mov dec cmc mov movb arpl mov cmpsb int cs push shr ret and jmp out mov jg cltd and lock out xlat bound cmp fiaddl out sub daa out add fldenv movsl pop (bad) dec dec pop push mov psrlw push out in stos push lods push dec out iret pop aam inc fnstcw movsb fdivrp pop xor inc pusha push shll inc aad out les jo loop xchg inc out inc insb cltd xor pop or fbld and adc addr16 fs out test dec adc jmp into pop (bad) mov jns push rep cmp in cltd fistp daa inc sahf out push fsubrs ja,pt pop mov cs stos (bad) sbb (bad) loopne push js inc insb ret and xor adc ja adc push or outsb fs jecxz pop out push push cmp aas lea jne lds pop dec mov cltd xchg daa pop in out mov lea int out sbb (bad) int3 shlb push mov addl imul into call pop out xchg out cmp das and ljmp stos jbe scas xchg scas xchg out push xchg mov ss cmpsl cmp ret xor mov mov cmp cmpsl xchg xchg push jnp es pop scas fwait rcrl inc add pop add mov gs insl enter jmp (bad) pusha jg adc xchg daa imul pop pushf pop or push out lods cmp lea (bad) sbb out mov orb xor into in out ja in mov xchg fwait lea inc aaa (bad) mov cmc add loop xor out outsl mov shrb ja push (bad) pop je pop dec xor inc out mov test pop and lahf js pusha hlt out imul xchg out imul in call (bad) push mov lret (bad) cmc xor lods inc push sub and shl scas or idivb insl jo mov push push add sub mov or cwtl lret xor push test in loopne xchg ja push (bad) mov xlat cmp icebp lock lds loope out xchg jle out mov ret fdivrp lds xchg add push (bad) mov add lods inc mov push mov push mov js sar out mov fildll out push shrl test dec subl push mov mov stos mov test out mov std aas int3 out ss xor mov and cld mov outsb das out cltd and dec xchg pop add jp insb (bad) jmp mov imul mov dec (bad) imul mov andl leave mov call cmpsb mov mov out test xchg jp mov push mov insl (bad) and pusha and add out push aam mov push xchg ljmp xchg (bad) lock push cmpsb jmp jle jmp (bad) out bound in insl or mov das add cmc out mov adc arpl fildll lods movsl cmp adc icebp lret mov pop mov ds les jg movb outsb scas rorl inc insb and mov xchg aam out mov push scas mov fdivrs data16 das rcrb out cmp inc fcompl pop lahf (bad) sbb out pop testl dec out xchg nop icebp push dec push das into imul sub loopne jg and ja cmp jnp xchg dec imul out pusha and adc out adc movsb pop clc out (bad) mov in (bad) out sub faddl or pop dec mov (bad) fistpl insb jge cmp test jmp mov cwtl add out mov push (bad) jmp mov ss cmc (bad) jno adc push fildll mov outsb adc jb (bad) (bad) out loopne adc pop (bad) mov mov adc in lahf mov movsb adc xor gs into iret inc sti cs (bad) adc mov cmp push jae loopne xchg lods adc sbb inc movsb xor or test pop push lahf adc add sahf repnz in inc out std dec jmp adc xor out (bad) aaa into push lea out mov sub xlat hlt pop and push out pop jmp out out adc dec ja mov jl or cmc xor (bad) mov loop repz jecxz je wbinvd pop xor aam out pop (bad) jl xchg inc movsb fsubrp call lret in sbb mov and and mov rcrl push inc loopne (bad) sub mov loop jno jb push test (bad) push or cmp (bad) push xchg out mov in pop jb or add fbld inc pop mov popf call out xor add xor out inc std mov mov xor int3 out (bad) cwtl pop cmpsl or cmp lea hlt pop jmp outsl mov inc clc data16 push push push ds and adc cmc cmp cmpsb mov out lret or cmp sub daa jbe test std fs lret inc dec and stos jno imul mov inc aas out int3 mov pop notb das xchg out mov out in sbbb xchg mov lods or cld pop pop adc push and shl inc iret adc push (bad) xor out xorl pop push add push enter cmp push adc stos dec fldcw in mov xchg (bad) mov out in movsl inc mov loopne popf repz mov out aas mov xchg lds out sub push cs ret adc out popf adc xchg push adc out cs mov add mov out shrl and test or dec xor mov int out inc cmpsb mov adc (bad) xchg std dec es outsl out ja mov outsb out out fidiv and jmp lods sysret gs mov cld fs xor fmul mov mov in (bad) lods mov es out push xor xor cld int3 adc jle aaa out shr inc push hlt or or loop adcb xor add outsb inc and or sub aad addr16 out pop pushf adc arpl ret ret adcl cltd dec jmp pop adc add rorb pop cmc std sahf popa sbb jb pop int3 jnp out pop push lret jge,pn out mov jle loopne int3 xlat out or fcomip out pop (bad) adc in jnp pop gs fstpl mov lds out mov (bad) mov out or ljmp mov pop and pop pop ret mov jmp inc pop addb sub add ret out iret out or iret xchg and movsb fcmovbe push pcmpgtw outsl fucom in mov aad shll (bad) loop inc lods in dec out imul pop fs mov cmp outsl ss fsub out clc pop cmp mov xchg das call loopne xor pop (bad) jne pop (bad) push and clc daa (bad) fstl out es stos nop jecxz dec mov leave out cmp pop and out ret cmp and ret xlat push shl sub pop or or cli dec ljmp pop out out xchg out push out pop pop fistl push (bad) out shr loop cli test sbb add mov out iret aam xchg std (bad) xchg sahf out adc add xor loop into mov out inc jmp dec add ret out ret inc arpl loopne cltd lock push pop out je and inc cwtl cmpsb xchg or sbb push popf movsb pop enter testb loope (bad) stos pop outsl rcr shll outsb jo lods fcmovnbe and sub out clc xor mov xchg out movsl xchg fistp out int aad sbb and pop mov push mov pop sub pop das inc add mov jb inc adc out xchg push push out data16 sbb lret inc pop icebp iret and in pop inc pusha lock push loopne out mov ja pop inc aaa add xchg lods xchg popa jbe rorl out out jmp pop jg (bad) out sbb lods rorl ds sahf jnp xchg xchg jecxz stc loopne stos jae int adc scas rcr or push dec inc sub (bad) jne lea pop scas (bad) out (bad) xor sub inc adc (bad) mov aaa fistpll push call out jecxz inc pop pop hlt out out mov push leave adc mov sub ljmp out out fs shlb push stc sbb in dec jmp fs loop aad lds in subl stos mov adc pop popf adc pop loopne push push mov (bad) sub outsb insb push out pop addb out mov add xor jb dec ficompl dec loope loop or xchg push jae out jns test sbb (bad) test (bad) dec add adcl mov out or add gs in xchg (bad) or out test add xor mov test jbe shll daa xchg stc iret cld sub gs aad dec les sub lcall out mov sahf std in aaa sbb stc fidivl out icebp push xchg (bad) sub inc xor pop out test push (bad) cmc mov out sub dec sub cmp inc pop shrl inc sub test jmp loopne or pop mov lcall pop adc es stos mov push mov mov and fisubr xor fstpl mov push hlt in out arpl mov (bad) fistp push and mov loope or loope (bad) iret mov mov or cmc jg out movsb pop push cs mov sub pop mov sahf loope push lahf (bad) loopne stos aam pop div pop mov mov out jle sti cs jnp imul rorl lods jmp pop cli sub mov sbb mov ljmp push xchg xchg in adc mov out xchg jmp add and jge (bad) mov cmpsl out dec pushf sbb scas jno nop (bad) out or lock pop jl lret mov in into addl mov cmpsb out push ljmp sub xchg dec dec mov lahf jge gs mov call divl xchg orb cmp cmpsl out and push loope rcll imul jecxz lahf ss push out push push out out fdivl lret and and pop sarb loopne out mov (bad) out mov pushf loopne leave dec out mov inc shrl shrl out (bad) mov loopne lret and xchg jl jp adc mov scas and and inc pop fisttp sbb call add mov sbb sub dec xchg xchg fsubrl xor jmp add mov out (bad) xchg and out inc ljmp out mov inc and mov (bad) out pop stos pop jbe out lret push inc pop xor loopne dec lea inc pop aad ret out pusha in push mov cmc iret mov fwait sub add fstpl data16 inc pop out or ss inc pusha xchg add xchg mov je sbb (bad) fbstp leave arpl pop and sbb mov xchg mov insl out sub leave and or fisubr lock sti xchg fwait jns stos rcrb pusha cmpsl pop xlat (bad) and in rcrb jge and dec mov icebp movups mov pop xor ret loopne adc mov lcall out xchg call mov fdivrs rol push shr sub and mov adc fimull mov gs mov push adc pop xchg jmp sub push sub pop in dec out fs fisubr jnp push fldl out scas push mov jns gs jl sub add pop leave out mov lahf sub out or mov cmp pop mov lock outsl pop insb stc (bad) jne stos out popa add add push out test xchg pop (bad) and out out sbb or mov and mov jb pusha add mov ret out mov pop lds jp out addl lahf out stc pop daa mov mov inc scas cmp fs jecxz lahf in neg sub sti out mov aam and aaa loop dec iret jb (bad) cmp lods stos call adc cmp push (bad) (bad) pop jno in cmp das dec repnz xor ljmp pop in (bad) scas adc addr16 imul ffreep push dec jo inc lcall int pop xchg stos das out and pop aaa out xchg sahf mov data16 cmpsb out mov mov out inc rorl pop fucomi mov out mov mov stc inc xchg lock pop lret pop push add inc mov xchg std out mov jbe push out (bad) fldenv into ficoml aas cmpsl add xor mov mov xchg dec pop and mov popf loop daa pop (bad) pushf or push push dec imul repz or mov out pop or mov fistp dec out fsts decb testl inc pop pop mov dec loope (bad) mov aas pusha out adc jge xlat pop out mov inc dec lret push xchg and jno add ljmp sbb cwtl out jp sub pushf jge loopne add sahf mov popa insb das cmp iret out xor shr sub pop daa sahf pop outsl out adc xchg dec in call in push lock jne jno lret test je (bad) pop repnz leave (bad) ljmp fidiv xchg pop out dec push loopne mov test jecxz sub movsl call dec bound xchg inc and pop inc cmpsl pop hlt inc sub lahf xchg and adc lock adc shrl js pop int dec lahf shrb ret lret pop (bad) xor (bad) in lods jecxz out push mov sbb mov push mov out repnz lahf scas out test xor out mov incb incb inc pushf out fmuls loope daa mov js mov sarb lahf jg xchg call ja lods dec adc arpl dec mov jmp inc loop or mov lds ja (bad) push shlb rcrb insb out jg call add roll arpl rorl mov enter pop adc loopne push notb rcll lock push mov les pop clc jo mov (bad) cwtl jb dec mov sbb jb sub (bad) movsb decb cmp jmp rcl dec ror icebp pusha mov cld jg mov mov lret loopne jb xchg ja jmp push cmp mov imul jne gs inc push xchg ret lds sbb pop or ficompl pop out inc dec add (bad) fcoml fsubr cmpsl fcmovbe out inc jle push fldln2 int3 decb in sub lcall mov mov (bad) ss (bad) out cmpsl adc fildl iret stos xchg cmp sub out dec mov out push and jmp add adc (bad) popa push out lcall inc (bad) mov les and arpl in out loope fildl out jno loop xor out out fwait aad daa xchg dec idivl push mov ljmp out dec lret cmp orl sub or test or mov out pop xorl out xor cmp (bad) pop mov in iret aam sub call or and mov jge sub movsl stos sbb push push out cli push add out repz push out fsts pusha mov cmp outsb jg nop or repnz fdivl (bad) out mov enter out inc pop mov fildll xor ljmp shl and outsb outsl jno pop imul pop in push out adc inc mov cld xchg jg cmp pusha out pushf xor sbb out pushf add fsubrl fbld xor repnz out adc pop cli cmc add sbb sbb out sbb lds out stos outsl sbbl fnstcw adc icebp fwait je or into out out push xchg stc rorl jle ret stos adc sub lock out pop or pop in pop loopne mov sbb sbb lods stc lock pop pop enter sbb mov leave out lods push aam icebp jnp mov out lods or adc xor insb loopne,pt pop pop gs in pcmpeqb popa jae xor jno adc mov (bad) push mov into aad cmc (bad) ret ss je call aas dec in inc js dec movsl jg scas clc mov cmpsl movsb xchg push out push sbb jno xor in outsb sarb out xchg inc and out xchg lahf mov out and mov push pusha lock mov sub cmpsl js mov and xchg out mov xchg movsb inc xor out jge test clc pop sub out cmp out incl or jno dec mov std xor jns pusha pop cmpsb jb mov rcl out pop pop or dec jne xor fidivrl in std sbb lcall out jg movsl mov psubsw push mov push stos jo dec shlb mov pushf sahf shrb pop out jmp jb inc jns (bad) nopl xor stos cmp adc out inc lea faddl pop pop out mov cmp jae xcrypt-ctr cmpsl lcall call sbb cltd ljmp cs test call outsb loopne sub sub or xchg dec call fwait stos dec dec or or add jo jecxz test mov pop mov sub popa adc pop push movsb int3 adc push ljmp out cmpb or mov dec lcall das out push addl out or adc out add mov or rolb icebp stos out and mov xchg inc loope sahf das cwtl rcll dec xchg fisttpl loop rolb hlt ljmp gs add int sbbl xchg pop sub insl sub inc fwait pop les cli dec jno push das idiv pop sbb sub sti into pushf insl gs out xchg cmpsl pop push push fild (bad) repnz rcl xor sbb pop in adc jle int out cltd xchg or cli xchg cmp pop pop mov inc lods pop push dec test mov adc jae test xchg mov add xor sbb out mov rolb or stc adc frstor xchg call cmp (bad) js jae pop mov inc das data16 fwait out popf sbbb fisttp ja and cmp out dec into daa call out and std or loopne add cmp mov enter imul into stos push loopne out movsl or add ss sbb xorb xchg out loop mov push mov jns cmpsl lahf add lret out and addps add xchg cmp mov movsl push sbb push cmp outsl pusha fsubl out repz (bad) mov loopne in add out pop ds and mov pop out add dec (bad) cmp jno mov inc jg pop cli adc xor sbb int push ds std out je and (bad) idivb test daa sub loopne outsl push ret ret imul movsb (bad) add daa cmp pop adc in xchg popf inc mov lret xchg (bad) ljmp push dec ret inc out enter push push (bad) dec adc (bad) out sarb pop pusha out test je sub in outsl xor dec adc mov mov out ficoml add push inc out mov mov lock out jl xchg xor leave pusha out pop fbstp cmpsl xor pop in push out adc mov test fwait aad mov out push (bad) lods lea ljmp mov out pop mov push sub movsb ds sub js out push mov test loopne adc int3 insl rcrl mov (bad) dec push xor fbstp scas cmpsb lock mov mov js aam loopne pop fs out in ret out cmp sahf and xchg adc std mov out scas out call out mov lods inc out mov push sub out das pop mov jne std into mov inc mov (bad) int lea add or iret int pop mov mov div insb pop je (bad) movsl xor and cltd cmp sub xor inc sbb scas and cmp sub sbb sub and push out into push sbb (bad) leave lock and ss subl push jle cltd xchg leave loop xchg and inc out adc and or add ljmp jg (bad) mov mov jb pop out lcall (bad) out dec xor lahf pop (bad) out jl pop xchg aad lock bound and xor pop push (bad) jo inc pop inc pop cs sbb jmp mov inc (bad) popa pxor in sbb out ret mov adc out mov and pop mov in pop movb pop imul inc jecxz hlt cmpsl pushf (bad) jmp sbb push clc stc ljmp xchg aaa fwait sbb jp fbstp es adc sub mov xchg dec out imul mov or pop (bad) pop xchg pop sub (bad) aaa mov push in push out xchg je jno cmpsb xchg lea xorb repnz jp mov mov test aaa out cs sub inc pusha inc adc mov lahf in lds nop outsl int decb adc cmc lods stc fsubrs iret ljmp jge push out xlat in or (bad) jp out cmp ds loop and mov iret ljmp (bad) dec (bad) shr stos dec xchg xchg add cmpsl out hlt cmp mov lgs mov mov pop mov sub mov movsb inc repz shlb test add in icebp and and adcl (bad) mov jno mov jb push lret popa (bad) (bad) or data16 cmp cmp mov pop fmuls xchg out ljmp in dec popa sub stc xchg outsl out pusha xchg push roll in js shrb add repz mov lcall fistp cld sub (bad) adc or sbb pop sbb inc xor add jl lods mov out lahf jo psubusw xchg mov es push scas out jno imul pop orb jne or (bad) fisttp and jecxz scas gs lds out xchg cmp xchg daa adc iret pushw push xchg adc (bad) out fcoml xor out loope mov pop in xchg pop jno jb movsb subl jmp sbb not mov loope vandnps test jae and enter pop leave mov fwait xchg and pop push test xor loop push out aas repnz xor scas data16 out sahf and icebp or iret fwait adc shr and cwtl movsb out mov dec std pop ret out enter lods fsubrs pmaxsw out rcl insl fs xchg cs mov sub pop pop and out jg pop push pop ds rcl pop in sub in pusha mov pop xor mov cmp das out in mov out lods pop cli int insl addr16 popa and push ja pop push mov pop sbb jecxz pusha rorl mov out loopne jp les sub pop test mov jns jno aad imul xchg lcall aam mov outsb sarl jge loope loop or adc pop xlat inc cmp dec out int or adc sahf mov les dec xchg out imul fldz dec popa jo mov daa mov std je push in out ljmp (bad) lds call pop out dec aad push imul add ljmp into sub (bad) rcrb fnstcw push aam out dec out ret mov mov sbb lret jecxz lods push add xlat pop in cmp sub cmp pop cmc iret add pushf stos js data16 mov lds outsl cmpsl mov imul add add (bad) and je dec test stos pop pop push dec mov lahf das adc push (bad) cs xchg pop imul add jnp adc leave sbb out push pop cli aad mov pusha pusha daa jmp mov fldcw out cmp ret jg mov (bad) cmpsb pop in (bad) out jo xlat mov out mov add out jb pop gs mov lret inc imul repz adc ror jns lods jg xor dec cld fisttpl clc cmp ja fstps xchg (bad) out push jl (bad) cmp jle shrb mov lods jno or aad mov daa mov out mov into pop int pop out stos data16 cld outsb call add add sub xor adc in push pop (bad) out mov sbb mov mov or std mov xchg mov outsl movsb and out rcll dec or pop cs in nop sbb sub ficomp xor out mov sub out sbb lods in push push out mov add aas (bad) jle out xchg xchg test ja out adc sub mov out pop xchg loopne rol aam pop cmp imul and out mov (bad) out jbe cmpsl or pop test xlat and stos pushf adc data16 aas aas adc pop bound in dec sti adc xor inc addr16 adc mov repz add aam (bad) (bad) movsb mov mov cmp test mov xor pop xlat out (bad) inc sbb lock lock testl out push fmull jle js xchg mov arpl xchg add mov (bad) out mov mov cmc push scas jne loope xchg pop and insb sbb (bad) pop sub cmpsl test aas mov imulb loope sub pushf mov jae inc out cmpsl jmp aam pop sbb pop xlat out sbb jnp ficoml sub and add out loopne scas sub out cmp jbe call sti mov movaps push add out sbb dec in adc push call out sub adc (bad) lcall inc push out xchg leave test push lds fucomip adc mov inc (bad) and lahf pop xchg dec mov cmc cld inc add out mov cs cmp jb test sub in dec sbb clc xchg out lock push les mov xchg sub pop loopne ljmp ja jo unpcklps or out adc xchg sbb (bad) es adc lods (bad) fucomip cli shrb pop push add movsb iret xchg xchg xor in pop repnz iret xchg pushf mov out mov xor int inc sbb loop xor leave sbb pop sbb aas enter or scas mov push out inc cmp int imul xor (bad) fnstenv cmp out mov out movsb or int sahf out ljmp iret push scas xchg cli pop fucomp rcrl (bad) fs mov cmpsl lock xor sti pop js das movsl mov out cmp push pop xchg xchg jo pop imul mov jl add negb jge les add addr16 jo inc xchg jle xor cmp and xor sbb fiadd rol std or and out and adc push loop fcompl cmpsl incb (bad) call dec gs out lahf jmp cmp out xchg cmp fwait loope sub out and imul fdivl ja mov and lret popa sbb xchg lds mov adc sub fildl and pop mov (bad) imul out cwtl iret dec jno add jnp or xor xor mov out sahf push pop xchg out dec xor push popf add dec ljmp mov xor fisubr xor mov sub ja out imul sub loop sbb inc sbb fs xchg jg popf cs lcall jne add pop out mov lcall dec pushf sti inc mov pop xchg lods fwait pop push in pop dec push and mov push imul dec or xchg stc sub out cmp cmpsb jge push xchg mov faddl pop je adc dec mov pop jmp ja (bad) out daa add pop call xor (bad) jne shlb xchg push lock out mov xchg int3 stos fist dec rcl jmp out add jp lock out or lret pushl push cwtl int and mov inc movb outsb sti mov sti out imul (bad) push in out jbe and pop lods inc dec out cmpsl ds cmp mov sub push out popa imul jne mov fistpll lea les clc jmp mov out jbe pop cld mov pop pop loopne lods fsubp aad sbb rorl and push je das out or pushf stos push mov or and int test dec and in ret repz mov adc scas jo cmpsl cli repz or ljmp jmp in inc dec (bad) xor mov push jae popa bound cltd add ficom js inc int3 dec out mov sbb sub sarl mov adc in cmp stc and pusha lcall xorb in lret into mov call (bad) mov lock outsb adc jbe out dec lds repz mov mov xchg cmp data16 or pop (bad) div xor pop out and push rcr aam les test rolb aam adc sbb (bad) out cs mov xadd loop rcrl out aas pop daa xchg pop outsb outsl (bad) out out in sti xchg and scas mov lea pop adc (bad) arpl das lcall jg call out fcmovb push (bad) push jl push jae aam mov data16 fsub test divb jmp out sub and test (bad) (bad) lock inc shr out xchg je ret add inc xchg icebp jecxz adc loop cmp cmp fdivp xchg movsb out push mov jno or inc push orb push lret mov outsl pushf lahf push sub sbb and pop test loop ja push out aas test cwtl cmp sub mov arpl rorb push out js pop call pop shl movsl lahf loope xor ljmp push (bad) lret cmp out rsqrtps out sbb mov insb int out pusha stc adc jnp addl hlt iret dec out xor pusha mov fdivrp ret andl add pop xchg xor inc fucom xchg mov lahf inc cltd movsl punpckhdq adc dec cs dec mov sub cmp out adc out mov pop sti adc stc loope push iret out mov push jnp mov mov std push stos lods cmp pop dec sbb dec repz rcrl aad xlat addb add popf sbb mov out testl int3 mov mov ss pop adc in push pop mov and ja movsb loopne or sbb mov outsl hlt inc inc lds mov push jl (bad) or cmp test xchg pusha jp stos out mov (bad) jnp out xchg add xchg cld xor adc fdivrl mov ljmp loopne dec scas loop aam call cwtl test add mov jl sub or jle imul dec lahf fsubrl mov stos das fstl jns jp mov sbb in sti cmp out clc sbb aam divb pop xchg and out loopne push adcl jb cmpl pop push (bad) imul lods cltd out inc and inc (bad) aaa mov iret rorl in lahf mov jmp inc mov aas icebp in mov jb adc ret lock add jl ljmp gs cmp imul int out xor fnstsw xlat out lahf out ret repnz (bad) roll popf outsb (bad) addr16 in jae ds dec xor and fdivr rclb xchg xchg push jecxz icebp ljmp loop data16 hlt xchg leave stos mov jmp (bad) mov jmp rcr out sbb aam or in dec out xor mov inc out mov (bad) dec pop movsb mov call out add jae mov add jge ss inc cmc pop out pop or lcall scas pop cltd jecxz imul jp jno dec loop fs fwait out cmpsb pop (bad) jne mov (bad) out sub arpl into inc leave out push mov xor jmp fsubr adc in add jge int3 mov out inc jno (bad) out clc xor sbb adc outsl mov fildl mov rorl loope imul push mov aad rep shrb xchg cmp xor in mov mov pop aad xchg sub fidivl cmpsb cmc push inc mov popf out mov sub dec rorl sbbb push imul pop ja into adc cli rolb cmp les mov out (bad) mov ret adc es mov mov inc xlat (bad) jo sbb xor lods mov dec add adc mov push data16 fmuls cmpsl cmp pop call repz in xor xchg mov das sbb dec inc ret push fldz insb dec push ljmp in mov fwait mov pop sub add sbb out dec in clc insl enter pop leave mov lret daa test (bad) cmp mov cmp xor cmp mov jmp jo dec pop mov lock cltd out dec pop xchg jbe out adc call popl loopne inc nop xlat mov xchg sub out mov mov dec out push xchg (bad) adc or dec push jp xchg inc test decb xor pop adc stos lock add in sub adc ss stos dec add ds ret jle std jae cs cmp jmp out addr16 mov pop pop cmc pushf arpl out aaa jne iret lret sbb bnd or cmp and pop out bswap jns adc in adc out ss mov (bad) je bswap (bad) mov scas inc ljmp pop out aad push xchg xchg mov mov lahf adc mov fldenv movsb mov stos or inc sbb out and dec jecxz out stos js out pop insl or pop popa lock sar imul dec aam in mov xchg out (bad) (bad) lock ljmp cmpsb ja fwait mov push and in or jbe xor adc pop out lods adc das and dec or push dec pusha imul jecxz sub inc cmp inc into cmc mov mov arpl pop lods or insb xor cmpsl mov clc stos out or (bad) inc rcl pop es ljmp out rorb push lahf out mov ljmp dec das jae pushf dec cwtl xchg ss pop jo add adc scas clc inc repz fwait jecxz jge std sbb out ds cs mov inc call push enter das int decb xchg push loop pop jg push les mov out fisttp inc sti cmc insb aad out pop (bad) (bad) mov fwait ds ljmp out nop xchg loop mov out pop sahf pusha lods sub mov out movsb aaa push insl jmp jne xchg mov je fidiv subl xor loope cmp pop mov xor lock ss lret mov add pop jmp mov das dec insl cmp lods push lock out cmpsb out sbb mul loope push jmp shr jge mov mov inc pushf fs push or stos daa cmpsb xor out stc or repz test out fwait cmp dec popa out cltd cmp jns ret out mov and lods aaa jecxz pop (bad) insb pop xlat sub or mov xchg out stos loope mov mov out and lahf adc dec xchg mov cmp pop ror mov or cwtl lret imul fs mov mov inc fist test cwtl std out into enter fwait add cmpsb adc mov adc loop cmc pop outsb inc pushf xor dec mov jp fcom bound out fild popa pop xor in loope push sbb movsl (bad) out lcall or imul dec push fldenv mov add ret jmp push (bad) out cli sbb stc imul test jmp push or sarb stos mov imul iret fwait aaa or (bad) push outsl cmpsl mov jle (bad) sub incl add out fistl xchg je pusha fisub aam and jns inc add cwtl cmp jmp divb adc add int3 iret fdivrl mov out lods jmp xchg sub movsb aas out xchg (bad) xor cltd and out fimull or enter ret imul push leave push fbld and in out pop test insb call (bad) scas in add pop repz ss ljmp or sahf out pop adc xor inc pop pop sub addr16 lahf jmp aas and movsb (bad) fmulp call lods popf and shl (bad) mov or inc inc and pop xchg loop jnp out mov adc out (bad) aam push push imul mov sub jecxz fisttpl out mov mov outsb out xor xchg fldenv or mov cli stos inc mov cmp sub mov jne add int3 hlt dec jb dec outsb movsl lahf pop or pop std sub in dec mov ss jnp fadds imul leave dec push xchg pop push mov dec mov xchg iret lea js add inc cmp push aad push jae ljmp out mov cmp shr ret jle shlb popf dec mov fsubrl clc out cmp scas push mov cmp out add sahf test fmull xorb int cwtl push mov mov mov cmp rol fs popa test sbb inc jl pop ljmp out sarb adc out ret lcall jmp loop sbb out subb imul faddl adc dec es pop xchg dec imul outsl (bad) mov xor pop dec or test out in daa xor mov push cld cmp push lods popf (bad) mov push jg push in mov dec lods push cmpsl popa xchg push out push out jbe les add out test lea push lret iret xor fwait pop pop pop xchg out xchg arpl jo pop lock dec sbb pop dec dec sbb fst and xchg pop out lds out imul int stos (bad) fisub xchg sahf movsb cld aad in adc xlat lds push pop inc cltd je icebp dec cli cmc outsb dec sub adc (bad) jecxz xor fstpl jns or hlt out adc push mov iret mov jg gs push out dec xlat mov add add mov stos loopne mov cmc mov (bad) sahf leave adcl popf shl or xorl cmc mov ret adc out jae sbb es popf out mov push adc push std rol movsl loop in and fs xadd dec sbb clc push lret inc out cmp sbb fcompl pop out enter call mov and in lods xor popa dec mov mov stc out in sub push imul pop or pop shll pop jmpw rclb cmpl jmp (bad) push out pop pop jg nop dec out out cld (bad) pop stc pop outsb addr16 out into sbb push in incb sbbb lret mov pop hlt lret add push mov adc ljmp out movsb std shll lahf add (bad) movsb lcall xchg inc sbb out mov sbb mov popa rcll and cmpsl out aam mov push out aaa stos insb outsb rorb pop pop addr16 lret in xchg fstpl xor shl je push xchg jg pushf sub dec test (bad) xchg push popa sub dec mov pop out sub pop and sub mov xlat int fidiv dec pop lds call mov mov out cld les pop inc jne out jns ret pop mov pop push mov out mov xor loopne cmp fs in insl add in ret out (bad) pop and or stos mov pop pop adc std pop gs out cmp ja scas out movsb inc jbe out and arpl jp fucomi dec ret aaa or jmp jmp es ljmp lea push xchg add movsl dec out xchg loope push and pop sbb mov lock mov jmp call sar and clc add adc push fidiv dec or cmp out lahf sub outsb sahf push push adc rcrl arpl aam mov ljmp aas or les add out mov pop insl jb pop ss out jp sbb aas in insl dec out ret repz outsl cmp or leave call sbb jno in lcall dec or pop dec inc movsb push lods jmp jecxz nop mov xor loop jmp ss and add loopne sbb in out cld jae pop js shll jmp push jge out repnz or push out repz clc mov (bad) arpl in cs cmp lds stos sti aaa fnstsw out and cmp adc cmpsl lret mov dec push mov scas stos jge sti xor push xchg inc int shr xor es sahf int3 add xor outsl jns subl lods jbe inc ljmp movsb shlb jecxz and fstpl inc xchg out adc pop push xor aas in inc push sbb (bad) and xchg inc inc inc outsb (bad) iret (bad) das pushf in pop test sbb mov and pop xor stos pop mov mov add xchg dec push test pop out fnop pop xor movsl push dec ret xchg mov ror scas xor xor test popa xchg fstl pop movsb loopne ljmp out sti adc pop popa cmpl pop out mov or mov (bad) ja sbb xor fsubs sub sbb adc ret push mov outsb aam lods mov mov sub aas sbb test shl xor lock xchg iret ss and xchg cs add lcall out push mov arpl out test fucomip repz sub jns in (bad) out aaa out cltd andl adc jns out push lret push inc pop pop push lret or cmp pop sub lahf add xchg fs sar gs out mov mov hlt js popf out jge xchg daa cmpsl xor scas xchg lock gs push push ret push out ss (bad) mov push jb push out (bad) or mov pop (bad) out das and and mov pushf xchg ffreep mov leave call sbb pop sbb call fdivr int pop jmp mov jp xchg jg cmp (bad) pop add aad in jmp xor fdivs push imul jge cltd insb test (bad) or and fmull cli repz shrl pop mov out rorl mov imul or nop lret decb jg mov outsb aam pop adc test xlat add mov mov xchg mov sub lret test push push push sub xor (bad) pop mov incb pop in leave rcr out push stc cmp sbb mov cltd in jnp xchg aad jecxz pop cmc jmp loopne or cmp adc rorb out sbb xchg mov inc pop mov fimull adc aad mov popf mov dec out push jnp dec xchg jbe inc iret rcrl ljmp hlt out outsl sub cmp (bad) repnz iret add dec dec pop ss adc out xlat fst test psllw loop xchg ja les out js cmp pop xchg je pop lret add ss loopne sbb out cmp out aad loop mov fisubrl jg gs ret and (bad) (bad) movsb xacquire xor lds xchg out fsubl movsl sbbl in jge and lret cmpsl sub xchg fistl in add decb ds dec in sub clc (bad) jecxz sbb and (bad) out je xchg and mov pop and ja add mov or adc lret scas adc into mov and push pusha out loop push loopne lods mov push cli mov jo push loop out aad jae ret push cltd out (bad) int out stos (bad) fistl or sbb out or mov in sub mov xorl out sbb es (bad) lock mov cli mov out bound fs or aam lea dec (bad) adc jg out push adc or sub out jnp lahf es adc add fucom adc push out imul loopne incb push push or out xchg xchg inc daa xchg sbb and sbb or out out xlat add push xchg pop xchg pop push lods insl js xchg ljmp mov imul jbe mov push movsl or mov xchg xlat pop and adc push ja movsb xchg mov das push mov cmp and and pop je movsb sub push pushf adc leave ljmp js outsb ret mov repz (bad) int3 das mov (bad) and pop out inc scas push mov out fwait movsb icebp gs (bad) lret out add cwtl sub cmpsl fucomp call aad dec out int3 xor and inc iret xor (bad) sahf out enter mov and pop sub clc xchg stos in push out repnz mov scas cmp les fs out mov sub out sti and inc pop pop bound mov out js icebp loopne lds out xor addr16 inc fs lods in sub xor adc sar mov jno inc add fsts or clc insb push ret push mov jae adc sbb xchg and push cmp and mov fisttp aad sub sbb push or roll xor fdivrp jg pop cmp in in leave movsl out out add pcmpgtb pop and cs out push mov sti repz addr16 jecxz push clc out sub movsl out cmp mov xchg inc das adc mov in dec mov rep lock hlt cli xor inc lods out ja push popa push mov (bad) aaa mov outsb push cs adc xchg sub jmp dec mov pop scas xorl out pop cmp iret add out daa xor sbb cmpsl jne or mov (bad) push inc out out (bad) in cmc es (bad) jmp repnz outsl loop xor out fsubrl sub fbstp mov dec aas js gs leave sbb adc inc dec rcrl cmp fcompl in jge pop push jbe lods out sbb scas in mov das mov out jecxz loopne xor pusha aas aad push mov sbb mov lcallw pop es jno pop arpl add jl std push add push and add (bad) into scas adc lahf out jns out scas and out repnz ljmp lds ds sbb xchg dec inc fcomps pop arpl loop je add push sbb jns sub lods popf incb sub insb loope pop push (bad) aam imul jae cmpsb inc movsb rclb sti xor mov or int popf or test add lahf inc xor out jo lock jb fs (bad) and test mov divl out xchg xchg cmp (bad) mov jp je fs jp scas push adc and (bad) out rolb ret pop jmp fldcw add (bad) xor pop push (bad) loop arpl in fs push loopne and out jae repz dec out add cmpl jle mov adc dec sbb ret out cmp jmp int3 xor inc ss out sahf rcll loopne pop fs rclb jg popa divb aam xchg ljmp out sbb or out jge mov cwtl out leave sbb lcall adc mov hlt cs sbb insl cmp mov into insb dec jmp nop fst pop aam jb imul insb and out ljmp jns repz push push sub out lar iret cwtl push test lock cltd in sub push shr cmpsw inc cmp mov mov add mov pop jmp popf enter push lods ljmp out lds add leave rcr fistp (bad) push addr16 loop arpl insb out jae repnz jbe dec adc je hlt bound cmc lods fbstp repnz ret repz xlat pop fcomip out icebp pop jno dec add jl std dec out rolb popl out rolb (bad) das cmpsl add mov ljmp mov pushf mov xchg scas adc dec pop in popf loopne dec mov das mov lods xchg sub call out mov xor mov fbstp les fmuls jb movsl enter dec loopne inc pop xor faddl or push imul jg gs sub pop sub mov out mov push (bad) ja or out lahf pop aad jecxz mov pop ficoml addr16 ljmp out mov (bad) dec js fnop stos jns stc dec xchg (bad) insb cmp out (bad) push icebp xchg jo pop mov call sub stos and inc out push cmp mov mov xor (bad) jge and (bad) dec in dec (bad) out loopne int3 aad push jne das sub jecxz into fistpll out mov or pop add mov gs int3 cwtl dec and es mov mov inc out (bad) dec ret lock je push push ljmp movsb jb pop (bad) add sbb out outsl cs std add cld xor int3 stos icebp and mov mov dec cmp into decb int dec (bad) lret sub mov push jmp insl jmp add outsb xchg ljmp inc sti icebp pop jnp cli pop jp clc mov jae loop sarl mov out subb fdivrs std stc jb fcmovnbe mov js push pop xchg out or mov or mov out or adc lret outsb inc push mov push pminsw xchg out mov repnz (bad) je out xor out out or xchg jge out jmp lds into xchg cmpsb jp mov ficoml adc (bad) movsb pop mov mov jp mov out scas lcall push dec jbe mov insl es mov call aas loopne mov lods push out mov adc lock out pop iret jns imul mov pop pop mov fisubl cmpsb push adc jo in out outsl adc fsubrs in push insl leave jmp fbld push mov out mov in in fildll ljmp xchg cli and out stc sarl clc je,pt out push (bad) xchg punpckhbw popf push sbb add lcall test xchg jb and dec sbb das cmpsl out sbb imul jmp out sarb lods mov cmp mov jmp out push (bad) jne add adc out xchg ljmp out (bad) push push lcall iret xchg loop arpl lock jl std cli jle jge adc mov leave movsl out pop and outsb mov pop inc xor push pusha sub int3 loop loope jo pushl lds out nop adc scas out mov cmp out aaa lret outsb ret mov loope lcall in sub insl or pop mov into jl push jmp lea out or les pushf daa sub stos or sub stos pop sub push dec xor movsb mov out xor rorb dec add sbb ljmp ss out addr16 clc aad add add movsb out lret push fwait in push outsb mov in jne hlt (bad) icebp js (bad) fimul jmp scas or decb ret xchg fucomi adc xchg mov sti adc push call push (bad) and out xchg inc mov mov in cs fbstp xchg mov lock mov xor xor out mov inc sarb fmul fnop mov in rcrl push iret add ljmp pop popf pop jnp ljmp mov stc int3 jae repnz add es push mov pop push into lea or or mov pop cltd out or (bad) out cmp lcall cld push or aaa sbb sub sub flds mov loopne pop out xor xchg pop ja aaa pop lods fldcw pop (bad) movsb fdivs std aad add in out adc not push out ljmp popa jg shl xchg pop out jo loope jb pop cli push jnp sti imul jp cmc out jbe hlt push out jne repz out add test add push push xchg mov jns imul ljmp adc mov pop out lods xchg inc sub movsl xor out cmp bound out cli mov inc cwtl mov out out sbb push cmp iret popa dec ja push push xchg sti in cld mov fcmovne scas dec jg push dec out or sti push (bad) je fsubs loope cld stos in in insl mov dec push pop std in out or (bad) out orl iret dec pushf pop sbb fwait sbb addr16 and cmpsb out (bad) add fisttp dec jae lods dec out stos leave and fmuls xchg addr16 jecxz mov outsl outsb shrb loopne pop cmp and nop or shrb or cltd push pop sbb push dec xchg out adc adc mov pop lret movsb call ss (bad) mov xor les inc es fist out push push mov clc fdivrl addr16 mov into push xchg repz out sub outsb jno add nop (bad) pop in add mov xchg into adc xchg loopne aas add sarb out pop (bad) pop sbb fisubrl jmp imul loop repnz jecxz jno add call jle cld out (bad) jge sti lret or and mov iret lcall stos decb lods sbb sti in add out mov sub xor jbe fwait out jg clts nop scas or push inc lcall sbb mov out js push test stos loopne hlt cmpsl dec sub stc test rclb cmpsb inc and xor push and into cmp sbb cmp pop inc ss lds pop push ret hlt inc sub sahf inc xchg in fs popf loop dec push lahf (bad) (bad) jecxz std mov jge pop jno adc mov and out scas cmp nop (bad) adc sarb sbb lock insl das out mov testb dec inc arpl (bad) lock sbb inc xchg jg out fisttpll das mov push aaa clc test pop and popa cs out scas inc sub cmpsb inc mov cmp dec data16 dec dec sbb dec dec sbb mov out pop mov das pop push fnstenv out push out or jo out in or in dec push (bad) jmp jmp mov sbb mov stc push out fdiv push jns or xor add fild mov pop out sbb (bad) and stos in sub inc test mov ss mov xor xor imul les ret (bad) jl xor nop out push (bad) aam jne in bound out (bad) jo lock mov push out addr16 out out jne hlt and out icebp add orl orl (bad) push in mov mov icebp and scas insl das sbb divl enter loopne dec cs lods subl and test pop xor insb mov and cli aam shrb add mov ror push dec pop pop lret cmovnp ljmp pop mov (bad) shlb in in (bad) jo in in insl stc in stos push jg in inc clc movsb js mul jae adc es je jg cs std mov jp test fbstp cwtl xor push imul ret push (bad) loop popa stos (bad) fldcw ljmp popa out cltd jp cmc xchg jbe jg cld test add in mov hlt push mov or pop int aaa adc push ss xchg mov js pop pushf jmp jge push xchg lods sbb movsl out and shll mov loopne das inc rclb stos mov and out scas jb sbb jmp or out popf mov insl cmp out jmp (bad) xor mov xor ljmp dec mov int dec cmpsl lret pop js stc into push out int3 cmp xchg fisttpll daa fistl pop dec fdivr pop cltd push leave push sub fcomps fldz insb pop dec aam push pushf (bad) into pop in out mov popf jg out xchg stos js mov test aaa dec movl loope (bad) clc ficompl push or out int3 imul in gs push shrb jbe out and sarl shlb imul ljmp mov icebp loop arpl xchg in gs pop movsl out fbstp lds rcr mov mov in repnz add pop jno sti push jle stos xchg xchg cmp push daa add push sbb out sbbl cmp data16 out test loop rclb xor lahf js test mov in mov setle loop lcall and out mov subb pop lods push sub xor push pop movsb loopne add jmp (bad) fsubp call loope fsubr lods xchg jmp shr push fcomi sub sahf cmovl lods jp ja add imull test mov xor xor stc mov mov mov (bad) pop inc cmp mov sbb cld mov rolb loopne (bad) fsub ljmp dec mov imul push gs outsl adc and mov andb movsl mov data16 into lock (bad) mov mov cmp (bad) out dec loope orb cmp out and jge push rcl sub shrl push in bound out mov inc lock adc cmpb int3 out (bad) out lea std cli jge adc (bad) mov add insl add add bound fcomps popf js push in sub in gs lods aad in cmp dec stos xor sub out mov les push pop mov (bad) out out insb ffreep jo in mov pushf push stc cmpb clc loope mov jmp fisttpll fildll pop testl cmpsb mov xchg xchg and lcall enter fldcw imul jp jecxz jbe hlt out mov mov push jae (bad) sub and out adc rcr gs es out adc shll loope popa out jl fistp push daa add xlat sub movsl add and mov mov adc out cli rorb jno add divb (bad) idivl push repnz fld fsubrp jae push ljmp pop sbb out inc and mov clc (bad) lods into pop dec jne mov outsb out adc loopne mov daa insb pop sub test out and stos jl sti es and mov jns clc add inc aam jle insb iret scas pusha out adc push pop fiadd out in dec pop xor push push xchg fsubs loope imul das xchg or xchg pop out xchg xchg inc out mov test fisttpl out paddusb cwtl lcall out cmp push fbld jecxz (bad) test test insb je mov push pop sub test fadds adc lods adc iret mov xchg movsb scas lret xchg pop and xor mov push mov dec ret and jp lods jb btr (bad) iret adc mov push out pop sahf scas xchg sub cmp sbb ret mov test ljmp mov pop frstor insb push jecxz out fcmovbe pop jmp ljmp push rorb sbb jmp sbb sbbb sbb xchg daa pop pushf lahf out sub jno loope jne out mov xchg stos leave sub adc std mov dec out aam popa pop (bad) xlat inc push out data16 sbb pop rcrb ljmp out adc add xor add out rorb mov xor inc cmc ret sbb in sub lds (bad) (bad) roll or push (bad) aam push push lret adc xchg push mov roll pop sahf xlat pushf in fdivr sbb arpl ljmp popa cltd out call bound out or popa sbb mov outsl sbb adc sbb loop cmp popf cld sahf js stc lds add sub out mov mov decb pop fwait iret xchg in in insb stos jmp jge push cld sarl inc jnp sar jl sbb stos nopl outsl stos pop cmp shll (bad) jg push and aas pop out fiadd dec fimull lcall out addr16 mov icebp push out inc clc ss idiv ja loopne inc js push jae inc ljmp jne adc (bad) stos add mov sahf mov or imul add add cmpl mov xor xor loop mov out cmp adc pushf mov icebp addr16 pop jmp in gs in (bad) out jo mov lock xchg (bad) push in sbb jmp out pushf out aam pop loope outsb xor (bad) cmc mov pmaxsw lea out pop lcall adc xchg clc and mov scas mov sub stos mov cmpsb fnstcw dec sub mov (bad) pop cmp xor mov (bad) pop xchg fsts out push in outsl in out mov lea add jne out rcrl push and jb mov out or or shlb adc (bad) (bad) pop inc movsb movb aad cld pusha sbb out mov jmp pop imul in hlt test mov out adc mov fnstenv inc ret in push push shrb push or out push popa and std (bad) pop ja not js inc out pop cmc or icebp enter jo sbbb xlat lahf mov orl adc je jb iret aas out xor xor out adc in out test inc out ror jae push int pop out adc add in shrb aad lds add mov dec out sub and es cmpsw cmpsb sbb jle popf imul icebp (bad) fistpll and add cld adc stc iret inc jp clc lock negl loopne idivb loopne ljmp loopne notb (bad) notl incb jne cmp insl mov stos cmp into mov mov movsb sar out cld inc dec ret lock pop int3 mov jp call and adc sbb aam sahf push test outsb push rcr adc shl push fcmovnu jnp int out mov push gs in jb icebp fcomip jno add cmp lock std (bad) in lds out jae dec add pop aas lahf dec fist popa push loope fldenv in test cld out lret stc ljmp mov cmpsb orl lcall jmp out add mov int3 mov fisttpll outsb mov ljmp loopne pop out stos sbb pop stos and jo mov ficom (bad) fnstsw bound out mov jl sub pop push call lock xorl mov xor cmp shrl in mov fsubrl xor mov xor out adc lcall or fisttpl lret out loopne roll (bad) (bad) ret sti inc fnop pop (bad) push les mov pop shrl push xchg aam push adc inc cld outsb in (bad) bound lock pop sub addr16 data16 push xlat in out bound das jno add out nop push (bad) (bad) mov push out rcl xchg loop jo fcomps sbbb (bad) xchg lods (bad) out inc jg std aam hlt cld out sub lea das sbb fsubs (bad) scas and cmp mov add fucomip fsubrl push xchg sub mov enter mov pop mov lahf rolb iret nopl loop out aam daa stc hlt out mov imull (bad) xor push imul mull decl es (bad) pop cld xchg cmp inc xchg xor shrl xchg cmp mov out inc ffree or das les ret pop iret mov rcl out cmp das mov out and sub and push pop into testb (bad) pop (bad) push loopne enter (bad) (bad) xor mov mov push (bad) out jb pminub nop xor das mov lods int3 sub stos mov shr mov aaa xor mov xor dec jbe cmp lahf in out push push and xchg jge std out popf jnp cli and aas sti es data16 fwait mov ds add stos bswap (bad) cmp jge dec mov sbb cltd out jl xchg xor fcomip mov ja imul enter outsl popf sbb pop inc sti (bad) insl out rolb inc adc out ljmp gs sub in mov (bad) fs mov pop ret jp cmp out gs cmc or test push dec out and mov into out inc aam out outsb ficom cmp xor arpl out inc ror jb rcrb dec iret leave lret inc push inc shrl ret loopne iret enter inc rorb lret iret dec into ret dec ror mov ret rolb les push out into dec dec fcmovnu fcomps rcr out out loope push adc subl ljmp mov out sarl push dec pop mov sub out popl out pop nop xlat or out int ljmp add mov loopne mov mov jg pop loopne das (bad) push cli xchg enter cld sub out (bad) inc in sbb jmp outsl (bad) mov or lret inc in gs push arpl loop jbe repz push out (bad) jne cmc add and imul mov inc push rcll dec shr or out push js hlt call jb mov inc subl aas sbb pop jmp out mov xor mov aas faddp mov mov cltd insl (bad) fldl2e out fisubrl xor pop stos out ja aaa and mov cmpsb xor (bad) pop loope imul (bad) data16 ljmp call in pop push imul aas ljmp or out mov ss xchg mov lock cmpsl sub lea fiadd (bad) jmp out out jg rolb loopne sbb pop fwait mov xor inc mov in xor lret fisttp stos fsub pop xchg fnstenv mov and jle fsub sub outsb adc xchg out gs in arpl (bad) jecxz mov push icebp mov push pop add jl std in cmp jecxz pop sub mov add pop out sarb jo insl fisub pop fistp stos jae ds imull in mov cmc jg push xor xor movsb iret (bad) repz stos fidivr dec lock imul xlat in or pop popa out (bad) lock sbb sbb pop insl loop xchg imul cmpsb adc sbb popf mov sbb cmpsb test insl divb int3 inc loope lret adc pop addr16 adc jecxz jbe cmc aas pop jg das out ficompl (bad) lods loope test out cmp mov xchg out jmp addr16 call shr jns or cmpsl hlt push xor fcoms out ja pop shr xchg adc (bad) gs mov or mov or xchg push aam pusha add adc xchg ret out xchg mov mov out mov push sbb lods gs enter loope popa stos xor pop int3 inc jle std pop xchg cmp sub shll push scas arpl loop mov out adc xchg ljmp mov scas cmpsb pop out out dec inc push rcr dec lahf iret out pop ja xor mov jp sub add add test add cs mov int3 ljmp xor fnstsw mov jecxz out ja out insb pushf xor xor mov mov dec out xor (bad) mov mov dec test out fimull xor outsb push out outsl out sbb leave addr16 sub xchg in inc push fdivrs push cmp out into data16 and out pop pop jb icebp jnp (bad) cli push jl lcall xchg push clc xchg iret jbe xchg push adc xchg loopne push mov loop jno add and pop xor cmp jecxz ret out jbe daa dec cmp add xchg adc mov popf push or loop lock call mov repz out push subb add out nop int xlat mov lahf push push xor (bad) sbb sub stos pop and mov aaa and mov fmul out cli sub sbb jmp in int3 out lods dec sub rcr stos jecxz (bad) out cmp mov mov add xorl aas test dec out inc ja push cmp cmp mov (bad) mov lret mov mov xor inc pop outsb fadds ret jne xor xchg out popa fwait pop out push sub stos jb sub test push es cmpsb ljmp pop mov xor mov out mov xor fdivs mov (bad) out xor out mov pop aaa fisubl xchg push mov xor loopne xchg ljmp out xchg (bad) rcll xchg nop pop add xchg lahf push cmp negb sti push cld cwtl in xlat push in popf rcrb fwait ret fistpl pop lcall out shll fildll sub push lods aad aam fldcw cmpsb pop data16 fsubrl cs mov lcall jmp sbb xchg test insl es cmpsb mov das ret xor scas loope data16 out sub sbb lcall ljmp test adc daa sbb cltd insl sbb sbb pop and ljmp sub lahf test xchg cmpsb xchg push cmp mov es lcall adc xchg fbld loope sti sbb fucomi xor and aaa (bad) mov cmp mov xchg mov xor pop sbb mov enter adc pop mov loope mov loope sti sbb fstps (bad) lcall rcl repnz pop xchg fdiv sete ficom sbb sahf clc push sbb aad xchg pushf insl sbb sbb (bad) les mov sahf (bad) push fwait shrl gs outsl into mov out test es aam xchg mov sub cs stos fildll adc pop sub cmpsl arpl inc data16 fsubrl sbb cmc daa loopne cmpsl shrl in fld aaa lcall out mov xor out mov fidivr sbb (bad) mov ss aad xchg es xor mov xlat lcall mov pop (bad) push inc pop ret ljmp in fildll push ret push rcl push into call mov push enter lds ret inc rol push inc fcom pop or mov fistp ret sbb cmpsb adc shlb loopne iret push into loop push int cltd jb out addr16 cmc pop cbtw xor mov xor mov ds out cmp pop sbb (bad) out pop mov in loope xchg cmp insl lcall es ss sarb pop mov mov fwait mov out xchg mov mov aaa xchg pop shr pop mov mov inc jb enter lcallw inc sbb xlat inc rcl xchg fmuls lret cwtl dec sbb sahf mov fwait lret sbb mov out inc sbb xchg inc xchg jle ljmp lds xchg jb inc adc lcall rcl ror out pop into xchg inc scas (bad) jmp in (bad) imul ret xchg rcll dec xchg push in pop pop rclb pop loope xchg pop fwait loopne pusha pop push lcall (bad) out pop adc xchg stc push jae repnz shl xchg imul pusha dec mov insl pop in fisubr pop out adc fstpl cwtl pop popf lret push pop push inc mov pop pop fsts push adc neg xchg pusha push fnstsw jge std pop cld (bad) pop cwtl out fsts push mov push (bad) pop xchg xlat sbb outsb push (bad) pop xchg mov push xchg pop aad push adc push push not adc pop xchg (bad) flds xchg (bad) ljmp sahf test in xchg mov adc pop fld lcall sbb xchg mov pop inc mov loop mov mov adc xchg fs pop ljmp psubsw out inc out push push out pop ljmp icebp fistpll (bad) sbb xchg rcrb loopne out fdivr fwait jge cld out pop js stc loopne fcomip out push jae repz jno add fmuls (bad) sbb or std aam rorb sbb push out adc (bad) rclb loopne pop sbb or lahf fiadd pushf xchg rcrl (bad) (bad) out adc push lcall (bad) xchg xchg (bad) pusha mov sbb sbb ficom push sbb (bad) fsubs sbb push or sub fistpl incb adc insb cmpsb xchg out and mov push mov out sbb jecxz xor pop push cmpsb adc sbb lcall inc es push cmp sbb pop xor mov inc fiadd iret sbb ret outsl in lock push inc pop adc fimull lret push push push push pop push mov int xchg dec aad inc dec push lret rclb lret pop shr push fcmovnbe pop pop mov ficomp fcmovb mov xlat and lcall lock inc loopne adc ror push pop push mov cmpsb pop out call adc iret in outsl xchg pop push jo in sbb shr push jmp push addr16 rclb jns clc in jp (bad) iret fbstp notl xlat push sbb aam push jbe hlt and (bad) out (bad) jb icebp push jnp cli sub sarl stc pop xchg pop ljmp sub movsb fist movsb push fbld cmpsb fbld loopne mov setne mov xor mov arpl (bad) fdivrl pop mov inc imul out inc xchg (bad) sbb (bad) inc pop rcll (bad) rorb (bad) loopne pusha adc push sub shrb loopne fist jb cmpsb and adc fstl (bad) ficompl out sbb cltd jo aad xlat outsl adc xchg outsb out fldcw lcall push ljmp insl push in aam adc ljmp push cli (bad) (bad) jnp stc leave clc out fdivs sbb (bad) jg jg jmp jecxz cld fidivr pop or mov fmull fwait xchg pushf push cmp out loopne adc xchg or out push push push test add (bad) adc fcomps push push sbb lcall adc add pop cli cwtl xchg sub push out movsl sahf (bad) movsb push and xlat push fistp xor xchg xor mov cli gs mov cmp fidivl divb shrl pop iret sbb ljmp fs fmul sbb loopne pusha push insl sbb pop pop fucomip pop xchg frstor or (bad) aam (bad) xchg push sbb loope outsb jg in push insl xchg loopne pusha ljmp pop sti pop jge cld ljmp push iret and pushf fistp mov or dec add xchg out push push (bad) pop xorps or xchg sbb aas cltd pop sbb cwtl ljmp in pop loopne fcompl pop sbb jle push cmpsl in daa jg cmpsb adc push mov stos out sub out sbb push mov ss mov push xor fidivl pop pop xor lds inc outsb ret mov push ror jo ret inc es popf into push pop lahf xlat xchg out push push fcoms sbb sbb push sbb loopne pop xchg out in cwtl outsl pop lock (bad) insl adc push inc loope dec daa fnstenv mov cld dec insl in xchg out push lcall cwtl jno add jb std pusha jle cld push out jge sti push jnp cli fwait jle in aad mov or xlat fisttp cwtl or sbb or mov pop incb icebp rcl out idivb cld fnstcw stc in jp pop clc aam push div ja notb ljmp jns stc (bad) ret iret xchg notl pop xchg pop push push adc enter pop ficompl std pushf outsb sbb cltd (bad) sbb xchg sub (bad) adc jg insb jge push adc xchg daa adc (bad) sbb fimull es push cmpsb fscale pop in push xchg xlat hlt inc sahf insl push pop adc adc sbb adc push clc pop adc adc push in xchg and sbb pop sbb divb sbb cltd out sub sbb mov cwtl and mov pushf cs out cltd sub adc std shr pushf lods pop sub sub stos pop cmp mov iret aad push mov (bad) xor push mov inc sbb push dec jmp fcmove push dec xlat lret sbb std dec push in inc mov cs (bad) sbb lahf pop popf fstps xchg jle fcoms clc pop loop push cmp pop loope pop (bad) (bad) ljmp pop call outsb sarw pop gs stos fsubp cmpsb pop data16 aad (bad) hlt push jne cmc out insl repnz pop rcr fnop fnstsw pop iret loopne ljmp sar aad (bad) pop gs negl jne jecxz jbe icebp out roll push jno out call shrl adc sbb sbb mov adc out adc push outsb shrl ds pop dec imul pop inc (bad) je insl jno pusha mov in in aam jl pop lahf jmp imul jg popf pop sbb sahf stos out fldcw lods pop cmp mov mov lahf inc adc (bad) dec adc subl fstpt dec push loope push jmp push out pop pop adc subl xchg out push out call and inc rol dec inc lret out mov imul mov and xor (bad) (bad) aad xchg in test out inc repnz insl ret fsubrp add adc fstpt (bad) ja pop ljmp jg pop ljmp mov bound out jb adc nop je and aam scas scas mov sub int rorb sub pop cmp fsin addr16 mov out add ret pop std pushf sarb fisttpl push cs scas xchg out loope insb cwtl ljmp jl sti xor mov test cltd (bad) sub movsb loop ss xchg iret outsb xor insb inc outsb std out jmp cltd aam jmp das loop sbb out cmp loopne outsb popw out test sub enter out pop mov xchg push lcall rcr pop call pop imul test adc cs jae (bad) repnz cld adc aam push pop stos aad iretw jmp jae add xchg test and (bad) and adc out out jnp loopne adc jno mov and xor scas bound sbb mov sub loopne popa out fiadd pop xchg sub xor (bad) icebp loop iret fwait pop das sbb jp pop leave pop out push dec imul (bad) pop adc xchg mull or mov xor std (bad) push jl sbb std mov icebp out loop je sbb out es pop popf jl sti shl decb aas stos out out sub or repz jg jecxz lods pop pop outsb mov mov push out and fsubrl iret mov out mov or mov adc jp jl pop insb (bad) dec xchg pop (bad) out xchg inc adc sbb jns pop jmp (bad) sti out inc mov sbb xchg cmpsb out xor sbb out adc movsb icebp and dec movsl test out jnp fiadd push cmp mov dec jmp mov jl push shl push push loopne inc (bad) out or mov icebp pop rcrb iret or rclb notl in arpl out (bad) out or push jg push adc std out sbb cmpsl mov mov xor (bad) icebp jg rcl in popf in test pushf out lret stos cmp lods lods loope cmp mov jns fidivrl imul in adc mov out lds dec sub in movsb pop ljmp movups loop loopne pop lock mov addr16 cs incb sbb jne xchg (bad) out out iret stc mov inc test cmp loop inc push arpl cld out inc and sbb out add out lock imul es lahf xor inc out imul adcl aad xchg repnz test adc xchg jg adc mov dec xchg cmpsb fidiv push call xchg mov out fbld stos bound mov fucomi out loopne jno add out (bad) lods setne std out push cmp outsl dec movsl into lcall sbb in xchg shl pop mov xor lock popa mov loope sahf scas outsb int iret pop xor fimul out es es mov cs add imul incb popf or out rcll ljmp mov test out inc inc lahf fiaddl xchg or mov or adc daa outsb cmpsl dec cmp (bad) xchg lret lahf into (bad) jo idivb js cltd shr jmp mov fs sub stos (bad) xor mov xor out add cmp mov lret xchg pop adc dec adc jg les jmp lahf out icebp add mov xchg scas push daa mov out aad gs lods pop icebp adc jmp out inc dec shlb push push rcll sub in imul repnz push ljmp (bad) cmc or cmp and mov sub (bad) iret ret fdivp outsl insl inc sbb sub clc mov xchg fsubr pop xchg mov pop adc mov sub lods out test ret pop fs sub aam data16 cmc out sbb (bad) xchg nop loope das fs and shll in mov rorb push cltd data16 mov mov clc out daa push mov push andl dec imul push out or adc movsl out (bad) xor mov inc cmp out fiadd in aam pusha sbb imul and fdiv cmp fiaddl out fist scas cs les push push loop push gs (bad) and loope out in rcrb iret loope push ljmp fsub xchg jg (bad) out dec nop dec and jnp in out xor jge or mov mov mov xor shrl pop jmp out (bad) mov ljmp cmp movsl out in jecxz xor mov clc aas sbb pushf fsubrs ljmp pop lahf out jo xchg (bad) iret out push out xchg jmp out lea sbb fwait pminub jmp out and pop pop in shlb in out mov pop or cmpsl daa mov and out inc sbb aaa pop imul hlt jl lock push pop rol arpl in insl fs fmulp sub cld out rep test out adc and inc out xor jecxz je add out add or mov push ds out mov inc and out push adc and jmp out nop call decb jb and cli out and xorl mov xor push imul in sbb stc and out add jbe aam or outsb xchg std cli cmpsb in out xor lods ds int3 lea and pop out outsb pop call insb out and add stc jno out mov fadds jmp pop shl jo sub mov lcall pushf notb and in vmovaps daa and mov cs data16 (bad) sahf in jo and lock out xor mov mov (bad) (bad) repnz mov adc in data16 loopne repnz fs out mov adc mov push xor repz hlt xchg into xchg cmpxchg dec cmp insl out call out pop add stc mov mov pusha push xchg das mov loope fild shlb add (bad) dec pop mov sbb pop rcrl (bad) stos popf jae scas test loope mov loop je add inc xchg or add out cltd dec data16 mov cmp jmp insl roll (bad) decb loope int adc clc out stos xor (bad) sbb push popa lahf fbld dec loope cmc pop mov xchg jmp push xchg mov cmp into mov sub pop cmpsl inc aaa xchg mov fcoms mov and clc jne (bad) fbstp movl and movsl dec (bad) sub das je loope mov fcomip repz test adc push shr mov xor iret inc inc out shll xchg lea pusha xlat ds jg push sub out cmp and mov cmp jo mov orl das out jecxz ds addr16 pusha out mov jmp mov out stc jecxz pop xor arpl mov cld adc xchg aaa and out scas data16 lods pop cmp cmp mov out add out imul jns out push sbb lods cld sub push dec push out pop mov jmp jnp in insb aas out in mov jp jg push jns hlt dec cmp push stos fild sub mov xchg mov (bad) in out push out cmp enter (bad) fldenv sbb repnz popa add out adc inc insb ljmp pop xchg dec mov inc iret aam pcmpeqd aam out ss test mov xor leave les es (bad) dec and mov cmp pop push (bad) out loopne add out rolb fbld out push mov pop push xchg mov icebp data16 ja stos mov out fisttp (bad) lahf jg or scas lods fisttp fdivs in dec or jae repnz shlb in dec dec out cltd loope insb fucomi fisubr add ja pop sbb pushf (bad) mov add sub fdivrl pop jp arpl lcall adc adc xchg jns out mov std dec (bad) fildll pop in addr16 out push mov loope ds pop out sbb test sub cmpsl lahf cmp add dec xor outsb inc lock (bad) fucomip jecxz popa or out arpl dec out jnp or cltd out cld out sub (bad) lock cmp data16 (bad) repnz adcl xchg sub xor sbb dec pop sub sarb out jb lods inc inc shr (bad) push jp cmp (bad) sti out mov push push pop out push out in jbe icebp stos jb pop push xchg add scas xchg out xor rorl adc inc (bad) loopne out push (bad) out mov ja aam clc dec out pop in enter leave stos out sahf sub and mov popf xor xchg jg fsubl mov or fisttpll or pop adc (bad) mov inc out xchg lods pushf dec (bad) lret shrl adc inc push cmp pop pop sub jo in push sub arpl push xchg jmp jnp lock pop jns stc ja,pt pop cs cmp pop addr16 negb xchg and aas mov leave (bad) out in inc addr16 out sub cmp loop sti mov inc stos pusha les push jg inc lahf mov in je jb pop mov inc insb ret ljmp xor and (bad) je xchg ljmp out lock jno adc popw mov loopne popa or (bad) out jb decb test dec jg jae adc mov in sub mov sub outsb es sub push lods pop loop imul (bad) mov out fisttpl jmp lods fldcw lret nopl fcmovbe push xchg fucomip out pop (bad) jmp out in jbe pop cs lret dec mov in ss out fist lock or loopne leave out imull mov sbb add push pusha add mov (bad) lcall and add push adc xor ret add cmp jns lret xchg out mov xor mov inc pop out ret shll in inc jo fucomip loopne pop (bad) cmp test scas ja loopne ljmp adc icebp mov repz pop xor dec adc shrb ljmp in and push lods inc sub fcomip pushf (bad) aam and jg insb (bad) lcall fldcw popf out or in out push mov cwtl push call sarb sbb out mov dec mov push sub scas in out mov out loopne jbe fcomps iret fisttp fmul ja mov mov insl or jg out popa mov and pop pop jmp xchg sbb dec xor mov test popf push out bound add dec mov fs mov out xlat insb out addr16 and js sbb cmc dec out push cmpsl out lods fsubs fucomp push in inc xchg add jle fild xchg out icebp mov rorb repz loopne or cs cmpsb out js pusha loop mov out mov jnp adc les add add lods adc inc hlt add push out clc std sub out xor cmpsb fcoml cmp movsl popa pushf xor mov negb inc daa iret popf sub lock sub jle cmp or (bad) aad aaa loop and icebp in add lcall sbb add scas out aam sub popa daa test out orl out test push or das xchg (bad) icebp pop (bad) dec js sub call sbb fcmovne out int3 inc jns push dec scas mov mov ljmp (bad) mov out xor xor xor lret pop out je mov imul shrb out jb cmpsl imul fsubs sub sub sarl out cmc cmp mov mov jbe in bound aaa repnz and and dec hlt sbb dec add or test in out cmp cmpb nop ret stos sub mov shr inc pop push dec sub out pop xchg inc (bad) sti bound stc imul hlt mov mov jp mov xchg dec out push insb and dec shl (bad) xchg fldl2t push mov lret ljmp fimul (bad) je data16 cmp in xor push mov pusha lods and out push movsb (bad) or in inc adc clc jnp (bad) enter sub mov lods mov adc xchg data16 mov pop mov pop xchg fsubrs mov ret lea push push rorl push xchg adc stos das mov adc (bad) pop jecxz cmpsb outsl roll cwtl push xchg out fstps mov outsb out sbb dec push push out fimul (bad) xor add stos arpl xlat jnp int fwait icebp mov pop imul sahf sti sbb and in out pop cli sarb cmpsb aaa mov out popf fisub and push insl test cmp dec out repnz jmp push out arpl int3 mov xor mov into or sbb xchg xchg mov and (bad) imul aaa into cmc insl (bad) cli out mov fadds and outsb mov rolb hlt iret popl sahf jb jnp enter pop pop or xchg lods push stos pop in shr adc inc xlat pushf dec push (bad) and stos ljmp sbb in ficomp push mov out out sbb test fcmovnu fsubl sub ljmp mov sub out loope mov pop es mov sub out fnop ljmp imul inc stc outsb in into out cmpsb xor push shr xchg dec fs fmull add scas mov pop mov loope mov push cltd adc mov pop (bad) dec das fwait cmp sbb fsts xchg sub jns sub add mov (bad) xchg adc ja stos ret in jne jge or jnp in push aad or ljmp pop daa sub out insl jecxz cltd mov fistpl ret loop sub xor pop dec imul cmp rolb daa ret mov push mov pop shrl xor sahf push fisttp and (bad) jge clc adcl in push adc dec xchg out cmpsb mov or gs mov in out mov popa imul mov push pop out or int cmp outsb out and hlt jne test test (bad) xchg lahf enter lock in es sti leave test daa push push lods cmp xor xchg cmp add adc clc xchg cmp sbb adc out js lcall out dec into jns inc (bad) and pop sub or mov cmc jae hlt cs into dec fsubr cmp cmp push add xchg push in cmp jae xor cmc xor pop out ja into xlat out jle add xor sbb mov out mov sub jmp mov push out dec dec xor cmp dec (bad) ss push mov pop adc pop pop lock pushw out insb jmp inc std imulb iret jno sub xchg pusha in (bad) out bound idiv loop aam out mov dec fwait adc test mov push pop mov pushf or scas ljmp out aas push pop add fmul inc out notb xchg aam aas test adc ljmp (bad) jno arpl ljmp pop cmp adc xor jg repnz das cmp daa sub out mov mov push out pop into jg sub rorl out or scas mov add jmp test out loop mov imul out nop mov ljmp jb mov cmc sub pop mov or outsb ret lods add pop test sub fsubr cmpsl enter fldpi scas mov pop mov dec adc cmp arpl call out dec push cld out jne cltd sub xor cmp test push sub fsubs pop ret fucomip mov movsb xchg sub mov and out test mov insl enter lock adc cmc in inc lret idivb inc insb jnp loopne and out jle daa mov out mov es sub pop xchg jecxz ljmp and sub ljmp lret and xchg sbb shlb mov mov ffree popa jo jle inc scas rcrl out push (bad) out mov je test cmpsb add ret lods xchg bound leave out jbe pop cwtl xchg shll in push xorps add mov ljmp or cmp in jae jl jmp sbb cmc scas inc shrl pop call insb mov mov mov outsb mov test call decb leave pop mov mull mov xchg push lods dec out cmp inc in push jae (bad) mov stc mov lret jg jne push out xabort js iret xor out lds out pusha xchg push lcall (bad) jg add inc pop jmp decb dec pusha or dec shr outsl xorl out mov xchg mov mov or jbe push fisttp push in inc test adc pop push (bad) mov mov out jecxz cmp lods out mov pop stos inc out aad mov fisubr out bound or dec mov sti mov jns out int3 sbb mov cmp jmp lods pop pop lahf inc (bad) sbb outsb adc imul ss out xchg (bad) jnp rorl jns into (bad) hlt out lret dec in pop (bad) pop and mov out sbb push fist fs or fwait test notl dec mov out repnz inc movsl xchg out push inc movsb and out jae loope sub fcoml jne in out fwait sahf dec arpl fucomip aaa loopne out add jns cmc aas jbe out sahf pop xor iret or adc lret jae inc out cmpsb lret pusha add stos loope pop inc or push jne mov out mov pushf or jb aad out rorl mov in push xchg (bad) and imul push fsubrs popa test pop sub pop scas mov insb dec mov cmp mov out mov dec in mov mov fs (bad) out cmp push out hlt push stos jp jne mov adc into dec aaa lods push pusha sub gs call mov out mov fisubl out out fs out (bad) and aaa mov cmp (bad) push cld repnz jo jns call and scas outsl (bad) out sub pusha popa cltd stc hlt sub in jno adc adc or cmp enter xchg push pop pop fsubr jbe,pn iret imul jnp jne out leave and lods xor aad sahf (bad) out mov push dec add aas fsubr ds sub mov adc jecxz lds lods mov imull clc mov es sbb push mov xacquire xor and jbe fistpll pushf lods mov push out movsl push fsub jne or fdivrs ljmp out lcall sbb out xchg loop pop loop aad (bad) stos jge sub fcoms dec push into sbb cmp ja pop out arpl pushf xchg fistp iret cmp ljmp pop (bad) sub cmp pop jle and cmp sub test add (bad) adc loop jo fwait mov inc add icebp popa or lahf out test cmp sub rcll push or insb cmp icebp sbb outsl movl out popf mov test (bad) push (bad) xlat lcall aas add lock mov push les (bad) lds pop sbb out mov mov xor push hlt clc imul (bad) and ss in fwait or out call xor out dec mov fnstcw aam mov pop pop pop popf inc xor out movsl out pop sarl out cli sub cltd inc push ss bound mov jno mov test cld mov sub sbb fs stc lds std xlat (bad) leave out sbb jle push ljmp xor push lods xchg insb pushf sub arpl jb push sbb (bad) call out outsl cmp mov out je movsb push les dec add das ljmp or dec jg cs push arpl fsubrs mov inc jb mov jg push and or pop xchg out (bad) (bad) or cmpl xchg cmp pop mov decb inc out nopl mov cmc out adc inc imul inc mov gs inc ret sbb mov adc out pop in sbb out adc shlb inc pop xchg jecxz mov push out decb dec or mov jns int pop out or xor mov loope fcompl (bad) aad je jnp mov hlt imul into or lahf mov xchg out pop jge push fcmovb mov cmpsb mov push xchg and out clc shrl out fwait lock cmpsl inc xchg es adc jo outsb imul adc daa pop vpmaxsw shrb push iret xchg (bad) out fbstp fnstsw push test mov mov test mov mov sbb (bad) pop out fstl push hlt arpl insb and loopne cmc mov add xchg jle lock xor in xlat out shlb mov pop fistpll cli inc pop fcompl int lcall shrb pushf pop sub (bad) jl in push cmp sub mulb jp rcl (bad) out push js decb xchg (bad) (bad) cmc rolb mull mov inc hlt out in jae sub or cmpsl fcmovbe inc in popf pop in cs (bad) mov in mov lods cmp out fimul or xchg cli out in sbb xchg out adcl pop push mov imul or (bad) shr xchg cmp pop insb sub or movsl out push rorb and fidiv mov gs ss sti test adc mov jle mov xchg in inc jns imul sub xchg inc imul ret mov rorl iret xor fucomip lcall jg addr16 (bad) mov pop sub mov arpl popf js jge lock jmp xor rclb gs pop adc fwait jg sti add out test into test pmullw sub mov imul (bad) sbb rcr test sbb fsubrs and lret and push inc jo push ljmp (bad) jecxz int3 ss and jo data16 sub in mov add sbb out inc dec loopne,pn fbld cmpl out adc and stos popa cmc push outsl loope out cli cmpsb mov inc insb sub test and xchg movsb in ffreep cmp pop xor push sahf sbb push dec lock jmp dec (bad) lods mov pop mov ljmp out pop and pop int3 out pop add sbb sbbl out xchg pop cld and loope pop xchg pop outsb repz cmp jno test stos xlat outsl out aad xor ret shr (bad) scas ret sti imul shr in rolb (bad) fwait or stos call ret faddl cmpsb out sbb rorb lea lock pop cwtl in lods pusha out xor fdivrs out dec iret mov lret or push mov stos popa mov out dec add repnz rcr cmp in mov movsb stc das dec pop adc push pop aam dec out push (bad) xchg add jo sbb enter loop (bad) into mov imul inc push or adc push cmp cmp out jmp mov xor sub cltd push dec dec sbb sub enter idivl xchg add out lahf dec sbb mov xchg sbb (bad) hlt pop mov pop mov mov ljmp fnstsw pop mov imull out outsb push xorb lods ds int enter rclb xor jne sub lea inc fs jae (bad) mov (bad) xchg fidivr enter cmp cmp push repnz out mov fwait inc push dec out aam aas insl hlt (bad) jg out sbb mov xchg cmp aaa xchg pushf (bad) in ljmp pop sbb (bad) imul xchg xor jg or addr16 push mov out or adc xor jle out sub jg out loop imulb inc push inc int out push lea or int cmp les dec cs call popa push mov fucomp jge fwait push or xchg insb cltd sub out xchg push push vxorpd aaa mov sub lcall and cmpsl repnz aaa sbb xor ljmp (bad) enter jle dec das lods push push adc mov enter xchg test (bad) mov mul das sbb xlat popa mov out clc (bad) fidivr xchg pop rcll out mov popf imul xor sbb jbe sub fs jnp lock jecxz jg pop out shll cmp out ja mov xchg (bad) (bad) jo pop shrb or aad js xchg insl mov inc xor (bad) out jp (bad) div les icebp out nop popf xor mov lods push call jo mov (bad) out out add out add imul jmp or fistl and pop xor sti addr16 out out xchg mov xchg ret push js in out mov adc and ja jns fwait je dec icebp or mov testb pop push out enter xchg push fbld pop push inc or outsl test movb jge mov jbe rcrl testl lock mov push jle rcr into push int3 out mov aaa dec gs sbb inc push out repnz cmc jns mov lea cmp test out imul lds repz mov imul sub (bad) mov pop cmpsl mov fidivl out push pusha xchg fucomip stc mov aas imul scas mov scas or dec cmpsl subl jp mov fisttp mov sbb push or in enter in jge or xabort test cmp incb mov test cwtl mov dec mov push push ret pop push loop sbb ljmp out mov push das jecxz fildll jne out fidivl enter out add push jle iret (bad) pop out psrlq jmp dec inc cs add or mov iret xor mov lock adcl out cltd lret mov inc mov xor out dec jge jmp aaa cmp out mov xchg jnp jo adc nop and stos pop (bad) pop pop pushf cwtl add jecxz sahf out enter xchg push pop xchg jmp add jbe out bound cmc ds mov mov fnstsw xor jge or adc sub mov (bad) out and ret out jno jae mov aas adcb cltd dec out stc in out fsubl pop arpl in jl push stos ret test inc and or dec xchg jmp rclb mov cmpsl or bound int mov or push push jmp (bad) aas into cmp inc cwtl out xor sub je out (bad) test leave pop fldz jmp lea pop dec in xchg test in sbb jns loope lea addr16 fs lods push insb scas ljmp xchg and mov fbld in lock pushf mov out add lea ret fucomi and sbb or and xchg cs (bad) or nop fildll xor lods test js xchg mov pop clc imul jl lahf add pop mov aas cmp loop mov and out data16 xchg pop pop in adc stc addr16 cmc ss (bad) push inc lahf jge cmp mov sub jbe into std fimull mov mov mov pop xchg loopne in sub insl out fadds fbld loopne jno pop xorps xlat out dec test mov out movsl cmp data16 mov into ss cmp inc lods pop dec sarb xchg dec sub cwtl stos dec repnz ss fstpt and out adc sahf sbb fiaddl sbb (bad) out xor adc pop repz out sub out pop jb repz adc sbb cmp test jmp mov out sbb aas out outsb xchg xor loope jnp out (bad) mov daa gs (bad) dec lret and pushf addr16 out adc push movsb xchg cld sub xor mov xchg mov inc mov frstor jle xchg scas xor mov push lods insb out sbb (bad) ss rolb mov shr xchg fidivr test out mov inc in das aas xchg mov pushf fsubrp mov xor adc mov xor and push call add pusha lcall lret stos mov push xor out push mov pop and out add and lods out loope push add sub or aas pop fcomps imull imul test xchg and lret fdiv push data16 mov (bad) xlat cmp jg or add cmp mov xchg fistl sub shl (bad) mov outsb push imul movsb cmp and iret jae and jb push out jle icebp and fucomp and test out aas push lahf movsb (bad) scas pusha mov mov into out mov mov (bad) cmpsl mov or movsb cmpl in push and jb (bad) fcmovb push lds out pop cmp in les loopne pop iret jmp daa out popa addr16 je mov out call add movsb data16 fistp popf ret push pushf add xor call out pop stos mov leave out arpl sbbl movsl (bad) jnp or lock in ljmp xor or sar fs xlat lret jmp pusha cmpsl nopl testb leave mov push xchg xchg mov into clc push out les add loopne inc adc pop out aaa les pop jg xlat and push or (bad) rorb and in mov or aam push dec sub shr lret out mov out sar imull sbb cs enter je lret jmp out call lods or out sti mov xchg fucom sbb xchg ret out mov movsb sti call dec push inc mov out sarb and ret in pop push xlat pushf out std xor cmp out stos mov inc and mov mov push fmul mov je lods inc xchg pop out and psubsw inc repz dec mov push shr xchg test cli out xchg push orb insb aas loop jo outsl into add xchg adc jne stc aad out or push (bad) xor mov gs add mov sbb (bad) or pop dec out call cld cmpsb adc mov sub lods or mov xor pusha outsb jo stos jp lods cmpsl dec loope out imul enter js addr16 popa jl inc pop or imul je fwait sti pop fildll clc leave scas out (bad) aam jne pop ljmp in mov jle test in and xchg out mov faddl mov pop mov jl sbb sbb push (bad) pop pop psubb shrb add (bad) hlt mov push xchg or lods mov gs lods in out loopne cmp out mov call rorb inc jle pop out loopne mov xor sti push cltd push (bad) jl lods inc hlt int3 out push popf imull dec scas push out in (bad) push mov out mov clc (bad) cmc inc jbe cmp cmp (bad) test adc (bad) push xchg jle enter dec out loope and ljmp lret in sbb out or subl scas dec push push mov cmp js inc pop out (bad) xor dec sbb mov out inc repz add mov and jbe sub ret sahf pop mov pop xchg mov sub dec add (bad) xor jb sbb jns outsb add jg call out inc pop dec xchg das inc jno out and or add mov jl cwtl out xor cmp das push std fwait cltd sub ret out adc es lahf (bad) data16 pop stos push insb mov loop mov sub mov je mov imul insb add or jmp adc ret push dec js out out and add rcll movsb cltd out sbb arpl mov out sbb or out jg pushf jns xor out xchg mov pop mov jl popa nop in stc movsb cmp mov ds (bad) enter in sub jl mov out cmp loopne mov jae fst out mov repnz inc mov sub dec (bad) in mov mov out xchg mov mov test sbb push test push jmp pop insb mov insl jl push das sbb divb insb push jmp nop out mov pop xor das mov xchg inc (bad) mov or pusha out sub test xor pmaxsw fldenv ja sbb insb bnd inc pop out sub lock negb out jns in add out ja sub fdivp fsubr aam (bad) bound mov push scas call es pushf sbb movsl mov shlb lret test mov inc loope push pop (bad) xor push test mov adcl mov jb or lret shrl xor out mov negb sbb addr16 or and pushl out push or jge dec fcoml (bad) out dec or daa sub aam push xchg mov mov ret adc popa in push and dec sarb popf pop stos loope inc addr16 push adc push sub lods fisttpll ljmp iret rcl lcall ss (bad) movsl (bad) loopne lods daa jo push loope loop arpl pop cltd pusha add addr16 or push daa pop mov jecxz push stos repz (bad) xor das push jbe cmovle adc xor pop insl add icebp jge push xchg les xor add int3 pop mov jg fldenv testl out loope xchg pushf sbb data16 aaa xchg (bad) or roll mov out pop cmp xor aas pop out popa test dec cmp ficompl out repz ret (bad) mov dec push dec sub out push mov sbb xchg repz scas pop out jle sbb or cmp and sbb fisttpl push test xchg lret or out addr16 ret leave in cmc outsl out or jo push pop push outsb mov sub jl jg mov add xchg push pop in je cltd out mov mov insb out dec mov enter jg sbb ljmp sub xchg sub out dec adc arpl into dec les lock (bad) nopl sbb jmp les insb xor bnd push test js ja out xor lods rorl ret stos mov in cmp sahf add fistpl out dec (bad) dec jl push adc pop jns fmull mov mov inc out pusha push sahf adc rorb mov sub xor sbb inc xchg out or addr16 dec sub add mov xor lods out sbb mulb cmpsl pop push out mov xor mov fisub xor xchg arpl out xor sarl sbb pop iret movsl xchg ljmp jb hlt xchg add decb sub loope das out cwtl add xlat adc sub nop pop out lds inc and pop out add shr stc aas jle add sbb ret xchg pop (bad) push mov inc pop push push jmp inc les das add (bad) out lea fdivrs mov adc out popa sub mul test loop pop das dec sarb pop sbb pop mov add shlb clc (bad) stos out ss or and mov push pop scas sbb in (bad) daa out xchg xlat inc ds mov jbe cwtl dec roll pop clc leave daa sub pop xor jmp adc inc out aam mov bound mov sub insb js fiaddl sub mov aaa in xor adc cmc pop repnz out and sti push (bad) (bad) ds arpl iret outsl jl out and (bad) xlat ret out xor adc and lret loop xchg mov out sbb loopne ljmp std add (bad) xor jmp adc outsb movsb pop lret ljmp int3 mov cmpsl test sub xchg out mov or out out mov pop loope out inc inc cld add and scas imul mov (bad) jbe or mov dec (bad) int3 inc fist pop test inc xchg rol xor aas les add mov test stos pop dec cmp loope add inc shr sbb jp js je push sbb shr jb loopne jbe (bad) push out ja mov add in mov and push shr adc mov fnstcw xchg ficoml push out je and out incb cltd sub xor pop out sbb pop push xor (bad) mov lret mov mov xor dec or and cmp fistp (bad) add cmc pop out stos adc inc push xchg pmaxsw jns mov iret in push andl loope dec inc test and rolb xor out adc sub movsb mov mov movsl jle inc jmp jge xor sahf mov icebp mov insl add bound sub xor xchg jle jne divb leave insl and push inc dec xchg cmpsb imul out mov test push lahf jns sbb out mov mov inc inc movsb jno xchg mov hlt out mov cltd (bad) mov roll cmp (bad) not xchg popa (bad) cli jo loop sahf push push push iret push andl bound out lcall mov out sbb jecxz mov loope lcall insb in jl into mov cs lods jnp fwait dec in out sub add jae dec fadd imul jg rcrl pop les cmpsl push outsb fstpt or out (bad) seto out xor inc mov out dec xchg (bad) mov or js inc (bad) fstps lods cmp mulb push fnstsw inc jns dec out fcoms incb adc shr pop data16 out (bad) push mov js push stc cmp (bad) loopne out or (bad) aaa push and orl sub lds cmp or lods mov out repnz dec cmp inc out mov sub jne mov mov jle addr16 xchg scas fsubr mov xor loop sub scas in pop jb push pop cmp or cltd test out ds add (bad) adc cld rorb jae mov incb std mov dec (bad) out sbb les lahf imul (bad) dec (bad) cmpsl in xor shr adc mov rcll out jo cmp add jl push dec xor out in mov and pop push lds (bad) (bad) dec or add jmp inc stc dec das mov inc mov mov pmulhuw (bad) insb inc push or push arpl xchg ljmp in mov mov add inc jmp (bad) into lahf pop inc jecxz cwtl cmp pop mov inc es ret mov mov out push popa push add (bad) mov out (bad) sahf xchg lea xchg enter mov dec push push xchg rol (bad) mov sub out mov xchg ss cmp loop loop stos xchg cmpsb aam inc sub aaa imul adc test cli mov mov hlt inc xchg out ja fwait mov adc jae sbb cli out test js roll pop in and cmpb jns sbb ror out subl xor mov gs jb out (bad) mov sub out lods dec xchg and fs movb movsb punpckhwd lahf icebp dec jbe ficompl lock shrl ja jne xor xchg mov inc cmp pop imul out pop iret cmp (bad) sub push loop out inc je clc mov and (bad) out inc std and out mov es push icebp sti cwtl in push fsubrl setg incb out xor sbb hlt out push (bad) int (bad) xchg adc lcall out xor sahf or pop in scas xchg add mov inc in add aas out xlat push cwtl xchg faddl subl sahf out fwait js stc out les out or xchg out into and adc cwtl cmp out nop xlat and mov xor push or xor mov pop jno out js mov jo test sub cmp decb cs insb out fwait jg in or ret jmp pop shlb (bad) mov out decl xchg adc aad inc in ret out test and mov sub mov int iret cmpb lcall or xor je gs (bad) mov aad xchg mov sbb adc (bad) mov lock mov inc shr dec out jg xor mov and pop xrelease (bad) outsb mov test and out push lahf scas nop in je pop add enter cwtl sub loopne cmpsl (bad) ljmp out mov test loope cs pop leave shr pop add les mov out adc in sarl jge adc push inc pop out es pop (bad) imul shr xor pop jo arpl aam aad and out jg,pt iret push aas movsl mov and rcll pop out out out bound fs jmp aad add xchg xchg test mov out jb jg jbe,pn out je xchg dec loope movsl xor fwait add ds pop (bad) iret daa pusha decl hlt lret pop scas push push (bad) data16 adc cmc ja jmp pmaxsw mov push ret cmp lcall (bad) jne jns mov cmp sbb enter loopne push stos cmpsb divb mov xor insb mov lds shrb inc out xchg inc sahf and aam scas in mov sub wbinvd (bad) push or pop out bound jne push test jg stc jl mov cmc cmp hlt mov imul lock outsb out out xchg stc ret and sub lcall mov lods pop addr16 mov inc call lret cmpsl mov or out cwtl imul rcrl lods adc mov fsub arpl or dec mov jne mov pop data16 cmp jecxz es mov out into (bad) ljmp mov jmp out add adc rolb cmp mov cmp add aaa in and out sub movsl cltd pushf mov (bad) xor xchg (bad) jle popf loopne call adc sbb imul inc sahf cmp or bswap loope push ret xor inc pop or insb sbb out cmpsb incl pop fist mov mov jns cs xor mov push or pop xchg add imul in and ljmp mov mov cltd (bad) arpl out pushl inc or out and fcomp enter es (bad) pop popa sub mov pop push dec jp and ret (bad) fnstsw fisttpl out pop cmp inc inc js paddsw out adc movsb xorl push imulb js push inc (bad) test mov out ljmp sbb daa mov (bad) shr mov cli (bad) (bad) jns cmp mov mov dec push pop or adc jne out fcompl add dec es push adc pushf inc xor shr in sub xor sbbb rorl int3 in imul jnp sbb jg popf (bad) adc or lods jecxz out sub test jp lods fwait sub sub insl addr16 dec ja leave out sbb jne push and push out xlat shr adc shr out cld sahf es mov sbb jecxz mov xchg and cmp fidivl cld incl cli stc inc aam pop jno xor or outsl arpl or adc imul pop xchg jge pop push adc lahf push push fs mov mov sub popf jle sub jecxz jo inc sbb in dec adc ret jns mov and adc fistp jae movsb std xor inc pop fucom aam iret pop insl cmpsl aad jmp or add cmc push ja pop sar push push call xor add lret dec mov shrd out jecxz xor out cwtl ljmp fistpll loop mov and out add inc cmpsb or or xchg cmp shrb jmp scas dec pop out sub or enter iret leave pop in push add sub pop xor sub je (bad) lods mov jp out fld adc dec jge std and dec mov and pop icebp inc clc pop int3 bound push mov outsb stc pop lret pop rorb push jbe inc int xchg push jbe sbbl fbld loope lock out add mov jle push outsb xor push xchg cmp out sbb sub mov inc or dec out outsl stc paddsw jp repz push lahf pop imul iret addr16 (bad) adcl dec loope mov out inc cmp sbb or inc out or cwtl inc iret mov dec push out nop or jp flds mov outsl mov out sub adc jmp inc inc int out movsl (bad) cld jge pop mov ficoml pop jecxz clc jl out cmp arpl je rclb sub out xlat movsl mov and mov or incb cmp loope xchg or out in pop int3 push mov jg loopne sbb (bad) out dec enter (bad) rcrb lcall out shr or cmp fucomip push push mov pop out dec (bad) cmp xchg out ja mov (bad) sbb mov lock out jbe cwtl iret mov mov dec dec sub mov jg out jle cmc pop mov mul jb inc sub lret lock cmp fucomi (bad) mov ret mov mov movsb jb xchg hlt inc out xchg or cld out cmp insb shlb mov and out enter lcall sbb push std daa mov sub or adc insb lcall pop out dec iret jge mov xchg imul sub scas inc push dec adc push iret xchg or mov insb mov xchg dec (bad) or aas flds out pop jae lahf out shlb xchg dec leave xchg add inc sub addr16 pop and out fild jb test fsubr ficompl xorl xchg out push and push sti decl push int3 movsl pop and pop (bad) push popf out pushf ds mov lahf sbb mov add lods pop out test sahf add aas cld xchg (bad) and nop out sbb mov imul mov sti or push adc stos aad popf cmp sub fcmovu push dec pop mov jp out insl jbe rcll lods and mov push adc adcl les out jp dec call lahf mov jg sbb je add loope or mov cmp lcall in cmp fist push pop push int lods xchg jns or enter mov stc jp sbb xchg ljmp cmpsb jo mov sub fs push lret inc cmp push mov cli out adc mov or mov pop xchg xor mov cmpsb lds rol and or clc rorb mov clc cli aas ljmp movsl lock loop (bad) mov xchg pop dec fs pop pop aaa jmp out loope push divl sbb inc xchg repz pop out out daa mov mov mov jo mov xchg pop inc pop jp subb test add mov fldt es outsl pop int3 jge lock jb stos xchg idivb mov jo out jmp cmp push push xchg push iret cli adc out pop push adc insb mov cmc pop sbbl push inc push out scas (bad) (bad) sarl (bad) int3 out enter bound pop leave sub add and out (bad) out push in cmp test dec push mov or out jae js imul jo test wbinvd adc mov or pop dec jp shr pop int adc movsb shl aaa cmpsb clc out stos xchg sbb jae and sbb adc mov repnz aaa rclb decb dec xor in mov dec push ja cs mov mov fdivr fucomp leave popf push jno lods or je inc in jnp pop mov and popa cmpsb cmc out in aam inc jg (bad) out mov xor push add mov out stos xor imul sbb inc fild addr16 dec out jle out xchg test out mov mov (bad) jae out mov movsb pop out aas cmc push dec pop mov inc aas inc ret sub ljmp and cmc jb jmp fs test mov pop (bad) scas les test xchg dec fsubrl popf stos out lcall iret out xor push incb push sub dec adc out stc jbe leave push xor int (bad) jnp shrl push cwtl push test sbb add in loope dec adc in mov (bad) out and roll and xchg clc cli movsb out dec pop cmp pop es xchg mov (bad) push fsts mov xor xchg (bad) mov pop jno jl in mov iret cmp scas sub pop ret mov xchg daa pop out sub xor add sub or xchg sbb insl fcomi push pop pop mov mov inc push out ljmp jbe adc sub push adc bound mov cmc gs mov xchg push adc fistpll data16 xchg or or sbb sti sahf xchg out mov push mov stos rorl outsb sub inc stc inc int (bad) out roll andl loop jle out xor xchg (bad) (bad) mov out insb rep and fcomi or outsl cmpsb aad mov push out test js repz and scas mov jbe dec cwtl sbb in out xor imul (bad) mov and (bad) jns les lcall out loopne cld pushf inc mov fstps ljmp adc out fwait in xor lcall jg add xchg das mov sbb shlb mov cwtl repz lea mov inc push push inc icebp pop inc es xor mov jg pop mov imul push pushl dec xchg hlt mov mov (bad) mov jns (bad) out popa outsl cld mov out xchg cli adc push push aam pop rol dec cwtl sbb xor in shr pop incb out popf hlt jle ret adc add sbb vmovsldup stc inc out sbb lahf cli xor fwait imul scas test cmp jmp xchg jbe mov and outsl in ja out insl cmp sti (bad) mov jp sbb sub out cmp out insb ret iret mov popa xchg out push ljmp mov subl xor in xchg int pop or out icebp or lea shr call adc nop and andb std popa dec xor out xchg test aad push mov jnp out or out xchg cmp loopne dec iret fnstenv les inc std das arpl jns insb es (bad) and add out xor cmp clc je dec fmuls mov in sbb imul jns mov cwtl adc insl mov xchg imul sub (bad) cmp jnp into and aad pop enter sahf adc out jno xlat push add fistl (bad) mov clc fwait ret ja mov lods int xchg add and loop pusha cmp add rolb test adc out (bad) (bad) std cmp movsb rcll sub je das arpl pusha icebp add xor adc in rclb jp dec loopne and stc xchg cmp pusha jnp mov cmp sbb push out pop cmpsb scas inc imul dec daa fucomip push jp cltd xorl jge inc mov imul out or pop cmp lret add lds jbe mov cwtl out lock (bad) rorb addl pop sbb mov das (bad) test daa cmp out add sub decl loop pop movsl mov fsubp pusha jae out mov add push push sarl lahf jno mov std sbb out mov jno dec bound out adc shll cmp xchg rorb ds or fbld ja inc add aaa push fsubrp mov fistl out (bad) mov adc out js xchg (bad) cs pop repz ljmp jg (bad) enter and in test popf popa scas cmp pop sub sub lahf push (bad) out xchg jle out mov insb inc arpl hlt out repz adc add jne ret pop enter mov in mov (bad) sub push adc ljmp inc dec mov xor out ret and and test pop imul mov push sbb ret dec xor jnp mov xchg insl jmp das mov in out and push mov std fisubl aad stos mov loope lods mov (bad) sbb test faddl xorb (bad) clc fsubrs loope pop cmp sbb or cmp movl xchg out inc and push test mov pop mov cmp xor iret pushf stos add cwtl or fistpll mov jns sub sbb out cld test mov inc sub pop or push mov (bad) and lahf mov xchg out pop dec outsl in hlt inc adc mov sarl (bad) leave (bad) int sub add lock cld sbb fistpl lods leave out jbe daa xchg rorl out and jb pop xchg xor int3 ret je out jmp jge jmp imul adc fdivrs dec fnop xlat fs mov sub and loop out sar xchg out stos cmp adcl jl xchg bound mov or dec cmp add pop dec sbb out in or leave out mov jecxz mov sbb ja xchg lret inc adc aam aad add mov push jmp out and jne outsb push movsl lea out mov in cld (bad) iret sbb mov and popa jns rolb add pop (bad) dec inc mov cmp sahf icebp jle test (bad) (bad) arpl stos scas push sub mov bts clc iret pop push out xchg dec in and dec xor mov lds out cs mov out repnz fmull cmp lods stos int3 cmc mov pop adcb cli int out mov clc mov out sub cmp lret push (bad) shll (bad) cltd lahf test pop shlb cmp jecxz sub and push movsl out popa cmp lods xchg jp push out daa add cmp pop mov xor xlat xchg jno jo and out stc mov or outsb cs enter xor or (bad) (bad) jno jg mov jns out and divb test out lret dec jp mov cwtl pusha das sub cmpsb ret xor int3 fisubr lret out daa jle sub dec std sub inc mov mov jg ret xor aaa or cmp ss clc mov inc lret aam mov jmp ret mov out lret push (bad) imul std cmp pop loop pop out (bad) xlat cld (bad) lods imul mov mov sub lret sub (bad) mov in pop mov sar out pop xor xorl cli shlb imul or out add scas test dec xchg (bad) ds out mov and (bad) shlb lods xlat xorl cmpsb (bad) aas dec addr16 test mov push pop xor in jg in insb and call mov aad inc iret mov or out sub cmp push cmp push xchg outsb out xchg in sbbl (bad) je scas fsubrs (bad) shrl popa xor loop xchg fisttpl xchg out push adc mov inc cmp fisub out dec incb xchg sub (bad) lret clc lahf cmp inc mov loopne,pn xchg or lods cmpb inc adc dec loop mov out insl cmpsb jge pop mov ret out xor pop jl ret (bad) push add int3 xor mov dec inc stos ja mov pop movd push sbb lret pop (bad) iret inc imul (bad) xchg xor lgs xchg or cmp sti leave xchg cld and repnz out shrb or jne fwait ja in outsb inc iret lret lods xor out sbb sbb sbb add push std out rclb out aas xchg dec out fstl jnp cmp push xchg ja addr16 push or pop sub mov aas push imul pop jb inc scas out std dec stos js lea out test mov jnp and sub cmc sub out jb push test push (bad) xor push (bad) es in mov sub sub xchg or add lods sbb mov and (bad) cmc mov lcall adc decb leave cmp out aam jmp fdivs add cmpsl sub and pop mov push mov fisttpl pusha sub scas aad mov out cmpsb xchg sbb insl lahf dec outsb out mov fnsave or test mov (bad) out mov add out xor sub sbb aas sub mov pusha lock jne cmp das flds push data16 jo or mov mov out xorl mov sbb loop xchg lea out push iret popf shr out insb aas mov repz or int out mov into popf inc or hlt out xchg int3 inc cmp insl stos test or push fadds (bad) jl lahf lods je xchg ret mov test (bad) jle out cmpsb stos and sub out (bad) icebp pop sti or pop insb mov out int cld addr16 mov inc pusha scas mov mov (bad) ror shr jmp inc bound xchg sub and or jb lock in push inc sbb mov add jecxz stos lods jl push or lock adc out ret inc loope push xor push in push out and inc jb daa (bad) push out mov dec and jmp loop scas nop cs xchg ss push aaa xor out insl leave lds xchg ret cmp sarb (bad) out neg xchg addr16 sbb jns sbb jmp mov out mov dec mov xchg pop nop or jle imul mov lods imul mov (bad) and pop sub xchg (bad) xchg pusha out jle pop hlt xlat inc and out pop imul sbb inc pop xchg jl cmp fs inc pop stos add push add adc into jl out (bad) pusha inc cli aas inc mov xchg out fisubrl push dec xchg jae jecxz pop int3 out inc js adc adc in sub out and jmp cmp push pop inc hlt sbb (bad) sar xchg push fistpl jns or jg mov sbb pusha ljmp out imul ret pop lcall loope pop sub (bad) or fisubl mov jp xor out xchg adc inc and jb jg ja pop dec mov insb int3 mov push out inc stos int lods push out mov mov je mov insb daa sbb stos pushf jmp out mov cmpsb xchg adc add out or push push cmp pop in and imul pop out xchg clc std mov cmp ret xor or loop dec imul pop fild (bad) es xchg mov out push fcmovbe sbb pop out stos fs sub in and lcall stos out incb jbe xchg jne jg push rcll mov pop push sahf or (bad) out sar dec adc adc aad cmc mov out movsb pop movhps mov cmpsb push je call imul outsb ja scas pop mov xor lcall mov popf int loop aas js je out insb arpl sbb jp jg repnz mov out nop add adc out xchg fcmove inc push inc xchg mov fcomps xchg das out push movsb pop mov jae fsubr jmp mov scas icebp xchg out sub xchg (bad) sbb dec mov leave jno out out outsl stos in inc xor aaa (bad) jbe repz cmpsl arpl adc adc into in mov add ljmp adc mov fcmovb mov scas aad in mov test mov cmp ret dec adc and loopne push aam pusha dec inc push or add adc mov hlt pop mov inc repz imul cmpsl scas mov out and cltd cmc insb out lret inc in aad pop stc fcmovb inc jl aaa negl cmp insl cmpsl pop sub sbb loop or mov xor aas inc in pusha push add hlt (bad) decb lcall mov or cmpsl out sbb mov mov leave scas daa jmp sbb jmp add sarb push es out popf je xchg mov xor ljmp insb sub in dec imull xchg cltd inc and loopne mov stc out add pop add mov bnd stc inc xchg and addl fiaddl es out pushl dec lret rolb mov insb ss bound sbb add sbb ret xor scas jl stos adc add cwtl ljmp popa lahf out sub je mov mov aaa ret mov out sub mov jg jae aam xchg dec push dec or loope setb lods sub jmp dec out mov mov mov in lcall stc dec cmp out mov shll out mov xor aad jmp lahf scas ret and mov out (bad) iret cli test mov stc mov aam and mov test inc movsl out insb js or xchg and stos xor aaa sub xchg mov sahf imul (bad) or push sbb mov movsb xchg std mov out rorl push add mov clc inc pop iret inc or jle adc mov (bad) out das adc or int js loopne mov out sub push out pop sbb fbld xor sbb push out jecxz xor (bad) mov cs out imul andl out or cmp cmp jns pop call inc call out push add out lods andl xchg push xor adc lock ljmp out inc jo push (bad) mov mov dec or add ljmp out (bad) mov xchg sar push shl sub out mov rclb aad (bad) jge add xchg scas rcrb cmpsl ljmp out sub out out (bad) mov cld enter out inc dec js (bad) add ljmp dec iret fistp lahf cwtl push lock mov or (bad) dec scas mov mov (bad) xor out push and ret jbe out and or out fs out mov and inc fs imul roll incb push lock fsubr push cs sti adc pop fsubr fadd mov and out xor pusha faddp adc out sub (bad) push push push cld cmp lock pushf rorb stos js and testb lret ret out fiaddl mov push xchg and pop (bad) xor push push jo pop jnp sub out fcomps dec loopne shlb jmp ret sub pop xchg shrl test push mulb or cmp ret testb imul mov lods pusha push or pop sbb adc pop xchg loopne ljmp out out and mov jl outsl cmp xchg shr xchg dec repz movsb mov mov mov in and mov jne adc gs outsb jle add (bad) cli fdivrs xchg ljmp outsl insl lds sbb das out stc dec data16 (bad) repnz out scas and fcoml xchg xchg out inc sti add xchg in xor std fwait push cmpb pop jp loop jo xadd pusha push dec fsubrp setno aaa mov rolb jo lock push pop pop xor xor xor push sub pop mov xchg (bad) mov sub mov lret mov add aas push aad add mov enter cmp mov push mov sti pop xchg out out jp or jbe mov jmp idiv movsb stos and out adc std inc int and xchg sbb (bad) jno in xchg sub xlat adc dec adc add gs mov pop jge cmp divb imul and cs jge out es fadds cmp out out adcl mov jmp jg push mov xor out sbb xchg scas sbb xchg int3 xlat pop inc loope adc jno movsb sbb inc in push mov xchg xor jae btr bound add test fidivrl popf dec iret out push or outsb dec mov dec sti jb out sahf in jne cmp (bad) mov sbb jmp mov inc dec push je scas fiaddl sbb outsw push ja scas imul aam out in into and ret out xor hlt lods inc test jae inc fist push out test mov sub pop insl jo fwait loop imul and clc ds out lea cmpsl and in mov je mov mov out mov lds or test inc dec in out mov (bad) out push pusha inc add clc test cmp imul into in jno sub (bad) mov enter cmp push ret push lods sub out and xchg stc andl jmp xor notl jle (bad) hlt out add sbb loope aas fildll pop pop pushf out mov sub imul int out enter sbb aas out mov mov daa ret out cmpsb js (bad) repz (bad) aaa outsb dec fwait mov clc out mov or pop fsubrs ss push out xchg cmp rcr inc out fnsave cmc mov adc out (bad) sbb jne jb out test xchg cmpsl or adc cmp aaa imul and jp ja push dec out sbb or rcr xor (bad) mov jp cmpsb loopne out adc sbb cltd cmc or pop shrl std cmp cmc ss subl fwait jg jg cmp iret das out outsl cmp pop mov jle push push push std (bad) repnz in jecxz scas cmp cmp mov (bad) call fsubl stos mov and lret (bad) ret ljmp and mov push setnp sbb shr sub sub push cmpsb popa push out movsb fisubrl sub and and out sub sub sbb je pop lret cwtl cltd and call mov jbe cli (bad) (bad) xchg out in cmp mov cs push xor xlat xchg dec in icebp ss insl (bad) sti fistl sub jo mov outsb mov sub cmp cmp (bad) mov arpl adc push out popa int inc adc mov subb xchg out sahf mov sub pop lods lret add repnz out xchg pop or (bad) dec sbb fsubr cmp sub pop out xor and out out or movsl cwtl push or fwait or test std ljmp (bad) addr16 (bad) xchg mov iret lret (bad) ljmp fs cmpsl mov ret out cli mov fsubl pop fimul push mov daa and out lods scas pop push cmp addl dec movsl pop clc subb mov jnp xor fstl fisttp std sbb shll sbb lea je xor fisttpl or sub jmp add aam loop adc jp inc mov mov outsb push out lock pop sbb adc add adc xchg pop movsb in mov mov add adc mov insl pushf out xlat xchg test iret loop outsl or cmp lahf nop lahf cmpsb or sti jb jbe adc sub out and arpl out xchg fcmovnb adc popa mov add decb xor pop push fsub jp fisttp add mov and (bad) out (bad) sarb mov fwait je std adc cmc xchg out pop pop inc aam insb xor jne faddp pop iret mov rorl repnz clc and pop pop or insl jb push and lret push out push xchg inc lea out ja sub (bad) mov jp jns cltd cmp cmpsb sub out adc (bad) push sub bound imul mov ja lods push out aad mov push adc cmc test (bad) cmp mov jne test and add pop into pop test mov cmc mov les hlt pop dec mov xchg out sub pop sbb rolb arpl push jmp movsb pushf push ja push out xor push in jae push iret int lcall or cltd sti into fstpt mov inc fwait cmp out test inc std cs jbe xchg jecxz or out push jnp clc push lret push jns stc out cld push dec rcll shr sarb sub js cmc xor out cmp mov fist and out pop pop jp test arpl mov lret (bad) adc pop or ljmp jne xchg adc outsb rcl (bad) ret mov jmp cmp add jno cmp or aas sub xchg pusha adc ror fs xor cli data16 out jae fucomi xor sub mov mov or and test popa lret test jp inc aaa dec jb or sysexit and pop out adc sbb out pop dec (bad) lds and ja sub rclb push lods and dec lret mov mov loop lea pop jmp cmp decl lret mov ljmp daa aad aas cmp (bad) ja ljmp into imul push incb cmp loope push cmp adc test sub mov cmpsl jo mov inc jb mov bswap jle scas cmp out mov lret add cmp push mov movsb pop out adc jb out repz xchg mov and inc incb test dec out outsb fidivrl (bad) icebp dec xchg out hlt lods push movsl shlb out cs fcomip ljmp out scas decl xor pop sub sub std adc in movsb and daa push pop and jns jns (bad) and sub leave hlt pop out jecxz into js inc xchg lret jl fdivl pop lea (bad) mov jbe aam mov add test shll fs out scas inc dec mov ret daa xor push (bad) cmp pop xor (bad) scas sbb cmp call out jge test jle loopne repz (bad) out stos cltd adc cs add loope imul loopne out adc addr16 lret cmp int imul sbb jnp in cmc pop push pop sbb or add mov cli mov jbe pop lds rol sahf mov push jbe mov lea and test out xor xor fbld ss fcoml out add jbe cmpsb add push mov mov out aas cmc inc mov cmp sub outsl dec xor add fnstenv call mov dec jo leave (bad) and xchg lods dec out (bad) or push mov icebp aas jmp pop test inc jne add fisttpl movsb int3 (bad) fwait bound out adc (bad) in out inc xor xchg hlt stos mov jno add mov push out inc pushf jecxz daa mov mov subl fsubrs push out xor pusha inc leave stos fwait out fnop lds adc pop out repz adc enter mov xchg sub sbb dec mov pop xchg jb (bad) dec aas incb or and ljmp mov (bad) adc (bad) clc loop ljmp es (bad) jbe loop xchg arpl imul cli push sub mov rcrl dec adc cmpsb aaa aad not out arpl les (bad) mov (bad) cs out fstp fbstp (bad) mov insb and mov sbb int3 pop in adc cs sbb jp jae out mov lea mov dec pop data16 aam (bad) dec fistpl out jo mov push (bad) das (bad) fldt scas enter out shlb xor cmpsl pushl call clc popf addr16 pop aad adc cmp inc jmp pop and out cmpl xchg ss pop shrb fbstp inc xor push pop in inc mov and sbb imulb xchg mov test sub xlat out je sub lock aam pop out nop mov inc pminsw mov out mov adc xchg out loop jmp sub cmp jecxz jecxz add and movsl jmp pop and stos jns lock fadd sub loop scas mov adc orl out pop cmp pop pop out mov dec (bad) test loopne fnstsw out sarl nop inc and les es sub imul cmpsb adc mov adc or push je test imul pop and mov or shrb inc ja scas out fiadd outsb push pop xchg jle sub jmp in xchg jnp pop dec cmpsl fcmovnbe sub ret imul insl dec inc or mull out mov fisubrl pop and push and dec ret mov mov sbb outsl nop lods scas test rcl scas xor dec out cmp mov or mov shrb out and sub lcall enter xlat movsl or movsb ds or inc lods test push out inc adc jge outsl cmp mov iret xor inc movsb push out movsl sub push dec mov rcrb testb (bad) fwait (bad) dec sbb jae pushf cmp repnz pop bound lahf push sarb xor or aaa jp pop fadds pop mov or inc sub fnop fwait pop into xchg out mov sbb lea imul pop lret add pop mov xor les aaa rcr movsl cmp popa mov insb push dec lcall add push jmp xchg or sub sbb and call fs push mul test out addr16 lea out mov mov out xor mov mov cmovns pop jmp inc clc out jmp std js out or bnd aad pop in icebp fdivl insb xor (bad) lahf dec sahf inc cmp mov addl out lcall call lcall out rorb sbb xchg jne mov outsl (bad) lahf push dec mov cmpsl lods loopne xchg ss mov je mov imul add and out push subb je sub es mov pcmpeqd std push leave ljmp xchg xchg or cmp cmp clc pop mov sbb jge loop sbb adc push lcall pop hlt sbb mov jmp outsb dec mov sbb mov inc movsl jmp out push scas mov xchg mov xchg in ret out mov data16 cwtl xchg enter pop in sub pop out adc insb cli xchg pop mov aas inc (bad) out iret rclb out (bad) int3 insl cltd movsb mov sbb cmp mul push mov jmp xor adcl xor gs lcall dec out lds jmp jl fmuls scas pop push cmpsl xor jecxz out jne jg sbb imull push jno adc mov jg and dec xor popa loopne xchg out andl push rclb inc push out inc add xchg dec je and inc xchg lret pop fbld loop and sub loop leave mov jne in (bad) negb out (bad) add pcmpgtw xor adcb dec cmp out icebp push jmp jns push (bad) out mov shrl push xlat lods cmpsl adc jno add pop xor sbb out sub idivl add repz fsubp pop (bad) loopne dec push mov adc and sub xchg (bad) out adc imul movsl push mov incb (bad) sti loop stos fdivrl sub push scas js mov jb mov repnz and ljmp cld (bad) in mov daa pop insb iret jp shr mov push xchg out jl dec mov test dec ljmp data16 js enter mov cli xlat sbb and lret mov push mov fbstp and shr inc sub push cmpsl out push mov adc sbb jb lahf mov pusha sbbl cltd mov adc and out jmp jl push push aam mov jo movups mov out inc adc out fs pop add push pusha fisttp std (bad) call dec xor dec pop in sbb (bad) aaa cmp inc jl inc stos ficom push xor cmp and ret mov push push inc out mov adc ret add ljmp out insl pop xchg or repnz jns and aas push loopne mov imul out fs dec mov (bad) gs inc ja sub pop loop sbb push ljmp sbb incb movsb jecxz push mov insl xor das xor cmp pop nop ficomp sub jmp je jns sub sbb sar or jnp mov outsb add mov mov pop adc test lahf dec jle,pn mov mov fucomip movsb testb mov add mov mov scas in lret pop out lds idivb sub jno bound push add jae (bad) out ja and push out stc test inc bnd out in add scas outsl (bad) sbb loopne les mov out add rep int3 das test sub or dec mov fildl out movsb fdivs outsb dec outsb mov out lret add mov inc dec mov push out (bad) (bad) mov out imul xchg and ja and mov cmp sbb inc out mov mov subl mov inc pop leave dec jbe out lock push fs icebp pop mov in push and inc orl pop or ja add jge inc sub enter lds pop sbb cmp into (bad) jne mov pop (bad) imul push jg sti cmp out mov insl popf add divb push mov mov or iret js cwtl ret adc sub push out mov in movsl sbb and (bad) mov in popa out sub out adc fwait loopne dec out inc inc daa jnp scas sub bound xchg push cltd (bad) mov push fwait insb push xor fs loope das lock out ds mov mov cmp ljmp out mov cmp int3 shlb ds jnp jle outsb cmpsl rorl out xchg and lret test xor mov dec pop test clc das mov bound std out (bad) xor and jp xchg (bad) pop aad mov ljmp pop pop inc (bad) push dec das adc jge push out jnp addl gs mov (bad) pop or mov jmp xchg sub dec jb data16 add loope mov mov jl dec push in scas cwtl ret in sub out call popf gs in rorb mov mov (bad) in leave pop das clc xchg and jb out push popf inc out mov outsb sub out xlat in inc xchg shr (bad) out mov sbbb cwtl xchg aas sahf jp pminub out outsb cmp xchg (bad) jo mov cmp xchg sub xlat out cmc lods jae lret leave aas (bad) loopne test dec adc pop dec xchg mov mov sbb cmpsb push pop push jle and test sub sub sbb out pop scas mov push mov out ljmp bound movsl lahf out and jno test mov pop jb fsubrs nop or call ficomp imul xchg pop mov sti sahf shrl out pop dec pop inc xor inc jg std push inc out jno pushf jecxz jl and jns loop jnp pop imul push cmc iret addr16 cmp xchg jle cld cmpsb inc out or loop out mov push pop insl pop push cmp cmpsl inc jae out nop loopne push out xchg out add or jmp mov mov mov pop out arpl out cmp xchg mov fcompl xor insl (bad) pop xchg jmp out inc idivl or cmp xlat dec mov mov in data16 mov fnsave push insl jle dec jecxz outsl lahf lds pop xchg (bad) push daa dec in sbb aas out mov mov cld punpckldq popa inc pmaxsw xchg popf int3 mov fidiv (bad) lea daa ret (bad) out popl ljmp test push pushf outsb aas shl cs xchg pop movsl sub jnp inc jb mov out adc xchg fisttp xlat pop pop repnz pop jge lods int3 movsl out out fimul addr16 inc fsubl in pushf pop fildll lock out frndint xchg and sub mov mov out xchg in pop xchg addb jb (bad) out rorl pop (bad) cmp xchg loope test in dec out sub mov pop mov sbb ljmp mov aam shr dec inc xchg cmp (bad) mov out lahf repz cmp data16 add ficom out jg adc out mov cmp push xchg cmp aam test fsts cs pushf push pop iret mov adc lock mov xchg push iret out push scas out xchg dec jns adc xchg ds stos out lock js iret inc xor das cs mov inc (bad) xchg ljmp cltd dec out xor lds sub (bad) shl dec xor mov add int3 pop jecxz cmpsb (bad) outsl adc inc in push dec stos mov adc cmpsl add fs cmp das mov lods mov je jl inc sub out cmp pop rcll push stc push je (bad) (bad) (bad) (bad) popa adc out jo daa ret dec pop js mov adc mov and cmpsb pop imul imul insb inc out xchg out add and bswap imul push les hlt pop out adc dec cmc dec add fcomip (bad) ljmp fwait xchg inc dec pop ds aad test mov mov xchg adc iret sahf in cs call out clc fs andl in sub push mov mov loop in clc rcl out mov outsl mov xor sbb out xor sbbl out outsl or cmp mov inc dec lock out inc or pop push in popf out iret sti mov inc out ret push mov dec into xchg std pop or (bad) xor fsub cmpsb or out or push pop aaa push out xchg mov mov out inc dec jmp mov outsb dec mov out mov loope sub pusha push push out jmp mov jecxz cmpsb out lds shlb fistpl out and int3 mov pop push sub inc xchg dec in cmp add insb cmp xor adc jp xor push icebp mov push xchg fnsave push xor enter jecxz in xchg xor out push sahf push out pop jo sub mov lahf stc add loop test pop ret jle in or lret inc jns ficom mov xor lods mov mov into push jnp popf shll cltd sahf mov sub decb popa iret in cmp lock mov int3 mov xor fildll bnd or iret jg (bad) jbe ja pop out cmp dec call pusha sub jecxz push dec shlb repz dec ficom pop lds call fucomi xor shll out mov adcl mov mov cmp out jbe adc outsl (bad) xor scas rorl inc test (bad) leave loop xchg and out out adc ja adc in out jb fsubrl (bad) out ficomp pop das lahf (bad) mov or lds mov lods push mov pop mov xor cmc aas or arpl inc loopne imul sub inc sbb fcmove shr in adc out pop sub insb jmp push out sahf jp andb xchg movsb mov xchg in jmp mov in sub sub ljmp add cmp clc pop xchg lods aad out dec in cld lds pop lahf out ds rcrl out and and mov adc lret jb aas iret mov sbb inc inc pop dec dec out mov cmpsl dec push insl pop incb cmp lods mov shrl pop in jnp xchg out mov test fbld (bad) (bad) cmp or pop inc mov inc inc test xchg into out sub or push bound pop pop shrb sti xchg push xor jmp mov nop out dec (bad) out pusha push jae lahf outsl cmp lahf out fstl int divb dec xchg repnz mov andl les pusha lods (bad) jp jg out imul mov xchg into push stos gs rcr loope adc xor jmp lcall jl in pop nop (bad) scas rcll outsl aad cltd (bad) mov pop jb jnp imul cmpl dec cwtl mov cld dec xlat adc mov fsubp pop push push inc out icebp cwtl add out adc xchg mov jne into sbb out ljmp xor in call push push stos xchg or or pushf aam outsl movsl mov out or jp xchg inc out daa test push call dec xchg xchg xor and loope jge jmp jns dec mov (bad) aas rcr push loope ljmp inc je outsl (bad) in fs cwtl xor xchg pusha push enter out or fsubrp iret push mov xchg outsb out inc ret jl in jnp (bad) out or stc decb decl out xchg inc cli ret push cmp clc fwait shr cld and mov mov push add mov jns lock out push sahf mov sub mov push insl xor add inc aas mov jno in ss daa (bad) dec arpl push xchg (bad) jbe out push mov dec out aad fidivl je xorb cmpsl cli xchg insb mov mov (bad) in or xchg mov or out clc (bad) repnz mov in sub ror ljmp scas adc or cmp aas (bad) pushf xlat arpl and dec cmp loop and (bad) lock push xchg mov push mov in das xor sbb mov lret ss jg test push mov mov (bad) outsb pop stos (bad) mov arpl push and test xchg sbb sbb lods out mov and rorb loop sbb inc out jl idiv data16 xor pop inc lcall out std dec sbb flds mov sbbl xor lret nop mov or ret xchg insl fnstsw push jo (bad) fnstcw push out aam imul lret dec je mov and ffree cmpsb jmp out aad sbb pusha dec loopne out inc mov pop xor fs scas push cwtl movsl out out test out pop icebp and stos mov mov cs push ret mov ljmp out aad (bad) jecxz jns mov mov (bad) mov nop ja fcoms or lret in ret out push xchg mov jg test cli pop fwait mov insl jge addr16 dec pop out pushf lods inc popl push out sub (bad) push stos or xchg aas xor lds outsb stc dec imul scas sub mov inc mov mov add outsb inc out mov cmpsl jno sbb sub xchg (bad) fldcw out push stc or push xor mov inc mov iret div add in pop inc loopne mov sarb fmul inc out addb cmp cmpsl cmp fistpl insl sbb (bad) push or sub mov sub popa out sbb lahf scas out and pop lds sub in or out orl insb mov (bad) pop ljmp out mov sub push data16 jo sub cmpsl push (bad) (bad) das out pop pop (bad) in add fdivrs fimul push jb fucomip and cmp adc into shl inc dec std pop jno out imul xor out js fs call cmc lcall (bad) jne cli lock test out add ja out push daa je js into test movsl mov xor cmp (bad) sub ljmp scas cmp jne inc incb out insb pop fsubr push adc pop xchg das xchg sub pop mov scas push xor inc mov pushl out (bad) iret es cmp icebp les dec imul popa ficoml rolb push mulb shrb out out xor scas ficom mov jmp xchg push cmpsb repnz fisubl dec in mov imul lcall movsl dec sub dec aas cmp ds popa fdivr cmp xchg xchg out adc add shlb loope add std pop leave loopne imul add addr16 mov out popa cmovo or popf cwtl iret lret jno jo mov addr16 mov out movsb sub int jl out fs movsb xchg decb hlt mov jb,pt push (bad) jae or sahf rclb iret out stc outsb std adc ret call test sbb in xor pop out add mov fcmovbe mov daa lret lods push fsubr or sub xor mov inc ret jmp jp cmpsl sub xchg js pop xor sbb iret je push (bad) xchg nop pop stc dec mov in out cltd (bad) lock mov add or adc sub mov movsl xchg pop subl popf inc push inc xchg adc adc push loop xchg push inc enter or pop mov xor pop idivb orl int mov loopne dec mov lea cltd cmpsb push mov clc mov loope mov inc add mov jp or pop cltd jmp fsub fiadd xchg fs out mov ljmp dec fstps sub inc out movsb je repz cmp jecxz in sub xchg push dec fs jp loope std adc and fsubl jno or out nop sub cwtl fistl (bad) ljmp aaa loopne xor lret jo mov repnz sub loop (bad) cli mov fild add sub aas push dec sahf push out xlat adc and pop ja,pt xor cwtl add jge and lods and push insl push je push pop popf popl xor sub stos xor mov lea insl fcmovne sub push ds roll jge mov adc insl add sub pusha pop push and pop adc addr16 xchg (bad) or jne (bad) out rclb jns out add pop cltd xchg mov out popf test or push shlb sahf aas jae pop xchg sub clc inc lcall stos fnstcw fistp (bad) popa pusha gs cwtl (bad) icebp sub jbe fimull xor loop mov (bad) mov jae bound jg dec clc lds mov cmp out sub rorl imul icebp sub dec pop outsl mov push (bad) out push mov fmul out outsl lods inc xlat arpl fsts xor clc cmp loope xchg mov pop and push mov inc out mov in mov je pop sub fwait nop ljmp std jg add out dec and cmp rclb adc imul out sub mov out push scas mov out lahf xor stos (bad) fnstcw out xlat aam jns mov push out pop pushfw ret imul push (bad) call out gs cmp jae and rcrb fidivl sub daa dec dec out mov in in dec out push test jge enter xor pop xchg sbb inc idiv out call cmc push sbb xchg dec enter pop or leave pushf adcl fmulp push out pop mov arpl sub inc add std mov sti mov in leave xor imul test sbb mov jle sbb push out mov pushf push loop mov lock ja int3 imul out ja inc (bad) out lock mov int3 call std out push lcall sub lock mov mov pop insb xchg loop in ret jg push fmulp push out sbb cmp in push sahf sub fucomp and out scas mov or lods inc out add outsb test out dec sbb movsl stos pop push pop sub out sub inc lcall pop mov pusha mov aaa addr16 std pop test sub mov loop xchg lods sub gs and out adc jp mov xor addr16 cmpsl add in stos call out xor adc in xchg out lcall mov jecxz add jbe mov stos out mov pop push out neg and cmp out cmp cs jb cmp pop push add add jg fdivl dec inc cmp lods je or pushf lahf jno mov jg dec jl dec out pop dec lods and call and out mov pusha in jns ljmp sti adc daa loop xor jb and (bad) cld inc jmp out jno cmp pushf lea loopne cs pop je (bad) into es push push out (bad) insl jno sub adc outsb xchg mov push loope push and jl xchg push mov jnp into out jae ja push jno and and dec sub je push scas cs pop out cmp das pop mov hlt mov xchg push jb,pt adc lods pop pop (bad) or xchg pop movsl in jbe cmpsl iret pop xchg mov ljmp imul fwait jle sub iret fild inc xchg test jp ds or xchg iret xor mov cs jbe dec lret inc push lods mov stos add sarb int3 cwtl or cmp out fwait test inc rolb loopne popa pop imul sbb lret sbb les aam jecxz or bound shl jl sub pop (bad) out jbe jle imul movsl and add insl test out lods aas or stc enter push adc cmp iret push pop push or cld pop enter cmc adc xlat fld rclb daa ret mov nop xor jo xor loop or xchg fs xor mov fildll jmp cmpsb shrl loopne stos out lea idivb sbb inc add insl mov lea out or (bad) cmp (bad) sub or xchg lret inc loop out arpl mov fdivrs int and out cmp shr pop stos std test sub out shrb lcall out jge popa and mov out pop push dec outsl mov xchg std pop or icebp mov sub mov scas das lock out out lcall xchg xor pop aas divl pop jmp out pop aaa outsb cmp inc adc insb adc or out fwait push out jmp stos shrb in in mov pusha out jl jns dec leave lods out imul push adc lock push repz pusha sub stc xor (bad) pushf pop mov test mov sbb insl in ret adc dec arpl push mov out mov jge pop push int mov push out paddsb push add out cmp in (bad) aas and iret (bad) int3 iret adc inc cmc cld jg xor or fist out scas mov inc jae jecxz (bad) in bound and cmpsb fcomip leave dec xor cltd fbstp cltd into mov rclb cmpl adc mov cmp cmp lea fstpl shr pop and push xchg rclb into mov out popa mov and push sub nop (bad) pop (bad) cmp out xchg mov jno push dec into leave out (bad) je sub loopne sarb fisttp out jae mov lahf mov out sub and push mov adc popa mov mov (bad) or jb pop push outsl push mov arpl cmp xlat enter push push push ret popf into out insb sbb out mov dec test shll into fistpl je aas inc lock or out mov iret add push pop out dec ja push cmc (bad) je jno repz out add push push mov cmpsl enter into adc and cmp jae push out daa scas ljmp arpl jnp notl dec dec lock fisub adc out nop (bad) insl addr16 sub jmp xor out xchg sbb adc insb repnz mov scas inc push out int3 shl rorb iret inc (bad) cs out mov out mov fsubrl out ret sub jl aam mov inc pop sub push mov lcall repz or out or daa sub dec jg ds dec ja sti (bad) out jg cmpsb pop sub pop xor jmp xor jnp popf out push mov movsb test loop pop pop lret rcrb pop sbb xchg out pop push out sub dec fstpl shr lahf movsl fs mov mov inc aas sub jo fdivl mov popf xchg imull out (bad) lea lods clc (bad) outsb shr decl sarl xchg hlt mov les scas out jne pop out fidivl dec (bad) pop mov adc jecxz out sbb repnz insb xchg fisubl out mov inc mov xor (bad) out fdivrs cltd adc jle mov push add push bound movsl (bad) (bad) mov jnp aas out mov aad jmp xchg and sub (bad) push clc out adc xlat fidiv ret out adc add ret imul out movsb and int3 or (bad) adc dec popf outsb in in sub mov neg loope ja cmp mov outsl lret ss jnp mov cmpsl outsb pop adc mov insb out mov jno xchg xchg add lret mov mov data16 add popa mov sbb add (bad) pushf mov leave out ljmp fbstp mov pop lds push sub je dec enter mov (bad) insb lock and pop dec movsb push pop lret add jmp je (bad) adc mov shlb push (bad) out mov push scas loopne push adc int3 mov fisubl rcrb dec test into inc adc and push out cli xchg rcpps out sbb mov out dec mov jns push enter inc aas int3 fs outsb hlt subb pop xchg test push shlb pop movsl pop (bad) loopne call out adc movsb sbb jne (bad) push pop insb lods sahf fmull jbe lcall imulb in push out daa xchg or out ds dec inc lock lret or mov mov js jno lods (bad) jecxz push repnz pop adc scas mov jne out pop (bad) (bad) sbb in inc insl mov outsl std adcl adc dec mov sbb outsb push in inc xchg out aaa ret jle xor out stos mov jbe adc xor loope cmp sbb sbb out mov or popf addr16 int jb xchg not (bad) sbb or sub jns mov jnp and scas shr adc push ret cltd out xchg movsb cmp out insl mov (bad) adc mov dec cli jg repnz cmpsl out sub or cmp dec nop loopne insb or xchg (bad) test jae dec xchg dec sub mov out add test or (bad) pusha inc push adc lock xchg fisttp jge sahf mov and push dec jp pop sub xor jmp xchg fistp out scas sbb jge out leave popa adc or mov int jb es icebp mov inc dec mov outsb pushf lahf jg jp lods out xchg arpl mov adcl out sub cwtl jns pushl enter dec jg xchg pushf mov mov jnp mov jle pop jne dec out xchg jb sbb fs loope xor pop imul out cmpsb ljmp pop dec xchg loope mov jge stos sbb out pop mov (bad) ds test out lret or or insb cmp iret fisub shl out cltd and push cmp mov and inc sub mov cmp cli xor xlat out cwtl daa mov fisubl (bad) ljmp divl xor adc pushf jp mov sbb jle lahf out cmp cmp rol cmc cmp lock add cmp jecxz xor addr16 xor or fistpl es add (bad) xor in xchg (bad) out fwait push push in mov jb mov add mov jle in xor mov pushf out (bad) and jo out int and out in xchg (bad) in xor (bad) rorl push in xor jb popf pop stc into jo into out add inc call test xor test jmp imul mov call rol push shrb dec es sbb (bad) cli xor imul popa shr loopne dec inc test mov xchg cld fucom lcall hlt sub mov inc iret or mov pop xchg and jg push ljmp in dec bound shlb mov dec (bad) sbb lds call dec dec rorl adc mov out xor push mov lret (bad) cld sub pop xor js dec out mov bound sub add mov jge push sbb cmpsb xchg mov push lea lret (bad) out cmc or dec and mov ljmp out enter xchg mov fdivrp mov sahf dec outsb add imul outsl xchg out jnp adc mov daa test (bad) cmp cld clc les add or lods or and sbb jns lcall imul inc ljmp das out jbe popa test sub adc jle test xor inc aad out cmp xchg mov mov daa ss inc or out hlt ljmp xchg lods repz xchg adc jnp out (bad) push sbb ret mov xchg fstpt cli out es sbb pop sbb out iret popf sbb xor aaa (bad) out inc jb push mov int lahf pop insl mov out adc mov jbe out adc (bad) and out std out jmp jne push rcl dec out xchg pop ret jl mov adc cmc lods jmp lcall push xor jae push mov lret in out ds inc or out push mov jb mov mov rol scas movsb pop leave scas stos cs out jns or fsubrl and add pop mov jge orl mov shr hlt out inc dec jno cwtl inc out (bad) mov dec push xchg jb xchg (bad) rcrb pop ds or dec outsb jne or mov insb jmp xchg (bad) or out sub sub out lods dec in mov out incb adc out lods fildll test pop dec clc out imul ffree sbb popa jmp out out push dec mov (bad) repz out fmuls mov mov int sbb lock mov popa and iret les add clc (bad) std mov insl pop out fdivrp stos mov pop rcrl sub jecxz out push (bad) (bad) xor sub (bad) repnz dec test lock (bad) mov jecxz loop pop xor lds or cmp out xor mov jno out cmp movsl add out jmp int adc jne mov test out cmp inc jnp rorb out sbb pop movsb push mov lret (bad) stc push add or cltd sahf leave insb adc pop xor sti fs out pop jl lods fisttpl jmp push clc sarb out sub and out mov sti mov out sub aas fucomi int scas jns scas int3 (bad) out lock dec mov mov cmp mov push or jnp in out xchg int js ret in test add adc out stc outsl pop hlt inc mov sarl xchg sbb mov push pusha (bad) xor and (bad) cmc loope gs pop or (bad) call mov fwait pusha out enter fnsave lcall inc movsb rol out push and xchg out lret xchg mov xor mov push adc inc lahf jl lods mov fwait fs out mov fidivl gs loope es adc cmp mov andl imul cmpsl pop (bad) out outsb pop cltd out jnp inc mov lret sbb out pop clc into nop lods and and cmp pop mov xchg fucomi stos adc sti dec or cmp lea pop outsb or or sti dec xlat outsb out mov push mov popa test pop xor push sub and mov fld xor ljmp (bad) and scas out popa inc enter mov (bad) aas mov push (bad) out insl mov sbb das stos out or and out jne pop or push call cmpsb ror lret inc mov daa and lea aad pop (bad) scas out test ds out (bad) rolb jo xchg mov mov out mov in jbe out loope inc add iret paddusb adc popl xor repnz aam inc imul pop cmp xchg xchg xchg clc out mov pop push push fucom xor lods sbb out fsubp mov movsl inc sahf ljmp je lcallw imul jge les jb into imul push (bad) mov imul outsb xchg out mov adc adc ja pop mov out sub push out mov (bad) flds out cmp rcrl out adc jecxz xor (bad) lret rcrl pop mov jecxz push mov jmp popa out jp sbb mov arpl adc xor flds in sub out mov cmp jmp mov push icebp rorl sbb pushf das out (bad) lret out popf xor loop add cmp (bad) jmp pop sub insl call cmc pop xchg aaa mov (bad) pop out cmp pushf dec sbb mov mov shr adcl out pop cmp lahf cwtl pop sbb popa leave cmpsb push lods dec into push jno nop pusha fbstp lods adcl cmpsb jp in dec inc scas add (bad) leave sbb test push dec scas out push mov (bad) divl mov lods int3 nop pmaxsw push mov or xchg int3 pop add test jecxz test dec xlat jns xorl fimul aam inc mov jae mov adc call test mov ret sub (bad) push out xor add push push and mov out fidiv xor push jb lea stc data16 loop mov into (bad) fwait sar pop xor and jg xor neg push or pop cmpl sub mov inc hlt cmpsb inc std jo mov in add lods aas push mov fdivrl mov lods out or mov pop (bad) or pop aaa (bad) imul mov mov out inc leave mov hlt scas inc sbb add js (bad) cmc (bad) out mov sub jle push add (bad) int inc pop out (bad) mov sbb (bad) insl or xor mov loope add int lods mov xor inc jp sbb out ds push out jb ficom sti arpl shrl mov loope loop or cmp adc ljmp outsb and out sbb out pop popf js mov jne out dec mov xchg jns (bad) cmpb lds je imul push mov jmp cwtl js iret adc dec or jecxz cwtl subl fcmovnu xorl iret mov xchg xchg pop test mov pusha jge out call int3 mov shr jnp inc mov aad (bad) out fdivrl adc out popf (bad) jno in (bad) pop pmulhw and out ret out xchg mov subb dec push push out movsl xor sbb sub out jmp sub xchg dec lret pop sub js test sub fbld in out pop stos sub add lock out push pop aas xchg mov (bad) in lsl jae or jnp ret out iret dec idivl out repz outsl dec pop out sub pminsw aam fwait pop jne std xlat jle cmpsb in out cmp pop mov jg sbb sub and into out mov mov out inc pushf cmpsl fsubs insb push or out mov add jb dec jp fistpll xor sub (bad) adc pop enter mov mov std jmp jmp out hlt inc int3 (bad) cmc or iret mov or mov or fiadd push jno mov add lods push stos (bad) incb adcl or mov out (bad) pop mov (bad) scas int in xchg push xchg stos call fstps mov pushf fwait gs add nop out addl out inc jg (bad) rcrb loopne push xlat fsts ret or xor test test cmp dec sbb in repz cmpsb xor xchg scas out (bad) xchg mov add jl pop add jmp out loope fcmovnbe scas pop sub lahf pop sbb xchg out aam mov ss iret and out dec cs adc inc xchg mov sub out mov lret mov jo enter out or or xlat cmpsl xor test adc aaa icebp pop in outsb adc sbb mov or push lods out push dec pop in sub add push outsb or jne je in jge (bad) popf in out inc (bad) jno into fyl2x or sub push mov rol mov mov adc cmc push loopne aas mov mov imulb test mov icebp lret sub (bad) pop cmp add ffree in (bad) push push lock pop lea or xor out mov ret je fsubr scas aad lods sti pushf push jne mov cwtl out hlt cmp pop (bad) mov jb scas lock sahf das (bad) loopne add sbb out and jmp cmp or mov push gs or (bad) (bad) std das dec xchg loop mov jecxz imul jae push out xchg inc jmp les sbb mov or sbb xlat test std sbb jle repnz cmp mov cmp lea movb lods xchg iret int lock jnp sbb out stos loope ljmp inc mov fisub (bad) sbb or sub jo inc inc pop cld out loope jl ret out arpl xchg sub adc scas out notl out mov pop loop out jno cmpsl inc je mov dec pusha jg ret lret out lcall mov loope jbe mov nop xchg rorl out mov mov push pushf xor je mov mov fsubr pop in cmc pop orl out jmp dec lods jns xchg mov push cmpsl ljmp imul clc mov lahf and push es xor fs cmp mov (bad) adc fsubrp popf cmp jg xorl movsb outsb adc ret mov jp test (bad) jo sub add push fs add xchg clc rolb mov jns inc adc add ja call inc mov and lods ret sub test movsl mov mov push lods int3 enter out in push inc sub outsl pop mov xchg add aam gs xor cmpl out arpl loope out (bad) out mov jns or push out (bad) jbe lret and lret mov cmc add xchg repnz mov out mul mov pop mov sbb mov ds (bad) call cli pop mov in lahf out stc inc icebp or jbe sub pop cmpsl dec cmp add sub enter out jb pop ret xor aas inc pop in outsb lahf add and fidiv xorb push inc into mov dec push adc call sub jp dec adc jl pusha mov out mov dec loopne out aam test bound into cld (bad) xchg test in outsb out xchg cs inc (bad) (bad) (bad) lock inc push arpl mov mov aam cli dec push shr inc call or ret mov fnstcw in out lahf mov popf jne lret cmp (bad) jmp jge jns nop sbb outsl pushf and and std (bad) and movsb xchg test cmp sub out mov incl cmpsb out sub lcall mov je push dec fistpll push sbb pushf jle loop push out shl iret or aam pusha (bad) push test lahf (bad) jae stc inc jo fwait or mov (bad) mov (bad) out add in ret aaa or loope jmp cmp out pop fbld pop add sub push cmpsl or inc out popa and ljmp mov loopne std sub int es in (bad) out cmp ljmp xchg lods xlat jg lahf fstpt and xor lea mov cmp and mov pusha sbb popf inc or mov ds xor mov call jns and mov imul or xor into in leave xor dec out shrl and bound cmpsl imulb mov and out shl test pop pusha push iret xchg ljmp enter out xor xor out jb lahf imul pushf pop fstpt fwait iret mov dec add in xchg sahf lea xor push mov pop mov add sbb imul ds dec int sarl ret pop jg insl movsl or pop sti fildll pop stos xor clc cmp out mov mov lret out mov jge dec insl mov out and dec jmp ja and inc ret stc pop iret pop iret (bad) ss imul jbe hlt inc mov sbb fucom scas out lds insb jl lcall mov sub movsb mov push ret pushf out add adc xor je pop shrb testl push test js,pn es jnp out add and xor mov lahf pop push nop imul sbb inc fcmovne xchg fucomip and fsub mov sub out aaa jno dec jmp enter aam es out imulb mov mov mov jns repz xchg adc cmp jecxz shrl mov xor push das lret out (bad) data16 inc pop pop jae or lahf out mov loopne xchg fwait mov jg xlat (bad) (bad) mov xchg push dec sub mov out (bad) xor xchg cli lahf inc cmp push cmc scas cwtl (bad) notl in in jecxz jecxz sub dec fsubp xchg into add pop mov and scas push fidivrl dec xchg mov push out mov sub out sarl outsl leave or out mov pushf mov addb mov ljmp and ds push shrl lods sub popf iret popa inc ss mov mov psadbw popf cld ja pop out mov loop dec mov adc sar arpl mov loope mov xchg xchg imul lds or idivl fsubrl movsb add cmp inc jo jns push jmp cmc mov pop loop outsb lods in bound jle jp test jo pop pop sbb subb loopne ret xchg mov jmp out mov mov icebp pop mov into xor cwtl push and mov cmc and xchg in pop leave pop into rcrb mov add inc (bad) iret out daa movsl sub in mov (bad) (bad) shr mov loop shlb out sbb inc or outsb out arpl repz ds inc cmp out subb pop (bad) repnz xor inc ret loop jo pop jg scas jl out push inc icebp popf dec out cmp xchg jo mov out mov test push dec and (bad) stc cmp (bad) sbb inc cs mov popa add out test lds lahf xchg outsl mov sarb push dec adc orl js pusha cmp int3 out (bad) xchg inc mov sub and push fisub xor mov mov pop out scas mov or fldcw fs push inc mov leave fistl andl jnp sub das scas or sahf mov add adc loopne xchg xor jp sub mov lcall nop (bad) out jns xor rolb ss adc insl (bad) in xor mov out ljmp push out add xlat inc adc pop xor inc sub into pushf adc mov out (bad) fdivs out pop fstpl pop mov pusha pmullw subl out in mov sbb xchg out out xor inc push jbe out cmp jno fs lods in sbb in ljmp jmp (bad) aad out inc jae test xor pop mov (bad) xchg lahf loop out out xchg mov flds ss shlb lahf (bad) and fcmovnu jg jp or cmp leave out (bad) lret mov shr (bad) adc bnd push mov mov or sub movsb pop nop xchg sub jmp std xor push out pop dec inc push clc ja out xor leave sbb in out dec fdivrs in and pop mov or pop aad icebp or std mov jl js in dec push hlt xor and lods out pop adcl out fwait xchg and rcrb sub sub mov pop and mov mov jne popf (bad) mov out rolb dec xchg sub mov fisubl out jbe imul jne int3 add rolb addb add sub es adc dec xchg stc pop hlt dec enter lea or nop push pop lahf je out sub sahf jecxz sub in call iret adc aam xor push xchg and enter lods out je out (bad) sbb inc sub fsubrl dec cmp out or inc cltd sbb pop add out mov loopne xchg out xchg mov pop push repz dec out push flds (bad) clc mov cmp daa out out scas (bad) mov lret sbb imul in xchg mov (bad) push or std loop dec xchg mov scas in in and out cltd xor pop jmp pop sbb and out cs mov (bad) out add jns (bad) (bad) repz imulb inc fwait out and and scas out or rorl cmp ljmp pop test (bad) movsl pop cwtl jno jecxz lock cli arpl out ret lods xchg sub dec mov and push sbb in nop and sbb pushl ror and mov inc cmp adc les ds lods mov dec xor aas push mov out fwait sub sti adc adc dec paddb insl push mov lds das dec out lcall repz arpl je cmp adc out stos or aas mov (bad) in out pop sub pop orl or in push aam out jns xor out dec adc jnp jb inc out scas out in lods cmp inc out push jge inc lock mov insb out push jecxz inc mov mov sub stos in or lahf cmpsb imulb (bad) xchg lock cs mov mov int3 jae add das pop adc mov les fwait mov add daa stos lods dec out lret stos sbb adc lret xor mov xor and leave push ljmp outsb orb mov adc xor gs adc ss ret out mov clc pop sub cmp cmp mov add shrl out pop aas jge ss sub roll iret sub sub aad cwtl mov pop pop mov out mov and rolb ljmp out std push ror rcll lds jmp mov push xchg mov loope lock int3 out cmp mov cmc mov sub out test pop popa outsb insb iret jmp mov dec push insl out cltd or cmp test out daa jo imul mov fistp adc cmc mov inc daa cmp cli cs bound fisub out or push lret cs xchg and out inc xor je setno cwtl cli imul jp pop push cmp or pop dec adc dec in stos mov lds out rorl sbb test push out lea mov in aad inc test or ljmp (bad) loope scas es outsl or in sbbl pushl jbe jb out add loopne cwtd fwait insl xchg or sub mov and adc fbld xchg pop out popa mov ret popa mov out adc push jae inc rol adc pop fidivl sbbl dec arpl ljmp and int out insl cmc jmp sbb (bad) in je imul sbb pop lret imul jmp out (bad) mov hlt push imul cmp cmp out cld out add (bad) out dec jns in inc scas inc sti jg cli pushf fstp mov fs pop out push add jae cmp lods push dec xchg in and or ljmp cmp fnop and push mov cmp out arpl shll inc push xor in les test pop (bad) mov insb push mov out dec xor call test pop push mov loope or mov xchg push mov negb sbb jb das out dec lcall cmp mov mov xor push aaa out xchg insl pop scas test repz mov out add xor sub adc adc testl in out push dec adc (bad) sub call scas xor sti rclb adc lret pop out sub test rcrb inc mov pop mov sub (bad) jmp out test test xchg cmpsb mov xlat mov xchg jne jl iret outsl in nop imul mov cmc xor faddl cmp into out out daa clc aas (bad) and add (bad) (bad) jae mov cmpsb test test fisttp sahf cmpsb daa out inc pop push jo or aam ficomp sar std lods bnd inc xchg pop or push mov out lcall sub xchg pop push xor rorl stos (bad) outsl out mov mov and je xchg out sub (bad) loop mov add movsl lcall jle cwtl xor jbe das xchg movsb aam aas out es inc mov push pop (bad) mov xchg mov pop cmp sub lcall pop jg das mov insl es loop daa rcr (bad) fs mov lods cwtl pop cs (bad) stc jb and mov or clc mov push pop dec add cmp in pop ljmp push shl push sbb adc rorb cmp sbb out pop jb andl dec shrb ljmp pop add test int insl gs fbstp out dec shlb incb sub ljmp pusha xlat sub leave pusha mov das in out loop sbb jb jb jnp fisubr xchg jg mov out or mov sbb out test xor lret mov out into mov stos nop out sti subl mov inc push data16 mov ret add sub pop xlat xchg clc out mov repz out sahf jb mov fbld adc in and cmp in add xlat xchg cmp stos iret repz (bad) xor pop jle add mov sub jae mov pop insl sbb iret inc int mov test testl sti add cvtpi2ps pop xor ljmp loop and sub jb mov aam fild mov and out testb rcl les mov dec xor icebp daa ljmp push adc jle stos repz inc add popf sbb mov out (bad) ss cmp icebp lock insb xor fnsaves xor out bound sub mov popf mov and out rcr les cmpsb out push jb lods jnp mov xchg (bad) ss ljmp out pop xchg out rol loop xchg pusha sub fucomip test dec out lods pop and (bad) lock xor jge out loop sahf cmp (bad) iret out mov xchg out (bad) jmp mov and ja out mov in cmc imul sub hlt push out xor addl ds xchg jecxz pushf lret rorb (bad) xor in test add pop jg and sub add out lods jecxz hlt arpl xor lock test mov into adc addr16 xor mov out sbb sub xor fcompl repz int inc in mov out pop push fidivr or loop xor inc push clc sub mov pop push imul inc jnp out movsl out ficomp xlat jno bnd xchg jge jmp xchg pop xchg shll mov in dec fmull out lahf loopne rclb sbb rorb movsb iret out push sbb aas (bad) adc lret dec xchg shl mov in ljmp leave out sbb cmpsb ret jecxz iret (bad) push jg popa pop int sub cmp in sbb repz call add int3 js mov adc call dec mov pop int gs out mov sub (bad) mov popf mov (bad) stos clc std arpl mov test add shr js pop pop lds fdivs in or fildl mov and or pop shll jo add jns adc jbe add ret out cmpsl dec mov mov out mov je pfrcpit2 sub mov enter mov out mov mov mov ds in push out and es std xchg pop ds (bad) scas outsl in in and out jl idiv call sub aaa lods jns (bad) mov and push hlt stos aas addr16 xchg mov sti movsb mov out das mov rcrl xchg out (bad) movsb idivb out pusha pop sbb adc out int out pop sub pop adc fwait loopne (bad) pushf out mov movsl sub push scas aaa jge mov stos cmc outsb cmp inc idivb pop ss push and shr testl cmpsl mov xchg enter in mov xchg mov mov mov lret js rorl add mov cmp mov les addr16 pop insb out pop (bad) sti jno pop add clc pop add sub fs outsl and and or xor mov (bad) push rcll fucomi mov (bad) loop pop mov shll sarb xchg notb loope cwtl push in xchg or xor jb push jmp out cmp (bad) (bad) jmp fcmove in int3 shll out fwait lds push lret movsb add cmc (bad) shlb out int3 aaa push lock sub (bad) clc out cwtl jg pop sbb decb and mov testb xchg or out ljmp addl mov inc into (bad) pop out out dec mov jmp out dec inc push push (bad) jge xorl push lock xlat int3 stos (bad) fist lock inc lcall imul sbb pop pop jns jns pop pop out fwait stos in lods adc test jmp add adc into mov ret lds push psubb in push sti out lcall and mov out call loop xlat jle shll (bad) jmp or mov xorl adc lcall jbe fistpll int out dec or push mov jbe in dec mov pop mov gs sbb xchg sbb lock out add and int3 adc mov xchg pop and push movsb mov dec fs jns xor out or js out pop iret fwait push pop jb lret pop sub pop jge in add jae int3 into pop out mov xchg pusha das mov jne out out xchg sub out dec or ds cmp xchg push dec jo imull call movsl fmulp push inc data16 fildll rcl stos jb out clc (bad) ss fcoml out jbe or out lock jne das jo and loope or pop cmpsb pop xlat nop dec in cmc push out pop sub cli jecxz sbb pop sbb (bad) pop loope ds out sbb lods push mov lcall jp mov jno mov out (bad) and sub jae fstl out call push pop sub add dec lret insl test test aam out cs movsb add lea push jno fldt ret cmovl fcomps outsb inc cmp push es aaa mov addr16 mov mov mov out test andl stc int3 arpl push add ja test push aam mov scas inc loop jle inc ret sbb or jg jmp gs (bad) shrb pop insl aas mov inc fs pop enter push shlb xor int3 dec xor loopne out (bad) cmp jmp xchg dec es outsb and pop adc lret adc mov sub adc pop add out loope fdivrs test nop and or out stos pop push fcmove inc pushf lcall inc enter lahf mov pop jo insl decb xor loop add int insb divb push imul jp push outsl out scas dec jae inc imul pop mov xchg call xchg mov lods int xchg out gs xor adc pop pop (bad) jbe or lods call dec shrb out ljmp out lret sahf lods jae mov out mov inc in sbb pop dec subl das sub out sbb nop push push pushf dec out pop jg ja pop jge (bad) (bad) and ficom (bad) out mov mull out rcrb ljmp pcmpgtd imul sub push mov inc out std adc sub mov jle pop scas mov pop scas lock dec push jp out dec and pop lea lods add adc lahf dec sbb fs out std popf sub outsb out sarb jmp adc jg or sbb add mov add mov mov sbb iret out lret add mov adc idiv stc stos mov jno out jnp inc out rclb mov mov mov popf std xchg mov es mov fdivrs popf adc push sub das imul xchg cwtl lods push into pop incb cld pushf pop cmp in jmp call arpl lea jns jb in pop cmpsl cld and mov fild jns out out xchg xchg push lods out cmp cld jo jnp loop jb dec lods and (bad) jb push mov jge sbb xor (bad) inc cmp clc adc pop push mov sub cwtl subl cld sti jbe sarl ss movsb add sub cli dec in and mov or xor jmp gs andl lcall sbb frstor xchg pop jle jb jb dec out mov xchg push cmc dec fistpll jns lret out popa fs call xchg mov adc dec outsl out mov fildll out xchg pop and jl test fist lods push pop cmpsl lcall mov pop sahf push fidivl sub out adc push jno out xchg aas mov std pop jmp mov pop stos mov mov xchg es inc call pop loope jne,pt int3 imul test adc lock pushf rolb pop shlb cs rcll mov push mov mov cmp sub xor xchg nop cbtw andb pop out ja push xchg loope testb fs lcall or pop mov xchg flds in sbbl dec pop cmp loop add mov pop jae aad out test out pop movsb mov mov mov pop dec inc push xor out call shr in dec cli loop pop daa test ds pop test stc jmp sub rorb loop adc sbb sbb fdivl jb (bad) sbb adc mov fadd roll out outsb jmp mov pop xor (bad) int3 cwtl out aam neg dec add nop out pop loope setb leave pop out bound add sbb out xor sarb dec stos daa lea xchg lods add mov or dec pop fcompl mov scas cmp sahf ret mov xor xor insl and inc sbb lods jo out lcall sub cmp mov shlb mov leave out and ljmp pop inc adcl stos insb pop and cmc jmp imul mov push (bad) push (bad) bound in pop inc je inc out ss xchg push add push stos out mov xchg loop lods popa mov and gs add push jp pop (bad) lret jne (bad) out mov inc cmp out movsl adc pop pushf cmp ss jbe add sbb dec xlat les adcl sbb aaa fadds jmp nop cli dec push push test out xchg push lds jb mov test imul test ds (bad) pop ja cmp shr jle xchg into jne out xlat sub int aad lds dec imul movsb jnp or (bad) xor pusha jmp popf iret push jl call cmp test adc mov push dec out popf add std out or imull lcall stc cmc out fidivrl pop cwtl pop or out imul out mov sbbl adc pop adc jns dec cmpsb pop lods push loop aad mov jno sub and pushf push aas call out imul jae push pusha mov (bad) sahf dec out and push mov dec cmp ljmp sub out scas popf lods mov out mov pop dec in mov scas not jecxz dec nop out pop mov xor mov pop mov andl inc out ja inc movsb call sub push push or add fimull pop mov pop sti cwtl jge lahf in dec adc adc pop fsub loop push imul sbbl cmp inc mov push out test outsb sub decl rclb decb adc adc pop sbb mov dec (bad) stos add fisttpll pop jecxz mov nop ljmp out xlat out mov jae loop out add ljmp imul pop mov ror clc pop (bad) out push jmp lret push (bad) out xchg and sahf mov xor inc mov or test cmp sbbl daa and inc movsl xchg bnd pop xchg les (bad) dec sub je mov cmp push cmp jmp sahf (bad) shrb cmpsb mov add pop mov ljmp xchg arpl subb out jnp int3 sbb push aam out xchg ss test cmp pop aaa sahf cmp repnz mov jae and test sbb (bad) call push jecxz popf stos sbb jmp fdivrp mov popl out es ss das jl pop sub ljmp insb sbb out adc sub dec sub (bad) xor stc lahf test add in mov mov in cltd test in inc in xchg in imul out push mov or in xchg sub lcall pusha out ljmp cmp ja cli dec jmp dec cmpsb mov imul mov fucomip jne lea lods pop js popf fwait shrb cmc pop sbb push adc call and xchg and add dec push insb xchg xor ljmp nop adc push (bad) aam cmpsl pop sub push lea inc out pop inc ret shr mov xchg adc out std sub pop out mov ja inc sub or cmp xor fincstp xchg in pop mov mov sub loope sti (bad) pop xor addr16 in les out mov movsb mov stc gs xor mov mov loop jo out inc cmpsb mov sub sub jge cltd lar out outsl test jo pop aas jge ret faddl xor addr16 out and fisubrl adc mov out sub xchg es (bad) stos lahf mov movsl adc rcrl in pop out addr16 (bad) repz out pop test aas inc (bad) sbb inc inc jnp sbb sbb out scas outsb push mov push push mov pushf aam and jl fistl mov mov out sub xor adc cmpsl ljmp iret test out aas lcall jnp xor out sub cs pop out repz xor clc imul sub repnz cmp mov cmp je stos rcrb jne rcrl pop cmp jmp vmovaps xchg mov stc lea gs pop pusha out test inc jg rcll insb out (bad) sti push jnp call ficompl add stos ss add add divb xor repz jmp out xchg inc sahf sbb movsb jl dec xor ja es jb in test pop (bad) out shrb mov sbb sub into xchg sub sub dec out test jb out mov jae ret inc dec mov (bad) or out shll push jb loope out daa xchg adc les stos xchg xor mov add ljmp mov outsl sbb adc (bad) (bad) (bad) cmp outsb sub add or in xlat lods out pop enter pop jl inc push outsb cmpsl mov out pop dec pop pop or data16 addr16 aam out (bad) mov jae ret mov xor out test cltd out inc pop inc cmc adc xchg (bad) std pusha loop cwtl sbb xchg jmp xchg nop xchg inc lods popa xor xchg adcl push push icebp les imulb movsl jmp push push out syscall cltd rolb and out pop push subb cli out add pop cmpsl lcall jg fscale iret test (bad) loopne orb sub lods mov jnp (bad) fdivl (bad) push jmp mov cmpsl (bad) out (bad) out divb jns sarl in lods fs sahf imul repnz int dec xlat pusha hlt adc sahf out (bad) aaa push scas cmp movl jns pusha or popa sub mov xchg mov jnp flds pop adc out loope adc jno add cmp xchg mov loop sti cmc out sbb nop add hlt fbld adc jg jns add cmp arpl adc out push sub sub push dec xor add fldl xor mov sbb jl incb inc shr and xchg rcr test mov aaa adc xor ja mov dec out push push pop sub cmpsb fidivrl outsb ds add add inc ret sbb out or (bad) lret out pop aam xor hlt aad out push in mov out cld jg cmp (bad) dec fucom pusha cmp add popf xchg les cltd sti out fisubr push inc add pop jmp test lea sahf mov icebp lock jp xchg cmp pop xchg jo jle dec sti in test push mov push xor (bad) sahf adc lea jl aam imul cmp mov popf ja and out fbld cmp mov push cmpsb (bad) hlt test jo in das push adc out jns push inc mov mov call cltd dec jle daa cmc mov mov jge inc pop repz cmp sahf cmp lods and mov cmp lret jb cmp cmpsb lods imul push notb in loop outsl fildll in xchg xchg call icebp pop fstpl pop or xchg pop xchg cmp cmp xor cmpsb xchg xorb out inc adc mov xchg mov out lods pop inc mov out push jg pusha xchg cmp (bad) hlt fisubrl bound jl popw cmp dec or lea roll lahf mov jg out jb in mov cwtl ss adc fistpll (bad) out push in popa adc into ret mov pop shll insl je xchg loopne add iret cwtl arpl fs out mov iret inc push outsl push mov or xchg divl out jmp ljmp repz test mov fmull frstor int add inc xor loopne cltd shr fadd repz push aad arpl or jbe jo push ljmp cmc jl sub outsb test mov mov rolb negb out dec push mov adc or pop jno imul or repnz movsl lahf stos xor into iret out push dec push (bad) pop and pushf out xchg and aam lods arpl mov out dec pop fcoml out loopne adc xor adc mulb cmp jnp test xchg jbe pop (bad) out add nop jg iret jg pop out cmp addr16 add mov aam test ss push and mov imull lock stc jae (bad) xchg lret and imul mov iret sbb imul ja shll dec jne inc aas jbe sbb pop iret dec cs cmpsl pop mov ret popf out and xchg xor pop mov mov in or jb arpl cmp inc out or jbe (bad) out into xor mov loope scas cs pop sbb add dec push out aam sub mov sahf lret out fstl mov loop push sti into lret inc xor cld and stc iret sbb in loop leave pop or out xor cld repnz repz inc mov sbb jg adc jns loop pop repnz sahf sub movsb ljmp popa mov or and inc jo push cmpsb and pushf into out cmc in pop xchg ljmp cli mov mov and test (bad) add push xor shrb (bad) mov jge loop and dec mov fisttp or out stc lret test xor mov mov out (bad) adc pop aad jnp test test or add stc xchg mov lret leave repz loop je popa xor adc out icebp mov daa clc mov push ljmp sbb loope into mov inc pop mov sub ds sti jnp dec test std pop xchg dec out pop mov out jmp adc jge add cmp or adc sbb or aaa push inc out jbe out push test dec push clc cmp (bad) stc inc pop pop loop or ror mov cmp iret call stos loop leave cmpsl jae sbb fsubl xorb push out sbb or or (bad) (bad) mov int test iret enter (bad) (bad) je shrl in cmp and inc push pop int3 and add or lahf iret fwait mov arpl pop sbb dec push jne out sar (bad) addr16 mov adc out lret jb push (bad) push enter mov (bad) and out rolb lock loopne mov out stos imul jns and xchg scas dec (bad) or popf pop ds lcall add mov mov fs pop stc in dec xor addr16 (bad) dec xor lds adc xchg outsl icebp fwait jg je and adc out dec xchg fsts iret mov adc push xchg fsubrl dec out sbb lcall loopne adc test ljmp mov lret into jg fidivrl (bad) push or out stos cmp movsl ret pop (bad) (bad) out inc sbb xor mov pop and lret out adc data16 shr pop add rorb popa sarb ficoml sbb dec dec fsubr std add in sbb outsb das enter cmp cmpl pop imul in jbe lret les xchg xor jnp sub sbb ret or jl xor or je sub call dec mov mov xlat jo mov (bad) sbbl loopne out sbb icebp dec jbe sub mov (bad) jecxz aam arpl fs cmp xchg adc lcall out mov xchg insl out inc int3 out pushf out outsl jl add jo nop int bound lahf out (bad) pop ljmp js stos mov ret xchg push loopne jb aaa mov pop loop cmp popf ljmp and mov push out cmp inc cld mov cltd jmp jge push das xchg cmc maxps add in adc mov test movsb sub xor jnp xchg out repnz add dec int3 pop arpl ret push mov mov rcll adc pop repnz pop push int3 fucompp popa sub cmp repz or cvtpi2ps shrb push cmp xor out loop pop sub mov adc cwtl rolb pop das pushf sbb mov out xchg mov sahf or dec in fiaddl lret pop cmp or aas pop mov incb add sub (bad) push ret mov mov loop out into (bad) mov rcl out ret stc sbb loope (bad) and cmp sub cmc push rcr test insb jge jp rclb out mov out mov (bad) (bad) out fisubr rol iret sub fiaddl or push decb (bad) inc mov ret in jno jbe (bad) xor lds shlb push pop out push addr16 out mov out xor out imul out lock test daa mov cmp add loop pop cmp push out inc jl xor cmp mov je cmpsb adc pop sub cmp sub (bad) push xor push js pop test in inc pop or out pop fstps shr push xor dec pop addb sarb xchg loop or out fldcw inc loopne jge out mov jnp lock lret pop sub mov mulb mov xchg (bad) fucomip lods jbe fst ljmp es sub mov jp out jb sbb dec mov shr pop and adc mov ja out rorb jbe and (bad) mov cmp jbe out movsb pop es rcl (bad) out adc or or cmpsl inc push fisubl and cmp sub int3 xor out stos sub in xchg xor lds pop sahf mov push cmp and xor (bad) cmpsb sbb (bad) xor xor out (bad) cli repz pop je cwtl icebp xor aad rolb cmp repz mov loop jb inc jo lret pushf movsl icebp cwtl push xor ret iret sub mov arpl adc cmpsb or mov mov out push mov xor out aaa divl mov movsl out xlat sbb sub push stos out (bad) fwait leave fdivl test nop add jne out out ret xchg test mov or mov out dec stos mov lods out xchg jl jge mov cmpsb pop out lds into pushl inc xor aas stos xchg xchg dec (bad) flds pop lret (bad) int3 jmp outsl in out add loop stc aaa fst out xor lods cmp out push movsl dec shr dec xchg out orl std and (bad) sbb ljmp dec sub mov iret aas into pop arpl jo mov mov (bad) jle je xor bound cmp les jecxz pop in std popf aaa out push sbb mov fimul xor lods out std cmovno out push jae pop and loopne (bad) shr jno and (bad) sub add lea xchg insb xor je dec ds (bad) fild adc out fidiv in stos out imul fucomp sub mov cmpsb push jns add sub xchg mov cmp or or inc in push out test test pop pop call jbe mov ret mov ljmp in xchg pushf cmp out adc les cmp add mov out (bad) dec sbb push pop out pop mov mov and nop cmpsl sbb cmp xor into or pop pop call (bad) scas xor sahf sbb stos imul lds (bad) jae mov inc add arpl mul pusha mull aas inc push mov push lods xchg (bad) decl mov xchg (bad) nop cmp push jp sub popf mov pop loope imul out adc into mov pop inc mov and inc xchg mov xchg out mov cmp mov or push xor mov out sub (bad) out pop ss loopne scas jg movsb test out fs adc sub outsb dec jle repnz jecxz mov and (bad) popf push inc cmp push pop inc fwait mov test cmp clc aas cli mov out popa insb adc (bad) mov fiadd sbb ss mov or (bad) daa pushf scas fsubrp lcall (bad) fcoms jmp std sti ljmp xor out and pushf push xchg fnstsw inc and jo cmp dec scas add sub jle cld xchg jno stc repz xchg adc lds and or popa or aas out out gs scas add (bad) pop and xchg pop pop call lret outsb jae mov dec jne xchg das xchg and jmp jbe popa sbb jp mov and add lret ja lods adc (bad) cmc pmaxsw sbb pop std mov cmp out (bad) sti ret cwtl push push rolb shr in push (bad) xor sub inc popf jecxz mov (bad) mov arpl dec aaa inc jbe mov movsb (bad) cmp push (bad) xor sbb xchg xor push add adc test out sbb lea out add ret mov dec (bad) mov push out sub add out push scas outsb or dec push popa cltd (bad) mov lds cmp xor arpl adc sub cwtl cmp out jecxz inc pop fldt pop sub inc dec cmp movsl xchg jbe out mov in frstor xchg jo lods pop in popl cmp fist adcl outsb or fucomi mov imul mov (bad) andb outsb (bad) out xchg in xor jmp jbe fmull ss das pop or out mov push addr16 fldenv xor js pop push inc test inc cwtl xchg and push scas ret cmp out and and push stos xlat or dec dec xchg mov ljmp out gs dec jge sar adc inc pop int stc pop dec bound push push cmpsl out jmp mov andb into repz (bad) xor sti pop lock int3 nop sti pop or jl outsb arpl movsb out jmp fucomp lahf popf sbb out or mul mov cmpsb add int mov out dec mov cmpsb mov xor mov mov adc lret out push cwtl and add mov jns lods or lock xchg out repnz cs sub cmp (bad) jnp daa xor mov mov fldl pop jg repnz data16 push out pop push sarl sbb jae aam xchg cmc push iret adc cmpsl popa dec xchg psubd jge pop pop (bad) out stc mov in add mov fildll test in ljmp xor fsubrp ja sbb scas data16 xchg jg out in dec out pop cmp dec out hlt cmc xchg out push sbb and push mov lock mov out jmp push enter cmc out clc fadds push out js jp mov lret mov (bad) pop cltd out int mov lcall sbb (bad) icebp in leave xchg xchg pop insl cmp cltd stos (bad) jmp sub sbb loop movsb outsb jle or lret push cmpsl les out xorb sub inc add stc aas ljmp out scas xchg das cmp mov outsl fidiv xchg pop lahf test gs into ss out imul xchg pop lods ljmp rdmsr mul (bad) call (bad) jbe out or loop mov lea dec out testl push pop (bad) ja sub mov push out jb in lcall pushf fs fsubs (bad) out pop mov stos addl dec out pop sbb scas jne inc push (bad) mov lret in lea jl test (bad) in jnp pop pop sbb ret out xchg adc dec push cs mov divps xchg stos mov mov (bad) in std push push stc adc lahf jle (bad) mov push mov pop mulb dec out fidivrl push or push mov inc out or out stos dec test mov fsubrp (bad) popf cmc out mov insl adc cltd and aaa sbb les jg fldz xor cmc decl xchg mov pop insl dec cmp shrb (bad) or imul in loopne aaa mov stos dec cwtl lret cmpsb aad out dec mov jp pop arpl pop leave add xchg test in rclb mov or sub ljmp ds sbb js (bad) and (bad) inc (bad) in jo movsb mov (bad) dec jmp sub mov lea in lret inc adc out cmp sbb pop lahf faddp jbe xor cmpsl out sub out lds (bad) mov out push and dec imul adc aaa dec jg push mov stos push adc lret xchg jle mov hlt loopne mov pusha into sub mov aad loopne enter sub xor or push sbb (bad) lock aad xlat lods sti out or in xchg out (bad) shll dec out dec cmpsb cmp enter mov addl rcr out push mov (bad) int and add insb ret pop movsb xchg loope aas fucomp adc enter or js xor stos and imul bound out insb icebp outsl jb pop daa mov loope out mov sahf and push adc adc pop add cmp adc adc mov mov nop test mov dec adc inc in out and or iret mov jb pop xor loope int3 out push (bad) popa mov out lods adc test xchg or jmp imul aaa mov cmc or inc pop daa jge cwtl out lods leave sbb scas ja xchg sbb adc push scas pop and mov test jge ja outsl int loope hlt cmpsl inc mov pop sti dec loopne adc or test rcrl mov arpl and sub lea out mov call lcall das fldenv call add nop fs repz addr16 or jmp lret stos xchg rdtsc dec test (bad) scas scas lds int3 xchg je xor lods popf or pop in shll out mov xlat pop xchg inc pushl sub xchg mov cmp popf xor dec pop loopne pusha subb mov lahf shlb sub out pop mov (bad) out lds (bad) xchg in mov fsubs (bad) movsb pop mov out dec fstpt out and or lahf adcl repnz and mov out adc mov out ret enter or push div sahf or out out adc aam cli and (bad) aas ret and test paddsw mov fbld (bad) imul mov jle sub test out les add push add xor test sbb out (bad) push test lods jl das pop mov repz aam out adc fiadd push imul (bad) and bound ja out repnz shll pop mov out mov sub push iretw insl sarb jae out nop das push (bad) xchg into adc xchg inc add lret adc push push rclb out sub aad rcrb loop rorl add pop mov (bad) mov fdivrl pop xor lea push jnp outsb (bad) sub ja sbb pushf fistl (bad) push mov jg into lret (bad) pop mov xor pop das pop out mov sti mov insl jg out data16 dec push push (bad) pop inc mov fs stos jle imul xchg stos rorl or notl outsl mov sub iret mov mov loop jbe jmp out cmp in jns mov je mov in mov inc ljmp pop push jne jl xchg adc out jnp stos mov (bad) mov cmp push jbe out enter jle jmp (bad) cmp cmpsl outsb mov sub add cwtl (bad) adc sahf inc (bad) pop in int3 push mov jns push jnp (bad) insl mov push fstps out jge sahf (bad) mov das daa add and rorl popf push push sarl arpl inc xchg fsubr pop pop adc nop and das scas imul test (bad) shl jp mov lcall ja mov xlat loope inc mov dec js insl repnz mov lret pop je pop or sarl movsb lcall fbld and dec xchg mov ret out fmul rclb cmp sbb add stos jne pop loope jmp and daa out lock push test dec incb imul sub fisttp mov je inc (bad) out (bad) scas jmp rorb out jp push inc inc sbb loopne mov sub sahf sub out xchg and test mov inc mov cmp call out lock test inc lahf test out mov pop sbb mov adc (bad) push arpl sbb or in push xchg mov xchg out loope adc cltd out cmp xchg xchg and mov sub ja out push call pop (bad) and ljmp out mov arpl inc outsl out and lds shlb out add xor lcall pop jg pop gs mov lret imul cwtl out xor stos nop repz add sbb in cmpsb xor stos mov in mov fbld xor in push push out jecxz rcrl lret out mov inc jnp out popl test sub push jbe out testl jno or sub mov scas push fstps adc out arpl loopne mov (bad) aas mov dec insl jnp out dec and jo (bad) imul in insl jl into rorb subl pop mov sub test and fisttpll or cmpb aad cmc or xchg mov (bad) sbb out sub cmp sbb dec mov out mov cmp xor aaa and jnp out lahf dec pop sbb cmc xor in (bad) inc jecxz cmp ljmp mov mov and mov or xor mov insb in outsl aas inc add clc shl or out jmp into push dec incb hlt loop jno in mov out sbb fistl fisubl xor int3 pop or test add mov sub das stos jnp pop mov jb (bad) jg mov clc call gs imul ss push dec fsubr jno mov imul mov fs pop aam (bad) stc cmp mov imul lahf inc mov out fild or lods fist cmp mov (bad) data16 cmp cmpsb xchg cwtl jbe sbb pop mov das out insb sub push dec (bad) pop fisubl imul das js test pop stos outsb sub out inc stos (bad) mov mov inc push add idiv sbb xor pop xchg in faddl fldt push adc inc or dec pop rcrb out inc das mov pop (bad) ds add aad (bad) rcrb jne and jecxz push xlat xchg es out push into jg incl out push clc mov aas mov stos and fildll repz sti js jl (bad) out aaa jo mov pop cmp adc ret cmp stc and (bad) sub gs and jb (bad) popf xor inc out jecxz push cld jne and out inc lock push mov out ffreep pop cmpsl adc mov xor (bad) sbb fcom dec in sub mov out sub int3 lcall pop orl cmp mov ss cltd mov cld xchg pusha pop ljmp fldenv test sti mulb (bad) jmp xchg cmpsw (bad) das iret push jb sub push xor mov adc mov push into out test outsl (bad) out outsb and jl pop data16 mov add adc fidivl out add sbb pop iret ficompl jo jno sbb fistpll cld jge ljmp sbb or cmp inc movsl ret mov stos outsl call imul jne mov mov lahf cmpsb add inc aam add dec mov fsubrp adc shr pop (bad) xor sbb pop out inc mulb outsb jecxz fsubr lret sbb cwtl jnp out inc pop mov in cmp pop fwait dec add xchg test mov and (bad) loop aam test sti sub vpsllq dec cmp push es inc outsl rorb pop (bad) jl popa scas lret ljmp push pop ja out jno icebp mov mov out insl mov dec out mov into (bad) jbe push rolb xchg push jecxz sub out pop inc push push add stc mov lahf push ret dec pop es not cmp out fstpt cmovbe push and in push sbb out push movsl jns xchg lcall fwait out pop mov stos outsb mov mov out mov xor or push out xchg mov jbe shlb (bad) aam out je xchg jne clc mov mov out sub out ja lahf and or ljmp lods pop in lahf out dec repnz xor jno out in sbb dec dec scas out sbb xor jge ja fistpll mov in popa (bad) push dec out and cld orl out fstps mov push fistl es inc out jg daa test lds cltd lcall fldcw push mov lds out int adc xor notl sub outsl jb xchg out xchg push out mov and jo or mov ror sbb out cmpl jp nop repnz push and popa xor fldenv inc adc pop call out js mov cmpsl fbld data16 imul sti fildll inc xchg xchg add adc push outsl jnp mov mov mov jle icebp jg (bad) add lret out add xchg dec sbb scas push xlat lcall sbb out xchg movsb cmp fucomp ds mulb cmp inc fistp dec out jno fiaddl out cli mov sub out pop dec lcall mov idiv push dec gs nop mov (bad) pop mov cmp cwtl stos out call adc or incb cwtl pop iret maskmovq negl loop push sahf jb out iret out and out jo (bad) jns xchg out mov inc jb ljmp mov les mov cmpsl mov lahf and adc ds or fnsave jmp (bad) setle dec pop out mov movsb xchg in mov or lods adc loope test xchg rcr jno negb xchg hlt push mov xor scas jl inc pop jb mov push leave add inc jno (bad) mov jg cmpsl enter pop gs xchg dec add insl jns mov xor (bad) scas cli mov shr gs in test call inc add mov es jp cmp lret pusha adc (bad) (bad) aam pop add negl jmp psubsb and jo aaa mov mov push mov aad in pop and enter cmpsl mov mov fwait inc dec out jns hlt xchg cmp scas loop sbb push dec jmp addr16 jne stos pop js loopne pop xchg and jmp pop push push in adc sbb fsubrp ds popf fistpll stc jnp xchg ljmp inc es mov movl pop jns icebp cld jge and test out decl cmpl out sbb stos mov sub movsb lret loope out mov std xor xchg push aaa xchg pop and data16 out xchg out das xorb aas out out or icebp ljmp stc sub jne pop pop popa gs or sti fucomip sub jae lcall cmp sahf mov out lods jle xor adc mov arpl xlat sub les lahf xor jge out push jle cmp in je sbb xchg rclb loop xchg mov mov mov insl push std rcrb outsl test enter lcall mov adc xor lahf jae aaa jnp,pt mov dec add mov out into pop inc in enter out lock dec dec cs flds fsubr arpl iret mov inc dec mov daa and lret or push iret xchg adc pop nop xchg (bad) pop mov out sub mov dec out jbe out sbb out mov push fistp push pop dec popa cmpsl (bad) jo dec mov loop imul clc lar cmp jae or adc cli ja (bad) outsb lods out mov pop jb out xchg test pop or (bad) shr fldcw dec (bad) xchg js out adc adc loopne sbb mov xchg cmc xor mov mov out mov xchg into mov or sbb (bad) out xchg jge aas jl jmp out icebp adc ss jno out scas add jle push out jbe mov repz jo sbb jae out sub leave orl test push add add inc fmul jmp cltd imul test mov add xor movsl aas push inc fucomp stos cli mov and or mov psubsb xchg loop idivb popa xor dec lahf adc call lcall (bad) (bad) mov jmp pop pusha inc insb pop repnz dec jmp or xchg in nop jecxz push out test das js ljmp sub xchg push mov cmpsb jo push push mov idivl push fistpll (bad) call fsubrl out lcall and push ror imul sar mov xchg mov rcr adc jle push aad inc call aas adc xchg ljmp out sbb nop sub or out adc repnz jmp movsb lret xlat cs push cmp movsl mov or push ljmp sbb pop mov out sti push xchg mov out arpl xchg out mov mov rorb jmp xchg and mov icebp out adc and lahf fnstenv leave or addr16 mov aam fmuls xchg jg jp dec pop inc push loop mov nop scas push in add fsubl inc inc xor loop xchg mov xchg xor lock (bad) out xchg xchg dec sub dec jbe mov cld out out jnp mov out in xor mov lret cmp push mov or test out andb insl out data16 andl loope inc inc mov movsl out jne dec mov mov mov out jns rep out movsb loope ficompl pusha arpl out bound pop cmp popf rcr popl outsb sbb out add data16 loop out (bad) pop xor les push or out jnp insl leave or loopne pop dec enter adc cld xchg pop out push mov cmp jmp mov jl ret adc add cs dec inc cmp (bad) mov (bad) out outsl add mov or pop scas fcmove insb dec in das push pop out cli dec jns in and out (bad) inc mov mov out outsl nop or add push cmp xchg adc gs faddp sbb aam out outsl or ljmp sahf out dec add stos iret int scas out add and adc in ss loopne ja mov arpl sti jecxz add jp lods out jb jae aam loopne pop js in aad in or jg les loope mov cmp int3 mov (bad) mov pop lret shlb shrb xchg sbb or (bad) sub mov sahf popa clc pop repnz lds ss mov pusha lea mov sbb es add out mov repz mov push mov out inc xchg xchg ljmp sub insb inc arpl and mov cwtl sbb push jbe aaa out cmp (bad) xor mov jmp pop scas cltd push bound fsubr push fwait add pop dec (bad) xor loope sarl roll sbb dec fstl popf in dec sti pop js out sub mov push jmp jae inc mov rcrb outsl out lods mov les out repnz loopne pop movsb sub and out push and jbe int out jno inc mov fcomip pop pop ficom xor sub fistpll cmp aaa add jg dec icebp test int cli mov lahf lods ljmp test adc jno in pop ret xchg out scas (bad) sbb mov (bad) divl cmpl std fidiv mov int loop in and pusha mov jnp (bad) popf leave test mov fmuls add add (bad) mov xor loopne arpl insl lock decl hlt mov in iret out sbb push mov out lret (bad) add xlat xor and sub mov push inc add fimull repz mov sbb mov punpckhdq or out out test or cwtl in stos jno sbb adc jns pop sub push les (bad) mov (bad) fwait mov fstl sbb rcrl cmp (bad) (bad) sbb push mov into adc jg lcall xchg addr16 lods imulb pop lds out pop xor xchg call push outsb mov enter loop out pushf fldlg2 arpl lcall lret rclb ljmp out lea fsts call and stos cs hlt mov lea mov out (bad) scas hlt push sbb imul add rorl mov mov pop and mov dec add rcrb fwait push aas out jg xchg out in nop popa mov fisubl imull dec cwtl insl lret incb loopne cmp out push outsl popa xchg sbb (bad) xchg scas enter cmp loop jle pop jp jo cltd ffreep cmpsb addr16 ljmp jg push aaa rcl or mov adc sub stos out int push pop ficoml push out cmp sub lock push (bad) lret cmp sub (bad) aaa mov lock enter iret je cmp xor cwtl push push xchg out xchg icebp lea xor ficoml test mov ficomp adc jg push js out push imul cmc stc mov movsl pop (bad) jo xlat lock xchg pop mov mov mov push out jbe incb iret mov icebp test out mov sbb jbe dec mov int3 adc jge (bad) out clc (bad) repz out sbb add pop jecxz jle,pt outsb push iret (bad) mov ret (bad) mov mov neg pusha push stc leave cld xchg mov adc mov push (bad) out fs scas pop inc test out mov cmp stos out rol add and mov out mov mov push out inc mov dec inc fucomi lea sub out mov xchg cmp xorl sbb xchg xchg (bad) outsl cmp js jbe mov iret mov std scas pop loop out mov pop xchg in pop aad or dec xchg out xor loope out xor (bad) imul xlat mov cmp in dec inc clc sarb push inc mov int in iret out cltd fisubr pop xchg dec mov out movsl movsb repnz out stos (bad) jecxz push or cltd popl mov pop lcall mov lods cmpsl mov push jle push pop ret jns cwtl push (bad) xchg or pop pop xor icebp mov roll orl imul (bad) out push mov popa lods xor xchg push in (bad) jmp jg dec hlt das out xor shrb xchg out dec mov (bad) adc lods mov jo push in bound out roll lret sub dec push add out call es out daa cltd clc call mov out gs mov dec push shl xchg push dec (bad) mulb inc mov push repz out inc inc jp in push ss out sub (bad) push pop lret cs iret mov sub xor int rcrl jno out in mov out and cltd push ds shrb movsb dec cmp (bad) (bad) mov inc outsb pop sti mov int inc fs loope clc dec out or shrl out fwait jno rolb pop lds loopne dec mov lds push or fwait in pop leave aam inc iret mov lock aad pushf out or push outsl hlt out cmp add testl loopne insl ret loop repz add push inc jg je (bad) pop pop lret (bad) ljmp xor outsl pop out jg hlt lock out inc xchg and into out pop jb lods cmp and add jp push jg mov out xor push cmc push jb call movsl loop jb or enter iret int ds ljmp out out fwait ss adc rol mov xor movsb fstl adc or fidivr sub inc cmp mov int iret mov pop lock jg pop dec mov pop aas shrb mov in or aaa loop les xor and cmc arpl xlat xchg das pop push sahf out jp mov jl lret add fldenv outsl jge in add imul out mov ret out xchg add jg adc js xchg cmp mov jg mov lock scas xchg add jl jbe jb adc out or sarb jp jbe scas insb push dec out fs das cwtl jnp int push mov or clc cmc fsubrs out mov jmp lahf add imul jle cld mov mov lods or iret push out aad les and fs (bad) adc pop mov lahf test cmpsl loopne outsl and mov out neg repnz notb hlt (bad) out push cmp scas out shlb and pop fiaddl (bad) int3 pop movsb mov cwtl dec sub aad fs gs iret add lea shrl imul aad ret pusha sub and mov out inc xchg add mov adc or movsb lds movsb leave xchg out xchg outsl mov loope (bad) push or sub cmp repnz and xor sub sbb out (bad) sub int3 pop loope out mov push xchg out (bad) mov dec nop (bad) mov mov mov add ljmp mov sub push pop mov or cmp mov xor stos inc movsb outsb push out and test cltd pop (bad) test mov aas (bad) lock cmc ret or fimul insb pop or mov sbb divb test fsubrs lds mov pop adc repz sarb arpl jnp fmul cmpsb jl add push mov pop std pop aaa or imul imul fnstsw jbe icebp ljmp xchg lods dec fwait call fs (bad) pop jg rol push add jecxz mov push into xchg aad fldt and out push pushf data16 out (bad) pop outsb insb jl shlb scas mov cmpsb push mov mov outsb or frstor stc mov mov jmp das mov in cmpsl inc and js sub es fdivl jae (bad) xchg sub out inc xor sub and scas loop test mov ret fild xor call aaa mov ror out pop fs cmc lahf xchg xor push or mov lahf sti push mov out aad mov dec (bad) out (bad) (bad) mov into out lret dec xor mov sahf jnp adc sub mull cmp mov (bad) cs out decl stc mov aaa push pop xor jmp inc call cmpsb and rcll (bad) jno jo jmp cmp jl imul cmp scas data16 mov jbe push mov or jecxz seta (bad) loop cmp push ja in arpl cmp repz stos addr16 cmp xor nop out inc jge cld loop add ss (bad) cli bound out lods popa xor adc popf scas mov lret jns inc daa mov fsubrl lret jg xor inc ja out das (bad) sub and pop out adc jg out scas cmpsb arpl xchg (bad) or fst dec out rcrl lcall ja xchg out xlat jnp xchg sbb pop jmp sub fnstcw cmpsb inc out cmpsl (bad) xor xor rclb inc cli adc int3 out inc sub cltd pop out fwait popf and dec inc pop out fisubrl ljmp hlt mov and inc in add push mov lahf in es and sbb outsb jle sub push lods inc fnstcw (bad) jecxz push int out or mov std adc out (bad) popa test scas dec or out xchg js cmp (bad) mov out int3 sahf out fcmovu add test or dec fucomp test sti (bad) cld adc mov out push adc and inc fisubr fisttpll in add adc loope mov popa (bad) sbb popf repz idivb push and push enter call bound sbb out lret imul (bad) shl cmp out xor out mov or sbb es popa push aas fwait out xchg lret pop aad jg pop or add in jno push xchg jmp pop out arpl xorl int3 mov mov es mov outsl lds inc fsts aas insl dec bound cmp pop daa dec in add in jp int mov data16 aaa (bad) out cmp test test mov insb push out lock push (bad) pop es out xor mov (bad) out jne sub (bad) fild in out inc outsl mov out cld iret sar iret sbb nop ret lock out lods dec in or jmp lret ljmp stc mov call cmp (bad) inc enter in mov nopl cs dec inc lahf insl fisttp xchg enter into cwtl leave in or out loope in (bad) sbb call jp xchg inc add push mov sahf pop enter imul iret loopne je lock fsubr (bad) in mov pop rclb dec outsl js lds fildll push adc addr16 mov ss xlat cmp enter addb fsubl jge mov lods addl sub xor loope cmp and popf (bad) jge fnsave hlt cmp loop add out sub inc jmp push ds push xor test adc sub or out roll xlat and sahf pop xor jge lods sar adc repz pop sub sub divb loop inc dec sbb pop mov cmp pusha adc fisubr push mov mov cld (bad) mov pop push push xchg push out bnd jo sbb (bad) mov and sub sbb lcall mov fiaddl loop sub sub cmp jecxz pushf (bad) loop cld dec mov dec jge faddp cwtl and daa pop add js cmp xchg das les push out out or and shr pop in cltd mov movsl lcall add aam mov js ljmp cmc lcall lods mov and repz or fdivs jle jg dec out sbb divl mov lods popf mov adc ret cwtl jns dec repnz mov pop out decl mov out mov or cmp pop andl stc or repz pop ret xchg dec call push cltd clc push sub gs sti in mov fsubrp or sub out push cmpsb sub adc lret stos loopne lcall imul fistpll sub in inc and sub xchg pop mov movsl out mov mov repnz adc mov or lret ffreep cmp in out das enter shr test xchg xchg and mov (bad) dec iret arpl and jae out dec inc mov dec pop jb leave mov jmp cmp push out ss xor out add jp js push hlt and out stc sbb mov inc inc out pop insl sub (bad) jmp or (bad) out xor jecxz xor in or out mov xchg movsl lds insl (bad) (bad) in inc out (bad) ja fwait jle cwtl mov test (bad) (bad) mov or (bad) push repnz orl out add or push (bad) lret pop out xchg fiaddl out in mov cmpsb and add mov out xchg sub lock out sahf adc mov out xor mov out sbb inc or (bad) (bad) jecxz into mov das jl cmpsl and mov and cli xchg popa cli out das jle in mov jmp xchg sbb and lods int3 push stos lods inc jne xor mov cmp scas adc jg mov sbb in shll out cmp (bad) jmp das outsb sbb jbe xchg icebp dec inc roll pop sbb push xor ljmp mov (bad) incb or cmp imul xor js insb fsubp mov fldl imull stc out xlat xchg ret or pop and jb and adc (bad) sub pusha jnp add stos bound ljmp push out dec mov push out adc out xor frstor or inc push (bad) mov xor sub scas (bad) rolb loope dec cld bound gs xchg mov mov mov mov sahf xor movsl out add int out shll lods pop aaa mov icebp mov sbb in test out inc adc xor aam gs mov sbb out push call sub dec or inc dec jmp push out mov test xchg push fwait lahf dec jge pop xchg mov stos pop and out and shr dec jge (bad) jp test adc jnp (bad) xor adc daa jb mov das int3 popf dec stos jp pop scas jge dec or jmp pop or aaa scas leave push ljmp dec icebp mov lods add inc jl push out mov inc jg out jge imul adc pop mov in sbb imul sub iret lods test fsubp popf out lock pop mov (bad) push mov cli and add insl imul mov out mov mov mov repnz inc jno cmp aam pop outsb push stos sbb inc call mov inc leave mov mov sbb or sbb push jbe out stos dec sbb push and and fsub out in dec call popf jb lret daa xchg enter nop (bad) ljmp push out scas dec mov or jl popf pmaxsw push jle rolb dec out jecxz stos es incb stos sbb dec nop push in lods inc out icebp leave idiv jae mov das inc loop jmp scas lea in pop lock daa popf xchg out jge dec (bad) mov push call xor out (bad) outsb movsl in (bad) dec out insl or gs xor loope lds (bad) out add arpl out adc push xor in roll loopne cmp jle lahf pushf lods out cli decb sahf sub push inc scas sub pop ss fsubr daa into jns jnp outsl inc sar add scas inc and sub pop enter loopne mov adc popf xor lahf pop mov mov jle pop mov push xor jae adc fs fisubr imulb jge sbb pop insl push push mov xchg addr16 jmp dec sbb jno cmpsb shlb xor pop xchg and out adc into data16 xchg or loop outsl repz (bad) mov rcrb sub out push movsb frstor push enter sarl (bad) repnz ss and out (bad) pop outsl stos ljmp jnp mov popf cmp jb sbb and sub pop daa dec jbe cmp adc cmp mov test jae imul sub je jp push pushf xor rorl push push mov inc or inc ljmp test aas cli jns out pop (bad) bound es shrb jne cltd icebp fidivr sbb cmpb push dec out addr16 fidivl out sbb loopne int adc std ds cmp add out push jb xchg inc movsl mov cmp dec inc out sbb jecxz mov jb push ja adc ret clc jns mov out xorl xchg pop in pusha out cwtl lods add cmp mov xor aam xchg out stos sub insl sbb arpl aad fwait out mov fstpl push xchg (bad) ds dec out lret sub jl ja out jp stos sahf jae cmpsl out es cmp call sub and sti out xchg out shl fnsave popa shlb test mov jb xor sbb sqrtps pop xchg pushf (bad) call out inc or fistp mov test (bad) fcomp push pop jae,pn loope mov mov or or (bad) sbb cmp mov adc in jbe (bad) stos pop cmp insl mov or sbb mov xor sub adc mov (bad) lods pop xor pop out jne sbb inc ljmp addr16 pop push int cmp negb pop popf mov inc mov out setl aam jg cmpsb adc mul sbb (bad) mov jp,pn aad inc adc mov xchg out subb lods repz push out test dec jl loopne shrb sub arpl fucomip aad cmp iret xchg test adc xchg imull out bnd cmp jl in push sahf sbb mov sub in xchg add lret jns aam int es or and in pop movsb dec shll out dec dec stos icebp push (bad) xor cmpsb xor push out fildl scas push out sub int3 cmp out test dec jb leave mov insl movsl mov andl cld pusha mov out cltd lahf ljmp je mov ret or lds in std out jnp mov pushf fcomip jns dec mov test and clc mov cli fcomps jg js fbld sbb cmpsl or dec xchg out xchg push jg mov jb leave testb test ja mov lcall add jge xlat (bad) hlt adc in in arpl and adc cld test outsb (bad) dec (bad) cmpsl xchg fsubrp ret ror xor or std sbb daa dec mov rclb out inc inc push xchg push insl and leave fimul inc pop xchg sub in or sub inc mov cmp out hlt xchg cld ljmp pop int cmp pop sub jg xor les xchg pop push fistpl repnz sub scas out xchg add out loopne mov sub pop xchg xchg (bad) pop mov imul (bad) jp jns rcrl es das lock incb loope dec mov xchg lret pop push or (bad) lods add jl stc fs mov add fild lea pop in aam into out lods in arpl dec cmp data16 int xchg mov mov (bad) pop and inc aam daa push nop test jge mov and push fs out sub pusha xchg jbe push mov (bad) cmp dec pop mov lret xor or inc mov add call pushf pop sub xchg nop and out mov push mov fyl2xp1 loopne mov addr16 int stos sbb pop push xchg lock jo movsb inc addr16 ja cmpsl (bad) fdivl push aas and lcall insl sbb out xchg or jmp dec lock and mov ds or (bad) fldt and fmulp mov fs push or push sub mov mov jo jp or adc in jnp xor in (bad) mov fsubs cmc js fist pop pop pop icebp int and sbb jl out jae test clc push mov out ret adc lret push out test and out data16 xchg out jl cld (bad) (bad) and fs dec ss loope inc inc out cs and (bad) ficoml arpl push out out lods pushf sbb adc jle pop sbb out insb movsl movsb or sub or inc pop negb and mov mov jp mov out ret xchg shlb movb hlt loop and sti out push mov xor arpl push out jbe pop gs lods mov rcll push jecxz jge out mov xchg test out ret insb cmp imul ja out push push cmp jmp jo outsl jnp arpl (bad) sub mov sbb lret jne in mov out and das (bad) adc add jge ret sbb rcll and cltd dec push jmp pusha lret or dec dec mov jp std push fldt out mov push unpcklps pop out mov jp xchg pinsrw mov iret out imul xor sub inc ret add dec and bound xchg stos out jmp dec (bad) scas inc and enter xor mov sub jb xchg fisttpl cmp pop out pop xchg mov mov jmp sub fcomps pmaxsw es xchg sbb and pop cmp and mov ret mov jmp sub sahf push dec add fistpll rcll adc out mov out jge or ret sbb cmc (bad) mov imul xor aaa sub pusha (bad) pop pop orl mov mov insb lcall hlt sub mov jl sbb out das xor mov test dec out (bad) mov movsb xor mov in out pop lret dec mov cmp xchg add inc pop push pop jle jo adc jp pusha out and pushl add cs repz repnz sub out shrl pop lock scas insb fbld aas xor ljmp dec push les out or repz incb and sub scas fnstsw sub ljmp aaa out ljmp pop jg jb mov (bad) fbld (bad) add jg pop sbb popf fnstsw mov xorb push adc imul fmul out jg jnp mov imul mov lds or out sub sub test mov cwtl out cltd sub push (bad) pop out xchg push or jp mov enter cmp and das test add dec aam scas les outsl out stos rcr js scas xchg xchg out loopne cmpsb and in aaa (bad) xchg pushf out xchg hlt and sti jbe mov in stos and xchg push ljmp out pop dec addr16 cmc mov into pop sub inc insb mov push sub xchg clc cld dec pop int rolb sahf mov out mov es insl jecxz stos call jge rcr mov mov push testb xor cli out stos or jns cmpsb movsb out call adc mov shrb and in loope lahf in cmp out pop push dec scas mov cmpsb ss es mov jbe out sbb dec out pop (bad) stos pop leave mov xor or adc scas iret add loopne lock xlat aas xchg cli out adc xchg les adc aaa lds rcr push and out ja (bad) gs cmp loope std or repnz divb cmp stos or out cwtl (bad) push jns push imul inc mov aaa push cmp ss (bad) mov mov fwait add lea out (bad) (bad) lods inc fisubl dec adc mov add mov cwtl outsb nop xchg (bad) sub lret pop jo mov test inc es inc mov movsl fist push add mov loop inc test out fistpll mov jmp out test inc or aam inc lahf mov idivl subps iret nop mov mov lea ljmp pop mov lds out sub (bad) or outsl adc out ljmp cmp test aas inc clc out cs dec jbe sbb or lock adc dec jle sub mov mov out sbb inc imul out insl push mov inc sbb out xor jp push lea push sub xchg rorb mov ret (bad) shll pop rcrb divl dec mov lret out mov push pop pusha out xchg jge and shr mov lds adc sbb ja test xchg dec sub adc cmc lret inc mov out jmp movsb es scas leave pop sahf pusha out mov inc lret in pop in push idivl push and xchg (bad) ja cs je aad xor out iret mov in xchg hlt cmp stos arpl sub repz jmp ss jmp cld jle lahf dec (bad) incb div pop stos nop aaa out or jecxz push in inc out mov sbb cltd xchg lods pop test jns aam in das or cmp out stos inc mov sbb ret pop pop (bad) enter adc cld in xor fildll push fwait cltd xchg lcall add out mov adc out cmp sub xor out mov and pop xchg or neg bound mov in addr16 out xchg sbbl call mov dec inc dec mov jno sub popf ret cmp dec jecxz into insb mov pushf ffreep push lock in nop sahf cmp jp cltd push jns out push and pop cmc inc enter mov nopl fsubr or dec outsb jbe jmp cmpsl mov and fxch scas sti mov ret aam std xchg mov jle mov push push cmp lods xchg out movb std out xchg and inc dec out out les mov lock pushl pop or cmp imul fbstp fs out push mov ja sub adc in mov mov mov dec xor hlt cmp out xor jge in mov aaa rol mov pop rcrb out ficompl shll pop ret add rclb in xchg mulb pop mov std jp pop ljmp xlat in mov xchg out repz xor mov loopne in fwait lcall movsb add imul lods (bad) mov out sub mov into jns sub (bad) mul push ja cmp inc sub sub xchg out mov lret cmpsl fldz repz sbb mov jne jb push or pop out mov mov mov (bad) stos jmp inc mov out aaa negl or xchg jmp add out sbb cmp push pop fcmovbe bnd push dec pushf movsl pop out ret pop addr16 out add push pop fwait and in cli cmp in dec out jge shrl pop je xor (bad) or mov js (bad) out sbb lea rcll push hlt ret add jmp (bad) xor mov sbb ja fisubrl xchg fisttpl pop js aas inc or in push sub outsb dec pop sub je xchg sbb ljmp (bad) rorl out or xor sbb and mov pushf adc (bad) ja pop out jns inc (bad) xchg ret jmp mov jae fdivs jg addl cmp repz mov rclb arpl ljmp cld in fsts into jno jo fs lret sub xchg loope out fiaddl loopne push mov mov mov sub lahf ret ja in out mov nop inc movb sarl mov popa cmp jl nop ret xlat sub loop pop mov cmp outsb popa fwait clc pop cmpsb aad das (bad) jecxz (bad) pop out jae rol pop sbb popa out insl xor ret inc sub pop ljmp adc imul lea aas es cwtl (bad) call (bad) loope out jnp inc mov xchg add js out or push out pop fsts gs mov inc popa fimul ljmp xchg imul movb ljmp jecxz movsl lds push es push stc out xchg sub add leave jl or xor and xor aas ljmp mov pusha fwait in out stc cmp mov mov lahf push jmp push (bad) popf (bad) out cli div ret inc out in xchg mov pop imul sub ds (bad) iret mov out add push lods loope ljmp push cli outsl lret (bad) xor dec mov push mov sarl out xchg jo into xchg pusha inc out dec jbe or inc cmpsl mov popf fldcw dec data16 lods ss test pop push mov (bad) mov lds mov jl dec jmp ljmp fldenv (bad) (bad) or xchg arpl test cmp mov add in nop jae and repnz jb push fs out sub sahf pop hlt sbb dec push mov out add fnstcw sti sub xor xor ror out and adc out sbb imul or mov pushf (bad) repnz mov jbe cmc pop pop gs inc out out sub (bad) enter or arpl ss cs aas mov dec dec push scas out mov hlt ret mov insb nop sbb out ljmp xlat pop xor in lcall sti dec sub stos jg fidivl les push pop xor das sbb sub jge push ljmp pop inc jno mov xor mov out addb push pop mov mov jmp xchg out xor div mov pusha bnd in xor out jb stos mov push sbb xor lea push mov mov or or out pop pop (bad) aad cltd imul add out push out xchg movsl stc in test aad mov repz and cmp es ret out pusha (bad) push mov divb out std aam incb lahf xchg out int3 adc add out sahf dec mov or push loopne xchg lcall mov jge or inc mov xchg jg push push pmaxsw out js out and into jne mov or mov lea out lock jle bound pusha out and xchg push inc out fildl xlat mov test cli mov push scas ja xor and loopne dec xchg and or pop jnp push sbb (bad) fucomp stc mov push and (bad) int jp aam pusha (bad) js fimull (bad) push lahf pop mov leave test lock add xchg in je (bad) cld or xchg or leave jecxz mov ljmp out cmp push dec (bad) (bad) jnp outsb bound mov inc pop out out ret or test (bad) js loopne mov mov aam out loop stc mov mov pushf adc sbb and gs stos and aam cld pop jns movsl in (bad) out mov pushf push add adc bound or subb push int3 xor ret xchg test lcall lret or in movsb or out loop cmp lods pusha cmp jecxz int mov push mov pop mov push push xor jno out outsl adc lcall xor jb,pn xor pushf mov enter stos inc rorb xor cmp out loopne dec push ss cld out and xchg cmc rcrb mov int fcmovnb in add pop mov in std inc rclb (bad) loopne xchg pop fwait das iret out mov pop jg fbld xlat arpl push mov leave stos add insb out ja (bad) scas and out dec or mov and call and sti call lea adc xor xor ljmp std sub gs sub in add and pop mov out notb add out ss cmp mov outsl and test sbb cmpsl lods pop out hlt push movsl aad (bad) (bad) sbb cmc jmp out aaa mov pop push cmp out add jle and fs out insb push adc push (bad) (bad) jno jp test mov dec data16 fild sbb out adc test dec out xor shlb test jo iret xchg out pop jge imul dec out mov mov incb cmp dec xchg out ds jp es jge out (bad) fs out push push into sbb inc out mov cmp push (bad) (bad) out popa es sub fldl mov loop mov das mov pop cmpsb sub out pop stc ret test in pop addr16 xchg out xchg js mov out in and inc rcll jge sbb sub sbb int cli mov pop testl add adc test and imul dec dec js adc jbe jmp mov icebp out cwtl pop vpandn dec and out push sbb jp aaa mov push sbb pop out pushf jo pop sub jb pmaxsw jno adc loop dec (bad) imull pop mov in stos lahf (bad) out out cmpsl dec mov mov leave inc out pop mov add pop in adc mov cwtl mov ljmp (bad) repz (bad) out loop rorl call mov pusha push adc jae orb jo push or sub xchg ljmp out test sub jg aas int3 bound jge mov mov sub gs or nop shrl fsubl cmp lock test mov (bad) iret stos out sbb fs bound imul mov sbb mov or xchg sbb popf mov (bad) pop sahf out idiv dec out clc mov inc aaa leave dec repz ret inc in mov out pop push cld nop xchg fild out dec inc dec add bound je out sbb fwait daa dec mov adc (bad) jnp fmulp dec mov daa mov jecxz out mov and pop xor pop loopne mov lret gs sbb movsb sbb (bad) push (bad) jecxz lcall test arpl mov xor lods int roll iret cld inc or movsb or inc fldt popa (bad) (bad) push jle mov sbb out subl bound stos or rolb ja mov outsl in leave pop (bad) mov and fwait sahf sub lret add mov inc adc enter out xor or out sbb hlt fwait sarb in pop xor js pop cli lods imul test cmc (bad) jmp push movsb push push shr lahf sub and mov and das mov sbb aam (bad) xor mov iret push mov in xchg enter jmp test imul sub cmc shll mov and pop inc adc mov or outsb ljmp into out ret je mov and dec cmp push mov mov loop cmp out lcall mov test and sub ljmp lods (bad) fsubrl sbb out cmpsl pmaddwd bound xor and (bad) mov ret pop out cmp out xlat repnz (bad) out mov sub and push lods dec pop daa nop mov fstpt bound push call inc insb ljmp adc pop out (bad) iret inc test pop in out mov xchg push and add push xchg out (bad) mov test mov dec stos je ss data16 mov out mov out inc mov mov leave jl scas gs out sti daa call mov mov xchg lods insl mov or pop (bad) cld mov out push push jle jge into jp sti and and mov mov fldenv out clc push lods adc in mov insl and cmpsl cmp int3 out sub xchg jnp jg (bad) loopne out rorl in cwtl sbb add out dec pop cmc (bad) pop stos imul ret (bad) in xchg ljmp popl loop add fisubl jnp xor les fwait cmpsb pop into push pop or cmp (bad) scas sub push outsb jge (bad) mov notb pop loope cmp lods popf push imul or out mov je mov or push pop repnz mov int3 daa add jl mov shr or imul cwtl (bad) stc push out and xchg das notl cmp and inc xchg stos sbb pop iret xor or out arpl cmp inc lea fwait in adc test pop pop mov mov or repz jo mov adc or outsb int dec lcall mov xchg faddl xor push cmp out fcomps pop cmp aas fldenv cmp test mov test insb (bad) in sub push inc cmc jo scas jne (bad) lods mov lret add xlat jmp out in test popf mov adc js mov into movsb out iret sub in mov add inc jns inc pushf mov xchg xchg movsl outsb inc sub movsb cmpsb push cmp mov cmp jmp lret out lods push ds aam mov loop in pushf inc sbbl ret repnz popf out xor mov sahf xor sub pop ret dec cmc iret out out cmp dec xchg and push sub lahf cwtl test lock aas enter pop and dec cmp mov scas loop nop cmpsb xchg in dec fisttp mov mov movsb push push sub dec mov pop push jp (bad) sbb mov inc arpl ret push bound add js (bad) ja ret clc popf cmpsl push mov pop xor imul mov ficoml outsl in mov sbb jecxz adc movsb arpl cltd mov std push lret mov mov jns out mov mov jecxz sbb mov iret scas push ss xor dec add (bad) ljmp mov jae imul inc (bad) out enter cmc pmuludq incb xor xchg imul mov and xor xchg xchg fisttpl icebp jae mov sbb loope push pop shr out lret xchg jne inc out mov imul pop ljmp mov bound in (bad) cmc push adc and out fwait and ffree inc mov ret add pop out sub mov repnz pop lock sub fiadd jle into jne inc shl (bad) out mov and push out and pushf mov pop (bad) xor push out sbbl cmp xchg sahf cs stos aas mov out mov adc in xchg (bad) out and jmp jle (bad) pop inc push add inc std out add and mov imul dec add xchg loop sub jne pop fisttp cmpsb sub xchg out out add and out push (bad) sbb jno jg loope stos cmpsl dec aam out fdivr mov pop out lds js or jp fldenv xlat shrb fbstp mov fmulp outsl sub jp dec nop arpl pop icebp push int (bad) jecxz mov das popa fwait mov fidivl outsb jo pop jge dec lods cltd push pop jbe stos xor xchg jo lret (bad) adc xchg and push inc mov xor cli call jo xchg adc out repz pop lahf test inc repnz mov aas out popf movsl or jno adc out in push lret leave int3 hlt out lods pushf dec ljmp add jmp xchg out (bad) push aaa negl pop mov cmpsl jb aad mov sbb xor icebp xchg outsl push jge inc add cs cmpl mov out jo cli pop fisttpl (bad) ljmp pop stc and mov cmc out inc jae outsb cmp out adc sub cwtl sub nop jnp adc fdivrp push into dec lcall mov mov out pop xor insb adc outsb shr push insl hlt orb sub adc and ds mov sti mov out sbb xor adcb fisubr mov loop addl push cmp imul mov sub repz xchg (bad) sbb push add push (bad) jbe mov shrl or loope dec jns pop pop mov stos jne out movsb or sbb sbb rcrl add mov mov adc mov out lea mov int3 loopne pop pop repnz sub mov mov fiadd lods les mov out add stos (bad) repnz mov add out xchg mov (bad) ds and call cmp mov in (bad) daa and mov ja out gs sti and adcl dec push xchg in add test iret das jb or fs mov out inc jns xchg cld push dec fsubs pop add div jmp jmp xchg lea out fiadd mov push or das repz out add lret or mov je and sbb aad inc mov mov (bad) gs out pushf cmp sub imul in mov pop int in out jns xchg mov dec mov jecxz push mov incb test out cmp cmpsl inc in ret out xor nop adc out scas fcmovbe jb xchg mov rol fsubrp or mov imul punpcklwd adc insl out lods test add ret out outsb add fstpt push gs xlat mov test rcrl rorb inc xchg (bad) jae cltd in jns (bad) cld sbb loop cmpsb mov or xor xchg iret cmp sub xchg pop inc daa dec push popa rcrb aas (bad) out repz inc pop loop fdivrp mov lcall dec out jp mov jne test (bad) ljmp mov pop out lods xchg mov add mov push inc dec out aas and mov xchg (bad) sahf push lock pop mov sbb mov outsl stc ja lods mov (bad) cmc arpl cmpsb pop pop pop xchg addr16 lcall jg in and out mov mov out fldenv mov arpl scas ss out repz pushf jb aam and shll inc (bad) sub ror insl (bad) sub dec mov and test push icebp dec mov sbb sbb xchg addr16 sub mov adc sub (bad) loop out repnz je push scas inc adc push out pmaddwd jmp sbb add lcall ljmp lea mov call movsb xor idivb dec push out jp mov out int3 pop out xchg fildll out adc jecxz bound mov inc or (bad) enter fsubs push jb out ljmp in rclb pop pushl sub adc out sbb pushf push add add jg leave jbe bound insl loop jecxz xor call iret mov or in lret inc xchg sub mov xchg popf lds (bad) fadd or ret cli mov mov push xchg or addr16 mov jl mov xor add push popf sub dec inc jnp sub loopne push mov xchg sbb sbb add rolb jmp xchg lods sub mov stos loop ss xchg mov repz xchg out mov stos outsl (bad) out hlt mov test out mov or or xchg out shr in mov dec out jb lods inc push faddl imul mov pop lods aam setae in dec sub mov repnz lods mov shr pop cs fbstp cmp sbb mov mov test mov mov (bad) loop jle sub mov in icebp xor lods out (bad) mov dec cltd pop push arpl sbbb add xchg (bad) xor loope (bad) and out sahf in int3 fcoml lahf push out fwait jne insl mov out mov sub leave icebp addr16 out pop and mov cs sbb inc ja and jb pop out mov imul fist mov add repz cwtl jne and adc (bad) insb fnstcw out mov mov in les out shld ljmp mov scas rorl jecxz daa out cmp jae and adc clc jno js and insl (bad) mov stc jg out repz jle dec (bad) addr16 and fwait out pop push inc xchg mov jns push jg in xor pop out int3 mov out repz pop mov iret ljmp out outsl xchg je mov or pop sahf es int3 out scas iret dec (bad) call xchg in nop cltd repnz jne jg aam call and and fcom rcrb out movsl mov movsb stc (bad) scas lds (bad) shrl xchg scas les (bad) pop in push mov addr16 pusha cmp popf push out fmuls or shrb jo or inc sub dec and cmc add mov int loop sub mov (bad) movsl stos loope out adc pop or inc pop out push (bad) repz out xchg rcrb sub xchg mov xchg and loope out loop rorb sbb cld adc (bad) jbe pop push lock frstor cld sub (bad) jmp out push adc dec jl and gs mov out popa mulb pushf rolb xchg adc inc and aaa sbb jl nop sbb jne or ficompl fld scas push aad out hlt mov mov cmp test in xchg out mov cli push loopne out sub clc xchg jbe jns or fldcw or ret insl xorl addr16 test out mov lock mov or mov cmpsl mov jg push (bad) cwtl mov sbbl mov and jbe pusha jb sub pop in lods in shr imul out push dec add and in (bad) jmp cltd loope pop mov loope xchg out in sti in testb xlat dec js add sbb mov jnp push shr mov out popa adcl jg and out stos jno sbb add push pop adc insb (bad) imul in mov jg ja sahf adc shr mov stos bound pushf pushl out cmp xchg out leave adc dec (bad) scas dec das lcall pop loop xchg mov sub mov out out dec (bad) outsl sub scas in xchg icebp ljmp mov jns adc jmp cmp sub inc out pop das mov iret jg in ret pop mov push pop stos xchg push xor mov lcall push out inc aad sub rclb mov jns (bad) leave fsubl xor cmp repnz out daa adc push dec jae inc xor je leave cmpsl out cmpsb xor scas mov push pop xor (bad) mov xchg lods stos mov cmpsl scas je mov ds lock dec fsubr fisubr out xchg jp add sbb out cmp (bad) cmpsl xchg cmp xlat and aaa push out pop push mov in daa ffreep inc cmc mov fs les xor jmp inc ja xchg mov cltd leave (bad) (bad) hlt das jnp out cmp dec adc lret ja mov mov mov mov mov fsubr cli scas cmc inc insb (bad) aaa in jnp fwait rcll (bad) jno mov enter lcall out pop lret mov nop arpl jae mov test out (bad) loopne mov xchg jbe ss and cmp leave pop aam sahf lahf (bad) dec je out (bad) fistpll in pop (bad) xor js out push push and sub mov mov and push iret push (bad) out mov (bad) sub pop sub or insl dec cmc out icebp dec xchg mov movsl pusha mov mov mov adc (bad) fsubrp mov cmpl inc jecxz inc cld xchg outsb mov sbb xor (bad) or push movsl (bad) sbb daa jge cwtl pop xchg out or ret out popf or out into xchg sar pop xor sbb push sarb jnp adc xor loop mov mov sti push mov and (bad) xchg add mov mov insl pop mov lcall mov out pop stos out in pop dec pop lahf lret and repnz insb es sahf pop or sbb out mov fwait insb mov mov in lock fcoms add (bad) jnp or stc mov das mov and cmpsl (bad) imul (bad) into sub cmc pop pmaxsw rorb push out add pop lcall out sbb jecxz lsl xor mov jp (bad) jns add cmpsb jg pop and xor aam add in ficom and cmp call (bad) (bad) cmp std outsl pop xlat js push pop loop cmpsl inc adc insb dec adc jg push fsubrs adc pop (bad) jg add xchg jmp jnp or mov enter jns adc lods or (bad) lods mov pushf lahf repnz cwtl mov sbb fdivrl lea dec mov bound mov shl sti out into mov std mov out in mov xchg mov xchg inc cld out int3 add fstl out jb dec or mov sbb sub and lea ljmp adc (bad) aaa outsl into sub rcll jmp aad insb pop xor mov ljmp dec bound out cmp jnp lds ds pop repz xor (bad) cli mov xchg xchg and push inc movsb mov loopne inc or lcall test lahf pop pop add mov cmpsl cmp ss test push gs sti push aad adc test cmp pushf imul and lock das adc faddl mov (bad) xchg or jmp insb lea jnp inc (bad) test lods movsl pop enter vpsubsb addr16 (bad) cli flds pop inc (bad) in push mov xchg scas outsb jmp out addr16 and loop xlat out call lds mov (bad) pop push xor jno,pt insl or out shrb ss aam push incb jge xlat cmp out push xchg sbb ror out sub xor mov lods jl das repnz mov stos add fmul xchg push mov decb out jge movsb sub out (bad) mov xor stos testb out add repz les pop jecxz mov (bad) or sbb jp xchg ftst push mov push popf inc or mov mov stos mov lock roll cmc jge das je mov out cld js (bad) mov mov jmp sbb flds jl mov jns lret loope js enter mov xchg jo or sub push insb mov (bad) hlt add push adc sbb out push pop in mov in addr16 jno arpl or pushf out xor or mov roll cs add stos scas inc decb fsts dec add cwtl ret xchg xchg jg inc stos mov cmpsb idivb out std clc or repz popa loopne in mov push stos (bad) movsb mov out iret adc push pop jmp add jge test out mov test mov out leave (bad) and pop jo in sbb xchg addr16 mov insb in xchg lcall aaa jmp shrl out mov test mov ret in fstl adc xor imul and (bad) sub test sysret out or and decl push imul or in dec mov (bad) cwtl push lds sub (bad) nop pop pop cli jae stos dec xor jo test lea xor push jmp shlb mov push pop out sbb mov push in lcall out jne sbb stc jnp fwait jno pop cs and out or cmp je and out std mov jle shrb loopne daa out call dec lods inc out xor and out add push xchg out mov push lods adc call mov dec ljmp fbstp xchg sahf jle dec or adc sub push movsl mov incl lods out pop adc fisttpll out add cmpb pusha or xchg or in shr dec cmp pop (bad) stos and and cld in dec add inc outsb outsl sub or push lcall jmp adc mulb cmpsb repz fistl jo loope or push add xchg mov loopne out jb outsl jbe pushl out push arpl add int3 out add notb dec sbb loope pop lret and (bad) out mov or pop jno aad hlt cli push lock imul ja imul jge out mov shll push xlat mov xor inc mov out and aas addr16 fidivrl cmp out out sarb mov mov test xor inc mov lods ljmp lret sbb cwtl push in rorb fsubrs lods repz out push iret xchg xchg fcomip outsb popa cmc (bad) out lahf rcl popf push xchg mov enter cmp jns or push pmuludq xchg or xor cmp xor pop sbb dec movsb fxch cmp inc daa into out cmp fsts push mov out sub jge mov cmpsb ljmp xor adc jae cmpsl mov insb add fmul popa push pop jmp cld pop push xlat inc out in sub rcrb push jo out lret cwtl or dec out sbbl xchg adc push out iret cmc in mov lock inc cwtl pop negb (bad) lcall cmp and sbb push jge mov sbb mov cld mov scas lea push out pop pusha pop jbe mov ds andl fcmove xchg outsb dec fucomp xchg xor cli cltd movsl int3 sub push mov push mov dec gs repnz out sbb loope push je mov int3 pop out inc lcall call sub xchg movsb out subb icebp xor sbb adc out mov je test mov push lret roll and es fild iret add mov jno dec out xor mov out inc adc out inc (bad) rclb mov test pop sbb jmp mov mov out movsb sbb stc and push in mov jo mov loope mov mov cmpsb mov and jle jecxz cmpsb sbb test xchg or xor pop lcall push inc cs fisttpll pushl in xor iret add test insb (bad) out aad mov mov mov repz aaa stos jbe out mov movsl mov dec leave lea jb cld xor lods or mov out cwtl xor sbb out cltd and push lret (bad) addr16 rclb xor dec cmp xchg adc out xor lcall xchg push push pusha jg xor mov mov or mov out lcall pop pop add fs sub inc es out out add and out push mov jp dec xchg out cmp jne addr16 out and jae mov in ret mov shll fucomp insb cmp add ficompl push xchg inc (bad) call sarl jge dec adc inc lret lods out push jg (bad) jns aam out bound daa dec sub lahf sbb sub in xchg cmp test les sbb pop std xchg push add insl mov cmp sbb jg call out cmp mov add cmp mov sarl cmpsl jnp (bad) jo jae outsl fcom out lret lds sbb cvtps2pi cmc out or push addl inc adc add cmp (bad) lock jno sub (bad) push cmpb sbbl xor repnz out xor xchg js test out roll cmp add (bad) sub sbb in jg iret hlt test (bad) rcrb or test mov (bad) imul sub hlt jmp mov lods jbe out mov fldl push lcall xor inc push stos mov xchg aam adc mov fmulp mov mov test scas xor xchg dec xor sbb imul lret jmp int3 adc adc cmp or mov out jge les mov mov hlt sbb push stos pushf pop inc pop or cmc inc arpl and bound xor mov fucomip pushf fimull sbb lahf jae add add push les in fs out stos mov ror inc xchg mov and call out pushf xchg push cli cld or mov lock lahf mov jne jnp icebp sbb push mov (bad) out movsl (bad) xor test jl,pt neg ljmp int3 push inc aaa out inc cmpsl dec dec mov (bad) inc out fistpl in fidivrl in ljmp dec cmp pushf fmull xor out push fs out lea lret xlat stc push sub cld sbb popf or fistp and pop ja cmp insb xor aam or addr16 jns nop pop and sub clc cld arpl mov push out xlat mov add cmovp ljmp push pop cmp cmp out and adc add mov add push xor fs out cwtl mov (bad) out xchg xor data16 mov pushf scas pop loope stc jmp test mov mov xchg insb jns mov arpl cwtl sahf in nop inc (bad) out sbb cmpl jp adc inc pushf mov push xchg aas push test sub pop gs insb rolb movsb jp jg push and scas sub loopne adc arpl repz loop stc les add push (bad) pcmpgtw cmpsb insl lock int3 xchg xor pop outsb mov add and rorl ds orl and push mov (bad) xchg dec pop mov fdivs neg or (bad) decb fcmovne call out int3 xchg popf (bad) hlt jecxz lds cmp pop sti out ret scas dec fucomp mulb out pop loope xor out xchg xor pop push inc mov mov sub fldcw and mov int add jb xor adcb jg stos mov lahf jl cmp cs iret outsl and in jecxz push out cld call mov out and push shr in lea mov push sbb fmull mov enter xchg adc xchg cmp jbe inc dec pop lret push adc fisubrl out call out mov loop or lods mov out dec aas rorl pop fwait mov sti mov push pop add pop lret insb xlat mov dec out enter lahf dec loope sub sub or xor aad cmpl mov loopne je clc prefetcht0 in arpl mov and mov cwtl fmuls xor mulb cltd test mov out cmp xchg add sbb jg test imul push in ret out (bad) adc xlat (bad) in cmc int3 and icebp gs sar (bad) pop rol sub cmp repz xchg xchg xchg scas shr shll insb pop out cmp enter movb sub mov mov lcall and adc aam iret int cmpsl pop out add (bad) out inc in mov mov fstp sub cmp adc jbe out sbbl or dec mov out jl xchg cmp js inc xchg mov es ss or lahf push out lods fdivrl scas out ss das adc (bad) out mov xchg adc cmp push mov insl and sti push push aaa jp in rolb adc cmp mov iret push mov shl and pop or int3 mov xor in jp push ja aam lds mov gs mov scas jp push mov lcall push int lock movsb test inc add add int3 mov iret jle or imul jg adc ds punpckhdq inc out pop xor lcall test xchg shlb inc insl stc mov out adc inc aam jg (bad) gs loop push pop out es mov movsl xor add cwtl jmp out aam lea test push loop pop or jp pop into dec out scas out iret jne xor push pop es inc imul int hlt (bad) xor in repnz pop inc mov std or dec xchg push fucom cs shl or iret jnp push jmp xor loopne out xor aaa adc push mov scas and xchg add mov out cmp push es xor loope mov in imul pop pop jp,pt push ljmp cmp adc loop add imul and das (bad) jle or sbb sahf loopne,pn cmp out xchg iret test sbb sahf push daa in inc outsl adc out sub pop out mov dec inc (bad) out push push fdivrl sub push mov das gs sbb pop adc dec sbb fbstp mov jecxz cmc test out xchg sahf lods pusha or repnz adc inc out push mov xchg add rolb inc jle out inc push (bad) fisttp out or xchg pop bound jl out mov jo mov add idiv scas out mov stos xor lret cmp (bad) das cwtl rcll dec pop loop into adc and out addr16 add xor addl jbe rcrl stc scas incb and in adc fcmovu out xchg xor adc fucomp popf xchg mov cmp ljmp mov jbe iret gs out cmp lret jmp clc test out orl daa pop add stos cli push test (bad) das adc lret outsl ljmp mov cli ror mov cmpsb shrb sbb out jp mov shll out insb int3 icebp fcomps in out xchg in push ja (bad) inc rclb das repnz stos mov and sbb pop enter pushf pop imul test inc push jns out inc loop sbb sbb mov xor data16 or pop mov (bad) sti sub (bad) insb mov repz adc divl outsb xchg out or (bad) lret lahf jge dec ficom repz (bad) out in xor jecxz rcl out cs push das pmullw or scas stos xchg out negl inc mov movsl ja insl sub pop (bad) lock mov pop les outsb dec cmp sub out and ret inc out mov cmp movsb push dec mov adc mov mov (bad) mov arpl bound insl cmp scas cmp es and outsl push inc push clc mov sbb fwait cmpl xchg out xorl xchg out adc daa mov out stos cmpb aaa sbb out popa push and add or out orl jl shll push bound fmuls cmc fldcw jmp lea xchg out lcall xor cmp call pop cmp mov out or out sahf pushf or push out sub hlt shlb lods out in rcr test pop (bad) aas mov out ja data16 inc lret push push sbb jge add cmpsl loop lret aad (bad) sub push repnz mov xor mov sub jl jnp dec push pop ja movsl mov push mov sub fcmovbe out aad mov scas out push or pop mov jl insl (bad) loope pop out jp in cld (bad) mov pop jno into sub das sarb iret and sbb fldcw mov fiadd sbb push repz out js mov ljmp add sti adc fistp les push pop xor out movl push and mov int3 pop out push adc (bad) shl xlat mov cmp and dec add std (bad) xor dec btc data16 loop js scas jmp cs xchg aas pop sub push push arpl xor pop sbb push push sub cmp sub imul push mov push aaa mov (bad) (bad) ljmp ret movsb sub out stos jp lds int test mov cltd out lock sub out pop jns jge loopne jno movsl push (bad) enter jp add xchg push (bad) outsb fwait popaw mov xchg push cltd out lahf push std mov out pop jl lods pop sbb dec mov out subb movsb out lds dec sbb cmp or mov insl mov ret imul enter out xchg out jno and iret shlb out cmp clc shlb and jae push xchg mov add (bad) push push ds sti sub test in dec cwtl insb out push out mov cltd push rcr out xchg xchg iret pop inc fldcw dec push ljmp enter push pop add cmp mov cli cmp sbb ret (bad) hlt lock (bad) scas inc xlat jnp mov pop cmpl jp mov je (bad) loopne push loope cmp push inc (bad) out aam lea mov sub es leave enter dec pop mov loope jmp xor scas and inc sar sub (bad) xchg test in (bad) fistp rorl pop insb fwait lods out cmp inc xchg mov and outsb js faddl inc movsb out stos rcrl in dec pop jo push adc out and outsb and xlat xchg jg out les add cmpsl out out cmp push (bad) jmp mov ljmp lcall leave shlb jae fnstenv icebp jb jbe cmpsb mov adc pop je xor lock (bad) pop xchg or popl or out dec jmp xor sub fwait adc jge data16 lock mov fildl (bad) int3 xchg bound xchg jmp push xor sti out fcoms add jge aas mov mov (bad) mov scas push cmp pop jp pop inc and fsubr fisubrl out out in adc pop mov jae xchg push addr16 (bad) out pop aas (bad) and cmp aad mov push push out push addr16 inc push ret out pop loop cs bound std cmp daa lea cltd out inc in push sub fdivs out xchg jae ror (bad) mov xchg out imul stc xchg pop mov popa out daa pop xchg in cld mov rcll fsubl mov push (bad) aaa shrl and out rolb xor push hlt shll stc fldl mov jg js sub mov ds icebp jns out cli add jle inc mov jnp (bad) call fldl push scas loop loope and cmp xchg adc out jbe pop movsl icebp mov arpl ret mov pop dec out and inc xor shrb and pop pop fmuls sub jbe jl cmp mov mov fdivl inc and popa xchg (bad) jo hlt sti push push pop scas mov out push jp sbb (bad) cmp and mov int3 out arpl or out jno add mov cmp mov ljmp mov xor cmp addl mov leave mov shll out cmpsb or add cmp out fisub ss mov hlt sarb aad jmp mov cmpsb jecxz inc sbb pop mov mov in pop push jnp dec pop dec call mov sarb jle jp aad xchg cwtl cmp neg int3 popa in in xchg cmp out outsb ret lock push out int pop mov subl out inc addr16 aas out sub inc ret pop in xor or mov inc push jle lret push test push std or jne in inc clc out dec xchg xor jmp xchg mov loopne dec and sbb mov mov add nop sub loop sar outsb imul scas lret ds cltd out jle cmp ret pop pop ficompl add mov xchg mov out push pop sub push out or scas adc mov pop (bad) mov mov adc out adc test jl test shll jge sub fwait andl lahf jmp jge (bad) lret negl and and popf out int3 mov or jne push decb pop cmpsb into cltd inc pop in insl das mov outsb dec ficompl sbbl push pop out push dec adc dec xlat test jmp lret mov shl or cld xor ljmp xchg dec jp out mov dec into mov dec (bad) jne ljmp pop sbb data16 in jle add (bad) jl mov fistpll insb std in mov loop sbb dec scas push jl sub jmp sub cld out sub lret je mov mov sub lcall addl scas xchg out imul dec (bad) or dec push movsb jmp pusha out (bad) mov lds arpl mov out sbb repz loop loopne inc fldz addr16 dec cwtl inc out jb jbe jo xor mov adc add cmpsl call mul pop pop and lret cs sbb jg jl xchg (bad) outsl and jno fistpll sub jns pop out cmp nop andl xchg cmp out jl jmp int3 pop fildl mov sub pop add fcoml cmp leave sbb in lret and inc aad cmpsb or shr cmp xchg pop push adc xchg sbb addr16 sarl jecxz out test mov pop loope xor cwtl out hlt fiadd ja rorb jbe out inc ror (bad) lea out je les or fwait out rorl rorl mov xor dec or mov in adc mov int fnstsw or in push jb mov sub addr16 adc cmc out jecxz loope ffreep push inc jno out sub sub stos add sahf rclb (bad) fldenv adc lea movsb arpl ss outsb xchg sub outsb xchg popf mov out xchg cmc (bad) (bad) sub cmpsb loopne pop xchg and and add mov add mov pop out int add cmp add inc fsubrl sub mov dec ljmp pop sbbl lock mov idiv jbe lock sbb inc imul xor push inc or mov lock rclb cmp je iret sbb push out mov dec xor das and cmpsb mov ror out inc in push incb xchg xchg or out mov sub or mov mov pop rclb mov jp call push pop std and outsl mov xchg inc pop ret mov out dec out xchg sbb jb mov push (bad) scas lcall adcl push rol push xchg jmp fs mov dec sub dec fnsave stos test and in jae hlt out and js shll cmp jo cmpsb leave xchg jnp out rorb pop arpl dec mov pop (bad) movb leave shrb jno lds mov lret adc imul mov xchg push inc movsl int out jg dec mov sbb loop lahf push fildll stos push sbb les xor mov (bad) out add sbb rorb pop and xchg into movsl xor mov cwtl cmp stc int3 repz clc outsb and xchg loope cmpsl jb out js cwtl push adc sbb and fucompp dec bound pop addb sub les jae and or cmpsb xor daa mov not add out mov bound mov jmp inc in incb sub loop fwait in sti dec movsb out mov repnz leave (bad) mov jae loop xor sub popa jns daa fistp repnz hlt adc ror gs and stos pop sub sti mov aas in in cmp out je pusha xor out insl adc aas cmpsb repnz ds mov shlb aad jae out adc into outsb mov xchg out in loope push pop repz out movsl jp mov imul out or mov and (bad) mov fldln2 (bad) call cmpsl jmp lods push add imul sub fist cmc cld std adc pop fidiv iret jmp popa or push jo and in push out mov lods mov les testl xchg movsl lock lahf out push inc and ss scas out les cmp out mov jle popa out test push cmp (bad) or push xor mov outsl fidivl in adc pusha fildl rolb cmp mov pusha in jns xor or ror out ja ret dec inc dec dec push rclb outsb out rcl movsl mov sub mov out adc mov dec je or fldl mov daa xchg scas add (bad) mov xchg out jne or mov dec out xchg je pop adc cmp outsb in pop inc dec adc test (bad) sub mov jno mov fwait daa xor arpl xchg in sbb mov xchg shrl inc leave test mov pop and out push xchg dec inc ss xchg add mov adc aaa mov imul int ret mov sub insl mov xchg out push stc sahf jo add xchg fnstcw pop or fwait add out xchg lcall out sub out jne incb lods mov add loop sub xor xor out inc add stos push out sbbl icebp sti cld jge xchg int3 xchg inc mov fildll je test xor das fidivl or pop out scas add inc mov lahf add int mov inc loopne imul addr16 mov stc gs pop jle (bad) outsb inc jb (bad) jbe arpl popl sbb inc data16 jl inc lods add pop (bad) ljmp (bad) fsub add ror js add (bad) out xchg lcall pop ds sub iret mov lret out mov and add dec mov mov imul icebp out out fs fidiv push xor jmp testb and cmp popa pop mov lea and mov out add out mov mov cmp pop dec jl xor xor jns dec into pop push int mov test das rcrl out aaa sbb into out cld (bad) pop or mov pop out (bad) sbb jns out pushf mov scas inc mov iret out popa aas lds decb xchg imul mov mov inc ret jl out jne cmp (bad) sub out insb push leave cld fadds sbb out jae jne xor dec xlat in ret idivb inc or out out loope jo subl into push repnz mov push jg out mov inc imul (bad) push cwtl ret out fstps xchg pop adc cmp stc (bad) pop in xlat mov out cmpsb sub out shlb (bad) pop out into lods mov push out push rcl and xchg sbb out inc repz adc jo pop adc out and mov das and ficoml (bad) mov hlt inc cmp out lahf xchg movsl lret into dec out in xor mov out imul ficoml inc pushf push shr in mov sarl out stc xchg lret rclb mov pop pop enter test mov sbb inc fmul in pop stc out xchg out leave mov and dec inc pop push repz sub cs stc mov jle out mov mov jecxz sbb dec adc ljmp out push ffreep jmp xchg insb test out push sbb xlat arpl iret test iret pop in dec mov stos mov or sub aad xchg pusha in sub out mov (bad) cmpsl ja jl mov xchg daa sbb (bad) push or insl ds pop icebp stos lea shr xchg add pop cmpsl cltd xchg mov sub push dec out stos xor cmp ljmp or jo jne inc iret mov xchg iret pop (bad) jle out and in adc add push pop jbe int out mov dec adc lods sbb in shrb loopne mov scas push pop push outsb mov (bad) out pop fs jae lahf inc fsubrp ljmp fcom or add push loop out xchg fistl add adc adc pop add cltd aas push push (bad) (bad) pop out test ss or cltd inc jg enter ret bound cli sub add push xchg out xchg mov enter adc and pop adc fimull outsb jae outsl out xor and fwait mov inc int3 mov and movsb push addr16 (bad) ja pop jmp lock fdivs out cmp inc lret out in rcr inc push icebp or add jno sbb scas imulb and ljmp pop std sbb push out out mov or cmp dec push int3 jnp aas cmpsb cld divl ljmp and lods jg test mov fldcw fwait mov mov add iret adc fucom notb xchg jbe scas and int3 dec imul test xchg ret call add inc mov insl in lods out inc lock xchg add jmp adc pop push cs int3 or movsb mov dec sub aaa fild cmp or pop push mov add (bad) mov fsubrl dec pusha out cmpsb imul test sbb adc inc xor rcr pop inc cltd or stos mov lock jl dec repnz inc leave je xchg adc movd or mov lods push adc adc mov jae push pop out pop inc push lahf outsl test (bad) mov out adc fcoml mov add fstl call lods andl ja mov mov inc shlb mov out mov dec ret shr js call fwait das fimul popa dec lahf out xchg into jb jmp loopne cmp mov sbb out sub ljmp ret ficompl fistpll loop push fs ss out idiv mov std bt (bad) nop and or xor scas mov mov cmp icebp (bad) iret out movsb scas out in sbb adc cli pop ret lods (bad) out or push rorb test fcoml (bad) pop ljmp (bad) in out test insb iret pop lods and ljmp mov cmp out (bad) loope (bad) push fiadd pop ljmp int3 adc pop nop xchg mov xchg (bad) out out ds (bad) push mov sub inc dec in out sti and pusha mov xlat out jo imul rolb sbb (bad) ja push cmp leave add mov rcll aaa pop mov dec push and cld pop imul inc ret (bad) out cmp mov pusha ss scas out xchg out (bad) cmp mov fwait repnz sbb pop mov gs push sbb out insl adc push mov inc push and in pop aam out push mov pop gs cmc aaa out mov sti out cli cmp dec xchg cld je pop and imul xchg (bad) mov pop inc into lods std pusha out xchg scas loop sub out fisub test mov mov add cmpsb xor cmp inc pop out pop sbb fwait pop cmp call mov or stos out mov into mul shrb push mov ret inc (bad) xchg xchg jb and popa lods iret ficomp lods jle int fs call inc cwtl test add pop jecxz cs int3 out lods (bad) je push daa and out jg push dec dec inc pop pop aam pop into jmp iret sbb or loop dec gs sub (bad) imul hlt lahf mov call popa or lret stos xchg mov mov out lret jne ret cmp out and es sbbb inc cwtl jl jns add inc shl push cmp scas lods push out sbb pop into add and out movsl notl jae xchg and jne sarl lock push lds jne sub cwtl stos cmc out je into add push gs lret loope push lahf cld (bad) outsb (bad) ss repz loop pop out inc in out push xchg jbe dec imulb (bad) jmp jp push insl les sbb inc cmp in stos and rclb cli (bad) out pop jecxz pop jle push (bad) out cmpl stos in push rclb lcall pop out nop inc inc (bad) lret xchg out ja sahf xchg cmc dec ljmp out mov xchg stos js cmp xchg out fimull out or enter jbe out and das out bound test dec ja push out mov negl rolb mov out add out fdiv fsubrs (bad) repz pop or add adc idivl out dec fldl2t mov mov pop mull xchg out dec (bad) jp jbe (bad) dec out and lcall xchg jbe lods sub pmaxsw cmpsb mov push ljmp (bad) pop lret cmpsl icebp call lret (bad) xor pop js insl in jmp jge jo push mull fdivrp xor dec sbb and shlb pop std inc popf sub mov pop sub xor clc add push dec (bad) jae stos adc xchg mov aam mov test out pushf mov pop test shr push inc (bad) rcrb out jno jne out xchg mov or fsubs call nop or ljmp into (bad) lret sub pop dec jecxz xorl enter pushf cmp fldenv jbe repnz inc out mov push and or out mov imulb dec cmp out jbe push int3 into movsb lea aaa jl dec cmp out test pop sub xchg xchg jb mov popf mov adc sub repz mov mov push pop in pop mov test push sub jmp xor mov mov out bound aaa jb jae and push inc mov inc cmc stos (bad) je xchg out packssdw add rcrb mov and fsubs scas jbe sub loopne inc leave jmp mov pop bound out xchg cmp out ja cmc addr16 cmp out cwtl in lret jl push enter leave popf cmp imul or aam mov ficomp dec xchg sahf mov pop mov xor pusha pushf ret out push dec movsl rcl aad lahf cmp enter ja mov pop cwtl jbe fstps push fcomps xchg push loope js push adc cmpsl and out out test inc mov out insb stc or out (bad) lahf (bad) (bad) push pop data16 cmpsb jmp xchg ja adc fs aaa push inc loop leave mov lret inc cmpsl xor jo adc std pop inc dec inc int3 iret or xchg xor mov test mov sbbw mov push sti push arpl dec mov lock inc shr jp pop lahf lds out fstpl xchg out in push clc push (bad) dec fldz mov movsl pop lret out push out xor push (bad) cmc (bad) out and movsb cmpsb roll xor inc js jmp out pop or sub cmpsl cmp sbb out adc mov adc out sbb lret or mov xchg jns fadds into jg mov mov mov xchg jl das dec jge jo daa mov rolb das add jnp add sahf out xchg sub cltd pop mov loop xchg test out and and loopne leave out mov lds cmp adc call xor push and out clc and push push pop add ja jle or push xchg incb inc add adc out or pop scas xchg push push adc in jns dec out bound call and daa xor out or out add dec in inc lods xor cmp cmp push xor insb dec (bad) or inc movsl fsubrs ds sbb repz dec insb xchg pop pop out aam pushf (bad) jg shrb mov cli xor mov hlt outsb xor dec out decl mull sbb rorl movsl cmc out mov cmpsb in xchg pop sbb jg shl in cmp xor je jp push jecxz test cwtl lock out ret xchg add pop out dec adc lret dec cld xchg mov pop stos jb out push jne sbb dec loope out push add je xchg push mov xchg (bad) in rcrl out mov fcmovnb jp add pop and xor cmpsl out lahf sbb dec ljmp sub pusha lret fbstp jle jnp sub add outsl test (bad) lea xchg out fs adc sti dec mov mov jmp (bad) insl in out call mov or add nop adc pop mov out mov jle lahf mov or push (bad) lcall imul out jp pop xor cmp pop call in ret xor push mov jbe inc adc mov lahf inc jecxz iret (bad) pcmpeqd sub iret leave sbb push loop cli xchg stos test insb leave out (bad) cmp lahf fistl faddl mov cmp push pop ljmp lahf pop or sub xorl jae xor frstor aas out pop rolb out (bad) or movsl xchg iret jae nop cltd lret je dec mov (bad) (bad) sar stos lret loop cli scas adc out mov lds fwait add jge and pop push sarl out jmp dec jge ljmp mov xor mov sbb dec pop (bad) sbb jns dec out cmp sbb out lret (bad) adc stos out icebp dec pop test adc arpl xor stc jb mov inc (bad) hlt cltd (bad) icebp sbb cmp mov call call out mov outsb mov mov or and jae and adc cmp add pop pop mov jle neg fstl mov sti das cmp inc imul loop jnp inc jb repnz andl jge aaa xlat adc xor out in in ljmp out sub push jb pop mov dec or out repnz out stos mov test jb inc jl xlat sarl pop in cmp mov jo,pn pop loopne sbb jmp in outsb xor out and jl jecxz pusha ljmp lds dec out movsl jmp cwtl xchg test out cmp es push rcll pop pop mov aam scas add nop movl inc pop pop loopne out hlt repz cmpl add dec inc arpl outsb jmp and pop (bad) mov rolb lds cli fildll sbb mov fbld push push (bad) dec out idivb pop xorl cmpsb in cli push pop mov jecxz addr16 stc js cwtl mov cmp outsb clc out cvtpi2ps add out sub hlt inc and test adc mov cmp inc mov and daa or rolb mov jg out cmpsl out and or (bad) lcall fidivrl jns out cmpsl xor (bad) out push inc lods jle jne adc pop (bad) xlat nop xor fisttp (bad) cmp pop and outsb inc mov cmp bound in addr16 sub les out (bad) in cmc aas in jb out or cwtl mov mov je or sub push das out cmp cmp jo out (bad) jge (bad) jne cmpsb inc jbe out cltd push imul mov cwtl jae xor mov out cmp mov rolb (bad) sub iret loop and out mov push insl outsl lea loopne std out movsl scas sbb (bad) xchg inc adc sbb roll push out xorl xlat sbb lods pop movsl fnstcw loope jbe mov push or (bad) hlt (bad) out test mov lods inc out adc xor push sub (bad) fwait xor in sarb out das and push xchg out mov mov and inc adc pop mov jmp mov insl pop out sarl mov and inc out mov mov jnp sahf leave insb xchg jge xchg sbb xchg xor (bad) call push push ror in inc out cmc jns out mov adc repz (bad) out cmp sub mov repnz out outsb adc mov nop and xchg jge fist rolb loop or out and pop (bad) or cmp movsl aam cmovle sub out repnz out sub aam adc cltd xor inc loop lcall adc (bad) pop xor mov jmp add fbld in cmp add loope (bad) mov jl dec lock (bad) lock sub ljmp fsubr add mov popa push hlt inc jae fnop and insl jne shl iret mov xchg nop out jge hlt (bad) (bad) (bad) out (bad) mov incb jle jne test es sbb (bad) loopne in push in or fwait xchg jb (bad) daa insb test dec int ds cmp out aas rcrb pusha jne mov jmp xor shl jecxz ljmp (bad) xor mov stos xchg jmp arpl sub stos (bad) out and andb in out sbb push nop cld int dec mov adc test mov and into dec out rorb sbb sub out sbb mov mov pop out mov jno jns rcll pop mov outsl in push push cs xchg rcl out jp sub out xor pop lcall sbb in jg push (bad) stos bound mov mov iret push adc xchg in pop push adc pusha push jae scas push out xor mov pop mov pop out add lahf jle ffreep out negl xchg or mov push daa mov nop xchg xchg xchg out test fsts aaa aad add aam out clc inc sbb lea dec jmp push sti dec sarb pop addr16 mov sbb sti fwait ret lods movsb cmp lds movsl inc dec out xlat fcoms popf cmp icebp leave xchg bound push xlat pop les ljmp ljmp (bad) and test mov loopne sti mov push test movsl adc call out cmc jo dec mov xchg sbb pop jge xchg mov pop bound imul jae push sbb in sub adc pushl daa (bad) jl ret call out test sti mov out cli in (bad) pop xchg mov out add cltd xlat xor pop pop out les fsts mov xchg fsubs push out or and adc shlb int test scas cmp mov out rclb or pop mov push add ljmp (bad) loopne push outsl out sub push mov pop adc out or es rdmsr daa inc jp fs pop dec clc jecxz mov (bad) inc lahf cs pop scas xlat mov (bad) adc loop cmp testl inc es adc addr16 lcall out xchg mov xor mov mov fldcw mov jg push add inc lahf pop fistpll dec aaa into out pop xor stc or cmpsb pushf dec jecxz mov sub (bad) rclb in dec mov dec sbb mov fmul lods out mov fbstp and movsb sub lock cmp fldt cmp iret and mov xchg out shll or pushf lock lods call pop movb leave je decb or mov xor into cmp sub test push loop jp out jmp test scas ljmp data16 ds or out mov xchg mov aas pop ja and xchg adc imul mov dec (bad) xchg into fwait xor (bad) (bad) (bad) mov lcall mov arpl cmp jbe das cmp (bad) cli (bad) mov inc loopne popf or or sar dec sub push clc out cmp lock insl aas or jg jno adc ret dec iret sbb add add sub or popf adc in pop out dec int3 pushf (bad) dec jg arpl jae push sarl mov int3 and jne in lcall outsl out xchg in push mov jp out xlat xor loopne out xor sti mov push (bad) mov mov leave out (bad) (bad) mov push or fnsave xor mov fcomi mov push enter addl and mov in out dec imul (bad) icebp adc out daa bound mov fs orl (bad) stos push mov mov or mov cltd fdivp add out and sahf adc out dec das xor out addl jbe pop mov (bad) popf dec xchg push mov test movsl pop dec add mov pop sub mov test dec jnp in gs in inc and nop mov mov push jnp jmp repz mov (bad) (bad) cmpsl into loop orl push call int out daa xchg hlt out rcrb leave push pop cmp pop push push cs (bad) sub or sub sbb jne inc mov lock jb mov jnp cmc pop arpl iret out sbb data16 pop sarb (bad) imul sbb adc inc sub (bad) mov out xor dec sbbb jp pushf mov and mov sub int3 outsb and inc out sti mov dec dec data16 (bad) iret dec stc lock out sbb push addr16 pop lret gs fadd adc ucomiss pusha adc pusha mov lret out mov dec xchg xchg out xor leave aaa daa addl lds (bad) jne mov inc and negl cmc pop bound and or dec test cmpsl mov outsl leave xor int enter mov in jnp inc push js std lods clc lret out lock out dec lea insb xchg imul mov imul fild sti fisub out pop xor push scas mov pop lods dec xchg cltd pop xlat imul das out or ret in push out inc add cwtl out (bad) or mov pop or insb cmc cs push pop loopne int out (bad) jp dec adc mov inc xchg xor (bad) pop push and fs hlt lock out and xchg les roll mov ret les xlat movsl xor dec ja cmpsl xor in das out pop jae jne outsl into dec out sbb popl aam stos sub mov aad je mov cmpl xor or mov lahf out push mov bt in roll loop insl pushf jecxz push es out lret aam scas jle out dec pop jnp sahf mov sub mov sti (bad) out push xchg xor (bad) xlat or (bad) lahf and lock imul (bad) sbb (bad) out cmp mov xchg cmp fidivl cmp cmpsl push xor pop mov jns jle push xchg inc iret mov xchg adc adc and lcall icebp insb inc out enter imul mov out into push and dec movb fstpl faddp out or pop popf xor faddl in subl (bad) xlat add adc push xchg cmp dec daa imul out mov cmp rol aaa pop ljmp negl sub imul inc mov mov (bad) mov jae daa jge out inc stos jmp jl xchg enter movsb dec jbe test bound lea fisub out lock sub popa push into pop data16 jp insb mov stos cmpsl sub jno push adc and jmp lahf and lods test cmpl in out jno ja pop dec sbb int3 and out cli xchg lret movsb in iret out incb outsl (bad) lods movsl mov mov std add mov fildll out sbb and mov pop subb (bad) cmp gs add sbb movsl out int3 and xchg jmp inc popf pop data16 (bad) pop call aaa sub (bad) out pushf mov in test outsl out jl pop push in and jno sti in icebp (bad) xor jmp (bad) fisubrl clc out iret mov outsb rcl add or test push in and lcall shr mov outsl jmp call xchg out (bad) jns lods mov sbb xor xor dec fistpl rcll pop sub out jmp add dec fs ret out mov mov jecxz mov pop call mov pshufw jg xchg aam cmp mov out fnstsw add or xchg cmp or in sbb arpl xchg xchg adc pushf in cmp and xchg sub pusha lea dec in je frstor pop das adc bound and (bad) sbb fcoml or push pop jp dec mov repnz iret pop nop popf add and out ret shr or into js icebp push sub lock sbb (bad) mov out mov (bad) test mov in inc xchg pop mov outsb sti out push sub mov (bad) sub pop or out and (bad) (bad) es out push push push out push enter inc lds (bad) call aas clc fwait mov xor sub outsl andl xor (bad) iret out test xchg xchg pop jnp (bad) fnstcw ljmp mov (bad) fmuls mov loopew das hlt test xchg out or loop xchg mov mov cmp hlt out outsb xlat ja jp jns out (bad) es xchg lock out or fs loope or pop push out (bad) shrb daa xlat imull iret xorb adc add inc out popf out daa dec mov out xchg and fwait vmulps out int3 jno and xchg mov (bad) cli xchg jmp push add loop notb out movsb jno cmp ss pop mov jne out lods mov inc or insl out jle jge enter leave mov mov jg push in aas adc out add xchg insb dec insl in adc lds (bad) fldl ljmp repnz inc add inc test pop test mov jno cmp fisub mov mov mov push sti ja lock out cmp add xor xchg icebp out hlt mov imul jmp adc and sar fisubl sub ds out inc mov (bad) mov adc sub jns mov out negb out movsl mov cmc jmp outsl (bad) jge js ss int adc movsl out lds mov (bad) (bad) stos xchg pushf daa out lahf sti jg mov sahf (bad) cmc lret mov popf (bad) lock mov inc mov dec xchg out dec add out loopne jb loop cmpsl leave in shr jne addr16 out repz push dec movsb stos or adc movsl pushf sbb cmp outsb insb pop jmp pop gs and jo out clc mov xchg sbb fmull mov inc jge add aam cltd xor movsb vorps outsb out push iret fstpt mov (bad) push xchg (bad) out mov push imul andl mov pop mov inc pop sub pop pop je aam push mov out push fstps aad hlt js inc into adc loopne xchg out jp clc push mov push out outsl popa xlat fnstenv icebp gs out test xor or adc pop mov rcrb out jle sub dec jle in mov addl icebp out aaa sub das nop jmp lret push push inc cmpsb loope xor add cmp inc out pop loopne call out xlat loop cltd pop lods dec mov and (bad) sbb xchg vmwrite and incl pop mov mov push cmpsb out outsl in sbb lret ret out aaa and cli out loopne out enter sub jp sub leave jb dec mov aam aaa xchg mov cwtl das out or jl cli test push dec sub imul fisubl in xchg jmp out mov fildll sahf cltd out fnstenv es sbb lods cli in (bad) cmp loop fidivl lcall xchg push fsubrl out add loopne push cmpsl mov out or jae in lret jb push rcll pushf loope add iret inc call loopne in pop out cmpb lahf sub popa adc mov stos in mov jns lret dec popf out fwait out cltd push mov cmc dec pop fadds out sub jbe dec xor xor adc fmuls push lods inc out and les mov gs xchg inc push mov scas lahf out daa sahf orl lcall imul out cmpsb (bad) repz xor out into xor outsb sub in inc ds lret mov fistpll mov (bad) out add mov jae add int3 or cmpsb mov mov dec out loop sbb xchg xor in aas loopne cs loop and lahf mov mov out cmp out loopne jne out lds cmpb mov out call pusha jae (bad) and dec pop js aaa nop ret mov lea cmc or ljmp push mov loope adc cmp xor xchg adc push fist dec and cmpsb pop push push sub mov dec mov sub orl ret pop push mov and and aas sbb sub test sbb cmc in loop xchg adc xchg loop pop xchg pop out mov xchg cmp sub jb xchg aas leave mov (bad) out ljmp inc sub sbb jl dec jbe aam ss jp lea mov and out (bad) hlt xor (bad) mov and push push jbe jae mov inc sarl movsl out inc and jecxz add or jmp and sub repnz inc arpl ljmp dec xchg dec cmp out xor mov jne (bad) sbb int pop jecxz jmp popa out mov (bad) out xor subl and pop or loope or jecxz imul mov js or mov push push out mov inc pop pusha dec sbb jb xlat (bad) jecxz xchg push rcr in push int out das dec mov xchg test lock cmp xchg xchg mov adc leave scas data16 mov sbb push cmpsl rcl loope pop mov xor int3 sbb mov jp out mov setnp (bad) je sbb out push pop mov xchg push out mov push and test cld cli jmp nop sub dec divl or mov scas shrb fs clc sbb adc adc jo fbstp jge mov push sahf call (bad) jle push jmp inc mov jg int3 mov xchg adc pop fs xchg cwtl enter pop std (bad) call iret mov jne out pop cmp ljmp and push lcall fwait out xor sti and mov call mov sbb and je les adc inc outsb lock aad jno in push pop sbb sub cmp push sti push adc pop loop pop adc push push sub fnop in mov out je push sbb jmp aaa sub fsts (bad) ljmp pusha cltd dec sahf aad (bad) lret fild rcrb ucomiss iret xlat xchg xor sbb out mov pop js out repz out out jae test shr cmp or mov inc data16 dec lods scas lods mov pop push (bad) lcall inc mov pop arpl movsl pop pop (bad) loop rorl xchg (bad) push test adc mov out cmpl fucomp mov clc lret lods movsb mov aad (bad) xor daa insb nopl jns fsub (bad) in (bad) test in (bad) div mov mov insl ljmp (bad) loop lds jno pop into cs xor leave or call dec pop fwait dec push sub cmp pop dec stc mov jle imul pop jecxz int3 lret mov (bad) jg xchg loop and cmp leave out inc cmp frstor adc out in movsb vmread ljmp iret push jl or rolb xchg cli (bad) fdivl movsb loope xchg divb popf negb add je (bad) decl or add mov negl rol in out daa cmp outsl add out mov (bad) (bad) mov (bad) fsubrl in pop pop mov and jns ds fisubr xor pop popf (bad) mov dec insb jmp add out out stos aad mov adc mov cmpsl fld sbb daa jmp fs out jne ret add out fidivrl sub ja push push xor lock pop mov out fcmovne xorl jle iret cld jne addr16 pop dec dec inc int xlat mov cmpsb mov (bad) xchg jns (bad) lahf shrb mov iret aad sub lret mov (bad) cmp popf int out dec xchg out test sub mov pop lret lret dec out sub out negb or in push pop jo mov mov dec out jne adc shrl dec push push test jle lods das (bad) jns lds ljmp pusha cwtl mov out and (bad) mov inc sbb lahf mov ds imul addl ss ret subb out cli aas sar ljmp jecxz adc js sub mov xor jbe popf mov das out mov aaa pop pusha add bound (bad) fistl jb xor stos das xchg push outsb adc repnz rcrl sub aas cmp push or repz rol pop push mov into mov hlt mov jl in or (bad) std jo push aam cld xadd andb cwtl jns loop jbe mov ret mov sub mov insl icebp out jmp sbb out ljmp push repz out or cld popl out jb arpl shrl out sub mov dec aam jae loope or add cmp push pop jg rorb or jno lea fsub cmpsl adc popa pop out xor ret dec add adc mov aas xchg jnp pop mov lcall adc out fist (bad) imul mov inc sub imul mov jl (bad) out xor xchg out dec adcb ljmp lds out cmc dec jb sysexit arpl xor call out lret mov adc xchg add sub ficomp cwtl cmpsb mov pop lea add das (bad) out add jno (bad) popa pop pop iret iret mov data16 cli test daa imull clc xor outsb pop mov xchg or fistp pop mov mov dec mov out jbe (bad) push roll out pop idivl (bad) fidivl fmuls jne inc rcl adc push repnz movsl cmc xlat xchg jl mov (bad) imulb jae jmp loop sahf fnstcw daa out in lahf sub xor (bad) mov cwtl (bad) std je,pn iret jae bound dec pop cmp ljmp push sti lret cmpsb lods (bad) out inc push aaa xor iret mov out mov jle mov int3 push cmc (bad) fildll dec mov pmulhuw aad xchg cmp add shrb sbb out ljmp mov cwtl out icebp inc dec jns and call add sub xchg (bad) ljmp mov lds mov sbb test insb mov data16 and in add and pushf out pop sub pop in negb inc out fiaddl sahf push fbstp cld or out inc mov shr stos ficompl out dec js jne push popf inc out push icebp popa aam cmp (bad) out mov cld mov pop or imul mov jp sar sahf ret jmp xor mov fucomi pop movsb pop aaa dec pop sub jae lods cwtl in mov out mov push stos jmp negl out std call out xchg popf lret sub xor cmp (bad) aad sub mov jl jmp (bad) into push out adc aad sahf loope jmp xor inc push in sbb and mov imul pop cld and push mov out repnz sbb pop stos movsb pop loopne js (bad) insb adc out pop jp test out fisttpl xchg lret out shr pop xchg mov lods aam fildll sub and cmp sub scas xor (bad) repz sub les cmpb ds mov pop ja test lahf and xchg clc aas aas fimull je cmp xchg jnp gs cld fwait out dec test or movsb jbe mov mov pop loop inc addb int out ret xchg pusha jg (bad) mov push mov xchg icebp pop push cs adc sbb sahf outsl mov cmp and aas mov mov pop in mov pop test inc adc lock (bad) aam out loope adc xchg test ret incb xchg mov in out stc out mov (bad) iret xlat (bad) cs sub andb push je sbb fdivrl mov aam mov jnp cmp ss out out mov popf xorl int lahf daa mov call inc push pop mov ficomp out loop (bad) jb pop das imul fcmovb ljmp mov ljmp out (bad) pop xor push pop out adc add ljmp dec out xlat lods inc jno int3 outsb pop rcrb cmp fs push fsubr mov repz sbb mov mov test cli cmpsb ljmp out lods lret push cmc and adc out insl leave mov jle inc fisttpll popa out lods cmp jne xor mov out adc mov lods arpl in out imull mov adc and aad or sarl ljmp enter jae and adc cmp insl fstpl hlt das pop and sbb dec out cmc ja cld xchg fwait adc je xor mov fisttpl cs xchg sub jle addr16 aas xchg cmp test pusha inc outsb push push sub mov jle pop (bad) call jmp inc xlat (bad) jae (bad) sub push ret and leave data16 shrb arpl dec dec stos xchg jmp dec mov (bad) jge stos push lds aas insb dec divb loope mov inc jecxz fs outsb (bad) hlt and push lods lcall in jp (bad) xor out ds loope out mov das imul mov push and loopne or out and inc mov sub pop loop (bad) (bad) xor daa xor lret sbb sub in out inc pop jbe mov fcom jge rorb clc mov ret cmp lods xchg xchg (bad) fldz sbb out add cmpsl in hlt pusha dec dec out jp (bad) fcmovnbe inc out push xor (bad) mov pop (bad) aaa (bad) push shr cmp adc pop sti pop test test mov mov push and negl xchg outsb inc pop outsl fild adc insl lret mov popa mov movsb insb inc iret sbbl test mov pop jb cmp in mov push dec mov mov inc mov out add hlt adc sub shr shr sub shl cmpsl push jl adc call mov out insl es or push mov jb lcallw fdivrl mov shrb mov cmp jl out mov in outsl out nop lock stos insb out mov jns out pop test lret movsb out and frstor inc out (bad) or in push loopne dec and out push out dec mov inc cltd dec out push pop xchg cmpsb popf cmp gs xor scas push int3 xor das sub out sti mov out aas and pop push inc out cld xchg (bad) out (bad) mov lods cmc out fmull mov rcrb mov lcall out mov out test sbb sub out mov inc sbb cmc int push out add outsl mov imul xor out jl lahf fisttpl popf int3 push (bad) push adc ficom enter push out ss test and xchg cli loop push insl out sub mov mov aaa (bad) fadd loop adc fcmovbe out mov xor xchg clc sti push jmp enter jnp out inc xor fistpl stc data16 not cmp mov sbb pop insl lahf jmp push push pop jecxz mov mov movsb cs out mov mov adc outsb insl lds dec ss mov and mov (bad) divl jnp jns aaa xor push or sub xor mov fiaddl mov dec out and lret jne cvtdq2ps dec sbb pop sub aaa bound or lock mov sub out test cld stos outsb push cmp movsb push das sahf lock xor xchg es out push mov cs pop jo in in cmp lock out dec repnz pusha out adc add mov (bad) scas out and addr16 scas decb mov pop cld mov xor jbe stos add fistpl bound out lds or mov cmp je xor (bad) adc fsts pop cld jge push test dec loope ds (bad) incb or mov add mull out clc dec dec imul mov mov popf fcompl cmp out pop pop push test fwait xchg jns pusha insb fsubrl stos cltd and out dec pop mov pop out arpl pop (bad) popf (bad) hlt inc out push cmp ljmp pop jo jl (bad) shrb lods nop mov xor mov (bad) lahf fist bound or or pushl std enter (bad) sbb (bad) out add adc iret mov stos mov push out lret popf cmpb dec xchg lahf fcoml lock test shr std mov je lahf xor push out inc inc mov out adc pop in fs inc out jae movsb sbb lret ljmp mov andl push out int3 jp push mov (bad) xrelease jmp add dec in ror cli out adc mov push add arpl xchg pop (bad) mov jle sub sti out pop aam sbb jge negb lahf fsubrs mov jmp sub out xchg daa aaa pushf loope hlt lods out into jb ret sbb (bad) mov push adc lea dec imul out and cltd jp movsl push cmp aad fs out pop pop ds rorl push lds add cmp out cld bound call lahf pusha push sbb cmp inc loopne jg rolb stc or jnp insb dec inc dec fwait cli addl mov aaa in push add cmp jmp gs repnz jne push ret sub addr16 lret pop push clc out mov iret cs ss pop hlt testl adc fisub add negb xchg mov out test scas mov xor jae (bad) jle fmul pusha xchg sbb aas imul push out xchg test insl pop mov xchg mov adc and popf mov cmp out stos mov mov fs mov imul lock push sbb movsl test and lods nop sub dec (bad) push mov mov sbb sar out push repz pop jecxz lea mov and jmp decb cmpsl push add out pop or or pop (bad) les and out lea daa orl or (bad) mov loope into out cvttps2pi les mov pop sub in stc movsb jmp cmp mov fyl2x mov mov addb out loop pop jns and movsb out xchg ret push lods push or out mov add xor inc cs mov insb lds mov and call jae adc dec dec jle jmp mov inc roll insb jae mov and lret iret push jns cmpsl sub sbb xlat mov out xchg or les push inc aaa iret dec sbb in fdivrs shr pop out (bad) mov test jbe out inc or fwait xchg out inc adc and sar or cli mov dec js (bad) and stos mov cld scas mov icebp sbb or push xchg out mov pop lcall mov sbb or mov shrl test int sbb ret adc aam out outsb cmc jne in jae,pt out pop mov out cmp mov negb out cld sahf movb push cmp test push int3 xor jns out (bad) or pop inc xchg (bad) xchg in stos xorl xchg mov ja bound out jp and cli jge fnop inc cmp out push lcall mov mov nop pop lods jge xchg pop flds imul lahf int dec dec fsubr aam mov jne insb inc pushaw jge push jg mov add xchg mov (bad) push push mul out or dec icebp out loopne (bad) push sarl lret pushf (bad) dec push insb adc cld movsl pusha xchg push ljmp rclb out imul xor out mov push mov push cmp and fdivrl hlt inc push in mov imulb jp loop lock (bad) jae xchg sub stc add mov js fldln2 (bad) (bad) xchg iret shrl bnd mov sub push fildl push in mov nop out pop sti and bound and inc (bad) fsts imul cli in ljmp fs paddq inc push data16 push pop cmc out in out pop pushf lds movsb loopne gs add out fs lods and out cmp das arpl mov jge out aam orl rcr (bad) in cmp push stos mov mov ss pop outsb cld fwait mov out cmpsb insl mov mov xchg fldt test adc je pop or mov ss (bad) lsl adc or inc add mov inc fadds loop ret mov push mov pop lret out nop add mov inc pop cld mov cmp popl in enter out push lea stc out loopne aaa adc out jbe pop ret add xor inc mov pop sub pusha cmc mov out bound adc out dec clc test lahf cld imul (bad) dec scas and cli inc out adc dec roll pushf xchg fcomip lret lock lea out jge loop inc mov and mulb sub scas or add push scas imul lds out push jp idiv scas fisubl arpl add lds xchg mov out fcoml js mov xor fs lds cmc fildll pop dec sub mov sbb sbb scas cmp pmovmskb and pop adc test pop out rcl fwait mov scas push fdivl cvtps2pd sbb aas pop in cwtl sub inc pop aam xchg and jge mov (bad) jae mov pop popf scas jb and mov out mov ljmp or xor and ret out mov inc imul jne shrl call xchg out (bad) mov out popa xor movsb fiaddl stos dec cmc ja out add mov xor call inc leave cli (bad) das rcl adcb pop push in jl inc mov push adc loope xor outsl test lods mov inc fistp loop pop in loopne cmc out jbe pop lods mov jne adc mov daa stos idiv fistp out jbe (bad) cwtl xor mov sbb pop loop pop sbb jl cwtl loop xchg cmpsb jmp out mov pop aaa ljmp adc dec cmc cwtl dec cmp jns ja ds or mov ret repnz jbe out in outsl aam jecxz std shrl xchg aas push inc decb inc aaa (bad) jo mov add pop cmp shrb push and fcmovnu jbe out sub push out arpl xor push popa cmpsl in out push sub add pop int mov mov mov lea pushf call bound pop and out mov push cmp imul mov dec (bad) out and ja sbb pusha cmpsl mov push loop (bad) push sub add test lret push out (bad) imul cmp and out sbb mov adc mov addr16 out loope lea xchg in ljmp imul sbb (bad) push fcompl mov (bad) andl sub mov out push sbb push faddl out ds out mov or dec inc outsb iret (bad) mov ret es shlb out mov dec outsl ljmp js test out inc imul hlt in clc out bswap or les push ret lahf xor (bad) or mov (bad) mov loope add repnz mov inc (bad) lods sarl pop add out add stos pop adc xlat out mov jecxz dec out lea pop jae xor adc loopne dec pop ret mulb fnstcw out adc sbbl mov push mov bound (bad) adc ret fldl out mov mov out dec jnp or in dec in sub out je pusha dec mov adc pop mov jb jp roll popa and insl push pop out jne iret sbb (bad) movsl adc out mov jle pop sarb loop mov (bad) cmp addr16 stos xchg lods push and sub and push stc test dec ss jnp lcall (bad) and pop insb xor ljmp arpl and jmp out outsl sub rcll inc scas out adc cmc sbb jge mov push pushf xchg or imulb out out pop vmptrld shr add and in push pop pop (bad) jge jmp in dec ds js push mov cmp jne push or mov pusha fwait std stc fldz adc sbb aas xchg cwtl mov out mov (bad) sub stos bound xchg jg in out lds cltd out jo sti outsb sbb pop push scas pusha out icebp mov xchg cs out push sti push or test or aaa jno mov jmp sbb arpl dec and mov in sti es imul push testb out adc push fucomip mov mov cltd pop jns sarb in in (bad) out jge jne lahf pop mov pop inc mov and in fisttpl out mov insl jae or repz mov in outsb imul loop jb inc add fnstcw pop (bad) pop xor out in lds or cmpsl cmpsl je sub iret lahf sub cmp lret or or sbb out adc push push mov ret mov xchg mov add xchg xchg jmp xchg ficoml out push sti test jbe mov fwait loop mov cmc xchg sarb (bad) (bad) mov in cmp lea push lret dec out push popa cld mov ss out dec push xlat inc sbb dec pop ret xchg cmp sbb clc push in add out hlt mov cmp (bad) xchg (bad) lahf mov jns mov out mov dec cmc xchg shl push ljmp mov in lret inc test cmpsb inc out fimull out mov mov lods cmpsb pop push push out clc (bad) sbb dec sub (bad) pusha xor or fnstsw negb mov stc inc mov fmul sub js,pn adc cmp in out ret sbb or mov jne loop leave insb pop popl inc fnop lahf add dec mov nop out (bad) fisubr loop mov cmc test dec das leave adc cs cmpl call lret cld and insl sub dec fidivl pop je lcall js loop jb sahf in inc and aam arpl jo cmpl xor je out xor pop aas pop and in aam dec pop dec mov insl push fwait mov test push (bad) out mov jge push xchg loopne out jmp fstpt dec mov push sbb imul push xor outsl jbe jmp addr16 es out mov cs adc xchg jecxz and or lods sbb xchg in popf js xor divl lret outsb das out cs cmp ljmp ljmp pop jbe adc mov mov dec (bad) (bad) fcomps fucomip pusha add pop sub fstl adcl sub push out xchg mov mov scas mov fnstcw pop pop insb into fstl stos popf jmp fstpt clc push pop and ljmp aad pop mov fs dec push icebp out xchg es inc ja and and cmp cltd sbb out es sub jo bound xor xor pop out inc push add les cmc das in out dec push push out mov (bad) fsincos out adc jl mov fwait hlt push xchg sahf stc scas add (bad) loop nop jns mov push xchg out int cmp loopne stos cmpsl (bad) scas sbb cli adc lock into lahf cltd aas in mov cs cmove add rorl icebp pop sbb dec lea sub jnp xchg push pop out imul in popa jmp jmp add adc mov mov fabs cli dec adc (bad) fisttpl push sbb in inc repnz out pop sbbl in je js loope outsl cmpsb pop xor lods imul mov loop push aas in stos mov jecxz mov cwtl out push (bad) hlt lea and or pop mov out jmp clc stos sub xchg and ss and es sbb mov out dec push inc push ficoml out loop repnz mov out arpl fdivrs jmp aaa fildl shrb jne (bad) cmpsb clc cltd or (bad) pop ljmp loopne sbb test out in mov lods int3 lea inc pop loopne iret shrl add out pop int mov ud2 mov (bad) xchg dec xchg jge inc pop out repz pop out push ja jge repnz pop (bad) stos in stos add (bad) fistp ljmp mov pop mov stos pop out mov leave sub add and dec loope pop xchg stos (bad) sbb loop scas inc adc push insb loop in imul loopne mov sbb dec pop pop xchg pop cli mov rcl jne out mov sahf push pop test fldl lret imul ror push scas clc iret (bad) xor mov mov mov xor out mov nop cld movsb out in jge mov push jecxz sub mov out lock aaa mov lcall hlt dec out enter loope xchg adc ret setb mov aad cmp jno insb rolb aas fsubr sbb stos into adc jno and inc lahf add lods aas out xor orps push popa adc scas adc jb pop mov out adc jmp add adc and iret jnp fsubrs out sub cmp mov adc push sub and icebp and pop xor mov bound jo inc movsb mov (bad) pop xchg out imul jb loopnew sbb cmp xchg push and (bad) (bad) out mov inc repnz das jp mov mov fsubs adcb dec aas cwtl mov and pop jno bound inc xchg cmpb out test push pop nop in fnstenv fist dec sub dec out xchg out in loopne js pminub into pop leave ss pop adc add add das xor test xor shl mov mov sbb aaa and jnp vcvttps2dq mov out int3 add outsl out or xor in sbb mov dec in mov rorb mov push and out cmovo aaa mov cld sbb out cmpsl xchg movsb out ljmp stos loop inc and loope out in push push or (bad) jns rol sub mov cmp (bad) test jge std sarb out lcall das xchg and pop jbe push jno loopne mulb loope in ret lcall in jbe out hlt cmc shrb mov push sbb xor lea addr16 sbb xchg pop push sbb mull adc fstl inc inc adc cmc jmp jae xchg cs cltd fucomi pop xor sub (bad) lods and in jmp dec mov shr stos into adc mov add jle mov out mov dec lahf xor pop int popa idivb repnz or repz lret rcr cmpl sub shll push sbb or and je jnp xchg mov mov adc loopne loop sbb and (bad) ret std cmp dec dec incb pop out lods es mov inc imul and (bad) mov inc call test jbe out xor pop ljmp pop cli aam inc xor sbb pop repz es cmp jne xor mov je ss cmp mov sbb mov lcall or clc mov dec out scas or imul sub out push movsb sbb push out pop inc add mov xchg jne add inc pop mov cmp out loope lock sub push in jns jb repnz or cmp push lahf xchg rclb out movsl test shr pop repz or mov mov lea or push push das sub push mov pop cmpsl sbb les mov jmp jno rcl push fwait cmp ret adc out orl and mov (bad) divl lcall fisubl jb adc test cmc xchg out cmpl adc movsl jecxz repz add hlt out jnp cmp addl dec cmpsl stc or out cltd sub clc cs cli out inc xchg mov sub inc add gs arpl mov cmp in pusha adc cmp push loope inc lock pop jo lret (bad) rclb mov les leave xchg fcoml cmpsl (bad) stos imul das ljmp add pop xchg lret sbb insb rol fistp xor ret xor out jmp dec fwait sub addr16 pop fbld mov push sahf dec fstps push je xchg out scas aas out movsb pushf jb sti dec cmp pop mov and mov and add mov js xchg inc xchg dec lahf jns xchg pop out adc out out movq push and out inc mov (bad) ss or jae fwait lods test out mov dec and mov out or arpl sbb mov out loope mov cli lock test cmp cmp pop mov mov inc out out bound (bad) call ret mov insl out jo out xor out (bad) jl adc movsl icebp cmpsb mov cmpsl cs jp fwait dec jne out lahf push lds lret nop (bad) xor (bad) mov out stos jmp inc push push jbe outsb xchg mov out lock cmpsb out pop daa in xor push (bad) jo lret push xchg repz pop adc cmp add dec adc pop jo loope inc iret inc pop pop js sbb add xchg movsb (bad) xor loop shlb sahf push xchg sub mov addr16 adc js and adc out je mov pop dec add out arpl xchg gs int inc adc popf mov scas ljmp movsb lcall cmp and in lret pop xchg nop stc out push movsl mov mov out aad std sub xor ds mov add pop xchg push lds mulb jg pop xchg lock mov pop xor cmp mov mov cwtl sbb sbb inc xor fsubr mov add pushl and rcll out sbb lcall ljmp (bad) lahf inc sbb loop cltd mov pop popa push jbe fucom shrb ret f2xm1 (bad) orb mov inc in jb call mov scas fwait addl cmpsb jle mov mov ljmp nop aas dec dec add je mov push xor mov xchg iret lret outsl out xchg jnp shlb adc xor xor int jns xchg ds out sbb icebp cmp and cmp xor adc push out (bad) popa ret and out (bad) and sbb pop scas inc add sub repz ljmp mov mov mov jmp push xchg out std fld pop stos arpl out scas int3 test out popa test inc sbbl cmpsl pop jg les cwtl mov scas fist pop (bad) adc mov add ret xchg lock lods out mov scas jge bound adc cs loopne mov cmp lds jl mov aas out mov pop inc pop iret cmc popf cmpl jmp mov out mov push fs mov pushf jnp pop enter mov jecxz ljmp inc pop mov push jg sbb dec jae mov fcmovnb add inc push adc out cld xchg ljmp mov andb js shr xchg push in ss mov lcall jmp icebp ds fist jbe in pop sbb into lahf aad push inc pop xlat mov rcrl loope clc repz inc imul rolb adc jecxz mov out mov cld mov dec das and dec out decl (bad) std test insb add ljmp out dec aam scas sub dec (bad) call cld jns sub out mov test cmp cld out xchg mov insb sahf movsl adc push (bad) fnop xchg ds add and sar dec cwtl adc out jbe xchg rcll jg dec daa xchg add push mov jecxz out mov jp and mov out push jb,pn push pop mov shlb sti cli cltd pop in jle loop mov outsl pop mov adc fnsave fsubs jb xchg push insl test adc idivb jne (bad) out dec stc push lcall decb pop je sahf bound pop mov mov or lods mov shrb push pop pusha dec mov out and dec (bad) jne push cmc jge out scas sub (bad) imul inc push outsb sub cmp fsubr jl and dec sub out cmpsb pop movsl dec or mov test outsl stos out xchg sbb das mov pop pushf loope sbb jbe add and jb out into sbb (bad) out push fs stc mov xchg jp test outsb cld dec adc add sbbl pop pop bswap lock xchg adc stos cltd aaa out push idiv xchg mov fmuls add cmp cmpsb jg push jbe xor push sbb cmp inc js in xchg push test aas cltd mov mov out pushf adc subb stos into pop out dec (bad) or jo add push xchg mov pusha inc adc out sbb and xchg gs cli push mov jb mov inc fcoml jle lds out decb mov add jns sbb inc shr jnp and pop nop cmp jecxz das dec dec iret repz xchg mov hlt or push push jb es imulb mov xlat (bad) outsb add out fidiv jae enter rolb ljmp out cmp popf mov pop mov xor out mov lods sti loop movsl icebp out sub add out cld mov pop xor push out ret jle sub pushf inc pop lret dec stc mov out mov adc rcrl cmc clc fistp imul hlt sub loop fstps sbb ljmp xor out sub es cwtl out movsb loop pop fldcw or jle ret (bad) cmc push or jne loope cld jbe rolb pop out mov adc xchg sub (bad) xchg mov or push pop xlat ret and test dec cwtl popa icebp dec incb insb lods stc push scas pop in aaa xchg pop and jmp stos pushf jp sbb add out insb lahf inc mov push aas das mov test sub popf iret adc fiadd in (bad) pop jno cmc xchg insb pop sbb cmpsl xchg sbb in dec inc cmp int3 inc xor xchg push jno add inc adc (bad) popa nop sbb adc inc out stos or or out and lret loopne sbb loope pop rcll push ja dec mov out xor inc adc repnz out sbb pop stos sarl je out (bad) (bad) lret (bad) sbb (bad) test fldz mov mov xlat (bad) and loop in add (bad) nop stos cmp stos decb mov in xor out (bad) and add (bad) out fcomip ljmp test (bad) pop out icebp xchg push aam jns fucomip dec lret movsl cmp ljmp imul and cmpsb sub out (bad) js dec mov (bad) out hlt ficompl cmp jl jne xor mov xor jbe stos ror mov sbb xchg rorl popf mov lds xorl loop mov call nop (bad) pop lret inc and out push movsl lea out push lds mov in mov jb add jecxz adc cmpsl rorl ret (bad) aas jmp out stc or sbb outsl inc mov test lds sbb sbb dec mov xchg fwait jbe inc sub pop out cmp xor into ret mov lock (bad) push mov js jmp xchg cmp mov pop ljmp pop mov jecxz out into cmpsb daa fs jae xor add xchg xchg iret testb out jbe jne inc jl aam cmp cmpsl ljmp push stc imul pop mov mov iret add inc cltd push and xchg in pop or (bad) movl out jp mov (bad) push rorb cmp inc jo pusha or jns pop mov mov jbe out (bad) mov repnz or and xchg cmp (bad) mov lods dec cmpsw mov shr jecxz add popa xor or mov jae out xor jmp out mov mov mov mov (bad) ds cmpsl incb addr16 imul out fldt dec push out mov xchg push ficompl iret sub inc imul push dec ds out mov cmp xchg loopne cmp sub pop inc pop xorl mov cwtl inc jecxz sub test stos pop call data16 jne and out add cmp cmpl leave dec lret and pop loopne imul lods adc dec (bad) mov lods xor (bad) push mov fs scas fs ds jp pusha xchg popf mov or (bad) inc test jne inc shlb negb xchg out cmp inc (bad) (bad) data16 adc shlb inc int aaa cmp lock or mov cmpsb (bad) clc pop or sar loopne push push inc out ret add jae ljmp adc push jmp (bad) outsb mov sbb add pop (bad) out mov dec push mov jp clc fcmovnb out jle cmpl out sbb rcrb aad fwait add out inc pop jle inc fidivrl out jno push (bad) dec popa out mov or cmpb cmpsl jp fs out xchg jno jecxz jle out fist push jne sti mov out stos adc movsl test jle stos pop dec pop stc pop xchg in ja iret and (bad) pop mov adc fstps cmp cmp mov cli dec lock mov jb jle cmp es jbe push out sbb mov adc int3 mov (bad) call push jb clc push roll mov sub in icebp xchg clc shll out stos push cld sbb inc sbb lds mov into ficomp mov inc das out sbb lds xchg lret out leave incl std out repnz dec out xor ss out mov inc movsb pop pop mov add in mov nop xchg add sub cmc lea mov jl pop pusha sub pop push mov cmp aaa inc mov pop adc out call or andl test inc fucomi lcall mov push jecxz ss out and lea pop (bad) push sbb (bad) ss push js sub sbb (bad) fwait out rolb xchg pop out push mov xlat ret aam pop loop sbb movsb sbb adc sahf outsb shll and sub out cmc cmp cmp or popf hlt insb jne add test push outsb out jno xchg in pop dec push lods out cmp or test sbb movsl pop into ficompl out lahf mov (bad) cld and out cwtl scas cmp out pop dec xor jg faddl mov adc enter out push loopne mov out sbb aaa and pop mov insl jl outsb jae movsb add xchg out push addr16 sub pop les push xchg cmc add ret adc ss sbb rclb push in jno push jg rolb jnp or int mov scas lret out hlt lret lea test mov out test pop lds mov adc incb clc xor cmp cmpsl add leave xchg and adc pop jle ljmp cmc test xchg add cmp mov push mov movsb sub mov lret adc push out out cmpb sub insl sbbl lds cld stos mov dec gs cmp loop cmp roll lds lock (bad) mov mov dec add popf lahf mov movsl (bad) out dec mov push js ljmp inc loopne fs mov test testb fdivrs cmpsl adc out dec hlt inc mull sub adc data16 in dec and lds xlat aad adc out xchg inc pop out jl inc cmp das (bad) push jbe outsb pop (bad) popf pop addb dec nop cs push lock dec cmpsl pusha mov xchg sbb pminub out mov pop lods dec out inc mov jecxz out push jns repnz das iret out (bad) loopne jae mov enter sub push out xor or adc rep fsubrl lods push in jle jnp adc xor notl xchg imul dec dec shlb xchg pop test push adc int (bad) (bad) out lods sti cmp cmp out shl dec insb jae mov mov sbb lock mov loope cli mov push pop ret adc sahf (bad) mov std jbe mov (bad) sbb popa in imul jae in out jmp xchg pop iret out hlt adc mov out adc enter stc mov rorl (bad) int fsubrl jle dec flds movsb shll mov sbb sysret pop push (bad) mov call push inc out cmp mov in push popw sbb or (bad) sbb xchg loope mov jbe lea scas and out xchg (bad) xchg aad inc js pop mov push cmpsl gs int3 popf insb or mov cld (bad) sub cs inc arpl daa out xchg fwait pop xor aaa fldcw mov adc push mov out (bad) pop mov pop rol sbb rcl lret fstpl dec mov out out cli (bad) iret sub test and jg dec lea cmp jmp in mov add pop nop js jb mov (bad) out jo dec lahf or out call out pop mov push xchg xchg add and jae jmp push cs je in jp out cwtl cmp stos fwait (bad) lcall in push out mov jae sub test (bad) dec jle,pn cmp lds aad sbb pop mov jne std out cltd or imull pop and push les icebp jne dec or in inc out xchg lahf cs lea hlt out push ret fstpl repz adc xchg mov mov pop mov cmpsl push xchg fucomi out movsl push inc mov push out or push aas push loopne jg mov std xchg lods mov out (bad) cmp in sub sbb or call mov mov out jl cwtl cmp lock arpl jle or fs out jb frstor out lds cmpsl dec aas sbb in lcall mov fs pop cmp stos ljmp sbb push lahf ficoml in (bad) insl ljmp push add into jno das inc cmc sub (bad) hlt mov push inc fucomip shlb fucomip push aad loop fucomip test into push xchg out mov jno xlat xchg pop and jl mov out scas dec out mov adc sbb pop (bad) in out std pop jbe lds sbb movhps out mov pushf insb cmp lock je jmp pop outsb xchg in xor mov sbb lahf xchg xlat cmp lock pushf (bad) mov es lods lock aas sahf enter jle jbe sub cs push call out scas dec xor cmpsb lcall (bad) and and std sbbl leave xor scas jne xor sub jle mov adc mov lret das fs and jl mov das les dec cmp xor orl stos mov loope mov add icebp test rcr jmp rcrl ja mov and out or pop pop sbb fs out or ds push fstpt (bad) pop dec adc push out fdivl mov sbb data16 in or mov pop mov xchg jnp add es mov orb lret jp out aaa hlt in adc or pop and push inc out and push addr16 mov xchg sti xor popa ljmp out push and jmp or movsl pop xchg xchg xor jno sbb sub xor nop and out or push sarb into scas in sbb and scas mov rcrb out dec fmul sahf jecxz out out pop dec adcb ret xor jns,pn addr16 test mov push cmp fs jbe mov (bad) aam jno cmp out test mov xchg fdivrp stc out mov ja ds (bad) mov js sub in jge pop addr16 out jmp sbb xor jns pop iret ja sub call lret out dec sbb repnz je shrb gs adc mov xchg cmp out ror jge adc js pop (bad) jb inc das shrl out (bad) ja push out clc dec out xchg dec (bad) jl sub jb mov and cmp adc je (bad) cmc ret out aam sub imul pslld mov jg adc fimull divb cmc out (bad) int3 jbe out fcmovu out ds (bad) cmp push jg adc lock lret dec insl sahf pop das push stos ret in ret aaa and nop cmp leave cwtl cld fstps out rcrb ljmp push xchg mov adc jg mov cmp repz out inc jl dec jle lea mov in xor ljmp out clc test fcompl test (bad) sbb xchg test sub inc jae xor add test dec jmp mov scas push fist sbb pop stos out xchg rcrl sti (bad) mov pop and movsl dec xchg imul dec pop inc xchg dec xor xchg dec mov xchg and out mov les (bad) sub lods fwait lahf out jp jae faddl pop xlat outsl xchg jg std (bad) add dec inc mov out and push and mov in iret inc cmp jnp mov clc jle das sub fucomp jmp pop cmp out lods loop ljmp int sub outsl jg nop push mov (bad) fidivr mov jp out push xchg subl jnp cmp stc cmp jg xor xor daa push mov imul xchg loop out imull dec lods jle cmc aad hlt push push mov mov mov pop sbb (bad) sbb mov dec jecxz stos push mov mov std sbb das mov ljmp mov lods lret shr enter daa cmp add mov xor fwait (bad) mov push aam fisttpl xchg pop mov lahf jb jl ljmp fs sub dec out hlt inc mov lret iret loope sahf push sub nop lock scas aaa in popa pop cs or (bad) jns or lret pop mov out (bad) sarl in sbb aaa out stc cli sbb push mov imull insl dec sti addr16 mov add les pusha dec fist out lods push xchg subl out std xchg clc fstpl mov dec decb jns lock ljmp and (bad) insb mov (bad) sarl out test mov ret cld inc pop lcall xor loopne loopne fistpl mov lar jmp lods sahf out pop outsb jo push xchg (bad) test insl int3 xor (bad) pop aas pop xchg ret inc (bad) dec mov out fistp daa cltd xchg jae out incl fcomi add jo (bad) sub cmc imul mov sbb inc divl push shrl push or sub je sbb mov out push in jge mov cmp out sbb call in repnz cmp sub dec testl cmp jg cmp daa lds popa cmc push out mov xor out add jne dec xor jg pop popa enter out ja mov fidivr cli xlat mov out pop cmp push testl rorl inc push dec or inc out or ds stc xchg out push mov mov in ffreep jle push out adc pop out push mov loop jp loopne pop ret bound xchg int3 in add (bad) dec sub add subl movsl lock popf pop xor xor fmuls dec (bad) lea add test push je insb add out mov or (bad) jbe fildll imul and adc rorl inc loope mov fistp cmp sbb shr cmpsb xlat adc je mov test sti mov leave xor out ds inc pop cmp out sahf (bad) dec mov ss fidiv xchg and pop out cmp inc pop cwtl push mov (bad) fistpll outsl ljmp imul cmp jl mov rol lahf fsubr xchg sbb enter push ds pop mov push lods sub jbe xor out mov leave (bad) fisubrl fisttp mov outsl inc out clc addb in lret out jns (bad) lret push push outsb mov sti cmp push xchg jns rolb fisttpl inc mov mov xchg mov xor out pop mov into out push push xchg mov std lods out xchg add jo jae or add sub sbb and aas nop jnp outsb out mov fadds mov xor push dec dec push jecxz xchg cmpsb lea and fild sub push iret cld out inc (bad) aaa and movsb and jg fimul push out lahf adc dec xchg pop and sub pop insl xchg nop xchg leave fisttp lods xor mov ljmp push out js,pt jle (bad) and sbb hlt lock pushf insl push cmp mov xchg mov sbb push and ret lahf adc int sbb mov (bad) out gs iret xor sahf pusha call mov mov out inc add push add iret js mov (bad) xchg mov bound mov xchg dec mov out fcompl (bad) sbb ret imul cmpsl sub push sbb mov and (bad) sbb loop and stc xchg cld out and imul mov lcall mov jbe out gs ljmp mov loopne cmpsb sti je out sub sbb scas call jle imul or add enter xchg out mull and xor inc scas lcall cmpsl push sub fbld fisttpl out push adc dec outsl gs jle pop test xchg out jecxz lds xchg xor mov ljmp in out or (bad) cmp lods out jl jne loope jp fistl dec out inc notl or cltd xor out (bad) mov je mov in es icebp mov pop (bad) mov hlt frstor imul dec xchg leave xchg in pop sub push out popa stc jno cs inc out decb int out aaa test dec out dec jo mov fmull push xor mov out mov sbb sbbl dec imul push ljmp dec into mov fstpt cld loopne ja mov out (bad) lods int test rcpps inc mov sbb add loope out andl inc xchg out push lods adc fdivrl out fadd fs out xor (bad) int out stos push add pop int3 scas jg and out call lcall xchg pop jno aam (bad) mov out add xlat pusha sbb mov daa xchg cmc mov add mov mov imul mov mov daa stos and das sub out aam loop sbb sti cmp sbb jg fs daa in ret fs movsb out xchg push cmc mov out and ljmp add stos adc jge rcll out adc lock loop (bad) out iret xchg mov (bad) loopne mov cmc out stos mov dec push dec cli loop lcall sub jb aas and pop shl lods enter push xchg sub jb jle push out push shlb mov stc lods fld xchg int xlat dec nop out sbb cmpsl cmp pop xor jecxz push loop out lds xor sahf out push jno and (bad) out or dec cmp ret out mov call test nop movsl leave fs std loopne cmpsb loop jo jb addr16 repz pop (bad) mov cmpsl (bad) std hlt pop mov dec loop out lret out fidivl sbb iret outsb push scas push call sub add in push jp scas ret xchg outsb jg pop loope fldcw data16 in inc jmp mov pop out mov (bad) inc lret lods rcrb gs inc enter xchg loopne (bad) (bad) adc in sbb out lcall je (bad) ja pop mov jge out pop pop outsl jp sarb push call out pusha push incb das insb clc or sarl orl and rorl jl mov popf push out pop test pop cwtl je xchg pop stos out int cmp out dec add mov (bad) mov or xchg into scas and lock xchg ja out cmpsb test test jbe lods jne pusha std dec pop and dec add ljmp mov dec or mov out push adc insl test pop popa sbb mov lahf out mov push cmp aam test dec pop pop in out mov sub push data16 xchg jl push or push mov movsl mov out imul jl mov out push stos int3 rcr cmp divb rcrb repnz adc aaa std fidivr and movsb or imul push add inc (bad) out push test mov in cmp nop arpl out cmp out int3 mov cltd mov jle rcl call xchg and xor test add out jg jbe lcall jl sarl aam inc sbb cmp xor ljmp (bad) cmp fsubs jle hlt divl in and mov test movl ficom jns jge or adc imul push fldcw mov stos and pusha loopne dec jb cmpsl lcall xlat push in sahf movsb xchg ret jne inc pop cltd lock pop jg ret idivb mov adc inc pop add xlat cli push (bad) out sahf das addr16 pop scas cmp lahf hlt out sti adc ja push and es mov push add enter mov pop dec or leave push sbb gs dec pop (bad) pop movsl pop inc cmpsb push mov insb out sbb cmp mov adc push ret xchg out xor lret jo subl icebp out test dec daa fcmovb out mov clc mov cld jno pop test imul pushf lret add cmc fstpt or cmp out lahf mov stos mov jmp or sub enter ret jo lret sahf cmp insl sub pop dec out inc push popa jle mul lods in lret out xchg aaa cli pop dec sbb out mov lahf scas jmp inc xchg (bad) cwtl inc inc (bad) hlt std movsl lret xchg in cmpsb out or xchg adc xlat (bad) sbb fisubl inc out pop ret in sbb out stos (bad) mov cmp push inc mov pop repz loop mov sbb pop sbb notb pop nop inc xchg and sub ljmp rcl jne ljmp push push sub pop or and outsl imul jp jle mov fs sub js and inc pop (bad) xchg jnp dec dec jae sub (bad) loope jecxz,pn xchg int out and jns push adc jg addr16 sti adc inc fnstcw (bad) adc push out xchg ja inc imul mov fisttp (bad) aas nop mov popl ret mov lock fucomp xor jb std out pop fiadd test push xor out out xchg adc mov mov lods (bad) out enter sbb cmp out dec popa divl aaa xchg shr and shr and adc lock lcall push enter pusha push jmp xor in (bad) pushf out test mov into mov movsb jecxz fwait add pop xchg idivb cmp hlt into pushf decb sbb jns (bad) scas fwait mov hlt push loope (bad) imul scas mov ret add aas repnz push ljmp stos daa orb jne out xchg fld aam aad dec (bad) push shr mov jno out push fcmovne div xor sub iret loop loopne dec mov dec std mov xchg mov sbb mov push mov lods adc or in dec movsl addr16 pushf in (bad) mov or aaa out (bad) push xor xchg cmp popf add jp fucomip pop cmp cmpl push out xchg lret in add outsb lods fdivl (bad) stc sbb lret (bad) lcall out loope adc push mov fldenv (bad) leave pandn sbb adc cmovo and rol pop out rolb pop push out ss mov sbb cmc cmp insl dec ljmp cs and out js loopne xchg iret out mov stos pop add rorb fsubr bound stc sub mov out xlat mov out or inc pop push inc aad xchg repnz cmc xor mov pop jbe lods pop iret stos and inc call into cs ss dec xchg loope pop sub dec cs out xlat pop fist testb out xchg pusha in das xchg rol sbb jg or push jnp outsl adc out add sbb in push ror out lea clc lahf cmpsl test out adc es mov adc fstpt test fnstsw or fdivp dec movsl xor jmp sub add and ljmp jmp lret ljmp out in stc jmp jo ret out call or popa sysenter xchg adc test pop je xchg test pop mov pop mov in shlb xchg xchg (bad) out jmp shr in loope fbld aas xor decb (bad) jl jnp daa inc popa (bad) cmp js jo ret je cmp cmp xor mov dec out iret xor sbb sbb push dec int or repnz jnp mov mov ffreep sbb xchg lock stc out xor gs jg jo rcrb sub out pushfw insb mov mov shl lods addl bnd negb mov std dec push jmp stos cwtl movsb add int out jecxz or in sbb jno dec lods std out xchg (bad) mov out xchg insl push ss cmp test dec sub lahf in mov out fsubs xchg push mov out ret sub dec xchg pop out jp xor out inc repz mov mov lahf sub out sbb (bad) adc jecxz xlat in mov pop ret mov fild cmp es pop into outsl sahf mov sbb jmp pusha push push lock adc (bad) imul lret jecxz,pt jmp cwtl ja out inc scas cli add xchg fs or jne sbb adc (bad) xchg sbb mov sbb dec fcmovnbe imul (bad) cmpsl jmp push mov lahf out lcall inc out int3 or (bad) mov cmp jmp cwtl shrl ja cmpsl push out and jno fs out inc mov nop mov call sti out and (bad) xchg jecxz jl,pt xor bound mov xchg imul aas push mov (bad) xor out (bad) sub outsl bnd mov repz pop push jecxz sbb add mov xchg out fmull int push sub push xchg pop (bad) sbb in (bad) call cmpsl imul lahf insb xor test dec jge cmpsl pop sbb pop scas mov lahf sarb and ret xchg mov sub push fstpt call add dec push iret inc daa loope out or jge adc mov ds stc fstps ficoml das cltd mov cmpsb push out ljmp lods out (bad) iret mov and into (bad) inc out mov cld movsb lahf lret dec stc (bad) mull lret mov push sbb int3 and testb cmp xor dec adc mov mov push leave rcrb movsb enter pop test pop in in cmp mov cmp arpl out pusha sbb pop adc mov out movsb pop pop out cmp mov pop pop scas xchg into sub repz pop adc mov adc pop ja test adc pop dec out pop test loop xchg out test mov pop cmpl loope lock push icebp mov adc faddp sub loop mov shrb sbb xchg jle scas into jmp outsb mov leave xor in cwtl pop xlat push (bad) mov lahf out jbe popf int3 cmpsb fs push dec out jnp ja mov call xchg pop out dec xchg inc enter push ss ljmp mov addr16 out inc adc mov out jb,pn imull xlat dec loopne or sarl push out out hlt outsb mov dec sbb xchg adc jmp ljmp mov popf mov (bad) push push xchg fistp test je xchg jo jmp out sub push pop lods js in into lret (bad) stc pop mov ljmp lahf jnp in mov mov push rorb dec out xchg idiv lods push mov mov sbb test fistp jg sbb popf push dec sahf aaa enter cmpsb pop dec mov addr16 rclb pop test lret mov imul stos dec xchg cmpsb les xchg inc fildll mov inc idiv pop ss mov sahf stc out scas push add xor sub out cmpb inc and out (bad) (bad) arpl out jge or lret jl mov jbe mov out mov nop mov roll out fmull test sbb push (bad) out (bad) lods or cmpsb ret add cmc pushf cmp sbb mov das jbe jecxz ss in dec mov jl out or xchg push popf xor rclb add push and out insl lcall lods lds cmc push out mov lea lods xchg int3 adc fmull outsl out stos orl xor test movsl aad jge out movsb push lods mov aaa mov mov jmp stc (bad) mov mov sahf out mov mov rep sub in out cmpl cld insb ljmp mov out int3 jbe ds out pushl stos andl stc mov dec add cmc xchg cmp mov push out xchg xor idiv test mov (bad) push orb out faddl mov and sub jp (bad) out scas jl jo xor out rolb adc js out bound dec mov out test push mov ds (bad) je or jecxz addl gs cmp mov out sbb mov call push das into out loop cwtl cltd pop subl and out inc mov fiaddl mov dec and (bad) mov aas ja addl lcall ret add push pop out lods les mov and mov es divl mov adc inc lods adc mov mov lahf loop jg or (bad) mov mov or jb out pusha xchg int xchg or rcrb and (bad) icebp mov movsl or nop lea mov shll inc leavew mov mov xchg or pop js movsl pop adc inc or shr cwtl inc pop push push mov inc decb jb loop int xchg out mov adc rcr dec mov call or xor rorl or outsb daa pop movsl test push inc cwtl pop cs rcrl sub movsb or push lea lods iret dec adc js addl mov out cwtl pop fdivrp jmp xor test jns fdivr fsubp in xchg out leave xchg in shrd sub xor (bad) cwtl push jne in scas jno sub or inc repnz mov fisubrl sti and mov clc sub adc daa xor pop or push mov jle push gs jge adc or ljmp decb mov stos loope int out inc movsb jno sub enter mov xchg jg (bad) add insb sbb aas push lods out test jnp (bad) dec rorb xor dec jmp jmp mov adc cmp sub shll jmp pop mov xchg sbb push inc adc or stos xor in ret (bad) es call ljmp push xor dec dec sub push out lds (bad) dec mov push daa out out pop aad push jg (bad) fiadd arpl out pushf insb (bad) enter mov xchg in iret push addl cwtl rcrb or je mov jbe rclb outsl bound fwait pop nop loope inc js mov xor fbstp hlt stos sub ja pop arpl ret imul lds jmp cld mov out xchg push out jg mov pop cmp loopne out repz dec xchg xor mov inc mov cld jle nop out mov fsub lcall iret (bad) outsb ret sub pushf inc lret fidivr out xor and ja out movsl out vpmulhw test rorb xlat ret stc in xchg inc ljmp clc mov cltd push fisttp pop add dec jl dec or mov stc jecxz mov sbb out lds mov arpl imul scas mov fs pop ficoml (bad) rclb loope movsb loope xchg add out test ret sub adc mov jns and cmpsl (bad) in dec add imul out or out iret aaa sbbb psadbw es mov push out dec pusha mov lahf pop push loope test ret sbb xchg cmc stos pop mov pop cld jp insl loopne roll out ja rolb mov in call (bad) loop dec lds mov out test (bad) mov scas into sbb in push iret push xchg dec dec ljmp adc flds out jno inc jmp (bad) test or arpl ss add cmp jno push out das enter mov pop in cmp ljmp jg pop push mov or inc std aas mov lret das sub test and out jne lret jp inc jl out jno jae pop xor dec outsb dec (bad) add sub insl jmp adc out clc xor cld sbb int rcrb bound lahf add and jmp push dec mov inc and push push shll ss inc cmp cltd loopne adc sub sub in jno cmpsl out mov int3 mov out adc ret cli push int cltd iret test lahf hlt lock inc stos clc and or test into xadd in inc in mov cmpsb (bad) lea push mov ljmp bound mov pop pushf test cmpsl or pop jecxz sub out jmp (bad) mov xchg cli mov scas xor sbb (bad) mov dec pop mov (bad) aaa or nop sub or divb inc push (bad) out jmp das bound out sub stc lahf mov mov jb imul mov sti cmc out mov out and les and cs aas push fcmovnu out push xor push call out mov cltd jg aad sbb out pop sub ficompl out inc cld sub push jmp (bad) aaa fildll out (bad) test testb out adc outsb xchg das into mov push inc (bad) enter outsb std xchg xchg mov mov insb pop pop loope andl incb mov in jbe sbb mov cmp ret pop or push dec add mov jp (bad) hlt push adc in in mov out mov dec adc stos out repnz int3 fs push out inc outsb cmp out mov sub pop int fmul mov xchg mov popa fiadd dec cld push out pop inc push pusha icebp mov ljmp xor cmp addr16 fisubr in stos into push es and out inc pop sub jbe mov icebp jg imul mov push out dec jg (bad) repz in inc addr16 pop aaa mov (bad) adc push je pusha inc xchg iret rcr aam out mov (bad) sub pop jl pop add jb mov xchg xchg pop out ss sub test out mov mov adc or cli sub outsb fcompl pop fiaddl and out insl push (bad) in sub mov mov popf call sti cmc insl (bad) mov mov mov xor or xor sub mov in sub pusha (bad) divl popf insl imul pop sbb enter int3 xchg pop lock roll lods out sbb out scas mov push int out ret (bad) imul push outsb xchg cmp inc mov jb pop out clc cmpsl jno cld sub js loop (bad) dec mov cs cmp popl push ljmp sub mov icebp pop iret jge jecxz adc push decl std pop data16 hlt cmp out mov and mov iret xchg es rcr enter ja notl fsubrl lods mov push pop jae mov ret in inc push out dec shr mov add cmp ja jl sub lea gs icebp pop jmp jg daa sti out cli pop xor sub mov push pop aas pop in jle out cwtl fdivs cmpsl psubd imulb adc pop ds out test xor bound out divb aam shll int fldenv add push out ss bound cmpsl jge push jecxz cmpsb lret fldenv iret push cmp sbb xchg in add fwait pop cli mov in pop (bad) (bad) sub std shrb mov cwtl mov sub lahf js xchg jbe sahf mov test leave mov out add adc out rolb push lahf out pop inc mov rcr sti pop lahf add ljmp (bad) scas add lds ds pop (bad) test push mov cmp movsl aam out leave (bad) xor push icebp dec out sub jbe mov movsl aad jno,pn cmp pop adc cmp mov or dec neg lret test mov and lea jmp or roll stos out fcomi pop mov jae pop call out data16 cmp insl add outsl inc enter cmpsl sbb out cmpsb dec scas out xor or jnp mov adc cli cmpl (bad) xor fdivrs dec in test adc jnp das out data16 pop inc clc test and ljmp out pop arpl dec lret jb sub out fcmove sub rorl cmc inc data16 xchg cmpsb scas out decb inc sub cwtl fisubl hlt out es lret add or outsb dec or (bad) cmpsb mov in dec or sar jmp xchg (bad) cld push out adc dec mov mov sarb je push dec fildll xchg push and pop jge fisubr pop fildll or cltd push lods pop xchg int or icebp dec pop imul or shrb cli push int3 fistpl mov adc adc or dec repz (bad) negb loope lcall push add insl int3 out dec jo sub out dec into cmpl ret (bad) jl cmp pop out aas clc daa repnz das push loop out push pushf fadds cmp shlb rol scas lea pop xchg das add cmovp mov (bad) cmp in push xor pop andb lret pushl jbe mov clc ficom xchg out push hlt in out aam add sub das popf mov aaa (bad) and out mov inc cli popa or or vcvtdq2pd shr mov lods dec sub out negl mov jne xchg out push cmpsb (bad) int3 add mov inc push add cwtl divb lret faddl in loope xor hlt sub and mov inc adc loopne cmc jge mov fwait out (bad) sti dec or test leave in ljmp xor pop cmp (bad) cs jnp xrelease add jae out sbb fucomi and (bad) imul pop in dec (bad) clc inc loope daa les inc or mov cmp fs push ret pop cmpsb mov in lea outsl adc cmp out xchg movsl add inc popf ljmp dec cmpsb in out cld std daa add jno out dec adc leave out fidivl jb stos mov and out loopne ds or out pop xor inc push inc pop inc fildll jnp cmc add sar test cltd ljmp xor cwtl lods add mov jmp fistpl mov inc or repz inc das leave jge int3 imul cmpsb dec xchg mov push out sub aaa in cwtl js iret shrl inc data16 insb cmp pop mov and xchg into in mov mov lea insb xchg ror mov out inc and cmp xchg shlb std out xchg rclb dec jmp (bad) rcrb add outsb pop stc lret mov pop xchg call inc imul xchg jns outsl adcb (bad) out jg in xchg ds sbbl pusha gs mov out mov aam sarl mov ljmp fldt push xor sub dec fisubr cmpsb and mov mov shr out data16 je stos sub mov out (bad) in push push jge test loop sarb lock xlat lret cmp push test cmp hlt jns dec sbb lret out mov mov fsubr cmpsl or es or fmull out fnstcw add jns in out or push sub subl adc mov or popa daa add out pop in ret pop int incb and push jb jg out mov push add xlat lea in dec das or ljmp mov addr16 out mov js or inc call adc mov add lea and in pop lock out dec jle out stos flds xchg pop mov xchg in adc xor outsl ficoml or mov adc mov aaa loopne,pt hlt mov mov mov stos and xchg shr arpl (bad) pop in iret mov scas jne inc imul out mov jae fistp iret stos (bad) xchg out (bad) out das pop clc es or mov xor dec pusha imul loope cwtl aad inc out cltd icebp das mov dec mov out aaa es lret mov decb lock out mov outsl insb stc sbb inc pop lret push mov out and jle (bad) (bad) rclb (bad) dec mov nop jno jle orb mov out push rcrl xor cmc jno gs das addr16 pop out out jge pushf iret inc lret dec jb cmpsb pop gs repz in xor sub pop jbe mov std call out xor add pop out xor inc rorl inc mov out insl inc sub stc (bad) out mov push ljmp sub in mov mov (bad) mov movsb mov xchg rclb out jl and int3 push (bad) (bad) mov cmp jnp sub dec out cwtl movsl and (bad) in mov pop imul jp or out xor ret outsl or int3 aas jne mov (bad) arpl push xchg and xor out fnsave xor jg loop aad lea adc sub imul cli push push jge out xor loope mov push mov shlb sahf xor jns fildll imul test icebp lret xor loop mov push leave sti out mov cmpsb sbb pushw fucomp aas sbb jne xchg jbe out inc mov cmpl cmpl movsl insb fist push cli add jmp movb pop inc (bad) (bad) jne arpl sub lahf into ljmp pop lds dec cmp int enter sahf iret out fs xchg mov cmp pop insb mov out nop inc pop mov (bad) stos jno mov hlt jnp cwtl push xor jns out push ljmp (bad) out (bad) shr pop test out (bad) cmp mov aaa test aam push dec push lahf in decb leave inc in fstpt push test out pop and xchg ja fimul out jae xchg mov and pusha push sbb ret jo inc lret aaa out sti lds xchg orl out dec int3 sbb shrb push dec aas scas mov pop jmp bound call out subl xchg push pop (bad) loope popa (bad) lock (bad) lahf test push addr16 pop xor (bad) or mov (bad) jmp adc lock jbe lods dec sbb jecxz imul bound pop jmp inc daa jo xchg xor ret add aaa cmp mov test out iret add mov out mov xor xor outsb cwtl push pop (bad) push inc dec (bad) out cmpsb jbe scas dec xor mull lcall in bound jb gs imul inc fldenv icebp popa movsl lahf pop sysexit cmp sub out clc or add ds sbb test (bad) xchg push push mov pushf imul out cmp scas out scas jl aaa jg mov (bad) push dec adc lahf pop xchg fucomip or xchg arpl adc (bad) popa sbb iret sub push fneni(8087 sbb add in das xor xchg xchg ss out jp inc fidivrl js cmp or pop cli sbb out and pop lcall mov sarb adc or (bad) fimull sbb xchg cwtl inc hlt lret dec lods push ljmp jno outsl in cmpsb clc xchg out sub mov xchg imul out mov lea out es cmp mov adc fsubrp xchg push int3 jecxz jno xor sub out jb imul or gs movsb mov std pop loope popa and pop push out addl out mov push push cmpsl testb lock repnz jecxz negl inc pop xchg sub fnstenv popf dec out jno pushf add pop and pop xor mov addr16 call cld das xchg out (bad) (bad) out lret cmp fist js call or mov cli loopne ljmp push inc jp aad (bad) incb push aaa mov hlt sub push push out sub jnp inc test pop outsl aaa or test imul daa insb out mov xchg sub pop sbb js adc imul out add or orb sub rolb outsl fwait in rep jmp lcall iret popf xchg ret arpl ljmp mov inc mov lret jb cmp cmpsl das out cs xchg aaa sbb bound loope in daa xchg enter mov insl sahf pop mov pusha inc out leave test (bad) push out sbb fsubrs mov inc mov jae sbb xchg xchg fwait (bad) sub loopne jo pop lock mov imul fdivs cmc (bad) and and xchg jno xchg leave test sub jae shlb (bad) jmp pop and ljmp pop jp jo out imul ss rolb pop icebp int mov arpl fwait stos test jp sbb addr16 outsb mov outsl es out and iret sti add pop out xchg out cmp inc fadds lock mov pop xor xor aad sub scas out sbb or xchg int3 outsl mov mov pop and out xlat mov out pop movsb rorb cmc insl (bad) adc lret xchg roll call cmp xchg stos sub aam mov in out int3 stos inc or daa addr16 push xchg pop out sbb out sub inc jg,pn insl and test mov movsb sbb mov (bad) push loope cmp in jns dec out sub out pop lea ret loop stc jle aas mov mov les jne push sub ljmp pop ret das jge push out std fildll out inc imul repz xchg sub gs pop test jle push mov lock in (bad) mov (bad) out xchg invd pop add loopne es pop jnp test inc imul test sarl and mov addr16 jg and leave pop lahf adc xchg shlb arpl out stos jae leave pop push loopne push fcmovne push out mov xorb out dec push jmp (bad) mov out mov (bad) call mul (bad) out or pop mov inc jp add push insl adc call mov out dec pop cmp arpl mov lcall mov out sbb xor out or dec adc sbbb push iret mov xchg mov push cmp cwtl ljmp out and jnp add in out mov (bad) xchg push jns leavew out pop mov pusha mov dec adc push arpl mov inc pop cmpsb sbbb outsb xor pop xchg or imul fcompl adcl jg in and out jle leave sbb mov iret inc mov mov arpl frndint movsb (bad) inc js and in push jle subb das repz pop out pop mov push cmp loopne mov sbb cli fldln2 out or mov iret nop pop insb repnz imul sbb sbb pop cmp dec test hlt jb mov mov (bad) repz push imul dec incb ds inc xor adc mov lea or add stos icebp (bad) mov (bad) jb out pusha push xchg lcall jg ret out shl int data16 add das xchg mov lret lahf inc add lcall mov loope into out ja lds hlt pop out push fiadd push dec mov mov xchg dec pop jbe pause inc in adc lods les out cs imul aam ficom out addr16 push es or lcall xor pop jb cwtl shr xchg loop mov (bad) call pop imul inc aaa scas cs mov ret out cmp cmpsl pop adcb pop std mov sub push push dec jno mov loope sbb and jecxz pop push out enter outsb sbb das (bad) xchg inc int3 out push scas or rorb in out lds xor sub add or cmp js inc push inc icebp enter aaa out pop or add dec out cmp out cld (bad) mov shr rolb or popa out mov notl (bad) pop call das movl add loopne (bad) xor hlt rcl (bad) add adc rcl out mov mov dec sub jp adc push repnz (bad) nop pusha mov dec cmpsb enter and pop stc lods xor repz xor push mov lret push out scas mov xchg jge or js mov out mov lods sub cwtl jae pop pop push fadds ret cmp or mov sub lods xor push pop add xchg fild rorb and push into leave (bad) xor aad pop aam mov cmp cmpsb sbb js mov imul xor sbb xchg clc mulps out jb sub push fs out lods pop ds pushf lahf rorl jb rol push push out icebp mov and fisttpl jno outsb cli out add in out mov mov out outsb js je dec mov out and push dec inc sub mov push aas in cltd sub pop call lret aaa cmp xchg out ret les (bad) je mov and xorl ss jno mov mov add insb out inc sub add cltd jns cmp sarl out fsubr push push mov xchg dec test movsl jmp or xchg add lahf xor data16 test cmp pop add out dec jp lea pusha fldt (bad) add adc jnp and pop fwait insb add test xor add jbe outsb addl dec cs sahf lods inc out out inc and cmc outsb out (bad) xchg das adc icebp jg inc vpsubb jmp ljmp inc add in ds pop out xchg outsl je jecxz icebp mov mov add add fstl pop test idivl ljmp out mov lock int mov jle sar test addr16 push pop and jbe or loopne inc leave push fisttpl dec push xchg ljmp and fild xchg out daa xor das (bad) pop sub add dec jmp pop out mov jbe cmp leave dec sub add in stos sahf ret out mov (bad) cs scas andb aas test fsubrp fwait pop xchg add sbb das cmc dec xor sti hlt roll dec (bad) aam lret imul xchg lock out out loop addr16 dec out fwait jne cmp pop mov lea dec push jmp test es pop xlat loopne in add dec loop mov scas mov mov jecxz (bad) out inc mov mov out (bad) ss out sbb idiv loop adc cmp insl jo out or sarb test or pop popa test iret aas dec lods loope stos (bad) imul push pop rolb or inc aas clc xchg out call out setno out and jg and nop fcom out iret inc lock pop inc outsb cld out xorl mov push addr16 fldt aas sahf jb sbb push test jo sub inc fdivs mov fsubl adcb and adc int ficom jmp dec shr jge (bad) cwtl jns jle xor js adc jo out jb mov std out jg and adc pop hlt iret dec cmpb outsb adc mov lods jecxz pop pop pop iret sub ja cmpsl mov push mov enter push cs out mov fistpl out movsl jmp mov out xchg and nop ds cmp enter sub mov ja pop add lock sbb (bad) dec inc or cmp pop (bad) in mov out fild lahf cmp ja push (bad) (bad) (bad) pop pop int3 cmpsl adc xor in jbe or test loopne ja push mov out push js addb adc cli (bad) jno out jp aas jnp pop jae out or push pop sahf out scas push mov out addl out in mov mov mov in clc cmpsl jle fildll shl movsb sbb dec mov mov push push (bad) fisub adc adc rcrb and jmp notl out adc je cmp mov cld sbb jno out push dec std pop and xchg lahf fs push xchg out jle cmpsl jg xor test mov loop pop jns (bad) xor lcall fildl addr16 out notl mov outsl pop sub out in pop insl aad ds ljmp out push in or jl push ss test aad dec in pop cli add mov dec rolb and arpl dec adc sub (bad) mov (bad) (bad) (bad) cmc movsb adc roll mov push in repz faddl add cmp pop stos sub out mov pop pop ljmp nop xchg notl xchg call enter add fwait ret rorb shl push mov sbbl mov insl or and out mov pop fmull pop loop out lods jno in stos dec sahf stos popf xchg out repnz pop pop ret ja out fistpl scas sbb jmp push sar jbe out rcrb xor push dec out mov clts dec out cs and aas out xchg out je inc (bad) cli lret sbb and dec cmp jb xchg jmp or ss int3 enter xchg cld ja daa je data16 jg,pn icebp jmp leave mov test jae dec xlat (bad) out mov into faddl adc out lods xor lcall mov loopne hlt pop or pop jb stos mov out fsubrs aaa or ror daa cmp negb (bad) scas dec out (bad) mov out test or xor add xchg sbb sbb scas sbb or mulb add mov mov loop in dec fbld xchg movsl je imul add orl lcall pop movsl adc (bad) out stos xchg loopne sub addl jp in and mov push gs call (bad) jno mov or hlt dec push dec out mov pop xchg insl bound out jg jecxz (bad) pop stos (bad) and out cmp xor test insl fucomip inc out push mov sti clc jne out cmp lret in out je inc nop cmp push or clc or mov icebp lcall dec int3 jmp out mov sub loope pop jno (bad) movsb shr in in lret je fisub nop lcall pop mov xchg jo adc in or pop js test and rorl call or add and or movsb jecxz lods sub mov out daa fdiv inc rclb mov aas add hlt push insb out push adc push adc xchg or out test cltd out into hlt fnstcw push roll and jmp pop mov lahf out or dec out sahf jge or sub ret sbb pop pop xchg shll adc push inc sub enter jo add out and clc inc dec jle in rcll in sar pop jb out stos stc shll arpl ds jnp adc mov clc int mov jb mov xor push mov in insb test jmp jmp mov addl mov ljmp out jecxz loop sub push out test dec jp (bad) call mulb repnz jge mov or adc mov out testb mov iret pop out pushf mov insb (bad) xor jo jmp into push jge cmc lods jmp add mov push out aas cmpsb jbe jns add in sbb lds aam ljmp pop test mov adc inc les in stc int enter and cli pop dec test jns test adc repz jae mov insb and out das out dec cltd mov gs bound (bad) into cmp in sbb divl sbb out sbb stos hlt stc xor ret mov lds outsl cmp out sub xchg out push in outsl cwtl fs pop rol test sti jb js dec mov xchg clc in pop and out sahf lret pushf lahf push xchg out sub test or ljmp mov (bad) mov sub lcall (bad) stos pop add mov ret cwtl xchg sub (bad) mov (bad) xlat cld mov sub lock fucomip mov push jg jmp stos pop adc xchg sub pop gs push stos in out fcompl add xor int3 adc sub sbb fs mov imul cmpsl xor jecxz cmp fs push psubsb inc out lock and pushl mov adc mov clc shr inc int3 adc stos pop out inc jnp push int test xchg mov (bad) push les scas mov push insl scas mov (bad) ficom jno xor out popa mov xchg daa repnz inc out shrb push rcrb lods cmc dec out or mov bound xor add push iret (bad) mov ljmp in push sbb cmp arpl inc int int3 cmc add out dec xor and or mov push pop lret jb xchg testb stos clc pusha mov jecxz ja iret test mov push mov out and cmp (bad) out jecxz (bad) pop adc (bad) in xor or test dec iret out popa lcall loope jmp out fisubr or xchg shr (bad) ljmp and sbb test cmp adc adc xchg mov add jge xchg orl out pushf jg and std out (bad) mov addr16 sub sbb test sbb pushf inc lret cmpsb adc mov ljmp in dec aas and jnp out out pusha sub cs out pop cltd pop cmp push or out xchg (bad) cmp outsl out das mov dec sti enter adc hlt in (bad) (bad) jb std out fdivl inc add dec and fucomp in pusha bound adc inc out xchg test jge,pt mov out add int3 pop jnp jbe pop call xchg (bad) pop out sbb adc push (bad) pop lds pop pop call lods out ret cmp jg fstpt pop adc mov jne fcomps lea inc nop pop enter add insb js and sub pop lahf (bad) jae (bad) jp es bound push pop lods aaa test (bad) mov pop or adc inc in xchg loopne lcall lret in bound mov pcmpeqw nop out daa test xor (bad) stos iret lahf mov (bad) (bad) sub out sbb sub insl mov sbb jae dec pop fbstp mov jb or (bad) sahf lret test inc in inc out ds (bad) inc out push mov xchg test mov inc cmp mov mov mov arpl mov cmp jmp jo data16 out (bad) outsb pop cmp lret and sbb inc out arpl jae stos fldl (bad) push pop dec and subb jmp sarl in outsl in push xchg nop xchg repnz loop cli mov (bad) jg rcrb fs sahf cmp in pop bound out or movsl push xchg xchg cmp pop scas adc inc cmp mov into cltd fnstsw divb inc xchg jb pop ret or stos jb mov in sub pop or inc mov push pop ja sbb stos (bad) out mov jbe adc leave push in dec sahf lods out push addr16 movd out shr ljmp push jae pop scas and test sub inc out mov add or sub in add addr16 (bad) loopne pop ja cmpsb mov lret aad and jle insb iret adc out in pop xchg xchg sbb out sti aaa cmp add clc aad and sbb out mov mov daa aaa inc fcoml out (bad) mov add out cmp icebp sub inc es jp fsubr xor and stos out and adc lret out mov pop addr16 pusha jno push into mov imul add pop mov out sub push jo int jnp insb stc cli cmpsb pushf mov xchg jg ss mov and sarl inc mov sbb out and icebp xchg shrb ljmp mov clc out out push mov test xchg mov out gs cmpsl (bad) out jl shlb xchg jnp out mov movsl push (bad) icebp mov push xlat pusha pop cmc dec cwtl out in cld mov ret out dec mov push je clc out inc jecxz data16 cmpsl bswap mov inc pop arpl repz mov jmp pop out jge jns push push ret mov out idiv fs out sbb test inc out and cmp pop xor out and xchg mov sbb push cli sti scas (bad) aam ja out (bad) lds and dec xchg aad and xor mov pop out and out pop sbb push xor cmp sub jb es mov push xchg push dec mov mov and add jmp push jmp shr pushf addr16 adc out xlat lods add out jne into pop jmp jb out adc jle push mov xchg icebp cmp xchg addl sub out enter push fcoml out dec test mov mov aaa fmulp xchg loop out dec ja push and insb add inc jo mov loope cmpsb fcmovb sub cs xchg fdiv insb mov sbb ljmp xchg jns adc test aas adc pop cltd pop incb push iret out xchg mov sub jp xchg clc xchg adc sbb mov outsl test (bad) fs fsts xor jno mov xchg pop xchg jle lods gs lahf adc outsb es inc cmp mov fmuls pop adc fsts push jmp rcr push or outsb nop rcr sub out cli jbe inc pop imul out pushf push fsubr jae push and out adc mov xor popf jae div iret pop fucomp jns mov fcmovne stc pop loop movsb fcomip sub pop dec ret dec sahf out jns,pt jb movsl dec sub cmpl ret stos loope hlt (bad) xchg inc loope pushl in mov mov add (bad) adc pushf push push cmp add out dec add (bad) cmp xchg adc hlt pop in js fidivr imul clc sbb cmp pop fild lcall loope scas out loop and jne cmpsb fsubrp xchg pusha mov iret out cmp add pop test fs insl leave push sub iret test mov out jo inc mov mov int outsb or and dec leave jae jmp ljmp out int3 mov cli cmc mov sbb (bad) sti push and pop push xchg shrl in aas dec mov pop pop push mov cs push orb push daa mov stos test aam jl fsubr xchg add call sahf fs in std dec test push daa mov (bad) out out cs leave test inc out loop push push push adc rolb out (bad) cwtl jo lds out daa ja cmp mov cs clc out negb insb push sbb mov mov sahf mov xor je mov add das popf fildl xchg repnz (bad) pop addr16 bswap imul or out out push mov mov xchg stos fsub add fisubrl scas add in std pop dec fildll adc out clc adc adc xor and mov out or dec ror sub shl test sub push push data16 mov pop lods push jmp pop out fadds jecxz xor push lock mov loop fdivp and lcall xchg test sti inc ret xchg xor cmp inc dec and fwait es out lret fs mov shll cmp lods mov out xchg inc xchg jae xchg sbb inc mov imul out pop ret mov stos sbb fcompl sub xchg jecxz stc and out pop cmp mov xchg pop add cmpsb xchg rclb out xchg jns and (bad) divb subl out adc xchg sub jb push pop or jae jmp gs es insb cmc xlat mov daa pmulhw lcall out sahf cs sbb cltd jne pushf sub shr jg sbb hlt mov push negl int mov out pop out (bad) stc jp pop add pop in mov inc cmp sub mov out sub orl and pop sub (bad) add mov jb mov add pop les out out or iret data16 pusha push xor mov rcll mov out ss mov (bad) jo pop out jbe xor dec call mov or sub fwait mov inc mulb jno sub das out adc add std lret or lods jge out (bad) mov jo out movsl jns cmpsb enter out cld (bad) (bad) cmc clc mov xor sub ss aaa loopne push xor xlat jb lock aas dec sub dec (bad) ljmp sub int3 xchg mov dec aaa pop in or dec rcl xchg gs jae shr stos mov data16 fsubrs cld lea pop xchg push dec stos adc push xlat adc dec push or (bad) push adc in icebp aad loop sbb jbe fucomi mov sub sbb in out push or adc fnstcw mov inc lods dec fwait push not pop into sbb mov rcl and lret xor into add test or out lcall (bad) out pop or test iret loopne push pop push dec imul nop pop clc loopne push mov and jmp sbb icebp or in out cltd jp sub out dec arpl sar xorl stos add cmp rcl out je mov in shrl add fldt (bad) ficompl mov push out dec imul lret or mov (bad) or sub clc jns jg out insl mov out cmp add out add adc sbb out xor mov jg mov inc mov or sub xchg aad inc repz lds cmc (bad) sub pop push loope out adc cmp xor inc jmp lods pop pop out or hlt fimull outsb les int inc out dec out rcrb in cs int3 jg out cmp pusha inc out aad xchg scas jns sbb out add loop das js cmc pop adc mov fsubrp sub mov out test mov lahf xor cmpsl mov lcall push fistpll pop sbb xchg xchg lods aam out pop sbb sahf inc push out movsb jo loopne pop (bad) jns (bad) sub and scas out mov (bad) pop pop es iret fs (bad) mov inc mov fs data16 mov (bad) xor (bad) out sbb mov jecxz out out sbb out jl pop sub xchg out js mov xrelease pop cmpsb inc pop lcall push jmp in iret cmp push insb hlt mov sbb loop leave cmc xor sbb in inc arpl xor paddq sub xchg je xchg out loopne cmpsb mov dec ja pop inc mov lock (bad) adc dec in push std adc (bad) fbld es stos and popa sahf inc jbe mov js cmpsb nop fst je and fldenv adc inc loop aad imul negb cmp jle ljmp loopne ret (bad) dec nop ret stos ret push test (bad) bnd sbb pop xchg jb out xor dec cmp (bad) add pop popf inc pop push icebp fstpt addr16 sub out jg call in bound xchg clc in xchg mov pop rclb adc pop dec sub push jae insb mov out fwait pusha fisttpl adc jecxz (bad) out aam out cltd sub push out jmp lods lret loope aam movsl je dec insl out xchg out push mov pop cmc ret out in fdivs add out push das xchg jl push rol pop arpl call jmp data16 je shlb out add or lret out pop out ret pop sub push mov jno out addr16 jmp in std dec scas lods test insb out imul dec movsb js or xor sub push pop nop fistl push pop jmp jmp or or push mov inc pushf out jno fcom mull into jge dec mov add push in adc call push in daa iret (bad) in in jge iret mov lret jp lret test adc shll and shlb (bad) call movsb cmc cmpsb mov adc loope xor xlat mov cmpsl pop jl mov or dec aas loopne int3 sti insl icebp std lock dec out shrl lods out pop movsw data16 push xchg push pop mov loope fadd jnp dec test sbb rcrl out cmc in xchg cmp pop sahf xchg add xchg fbld loop lcall mov in out lods nop out stc mull sub pop scas hlt add icebp jnp sub inc push and notb cmpl xchg (bad) cld mov sti out (bad) jp movsl out mov std inc pop iret js jmp in iret popa push out cmp or xor inc (bad) out sub sbbl in dec mov fwait mov push divl stos pop adc repnz push js dec or leave mov out test lret xor arpl cld inc adc inc xor cli out pusha xor pop mull int iret outsb cmpl popa out das stc (bad) sbb loop fsubrp jl pop daa jae sahf shr sub call jge rol out in test pop or cmpb loope aad push neg iret pop ljmp (bad) add jmp scas adcb mov or add fisubl pop rclb in mov fcomp shlb adc dec xchg inc iret xlat dec jmp out jbe jae arpl rclb add ds and mull out xchg dec pop push adc decb inc mov std fildll out or test push push out sbb in rcrb iret out ja loop lret test (bad) out add mov sahf out loope ds out sbb rolb inc xor dec sub pop (bad) sub dec or int mov in out pop xor mov xchg mov jne pop outsb in xor hlt push notb mov icebp lods int ss mov mov loop or pop mov jecxz jno (bad) fucomp sbbb xor push lock pop ds mov mov out ljmp loop add adc es jae in ja in out stos push scas xor pop add mov out sbb lret imul dec jo repnz aad sub mov adc and mov aad out add add cmpsl pop cmove or dec repz inc sbb sbb in xor out push cmpsb mov fsubs shrb pop clc sahf or repz fisubr pop enter jbe cmp jnp push mov iret inc movsb loop cmc icebp dec push out dec or adc aaa js mov xchg rcr cs adc das mov cwtl inc out sbb adc out dec xchg pop and xchg call stos adc in adc test sbb das fcoms clc (bad) je out add stos sbb jecxz out and xchg cmc (bad) into mov mov out mov and or imul jns cmp mov push mov fs out frstor lcall imul mov mov out sub mov adc mov push pop xchg dec mov xor ds insl jns ret pushl inc pop pop jne cmp (bad) out push enter insl cmp (bad) insb lock jge insb mov sarb movsl jecxz and inc out cmc jle aaa mov inc mov das ljmp std scas ja lahf cwtl pop push imul push ret cld pop xchg mov lcall or je mov int nop out test cmpsb popf arpl movsb bswap push rcll sbb cmp stc push push mov fistp shrb cs loopne cmp fwait xchg xor (bad) mov push (bad) adc xchg lock out sbb inc lret es cmpsb push out iret push jne adc into dec out cld les xor ret cli rcl xor and out pop mov mov (bad) sub xchg shr arpl les cli xchg mov out sub dec pop icebp lcall xchg mov std out jnp push addr16 int mov add jle fs divl movsl addr16 push setg pop in add not add out sbb hlt dec ljmp test jmp lods xor lds or out xor mov and pop aam cmp std out adc loopne imul sarb mov xor push loop out inc push jbe imul pop das adc repnz out ljmp sub pushf ljmp out jb or mov shll mov mov daa fmull out es pop adc out sbb int (bad) divb cs push and xor leave movsl cltd push iret jg adc mov rolb mov adc ja pushl fnstcw mov or out ja in scas cs xor xor sbb jmp mov decl es out add movsl fwait es pop lods nop mov pop loope out lds lea lcall add out out in and adc cli mov jge adc or xchg imul sbb scas movsl sti mov xchg dec jecxz inc outsb jle jp and push xchg xor sub (bad) sub fstl ret push cs out je fdivr data16 mov in cmc shrb out inc jnp rorb loopne cmp xor lret mov in dec scas adc sbb push lcall dec mov movsb mov (bad) xor icebp loope or (bad) aas inc das mov movsb adc repz cmp out pop jg icebp jge cld pop out jns sub insb mov lret add in sahf out cmp daa ljmp or popf cmp mov cmp ljmp out dec in out outsb adc pop push push les lock jge xchg xchg (bad) imull cmp aam inc int3 cmc mov sub and scas cli (bad) mov fisttp sub out insl dec inc outsl mov or adc (bad) stos ja or (bad) out push dec sub iret push dec insl xchg or test ljmp clc (bad) jo push cmp subl movsb pop out adc ja ss push call xchg adcl xchg iret cmp je ficoml xchg pop pop dec inc enter cltd ss std and adc in adc aam cwtl sbb ds or popf test loopne adc (bad) or or (bad) xchg sbb lds rol out jg lods ss out (bad) pop push and loop,pt dec pop in out shr inc lahf ljmp out repnz push mov (bad) bound (bad) xor pop fsubr gs cmp leave dec push arpl fcmovnbe fimull out sbb icebp inc adc inc js add pop or xchg out (bad) aam mov test and aad add xchg cld outsb loope cmpsl xor and out mov pop inc lret out stos pusha (bad) daa xlat mov mov adc or repnz das jg xchg dec pop pushf jns cmp out and iret addl xor loope enter mov mov push jnp rcrb mov call popl andl movsb outsl fwait andb cwtl in out iret clc xchg in out jg add out inc ficoml xor (bad) std iret lods jl mov mov and xor jno lret icebp lods cld out lods push xlat popa (bad) dec aam out mov inc pop fnsave scas push mov sub cmp insb aas ljmp fcoml out (bad) and out (bad) ljmp mov and push xchg push out out les outsl lcall mov out add jg iret in andl sub pop add adc mov cmp and and sbb (bad) jmp in cmpsb pop mov movd mov cmc shr imul xor push jns push out inc popf je fstpl or mov insl xchg inc out xchg mov mov and pop and xor fsubrp mov into pushf cwtl test arpl imul (bad) out lret (bad) jp popa push mov enter pop add out mov push or sub adc not out hlt mov xchg addr16 mov sub cmpsb outsb sub mov mov out test in imul xchg (bad) rolb lahf incb lock loope mov add and and ljmp mov popf ret mov pusha and sub pop aad add ds jge outsl out inc cltd insb out push mov ljmp in cltd je lret lods sti dec or (bad) and dec mov int lret negl mov pop jae dec and cmc (bad) scas lret lods ljmp or sbb jl stos adc out ficoml (bad) pushf xor or jnp mov nop mov js xor mov lret fildll or in out push and jno icebp (bad) aad mov mov ret (bad) repz stos out (bad) sbb imul fdivrs je fwait insb aam pop lds add push push jmp cmpl mulb jns push push push das fs sbb pop out rcrb sub xor imul pop daa fcomps and repnz add fwait or mov sub push fs enter out sbb rcrl aaa adc adc push fsubs pop fmuls cmp xchg out daa cld std fisubr jmp and out cmc inc lods insl pushf xchg popa mov mov pop push (bad) cli enter (bad) mov inc leave ds xchg mov sub hlt aad cwtl in out out or jo call cmp sub rolb je es xchg (bad) outsb jb mov push pop sbbb out hlt pop data16 jnp jmp mov out add inc movsb cmp mov pusha adc out icebp ret enter jb cmp jne out pop stc xor leave jge xchg out lods mov pop dec dec in mov fidiv out cli sbb nop imul pop int3 fiadd out repnz mov outsb fildl (bad) ja xor orl in out jecxz (bad) repz cmpl rorb les adc pop sbb push inc mov xchg lods movb mov jp (bad) je mov adc inc adc stos lods xchg sbb add bound loop or les (bad) imul mov shr inc add (bad) popa mov insl insb imul bound and add jmp pop xor fwait dec arpl test push xor push jnp test lods mov add push inc stos sahf ja xchg add aam pop inc xchg out pop lods addr16 and xchg xor rcll dec pop in add mov mov pushf (bad) in mov jl clc stos out mov mov aam pop scas or iret push mov (bad) cmc ljmp out cmp stos inc in outsl mov sub jnp (bad) lods imul (bad) mov xlat sbb jae in out fwait test mov push mov add out lret jne fwait xlat adc push add test jne push push leave cmpsb out stos mov xchg or xchg adc cmpsl jb idivb mov mov jne add mov lds js test and xchg addr16 repz cwtl sbb (bad) out sbb ljmp daa rcr pop push fs scas in or lret imul hlt add out sbb out in lea scas push mov xchg jecxz andps ret out dec adc push mov pusha (bad) cli adcl add cmc xchg add adc dec sub add sbb mov lret xchg gs test cmc dec out imul xorl hlt movsb ljmp (bad) sbb adc sub jge push out xchg inc in (bad) xchg shl add (bad) out mov cmp stos in lods inc mov (bad) xor ja push cwtl (bad) xchg push outsb jns jo lods inc cmp mov ret out cwtl xlat leave pop xchg mov (bad) ja mov in fwait jle loop (bad) jnp out xlat inc out add mov or jecxz pop push mov out adc dec dec sbb ja test sahf adc cwtl dec push jp rorb cmpsb sub dec pop jbe push leave movsb lock mov mov outsl iret shll mov out insl mov dec int3 dec mov repnz sahf jl loop out in out outsb push stos mov mov fs or (bad) xor std cmp dec outsb arpl out sarl pop pusha into push jmp (bad) (bad) xchg pop sbb mov ds ret out inc cmpsl xchg jnp push jns ret inc mov xor pop out sub or mov clc and cld dec pop push mov pop in out test cmpsb and push dec mov mov push mov push xchg jg pop out mov mov xor sbb xlat cmp mov out (bad) cld icebp in cmp sub sub xor bound add push push cmp divb dec pop loope xchg outsb sbb jecxz mov push fistl fldl out data16 jle push inc (bad) fiaddl out js adc add test cltd xor out xor or movsl aaa dec out and ja shlb mov clc sbb dec dec xchg es push loop sarb and sub mov push xchg sbb stc ss sub add cmp sub xchg sti xchg out add push inc pop xor bound ljmp out xchg dec push push xchg pop stos shr xchg aaa out leave add mov test out ret stc test mov cmp bound lret mov mov loop test out pop je sbb out cwtl cmpxchg test aaa add fcomp (bad) popa lods out outsl in push or mov and aam (bad) jno das pop ret lods jae cmp add test push (bad) lock push (bad) ja mov pop or movsl jle std out in mov cmpsl xor jge mov call out xchg sbb pop into ss test cmp push jb jl adc loop pop mov pop sbb mov ja loop adc and xchg sub iret pop fsubrp jg sbb fs inc popl add stos cmp call mov sbb xlat push inc out or lea cs sbbl cmpsl mov jge (bad) loop push stc mov out (bad) lods lock mov cli dec inc lds cs arpl pop insb jmp in stos push out xchg cmpsl push negb push mov out ret cmp mov cmpb out je xchg mov andl out xor sbb stc mov mull cmpsb nopl call mov out pushf mov (bad) enter das js (bad) push sbb xchg fild out loope frstor out aas mov inc xchg xor iret in aam in jmp and mov loop sub arpl xchg out jl add sti (bad) mov fadds mov ss sub fildl add sbb (bad) mov scas ss mov pushf dec or jnp out sub divl pcmpeqd or aad ljmp mov mov xor push in out push sti stc rcrl test fwait insb inc sub sbb out add out adc mov out iret std push out xchg pop mov xor dec add mov out add sub add dec lea out dec mov push sub lds out sbb icebp stos decb aad in xchg (bad) or dec fs inc push out pop aas iret data16 mov maxps push stos sbb pop xchg call (bad) sub adc push fcoms loope sub test je push inc xchg cmp pop cwtl (bad) pop fs decl xchg insl rcrl out (bad) lods sahf (bad) jne fistl adc (bad) mov repz jmp push pop les jg ret out (bad) fwait push sbb out dec pop fcmovne and jbe,pt add popa mov sti fbstp js pop (bad) hlt pop pop arpl xor cmpsl cmp je (bad) mov popa push sub out push sub lds daa and sub and fistpl cmpsb mov ljmp lods stos out cld adc jno pop (bad) jbe out mov ljmp jae mov lcall sbb movsb nop dec jg lods and mov iret adc fwait mov xchg mov rorb mov add push addr16 call push push fwait ret iret lss (bad) sbb stos pop xchg push sbbl xor xchg add push mov mov jge iret (bad) jmp (bad) hlt fwait aam (bad) or sbb js das mov mov out add push ljmp lret jae insl or repnz enter sarl xchg arpl pop cmp stos ljmp mov and flds mov mov or outsb add inc in idivl inc or decb or out jg mov and or push fbstp out out xchg mov jb adc in rcll in jl nop iret loopne and loop cmp out loope aaa in mov aam iret adc sub loop imul fisttp or je bound pop das jno lcall dec idiv iret adc push out (bad) cmp sarb popf clc push pop out test scas jae xorl notb aad in inc out and mov out dec cmpsl mov mov sbb mov push adc imull push jb out lods lea jno int stos insb das std cmpsl cli jp cmp test insl aad mov rcl cs out sub mov int fstps cmp cmp ljmp mov into mov inc bound mov xor (bad) and (bad) enter add out pusha (bad) mov aad loop fdivl push call sbb xchg out cwtl cmp xlat and daa mov push and out and test leave fnstsw inc sbb cmp push cs pop add in jo out frstor inc add out repz push mov mov xor out mov sub xor and mov out xchg (bad) scas mov jmp js enter gs inc cwtl loop (bad) mov or push outsl ret pop push mov add mov jg inc add clc xchg cmp in xchg cmp loopne movsl fisttpl lcall in mov enter call sub (bad) fistl (bad) cmp lods jecxz (bad) in aas cmpsb or cld ljmp scas aas repz movsb push out sub sub or push adc pop dec lock mov jnp and or pop flds out ljmp adc call pop cmp inc or out out cmp enter pop pop sub out nop test adc sbb mov sbb adc fsubrl (bad) sbb jle iret or out add mov add jp je bnd jnp fucomip js pusha out (bad) iret lret je stos stos jb nop inc xchg aaa out stc mov pop or push sub mov lret pushf and dec cmp pop fidiv push out sub add pop jle adc clc (bad) xor in fadds incb dec ss inc sub les jp push and xorl shll xchg dec pop test test out mov and add gs fmuls mov mov mov sub repz (bad) and ds pop jno leave ljmp mov std cmp cmp adc mov roll jbe into out out in jmp fiadd lret mov xchg push in out jg popa mov or xor and dec repnz cmpsb ret push out dec cmpsl int3 rorb mov les aam push fmull mov pop out jge xchg xchg out out in mov int3 out dec xorb push fcoms jb loopne mulb fistl jno or push (bad) pop in mov inc ss pop ja movsb inc ret pop xlat test cld (bad) insb aad out aaa add push call inc out loope mov rcr mov or (bad) xlat out inc jne adc aad inc out pop jb pop jo sbb xchg cltd mov je loopne ret or pop movsb and add (bad) xchg jmp lret pop jns,pn aam (bad) out sub push clc addb mov out inc mov mov jmp jg sar mov mov xchg fadds xchg xchg adc dec out xchg lds inc or pop sub aaa gs in xchg iret neg sti xchg xor push jo movsb (bad) test stos fucomi add fs out out aaa stos arpl push pop ficom loope mov mov cmpsl push pop lods mov mov ja out clc xor adc mov sarl and mov sub push inc push sbb xlat test test mov rorb mov int3 xlat jo lods or sub add push jecxz jl cwtl les out repz pusha pop icebp iret mov pop shl mov fucomi in jno mov mov clc pushf xor je in mov mov (bad) les push push out inc xor decl cmovp enter cli gs pop pop out bound fxtract loopne xor inc mov fcompl xchg push (bad) jae mov lock or (bad) jo aad iret mov push push xchg cmpsl add inc push adc (bad) cmc rcr out pop mov jae xor mov inc int push mov inc inc pop mov out push push out cmp dec xorb xchg xchg inc call dec out sub pop pop insb enter add push push mov lcall sub cltd mov mov or inc (bad) jne pop lock ret xor push cmp out idivl pop inc and dec fsubr pop (bad) ljmp out sbb xor jecxz sahf push out (bad) mov imul xor imul cmp cmpsl xchg cltd mov in sarb mov in add sbb or mov insl adcl xchg (bad) add and ficomp js movsb sbb sbb jae out repnz fwait (bad) (bad) jmp out jmp out in xchg out ret test fbstp and out mov push sub out mov and pop repz fs cltd out mov xchg (bad) mov xlat push mov shrl adcl clc out adc mov xor mov data16 outsb lock mov jns push sbb sti scas in daa out mov pop push pop out mov scas inc repz adc out mov call xlat out ss fsub mov dec pop mov pop out aad (bad) repnz out push icebp jecxz push in sub xchg dec jg xchg aas (bad) and fdivr out xchg daa rcr jmp fdivs rcl dec popf jl outsl out and jmp (bad) jb dec lret pop hlt mov out sub fdivrs in add (bad) sahf icebp repz pushf jge dec xor loopne pop imul mov scas data16 out ss cltd push hlt pusha push js sbb and sahf push insb movups call fldenv sbb inc lret fucomip cwtl mov dec lods test out stos divb mov fsubs out sub xor popf cs sbb adc xchg pop imul rcr sbb xchg cmp out (bad) rcrb xor out (bad) xchg add mul jb out sub dec adc insb scas test lods xchg mov out jmp ljmp in cld mov jmp ds inc push pop or ljmp xchg loopne fildll mov and out lods cmp cmp mov sbb and out fdivl cmp call mov loop out sub rolb aas inc ljmp lea mov out stos in mov jg or adc int3 lcall imul push and out push ljmp fcmovbe inc insb sub test mov pop push movsb iret in mov jmp fwait inc push mov out mov nop int out cmp pop push mov lret lock ja mov mov jns jbe shlb out (bad) hlt ret out fnop lahf mov mov xor push xor cmp out mov std jle adc (bad) sub or psllw mov mov in out cwtl popf ret mov stos xchg xchg (bad) in or dec sbb mov and pop hlt mov mov out enter lea imul sub pop out ja sub jg inc out into adc sub (bad) lock out xchg sbb inc out fmulp aaa and popl adc pop out (bad) mov pusha or out sub lahf ds out sbb mov pop fimul dec outsb lock arpl aas mov or fmul (bad) mov jg out ds popa dec cmpsl or out mov decb xchg (bad) and cmpsl inc jmp xor inc mov inc in xchg mov out jg and mov sbb (bad) pop sbb lret mov adc in pop cmp inc pop mov rorl aad out xchg xor mov adc cmp arpl adc int call xchg out movsl sbb jle xchg inc mov lret sbbl jmp arpl pushf add insb push or frstor repnz xor ljmp cmp call jbe cmp imul int cmp mov das sub cmc pusha out mov cmp jb mov sbb cmp push (bad) mov out ftst (bad) push out inc add mov push or or pop push movsb jbe cmpsb cld iret rcrb jp test inc jl clc mov nop loopne fistl in xchg arpl pop out ja push push push loope in fucomip xchg lock xor inc leave cld rolb mov lcall sahf (bad) mov scas outsl imul out pop push xor pop les jo out mov mull js mov sbb sahf test stc daa cmp inc imul jp insb ficomp xor sbb pop dec aad in insl sub ds jg mov das stos add daa ljmp out xor cli fidivl pop in xor out es adc push mov inc or out cmp jecxz push rclb test imul cmp lahf lock insl push and add roll sub cmp adc inc out cwtl imul pop insl andl push or iret (bad) push cmp repz in jmp pop addr16 (bad) dec xor xchg out xchg jo or xor test (bad) inc out dec adcl pop mov and inc cs xor insl mov outsb pop stos dec in cmpsb es in mov loop bound inc das insb shr scas or ds outsl jmp pushf out iret rcll pop xchg add out loopne jo sub fsubr mov mov and loop lret inc loopne or ljmp mov (bad) icebp sub adc setnp ljmp out sti add pop scas add push sub out (bad) mov dec xchg jo cwtl cmp in and xchg aad into add fucomi mov loope push cwtl js nop push and cltd dec cmp inc lds ss pop mov push movsl cwtl jo shrl pop push lods inc or call mov cld pop mov sbb fsubrl or jp or jae (bad) shrl push cs repnz lea int3 pushf mov out mov sbbl dec adc mov sbb xlat mov pop jp ljmp (bad) std js test xlat fwait ss push jno out inc mov out mov xchg adc in mov cmpsl and mov dec xorl mov (bad) cmpsb cmp dec push cwtl pop sub mov jno dec add mov push jge jmp and iret mul ljmp inc push mov add insl mov cmp ret and aam out fwait inc leave adc (bad) out mov lcall mov bound mov lock lret bound adc jge lea (bad) fidiv xlat iret add fmull and scas out mov inc push out add xlat loope adc loop mov mov fcomps push jnp inc scas lret mov clc out dec (bad) shrl (bad) in pusha fdivl out add pop dec cmovle jg or push ja xchg mov out dec fisttpll insb jbe loop cld mov pop dec insl pop mov xor or sahf inc test push push imul fisubr xor dec std and out cs or lcall lret pushf pop jb dec in add mov ret out push ljmp sbb in shlb push in mov inc xchg jb ja jbe dec mov pop push out nop sbb das xor cmc (bad) negb lods xchg mov cmp sub sub pop test sub jbe sbb aaa out jno inc pop ret outsl jnp out lods sbb hlt push sarb insl and xor std ret loopne div (bad) jmp fidivr (bad) jne clc loope cmp decb mov addr16 out scas shrl inc xchg jne out dec loopne pop mov ljmp (bad) inc pop dec (bad) repnz repz test push ljmp out shr cmc push jge cmp out fsubs jle lret mov mov lods pop sahf mov push dec arpl int loopne orl mov out cmpsl or jne (bad) and pop jno jp lods pop rcrl xchg inc mov out loope or scas out dec rorb mov fs mov (bad) cs in cltd fadds inc fistp imul sbb sahf mov insb or jnp lcall xor (bad) pop sti aaa in adc (bad) cwtl mov imul push aas ds ret xchg cld sub int3 out loope fsts lods or out ja xor mov sahf (bad) out and lds sti sub mov loop or cli enter out ret ret jbe sbb and in or cwtl (bad) lcall adc push pushf jns xchg inc xor cli rcll jl sti movl jno mov mov mov mov ja out ds (bad) xor lods push lods mov subl aaa sbb jecxz ret test out adc call xchg mov mov fs adc ljmp out xchg lahf cmp out cmp mov push repnz dec jl pop out mull mov pop sbb pop in pop stc dec out hlt js enter push out mov shl scas inc iret into or icebp scas cmp int3 lods and (bad) jnp icebp jp sbb shr xor sub mov ja adc (bad) cmc inc out int loope aaa sbb add orl scas sub push fdivl jg in dec out push dec add jp repz clc inc lret out sbb (bad) cmp pop out mov xchg out xor lea test out cmpsl and adc jno stos in mov (bad) ljmp gs sbb loopne dec jecxz sahf push dec arpl in sbb fnstcw and les mov mov push and insb push das add sub or lods mov push inc out push jns out scas nop rep aam iret leave (bad) jp out push ja mov jle out stc mov mov out jae pop sbb out sbb xchg and mov lock inc scas subl inc (bad) aam repnz push dec push mov insb aam sub sub lods incb mov mov jle in divb jnp mov cmp repnz cmp inc in push dec (bad) jmp adcb push pinsrw arpl int out adc jl insb xchg repz push jno imul or pop mov ss mov icebp shll out xor jb or lret fimul (bad) sbb in rorl fbld in mov dec out add mov cmpsl iret jns movsl outsb in cs inc out es inc lock push mov test out xor clc fwait in push push mov jp insl mov or mov mov or mov es pop push les out (bad) pop (bad) inc icebp jmp shl pop xchg int inc out insl fimull ljmp xor cld pop test neg push je pushf fsub mov mov xor xor push and jo test xor jno (bad) stos and add adc lods lret out inc repnz popa fcoms cmp test pusha out cltd mov incl sub mov adc adc pop jp and lcall outsl xlat loop repz fbstp xchg into jmp xorl clc push mov out int movsb hlt dec call imul dec pop jle pop pop push sub or xchg or push out rcll das mov pop pop jnp mov jbe out std fsubrs lret aad outsl out sub lea jne (bad) xor add les iret out dec mov (bad) loop inc daa or out pop insb fwait mov jo stos or ljmp push xchg push or insb ds xchg in and aad sbb adc push mov inc gs dec stc add sub push addr16 xor popa lds pusha dec (bad) jg fldcw insl cmc xor mov lock int rclb in out pop rcrl inc add lret cmp or dec pop jg out scas mov insb pop pushf inc repnz sbb pop js adc into mov aaa out cld jns inc loopne fwait out mov mov push enter push sbb push cmp xchg jl mov out add jle or lods xchg mov int3 in sbb push add mov out in add mov notb cli jecxz gs (bad) push dec pop fsubl push std iret inc aad inc jae lcall mov and pop out cmpsl fild dec out add das sbb xchg imul into sub xor xchg lcall push fsts test out out jmp mov das test push out mov decl push add sbb and adc loopne mov cmp pushf lret push out and mov out fiaddl aad out lea in push test and xlat jge or push pop scas inc xor ljmp dec lret fldcw mov mul pop adc mov out subl insb data16 cmp sub push nop fwait out or lods mov iret or out cltd adcb pop dec ret lret loope adc push mov loopne mov fcmove mov cmc xchg jae out frstor mov or push sub cld popf arpl sbb insb (bad) movsb push iret pop daa sbb inc (bad) (bad) xchg adc inc call pop mov xchg popf int3 out jmp cmc call (bad) sbb add nop xlat (bad) ret jno cmovne in addr16 sbb adc xor ja push mov ret mov xchg sub out push lcall out mov cwtl pop rorb fsubrl roll xchg dec dec out (bad) outsb mov out insb arpl leave fisttp loop pop mov sbb cli enter outsl out insl push xchg mov inc pop out sbb je mov mov and push loop stos mov pop adc push xchg jnp rcll out gs cmp loopne iret cmp jl xor jnp out xor jp xor mov mov cld xor cmp es inc fwait mov (bad) mov int3 xchg arpl add repnz xchg cmp ret jle loop in jne sbb cltd pop out mov in fwait cld (bad) test and jo gs out ret push data16 test adc mov lahf in fucomi jge imul out loop or push shr pop test sub repnz add push popa mov jle btc jno add movsb out dec push xchg dec das popa push ja jecxz pop xor movsl mov enter xchg in in lahf out push add lcall cld rclb out pop or (bad) out xchg popf push daa add push pop cmc divb mov sbb clc call pop push cltd fldl mov adc push out sub fsubrp add bound movsl and jo ljmp popa ret (bad) jecxz iret ss push hlt out gs and fs and pushf mov imul (bad) ds and inc (bad) loopne stc sbb cmp shr jb shlb sbb test loop popf pop out (bad) jle push mov push mov add inc push out test outsb je outsl pop adc mov jno sbb mov aam rorb or mov jb dec (bad) push scas fisttpl stos inc dec int3 fs out adc es cmc push (bad) xchg out mov insl insb out cld clc imul out lret enter mov mov into jp insl jb xor hlt out (bad) clc call push es pop js pop (bad) enter daa nop mov lods pop out mov icebp jp rolb xchg jo outsb push xchg fbstp xchg mov mov dec lods imul shlb out imull out sbb pop xchg fcompl mov roll inc and icebp popf pop adc addr16 or mov inc cwtl out stos enter out push test in aas push (bad) es arpl out out mov mov or dec mov loop ljmp out push sbb mov insb fnsave xor or int out hlt mov dec loop add (bad) lahf jecxz mov int push pop pop pop jle mov into ficoml fs data16 inc enter int fbld popa (bad) fwait xchg insb mov out imulb ret sub dec in call mov xchg adc out (bad) test pop cmovb out repz adc cmp (bad) jns and push mov out (bad) jne nop out in adc pop iret out lods jle loop jg mov testb arpl call (bad) pmaxsw jge fist (bad) out pop mov xor jle bound cwtl xor and or dec inc in shr cmp lret mov push sti push loopne sbb divb std out xchg fidivrl rcll xchg push mov adc push ds inc jg cmp push out fs sbb aas ss jnp imul cmp ret xor fs mov push push pop or mov xor lods xlat out and test out mov xor (bad) pop push push mov and out (bad) test lcall clc push fldenv or mov pop jnp (bad) mov out lea movsl (bad) je mov aad insb out jp js pop addr16 jmp adc (bad) jbe ss out sub or jecxz add mov push adc pop insb xor xchg or out sahf xor out mov test test out xor ret insl bound fcoms sub andl mov ret xor fistpll stos popf out pop in repnz ret (bad) xlat inc cli (bad) or adc shrl pushf jo divb out push fldl pop out es sbb and out aad mov out pop stc inc gs aaa movsl mov cld aam das sub fild outsb xor mov icebp push pop pop out loope out scas mov fcoms dec xor jl out inc sub shr daa fisttp ds mov out add in aad (bad) shrl dec xor pusha push test mov mov pop data16 mov pop out push jmp push test mov push xchg sub push cmpsb mov out xchg clc pop push add sbb xor lret hlt rorb pop dec mov mov loop std jle pop in ror or dec mov mov (bad) out jp pop stc (bad) pop jnp sub cld (bad) or push popf outsl xchg test and es aaa jns ret out sbb inc andb in inc push out adc add test int jno ss sub out push mov mov mov ret out out xor loopne out push movsb inc xchg dec (bad) push (bad) lahf inc cmp fucomp push xchg (bad) fldcw out iret lods pushf xchg loop mov repnz or cmp rcll shrb xor popa and stos addr16 xchg jl xor or test (bad) inc out and lock xchg xor mov pop mov ret in scas cmpsb pushf loopne out out aas mov xorb lret in jecxz adc dec mov jmp push cmp in jmp cmp and out mov fwait out nop mov repz frstor call lods mov cmp mov out std push fimull mov mov fdiv out sbb mov jecxz mov cmp out ret (bad) lds das out or lret or out enter mov mov mov in push data16 inc pusha sub fwait cmc imul cwtl ret loop mov add pop clc pushf jecxz mul xchg mov popf out mov arpl mov shll cmp jns mov or lds mov out (bad) fsubrs cwtl aad mov pop or inc mov in pop out cs out iret or test and out sbb faddl mov push test out xchg into sub add pop mov mul mov sub push popa js fnstenv les sbb std and mov idivb xchg mov push cmpsl out js push or incb pop (bad) gs mov pop push lods push sub add add test jne sbbl xchg divps in cmp in movsb in fucomip and jle int in lods incb fdivrs push jg in lock in rcrl push jge dec (bad) sbb (bad) aaa xchg in lcall js xchg cmp test daa pop repz inc cmp sarl test dec jmp hlt leave add xchg into imul rcrb lcall fisub dec insl out pop pop xchg loop js ret out inc xchg push es and adcl (bad) xchg fildll out sbb cmc out inc push out mov mov pop jl mov xor xchg out pushf movsb pusha and lods jae jecxz fsubr push sbb into adc jno add mull sti out lahf push stos sub test (bad) or jmp cmp and popf out mov lret cmp xchg or test out arpl mov mov mov pushf adc push in xchg fbld xor cmp out add out fstl mov jns cmp loop out lods stos inc sbb test or and mov test jae jns out and ret fild rorl out mov xor mov aas sti xchg in fwait iret push outsb push insl out imul sub fsubr pop mov mov ret outsb push jmp dec nop or mov sub repz js insl xorb fs dec les lahf out mov clc idivl inc out test pop inc repnz je pushf push mov add in push insl dec std rorb pop out sarb shr inc ret je sbb ds fistpll hlt and ljmp (bad) sbb pop dec in fild mov out out testb xchg out cmp rcrb pop mov loopne mov data16 cmp pop jno bound out out mov std lcall cmp xchg addb cmp repz push out imul fwait dec pop in add adc sub repz pushf into out xor jb jmp xor jae sbb adc inc inc jle jns xlat cmp pop ret (bad) sbb aam lds pop out push cmp push pop in push adc xor ljmp aam sub jnp addr16 jno xor dec ljmp cwtl jp (bad) out test xorl mov and xchg outsl pop imul divl mov sbb aad lcall and mov out jmp pop mov out shrb cmp mov setl es je jg test and cmp add dec lock add ret inc jge das aam xchg clc push out jo and and xchg in call in mov enter stc imul dec pusha out jnp lds push mov les jae or mov mov mov xchg cmp and xlat and mov scas js popf adc arpl mov add jnp or jge mov es call mov imul in fs lods push push dec cmp addr16 xchg push inc xor mov push (bad) data16 push xchg out imul mov cltd or nop dec add fs ret negb sub push stos loop sbbl (bad) mov out fs lcall out xchg lret daa dec pop (bad) pop mov lods out add cs stos sbbl adc (bad) cltd imul out or jo and mov out sti mov and lods cmp out (bad) jne (bad) fsubrl mov dec xchg call xor ror xchg mov out ficompl (bad) das pop mov aad jge jmp cld rcrl imul push lock outsb xabort std xor sbb cmp jbe and inc sub sahf pop insb xchg imul mov cli jbe and inc cs stos out sbb pop imul cmp pop sbb stos mov into mov mulb mov mov insb xchg mov jnp repnz add leave (bad) lret incl cli lods sbb andb sub mov data16 push and into insb test jecxz mov out sbb leave sub cld mov in mov (bad) in sub adc imul add add lds les repz or out lret out out in sub popf jg mov (bad) xor mov push rol and inc mov imul loop out push pop jnp dec cmp cwtl arpl ljmp lahf jg sub fistp lock idivl ja push jae js push mov pop out adc data16 out cmpsl dec mov out mov xor js jp das out movsl jmp dec jg out sti mov push rorb sbb scas scas mov pushf out test (bad) push mov rcll ljmp or out push mov sahf and loope push inc push pusha out xor int cmp incl loope std out push mov pop sbb movsl lea xchg sbb pop push leave aas cmpsb or adc popf mov loopne sbbb ret sti lock pop in or and mov lea daa mov out addl hlt ljmp daa fwait xchg xchg mov jle clc scas (bad) xchg xchg rolb sti mov pop xor cmp es loop mov cwtl into mov fmulp cmp push cmc clc out test add jmp orb mov xor ret popf pop fisubr lock mov es aad movsb and pop std fbld jnp lods loopne jmp daa mov pop inc (bad) cmp cmp mov aam aas test adc js lcall push movsb sahf out or jbe stos sub pop sbb stc outsl cmp das push adc mov pop ja sub sbb or xchg iret mov pop ret ja xchg inc pop push sbb add jb rcrl jge cmpl in adc out cs adc out popf mov push jl and decb push mov adc push pushf cmc inc mov (bad) icebp lahf and jg and out xlat xor ret push les mov dec int out sahf mov sub fsubrl aam mov add pop adc push mov inc pop pop or lahf mov out xchg adc in out sti adc or cs mov pop xchg and mov rorb insb (bad) mov fistp std in incb mov mov pop roll lds call cwtl (bad) out hlt clc iret jne cli pushf int3 jmp out js push in out or les add push jp and out (bad) and dec jle push (bad) ds addr16 cld cmpsb ror test in popf movl outsl jecxz out movsb jp lret jb mov stos xor in iret push cmc fidiv or push iret imul fcompl leave (bad) and popa (bad) in pop gs addr16 (bad) std pop cli (bad) repz in cmpsl out lds aaa xorb cmp arpl adc leave xor cmp out ljmp mov ret stc sbb lods out cmpsl sti and shl xor mov pop dec xlat pop push call aas cli hlt jae test mov push imul jbe pop jl int3 mov (bad) lcall mov xchg out pop icebp out sbb idivl dec out hlt adc push (bad) and xor scas cmp mov inc cs push out or jo fcomps loop or loop pop in out push mov and gs scas out sub out imul out mov ds (bad) leave insb adc inc iret add lret ret out mov imul ficompl pop aad push out insb xor (bad) mov in shll jmp cmp shr mov mov xlat push mov pop out lret dec mov test mov push add imul mov cmpsl inc (bad) out bound cmp test out jecxz fcmovnb movsb lds leave jg lods sub xor sbb out out mov mov out test inc repnz mov imull cmp (bad) mov pusha mov iret jg pop int into cmc jmp cli jae subl jge mov xor lahf jae xchg out aas inc fsubr movsl fwait adc cmp lret movb (bad) ffreep ja cs jnp jecxz iret (bad) call xchg out cmp inc mov es ljmp (bad) icebp pop adc (bad) aam in jg xorl pop out pusha mov dec dec out (bad) adc push rolb out mov or out mov and dec daa lret inc pop (bad) out cltd in rorb das jle fcmovb pop dec cmp loop cs fbstp out pushf js pop (bad) lods adc addr16 push iret repnz (bad) pusha in gs mov out cmpsl negl xchg jmp inc inc add mov stos jecxz xchg in out jo shr test sarb mov xchg lcall (bad) jg aas rcl mov (bad) test mov imul lods xor int out cmp in xlat sub jge or vmwrite outsl addr16 daa das out cmpsl mov mov insl in pushf and mov dec into out lods loop add sbb push sahf arpl mov mov push push dec adc jl cmp push pop mov mov stos ljmp lahf in sub ja out lret mov xchg insb rcrl std pusha xrelease adc shl jmp (bad) or sub lahf iret sub push out in sbb (bad) dec mov push popa mov xchg test pop mov ficom jbe jecxz sub out cmp push lods adc jae lds iret jnp mov mov (bad) aam loop xchg or adc and push imul add cmp add mov push test repz aad fsubl stc mov inc leave push adc add cmp mov (bad) and pop lcall das insl leave inc cmpsl call iret loopne add inc (bad) repz mov and push je daa out jp repz fwait or xor movsl xor push std pop fstl xchg xchg out test enter and daa outsl out add out insl lods (bad) into test mov iret cmp js,pt push mov pop or lods (bad) dec mov mov es repnz scas imul adc gs outsl push mov (bad) out cmp push jmp pop stos dec fnsave lret sahf inc push leave std xorl mov aam nop mov jp inc arpl jne out push push cmp fucomp and (bad) jb in push into lods pop mov in out pop test push call mov ret dec loop lcall ja pop add (bad) rorl andl (bad) pop mov cwtl inc sbb insl scas sbb lahf push mov inc out out (bad) or imul loope loopne dec jae test mov xchg out inc out lahf insl int push out negl adc inc adc sbb or daa or aas xor jb xor xor lds inc ljmp dec cld inc jmp (bad) out jecxz in cmp jp shlb inc add out jecxz std imul push test iret xor or maskmovq idivl (bad) jb dec cmp out mov test dec fcomp xchg or xchg std jae dec mov (bad) out mov dec lock out inc add cltd pmulhuw stc jbe icebp in int sbb out hlt into push ja mov out mov cwtl mul pop adc iret sub xchg call cmpsb pcmpgtb sub pop test xchg mov xor mov dec pop dec push fldenv jb out lcall and sbb jle repz sub pop (bad) dec (bad) data16 out lea rol (bad) int3 out mov loopne sarb pop pop or sub adcl or mov out push mov test xorl in jne in xlat out xchg add (bad) xchg out or ror ret and aam pop sti in mov (bad) mov in repnz and inc jb pop into jecxz rorl (bad) out fwait aad ret pop pusha lods (bad) push out xchg popf (bad) jmp and mov out mov sub bound out in frstor or popf xchg lcall pop jae mov out adc popa adc xor out xchg (bad) push dec (bad) into addr16 lock arpl iret (bad) js push stos mov mov pop repz pop push xor shrl (bad) (bad) out loope ficoml xchg pop mov (bad) jg call roll pop cwtl dec jbe sub loopne mov sub gs push jno push cmc lds out jb inc sti stos shll (bad) repnz inc iret jne sahf add mov test arpl mov rorl push dec mov ret inc bound inc ljmp sarb dec mov push es add out jnp dec out mov ja test iret (bad) stc outsl loop push test add iret out lods fbld adc loop fnsave cmpsl sub push bound imul mov pushf xor lods in jmp (bad) (bad) adc xlat fidivl mov das add fldl cwtl movsb out pushf gs and loopne jo pusha fimul out out ret or jnp stc (bad) jo jmp loopne setb cwtl ficomp cli pop loop mov adc scas loope out arpl inc mov add mov imul loop inc adc aam out adc fild iret cwtl adc mov jmp subl inc add sub mov mov test cmp cwtl sub outsb lret out lcall cli push push out adc jae and js mov mov into jmp pop idiv test dec call out mov jno,pt add cmpsl cmpl pop movsb lea jb out xchg loope (bad) iret mov fidiv lods roll icebp rcl imul shrb xor xorb sub xchg push loop sub push out shlb adcl mulb jle fnstsw xchg stos cmpsl out jae inc dec out je ljmp imul es std xchg pop dec (bad) out xor push icebp push aad data16 mov iret jns repnz aaa in mov cmc push out push jne leave pop stc mov loope out and adc scas incb pop out or out xor lea dec out stos mov in out add xor gs out dec fild push mov imul popf sbbl int test sub out ljmp out or fwait notb xchg int fistpll push (bad) jmp mov into jmp lods add push (bad) out loop (bad) aam pusha roll out cli and dec out stos adc cmp cmp sub loope outsb jle addr16 and dec out loopne leave mov rcl cwtl iret fstl test jnp ret mov mov pop push cli pop mov out jb add out xchg jmp sbb inc cmpsb mov jmp add out push dec arpl ret out xor sbb dec dec sub pop jg or out loop dec hlt sub inc jae ficompl and pop sub xchg dec test jbe rorb pop imul pop inc mov (bad) mov xor repnz mov out fdivr movsb negl pop daa and out dec insl xchg or add fmull movsl and out adc dec fsubp xchg out mov mov push inc out repnz sbb jg shr (bad) pop stos mov jnp aaa enter pop pop adc xor nop or add jl imul dec jo xor cmp (bad) mov std fldt pop bound test idiv and xorb add les out fwait inc jns pop and mov addr16 ja push jnp cmp inc rcrb and fcomps ret cli jmp mov mov lret loop,pt ss in dec xchg cmpsl cmp sti and out jle js ret mov sbb jecxz lret sub movsb sbb out insl fsubrs out cmpsb dec jge aas imul imul fimull add push fsubrp sarl les cmc fstp out fstps add out clc insl std scas cmp or mov and mov out mov iret dec dec in nop out negb push fistpll (bad) ss outsl ja (bad) mov (bad) out loop daa jp rolb or repnz (bad) adc (bad) pop mov fsubp out push sub iret pop inc jl loope into out pop (bad) std aam xor test lods xchg jbe sub cmp dec xchg in and mov adc pop mov dec rorl insl xchg mov addr16 out pop or xchg sub test or pop pop lods pop ds std in xchg das cli inc push ret cmp and pushf cmovs fnop xor cmpsb loopne mov ljmp lea scas fisttpll dec jno into rol loop inc rcrl imul or cli jns imul out stos into movsb xchg loope push hlt outsb scas (bad) xchg out mov add cwtl loopne xchg outsb out (bad) inc aas inc inc cmp dec xchg mov fwait mov jecxz push fdivr cmp lock stos nop and or xchg mov test mov dec jmp lahf ficom outsb dec cmpsb in mov enter xchg and out (bad) pop insl jg leave out sbb inc sbbb mov jecxz pop daa mov mov sbb in mov ficoml and add lods adc pusha out xchg sbb add mov mov imul lret fiadd jno daa out xor dec into int outsb or push xor and jb mov insl inc ja dec daa in out (bad) out das in ss in ja xchg outsl cmc sub pop add imul rcrl fidiv gs pusha out xchg pop mov ror data16 loope cmp mov nop mov insb mov xchg out outsl push sbb xchg cmpsb (bad) pop mov movsb test jmp sub ljmp out mov mov ljmp fucomi out mov int jmp jo sbb call xchg int (bad) push hlt js push arpl push iret aaa int3 cwtl or jbe ljmp out mov (bad) jb push fildl inc dec insb pop cli out addr16 andb mov (bad) inc shrl test repnz push cwtl out cmp xchg push inc sub dec popf in movsl sahf adc aam add out leave (bad) jbe inc mov mov jecxz insl sub aaa test sbb inc (bad) mov call arpl mov out (bad) dec sbb fisubrl cmpsl inc lret js mov in xchg dec out jns push cld push mov pop out cmp out mov movsl imul inc fisubr push (bad) mov cmp lock mov decb inc out xor cltd mov fbstp cmp adc jg add scas inc out out inc scas lods inc in sarl xchg (bad) mov lcall pop (bad) shufps fsubrl imul dec mov jae mov test out scas fldenv jp jb in std call in ret cwtl cmp out xchg sbb test in inc dec in mov out xor adc lret nop pop push imul fld jb sub lods inc xor les (bad) and mov lcall popa out jp add fistp insl insb les out outsl (bad) imul jno or jl mov fist fdiv sahf hlt fnsave or sub and mov jp xlat mov aam out xorl pop out outsl sbb in push sub fucomi mov xor mov cmpl shrb (bad) cwtl (bad) test pop xchg sub lahf out pop push push pop inc sub jo xor out sbb hlt mov aaa sub lds adc jne and pop repz cli shr testl jns mov push mov (bad) sub mov fsubrp jnp (bad) out xchg js mov pop xchg out insb xor xchg mov mov sti cmp pop xchg je ja pushf inc out cmp paddsw or clc jge pop inc xor or jmp imul xor data16 ja push and xor imulb outsb adc sub inc cli out push leave call push xor (bad) cmc movsd in call arpl leave pop xor cltd lds ljmp or out ss out js movsb jb into adc out jne test cmpsl out popa es repnz xchg mov jo sub daa cmovnp cltd xorb cmc xchg out pop xchg scas out stos ret fildll cmp ja mov lds daa push leave dec lret gs int fist scas cmp push adc cltd (bad) jnp cmp out jbe fistp cwtl cmp mov cmp cmp out shrb sub scas loop lret (bad) mov lods (bad) in cmp imul pop iret jmp les mov outsl sub stc es in insb nop repnz xor or pusha out cmc insl xor aaa mov pop out add test mov sub daa fbstp cld js push out out leave pop flds cmp fstpl out push je add out push adc push and es or mov cli out inc gs jp les dec push mov (bad) dec in mov ret xchg jb sbb out inc and pop xor jnp or out pusha jp out add je push jns jg xchg mov cmpsl imul hlt pop mov jecxz in push (bad) sub popf idivb pop out dec imul out sbb movsb pushf out xchg lods enter clc in pop pop adc lret je,pt fs (bad) jp loop dec pop pop (bad) imul mov jae xor in pusha test xor out scas aas cmp cmpsb aad sub inc push xchg cwtl mov out inc stc xor lock pop in cmp js xlat je mov aas mov sar jo repnz stos add (bad) xchg out add lret push loopne ret mov adc fisubl pop (bad) aam push sbb inc (bad) stos (bad) sti icebp ljmp xchg mov pop and insl mov popf push out jg dec jbe lcall fwait mov lds jns adc cltd clc cmpsb sbb fist add iret sti out pop cltd and (bad) sahf out mov inc adc inc nop mov sbb pop cmp test xchg lret dec sub cltd popa sbb mov cmp rclb mov iret in std fcompl adc outsb clc sub adc dec insl int3 mov add divl mov out cmpsb repz and jmp scas pop xor icebp or ficomp push sarb dec enter add sbb dec popa and cli incl je out outsl sbb sub add dec ror (bad) jae outsb les xchg xor cmpl in out mov out add int3 lret pop mov insb sti imul popf in shrb add fs push (bad) out out cld pop dec addr16 in ds pop dec jns push hlt add inc iret xor roll fwait dec add inc jge je out (bad) rolb inc push and add and gs pop cld fistl mov xchg sahf out (bad) loopne mov inc adc divb push xor add (bad) ja loop gs out adc or nop mov int cmpsb xchg or inc loopne out cmp lods ss out fsubl (bad) int3 push lahf lret out or mov pop lds xor mov stos andb cmc cmp cmp add push loopne fdivrs in pusha (bad) push jmp mov (bad) sbb sahf setae and or adc cmp add leave or push out mov and int out sub fs mov clc dec test push pop mov pop test mulb rclb outsb andl mov sarl movsl test lock incb cmp in mov cmp das fdivl scas insl imul call adc out incb pushf sub sbb xchg in loop jp jmp jbe pushf mov out faddl aam jnp xchg std out rorb cmpb cltd cmpsb xor dec or popf mov mov mov inc sub aaa jne test (bad) sub jle ss jmp inc jmp mov call out inc (bad) out sbb enter daa out sub popa pop out int3 jl fstpl xlat (bad) xorl fwait imul jecxz ror cmpsl dec vmovss loop mov js xor out xor out arpl shr cld ret movsb sbb or jo adc or sub (bad) ljmp iret xor ret lock push out in aad mov repnz jbe pop test push lds push or pop lea mov dec fbld xchg imul hlt mov pop out add arpl dec lret and adc xchg out movsb push test cli jae push std loopne addr16 sbb mov movsb std pop out rcrb aaa js lock sti in in cld mov inc ljmp jle bound pop imul mov and ljmp jg popf add out test loope test int test (bad) int3 sbb out scas jg pushf dec adc pop out jne xor (bad) jmp mov sti out mov mov js (bad) test fsubp hlt lret (bad) leave cli xchg add pop pop jp pop inc xor js mov iret scas jge out adc sub dec js xor popf mov (bad) push scas ljmp out ficomp dec dec subl pushf insb xor insl xor sbb nop mov dec mov xchg stos rcrl out stos ficom bound out inc mov out insb xchg pop jge (bad) lock out push pushf mov out and aad iret inc gs notb int out jle and push lea test xor out in lock jae (bad) pop adc push js mov in out cld mov pop xchg es (bad) leave sub push dec rorl in push xor cmp jae cwtl xor ret stos out sti push pop add jno int insl cmp inc into xchg (bad) xor pop pop test out imul out adc (bad) idiv out jmp in jmp jg jo pop pop jbe movsb pop out (bad) sub out in and lods mov ja or fistpl leave lahf xchg jl xchg bound sub mov mov and adc mov xchg addr16 out mov in fsubr pop push and int lods scas pop xchg mov inc pop pop lock or mov dec out das insl movsl rcrl ret daa loopne and out xor popa ffree mov xchg pop popf dec push pop in es or out push xchg dec push sahf psrad loope movsb repnz and push or roll stos test das and push cmc in cmp push idivl aad mov or insl mov out shlb stos (bad) out lret gs sar popf scas out lock sahf fucomp repz out mov mov sbb ret and mov outsl inc outsb ficoml mov mov mov insl push and aad out aaa in jge push pop push data16 mov into insb sti xchg xchg pop mov inc test (bad) mov loop fisub out sub mov xchg (bad) das push push lea out pusha mov dec or test jns mov dec in out inc movsb mov inc out sbb mov mov rolb (bad) xchg (bad) es mov in fcompl lods xchg in scas add cld mov mov (bad) push inc lahf ss dec test adc cmp pop test into out mul out cltd cli test mov ret pop pop sbb mov (bad) out ret pop cmp mov xor int lret pop loope jb ret jp mov sbb insb inc push (bad) cs dec fimull cmp out (bad) out in call xchg dec cmpsb push pop test popa cmp insl out (bad) sti sbb out ds and pop pop pop lods pop xor fs jae imul sub ret lds xor inc gs jb adc mulb insb xchg lds data16 outsb lahf pop mov rol lret dec ja dec adc out int3 imul cmp (bad) mov sarb out (bad) aam int or out mov and pop shrb push jb inc pushf cmpsl mov fcomps push dec xchg push out pop dec push push mov fidivr push sbb out movsl inc test cltd mov jg shrl dec ss jmp xchg sub pusha aam mov cmpsb mov mov adc in out adc loop lret mov in out mov mov out sub fs fsts lods out fwait pop xor mov sub or jmp out out int rorl mov and js inc jp in test and sti or repnz daa add xchg call pop xchg rorb adc or jl mov push out mov and das adc pop xchg or in out clc sahf idivb imul mov or movsb popf xchg dec xor push jge insb fisub lods data16 mov mov cld insl cmp add out leave and inc mov push mov cmp out sub cs pusha call enter out cmpsb jg push pop jno mov fcomps rorb mov (bad) pushf adc mov (bad) aas stc in mov das stc out rclb sti (bad) pop pop or in push out push int3 push mov stos test dec fs (bad) movsb jb dec iret cmpsb sub in std bound cvttps2pi es mov ljmp mov sub lcall repz movsl imull (bad) out (bad) push ret lds shrl (bad) push or pop jmp aad nop jmp adcb jg pusha mov mov sbb out stc test inc pop dec mov icebp addl stos push xchg hlt insb sbb gs xchg adc mov jmp jae addl adc popl sbb dec push out jae cmpsb jo andl test das mov push cmp test (bad) pop mov xchg sahf xor ffreep or outsb add mov in dec pop dec xor jne cli (bad) ss es jecxz sub (bad) cltd jo mov gs popa out cmp movsl sub jb xchg lock scas adc xchg xor out andb sbb lret and jnp lds out adc inc adc mov lea out jp jb push popf mov push int3 pop cli pop mov inc nop test add mov xor pop (bad) mov into lock sahf jge pop mov xchg inc xchg inc popf out mov xor mov push dec mov aad out scas and js push roll sub int3 add lret inc sub out mov pop pusha frstor outsl xchg xchg out sub js mov jo leave out xor lcall xchg out aas aad arpl popf out pop sti pushf sub out mov fwait sbb pop lcall pop jne pop jo mov imul sahf pop jecxz arpl cmp mov xor (bad) xor push out fadd (bad) sub out cli xchg jl cmpsb int push out out jnp mov outsb pop dec lds lods rcpps jge and (bad) hlt cs xchg aad push lods arpl inc push sahf push inc dec (bad) cmp pop scas mov inc push out cmp cs inc or xor out scas imulb push pop cmp jmp cli inc xchg mov scas aad insb push mov idiv jp cwtl mov aas lods (bad) out xchg sbb pushf incb mov jb fsubrl imul pusha sar out icebp test and mov or mov out xor push scas (bad) mov jle add cmp jmp das fcompl outsl lods xchg out push xchg xor cmp stos divb push loope sub or jmp clc sbb test arpl xchg imul mov enter cmp notb ret outsb scas inc out fwait sbb push sub sub mov out in add cmpsb sbb out lock mov into das std xchg mov out pop scas mov out lret inc sbb push fisttpl not ret out loopne jl clc lods cmp test mov dec out adc jnp add mov push push bound xchg sub mov loopne lret out out cltd add xchg mov repnz xor mov sbb out mov sub fbld es lods call imul out jp or inc add out lods lret addr16 orl fmull push test (bad) jg sbb push rorb add sbb aam test cmp out or push gs lret les mov lods jg cmp xchg fbld ljmp out inc cltd outsl sub orb lock inc cmp mov fwait and pop out sub leave out push mov (bad) mov (bad) ret loop jno int3 aas out add iret lods in lahf shrl leave insl sub out hlt aas stos ret xor stos and fisttp fcmovnb out aam out out inc cmp inc push pop out stc mov das mov iret mov xor pop dec or movsl sbb adc stos pop adc rorl stos mov aaa es cmp test dec aas push pop jg mov push sbb cmp stos fwait das imul cmc fmuls inc xorl and jg mov das hlt jmp push dec gs scas fistp dec and xlat pop jb and out xor jle roll es out xor inc lahf dec out je rcrl push insb sbb lods ds out mov mov inc pop out stos xchg dec mov das outsb js xor les adc xchg xchg push jg loope dec out dec icebp loopne sub or outsb mov mov insb (bad) loope icebp pop mov decl inc mov dec sub in pop rcl jno out add shrb mov push cmp mov (bad) dec test sbb out inc inc pop ret push imul mov out out push xchg mov out scas test push mov jae out ja sarb mov jp mov sti out xchg (bad) popa shrl in int3 jnp xchg lock sub and cmp aam add xor jne out inc or dec mov mov push pop pop adc pop sahf jmp push aas fnsave rcr push loop addr16 in dec out jl sahf mov jbe jmp out inc pop or jb dec sub and inc add out sar into sub scas clc push pop pushf and data16 cwtl jb out jl mov lret out out sbb lods pop cld imul sbb mov out leave or xchg out lcall ret out jmp adc stos test out jecxz push lahf xchg mov lahf loope mov out add call dec push adc int and push sbb push pop xor dec ss jle xor aas mov lcall out ljmp fwait mov sub (bad) mov call jae stos pop sub shrl lock dec mov pusha jp dec and hlt dec and out xor mov popa sbb jo dec adc pop int sbb (bad) fnop mov jmp movsb pop pop pop fwait (bad) sub out lahf xor inc push push lods clc out int3 mov mov sarl cld out pop mov icebp js jne push out mov jno jge jl (bad) out pop iret popa or in xor out inc dec jb mov pop out cmp jl inc add adc mov pop cmp lcall mov jno pop les push out xor (bad) movsb mov pop out lds (bad) xchg gs dec push (bad) pop int3 imul arpl rcll inc adc scas enter decb out jb mov push out clc sub js lcall pop out add mov nop fildll or mov out and movb testb pop lea inc or cwtl out sbb call mov xchg pop push add dec xchg insb mov scas and dec and enter imul out into shrd fmulp ja pop sub lret pushf shr nop or out or jl mov mov out cli add pop out jge cmp movsl pop mov movsb ja mov loopne push out push dec arpl or (bad) outsb push nop mov enter cmovs mov xor push jecxz out loop and jo sub out test cmpl xor mov in out out inc mov hlt movsb push xor adc aas popa xchg dec mov dec pop loop mov jae sub int stc enter inc rolb xchg addr16 mov in pop adc lods xor jbe out popf push shrl insb (bad) out repnz and lea cmpsl push loopne ljmp aad out mov (bad) lock pop and test in andl inc cmp jno push adc loopne mov pushf pop mov cltd push push cmp out in inc cli adc jmp fidiv gs pop pop out sahf push loop cmp out ja inc mov or pop pop mov out movsl in hlt pop push movsb fimul stc fcmovnb sub jl mov (bad) out sarl jae inc add call outsb sahf xchg addr16 add mov insb cli repnz hlt rol out std pop xchg imul out jno sbb mov ret push out es pop dec iret nop (bad) repz outsb inc out lods mov push mov int movsl js adc scas mov aad and test dec xlat lret xchg (bad) xchg pop mov iret divl out pop cmp xchg pop or in or clc std mov jmp xchg push ljmp inc push push mov out xchg aaa ret out test loope cmpsb lret cmp ss mov (bad) sarb lcall cmp sbb push mov add cmc pop out std jge (bad) in pop lods fucomi adc les dec js out cmp in leave dec out out fdivs lahf imul out iret dec inc cmpsb fsubr jg loope pop cmc xor out into pop insl ljmp mov jg scas sub lock jp negb iret inc xor das cmp out dec in push out mov add lret or cmp mov out pop xchg fistl push cltd in imul xlat adc adc divb push jo ror test pop sub mov cmp ds sti lods out je repnz xor push icebp pop adc adc (bad) xor push shr ja jnp pop in inc das or out inc (bad) sbb adc insl jbe arpl hlt or pop cmp out lahf jo test fldz lcall out dec ret jb popf jmp dec hlt fcmove (bad) pop stos cmc movsb (bad) test inc cmp sti in sar jmp shll and rol scas adc arpl inc out mov mov out jnp enter adc out dec in xor addr16 sbb jle or or adc (bad) dec out in dec add or pop add nop out dec push mov test icebp pushf push ds mov pop repz out mov leave pop or mov mov push shrl addr16 cmp shr cwtl jle inc ss or (bad) fs les push shr cmp es std out or jno popa xor push mov (bad) lret push scas imul xchg adc out pop xor aad lods repnz jmp mov pop mov mov ret push cmp test push stos repnz jo scas jge loop imul add pop mov pop daa push aaa out mov push lahf jne dec iret out jno xchg lea test mov or mov and fmulp sub jo idiv sbb out xorb pop ss mov mov pop in jnp out xchg sub add sub div inc push loopne loopne xchg outsb mov or call nop fstp lahf jg pop mov ret inc inc out add ljmp dec fdivrs scas lods leave mov xchg xchg pusha in pop inc fs ljmp sbb imul (bad) mov aas ds test push cwtl gs fistp loop addr16 xor daa andb dec sbb add leave lret cwtl sub lds out setle adc mov xor loope push in ljmp dec adc and out lds lods mov adc jge aad pop mov test push addl mov xchg xchg fucomp sbb sbb jp jns out sub lea (bad) sti dec cmp add or (bad) pop or jle aad test mov test rcl xchg jne jnp sbb pushf add ss out adc xor mov and cs pushf mov add stc adc sub movb out cmp int aad ss incb loopne repz iret sub ljmp pop out inc int inc jno imul stos add add xchg out add xor rolb enter aas ljmp jle ja jns imul out mov jne (bad) xchg pop loopne or add mov mov enter mov pop (bad) cmp out inc or shl sahf inc shr mov inc jp push inc out aam sbb dec jg imul or out test sub cwtl sbb pop mov xchg out movsl sbb cmpsl in fistpll jg push inc out dec sub shr loop mov out sbb push jge cmpl xchg sbb aad inc or scas mov mov lea out stos lahf push imul pop jmp lret jcxz insb out scas in lods in and test loop or inc out mov xchg xor insb dec test out imul or daa inc out les mov test mov xor sub jl pop sub nop loopne pop mov pushf out pusha int3 popa mov out mov mov cltd pop add inc pop adc das jecxz lret les (bad) sub rorl in in insl (bad) mov cmp lods cltd cmp stc sbb xor sub aad faddp insb out hlt dec sub inc cmp out or pusha fwait out jl aad or adc pop dec sbb xchg push out rclb dec (bad) arpl shll push lret out jo jmp cli mov das jb pop negl mov mov lock push fsubr sub repz mov or bound (bad) lods jo cmp inc dec test jne dec (bad) addl outsb data16 das hlt xor inc ljmp popf push xchg sub adc in pop (bad) pop movsl and push fistp loop sbb in stos sub rcrb sahf jle out fistp loope mov out inc hlt aad inc roll jle popa pop movl dec loope rcrb mov sbb mov mov ret shlb (bad) and ret ds int dec out inc fdivl out aas daa xor sbb jecxz fmul fprem mov push pop ljmp aas add out adc xchg sub jge js mov dec mov cmp xor cmpsl call jmp arpl mov sbb ljmp and loopne jne jge cmc lret lds jl out pop dec pop sar imul push jmp jns or push dec aad sti jmp imul arpl rorb pop jns std lret pop lds mov dec popf jle jnp loop out xchg adc movsl (bad) out inc incl fxch sbb out xor mov shr test adc mov mov arpl (bad) out stos and test ja xor or out mov xor icebp sub out mov jp js fidivr mov outsb imull push int jle fisttpl test mov enter mov sbb (bad) out lcall dec movsl sarl bt cmpsb cmp imul subb or dec ljmp sub xor add cmpsb fs mov loope xchg scas mov lods (bad) out add cmc mov inc sbb adc ret repnz mov lds mov fwait out sub ret es rclb or out pop jp lds mov and loope lret add out in jbe mov in and dec push jecxz mov (bad) out mov mov lods int cmp out out fcoml and mov jb pop out arpl mov mov cmc sub jno cwtl (bad) addr16 test out xor (bad) mov lods shl std out call jle fs mov hlt and pop test stos das dec outsb shl shl dec cmp imul add iret dec pop divb nop xchg ljmp stos int3 jp subb out test out jno pusha mov (bad) gs rclb outsl ljmp xchg jb imul mov dec fs or xchg cmp hlt mov add cmp jmp mov lret jge int3 out and movsb lds lods mov out cmp mov jnp jle jecxz inc push out ja mov cmpsl and mov cmc in xor stos or mov mov imul lret lcall and out inc mov mov popf and jmpw pop inc call cmp cltd and push or dec xchg out jo lock xchg call jecxz and sub mov pop sbbl out sti sub dec adc add mov and ljmp or push pop sti lea retw fistp (bad) jmp out jle (bad) out popa sarl mov adc ret pop pop fwait call inc adc fisttp pop and (bad) (bad) out sub or push mov jb insl xchg push in mov push lock (bad) xor sbb movsl lock out jle std adc aam in arpl mov mov addl xor es outsb movsl dec cmpsl sbb inc mov stc out das loop push int3 adc mov pop aas push das ret fistp loope imul or aam adc mov lret adc out aad ficomp inc in mov popf xor mov pop jl inc les out mul inc adc movsl adc out jne mov mov cmp or mov out and (bad) and out sub mov into out adc dec mov and mov into jno out notb add pushf out add inc or out cltd jae sbb add mov mov (bad) cli xor cltd hlt in movsl call out mov mov sub enter jbe inc mul fnop xor jb adc sub faddl jmp jle xchg into and repnz fmuls sti pop out jae insb aas jl add (bad) (bad) and jmp inc lock (bad) cmp mov sti jne stos stos out sbb sbb push loop xchg push fdivs out sti inc cmp pop (bad) out lahf addl mov ds adc lret in sbb dec punpckhbw pop int3 gs push icebp pop icebp xchg or std out scas ret jge jae cmp out shrl (bad) (bad) dec cmp sbbb addl pop sbb mov pop cmp (bad) xchg in out pop inc ret fnsave add push fwait imul jno out pop lods add xorl call rcll cmpsl enter pop cmp jp ds int cld into (bad) dec fsubrl movsl fwait jbe call leave (bad) popf fcomp out cmp int dec sahf test addr16 sub fstpl inc jns cmpsb jg pop xchg add jae in push notb out fiadd scas or aad pop sub divl test sti fmulp jno int scas mov xchg adc mov lods out pusha js outsl popa loope popw or xlat movsl xchg and (bad) mov out mov push push pop xor adc xchg lret out lcall and jb sub xchg mov pushf out or cmp push gs add fnstsw (bad) sub mov test or arpl jne add jnp or sub cmp into xor mov das dec xchg xchg imul mov sbb outsb mov out mov out push cmp sbbb out xchg cld (bad) cmpsl (bad) adc push xchg sbb lods adc shr loope dec scas int mov pop and in fwait add out lock lods daa out sbb mov fsub stos test inc in hlt fidivl (bad) jno out aam inc ds xor pop loop ret out add stc mov in lea cmp cmp adc test shlb es enter push nop inc ljmp inc test hlt aas xchg and jmp bnd dec rol mov (bad) pop xchg iret xchg out cmc adc rol out loop xor outsl pop mov cmp adc push and xlat hlt mov in pusha out inc leave sahf push lds mov adc lock inc push insb inc out mov scas inc out xchg adc popa inc cmp sbb out addr16 sbb outsb xor out push sbb (bad) je jle bound out dec jl pop push nop fistpll aam or xor shrl mov mov mov out pop mov pop out std add mov add rcr nop push xchg mov inc fisubrl out in outsl jo pop mov or out mov jb (bad) or in loope or out ficom loopne sub loop xchg cli std mov bound hlt pop rorb andb pop mov nop clc pusha cs adc cmp and out lret out inc jmp pop out adc scas out dec sahf (bad) out inc out insb mov in sub jle cmp rorl imul das aas dec lods add out addr16 mov rorl adc (bad) mov out sub cmpsb push in mov jbe mov or loop sbb es pusha add bound lods inc mov jbe cmp out mov movl (bad) (bad) pusha punpckhwd out ffree fiadd pop xchg fcmovb adc lret ljmp jmp cmp ds test pop out xchg (bad) mov inc dec sbb out lcall jmp xor pusha sub adc nop sahf fcomi sbb jo loopne mov insl in jno mov (bad) lock loope out and pop cmc jle out dec pop or pop scas mov cmpsb in out pushf int out (bad) xchg imul sbb ss adc or sub xor xchg in js jbe sar sbb mov lock mov xor (bad) ljmp jns pop xchg fs out cmc push adc mov mov mov imul sub daa push fbld out sub outsl jne out lret fs jno inc rcrb mov stc ss and cwtl adc push sub lds rorb out data16 out (bad) and ljmp push xchg adc add jb lea mov ficoml divl out cs xchg outsl or (bad) out gs out xchg les pop sbb and std adc out lea enter out xor mov sbb gs out (bad) sarl and and out scas mov and out jmp dec mov cmc js push movsb (bad) xlat push rol inc push idivb out stos lcall shll pop pop adc addr16 out out mov add call or je inc js mov xlat pop cmpb mov and insl sub sbb lret fisttp ret xchg ss or lcall mov stc mov and sub jmp ljmp xlat bound std addr16 add out push ljmp out enter xor jg out xlat imul out pushf xchg rcrl out xchg loop cli xchg fs lods out imul dec insl sub pop in sarb add out or rclb leave out jnp sub xchg icebp pop mov jmp jge add jb (bad) into out out test jle div decb mov jo inc pop int out inc cmc fldenv or xchg sti mov lds out jno je dec lods fpatan out lods ds (bad) popa push test mov mov jg jecxz or pop jno clc stc out fldl fwait stos fnstenv lock and mov out ret cmp and in subb sub out stos push mov out and pop pop dec mov out in cmp pop push iret cmp xchg (bad) cs push rorl ljmp lcall lock lods out inc or outsb into stc cmp pop push ljmp dec pop je sub ss jmp fwait add pusha shr sbb cli jp pop out outsb (bad) jnp or popf mov add adc shr and add mov loope sub cmp pop je xorl out mov in mov sub xchg push mov xchg leave loopne xchg mov dec mov xor aad jl fucomip jmp (bad) fisttpll xor mov pop stos lock xchg enter out subl pop iret aaa test jb dec out (bad) and rcll int (bad) push jecxz out jp out icebp or fmul repnz out jmp mov pop out add fdiv xlat xor je stos (bad) loopne out mov mov push fldcw mov sahf jns es repz jbe jl mov negl mov popf outsb imul shlb pop in or mov notl out in daa xor roll sbb enter out aaa jg sub out inc cmc inc imul adc ud1 (bad) clc imul inc xchg mov movsb push out push stos rolb (bad) das (bad) aad push mov xor xchg mov data16 gs ja adc clc mov push in lret arpl add sbb out fdivrp in push cmc pop mov or (bad) jo and in (bad) sbb out out fsubp adc cmovns ljmp xchg mov mov inc add imul in pop sub mov cmpsb lods jnp sahf out add arpl sub imul inc xor cmp dec inc in aam jbe xchg push rolb out jle stc adc call push lret pop out mov aaa lret inc out push mov or push inc add imul add in push mov out mov adc pop xchg sarb enter outsb adc faddp popf mov mov push xchg dec jo aas pop mov mov pop test out loope adc xor mov in push roll (bad) cwtl push frstor out fwait jns or iret nop or cmp xchg cli out cwtl outsb fucomp std out insb jb add movsl loope jno enter push cmp push out mov and sub cmp out lahf jg jle iret (bad) clc adc rclb out addl (bad) mov dec lea stos out pushf outsb pop shrb pop (bad) fidivr (bad) rorb (bad) out xchg popa outsb pusha adc mov dec clc les adc scas loopne fidivl fsubrl loop inc out movsb jbe pop js or pmaxsw cmp pop in mov mov (bad) jbe xor xchg popf jl adc pop in mov push stos mov xorl out fs pusha out inc push fnstsw ret test jle add pop push push sub xchg daa out xchg mov mov mov adc incb mov fs dec sub lods mov xor push push mov add sbb sub out in xchg rcl pop xor push sub mov mov add dec imul lock fcoml sarl loop mov jge sbb out imul and jb orl addr16 pop arpl outsb loopne out movsl and mov les sahf in pop fstpl out es adc in push xor inc xlat sub mov out and std idivb jbe (bad) icebp mov xor mov in popa insl cs mov and dec xor and test out xchg imul in fist fs cmp xor mov lods (bad) (bad) dec jg inc xor pop out dec (bad) sbb in jge bound mov pop add sbb test adc stos (bad) divb in pop out lea bswap out das cmp jl bound arpl inc sbb cmp out xchg (bad) mov imul sarb jg sub jl inc out mov xchg adc jo ficompl (bad) out add leave (bad) lret dec out xchg scas push jl gs mov xor arpl or mov sub inc in outsl out repnz push and mov cltd aas jle std add jo mov frstor push or out inc dec movsl add shr and imul (bad) dec and push push mov xor xor jge popa out push cltd test dec out ja shrb (bad) cmc ffreep pop jg out ffree mov pop jns (bad) jmp mov loopne stos shl or das jle fnstenv add in clc pop ljmp push inc mov out cmp adc iret jo jge lock (bad) sahf pop sub dec mov pusha adc out cmc shll rcl cmp out fwait int3 dec sub icebp out push dec push xchg (bad) mov idivb hlt dec leave mov jo out adc or cld ret cmc out push iretw jbe or aas lret inc sahf pop sbbb out enter inc inc std cmp jge testl push or mov mov out pop mov shll push pop js loop stc lods sbb mov cltd (bad) mov sti out xor mov aas sahf orb xor fcomp (bad) popf out clc sbb add loope mov ret push sbb out enter test sbb jb dec scas cmpsb lods push fbld shlb mov enter or mov (bad) pop xchg daa fbld js loop imul add cmpsl xor (bad) sbb icebp adc jmp stos xor fstpt repnz ljmp xchg out mov mov sub out stos lods and xchg or out push int3 ret adc out cs lods or test push outsb and arpl out sub adc je in sbb cmpsb jae lahf mov mov iret stc mov loopne or mov mov into shlb or shlb je sub mov scas das inc pop aam hlt fs cwtl lahf xor and xchg out addr16 pop int3 out in cmpsb push test cmp out fwait inc lods and and addr16 movsl jns out jb fild pusha ss jno lret lea cmp test pop out and cmp out aas mov lcall push adc aas pop adc lods add into cmpsb movsb out (bad) sar push pop sbb mov mov out push test sub push adc jle sub mov dec inc out add mov fwait pop loopne jle ljmp out mov mov out (bad) out xchg fisttpll int lods out jg loopne jns mov mov repnz int mov and push ja xchg test mov mov imul sub int3 adc out mov inc and outsb sbb xor incl push sbb test in sub insl out mov je mov (bad) call cs mov (bad) xor sbb mov out adc cs mov push and je mov or pop xor dec mov test or cs lret cmpsb (bad) and in sbb aad ret fcompl sti clc pop cmp mov xchg mov and adc hlt out inc and ljmp (bad) in gs test dec inc push xor mov mov shl cmc (bad) arpl out jbe out test jbe inc (bad) cmp out sub sbb insl out (bad) fdiv or mov cmp add cli test push pop pop jge (bad) and bound inc and or mov pop (bad) idivl (bad) scas push pop push int3 xchg and and (bad) mov addr16 in data16 ss int out test bound rcl (bad) loop xor push stos or pop rorl hlt aad in ljmp cmovns lahf leave mov ljmp jne into inc pop jecxz xchg int3 out lret icebp sub lret fild sbb inc pop in fwait out dec and jmp jns mov stos loop inc mov movsb adcl fistpll mov sbb push pop (bad) cmp jl ljmp pushl ret pop movsb out or jae out loopne out loop mov out iret roll xchg out jns fadds out mov fisubrl pop mov call push pop fbstp (bad) xor sub shlb push out sbb repz std (bad) push ror lds sub pop fsubrs iret fsts ror mov (bad) into adc adc (bad) mov sub rcl dec sbb ljmp out gs movsl jbe popf test out lock cmp pop mov repz or push into and fst fwait and jmp fist xchg sbb fldcw imul repz inc and xchg scas (bad) out sub ret es cmc lret pop outsl out inc jle xchg ja and jl lret in mov lahf out mov or jae push jne (bad) cmovb add fsubp pop jnp push in dec pop mul nop cli jp iret rclb lret dec call pusha out xchg pushf ljmp inc jle (bad) aaa xchg cmpsb adc insl add outsb into imul xlat add aas pop mov inc push push pop in ss and inc ljmp out faddl or xlat (bad) ficoml scas sub pop mov or es inc fs out push sbb push mov cmp mov dec outsb xor sub and inc icebp xchg or jb ret das (bad) test (bad) fisubr mov mov js mov pop out adc mov out mov xor mov mov out scas and and sub (bad) cld (bad) out popf jo sti (bad) stc (bad) les js xor and cmpsl loop cli int out (bad) scas cwtl and repz or aas loop cli es pop iret cwtl mov pop rclb pop mov pop in jne lahf out dec push mov test inc out ss cmpsb mov pusha out (bad) dec out fisubrl arpl cs out mov adc aas out and xor dec clc cmp jge inc pop jmp mov data16 (bad) cmpsb xlat out insl cmovge out adc (bad) icebp push sbb sarb xor ss pop (bad) mov loope les dec or out cmc or jle in out push xchg and enter out xchg mov or imul sub jb arpl lods sbb dec push mov or dec into gs sub les dec outsb jp dec inc push out xlat loop fimul ss pop or out cli pop cmp (bad) jbe push fs out (bad) jecxz mov iret mov out add pcmpeqb sbb pop in or inc inc sub stos push fwait mov adc (bad) scas lcall in fist push in pop push adc or cwtl jo movsb mov (bad) out ljmp fildll sbb pmovmskb xchg add loopne insb call inc mov dec mov movsl push mov jg fistl mov lahf and loop fs shr ret push shrb scas xlat (bad) sti insl les push jmp inc pop or out sahf icebp lahf jmp fistpl mov fdivl out imull iret jl jne out popf mov ljmp mov cli es out stos in stos out fwait jo (bad) xor pop out imul inc aas add out int3 dec or cltd dec push jnp jb addl mov (bad) push mov repz fldenv out lahf lods xchg mov push ret fidivr mov ljmp out repnz hlt adc mov pop adc sub out pop int3 aas or add mov jbe out mov dec into aas sub xchg jp loope add (bad) ret incl fsubs xor push clc loopne out insl (bad) xor jnp imull mov ja loope and jg or rol movd adc (bad) in pop (bad) out test into xorl out add in scas inc jl pop pop leave jae shl and jo cld or mov (bad) (bad) sub adc les lcall mov sbb add out into jp pop pop in mov out subl fisttpl (bad) xor jb inc mov sub pop sbb call lods lahf cltd test loopne or and fild cmp jne pop jo mov mov mov mov loopne (bad) iret pop push out (bad) mov sub jmp shr sti jo dec jbe orl scas mov adc ja xor popa mov jns xor inc jecxz jge mov add fistpl adc jno mov idivb add bound scas ljmp aad arpl xacquire xor stos mov test ljmp mov jbe push cmp aam popa pop jo aas (bad) addr16 (bad) into lods dec arpl mov lods je es sarb loop pushf sub mov mov jl lea jmp push xor xchg shr (bad) shlb pop enter or dec inc mov cs imul je (bad) pop xor push mov mov sbb or test gs mov push test mul je hlt loope add lock and out (bad) mov add loope inc adc mov cmp mov dec sub pop pop into out xchg mov xchg out aam inc cs xor sahf in idivl arpl cmpsl jo mov out aaa int3 addr16 push mov out push fcomi (bad) cli push xor mov or ret leave mov int mov adc mov call out pop xor loopne fildl xchg dec jge lret call push mov sub mov out cmc std cmp mov test jno out add push pop sahf (bad) imul loop test cmc mov mov out inc push out and data16 enter repnz loope pop sti loop push hlt fsubr pusha mov pop push or rorl repz xlat out (bad) dec xchg fwait out mov pusha push insl adcb dec movsl out pop test in jmp out mov stos add icebp out call jl inc push shr jo add sti mov iret mov fisubr out cld sahf lret bound push mov or iret jg out mov insb and push or inc add adc dec shrl repnz and push call mov dec cmpsb adc mov mov fs push outsb out out outsl fwait sbb out pop imul stos sbb out jb pop test pop add lods (bad) lock push inc or inc ja (bad) fsubr mov test adc push ja mov gs (bad) sbb pop call sbbl dec out or dec ret mov ss stc (bad) cmpsb js test ja sahf mov int3 (bad) lcall lock incb (bad) lret xor or popa jne in pop out outsb mov xor daa jmp mov in sub push inc cwtl frstor jge push push mov js nop xor iret ljmp jb in pop (bad) jle cmp inc (bad) das stc cmp into and and loopne xor push (bad) out test popa xor xchg pop and insb ja imul xchg sub hlt sar push push and xchg in in sbb fldt xchg aad cwtl pop out dec mov cmpsl pop iret lock fisttpl cmpsb out ficomp inc pop pop or pop adc mov pop cli lds push mov pop pop sahf imul out aam fildl add iret out mov call jbe scas and loopne in jnp xor cs push dec mov mov mov inc fsubrl in out pop or lock gs aad movsb out aaa fidivr cmp pushf sti test out repnz sbb fwait mov mov xlat sbb mov popf add pop cmpsb outsl sub inc inc mov and mov mov out lds pop xchg out bound daa lods out mov call mov jns in hlt bound push out or and adc cmp fldz cmp xlat rorb mov jmp (bad) out sbb mov sbb push mov out adc jmp ds sub mov mov out aaa sbb pop pop iret data16 mov fisttp and dec clc pusha inc mov cmp mov adc pop fdivrs pop out inc jmp cli pop out ret xorb jl es in out mov cmc sub icebp xchg inc outsl dec add push notl (bad) push (bad) rcrl (bad) jo inc iret nop lds das and mov mov int3 lahf dec jmp cld pop int loop xchg (bad) into sub fs xlat dec out pop and repnz jnp scas add push out fcoml (bad) out scas lea out faddl fisubl fstpl inc cmpb add aad adc int3 cmpsl data16 xor ljmp sbb insl rclb out add fimull (bad) cld sub adc mov inc sarb pusha out in and aas adcl sbb out mov aaa sub ret mov add mov jnp lea iret out std xchg out xor fmuls out out lods fildl out out push (bad) pop adcb jo into inc xlat xchg push adc rcrb fcoms (bad) (bad) mov std out adc loope cwtl push ja (bad) xchg es call outsb adc sbb fsubl mov icebp xor lcall cmp popa jne stos out repz std inc mov (bad) jns mov sbb adc and daa nop jp out jb adc pusha cmpsb jmp mov es out in icebp push addr16 rcrl orb or mov es (bad) (bad) js mov pop mov out outsb push xchg lea mov ss out stos aam (bad) out imul aas pop mov (bad) setb mov pushf out out inc (bad) and enter (bad) sub stos fldcw dec xchg pop xor int3 xchg xor out outsb ss mov xchg test in fbstp add daa push mov mov mov sbb nop out stos inc or lret sub ret out sbb cmp (bad) cwtl seto iret xchg mov inc (bad) or mov cmp outsb jne dec out scas sub mov sub pop in popf push jecxz adc mov xchg lods jb sahf nop insl loope stos movsl mov mov xor ret in loope pop out xor dec push pop xchg push lods and sbb cs jmp inc xor sub or test adc shll or data16 sbb notb push das ds ret (bad) out scas arpl mov sub adc adc addr16 mov pop imul out lods adc push cmp in push out sahf sub or cwtl jg and dec out mov pop sub out add pop mov leave or jl pop dec sbbl fwait repnz rolb mov out push (bad) cmp das mov flds aaa mov ja jle popf push sub mov sbb push out push scas icebp out mov cwtl out sub insb adc out jecxz repnz and insl mov sahf mov ljmp (bad) out loopne push sbb shrl aam into ds jl inc pop pushf fldenv fs jb scas xchg push (bad) iret mov shl lods arpl xchg imul out ret xor cmp enter scas subb stos inc cmp add stos pop repnz dec sbb arpl test cltd mov movnti ljmp mov cmp cmp sub jmp out mov cwtl fldt push out sub pop (bad) jb int3 jno mov test (bad) push or adc inc push xor lret pusha (bad) out push mov (bad) out lods adcl sarl pusha adc (bad) aam mov mov aas jno dec stos test pop mov movsb aam or insb out fidivr in fnstcw ds inc stos and cld jno cwtl outsb sub pop adc jnp in ja fmul mov add in in xor mov sub out cld out mov notb lods dec shr cli push cltd xchg lret bound dec add cmp cmp fs or mov ret adc fdiv push sub cmp hlt inc jns out cmp jnp clc inc lret xchg rcrb mov popa add and int3 adc pushf out mov andl dec pop jge ljmp cmp loopne,pn stos iret sbb stos pusha sarb and mov lahf out aam mov lock out enter adc addr16 sub inc mov hlt test call out inc out adc sbb mov mov mov pop stos push sub xchg mov pop faddp outsl loope xchg pusha out adc push sbb and mov mov jb ficom cli sbb inc pusha out rcrl cmp or loopne (bad) xor lahf mov jmp or fdivrl push jb out push movl sti arpl fistpll adc dec jge cmpsb inc mov and jne enter into jnp dec cli cmp cwtl dec out xor arpl push mov out fsubrl add out jge pushf popa adc jecxz scas push out (bad) gs jmp out in (bad) cwtl data16 fistp shrb nop mov pop mov pop cmp jae out aad mov sub and test lret out pop shr outsb lahf add jns xchg out out fcoml pop popf rcrb dec out dec push insb shll push enter add loopne outsl xlat lahf jmp and jae ss ret insb test pop lcall ret das pop out adc sub mov rclb loopne pmaxsw repnz cmp pop inc pop mov cmp mov aad fwait mov inc inc jae or mov mov cmpsl pxor dec push inc fisttpll clc sbb out mull stos mov aas lret adc xchg sti cli popf test imul xlat movsb cwtl out call jle or mov push dec scas out fs aas cmpsb mov out ljmp push add les notb mull sub ja jmp cmc movsb pop fistpll (bad) ljmp adc sbb pop scas jp fistp fwait lods loop pop dec ret xchg sub insl push in pop cmp out cs cwtl mov pusha push pop dec mov push pop out push das pop xchg (bad) jne out data16 xlat push out inc cld add jae dec pcmpeqd loop jno out and ss popf add mov repz pop pop outsb jb call arpl test repz in or cmp push xchg jecxz pop cltd and or cmp cmp or ljmp pop xor jle jge mov out inc cmp or out aas xor and pop push out push xchg inc shlb out in fldcw repz fist xchg jecxz (bad) loope sub aad test pop in push (bad) into movups inc movsl loop,pt in xlat adc rolb aam out jnp pushf push (bad) into out (bad) pop xchg je jecxz pop daa aam bound insb sub pop sub repz (bad) mov adc cli sub cmp daa jl jmp popa lods out add mov shr repz mov dec pop stos fildll pushf push (bad) jmp xchg out jecxz inc inc out scas (bad) mov out xor jae (bad) mov mov xor ljmp insb xor cs and push aam scas xor and out cmp leave das pop out adc out mov roll out outsl jg add cmp decb and test out mov int3 data16 pop test loope inc pop (bad) popa cltd aad push lock xchg out imul push fcomip mov out add and jne jmp mov (bad) jo aaa repnz jo lret mov enter daa sub inc into sbb std mov pop jmp out mov sbb mov add out sbb out (bad) dec and fiadd sti out mov mov pop (bad) out sbb aas shrl pop arpl and xor push adc xor (bad) ljmp pcmpeqb add hlt out (bad) cld xlat repz (bad) mov lret hlt jg fsubr (bad) push mov shl andl xchg inc loope rcr out out pop xor in xchg out pop sbb daa in pop (bad) repz stos adc pop rcr in xchg jge sbbb (bad) stos push data16 pop test (bad) adc out mov loope push out mov jle or add and mov mov dec xchg out cli int3 jecxz cmp loopne jle mov jno sbb dec sbb out bound lods inc cli shrb jge je rolb int3 jno loop jbe mov xlat push (bad) out scas fcomi inc dec lock cmp add push (bad) scas xor mov and pop clc mov jl lea jns xor mov cmpsb adc push call out dec sahf dec mov add lds sub pop (bad) je ljmp (bad) loopne jne out out cmp pusha mul inc or push cmpsb sub js aas mov ret sbb out push mov pop jb xor jl out mov je scas decl stc out mov jg rcrl sahf mov leave ficoml (bad) (bad) out ret push jge push jae (bad) mov out fucomp jmp mov xor mov ret int3 mov out inc cwtl sbb inc out jg es into das sti lods loopne clc in pop push or popa (bad) out loopne and xchg mov lds out and (bad) decb bound fwait adc subl xchg int out and jnp incl out dec mov push outsl out xor sbb xorb out out adc push dec loope and sbb int scas mov dec adc ret pop pop and pop push mov cmp or sahf bound out mov outsb out pop repnz call out mov sub out xor jg enter ret mov out aas jne mov fildll push (bad) adc daa fldcw out dec inc add rcll shr xchg test cs loopne clc dec pop lock (bad) out dec fucomp movsl pop and movsb movsb fprem iret mov test popa es fsubs jmp sub and in jp xchg inc call sbb in out mov push mov insl or outsl popf jle scas cmpsb shl mov cwtl mov insb out cmp pusha sub jae loopne xchg lods repnz rcll shr das dec in mov or pop xlat xchg test out mov adc rcrb pop jb movsl (bad) aas insl xchg adc cwtl iret outsb (bad) cld nop loop mov outsl cmp push dec call repnz stos jns lcall out (bad) sub leave add in push loope add mov adc jae loope lods fs test daa stos xchg repnz cwtl inc out pop jne test jp pop add mov pushl or out add push push imul push adc out cmp xor out hlt pop (bad) mov dec push mov jge sub jg dec addr16 and enter insl pminsw xchg fucomp rol push sub fcmovne xlat out stos and dec inc pop xor in jmp jmp sub aad fisttp cmp in sbb push jg jmp cmp xchg sbb push in lods pop sbb call movsb ljmp sti xor xchg jmp mov das and pusha test fs (bad) iret add pop call sahf push out imul jl or jge sahf roll xchg dec js out and push or jecxz push es xchg outsb fisub jg inc imul mov popl out icebp cmp xchg mov sbb mov out push (bad) ljmp jae dec jns sub loope pop stos scas test xchg out mov xlat rcrb inc pop scas push in dec lret fsubrp cli or aad out fs loop pop xor mov mov sub call push cwtl das cmpsl xor (bad) adc stos testb mov mov sahf dec jecxz push pop add jmp out pop push dec pusha cwtl les jbe out cli jecxz mov jnp (bad) pop xchg lds repnz lcall pop and cs mov mov xlat out dec mov test jae out stos mov shrb lea movsl add insl insb out aaa sub fcoml push gs out ja mov lahf push sub sbb arpl out mov dec cmpl jns int add (bad) add mov ljmp cmpsb pusha pop test sub lock sbb ret movsb fist lock inc out inc pop cld dec scas inc jmp xchg out test (bad) int xor push jle (bad) scas jge ss fadds add xchg dec out xchg mov daa sub cmp imul out adc negb les pop mov aad sti out add (bad) ljmp out rclb lret rclb mov add lods sbb popf lods fimull out sbb test inc out fucomp fwait jp out sbb jge xor ljmp mov jecxz aam popl out cmp or sbb dec imul pop pop sbb in out pushf loop sbb push out aaa jae test pop mov and out push out repnz pop or fmul xor arpl out repz xchg sbb fwait or cmpsb dec dec cltd out outsb adc pop push out mov dec pop mov adc jbe mov jp ret xchg lret sti out mov or (bad) out pushf into pop inc loop and out fdivrs mov mov les in mov inc out ret out repz lods inc xor ret out (bad) mov (bad) mov stos cs pop xchg mov into stos hlt push (bad) mov mov out cmpsl sbb lea pop out movsl ljmp pop jbe enter jmp jge in iret dec xchg pop pop mov retw icebp mov mov push repnz out inc rcrb xor push dec pop sub iret fistl dec call cld (bad) xor call inc shlb xchg push das sbb mov pop jl pushf cmpsb arpl xchg jg mov pop out mulb inc lock std pop nop mov or lcall mov out dec jne adc or inc cmp jmp clc scas mulb out fidiv arpl out xorl iret rcrl cli sbb mov and pop cmpsl jle daa xchg mov insb pop push out push mov mov out jg inc xlat test dec js sti inc scas adc pop cs pop pop inc iret xorl scas and pop sbb and pop pop pop add ss insl cs out xchg outsl pop xor movsl lock fsubrp das jns or loop add out jbe out pop mov fsubl in jmp nop lahf (bad) sbb into out mov rolb dec in pop (bad) mov sub punpckhwd lret pusha xchg loope clc push lahf mov and lock mov cwtl std outsl insl inc mov pop cltd mov fisub mov cmp pop test xor adc add dec int stos mov stos mov pop (bad) cmpsl test push scas addr16 mov imul addr16 (bad) imul cltd or mov in out xor xchg out or enter (bad) call loop sub rorl movsb popa mov xor loopne lcall dec jmp mov iret xor sahf cmp out mov mov pop out xor in out sbb sbb (bad) mull sbb aad nop mov pop out mov xchg in ljmp fdivrs push xchg mov jmp out jne in jg pop push out dec mov jl cs push add gs (bad) das jb movsb lods cmp adc fadds push hlt jecxz push mov pop test ljmp out clc inc inc pop (bad) push dec mov fnstsw iret mov fldt leave add outsl out and out cli push inc (bad) or inc adc stos data16 xor in sahf pop out xchg imul addr16 sbb mov dec fdivrl push pushl out pop movsl dec xchg inc mov jnp or into dec ljmp mov (bad) out mov sub leave (bad) jb mov fcompl data16 mov clc dec out cltd insl lret gs and fdiv inc test out in xchg push movsl push es out xor stc arpl mov fwait xchg mov sub lret jae and cs (bad) mov inc out iret mov push movl mov fs xor pop pop fstps (bad) pusha add and jg mov outsb jns,pn mov in push sbb out sbb push adc push insl xchg mov jp sub dec xchg insb stos pop imul ficomp pusha xchg outsb jno and xor cmp sbb jmp (bad) mov adc sbb scas ss jnp loop loope insl cmp out das fist rcll insl sub and stc out sub mov mov imul push mov push out xchg nop in bound out sbb pop out in addr16 push jb push inc outsb or ret sub out out sar pop es mov test adc cmp rorl mov scas sbb sub pop push mov mov leave jmp outsl adc and loope (bad) push mov repnz cld out xor xor xchg loopne push sbb pop aad dec sbb dec mov inc fildl sahf jecxz enter xor pop (bad) rolb or aas jl ljmp jns movsl out xor lds bnd push out sub push rorl mov test clc cwtl arpl mov inc jle stc mov adc inc jb xor push lods es jg (bad) cmp (bad) mul out inc fs xchg (bad) cltd ss adc fildl out insl fstps or push aam (bad) fmull imul xchg or push mov ds bound add lock arpl xchg dec aad xor or add xor pop pop out test dec rolb shlb loop (bad) aaa out jnp int3 xchg push out dec call add jecxz nop xchg adc cmpl out (bad) mov loopne outsb xchg out int (bad) cmp iret adc das gs (bad) xor mov jmp pop leave out or xor arpl out bound out iret insl aad dec or adc les out inc mov mov rcll mov mov sub leave loop out and lods data16 test fidiv in rolb sub and mov frstor js stc out pop out leave mov dec jge fbld inc in mov out lahf iret decb iret cwtl aam das in pop push lods inc int3 sahf inc inc lock imul lea pop loopne aad ljmp out mov int inc (bad) jns out cmc mov lret clc daa sahf out add data16 fsubr sbb and stc sub andl xor jno sbb out push dec push addl adc je ss iret jo movsl sub mov push lahf outsl sub jns mov or xchg rorl sbb jge lahf or (bad) loope xchg stc vmovaps test mov cld outsb sbb fs mov mov cmp jge loope inc out xor mov test inc and repnz jmp mov push mov ret xchg ljmp jne fs and mov (bad) out pop ljmp sar es out push xchg lods movsb pop jg insl (bad) out sti hlt ljmp xchg std insl rorb mov sub std push ljmpw out sbb cld pop jnp stc out cmp mov pop in and inc shrb push dec daa jnp aam (bad) sub leave jns imul test adc push dec mov inc insl mov (bad) adc xchg sbb repnz mov (bad) mov fldcw lahf lea sub xor fwait push fs (bad) adc mov mov out pop outsb int adc inc fcomip mov out loop arpl sub pop lods (bad) push (bad) rolb cli or or sbb sub pop nop adc add lock mov and jbe repz jl movsl mov xchg aam or fwait dec out (bad) int3 inc insl (bad) fist pushf dec push out cmp aas sub and dec jg mov inc lahf lods lock push testb adc fmull mov loop mov out pop push add js sub add std pop out push loope cs orl ja cmpsb push push out xor push sahf adc pop sub push mov xchg xor aam (bad) push out pusha inc jne sbb je (bad) pop in cmp push loope adc imul leave mov pop push out lret push imulb mov jb mov fstpl stc mov lret cwtl jo jnp outsl out sbb mov xchg pop mov nop inc imul mov push sub in adc jl sbb dec sbb pop or xchg push or outsl repnz lds (bad) call xor push cli sbb adc out loop mov jns nop mov movsb pop inc add leave outsl in lea mov and cmpsb cwtl sar jmp fldl jnp mov xor push pop es rcr cmc fisttp shlb push sbb adc xor sub out in jg shr inc std mov jecxz ret lahf loope daa (bad) inc gs mov jnp and (bad) in fdecstp dec das (bad) add push (bad) push adc xchg out int3 into (bad) js out in aad inc xchg repnz daa loope xchg addr16 imul in in or dec fsub loope sbb mov int pop daa out push aas mov jle fdivrs aad add inc pop inc pop xchg fs stos in sbb mov pop or and out inc adc lds into pop out mov sti out or arpl adc out dec loopne (bad) xor movsl in call mov jns pop inc insl sub mov or movsb mov call sub adc fs fistpll jno ror jne out jae pop popa jge add addb mov pushf imul pop jnp addr16 shrb jne add cltd xor in pop or inc into sub (bad) and das pop cmp stos ret add bound pop or ja ss lret jbe out push mov (bad) out mov psubsb iret jecxz fisubrl jmp out add sbb mov push out dec jo xchg outsb cld or loopne mov fdivl jns enter aas mov test div mov pop lret xor in (bad) pop push mov fdivl pop test data16 inc jae hlt arpl (bad) je inc in out gs xchg adc pop ret sahf adc or in inc (bad) hlt out leave mov ret inc mov (bad) jbe inc (bad) mov scas sbb test out in xor push out shll cmovle push inc out cmp (bad) mov xor sbb fmul sbb roll in inc push stos out push pop lret ds adc mov add pop jg push out pusha (bad) enter loopne out scas cltd ret sub jns in out cld icebp and mov test mov xchg mov adc sbb sub or mov mov add repnz out je mov pop out mov or fnstcw (bad) fsubr mov decb aaa jb out out and enter call adc shll out push cmpsb dec mov sbb ljmp (bad) xor arpl xchg out std je lahf mov adc (bad) sub xchg jg cs stos movsb sbb repz mov push adc cmp push in iret xchg sbbb (bad) lret (bad) jno add addr16 enter fist insb clc jl stos sysexit hlt mov aas (bad) out andb (bad) icebp sbb loop cmp (bad) mov js insb rcr (bad) jp mov (bad) ljmp adc pop sahf pop insl stos je push bound mov outsb jns jp mov (bad) xlat das enter out xchg xchg jnp mov push pop ret addr16 and xchg (bad) and pop es jge cmp (bad) pop cmc push add in lock out movsl xor out shlb out inc dec cltd insb mov sbb lods and repnz jb out subl mov mov cwtl mov cmpsl rclb psubb in and dec pop int3 loop and insl mov mov cmp mov (bad) fisubrl iret sub lcall gs lods out pop mov lods adc inc call out xchg outsb mov lcall mov ja sahf push outsl out repz lods bound cmp ret (bad) mov (bad) xlat sub cmp jge mov into loop add out mov mov mov movsl out dec or mov icebp shr ljmp lds mov push ja inc pop inc or insb add mull shlb out xchg and jbe cmc push ds insl inc push mov (bad) sbb jp out ret mov push add push (bad) adc cs pop in loopne jl in popa fcmovnu test in jmp cld add loope mov dec mov out lcall lret mov ja bound test aam call cmp mov push enter and inc push cld (bad) (bad) xchg js in mov pop fsubr popa shlb out loop pop sbb adc out (bad) mov out stc jno imul mov (bad) out jge dec push je xchg push enter cwtl mov stc pop jbe cs jmp pop (bad) pop fidivr cld daa rcrl add mov movb imul push dec dec jne dec cmpsb mov es out movsl pop scas inc nop jb ds mov cmp (bad) mov xchg call stos into add in push fsubrp repnz dec pushf xor shr test out dec rcrb inc inc out fwait sbb andb push xor jl cmp and rol pop dec push or cs lahf jo lret out pop outsl mov dec out ret mov (bad) pop sbb sbb add push mov sub sub add out pop mov xchg cwtl sub (bad) push or cmp lds pop out mov adc pop pop outsb or jnp shll jg out mov pop xchg sbb pop mov jo dec sahf (bad) xor inc mov lahf shrb ljmp popa out fdivrl inc stos out in imul xlat push mov sub int push js jmp mov mov shlb cmc pushf or aas scas or and pop aas inc test mov popf out mov jmp lret and out ret fild mov pop push or fimull out jnp push jbe in cmpsl movsl pop mov inc mov lock fbstp mov xchg and xchg cmp out mov je push (bad) out and cmpsb mov in jl adc dec int3 inc xor bound mov push pop or in (bad) xchg into es rcr out push in mov mov test xor pop lea clc fisttp rcrl cmp pop xchg or adc and je sahf mov out sbb test jno aad ret loopne leave mov add lret adc pop out sbb mov sbb loope lea pop sub aaa mov sbb lret scas xchg out outsl xor data16 xor jb dec mull iret ss push jnp out or lods in out pop in cmp or (bad) push out dec mov sbb cmp fwait divb mov loope mov inc mov dec or xor push push sbb and or test in sub (bad) fildll hlt xchg test mov sub add icebp pushf scas (bad) jmp out xchg xchg pop daa ljmp hlt repz out loope (bad) int3 push xchg and push popa ret out cmp lods test scas out push bound ret out dec out mov in cmp add adc ss aad or or mov mov ljmp out xor add push add fistpl mov push and out and sbb (bad) loope mov aad stos es fsubp fs push and (bad) (bad) lods ljmp mov out fsub in pushf lret aaa inc (bad) pop sub xchg movsl mov out out movsb lods cmp jle inc cmpsb das in std pop test in pop in (bad) jno (bad) xor roll jmp mov lcall cmc loopne movntps out push xchg add out adc or cmp add add gs notl mov out int3 arpl inc mov inc stos mov or shlb in sbb jl jle sbb int3 jecxz out mov jge fiadd out inc ret cmp push mov push add jno movsl push gs int mov out jae fnstenv mov mov sti ds xchg out test xchg pop mov adcl adc in jbe and std dec out push out jae adc test jp cmpsl mov push sbb and cmp mov pop push imul sar mov ret out insb push push fmull push out ds movd inc pop je test xchg das out sub sbb cs fnstcw mov out fwait ja enter push and pop popf dec out call mov (bad) aam sarl popa push neg incb dec cmpsb cmc int3 sub ret out xchg aas sub in add out mov movsl and push ss inc mov sarl clc mov icebp mov iret decl jno dec (bad) in lds out movsb fdivrl pop es mov out test lea lret mov inc adc jo out sbb push stos bound add out lcall test imull fistl lods sbb sub mov inc push sub xor out outsb movsl xchg sbb out fldcw cmpsb mov test aad push xchg movsb shr out lock adc sub fild push or int psubq pushf jno in pop pop mov (bad) faddl and and stc fistp call pop stos push adc push out iret loope les cmp inc stc and outsl fiaddl push daa out call fucomip mov xchg ss adc imul (bad) xor mov push xchg test in negl out jecxz dec xor call ljmp iret movsl das ljmp jecxz jle sub (bad) out je mov out inc loopne sub mov mov ljmp mov xor jl push xor pop out inc jnp add ret dec dec xor push mov lods xchg jno mulb dec stc fsubrl enter sub inc push rcl fs xchg outsb pop insb adc or sbb in int3 lods and lods out jno jge pop mov iret repnz cmovg lcall rol int out sub dec cwtl push dec les arpl das xlat inc je mov inc xchg and out xchg add mov cli shrl pop mov mov cs loop mov adc out scas mov jbe out dec lods xor lock aaa lret xchg ja in or iret cmp jo testb xor mov xor or aad add or cmpsb and inc out bound add pop rclb out xor pop cmp pop js and add out xchg xor inc or adc iret cs lcall xor inc pop (bad) loopne fsub in mov lock sub sbb xchg das andl in lods jnp mov pcmpgtb lret daa out cs push mov mov dec sbb (bad) negl xorl test clc int3 out jl enter sbb inc out cltd push test push jne ret mov xchg xchg movsb popa add enter fmull (bad) mov sub out sbb jge icebp and jb out jg jo scas xlat ret push mov and stos icebp xchg insl fsubr and call xor out xchg jns or out in wbinvd inc push jnp fsubr aaa lods add out fcompl or ret clc cmpsl imul out fisubr jne pusha (bad) imull pop pushf insb mov pop fdivp out out sbb xor outsb aam add (bad) (bad) out pop lods pop inc fnop sub out cmp adc pop std push cwtl out xorl jb mov test gs out mov loopne jns out sub aas cwtl ljmp aam std push mov pop in and clc dec ljmp sbbl pop dec ja je push insl daa sbb and fimull pop xchg cs add (bad) ja (bad) ljmp fist or sbb lds out clc jne cli orb out (bad) jnp sub out mov adc inc sub fldcw xchg mov sbb cmp add pop ja pop sti sub imul push mov sti out iret aam int3 mov movsl lahf xchg add push test cmp gs sub jge mov out pop fsts (bad) add dec push (bad) loopne out jmp pop cmc (bad) out inc xchg pop sbb or jge mov add mov push adc pop (bad) dec out movsl jbe ret mov lods mov (bad) in mov cmpl and out lcall in or and nop jnp outsb scas xor pushf popa (bad) cmp fstpl dec jne gs stos out mov sbb inc stc cmp leave fs out or out and fldcw inc shll sbb dec pop rorb or xor out add test ja mov icebp xchg mov (bad) out and fwait hlt xor push ret push rorb and in out repnz lret (bad) rsqrtps insb dec xchg cmpsl cli cmp cli (bad) loop push imul sub mov dec pushf insl js push adc lcall test adc add loop sti movsl test shr xor (bad) out (bad) clc repz push xlat and add xchg dec jge in std out dec cld mov jnp mov insl fucomi (bad) inc jbe cmp ret lock ljmp out push fistpl sub jb jns aam jg out push and sti int3 movsb add and mov pop ljmp (bad) jnp fldenv adc insb push int3 out fisubl jno pop sub dec adc pop adc out out xchg lods inc inc popa sbb fildll add test xor sub push stos shlb aam out lods jp jmp (bad) (bad) mov or negb mov lahf mov jmp dec popa jl cld mov test mov lret fucomip dec pop (bad) popl mov test stc fisub fs pop jge push mov loop out (bad) out inc push mov test adc das out xacquire or dec mov inc cs aam or cld push test xchg out jne scas sub faddl xor out arpl adc push inc add inc push (bad) ljmp bound push aas push mov mov adc dec fist (bad) mov sbb lock mov out nop mov fist inc and mov addr16 cwtl out cltd fisttpll adc push pop pop sarb ds stos ja and jne jnp pop adc daa jecxz std (bad) mov mov out xorl or inc or data16 repnz dec in xchg mov push imul ret out jmp fcmovnbe stos xchg adc out mov dec xor xchg in sarb stos cwtl sub out leave xchg jb xchg or sbb outsb aad dec test mov lret pop ds xchg inc mov enter xor aam add shlb fiaddl push xchg mov out xchg inc and clc sub mov and fisttpll cmpsl push cltd xor sbb mov subl pop mov loop mov out mov mov loopew and test in dec out lds es out adc gs jle,pn out test test (bad) je mov pop push aam out jne add and out mov push pop pop into sub out pop cmp adc loope lret cmp mov mov mov shll vmovd out popf push push repz lret and and sar xchg hlt sub xor lret test out cmp out mov outsb or xor repnz out add in push mov (bad) leave test mov sub pop push jg icebp jp out sub sub subb cmp (bad) mov and jbe sub adc (bad) fist mov icebp mov mov out fcmovne mov std mov (bad) (bad) pop fisttp ljmp push out adcb add pop cmp out mov jo jb mov ds lock (bad) negl cmp loopne jecxz negb out inc inc push outsl out repnz scas out int3 push mov pop sbbl jp out (bad) sbb (bad) hlt or ja dec loopne or fnclex addr16 cmp and xor enter je lahf or push cmp lret out cmp in test out loope inc push mov lcall jmp shl pop add sub in xor xor pop or fidivrl out test xchg adc test jecxz mov sarb subb xor into cld mov fisttpll inc xchg scas es cwtl pushf mov scas out pop jle cmp and sub into pop sub shrb dec sbb punpcklbw push loope push jl jno pop pop rclb (bad) and addr16 hlt mov (bad) andb shr in pushl out repnz jno in or pop mov or ret lcall out ror jnp int imul mov imull pushf (bad) mov insb popf shl mov out frstor jne mov decb ret jne movsb add (bad) jo xchg pop pop test (bad) jecxz mov out stos cmp add push in lods (bad) int3 dec pop xchg int push inc (bad) inc xor mov imul add nop pop (bad) mov out (bad) aad lock js pop mov add das mov cmp inc ret rcll add loope out jbe sbb in push push out add repnz pop std xor lds dec in (bad) out mov imul shr and lcall das pop add cs out adc clc (bad) xor mov test jmp mov fnsave mov mov xchg scas aaa jo dec adc imul out push add in fmull (bad) iret repz cmc loop (bad) lret out int3 sbb inc das inc cwtl hlt (bad) shl dec mov sub cs arpl das lds xor lret sub loop inc cs leave iret cltd xchg and pop and inc icebp movsl jno dec ds or dec aam imul xlat int stc scas pushf (bad) and ror adc jnp fimul adc ret out fsubrs stos rorl (bad) cmp sbb test sub in js sub aas ret iret rcrl or scas jae push jle out fcomip mov aam xor cli add pop hlt mull fnop cmpsl sahf ss push sub out dec dec and cmp add nop sti add and pushf pop or les stos dec aad mov enter aaa pop mov pop movsl stc jnp pop lods jg (bad) iret pop inc and cmc adc in aaa adc pop lds inc nop adc out push push or push rolb lods pop mov lret enter subl pop lahf popf test and jae stos pop test mov lock or enter or push cmpsl rcr mov mov out arpl push out mov xchg out and insl insb xchg fwait enter into (bad) (bad) movsl sbb rorb add roll shrb sti adc pop sbb pushf out pop push out jno mov jmp (bad) jmp xchg loope push inc out in pop push xchg xor add push das repnz (bad) shrb sub sbb out lds sbb mov lods fisttp mov cmp scas push jns mov jp push out and movsb mov xor fist jle pop xor ss rolb sub sarl aas (bad) scas sub mov inc mov mov out loop dec adc (bad) jmp sbb jl push cmpsb stos lahf mov dec dec pop pop data16 jnp pop xor int out fadds inc mov out gs push mov iret jecxz loopne out and out sbb lods test mov fbld add (bad) lods shr xchg popf jl push in (bad) gs mov push data16 loop fistpll jecxz fistp in (bad) insl jb shll out add ret cmpsl sti out cmp add out pop or scas (bad) push mov mov dec add sbb std fucomip call lret push outsl fsubr lock cwtl sbb mov (bad) scas sub lret aad sahf imul lahf shl fdivr mov pop into inc mov jbe (bad) or jmp out ret lret add mov dec lods sti scas push (bad) pushf inc call outsb bound add icebp add dec notl lcall mov cwtl sub popa mov sbb adc xchg xor pop mov in loope ss add jge incb jp rclb ds sub push push cld xor mov in pusha out ds or sub cmp fldz sarl decl jle daa repz xlat out xor jl daa mov out addr16 mov jecxz arpl nop mov hlt mov add xchg ja jmp xchg push pop pop mov in dec mov stos ret mov sahf enter fsts loopne imul aas mov fcompl xchg out hlt cmpsb (bad) cmp and out pop mull jmp push sub je out dec adc sub jg mov shrl pop mov inc or sbb jb mov loope mov inc xor int3 cmpsl fisubrl adc cmp or cld sub imul leave cmp out int xor mov jno addl imul pop in call dec pop imul xor (bad) xor lret cmp mov lcall hlt out sbb xor mov cld mov cltd or mov xor push hlt insl adc inc mov loopne stc (bad) lahf loope bound jg pusha and insl out mov fsubrs mov dec out xchg push popf xchg push or lahf xor aas das in jp inc out lods ss (bad) out sub scas push adc jecxz push add cmp xchg mov rolb out sub sub mov cmp push xor push loopne out loopne adc or shrb stos call mov out mov pop adc lcall jg arpl sbb jge pop lock ror push mov clc js push pop dec vucomiss pop dec mov lret or fadds jge and leave (bad) sbb rcll pop xchg mov js xor ja out mov adc (bad) hlt addr16 daa aas std mov out xor mov lods push out adc push or mov rol in jo mov int3 pop inc lcall (bad) pushaw xlat inc sub (bad) pop mov xor push insl push (bad) jne cltd out repnz pop in pushf inc out mov and mov inc or out jmp cmp lods (bad) jbe adc jecxz les insl ret out jae mov lods pop rclb test mov test int3 jmp mov loopne sbbl mov cmc out adc lds or sbb out aas cwtl movsl mov push in push and (bad) out in in push sarl out xchg aas mov and add add pop jmp ja mov cmc mov jmp sub mov roll lcall outsl inc ljmp jno lock in sub jne push fsubrp mov or insl aaa xor push rorl jmp mov mov sub pop test cmpsb outsb xchg out inc ret outsb stc decl popf out mov nop or pop cmp lock sbb mov sub cmp adc xchg and (bad) je enter subl mov jnp sbb lods xor push loope,pn in (bad) es (bad) xchg jp lock pop daa iret cmp lods or cwtl loop or adc scas sbb jbe outsb jmp loope out dec test fdivrp out lahf pop jno mov xor stc out sub data16 clc or ret adc pop hlt orl jns jns mov lret fisub out mov jge mov roll insl mov push loopne or (bad) out imul lock jg adc inc ja pop jge lds in pop mov call ds mov insb out jae gs push jne xchg out pop les mov scas push sub pop divl pushf shrb fimull out xchg js mov xchg cmp mov loope mov xchg adc dec or out xchg lods jae or out adc ja sub in pop sub add out inc mov sub out dec pop push mov out add js dec cmp insb mov lods jge in xor outsb mov pop pop (bad) lcall inc out cmp pusha popa loopne ds xor test ror out dec push out push out add pop in sbb fndisi(8087 mov pop xor fucomp shlb mov xlat loop sub test sti shl in pusha add push out cli or clc inc sbb mov mov mov jge fwait dec sub push add jle mov dec xor mov int3 imul add push pop enter scas jge in ret jp aaa mov out jne fcompl aas mul and jns rcl inc sbb andb xchg sub jb cmp in mov stos pop (bad) leave inc push hlt pop and lods out dec inc cmp add aad (bad) add fsubrp push test data16 out cmc addr16 frstor xchg sub push out lahf fsubrs cmp out mull in popa pop test pop jmp inc inc dec stos inc xor and xlat mov das (bad) lods pop adc int sbb stos mov rol xor cmpsl push call xor lods pop sub pusha inc cwtl mov sahf aam push shrb loopne lods mov inc stos out scas mov data16 pop jecxz stos in (bad) bound scas lcall push mov pop inc cmc mov pushf test movsl out pop cltd cmpsb pop pop mov (bad) and push sahf orl out leave stos in cmp push xchg inc bound xchg xchg cltd xchg dec out mov dec mov out movsb leave icebp pop add cmc loope repz cs call stos out fsubr dec aam leave out aaa sub ret jmp out adc dec (bad) out enter int pop xchg inc mov inc insb pop inc cmpsb shlb ss mov mov or xchg jnp xor cmp inc in adc mov cmp pop inc insl lret jne insl mov mov into add pop outsl out cltd lahf scas push out or pop flds sbb imul cmp or xchg clc mov mov add (bad) sti add jne push in sbb jnp cmc cmp push push xchg scas arpl lret add out js cmp (bad) enter cmp sbb add jmp pop xchg push out je dec sbb jg ljmp and jns loopne and repnz popa es icebp (bad) ss dec insl in xor call sub mov adc stos idivl mov aas xchg outsb add mov arpl inc mov stos xlat pop int3 push out mov ja mov add ljmp xchg pop js push stc notl out rcrb rolb adc mov fimul and aad bound in push imul (bad) out pop sbbb mov out xchg jecxz mov or movsb dec pop cmp adc and movb aam gs pop stos test pusha add outsl addr16 jbe or imul jmp push sub push out mov add xchg icebp jo ja adc xchg xchg cmp test push pop maskmovq mull push js mov mov imul (bad) movsl inc out repz xor xchg cmp jge inc movsb imul rcrl jg add in adcl and mov and or and rolb and out lods cld (bad) fcoms mov add (bad) (bad) jge push jl sub sub sti out imulb pop in lret mov loop (bad) clc jo push out dec push or mov push ja xor mov hlt mov xchg jmp and or push xchg ljmp shrl out pop das popf inc test mov out mov cwtl mov xchg xchg mov pop push add ss and lds lcall xchg cmp lahf mov loop icebp outsb lret js pop ja in (bad) cmpsl insb jmp std rcll out leave test lret push je mov dec mov inc ljmp (bad) aad mov cmp add cmc pushf jne sbb out add mov pop test loop mov sbb adc pop sahf insb das mov dec stc out rcll mov out std outsb lds lidtl in inc movsl out mov popa (bad) pop pushf imul stos loope pop stos pusha xchg mov push jno cld dec outsb bound scas pop iret cmp lods sub xchg in pop xor popf jmp and in in pop out pushf xor clc mov stos in lods jnp movsl out xchg jp mov dec xchg scas in das aad push sub div add pop push (bad) (bad) jmp pop lcall or (bad) aam neg sub pop and or (bad) movsl jge pop and loop and sti dec cmp aas inc lahf (bad) push fisubl out sarl add adc pop outsb cmpl mov out mov sbb jbe out inc data16 loope (bad) mov jo ss je xor iret xlat pop pusha fisubl push fucomi nop inc lahf cmp xlat in jo mov adc (bad) xor inc insb notl inc out cmp out mov cmp fistp push lock loope jnp mov mov fbstp shl shl adc pop lds push cmp xor cmp out inc jne and add dec and pop test xor xchg xor sub push lahf out daa scas addr16 (bad) pop repnz lret inc mov jns movsb adc ds fisubl mov call in mov mov add out cltd insb (bad) mov out cmpsb popf pop rol test movsl push aaa ffreep mov sbb push cmpsl fmuls out sub xlat movsb popa jb pop xlat jge adc jne out mov and pop aaa or cmpsb call out scas add fbld mov or mov ficompl mov pop inc and sub adc test inc icebp arpl ss out aas iret push imul pop cmpsl mov lahf jp,pt int lock sub scas data16 ljmp xchg sbb jmp inc scas out aas lods in pop jecxz dec pop jmp stc xchg pop push dec mov push mov dec pop and (bad) adc stos aam pop sub outsb pop es add into add add fidivl dec sahf xchg out xchg push imull scas mov mov stos mov out das cmp sbb mov cmp stos out iret add and faddp (bad) dec rcl sbb call ss cmc out push repnz outsl jmp setb int sbb ljmp jecxz mov sub or imul mov loope xor std jp out and jp sub (bad) lret cmp xchg add enter push fcmovne (bad) loopne out dec dec (bad) shll adc aas fsts into (bad) popf in mov jo cltd jge pop iret fildll out sbb js push pop fisttp in adc adc shr jo outsl test or mov ja outsb mov out daa lret inc pop jae (bad) out sti dec xchg rcr xchg or movsb out pop icebp push fild jno call (bad) in out js (bad) cmp loope cmc pop movsl mov mov mov mov lret int out (bad) add out xor push xchg pop pop sbb cmpsb icebp fs scas divb mov inc xchg cmp test out add add mov fdivs into and scas ja add in jbe cmp out outsb xor (bad) dec adc dec shlb jo lods aaa pop arpl inc pop fsubp scas ds out add xor dec sarb rep xor out sti mov or out pop rcrl mov (bad) out je jge,pt or mov cwtl pusha out adc arpl cld fisttp out sbb push pop incl lret mov and cli pushf outsb add cwtl xchg mov test cmpsl mov ss jbe call mov sub (bad) mov data16 mov div out jb sub push das lea sbb scas negb stos es mov (bad) (bad) (bad) roll xor ret mov mov jae or repnz outsl bound out sahf inc stos insl (bad) clc out sbb adc and mov lock cmp mov movsl std push rolb mov ret stos pop out fs shll out xlat (bad) inc and and iret cwtl rcrb pop std push sarb dec adc (bad) mov mov out and mov dec out leave sbb inc xchg push ret inc aad xchg push popa in fcomps lock cmp test cltd out sub mov int3 popf mov aad les sbb scas fmul adc test and pop xchg out imul (bad) sub out test aad cmp (bad) out pop fldt in std inc sub mov das pop mov sbb fcomps out test push push out call lods aas cmp and out and mov cli fs aad xchg punpckhwd fwait sbb mov out sahf (bad) ss xchg sbbl call out sub mov das int out add arpl ficom pop rolb xchg lret or push out lahf or dec in in pop fild out hlt js cmp fsubr sub outsb mov loopne jb dec out hlt jl fs inc out mov mov and lret push pushf out outsl xchg sahf out out out jno sub fsts inc lahf out sbb push jle pop and ret and inc out loop lods dec shrb lcall outsb xchg out movsb cmpl cmp jg fidivr pop mov call enter pushf fucomip inc (bad) xchg movsl xor mov adc out out cmpsl pusha ljmp leave ss adc mov cmp add lds aas push aaa add leave out dec jae pop outsb outsl fistpll rcrl inc into pop mov adc fdivrp pushf das call insb lods push (bad) push lds (bad) hlt in bound out in xchg js call dec mov sub cmp jo lods hlt jns jmp notb lea mov dec fucomp bound add push push push out sub jb movsb cli push xchg aas mov into movsl test sub adc scas insb push jb cmp add repnz jae ds xchg inc or pop sub mov adc jno cmovs ljmp sbb mov fs sbb push add out sub repnz mov or fs pop cmp inc nop aad push out mov in push insl mov dec loopne cmp and mov sbb fucomip mov enter pop (bad) scas push sahf rorb pop xor inc loope push bnd out sbb movsl dec out rcrl mov in shrb mov orl lret lahf fsubrp push test add jp xor enter mov out sub inc sbb mov jb inc xlat inc rcll repz cmp inc pop jbe into loop and cmp mov (bad) aas mov out or jg jno jbe out xlat xchg push iret out push jae mov lahf je arpl ret jnp imul sub iret xlat arpl scas jo adcl lcall dec (bad) (bad) cli jmp shrb test inc push adcl mov out or sahf out negb (bad) out adc sub movsb dec push paddd popf int3 shrl jno pop int adc out dec xor out mov mov inc sbb test and pop and jo out hlt aam inc pop inc push loope js dec lods in sbb out lods jns add xchg mov xchg jecxz mov out xchg xlat inc mov popa add pop mov ret out imul (bad) adc jecxz mov pop loopne xchg out fnsave push lock inc loope add inc out aam adc shll loop pop lret lock data16 xchg mov (bad) xchg jmp imul in lcall out xlat outsl out pop ljmp out into in sbb sub mov insl xchg jmp insb sbb jo loopne lock mov rcl out shrb out lods sub and loope mov insb xchg jmp imul out popl cltd cli cld call jmp out enter (bad) out insl jno fwait (bad) fsubl push jmp enter data16 (bad) sbb dec in fsubrs in fsin push (bad) loop xchg jecxz enter data16 (bad) loopne and (bad) in xchg outsl stc jg sbb dec nop out ficom lock adc arpl jo loopne out adc mov jo (bad) out adc inc ljmp enter data16 xchg int3 (bad) jo popa pop sbb xlat int notb fldenv fs sbb push jo out out insb xchg add push cmp mov push int hlt mov push aaa xchg or negb shrb pop sbb sarb std xor dec imul mov sarl or stos lret cmp out jb bound out out add into jno mov mov popf fwait call out pop adc pop (bad) dec push insb out dec gs stc jmp je dec mov xorl jb loope lahf or sbb (bad) je imul in dec or in xlat ljmp add jne add ljmp in aas fmull fs rcrl ficomp ljmp out mov sahf sub pop lods jnp push movsl cli and xchg out and out out test movb mov xchg sbb iret sub cmpsl add into loop jb cmp out movsl cmp jmp pop push fsubrs or sub xchg out push and fildll lcall shlb loop lret (bad) adc sbb aad int subl push scas push mov cld cmp iret sahf loopne jno into pop mov (bad) xor (bad) jbe push jmp (bad) sub mov xchg inc add lods pop pop add sahf js push or mov out or push jbe lahf jo out jne add push push mov ja mov out loope xchg mov aad jg sti (bad) enter cmp (bad) dec xchg inc jp sub xor jmp or stos out leave cmp fiadd xor ja loop add mov aad out out rclb (bad) lods xor xor pop leave dec pop sahf mov (bad) test and pop sbb sbb jae (bad) insb and sbb shlb cmp and scas fisttp xor mov and cli out in (bad) call ds lods push dec (bad) push cltd xchg adc mulb subb call push je lods gs iret imulb add mov outsl fs mov bound push into xor jl rcrl cmpl sbb ljmp in and push aas cwtl out dec jno out xchg (bad) mov lods cmp pop movsl das cs popa mov iret ss mov xchg and or xchg and or adc (bad) pop in cmp cmp ljmp lret leave negl pop dec dec pushf stc mov inc (bad) dec pop sub icebp (bad) or out (bad) outsl inc popf ja and out cmp lods push out jge out mov sbb cmp cmp aam test and and sahf add jge arpl int3 pop jb mov inc or sub addr16 imul pop mov fild pop test mov mov add out decb fcoms mov rclb push mov (bad) cmpsb je cmc pop xchg std push jl stos fmull mov data16 bound out pop xchg insl aad mov cld jne shl in insl sbb (bad) or xchg cltd sub shll (bad) fistpll mov push sbb popa mov mov rcrl pop insl xchg adc (bad) in mov lods sbb pop sbb adc test fsubrp mov pop mov outsl es leave jmp adc arpl and fwait mov add cli loopne mov cmp out dec (bad) int3 xchg (bad) out mov test call add shr xor cmp int jns dec adcl sub mov pushf push out lret xchg loop (bad) sbb pop icebp (bad) imulb cwtl and xchg adc iret (bad) fiaddl xchg and mov (bad) jns fucomp imul ss mov aam in mov (bad) xchg sbb imul out dec rol mov adc sahf std xorl mov jo scas out mov xor ja inc repnz or hlt lods ret xor jbe or mov mov loope jne movsb out sbb xchg dec and fbld leave iret aaa out or adc sub out mov in adc (bad) iret cs aad cmpsb xor pop push adc cmp sbbl inc ljmp push or sub jg bound (bad) in fildl push clc (bad) outsl mov inc jecxz cmp out shll xor out arpl popf sbb test out lds cmp popa xor dec aad xchg dec subl cmp mov mov stos inc repz sub das lds xchg aad sar jecxz sbb xchg fbld shll sub cmp int3 cmp push or push test js stos jo xor jg out push push xchg dec xchg dec lods movsb ljmp (bad) adc inc mov fxam push push gs xchg or pop push adc mov add inc xchg inc xchg shr shl fbstp out shrb icebp in (bad) xor ret sbb cld out out xchg mov and pop movsl jle jbe loopne fcoml clc es loopne mov ljmp out mov aaa shll insb out jle (bad) sub dec enter insl dec dec mov xchg out jns sub push xor mov aaa iret ret out (bad) loopne adc inc std dec out lahf repnz imulb lds mov fdivr test push adc stos insb mov lret cmpb out rorl adc add sub loopne sub jmp cwtl das jb mov and dec imul jnp pop mov or add mov mov push sahf dec gs ljmp jno out sub dec push adc mov out jecxz cmp jbe dec (bad) xchg mov popa jb pop ss dec mov pop out mov dec (bad) shr or mov mov mov cmp ret shl inc (bad) jb sbb sbb fbld lret test gs push mov add flds stos call pop bound pop dec lock adc xor (bad) out daa call sahf aas out int std jae or cmp inc adc (bad) pushf mov bt sub shl out loope xor pop adc test (bad) adc int (bad) mov push insl mov mov fcmovne (bad) add xchg jbe jg ss push mov movsl lea test xchg addr16 sbb and popf ds out es push mov jge sahf rclb cmc sbb out movsb sbb es out jp xchg daa imul lds fxch pop out test sbb bound addl fdivl aas out and lock das cmp rolb push lret pop out sbb or fisttp fcmovne stc hlt call cltd jecxz xchg cmp rcll xlat xor jmp adc push out fwait (bad) add dec jg stos pop pop dec inc repz out add jp jge into out xor sti push out sub (bad) jbe out into lahf adc xor pop push sbb mov dec mov dec out pop inc and or cmp insl leave mov add out mov or out flds and cmp xchg mov mov cltd mov outsb call sub push out mov sub sahf pop or adc cmp mov lods repnz xor jmp inc inc and movsb push push rcl cmp call fdivp cmp pop and (bad) outsb test out out mov scas pop mov stos in (bad) daa cs add mov out insl inc adc loope fist cmc pop loop xor xchg dec or fwait ljmp aaa out inc jns popa xchg cltd out icebp ds popa or jl pop in imul (bad) fbld call out xor shrb ljmp mov sbb xchg jnp jb jmp out lahf test xor ljmp pop inc lods insl adc inc push shr test fstpt out sub (bad) arpl cmpsl out ret (bad) sub cwtl aaa in ja (bad) jb and push in push push adc bound fadd call pop xchg rorb push (bad) sub shl aas jmp xchg addr16 adc ja pop test jae out int jl inc rcrl imul movsl jno jnp or out dec mov jle mov in add xor jbe mov pop out and fimul fldenv mov push (bad) scas sahf out ja xor inc test rclb jl and xchg mov shrb loop pop adc nop enter dec div xchg out js inc cli andb and aaa xor pushaw iret add insl test int or mov in stc adc sbb fildll lahf (bad) out or call pop mov stc loop out inc cmc arpl xchg int3 insb rclb sbb notb or pop scas out repz fisubl popf out es das and mov jb mov pop cmp dec (bad) pop loop mov mov fldz cmp mov sbb and jno dec xor jbe sbb and push xor loope popa push xchg addr16 jge aad outsb ljmp (bad) jmp and sub hlt aas pop sbb addr16 out pop pop jl inc mov jo out pop rol mov dec int3 bnd xchg out rol push notl aad in adc inc xchg je cmp (bad) insb jo,pn arpl sbb adc cli roll add sub fwait pushw mov xchg pusha or imul js icebp out popf out add jbe or nop push lcall or cld adc sub lret fucomip pop sub add jae pop mov lock repnz out jns test push jl push out add pop jg ljmp and lds out inc jg mov xlat data16 inc (bad) xor add sbb in xchg push dec push mov iret andl dec cwtl ds out ja cmpsl out sbb cmp es repz add inc sub pop jb mov jmp aaa call fbstp shll or (bad) mov lcall or das pop sub adcb or lods and out call (bad) xor ret leave push jns out rcl icebp addr16 sub lea xor push sbb cmpb pop rcll stc iret xchg js adc out testl add (bad) cmp fisubr inc test int3 cmpsb fild movsl dec les std fbld adc push inc shr cld sbb in cli out pop sahf adc and sbb and pop sub inc mov ret lods int3 cmp in paddsb data16 out aad jecxz gs out inc sbb dec aam inc bound and loope aad or mov mov movsl xchg (bad) aam out push inc out pushf cmp shrb and loop les test pop subl test cmp xor int in xchg jo lcall rolb xchg fs adc jns out push loope sub and push and dec nopl stos jle and cmc inc mov push jl out xchg loop jbe fistpll mov fmulp das loopne sub (bad) out movsl sub xor lds sbb lock xchg pop fldcw jg imul bound cmp xchg sahf jmp std dec mov cmp into out fistpl mov sub mov sbb (bad) (bad) cmc mov out and mov mov les sbb stos scas stos in inc sbb cwtl cmpsb pop loop adc pushl in inc xchg mov fs xchg fnsave lcall fstps push mov dec jg in xlat notb jns in insb jb (bad) test fidivrl sbb sub out adc nop xor out test dec out movsb dec gs (bad) test xor out lods pop fs out ds cmp out push scas int3 adc xchg mov inc addr16 std mov push fdiv or loop stos dec out scas stos sbb (bad) out xor (bad) (bad) lret mov call movsb inc mov pop out mov mov loop,pn leave shrb cltd loop xor loopne ja out xlat push fisubr stc cmc dec sti xchg pop push imul out adc nop rcrl cmp std jge or call pop push adcl loopne es enter cmp out jmp add dec lock and sti cmpsb lret cmp ja dec out popf mov in aaa adc iret shll xchg sbb push stos adc xchg scas pop add push in push xchg loope ljmp xchg out nop into (bad) xor pop pushf in (bad) pop and lar push cmp outsl shl jle jo mov jmp daa out xchg fistp arpl jecxz xchg lret out scas cmp fs jp movsb loop in lods push sbb lock out mov push mov out or testb jbe sbb aas cltd mov loope adc ljmp imul jge out inc fstpt and xor and out push dec cld shlb jb bound cwtl stos mov rcrb fimul loope add fsubr sub cltd sub rorb jg xchg iret inc bnd jge dec or cmp dec out fldcw lret and inc out out jp cwtl jne orb mov or xor push cltd xor shll (bad) fwait and xchg out sub ljmp (bad) fist loop mov out add sub out fwait add sbb mov push out pop inc fnsetpm(287 inc andb nop loope inc xchg movsb and out sub in adc out mov cmc pop push and adc out lods fst add (bad) lock or push xchg mov inc sub outsb sub push iret addr16 cs out fidiv jno pop in iret xchg cmp in mov xchg sub adc xor cwtl push insl and out (bad) or sbb mov push sbb ljmp push out mov mov cld pop shl sub lcall (bad) sub xchg dec jne inc sti xchg mov and and or movl fs out dec nop cmp out mov push das inc out sahf jle xchg push scas mov mov out sub mov sbb roll push add adc out je cwtl ret pop adc mov sbb cmp in push loop out mov ficomp fs shr mov shr or xchg fildl in mov (bad) icebp lods push pop lahf or mov out mov pop inc and stc xor (bad) mov lea out xor ljmp dec out jp mov push fild aad pop or jecxz cmp pop sahf jb pop pop ljmp jg fadd jmp out push icebp (bad) scas movsl pushf xchg mov dec mov adc dec sub (bad) repz negl inc out call mov cmc push in and inc push xor aaa ja xchg jmp outsl cmp or (bad) (bad) and push ljmp pop add push (bad) cmp addr16 pusha in inc push push xchg add pop out in icebp push popa addr16 mov (bad) pop cld jbe mov jp in lock out xor jge push xchg fadds xchg inc mov jnp and addr16 out pop jl mov out aas mov rclb sub adc pop inc xchg leave cs popf push call mov in imul adc (bad) scas imul add and sub out push inc push fbld jle or out insb pop stc mov lcall ret ficompl out rcll jo dec xor in push pop shrl ljmp xor jo lahf hlt jbe mov mov pop or sbb sbb shll enter neg jno inc in jb inc rcll adc loopne sbb into dec cmp xchg bnd sub mov scas outsb xchg std mov or mov sbb test mov inc push mov aaa out aam xchg arpl call push enter imul dec xlat loop fldt sub in ss cmpsb les int xchg jmp nop xchg out xor add repnz sti scas movsb fild sarb push ret inc int3 mov xchg arpl test cmp cmp xchg movsb adc sbb fxch out pop shll pop imul lret ret test iret jns call loop sub out and mov pop cmpsb movsl mov ja mov out push jl xchg out enter dec fs loopne (bad) mov arpl sub mov mov out xor les fstpt adc cmp pusha jb mov daa xor mov (bad) mov ljmp cmp out (bad) loopne or cmp ss jecxz in js xor mov push repnz in imul shl fs lcall pop outsb sahf push les shr push into lods cmc adc dec test fsubr imul inc sub popf out dec cmpsb sbb jp ljmp mov rorl rclb push mov popf mov aas mov lahf test mov dec aad cmp jp cmp icebp arpl lods mov lret cmp and shll movsl sbbl sti pextrw bound lds xor stos cltd adc inc ja lock inc in fs and push pushf in and dec adc pop xchg and out mov (bad) adc movsl pusha hlt mov out (bad) popf pop sub fwait ja and mov xchg push les pop dec loope xchg add mov add add out sub adc rclb loope pop and ljmp mov xchg cmp aad or (bad) repz fsubrp jge out ret lret mov mov push (bad) jmp rclb pop int lods (bad) jge lods mov mov jns (bad) push loopne test in sub or daa out cld fsubr add dec (bad) and xchg addr16 pushf mov add jbe adc mov sbb inc dec lds out inc push or (bad) aam dec pop lcall cmp cli out xchg jl mov test shr (bad) rcr in adc and xchg dec out mov pop mov arpl sbb out jge,pt pop xchg pop push pushf out pop outsb mov jns cmp out sbb shll sub out pop sbb push or xlat out jmp cmp lea jmp sub mov lcall out in push push aas sahf sub xchg aaa and in je pop repz sbb jne das mov out and test sbb sub pop pop aas mov push lock mov lods xchg imul divl cld out xchg xchg dec mov (bad) (bad) fwait or inc repnz jae push sub dec xlat lods or jbe out push jno pop int aad dec (bad) (bad) jae sub loopne shr rol popa push cmp lss notb je test test ret out jne sub push push repnz xor jmp jge or sub loopne lea fucomi ss in xchg (bad) fisubrl cli mov pop cmp stos test loop out ja mov mov mov push push (bad) lcall into jecxz int out dec retw rorb dec (bad) fsts out xor pop push outsl adc iret pop push insb pop add out mov pushf or inc int add out insb nop or arpl (bad) jns xchg loope js add out jb imul ja jmp (bad) adc imul mov in xor rorb mov push cmp push or pop and xor xchg mov imul xchg imul scas adc xchg stc sti xor lock (bad) aas lods pop lret adc out xchg inc mov test push in inc out fmull ja cs or sbb aaa sub push and xlat out jecxz iret cmp lods push out ja mov xchg out adc popa shlb (bad) mov mov jno movsb or adc (bad) push jb in push jecxz stos fcompp pop xor in adc sub jl ljmp and fxch mov push call test out dec cmc sub jle stos out iret or cmpsb sarl sub jae out and cmc mov push mov jns out sbb pusha out xor int3 std out les iret and lods nop push xor out push roll mov mov scas or pop jno out push aam movb inc (bad) ss out jae mov (bad) jno test mov divb lods adc pop movl out (bad) xchg mov sub loop cmp out mov (bad) fbld xor leave test ret call push ror jp jnp sub xchg and gs inc mov out mov fmuls mov into push aad dec push (bad) call add sbb (bad) sbb insb shr xor cmp mov push call push scas out jne popf jo cmp (bad) mov loop outsl sbb push sti out dec xor in ss test dec mov leave ret out or pop pop xor fist shrl lock cmpsb sbb in outsl mov scas dec lea xchg mov ret push mov fbld iret pop sub ljmp out iret push adc out les imul mov pop ret add inc arpl imul push jnp aas jmp repnz dec add jmp push (bad) ret cmpsl inc das mov inc cmp out xchg pop daa stos imul lods out fwait aad xor mov enter mov loopne andb ljmp pop fisttpll in out mov jecxz vpcomud push mov adc fist loop inc dec sub xlat out mov aaa xchg bound rcrl mov fucomip push xor add push xchg mov test out fldcw lret pushf out jge mov out aam mov clc and xchg push mov mov les das xchg shrb out xchg andl stc xchg dec add xor inc pop aaa jmp mov out std loope jl and xchg out dec or mov jo out pop xchg push lods jg repz movsb pop push out mov in sub push insl out cmp pop (bad) jmp cmpsb add mov inc pop mov cs ljmp in mov adc out adc ret push out enter inc roll out std push mov (bad) cmp cs aam out add es ret test jb popa out or fsubr std clc mov inc inc pop mov js dec (bad) (bad) fsub test adc in sahf mov stos adc aad ljmp push push fcmovnb sbb fcomps pop pop out lcall gs rcr (bad) out jecxz mov aaa out mov inc sub jnp dec or out imul movsb push jl fistp cltd xor lahf mov xlat mov out sbb lret frstor push adc stos mov or mov (bad) out sbb in xor hlt sbb xchg btc lret out cltd clc stc imul jnp add out dec adc push push pop loopne lret aas ljmp (bad) out mov lock fucom xor push cmp rcrb aas (bad) iret fdivp mull out fcompl test pop pop jno sub dec and addr16 cld pop cltd ja fs js (bad) rcrl ss jne out loope es jnp rolb out ret pop out inc movsb cmpsb adc jge dec dec fstl adc bound daa xchg negb out jae pop sub lret call das mov ret cltd stc mov mov lock add outsb inc (bad) cmc push out dec icebp push test and out add mov subl int es sbb jo test fucomp mov mov out shll aaa pop out stos push pusha mov call iret fwait or (bad) inc leave cmp out sub int3 xor pop or ficom (bad) and jp lods mov pop mov ljmp call lods push out xchg ret jg leave aas and out out (bad) jge and mov xchg insl icebp (bad) test cld xchg or mov rcrb dec add repnz out xchg xor out fs push clc lds dec loopne pop adc std push sub xchg mov outsb jne cld jecxz rcll out jle dec out pusha mov sub arpl js ss push out insb std or dec mov out lcall das cmp loop mov out mov in shr out js sub xor dec out cmpsl scas mov xchg cmp or dec mov andl pop iret lock xchg jmp cli (bad) fstps adc jnp push mov and push add and sbb aam push mov lock jp out dec jmp fmulp mov out or popf mov (bad) or cmp sub out popf sbb mov jecxz jne fs js out cli clc push add adc loopne scas fsubrs lods in sub shr cmc outsl push in fwait lods addr16 cltd dec dec in push aam out fcom testl inc (bad) aad ja out dec fsts pop pop out fsubp ds adc push in out dec jae sub out leave and fdivs loop sti adc imul fidivr scas pop loopne mov int3 mov mov fldenv xchg ljmp (bad) xchg inc shl fbstp jle je xor or ja aad and add (bad) xor lock ljmp xchg scas mov imul (bad) in iret xor xchg pop mov jmp cmpsl out dec cmp jmp out frstor dec shr cli pop imul imull jne cltd loope sub sub mov out cwtl mov fidivl gs pop pop fmuls cld outsb sbb out and (bad) mov mov out mov aam mov sti aaa inc dec shr les xchg clc adc icebp (bad) outsl into inc sbb pusha lods pushf fwait out sub je xor and mov xchg cmp adc mov or mov jmp add fcoms lret outsl out adc insl jge fisub mov dec out mov jo imul (bad) mov call clc jnp lods inc out iret cs (bad) movsb jg jp mov stc xchg out iret (bad) xor shll daa out sbb pop adc es insb lahf movsl or test movsb mov xlat lock mov fistl imul xor sub negl jns movd sub loop mov jecxz (bad) mov fdivrl out frstor fidivl insl int outsb in pop sbb leave in outsb sub pop loop out inc dec jecxz fimull out cmp aam (bad) cmc jecxz fs cmp mov out cltd xor cmp das sar jno push out push xor jecxz arpl in jnp pop add and fsub out jmp cmc pop and adc pop sub bound outsl ljmp jns sbb lods dec out pop pushf in ljmp (bad) into in bndldx pop and out xor or fldcw xchg outsb pushf pmaxsw lahf in jbe fbld out pop mov out ja xor push cmpsl push daa add out ffree pop iret cmpsb xor sub out mov in call and (bad) (bad) adc sarb lock data16 out ss dec ror mov jmp out out push cmpsl sbb (bad) call and imul jno push xor loop adc out das mov sti push out mov lea nop mov out loope jno cmp mov iret pusha xchg pop and adc xchg pop test les in inc dec dec adc pushf sahf arpl (bad) out xor test (bad) (bad) out out mov or mov je das cli loope push xor mov push (bad) mov cld jb dec mov xor sbb mov ljmp inc jmp lret cmp pop jp and in loop jo sub jnp dec jl outsb xbegin imul adc mov jae aad lods ljmp xlat fsubrs adc dec jge out adc fcoml sbb jp out outsl clc xchg sub iret cmpsl xor loop add cwtl jmp out bound in and and sbb push ds adc sub fucomi mov dec into incl push jmp pop test (bad) adc cli ss add push roll cmp cmp pop pushf adc dec test mov jle out notl sub mov mov loopne gs cltd scas mull cmp rcrl or pusha rcl or out daa jecxz push xor cmp push insl xchg mov add jg push out push fbld jb mov out mov scas sbb xchg les cmc in or lods xchg lahf or pop data16 les cli jne test std aaa loop sbb or push out or in xor out ror adc out xor je jb mov xchg mov (bad) jmp mov adc in fildll addr16 stos xor add stos inc ss (bad) jae (bad) ja add sbb orb push mov out (bad) and std cmp push jo mov out mov jge xlat out in xchg cmp cmp sub ss add push nop sti push popf sahf pop mov add callw cmpsb xchg mov inc mov jp fsubrp clc push push out adc and cld rcl scas fldz inc xlat inc and mov dec stos out stos orl jmp lret adc icebp jo sub jnp out jecxz adc sti push arpl sub dec lcall push out adc mov push out add loope ss jp aam in mov scas notl inc dec and movsl rorl movsl sub fidivrl push les adcb fsubr (bad) mov loope into iret xchg mov adc (bad) xor outsb out lods sbb pop rolb adc imul fucomp jns xor shrl ljmp out adc dec pop out xchg (bad) sti mov mov pop jnp sub out jae (bad) pop popa test loopne rclb cli cltd insl pop sbb fsubr mov call movsl test iret out or cli rcrl nop call add push sahf movsb insb call cltd xchg (bad) dec add pop add jo repz ret out push popf jnp push mov inc xlat sub jmp test xchg xchg fcomp pop lock pop loopne lods out mov xor ret cmp outsl test mov or jl ljmp pushf adc pop popa aam orl dec (bad) mov add pop cmpsb xchg xchg fldcw loopne and lods jne rcrb out push aad call inc sbb shl fbld inc ret pop stos ss ret out cli cmp movsl lret out das mov mov jmp pop out sub jbe dec adc pop add dec xchg mov cwtl js sbb leave in icebp pop out fidivr nop xchg js push lea fsubrs push in pop ja xor ljmp enter or loopne out pop hlt outsl jae mov mov arpl shlb pop push jg out jecxz xchg adc (bad) xor cmp xchg jb loope out jg hlt out xchg fsub push out push xchg add mov fcmovbe dec and aam fwait imul push or fdivrs cmp push or or test ret mov push iret push out std shr sub les adc xchg bound dec pop push movsl sub je sahf loopne add mov jmp rcr pop jmp arpl out test in jmp (bad) sbb outsl (bad) dec pop outsb fsubl fucomip pop sbb jecxz pusha fisubl ds inc mov pop daa iret in push cmc cs or out mov or adc shr mov push insl and push pop roll aad outsb les (bad) mov (bad) aam out popf jae mov shrb aad lahf pop lods lea out ljmp rorb mov scas incb sub mov xor data16 pop jle out and int sahf lods dec xchg out mov push pushf jb rcrb or mov (bad) and add in jo rolb out push mov out adc inc arpl out ret das sub jo out mov clc xchg mov loop mov movsl mov inc fs pop (bad) jne out mov cmpl out mov (bad) xor adc psrld xor pop xor out es aas pop lahf and fstpl outsl in loopne inc push imulb (bad) pop and cmp jecxz mov jmp repnz mov jns jne add pusha xchg sbb int xor inc and out or xor cmp inc push pop aas cld mov jmp inc out xchg xchg mov fldz out jecxz fcoml or jb clc in jmp arpl adc push pop push das mov in mov mull out pop xor (bad) xor cs movsb push dec adc cmc sub push ror cmp and jge decb adc fisttp fldcw push pop js xchg ljmp xchg cs sbb ljmp fildll repz push inc cmp (bad) fcoml ja ljmp cwtl sub negb out cmp repnz adc mov loope xchg push cmp dec pushf push aaa pop ss push mov hlt and lods int pop (bad) or (bad) xor call push dec aas ljmp cmpsl add pop cli shl xor out push adc in pop pop (bad) out popa push icebp movsb test mov cmp cmova out inc outsb xchg jnp dec pop xchg out sbb jne (bad) out push (bad) fldt cmp cmp lods add mov xchg push or rclb stos out das cwtl jnp pop mov sahf ret push hlt out add lock inc mov ficomp in imul loope mov es xor mov js fucomi dec xchg pop cli mov pop out xlat call ret sbb jp sub xchg push movsb push xchg inc out mov mov sub rcll jmp fdivl xchg out es mov je fs cmc mov push jno les fldenv push jae mov rclb pushaw ss scas fildll in pop imul out or and pushf aam xchg push out mov repz (bad) aas xchg xor iret mov shlb imul mov mov iret arpl addr16 into loop icebp mov xlat dec pop test fcompl ljmp out and mov rcl add cmpsb gs push add in out clc enter xor stos out hlt scas push adc scas test (bad) ja movsb xchg das push aam aad adc out leave (bad) mov aaa (bad) sub cwtl push add into insl ja out inc lret sub pushf cmpsl out les cltd push out mov fsubr add test xor inc or das out stos orb out xor sbb out sbb inc dec mov push sar out pushf mov out (bad) adc out test in pop sbb inc shr cmpsb inc pop xchg mov sti das arpl out ljmp jmp adc inc cld retw (bad) jb push pop int push in add icebp clc sub cmp and iret pop outsb je shr pop xchg xor cmp repz inc out je out into fbstp int push test sub jns out push mov data16 out inc popa xor cmc pop out sub (bad) adc maxps push out xchg in add jl out mov sbb push (bad) ljmp pop les pop test movsb cwtl inc out sar out daa jmp sub out fldl or push and push pop loopne sub xchg aad insl test out das push sub sub mov and inc rcrl sbb xchg dec loop xlat push (bad) negb mov outsb (bad) xor mov in mul inc sbb test sub (bad) stos adc pop lahf loopne cltd imulb push lock pushf cmp addr16 movsl cmp loop ja xor xchg pop out out xor movsb sub jg push mov pop dec scas (bad) xor insl xor pop ja dec ljmp jae movsl push bound sbb pop inc dec inc jbe pop push ret xor sbb jmp dec mov xchg out ret xor out mov fisubrl stos call mov adc adc cli and mov fbstp gs adc jb cmp movsl loope (bad) jp out sub fmuls sti or icebp out mov pop lods mov pop fiaddl arpl mov cmc data16 and pop jb (bad) addr16 pop ds and jne jle out in aaa pusha add mov xchg ja pop lcall and xchg out dec (bad) (bad) stos in xor push aas or jae mul push xor sub adc sbb aas (bad) mov outsb mov lods push movsb dec jecxz lahf aaa fwait mov mov xchg jno fninit inc stos (bad) jl icebp and out loopne cmp test mov ljmp (bad) jmp xlat add nop out cmp out negl lahf out sub sbb data16 sbb adc fistl insl ss out add repnz push xchg aad out cwtl push inc (bad) aaa mov inc pop int xor mov pop psraw lret or and jb shl out repnz clc add mov and pop pusha fisttp xchg jmp imul cmp dec (bad) out lret mov pop inc dec xor pop jno daa ss outsl stc jecxz ret out stos test iret mov cmc mov clc insb pop or sbb add push fwait call ds out adc loop xor push mov pop cmp inc ja sbb sti in out and ss repnz inc scas xchg movsl sub jle pop fimul out push mov cmp shrl es (bad) out lahf push mov fild pop cmp inc aad (bad) dec out fld mov cltd jecxz push insl push out xchg jge pop jl out scas in or pop sub loope movsl jge out movsb fs sub mov and dec repnz aaa adc imul mov rolb shll movsl push decb fadds outsb mov out pop pop or hlt (bad) and mov test or cmp sbb mov mov dec pop out lea and data16 out insb (bad) mov cmpsl lock and rorb or (bad) pop ffree xor mov dec xor cmp mull and mov aad out jge (bad) mov out fcmovnb mov stc iret movsl lock insl pop sbb out outsb mov xchg int3 in out sbb inc ret out and insb adc pop loopne in mov aad dec iret test (bad) sbb sbb and out gs rorl push ret xchg mov adc inc (bad) jae fimul rcrb rcrb sbb iret addr16 adc mov test out out push pop into sub cmp in inc adc or aas fcmovb fldcw sbb out xlat stc int3 push add cmp out add les out fucomp sbbb jbe jmp dec je (bad) and and cmp dec pop jo mov iret repnz in add ret (bad) mov adc sbb fimul ss dec pop addr16 fwait test lahf inc aaa lret xorl adc out (bad) repnz cmc push xor out xchg lret lds mov aaa mov out push rolb xchg out jae (bad) mov arpl mov out push pop jnp bound pop and mov xorb loopne pop movsl sub cmp test cmp xchg xor jo push mov mov sbb in jge lcall aad adc mov and sub out pop in sub sub xchg imul cmpsl add out fcomp aam add sbb add adc jmp add pop jnp test push pop adc es xchg pop fxch add enter or fnstsw in jge or lahf sbb xorl jae in sub and cmp in sub cltd pop lock cs out dec mov repnz pop out mov loopne mov xlat in push je add stos jne shr pop es xchg mov cmp loop jle lds xchg dec pop xor or pop lods fwait push sub mov outsl adc (bad) jmp (bad) cld arpl ss sbb push ficom inc fadd out nop mov mov (bad) test ljmp loopne gs ljmp pop sbb push aas loopne out int3 (bad) adcl or pop out pop mov mov out clc stos jecxz pop sarb shrl out push mov stos imul mov and (bad) fmuls jne test xor jl pop shr out insb push lcall out test xor insb cmpsl fidivr lods pushf loop mov ret adcb test adc adc hlt jo dec lock jb push inc psubb test push jmp leave (bad) jno sbb adcb inc pop mov add jmp pop jmp icebp lea mov sbb fisttp dec out in jp pop out enter push lods mov outsb inc int3 js dec pop jnp in push jmp out jno cwtl jbe pop xor lahf sbb add in cltd mov jmp sbb insb aaa into inc (bad) mov popa in jb movsl test push mov sub pop negb std mov shr sbb mov pop pop aam mov movsl out xchg sub push in movsb rorl out push cmpsl adc out inc in jb add out sti jp fsubl stos push inc out xor sub stc push into push (bad) adc adc aas js push std jb in xchg out test dec mov (bad) out pop xchg add out adc arpl and lret and in and inc arpl push xchg inc insb and cld out sub out (bad) movsl out sub push (bad) ja jmp adc mov mov add add scas pusha mov inc adc mov imul pop in out outsb cmp (bad) push in xchg and iret aad xor loop mov test adc bound xchg push mov enter cmp mov out xchg sbb stos movsl outsl jnp out push add push out mov xchg pop shlb loope (bad) out jp ret in sbb in add ljmp out ds push stc adc jo push cli insl das mov fistp flds pop mul addr16 pop rcr and mov sub test pop out int test out jne inc mov out cmpsl mov or xchg out xchg jl loopne or xchg or mov xor test (bad) jae sti scas rclb pop out inc mov shrb mov pop cmpb ret nop (bad) rcrl daa mov out cmp nop jmp js,pn mov inc int rcrl popa mov sub (bad) ret jb ja out cmp icebp xchg out (bad) xor adc jg decb adc push das sub push out mov xchg pop push xchg cmc daa aad imul mov inc cmc std mov inc pop mov lock int3 mov out lret scas sarb xchg out popa dec aaa mov out les mov out mov adc aas out enter (bad) adc iret (bad) or cmp pop mov iret psubusw cmp sbb xchg xor push add inc pop shll dec cld lock push loope sbb ja push pusha dec cmp in jo sbb mov xlat mov pop jae out push cmp es pusha inc (bad) mov imul inc xchg imul das (bad) xor in xor push mov lahf jle cwtl mov bound mov loope mov adc out inc xchg sub xchg in and shrb outsl out out sahf and mov aam fwait pop mov jecxz pop cmpsl and shrl cs out xchg test fstps cmp mov push test (bad) fildll sarb clc push pop out lock jmp adc pop das cmc add add mov aas inc dec jb aas out lods pop or cld push rcr pop nop lock jae or and xorb pop stos add (bad) std ljmp xchg testb push out jle fisttp jmp ret out das inc push test daa out int3 (bad) fsubs aad je and jne into sub mov xlat mov jmp out (bad) shrb imul lea pop push mov sbb out dec pmaxsw mov inc dec cltd jmp (bad) cmp enter dec jmp sub dec scas mov add in ja repnz test mov roll iret (bad) push mov fldz stos add push pusha pusha fisttp popf fwait cmp pop mov mov das std addr16 xor sub sub sub (bad) adc ret pop inc sub pop out pop dec test push fsubrl shrb out and sbb loope insl or call pop xchg loopne loop out jne push (bad) mov jmp push out mov inc sbb jo out mov std and out pushl psubq addl out outsl addr16 icebp lret and out sub push repnz mov out movsl insl sbb mov sub xchg xchg bound inc out and fcompl fmuls out jmp repz and ret and outsb add mov add mov test sbb fldlg2 shr (bad) mov nop mov inc (bad) lds clc jg xor xchg dec stos pop out xor test out add pop jl pop and out fdiv lock outsb adc int3 out add jae jnp sbb (bad) gs cmp lock out push pop les pop pop dec sub adc pop (bad) repnz in mov popf pop or cmp lret and inc out ljmp ljmp lods fsts push ja inc fdivs test add out idivl pop insb push mov mov out mov adc push mov cmpsb lock cmp mov out (bad) mov xor or pop pop das divl xor jb xchg cmp inc rclb imul loope mov cld mov xor out sbb into mov add adc mov mov push ljmp test lcall or iret arpl fsubr push lds sbb pop or stc adc push mov sub xor std (bad) nop aas and pop and xor add ret aas sub ret out lahf sbb inc add movsl (bad) test or jmp stos je sub push (bad) xlat mov add lods push sub int push data16 mov popa cmc das xchg in pusha setle adc icebp mov dec xor daa push lock xchg or xchg add inc out decl iret and ret adc jbe lret out test mov push fimull out inc (bad) xor out mov xchg lret sub fbld js mov fidivrl aas jmp pop sbb (bad) cmpsb mov mov cmpsl add jno ljmp jecxz add out xchg cmpsb jge pusha andb pop xchg dec lods shr jmp inc stos pop pop std cli adc push jecxz cmp mov out xchg test pop xchg call lahf fcoml cmp in jge stos add push (bad) jne in mov cmp or jle mov mov pop (bad) in jnp jno and sti fwait jbe leave enter sub xchg or ret sarb out addl mov sarl ret imul sbb push adc out rolb inc fisttpll pop call loopne loope fisttpl xor addr16 leave jle popa jmp inc in sbb adc jmp bound scas push rcll or (bad) out sahf test cld add ja movsl out inc fidivr push lods and data16 xlat daa or and xchg nop incb imul jnp in mov out mov xchg test loop shr movsb push jmp jnp and adc loopne fucomip mov lret movsb cs out in xlat sahf and out ljmp cltd shlb lahf xor sub (bad) imul and inc in outsb jmp movsl xor or aad dec lret adc inc out iret fisub pop cmpsb outsl jg ja es call pop stc dec std je mov inc negl movsl aad mov push xlat test sub cmp inc pop mov lret out xlat iret ja push adc mull push ljmp mov fbld push pop sub adc and push out and push hlt sub fdivrs mov and stos mov pop mov out adc push out test jno and scas inc mov pop lds aad (bad) push pop fsubr hlt pop jg xchg cmpsb test push sbb adc or sub jae aad inc fbld sbb jecxz adc xchg jbe (bad) mov ja into ljmp and stc lods out loop je popa (bad) stos cmp sub jp jg and push insb je lds pmaxsw dec js or mov jnp pop imul mov xchg loop mov jb clc out xchg lret dec adcl shll cmp inc mov (bad) inc out inc add or push fwait int3 out sub mov dec cmp xchg lods shrl sub sti rolb inc mov mov fadd mov sbb sbb jmp out xchg (bad) into jb out cs or mov out jno cli imul push leave and hlt daa cmp out shlb cli outsb mov sbb pop mul fsubrl sbb jae insb cmp push dec xchg scas out and xchg outsl popf mov ss sub les out (bad) jge adc inc xchg cmp nop inc loopne out sbb dec (bad) mov xor loop sub inc adc out mov stos add (bad) out jbe jg andb xchg shr frstor mov out (bad) push mov inc out mov or lods sbb (bad) fucomp mov call and (bad) push jmp jns add je ret mov and or jge pushf out stc push inc div insl xor inc add and das inc and ds dec loope imulb adc in jmp punpckhdq jae lods es jp push cs push out mov loop ja in out cltd bound mov test mov out push fs das int aad out and repnz out fucom dec rorb in in stc imul rclb (bad) icebp and icebp cwtl in sub cs adc push cwtl cmp xchg pop pop in rorb call jns mov sbb enter push iret rol decb or loop fwait jp popa pop dec pop mov or imul pop cmp and push movsb pop clc out test pusha jecxz pop repz push ret fwait jns imul push pushf out jle pop xor call cmpsl add enter inc jno lods out int3 cmp sub sbb mov push insl data16 mov or sub cwtl in mov mov sbb call mov dec out insb xor xchg ds loopne das xchg push push (bad) jns lock pushf iret jb shlb push out jecxz pop cmp jne push loop inc idivb mov imul pop fistpll adc out adc test cli push testl ficoml inc ficomp imul mov sub mov (bad) aam xor jmp sbb in jecxz xor adc aas or lcall out lret fnstenv (bad) dec pop add cmpsb (bad) repz and mov ja mov mov repz jmp aas xchg xchg (bad) dec lock (bad) pop pushf adc mov sub out xchg mov jl out test fdiv jp lea andl mov mov or scas cmp jecxz aaa xor xor in rorl pop in fsub dec aam arpl cwtl fistpll jo mov out stc push fs ror push shl dec mov xor mov outsl adc mov std imul jb gs mov or pusha out cli scas imul out ss mov pop stc mov mov insb call push jecxz xor addr16 out inc lcall out insb out mov out jns cwtl sbb (bad) adc mov out repz sahf outsb jp sar xchg mov mov lds out dec jge or inc dec push jg adc out and jns out pop int call out pop adc inc pop aaa push fprem1 mov jae sub mov test or jb ljmp sti outsl (bad) and call repnz fistpll arpl adc inc mov ret (bad) mov out (bad) mov xor test (bad) or pop lock fsubp inc push sarb out add out pop test shr dec mov popf cmpsb push out je cli and pop fwait sub xor das pop cmpsl enter xor iret test and (bad) mov out (bad) lods push out or aam out push popf add out dec xor loopne into rep dec push xchg adc pop sbb sub add (bad) out inc jg dec add in cld jbe jne cmpsb es fucomp add lret sub fdivr dec xorl inc test cli push out xor xchg and dec dec push test ja fiaddl xor pop int3 and out and fnstcw mov mov daa adc sub ret movsl call and insl clc xchg loope pop out lock xchg pop mov pop adc fdivrs push cmp jle (bad) push clc push dec mov cmpsb mov or hlt sub inc scas sbb or out outsb xor xor and xchg push mov pop lcall insb out and and mov setbe mov dec clc dec push int insl dec div out pop xchg loopne sarb dec out sti push inc outsb sbb add clc push out ljmp pop cmp outsb mov fisub lods dec in dec xchg add pop jno call jne ljmp pop mov or enter push cmpsl bnd jo aas shr pushf and sbb xchg jl scas sub (bad) dec xchg push insl daa cmpsb pushf push test out test bound jnp cwtl mov out pushl cmpsl scas pop mov push jge sbb sub std mov imul xlat movsb pop (bad) sbb out cmpsb out sub mov shrl shlb out or push dec mov mov lahf sub inc out call xor jne notl xchg out jmp loop loopne mov out call inc cli pop out fcompl and sahf arpl out mov popa ret or push or out ret jae lods daa int mov out fucom out int3 dec bound test cmp call adc xor dec cmp out adc std inc push mov out pop cltd mov sbb out in (bad) lock test bound lcall in and sub popa pop xchg xlat aas loopne or or outsl jg pop jmp js push mov ljmp adc scas fisubrl cmc test pop xchg sub xor push in pusha int mov push xchg ljmp pop adc out mov repnz movsl imul addb loop xor out loopne cld pop or xor cs nop rorb or cmovo or mov dec (bad) aas pop aam pop imul out (bad) pop mov out push mov cmp adc push xlat jp xchg dec xchg out add ds jnp mov out movsl fidiv mov out inc aad insb lods pop out pop mov jae dec lock pop add adc lcall stos out shl (bad) fldenv and and dec out shr ffree xchg out pushf fsubs jno dec sub push fldenv mov mov shrl xor jmp repz adc mov inc pop daa orl cmp adc loopne and push daa lahf out dec adc mov out and jae mov mov pop or out pop push push lods adc cmp out mov faddl out adc mov int3 push adc inc adc mov pop test lock xchg sbb stos sahf mov xchg mov ss iret push add sbb out out lods fwait mov xchg inc int repnz and shrl movsb rolb and mull movsb das sub jb dec in js in cmp add xor lret lods icebp loopne,pn (bad) push daa lock dec pop mov imul fisttpll add mov mov outsb and pop inc mov test lcall ds xchg out pop lock pop xchg out aaa and or out mov or les pushf mov xchg insl out dec jg in hlt push sub out mov and dec fsubrp xchg mov xchg cmp fnsave cwtl cld cmpsl dec out push pop out (bad) out in xchg and out stos push jp sub loope pop lret lock ficoml fcoms int3 jns sub fimul mov negl ljmp (bad) scas push mov in andl sub xor (bad) icebp ficompl pop in cmp xchg fcomps iret sub mov dec cmp dec int into in out rcl pop stos repnz inc es xor mov pushf jge out fadd inc idivb stos out mov mov das (bad) push inc lahf pop mov and imul leave sarb out negl or mov dec outsl (bad) hlt ficomp pop mov imul lock cwtl loop rcrl clc rol push xor out out repz lea hlt xchg out jbe popa cmc iret rcrb fbld push (bad) idivl push or out sbb mov into out jle cmpsb adc push and imul push push jnp out jmp insl pushf xchg xchg dec jb jo dec mov insb and jmp sbb repz mov xchg mov fnop out iret out flds aad jecxz (bad) xor std das dec sar je push stc and fisttp test int mov movsb movsb out pop lock jle inc arpl pop shlb and lret jmp adc test push push xchg and dec mov scas adc mov out or dec sbb push stos pop mov ret aas mov in out cwtl fldt test pop cs in imul xchg in nop pushl mov cmpsl mov mov pop out pop out js in dec out lods push inc cmp jl out iret icebp stc out outsb dec fldz ret push movsb xor shlb dec leave ja cs gs cmp (bad) adc out dec xchg outsb pop or mov or inc stos lahf mov out (bad) sti (bad) in jne mov test xchg cmp sar push (bad) lret mov je add xlat jbe cmp cmp out mov mov xchg xor fcomps lock inc jle insb mov daa (bad) and pop ds and out jle mov jne xchg inc aam (bad) xchg ds xchg out pusha xor ja adc add jb in add bound leave mov and out xor gs cmp scas or js sub in xchg sbb or push subb push fbld sub mov mov out es test mov cmp sub shr or push cltd inc fs cmp orl addr16 insb out cltd cmp int3 cli sub jge push decl push (bad) xor adc out adc push addl je out es sub (bad) fsubp out xor mov js daa in test lock out movsl dec in push sbb push out sbb push cmp adc lods sbb test add roll orl fldl cmp and ljmp int3 out jbe pop testb jmp jno jmp sbb movsb out out or adc (bad) popf jmp cmc test adc aas repz push out mov sub mov xor dec stc imul xchg add jnp scas enter mov repz xor sbb mov pop ljmp xor pop sbb fucomip pop jge shr inc cmp out in insb popa gs cli jnp cld (bad) xor scas loope adc (bad) pop inc pushf aam pop add in (bad) pop rorl jmp cwtl fwait out or add ds push out lahf jae dec adcl out in dec pop aaa xchg out movsb div xor loopne push daa (bad) fstpt stc (bad) in mov mov out mov xchg inc pushf stos jp test sbb push outsl dec in shr pop gs mov loope roll add out and in repnz sbb sub out je push jle add jmp adc inc jecxz sbb or sbb in leave mov cmpsl push ljmp inc (bad) out dec jns cmc xor movsb out xor adc out rorb nop ret push out and (bad) mov ret (bad) xor nop xchg push and fistpll and outsb mov mov fs aam in inc fsubrp push out sbb test ja push (bad) sbb (bad) cli push xchg in inc lahf xchg out cmp push inc out xchg mov out push mov movsb cltd sbb mulb fcompl and out cmp adc xchg ret jge out movsl add popf pop push test xor mov iret insb inc ja xchg mov jle mov out and add popf iret mov mov sub lods or aas sub popf ljmp xor int sarb out sbb add out loop (bad) mov push fdivl sbb add iret push ljmp mov fbstp mov cmc dec sub push lahf jg mov out pop or out into lret iret nop ljmp mov mov aam mov das add push jns inc and xor sbb ja jge cmpb out pop xor add or ljmp out mov add jle test out lds (bad) jb xchg stos pop mov push (bad) out lcall inc lods out lret cmp adc xor pop outsb xchg xchg sbb jmp add out pop jae push shr mov sub je xchg (bad) insl add mov jmp out inc push xchg pop sub pop roll sbb (bad) rcr fistpll mov cli cmp inc in push js mov inc mov out movsl push sbb jmp add scas icebp pop inc loopne repz xor push xchg movsb fucomp xchg int3 stos je aaa pop inc int out push dec popf pop scas sub iret dec xchg daa (bad) out pop int or pop dec pop add aas push add sbb or jg (bad) (bad) jl adc dec xor sbb sub xor outsb popf fwait add adc out jnp pop cmpsl vmovdqu sub insl jae adc shll pop adc cmp sti sar mov les ja in aaa add ljmp ret pop jns out shll mov out es mov in test rcrb sbb xchg arpl shrl out cli mov sahf sub loopne lds movsb jmp outsb mov sub jl into and out mov (bad) sbb fistp mov jge sbb out dec mov inc mov xchg pop fisttp (bad) xlat fadds insl pusha (bad) ss push clc jb add jle mov lds push fsts sbb push clc dec out or ret cmp nop mov and movsl inc dec push jp lock out jns ss bound out dec (bad) fstl cmpsb push xor popf push test mov mov out fidivl sbb pop mov daa je nop test pusha inc decb pop push pop xchg ret out adc sub hlt in pop jle lock fdivrl mov sbb pop xchg insb push adc inc (bad) mov iret ret pop out pop dec mov arpl scas (bad) (bad) cmc add cs cmp lahf pop add push xchg out xorb jae cmpsb xchg mov (bad) stc addr16 je (bad) ss call out xlat jmp iret jecxz pop mov lock fucomi es sub (bad) icebp lds push cwtl mov insl popf test outsl sub (bad) loope adc cmp movsl addr16 inc pop stc or dec pop out notl or xor cli mov out int3 push movsb sahf push out outsl lcall pushw and and lahf jp pop (bad) sahf pop icebp mov mov mov dec test mov out and push sub (bad) xor out (bad) shrl pop mov pop rorb fistl mov out icebp scas jae sbb fstps imul out test pop xor jae (bad) cmp out aaa imul stos (bad) jns shrl out mov test sub aas push cmp out add pop add es out outsl fsub mov loop mov mov or inc mov pop (bad) jo mov out daa aad cmp insl mov jg jmp out lahf jns bound xchg sti enter ficompl insl je push popf shlb out cmp jo push out mov mov add mov outsb and push pop or xchg dec and ljmp (bad) jp add pop push stos std lahf xor out or pop sbb jle xor stos (bad) ljmp in inc aad out push int3 pop testl lock aam mov sub cwtl in loopne lds push out push sbb mov out jbe adc lahf es out pusha pop in and xchg movsl ljmp ret xchg imul jae mov out sbb sub mov out lret jns and fsubp fs aad mov dec cmp mov push adc jmp cld lods out push jge into mov out fldcw dec fisttpll add push test inc sbb mov xchg les ss iret mov insb jo add fist in ds cmp test xchg pop stos (bad) jge das insb jp xchg in test push repnz pop lds mov jnp or test sbb or out inc (bad) fdiv fildll (bad) push add add out int jp aad xchg inc iret js cmp out rcrl aaa xor mov or and or (bad) mov out xchg (bad) push or adc adc aaa aas sub or adc lret inc ljmp mov test mov adc shr insl pusha cld cmp into scas xchg xcrypt-ctr cmpsl lcall mov xchg jnp jge test (bad) and xchg out dec jbe loope add lahf out xor jl hlt dec sbb and shll mov out push das mov mov (bad) mov jns out rclb lea into xchg lret sub jo fmull push sbb fiaddl popf push out out mov mov in loope sbb pop and push mov sti lds adc std jno adc icebp es adc cld adc inc (bad) cmp fwait clc out sahf shll out or jnp sbb movsl out aad lods and test in sbb dec add ror mov out jl nop shr out (bad) stc stos xchg inc sub add jae (bad) mov out or dec fucomi mov ljmp js fld mov mov out lds and out out jb inc mov int3 xchg in shrb mov shrl scas push dec mov mov enter jbe out push inc add xlat dec or aas inc mov mov lcallw and out mov mov push out pop loop cs iret push gs sbb cld icebp dec into cmp push loop xor dec out or outsl arpl xchg dec sbb xor ret xor fimul sbb mov inc or addr16 pop xchg xchg mov out lahf push mov sbb pop add ljmp data16 and sub lds repnz xor pop xchg rcrb push les jmp mov iret add pop cld sbb cmp test mov repnz dec outsb mov imul movsb dec ret (bad) cmp mov jg mov mov decb mov lods imulb out loopne sub push push or mov jbe add lods inc rcrl out imul mov and shr fmulp jnp push out push add shll mov push bound mov sbb daa rolb cmc out out sub xchg adcb je push (bad) stc mov sahf dec (bad) out lret pop mov cld pop movsl sub (bad) mov mov ss mov fs out into xor adcb inc lds pop lret mov or inc sub inc ret (bad) lock (bad) aaa pop out dec shrb and out push inc add out or sbb in pop (bad) jge dec mov or out sbb arpl out pop js mov out push fistpl movsb pop xlat cmpsb mov sbb jbe fldcw sbb pop sub rcr es into ja test push fisttpll in addr16 sbb xor out cmp lods add in ljmpw sbb (bad) xchg sbb dec push mov add and (bad) push mov icebp or lret js popa lock mov gs pop push push push test jno ss sahf pop cltd lcall mov cmp sub outsl jg cli pop movsl sbb and ror sbb rcrb out pop data16 cwtl out push enter fistl pop and jecxz xchg out je inc mov lods les out lods fmuls xor push adc jno arpl ds rorl jb or or out dec stc mov and and aas sub frstor xchg sti jb notb aas pop adc pop dec xchg cmp out outsl fwait scas in jmp in (bad) iret jp (bad) arpl add push scas pushf xchg out pop add pop int3 pop sbb out xchg (bad) pop mov subl xor mov push inc jnp aaa fs fcomi xor jmp sbb ret sub push jp lcall or push inc pop mov sbb mov paddq lds jmp out mov rcll xchg call enter inc imul (bad) repnz out mov pop dec dec int out mov into mov out add lcall pop sub (bad) out leave int xchg lods rcrb jbe (bad) jae pop mov out push jle loope mov out jbe sub iret mov xor arpl and xchg sbb scas pop push stos scas test adc daa setb outsb pop cmp xchg (bad) out sbb sub sti out push jbe inc insl xor out and in sbb movsb les jne push rcl xchg xchg outsb in out (bad) daa mov mov out sahf inc mov adc imul addl faddl lret dec push out cld mov mov lahf pusha xchg push mov sbb cli out leave mov prefetch xchg out pop add jbe and in es and jp xchg push mov mov lods jb iret outsl mov inc rorb push xchg jne adc xchg imul int3 pop into insb cmpsb mov imull lods cli out xor cld rclb cmp sbb (bad) xor fcoms xchg ljmp sub out xor mov out lcall cmp mov xchg out int3 mov (bad) xor push stos xchg adc sbb lds imul inc call out nop or jge imul outsb mov call sbb fbld (bad) sbb loope std test out pop (bad) testb cmp mov pop sahf jno lret clc fwait (bad) call maxps jmp fs or call push adc imul pop out aas dec pusha rolb inc inc cmpl sbb sub das out (bad) adc pop jnp popf rorb jmp out pop dec xchg adc and cmpsb jp push (bad) or sbb ret mov mov dec shrl stc push lcall insb mov loopne add loop and (bad) or loopne fcomi xchg cltd movsl pop call add or and push xchg fdivs jmp clc fist jns sub je push inc gs in cld aam out push scas mov out shrl ds cwtl pop or jmp mov sbb adc cmpsb iret mov out xor test push xor imul data16 xchg lods xlat lds cmpb add cmp sbb out or aam out push call sti or mov or inc push push out adc pop movaps adc les or rorb pop mov xor imul stos mov ss mov or fsubp call in cmpsl adc js out int test mov push insb ret push or out jge dec inc popf je stc out add dec or cmpsl into call sub mov cmp inc jbe pop out or (bad) inc adc cmpsl iret adc hlt or sub or add xchg sahf adc ret xor add mov fildll dec add mov sub mov ret test dec jb in cltd mov mov mov lea pushf or frstor or sub xor ret sub (bad) ja out out imul roll ljmp push xchg das jp pop sti pop in add fsubl push in out imul out jo je inc dec ljmp mov push lahf clc stos sbb mov push jns jle arpl insl enter sbb jl jnp push inc dec or bound mov cmp movsl jne fmuls fs jecxz out hlt mov push jnp push leave xchg imul mov (bad) popf out test cwtl pop jb,pn or mov and (bad) jae out inc push ljmp (bad) push clc out in add and lock jecxz movsb ret out or dec push jle add cmpsb nop and out (bad) aam mov popa scas inc fucomi popf sarl mov push cld push out cwtl push pop in das test out std loop outsl pop jle mov bound and es mov aas inc jb movsb popf push (bad) loop rcl out mov mov aaa mov enter test or repz pusha add out add xchg mov ret aas stos xchg or ljmp cmpsl (bad) in inc in adc (bad) jne pusha out dec jb xchg push mov add out mov cmp pop popf inc (bad) adc push ja cmp int enter out mov scas icebp cmpsl lretw mov test sahf mov out mov mov push dec insl scas lods int out into add test add andb and out jb push adc mov test je push sbb dec out nop xor jge pop pushf aam ja cmp aaa jp (bad) mov inc out xlat scas je (bad) cwtl adcl dec into or imul ljmp pushl das mov fcomp out or push into daa out lock jnp and or std sub pop xlat out push jle push pop enter idivl sub cmpsb out je mov hlt ds inc (bad) push sub mov xor loop dec ss sub sub cmp rcrb out jbe pop bound sbb out pop or xchg mov out mov cmpsb push jbe adc test mov sub push (bad) out mov (bad) (bad) (bad) (bad) fcompp out xor mov mov pop adc jl ret out push pop add cmpsb lods out mov push aaa (bad) fisubrl cmp adc out add mov out inc fsts push cld movsl icebp pop (bad) imul rcrb push rol daa sbb lock jne insl (bad) out pop rorb sub pop fs jge fstl pop fwait xchg out mov xchg icebp pop pushf flds out lcall cmp es shrb test out ret dec sar mov pop repz lahf lds sbb pop enter out test cmp push push xchg out mov clc sbb lret andb dec or jl ss loopne out out int3 (bad) sub aaa push xlat mov lcall rorl inc out pop scas xchg sarb mov insb dec out subl rcrl pop mov in bound jbe iret pop and out mov adc pop gs stc aaa or mov sub loop fnsave sbb test jmp fisttpl push cli pop dec lods loop bound out jnp sbb mov jmp in fcmovnbe mov sbb push push dec ja jns inc or aad jnp sub mov out or lock repz ret out into fimul dec je jle push out cmp sub iret xchg sbb test stos aad or rcrb arpl cmp inc lock je in fsubr lret bnd or out (bad) xchg fcoms jmp cmpsl add out xchg mov xor pusha push out and cmp fistpll lret insb out out mov pop push xor fdivp lea or jmp pop out enter fsub movsb sbb into jmp xor jmp mov mov jne int3 mov mov pop fcmove movsl pop add jl mov out nop mov mov data16 xchg adc jl scas mov lds ss imul adc dec out fistpll daa mov test pop (bad) jns,pt push adc and (bad) movsb in xor movsl cmp mov or pop sub inc shr cmp lret stos (bad) mov out call jecxz pop insb add scas shrb test loopne xor adc push ret push pop add sti ljmp xor adc lods mov out and out out leave xor loopne inc out imull mov movsb mov push ret dec sub out mov pop hlt (bad) xchg out mov mov nop inc push out ret out dec pusha test inc call lret ljmp jnp jmp (bad) std mov cmp pop fcom cmp xchg jecxz into pop and test pusha jnp jns jmp sub mov add stos negb lds xor inc rcrb adc insb roll pop shr aas stc mov pop pushf jo push lea sub adc faddl rorl pop mov int3 (bad) pop repz mov out add jnp scas or and cmp in out pop stc ja out mov mov dec mov pop xchg inc xor jecxz xchg xchg push insb mov out int jb pop jnp and std jmp fidivl push mov pop xchg mov inc out nop cmp pushf out adc xchg movsl ljmp mov ss jae js into cmp ds inc flds pusha add repnz fisubrl cltd adc into cwtl and jmp push sahf mov out xchg sub cmpsl or lea pop ret out mov mov cmp je mov jns jle lahf xor add (bad) pop test jmp jno loopne mov mov cmovb fs sbb adc dec js lret int nop aas fdivrl (bad) repz in inc sub imul pushf adc inc out sti and mov mov aad cs enter cli pop or aaa jne pop cmpsl jle out les xor imul in push inc es pop mov sub faddp dec leave orl in push sub arpl (bad) out sarb fidivr xor out insl adc out cmp iret int adc jmp push fisubr inc std mov pop mov call out add xchg sbb xchg pusha lahf xchg out inc xor addr16 cmp mov hlt xchg pop fildll jmp call clc mov loop adc data16 xchg mov fbstp out push pop dec mul sti xchg mov mov test mov stos xor inc push loopne or push jns iret (bad) in leave out ds dec jp (bad) mov sbb and movsl rcrb adc lock inc out out cmpsb sbb adc jbe out and movsb xchg fcmovb das mov stos mov or cmc sub pop xchg mov pushw ljmp or pop shll or rcll lret imul outsb arpl xor (bad) rcrb loopne int iret sbb cli mov call and jbe shrb sub or (bad) jne cli sub mov sub mov fucomip mov icebp sahf cmpsb enter loop sub pop jmp or lahf out ret in out pop data16 test jg stc sub and jmp out fldl cmpsl (bad) xor mov test sbb pushf mov sub scas pop out sub stc xor test push test sbb hlt xchg jmp pop popa fldcw mov outsl out or out jne mov repz iret fnstsw in (bad) sub fwait out jnp leave nop jmp inc cltd fisubrl movsl shr mov add pop std push cmpsl add sahf push and sub and adc mov add mov or mov mov fs lock out mov test out xor xchg push xchg insl scas (bad) rcrl (bad) out mov adc call out push or jmp int imul hlt data16 add testb or in sub push push and cmpsl fild out bound xchg push out mov inc dec (bad) (bad) (bad) mov mov adc xor addr16 out ret iret mov mov sbb pop repz jno push out mov lret xchg leave sub int3 jb iret (bad) mov (bad) insb ljmp in cmp in and addr16 leave fs out mov add out mov cmp es dec out pop push add dec sub out and and out add jbe nop popf (bad) cmp test subl out mov mov mov xchg popf out xchg sbb jns xor out xorb jmp cli jle or cmp nop mov cmp mov ljmp out mov xchg add cmp ds mov sbb dec pop in imul sets push jo test repz das nop mov push mov dec roll xchg dec enter mov sbb or cmp mov adc repnz ljmp jb,pn xchg fild fs js rolb out es push repz fldz adc lret hlt bound outsb out subb jle xor cmp push out xor ljmp add inc xor test call stos (bad) adc xchg dec loop sbb ret inc fbstp inc or jbe sbb movsb pop out adc std aaa jne jmp fcmovne or call cmpsb dec out or xchg fistp xchg out in int3 cmp mov mov and pop pop cmp xchg add out fidiv jbe or sahf ljmp pop mov lock (bad) xor adc mov cmpsb mov lods int3 dec adc (bad) insb sahf jle (bad) imul test push (bad) mov mov mov call scas or pop xor or repnz aad shl cmp push cmpsb jb outsb fdivrp addr16 xor sub sahf (bad) push daa ret push mov data16 push ljmp push loopne sbb sub dec repnz xchg dec xchg out aas leave dec lock int (bad) out sub (bad) enter cmp mov jb inc push jp fucom fdivl sub scas out xchg cmp lea inc or ljmp cmovge out (bad) mov loop lahf inc fcmovu adc out out mov out js ds test iret pop call loope aaa add xchg fsubs enter pop sub mov adc adc int3 js movsb out subl adc sbb ds ja scas fldcw and jmp mov pusha imull xlat dec push outsb out jo in cld int3 cmp push push adc lods jmp mulb xchg out mov ds mov out adc (bad) cmp pop out aas mov add add xor iret out push pop xchg repz (bad) cmp push por aad pop dec pop stos daa jmp jne ret dec lock movsb insb jae insl adc out je enter push mov cmp cmc inc lea out add push adc sbb dec mov mov xchg data16 out cld mov icebp test test cmp mov xchg push hlt mov mov pop bound adc out sbb mov sub cmpsl pop and popf or ret nop adc mov imul cmp jge out jnp out pop cmp test xchg fnstcw nop jne mov out int3 and and adc aam and shrb cld jg mov clc adcb pop loope lret jno mov ret mov xchg lods out inc adc inc xor push inc out flds vpmaxsw jb insb sub in shlb sbb mov out insb insl dec test pop and fs sbb stos inc mov std das mov jp and add outsb clc xchg mov sar out cmp dec xor mov or popa out dec inc cmp mov jne inc stos or out add loopne lret xchg out mov rep mov sub out mov loope xchg or mov adc out fmul (bad) dec cmovns fs jb xchg xchg push mov imul cmpsl out dec repnz jb (bad) ja js out inc (bad) dec push mov negb outsb jecxz out push cltd inc sbb mov into addb out mov nop int out mov pop inc ret loopne aaa loop outsb pop test fwait out pop movsl fldl in dec dec out daa push lcall add pop add push out dec cwtl lea cld jae and xchg test sub mov repnz push push out sahf push dec cmp mov sbb js out inc mov jns and fisubl loope xorb jno cmc xor mov jmp jnp out call and lods ljmp btc fwait scas je ljmp cmp out pop jl xor add cs or movl in lcall seta xchg jg pusha cs outsb xor std jae nop dec scas sbb out stos mov int out aaa push hlt clc mov mov pop mov pop mov bound aad out loope xchg in imul test mov pop gs add aaa cmc bound in (bad) out (bad) inc cmp jp lea (bad) popl dec xor cmp test xor pop popf jne std addr16 fcmovu out fmulp lret out and orl push cwtl ds out xchg xchg imul out fdivrs fmull push xlat stc jecxz decb jno insb and jb notb movsl push mov (bad) test sbb inc xchg adc rorl pop pusha test or scas lds test fs xor push or popf and pop jae (bad) ret ljmp out fwait scas xlat xchg mov cmp add icebp aam sub xchg mov rolb (bad) cmpb loop mov mov dec out mov iret inc orl test xor pop (bad) (bad) std andl mov in shlb iret addr16 ret add mov mov xchg andl out lret testb stos ljmp arpl lahf xor pop sbb notb sbb outsb mov sub shlb sub and pop jle roll ret out leave into pusha jae lods outsl test inc shll fs outsb adc movsl sbb pop in (bad) in out bound lods ljmp fneni(8087 nop out jmp dec push out cmpsw sub xchg pop cltd (bad) adc fucomi pop sub dec xchg jmp xchg scas mov out out and adc jmp or popa jecxz ret pop mov push xlat mov out ds sbb lahf out popf or and xor out out jge mov push mov mov mov pop (bad) cmc out out add add xor iret movsl cltd and idivb out or iret cmpsb nop jg out mov mov add and jmp cmp adc cmpsb scas push adc out jnp cltd pop addb xchg out mov scas int3 rorl repnz insl push and out outsl jmp add movaps dec pop dec or dec xor push cmpsb arpl insb aam out or xor shll jg loop or cmp lea sub out clc push cld idiv ljmp fwait jno cltd adc push lds into ljmp adc or bound jns jno adc pop fist and or pop and js repz out add mov or xor out aas lea mov cmp cmc mov pushf mov lea xlat repz sahf mov mov in xchg pop lcall xor aad into das out iret dec xchg cmp out daa icebp and lret shr sbb je ret out mov subl inc and pop das sub loope outsb ljmp cwtl and mov pop jns mov popf pop cmp test mov dec push sbb cltd mov mov mov ja sub cwtl out movsb xor inc (bad) push push cmp pop in out or loop out incl (bad) hlt mov in xor mov cmc jmp shlb (bad) ljmp je sbb add out push add outsl jae mov sub imul int3 mov or mov or mov icebp and ret stc out mov mov or mov lret leave aaa loop jle test std mov pop out cmpsb inc outsl pop and and pop mov push push enter cli shl or xchg jns ljmp mov sbb dec jl pop pop out je pop lock mov leave loope (bad) add cli mov enter lods jo stos loope jnp (bad) cmp out push or out xor jg in int cmpsb test push sbb out mov fildll (bad) pop fidivr pop out mov mov (bad) lss into jg,pn out push cld jp int3 out jbe repz push in push sub (bad) xchg pop ss push test mov cli adc sbb stos sub mov (bad) aam cmpl push pushf or adc out push mov stos xchg fist into inc loop sub mov jae sub aas data16 popf sbb sbb fstpt out inc loope push mov in es fistp scas not out (bad) mov out jle inc mov sub jbe popa shll fild cmp jmp mov jb aas insb jg cmpsb in icebp int (bad) mov mov pop in ss jg mov fs out xchg xor adc jne ret std xchg and (bad) jmp lods dec cltd clc in lahf aam push xor je or outsl jbe shlb (bad) mov int jp adc call push rcr loope mov mov cmp lret push aam movb xchg xor mov in (bad) bnd int3 cli out std cs xor loopne nop out or jnp pop adc ffree data16 out mov aas and cmpsl xor cs sub (bad) (bad) pop wrmsr inc in into out in insl pop test cmp or test ljmp mov fsubrl push pop and ljmp mov cwtl popf pop (bad) mov pop andl sahf insb jmp aad or std cmp ret or je mov mov xchg out adc cmp dec out ret jle icebp jne in dec xchg popf jo pop out mov and sub int3 aam pop cmc mov and push pop shr jp xchg out test fiaddl ret out stc or jmp loope repnz fmulp shr addr16 sbb mov sahf push mov and pop sub mov fbld out leave push movsl sub sbb movsb and fcmovne and cmp sbb es xchg out addr16 pop inc cli test or in sub repz test mov pop je jmp jo adc jb rolb js out pop in mov and test mov pop or pop jne xchg clc inc fbld fucomip imul xor and sti xchg out fdivr add ja pop push insb add out jo jmp sub out jge addr16 jbe out addl push cli mov out mov xorl out mov xchg inc fist push pop or es sbb mov fdivr jns ja xchg imul lock mov and cmp push out mov arpl jecxz inc or cmc out rcr cmp rorb loop xor cmp dec iret lods xchg fucomp push xchg pushf push add stc movb add insl dec push frstor adc sbb and lea xlat mov cld ds ljmp jmp sahf pop inc or fwait pop in std imulb out add mov mov (bad) sti insl fildll in lods hlt sbb inc or jp inc inc dec xlat out inc and out test mov cli xor or int pop out mov cmp pop fimull jno outsl ja mov into out jnp insb sbb cs loopne mov sub int3 mov xor in shr dec dec pop outsl lods (bad) iret jg cld cs sub adc pop scas out js push pusha mov mov add pushf sub data16 adc mov out fimul or jecxz js push dec lcall jp xor (bad) mov or ss xlat out jmp out stos test xchg xchg ret out mov mov dec mov in dec out clc imul xor out adc sbb or xchg imul inc xlat cmp sub sbb sti out sbb pop cmpsb hlt out fcomip inc sqrtps xchg ret fcomps sub sub push sbb pop out mov mov dec jecxz out xchg rcll aas sub ds out (bad) sti cmp dec mov in sbb lods (bad) mov xor out inc iret add gs ljmp out sar add pop cltd je lds push jo in jns jp iret and mov cltd or lahf jge dec pop pop jmp mov out (bad) iret clc andl mov inc out mov iret sbb outsl sti outsb stos xor hlt sbb shll pop lock into loop cmp out fwait pop pushf (bad) scas and int (bad) mov in in insl mov movsb sub or jmp popa cs mov (bad) mov sub adc loop in call sub cmp out add dec fwait xor inc push clc fild fisttpll or sbb in call (bad) out jnp jmp sub negb out arpl cmp inc mov and aam aas xlat xor or xor popl fmull adc mov out pop push cmp imul out imul fsub sub mov pop ljmp dec out xor mov jl out push mov pop stos out xchg ljmp out les jno fwait aas aaa ss out nop sub adc out push or xchg cltd sbb in out clc push cmpsl out jl (bad) adcb and adc in and imul push mov cs push mov jnp push insb aas aas and (bad) popa shlb jae or lods jmp sub dec jp and faddp out pop adc mov mov out stc or push out bnd test mov pop test lret lcall out (bad) push mov dec mov mov add pop push xchg cmpsl push cs fdivrs fucomip popa mov cmc sarl repnz out inc test inc pop xchg cmp adc pop mov movsl fsubp sti loop and cmc out jb mov subb sub std out (bad) mov addl mov les push xor xor or xlat mov ret out fdivrl out inc sahf inc loopne insb lcall push mov in pop xor out adc mov or mov imul jp dec (bad) adc out pop shll hlt push xor stc lret fdivrs adc fnstcw out cli shr fnstsw out or push inc cmp push out (bad) xchg aaa das dec mov call rcrb xchg pop or mov shr (bad) pop sub es cld pop fnop ret inc icebp adc nop inc out and pushf lcall pop (bad) clc sub cld adc (bad) pop jne lds mov push call mov sub loopne sub jnp and jl xchg out mov out in push out sbb push sub pushf call mov out int jns aas mov adc mov fldenv out pop mov adc sub add rol inc in (bad) inc xchg jnp lea xchg mov imul dec fidivrl addr16 clc push xchg mov test out int3 jecxz dec jp push jno dec fsubl jae pusha out sahf mov jne loopne (bad) ror or js into xchg fcmovb decb punpckldq sti in lret adc inc pop in inc out cmp (bad) xor in insl pop dec jns push jmp mov xchg and mov decb sbb outsb cmp std popf test in sbbl aam push arpl mov inc mov xchg es cmc fs test pop push lods out pusha jbe movsl js pop adc shrb int into mov inc push out or lahf and ds pop aaa mov in adc out pop sbb sbb out add mov mov jp adc cli fwait psubsb jmp mov jns shr sub out (bad) push push gs fs sahf and push mov pop clc jmp aam cmpsl out cwtl cmp in test out cs rorb clc mov arpl push push lahf xor out cmp push out pop or shlb dec out or mov mov out jae es out movsl dec into mov out imul push insl fs mov (bad) ficompl loop add dec out xchg cltd dec nop movb out enter adc insb lret out in sbb pusha dec scas xor mov cld mov rol out jno lea and push (bad) in cmc xlat scas jne jno outsl aam aaa sub in out out or loope or cmp fadds (bad) inc lret dec mov pusha xchg jne movsl pop mov gs adc jle popa into out sub hlt jnp out push cld mull imul add jbe sahf pop mov shr mov in (bad) jmp jnp out add incl mov mov adc cvtdq2ps in add push in pop cwtl out aaa stos add push cmp leave out mull call fwait jg js jge (bad) loopne mov out in or adc lret (bad) stos pop cmc and outsb mov out jne dec inc (bad) jae dec out es aaa scas pop ret xlat mov jno sub (bad) vmread sbb stos and mov jmp test fistp aam adc xchg out dec pop int pop js and sahf sub lock in adc sbb je or (bad) nop pop ud2 mov in dec cmp jae xchg sub pop inc cltd jns jp out jbe out inc and cmpsb pushf cmpb and loope lods data16 xor outsb jo or addr16 add loopne jb fcoml adc scas (bad) push shl xchg into or sub dec adc dec and imul (bad) out loope lea cmp scas push or das xchg inc adc out aad adc add pop jl std int notb out (bad) cmp out int3 stos and out jle stos lods (bad) xor jecxz lret lock negb loope mov outsl push lock xor cmp xchg sbb bound lock and adc aam mov sub pop fnop in cmpsb dec mov and hlt loop rcll cs (bad) rorl nop xor dec repz in add shrl push sbb fdivrs and je test (bad) adc imul pusha cld sub inc out rol (bad) repz cmc in out (bad) jl mov stos out xchg sub (bad) jno scas xor push lea push in mov cli daa pop sbb flds cmp jge out push int3 scas test xchg shll lods xchg mov push enter outsl lock xor xchg stos addr16 out xchg mov scas fcomip mov bound sbb push pushf int3 test sbb or popf dec lahf xchg jmp pushl cmp stc xchg in and pusha out xchg sbb sub fnstcw out push xchg inc add pop out xchg outsb (bad) pop dec mov dec loop pop pushf cmpsb (bad) xor sbb inc aad out push mov xchg out xor pop add jne mov out or out xor sub mov dec (bad) mov ja out roll push xchg push cmp repnz pop in cli js inc incb or jbe (bad) outsl add inc daa movsb out imul ljmp jns (bad) or sub fiaddl out neg add and fucom out iret adc xlat rol movsb ret cwtl push jmp enter lcall insl (bad) stos or rcr mov vmread adc loop nop aaa iret or xchg test ret sarb aaa push loop sarl cmp push (bad) pop add cs out push push lods add dec jnp jecxz mov mov shrl call mov loopne aaa leave push lahf out aas inc pop fbld ret scas enter cmp (bad) push push aad jle das fdivs pop mov loope mov xchg xlat pop mov addr16 ljmp nop out add sub xlat dec cmp xchg out test adc out sub or fisttpll loopne cmp inc adc nop inc xchg sub mov lods add dec pusha cmp iretw adc mov call mov inc inc ljmp mov insl outsb sahf iret xor loope jge (bad) (bad) icebp hlt xchg bound pop or (bad) jo inc push push das adc cmp and es push or movsl dec scas imul (bad) rcr mov jnp lds xor pop xor stc adc sarb popf insb loop and (bad) mov fwait mov xchg in shr mov iret sbb lods addl cmc inc jecxz aas sar and mov ss pop in iret insb sbb push out stos xor adc sbb mov mov ret outsl out out push sub adc les jge icebp push aaa lods and jbe jmp or inc lret pop (bad) lods out mov xor out bound loope and cmpsl out (bad) movsb ljmp sub jp xor mov out shrb imul mull and imul push jnp out sbb sbb int push (bad) je ds sbb push sub in popa loopne mov decb jno loope add pop sbb addr16 outsb pop pop inc lea popaw add pop stc lahf mov jmp out ret mov out stos cld mov or push loopne imul push pop inc fdivrl sub out loope pop mov popa mov xchg pop or pop add cmpl stos insb or or and push cwtl leave cli mov cmp mov sub push out jnp pushf xor pop into mov sub or std or jns scas sub cmpsb (bad) and mov lock cld push sub data16 lahf xor cmc lcall ret lods es cmpsb mov xchg adc clc push mov bnd sub adc in fdivrs jb xchg and out xchg xchg jecxz mov mov sub sub mov push xor cli aad mov mov xor inc lea add pop mov aaa mov cmp in pop scas andl div loop jb out lds lahf aam dec pop pop xchg outsl pushf jecxz in inc out push rcrl push mov (bad) js or or (bad) out out sub in dec shlb out mov jl das out test lock pop outsl push jb aas xchg inc arpl pop ljmp setns out sbb adc arpl jmp dec fstps adc incb lret push insl mov jbe dec scas imul outsb or pop (bad) mov sti js lods dec out inc xor aam sbb (bad) push xor sub dec out fdiv icebp adc fwait mov pop mov and out sub popa mov or cmp popl pop out out repnz or sbb push cmp xchg ljmp rclb mov inc inc add out (bad) les rcr shr push inc icebp sub jo out lret test pop in nop mov cmp push pop push dec inc out ret ss inc ds lret or outsb adc sub ret out lea fucomip clc (bad) popf mov ret out or adc mov es mov cmp scas fistp lea jecxz cmpsl fwait es out incl cmp out int3 sbb pop out je jle cmpsb xchg and jno roll lahf loopne jo mov ljmp mov jl out (bad) cltd xchg or scas dec movsb mov jo nop cmpl mov jmp pop xchg jne adc inc outsb sbb rclb movsl (bad) fidivr out and stos cmp pand out mov test jl or fucom (bad) ds (bad) out pop jnp xchg add push test movsl out xchg push jl jae or (bad) daa and aam pop fxtract rcll push jae jno sahf mov out fdiv roll sub iret push and mov dec call out les cld out (bad) aam fildll dec ljmp out popa sbb xor enter mov stos das je xchg out out in outsb mov arpl orl adc rcrb pushf out mov mov dec lret test sti aam hlt in out adc push in jmp inc out (bad) sbb mov lods push mov mov imul scas xlat mov pop pop fcmovne in or jl xor mov les scas adc movsl sbb lahf loop push addr16 dec out data16 in pop daa (bad) pop (bad) pop int cmpsb out push push shrb cwtl jo rolb fdivrs out mov inc into cmp scas cmpb test fistpll lock iret and adc (bad) xchg sbb pop jge scas dec lahf int out out jg jmp movsb adc (bad) popa sub mov xchg jmp add push movsb ds out mov add add cmc adc int3 out (bad) bound add and popf fidiv mov cmp addr16 push pop enter jae out sub jle out cmpsl push add lret xor out lds mov in scas mov sbb fisttpl dec push adc sub or sub or pop adc enter cmpsl out (bad) sarl les scas sahf cmp pop inc pop shlb in idivl sub pop decb dec or movsl cli cmp enter test ss (bad) and sti jmp pop add nop push pushf fsub cmp pop mov sahf (bad) int dec roll jecxz out into jns scas int3 mov loopne repz push ja movsb mov movl dec mov mov pop test push jbe and out push adc mov into or loop add call mov (bad) dec out push mov xchg sbb rcll out cs xlat fistp pop dec lock scas mov mov mov push ror lods out leave daa sbb inc in jge fcoms (bad) pop sbb in or push std cs add mov movsb xchg mov mov xchg xchg outsb mov lods xchg xchg push (bad) jecxz out cld mov add or rcr sub sub out xlat in pop aam das test jg lods dec pop pop pop cmp mov rcrb inc icebp aas add test cmp pushf mov arpl das fcmove cmc cltd out mov stos jl (bad) jo out mov adc out repz dec mov inc pop loop xor das adc out fildl xchg sub xlat out lret out cmpsl pop fidivrl adc jns fistp xchg xchg out sub subl pop jl jecxz int3 pop mov mov ss clc dec mov aam gs mulb xchg out js and and rcrb (bad) mov mov std pushf push xlat out mov jne out jle push sbb pop in adc out and push inc out xchg out fdivl xchg pop lret shl ret xchg out or jmp inc sbb out push mov out cltd sub xchg lret (bad) es push or ror (bad) jg lods add out add lcall inc cmp adc fmul ljmp and jmp lret out (bad) mov out aam xchg fbld test sub (bad) cmpsb out pop xchg scas mov (bad) jns sbb xchg call icebp out sbb je xchg iret lret call pop fldt (bad) repz add xor and mov pop cmp js cmp das push arpl out mov fisttpll fsubr jl lock pushf add daa ss outsl das lods dec mov out jne in jno push (bad) mov cmpsl sbb and popf (bad) lods xlat out pop jg (bad) loope pop pop out jp cmpsb xchg push je fucomp adc mov repz mov shlb inc xchg out test into out test jno iret out loope and int out or mov lods leave fisubl out iret mov movsb xor lods sub addr16 cmpsl cmpxchg jae cli loop xchg jg pop shl aam pop mov sbb xlat out int3 inc pop mov fistp stc and pop xor and rolb (bad) push out clc xor enter out iret jmp mov dec popf out dec addr16 pop sahf pushaw out bound push loopne bnd in sub div out stos xchg mov adc inc sahf mov wrmsr mov xchg outsb sti les setnp cmp loop mov out jg ss js jno xor add sbb je leave out dec sub loop or ja ljmp hlt lret pop out lahf icebp pop into shlb inc xchg mov out out sub popf mov out scas push and (bad) push (bad) fsubrl dec lods xchg out mov or mov lcall mov lods insl aaa mov dec jge mov xchg loope mov fldz in or rcrl fadd das (bad) outsl lcall mov mov adc call lds mov fdivr xlat sub pop sbb ja cli sti fisubl mov jg cmp sbb (bad) jno sbb out or out fiadd loope adc out inc gs cmp xor out dec arpl jecxz push xor jbe test cmp cmp lcall jecxz and or movsb jae sbb out in inc int cmpsb sbb (bad) (bad) cli ret add insb jecxz adc out ja inc xchg and fsubs pusha push inc and or in cltd out fistpl xchg jg out jbe adc mov xor (bad) iret push xlat mov ja jmp inc pop push out insb cmovge fldl nop mov in mov lods mov out repz into loopne movsl (bad) pop ljmp and loope mov sub push jns loopne out shr xchg mov jb out push mov js insb neg (bad) inc push out in pop mov cmpsb (bad) add sub shld in stos out adc inc dec (bad) je shlb shlb inc and out push or in out test jge mov xchg test dec out iret out addr16 aam inc adc cmp in in jb fstpl in not out dec inc js xor lods ficompl adc pop sub sbb imul xor adc or addr16 imul sub fisttpl incl (bad) out int3 jp test out add lds cmp addb mov cmp pop popf mov or mov jno xor push dec jae in bound das jecxz out shrb js out cwtl pop movsb add (bad) dec incb sub loop push xor aad sbb (bad) insl push bnd in cli ret lahf les fistp sahf out mov mov ficoml pop imul mov popf pop mov jmp inc cmp cs out pop push icebp pop jno cmp aas shrb fsubp mov add out add mov adc mov out push out push std inc xor out ret stc push dec stos mov xor push pmaddwd (bad) call mov rcr sbb out in aad fild push xchg mov imulb pop lahf xor sarb adc out fucomi and test or out arpl xor sbb xor lahf sub cmc push daa or iret push fiadd adc add sbb test out pushf add imul push adc fistpl pop shl insb in das ds rcll add out shr ss mov out sbb lahf imul mov jp aad popf out loop push dec adc xor mov lret loop (bad) (bad) jmp ret xchg daa pop push sahf ljmp clc and fdivs mov mov out in pusha inc jecxz push (bad) std cmc xor in inc (bad) out test sbb pop pop and repnz out iret aas movsb mov lods stos mov add stc sub cmp (bad) pop in jge fwait arpl mov pop xchg lret fiaddl xor cwtl imul and jbe out pop cmp out sbb push mov aad out pusha jecxz fdivrl bound incl xor add cmp fadds dec loopne xchg enter inc fsubr scas jecxz jl mov iret ja jle sub add cmp loopne fisttp out loop mov imul ljmp xor push (bad) arpl mul cmp or lods setg in jmp lods cs cmpsl cltd dec inc outsb jnp lea sbb sbbl mov mov out ret xchg xchg mov loop dec rol insl sahf out inc add mov out adc mov je jle out cmpsb adc push push dec adc or imul xlat jns pop ds insb out push xchg ret mov in into dec out hlt es clc gs mov rcll cld ret lock sub jne ss xor movlps out repz out cmpsb out lods push push sbb aaa mov sbb icebp pop adc pop imul in cmp cmpsl fdivr outsb jle xchg cmpsb stc out or ja sub loopne or test and jmp nop fucomi (bad) shlb out or mov jb out mov pop das mov dec test scas iret out hlt fildl dec insl and sbb sbb idivb fwait mov dec mov push fdivl into out inc enter dec jg xor stc pop dec (bad) sbb lcall test xchg popa (bad) and cwtl (bad) out jmp sub sbb out aaa out bound movsl sub sbb xor imull pop dec out repz cmp jmp push dec outsb sub sbb jmp push lock jg sbb cwtl mov test cs adc stos iret and iret add call (bad) aas incl fnsave dec jmp lret out xlat fiadd mov jg daa dec fcmovnb push lods out les fcom out mov or (bad) out xchg mov pop inc lods (bad) xor (bad) jo int (bad) lret cmp pop add mov shlb cwtl out (bad) test aas push outsl out xchg push or sbb mov adc sbb iret sub pop push orl into pop and xchg daa jmp pop pop push in add in add jg and out inc sbb out mov xor pushf adc nop out enter inc daa push fldz or adc out out mov or lock repnz sub in push into (bad) leave out and int3 rcr sub rolb push push out fwait aaa and popa (bad) push cwtl std in dec push (bad) scas es out movsl mov gs pusha pop push inc out andl rcrb inc out hlt fidivl cmp insl sub (bad) repz mov push insl push mov pop mov das pushf mov lock (bad) out xchg mov loop enter cmp jmp mov out jb sbb shlb notb iret aad mov push xor out sub jp pop scas inc push dec dec jmp int3 (bad) lods in pop out fist and or add and adc (bad) pop fidivl pop mov test sbb in pop add add in aam out adcl jae sbb test movb adc mov out pop les push xchg dec loopne fildll cmp fwait imul fidiv aam mov cli ljmp lea jbe out inc outsl mov addr16 mov out jbe or jp cmp in mov sub out fdivrl mov inc out stos or test das xor sahf mov call out jo or (bad) popa mov rcrb imul (bad) mov out mov sbb cmpsl dec jnp aam js rorl pop out xchg and repnz jbe aaa out jnp scas mov incb xor sbb faddl mov out in js nop sub lods pop or mov mov loop mov cld js inc dec in out je aaa imul mov addr16 fsubr insb push outsl into cs mov repz pop xchg int xor inc fucomp incb mov mov fbld add jns mov jno mov js xor adc loopne or out adc imulb insb scas jae mov push pop out icebp imul inc mov js addl mov insb mov mov sahf es movsb loop xchg xchg adc xor dec mov (bad) xor test pop out mov out (bad) and icebp in jle bound mov fcmovnu xor stc pop xchg out jae mov push (bad) aaa mov out sub inc mov ljmp adc cmp xchg movsb cltd out add (bad) out sub aam sbb add xchg pop and ljmp fwait in mov lea pusha out cmp dec sbb out or mov push out jle cmpsl sub call xchg insl fsubrl mov inc out jmp add or cmp ljmp sbb leave cbtw dec push and sub jmp pop mov jbe fildl jmp dec jo mov int cmp in pop mov fpatan into (bad) mov repnz ror divl pushf ljmp rclb pop mov mov inc out adc mov or mov and es flds sbb dec mov sbb into imul (bad) xor jmp and mov out push (bad) iret loopne insl xor out lods (bad) (bad) or xor test out push xchg xchg push mov pop test sub mov dec cmp pop xor imul push es cmp sbb in mov sbb dec std out or cwtl rol out inc dec inc or data16 cmpsb push pop ljmp adc shrl fildl adc mov mov mov xlat pop les push out lock mov aad popa jo out int adc stc mov cli imul sarb sub jo mov inc out (bad) jae fidivl or sub sub lret mov lods stc adc jecxz shr imul insl mov and popa and inc jb or out shlb shlb nop sbb adc leave (bad) (bad) out adc bound out mov xchg add sbb call mov jno insl out mov pop push out imul mov xlat imulb dec sbb pushf (bad) addr16 sub inc ljmp (bad) cwtl mov cmp out push inc mov pushf fs out fimull push repz push mov out cmpsl cmp out xchg push in lea adc lcall xchg jg ret out add dec stos and mov add pushf (bad) xchg mov ja aas in mov or leave mov xchg je (bad) sub pop dec in aas lock out add jb sub out aaa adc xchg out mov adc xchg add hlt pop loop test dec je out rcr pop out xor in push out sbb data16 dec ret and out dec jmp out dec cs int adc add fdivl pop push in jo mov dec lock push psrlw (bad) mov mov cmpl adc dec notl stos pop xchg rcrb push insb mov cmpsb xchg je mov divl out push loop dec xchg pop sub rcrb cli xor fwait aaa ljmp std xor fstl out mov xchg or sub dec jle out stc (bad) xor dec dec adc out in test cmp sbb lret add or xlat (bad) out inc cmpsb clc inc xchg adc ljmp mov cmp mov ja sbb jnp add push sub and insb je nop es xlat out inc pop sbb popaw xor pop dec pop dec or mov fmuls (bad) call out mov add sub into mov add out pusha xchg (bad) out leave es xor jne iret jle mov test cmpsb inc fwait mov push mov stc out out jg push adc out inc fdivrl push iret sub push nop mov mov imul loop sbb call out insl movsl shl (bad) fidiv lcall sbb pop mov push test xchg mov pushf daa xchg in or (bad) jno cmpl sub aaa addr16 push and push nop call push fbstp mov inc or movsb sbbl (bad) push imul stos (bad) or les out push insl sub lock movsb sbb cmpsb out mov cli mov out leave jp sbb out jbe into (bad) jno cmpsl loope and imul icebp in jmp sub in clc push and in add fcompl xchg ret pop push (bad) xlat push call out lods outsl and sbbl cmp jle add mov inc stos loop pop jge shlb or movsl imulb out loop dec adc cltd push enter mov cwtl imul rcr inc dec fucomp sbb insb in je sub mov gs mov into arpl push (bad) icebp addr16 leave sub adc aam xchg ljmp rclb in pop pop addr16 xlat movsb nop int pop into out (bad) mov sahf cmp add shl enter jg pop jmp xor lock data16 or xchg dec or dec in imul pusha out adc stos push out out xchg xchg in lock pop sub pop jae cmp push jg gs add out fldz push fldl mov jmp sub mov loope or (bad) pop in shl call mov movsb and (bad) add fdivrs int in mov in adc sbb push (bad) insl ret mov out push fbstp dec mov popa jecxz add inc adc out cmpsb mov out inc addr16 imul sarl into mov or loop adc sub dec (bad) fidivl shlb cwtl clc out outsl sbb adc sarb stos ss (bad) dec jns paddusb call mov dec gs mov pop out out insb pop inc push sbb push xor pop cmpsl sub in (bad) jmp sub mov cli cmpsb pop mov jno cmp sub fsubr mov pop add inc cmp sahf ljmp loope daa in cmp lock movsl fwait push out mov add loopne push cvtdq2ps xor cs lock push ror mov out in in mov out mov inc cmp movsl inc dec int3 mov mov out xor (bad) je daa push cli (bad) (bad) sub push dec shrl cmpsb xor mov mov test mov shl xor ror fistpll add addr16 push out sub dec cmpsl sbb rcrb pop (bad) loop imul ljmp push lcall out push je pop inc jo sub repz mov (bad) fiaddl or inc popf cmpsl in ficomp out mov push mov (bad) jp mov aad or (bad) pop pop cld cli sub pop push out dec (bad) dec out and push and out rcr jb in cmp mov and imul jmp xor outsb popa push in rorb aaa xchg out sar jge das (bad) jbe push jae push jecxz dec dec fnsave fldenv push popf mov mov inc adc test iret rclb enter jg mov lcall data16 xor outsl mov inc pop arpl int3 lcall dec fcmovu push loopne fcomip insl imul lea out mov sbb cli in out cs or sbb dec mov scas cmp inc push (bad) out xor repz jb popa xchg mov test push dec bound outsl mov sub out movsl adc and aas out xchg mov mov jb call mov notb mov (bad) mov outsl sbb (bad) data16 inc out call iret mov xor aas into cmp in adcl adc fistp sbb adc fwait ljmp cmp mov sub cld sbb outsb jmp inc mov add enter addl adc cli (bad) mov and js or lock add add loopne ljmp xor ljmp popa fcoms (bad) hlt das sub jnp pop ljmp mul mov sub pop lea or hlt mov cli aaa out jecxz aad inc scas jns out insl cmp xchg jno jmp callw mov mov or test push push out jmp dec outsl inc sarb out adc lds ja push mov mov popf push and cmpsl mov pop movsb out data16 icebp lahf fsubrp out and mov out dec jecxz and and mov pop adc or dec in jno adc xchg xchg data16 ret inc lahf out addl xlat incb ret stos lock nop out and fmul fidiv (bad) lods mov cmp cmpsl lods shr or jl nop dec mov pop xlat pop ds xchg loope or stos jo cmp scas sar cmc and push fs mov jae stos inc (bad) loopne fdivp sub sbbb addr16 clc mov ficompl cmp or push lret inc add and loop movsb cmpsl pop out add fistp pop and jecxz push mov add jp push inc ret push iret sub cmpsl mov fld pop (bad) out sub repnz dec sbb loopne sbb imul ja fs mov fnstcw dec lret mov mov loop sbb sarb dec jl sub or (bad) push into pop popa loop adc add pop sub in dec in inc imul mov mov test push mov mov clc dec nop shr sub aas jno adcl dec jnp aas push and aaa fist sbb mov mov clc out outsb dec mov loopne xchg out repz enter test fs out add pop jmp mov mov loopne mov pop dec jg jmp out (bad) popf in lret jb ljmp bound pusha mov (bad) hlt and fdivp (bad) mov out gs outsb lahf inc xor fs lahf pop mov adc sbbl mov ljmp push adc ret xchg out int3 sbb jmp out xchg mov (bad) inc out adc push aad insl dec dec out lret add ljmp aas dec imul lret mov mov cmpsb push or loope mov out int3 mov test push fldt out lahf aaa mov enter out push pop inc sub stos lods ret jne std arpl xchg out or mov sbb (bad) out fisttpll xor stos addb cmp std pop shlb mov out jg insl hlt mov outsl push test mov push mov pop es push pop ljmp jle mov call mul xor and and xlat xor mov stos cld daa pcmpeqd fistl loop lret inc addb in fs test pop mov jne mov push stos add iret pop mov out xchg cmp shll mov sbb adcl pop out lahf xchg mov fmul pusha add in fisubl sbb out pop lods fwait sahf sub arpl cmpl cli es cs jno loop fstp jmp push and in fidivr out out cmp out xchg pop ret jg cltd fisub pop inc mov dec outsl in mov jo iret mov fild jb or mov addr16 incl push fistl scas in dec out int3 (bad) into adc fmul out stc and push ds sbb lretw hlt loopne sbbl insl xchg rcrb in pop or fwait jne pop sub sbb push fiadd out mov sub xor cmpsl pop mov push das fwait ljmp jno repnz in cmp stos lods mov imul sub push rcrl imul out xchg jmp mov add arpl aaa xlat das aas mov pop push sub or out lret out mov int sbb xor (bad) (bad) int3 insl push cmp mov daa jne cs adc mov loop adc out mov nop aad out in scas in sbb das jbe (bad) fimull and mov in mov out cmp sti sub jnp pop pop jg pop push ja scas and inc pop jmp es enter jp xor popa mov push frstor aas dec push ret sub enter dec jb lahf jnp movsl inc insb cmpsb out (bad) mov nop int3 imul ds popf mov aad out fsub pushf or hlt and sub push pop sbb pop ss in dec xchg dec pop int3 popf loope cmpsl call out mov jnp cmp enter imul test ret es mov out in arpl gs cmpsl dec popa adc out addl popf push negb cs push ds aaa jge add add fsubp and out cmp stos sbb in scas inc leave mov mov call sahf or xor cld jl movsb stc push jo sub or inc or call lahf or fist xchg and loopne mov jnp subl mov pop xchg adc in insb xchg sub sbb out jecxz pushf or aam gs jnp,pn mov (bad) repz fdiv xchg sub push rcl outsl lea out jge data16 fsubrl mov out fisttpll cs sbb adc sub mov xor or call icebp mov jp aas push add add (bad) loopne mov adc adc out mov jecxz sti push inc adc xlat mov into daa sbb fisub out nop repz xor out and add out insl add jecxz fbstp out fs (bad) pop add scas out sbb call xor sub or push xor es ss out push dec pop sbb fidivr loop and nop mov or test out fsub sub sbb xchg out (bad) rolb std push adc mov dec ljmp mov jno pop into cmp loope bound out ret sub xchg jmp cmp dec (bad) in (bad) out test adc std in sub mov xor xchg ret ljmp adc xchg mov mov jg movsl out mov lahf add insl xor rorl out (bad) (bad) addl mov mov aad loopne fcomps push cli add gs les jne stc ret out data16 outsl insl push arpl lock aas xor out outsl adc mov out mov sub pop int js sub out test xchg jge data16 mov (bad) mov push and adc negb icebp pop nop out sub (bad) xchg add adc outsl testl inc jo push das out push jg insl and xchg pop sub test sub call vpshufhw rcr cwtl xor xor add pop fldt ss or xor (bad) leave mov pop cvtps2pd ficomp loop add mov gs cmp scas and xor out add pop sbb or pop xor push in popa dec hlt mov aad push push loopne bound push stc cmp out int3 adc jae and loopne push and push dec in popa out insb (bad) jecxz xchg incb mov movsl jne pop fs out das adc xchg push mov ret fiadd cmp frstor je dec pop out or testl xor int3 test pushf and test popf sub mov sbb mov push insl pusha fucomp cmp add fisttp push pop jmp adc pop cmp jle sub arpl ljmp and roll mov jo add mov es dec das xchg inc add out aas adc les inc jne repnz rorl pop jae jl xlat (bad) jg push sarb mov mov adc scas in mov add fildl int3 pop dec fbstp push dec out fsubl adc pop mov jecxz inc popf in push mov push es push fwait or loopne fs out mov jbe leave ds in out das xchg push jecxz jmp push aad xchg scas cmp ljmp ds clc mov and out mov mov inc arpl push push leave out mov roll das sar mov mov lret stc mov pop mov push xchg movsl in out jl in out pop ljmp ret pop push cmc orb out movsl mov push adcl mov pop in mov fcomps push inc inc xchg jae jp add mov out out xchg and mov aad inc cmp push int pop xor jle fisubrl cmp and pusha cmpsb out and mov out pop add lret jg (bad) shr lea mov (bad) and (bad) cli lret sbb lock xchg sub ds cmpl out inc shlb loope lcall mulb out dec cmp shll cmpsb (bad) xor das add (bad) mov mov movsl ds xor faddl pusha jecxz lods daa pop inc aas mov xor notb leave inc rolb xor or cmpsb loope push pop mov out pop ja xor fsubs or inc dec sub or dec inc dec scas cmovp xchg sbb ja in fbld test shl into jb out stc lods push outsb cmpb mov mov cli out imul sub (bad) nop push out rcrb call sbb jg inc repnz fs add cmp sbb fimull xor out (bad) and stos mov mov xchg out lods adc imul (bad) sbb pop out (bad) int3 lret and dec out clc lds inc or mov adc and ds pop into test jge scas ret (bad) lods gs je cld cs dec out int mov out xchg orb out xor es mov push nop and sbbl out sahf orl iret (bad) scas imul mov mov xchg out popf scas or mov cmpl clc mov std rclb (bad) jg dec js out pop jns dec xlat jg jg sbb pop adc fsubl (bad) mov outsl subl sub dec psubb out inc pop das ss mov xor hlt sub push imul mov bound sbb mov movsb mov xor cltd sub mov (bad) out push rorl adc out pop cwtl push sbb out mov ret loopne mov dec bound xor adc xchg adc jmp jno dec (bad) mov sub cs jnp jl xchg cmp dec mov pushf xlat daa ljmp pop mov pop out out add mov aas push dec push cmp cmovne mov mov and xlat fcmovbe and js,pt test loop push imul icebp push arpl out bound andl lcall into sti and jo out mov cmp adc leave sahf lods out or into scas mov or test fistpl or pop (bad) jmp fs sti out (bad) dec mov or jl into cwtl addr16 loopne cmp sbb out or lcall ja rclb inc ss lret sarb fs inc push mov jb pop shll mov (bad) jp jno xchg (bad) xor xor push dec sbb xor cmp (bad) test out add icebp adc dec inc and mov push mov xor outsb mov and movsb lock dec test and imul sub jmp jnp jge ds ret inc xor (bad) and adc inc push insb push and cli cld out mov iret sub (bad) cmp out and sti push out xchg or gs fcomps mov (bad) out mov mov lods jo (bad) out hlt sbbl jg call adc daa jle (bad) sbb or mov add cs es outsb aaa jne xchg push fbstp cltd out sti loopne inc out into push mov leave jle out sbb pop mov jbe sbb das cmpsl jnp push mov cs fild sti nop push jne adc insl scas clc rcrl dec out cmp jns jl test out test mov (bad) outsb add outsl out (bad) (bad) xor fcom push out ret xchg mov adc lret stc (bad) out out push nop in dec scas pop xchg je out inc popa pop ret jl pop inc dec aas xchg loop cld mov pop and sbb pop clc xor push (bad) mov mov out cmp ret cmc (bad) xchg adcb inc push push pop movsb push pusha inc or jl lret mov or mov test and in out xor repz out xchg pop sub stos pop inc cmp cmpsl das pop (bad) xor out push jg sub and push nop jns adc or fisttpl divl push push out imul adc aas and jne out jmp cwtl add cs out imul sub (bad) lods out jecxz sbb cmp cmpsl out or push xchg out ret and mov into (bad) out ret lcall dec out imul lods add out mov push dec push pushf push out add inc fmuls in call pusha fwait mov ss out dec imul repz mov ret out push in addr16 das (bad) push and pop ljmp stos mov psraw jae pusha mov hlt out xlat inc cwtl clc pop xchg mov mov cmc mov movb out mov out popl mov inc insl sub or movsb pop jp push out dec and imul xchg add dec or popf addb hlt sahf js or (bad) out adc mul and out ret imul dec add jge and loope push mov sahf mov add xor loope sub mov push mov out into cltd (bad) fildll push out enter aas and ljmp dec out sbb mulb repz out (bad) push scas aam (bad) (bad) into pop mov loope pop mov push dec and inc shr mov dec push pop rorb (bad) packuswb (bad) mov jnp fsubrl es lret loope das mov out jecxz push jl pop js outsb and adc cmpsb mov jbe pop cmp xchg lret cmp lea enter movsb sarb mov or xor inc out sbb xchg in movsb test xor sub out push movsb icebp fcomp dec cmp or mov out add inc mov out into mov sub add mov lret jmp rcrb cmp inc mov (bad) inc sbb out (bad) xor fstpl add in and in sub sar adc mov mov pop or cmpsl ficompl xor cmp imul aad xlat imul jbe and mov adc shll in mov lock push cmp pop add out call dec mov imul outsl clc fstl lds repz ss xchg inc js pushf in pmaxsw idivl movsb stos (bad) pop inc lret cmp ljmp inc adc push out and rcl push bound pop imul loopne paddusw cwtl adc stos lret mov and inc push arpl mov in rorl (bad) xor lret test out mov sbb fucomi add into loop inc xchg add daa lods (bad) mov dec out inc cli stos xor (bad) jecxz xchg loop push or aad fnstenv mov out adc pop clc std pop out in stc repnz in sub lahf cmpsb cmp (bad) xor pop add ret mov sbb data16 repnz mov iret inc jb push in pop out scas fdivl mov out jl jae ds in negl lret test cmp fistpll pushf loop adc out enter sbb out aaa add xchg movsl fcoms jno cmp pop dec aam lcall iret mov call into in icebp dec out cmpsb jg nop push cmp mov hlt mov in ljmp mov clc out jb lret sub rorl ret testb sbb out cs iret mov jle push push mov iret out fwait (bad) inc cmp adc inc pusha push jae xchg pop jnp jo addr16 movsb pop out lret pop jg or lods nop out jb (bad) dec add icebp scas add and insl cmp pop cmpsb movsb lods mov xor mov jnp jbe loope popa test bound mov and divl inc and jl int3 jmp cmp sarb mov xor repnz ss out xor std (bad) mov call push or lret mov out fwait rcll fistpll (bad) xchg pop popa sub add scas out (bad) or sarl inc rclb arpl out insl repnz jmp xchg pop das std jmp adc stos out mov inc adc ret out in fldenv push inc ror jns imul popf cmpsb das jg outsb or popf aad stos out sub jmp in leave mov bound mov fstps nop xchg xchg shr pop out fisubrl in pushf out and test out mov das or jbe out out push jl repz insl sbb add cli adc out mov dec out mov xor out lds movsl jp leave or jo xchg push mov adc pop flds mov sbb sbb or repz and cltd in stos lock out jo sbb push mov dec test insb cmpsb push out rcl arpl loopne dec sub gs jmp outsb pop test jo hlt or mov (bad) xor mov or rcrb push fsubrs in jp jmp fcmovbe xchg std mov lods daa fisttp jg bound or leave out aaa cs insw xchg cli lods mov adc push adc ja mov xchg ljmp mov push mov das hlt jle stos sub push mov lods (bad) mov out lds mov out test push push sub (bad) pop mov (bad) mov insb push adc inc cmpl outsl addb inc fist push mov in cli jae out pusha (bad) fwait jl and xchg xchg out mov aam imull shlb mov out sahf or (bad) std aaa imul and pop pop in aad add jmp nop out into sbb xchg xlat pop insb pusha sbb jp pop icebp push repnz sub pop jmp out lea mov xchg outsb xor popa pop loop lea add push out loopne iret xor call pop jbe (bad) jo dec incb pushf and out sub cmp (bad) into scas jbe lcall sbb jg in jae pop out movsb push push dec mov or aad mov popa test mul jp in in pop xchg jmp aaa push pop out call popa pop add cmpsb aam sbb add addr16 adcl lods ljmp dec fldl stc mov les push add stos popf je in ja mov loop ljmp jno out inc xor fbld mov sub xchg out repnz inc sarl or lods mov out xlat or mov out cltd inc xor or mov gs cli out test dec int xor dec push mov aaa push leave pop xchg push inc adc fsubrl imul jbe or sbb jmp pop imul int or mov ror fnop jg fwait adc sub out bound lcall and std fwait dec xor jmp push fistp outsb shl (bad) jmp call mov stos inc cmp out add aaa outsb sbb out pushf insl add inc xor jae test xor (bad) pop sti ljmp out add pop xchg cmpsb int push (bad) jl push or xor scas jmp daa (bad) pop (bad) jb imul inc mov out sbb dec ljmp cmp in das jbe pop out ljmp iret in les pop dec xor in movsl jns cld xor int3 mov outsb xor aaa sbb out inc mov pop mov rclb out pop outsb xchg mov out iret add cmpsl incb (bad) cwtl pop in mov test or mov rclb pop in je sbb dec push ljmp and pop and or jmp push (bad) adc or nop (bad) inc into gs ljmp enter jmp out push mov jl mov jno sbb or jne repnz bound loopne (bad) aaa notb fidivl and jge jbe xor pop std push push sbbl out mov out fisttpll out mov ljmp mov div xor sub mov push adc push push (bad) mov push out outsl andl mov adc mov cli dec (bad) jle jl or push dec pop xchg gs xchg outsb ljmp push mov push jecxz mov out ljmp inc out or icebp add sbbl negb lea cmp add sbb inc inc movsl in adc aad (bad) cli in (bad) fadd rclb cmp dec sub (bad) push repnz leave cwtl cmp mov xor mov std adc fwait in add pop push test mov add (bad) and out or unpcklps mov add sbb xchg (bad) fimull mov push jg mov aam pop out (bad) int mov out in push lock sbb mov xorb jno loopne in ds xchg xor repnz push add (bad) lds push es pushf shlb sbb mov out add roll xor mov xchg aaa cltd std mov sub cmp je mov sahf dec xchg fbld or lock fcom repnz inc subl js movsb sbb popf je scas out inc xor (bad) scas in out cvtpi2ps xor sub xchg and out add repnz out inc mulb pop out std adc aas mov pop add sbb out (bad) mov subl xor mov sub pop adc pop and in sub out or add dec mov push fisubrl repz sbb loope xor ss icebp mov jnp xchg sub mov xchg stos push jno (bad) dec imul inc cli lret fldz daa arpl xchg std dec sahf sub jg scas out and xchg push pop test xchg adc xor fldl aas fistp lret inc in push fdiv pop lods inc dec dec fs mov (bad) or adc mull sbb cmpsl out pop jbe push fbld (bad) clc lret cwtl push mov mov out pop and pop xor out es lods (bad) push xbegin sbb imul pop mov out shl movsb out js xor inc out lea inc sbb add out add out pushf push jns cmpsl push aad out dec fdivl xchg in ret int3 int ds xlat ret out scas lret mov out pop out shr orl jnp sahf and mov pushf mov cmp mov mov lods jmp out ja mov pop stos loopne lods sbb adc nop jge loope dec push add sahf inc out push test cli scas out push out and adc lock mov cmp sbb push fildll xchg insl cmp repnz cli inc stc push js fcomip adc out or add nop add (bad) rolb and jmp adc arpl sub mov mov out insl sub cmc jo aad out (bad) ss sbb lahf and sti push mov out pop iret and test xor movsb mov stc (bad) or xchg repnz out fistpl jne (bad) mov fxch or cmpsl out bound mov test jecxz call ja insl sub ret cmp jge mov lahf rclb mov jbe lcall (bad) or inc jnp fcomps int3 (bad) xor fs cmpsl loop out imul xchg out cmp out inc les addr16 pop mov insb dec mov pop sahf sbb call shr dec pop into arpl sarb cmpsb xchg call add out add imul outsb dec clc cmpsb inc lods add enter stc outsb (bad) fidiv mov pop and scas cmp cmpsl (bad) sbb rep int or pop pop mov lret in fnsave sbb mov fnstcw out xor (bad) add pop out jns int3 testl dec out cmpsl ret leave fnop dec or push push in (bad) mov adc out jge loope jbe or int gs daa rcr sarb and aaa mov (bad) lods out or (bad) into pushf xchg bound push in push push xchg xchg pop cmpsl fldcw addr16 out ret cwtl call gs xlat xchg mov lods outsb dec fmuls rcl fcomip out xchg (bad) lds cmp xlat aaa cli adc add dec pop pop sbb cwtl sti xchg hlt push sbb mov out insb (bad) jmp add loop test (bad) mov or ret in cmpsb scas adc aas imul cs pop and fst shrl (bad) xlat lahf jle lods jnp aam (bad) adc decb mov or adc cmp mov out pop addr16 dec lcall xor (bad) fdivrp inc and out imul jno je inc dec and ret add out js fiadd xor pusha (bad) sbb add iret hlt or in (bad) in pop adc push xor push out icebp mov lret cmp test jmp bound xor into and pop dec fstpl ror out shr int dec adc xor cltd push push mov or mov out cmp lods xor aam jmp cmpsb sbb ficomp mov inc jns push mov out mov out ret dec (bad) ja stc rcrl int3 addr16 repnz insb into jb fist push inc jns daa out out sub rorl or xor call out sub pushf lret popa jg or das out (bad) icebp sub shlb dec stos mov cs fsubrs out repnz inc mov out imul cwtl mov loope xchg in js pop add mull loopne data16 and shlb push das ljmp jns adc test mov test push repnz lods dec xor cli es mov xchg add ror dec push test pop mul jle arpl pop out mov out nop pop jg sub mov push adc insl inc and mov pop popa je imul icebp push or pop out jge pop jno cmc or dec xchg push aaa cmp (bad) xchg out adc xchg out mov and sbb or inc ret mov jo out or (bad) ss pop pushf out adc push lcall js cmp (bad) push lret dec loopne in or mov xchg xchg clc ljmp test arpl jp sub je jmp lcall cwtl out sbb cmpsb adc push mov dec xor int out xchg fs jo inc mov insl data16 and aam dec (bad) (bad) popf bound fnop xor fnsave cli mov dec sbb pop outsl or push mov es cmp inc jno out scas pop dec cmpsb add repz ljmp dec jecxz dec inc mov inc mov dec in pusha cwtl push loopne jno pop out outsl inc in gs (bad) pop mov (bad) in shl add idivb dec popf enter xchg push mov out pop mov inc push jge popa lret jo jns fildl out cmpsb loopne push adc fstl in iret inc mov movsl out mov rcrb out or popf lcall dec imul fild flds sub popw out (bad) outsl clc pushf ss out mov jbe out and inc cmp mov scas test out adc jno mov out movsb jae push dec and out mov pop push rcrb inc scas out test cld out (bad) xchg clc rclb icebp ljmp out inc loop jle insl shr cmp push into aas cmp out pushf adc es jno out sar popf outsl mov push cmpsb out int3 lcall es fs push (bad) push in rcl fdivrl jmp je out fs mov jle leave insl test or fwait dec add scas cs into xchg rcll iret pop fcmovnbe loop ret mov out push sub repz sahf push fsts and or loope pop adc push xchg iret sub loop add repnz ja sub xchg or and pop mov adc faddl inc out inc pop sti mov push dec repz adc imul push clc mov out adc movsl sub mov leave jl dec out out dec rorb notb cmp inc mov sbb pop lcall mov out cli in cmp addr16 enter movl loope mov adc les xchg lcall (bad) out adc dec (bad) sub jge ljmp adc repz cmp popa std xor adc and imul cmp in sub push shrl out mov insl xor (bad) lods shr jmp test push jg mov stos out mov (bad) mov xchg cs push je dec in xchg sbb iret xchg jp bswap stos xlat out lds imul out adc pop cmp jp inc adc nop out mov xchg data16 dec cmpsb add incb outsb push pop outsb arpl mov pop es lcall xchg repz pop out mov xchg js add inc sub out sub pop mov fistp mov mov std out orl xchg push dec insl out (bad) insb xor add push ss (bad) jecxz enter jae (bad) mov pusha adc out cld fildll jo cmp jno daa in ss mov jp cmpsb mov out mov (bad) test push out into clc sub mov sub into int cmp dec inc sub out xchg mov xchg (bad) jecxz jne inc adcl xchg out dec mov ficom jge stos push pop jbe jmp jg and mov stos xchg (bad) mov lock fildll (bad) hlt out jg outsl out pop mov ja aaa repz out fwait adc push fistpll fnop lahf mov inc out test ds divl jns imul out sbb mov out mov clc xchg loope ret outsb out fstpl (bad) fistp lret stc je js ljmp test (bad) dec mov pusha pushf movsb in call out xchg je jae test ret leave in out and shl gs decb mov pop adc clc pop lds fnsave out push adc mov sub out clc push nop jg xchg mov in mov adc aaa addb mov (bad) mov sbb repnz and mov sbb outsl mov (bad) mov adc add mov add sbb jmp hlt fsubs out pushf sub or out and cmpsl cs xor mov add fist orl pusha sub push (bad) in out add lret out mov dec test add dec (bad) out inc push in push movsb ret xchg out (bad) imul shlb xor stos inc add js jp pop out mov std push cli add out (bad) (bad) nop lahf ret mov out test push push das adc roll out dec and xchg push lods mov sub pop scas jl in pushl out mov imul fnop ljmp mov out bound adc fistpll jb cld lock inc loope test decl pop ljmp add jb or jbe lods or xchg popf jns cli push push xchg mov dec out sahf sbb dec push test in pop inc mov outsb stos stos cmp daa adc fcoml iret jb mov dec adc scas xchg inc nop inc mov (bad) clc xchg mov outsb imul je xchg mov mov aam or daa test xlat pop jns mov mov pop jmp ljmp jmp int adc in xor sub jns sbb iret cmp mov mov out adc xchg sbb pop dec lock jns mov fldln2 (bad) int (bad) mov negl sbb mov sub cld and out dec stos mov aas and outsl push les out cli imulb fcomip imul push jge fmuls pop scas push dec xchg mul out ret call out push jg (bad) xlat (bad) test test aam test and fwait out stos sti bnd ret lods lods out (bad) jle or loop pop pop ret sbb push push dec leave in out xchg pop icebp rcrb cld out or adc dec dec nop (bad) call out xchg and pop out addr16 or jae fcmovne ds insb fldl mov mov lret inc add in jae stos and test mov loop xchg xor jbe lret in aam sbb out jmp adc mov aad push xor out bound dec mov push out in stos lahf vucomisd mov push in xchg sbb dec pusha std sti cmp das lcall sbb test xor out adc inc push ljmp xor pop xchg mov out adc adc push out pop inc dec xchg xor add jl pop faddl push sub hlt pop cmp cmp jp lods or jb jne test or sti sbb jo popa mov adc cs xlat add daa mov pop inc ret lock push mov loop adc sub or pop lahf dec jmp or in out and (bad) decl inc addr16 mov mov adc and and les xchg sub mov imul pop jg sbb and ljmp xchg out add sub push xchg pop adc nopl out lea aad inc add push movsb jge inc out lods adc addb mov out pop jl and stos cli iret dec es xchg rclb pop daa (bad) sub loop fsubl xchg out imul out cs dec loop lcall mov in popf (bad) fild out fs (bad) out addr16 (bad) and mov scas out jae lods dec sarb inc in loop movsb push mov out faddp popa xchg das push ffree out outsl mov jbe div adc push mov cwtl arpl out mov and mov fdivr out inc sahf adc pop rorl repnz cmp ss (bad) or sbb pop (bad) xchg lcall xlat fstpl jno imul test xchg cltd out mov mov out or adc lret or mov mul add dec mov mov mul add stc out jnp mov aaa (bad) xchg movsl dec cmpl into fsubrp ja jecxz mov mov shrl mov push rolb pushf stc mov adc mov pop popf les jae xchg sbb cmpl or call ljmp mov jmp jne dec rcr sub in pop std jecxz jae pop loopne sbb out jmp and mov and pop enter popa jmp popf (bad) jnp mov push out jns (bad) clc sbb insl loope cwtl fsub adc add data16 daa out fmull arpl imul aaa xchg mov jle sub into cmpsb pop popa outsb bnd mov inc (bad) out enter jecxz xor and aam repz out (bad) adc xchg out out cmpsl leave lret (bad) jg jbe out push outsl orl mov cmp popf out pop iret dec das aad loop loope sub fsubrl xor jp add push fnop push sbbl jb jbe out imul adc pop mov icebp inc dec ds and inc insb sub sbb pop xchg rorl out popa fimull ret inc dec testl out adc sub out ja jl pop repz out mov sahf (bad) mov mov add dec ljmp add and add lret outsl xchg sbb loopne mov jo xchg xor dec (bad) dec js ds or xchg jno mov icebp pop fs cwtl jae into rcll mov and lock mov (bad) lds fbstp mov es pop ds outsb (bad) out imul add cld (bad) ss jmp push xchg pop mov daa adc pop ret cmp sub dec in sbb pop (bad) test (bad) in fcmovbe mov jbe push out pop mov (bad) dec in out sbb (bad) mov out xchg jmp or or or pop sub jmp add out xchg sub sbb ljmp and pop lea sbb lahf fxam cli les out (bad) pop insl adc and pushf mov popf sbb xchg ret (bad) ljmp scas arpl push fnop xchg pop leave mov popa gs lahf jmp and pop adc ret or mov enter out xchg pop (bad) jecxz mov xchg mov push outsb aam out rcr bound jg cmp fs out inc jmp repnz fildll mov adc sub in out inc ljmp decb xor in ljmp loopne ljmp data16 aaa xchg mov inc test repnz (bad) mov ucomiss xchg loop push sub cmp jmp inc (bad) out fucomi fsts mov push imul xchg aad test mov push mov out lret andb dec outsl jno out mov (bad) add jmp iret inc sarb loop fcomps sbb ret jp inc push mov ljmp xor into out testl and push sbb scas (bad) adc call and mov test addb iret push or sbb xchg aas sbb dec cltd cmpsb je (bad) out (bad) jmp out pop lock and out pop cmp lods sbb xor push mov mov mov out mov inc xor popf dec sub call fcoml inc mov out jecxz movsl mov cli call dec xchg out sub sub out fcompl mov cmp cs popf adc out fs sti pop stos mov nop lahf or stos jns inc xchg sub dec sbb (bad) and push adcb imulb repnz outsl ret dec pop das add adc add push jbe jp sbb pop aam mov sbb cs adc int ljmp mov sub nop or adc pop jo fs mov lcall adc into scas (bad) out test out sbb loopne,pn pop aas test stos xchg jle dec imul (bad) mov jno movl mov sub ret adc sub mov std or das ja cmpsb sbb cmpsl out sbb add jecxz cmp icebp push pop mov pushf shrb out jmp sub cmp xlat mov cli test movsl sbb xchg mov (bad) cltd mov jge xchg inc in and pop xchg scas cmp idivb xchg lcall das cmp jmp ljmp xchg jecxz fwait mov push pop sbb jmp out cmpsb xchg jmp cmc out pop or jo in sbb ds dec mov jmp cmp adc repnz out cmpsl adc inc jbe out sbb mov push fisttpl pop pop std mov add cmc mov sti (bad) out aad jge xor pop in and jno cmp lock add call pop data16 addl push ret lret fnsave ljmp loop xchg push add add mov mov bound sub out add dec ret stc mov stos and cltd outsb dec sbb out popa jle jns cwtl push aaa (bad) push stos loopne jne pushf imul ret movsl xor pop push stos pop call mov lods jmp and mov or ds insb mov cmp mov lea or cltd (bad) mov fucomip mov xor out mov cltd icebp cwtl iret dec repnz fcmovb lret xor jo push or pmaxsw adc mov lahf out dec fnstenv call inc out xor jno xor inc out sub mov incb lods dec in ds sarb mov xlat sbb out or mov imul lahf sub jmp mov fdivl aas fninit pop or pop stos push fbld sub scas inc (bad) out or cmpsl and jb xchg shl imul test out sarb and or mov xchg cmp popa jb push out cld xchg xchg pop or sub pop push pusha sub sbb cmp nopl sahf lods cli iret fs jo mov xor and jmp out pop pop add cmp je or ret mov ljmp lock es les (bad) xchg jg xchg out (bad) (bad) fmulp mov inc enter xchg mov mov xchg adc sahf out loope xchg mov mov sbb xchg (bad) mov cmp es pop int3 dec in or shlb out jp call lret push sub inc dec or aaa arpl sti repnz int out sub or jae or mov sahf out outsb loope jmp or (bad) or xchg jae shl xchg pop (bad) (bad) or mov jbe xchg add loop das sbb jo divps pop rclb push loopne push out cld cmp lods and fbld hlt sar cmpsb push mov cs jne mov test lahf push mov (bad) sbb jl dec movsb dec add dec sbb lahf pop imul les push mov push iret pop js scas enter or repz cmc and ret jp js adc or lock lcall test and scas mov out jae imul out xchg das (bad) jnp inc repnz loopne out loop jmp mov loop xor dec adc sub jg (bad) out xor add push dec sbb ror mov jbe loop push adc movsb out cmpsl sub jmp call sub mov or sub scas xchg sbb out fsubrs and mov imul xor jo mov (bad) sti (bad) test js ds mov dec mov mov shlb out or inc mov and rcll mov out fcomps xchg adc out jmp fisubr fistp test jno xlat cmp xchg mul mov push mov adc jbe push outsb sbb sub jnp inc int3 test mov shll mov lret sti or call loopne pop stc in cs test push jb scas in lret xor rorb jb icebp cmp push out fsts sbb sarb insl (bad) enter in mov pusha mov ret adc lock insl fisubrl sarb popf mov mov sahf ja (bad) fdivs lods inc fnstsw mov mov dec jns int test push sarl jno jg sbb out push inc mov cvtps2pi out lcall jnp cld rcrb cli int mov jp push jge mov (bad) daa jbe mov cmp ss mov jle pop in jg xor dec out dec icebp inc ficom add mov int es mov insl es iret out or push push fwait scas mov cmpsl mov and inc pop push in movsb ja out addr16 pop xchg pop add cmc iret jg clc (bad) push out mov jne push pop incb mov imul pop lods test insb mov outsl adc mov shlb pmaxsw (bad) cld cmp pop mov cwtl jmp xchg movsl out mov ljmp push fdivl pop pop cmp dec or mov out cmpsb cltd arpl mov clc sahf xor dec mov mov inc gs pop stos mov jl adc xor out and pop sbb inc sbb loopne xlat icebp ljmp das loope dec lock xchg out pop stc clc sarb cmpsb test out add fstps out inc dec jmp dec pop push jnp in mov notb out xlat cmp bound pop push test lcall data16 mov imul inc and xlat test jecxz push sub out mov dec imul jle movsl test pop pop adc xor test popw pop push inc out inc (bad) fist and mov or in lret push mov andb jbe mov mov fildl das ret inc push out rclb ret pusha ja out push push sti inc cs xchg push fldcw jge mov fdivp xchg je mov adc inc xchg lret sbb inc js sub mov idivb stos cmp xchg out push out add (bad) ljmp pop ljmp xchg pushf test dec aas dec sbbl out (bad) fnstcw iret add xchg add xchg call (bad) push or push pushf (bad) mov lods cmpsb addb inc or fldl2e out loopne pushf scas sub adc mov cli out xchg lcall inc mov out jl push pop out sbb ucomiss ljmp or dec outsb (bad) jnp and mov out ds adc or jecxz out jge stos mov (bad) into stos out jle jno jg mov mov paddsw shr scas sbb and out mov dec inc fbstp out sub cmc jle fisubr jl imul popf bound ret in adc dec ss loopne ds cs jne fucomp xor or mov mov push xlat mov push (bad) imulb ror and inc mov out jle mov jmp adc mov sub push ret mov mov lods in out and lods add out pop lret xchg push mov jnp xchg (bad) (bad) jmp adc ficom scas clc ljmp je cmp shrl lock out fnstcw in gs xor ja arpl out jecxz jg xchg stc xchg cltd faddl (bad) dec jb push mov nop out aas xlat ficom xchg inc loopne mov ja out fdivs pop sbb mov xchg in dec sbb and (bad) jno xor xchg ss lock xor out push xchg ret and out ss cmp push notb popf out pushf pop inc sub adc mov mov lds xchg movl mov add dec push loope stos inc out adc sbb sahf sbbl out les insb out dec int repnz xlat lahf out pop loop int3 repz (bad) mov mov fisttp sub faddl out (bad) data16 xlat and nop das cmp into jne out jo (bad) (bad) jno pop dec int pop pop inc mov das or out loop and inc xchg mov pop sbb out cmpsl aad sti and jge out lahf mov jle out mov sbb out push adc cltd out fstl fidivl and test scas add jbe fbstp jmp jns sub mov and and push movsb sub mov push (bad) lret rorb add push rolb std out int3 mov adc out sbb lahf mov pop (bad) outsb mov sti out jecxz stc movsl repz fwait pop call verr mov inc or mov out jo xor add fs (bad) xor out loope jecxz pop ds ljmp out iret fild cwtl lds push jne xchg lret (bad) out sub mov pusha outsb lock out mov icebp push std lea in jg lods inc stos out cmpsl sub xchg out fsubs inc out lcall xchg cmp mov out ret in cmp or cmc stos xchg inc call in xchg pop pop mov insl jg int add lret ljmp or inc jnp add xlat or jecxz lock std out pop xor rcr push xor xchg out scas inc lcall mov out pop iret mov xchg sysexit pop and lahf push cs mov dec in jecxz out adc test push inc mov pop insb aad xor in pusha inc in out push popf push out sub cmpsb mov fdivrp jp insb mov pop mov out sbb gs out ja addr16 pop lock out pusha pop and (bad) shlb out and outsl dec xor enter mov out inc push add xor ficompl repz xchg pop (bad) int das inc loope xor into out adc stc stos rcrb inc loop call push iret mov pop jmp cmpsl loop inc push sub mov and out fs shrl lahf (bad) insl push jmp xchg push inc mov loope mov out and pusha mov sti (bad) out push ffree mov out lahf in push dec mov add jmp out data16 aas adc pop push out std cmpsb out sti mov in test add inc incb fdivrl xchg aad movsl and or dec pop mov xchg mov pop in inc jge or jp cltd outsb dec jmp loopne jae ljmp dec shr mov clc lods mov inc out xchg or add jge add outsb popa sub hlt cmp (bad) faddp fnstsw in mov hlt push xchg xchg xorb out pop xor lcall ds mov pop fyl2xp1 push dec outsl arpl dec xchg in jns fisttp mov xorb (bad) ljmp sub arpl pop out in fs xchg outsb loopne bound out gs adc pop loop sub push imul sub add aas mov out (bad) popf ljmp stos outsb loope fdivrl lock out (bad) adc inc jge mov outsl and pop lods lods icebp fsubrp cmp in or jb inc adc dec mov add fnsave and jecxz push jle lds (bad) cli cmp adc out mov add out test push push iret fiadd imul addr16 ja jmp and clc cmp jg inc popf pop mov out nop leave shrb and pop cs sub mov sbb mov stc hlt lcall inc jg nop sub dec mov mov (bad) xchg xor pandn dec lock pop mov outsl out adc pop enter sbb lcall xor gs mov xchg out rcll jne icebp push jno andb ret loop mov mov pop loop bound (bad) jo adc fisubrl inc dec sahf in jg mov aaa test int mov out and adc sub shrb movsl fsubr xor mov and stos or outsl je jne out mov pop fldcw (bad) jmp jo push in xchg jmp cmp in pop jle movsl or into out inc imul xlat adc popf (bad) lods fnstsw sub (bad) outsb mov ret mov lods sub movsb out and (bad) or sbb cs push mov inc add jo push test push aaa ljmp add xor bound iret xchg xchg fs lds ljmp mov add in repz lcall jmp (bad) inc mov xchg jno pushf push ret loopne aaa ret xlat add sub out add aas fwait jg push lods pop adc cld mov sti out lcall cmp clc rorl sub aam or mov mov inc out xchg cs xchg or xlat popf repz aaa pop out lahf cwtl jl (bad) shr out popa cmp sti vmread test and (bad) jp mov lock js test nop movsb scas out imul xchg pop movsb pop aaa test loope xor sbb in repnz (bad) shrl push sbb or inc jo fistl out xor add out xchg es popf fnop pop push in iret xor jle stc dec lcall mov out cmp dec neg pcmpgtw loop data16 mov aad pop fwait add push in mov testb aam sub (bad) pop test insb and jb mov shll pop sarl fild mov out jnp mov xlat out and iret pop add dec in in cmp push (bad) mov mov xchg sahf push out icebp mov test cmp in pop adc insl xor ljmp and mov and (bad) adc xchg mov push stos add int gs subl mov movsb xor push mov rorl push test fild inc push mov sbb sbb mov enter lock (bad) pushf scas cmpsb mov jmp stc mov movsb loopne adc cmp addl sbb pop mov mov out aam test push push subb retw bound out or dec mov inc aam cmp lods lret xor pop int3 inc scas ljmp scas idiv push sub imull (bad) mov stos lods cmp in or dec jnp and iret decl out sub aad mov loopne ror pop ror add pushf mov jge mov aaa aas dec aad out lahf in push mul xchg xor ljmp (bad) in jl insl packsswb jp xchg fist push xchg fiaddl mov gs clc lcall (bad) xor sub mov inc xchg out dec mov les (bad) dec push pop sbbb (bad) mov (bad) loopne sbb inc loope sbb inc lods (bad) out ret aad pop addb pop out sub mov fldl push rcl inc (bad) out fsubrl iret sbb repz cs iret mov xchg pop pop jmp out cwtl xchg test lock or in xchg xor div out xchg jl and xor xchg mov dec fwait out arpl jns imul mov jmp loop pop aas or std sub ljmp dec fwait bound pop aad dec into sbb mov pop jg enter out add and sub cmp mov pushf add shr aas dec insb shrl jae lahf in push pop mov enter jle out xchg imul ljmp call pop push jmp pop pop stos or xchg cwtl loopne mov mov ja out mov sbb andb or icebp fcoms xchg sub imul bound pmaxsw out adc adc pop out push adc movsb out push push ljmp lahf jge fidivl sbb ja in fmull imulb xchg xchg or idivb scas mov or push in inc mov pop add andb (bad) and cmp cs (bad) out enter repz loope (bad) sbb lcall fnsave jns out loopne (bad) les and in mov lock xor leave rorb out popa push or dec adc fmul cld outsl mov push popf (bad) imul scas dec (bad) fdivr out clc imul jecxz mov scas cmc in test mov or add sbb es xor in pop ds in cmpsb stos mov out cmpsl cmp xlat ret out fistp pop outsb mov outsl xchg (bad) in sti les lret out popa jb cs mov insb pusha addl ljmp mov sahf inc loop ds iret into xchg jnp clc fwait stc stos pop sub decb push in popa mov or insb push pop dec out xchg adc push cmpsb sub fnstcw mov mov mov out xor sbb add jo dec imul push sar shll xchg jecxz jmp arpl mov (bad) in mov insl loop iret jns (bad) xchg sub inc push push ud1 or push push pop insb and (bad) ss adc stos outsb out out and les out rorb es ss mov outsl in repnz dec mov ljmp dec pop push (bad) pop aam mov pushf inc jns jl xchg loop shll fistp inc ret out inc into outsb jge outsl cmpsl sub dec in push mov out jno mov jl jnp iret out xchg jo mov xchg insl xchg and pop icebp inc mov mov into jl movq outsb sbb ss xchg cmpsl mov cmp and movsb (bad) test and sarl stc out cld repz pop xchg mov out sbb bound ljmp insl xchg sub ljmp (bad) jno icebp lock das mov addr16 sbb adc pusha ja jno sbb lock or in pop out pop aam les sub inc aad push adc or lret loop clc rclb out fs jo sub out movsl and icebp shr jnp pop fwait mov inc dec add enter jb mov out fdivrl jecxz push mov arpl inc pop push cli cmp sub mov in in repnz push cmp dec cmp push in out inc push sub mov mov cmpsb xchg shll jno mov pop mov or shrl movsl xor fs jp (bad) out insb aad daa inc out mov movl arpl sbb int3 add (bad) addr16 dec out pshufw adc lock xor cmpsb out xor mov lods imul cli out sbb pause rolb sub icebp std dec call out es add fs in sbb dec and rol pop (bad) push mov or inc xchg mov lret mov add jg lcall jne pusha cmpsl daa xchg push or orl cs shrl dec and imul jmp (bad) out loop or sub jno ret mov out fsubs and pop inc mov mov xor fsubs jne pop iret jb xchg cltd lock jmp and out scas sti sub jbe pop aam fistl in jl ret mov mov test mov das sub out xchg cmc mov mov dec test jns lcall sbb jg out shrl mov jb insb mov das inc add (bad) pop mov fdivp xchg ljmp jo and inc jg pop push lahf pop jmp mov cs (bad) jl imul fcomps out jne or stc scas shll fnstenv pushf pop sahf out add leave jp jmp sbb out movsb add rcl push sarl clc push out ret movb out scas (bad) bound std lock dec fs out mov xlat xchg sar ss cs xor adc stc out pop inc fxch inc (bad) stos dec jl jb out leave movsl addl loopne cwtl push mov aas pop and jmp jb mov jecxz out mov out pop pop and out jl imul pop and pushf out push loop in out dec cmp pop ljmp or out in xchg add iret pop inc incb imull data16 push aam cmp fstps ret (bad) dec jl inc insl fldcw imul xchg out in push fsubrl (bad) out (bad) out call xor mov cmc xor inc lret movsb cmc push (bad) out loopne loop adc dec pshufw (bad) ljmp notb mov clc push bound popf sahf sub pop xlat dec fisttpl mov fwait mov movsl outsb xchg fcomip scas daa iret into out ja les sbb icebp push dec out push mov cmp dec dec cmc xchg js imul jno pop out clc pop arpl (bad) sbb gs out stc sti pop xor roll icebp dec stos orb out xchg inc js pop out repnz inc inc mov fdivs cmpsb out out adc xchg push mov sub push sub shrb (bad) adc mov dec and out or mov push test mov dec push lds imul mov aas shlb lret mov xlat mov sbb mov xchg jp roll xchg mov cmp out loop into cmpsl rorl lret fisttp clc mov int3 out cwtl inc add sarl out andl mov add pop dec fisubl mov out push in les fs inc mov loop test or sub insl dec sahf out adc mull fcmovnbe pop mov aas push sti and iret call jno pushf test and in out mov not pop out xor push jmp pmulhw mov (bad) loope mov bound test test out hlt (bad) out xchg and fwait mov popa imul rcrl xchg iret lret je dec jne sbb (bad) out lret xor outsl pop ljmp add repnz dec repz xchg insb out sub lret xor gs repz jle mov jg adc cmp or jno out mov push stos xorl in xchg xchg mov inc pop pop int mov cmp sbb (bad) std pop jl out dec jne pop pop xchg popa test fstpl bound mov (bad) out mov rclb xchg enter mov sbb aaa or push adc and out pop mov fsub movl mov js sbb in gs cmp sbb jno (bad) push push and sub mov cs out data16 pop jg mov cmc out jne (bad) push fsubrp mov adc out jne sarl pop dec cs xchg loopne cmp dec jg daa enter adc es lret outsb into pop mov stc in lea or xchg xor cmp cs out jecxz aaa fisub sub push mov arpl movsl inc cltd (bad) out icebp pusha jp jo and ret out push xchg out int3 test mov out mov mov (bad) notl shrb or out or mov sbb lahf jns sbb mov out jb cld jecxz push call imul sub fadds scas or and fistpll fdivl push out pop xchg jbe pop (bad) xchg dec add push adc mov ljmp inc sub adc pop sar aad clc out sbb out sbb out sbb out pop mov in iret sub cmpsb int popf dec je jmp gs pop xchg pop out clc xor push sbb mov data16 sub out dec fwait jne jnp lret mov or rolb push out inc and jle mov cmp fcoml ljmp test xchg mov jge mov rcll xor xchg mov movb out ret or inc rclb in sbb jb mov xchg inc mov out fs xor aaa das out js cmpsb mov push ds sub jecxz fwait jmp sbb loop pop subl xchg ss arpl cli ret fcmovnbe adc out or fist jns dec out pushf iret fs mov out out sub shl les mov loope or mov lret push inc ljmp sbb in cmp out sub cwtl xor inc jmp cmp xor jmp repz and rol int3 cmp iret sub popf arpl aaa out lock rcrb out es sbbl jbe js jp cld aam cmp int out in pop mov mov and mov out and into sarl out rorb push shr jbe pop aaa (bad) mov cmp push insl fsubl mov int leave pavgw inc aas sbb lret imul lods mov es test in xor or mov iret out sbb mov mov fldln2 pop mov push xchg inc inc sbb jge call dec mov jbe mov xor outsl (bad) sarb lea loop pop jmp repnz ror out insl out cmp test pop dec (bad) or or push sub jecxz or lea mov ror xorl sub (bad) rol (bad) dec sub out fstpl gs lahf inc pop out jl lods mov push aaa aam sbb mov arpl imul (bad) rcl push js (bad) out (bad) mov aam inc out pop jo pop push test sarl out mov out rol pop or xchg fnstcw std lcall imul out push int pop sub shr out frstor out out pop or push (bad) std out sbb cmpsb push cwtl pmulhw loop int3 or out push cmp and jge pop out cli push pop arpl pushf cmp jno fldenv fwait out data16 push xchg sub mov push sbb xlat dec das or cmpsb dec outsb mov xchg cmp dec adc out xchg imul pop fiadd (bad) rcrl dec clc mov out ret push pop pop jbe out jle cmp out sub shrl lods movsb test aas adc xchg push subl call xlat inc xor pop out or popf in outsb (bad) repnz (bad) loope,pt jecxz aam lods int3 js lock inc adc pop xor mulb pop jg ret inc in (bad) aad out popf scas icebp mov push pushf sub enter jle repz fisttpl ret popf hlt scas out sub jmp sbb adc adc movsb mov and jge popa out pushf es aaa and push (bad) xor xor mov int mov icebp loope imul mov pop cli mov push aam xchg and js lods cmp ret cmc (bad) in xchg jle mov xlat jns dec push out dec adc imul xor out in and loopne in aas ljmp out mov or pushl out out jbe out push es out subb adc add mov adc (bad) add insl jecxz lcall ljmp out fildl jo pop lret sbb lock adc jmp pop loop jnp mov divl pop call (bad) std add stos packsswb ret and (bad) out jg (bad) ss out pop repz jno jo fildll nop stos xor test incb std rorb sbb sub (bad) loopne nop fucomp add adc inc cmc pushf shrl sub xchg paddsw mov pop xchg xor addr16 out (bad) pop dec (bad) sbb rorb iret jecxz jbe pop out (bad) fist mov out push out rcll daa (bad) mov cmpsb dec ljmp mov or ja (bad) inc fcompp and and adc jle (bad) xor in sbb notl jno sbb jmp bound xor sahf shl add lods push mov lock imul mov cmpsb fsubr fdiv or repnz out out xor jnp out hlt mov jae (bad) add lock out xor pusha (bad) out cld leave and addl dec out data16 add out sub mov cwtl out pushf mov cld inc inc imul mov mov mov andl xchg data16 rcl mov rcl loope or mov das push cld (bad) xlat sub sbb mov mov mov scas cmp shll pop icebp ja fidivl xor add xchg out inc or mov add pusha or test or and mov out mov mov mov je xchg lea push pmaxsw loopne nop sub imull mov outsl (bad) lods in out mov adc int and pop sbb mov jmp out loop dec xlat jb pop cmp sbb out pop mov enter mov out xor and scas out aad sti push out push adc adcb fdivrp loop or pop inc sub sahf cmp out (bad) jecxz and daa maxps push aaa dec mov sarb out cmp pop jns jmp push dec mov in pop push and dec dec mov out xchg notl out mov out fs add adc sub or out sahf test out mov jo insl xor inc push scas xchg fmuls insb push mov inc dec pop xor mov hlt imul mov jp pop dec pop fstps sub mov dec adc sar jg cmp or out inc fldl in dec xor or cmp iret mov es cltd jo movsb ds cmp adc pop and in jne lods fnop xor out lret test into jo sbb gs out std pop out aaa arpl sbb mov cs xchg mov (bad) pusha inc or in rcll rcrb les xor cmpsb jne add (bad) mov xchg pop jecxz and out dec rcrl jbe les out test outsb mov out xchg xor jecxz pop push sub push out or movsb popa mov add in xchg data16 in sbb enter and insb pop mov popa cmp xchg out push jmp lahf jo dec out and cmp xor pop jb jo arpl lods jmp add jne mov pushf push out mov aam dec out insl push repnz inc out jno cmp (bad) out imul inc sbb pushf push iret lock (bad) out lret cltd ljmp cli push adc pop in ret xor mov es dec (bad) xchg out ffree cmp and push sub jnp shl out sar imull (bad) lcall ljmp pop popa dec jae ret jg add sti (bad) sub mov aas fstp fs cmp js inc and mulb call dec or loope insb mov inc jno mov insb push lds and mov mov inc cli in mov xchg aas inc js push push sub xor dec mov out add mov insb add jecxz xchg out bound push imul and dec ja inc insl (bad) out je fildl lods out in (bad) in and mov out test mov fstpt inc cmp push sbb cmp jbe aad (bad) mov add add iret and out fsub mov daa out push push xor mov or decb mov rcr or out loop and aam in out mov pop mov push cwtl pop or or add mov mov pop cmp ret test jmp mov xor repnz iret out sub jge sub lods adc aaa cwtl mov out mov test dec inc xor in jge mov sbb movsb add shrb ljmp repz sbb inc pop mov jle add mov movsb pop fmul into fmull gs lea lods out fimull cmc xchg fdivl (bad) cmp jno mov out push ljmp out add fcmovb jl loopne dec das in xor lahf mov ss test outsb (bad) (bad) fbstp lods xchg fistpll leave jmp out mov pop fstl dec xchg dec inc les movsb imul cmc lock add test out mov sub pop rorl rcrb std jns out push out test push cld cs in push and cli iret out push lret scas out mov xchg cmp jns in mov jo mov (bad) out inc mov fwait pop out mov xchg out divl cmc ss push bound and fcmovb lds in pop xchg mov out sub xlat mov jmp out cmpsb or cmpsl fucomp dec in ficom (bad) mov and ret out imul dec loop cmp es cmp into iret jne mov cmpsl enter shrb (bad) ljmp lock adc js jno fild mov gs sub xchg mov out aam add sbb rcr out out cltd sub sbb popa mov push out xor jmp repnz out scas pushf or in ret mov sub out out fs std pop lods and loope mov loop mov in add mov (bad) out pop mov mov mov add test pop dec ucomiss or sub or icebp mov fwait adc lret dec out in pop cmp adc js (bad) mov es adc bnd out jle xor and out je add lcall (bad) pop sbb push out jnp cmpsb and jge mov ja adc lcall out jno out (bad) mov pop (bad) push xchg mov daa jg lret aam push sarb int3 test es cwtl sahf xchg jg bound out fsts push mov jb mov out mov jl and int loopne push enter or (bad) mov mov jno in or lret repz xchg ljmp xchg (bad) loop mov and cltd sub mov out dec repnz out xor ds add jecxz (bad) lock (bad) cmp imul fwait clc out pop inc scas dec add dec lock jne repnz push fist lods push out dec cmp aas add out fisttp addr16 mov jnp add jmp insb dec (bad) lahf aad loopne push fistp leave test (bad) fsts out xlat inc in sti lahf stos das cmp or jae ljmp xchg and lods lcall cmp adc push icebp inc out outsb js add mov dec pop sbb int out pop mov cmp out cmp ljmp mov add adc add (bad) fs out jne sbb aam dec out lea xchg outsb lahf fistp hlt pop enter and lock int push lahf les dec pushf mov negb out dec es add add ficompl iret mov inc mulb push repz cld imul sahf cwtl out popa jge mov cmp jb mov push (bad) lea movsb jecxz mov inc into mov push jne fsubrs pop jp call sbb addb daa scas ret cltd and cwtl iret mov sbb rorl out jle out jno popf sbb cwtl sbb (bad) (bad) lret fistpll mov fidiv (bad) out dec sbb pop pop out ret (bad) in adc cmpsl and mov pop (bad) int imul and shlb in (bad) xchg cs push in adc sub mov out mov out adc mov (bad) or xchg mov or out (bad) (bad) mov lea imul inc (bad) lahf push mov jbe out je (bad) adc push rcrl in push cmp mov aad push out sbb daa (bad) out xchg int test mov test sbb out or mov les ja insl lds pop lods cmp lock (bad) jl xor xchg and fcoml jp sub (bad) sqrtps push movsb out (bad) out out js pop jge inc mov stc jp add xchg sbb pushf insl xchg cltd cmp cmp fdivs out dec push in loope (bad) mov out jl cmp xchg call and (bad) mov test and int lock jo mov adc jb push sub popl inc loope push cmpsb scas loopne loope or stos dec out cmp xchg int3 add jle mov (bad) lods out in fmuls loopne adc sub movb out jo je hlt pop and out fisttpl push pop fsubrs addb and sub rclb cmp pop cmp cltd ror adc imul xchg outsl xchg pop setno in mov pop mov out out sbb lret pop cmpsl cmpsb push movsb xchg jns add sti xchg sarl out inc ljmp out aaa mov xchg aam inc and inc repnz push out divb orl pop or mov sbb lcall sub hlt inc jb pusha in fisttp out hlt movsb and mov ljmp out repnz push add lret insl aaa loopne ss or adc add dec fucomi ljmp lret mov into out mov sbb loopne and mov jle pop dec sbb or jp dec cmp clc out mov mov pusha out xor fbstp cmc lret loop cs sarl pusha push arpl jns shr xorl push push xchg out push gs add popa pmaxsw lds outsb push xchg sub adc adc cmp out testl out jg and jo pushf and dec pop daa mov push insb inc cmp xor mov sbb std repnz out mov mov bound xchg jmp pop push mov jnp daa adc aaa xchg jp push mov out inc stos cmpsl outsl mov inc out add lods pop out cltd add clc sbb mov imul insl jnp rclb (bad) cmc jecxz jl xor out pop xlat adc out jnp cmpsb cmp jns (bad) dec jb insl lds pop fcomip cs xchg xor mov jae jns sub xchg xor lret or imulb cmp rcrl mov fwait jnp bound xchg incb addr16 out (bad) aad mov pop mov add and cmp or call mov mov vmulss and nop fmuls cmp in repnz mov push pusha pop adc (bad) cmp call ror push adc cltd in (bad) (bad) shrl test out insb out mov mov movb out jo rol aas xchg dec push jo out fistl lahf sub shr cmpsb loope pop mov pop jmp lds sub jb dec repz sbb call cmpsl dec popf pop js lds daa jle into pop mov in out jb rsqrtps ljmp lods sbb adc adc or out mov mov pop (bad) shr movsl dec xor fistpl repnz mov out cld stc call push out jnp das dec push test out shlb out jae sbb cmp arpl pop orl cmc and out cli (bad) sbb sub mov jmp retw pop xchg sbb mov sbb addr16 jb (bad) fs inc cs repz es out jge mov xor shr rclb jmp xchg idivb out push fcomp aad xchg sarb outsb loope lea pop inc xchg cltd mov cmpsb mov pop pushf out inc fidiv sti xor bound daa hlt pop lret imul or mov and nop xor arpl mov jl mov pusha dec loope lods sbb dec push call mov push lahf adc adc cmp mov out push mov mov xchg xchg pusha out or fnstsw add jb aaa jo or out pop das push outsl repz out mov dec out dec jg pop (bad) cld fdiv (bad) stos jmp xor leave and ja mov mov cmpsl jb pop pop icebp mov xchg mov cmp jmp jo inc or dec imul test (bad) adc sbb repnz test dec lahf mov icebp outsb xchg insb out sbb cs adc push jo mov pop jl popf stos inc shrb push xlat fisubrl es loope in out cltd jae dec sbb icebp orb inc xchg sub test in push pop out icebp sub fdivs out dec add movsl sti out cwtl stc repz popa out lahf (bad) adcl bound fcoms in xchg ds ja jp or shr inc in sub out xchg xchg (bad) mov sbb rol and out (bad) popa mov (bad) insb adc sub call int3 pop (bad) mov inc ret xor clc push pop fs lock outsb out push inc mov out popa fucomp jno jg sub xor rorl (bad) jmp in add enter leave add lea in cmp fsts out lcall adc fisubrl mov loop jne mov or sbbl loopne (bad) jmp out call sub nop jae (bad) sbb out and pop xchg push into fsts lret dec sub inc push and pop (bad) xchg mov jp shll add out mov repnz cld in adc pop lods sub popf xor mov out (bad) cmpsb out add lds cmpsl stos sbbl sbb ret sub sub das les adc sbb idivb inc lock es and sub cmp mov out jle mov int shll (bad) mov cmp xor xchg std jnp pop pusha mov mov rorb xchg jmp movsl sub imul sarb nop (bad) test incb in in jl and popa ds test sahf fbstp dec iret push (bad) loopne out dec movsb mov jge sub or aad mov out jl jg ja inc scas pop das out pop shl fdivl fs arpl push mov dec ss ds push jmp inc fldcw repz cmp cmp rorb xchg adc loopne data16 mov movsb (bad) in scas sub ret cmpsb hlt fcomp jae sub loopne inc sub out dec (bad) cmp dec lock inc out pop inc enter inc stc out sub mov (bad) lahf xchg push jge in ljmp out insb xchg and lret mov push mov lahf repnz jge mov call out iret loop aaa roll mov and subl int3 lock out lods mov fcmovnb push push xor mov or lock in add call and push mov mov (bad) xor out out jl push xchg mov das pushf out mov jns push scas ror shrb jge sub mov ljmp out or adc repnz sub test icebp in (bad) and xchg push add jmp sub mov sbb dec shlb out fisubl int3 (bad) repz xlat in cs inc out (bad) cmc pop (bad) je sbb loop push cmp xchg mov and mov imul stos test das arpl pushw lods ljmp fsts out pop outsl lahf sbb adc fcmovnb push out std (bad) fstp push push (bad) jbe out mov stos sbb sub (bad) movsb xlat repnz int3 out fistl popa pop out jnp sub dec push cmp or xchg jo pop pop mov push out shr pop hlt cwtl arpl fucomi jle daa out or add into or fsubl jmp sahf mov pop out push or xchg out fnstcw call cmpxchg ljmp out jmp push das dec dec xor rorb (bad) addr16 sarl jmp faddl shlb clc add cmp rolb sub out add jb ret scas aaa out push push xchg sbb ljmp in jne xchg lret mov out mov fcomps out test scas arpl push and mov js call sahf aaa add out pop push mov aam mov notb pop (bad) xchg pop sbb add repnz inc iret mov push in xchg mov xchg push push xchg dec or xchg sub cs sbb lods fiaddl xor cmp cwtl out inc sbb sub lahf fisubl out sub out push push cmpsb cmp pop call shr add lcall stos sbb scas (bad) imul out outsl mov xor dec cmp int and cmpsb jae test sbb daa xchg xor out insb (bad) (bad) mov pop stos mov adc sub push bnd out js push out (bad) xor loop out ret jecxz out xor mov adc cmp (bad) adc inc ljmp outsl pop push jmp pop adc out and cmp xor or (bad) fwait ljmp push inc icebp (bad) in pop sub out fcos ss jb,pt out (bad) inc shrl mov scas xchg sub jb out jle mov mov adc out mov pop jne lret inc add xchg mov into sbb insb cs sub mov out xchg jbe and ret popf insl cmp out les mov out in (bad) stc fwait cmp out ret cs dec mov negl xchg push hlt rcr cmp loope cmp sbb mov lea mov sbb (bad) fild cmp mov out (bad) es mov sbb iret add je sti in lcall test movsl fwait in iret adc jge out jno leave lock and jns fwait and fld inc mov jne popfw gs out xchg add and mov adc adc out ljmp push out stos insw arpl (bad) adc mov (bad) jae out nop repnz mov push jp test insl mov addr16 ljmp ljmp loopne in test jnp outsb out movb push sti jmp movsb ljmp out add pop sub push sbb jnp fild out clc adc ja gs cmp inc out xchg lret addr16 jecxz pop out std sub jno out mov jne cmp loop push jge xor fildll mov gs ficomp out jp push cltd out mov pop xchg add push adc push or outsl out repnz sarl (bad) call sbb mov sbb mov cmc cld mov out call mov pop pop pop rclb mov adc std ja out jecxz ljmp push cltd and lods and popf or adc lret popa bound fs lods out xchg sbb fmull mov insl or add (bad) cld imul es jg lret xor out mov push dec and mov xchg ljmp and inc push mov mov cmp loop into jecxz inc pop pushl jmp xor imul or push inc push mov mov cs add sub pop adc pusha out push push mov add inc mov cmp xchg ffreep cld mov sbb out bound jb push out rol out jle mov mov ljmp adc mov scas push jl jg fstpt (bad) and sub cmp sbb out xorb adc cmc out mov hlt out sub pop jbe xchg adc inc fwait or mov enter ljmp cmp push mov clc ret lock fbld jae,pn frstor imul int3 out push int push mov jecxz mov pop xchg and xor mov loop push imul mov add cwtl faddl mov inc push and cmp dec mov mov rol in jno mov pop es dec xchg lcall cmc iret push jge (bad) in cltd dec mov icebp out flds shrb mov mov push iret ret ja lret and xor mov lahf or imul out test out xchg das pusha popa popf jb out pop cmp arpl je lea and ss dec and cs (bad) stos push xchg pmulhw into xlat and push ljmp loop lret aas decb mov jg jo lods daa lock mov in and js cmp sub jmp or test fwait dec and or fsubp pop test jecxz lods divb fist xor cld aam rclb (bad) mov shrl and pop aad jae,pt lret jecxz out into or mov inc push xchg daa out jmp js out iret cltd out std xchg xchg ret icebp pop and notl or sub cltd dec out xchg pop pusha pop mov dec out pop hlt jae push out pop out sbb mov outsl rorb push popf cmc jmp imul dec mov lret cli lcall fadds xchg push scas jmp fcomip xor loop jbe roll std leave push (bad) xor mov mov fmulp add xchg ja out xor aam mov hlt out leave push sbbl xchg (bad) out cmp loopne aad inc iret out pop movsl mov stos in mov out add pusha xor cmc ja cmovs push jp jae push sub jne clc in es xchg (bad) cmp mov scas jecxz cmp mov les adc loope cmp repnz ffree lods nop push jmp adc leave shld insb jae push jl inc imul mov and into call stos out jge dec int movsb faddp jb ds lods mov (bad) mov test and scas (bad) mov rol jns pop call into aas (bad) push cld out lods mov lock inc out pop xchg outsb dec loope rcl out stc int3 aad push in jns pop test outsl jle out sbb mov mov mov sbb (bad) jmp insb sbb out out repz xlat xchg lret sbb mov shrl enter mov int3 xchg hlt xor data16 out (bad) test out lods stos inc adc repnz icebp jmp and popf sahf out push inc mov stos fildll cmp cmpsl popf pop jmp inc aam cmp pop stos mov out cmpsb int add lret out call lods pop mov pusha cwtl iret arpl movsb pop push mov in popa dec adc or dec out in arpl test inc stc out lret rorl repz test xchg (bad) imul jo push lahf lcall cmp mov syscall lods (bad) in inc sub js cli out scas adcl test pop mov dec push inc sbb out fdivl dec in dec aam sbb sub fstl push loopne arpl mov lock movsb shr out add stos sub mov (bad) out dec idivl lcall sub cli xchg or sbb jg out fisttpl jnp out dec mov add mov out jmp movsb add shrl iret mov pop mov jo sahf out push and test imul repz push inc loopne adc xor mov mov pop jne or out push fs sub aad mov mov imul dec fldcw cmp dec cmp (bad) mov push or xchg xor outsl outsb lods or gs scas and xor pop mov or loopne sub loop cmpsl shlb push imul mov insb stos lahf das in push dec ja lcall pop out and cmpsl fs mov movl je ljmp les mov lret mov fsub xor push popa cmp loopne das in mov ds cld ret jmp loopne push icebp out inc xor cmpsb out addr16 insl mov cmc push out test loopne sahf inc push out push ja sub arpl lahf out jo mov nop push dec out lods adc jecxz and insl mov gs and ljmp out outsl in xor or push test icebp mov sub outsl insb and jmp orl push xchg ja push adc call out outsl pop mov hlt mov push add cwtl jmp rcrl addl mov es jns mov cs add xchg inc sub sbb sub fldpi fwait mov dec out lock mov repz inc sub xchg mov inc out sub fildl out xchg lock fidiv sub jl inc imul sbb jb,pn popa dec push ror push fisubr xorb jmp pop repz xor outsb jp ljmp (bad) stos sahf ror mov movsl in cmp push clc mov mov insb add test or xlat xchg fbstp repz sti lods xchg or dec ss ja cmpsl out mov out jecxz jae jb pop imulb shr adc and scas lret imul mov mov dec rorl lcall pop xor out inc (bad) and cmp mov out and ret bound pop add adc lea hlt cmp pop ljmp mov push sbbb aad in ljmp and pop out out and xor mov gs xchg cltd jne mov orb popa jecxz cmc dec (bad) out fistl shl jno iret push and fwait fwait sub pop imul inc dec push mov xlat (bad) sbb repnz cwtl out fbld cmpsl jg cmp stos out jmp sti out leave in jno lods fcmovnb out and fbld cs mov cmpsb dec sbb mov cld movsb xchg push jb dec or loop hlt jmp xchg and cvttps2pi jnp out out pop pop out adc out pop mov popa test ja push imul cmc pusha mov add sub out sbb jae ret jnp dec ret out nop mov pop gs pop pop inc adcb insb mov movsb les out xor push daa add sub xchg aam fmull test push dec sub jns mov popf sub outsb dec bound ret pop dec call fsubrp pop sub inc cmc ljmp push xlat loope imul mov in out out or insb clc iret fildll dec lock lods cmc xchg push out and mov jmp popa out data16 sub fucomip xor cmp out arpl ss in (bad) addr16 add clc xchg xor pop sbb (bad) fisttp sti push push fbld in mov imul out dec sbb push out mov sub jb out jl pop inc ljmp or ret pop sbb fwait stos push or stc or pop loope adc in push jne lahf pop sbb or mov mov fstps lret (bad) cld sbb (bad) mov lcall out mov push or mov pop iret arpl imul test pushf cmp mov sbb dec push outsb (bad) jmp (bad) cmc push nop fisttp adc push movsb fnstcw nop xor (bad) add pop jo lret inc or push sbb sbb lea outsb pop rorl fstpl lcall pop or sahf nop insl popl jb push into push pop popf repz cmpps sbb add pusha and jecxz cmp push sub aaa lock adc (bad) scas pop out sub aam jp xor js push jl out sbb adc out sub xor push fldt iret aaa hlt ja ljmp mov push test cltd scas push lods cmpsl jns (bad) out or add out inc mov jb xchg incb and std insl mov (bad) (bad) inc pop push dec adc cmp mov jnp addr16 adc daa aas test push out push push mov push xor out aaa jb xor inc mov jecxz (bad) aad sbb pop imul notb sahf (bad) mov pop jl sub (bad) repnz cmp out lods mov pop fs insl (bad) stos jmp out sahf and test out dec call fnstcw xchg stos push ljmp jb outsb out ret xchg (bad) incb push adc scas inc loop daa xor xor ss cmp and mov adc mov jp push inc inc int movsb push jmp rolb lods rclb cmp aad mov dec cmovb pop pop rolb sbb iret ljmp inc jne (bad) (bad) incb sbb or mov dec xor in sub push in or pop fwait adcl ffreep xor shrb negb (bad) or lcall push into lods adc (bad) jmp xor loop scas xchg sbb call out jo pusha loop mov mov out aam in stc int jno xchg pop pop jb push into sbb std xor mov jns stos mov out and out jno lahf inc mov pop mov xor rcrb push ret in out push cmp out rol and mov (bad) js pop cwtl iret jge cltd mov and mov scas faddl call les add mov mov bound out pusha jnp adc add nop lret jecxz flds push imul push pop test daa adc imulb cltd aam lods cwtl add xor push lahf outsl clc mov or fs in out jmp mov push iret mov outsb cmp and rclb loop out cmp das jmp out mov pop push call out outsl in pop push and scas xlat out rorb imul imul mov mov adc (bad) xor inc cli fs outsl and out add out push lods lcall pop (bad) pop cmp mov int3 and xchg (bad) adc adc out icebp jae lahf push xor fwait sub orl iret push jg mov ljmp adcl pop test cmp popf push adc xor out sbbl jo fadds outsl shlb out cmpsl repz stos ds xchg mov rol cld out dec mov push xor outsl pop nop push xchg mov daa or subl sub or das lcall in pushf out mov int3 sbb lahf pop xor out lods jl fistp pop leave andb in mov (bad) jae out xchg and stos in out dec arpl (bad) out add xchg mov pop pop xchg out add push cltd cmp add dec inc pop in inc mov out ret (bad) mov ja mov movl pop inc fwait jbe (bad) loop mov imul mov (bad) insb mov adc in test out out addr16 mov dec insb push mov sbb dec (bad) outsl ds ljmp arpl jb pop in push rcll out add leave out movsl xchg lret std scas addr16 (bad) pop jb add pusha jmp pop iret (bad) iret push rcl push in pop or out push faddl test mov jae pop dec fisubr xchg ret jmp insl popf out jne in ljmp mov sub inc xchg pop hlt pop mov inc testb dec enter imul daa mov push in out pop fsubl rcr ja rcrb xchg out imul sbb add in and loopne push mov sti out cs cmp insl xor fidiv mov out out dec les mov push in adc (bad) xchg jmp xor jb xchg fbstp test insb mov jmp sub mov fistpll mov jnp pop out xchg movsb mov mov pop cmc adc mov mov or jmp movsl sub push mov out test inc stc dec xor (bad) push fsubl ljmp out sbb out jnp mov (bad) dec mov popa inc ds movsb push andl insl out mov or inc sub icebp out loope adc mov jo lods dec lcall and in out push arpl mov push dec dec mov out cmp repz sbb add in hlt out scas (bad) cmc out mov (bad) out or out mov sbb enter add sti push mov loope cli cs dec outsl push pop mov pop and xchg jp pop insl imul das psrlq cli dec jecxz call cmp int call les sub push in (bad) xchg repnz sti sub (bad) sbb out sti push push inc ljmp pop and data16 fistpll fs push xchg fsts decb out xchg clc incb (bad) mov mov mov sar sarb jbe iret out or (bad) sub jg out je jmp sbb inc in cli lds xor or sbb and push iret scas xchg (bad) popa stc ss jg in sbb adc adc pop data16 pop dec pushf xchg out and and aad add call out inc pop test lcall out sub out es movsl fstpl hlt ja rcll shr dec push cmp loopne popa mov lret (bad) mov outsl out or das leave mov stos lock pop pusha lcall and out jae bound into push add out addl cwtl ja lds mov out in jns xor xchg mov cmpsl mov arpl cmp out lods dec jecxz xor fcomip aam jmp inc adc inc outsb add cld cmc mov fnstsw fs clc (bad) mov (bad) mov in xchg lods rep xor out cli pop mov cmp inc dec addr16 mov mov cmpsb or call in sub into or andl xchg cwtl stos inc inc mov repnz ljmp adc push (bad) push in and shl (bad) mulb out stos shrl lahf (bad) mov repnz hlt push sub xor xor (bad) mov cld lret mov lods jmp lea inc inc xchg sub and (bad) popa lret inc sub lahf fdivl add mov adc shrb jecxz stos mov xchg sub repz jg adc pushf ror in lds out addl push out into stos (bad) test decb fsub add xor out lcall or mov push sub test mov shrl sbb (bad) fwait or (bad) lods mov out inc shrl mov icebp or push fildll rclb jge mov mov push (bad) xchg or xor jge xlat push ret mov mov mov out jae mov ficompl bound adc inc es mov xor inc (bad) out out js out add in je out test pop jae loop lock pop mov out jbe clc (bad) hlt lea in push pop pop push lret in ror out mov mov fstpl jg pop into push mov sub jmp stc pop mov jecxz adc ja cmpsl out mov push into sub pop mov fsubr add ret iret push daa xchg adc dec (bad) dec mov sahf out roll stos push dec mov pop xchg cli jnp scas test ret dec jo mov mov and js cmpsb xor add hlt xor popf mov push loopne pop fsubrl aam sub mov mov mov xchg mov push cmp inc add sub pushf out out repnz pop rcrl addr16 out push in mov out cmpsl jbe out (bad) js (bad) ja loopne out add cmpl cli mov (bad) cmp out xchg mov lahf in pop imul in pushf push lea dec lods mov imul gs cmpsl mov out adc mov mov stos gs out and pop out repz push out loop bound loope sarl rcr add jle pop sub dec inc imul or call pop shrb mov adc (bad) jno movsl jne jo mov outsl call jge nop loopne (bad) imulb out call iret push xchg out cmp jns mov lret pop push or aam icebp xor push imul (bad) sbb xchg pop jg jae adc out out insb iret test aaa mov cltd out sbb fldz icebp movb mov dec push repz call out cmp out cs mov or adc shrb out dec inc push fistp in pop mov out mov mov out daa dec loopne inc shrb out mov sub pop and fimul jecxz and out pop inc aas push movsl popf mov lock out dec dec pop out int3 adc repz pop ret es scas into or jo sbb dec roll sar or dec push jecxz test mov aad pop dec ljmp out lcall test (bad) xchg and mov (bad) jno dec or out mov icebp lret out das sub insl out push inc out shlb adc xchg in test add arpl fnsave movsb out lcallw push (bad) loopne loopne ljmp mov stc pop lock lahf insl pusha cmpsb mov push xchg insl xor aas xlat sub inc lods out cli notl xchg mov mov push insb pop mov punpcklbw repnz push or push aad adc shll pusha jle lock fs lahf out setb sbb in out lret movsl xchg mov jne out inc nop out (bad) jo test out pop into scas mov loopne cmp out movsb add and (bad) fstpl popf xor imul push pop mov xchg jmp in shl das mov addr16 sbb sar or ljmp xchg in adc movsl scas out out and daa jb pop mov sti push out jmp pop imul pushf xchg adc push push jb out leave pop (bad) mov icebp arpl rcr mov mov fnstcw mov jg out cmp jle out imul subl inc sbb cmp mov pusha aaa and fistpll rolb jg out jns nop clc pushf out lods xor rol pop push loope (bad) cmp ljmp scas cmpl cwtl aas out ja xor in pop cmpsb out mov push fidiv popf inc insb (bad) and mov lea jecxz ret rcl lods out (bad) rcrb xchg ja jae inc out mov mov out fs xor repnz and insb dec mov dec das addr16 sbb add or push xchg out push pop scas and out mov inc je mov fsubrl inc movsl xchg in or jecxz push push (bad) push lahf xchg mov mov mov fdivrp sub mov call push xlat out cmp fistpl mov daa jmp mov mov pop in movsb or push repnz scas inc out dec gs mov cmp out ret xor mov out xchg test sahf aas cmc mov inc mov out jb xchg and arpl ss insl andb xcrypt-ctr cmpsl ficoml mov pop dec mov out push iret inc jnp scas call sbb sub (bad) sbb stos rorb out rclb xor dec mov out mov bt out jbe push lcall mov std mov cwtl lea (bad) cli cld dec out arpl mov out xchg sahf sbb add cld xlat adc jge (bad) shrb ljmp out jmp cmpsb daa (bad) (bad) xchg bnd js lcall scas xor icebp fstl in jge jp xor flds mov out cmp jmp shlb js dec shlb (bad) fsubrp psubsb lcall jp pop add out fiaddl jge and daa fucomi cmpsb fwait mov xor xchg add cs cbtw test (bad) cmp cmp push and out loopne sub jg stos add shlb xchg pop out mov or push fbld addr16 out inc and aas ds ret pop imul sbb jo pop mov jg or jnp cmp cltd cmp ret push push cmpsb mov (bad) sub xchg psrad loopne mov inc adc xchg ret mov fidivr fucomp (bad) test add mov pop (bad) xlat insl js cmpsb out jecxz sahf dec mov lods fs test ja add xchg pop pcmpgtd add dec jmp sub and or test sbb dec out jne test ret gs (bad) leave jmp adc int xor ljmp mov push ficoml insl aaa loope out fisub ret or cmc mov out sbb mov loope ljmp inc sahf push shrb ja nop iret inc aaa xchg push ljmp insl loop lods sub push call mov out stc int3 sub pop gs push test mov jno out and sub aam cmc arpl rcrl jge fildll idivl enter sub (bad) mov adcl leave sub testl mov loope (bad) xor xchg fucomip out sbb and sub mov leave out xchg outsl mov adc push and data16 pop cwtl ljmp out and out ss jle mov (bad) out out repnz and arpl fsubr push mov (bad) nop adc movsb lods (bad) loopne shr stc mov daa mov mov out in out loop cmp out (bad) scas mov aam cli imul add push sbb out out fdivrp es sahf mov dec mov fabs stc scas out movsb (bad) repnz aad rcrb out xchg cmp inc lea mov add mov xchg dec sbb (bad) sti fsubl xchg dec cmpsb jb jmp cltd fildll (bad) pop cs xor in sbb lods cmpsb int pop sar icebp jecxz fstl pop adc and fsubrp ja mov (bad) movsb stc je cs gs rolb xchg sub jge out dec adc inc out cmp mov adc loop xlat repnz adc hlt jo mov pop shlb out scas dec mov (bad) nop (bad) jo cmp push mov or cmp xor fiaddl pop fwait mov add dec add dec and js out fidivr fwait add fiaddl out loope lods mov imul call movswl ljmp jb adc xchg insb lock leave mov xor ljmp fistl loopne (bad) lcall in imul loope mov shr jae mov dec shll jmp ret rcl jns push fincstp pop pusha into mov xchg lahf out in cmpsb or loop jg mov and iret pop (bad) outsb mov rolb jp nop inc mov out popf rcll sub push enter push and inc cmp sub xor dec fisttpll pop pop push mov push out out fs ret jns xchg nop pop fldt push pusha loope (bad) aam out stos clc cmp add daa insl add adc nop shrb mov pop outsb je ljmp lds mov jnp xor or sub mov pusha mov or test (bad) in iret nop pop out jp push or out out insb bound out out loop cmp (bad) fucomip ret mov lock jns stos aas insl fs in and mov push jno out out iret (bad) popa xchg enter out ds lret sub or fdivrs ljmp adc lret and cmpsl je gs (bad) xchg out push mov (bad) (bad) out out out push add cmp mov insl int out testb sub loope dec xchg jae jle ds dec mov leave bound out lret fbld xor dec xchg mov fidivrl aad pop dec mov push cmp mov imul pop aam hlt mov push out dec mov mov inc dec out cltd (bad) and out (bad) int int3 jmp outsb pushf push jno mov or mov lgdtl std mov adc lock cltd sbb call rcr into add mov adc push rorl setl addr16 std iret and out out sub adc loope rcr sbb addr16 call push push fisubr push fwait pop jge hlt mov sub mov out sbb sub cmp cmp loope out mov cld jecxz cmc jae mov cmp sbb xor ret sbb test adc lods or pop mov xchg adc mov out push adc pushl inc lea mov fwait pop add push out call inc xchg fucomip sbb xor xor mov (bad) fistp mov mov insl inc inc out and icebp xchg aam dec cmp jmp sub out add fistl inc xchg xor iret je ljmp or daa adc cwtl out and (bad) cs or js or mov out ja dec pop lock pusha mov dec in pop clc ljmp iret out lods rolb push cltd loopne shll mov out sbb adc mov sub lahf cli out xor inc push js add mov lods sub out mov repnz and aad addl (bad) out lock dec xor out sbb hlt adc add push out or and out repnz je adc adc mov inc out js in int sub std shll outsl inc out adc adc es sarl leave aad pop adc xchg lcall xor ja xchg out pusha data16 or cld out mov out cs adc sbb lods inc call cmp imul mov outsb inc mov push imulb hlt sbb ds sub fstpl imul sbb push add icebp les insb add jnp ret (bad) adc mov loopne mov sub shrb cmp pop lahf es test decb sbb in mov mov adc hlt pop rol test push imul and mov into xor fmull fidiv popf int3 (bad) bound or jg xchg ljmp adc out out sbb fildll (bad) in adc or adc inc out test mov mov mov sub gs stos cmp sti push mov (bad) lods idivw lea sbbl push mov js sbb jmp nop (bad) les and xchg inc out xchg arpl or cwtl mov pop stos lds mov xchg xor cmpsb sbb in adc les mov pop add mov xchg out xchg push or xchg inc or pop ds in add fucomip cmp sbb (bad) hlt xor adc push in jg sti pop (bad) jmp pop addr16 int3 ja inc out jne push mov sbb out sbb mov jle dec jbe xchg cmp (bad) out imul push out adc cmpsb cli push push inc jge cld push out adc flds xor out xor jmp arpl xchg aas pop test pop pusha jmp add push mov mov jb sahf jbe loope or push pop pop mov out repz pop jge fstpl data16 pusha cld loope inc xor lods adc cmc push cmp adc out pop xchg mov aaa aad dec in sub sub xchg adc push and lods arpl add (bad) pop jns xchg rcrb mov dec mov mov fs out test imul or sub gs iret xchg les out scas lcall out mov ljmp xchg add test mov pop aam cmp ret xchg mov xor scas icebp push dec adc xchg out pop xchg mov pop push dec clc out pop iret loopne cmc test push popf aam inc sbb inc in test fwait pop sub scas out jmp repnz dec jg out mov fbld or mov ljmp aas mov pop and in lds sub out repnz out fimull xchg out int3 jne,pn mov movsl jo mov pop push xchg popa adc out aaa mov call outsl test add out mov insl scas rclb mov push neg push mov mov mov call out hlt adc cwtl ss jns sub dec mov push test (bad) jae inc sbb fwait cli (bad) pop inc xchg xchg and mov (bad) mov mov mov xchg inc and movsl out jbe lahf (bad) lret xlat js mov pop mov push out cmp add fistl stos iret dec test adc out ja stc mov out lahf insb ds aas or xchg out call jbe clc out out add decb push ret aas xchg push mov mov es lods icebp out add mov inc xor out jo xchg dec and imul cli int3 decl jae (bad) adc add pop out pop push add lahf cmp push mov jbe jno jo out cmp sub ja mov ret xchg jecxz sti out call and xor cwtl test mov lods ror push bound sub sub cwtl xlat push sbb popf out dec out outsl in push sbb inc mov mov xor and out sbb test or adc insb test mov divl imul outsl xchg inc (bad) ja fcomip and enter lods out pop pop std outsl dec lret out shll mov pusha xchg out test xchg addr16 sbb pushf aas lcall out cmp (bad) (bad) push sub scas cli out fimul cmpsb sbb fildll adc mov mov out jo aad stc int bound jnp pop sub test xlat (bad) push inc inc mov in lods lahf inc dec add call lock out mov adc shr cmp (bad) gs push int inc je lea out js,pn mov pop pop fwait mov call (bad) out and jnp imul loop movsl sbb and jp bound pop out iret repz dec in enter outsb mov sti insl out bound jl test fs mov xor ss mov out inc jo mov adc rol xchg les loop stc mov hlt jne fnstcw mov orb jp out or xchg fistpl or (bad) out sahf frstor std sub out dec gs cmc loopne jge (bad) (bad) jno out gs in popf adc test icebp popa out add or fwait out cmp inc mov pop push cld stos xor out xor out or cltd pop inc adc (bad) jae shr (bad) and in jmp jmp or (bad) aad in out cmp mov out fs pop pop add cs incb lret push dec jmp cmp push fs les test pop loop inc adc out cs movsl xchg (bad) out lods (bad) xchg add (bad) out xlat jns,pt adc addr16 lcall in jle sub xchg in in add jo mov sub std insl pop pop loopne xchg push fild (bad) or test (bad) mov push pop mov lcall rorl loop mov jg mov out out out out dec mov loopne push out cmp mov push test cltd in mov pusha std ljmp fs sub lcall loopne mov jg in ljmp cmpsb out decb mov out lock jnp pop ds arpl bound xchg out xchg sub out pop fmuls aad xor out jle or shll out add pop sti out fild cmp jg dec out insb cmp test (bad) repz hlt mov int3 insb ficoml jbe out sbb jo jno cmpsl adc pop cmp cmp outsb push int3 out inc loope or pop xchg push pop xchg mov push jne test cmp fdiv out cmp jb push cs popa fsub sbb dec and inc pushf adc out jno mov (bad) dec out out popa movsb sarb jbe mov fsubr mov cwtl mov out adc xchg cs cmc xchg cmp lcall inc out push xchg cmp clc cmpsl js mov jl sbb in or imul lret (bad) mov cmp fnstcw push sbb jno loop inc movsb popa out sub hlt xlat add test jmp mov mov fidiv mov adc daa shr imul xor call push cmp pop mov inc gs xor sub push fnstenv mov push jecxz mov mov test out testb jmp jne pusha lcall in cld mov pop ja aaa sahf lret mov xchg push popl mov or pop imul jne ljmp out shrl mov std mov sbb sbb inc shr scas add jb int out xchg addr16 adc bound mul xor cmc sub sub dec push sahf int out sub fidivr test lahf pop loop mov fildll (bad) mov movsb int3 call outsl lock ja shr mov jo fwait mov pop mov out pop outsb ljmp mov sub cmovae sahf out ss scas int3 repz xor lock out pusha sbb outsb das out fildl js out lock mov out cmp andl cmp or mov mov pop lds xchg jne xchg jo and cmpsl pushf (bad) call add popf sub test mov cmp or pop mov out les out push lods xor xchg jnp out adc add iret pop inc (bad) (bad) ja cmpsb xchg or fwait pop jg sub mov mulb cltd outsl leave addr16 pushf out add imul dec outsb out dec xlat sub add dec pusha scas daa (bad) scas test loope dec movsb imul push out push scas ja,pn adc out (bad) cli enter lods dec out jo dec or fist repnz cmpl movsb push in fldlg2 (bad) jno rcrb xlat fbld mov and adc out ljmp pop adc decb sub dec sti dec jmp xchg mov adc lret out f2xm1 repz pop add xchg idivl out dec mov shrb fisttpl call dec out and fsub pop cmp mov fisubl imull mov (bad) hlt out jnp dec jg fs out mov pop rclb out repz fsubrs mov inc out test lock lods jnp push ljmp (bad) jecxz pop mov sub in imul cmp add push arpl jle outsl (bad) or pop inc push negl rolb jecxz iret sub push jge mov out daa ss add mov (bad) sti mov in mov jnp sub das out add jp fcmovu dec mov dec push daa out outsb out mov repz notb or push adc lahf out mov lods ss out outsb push les add jmp aaa push int3 xchg iret addb sub das adc adc out jmp mov xor xor push ror lea mov mov jg iret popa and add mov (bad) stc and out sub lds out push jns pusha dec xor arpl es out adc jecxz lret loopne int3 xchg outsb add jb mov sub (bad) jge and pop cmp out sbb insl inc fisubr ja movsl loope adc call fist cmpsb fsubr mov bsr iret push ds xor mov add int3 mov cmp test movsb loope xchg fstps jb sahf xchg shlb je out js jl into out push pop fucomp scas push stos xchg roll stc pop popf loopne outsb popa jecxz clc std (bad) icebp fnstcw jnp and push nop cld xchg mov in jge mov out out in rcrl xchg mov fcomps dec scas pop stc or push out ja ss (bad) imul jae xchg out jp jns inc mov jecxz lods out pop mov in fs inc rclb int3 add and out shll adc lret popa out jmp sbb sub jb inc fstpt mov out sub mov push cs sub pusha das test ljmp and lock pop mov in ffree out icebp and jae adc xchg subb clc (bad) pop hlt stc cmp iret negb stos loop lcall xchg test jne scas out lahf (bad) rol xchg and mov mov les out adc stos (bad) dec cmpsb aam jmp out in mov into ja jl enter shrl sbb add lahf loope jns out pop dec push inc out xor into (bad) iret flds imul test fcmovne dec cmp xorl inc ss out lcall lods rorb jmp popf cld or (bad) out cltd (bad) fst mov les iret aas sarb dec dec sub mov mov cmp xlat dec adc fldenv ja inc jae out cmp arpl test cmc sub push sbb xor fcmovbe lock cmp loopne xchg push out mov aam sub daa jmp fcompl jb std out add pop dec orb mov dec sub xor nop (bad) es mov or cs jl add inc aam push mov inc xchg pop xor insb jbe mov (bad) in (bad) jl add pop lds call xor push out jb out in (bad) cmp (bad) int fbstp pop out pop ljmp out push cmp (bad) cmp cmpsl sbb push and mov in mov out rorb insb inc das cli js xor ljmp cmp push jge out jl lods push cmc repz fild aad fldcw and ret pop push aaa (bad) out add cmpsb mov inc or mov fsubr adc mov lret repnz aad (bad) adc sub inc cmp pop enter mov (bad) or das jae imulb out adc dec lcall fmull (bad) mov out imul dec mov fildll (bad) mov add es hlt lret out or lds jbe das push mov pusha xchg lea test iret or or xor mov decb loope popa into fbld cmp in mov adc inc pop mov xchg lcall int3 mov ss loop jecxz jae leave out fbstp dec out adc fisttpl imul inc dec cli sahf pop repnz out (bad) adc pop out sbb or pop sub push cmp out test jno ret dec xchg mov sub out mov in imul adc jo or sbb bound inc in jge (bad) aaa pop popa iret sub cmp mov fiaddl xchg scas mov or pop inc in xor xchg cmp aaa std stos xlat out dec not scas outsb repnz repz imul dec pop pop adc cmp pop out orl out test lea sub push out cs lcall sahf out movsl jbe push es mov inc lret lahf js out loopne jo je cmc lea pop push (bad) enter loope or dec (bad) imul jb (bad) push aas (bad) and aam fdivs out int3 jbe adc inc aas push loop lret rolb xlat pop fcomps arpl aas in sbb (bad) jecxz out pop mov out xchg data16 dec mov loop cli adc out iret shlb popf addb mov pop add addr16 jge insb adc sbb cmp mov (bad) in int inc out rcll jno out lahf sbb xchg or cmc add aad out mov ja (bad) mov cs cmp pusha sub stos in cmp inc insl scas mov sub ljmp iret mov hlt mov leave shrl stos ja,pn test inc in sub js push fs out cltd mov cmp stos ds or (bad) and push (bad) cmp jne les fidiv mov mov dec jae push out std mov rclb or (bad) outsb (bad) divb fcoms sub push xchg cmpsb scas out fimull ds mov out or fnstenv out jo leave call out fwait push cmc cld push mov xchg ss hlt fist mov mov repnz test xor xchg aaa lret (bad) imul test adc mov ss jecxz in cli pop mov arpl xor cmp adc sbb add or jl add jns adc jne cmp cmp sbb inc lods js pop lods xchg xorl out xchg xchg int3 hlt jnp sub int adc inc adc sub and xchg jecxz xchg push imul (bad) mov cmp push inc cwtl cmp xchg and jle pop push in divb data16 jecxz call and inc push xchg pop fsubr loopne in aaa test jmp inc insl jbe push sub push add out push cwtl sarb js ss (bad) mov xchg jbe fucomp dec cwtl test movsl mov stos pop and jbe das clc test ljmp jnp mov pop cld mov popf out push xchg out mov pop aas bound cld fmul int3 loope les cmp xorb cli rol loop mov cwtl (bad) pop adc xchg repz clc ss ficompl into shrb cmp mov nop out scas lret dec xor mov enter dec test sub xor pushf fwait addb (bad) bound shl adc out hlt or mov shlb and aaa mov inc out imul out pop mov call stc shrl out cmp jne cmpsb inc lods jg icebp mov insl ljmp fildll loop or add mov push loop xor or arpl inc xchg (bad) out cwtl adc aad js incb dec mov mov or fmulp lock fisttp sub or fs out mov movsb sahf repnz mov lods mov fnstenv cmp lret loopne adc jno push bound (bad) out sbb dec dec jg fistpll ret xor cmp jb rcr lcall popf mov out add push out inc out lcall fnstenv shl jnp inc ljmp push sub lds jp out inc bswap inc call in fs cmpsl mov out call push and xchg inc out shr pop jbe push jno out xor mov out pop ret adc lea imul jle lahf (bad) in dec push ss or aam std cmp lret notb das pop fildl add loop mov rclb out add push loopne addb imul jbe pushw (bad) lret mov inc pop test insl lahf iret adc sbb ret cltd daa out push call test or mov push imul ds jo out lea and pop out loopne pop pop push sbb stos sbb or (bad) mov out jns dec es (bad) out fnstenv decb addr16 fbld or sbb fist push mov sub xchg addr16 xchg inc rorb mov xchg dec xlat sub add mov aad ljmp adc lcall and scas jmp int je mov cmp ljmp test movsb and imul lock mov cmpsl test adc ljmp jne sub xchg sbb or clc pop adc dec lock hlt or adc add aaa push jo sbb bnd xor jbe fcompl (bad) into push mov in in rcrb ret push iret pop out cmp int3 lret xchg mov ret jbe mov and sbb out loop mov call jnp xor out std in (bad) loop psrlq sbb xlat lahf outsl aaa lock insl sahf cmp mov sahf iret cmp jle sbb sub gs pop lcall (bad) out in jnp xorps sub jno mov mov addr16 adc jbe ds or push out insb (bad) push push cmpl inc into (bad) clc mov lcall push in aad jnp incl xor sahf out shr or pop inc mov out in out xor es and das imul pop je loope addr16 mov pop ljmp stos pop popa cmp push out arpl sub daa out ss addr16 repnz icebp mov and loope aas push arpl ljmp in xor gs add mov xchg outsb aas repz arpl push imul or iret mov push pushf orl cmp call fsubr in jle add push or add out lock adc xchg iret arpl sbb int mov fldz lcall push fisttp add repnz subb xchg cmp loopne icebp pop pusha roll out xchg mov xchg out addr16 in dec push in or leave and (bad) mov out fldcw push (bad) sub push jbe cmp jo xor ljmp out dec mov cmpsb xchg xorl pminub jmp pop insl jl cmc rcrb fsubrs pop push sub std mov push mov push xchg notl pop or push out mov cmp xor lods adc ljmp arpl out aam dec xlat out cmpsb mov loop out jle xchg stc fs sbb movsl pop add sarb dec xchg add mov test icebp pop gs std inc (bad) xor fist insl addr16 out ret sub jae stos fdiv sar sbb pop insl out (bad) movsb adc bound cmpsl jecxz push stc mov mov cli movsl adc jns push cmp xchg out ds (bad) push (bad) gs mulb movsl in push cmpsb add out in stc mov out inc xchg daa scas insb repz rcrl dec lods push dec outsb aad sbb or out fwait les sbb lock xchg xchg out das movsl nop mov pop mov push ljmp mov out jo lahf cmpsl daa fwait jg out push xlat inc icebp pop xor ljmp mov sahf xchg add pop stos add in enter xlat ret out (bad) out into std xchg inc add pop pop mov dec test pop rclb clc mul xlat out lret adc jg push sub out les enter pusha decl out sub and decb (bad) cmpsb mov cmc loop sub push or fldz mov jge test enter adc pop pop shrl or lods pop and (bad) stc xlat out adc sub test fs (bad) push cmc out leave lret mov rol out push jno enter jbe xlat out insl lahf divl pop cwtl cmp je push or inc sub cmp (bad) dec out sub inc shl test out mov subb add jno aaa rorb (bad) in jb fdivrs enter and movsl mov out scas cmp pop js mov jb lahf ficomp xorl inc cld mov in aas ss loope dec cmp inc dec mov mov fildll enter out cmc lahf out mov cmp out (bad) mov mov outsl call push fisubrl fdivrs test inc loopne sub imul pop jno dec jp add lret sbb xchg scas out cmpsl adc (bad) sti ficoml or test jnp int push pop out jl out aaa in xchg mov xor out sub jl mov test std jmp xchg sub jo push insb lcall pop xor sbb adc loop adc mov out lock mov or inc leave fbstp jo popa jmp ret jnp dec adc lods sub out (bad) in sub add xchg sbb mov jecxz popf jnp adcb in (bad) out mov mov inc test out iret cmpsb push mov xchg es mov fistp dec iret xchg jo in out (bad) mov aas xchg sti add fs iret rcl mov data16 jb out (bad) jp fcmovbe pop jge das mov (bad) lret cmpsb shr mov retw adc das sbb xor sub pop dec lahf and fucom out push loopne daa mov mov popf inc popa push out mov int lcall sbbl adc xor lods addr16 lea pop push xchg out sub outsb cmp call into xchg mov out add nop jg inc stos adc dec jecxz addr16 hlt xor sub xor dec xor in fwait out es xchg jno or fsincos lods out sub adc mov sarl cmc (bad) test imul xchg aas outsb sbb out or jb mov outsl out (bad) xchg jle pop dec jp out popa mov push and jmp out int3 les mov push cwtl movsb out outsl mov or jne in jno or (bad) enter into aas push mov push out adc xchg mov out sbb std dec imul adc push xchg xchg jo scas dec shr xchg add ret fnop jno in jl int3 add movsl add out inc ja out dec sarb mov es or jbe lret mov icebp xchg scas inc add jmp jg mov mov scas (bad) shlb mov mov out xchg mov in mov pop sbb sbb pop mov jne pop lods imul pushf inc (bad) cld mov push out sub adc nop and cli popa out jecxz test mov cmp push push mov out adc push jp call arpl pop out stos add mov sub adc out jecxz pop call out out xchg sbb mov mov aaa adcb mov or fcom imul int lods loope cli xchg out test and notb mov es xor lds out or shr sbb cmp es cmpsl or in icebp pusha movsb or pop push and mov add mov shrl movsb loope dec aas sar subb rcr or cmpsb fwait hlt out (bad) and add out mov in pop aas push out out repnz jns adc fcmovnb push testl push in push xchg (bad) cmp scas fwait push stc popf std mov das mov test loop sub pop aam inc loop dec lds out lret cwtl ficomp push and push out sbb ret jae xlat (bad) xchg xchg in xor iret (bad) sub (bad) outsb sbb ds enter (bad) std mov (bad) jno in daa fsubrl xchg out lret mov xor out shl mov mov mov push sub icebp lods push out jg mov imul mov and ss xor out ficompl repnz sbb cmp out mov xchg out xor lods push aam dec adc mov mov push xlat imul pop or rcrb in stc sahf call dec clc pusha enter addr16 subl mov out adc xlat and iret int3 push sbb and pop iret inc lods stos fidivrl imul cs adc xor sub or xchg jmp iret cmp and insb push outsb and out dec loope xor imul repz push sti cmp jl ljmp xor fbld outsb iret loope pop imul mov fs mov lret sub mov inc insl mov jg enter mov out sbb dec push out fdivl inc mov xlat shr mov (bad) daa mov jae sarl dec out pop arpl aam nop fisttp inc adc loopne out stc pop jo test sti aaa out cmpsl out ja mov addr16 cld out jg in (bad) sahf pop jnp popa pushf (bad) jnp pop out mov fist out xchg inc inc sti mov or lods inc push int3 stos iret pop sub push and test loop xor call fs push (bad) movsb aad fbstp xor repnz rcr add js loopne insl push xchg in push divb mov cmp loopne,pt out lods jp sub arpl out inc fwait (bad) loop (bad) pmaxsw sub lret push data16 das cmp lahf out sbb cmp test mov cmovnp call lret mov shlb cwtl push jb xchg cmp add out test int ret push aam out imul mov lods mov mov jg inc stc dec pop (bad) int3 loop clc outsb and add out sub movaps test mov jl xor aaa out mov ljmp push outsb fsubrl pop push aaa shl imul dec cmpsb std js stos loopne stos cmp and aad (bad) xchg push mov and jg outsl in mov cmp xchg jp movsl fs sub push cmp adc jecxz test add adc dec sti mov out mov je sub pop mov add icebp and out lret sbb in fucomip and push sar xor fisubr xchg outsb dec addb push mov addr16 jne loope dec dec xchg lock incl in add jl std dec add dec pop inc mov hlt mov add pop iret xchg std mov xorl or scas or out xchg das mov inc dec adc ljmp test popf mov insl xchg inc repnz dec out or mov in movsl cmp and cmp insb out (bad) loop mov cwtl mov lods push out popa pop loop or mov int fcompp xchg cs pop (bad) cld imul lds fdivs (bad) ljmp xchg add mov sub inc add push pop ja out jbe in sti gs inc das fidivrl cmp aad rcr mulb pop out mov and icebp inc jo inc data16 stos out and (bad) mov mov mov lret rclb cmpsb cmp cld sbb sahf lods or pop jecxz add out sbb (bad) pop inc iret fs mov ljmp add push inc dec pop xchg mov push jecxz xchg mov adc mov (bad) out add iret push push das mov mov popf adc mov or dec loop daa insb cwtl pop out mov dec push out ret outsb push nop imul pop add jg mov lahf sub mov adc aad dec (bad) repz fsubr (bad) out push mov call (bad) out xor imul and jmp out xchg adc lret out sahf out stos mov (bad) or inc cmp in out xchg adc mov mov dec ja out mov xchg jnp adc adc in mov (bad) push pop out loop out xlat lea adc or iret mov shll mov fdivs lret mov fimul adc aam mull and mov out pop (bad) call (bad) cmc hlt cmp lods mov out jb mov gs mov outsb out aaa cmp sub add out int3 adc out push mov mov insl imul pop mov in pop push jne fdivrl (bad) lods rol out push out xlat sub cld data16 loope push fs fimul push out pop sub and insb or (bad) loope sub outsb add xchg adc jns vaddpd out pop bound xlat into mov pushf xor call clc popf hlt pop jmp iret lock mul ret xchg out jg int movsb stos xchg inc jbe out or push (bad) rcrb pop fsubl push dec sub mov jbe out sti and ja xchg sbb push sub pop arpl pop mov (bad) pop enter add mov lcall push aas push inc mov arpl sub jae pushf cltd in repz out imul xor add ljmp out and jge add or pushf sub and jle xchg call and push pop dec jns adc in decb inc jg fistp pusha sahf mov dec cmp jmp ret outsb mov addr16 fldt mov push idivl pusha repz dec mov pop std cmc jbe mov (bad) mov dec aas pushf push (bad) stos cmp lods mov loope out dec out add stos mov mov stos or lock ja lds push xor or sbb mov xchg inc loop pop call xchg loopne popa xchg cwtl fincstp jge (bad) fbstp jnp adc sarl pop rcrl (bad) add and mov fimull mov data16 pusha inc (bad) xlat pop mov xchg cwtl js dec loop ret scas test in lahf arpl daa aam loop jge (bad) sldt ljmp fcompl and ret mov dec mov je aas jl ficomp ljmp out cmpl outsb rolb mov mov jns (bad) out lds inc sub or insb dec jmp or out fmull add rcrl out dec bound in loopne adc test out fsubl xchg pop inc clc push push out pop jmp mov xchg push setns in xchg inc out stos movsb cmp das das testl in xor jmp xchg jno arpl out pop shll popa add sbb rcl div xchg jb ret out or stc in (bad) fmuls sahf aaa (bad) call mov out insl xchg sub out gs inc xchg iret hlt aaa (bad) lock lret cwtl out mov add inc sti test out loope out pop lcall sub mov movsb jecxz jb lock fmul push xor leave pop out jo out xchg bound xor mov jmp out xor pop movsl xor cmpl scas pop fisubr in in and xchg out push ret pop cmpsl or cmp out pop lahf pop pop (bad) in adc cmpsl dec mov xor jns or enter xor or arpl imul cs inc icebp shll dec mov andl sub into cwtl scas pushf add fist mov mov in xchg cltd cmp repz out pop ss push shll pop js stc lret push cwtl insl and mov pusha (bad) adc xchg out sub nop in sub out push add ja xchg push rcll lods jg jnp insl repnz cmp enterw out push loope jno mov imul cmpsl sbb and out cld pop popf inc sbb cmp fildl mov out xchg mov int out xor xchg mov fwait test outsl sbbl cltd mov mov out dec inc or xchg mov xchg movsb fsubr sub lahf jbe jmp xchg push sbb shrb rcl xchg xchg mov xchg pop inc icebp xor pop dec fisubrl adc xchg (bad) jae (bad) mov stc jo sbb out push insb mov enter aaa lcall cmp out or sbb lcall sbb xchg or pop andl leave repz add rcll ja adc out ret or lods mov fildl (bad) ret mov out adc jp xchg out pop cmp mov out loope push mov inc jecxz ret mov int3 clts sub addr16 mov jmp popf gs pop iret andb (bad) fs cmp mov mov mov cwtl jbe jg out stos jle dec mov lea out (bad) xor mov xchg (bad) and test repnz outsl xor push movsl out emms push mov inc dec (bad) stos ljmp pusha mov pop add into sbb ljmp xchg out dec test outsb movsl cmp push rcrl testb push out xchg sub fidivrl pop dec lds sub out out mov in mov pop xchg iret iret or (bad) in test jecxz pop out sbb push hlt test stc out xchg or add pop movsb rcrl cmp and inc rorb (bad) pop sti mull mov imul (bad) xchg sti aaa loop arpl loop das lds and xchg xchg dec sub adc imul mov pop loop nop dec mov sbbl in xchg or mov and add les addr16 in xchg add movsb daa fnsave imul lcall mov jns scas pop and push mov test out or cltd mov rcrl adc mov sbb fcoml jle out jge add push jg cli mov sub sahf or mov loopne out ret movsl lea push lret into dec out mov mov bound jg and rclb lcall or out out pop jg cmp hlt cmc adc and cmp jg or or popa out mov cwtl or mov xchg mov in add cs out mov and xchg inc aas fsubl neg out push sbb jne and data16 sub out fcomps mov xchg scas out mov mov mov pop xor test dec (bad) arpl addr16 add stc push in mov into ror mov pusha aaa mov jg out dec add daa out jl addr16 push cwtl je push rcrb loop test mov mov test fptan iret int in lods in push mov jle cmpsl dec stos push mov bswap pop jmp or jmp out adc pushf inc push fidiv inc mov out fwait pop dec fprem1 jp cmp fisttpll loopne sbb inc scas aam mul out mov faddl jl or aad cmpsl pop and jnp out and jl mov pop mov aam pop ljmp push out lcall inc out jp or outsb cmpsb rcrb mov inc xor jecxz repnz popa dec out mov ds in shrb dec sbb movsb shl sub mov in decb jo sub sbb insb pushf icebp lds push ficomp mov push std sbb push js fisubl call orb xlat vxorps adc fs out mov outsl in xchg gs cmp lret adc ja add inc pop (bad) lock out lods cld aam cmp sbb out leave pop orl out shll insb adc pop sbb movsb jo xor mov mov insl mov subl push mov jo ja jns (bad) lods pop mov push mov in cltd aam (bad) loope push mov pop jmp sbb addr16 mov mov mov js adc out pop sbb loop push (bad) ja sub fstpt out lods sarl out repnz cmpsl adc cli jno dec xor mov push loopne leave xlat jnp mov stc pushf xor dec (bad) icebp inc inc mov and sub ljmp rclb or xlat test in xchg notb imul loopne sahf fdivr push icebp jecxz lret insb (bad) jae jb jns fbld inc cld pop je push out inc jge mov mov insb nop mov xchg aaa ljmp (bad) (bad) loop adc (bad) xor sub xor sti movl (bad) mov out lock into mov sub (bad) mov fsub out inc int dec in sbb rcrb fnstsw jg cwtl fs je xlat jo out popf and push and popl mov and push popf outsb shll out in xchg inc fstpt cmp rclb out pop fldz push pop pushf outsb mov fsubrs and xor movsl pop sub addr16 paddsb mov push jge and mov cmp or outsl inc mov es adc cmp lods jnp add pop push inc aad xchg out (bad) mov jmp movzbl mov rep test insb das in mov mov (bad) outsb mov cmp in notl and mov add pop inc out ja lds fisttpl sub xchg jl orl (bad) out flds mov out push sub idivb movsb dec shrl mov mov sub mov push repnz pop sbb push outsb out imul (bad) mov test add and jge int cltd sti push roll fs jl mov xchg sub out test jae fcmovnu in jo out cltd cmp jno xor pop and fwait xlat jbe lret jae push mov jmp push call lcall lods jb icebp iret loope (bad) or lret out push adc xchg out push cmc out outsl mov out loopne jmp jo (bad) xor out inc fs cli frstor xor test pop xor mov out xchg pop movd loop and out movsl popa fildll out push in pshufw push jg rolb jno test jmp cmpsb negb pop mov aad pushf loope sub insb out lahf jl pop fdivrp (bad) out out inc and mov out and aam fnstsw mov and mov aad in scas loopne fdivl fnstenv out jb cltd add fistp bound jbe mov out divb rclb sub in aaa mov aam fist cmpl adc pop out fiaddl inc (bad) je jp cmp out adc lret mov fsubr ret and jg jmp cmp jns ret adc xor cmp out push and (bad) fldl fs (bad) pusha push push call orb aaa adc pop imul out mov (bad) dec push jecxz ficoml cmp inc jbe push cmpsb jge in leave jmp aaa jg dec and das xor adc jbe mov or pop cld repnz ficomp or sti loop push pop out imul out movsb sub fisttpll fidivrl out pop sbb dec sub out cmpsb add jmp dec and mov inc call xchg int3 inc scas lods push (bad) loop sarl lods subb inc loopne push inc jl out stos int3 push out jne cltd inc rcll arpl push into aam movsb mov cs fs and push out push push xor pop sbb ret in xchg xchg loopne pop fcmovb pop lret out fisttpll jb arpl push test out gs pop jbe cmp mov loope insb push fldenv bound (bad) aaa inc fcomi bound in cmp cwtl (bad) mov (bad) in mov pushf mov scas xchg sarb out add movsb (bad) or pop aas fwait lret jmp insb in push repz data16 cmpsl arpl std dec loopne cmpxchg ret add pushf fdivrl btcl mov es cld out insl popf call je or cmp jge pop cmp in cmp dec out bound rcrb out push sahf in mov pop pop iret adc mov ficompl jmp out lods (bad) dec bound loopne scas mov push stos adc mov addr16 pop fadd push sbb ds sahf std (bad) or or gs mov imul dec mov sti add push popf out jle int movsb sub dec out mov add mov push ss pop fsubl sub int out cld sti mov adc mov inc mov popw push insl inc push jne cwtl push sub adc out add out cmpsb cwtl fst cli push (bad) repz add adc lock jb push or roll loope jecxz mov or sub add je sbb nop jbe pop out inc fdivrs pop ss iret jge int3 xchg jle out mov xchg xor out rcrb loopne or (bad) out sbb leave mov pop sti imul sbb mov repz jle out loop and cmp pop xor inc into mov (bad) fist sbb out cmp (bad) icebp push rcr and dec fsubs gs pop fstps js and out scas hlt pop xor test dec push push (bad) test verr aas or in into fistp movsl arpl movups push out xor jns jne out sbb mov push cs mov sub dec mov adc jle mov sbb xchg jne aaa sbb mov xor aad out mov (bad) and outsl lods sbb push es push out jmp in jecxz icebp xchg lret imul mov mov xchg out jo inc lcall out fcoml aad gs cmp out repnz or sub call rol fbstp mov fidivl xor mov out mov push mov out push mov std out jg lods imul sbb fidivl js fisttpl mov inc sar dec shl popf dec out mov (bad) lret lds out cmp or and (bad) pop sub mov or stos mov mov in mov aam sti xchg mov mov aas rcll lock inc xchg out xor divl or out mov lods sub out (bad) test rol xchg cltd out mull subl fstps pop ds mov enter push dec call ret je fidivr out pop rolb sub xchg push (bad) rol aad dec enter cld insb outsl (bad) sahf das sarb cmp ret xchg (bad) sub movsl lods lods adc push es icebp lret mov (bad) and gs ja or push out cmpsl ljmp xchg add add xchg shr dec (bad) jl mov pop sbb push mov lods cmp lock iret and fcompl test jae daa data16 ds xor loopne or adc pop fnop (bad) pop seta push xchg in jns out rcr (bad) xor cmp out test dec aaa test (bad) fcmovu pop mov ret in lret out icebp add cs push fwait jns cwtl out subl les mov add sbb dec jle enter out pop xchg push lock pop xchg jecxz pop mov in cltd aaa push movsb or jo or ja fucomp fsubrl or (bad) jb pop sbb xchg (bad) push xchg fs stos xor js sub stos sbb into mov test outsb and lea data16 cmc fist mov and mov gs test push adc xchg inc and daa leave xchg pop jmp mov or mov fild iret ljmp out mov or cmp jecxz inc push rorb adc lods call nop out repnz outsb js mov pop push rcrl es out stc mov cmp (bad) out fwait dec sti ret in aaa cmpsb shr popa (bad) repnz mulb out pop add movsl fdivrp aaa mov imul mov sub push sbb mov add sub xchg lds inc mov dec sub out in enter out sub jb out jmp xor xlat dec (bad) (bad) es fldcw add int3 out mov pop jg scas es mov out or add nop dec cmp cwtl dec gs add outsb loop sbb in out cli sub push data16 pop repz loopne pop dec incb or pop out jb out pop pop pop pop mov inc adc in icebp out xor and mov xchg fldt ljmp out insl popl adc inc lret pop fadds insb and fbstp jnp and data16 push push ss js push mov sbb outsb push mov mov loopne,pn dec or out ss out mov inc pushf xchg pop out dec xor pop (bad) call mov sti jmp inc add data16 adc es out xchg cmp mov out cwtl sbb push push jg lahf mov clc mov insl mov fs inc push lds out adc gs out out push dec scas adc adc out insb dec es in and out mov outsl jle out and hlt dec sub push xorl iret push out push loop (bad) lock pop ret out pop int3 mov xchg outsl mov popf out shrl int3 and cmpsb jno xor (bad) in icebp mov xchg imul cmp pop xorb jo mov cld fs adc xchg jnp in out pop and repz test scas repnz out add push jmp push insl stc iret and std (bad) out cmp cs leave (bad) in out push xor dec dec popf out jns adc add in out xor push movsl sti js imul xchg dec pop mov cwtl jbe mov xchg fwait mov aaa inc popa aad cmp fsubr inc xor mov sub out mov inc cwtl shr jecxz sbb imul dec add subl jb imul mov adc jns sbb test pop dec push jne out je and sub mov out adc lcall lret inc add ljmp mov adc in pop jp les data16 add out add fwait adc aam daa (bad) inc out jo test jnp lcall test sti mov out jmp mov andb gs (bad) shr pop lcall xchg push mov insl mov xlat loopne call (bad) add push inc test stos push fsubl pushf mov das rorl push and imul mov mov xor (bad) xchg inc fucomip adc lahf adc das enter pop pop push dec ljmp mov addr16 sahf out pop test adc mov cltd inc loopne ja add pusha loop icebp jge (bad) jne enter mov or xchg cli rcrl fwait in mov out pop push lret mov dec out jge xchg add jnp leave out push jp,pn out icebp cmpsb xor (bad) mov pop add std sahf fmulp xchg xor lock pop sub out call ljmp fmuls out enter xlat iret pop jmp dec jle mov jno or xchg inc xor out (bad) add testl jp aad lods int out addr16 mov in pop sub mov (bad) jmp iret ds xchg cmp sub fsubr mov in or fcomi out outsb mov inc pusha pop jl ds clc xchg out add push fcmovnb out sbb mov xor mov pop add mov imul dec push clc loope add dec cmp jno add int3 faddl aam (bad) jle lds sub rolb or sub inc cmp stos jae lea inc dec pop pop imul test (bad) (bad) ljmp out dec fnstcw pop mov out jbe mov out mov (bad) mov xchg push mov sbb divl aam je clc cmp movsb cwtl dec mov out loopne xchg dec lods scas add cli push nop out adc mov inc out daa sahf cmp xchg out cli mov xor or ds repz xchg xchg lods out nop aas mov xchg out (bad) pop sbbl out inc (bad) push inc and mov les mov mov inc dec out out movsb jbe mov adc mov and sbbb sub icebp add in mov cmp (bad) xor loopne pop inc loop jp mov pop (bad) idivb adc ljmp out adc cmp xchg cmpsb clc fwait push (bad) (bad) push out in adc dec lcall sbb and sub ja mov sbb fldcw pop dec inc pop ja xchg mov mov and push jge push dec (bad) out addr16 call jecxz leave pushf or sarb cmp cmpsl loop adc (bad) fidiv loop push jmp fisttp stos rorl pop out stos pop mov and dec xchg mov dec insb in call xchg hlt cmp xchg push shll pop unpcklps inc ds jne (bad) pop loop decb sahf in cmp mov out fnstsw and out jecxz mov sahf out aaa mov ds loopne or xchg imul dec imul out pop lock pop rorl out out (bad) ret aas fs pop inc sbb (bad) jae test or push sub enter (bad) out (bad) cmp push jecxz mov out popa xchg mov add fistp pop icebp jbe movsb cltd cmp test je adc and add mov (bad) out mov sub pop stc pop out data16 cltd mov jmp dec mov sub loope insl pop and in insl and iret jbe out je jge cmovne lods ret out movsb int sub aad repnz lahf push test out jnp test mov je (bad) fidivr or repnz pop (bad) mov aam sbb sbb out mov add pop out inc in in int mov xchg and jnp les out iret mov aam fistl mov in ljmp jmp in xlat lret mov stos pop (bad) dec pop sbb sbb mov sbb test pop ss jnp xchg xor pop repz lods orl add push loopne out mov jmp fdivs sub mov xchg mov in iret je mov jge lock push jecxz cs (bad) lods cli cmp mov adc jg mov or mov out loope notl out ljmp sub mov xor int test ret pop cmpsb pop dec mov out mov imul push stos xchg add out loop test add mov jmp data16 dec sbb mov out mov jmp mov xchg xchg clc sub outsb sbb out add fsubrp std inc lods mov sti mov out fcoml scas movsb inc outsb out cmpsl push gs add inc mov sub add cld pop pop and xor inc fstpt lret mov jne fcoms pop fs call fwait lock dec insl es push and xchg std (bad) jmp insb pop addr16 pop pop in adc pop leave aaa cwtl nop sub insb inc inc test inc add adc or mov insb dec jg jb popa xor or mov fsubs sub scas incb in lock xchg and test push int lret out enter lahf imul out (bad) or dec sbb subl icebp stc aaa pop out jbe test scas xor out (bad) repz mov out cwtl loop arpl out pop out dec mov pusha (bad) out subb or ror jp fldl fs jl lcall fildll iret bound jbe repnz out push les xlat mov xor movsb imul js and xchg add or sub out xchg and shrb out mov fnstenv xchg push cmpsb shlb inc pop xor sarl mov out unpcklps lea test ret (bad) rcl dec int3 sub jmp inc pop shl mov lods push mov cwtl xchg aaa jnp (bad) out rolb or (bad) inc int out xchg pop divb pop test mov mov out mov and xor mov mov lret cmp cmpb out stos pushf popf pop push js xlat out dec ret sbb cwtl inc out fcoml jmp out dec xchg sub mov dec add adc rclb or push and inc test scas and (bad) sbb out dec xor lret xchg jg outsb data16 into idivb xchg roll inc lahf and loop out movsl push fwait (bad) fisub (bad) out jp lock scas arpl imul jo out inc cld rclb movl stos push movb rcrb into xor out lods repz jg icebp jmp push sbb push xchg cmp adc in xchg fstps gs out push xchg inc out rorl inc imul xchg lcall jl dec loope pop out out xor add dec pop fldenv sbb xchg jmp pop jbe out jmp (bad) enter stc jae xchg add ljmp ljmp out outsb in push mov fmul popf in out fcomip xor dec test bound mov push stos aam rorb lods fldl ds cwtl xlat fmuls xchg out or adc out in sbb push mov push out mov andb add pop outsb mov in loop cmp in jb out mov adc or int add imul add ficomp nop xchg mov mov enter xor out pop js sub outsl imul movsl pop lcall mov push inc out arpl stos dec fcoml loop mov adc mov mov repnz xchg cmp xchg jp imulb pop sbb xchg inc cmp adc fs repz xchg inc insl dec sbb test test xchg popf ljmp adc loope out and rep sbb jle jl pop or in or jo sbb out push inc dec xchg aas jmp (bad) loopne in lcall push mov int3 fimul out dec iret int ret and in add xchg cwtl sub sub je popa out dec sahf xor mov (bad) jle imul cmpl sahf sub mov out scas add xchg xlat pop cmp cli repz out xchg dec rolb inc mov xchg pop sub add (bad) lods push jmp out sbb out ds xor rorl mov xor (bad) out popa jl into dec jmp pusha arpl sbb inc inc bound (bad) out mov in jno nop test inc repnz call lods xlat pop mov and scas xchg in sbb out or addr16 cmp inc rorb sbb aas negl add loop adc xor add shr stos pop in adc jle out ljmp ret (bad) aad xchg mov and mov or fbld sbb pop pop mov inc aas mov fsubr cwtl jecxz out push leave pusha xor ljmp pop sahf ds push jmp loope shr pop call jle loopne inc out loop lret daa mov sbb punpcklwd sub negb out xor int3 cmp pop and jle vpsrld mov aad xor dec xchg ljmp (bad) mov out cmp inc out fistpl jge lret pop cmp dec into test add cwtl inc and data16 lods call out outsb sbb (bad) rclb dec sub out (bad) and sarl or xchg sub pop aas fs das mov out ret fist sahf daa in add lea sbb inc bound push pop iret movsl test jecxz stc in nop sub out sbb pusha in sti imul mov sbb adc pushf push es adc dec outsb jbe mov mov mov out int3 ja aas mov xor daa add mov out test fdivrl lret out push xor pop (bad) mov pop std mov ljmp cld out and out (bad) and loopne outsb lods out push fs fnstenv out mov add out pop inc aad fs inc mov shr scas insl sbb test sub add mov icebp mov mov adc rorl sub pop pusha in out lret sbb sub lret sahf in xchg mov scas aas out dec or sub out test (bad) mov lret mov fsts jge push out popa test (bad) pop jns or loop sbb out out loopne push fs sbb mov mov jb adc fstpt mov pop push out sbb not out rcl in adc cwtl add and mov dec cli fnstsw lea stc shrb aas inc out mov adc sbbb int shrd imul cmpsb jb xchg mov pushf xor inc out mov push das fidiv push dec in out pop out stos (bad) jb adc sbbb gs bound cmpsl mov jmp ret out scas lods mov lret movsl mov inc out stos jl shl push sbb xchg out jg negl jo loop out into out in sbbb ret es in sub addl jecxz and (bad) test mov stc jo jle pop jge pop push clc out mov xchg mov test jg pop lahf xor stos lock dec fistpll sub psraw push inc adc stos mov sti pcmpgtw ss xchg mov add mov lock and fistpll rorl pop ja out push push inc out push mov fadd out ss scas or out out shlb js or addr16 jo ret out es pop lea outsl out lock daa cmpsl push sub into out das adc and pop adc scas std popa lock not shr mov loope inc inc lahf aam inc (bad) xchg fisubrl add jnp mov jno mov out mov (bad) (bad) icebp lret shl jb inc mov sti dec andb sbb lods jbe imul out fs pop scas cltd gs out ja jg jno lods mov out imul out pusha fbstp mov jle jne addl ja (bad) jne jno ds mov mov mov subl mov jg mov stos inc and push xchg push sub (bad) pusha add inc std dec out (bad) xchg aam push cltd je ret pop xchg enter and cmp out mov mov jmp and xor lret aam loope stos mov mov idivl shr push jg sub adc aas loope mov cld pop xlat int3 pop jecxz pushf or mov mov lcall out and loope push arpl out adc inc dec test mov cltd fstl xchg mov mov out xchg test pushf daa cwtl out xor push and mov add mov (bad) cmp sub mov insl xchg or aam popa lahf loopne out and xchg dec in iret rclb inc or int add push ror and out test dec xor hlt push mov out adc negl out mov jl andb pop pop in bound out xor out andl pop pop mov adc loope and dec jns push jne out xchg movsb dec ds cli addr16 out call jo test dec stos mov pop insl inc sub (bad) mov cmp jle mov pop out jl out out int out xor lea sahf lds mov adc fs pop sbbb lods out jg dec cmp out mov (bad) xor iret dec jecxz cltd loop pop push pusha sahf out pop adc sti out sar mov adc xor pop out pop ds jmp cmp (bad) push sbb (bad) mov lcall and sarl dec dec loope jo out fwait mov adc movl ljmp sub icebp fisub push adc into loop stos lds mov mov bound out lods lret outsl or ja adc data16 lea rcrb push aas inc pop pop out mov sub out aas pop inc cli or testb xchg out lock sbb fucom pushf js mov fnop cltd or add arpl in inc push out xlat stc loope xchg adc mov pop cwtl rcrb push int3 mov out data16 adc xchg shr out mov aad stos add out negb add out js sub (bad) ss xchg cmp mov xchg jecxz out push dec mov pop bound out sub xchg push xlat (bad) fs arpl fldcw js gs inc and pop or scas jnp sbb int3 (bad) jo frstor rolb pushf mov sti daa data16 ret out xchg shrl sbb out bound adc mov cmpsl xchg iret sahf xor adc adc decb in out push int setb cwtl int3 imul fucom out aas dec push pushf out mov or out lods push mov notb dec lods adc out pop ljmp out push sub out (bad) or stos ja mov pusha inc clc push out jae xor sub out and ja fucomi je out jo dec subl fbld (bad) jmp mov pop lcall out fcmovne call cld out outsl or dec scas out repnz int3 out add orl pushf stos loope out dec adc lcall ror dec (bad) clc cmc (bad) in data16 in dec (bad) test pop out scas sbb insl jl (bad) push push mov cmp loope imul push pop and or loop arpl fucomip ja cmp mov addr16 or out test push adc stc mov (bad) mov xor or test dec insl data16 out cs imul jecxz xchg xchg mov pop popf dec jmp add mov xor loopne pop arpl mov inc out scas aam push loop cmp out fucomp adc ds pop out or stos xchg out jne mov aas incb stos push in or out in fildll mov push jp pop outsl or aam xchg inc push std mov in in rol (bad) xchg fnsave jle imul mov scas pop ljmp arpl inc test pop fnsave pop les push jae dec sub and jge xchg sub push inc pop (bad) bound xlat loop push sub insb xchg inc in cmp out fistpll divl subl fdivrl out test xchg mov or fs idivb inc arpl sub add outsb outsb pusha and add in cmp movsl out (bad) insb mov loopne inc pushf out nop push push dec orl out iret ficompl stos in (bad) jmp (bad) fwait outsb incb or aam call sahf incl (bad) sub stos (bad) in addr16 sbb or jnp pusha imul fstpt faddp (bad) pop and mov scas sub fldt sti push imul inc pop loope mov movsl out jns dec in popa jmp cmc daa jecxz jmp push push jo push jbe outsb (bad) xor jle push in out fwait mov enter shr in lcall lret xchg enter std push xchg out stos add xchg mov push inc out into mov ret mov jno pop xchg cmp test (bad) (bad) nop mov cmp xchg out enter add adc movsb and adc pop cmc test push inc loop ret xor shr mov jo inc nop cmp sub out int3 pop leave add push in (bad) xor loopne inc cmp push push lea push jg cs int3 out adc push shr push loopne hlt cmpsl cs inc out mov lods pop push incb loope fmulp (bad) and outsb ljmp out pop addr16 cmp pop mov inc fisttpl int3 push adc xchg jnp jg rcl and out stos mov fsub (bad) (bad) mov je cmp out inc (bad) lds out jb js xor in popa inc idiv jo out mov cmp dec jp roll cltd (bad) mov cwtl aas dec sbb jmp out aaa xchg mov (bad) xor xor or fwait (bad) (bad) and add xchg dec pop inc pop out jae loope sahf mov addr16 leave out arpl push rclb loop mov jl ljmp scas popf out pushf lcall mov out pop stos xchg mov out in pop inc dec ljmp pop enter popa adc in out xlat push (bad) pop aas jne (bad) push xchg cmpsl or pop pushf out in add cmp out hlt mov sahf icebp jmp pusha incb push pushf std xor outsb (bad) dec out xchg enter or rorb je dec es (bad) loop unpcklps jg xor out and inc aad fs cmp mov pop data16 or xchg cmpsl mov inc ffreep xor jbe fiaddl loop inc stos adc cs fdivrp arpl mov cmp out mov push stc xchg or (bad) jo or ror fisttpll cltd std and adc pop xchg hlt movsb shr neg out lahf movsl aad out es adc add inc adc hlt ljmp dec shlb lds mov inc je out stos adc mov aad inc push dec out cld mov pop sub mov std ss insb cwtl mov insl push fsubr push mov ja sbb (bad) arpl add dec (bad) out push movsb pop adc jmp jle pop (bad) cmp pop jnp out sbb cwtl cmc pop mov out rcll or and xchg out scas int int3 hlt fwait ljmp or mov fldpi rorl iret mov xor adc cmp je xchg push outsb xor std ret sahf mov out ret push mov fadds and loopne push int out dec push call sub lock mov cmp mov jg (bad) shrl fnop in and fisubrl pop or xlat pop icebp adc or xchg out mov cmp jle inc out ret fdivrl adc sti cmp or adc mov test (bad) out mov fldcw push jmp out pop mov fistpll push mov pop push cwtl mov orl aaa mov add out fs sbb les and xchg pop clc xchg (bad) mov jmp out jmp data16 xor add arpl scas lret addr16 mov cmp pop (bad) mov (bad) push call mov inc mov pop popf inc out mov pop cwtl push test and sub out mov out inc mov xchg sub out xchg leave cmpsl pop mov jne xor push sbb pop pop and mov adc ror aaa adcl sub dec add jl nop and mov dec shr sbb fnstcw lds xchg ret test out sbb rcr pop lods and idivb sti out cmc fbld fwait insl inc mov or sbb fist add sub and lods pop pushf pop sarl inc sbb popa push fucomp movsb lret xor flds (bad) cmp push insb ror mov pop cld (bad) (bad) ljmp imul loope xchg (bad) fs mov (bad) pop add pushf aad cmp sti mov test loop out out xor fcoms (bad) cmpsb lret fldt cmp aam ljmp out mov pop xor adc roll out mov inc (bad) out gs cmp mov lahf out or mov shr cmp out pop xor mov add ljmp pop aam insl je xor fldl cltd out ljmp loopne movsb pop loop xchg xor out inc pop (bad) hlt out insb pop inc arpl fidivrl mov into divb out xchg or jmp rcrb pop push mov insl cwtl lods scas out idiv pop or mov out or (bad) inc lods scas out inc shrl pop (bad) nop mov in dec je lods dec (bad) cmp dec fmull mov in jmp out shrb mov or mov out or inc cmp repz sahf rorl ljmp int3 and outsl push fildll fbld sub loop fs fsubrs pop (bad) out data16 ja out jle pop lret dec ljmp mov mov push cmp mov dec push cmpsl rcr or adc and xor pop mov enter jno je add out scas push imull mov je (bad) jae pop notb dec pushf jbe js aad or test fisubr (bad) xor test push cltd add xbegin ss vpaddd jo sub mov cmp pop adc push sahf and inc out jb pop out mov xor xadd out (bad) mov aam sbb inc int out xchg xchg aaa sub pop mov das int icebp mov movsb out test pop push dec cmpsl sub out and cmc scas jecxz push lahf cmp call in in mov cli (bad) cmp int3 mov out negl out lcall lods out lahf ffreep cld mov push fldlg2 push pop test ja pushf pop push push cmp in cltd loop aaa xor test movsl mov popa hlt out in or mov out pop sub and cmc (bad) jno xchg push mov add push mov out scas cwtl repnz xchg call sti xchg lahf mov addps mov push and pop and dec pop pop stos inc sbb push in mov mov lahf imul mov jp inc fstpl pop imul (bad) rcr and (bad) out imull inc (bad) mov std (bad) std jecxz push ljmp fidivl add mov add dec gs mov mov call sbb and inc mov and mov and lds idiv cmp push out out sub inc lret mov loope cmp xchg xlat (bad) fisubl cmpsl jnp rolb mov fwait ds inc out hlt inc jle mov sub lock jmp je out ret push lret aad shr cmp pop inc jo out js,pt mov xchg insl adc mov mov mov xor cwtl or xchg (bad) and inc sub iretw sbb mov call and outsl (bad) into sbb pop cld incb fdivrl adc mov aas sysenter jecxz jnp pop out xchg movb inc loopne push cmpsb scas (bad) repnz out pop dec xlat cmp int3 jle and or mov addr16 mov fcmove test out loopne push xor lds out mov dec push mov rol cmc inc sbb dec push cmpsb pop mov jmp out fucomi aas and mov mov cmp inc call rol shrb out imul jmp cmp sbb aad out loope andb rolb adc push or in shr rcr mov pmaxsw lret push xchg jecxz lods insb inc loope test sub in push into sbb push cs xchg je mov cmpsb adc mov push arpl enter cs and xchg out std lods call sub fs lock sub lods out mov xchg (bad) xor cmpsl repnz nop push cmp push out add sbb loopne jle lret frndint in movsl hlt mov pop sub xor jg clc jg push mov sbb xchg mov fnsave out mov out xor xor cmp mov (bad) ljmp jns add (bad) cmp adc lods adc ds insl nop shr mov daa push lods lret pop scas fnsave leave out std jnp loop into mov out lret xor divl mov push shll (bad) in ss mov xor out enter (bad) or mov (bad) out inc adc xor ret out jge push outsl inc mov push mov sub sbb or out cwtl movsb loopne pushf popl test mov popf cmc aaa (bad) sti cmovle ljmp call cmp push sbb push adc pop (bad) and mov mov push out aaa jne sbb out pusha popf xchg pop je dec lods (bad) rorl and xchg stos sahf pop pop je push (bad) xor inc ret mov enter cld pop aam loop std cmp push ret mov out pushf dec mov test mov ret add test aad pop and adc int3 icebp push cmpsl out pop fiadd pop mov xor in test ret cmp sbb jg dec mov fimul ret or sub mull bnd mov mov pop test cld (bad) fisubrl out nop flds xor dec pop out outsl sub out xchg out cmpsl pop adc shll test jae and test sub mov sbb mov push pop (bad) repnz lcall jo out jge mov jno adc out insb inc add and loop add jb inc cs repnz lock out sub push ss inc ss add pop xchg dec mov es insb out cli scas out adc cmpsb jne mov mov fstpl fadds cwtl mov xchg pop xchg and fwait dec into out js pop fmul mov es int3 outsl xor (bad) cltd add dec imul and or es xchg cli xor lock (bad) ljmp lock jp adc in addr16 scas (bad) push (bad) (bad) push (bad) lret and outsb xchg mov jae sbb jge stc shl mov sub ds push popa xor mov lcall notb stc in jbe out add sbb dec rcll test and pop movsb in cli sar push daa insl jno mov push pushl adc out out ljmp scas out pop push mov out adc aad fist mov enter mov jno adc inc in aas cs lcall inc pop mov aaa imul jno inc mov push stc out mov or sbb xchg inc mov (bad) (bad) in rcl push sbbl xor adc clc mov mov int out movsb aad mov xchg push inc add mov sbb movsb ljmp out and loope and pop pop mov out ss cmpsl leave sub movsb jg xchg (bad) out jae cwtl push and mov lods adc mov push ljmp and inc ja arpl daa ficomp lea cmpsb sub icebp mov fucomip adc lcall in stos loopne adc popa add scas mov out xchg sbb cmp imul dec cmp lret ss into inc out xchg mov adc cmp loopne mov pop sub add xchg push mov inc scas cmp repz sbb lcall mov xor add movsb rol out fnstsw xor ficomp pop jbe ror mov pop push out orl fsub out jmp push loop dec xchg sbb out lahf fistpll loope int3 out insl clc xchg adc mov addr16 mov loopne stc xchg jecxz xor sbb mov cmpsb scas pop data16 repnz in and sbb insb mov mov imul out in jge pushf rorb sub jmp or pusha xlat jbe sub pop fisubrl adc out lret lea pop mov jmp (bad) daa call push out aam js pminsw out jns cmp xchg sbb mov enter lods mov popf nop or ret jae pop pusha test mov xor in or and test pop (bad) inc lock inc (bad) fs sub test js mov out aad mov jl sub or xor lret inc sub push out xor sub fadd jmp cwtl jg addr16 mov (bad) aad cld dec lcall cwtl clc out out out inc pop (bad) loopne ja or fistpll xchg lea out push add icebp stos sbb cmp pop scas inc xchg das dec lods ljmp ja or mov movsb and jbe in pop icebp mov xchg and roll insb (bad) ret out sti lcall loop icebp adc mov and clc sub mov mov mov mov cltd add fsubs inc arpl adc sub cwtl mov loop ljmp out adc leave jnp inc push sti mov int3 out ret cwtl adc fildll aad mov sub inc imul dec dec jecxz loope loop mov inc out mov mov add into test hlt ljmp mov lock enter out mov and (bad) insl loope sbb test out bound lock fisub pop out adc out mov loopne xchg fs stos add sbb xchg lret jne jp or out inc stos int3 data16 pop call push push movsb iret aaa out imul arpl icebp out sub xchg movsb in dec out pop cmp cmpsl mov les push movsl (bad) out iret leave out out arpl pop dec (bad) xor lods or imul imul addr16 cli outsl dec lods fdivp (bad) scas inc cmp mov out pop icebp jp (bad) jo loope mov adc mov mov fmulp push adc fcoms and pop test (bad) jo pop or loop cmc add cs loopne lahf pop loop push leave clc xchg mov add out lods or js je aas pop and jne das dec xlat ds jbe bound loopne imul jl xor pusha out pushf ljmp out lahf lods pop inc jl jbe out ja mov les es in scas inc xchg out pop inc cmpsb mov jbe pop xchg pop pop add test (bad) loope (bad) out mov lods xlat out mov notl sbb mov cmpsb leave pop add push out push stos xchg (bad) out push xchg fwait xchg jmp jl out daa sti adc out push (bad) jae pop add out xor sub and aad out jb jl outsb cltd (bad) jno into adc out xchg xchg dec ljmp leave dec (bad) arpl pop cmp xor std mov pop or std movsb int leave jle out inc push int3 xor xor sub insl xor out js leave (bad) and in adc sbb sub out push ss pop hlt cmp and sub loop out pop fistpll aas inc push (bad) out xchg mov xchg insl ret decb subl out mov add mov pusha jb push shll sub out mov xchg mov call sarb xor push fwait out ljmp xchg out sub push pop std cmp stos outsl dec sbb ss out in or loope aaa gs add flds mov loop andps xchg jns in mov in aam in cli in ret cs dec out and stos fs xchg jns mov out cltd aam fwait mov cmp out lcall and xorb ficoml xchg test xchg dec out jbe adc out movsl in sub xchg pop jl and pop ret cmp nop aas pop loope jmp loop xchg shr (bad) out jbe mov outsl ror out lods mov ds (bad) push popa xor dec mov push sbb jo std fistpl xor adc in cltd bound div (bad) out movsb xchg push mov decl rcrb out jne (bad) and (bad) stc es jp adc sub gs or in mov cmpsl mov mov mov xchg arpl std xchg mov inc fucomip ret lods cmp mov sub pop mov in cli push cltd jbe out mov pop insb ret (bad) (bad) xchg pop jge (bad) push sbb bnd sub cmpsl (bad) out sti jmp sub mov sahf mov out movsb push dec xchg inc fidiv call sub fs mov popf inc and out push int3 js jo lcall sahf in (bad) (bad) cmc out nop or in jmp pop ds (bad) pop jns fcoms pusha out mov jno stos sbb push iret pop xchg add loop dec test fst repnz sbb cmp ficomp mov (bad) hlt push mov roll pop pop or jmp into ss daa pop jmp lds sbb leave in int3 out sub out inc lcall (bad) pop out lods cld cmp xor movsb sbb iret rorb inc cli out gs lock pop push jb ret push outsb dec pop mov (bad) pop fnstcw lret out inc repnz jno sub pop and int adc mov lret mov in inc add int3 out test rolb out push ljmp out xlat mov loope out or fsub imul scas in gs sub mov ljmp add mov ror dec arpl int decb jl pop rorb out push cli mov sub adcl cmpsl popa xor daa mov loop and jp mov (bad) inc xor loop xor aas mov hlt lret aas imul (bad) ljmp in in ja sub out sub jmp mov imul leave inc addr16 and mov push out in inc inc mov adc xchg dec adc repz outsl xor xchg and pop negl lahf mov sahf stos ret ret pushw loopne dec in xchg lock punpckhwd and iret outsl push out adc test cmpsl push (bad) lock in sbb aaa mov push popf lret sbb or sbbl bound iret ljmp push inc dec mov fucomip sub jp loop (bad) adc out (bad) xor cmc xor ret fs sbbl stos dec in popa lock or pop mov push xchg cld (bad) inc ret out and in icebp ds lods mov xchg sbb or add xorl mov aas icebp in lahf movsb sub out inc or xchg add pop mov test pop in ljmp inc inc sub cmpsb out gs je mull pusha sbb out and mov orb mov pop jecxz sti (bad) test out pop mov jae out add shrb test cmp ja leave fs mov lods xchg cli je sub fistpll out cwtl xchg out push std sti pushf push popf adc mov and mov dec sub mov jno scas xor fs xlat aam push fcomip pop inc arpl push cmp lret pop pop stos jno and pop out and cld in mov out lock movb fist rclb mov mov push ret pop pop clc jmp js das out adc out xchg rorb add sbb jbe out cs ret out data16 cmp pop stos stc xor std sub push push jg out xchg push notb mov (bad) adc out (bad) out jnp push dec out mov sbb sub dec stc es out insb popf mov (bad) jb dec out xchg xchg xor iret out or xor cmc enter movsb push inc out jmp div or add jns adc bound out dec mov (bad) dec jae shrl jno push or jnp push aam fucomi sbb push xchg mov push out dec xchg jo movsb pop ucomiss gs sbb dec ficompl sub incb insl (bad) loop test or lock out and aad cmpsb mov pop loopne jne xlat or insb and lret or mov cmp sbb cmpsl test data16 dec jle mov xchg iret sbb ficomp ds in jno adc push in or lret rolb dec dec shrl stc lahf pop pop mov xchg out enter lcall mov xchg out out mov aad pop popa fidiv out scas cmpl push jno mov mov mov mov pop imul sbb add jns imul xor cmp mov pusha aad enter xchg push out mov xchg (bad) in push sbb jnp mov fnstsw mov je call addr16 aaa jo mov out and lcall cmc dec ljmp leave dec jge fimul out push (bad) dec push fisubl sbb gs insb inc jns js add lcall or xchg sbb cld (bad) mov rolb out push addr16 dec dec lcall fnsave jbe iret out pop adc adc dec lahf popa and mov jp mov cwtl jb (bad) leave gs cmp mov cmpsl daa test outsb pop xchg mov sbb imul sbb mov pop xchg fsubr ret dec adc mov xor jne jo loopne xchg out push dec call dec out arpl inc lods and pop insl stc xchg sub push xlat in cli add add mov out and push outsl add sbb out call ljmp mov fldl ljmp stc sarl jmp cld scas pop jmp shrb xorb mov mov lods scas xor sub arpl das xlat and cltd iret (bad) mov outsb push lods adc es dec mov into mov fist fdivs inc cmp lods mov mov out dec aad push or push xchg cs insw pushf mov mov in push mov adc insl mov iret xchg aad nop iret push lock mov jo cmovbe or add inc out stc jnp xchg out pusha jne (bad) (bad) mov outsl rolb lcall shlb pop jg xchg cmpsl add dec jp xor push out in lods push out (bad) pusha cmp out and jl and sub repnz test stc sbb mov paddsb mov xchg fildl sub jmp fs scas sub icebp xchg fdivrs mov mov mov (bad) pcmpeqw insb out mov test mov pop mov imul out (bad) shr ds bswap sub xchg lds cli insl mov (bad) test std dec mov or mov int3 testl xchg js dec jbe out pop sub imul xchg xchg xchg clc loopne mov mov push icebp cmp out pop pop dec sub sbbl cwtl xchg aaa icebp dec or loopne add sbb dec es test out enter and lods push rclb sarl clc fucomip lahf test faddl test and mov gs ret and xacquire push mov es out add enter pop push inc iret dec xor mov ja out ret lock movsb stos out fisttp push mov shrl das cs lods jbe mov inc pop lods (bad) jae pop in loope,pn incb out daa call sbb inc lret das xchg sbb mov or or adc dec mov add mov les mov mov cld or stc ja out push repnz mov jge out cmp jnp (bad) mov in and loope lods dec sbb cld jno test out movsb sar pop hlt cwtl push leave (bad) pop jno rcrl mov add lcall out cwtl pop jb fucom xchg outsb cmp sahf movsb aam pop adcl mov (bad) pop inc stos out out dec push mov dec adc fsin cmpsl and rcr out jmp mov (bad) lcall in je imul or into insb out les jl pop and cmc mov inc imul andl outsl adc xor stc adc jo leave out (bad) stos mov pop out std jnp lods arpl jae out mov ljmp iret je sti imul into jno mov mov mov decb (bad) out sbb cmpsb aas imul mov (bad) out test (bad) adc mov out inc add in dec mov xchg lcall scas test data16 sub cmp pop out add outsl mov inc loop xchg imul dec rcrb cwtl loope out mov xchg mov (bad) scas or mov mov iret aaa jle xchg xchg mov out inc push aam out push mov movsb rolb jecxz mov in test lret xchg sub jg test sub cmpsl push jb push out test add shrb cwtl loop out and jb stc lods ljmp push jns push (bad) out add push mov outsb cmp lds mov out ret incb push int loopne and hlt gs stos mov or out jmp clc and out cmpsl aam jl and push nop (bad) cmp jg aad fadds (bad) clc xlat out in das push ss xor sbb mov jle add movsl out flds push and ret sub ljmp lods push aad iret ret mov jne out cwtl in (bad) cmc lcall fstps mov xchg xrelease jns pushf jg test mov adc mulb mov push lds mov pop mov adc inc and inc push out lods mov pop dec sahf ficom das sub ljmp lods inc ljmp out popa and and out cmpsb loopne pop lock out es lahf push xor fimull jnp stos inc lods mov pop lds lret leave in jb rorl xor xor daa out pop mov or mov xchg push movsl dec sub sbb fisttp mov out mov pushf pop (bad) out scas cld xchg add out mov ret cmp dec out shl rcll jge push adc push int mov jbe dec out ljmp xchg out push xchg mov imull fildll mov out cli in jl shll clc push mov lods cmpsb sub hlt sub xlat dec xchg out adc stos aad aaa inc popa rclb pop sbbl out dec cmp and or jge xchg mov (bad) xchg adc pop pop push ljmp mov out repnz dec push loop xchg inc ret test cmove fistp add mov out mov in testl xchg in ljmp cltd pop mov dec mov and mov lds insl mov sbb fbstp out xor jge xchg iret mov inc inc cmpsb fucomi test mov jb adc in jg sti stc (bad) out int lods mov pop xor jo out xchg push (bad) fs subl add enter cli or loop xchg movsl push int out push and xchg rclb mov sbb jae out out les dec lds cld xor out add or push cmp daa pop out sahf lds shr or outsb lcall out ret data16 int pop leave lock dec push inc xchg hlt pop add lret cmp xchg out lea or jmp (bad) inc add mov pop mov pushf scas cmp mov js out mov test rcrl mov push out popa cmp test (bad) adc cwtl out es addr16 in pop aas mov fstl mov out adc pusha lahf icebp shl sub or fwait loop nop jg lock xchg rorl cli rcr xchg sub aad or dec data16 out ja pop std lock out mov inc in out cmp imul cltd lods lds out push push int3 pop icebp mov xchg mov dec out (bad) pop dec dec call fsubp lods xchg sarb incl out es (bad) roll flds stos jbe sahf int ljmp je (bad) adc repz test out dec arpl mov jnp mov cli inc sti xchg lock out movsb stc test jmp clc test xchg add (bad) (bad) mov lahf fcmovne into mov in dec shll inc or lcall mov jmp inc mov lret outsl out pop or jg jmp pop bound pop insb scas sub out cmp loop fwait jl jo rolb ljmp jg into xchg roll mov push mov mov or sub lods jle in (bad) shr cmpsb popf cmp fs popa fisubrl in out push aad jg mov mov mov aam scas mov out shrb arpl into sahf jmp lods out cmp sub fndisi(8087 dec sbb adc xchg cld in not arpl sbb ficoml mov mov ret mov sbb fdivs dec (bad) mov imul inc out push and scas (bad) dec ds push pop call mov mov add ljmp inc cwtl pop daa xchg xor loop xchg aas mulb push xchg stc out clc adc push inc mov arpl insl cmpsl out shll mov sbb mov add addl aas loop popf ljmp in ffreep mov scas and pop shll shr or jno out fdiv xchg adc jo iret out stos data16 xor and push out xchg jno mul stc jmp mov xchg xor add inc pop imul nop push pop push fistpll mov daa mov out add js mov lret mov inc ljmp jmp push adcb loope gs scas out jno mov dec popa out je sub pushf mov mov nop jo insl fwait cmp mov sbb int3 out movsb scas pop push pop inc xchg ds mov cli cmpsb pop jle decl in cs out mov add jno jo movsbl insl test xor stos in lret lods (bad) stos mov scas or pop (bad) pop push cwtl stos in clc je adc (bad) mov jb out in mov cmpsl sbb out outsb pop fbstp push ret repnz sub js sahf fucomi mov out and (bad) pop sub lods sbb loop repz fstl xchg negl mov push sub mov cwtl mov out lahf rorb fwait push mov shll mov xorl sub or popa outsb pop pop out jmp int3 cmp adc mov out enter mov sbb imul mov add lods xchg fsub inc pop ret popf dec in pop fmuls and xor stos sub cwtl fisttp cmp mov push pusha out push push mov js sbb ljmp out ret add mov pop out xchg add push maxps jmp adc outsl insb pop or mov into outsb sbb out lret ss insl hlt aam and repz lret dec loopne loope push popf pop jecxz inc ljmp les fdivrl jmp stc shlb inc (bad) pushf jb (bad) cmp shrl out and mov out sbb mov cs scas xor js nop mov movsl pop xchg pop mov out dec fdivl ss cltd lds pop fisttp xor cmp (bad) stc sub lahf pop pop fisubl imul int xchg cmp or cs cmp ljmp test cmpsb sub addr16 and ja inc out sub pop das jle mov inc lods cmpsb sub sahf out ret sbb dec mov jno xor test cmc in (bad) aaa (bad) sub mov inc inc insl jno mov andl pop ror cwtl adc in lea pushf add in addb pop or insl xchg cmp sub popa sbb xor in mov pop push addb clc sub and pop clc insl jmp lahf iret jns out pop (bad) insb sub stos push das ret out jg (bad) notl adc movl shlb jg push out jg add out inc xor dec mov test mov (bad) stc push xchg out xchg cmp call out add inc inc push test add cmp push pop out mov mov adc push mov cmpsb or jp enter mov out scas arpl (bad) xor and ljmp addr16 and les popf ljmp movsb pop xchg std call pop jle (bad) bound stos add cld sbb mov lret sub or adc scas loop dec ss pop jg pop fnstsw fisttpl pushf (bad) repnz mov loope outsb out add mov fsubl mov fldt push jl push (bad) out and sti adc out (bad) push lods es lret dec jmp fcmovb dec or (bad) sbb fs rcll cmp (bad) popa (bad) jmp fstl xor out fmull dec pushl sub outsl mov xchg out cmp mov sub inc test aad out cmp fsubr ja sbb push xor xchg push mov test or stc cwtl in xlat jmp out insl sbb rcrl sub aam mov (bad) ja inc push or jns lahf scas cmp push out ds aaa and cmc pmaxsw js lock mov xchg fwait gs jne iret rolb add in sub pop add js pop fsubr in jns push scas push sti inc mov inc bound arpl rcll pop sub lret xchg out cwtl icebp fs pop (bad) mov (bad) jo mov lock lret (bad) mov icebp push cmp out out out push jb js fildl insb mov inc addr16 out out dec hlt imul mov xchg inc fidivr push leave (bad) mov cmovb cltd push cli lahf pop cmp sbb jae or jnp mov icebp ljmp stc inc pusha lret push sar ret out dec mov cmp jge cmp notb mov add or adc repnz mov and sbb xor fsubs dec mov into test pushf pop fstpt out (bad) and das mov out mov or ret sti out fistl adc test xchg inc mov (bad) cmp jno,pn out out cltd adc sub insl xor sti push out dec jmp xlat (bad) mov or adc scas popf inc push mov jb pusha sub cmp or inc xchg nop pop sbb sub lcall xchg out scas cmp mov or push outsb imul js jle popa or pop ret out xchg inc lock push stc xor in add fs out add fisubrl in or pop jg test mov adc aas mov loope jecxz or push jno cwtl out mov xchg jmp enter mov sub hlt xor xchg fistpll adc and (bad) mov sub lods mov mov iret jae,pn and fnstenv push out cmpsb fimul out (bad) xor movsl and in xchg inc incb add push inc std imulb cmp sub out mov andl or aad cmp out repz fist push cmc xchg jle dec xchg dec aad and sub and out pop insb jo inc fwait or and mov loope pop adc in (bad) icebp pushf dec push nop aas (bad) out push sbb push pop outsl jbe es out mov jg in into das inc pop lea (bad) jmp out sub int3 repnz out (bad) (bad) loope das movsl cld sbb xor sub jne stos mov mov cld xlat push cmp cs pop dec xchg cli out xor pusha push dec push jbe out cmp scas pop mul dec add (bad) aas cmp sbb inc call dec pop out aaa push int movsb sub aam push xor lods add lret mov imul imul ss lcall mov inc inc and sub ljmp inc scas scas int3 popf cltd ljmp fs cwtl test test (bad) dec xchg (bad) es dec into cmp (bad) xor xchg jg cld (bad) lock mov or (bad) loopne adc in lcall jle fild xchg add jbe pop sub out rcl fisubr and out pop cmp jecxz fucomip adc push cmpsl out or insb pusha (bad) mov cwtl adc ds and loope fldt mov daa mov jmp xor or cmp (bad) push shr pop cmpsl std mov out ljmp mov cld insl jbe jl addr16 cmp popf sahf incb sub jmp loope cmc sub pusha mov xor ljmp movsb out cmpsl adc pop mov cltd jl lock mov mov cmp in jb lcall mov pusha fldt adc out xor xchg insb xchg rcrl aaa push inc fucomi das aam jo jge (bad) out orps cmc fwait bound mov jge mov sub mov insl mov sahf fs in and das xor push fisubl incb ret inc stos adcl stos inc movsb mov imul cmc pop arpl out pop inc jb mov (bad) cltd fsts clc and adc rclb sbb je lahf add int and push ret cwtl xor jp leave (bad) fucom sbb push xchg xlat ret out gs pop dec xchg jo imul fbld loop rcll mov mov mov loopne lcall fild jb int3 out sbb sti (bad) arpl mov clc mov push mov pop xchg movsl (bad) mul lahf mov dec inc push lock dec xchg jno jl inc mov xor pop ret xor pop and out jmp mov out out enter xchg or sbb fisttp js push (bad) (bad) fcmove inc insl pop jae out rolb stc fcomps leave out lahf jb out pop sub scas int fwait int3 cmp jge xchg out mov and pop inc insb into in test pop out adc hlt cltd out mov js fsubrs mov pop dec roll xor (bad) in imul dec scas jecxz out pushl and fstpl xor pop out pop add dec jg icebp cmc mov je mov lahf out inc and inc out xchg jnp mov les fmul mov mov aaa (bad) out cmp idiv out out insl sub lods out aas popa sbb sarl inc iret push sbb jne and or xchg lret rcr mov ljmp sahf add sti xor lret pop lcall inc pushf jmp bound cwtl pop cmpsb sbb mov insb imul out aaa js (bad) lret clc out xchg pop add push inc ja out stos jno bound (bad) repz cld out outsb mov adcl xchg out fcoms inc push insb mov jmp cmp out mov arpl sub xchg bnd out aas adc (bad) xor or popf mov mov out mov push arpl insl cmp nop test leave dec loope scas push hlt out sbb xchg es fucomip insb adc subb stos loope imul sbb aad lahf jns lds pop cmp repnz fwait sub dec dec and int3 fsubrp sbbl (bad) push out jl in inc (bad) repnz ds cmp roll rorb call outsb cmc mov lret pop lret jecxz jmp pop jp iret int3 imul out sbb sub gs sub mov inc repnz ror das incb xor cs and lock or xor sbb sub loopne cmp aad (bad) sbb sahf cmpsl xlat dec fsubr arpl xchg fldt adc (bad) dec jle mov shr test push inc and scas (bad) pop mov xor shrb ds mov mov sub cmc dec notb pop in pop rep push out xor stos push out loop popa fcompl and pop adc inc jns inc fidivrl dec ljmp add test adc out dec int3 sbb out push mov ja dec jo aam test lea out inc into pop popa mov jg xchg mov lock dec push cmp jge xchg stc pop and adc outsl xor sub lahf lret repz lock loope mov cmp (bad) or out or xchg outsb pop fucomp mov lret mov pushf fwait out clc jle shlb mov subl xor pusha out fcompl cmp pop inc out and pop and push and subb mov pop popf movsl xchg add ror rorb icebp dec lods in daa (bad) out in aam ja aas jle mov jmp out mov push pusha xchg ret lahf insb psllw or ljmp mov mov mov sarl or xor int3 cltd clc stos call or mov in cmp push leave mov insl pop (bad) daa adc imul dec out cs repz or out sub xor inc pop lret mov (bad) mov mov inc movsl jecxz (bad) jmp out push sub mov dec push jb mov in out and (bad) aaa pop mov pop cmovns lods mov xchg mov es lret jbe js cs in test push fnsave lret (bad) insl or in (bad) xor xorb mov gs inc mov sub xor out cvtdq2ps cmpl xchg lods push outsl jmp xchg cs mov out in test pusha mov sahf fscale outsl sti mov nop in xor enter fwait cmpsb fsubrl mov pop and xchg in int out lcall xor jae or push dec clc xchg in sbb lea push int repz in imul xchg sub mov cmp add repz rclb out mov cmp out (bad) pushf xchg xchg xchg dec stos fbld in push bound dec add cmpsl jmp adc movsl lcall daa neg xor decb xor insb mov incb and outsb lds out push test mov out dec cmp ds out mov add sti dec adc sub inc divl inc out out cmpsl in cltd aaa add push jle (bad) cld out dec leave repz in les into out popa jnp xchg jmp ficoml pop cwtl hlt pusha test and dec iret pop sbb leave les call pop out iret sub push pop push mov jmp jmp repnz mov mov (bad) xor test lret fistp jge ss (bad) out (bad) pop ds push es cltd sbb cmp and (bad) sbb push pop xchg adc add idivb or cmp loop ret dec pop gs and out adc jg out cs pop scas (bad) mov lods push test shlb inc and mov sub mov mov stos out jmp seta out add popf push out pop sbb pop lret inc data16 mov sub dec es push out (bad) scas leave xchg or ss (bad) cmp pushf mov (bad) out lahf lock push or xor inc lret ljmp push push mov mov sbb je loop insl inc jecxz out xor lret dec xchg popl xor mov in sub or cmp in in lret daa adc out insl dec int3 adc sub out ficompl outsb ret push jl out test lahf push cmp xchg shrb mov loop xlat out in fnstsw add imul jg jb cmp lock push fsubrp inc xlat jmp popa ds out aad sbb push and mov cmp add jnp out int in cmc out fistpl movsl mov iret or mov or xor loopne gs bound clc xor in (bad) data16 jg,pn inc mov ljmp (bad) outsl push push xor jnp lods out xchg cld stos sbb jbe pop out (bad) jno and fcmovb arpl out jp lds sbb out mov popa fcomps cmp mov inc jecxz xchg push inc ljmp out (bad) mov out pop xlat jmp into loop fcomip inc out stc fisubr icebp xchg cli mov sub out mov adc cmpsb test in adc out pop fcmovu repnz xchg out sbb xor (bad) call xchg jo sub inc fwait cmp or push daa adc cmp pushf push adc loopne in movsb into mov nop roll (bad) dec cs es add xchg mov dec sbb inc out pusha loopne mov pop mov pop push out in jle scas sti out loopne stos test paddusb pop and mov sbb add lods dec mov je bound insb out sub fwait pop sbb lea mov xor mov xor rorl sub mov clc mov cmp dec and out cmp sbb insb (bad) push cmpsb rcrl lods lods dec mov inc aaa outsb xor (bad) xor out test or mov mov sub bound notb out fist es lret xor jb stos mov pop inc popa mov shr insb jmp xor movsb inc stos inc pop mov std push dec cltd adc cmc mov jb nop push fldt mov fsubrp add rolb out inc inc xchg enter or mov push xchg stos jns pusha jne mov pop decb shr or (bad) je adc and add scas xchg push (bad) in push (bad) ljmp fs push out inc and or stos lods out jmp jp loope cld in pop popf pop in add scas out nop push outsb js mov shr sbb xor loopne xchg mov outsl stos add push ret scas jge scas jge xchg sbb stc (bad) mov in jne ja cmpsb test ljmp adc cmp jnp movsl decb pop xchg (bad) in imul add jae pop fstl inc dec fcomi or not out pop push or ljmp inc mov jb pop aam mov sbb mov mov lods scas adc out push sub lcall scas nop mov imul xor jle in scas sub or popf js in std and lods mov (bad) pop out stos ss mov adc pop rorl in loope sub jne mov push aad pop mov jmp cld jecxz lea imul sub add pop insl fsubrl cmp xchg cli repz dec fldz or lahf pop out push or (bad) out xor out stc (bad) xor out dec scas inc jmp jb sbb in jne xlat out adc inc push (bad) out cmpsb pop pop pusha inc enter xchg or repz sub imul mov icebp out arpl iret mov ret out enter add out sti push out outsb sub cmp xor test dec and bound in xchg xor rcrl pop out loope sub cmp arpl test or push fistpl inc ljmp mov dec sub mov adc jnp scas in out push and sbb out fsts imul sahf or into sbb out push out mov mov sahf scas mov rolb or mov adc xor das out ja pop sbb lock add bnd insb mov xchg xlat (bad) out mov push insl push insl pop sbb sub push mov int in out xor push sub cmp sub das lock mov out jl pop mov push mov xor in or adc lcall scas or lods in pop pop cld ja int3 adc cmpsb icebp pop mov clc cmp fsubr sbb or out lock and (bad) mov das imulb mov daa xchg push inc outsb xchg cmc or xlat lahf mov sbb pusha jb cmp insl int3 adc jmp xor out hlt mov sbb dec xchg neg subl incb add cmp push mov mov ds lahf xchg out inc int in dec xchg ja popa xchg out fisubr mov cmp fs arpl fistp scas push dec xchg out xchg adc lcall aam outsb ss loopne xchg popa outsb out je repz sbb (bad) inc cmp out inc xor push mov enter pop xlat idivl add icebp in addr16 out das js sbb pop pop mov push ret jnp add (bad) test mov lret sub or inc fdivrl movsb or sub add push push add fcoms sbb sub xchg mov jbe mov xor mov test cmp sbb inc ret mov arpl dec enter and pop out and push sub roll in mov add out push cmp insb sahf pop ja (bad) paddw (bad) outsb ds jp scas and in dec in dec mov cmc out mov popa and lahf xchg rclb aaa or push pop adc insb mov jns addr16 out sbb cmp push or jnp dec out (bad) sbb xor test setb sub repz jecxz stos push inc out dec fidivrl loopne cwtl jmp sbb (bad) jmp adc mov dec mov xchg mov xor out fistpll fucomi dec jecxz xchg out fisubr fcmovbe (bad) mov add aaa xchg cs rorl push pop out (bad) js int3 gs out jbe ret push pop sbb mov (bad) mov and dec fucomp xchg cmp loopne push pop sub aam jg pop sbb sbb mov cmp mov es cld out loopne push ret push pop fistpll jecxz out imul and or popf ret mov pop adc (bad) cli lret repnz sti jecxz xchg pop adc out rdpmc mov and jns mov sub xor int int3 pop mov mov cltd imul mov lcall adc popl insl mov pushf test out ljmp mov sarl stos movsl sub dec out inc sub pop ljmp in ljmp (bad) pushf out sub (bad) ret test xor mov out loop aam cmp ljmp outsl jbe out cmc shufps and mov and in dec jecxz loope fsubrs or out mov dec cmp out dec ja push adc divl lret pop mov and sbb sub pusha adc inc mov loope cmp cmpsb push jbe cmp xorl mov mov fwait lods fdivrl sub repnz xor xor shrb pop dec jb gs cmpsl out and push sbb (bad) push jns mov xchg lahf arpl pop sbb inc in jnp (bad) insb ret push out loopne xchg fwait dec mov jg sbb int pmovmskb nop daa fisubr out mov rcl decl jns lea pusha mov cmp xor push adc push pop into mov ljmp out mul (bad) jle dec daa and or mov or sbb push jae rolb test aad adc out sub clc pushf push out cmpsl aas (bad) (bad) push push pop xchg and icebp xlat cmc (bad) sub out xchg push sub int3 mull loopne sbb mov sti in xchg cmp (bad) clc repnz sub out aaa mov push add ret xorb sbb out add sahf out loop push push jmp mov lret insb mov sbb jg xchg arpl out cwtl mov fildll add xchg dec sbb data16 leave aaa xor daa pop jmp lea mov jns sbb out inc into es pusha pop out jge not xor daa cld out inc push stos fisttp cmp test in xchg sub pusha lfs out sub (bad) je push pop rclb enter pop (bad) divb sub fwait pusha ret out cltd mov cltd dec cmpsb out fnstcw push pusha mov xchg and and arpl cmp outsb gs rolb pop (bad) aaa pop ret out cltd stos (bad) jb aad in cmpsl and mov lea pop loop mov and dec pop xchg stos sbb out gs insl ds out cli rol (bad) mov ss testb js or into ret adc dec in sbb push push adc cmp out pop hlt scas or sub xchg cmp ret xchg mov out dec jp mov imul out rcll pop lods add aam loopne bound popa mov out (bad) mov inc out aad push mov mov stc out ret repnz (bad) das inc jg mov fsubp sbb or test or sub imul push ljmp or and jne fs pop dec cmpsb push adc mov push or stos sti xor jbe cmp in loope andl mov jmp out js,pn jno mov or mov adc xchg pusha push (bad) and mov mov xchg rcll jne fnstcw (bad) (bad) mov xchg in paddd xchg hlt sbb or sbb sbb jo sub (bad) lahf fsin xor fadds jbe out sahf mov mov (bad) jo xchg test xchg fucomi xchg fldz jno jne mov adc mov out cld mov add arpl pop push decb into sbb cmpsb sub jne jp dec adc mov jnp sbb movsb loop cmp jo loope or test ljmp out inc mov xor insl out lahf (bad) mul cmpsb loope fiaddl movsb insb jg pushf inc xchg xchg push test cmp movsb mov push outsb rcr in jge mov stos imul inc mov cmp sbb scas pusha sbb int xor enter and setbe in (bad) test xlat sbbl fdivs mov cmpsb pop daa in jle and xchg push call sbb or js bound dec fildll push dec mov sbb cmp push clc push sbb xchg in std in push out pop arpl cmpsl out lret fmuls jno cs cmp dec mov insl mov shrl sbb adc push sbbb xchg out and loope inc adc lret lahf aaa sbbb jle scas out add cld lds jo push stos dec or sub cmpsb fdivrl and int out and std repz adc out in loop mov out cmp add pop out mov sbb aas sbb stos mov mov cwtl ljmp xchg bound adc aaa out add mov out dec sbb or sub fstpt lods dec int3 pop xor test mov popf aam xchg out cmp shr icebp (bad) or pop out jb jg push cmc repz out movsl add loop xorb xor out or fcoml xchg bnd or pop insb in outsb pop push cmc mov jnp out in out in mov mov mov xchg jp int3 in or mov push sti sbb out cmpsl fstl jecxz cli mov sbb pushf imul out clc ret pop mov jnp shr or jmp sub mov (bad) mov pop xor cmp out add fdiv and (bad) mov dec pop jns inc out inc stc jp sbb aad lahf xchg out rorl mov out stos ret push ds jp and dec js add mov ss out aas push or mov outsl mov sbb std arpl sahf lock outsl jp cmp jbe jmp pop sbb mov mov stos sbb test in add loopne js mov pop pop imul stos out mov mov jbe div out out js ljmp mov mov xor clc out jnp arpl insw out mov js mov sub push mov mov xor and mov inc add aas pop push mov and sti jle xor push adc lret push in pop cld xchg mov out sub sub out pop fstl add mov jp jmp arpl (bad) (bad) pop popf pop insb pop jns aam push dec mov add iret xor addl pop std or lea push out jle mov cmp mov in mov out mov sub sub aaa out push jge dec adc stos xchg fnsave cmp dec int3 les jp out out stos inc (bad) cltd out xchg add push xlat xchg decb fsts dec cmp mov gs stos hlt arpl lods dec leave cwtl xorb ss jecxz mov fstpt out cli sub jbe sbb lea aad mov mov stc push ja out adc repz jge fist std xor mov icebp out imul dec aad ds jns int insb add fldenv jnp roll in out cmc adc (bad) sbb out push xor or gs jmp iret jbe push (bad) lock les inc mov out add xchg sub push pop add pushf inc daa out cmp out test fidivr fdivl stos push dec loopne orb outsl ja movsb in pop in mov cli pop adcl and call out xor loopne sub mov out outsb test dec inc dec divl (bad) aam xorl loopne sub aas imulb xchg mov insl dec push out loope cwtl ret sub mov push xchg out cld repz into xchg push fiadd (bad) aad push xchg mov test xchg xor push or push dec mov fidivl ds cli jns mov sarb negb jnp lods aas adc lret pusha clc (bad) aad sahf mov out mov jo sub int3 insb out sub mov pop inc lds js inc out adc pop jo out adc and jg sar out sbb xor aas loopne divb outsb sbb adc je hlt lcall (bad) loope ret aas ret mov cmp mov shrl inc xor enter jno jne out fwait pop lods mov out inc in push and gs fs in lods mov (bad) out mov loope loopne imul cmp inc jp add lret inc pop call (bad) decb out mov or fdivrs and mov fwait sub out push cltd iret pop dec scas xor out aaa nop pop cmp push mov out push rcrl xor outsb mov int out mov push ljmp jo ljmp loop lds stos jae out mov sahf ret movsl jmp push out xchg test (bad) jb es movl scas adc in pop cmp call sbb dec out mov cmc inc xor push lahf out add push jmp or inc ljmp out adc lcall dec test xchg hlt jge enter sti add cmp mov jbe mov aaa mov push out xchg (bad) push pop pop pop adc popa dec repnz std add sahf addr16 pop ftst fmull out jbe cs sbb cld jns push in xchg mov in sahf mov ljmp adc xchg sbb mov insl pop out fnstcw adc cltd rcr xlat fucomp adc sarb mul ret shrb stos (bad) pop jno dec pop cmp out sbb push out rorl lock jge xchg ss mov pop sub rcr ds popa cmpsl adc add xor test and and jg out mov sub mov mov mov test push inc dec jmp pusha or lret (bad) sbb lcall mov and out pop dec pop arpl out cmp mov ds jmp flds sub movsl or js xchg jb out add in or pop push out xor add test gs cmp loope mov cmpxchg fwait jns ret push arpl aas dec mov mov sarb cs rolb adcl dec out mov es shrl jbe out jp ds repz pop or aad cld loope mov sbb out (bad) out xor out leave int3 out xchg push cltd pop out (bad) iret out jp and out enter inc out inc fisttp (bad) push jl mov jae ljmp iret gs outsb sub or out push and cmp sub push out mov xlat call sbb jmp out and scas push jno (bad) rcll xchg xorl lret arpl push out adc and pop mov out add fbld sbb pop pop mov imul lahf push xchg (bad) insl pop ror sub out stos dec notl push imul or out adc (bad) pop mov inc push cli lock pop or iret into mov cltd pcmpeqb cld rcrb ljmp jno mov arpl mov push movsl jmp loop pop mov push fmulp loopne fisttp jo pop fsubr lahf rcrl out xchg push js rol icebp mov sarb sub dec test sub imul aam xchg lahf cmc cmp lcall out mov or pop xchg stos mov xchg (bad) mov pop out pop add js jmp mov stos mov cmpsb out vcvtps2pd jmp outsb push out in jnp fwait shlb mov push repnz fistpll pop pop sbb outsl loope xor ja test dec adc loopne shrb out pop js icebp cmpsl jo pusha mov cs mov (bad) mov xchg bound out push push jae push xlat out push stc sub aam lods add es insl pop xchg sti or cwtl xchg out xor in adc fsubrp daa rcll movsl pop into jmp outsb or (bad) cmp out and decb daa bnd icebp out pop jmp stc dec out pop mov mov outsb cmp mov jo mul out pop aaa adc ja imul call pushf popa pop lods add dec push out push inc aas outsb pop imul cmp mov push cmpsl out sbbl xor ljmp xchg pop out sbb and mov mov movsl mov faddl in pushf fist insb cmc inc sub cmp push dec mov inc cltd (bad) and out xchg sub out popw and daa adc das pop popf pusha loopne xchg in mov mov dec adc pushf loope out test jae stos repz scas cmp arpl pop ret out fmull cmpsb push rsqrtps and jne out jno xchg mov test icebp out or xlat loop cltd bound out enter lea (bad) (bad) repz out popa (bad) lret sbb movsl in and or ja cmpsb iret xlat pop adc dec les (bad) mov cmp decb push mov push outsb mov (bad) out xor push pop out adc cmpsl push imul fwait bound mov push out out push cmp cmpsl js ljmp int3 out test cltd popa mov das push repz loop out ret pop movsl inc push int3 loope in rcrb pop sbb out test xor nop mul daa lock dec jg loop loope fistp shlb leave js movsb loope mov dec out adc bound pop cmpsl and gs out cwtl cmp push jnp out out add daa or pop and mov sbb out adc scas repnz adc out (bad) pop sub push fiaddl mov loope dec fstps cmp add xor lcall jmp mov decb pop jnp jns lods (bad) cltd out sub sbb mov sub cwtl pop pop dec ljmp out xlat test dec shl insl cmpsb cmp insb popa icebp lods cli xchg pop pcmpgtw into ret pop or js push jne mov out xchg rclb out push jbe dec jmp push mov ds xor out pop and xor out or fwait mov cld dec loope out dec aad sub out int subb loope out rcr mov push dec mov ja idiv pop push fcomp out paddsb (bad) imul int3 jns incb and insb sbb lcall dec inc in push adc cli test cmpsb ret out mov cmp mov xor cli jmp jno (bad) sbb addr16 scas das xchg pop call ss ss iret test imul pop adc inc outsb push out lret add insb leave inc inc iret out je sbb ljmp push and xor jecxz xchg adc rcrb xchg (bad) xor (bad) aas adc out jae arpl loope xor sbb out in leave fimull shlb in dec movsl xchg iret add (bad) sub js call rol negb and outsb adc jecxz or ret out mov cmpsb loopne sbb mov out dec enter ret adc out pop (bad) insb lock or cmc out pop jo leave xchg push and or lahf loopne jg out sbb mov out or inc fst lcall jp push dec jmp in xchg in insl (bad) ja xor shlb ljmp shr imul cli (bad) addr16 adc (bad) sbb sub popw in in cmpsb call dec cmp ficompl and mov adc out mov push pmaxsw xchg adc out aas push mul pusha test lahf ret cmp js sub inc mov push cli (bad) pop cwtl (bad) out out das mov sub enter aas iret loope mov (bad) pusha xor inc jmp data16 push pop popf out jno loope push into scas sahf iret lret negb cmpsl xlat popf jmp sbb lods jmp enter pushf pop jl aas sbb sub push out sahf lahf jle xchg lret (bad) xchg idivb mov icebp dec insb and loopne js and add mov test jbe inc out jl imul cmp cmpsl xchg and ljmp pop and mov jmp fildl rolb scas out sbb pop mov push mov xchg cltd mov outsb add mov call nop loop jae out sbb (bad) into sbb lods mov pop movsb mov xchg out jecxz pushf (bad) jle sbb jne jmp repnz sub adc jmp rclb rclb pusha rcrb outsl cmp push ljmp push rcrl out fnstcw cmpsb lods out repz ret pop xor push (bad) mov mov loop loope push aad out pop xchg fldcw out lods adc push rclb xlat aad cmpsl fxch out and ret jbe adc scas jae ss xchg sbb out outsb inc out (bad) push outsl add inc lods fidivr pop push scas lret dec imulb ret jnp into sti mov xchg pop fimull jmp cmpsb dec out push repnz jo mov stc or ljmp das out pop ret iret setae arpl push xor fmul leave push jl mov das xor out xor cmpsl rorb shrl lock pop into cmp cmc dec insb xchg out mov or outsl or out cmpsl iret insl movsl push imul fs mov les sbb (bad) lret push xchg add and out mov jge out xchg into fs aaa and sub mov push dec fisubrl setl mov das out cmp add (bad) xchg fidiv arpl pop out stos cs push mov test stos out xchg xchg out and adc and jp xchg jnp out adcl xchg xor (bad) (bad) out test or dec repz fucomp sbb mov jnp lea in xchg out xor or out in add test pop pop in or jb mov shl mov cli dec (bad) shrl insl aam fisttpl sub mov inc int3 push pop fucomip xchg push pop out push mov and pop jle jbe mov pop dec int in in xor out or stos adc jecxz daa rorb out mov add iret add (bad) rorl hlt cmp inc insl xchg sub jno mov mov push movsb in mov repz out mov lcall xor xchg xor ret out jb leave loop lahf sahf mov and or out add mov inc data16 xchg and sub ljmp rolb pop lods das xchg imul mov push ljmp shlb add test out dec dec out push shrd js xchg int3 das out shrb xchg xor mov dec mov pop daa cmc scas jnp and out cmp addr16 jb jl add popa pop and sub xor test xor add pop dec inc outsl scas ss in jnp jae ja and mov xor sub mov rol out into in sbb adc pop sub (bad) out out mov cmc sbb ds pop nop and pop jns inc mov aaa in mov out lods or pop sub jo faddl sahf mov data16 iret pop in adc cmp jmp cmp (bad) out adc xchg aam cmpsb out pop fsub es mov inc jecxz jno pop pop dec out ljmp xor fwait stc fistl bound pop jp rclb pushf xchg call scas out sbb cltd cmc push add lods or (bad) ja daa stos out mov sbb outsl fnop and pop inc arpl xor push push cmp testl movsb mov cmpsb popa pop jle loopne imul fucomip je dec add pop cmp add (bad) xor jo dec test dec out ljmp fwait loop clc imul decl jp and sbb adc lahf fbstp loop int push outsl adc lea cli pop mov int mov in sbb (bad) fcoms inc loop mov out je inc int3 stos xchg aas fwait imul out cli pop sahf adc or xchg popa negb push mov jb cwtl jo clc (bad) adc inc sbb int3 out bound cmp dec das and fs add loope dec push mov aas out pop lock or add mov sub fstps adc jp sub mov out mov cmpsl in test jecxz ljmp cwtd dec lods (bad) out xchg sbb inc in jmp out sti xlat push dec push aad out inc or test add sub faddl xchg inc out sbb push lea movsl out push dec jo idivl out mov ljmp out add movsb sbb xor out mov xlat sbb out inc pop test nop outsb pop xchg mov iret test jp ret inc in ss cltd addr16 nop out aas sti mov loop (bad) fsubrp loopne aad in pop test out adc cmp (bad) cmp arpl adc movsl scas js adc idivb cltd (bad) std and adc jecxz ret and and arpl mov mov cmp xchg fxch jo push xchg (bad) out xchg dec hlt jno (bad) out sub out andl dec (bad) ss pop push cld push lods cmp jmp dec mov call xchg mov lds rcrl push (bad) loop sub in pop test xor or cmc pop aas pop jne fs out sbb pushf cld outsl xchg pop out or xor std fsubl mov and imul pop jp insl push in mov adc insb out mov push mov xchg xchg xchg adc out ljmp and pushf pop clc pop mov dec cmp jno mov and jp loopne test mov imul dec adc shr push (bad) ljmp andb push nop out scas cmp jnp jns jl mov xchg iret cmc push (bad) paddsw xorps loopne jl cs inc (bad) mov aad pusha xchg cmp fucomp xchg mov push xor out aaa (bad) cli and fucomip add sub lret daa pop (bad) out js loop cs repz lods mov ror mov push push and sbb sub xchg cmpsb pop sub out pop cmp fisubl rcr leave popa add xchg out sahf or into sbb (bad) (bad) incb rolb cmpl mov imul out push jno cld adc xchg out shll cmp adc pop out insb mov push enter mov xlat gs (bad) ljmp rorb repz sti outsb jns out loope mov dec push fucomip scas ror loopne loop pop scas xor sub push out das dec push jmp sub (bad) add (bad) or cmp ljmp inc inc out (bad) outsl pusha loopne pop jmp push adc xor pop mov loope push pusha adc (bad) lret and (bad) xor adc insb in aaa adc add out fiaddl ds out push pop dec inc lds gs (bad) nop push jmp insb je out push lea xor push out stos out inc movsl sbb xlat gs xor mov inc fistp sbb add push jae sub xchg dec out dec cmp mov push testb (bad) mov out mov mov adc jno or (bad) repz push cmp dec jmp pop xlat mov cs ss jae pop mov adc cld adc pop std test push fild ror push mov xor in mov lock mov loop inc push test int3 push jb mov pop mov dec (bad) pop fwait pusha push sub scas mov nop xchg dec lret mov or push push ds ret xor dec out push stos inc push jl adc out mov fmul (bad) insl es jg mov sahf push outsl outsb stos (bad) in je pop sub and fadd xchg dec push loop shrl or lcall out and fcmove cmpsb xchg rcll cmp outsb fisttpll adc sbb fidivrl dec xchg test test mov sbbl iret and or lahf push lock push lret out xchg or pop rclb mov push inc shll lds jbe insb dec and pop mov mov call out and rcll iret iret lock xchg lret jnp sub sub stc dec mov cli mov sbb movsl mov push scas scas or and pop sbb jecxz mov jle push stc out xchg sbb lods in das bound out add push hlt pop dec inc dec jg pusha sbb js xchg or mov test lods mov out leave inc rorb pushl out pop inc xchg sub push mov cld inc xor out jne pop out out pop call push adc dec test mov jmp out pop pop repnz incb pop fsubp xchg sub adc jp mov jbe shr xor sub in inc daa jae outsb xchg xor fidivr mov and icebp cwtl mov aas lea pop xor ljmp ret ljmp out xchg or inc shlb adc and hlt lahf int out lock mov cmp adc fldenv sbb push repnz mov and loop xor dec pusha push outsb rcr lret movsb ljmp out pop push (bad) fs movsl fnstcw cmp adc mov mov test out xchg ret stos or out mov adc fnstcw repnz push movsb cmpsl adcl pushf adc sub in xchg shrb ljmp out ret das sbb push out sub inc test pop lcall insb sbb lock ja js jo out adc imul sbb pop add cmc push mov aas insl jb ljmp dec test jp inc paddusw js inc out out push push (bad) mov out or push sbb inc insl mov int3 inc aaa movsb lock pop pop in je shrb ret jb sbb inc dec add mov iret movsl clc push dec imul inc fs pushf jge jnp inc sub out popa pusha jecxz and clc lds pop push ret out xchg mov pop test fistpl push insb sub iret cmp dec aam mov and daa (bad) out mov dec pop in loope pop jns lahf ljmp ficom cmp loop ss jne shr jp bound shl stos out jmp push or fcomp jmp jns mov (bad) pop popa int dec insb in cltd sub mov cmp lods lods out test sub inc daa inc dec (bad) sbb pop aaa push or jbe dec gs sub add fisttp out adcb out pop mov mov jle imul xor xchg cwtl repz xchg insb adc xchg adc mov out add mov sbbb and rolb out out fcomi jno xor pop shr mov and mov iret pop xchg mov in sub out xchg pop lret pop dec push lods xorb ljmp mov xlat jmp cld lret dec (bad) adc sbb nop inc out fildl negl icebp jb mov add out xor mov insb out loope cld push out test dec xor pop fidivrl gs enter pop imul dec cli push out (bad) aaa mov inc pop mov inc imul clc (bad) cltd loop or jmp aaa jbe mov jg ret push add or fdivs mov rcr loop dec pop push cmp rcll aas movsl out lret stos push loope mov ret pop adc and sub jmp mov sahf push out (bad) push mov stos out adc rol mov mov pop lods and cwtl jge cld sbb adc adc leave cvtps2pd js cmpsl pop jnp fadds outsb cmpsb pop sbb (bad) mov add lods sahf fsubrp and or jp sbb sbb jg fwait sub js ret push (bad) mov sub lock cmp jecxz cwtl mov out (bad) aaa mov gs mov out inc sbb leave adc lcall push out cmp sbb arpl push popf test imul out mov in (bad) fbld or mov out inc dec add pop pop lcall cltd daa push leave mov fld out lds out hlt std pusha sbb int3 lods out fisubl push adc inc nop xchg cmp aad jg ret push lahf xor adc adc into pop (bad) out lahf movsb fisttp and (bad) push xchg inc outsb mov fs call pop dec pusha fdivr mov outsb cmpsb inc out test sarb les push mov fild out fnstcw push in pop jg stc push mov sub or mov mov xchg mov (bad) dec out ljmp scas out test pop xor xor fs mov lahf jbe setns inc ljmp jmp dec hlt mov loop ret mov sub test mov hlt test iret insb pop out cmp cmp fbld and out cltd adc movsb out fwait jne das push cs cli out loop pop add sub fisubrl xchg push loope call lret push out mov pop sub xchg ss sub mov fildll cmc (bad) lret stc xchg call leave jb call out pusha jo clc out popf addl out rcl inc das ffree dec jecxz dec and loopne or cmpl or dec push add icebp adc call std cwtd cld cwtl ss xchg inc out xchg movsb lret or out aas out xchg loop mov insb out (bad) icebp mov (bad) pushf jae aaa ret in push inc or adc lods cmp xor push imul out push js adc (bad) cmp out or repnz imul loopne pop outsl in (bad) adc cmp push pop or scas mov stc int sub cmp popa out sub inc scas and andb and jb mov leave mov dec xchg xchg push fucomp pusha mov xchg xor mov mov out and push lock xchg outsl fdivr pop xchg pop sbb repz push jmp jno out jbe xchg call cmc cmpsb lock sub xor sub fld cmp lods fsubs loopne stos or (bad) out push popf mov adc scas mov call gs xor xor iret pop xchg adc or fabs xor push mov cmc int3 fisttpl in sahf xchg or cmp mov mov lahf cmp push pop test rclb add out fimul adc andl mov out dec pushf (bad) gs xor mov imul cmp and and out scas insb fs jne cltd out bound sub or (bad) ds mov stos out xor lcall in mov mov out push push popa (bad) pop cmpsl xor pop pop popf xchg add push xor out ds jmp out lret sbb add pop mov add sahf ljmp (bad) cmp mov cmpl mov out mov jbe outsb cli sbb aas fbstp pushf and fisttpll lock push pop mov arpl rolb jmp push mov xlat out mov xchg jbe iret pusha movsb lea neg xor mov pusha aas adc jns jno jb dec popa lret jbe out or pop out out ja mov push sahf or insb hlt repz and shl test in mov out fsubrs jbe lds cmpsl mov faddl shr and dec (bad) movsb cwtl test ljmp mov fildl pop pop outsl in imul push addr16 aaa frstor sbb lret adc jnp cmpsb jl std and pop and mov adc out (bad) inc mov sub arpl pop arpl out or add pop in repnz outsl sbb inc repz out cmp insb mov out add out xor xor mov ss pusha lods mov mov out xor or (bad) movsb popf out insb mov add push jne xchg pop pop jmp push inc in cli out jl xchg loop loop fdivrp hlt inc pushf sar iret out outsb adc and xor xlat mov out fwait mov pusha adc (bad) pop mov daa stos out lret in add dec cwtl mov pop es sar mov xor call hlt in test shr push lret fisubrl lea aas jne int3 rorl mov xchg out sbb fabs clc (bad) ds jmp and cs jnp loop out mul cmpb imul push fiadd pushf in fcmovb and cs nop cmp bound fdivrl sbb push aas int3 nop outsb out or jle out (bad) jmp popl imul xchg push incb and push jo pop shrb clc adc ret shr movsb test shrl sar cmp add cs mov (bad) iret in xchg dec inc ljmp hlt mov xchg pop ljmp out daa push pop lods out inc adc clc pop movsl push gs fisubr or ret pop fidivl fs xchg es pop push out loop cmc pop fsubrp add pop and pop jo,pt mov or mov sub add or mov rcr cmp xor xchg inc (bad) outsl rclb mov and out pop cld push xchg xchg jecxz out sub nop inc iret push jl out fwait sahf xor pop mov (bad) stos or cmp mov out int clc xor int3 iret (bad) daa popf pushf out mov (bad) fsts popa lcall movsb fucom ret fistl mov push aad ret out iret and in sarb mov ss cs and jle rcr nop in stc aad or lahf out cmp fnstcw in and fimull test and dec ds imul in out fwait push cli ret push push pop cwtl out test loop (bad) and xchg in push out jmp adc jg (bad) and out (bad) enter mov movl xor nop in jl cmp add pop adc dec stos jg (bad) sbb mov out xor fstp xchg mov out repz lahf imul pop pop scas mov (bad) xor cmpsb push pop test out mov out mov pop insb xchg cltd adc push mov je mov sahf in dec in inc bound add insl add outsl jne popa data16 push and out cmp aas mov enter into mov pop cmc sub shll (bad) push jge pop (bad) icebp frstpm(287 outsl mov mov mov daa fs out xchg pop mov aam cmpsb ja out pusha xor ss in out push adc and in cmp mov shll popf jmp in lods shrb pusha push pop sub js mov pop out in or imul sub and stc loope pop mov push mov sarb imul call pusha jg fbld jl mov mov adc into sbb negb xor leave jo push dec and xchg sti xchg out sbb fist out xchg inc jae fucom (bad) outsl xor mov inc loopne ret pushl enter dec lcall scas test mov aas or pop cltd fs call outsl push out pop bound arpl lcall out leave (bad) loop adc sub mov push dec ret (bad) mov imul int3 ss out cvtpi2ps lods pop jecxz fisubrl mov dec pop jmp std loopne shrb out jbe pandn scas mov inc mov xchg lea mov xchg sbb (bad) out jmp and or inc gs rclb in and jnp loopne popa mov add push lcall ljmp insl js fisttp pop mov out xor stos enter cmp iret inc or sub out cltd adc add out jne xor out insl aas test or lahf std out repz outsl (bad) out (bad) mov arpl or fucomi in mov repnz (bad) cli out out sbb hlt dec out nop adc mov das cmp mov or test out (bad) xchg test inc dec out jbe stos and in adc insb or sub mov mov mov stc ja in mov lods iret jg or popf push pop loope xchg mov and popa out subb cmc (bad) (bad) mov ljmp fnop aad jae xchg pop and in pop shll mov movsb sbb nop movsl add xchg out cli jne add dec jnp out pop lea out pop and sahf push imul out ja shr test inc sub xor bound mov stos int3 (bad) and psrld pop scas jb aaa sahf in add ss sbb sarb xchg mov decl jo xlat add in pop out jl ret adc in fsubr (bad) imull (bad) mov mov sbb pusha push out stc (bad) lea iret xchg mov cmpsb sahf sbb movsb xchg inc stos out cltd mov lahf push mov mov fnstenv iret (bad) hlt pusha in jp sub out cli loope in fsts push popf jg dec xchg dec mov and jmp jno loop or pop pop sub nop fldcw imul mov mov xchg jnp outsb cltd mov inc pop das or out div insl sub out sarl push pusha movsl shlb add pop xchg fsubrl outsb cmp out cmpsl pop cs in (bad) xor out push jge adc pop sub fnop scas cmpsl out dec xchg sub ljmp pop xor loope lret scas iret mov pop xlat je pusha shr fadd and (bad) ss out add sti (bad) lods push out jns sbb scas loopne ja pop adc mov sub mov dec add push sub mov and scas cmp push decb fmuls ss in rorb mov fs outsb xchg mov out out enter mov push popa adc xor jecxz outsb push jp (bad) or loope ret out lret dec lock mov pushf cmp insl pop and lea jg inc imul out dec sbb mov push mov iret in outsl xchg cltd cmc mov sub inc jmp push int cmp out adc jle xchg cmp inc repnz int3 aad lods fsubr les pop sub add jne in out divb in out (bad) mov fsubr xor call inc out test popa fisttpll out xlat (bad) mov out add dec inc (bad) push adc outsl mov test out in jge push test insb push adc aad iret loope jecxz push and bound ret fdivs xchg inc mov xchg out (bad) adc outsl cli call jl adc cs loope mov dec sub (bad) push in lret push lods loop loopne out divb jge into scas lahf cli out mov scas std dec out push test sbb jmp or xchg jo std cli out jae (bad) je,pn jno mov or add lds push out mov in lret testb es loope out imul lahf out push call mov into jle int3 scas mov ja stos out loopne pop test (bad) cmp or lea lahf les ds fcompl stos adc out out insl jg cltd pop enter sub add out les jmp dec mov aas jbe ljmp gs pop cmpsl scas mov scas stos mov ret jb imul sub dec sub mov pop add sbb out call out add movsb jge and into mov test sbb mov imul sub inc jmp jmp bound outsb jge mov dec and and out loope inc push enter pop imul cmp sarl mov xchg cmp and mov call push stc clc icebp sbb lret out xor adc fsubrp push dec xlat ds fs and imul out (bad) mov idivb (bad) mov shl xor xchg movsb pop xchg int3 out mov mov imul mov mov cmc call mov adc mov clc rcl cmp xchg repnz mov (bad) shr test sbb (bad) ljmp scas or repnz out mov inc fsts fnsetpm(287 cwtl sbb (bad) pop mov daa pusha cmp in mov rcrl cwtl dec xchg jg mov out add fdivrp adc lds call mov cld jne das (bad) out (bad) xor mov lods imul jne pop sub in jmp pop out andl stos movsl ret fildll mov out in push inc and mov inc and insb jecxz sarb cmpsl out xchg inc cmpsb ljmp adc lret pop call mov out out sbb dec ffreep imul and xor out aas icebp pop dec dec das adc pop jns in push cmp inc arpl adc in orb or pushf notb outsl sar scas ret (bad) fs pop in out sbb test push nop sbb out dec mov push iret dec fs push pop mov pushf sbb or js testb ja enter sti jmp dec push pop xor (bad) mov popf out loope pop mov bound add (bad) xor sbb sbb imul out sub test out loop fdivl fucomip les inc adc mov push sbb outsl mov or aas outsb inc push mov mov xor ljmp nop loop pushf sbb insl (bad) rcrb inc cmp arpl scas mov xor test clc imul mov fs jle adc mov les sbb cwtl sub push sbb xor jbe iret pop jns pop shll adc mov mov (bad) xchg (bad) adc xchg lds sub dec cmpsb in jp stc add push xor mov cmp push mull xor push xchg out add pop (bad) mov push pop movsb push std pop call pop add jnp mov out xor or inc dec notb inc out xchg out lds (bad) jno out shlb out or sub jg xor xchg dec push out inc dec add mov pop lods outsb rorl jno ljmp sub je mov sbb pusha fsubr insb jnp shrb out xchg jp xchg repnz in out dec pcmpgtb cmpsb jns or lahf pop cmpsl jge cltd outsl push ljmp cld into push jecxz sub and adc ret in mov out push jmp mov stos jge xor out pushf mov test out int3 jmp scas popf testl jecxz jno xchg out or add sbb xlat out mov dec outsb imul call xorl add mov out xor lock pushf stos add insb mov and lods inc pop pop adc lods jmp mov call (bad) xchg imull ljmp out xorl jmp xchg dec push sbb inc or pop stos jnp cmpsb mov bound out mov or ds (bad) fsubrs cmc sahf push mov push lock push push jl pop lcall mov jnp jp je sub ret add push fcom sub fidivrl out mov bound and inc int3 leave adcl lcall out push jb fcomps gs in imul (bad) pop lea fldenv cmp push out lods xor daa jge shr sbb cmp dec out mov insl repz xchg pop mov (bad) gs dec xchg mov cmp mov jae out and fiaddl mov xchg push leave out push hlt and outsb fs loop sbb int3 adc mov in (bad) out lret in jmp push call jle (bad) or stc lret xchg pop rclb (bad) jmp add pop or fistpl out dec mov mov test icebp mov inc out sbb mov fstpt sti dec aas pop mov mov je jae daa pop cmpsb ficom imul int push pop loope pop sbb cld pop cmp loop int pop cmp (bad) dec and out jne push mov out int popf (bad) bound mov jg clc mov jmp push or scas (bad) stos xchg jo adc or test pop fnstsw xor fucomip cmp pop mov push add sub xchg out mov (bad) xor and lahf mov pop arpl or and sub pop out xor xlat lods arpl cmp dec sub inc xchg and push (bad) cltd xor std mov ret idivb in mov out int push jnp shlb andl mov mov inc addr16 inc fs (bad) xchg or sub repz inc sbb inc out mov mov imul fnstsw inc daa stos dec cmp popl loope (bad) mov (bad) pop and daa scas dec jle (bad) jg movlps or stc in xchg lods ret mov push out jmp mov int3 and inc sub out mov out cmp mov lcall jmp mov into imul xchg push out pop rclb mov sbb xlat jno int movsb inc out in xchg stos scas mov outsl jl dec out fsubs inc inc pop mov (bad) bound dec cmp or cmpsb out xor pop mov mov es push jg cmpsl insl push adc mov aad jno es loopne test out pop mov push (bad) cmc lods out icebp subl out pushf outsb adc mov (bad) push push jg pop enter pop cmp pop or into test jbe arpl or nop iret (bad) pop clc daa pusha push (bad) out and ljmp (bad) push shrb dec insl adc push xor mov pop loop (bad) jbe lret sub shrb adc sbb outsl outsb xchg adc pushf mov jno shlb sub out mov pop cmp pop mov push lods xchg jmp dec into in dec loop pop sub push xlat rol out push lods xor (bad) ljmp imul fwait aaa dec sub pop xor sahf out into movsl inc rclb lret aaa das add ja mov or mov sbb ret in stc movd mov pop imul popf movsb xchg (bad) xor pushf out lods bound test out mov sarl push mov out sarl ds (bad) insl adc lods xchg cwtl pop insb mov dec shl in loop out jle sahf inc into fdivr ljmp out fldl mov dec arpl (bad) hlt xchg popf out (bad) mov jae out jbe push pop in sub sarb cli jge outsl fildll fnstsw jp cltd test xchg adc fistpll cld out pop xor mov loop adc ret mov xchg movsb outsb pop pop ret mov sub out mov xchg fsts outsl (bad) mov dec push insl sub inc out mov sbb and add push adc or jns fadd icebp in out out flds in xchg xchg xor movsl sbb in mov mov xchg out ljmp iret out cmpsl and jl (bad) outsl scas dec sub js (bad) out adc fildl stos jne faddp jmp sbb xchg ljmp fs scas movsb mov add push mov pop repz or mov flds pop add out sbb bound add push add out sub (bad) ficoml xchg push pop xchg jg (bad) jmp shrl out mov aaa ja out loop lods mov incl sti out ljmp cmovg mov xor ss lahf dec fisttpll ficoml or loop out out cmpsb jae jnp pop mov pop cld and (bad) aaa and jmp cmp shlb mov in arpl push (bad) xchg adc out out icebp pop mov movsb adc xchg mov mov roll fbld lret jge dec sbbl pushf out pop test dec imul push mov ds loope lret out jbe lea loopne sahf jno lods icebp jne push push lods movsl mov cmc xchg push bound out add pop jnp iret divb jmp jo fild sbb test cli mov out mov int3 rcl fisttp loop (bad) popa add les sub fsts inc (bad) mov mov (bad) in out cltd gs dec sbb push adc aad or xlat ds push aaa sub and adcl dec movsl cmp fcmovne jg dec call cmpsl pop ret sub inc inc dec out hlt push lret and pop ja data16 mov and fs lahf mov push mov mov das sbb loopne es ljmp (bad) hlt out mov pop sbb mov pop arpl (bad) lods xchg out lahf jnp mov mov jecxz sub xor dec pop push out out outsb mov mov fidivrl push daa in enter cwtl xchg in les mov lcall stc arpl fwait adc shr xchg lds adc cmp adc jl sub fwait out loope push sub jmp imul xor stos (bad) bnd movsb inc movsl rolb mov loope sti js aad inc xchg fild shrb dec out push adc sbb in mov push cltd sbb xchg jne ljmp sub mov pop xor out lock adc data16 (bad) cmc adc lods cld nop push inc imul les out int3 iret (bad) or xchg inc dec enter add xchg jae lahf fucomip imul lret insl adc es mov out popa fs daa in aad out sbb leave idivb sbb sub (bad) pop jg jp aam lret pusha (bad) lock outsl jnp inc gs push pusha sar (bad) out out add jns xor xchg adc movsb scas dec or insb adc mov jb fldz jge int3 inc pop je mov or add inc xchg es fcomps xor xchg xchg mov leave icebp or (bad) (bad) in jnp int out into inc xchg fcompp pusha (bad) fistpll jae push mov insb in xlat out inc mov cs js in cltd stc dec out or push cmc adc jbe movsb not push fcmovbe or test out fadd adc out (bad) loopne push pop in cwtl (bad) xor insb je jecxz adc fist rcrl shll out inc push test out dec in xor (bad) jnp sbb and outsl fldz or pop add cmp jae cmp push outsl movsb cltd iret xchg pop xchg loope xor shr cmpb add add (bad) (bad) fwait push rep in jo data16 out js push scas call dec loop rcrl (bad) int3 mov into js jmp daa stos out cmc cmp push test out adc test jmp pushf out outsl or cmpsb imul mov mov daa mov ja fstpt xchg iret pop ds (bad) and mov sub or pop jp in cmp sbb aam jg sub in fmulp out cmp push out mov lds pop stos sbb (bad) aad cltd in daa push es imul push lret cmpsb out or lret push out mov lea bound out jle cmpsb fcoms in xchg mov out sbb inc in push fisubrl inc push pop outsb out cmp push call jp cmp hlt ljmp es push movsl mov jecxz in inc sub inc lahf in mov out in jbe and gs or sub out in shrl out int3 data16 mov cmp adc jb xor xor cmc mov loope fnstsw sub lea fs pop scas in imul push sarb xlat push mov movsb jb out insl sub ss loopne and inc xchg iret orb movsb or (bad) (bad) jbe and aam enter xchg imul mov rolb les adc pop adc imul mov addr16 out (bad) adc imul popf add mov out jp sub pop and or aas mov jp cs scas adc out sbb xchg stc push add xor adc add pop popa in dec in outsl mov xchg add rcll dec fcompl loopne cli lods pop xchg shrb jb fisubl ret pop push jno mov cmpsb into addr16 clc out pop in cmc adc test rolb xchg push js jg in mov aad xor imul cs loopne fidivr xchg cmp sar insb fnop out test and jmp out xor test add out mov fsubr lods shl hlt (bad) mov ss repnz xor cltd (bad) loopne out xchg or out add cmp jb jl mov aaa ss das in push mov pop test aas mov push (bad) fidivr out mov xchg stc out (bad) push mov xchg cmpsl mov pop mov pop rcl fsubrp aas cmp mov fldt xchg and in (bad) out test lods inc ja inc out jnp mov idivl (bad) sahf in adc scas mov inc adc cmp out std test rcrb inc push nop xchg dec out pop mov out or dec pusha movsb add mov mov lret aas adc in out push dec aam ret mov xchg (bad) push bound out cs in fstps insl movsb out sub loopne (bad) lock out frstor data16 push adc (bad) je aad add in stos xchg leave in cwtl scas fucomi push popf sbb pusha call arpl sub test inc dec jmp add cltd mov pop call push jp adc insl out or test sahf adc (bad) out nop push (bad) xor sti jmp data16 and (bad) and jbe mov xchg pop jno in inc dec jmp xor repz faddp sbb jle in ret out jo jns cmp xor and xor mov aad xchg cltd pop inc out xchg lods or imul adc lret adc test cwtl cmp mov mov dec insl test ret out aaa test dec and dec add inc out out pop mov mov out mov xchg rcll jmp idiv mov add mov outsb test push enter iret in je pop sub sbb (bad) pop cmp (bad) adc ja stos sbb pusha cmp imul je (bad) fdivrp stc inc fsubrs jmp out pop pop adc sbb rcrb pop sbb adc dec inc out (bad) push fwait jae sub pop cs mov sbb stc in mov out loop inc iret icebp nop pusha sub loop jbe sahf mov cwtl jle in scas cmp out cs jmp adc push rol xchg aad sub inc push out jb popa out inc push pop int3 rolb jbe push (bad) daa stc pop (bad) fnsave ljmp cmpsl fdivs into xchg aas out (bad) in scas out jle add mov das ljmp out fwait (bad) mov sub (bad) (bad) ss jbe out cmpsl hlt mov cmp push sub mov lret imul cmc push inc sbb lods (bad) push push lock movsb in xchg out out pop or cltd xchg ret cmp push pop loope pop imul pop and loopne sub pop ds fcomip inc notl mov xchg loop (bad) mov jb rcr and out pop sbb push pop xchg mov out pop (bad) or call mov jg sub imul (bad) mov (bad) mov out mov stos shr adc rcl call push pop inc sbb rcrb out mov loope mov mov pop adc push add cmpsb and insl mov mov pop lret add shr and enter out adc inc mov mov in cltd ret jno fisttp pushf and mov add lcall out (bad) mov frstor adc loopne bound dec loope push or nop cmp mov cs stos outsb and sahf out inc pushf dec add orl fsubl iret fisttp imul adc fwait out fcoms frstor imul and dec pushf pop repz clc enter adc in mov int3 (bad) lret (bad) xchg iret xchg jp sub mov xchg mov cmc adc mov lret stos mov xor cmp aad loope dec out and ret xchg fs adc push sub push pop pop (bad) lahf mov das test out push pop inc std dec lods outsl and int and add shrb mov cli out sub sub aaa popa add jmp fxch fucomi pop pushf (bad) xor sub push hlt loop les cli mov insb scas mov (bad) out cmp jge inc out cmpsl out loop jne repnz inc sub or sbb out and not fcompl sub mov mov xchg mov lahf fisubl (bad) out or mov sbb insl aaa loope ljmp imul outsb (bad) aas jge lret inc ficom in xchg (bad) out mov std lods imul dec addr16 sbb ljmp mov pop out leave mov push out loope push sbb repnz out xchg dec xchg cmpb enter mov imul adc adc je or ror inc out movsl cmp push fildll out sub cmovnp hlt pop mov xchg movsb or add xchg repnz add out inc xlat push rolb jo outsb xchg (bad) stc mov mov cmp out lods test movsb aas decb jecxz mov inc outsl out sbb and sbbl sub insb aaa dec jbe sub cli pushf mov pop in fbld fs in cs and fnstenv arpl xchg in out int sbb (bad) mov jmp dec jb jmp in add cmp scas xchg and loop outsb shrb or inc mov mov fwait or adc js xchg sbb test shr mov lret out lahf cmc imul out add adc test pop inc push out or dec adc out pop push ljmp push and mov sbb inc mov imul leave mov sbb stos adc lret inc out (bad) daa js loope jnp pushf test ljmp out in popa pop fisttpl xchg repz sub out inc pop sbb rorl lret fbld mov add xchg xchg dec js fadds push pusha fstpt data16 push jmp mov mov jno dec lock punpckhdq xchg out shll xchg inc lods lret cli sbb mov jno cmpsb int3 call push dec ljmp cld cmpsl stc xchg pop mov out movzbl cmp cld insl pop pop int bound jmp aaa out jl xchg push or repz push dec cmp push dec out cmp ret daa sub pop in cmc out jle scas nop cwtl add out ja or (bad) out push jo xor out dec shll stc test sbbl out sbb outsl fcompl or adc jmp pusha repz lock inc adc in out cmc dec mov pop out adc (bad) aad or jg rclb mov fcomip pop sbb in and adc lods enter scas in pop ljmp roll and xchg sbb out add je insb shlb cltd out mov xchg out les lret xchg fidivl movsl sbb ret es (bad) test xchg cwtl push les or out push rolb pop mov imul popa lock arpl pop out xchg insb sub mov jmp out test out mov inc mov mov push xchg mov test out mov lcall or out push fwait pop and (bad) out int3 ja add loopne push out push jo cs repz int bound fdivrs pop fdivrl icebp (bad) loop scas enter pop into pop testl out jp jg insb fild and in into mov ret xchg add jecxz out test lahf imul jg mov out pop pop pop cmp pushf ss pushw cmpsl push adcb cld pop mov jmp add cmp or out adc aas jmp iret rcll hlt out push repnz sub sbb mov stos jecxz and out mov (bad) mov scas sbb jmp (bad) idivb push imul pop add in repnz (bad) out jb xchg or jmp adc pop enter xchg fbstp lods out call scas lahf hlt insl cmp cmp loop sbb or ret xchg hlt ljmp and (bad) std outsb call cmp pop in pop mov popf fwait dec xchg outsl out idivl cmpsl jle repz out xchg sbb ds adc cmc fmulp pop test out mov out pop repnz sbb dec gs out lods imul out mov rolb out lahf jecxz scas subb test xchg enter rolb fwait out std in in repz mov jmp in cmc fnop (bad) in (bad) sahf out fiaddl pop xchg mov push loope or dec mov imul sub pop lds pop in out adc out pop xor cmp or jo daa hlt add int fstps adc push adc cwtl imul mov loope or fucomip je xchg mov adc add mov adc out push jne or lock mov sbb jo xchg clc xchg mov push mov cmp sbb aas scas add outsb jb repz pop push mov lods popa jg jp dec pop arpl daa mov out gs out js mov mov mov adc sub jle popa sahf shll in mov pop push jmp jnp add out outsb stc cmp les sbb sbb pop rcrl or insl out lret pop (bad) jle jl lahf out adc out nop and mov cltd fprem1 in or (bad) xor push lret daa call sahf mov retw out stc shll dec push loop mov push (bad) ss xor xchg loope pop out lock enter or fbstp xchg insb inc ja,pn rcrb out test inc in test (bad) ficomp imul loop outsl or jmp lds sbb movsl mov cmp xchg scas pop (bad) pop subl push out (bad) and cmp pop out mov cmpsl (bad) xor lods push mov loopne push hlt icebp fs rorb out or popl das inc test fistp int3 in je xchg mov mov inc icebp pop jmp mov out in lods xor or cltd sub call pop mov xchg jb lock adc sub faddl clc xor into push sbb sbb push fs out and out insb (bad) fildll out or bound arpl sbb out xchg js imul vxorps fidivrl inc fwait insb out pop (bad) pop mov pop stos int3 jl adc (bad) out fildl pop sbb neg jno test cwtl jg push adc mov mov push mov out xor xor (bad) cmp adc scas pop outsb out cmp cmp mov loop jae mov jle out inc add cmc scas shlb mov (bad) mov adc (bad) sbb xchg sub test xchg push jle mov (bad) jb jb push cmpsl movsb lcall out sahf adc imul imul xchg iret insb dec fsubr and jb jmp aad ret pop pushf sub mov push es jg and addr16 in or in adc stc dec cmp (bad) scas xchg gs push jmp repnz outsb mov cwtl pushf add sbb push cmpsl push inc or push imul cmp out push xlat lock rcrl fwait insl iret pusha hlt pop xchg (bad) call xchg in out pop add ja aam sbb mov jo cmp mov cs sti mov (bad) fwait minps ljmp mov sbb pop and inc outsl out and inc sbb (bad) pushf push mov fisubrl (bad) out push cmp (bad) sub dec mov mov pop int3 mov imul (bad) dec es cmp out adc pop dec cmp js adc pop (bad) fcos out out jb mov imul call jne jno add pop cmp fnstcw insb insl or iret or sub fisub out shll lock mov and insb (bad) mov sbb fcmovb lret xor jg icebp ljmp in subb sbb out or dec mov out xchg xchg cmpl jne jns ljmp ds ljmp lret sahf fmul (bad) jno inc push xlat gs call (bad) cmp and stos pushf jge inc fstps fsts insb fdivl ficompl push mov inc leave jge pop out xchg xor (bad) ficom sti sbb sub pop xchg in out jge cli pop dec je outsl jae push add mov xchg sti loop pusha out call or out (bad) sbb pushf loope dec out into xlat cmp jne sbb outsl xorl clc out push xchg jge sub mov pop cs out jle ret test sub and inc sbb clc push out inc aad je dec sub mov push sbb and and out jl inc cs push or (bad) xor mov out int3 add mov arpl mov out mov shrl decb imul stc mov es insb mov push cmp inc sbb mov sbb xchg dec dec in sti insl dec out jns fsubr fdivl loopne inc mov cld mov push sti lret bound in mov xchg call out add jmp fwait iret pop subl jae push out inc in out int3 popf xor iret xchg loopne jne icebp pushf ret out or faddl out aam shll cmpsl scas sbb pop out fwait jp fdivl adc (bad) jmp test stos cli fsubl inc mov add leave jg sar enter mov insb mov mov test outsl incb insb aad mov je and out les mov (bad) fisub cmp mov xor adc mov sbb push sub out es pop mov xor gs jp and mov cld mov mov leave inc stc bnd out out push inc test (bad) (bad) out mov mov aam cmp mov fildll inc fbstp out pusha in shrb ret lret mov adc pop arpl pop int3 inc mov popa jecxz mov add jb decl out loope and out dec adc xchg clc shr sarl (bad) out outsl vdivss xchg sub xorl out pusha dec jno jle fwait adc xlat or inc iret out ss rcrb rclb std leave loop jne scas dec pop out int3 ja xor pop cs jle add in mov stos das ret dec in call cmpsb and dec jne fs out inc aam dec mov dec out scas push mov (bad) ficom pop fcmovu inc loope aad pop ds mov std sbb pop cmc ss out insl sub or std cmovg out (bad) cltd dec movzwl loop fisttpl repz push push mov std pop pop add mov mov adc nop sbb pop out push push cmp push into sbb push sbb lea out sti mov mov fist fwait pop sub mov (bad) or jb dec std fnstsw stos inc inc mov ret out gs scas xor cmp xchg in xor sub mov fs jg sbb xchg out add enter mov out lods mov pop mov test packuswb push pop out xchg push in push cmp je adc orb adc xchg mov out mov mov sar cmp lods mov add push jg mov adc mov pop push fsubrp (bad) jmp add out ja sarb in (bad) imul xchg (bad) stos mov push dec outsl out push xor dec sub push jae rcr mov mov sub test xor push outsl out or in decb pop jns xlat std outsl insb adc outsb lock dec lret (bad) lods out (bad) call cmp mov sbb cmpsb popa lcall mov jmp sbb jnp daa wrmsr out adc pop (bad) xchg iret cmpsl or push ljmp (bad) mov sbb out nop popa aaa xlat and jmp or in and icebp loope push mov fidivr sbb adc fildl out movsl jo xlat popa sti push mov enter lcall jp push xchg into mov and add and insb out xlat mov xor push fsubp outsb push cs inc (bad) mulb sbb push push xor ret iret jnp clc loop pop adc lods out mov icebp mov out sbb dec push ja adcl and call (bad) cmp add sahf fs xor pop sub xchg fiaddl xchg add or ja in or jg xor (bad) lea mov fist shrb aam adc cld xor inc out (bad) fsts jns sub call cli mov lahf cs out movsl and xchg xchg pop fsub push ret pop (bad) push outsl aas bound insb dec lods sub adc std lahf pop (bad) mov ljmp scas sbb dec je cmp or and sbb fsubrs out orb cltd xchg pop or inc lahf fs das adc xchg or (bad) mov out and stos scas pop out sub call out sbb out repz rcr enter xchg cmp pop shll mov insl mov aas lret fwait cmp pop sarl jmp out and cmp xor push out xor or sbb stos inc out mov movsl out xchg cmp int (bad) (bad) push clc pop test jmp out ret in ds adcb add or (bad) push sub mov bsr jo popf mov or (bad) out or in xchg lock cmpsb fst xorb mov mov fsubrl in cvtps2pi aas mov pop and dec aam shll mov inc nop idiv adc (bad) (bad) movsb int3 and loop mov add ror pop and mov pop cli push out sub jle xchg mov repnz cmp out jmp mov push pushf dec loop add inc jp mov fsubr cmp (bad) xchg mov jb and out cmp push or push mov bound adc out add data16 mov lret mov xchg out mov add xchg and push (bad) cli test stos push xor pop lds int dec in rcr cwtl out push push clc insb (bad) mov fistpll push loopne cld mov push out jo rcrb (bad) ljmp fs out mov inc nop pop pop xchg repz in addr16 jae sbb pusha data16 xchg dec loop iret mov maxps and (bad) in sarb lock iret decl fadds out mov mov push rcll iret shll imul jb in lcall jbe lret (bad) mov xlat enter jo pop insb stos ret out mov cmp ds jge leave xchg push or (bad) lods lahf inc out idivl cmp aaa aam out add adcb hlt icebp jecxz sbb push jnp adc fistpll push fistpl dec and cltd jecxz inc stos adcl xor cmp enter pop out incb (bad) out xchg leave mov pop sbb loop rorl out or and adc dec repz ljmp into jle nop and and arpl sub fcomp mov iret mov pop repnz test icebp mov ret (bad) out and cmp mov jb lods xor shrb addr16 in fwait push dec sub pop pop addl mov testl pop mov jg pop lods int3 into ret sub sbb xlat dec out pop (bad) lret xchg adc test pop (bad) popa lahf xor push inc mov out cmp (bad) insl movsl fidivl in cld adc inc adc outsl stc out jmp test and mov sub hlt std xlat mov dec pop push insb push lcall in aaa xor sbb imul sbb push add push ficompl dec mov (bad) lods and outsl pop dec lds lret or pop repnz out mov push out faddl das sarb cmp mov mov push lcall test mov add popf sub out arpl movsl les shrl int3 out in sahf out dec test lret out outsb loop cld xchg jmp and xchg rol (bad) out faddl movsl insl out flds push cmp cmp out test push (bad) out mov adc inc push or push lods xchg outsb pop es dec aad xchg fldln2 pop lret sbb sar (bad) sbb jns sub lret cld sbb inc mov pop aaa hlt movsl (bad) mov jnp sarl das (bad) pop xor mov out pop pop cwtl shrl mov (bad) xchg adc js mov addr16 fidivrl out test or icebp inc mov (bad) sbb add lahf mov out les jnp bound dec (bad) loope (bad) cmp sub out movsb push jg insl mov xor pushf out mov loop adc sarb sub shll and mov cmp push sti sarl or into mov pop xor hlt mull mov loopne fistl insl cmpsl out sub jmp (bad) and movsb (bad) push jle out loopne int mov push outsb out (bad) ret sub xlat roll xchg xor addr16 mov cltd fs mov add loope mov sbb fstpt imul dec lahf cld sub sti xchg out fsubs lods lea imul sbb jmp jg ficoml (bad) jl das adc out ficompl loopne sbb loopne loop pop fisub mov pop out inc cltd ljmp outsb sbb in jg pushf arpl out mov pop or lds shr ljmp xchg (bad) repnz mov ljmp test out adc std dec es test movsb fisubr jmp insl jb inc (bad) and ret ficomp in out and mov shr lret and xchg mov push popf iret or out cli into pop mov nop ret mov pop mov lods mov inc pop push xor es fidivr jg lods loopne lock out xlat sub insl sbb mov mov add leave dec idivl stc repnz inc stos (bad) std push pop (bad) sub or subl in sub sbb xchg or fnstenv aam jecxz pop out adc lds inc cmc popa jmp pop outsl les out push leave into ffreep int dec aad out sbb (bad) lcall lahf je cmpsl jg outsl and sub (bad) cld leave push lcall scas out mov es push test or or out andb cld mov mov inc out push fildll push and clc lods out jg xor insb and nop jle adc (bad) hlt outsb in pop icebp or call pop lds (bad) into jnp inc inc test pop ljmp mov stc ja mov xchg dec out imul dec out sbb repnz xchg dec inc scas xlat push cli fistpll inc or rorl cmpsl mov pop push imul rcrl fisubr packuswb lea (bad) jbe cli in fcomp mov xor pop sub xchg mull xchg sub push add cli pop pop xor sbb lahf mov mov sub xchg sub mov fs out mov xor sarb jl push adc cmp daa sub das lds push in call mov aas loop fisubl jmp dec out fndisi(8087 dec mov sub mov cmp test ficompl pusha pop add lret and xchg stos ret jp dec out and xchg fmuls scas out push call mov pop lods sub xchg xchg loop pushl mov (bad) mov pop push ret fwait mov insb in inc pop xchg out cmp jle hlt or das out loope inc shr iret int3 mov add imul sbb xchg push scas push jmp jb gs mov out jno pop sub adc loopne dec fmul popa sti xlat clc out sub xor pop adc fdivrs lock (bad) iret or cmp js push cmp loope dec out int mov jnp mov jecxz xchg mov push cmpsb ljmp jne pop out ficomp ret insl sbb out aas lret and (bad) fidivrl adc imul inc mov mov mov repnz sub xchg push mov jmp push mov bound pop in dec push add push loopne xchg pop sub out clc jmp ret or out fsub sarl xor mov inc pop outsb mov inc dec fistpll jne out (bad) loope fildl dec (bad) inc xchg xor notb mov jno out add insl xchg mov (bad) sub add outsl in in mov mov mov inc cli push mov mov bnd inc pushf sti ljmp out out imul jl jmp mov shr scas fcmovnu pusha out mov mov sub out or (bad) out aam sub adc push fildll cmp aaa jg dec jb sub nopl lea and movsl out xor xchg pop (bad) std mov enter add pop cmp cmpsl or les sub pusha mov dec out shr cmp mov out cmp enter or fisubl adc fsubl in push cmpb jge ljmp mov push xchg out add mov hlt sbb xchg mov in rcrl lea mov mov pop or jae sbb idiv out xor jle (bad) mov or inc scas adc les mov shll or or dec outsb in jbe loope frstor imul sbb out and in mov ja push neg stc pushf sub or lcall shr jecxz inc cmp loope out decl mov dec and or (bad) mov xorl ljmp inc ss mov pushf pop shrl or mul sub fimull in (bad) fbstp fs divb mov (bad) repnz pop cltd jl lcall insb jno adc and out leave cmp jge adc jb inc (bad) jmp push icebp cmc cli lret out test and enter cs and imul dec lret mov repnz pop push cs loop imul sbb xlat mov aad insb cmpsb push adc mov xor fucomip push cmp iret imul push out lea sar int3 push popf ror fucomi push jge sub movsb fbstp pushf cmp ljmp loope adc xor (bad) inc ja mov mov loopne cmc in cmovl cli pop icebp out fs push add xchg and mov outsl insb outsb push push lahf push ret add jo inc dec xor inc in pop xor adc out fistp xlat (bad) mov xor test pop jp mov call imul loopne incl cmp faddl mov fs lcall adc test bound jo int jne out sbb in aad push and stos ficompl push xor aas add iret and pop (bad) fisubr xchg cmp out and (bad) out sbb push cli stos bound sti fdiv outsl pop push sub and rcll mov dec jns cwtl test xchg lea js fist (bad) (bad) lcall lea cmpsl out clc sahf (bad) insl mov mov (bad) xor (bad) loop mov mov leave push or mulb cmp adc adc dec lods shrl pop xchg dec xchg mov aam out ja adc out test adc lea jo (bad) mov sub sub jmp js inc jg jne mov ret aaa cld stos jecxz out pop data16 sub out fsts fwait or repnz dec out jecxz xchg ret in pop pushf jg test icebp or fwait pop mov stos cmp xchg fistpll and in ljmp out dec js push int3 into in iret clc pop push repnz (bad) xor push sbb xchg hlt out lahf fnsave mov in pop push in int cs jg dec and subl jne adc xor xor outsb call mov mov sahf (bad) mov pop loop movsb jo sbb lahf xchg lret or xlat fnop pop std mov pop out mov ss adc out rclb mov pop popf in add lods xchg loop,pn mov out mov pop dec mov cmpsb lcall test out out out (bad) dec push xchg lea cmp or xchg pop cld (bad) jmp jecxz je push ret addl lahf neg cmpsl pop std scas or mov dec insl movsb iret add inc adc lret out out jno and test ret dec imul mov test adc lahf jle inc aaa mov cmpsb in iret mov pop (bad) push call mov jmp add pop (bad) cmpsb dec daa lods ljmp cmp cltd ja cmc or arpl cs popa out lds shlb pop (bad) dec push or outsb cwtl pop xor push loope pusha mov out popf xchg mov fiaddl fs enter scas jmp (bad) out loope inc jnp (bad) imul rcl mov out mov das xor push test rclb inc pop out mov jnp cmpsb out popa cmp repz movsl push aam push push ljmp out cld fisub shr hlt adc pop mov daa pop sub mov xchg arpl leave nop in cmp out cmp das test sub addr16 (bad) ss mov movsl testl les ds es lcall movsb out or popa pop std fsubs imul xchg jnp out mov scas mov mov fistl clts add push out pop insb ss sar mov lea mov icebp out mov fcompl imul sti jl pusha mov sub ljmp mov fcmovnbe mov enter mov insl fucomip sub pop push fwait lods aam mov xlat pop out fnsave inc pop call inc ljmp std mov out push js (bad) gs fcomps out mov sahf cmpsl inc ljmp ja pop mov jb mov and xchg stos out movsl or int or sub and mov or pop add out into cmp sbb mov das dec je pop sbb out xchg mov push dec out (bad) repnz test jge pop jecxz mov fldt fistpll aas mov int3 add sub dec cs pop (bad) xlat xor movq lock jb push pop push mov paddsw out inc insb movsb and pop (bad) ja inc out call int3 cs mov lret sarb mov cwtl aam fiaddl mov out jno test lods scas enter out add mov je jne out stos mov mov nop add adc clc mov scas mov jmp enter data16 jmp jg xchg mov imul sub mov es xchg pushf loop stc lds or out out adc test lcall (bad) pop (bad) (bad) jmp (bad) sub fs fbstp pop inc cmp daa or std jg xlat test out rcr test adc xor jg sbb dec cltd cmp fcomi mov mov or push jns outsb fs nop lock aam roll (bad) push in es out xchg jb adc mov movsb fsub dec fnsave and out mov sub sbb inc stos sub int3 mov xor lock out imul cmp push fisub mov loope cmc inc cmpsb cmp cmc pop out pusha jno mov dec insl popa out mov outsl fistl sahf jae lods lahf cld dec xlat (bad) pop out jns stos into add mov imul fild pop sbb stos fsubr fs roll pop mov ret adc clts adc sub in push xchg out and push loope mov test sub out js inc add rcll jns out out add (bad) sbb fdivl mov mov out icebp dec cld mov add mov outsb xlat pop loopne add push test adc fsubrs and out ljmp leave out in mov (bad) jo out icebp gs pop sbb xlat push ljmp lea andb jbe shr jg outsl stos sahf mov lea lret pushf call pop dec das dec sbb pusha out je sub jle (bad) ficompl pop pop cmpsb (bad) hlt dec sbb in daa (bad) out fs mov cmpsl out aam cmp mov test jnp mov hlt out jle xchg jecxz enter jg insb adc fsubs and lods sub nop dec push out xchg lcall mov subb pop mov out add sub xchg (bad) icebp pop fldcw out out or mov out and xor sahf into adc out xchg or lretw imul daa lea shrb repz dec fidiv out iret push adc fs fcoms lds push in lret adc lock mov ljmp or test aam fwait jae out pop lret decb out adc enter (bad) (bad) sbb inc mov dec lcall pop mov fcmovu popa popf jmp dec and scas cmpl mov cld inc mov jo jmp out adc and je lcall sbb mov aaa iret lock out pop push sbb lahf std test pop out lret (bad) xor (bad) mov cs in out clc int3 jmp sbb lds push pop xor and sbb repz scas data16 loopne jge out js mov or andb mov sbb adc sbb jle stos (bad) jge les pop jo jnp lods out pop cltd mov (bad) lret sti jb (bad) push ljmp jno mov adc xor dec jg in and cmc sbbl cmp add push sahf shll or cmp mov (bad) out dec fbstp push push fwait das sub cmpsb push inc rclb pop pushf sti fnstcw popa aaa daa pusha outsb out pop pop mov sbb leave out mov adc jge pop lock movsb shl js xor xchg hlt pop loopne aas out cmp cs mov out and ds xchg push fisub stc fs push out lret in push inc jmp xchg out aam xchg lahf fmulp xchg mov cmp sbb bnd cli fidivl sub inc fsubs jmp xor loope clc mov and stos fwait loop push add pop or sbb dec and stc push insb push cli xchg jle out outsb stos dec pushf pop sbb adc or fildll cli shlb pop popl ret mov icebp mov out and out cmp cmp out sub (bad) andl pop orb cmp adc fucomip push mov fstl push sarb stc pop ds jno in sub pop xlat add rcl lret xchg loope int rcr pop (bad) icebp ds xchg push adcl stos cmp rcll pop lcall pop push outsb scas scas or pop imul xor stos ljmp fist cltd repz into ret (bad) pusha inc push out jb lea repnz je loop loope mov iret daa data16 and cmp roll push scas xor neg pushf outsb mov lea pop aaa gs pop jae out xchg aam sti xor sub in in out insl je mov dec pusha shr cmovle ja sbb out push jecxz cmp cmc inc push pop daa mov rol or lods repnz jno cmp in fnstcw jmp push (bad) (bad) mov out dec cmp out cs sub xor ss push push pop leave out call out push cwtl fwait in lods cld test out push xchg xchg stos jmp repnz mov push and cwtl dec xor adc xor outsb add inc pop mov sahf push repnz push push inc (bad) test cs push jb stc xor xchg out inc pop sarb out outsb subb iret es enter sub out adc insl or out xchg test add xor lret sbb jno xor push aas stos xchg lret add das add les xchg cmp cmpsl pusha rcr shl in inc jne rcrb jl add push mov shl fwait mov pop out addb dec sub sarl jne subb (bad) in xchg inc dec call adc push fsubl fwait out pop in mov aam sub or imul lds sbb repz jg xchg mov pop jge mov aaa lock or fwait (bad) jns lahf je cltd iret gs mov mov push push pop add in mov mov jns or pop and xor lret out adc ret xchg mov jns inc imul data16 (bad) mov push mov in rcl push int out fstps pusha pop mov loop add es (bad) ljmp lret ljmp out adc les xor test xor movsb out push inc imul pop clc ja out das pushf rol mov sahf shl pop xchg cmpsl pop push xchg sbb dec mov push jge mov jecxz imul loop iret shl xchg test outsl aaa out jg repnz out test hlt arpl adc fcompl popf outsb out sahf xlat insb sub ljmp daa xor add pop mov dec push enter insl jns shr scas mov xchg ja insb xor mov pushf out pop xchg mov dec (bad) std test push in dec inc aas inc nop xor repz out cmp out push sarl out and loope les outsl shll out jecxz adc mov cli scas stos sbb loopne jae push popa adcb fcoms mov sarl aad mov iret in add pop imul out jbe and xchg arpl data16 push into jecxz movsl mov out clc pushf mov cli jns adc insl les andb mov adc rorb ss pop mov test insl cmpsb cmp out add aas inc fistpll out pop outsl sub push ret icebp cmpsl mov sahf repz out arpl popa mov lret mov mov push sub cmpsb out inc insb cmp mov push movsl pop out cmp fisttpl mov lods xchg inc sti out ja jb sub pop rcll cmp and cmc (bad) jnp std jle pop inc mov in mov fsubp out sbb sarl xchg and sub pop rclb and (bad) insl xchg shl mov rcll out adc lods out jecxz aad rcl add cmp adc std pop mov stc scas push mov gs mov fistp and sbb (bad) aad call lods dec dec push xchg pop out je adc out add lock or int3 (bad) loop push mov stos cmpsb sarl imul xchg test (bad) lds out popf je in push pop out or mov xchg out cmc jns cmp sbb adc dec into ljmp scas outsl push out add mov add lods cwtl scas (bad) or xor mov stos sti sub or sub cmpsl es cmp ds (bad) mov ja mov pop sub mov sbb test popf cmp out pop adc rcll push xchg pop jmp mov stos ja (bad) pop inc add and insb cltd idiv adc mov lods stos dec out dec jmp enter jno adc fiaddl out push fnsave js (bad) cmpsb jmp pop xchg mul push aad vorps lock mov rolb mov outsb inc push je push out incb out out popa ja loopne out in sub out pop data16 icebp mov scas dec out imulb loop pop push xchg pop adc ja rol cld or mov lahf (bad) (bad) dec push out sbb inc mov push mov out test fist addr16 ret xor inc pop notl adc jge adc mov imul out cmp mov out mov sarl mov popa stc mov in fsts pop and lock push aam mov leave inc push out dec add dec dec and out enter xchg rcrb mov sub mov js int call pusha out mov push stos cmp lret daa out sub hlt xchg jmp test jle jge adc push mov repz jmp out sbb lret push pop call das shl sbb (bad) xorb jo loop push ljmp push sbb int3 imul push out xchg jae sbbl jl ret idivl pop out mov fsubl push daa xchg mov pusha xor dec bswap lret clc inc adc push je out lea xlat mov stc inc (bad) sbb jae out cwtl test jb fcomps add (bad) (bad) or mov repz (bad) lret (bad) mov gs mov push inc arpl lods mov jne sbb fstpl test insb out cs cmp fwait ljmp jne inc bound (bad) arpl adcb loop gs movsl out repz pop cmp cmpsb call scas and push and cld movsb mov call xlat jns fisub adc pop mov mov mov xlat fcomi rcr sar out mov jbe mov lret out iret add pushf lods addr16 dec int aad out sub jge (bad) mov inc test fstpl insl out xchg fwait cmp in dec dec in jae push inc fstpt ucomiss repnz in sbb sbb out mov sub out mov pop js mov stos out xchg xor popa lea out pop and mov out or push sub xchg mov adc sbb aas fs out jae push jae pop mov xchg addr16 in adc pushl (bad) jge loope mov lea call andb js aaa cmp push in or dec lea out test pop push and mov mov lret rcr cwtl insl push icebp nop out test xchg sar (bad) fldt mov (bad) (bad) jbe mov pop out test sub enter jns in xchg jl out mov sub push mov lahf dec out push mov jb (bad) clc xor cli in or (bad) cmp cs mov and push (bad) es in (bad) int rolb sbb push dec out xchg jae rcl insl into das pop mov aam in (bad) fnstenv test fwait mov add out xchg inc sbb ffree jae mov aas mov aad outsl jnp sti popf imul fsubrl add or out shll test mov add cmp cwtl mov jmp (bad) mov and inc aas push lods stc out and movsb js out xor pop in out pushl insl addr16 out lret mov mov pop stos adc mov out inc nop ljmp scas out rol dec aas sbb imul xchg adc push push out fdivs psadbw loope imul mov test arpl rcr call loopne aam cmp mov dec inc add add add mov inc mov in insb in out push int jl fcmovnu pavgb std push rolb hlt scas lea mov mov mov inc clc xchg lods dec out (bad) add add lcall sti mov loopne and out (bad) pusha mov int or ljmp repnz shrb shl mov jnp inc dec les xchg fstp orl stc iret (bad) push es into fxch out xchg xchg inc xchg push decl mov (bad) xchg sbb inc jmp mov mov (bad) out clc xchg cmp jo data16 jge adc repnz cmpsb insl mov popf sahf enter out movsb inc (bad) push std cli pop xchg xchg ljmp dec and mov out sub out movsb jecxz pop mov push add xor xchg and imul cmpsl in int inc mov mov scas and insl jno cld adc push mov rcrl dec imul mov inc jmp movsl push pop rcrl fsubr ljmp or cmp push jo pop sar push js scas push (bad) pop (bad) gs (bad) popf and mov sub scas dec aas xor out adc enter sbb out xchg es js cmp mov ficoml outsl sbb insl sub sbb out adc cmp test rclb out mov pop shrl out test int3 (bad) jbe fisub out push jp sahf sub cwtl push and add push jle add and out cmp push sbb test mov push out jle scas pop ds fwait push dec out stos jne shl aaa mov mov adc pop negl cmpsl out fs roll add daa push mov fucom out push int3 sbbl mov insb imul xor mov jae lods mov pop movsb call insl scas push out sub test dec out inc mov cmp push repz enter mov push cmpsl pop adc cmp mov mov xchg out sub adc adc cmp shl aad push mov push mov push pop pop jp imull cli and add pushf lret dec cwtl imul daa fdiv ss and lods dec jmp outsb cmp adc rcl mov fistpll (bad) or pop nop sbb mov pop fwait pop fsub cmp jns imul jne dec (bad) divb es aas cmp popa jg pop or int imul test jmp hlt lock mov in pop fildll imull pop gs jae arpl or aaa out ds mov int3 out add sub out mov push lea push ljmp pop out into aaa loopne adc aam fsts mov sub loope jae call (bad) xchg mov arpl out xor mov loopne out clc cwtl int aam int3 bound enter sbb das xchg rclb xchg imul iret jl cmp cmc sub outsb ljmp pop cmp pop pop pusha dec sbb and out andl xchg inc lods call imul lea sbb out jae loope roll (bad) mov jmp sub lea jo sub mov and xchg dec pushf sarb out gs push mov pop hlt jo and dec in out fisttpll ficoml sbb xlat out repnz data16 mov pop xor test js jmp pop out jbe jecxz (bad) ds cmp xor movsb xor inc jno shr icebp or dec sahf and mov popa rcr test fldt imul in scas push pop xlat js loop call ret add daa mov out orl xor jnp fildll push out nop icebp ja push adc jmp sbb adc jle into push dec das sub movsl mov call mov inc stos xchg mov cmp out loopne and cmp xor imul jp jae lods rol or (bad) femms stos dec mov insb xchg cs push jmp and sbbb shrb mov scas lock jg pop cltd mov mov je out fwait call mov out dec add data16 repnz xchg addr16 dec sub mov mov (bad) lock push jno inc gs hlt mov loope add rolb lods scas in out add repnz imul xor xchg shlb xor cltd ljmp ljmp decb cmpsb (bad) test jp ljmp fs in mov or and popa stos data16 test sbb sub add int3 sub mov lret add lret add into sub loope enter pmaxsw rcl fs jmp cs fidiv dec (bad) pop inc lds jmp addr16 jp,pn sub inc shr cld push rcll mov fwait arpl fs cmp out mov cmc movb pop in dec stos adc inc out mov fsubs outsb out data16 xor aam xchg shrl mov inc shlb out inc bound movsb add out xchg iret movsl fisttp jg xchg mov loopne mov and out scas jb lahf jnp mov out and mov (bad) dec cmpsl out lock (bad) mov ds sub out push jnp push dec mov out pop out pop dec test ja (bad) (bad) adc imul ds cli mov lods jo (bad) repz add es mov add fdivrl sub mov adc das loope jg repnz insl gs std xor shrb out xlat mov or insb xor mov xor xchg xor pop inc mov and mov cmp iret test sbb (bad) imul add sub push and arpl out inc das mov out js negl shrb rcr loop rcll inc mov lea mov out cmp icebp cmpsl push clc mov in nop sbb cwtl enter out pop imul fsubrp mov pop push inc out pop daa xchg mov out in pop std test or lock jb in xor fsubp sbb shr loop,pn pusha ds add mov lret adc push inc mov shlb pop (bad) sub jbe dec in mov leave out idivl fwait out xchg cmc call daa xchg cmp sbb andl adc and pop out sbb jmp or leave xchg in es sbb mov lods in decb adc rcrl dec das push (bad) cmc rol (bad) lret or inc out out (bad) adc in cltd xchg out jbe adc dec aaa icebp cs jae sbb dec out pop adc pop pop loope jnp sar lods fstpt jmp in out cmpsb cli out out xchg pop sahf ficom sbb movsb cs faddl adc mov adc loop pop je aaa add mov cli dec movsb out add gs fucom sub jb out scas imul dec out adc stos pop jae (bad) pop hlt pop mov fmuls out xchg and xlat mov mov call imul (bad) push rclb insl sbb (bad) movaps aaa test sarb gs ret cs loop pop call cmpsb mov stos (bad) jo out flds mov jmp out loopne jbe adc notb shl push cvtps2pd je add loope or (bad) lahf out cmpsb ds mov pop and (bad) pop pop out sbb add out mov fcomp bound out ss (bad) mov sbb fdivrl scas push fmul gs sub cmp pop sbb sub cltd aam mov out mov orb popa pushf out push cli sub adc pop and lds stc adc repz (bad) inc and mov (bad) fcoml mov sbb push pop xchg int push ss dec nop stos out ljmp mov jb or adc mov pop push ljmp fild cld cmp xchg inc mov mov mov mov or pop repnz push and inc daa push cmp call out (bad) cmp mov push shr test aam mov ret (bad) or xchg out push stos (bad) mov mov jmp (bad) out inc mov daa cmp xchg xchg add ljmp pop mov repnz push ss inc je (bad) out cwtl hlt push lods cs into pop out xchg and ljmp sbb in call out jns fcmovnbe pop vmulpd fsubr cltd fsts cmp ror cmpsl hlt push mov out mov sub (bad) xchg mov mov (bad) stos clc cli jge sahf dec out mov adc lods pop push xor push add sub into lods out add inc xchg xchg out lret jbe mov fucomip cmp mov push out test xchg inc mov pop lods xor lret mov aas iret mov push out xlat mov sub or outsb mov adc and mov sbb imul sarl xor jb sub out push dec jns in mov inc fist jle lock mov jl dec es mov xor pop inc mov mov shr mov xchg loope gs lock push out xchg test mov (bad) cmp arpl jp jae jno es out xchg aaa jg jns fsubrs dec pop in pop imul jmp pop movsb push shr mov inc shr div aaa inc jne mov or xor lods outsl ss pusha imul add out mov cmpsl mov inc outsl jg (bad) mov jnp (bad) stc lret gs in cs and sub jmp inc cmp add das in (bad) out cld cmp sub mov ljmp out inc lcall into clc mov shll adc dec pop inc js fs xchg jne enter or cmpsb xchg into fild ret out mov cmp mov push mov pop hlt lahf pop jbe mov out xor jne dec (bad) and loopne shrl mov mov cld mov xchg xchg repz rcrl (bad) outsl mov pop sbb out fs ss push das sub or push add insb out push mov cltd push out (bad) jbe mov mov mov out push lahf int popf out xor and cmpsb and jp int mov push not popa mov out inc icebp sarb mov out xchg clc pop jecxz inc (bad) lret pop pop (bad) rorl add (bad) pmulhw mov and fisttpl inc out in insb jb inc mov or push xor lret push pop aas push sbb loopne in sbb pop int out cmpsb lret ret and repnz sub out cmp sahf cwtl fsubrl out add dec movsb lcall or cmp out out (bad) jae or out cmp shlb jo (bad) pop xlat lds pop in (bad) sub fcmovu add jnp mov sti (bad) imul and out adc or pop pop cmpsb mov sahf mov stos cmp fwait lock mov jo in mov call popf mov jg in pop jle out clc adc movsl out pop pusha pop nop lcall rcl and pop sbb jbe je fisttpll sub xchg outsl gs popw mov lea jmp insl or loope icebp aaa add xor cmp ljmp pusha jmp sub pop es loop out paddq jns aaa jle pusha dec stos mov icebp mov push push (bad) inc jns sub cltd shlb sbb sub push shr sbb mov and mov aaa out dec imulb out jnp mov push out or in mov decb inc inc sub out ss lock add fwait jmp out or fcmovu cs out ds cli imul (bad) orl scas inc pop out add out iret jecxz leave lea stos cmpsb sbb cmp pop jg adcl in (bad) mov pop add out in int3 adc add out push outsl or pop out and dec out les xchg lcall adc imul xor jge mov in jp push pop sub daa popa das ljmp in xchg popl adc out movsb data16 add (bad) popf outsl (bad) das clc jecxz pushf jno cmp lahf push out pop mov lcall mov imul xchg mov out loop aad push stos ret and mov dec lds lcall out adc inc pusha jbe sub xorl dec insl fadds out insl nop es (bad) lods push int pop hlt adc pop pushl test push jl jecxz mov cmp (bad) fistpll test mov in jecxz ficompl ljmp out leave xorb fisubr inc xlat jge lock dec (bad) sub outsl and xor mov faddl inc ss rcrl fwait mov push iret mov test add movsb fsubrl sbbl xchg test pushf out mov in insb out mov add pop push and sub cmpsl sbb adc jns jg std imul cmpb or xchg out stos cmc cltd xor xchg sub rcr add (bad) mov test loope sub add sbb sbb out aad imul dec add mov hlt ss adc dec sub shl dec out push sarl push loope (bad) mov cmpsl jne pop js cmp or rcll lea gs scas inc out (bad) in xchg rclb mov dec jg,pt xor push out and inc mov xchg loopne out call pop mov lods mov xlat and in sbb xchg jecxz (bad) and inc and in jmp mov shrl dec cmp push add cmp ficomp lock inc loop out inc fdivl add jg test aam jb lea notb scas push stos nop lods cmp out dec in das jge ljmp ds inc pop mov shr dec and out shrl inc scas out out mov movsl out mov mov mov enter (bad) pop xor orl push loop dec cmp sub mov lds fdivr das pop dec xchg and into in adc ss lcall insl out mov pop sub out and inc outsl iret cltd mov dec (bad) mov jp mov je mov mov shlb ror adc inc cmp mov cs sub push movsl xchg mov out add jns add out ret or mov mov and mov aas loop inc out movsb xchg clc in jecxz push out xchg repnz push cmpsb lahf jg test out aaa pop xor scas (bad) mov inc aad sub cmp (bad) push cli js out dec out jno pop shrb (bad) jmp aas jo out and enter mov fsubr mov arpl pop pop jnp out xchg ret cmc out pop mov in pop xchg jno jg or pop (bad) sahf push mov stos sbb icebp lret ljmp jl xor mov adc mov test lds inc sub jb inc mov nop fs and mov adc clc mov (bad) sbb xchg test test rcrl fucomp cwtl sbb cs push rclb out mov iret cmp push out into out sarb (bad) arpl push incb out sbb cmp rorb push cs mov sbb addr16 xchg fsubr pop fs mov decb stos push sbb xor push push sti push out arpl call pop and hlt xchg pusha loope js pushf mov cmpsb cmp sbb les call sbb loopne movsl pop rcll jp cltd cmc jbe mov fistpl mov repnz sub shll dec ljmp out addr16 fdivl xchg out popa jmp jg jnp mov xchg lret xor sti mov push jb iret push jbe out pop psubusb dec enter into aam push stc out mov adc pop cmp pop lret add (bad) fnstsw ss (bad) lock les mov sbb pop cwtl (bad) rcrb and pop add (bad) out pop gs fidivr arpl out repz aam les mov sbb dec shr mov or jg mov push stos leave pop xchg test cmpsl out ljmp aas pop mov sarb pop ljmp out mov xor (bad) pop fldpi inc in push repnz aas sbb sbb ljmp stos out insb cs out test rolb test pop xchg cmp insb (bad) in sbb out mov ss bound aaa ret scas das jns xchg push push pop and imul in shrl inc xor int3 xchg in test mov gs or pop pop repnz out (bad) lcall fucomip or addr16 scas add pop cltd sbb pop and insb in aad ja mov leave out inc xchg imul test jne inc pop insb jb xor std scas cmp push in push nop out repz mov cmc jmp imul iret inc mov out out retw orl aad sbb xor out xchg add push aas out add repz pop sub jae sar in and pusha or out cmpl cli stos popf out shl out rcrb cmpsb aas enter pop out divb inc test and or pop out pop mov out lcall or mov into sbb sub mov cmpsb cmp push and push jp imul test aad adc sbb hlt cmovg scas mov jmp pop xchg ret jnp sub inc mov aas mov inc dec cmp push add ret push outsb out jne mov movsb out adc xchg push push cli out out cmp mov rorb xchg nop ss adc cltd pop aas and xlat fimul iret xchg (bad) aaa ljmp inc je out or into adc outsl sahf xchg sbb pop decb sub sbb mov dec incb mov in or pop data16 push mov mov imul enter jns pop pop pop sub (bad) adc pop xlat test and in out fsubp or push iret jg (bad) repnz cmpsl inc loope pop in add nop push cmp out loopne insb iret jle jp (bad) jb imul arpl pop xchg scas popa rcll lds sub jmp xchg out jbe or adc enter pop push aad sbb out cmp jl lahf mov xchg (bad) mov cld adc fs pop int repnz psadbw inc cmp pop push dec insb cld sbb es loop out mov (bad) mov ds sbbl test out mov (bad) dec insl lret push out inc cmp xor fdivr fimul std sbb push cmp fstps icebp addr16 and insb mov cmpsb arpl stc adc loopne sahf in (bad) jb xor sub ret out mov cmp pop sahf and add push mov in jno ljmp pop lret jmp enter fbld aaa or out push xor push imul sbbl rol sti fucomp stos lods (bad) cmp adc push mov scas pop adcb and push loop jmp in (bad) idiv mov xchg aas adc stos dec call inc fs xor sbb lahf add sbb pop insl cltd cli fstl imul jnp scas fwait pop jg dec repnz popa out cmp pop mov in test adc or decb and jo lahf (bad) out imul out dec movsb inc pop inc sbb das pop pop ljmp push (bad) dec shl mov out add sub adc adc or ret out repnz pusha xchg xor call push (bad) ljmp pavgw push cmp mov movsb or out pop loop ss pop out sub or push pop dec push jns insl iret xchg (bad) xor lcall mov iret lock jl lock cld or pop insb imul lods iret sub outsb aas cmp in or popf mov fidivl lret out fild cmpsl daa mov gs mov aam xor pusha xchg sbb lods jl jp push dec push mov fnstcw (bad) (bad) popa and (bad) out rcll sub add out or push jo pop sbb fxch (bad) ljmp sub mov ja enter inc insl jmp xchg add dec cmp or pop inc adc push shr movsl test xchg push out std jnp mov out sbb lock mov out mov mov das ret out jns adc out test push jg lea adc cmp push jae call xlat nop xchg out sahf daa jge or push jno jp out (bad) aad sbb iret add out pusha out sti inc lret aam loopne pusha in f2xm1 jg fmull inc push gs mov dec jne sar out lahf hlt mov enter pop push (bad) cmp out rorw out lods movsl mov imul (bad) flds mov mov pop es cwtl cltd sub pushf lcall sti and ret mov rcrb lahf stos js xor xor jmp rcr sti les xchg ja push push movsb imul lret popa lcall xchg aaa jns sub sbb mov out xchg ss cltd pop or push cs aad lea outsl and lahf loop push lahf xor neg sub lods rol (bad) aas mov or jae imul lahf mov mov out int and (bad) outsb push mov or enter and outsl out xor sbb xchg fbstp (bad) lock pop aaa jge fwait jmp adc mov sti push mov fcmovnbe (bad) arpl xor sub loope pusha or mov loopne js ljmp (bad) fcompl jne sti xchg jmp out jecxz sub adc pandn lahf aad out test cmp cmp jge push out repz lcall mov mov mov out movsl cmpsl subl jmp push cmpsb cmp jbe out (bad) popa fs out ss flds rorb mov pop out pushf push xchg xchg push xchg add enter add scas call out mov push out push mov pusha setnp lcall out lret insl cmpsb aam cmp ffree outsl push cmpl dec jp inc xchg (bad) and jmp pop add hlt in cmp mov xchg out lods mov icebp lea sub jge (bad) not test xchg pop stos out sbb shrb jge ret rcrb rol xor cmp fldenv xchg lahf dec lods jb sarb pop cmc dec fcmovne aam sbb insl fs push mov int (bad) push dec cmpl insl fcom pop je mov sub stos out popf cmp or cmpsb mov jns or sub push add xchg push dec test adc pusha pxor bound fsubrs in out cmp jb arpl (bad) fist cmc (bad) stc cmpsb fistpll shr mov lea add jmp out clc fild scas iret xchg pop push sub mov push ss inc mov fidiv loop popa or mov and push pop xor mov iret popa cwtl test cli out std sub add pop int scas dec fist pop push mov add mov out push or (bad) sbb jge add adc lods cwtl or inc fisubrl pushf cmp cli add or mov sbb iret lds push call xor pop mov pop nop fsubrp cltd mov mov sub mov add xchg xchg enter cmp out mov fistl out inc (bad) insb ret sub xor lea xchg jmp pop sarl mov dec jle add data16 imul xchg mov xlat out sub pop mov out cs jns out mov dec xor push cmpsl imul stos xlat test dec loopne das mov inc sub push mov std jg imul jmp in data16 (bad) out fistp sahf aaa push aad out add and loope push mov jae cli ljmp sub out jg dec repz out lret (bad) ret icebp vpcmpeqw movsb dec movsl ficompl xor push loope and lret popf or out sbb cmc cmpsl cmp push loope cmova fucom out and push jne mov idivl pop xchg mov subb and in pop mulb and xchg xor daa rcll insb les test pop iret xor xchg in mov jne loope jnp inc mov mov push insl pop mov xchg test xchg push pop sbb std aaa lcall mov adc sub mov pop pushf sub mov lret rcrl enter stos int3 lds out mov mov inc lahf test mov cmp sub cmc popf (bad) repz sbb mov loop jle in (bad) pop lret sbb push lock cs js in xrelease jb (bad) and es sti add out (bad) xchg data16 rorb inc xlat pop fsubs test fdivp add or (bad) mov jecxz dec xor mov (bad) mov (bad) (bad) in scas cmp sub ljmp rcll sbb mov jb into out mov cmp loope out test pop das adc and xchg loop ret out or ss (bad) dec out je rorl pop les mov cmpsb xchg out call lods bound add inc cmp out popa push jmp cs out loop movsl daa outsl fiadd in inc cli (bad) icebp into iret ljmp fstpt fsubr sub incl cmp out jge ljmp fsts xor jns jae xchg out jl (bad) or lret mov stc out out adc out cs (bad) out jns mov push push inc out mov test cmp je shlb adc adc xor push push in inc (bad) shrl test push push adc imul lret sbb xchg mov jmp jns into push or push lea dec xchg ja int3 add (bad) mov (bad) outsl lahf sarb and sbb cmp idivb ljmp inc mov and adc imul cvttps2pi rcr inc mov xor pop mov xor fs stos enter stos (bad) fnop repz sub ds and cvtps2pd sub aam into rolb pop xor and out orl aam fstps pop js inc cmp sbbl pop inc iret or mov xor and mov (bad) xor sahf push stc ljmp out dec clc das lea shrb (bad) jo sahf add adc icebp popa adc push nop out and mov cmp pop rcll mov cmp mov xchg scas sub (bad) (bad) imul or shrl mov outsl shrb pop ds mov lret mov dec jae jne lods daa out lret std jmp mov pop pop (bad) and mov xlat mov inc pop jge inc into loope out push xor enter out out lods adc pmaxsw in cmpl mov inc adc addr16 cs jg add mov push push out ds pop adc pop imul (bad) out cmp cmc sub jbe mov xlat mov loopne out mul cld push jb cs std mov xlat and sbb xchg or push xor and xchg out sbb mov stos inc jb aas lods push ja ljmp push adc sub or push test jne out aad shl cmp das push rcl adc in out cmp cs gs xchg xor mov out aaa sti pop fdivp imul repz and mov push cmc jl mov (bad) mov mov div inc sbb in pop in pop dec mov push addb (bad) push icebp out cmp pop or ret out dec cmp shrb push rsm fist ret fmulp or in icebp pop (bad) ljmp mov mov aas xor or adc (bad) repnz (bad) out push ljmp sbb inc push cmc jle jb (bad) aam pusha sub push push cmpsb (bad) nop dec inc sub mov lods aaa (bad) mov pmaxsw mov dec out add adc je loop pop rorb ljmp out out aas mov loopne jl push jecxz ret popa or outsb (bad) xchg aas jge nop mov (bad) xchg (bad) dec test out and lods jnp xor fs fdivrl es out (bad) xor pop fs or insb data16 xor lcall xchg mov push pop cmp jns rolb xchg shrb out dec mov mov in adc or pop push test aam ret fcmovnb push out jns xor cmpsb mov jnp aas push push pop test inc mov jmp out icebp cmp mov inc xchg out cmpsb (bad) bnd (bad) jbe dec pop out cmp jns cli out fldl push lock push sbb mov cmp aad (bad) adc sub scas pop stos outsb call push out sahf inc lcall (bad) jno cmpsl jbe mov jp add mov mov sbb shlb insl sti sub jge mov pop lret lahf push cmp cmp cld push movsl lret arpl aam cmp sub jno jmp dec jne hlt ja mov adc push rcr gs int loop mov dec jo xchg movsb dec imul push xchg les faddl imul add jge sbbb xor scas jecxz cmp jg pop loope lret pop out dec push xlat cmpsb mov add mov sarb push inc out mov lret inc cwtl out (bad) pop out jae lock sub loopne (bad) ds inc jne sub out mov adc (bad) insl int es xor mov scas in out shl xlat and and in ja ror jbe adc dec clc xchg es out scas mov xchg xlat jecxz and mov out dec pop add adc sub mov out push out sbb out out loope jecxz push (bad) dec xchg out lock out adc cmp jo cld out xchg inc sbb push arpl aas (bad) lock (bad) xor mov add scas gs call mov in inc imul add or dec cmp jmp pop gs dec clc imul inc mov insb fistpl loope cld sahf pop mov push mov ret cltd out int scas frstor cmp imul and mov lods xchg xchg in sbb cs push pop adc push test es add daa out fs loopne adc fldl2t enter int3 lods push ret mov pop mov out das xor rclb out dec pop adc (bad) lcall pop rcrb out dec imul xchg scas jle sub pop out jne add inc out repz add in call popf test sbb sub mov in xlat mov decb lahf out fadds sarl repz mov cmp adc out lahf sub daa loopne inc addr16 jae out push or (bad) jo xchg out mov adc cmp pop xor iret pop adc out xchg sti mov mov lock bound ds icebp into sahf mov push outsb cmp loop xchg scas mov jle dec mov cmp and fs (bad) jno paddd jo repnz aas and ljmp or shrb mov push inc inc dec addl cmpsl insb enter out or or ret xlat out notl jg cs xchg out (bad) xor sub (bad) fdivrl out sahf adc mov mov sbb add adc mov loopne cwtl mov inc sub icebp jg clc fldt out adc lret sub fsubrl aad sti aaa data16 cmp lret out out sbb mulb test outsl mov xchg and (bad) jne int3 dec out cwtl sub scas mov (bad) sti inc neg ret mov out lahf jns mov (bad) pop out ret sahf push scas pusha rcrl mov loope mov dec lods out (bad) xchg dec push lret repnz push jl xchg mov push xchg rcrl aas es ja cmc out inc mov out xlat mov mov sahf iret repnz xchg pop sub sub jle mov lods cmp in jo call hlt xchg out in out push sub imul dec inc mov push or (bad) mov or sub into cmp pop popa and in fisttpll ss cmp sub cmp dec pop bound cli pop loop mov xchg aas dec out pop arpl inc xchg sahf jmp out pop xor aad dec out loopne jl mov adc fnstenv daa scas in out push lods pop mov punpckhwd fsubrp loope popf out xor fwait or lea jo dec add out jp push scas cmp mov (bad) ss cmpl ljmp (bad) mov pop dec mov mov fistp mov mov add fs xchg test mov scas sub je cs jecxz out cmp mov outsl lret sub jae (bad) repnz xchg mov out int3 fstps cmp mov es out cmp pop cld and rcrl in out stos push (bad) fsubr rclb adc and mov inc out ret out push mov fsubl loope add icebp in fucomip (bad) push mov mov into je test out adc decb pusha ret inc push xchg (bad) xor pop sbb sbb fistpll lods out out jle shr mov (bad) icebp int3 out mov and jmp lea lret adc out call loope out xchg cmp and stc pop xor lahf (bad) loop sub out mov cmc fadd push xchg fdivrp and adc test jl sub repnz icebp ficoml xor mov pop movsl mov jp or adc add lahf fcomps lods out push stc and xor mov mov out scas sub adc jecxz or jl in aam dec fldenv aas iret mov xchg lock loope loop incb insb xchg scas push mov test es mov fsubr add jmp in jne (bad) mov mov push loop out data16 mov xor inc jmp inc ret cmp out clc push xchg pushf inc gs (bad) lret cmp outsl test leave sbb sbbl (bad) jecxz mov in rolb es fwait aam mov out cmpsb mull das push mov out movsl mov ljmp ret ficoml hlt ljmp ds xchg imulb mov test iret scas in ljmp and enter xor fucomip pop (bad) out lods mov in mov add insb out xchg inc mov push add repz out push add push out or jp or sahf fiaddl je shr out jecxz aad stos mov out jbe mov (bad) mov xchg pop imul (bad) push cltd out sahf add outsl (bad) mov mov into lods jmp insl in mov std sbb out in pop xor arpl lock daa out roll jmp out xor insl out out movsl test int3 inc push xchg or jmp (bad) xor das xchg sbb inc inc leave out mov movsl loopne (bad) jb mov loope addl out ss data16 out (bad) pop test les or mov rcrb mov sti lcall iret or xor mov negl out push scas mov imul and xchg out sbb movsl enter sub sub cs mov das cwtl mov inc out fdivl outsb push dec out jp lret pop ljmp outsl (bad) iret lock mov cmc jp in fldl es sbb fwait pop lea sub shr mov sbb mov pop out out loope mov push hlt stos xor lcall pop xchg cmp aad test fild ss mov mov (bad) icebp pop out es sub jnp mov sub (bad) or xchg aaa gs adc aad cltd fsub popa and push dec out inc in roll xchg cs pop sahf dec sub fildll jns sbb iret lret add das faddl jnp or fidivr in inc data16 mov repz mov dec int3 loopne arpl outsb enter xor in inc mov movaps lret xchg add sti xor out jo scas out dec cmp add dec push xchg rcr pop mov pop xchg bound pop in pop push iret pop (bad) xor in lock fsubrs xlat imull cs jbe out fdivs outsb ljmp iret in jmp fisubr add out adc jbe sbb ja lahf push mov std inc rcrb sahf bnd mov pop and insb push (bad) fcmovnbe push mov ljmp out pusha and popf in mov out data16 test aam imul lret add (bad) mov sub out and mov (bad) nop or in in stos sub cld (bad) testb mov js sbb adc ret in dec sbb icebp xor lea sbb hlt jno push xlat ret int out jle jp nop fidivr mov push lahf mov out add loopne icebp or mov aaa push cli inc and or ljmp jnp mov push xor mov out jns xlat imul sub mov fwait out rorb fsubrp cmp bound fs or (bad) rorl rorb mov cld pop pop insb out push add adc xchg (bad) mov cmp lea jle lahf scas je push jmp in sub jns mov pop out (bad) mov xchg jge out notl gs jle jp aaa int pushf jns leave mov lods inc xlat sbb cs bound adc enter jg mov insl aam and sbb rorl xlat das or rclb jo imul pop jbe outsl out or lods push xchg inc xlat fild sub imul hlt aad into fbstp out cltd aaa clc push push sbb call lock (bad) and push mov out xchg lret je popa (bad) repz out adc movl outsb insl mov inc mov mov adc and test out pop mov sbb fisubrl shl cltd shr xor mov out sbb inc out lock adc pop int3 repnz mov shr pop xchg es sahf jmp or push pop add test dec jmp stc lahf push (bad) popa stos jle (bad) xor cmp mov sub out or sbb mov out mov sar fucomi xchg cmp clc jle out jl movsl test scas xchg popf out and mov ret (bad) fwait out lods xor cmc lret int3 adc enter inc xchg ljmp les dec jmp pushf in mov adc cwtl fistl in push jbe lahf cmpsl sahf pop int rcr call out addr16 sub out ret cmp push fildll out test call fldz stc sub daa sub xchg adc orl in sub inc or out mov out xchg xor push out cwtl push ds push arpl mov lcall add lret fldt and sub and xchg fstp sub pop dec cmp (bad) mov iret push lcall fcom pop and dec scas mov rorb out lret cld pop loop ja mov xor push mov push (bad) jno cmp xor push loopne inc jmp clc mov lea shl mov xchg sbb call std xchg int (bad) ss inc out adc out lcall mov out inc outsl out aaa ret pop scas pop faddl lods push sbb jecxz jno out sub outsb mov dec movsl mov (bad) dec stos fwait aas pop pop sbb out xor mov cltd je out push popa rcrb lods cmp jg in jecxz out jne push ret adc dec outsb inc int3 in fldcw push out ljmp out add mov imul leave imul in lock pop mov cmp mov cwtl loop jle shr sub xchg mov call jns daa enter imul (bad) pop xor aas addr16 push jmp hlt scas in mov out add jl (bad) in out push aam pop adc fwait outsl out push (bad) out (bad) jo fdivr fmull out xchg rorb and add (bad) or out mov adc sub lahf and mov mov out dec mov leave mov fs jbe aas cld popa sub fdiv roll inc jg out cmpsb in stos mov inc loope xor cld cmp cltd add push out lcall pop out (bad) sub lods sub out pusha jns daa push xor sbb inc mov inc (bad) mov push (bad) mov mov test iret push out mov ds lahf lods aas mov xchg xor pop xor adc lods push inc mov cmp push call out cmp pushf test pop addr16 mov push xlat pop jne psubsb out gs and and mov loop loope pushf fucomip out decb cli outsl dec mov out faddp out mov cmp out adc pop int3 jecxz loopne (bad) mov push ss pop lods sbb jb test std les mov pop inc popf shr pop or cs and aas cmpsb aas inc lods mov movsl loope test xchg cs mov movsb lahf xchg adc jno jne or leave inc js out daa (bad) bound jno pushf pop call fidiv popa mov jg leave arpl out sbb mov shr test std out int3 mov aam enter insb sbbb push lods mov out sbb sbb sub test stos xchg push cmp jns cmp inc loop loopne in (bad) jp leave out les dec iret add push loop fldt lcall repnz sti scas int shr sub add out popa test stos or out out cltd xor iret adc ds aad insl out pop pop cmp xchg cli cmp push mov mov nop out sbb aam lds jbe int3 push test xor ret cmp dec and out inc jl mov out xchg or push out push js stos lods fs out sub scas jae das in push or movsl outsl adc into out xor mov out pop adc les or pushf jno jge push out dec xor cmc cwtl dec icebp mov ja jl lret shrb xchg out in cmp outsb inc push insb inc sub ds or cmp outsl push jb out shl std aas mov int ljmp in mov or and mov mov loope out stc insb cwtl sbb movsb cld pop xchg mov mov mov pop ret (bad) or aad out shl sbb xchg push xchg pop out (bad) pop stos aaa daa adcl fnop lea lret cmpsb int3 push stc (bad) enter pop rorl xchg out jne jecxz dec pusha inc jmp (bad) gs mov fstl adc subl out bound push and imul xor out sub subl mov dec mov fs jg in jno loopne inc pop pop out nop das ret popf xchg out mov xorl mov addr16 mov sbb mov scas mov lods les data16 out add stc fdivs push pop int3 jb sbb inc decb mov ja outsb or and mov ljmp jb stos push cmp and or sbb mov out repnz in jmp fsub adc xchg xchg sbb lock out out cmp test lods mov push in cmp xchg fs push nop aam pop out push (bad) and inc inc jae push imul mov mov js dec out pop (bad) icebp sub sbb add jp push dec or pusha jnp out (bad) xchg adc (bad) push mov jp pop shrl enter test push push clc cmp pop aam add fisub incb and rolb mov xchg inc pop pop cmp lret cli imul out xchg hlt push mov ficom out adc dec pop mov pop aas out jne lods fisttpl rcrl adc (bad) mov out cmp adc out sbb and pop dec inc repnz (bad) fs out aaa sbb push jecxz (bad) pushf dec push in xchg out mov call shr cmc outsb sbb sti (bad) jge out or loop aam jae (bad) insl (bad) cs out inc data16 xor std push cmp testb add mov nop stos jge out cltd fcmovb ja mov (bad) movsb int3 lods mov or sarl cmpsl jg mov inc inc or push xor (bad) es fs outsb pop out out punpckhdq xchg mov pop xchg sub xchg adc push out in call insb (bad) out jmp mov out inc pop call and popf xor insl mov sub xchg ret movsl pop test push add out out sub lock divl out pop xchg scas fstl and sbb adcb cmc push adc data16 (bad) fdivs hlt decb push in insl xchg or in ficompl mov push out push pop dec mov enter aam mov add (bad) loope mov cltd jge subw mov or mov sub sub sarl adc mov add push push mov les pop xor cmp pop loop (bad) jae mov mov dec das sub ds ljmp mov xor stos out xchg (bad) fidivr in fdivs xchg bound add (bad) ja movsl mov (bad) and sahf loopne pop and scas fwait insl hlt scas out cwtl sahf mov push sub fisttp shrb push and jmp fbstp jae adc add fist lcall int sti out (bad) mov (bad) lea xchg pop and push mov lcall xchg push adcl inc shl aam sub insb push (bad) test notb ljmp out sub out aaa arpl and out es jae hlt xchg xor dec out fsubrs ss out pop adc lea vpavgb std ljmp pop dec or mov int out dec push push je in push iret xor ror pop cmp (bad) fs adc pop sub push out dec outsl inc cmp out cmp fist dec and or sbb sar mov insb loopne scas sub push xor fs out push push mov in adc and aas and dec outsb mov inc fidiv push push lods les (bad) test fcmove das sti shrl and mov sub ljmp out mov mov in pop push xchg aad jo out jl out adc (bad) jmp mov out (bad) cld jmp ret out push jnp out cmp xor pop stos out loope jle jo sbb ss cwtl insl pop (bad) (bad) mov fisttpll lahf fwait pop aam ljmp sub imul sub pop mov cltd mov hlt ds sub insb (bad) mov test mov into jae pushf adc push xor (bad) fucomip and jle xor or pop sub stc addr16 pop (bad) and arpl std sub cmp jbe adc push iret push fldz jp mov mov push popf test inc daa push dec hlt sti xchg sub (bad) (bad) mov ror fwait cmp adc inc out repz popa sbb hlt push pop (bad) push mov shr mov dec cmpsl jne mov addl add out or fstps test ret cli out cmpsb mov subl sbb test inc pop pop inc and xchg ficoml cmp fwait pop icebp mov (bad) sti cmpsb out ljmp test adc fistp or iret adc fsubrs subl (bad) push xchg testb icebp jnp or mov aaa mov dec mov loop dec or dec mov add fwait and leave or inc push xchg xchg push pop lcall out std cmc adc push clc aad stc add adc lret inc and in out jge ss mov sub out mov (bad) sahf mov je int3 or pushf call xlat mov in ljmp (bad) xchg pop cltd cmp out sbb xor sbb adc jg xor lds (bad) cli push insb ljmp loopne stos (bad) and insl dec in and daa out out sti jmp jne out pop (bad) divb out mov faddl pop adc mov push sub out out je jle (bad) daa mov add sub stc shr lcall out pop scas xlat dec (bad) cmp sbb cmp pop sub out pop adc aam std out loope jg js or pop xchg repnz pop xor inc pop and mov gs push out out jo xchg mov data16 ret inc pop add movl or push (bad) add mov and aas repz or and mov enter or out add in ret divl dec jno popa ret jo std addr16 js decl or loopne fldcw out out inc mov mov ja inc ljmp out test and fstps (bad) addr16 test aam ljmp out clc lock lea fistp mov xchg sar push movsl mov movswl cltd adc out mulb aaa and xor repnz pop out out mov pop fistpl cmp dec sub aam dec mov push mov loope out mov lret pop adc xchg inc outsl scas fistpl jbe insl xchg sbb pop cli out insb cs cld push sub bound mov outsb pop (bad) js add jo mov mov data16 popa out pop enter rol adc mov scas dec lea xchg and js jle sub iret cs pop mov xchg insl inc fucomp out pop dec pusha arpl (bad) jns push cld xor pop jo push shlb inc stos pop add lcall popa out add and movsb iret inc outsb pushf ss push int3 rolb out cmc mov push fcomip cmp xchg xchg add out pop je mov xchg out imul sub jne jmp sahf xlat xlat (bad) dec out jno (bad) movsl out subl sbb and xor adc sbb ja nop sub repnz add popf (bad) das rcr inc inc ljmp out jnp cmp cmp push lret fs jecxz push out shll in (bad) scas jmp fimull sbb loop je push ds inc or out pop aas mov aad cli pop test daa sub jge arpl out mov jns test mov out js fisubl pop push out dec cmp or repnz out out daa pop lea pusha imul aam scas insb push js out or mov mov pop inc xchg jo mov lret xchg sbb dec xchg out dec sbb in or add lahf dec arpl adc lcall repnz out mov dec jo pop sub lcall jae fs mov out mov imul out mov and out sahf xor push or movsl xchg (bad) or inc mov fsincos pop mov inc xor push out push out fnstcw cmpsl sbb add xchg pushf mov cmp mov add ljmp inc out or sub ljmp lock dec sbb adc jmp scas fmulp cwtl out add push popf in add out sub in lret xor ss push fdivrl inc iret xchg lcall jnp out sbb inc hlt decb mov movsb lock pop in imul jmp pop mov in fildll addr16 cmp jno in and ret mov movsb xor dec out pop sbb lahf jmp adc mov lret imul mov inc int cmp mov out outsl das jmp dec lds (bad) mov mov in loope adc inc cmpsb mov mov xchg ds cmpsl adc fdivl mov cmp sub mov cwtl setl imul imul pop daa pop pusha lahf jmp xchg out pop cli imul sub shr push out mov dec inc (bad) pop shl int stc pusha mov adc loopne dec (bad) and in jg xor sub out aas insb arpl or jmp mov push mov into xchg cltd push test inc repz nop sti mov out pusha out xchg push fcmovne add cmp js cmp add out ret mov lods xchg fisttp in ljmp jo mov push adc xor inc shll iret pop out lods pop mov inc adc xchg aad mov lea gs fcomps and outsl (bad) adc (bad) push sbb daa roll stos mov mov mov pop cld cmp (bad) jne sti xchg pop sbb add fsubs cmp test sub lods jbe out das or inc jecxz cltd std out or call and insb push scas aad out into (bad) popf (bad) cli call ds test sar stc int loopne lcall clc mov xchg out popf test adc mov andl out out mov out pop inc std jl sub add (bad) out xchg (bad) aas je pop test and and cmp mov out mov lret xchg xchg xor ret or pop (bad) js fs dec sbb aaa or xor (bad) clc xchg inc pop loopne xlat out adc out (bad) mov stos xor hlt mov cli enter dec out (bad) mov rcr popl mov fistpl ljmp out jne push in daa push arpl inc add dec rclb push pop jmp enter jnp les aaa push sbb out xchg push push stos (bad) dec out jae add adc cmp inc adc out popf add cmp aam xor lods mov or cld jmp cmpsl cwtl stos inc je imul xchg pop mov test decb add imul lahf push jecxz adc cmpsb ljmp mov push push fdivrl out aam and adc gs aaa dec out (bad) popa call jecxz dec mov xchg adc jg int aas mov out or sub xor sbb or ja fistp movsl out adcl out outsl (bad) enter dec int3 out push and scas loope out fcmovne and push inc stos xchg (bad) fisubl popa jmp dec out jno push mov out (bad) int3 outsb pop cli pop push arpl loope adc in out xchg les add or xchg sbb out mov sub out xor mov aam cmp fdivrl and out sbb outsl mov out push test stos fcmovb js out inc mov push dec loopne sub sbb test cmp aaa scas mov out pushf and mov push inc mov inc daa add mov cmp cltd outsb jbe mov pop jb adc (bad) inc cld cmpl cmp out ret sub cmp (bad) bound out fsubl ja ret out xchg mov mov mov out aad pushf ds enter andl push jmp pop int3 fmull outsb lock fiaddl idivl mov loope ret dec mov je or out dec lock jg xor cmc mov sub arpl xchg mov pop push add add les sahf push addl xchg adc mov lods pcmpeqd in rcr or and pushf popa nop mov inc call lods inc xor arpl push or mov ret out das pop bnd test pushf pop jmp cli pop mov fimull ja mov mov and and xor inc sbb lds mov lret push mov adc ret lret jbe jecxz clc fisttpll js out outsl ret cmpsl out aad dec add jge pop fbld mov mov (bad) out insb std daa inc inc and and adc cs nop or daa mov adc fadd lods fsubr lock xor xorb dec cmc out fimull sbb into adc xor loope pushf sub shlb adc xchg or push inc out (bad) and out adc fnstenv dec or (bad) mov jb jnp ret add je out ret outsl lds or fwait ds mov dec call movsb sub imul out into (bad) lret in jno add out pop sub adc out stos xlat or repz mov test jp dec or int3 fwait mul xchg sahf sbb out out insl and adc lcall (bad) out insb jmp xor dec outsl pop bound cmp push sahf out test mov adc out lock push imul ffreep stc pop mov clc inc adc push inc fistp sub adc or out cmpsb jae mov rcrb (bad) out jp mov add sbb mov shll pop cltd push pop out inc mov in push cld out sub ficoml (bad) mov (bad) xor or jp jl popa cmp pop outsl fimul push mov xor cltd ret mov cmp je sub iret jecxz push adc dec aaa push test pop std popw (bad) out call mov je mov out adc dec outsb out insl shl pcmpgtw sar pop jo or out lock fstl mov inc inc ret es sti out jle lea mov (bad) int mov jae dec jmp dec outsb xchg dec clc push int3 (bad) mov icebp out or inc dec leave adc push pop rclb out pop lret xor out ficompl push mov js (bad) in jno out xor sbb out addr16 fbstp andl ror loopne pop mov out (bad) dec repz negb mov push aad scas ret or loope pushf jg lahf pop jmp mov in jbe out mov jae sbb adc nop mov mov mov dec mov js add stos add in out jg jns cltd or test out lret cmp pop xchg push xor iret ret (bad) in push cmp loope out mov dec sbb lea push and mov sub adc out aad pusha in fildl es jle inc jmp rcrb push jg push shll mov pop lret fidivrl sarb and jnp fldt stos xchg fistp repnz in std mov test xchg lahf pop ud1 and sub ret aam mov inc mov sub sbb mov in out sbb in jecxz out (bad) test dec dec mov fcmovu repnz mov js mov mov insl test sub lahf (bad) lcall fwait jp and sbb insl call out out (bad) inc and iret out jb cmp mov adc cmpsl in pop jecxz leave mov (bad) call jmp fldz cli mov push out call pop adc outsl scas xchg aad mov addr16 xchg test insb loopne cmp add bnd iret mov jnp test out aad (bad) jg push and ret mov arpl es cmp das or mov xor out inc adc jp imul mov pushf js jb jne out inc xchg rorb out mov jo add gs ja dec pop mov fbstp jnp fiaddl ret in subl inc add test inc mov push xchg in out add jle fiaddl nop outsb cmp js mov sub sbb mov xor push lahf jnp movsb in xchg fsubrs nopl cli sbb call stc out xchg hlt in cli adc les iret inc (bad) rcll sub scas push in scas pop cmp sti and add pop iret jge repz xchg jbe mov iret sbb push xchg pop mov push push jmp into jb lea jne inc mov mov lods mov daa pop stos out aam push js movsb out dec cmc fsubs (bad) jmp mov out cmp adc jne pop repnz sbb sbb xchg fs jne mov xor add mov pop mov jp out jne int3 sbb cmp out sbb push adc out mov outsb xchg (bad) out lods xchg addb mov imul pop cs xchg in rorl fcmovu out ret roll lret xchg mov mov ret (bad) daa sbb int jno call sub xor data16 (bad) xor pushf (bad) and push cs stos out xchg std dec scas pop and add clc mov sub add push test mov pop (bad) shrl mov mov xchg in mov gs sub sar push int aaa push rcll out xchg stc and sub and mov cwtl ss jge gs dec xchg in out ja adc xchg test cmp fsubr ljmp fwait iret push mull dec cs or push mov or pop lahf inc mov cmpsb out push adc or mov mov out mov iret mov ja loop in push ret mov fsubs (bad) pop add mov and test pop in cmpsb and ss jns insb cmp cmp push dec enter scas cmpsl sub cmp (bad) cmc pop xor outsb ds xor cld pop dec loop pop lea xchg xchg bound out add out lret dec int cmpsb mov pop out sub xor push aas xor in ljmp xchg mov out cli jmp jp pop pop iret imul fisttp cli push cmp fmul mov inc inc ret jmp cmc pop and scas es in out mov add lahf jns rcrb roll ret call out outsl in inc imul sbb xchg sub adc mov or jo xchg adc popa leave out jmp push mov (bad) out cmpsb pop or flds in inc mov jae inc sub lods lods adc cld out mov and pop sbb stos sub jp icebp jno xlat push insl and mov push out outsb sbb jns (bad) loop das ret lret inc mov fstpt out test outsl pop repz out outsb inc push pusha ds out or mov stc insl je int mov (bad) out scas lods loope push loop ret mov test jae push aam jmp test sbb xchg test dec jae leave pushf inc mov in sahf loop in sbb into mov insb pop rorb out mov mov lock popf sub adc cltd fidiv stos (bad) cmp pop (bad) fs jp call lods out fwait pop sbb aas sbb rolb out stos mov addl sbb add xlat out aad inc sahf mov movsb adc pop mov and sub leave fcmovb rcrl mov cmp xchg ljmp test jo dec jmp jmp mov enter (bad) sbb out fsts cmp std and or lock add mov sbb xor loop stc js hlt mov pop add inc (bad) lahf (bad) push pushf rcrl (bad) push sub outsb pop clc lods fist out out inc dec out inc nop pop jl push popa outsb cli mov mov in push dec mov pop out sbb js or in fnstsw out xor push cwtl mov and ja fwait sub xchg fsubrs sbb imul out enter mov or cltd xor mov and and sub int3 xchg popa jns ret push shr popf pop sbb push dec out jnp or sbb xchg pop lods fs mov sub push out mov stos pusha insl inc or mov dec fsub pop add call out mov lds out lret ds xlat aas push (bad) stc sub hlt push leave fsubrp pop jno gs adcl repz jae inc (bad) add fstp inc xchg out out popf into push mov mov out mov aad jecxz and or scas cwtl out pop rcrl out mov outsb in jmp jb pusha mov pop sbb das dec fucom (bad) ja daa pop out pop push adc adc jns and loope into icebp out pxor jecxz adcl out fucompp mov dec dec xchg sub shlb inc out out adc dec outsb into xchg out mov loop lahf jbe mov imul xchg xor pusha sub push and adc (bad) rolb adc push (bad) (bad) popf mov fdiv ljmp out pop inc (bad) stc cmp sub nop jae call sub inc adc fisubrl mov and les xor sub mov movsb pop imul pushf pop xchg ja xor push in clc imul jle scas iret mov cmp xor add mov mov adc out fildl call out dec sub jp loope ss mov pushf sub arpl push (bad) or lods pop cmp lahf testb repnz out iret inc jg fisttpll dec jno xchg adc sbb cmpsl ljmp pop xorl (bad) mov call out dec fsubl fnstenv negl mov loope in and and out cmp add ljmp jmp xchg insl push out (bad) fistl stos out mov leave inc loopne ret out mov (bad) xchg pop out aad sbb fildl jo loop pop adc aas out ja pop pop fbstp mov xor mov aad cmp lds mov and shrb push loop ja lret stc pushf pop setno gs es mov out ljmp inc xchg test test sbb pop push lods dec adc popa ss daa insl std jbe mov dec ficompl out ja lods push sub lea xchg es mov out idivl js,pn ret mov out add mov sub jle dec aad jecxz dec ret out leave mov test ficom out iret (bad) fsts out mov or mov out pop std push shll dec loope or mov scas mov dec std fmull out jbe mov mov mov das pop int3 jno cmc jb out dec push add out cmp movsl mov out pop hlt pop stos dec bound mov jbe div xchg cmp out jecxz das mov (bad) mov sbb sbb jmp push add out sbb sbb mov cmpsl pop pop cld mov inc xchg xchg out shrl xchg fwait and fsubs out xor pop fisub out lcall dec out add push pushl inc mov pop mov xchg inc xchg pop in ljmp arpl mov jle rcrb xor sub sahf test adc cli outsl pop lods jno in aad out int push sub aaa jmp stos pusha inc in call out xor push pushf mov dec jle (bad) adc mov out imul push out cmp sbb jg pop inc sub imul jp pop sbb pop out sar stos sub inc mov out in inc in fcompl dec outsb shrb and in add test rclb cmp out lods ljmp out cld dec loop xor xor inc out and scas lods lds push (bad) (bad) pop std call loope and repz ljmp clc jl sbb lret shlb out scas nop sar daa ret shr repnz rcrl loopne fwait inc xchg out and cmp out (bad) int vcmpps out push pop mov in pop mov int jae sub (bad) repnz dec iret shl jns loop es out (bad) out mov jge gs jne jmp lods int out mov mov out movsl cmp pop lock or jge,pn push push add shr mov out lods (bad) cmc mov jecxz test mov rclb out (bad) cld cli fisttp sti sbb xchg xchg rclb (bad) jmp daa adc adc scas mov aaa loopne pusha scas push jne push ds arpl out mov jecxz out js fs add out cmc repnz xchg bound mov push stc mov cs push loop mov out mov inc fisubl push push jae lret inc aaa gs add stc lret sub cld popf out xchg (bad) cmp aas dec rolb gs out aam fucomip jnp jno push dec sub dec bound in mov inc cmpsb mov (bad) out or inc mov cmp insb adc sbb out push inc xor dec adc enter clc movsb jo xorl add mov out cmp jl mov sub roll lea mov imul lret add pop out adc ss cld mov xchg push repnz sbb jg pushf fdivl incl pop or lret inc dec mov inc pop push loop out out xlat stos jecxz sbb loopne out push add mov jmp mov outsl stos cli cld adc (bad) lock xlat push adc loope rcl insl (bad) mov lahf xorl ds dec test out rorl mov out scas dec add fistpl in aas or mov mov dec adc mov (bad) gs xchg jle leave mov add aad add dec out mov dec pop adc cmp sub cmp pop mov out leave dec xchg in xchg std pop jb xchg pop jle hlt (bad) out rcrl mov in ljmp rolb in rcrb out mov mov dec mov insl movb mov push aam mov out pop mov outsl (bad) mov cmp cmp dec lahf insb cmc mov arpl in push popa out mov cmp mov or out aad call add xchg mov dec fcmovu (bad) jp cmp dec sub ds out mov and fidivl push pop out ficom cltd out mov movsb sbb ret leave jae cmp and into push out rcll mov and mov lods insb and xlat out scas inc mov and fnstsw outsl (bad) out mov push sbbl xlat jecxz xchg out inc scas cmp jo xor aaa ret rcrb lret cmpsl xchg loop inc pop outsb arpl roll and and xor cli lahf add loop mov or (bad) dec dec inc popf out jmp ror idivb lock (bad) xlat out push or push cmc mov out out inc ficoml popf push push xor aas xchg sbbb cmp out or lea pop ret repz lea pop popa sbb (bad) inc pop in and (bad) out ss cmp out cwtd out outsl inc and arpl push aad push (bad) gs mov ret xor adc cmc aad inc lods iret frstor in loope (bad) out xor loope push imul cmpsl cmc out mov arpl rorl or out rol xchg pop adc gs fwait rcrb mov (bad) (bad) fsub add inc dec pop sub pop pop jecxz push int3 out bound in (bad) sub cmpsb repz mov cmpsl xchg fisttp xchg mov sub xlat ret es lea add jbe mov in out adc sahf inc test out (bad) adc xor xorl push xor mov outsb movsb hlt jns mov aaa and (bad) pop jmp test sub fildll iret in lret outsl push gs out lods adc fucomip push lods loopne out xor into ret ret (bad) jns lahf out xchg push out sti in movsb or fs dec shlb dec dec add lock js shr push imul out incb sbb fs mov adc mov jae jmp out ret movsl int insb dec pextrw xor loop rol (bad) decl (bad) enter out ja push fisttpll mov es (bad) and (bad) xchg mov sub xor shrl cltd cwtl es dec push lcall inc dec fs outsl repz mov iret mov cmpsb pop cmp pop adc dec push jmp out cmp rclb out ret insb adc bound data16 adc mov scas stos addr16 cmp mov sti (bad) aad out fnsave icebp push push jnp or shr xchg call out inc jno popf xor ljmp xor ja dec loop xor mov (bad) pop fnstsw outsl ljmp out pop test mov inc jb push xor out cmp popf pop or popa cwtl push mov add pop (bad) out jmp inc int in push ds repz (bad) sub push jno rolb out cmp push jecxz out xor movsb popf cmpsb lods dec out push rorb insb in xchg out pop out inc jbe (bad) xor jne ja mov xor inc and inc mov daa and orb rcrb or fisub mov or lock (bad) jo xchg adc push and jge mov mov cwtl es out jg mov mov (bad) loop push or dec out fmulp cld mov es adc imul xor xor xchg sbb ja mov pop out dec jecxz and adc out xchg les insl jae adc mov pop add mov pop out dec movsb pop repnz pushf test aam xchg aaa lds setge ja add pop lods jno sarl outsl out mulb push lock jge,pn cwtl dec je test out pop test ljmp (bad) mov (bad) clc das jl in jo aas (bad) and xlat adc mov movsb push lea std push mov xchg int3 aaa bound inc clc insl imul cli nop jp leave cmpsl out notb pop xchg dec popa inc sub add and push mov call mov adc cmpsb test sbb iret and sbb ret xchg lods test (bad) jg imul out mov stos out mov xchg mov ss xor sub sahf fbld rcrb stc jb push push fidiv daa lahf push out xorps jmp out imul cmc repz and cs jl out fs cmp pop or inc pop push jb fs cmp insb pop in jl dec out bound and push out and sbb mov test shr sahf mov out and ja jns xor out cmp mov and loopne das ds adc ror mov clc jo cmp rclb mov xchg mov (bad) iret in ret out (bad) (bad) insl pop lret ljmp pop and inc cmp jecxz xchg cmp mov lods push pop (bad) and mov jmp pop cmp cltd push js rcll arpl out mov daa push sbb fs notb std pop (bad) cmc cs adc or cltd in add out add cld jae dec mov jb fs mov and pop outsb fstps xchg pop inc loop push inc leave add or stc inc loopne in out jp mov mov (bad) fistpll (bad) je movsl out ljmp push out das dec mov jne xchg in insb out lret pop inc xchg inc out xchg into mov enter inc shrl outsl and out fs mov mov in pushf dec push dec out adc (bad) test (bad) mov sarl lea out mov sbbl or xchg pop in dec adc div out scas xlat cltd add pop dec xchg pop and (bad) in jnp or out imul mov out imul aas out sbb sbb pop loopne sbb dec inc out jo movsb ss mulb imul add rcrl fldenv and sub das or call (bad) js ljmp adc mov insb sub into adc (bad) xor jbe pop je inc bound in notb and mov add fwait test stos pushw pop arpl add dec mov jge out xchg scas sbb aad mov test (bad) test and iret in out xchg out pop dec gs jp js fstpl inc shll push pop repz xlat nop fisttpll sbb icebp jo out out jecxz in pop out jbe push popa xchg adc (bad) out shr inc (bad) cmp out in jne out mov fsubr and push dec mov pop jbe cmpsb fidiv out sub mov imul bswap icebp out mov shl fs jb sbb jg adc cltd add test push jne fldcw inc fcmovnu fsubr fildll in cmc aam (bad) stc loop call test int3 (bad) sub pop out lret int xchg in rorb out fistl jno sub out sbb out fldz push dec jne ret mov dec out ljmp out lcall cmc cmpsb push fiadd sbb iret ljmp sahf add out fadds xchg sub jns lcall add gs pop mov insl dec pushf out mov mov and out leave sub push and out sahf xor lcall mov jbe out and fnstenv clc pop jl test sub cltd pop add lcall adc mov xchg dec out push cwtl sbb test repnz lods ljmp inc divb or movl lds sar out xor repz imulb aaa out dec push cmp xchg sbbl pop (bad) jg (bad) outsb shr fimul dec pop jge repnz test push imul lock rorb mov mov xchg out loopne out enter sbb int fnstenv out xor clc and out push call es out cs fisttpll push xchg out adc dec imul mov sbb cmc cmp cli js repnz ds in and out xor xor out insb fsin or pop repnz pop jae lret sahf cld xor cmp mov outsl jno out dec and sub pop hlt fwait cli cmp out mov cmp pusha add insb cmp pop rol in mov out mov gs pusha inc out stos dec call pop jb aam fwait xor dec mov mov jmp dec or jle aad stos pop inc stc imul out jnp dec and push dec xor imul out sub (bad) loopne mov add inc fsubr in ljmp loop movsl loopne jbe out lahf cld gs stc fwait add out xlat (bad) sarl scas jmp ljmp cli sbb mov cmpsl cmp out inc outsb data16 imul lds jmp push sbb mov pop out (bad) (bad) adc hlt std call aam fucomi mov cmp das mov inc mov stc mov xor out jns iret loope sub mov std into dec pop push pop adc add popa jmp loope iret sbb adc in mov loopne out adc mov aad jmp add cmpsl addr16 add loope push (bad) or in dec (bad) je xchg cmc push xor push xlat out das and sbb (bad) loope pop rclb inc loope hlt pop subw addr16 sbb ljmp shl rsqrtps mov dec test mov scas push aad mul vmaxpd iret sbb and inc jno adc and (bad) out arpl or jno int3 push out invd jle adc xchg sub xlat in fsubp push stos es testb cmp dec in test xchg push ret addr16 pop in pop lock orl sub and xchg iret enter sbb push xor lret xchg sbb clc pushf (bad) aaa cmpsb fcmovnbe addr16 stos jmp and (bad) pop imul jmp jnp das mov cmpl out add loop cltd popa addr16 out in lods push test dec jne (bad) cli pop js mov sbb aaa inc mov add cmp push bound stos fmulp add cld (bad) and mov lods inc adc insl fcompl xchg mov adc dec arpl or pop push adc inc pop inc mov fsubrl cmp lret in jo fadds ljmp out xchg sbb (bad) and add loope imul pop push enter out rorb sbb js pop pop outsb xor push test xchg lock out cwtl pop lods (bad) mov es dec (bad) pop sub outsb out xlat leave ljmp dec sbb out dec pusha cmp das out xchg sbb mov aas pop cs dec adc out insl inc adc scas cmp out sub in mov xor mov fscale cmovno and in sbb mov cmp out dec mov pop out fnstenv pop mov pop sbb lea std das or into adc jmp mov dec mov scas out cmp or ljmp repz jmp out (bad) xlat pop icebp cmc push dec lret mov mov loope lcall mov out pop into cmp mov push enter lahf xchg sub mov jmp sub dec mov cmp aas call (bad) cmp out push add pop mov test jne mov xchg out dec cld out fdivs out push subl incb dec xchg call mov inc add mov push pop push adc adc test ljmp sub (bad) fcmovnbe ficomp out lods (bad) les pop popa (bad) mov out push mov movsl adc (bad) push rorl mov out sub push pop lods or xchg jmp shrb and into add out cmpl mov insl or test xchg cmp jb xchg (bad) mov and out (bad) lock xor mov or fucomp mov out out lods in test int out mov test out fcoml dec outsb xchg js out inc lret sti das lods sahf jne out int3 cmp out mov sbb int3 jb cmpsl test jle insl lods out sub mov outsl xor mov scas jecxz mov out pop out ljmp shr testl mov sar mov adc sbb dec test scas (bad) std out xchg loop bnd push mov movd xor push push xorl scas and sbb cs sar stos mov pop inc adc jmp outsb je jbe out push mov push iret int comiss into mov jo cvtpi2ps pop rclb inc dec sbb mov lret push repz out fistpll push sbb xor or lahf (bad) mov sbb stos mov in fwait out and mov jle fdivr out scas sub jl push bound adc out rcll adc out in jmp sub into (bad) out out dec popa loope sbb lods fisttp out nop jecxz sbb mov out icebp outsb (bad) sub out cmc rolb into mov (bad) mov call (bad) xchg cwtl jg cmp and cs xor out inc loop out mov push push stos inc popa pop das adc xchg jl mov dec out out icebp sub inc mov dec lret dec call jle fidiv push mov cmp les pop sbb push mov fcoms mov out dec popa cmpsl shrb imul pop sti push in push mov insb jnp xorl mov out cmp (bad) xor aam out push jns leave out call fsubl or mov inc push xchg (bad) rcll in loopne loop xor or mov repnz out bound outsb pop cmp arpl scas mov out jae comiss (bad) pop mov insb insb mov stos pop jecxz add out add fisubl pop shr adc out fnstenv stos out jge pop arpl cs (bad) out gs inc fsubr sbb lods xchg out jne add scas mov mov mov dec aas mov ljmp call jb sti subb out cmp inc and jb,pn inc jp or decb jmp lods lahf jle addr16 cmpsb pop xor cltd out pop insl add or xchg cmp pop mov cld cmp in imul push call in int3 negb cmc sub mov in mov lods fcmovnbe fbld mov in int leave xchg out mov fs cmp adc testl ja mov mov (bad) enter jb lods loope sub lret cmp sbb sub or xor imul xchg push out scas repz mov les fildll in sub out call xor dec out pavgw clc das jno push out sti sbb cli pop mov movsl scas jmp loope arpl add add inc sbb mov inc jno pop mov mov mov ljmp dec inc push pop js scas jg jmp sub inc jge fstps or ja mov mov jl lahf loopne sub pand dec jmp fucom xor out xchg jl xchg imul out cmc arpl notb ret test mov pop cs les mov dec insl ds shrb adc mov lea mov push add test cltd adc out popa mov push push mov outsb sahf mov jecxz out pop rol fsub lock lods jae loope call jne stc adc imul cmp cmc mov bound jne dec mov loop jl dec (bad) out mov xchg jmp xchg cs test in dec gs push int3 out in and (bad) xchg push das adc loopne out enter jno (bad) fsubr xchg pop dec in mov push mov daa or mov leave insb jnp and xchg mov dec sti incb sub sbb scas fisttpl mov dec push jecxz adc in lods out ret xchg stc es cmc inc sbb pop jbe rclb and cltd (bad) dec dec int3 fimul out dec loope js sub out jmp cmpsb lods cmp aam insl dec in es js or out jmp (bad) popf andb aad or loopne frstor je out mov cld shlb out mov dec rorl out pop addr16 shufps in mov out out ret test push or arpl pop mov fwait call dec or out ss (bad) fcmovne sub (bad) outsb inc loop xchg sbb and mov mov push jns in jp dec (bad) out outsl (bad) iret cmpsb inc lock out jb les cmpsl arpl pop sahf call int (bad) outsl loope inc insb repnz in in sbb mov insl stos movsb mov inc inc jae out or xor aam out jno aaa mov xchg bnd mov push loopne popf pop xor add in (bad) out push jmp gs into xchg ret sbb adc (bad) pop aam out jp out (bad) outsb push adc and mov jle movsb out into or out adc sahf cmp adc outsl cs inc jecxz xor cli scas lods jl dec xchg xchg mov aas pop or xor ljmp loopne xor daa movsb fucomip das shlb clc out ret mov out mov xor out pop (bad) adc sarl and out and pop enter sub add aas add addr16 dec movsb mov pusha dec test in es jge in and psubusb loop roll push out pushl mov jl sub (bad) das inc or adc loop cmpsl or rcrb pop sar pop ljmp sete popf jge leave loop pop cmp out sub jecxz and pop movsl jb push fdivl add aam in lret out popf scas push sub xor cmp xchg lret out mov pop sub out dec sbb dec inc out movsl int3 adc sub and arpl jns adc add push clc push adc xchg aaa dec incb jl,pn xor mov sar lods call adc pushf push xchg out (bad) and int or comiss sub ljmp cmp mov mov mov jns out pop inc mov aaa out icebp mov (bad) out sub scas inc or insb rcrb ficomp jmp or or or xchg test leave push inc pop and dec enter jb out jl (bad) lods mov pop call lock (bad) xchg dec ds mov les pop out jb mov adc lcall gs out push lods mov fucomip mov push push lahf rcr (bad) inc out push aam jl inc out frstpm(287 fdivrs lods push or jb pop jle shl addr16 in add out jo out mov push dec out xor mov sbb test call mov cmp add lcall (bad) out (bad) in dec scas or out mov mov rclb cmp mov mov xchg xor out ja fyl2x ficomp mov aaa sarb mov xor jnp adc cmc pushf mov mov push test ret (bad) fcoml shrb in leave out addr16 pop cmc mov lret lcall cld out test dec push aas sbb mov adc rorb in adc in adc out mov fiaddl cmp lods rclb xchg test pushf add mov out fs lret mov out dec cs jno movsl add sub xor adc in push out xor pop pop imul out enter bound adc mov push mov mov in add dec rcl adc daa in push out gs sti and (bad) scas mov fcoml mov lock out es mov ss imul or or nop ret pushf sbb lock imul xor icebp inc and jle int3 pop jne sub xor out jo adc fistp imul mov sbb out pop rorb fsubrp jmp mov jmp movsb adc clc lahf ss inc fild mov sarl test repz or inc inc jne xor out mov mov push out and andb imulb pop out orl shr test out sbb in push pop (bad) loopne (bad) cs sbb adcl out push fmull jle cmpsl iret loop dec lods lock mov cli call dec (bad) out mov stc std ljmp notb dec iret lret in jg es cs out fldenv xor lret lahf cmp out fwait lods adc negl push jbe out clc sbb out loope sbb mov or pop clc aad pop jbe and movsb inc xor lds fistp jg in inc cs jne and jns mov cmp lret ret cmpsl mov add shl test movsb xchg repz imul insb iret subb xchg das ret lret adc jecxz fmull push out or cmpsb or mov lods out cmp (bad) cmp in dec dec loope out sbb or sub pop sbb out mov jb in mov mov (bad) testb or scas roll add pop sub out jno in in cmp mov out sarb xchg icebp adc ja inc adc mov out call sub out or mov out in ds sti dec mov out lds sarb out inc cwtl out fcompl push push repnz in ss mov movsb pop and rcr das out cmp pop inc (bad) icebp fcmovnb in adc insl xlat out jb cmc push xor sub (bad) repnz loope out xchg sub out ja loop aas cltd dec mov push or jge xor aad arpl andb cmp enter jns mov stos pop push aam push lods dec out imulb mov in mov push jl jae test inc jo dec out out dec mov out aad sbb mov ja int adc hlt ljmp popf xor fadd jb xchg in cltd push inc nop out and fsubrs pop arpl xor push mov dec neg inc push pop jge sub clc fdivl mov loope insl je out cltd mov and mov sub jno out or repz out cmp sub mov loopne out cwtl mov in mov jmp add addr16 lahf add fwait inc out orb mov mov sti ret stc lods or and (bad) jbe jg frstor data16 or mov outsl loop out inc push imul sbb out mov inc cmp sbb fs adc pop idivl mulb in pop out inc and pop outsl (bad) (bad) cwtl jmp adc sub cld rclb lahf jae dec push pop lret and jmp pop xchg push xlat out (bad) movsl cs insb mov arpl addr16 push pop mov mov aad addl mov xchg lret in lods out and jne or add out js cmc rcll loopne insl (bad) out and jo popa (bad) lret sti mov jp repz fdivs pop (bad) dec popf adc adc mov aas pop jle add iret repnz jl shr jmp jns mov icebp push popa out movsb lods sub jo aas cli andl insb (bad) mov and mov cwtl dec loope loop push adc mov repnz dec ret out sbb jbe loop test cmp sarb out stos sarl sti mov jecxz nop cmc mov push (bad) sub pop std rclb out jmp mov pop add cmp test out or xor sahf pop outsb lret push out rcrb sbb imul add out scas push xchg adc sbb mov jg jmp pop mov out xchg push inc popa mov aad (bad) rcrl fdivrs out or xlat xchg insl cmpsb into push inc xchg (bad) or pop gs stc mov pusha push out ret lods xlat add cmpsl in out sar fistp cli leave xchg arpl adc imul sti inc mov out cmpsb out add mov dec (bad) mov push shrb cmpsl loop fstpt mov mov push lea pop out push lock sub cmp arpl mov dec aam push int3 sub (bad) fbld call jo out in mov pushf inc ds push out fistp push mov fimull xchg pop leave mov (bad) rcrb out and out out cltd test xchg xchg into inc hlt out test jmp sub in arpl ljmp outsl sti jmp add inc shrb push mov bound lcall addr16 jne adc lock jmp mov pop into cmp lds fs out add out jne in fist shl out fidiv xlat fwait add mov and stos int3 popl shr cmp xor lcall or out sbb pop pop dec out pop mov push sbb aad dec pop out insl lea jge scas shr mov xchg or js jmp push out orb movsl out mov dec ds test (bad) out xor cld in out dec rcr pop cmp pop mov ret jo cld adc jbe lahf push aas je pop xor mov xchg out and xor push imul out aas and dec mov (bad) fidivrl (bad) fist cltd insl fdivrl xchg (bad) je cmp xlat xchg jno fwait clc jbe and sbb inc out iret mov mov out cmp dec jmp cltd xor fildll or sub repz sub mov sub mov jp xchg ss xchg stc nop loopw cmp stos out outsb push mov loopne or mov sbb js pop lods out push xor cltd cmp fisubl xlat jecxz mov add ljmp out mov (bad) loopne outsl (bad) push iret (bad) jg pop call imul mov (bad) sti fsubr push movsb jl loope jge (bad) xor dec inc lock loope outsb pop out push dec mov incb insl jl in leave jnp orb pop movsl lret int scas pop ljmp sub daa lods out stos lods add in push and xor (bad) in out out mov enter xchg pop out pop adc pop adc xlat pop adc out cmp call scas out mov addb push aas cs xchg xchg ljmp out dec aad and push inc fiadd imul ficomp jmp scas add mov ljmp icebp aas lret clc test push out or fnstenv dec jecxz (bad) outsb cmpsb push adc pop push movsl pop loope cmp pushf loop adc lea fdiv adc outsl hlt fsts fucom movsl fcmove inc das out lods sbb out xorb inc enter adc in cmp ror push sub shr sub repz (bad) test xchg arpl lock dec xchg inc outsb frstor mov out pop jmp lock int3 add push inc movsb and mov cmp iret in in ret add lret ljmp jle mov xchg push sub out cli xor mov in insl out fsubrp fnstsw movsb mov xor out loopne xchg cmp rclb mov adc ljmp mov prefetcht0 loopne adc loop xchg loop xchg or rol dec mov and les xchg out cs (bad) push addl dec push pushf lcall push mov in in jbe dec decl lret cmp push sub cltd popa out cmp sbb pop (bad) out add into cmp cs out fwait lea push pop sub out leave add dec mov out inc mov mov out iret outsl shr clc or stc pop movsl addr16 out push cli aam out or mov out jmp pop cmp out push cmpsb push loope dec jnp pusha and mov add out sbb push pop or xor inc push xor out clc and call loope fldt repz add dec sub in xchg or out xor popf cmp aad pop pop push dec mov lret and sbb out scas cmc jnp (bad) hlt leave mov jmp sbb out imul clc popa out add int loope out out xchg fs push js or or rcr push jge mov dec mov push dec scas out jecxz sbb and ss test pop in lds call out inc sub (bad) out aaa loopne gs mov fist pop and popf lock pop add sbb pop pusha mov (bad) jmp xor push xchg test (bad) push adc sub push out test pop out stos xor ljmp out movsb test sbbb add ljmp aas ljmp mov or imul jge cmp dec repnz mov mov adc inc (bad) xor sub or into out ja jl xchg es mov xchg and mov and (bad) lcall in in das dec lahf in out out lock jae jge lret mov pushf mov jo aad sub out mov mov out pushf ljmp (bad) out (bad) push mov inc mov (bad) lahf bound cmpsb xor jle test pushf cmpsb xchg stc cwtl adc inc lds pop jnp xlat push or cmp inc inc jge rcrl pop sahf adc jns xchg fwait outsb imul repz pop in pop jne mov cmp ss mov sar push mov inc mov mov mov xchg fcmovnu adc leave push call pop out dec push xor dec add inc shrl sbb inc pop pop jge and out jle jl outsb mov shrb leave out out mov pop sub (bad) sti stos (bad) adc es out push cmpsb ds adc je in jl int3 sub mov inc sbb out inc jecxz leave mov mov rclb xchg mov (bad) sub sbb lock in xor cltd cld sahf xchg xor add pop sub es movsb gs fwait test repz lcall cmc in sbb pop insl (bad) icebp dec jmp insb dec gs mov add mov ljmp out xchg sub xchg xchg and daa mov outsl ret out cmp gs mov and fsubr dec adc mov and cmp xlat cld out movsb mov jle (bad) jno out mov xchg mov shrb pop stos sbb mov into movsb xor sub pop testb mov clc stos push shr iret mov and adc mov leave push rcrb out mov imul xchg aam mov fistl cmpsl and mov out les lret out insl cmp mov out sbb rcrl insl out sub mov xor in out js data16 mov cmp inc and pushf pop iret (bad) fdivp jb vucomisd insl mov cmpsl out scas adc mov shrl in shrb out out xchg mov and lods test data16 mov adc sub dec loop jo out push int3 xor lock sbb adc inc out sbb xor pop in ficom mov nop call (bad) fs imul cli into out pop repnz insl int3 dec test pop or sub scas out jg dec (bad) jle sbb mov xchg out stos or popf aas jmp mov stos out add in out push sub addr16 inc push rol fistpll mov cmp out addr16 dec push rol fisubl push cwtl jmp lock out out mov and pop testb push aas lret push push out mov out dec popf cmp imul add and enter ret xor sbb fisubr cwtl ljmp iret or adc pop out dec mov xor pop pop mov pop call out ja fcoms scas bound fnop jl pushf pusha out push stc xchg mov cwtl out fisubl sbb cmp out jmp (bad) stc mov test xchg (bad) and daa out loope xor mov mov aas movsb lods into out fcmovnbe lock call push or mov adc sub push push sub fsubr call lea sub fcmove and out test mov mov pop pop adc sti shrl add out cmc push js add imul lock aad cmp sahf jae push or xlat jge ret adc sub lcall mov jmp ret out jg addl inc and lds out mov sahf inc imul inc add adc add out push pop adcl out inc popf dec and push mov sbb (bad) imul mov pop daa sbb out xchg jle insl leave and adc gs and out out jp mov and adc mov push stos push addr16 and pop fsubrs inc push pop insb xor mov out dec push pushf in adc xchg out cmc push jl aam lock (bad) fstp out icebp imul xchg out hlt pop mov cmp out sahf sub xor (bad) shrl or sub cmp xor loopne xchg loopne test in mov inc cmp cmc ret scas int3 out call xchg iret in ret mov je inc (bad) jmp or jb (bad) adc popa std loop and bound push cmp leave mov rorb insb jmp xchg lret (bad) iret outsl mov pop scas adc loop ret decb mov cmp leave pop ret pop lcall (bad) out mov loope popf sahf (bad) sbb sub mov dec mov (bad) fisubl les adc loop gs out mov mov pushl out pop fwait dec popa push in insl cmp and sbb adc adc rolb shll (bad) out sub mov loopne or ljmp out push inc inc call out jo dec adc dec or xor xchg sub sbb rcl mov xchg idivb dec pop fs push scas add hlt mov dec dec (bad) lods add pop ret fcomip pop sbb cld popf out inc push sbb decb in (bad) repz add (bad) jae ljmp push out in xor stc aas pushf je pop addr16 cmpsb or loop sub leave arpl mov mov adc mov loop and jmp sbb push jmp out dec in int3 adc imul mov hlt sub gs xor aas popl pop aam mov insl fisubl fucomi ja mov (bad) in out mov out mov jbe in push mov loop push je pop cwtl inc jae push cmc push daa fidivrl sahf jb test ret lea loope mov cmc js fs sub les mov fsubrl add xchg cltd mov imul push pop lods out adc call repz adc xchg or or xchg push imul stos mov hlt in (bad) mov mov aad sbb adc push gs shl mov adc mov xchg out fistpl (bad) int3 mov lahf xlat jo add jge out lret cmpsb dec and out xchg in pop jno sbb out sbb lret mov cmpsl push mov shr loop imul fdivr aad outsl mov cld add xchg push lods pop add mov xorl popf inc iret out pusha repz lcall push stos xor sar aad fbstp jge sub xor sub popf cmp unpckhps or push cmpsl inc jne leave xor ds lock (bad) cmc push out enter daa mov in push or pop xchg dec xlat (bad) mov cmp lret jg int adc push xchg or jle out add mov out mov xchg dec jno aad out addr16 idiv subb (bad) (bad) leave push out xchg (bad) or sarb adc je insb scas in cld xlat mov mov in mov jle out pop dec popa jmp inc pop and xor ja (bad) push push imul das test or loope mov cmp outsl testb dec sbb cs fucomip jle loope fstpt xor or fs hlt not sahf sub or (bad) pop repnz ljmp ret xchg addr16 fsubs test mov loop out mov int push out xchg bound inc aad test iret mov mov in nop sub mov jo out repnz mov fistpll bound in and add mov (bad) shl xchg (bad) jp add repnz jmp out jle fnsave enter push iret dec push jmp or mov nop add out hlt sti pop cmp les out rcl mov dec (bad) adc xchg jae push jne cmpsl out jl inc cli pop ja cmp xlat shl mov mov sub mov mov repnz or inc outsb int3 int push mov loop mov test iret out (bad) jne test (bad) loope cmpsb sub push add jmp lods out dec lret dec clc cmp pop outsl xchg (bad) mov ljmp rorb stos pop imul je pusha push js rcl mov and (bad) jp in (bad) out jne xor loop (bad) fisub or out outsb cltd movsl inc push sub inc sub insl in inc out lods mov add scas cmpsb iret adc sbb add scas mov or mov movsl decb inc xor fucomip or sub and nop (bad) out repnz mov xor test es insl jge push jmp mov and sahf jg stc in roll mov dec loope and lahf cmp cmpsb jl mov stos insl fldcw ljmp popf icebp xor lret mov inc out pop or adc out js push and mov stos repz (bad) push out xchg pusha lock or inc (bad) sub das or sbb insb push sub movsb arpl cmpsl sub popf and pop push adc mull test hlt xor inc push pop lods sbb jmp out movsb pop cs push xor cmp xchg mov neg mov out lcall sbb add jo popa sbb or xlat sbb loop es movsb rcr out fwait dec xor out cmp xor fld jne popf and mov fadds (bad) out stos push (bad) push adc out mov adc lret js rolb subl arpl out adc lcall enter out mov cmp cli (bad) sbb sub loop fs out out pop in xor (bad) out stc sbb (bad) xor imul in mov rcl lret out sub lahf test mov std sti mov and in fcoml (bad) lock repz icebp cmp ja pop cld mov push repnz pop pop jg jmp sub nop or outsl call out push outsb pop pop and inc lcall jnp fild jg xlat pop jge sub mov fsubr imul add out loopne push cli in mov dec stc movsl dec xchg repz test xchg repnz loopne push jb neg out mov fcomp fbstp pop sub and roll jns out out and mov jno sub cmpsb inc mov aas stc pop xchg cmc inc popa movsl dec sbb cmp mov ljmp dec jbe xchg stos test mov xlat xor ficompl (bad) sub in sbb sbb xor sbb and shlb fldl mov jge or pushf out xchg pop in cmp aam out dec or jg lods bound mov stos adc call out test les incb (bad) dec (bad) icebp push scas fild out loop in ret xor fstpl int3 imul nop sbb adc fsubs fidivrl mov lahf xchg movsl out leave mov cli xchg lods aam repnz sar fdiv push fbld cs push inc out inc ret xchg xchg enter mov sub clc int adc out shrl dec pusha mov adc dec jl gs push (bad) (bad) shll out add movsb sub lret dec mov push nop out pop jo and xchg out lods mov sbb outsb cmp in adc leave mov adc in or scas cli out xchg ljmp pop mov xchg cli js in sbb dec jmp iret out lods inc gs sub push pop in sub pushf pop sar jns or jmp jb or loop add jle dec (bad) frstor mov jmp jle out inc aam (bad) js push fcomps push mov adc xor add enter or adc (bad) fisubl aas inc sub and lods lahf mov inc mov xlat cmp data16 outsb xor jmp (bad) iret xchg es out adc dec sbb out xor sahf adc hlt (bad) (bad) sub inc movsb jns lock out (bad) lea mov test pop sub imul push out in flds insb out xchg mov int (bad) and dec scas das lcall movsb xchg add mov mov movsl out dec pop mov rclb stc mov insb sti in out aad lds out loopne mov (bad) and cmc sar out sub xor rorb out fstl in out inc fadd in movsb rorl dec jmp hlt gs jns add bound pop sbb out scas (bad) mov add jp xchg xchg mov mov fwait jmp loop out out imul roll into xor mov and adc cs out xor stos aaa mov icebp out enter lret xchg out loop stc lret (bad) adc stos cmp mov out xchg inc jo xlat pop rcrb cmpsl ljmp out sbbb or pusha push out or (bad) sbb mov jmp pop (bad) out movsl imul push out dec pusha dec and shll cmp pop mov pop cmp dec fmull mov arpl int3 push adc mov out mov out in js ja jne ss and fcoms cltd out sarb cmp pop jmp xchg push xchg loop out mov leave push out test rclb addr16 out (bad) cld lods pmulhw push pop out mov fstpt imul mov dec notb xor lods outsb insb fnsave out dec fsubrs inc adc mov sub push and out xchg add mov inc out cmp mov iret ljmp xchg dec in in loop push adc mov (bad) aam pop (bad) out add mov imul mov mov push pushf fmull pop mov loop hlt inc lock lahf mov icebp sub and iret or mov dec add jl mov in add out dec mov xchg or add mov movsb loop cmp ret xor and test loopne inc and mov sahf pop jmp pop in pop test adc std out lds ljmp inc cwtl pop sti out psrld in pushf add lahf jl lods (bad) push mov mov repz pushl jle addr16 dec add pop xchg pop aas cs jecxz js call test (bad) mov out mov push xchg jb inc adc loopne out dec add or mov out cmpsl cmpl push xchg mov out sar pop jmp xor xor lock imul aaa push adc or xlat sbb out hlt pushl inc xor push (bad) stos lret mov pop cmp push cmpsb mov movsb mov ljmp out adc xchg pop loop fwait out in xchg cwtl cltd shrl call ja out fist stos sub out pop push sbb loopne mov call xchg loope jns and jb lea popa mov sarb push (bad) push scas jbe ja out dec inc test rcll inc ljmp stos out outsb mov int mov iret fstpt cltd (bad) lret adc cli sub dec adc aaa cmp cmpsb call push je scas out sahf mov sub cmpsl sub mov mov hlt (bad) aad push push push push popf scas (bad) out cmp inc (bad) subl cmp call xchg jmp inc xchg dec insb xor jo xchg add in jns fstp iret (bad) aad enter (bad) fcoms (bad) je out ror add mov repnz fisttp out in incl ret sbb leave adc jmp repz or fsubl xchg lret movsb loop fbstp sbb inc fisttpl cmpsb pop rcrb ja leave jnp out mov (bad) sahf (bad) mov insl out mov (bad) xchg ret and sbb pop (bad) or ss mov imul fistpl mov ret adc out cli push add leave xchg cmc xchg mov or subl inc fimul shr data16 mov out std sbb insl or in in cltd lds scas pop inc pop clc jl (bad) lock mov lcall (bad) sbb pop mov loope jg or loop vpmulhuw xchg sbb aam xchg out inc inc repnz push mov imul scas cs jecxz les push fistpl loopne,pn loop push lcall sbb adc jae lea out iret iret or out sub je lea push loop lret outsl in mov xor push mov mov out lahf mov bound out es in and jne and loop and ja sub pusha lock pushf lods inc (bad) out and out cli out pop aam push mov (bad) or jns hlt out push adcb (bad) mov add add pop test out xchg add jns mov iret ret mov push lods in xchg mov out sarl fucomip adc pop sar cltd roll dec and lret int3 popf in sbb stos or lods jmp out sub rorl pop pop in ljmp out add push int3 and push dec pop ja lea ficomp add mov out ret (bad) sbb iret dec jnp lret jge (bad) aam out sub add jnp scas adc xchg insl dec out add cmpl leave out jl aad ljmp add out push lea mov pop test jbe bound xchg mov cmp lods aam iret aaa int scas push add dec jns jae movb out mov jle push push add push out aad or and fisub lods jbe aaa pop gs sbb sbb daa xor out cmp jmp movsb dec xlat out and xchg adc test mov or rcl loop cmp xchg addr16 adc xchg xor das out pop push (bad) sub push (bad) jmp loop das adc jnp shlb or gs sub mov lcall out nop mov ljmp mov aas fildl insl popa pop mov inc (bad) sub xchg stos sbb or pop push lds lret mov das scas jae out pusha fldl lock adc aas fcomip out pop mov incl jo mov cs in xchg sti jnp iret cmp ret cltd mov mov inc xchg sbb test out divl sbb je mov sub mov pushf rcr xor lods out bound mov out mov mulb mov test std lock jb and push int in adc sub std jecxz cmp or out sbb jg xor lret pop xlat pop inc mov or adcb int jg aad popa adc fwait in ret out xor push (bad) mov movsb mov xchg push cld sbb push xchg stc pusha aam or adc pop dec fcompl aas cli jb or repz adc imul pop pop push cmp sub shll mov cs jle outsl out insb jo sbb mov cli int pop push ret std je fsubr cmpsl js scas testb out ds xor mov test push insb into out mov fistp loopne and adc outsl fwait and jne rol (bad) mov stc repnz fnstsw push ja pop fsts pop insl xchg movsl popf or fs out pop imul out mov (bad) jae leave lock ljmp mov out out mov imul repnz and popf sub pop daa add lahf addb add data16 (bad) scas or in (bad) and cmp xor xor jmp in lcall inc jmp xor daa lret and divb out decb cmp push mov xchg or inc loope into sub pop movsb pop xchg mov xor inc in xor add mov adc push arpl or mov out cltd (bad) pop call out popa fsubr popf or ret sbb js mov hlt add loopne aaa in dec in dec mov cmp es (bad) ljmp sub outsl ret jbe or add mov push js (bad) jo stos sub in les push adc out pop mov loopw loop into cwtl loopne inc in loop or (bad) mov insb inc out (bad) jmp sub cmc pushf cmp mov imul adcb push cmp push insl negb and mov in pop push inc dec out jbe push ret out callw xchg shrb add adc ret shrl xchg ficom adc push out mov in lahf decb sahf xchg into mov out stc nop fs or pop ss xchg push sahf ret pop iret ljmp fsub mov mov scas leave out es jp jo pop xchg fcmovnbe mov xchg (bad) cmpsb cltd pusha inc xor outsb push dec bswap out sub jbe in scas dec and xor jnp std mov xchg push fsubrl jne,pn cmp test push (bad) pop out mov ret aas mov mov xchg out icebp sub add sub inc sahf test cli out test xchg out push bound jge add and jle lret xchg scas clc popf (bad) cmp out test test les lods xchg out iret rorl bound pop xchg shl fsub in mov or lret mov push adc mov xor out dec sub sbb out jl mov pop out (bad) mov mov xchg loop insb out jno mov (bad) mov pop push inc out push (bad) jmp stc dec sub loopne aaa jno xchg daa add xchg jbe out (bad) cld dec adc addr16 xchg xlat mov push je mov popa loop push adcb cmpsl xor mov pop mov into push scas ret lea insb and arpl dec dec pop sahf xor mov mov in jns aad sub enter inc bound div adc scas mov out js xor decb mov scas push jno sub push in push andl cltd scas mull imul or dec sub pushf cmp imul xor mov pop jge xchg xor dec push push sub in out iret aam sub fstpt imul out mov jb cmp mov cwtl dec xchg dec out sub adc fs xchg mov jecxz les imul mov inc mov mov xchg arpl aas mov lods push (bad) mov call ljmp cmp mov and pop addr16 loope and jno (bad) add fnop xlat cmp jnp aad jns pushf loop out ret sti and mov xor xor pop pop dec test in inc lcall jnp inc jne jo imul lods mov adc movsb mov out mov mov int fdivl jl jns out or daa sub clc dec (bad) fisubr fsubr decl xor clc mov inc movsb out xor cmc push fcomp pop dec push jo add lea adc xchg mov cmp das xchg xchg in push pop push push mov mov mov fwait std sbb pop test push dec (bad) mulb jl mov xor les scas ret out push dec push cmp out inc ja mov jmp and (bad) xlat pusha sbb mov rorb repnz jo loope adc xor xor popa cmpsl out in andl sbb cmc pop fldz enter fcomip sarb ds xchg out out iret (bad) dec inc mov in (bad) int3 pop fadds fild outsl pop ljmp int3 and aaa pop sahf lods out cmpsb sub jmp gs dec jnp in fisttpll lret dec pop js sbb sub out pop pop or xor in dec inc cmp jb,pn push cmc lret and out xor je sub adc test xor setnp mov or lahf push jno insl repz out (bad) mov cmpsl dec out nop ret (bad) enter dec (bad) push aam out sbb in repnz lahf loop pushf cltd out push popl and pop repz jbe dec mov bound out cwtl bound cmpsl mov out push test xchg cmp xor test push pushf mov leave adc adc insl std loopne lahf xchg push mov push xor mov vandnpd push jle or hlt je scas sub fs in cmp mov out ds jg fdivl push jecxz or sbb push xchg pop mov jl or inc out mov mov sbb xlat push out jne and (bad) clc xor repz dec loopne loop out ficom fiaddl push jmp imul sub mov (bad) out add pop and xor jg clc movsl fucomi fnsave jecxz pop inc and or pop ljmp out pop or lea and cmp xor mov out sarb (bad) enter mov mov int3 loopne lods shr lock in xor jne out jns inc lods and cmpsl pop xchg cmp (bad) arpl test pop cmc jle xorl (bad) out stc cmp shl loop iret dec stos movsb (bad) mov out aas ja or (bad) pop mov pop ret dec and mov xchg dec negb add rcrb (bad) cmp sub insl jbe push mov add pop das sbb imulb xlat mov in cmovs in je push out (bad) or pop jecxz in or and cmp out dec sbb mov mov push mov xchg mov mov jmp (bad) mov out adc outsb and cs outsl out ja mov xchg inc in cmp and aad xor mov jge lods outsb xor mov rclb repnz (bad) and out lahf mov roll imul aam shlb out fwait xor mov and ds add sub es movsl imul cmp fisttp dec push sub mov call xor push (bad) hlt imul (bad) mov out outsb in fwait out imul (bad) mov ret hlt jg lret (bad) out mov mov ljmp pop or out outsl pop cltd aad test out in ss fnstsw popf out ret dec cmc sbb in clc (bad) (bad) (bad) mov out xlat repnz enter sbb sub push inc cmp rcrl in gs ljmp dec pop loop aam push fsin ucomiss adc in (bad) out popa xor adc fist jp sbb mov cmpsb and popa add cmp mov cmp xlat arpl push pop pop aam jmp out and jnp push ja mov fidivr pop lret cmp out call pop adc aam pop scas push sub jae gs pop cmp insl mov mov popa out cmp out adc lcall jp cs cmp sbb mov nop jbe rolb and mov mov in out xchg and ljmp (bad) out push out in into pop js add dec mov aad lea jb jmp push (bad) imul push sub insl cli out repz push out mov addr16 out mov enter dec into out jns (bad) into jo cmpsl pop or fildll (bad) xchg ret dec call es mov pop aas fbstp jge push ret pop push loope jne (bad) cs push adc and imul jmp cmpsl out cmpsb aad or push orps sub (bad) push pop lcall sub in mov ficompl pop divb cmp insl mov xor ljmp out sbb dec and cmpsb out adc mov inc out push adc test mov jbe maskmovq idivl data16 jp jae xor xor (bad) cmpsl sub mov and xchg fs leave out cld ret mov rcrb lods jns mov push cmp mov aas pop out mov addl mov out or arpl sbb mov mov mov out and pop or cmp sub test sub add pushl pop fs out arpl pop out xorl int3 or test push mov test out popa shrb xchg rorb notb loopne (bad) out and jno scas pop lds jg (bad) out cmpsb sbb pop (bad) outsb mov xor mov jnp int pop jb inc mov out push mov aas lds mov (bad) jno (bad) pop sbb in hlt jnp stc out mov lret pop cmpsb xor xor jno inc pop cmp arpl jns fs clc (bad) outsb mov out stc cmp das out mov adc iret divb or xchg jnp subl dec push dec push jecxz sub ds lret sbb out pop cmp fadd mov xchg data16 jbe mov push mov sarb js in shrb mov pop ja xchg out stos add xor pop xor mov int mov outsw mov sub adc mov fsubp xchg mov cmp mov or mov pushf movsb sbb lret pop push mov jae or cmc mov stos inc neg jb mov mov sub xor fld1 xchg pop inc (bad) jmp out dec inc icebp cli dec aad out out popa push (bad) loopne cmpsb dec out inc and xor andl ret cmp out adc sbb inc std in cs out js lret sarb xchg dec out aaa sahf fmul jmp add xchg scas xchg out repz xchg out addr16 ret pushf mov sub or out mov and jmp push scas insl and fidivr adc and pop or and addr16 mov shlb sbb jae or iret jge out xlat push dec xchg loopne je mov div adc ss lcall jne or sub out lret inc jno jge xchg jnp mov dec mov shr fimul pop mov ljmp sbb xchg out push push decl (bad) and (bad) js fwait dec in lahf out je mov jae pop mov push cld sbb fiadd ud2 repnz jecxz jp test out bound lods xchg push fwait xchg cltd out das js or popa (bad) mov pop xor out fs sar xchg fwait shll xchg mov lcall sub fisttpl out mov push cmpsb add pop stos jo pop jle cmp mov ds mov xchg out mov aam out test scas fsubs jne bound out jbe loopne les cmp xchg clc cmp int3 mov fidiv sahf push (bad) icebp xor or pop shrl add insb imul (bad) jp inc (bad) leave cmp ljmp pop pop dec (bad) repnz in movb das xor ljmp xchg cmpsb test andb dec ljmp out aaa xchg sub pop bound pop cmp outsl lret out daa int and insb (bad) xlat sarb xor (bad) inc es rep incb mov lods push (bad) sbb loopne addr16 sbb imul or mov fisubr and or cli aad push stos jmp mov (bad) and jae ficompl mov pop cltd or rorb imul rclb mov outsb out popa fnsave mov and notl (bad) mov (bad) shr cwtl mov fisubr (bad) out jne loope loop mov mov mov out push add xor outsb sbb lock cmpsb std fldl out outsl jl out pop pop cmp push mov push out inc adc repnz cmpxchg inc push ret mov lahf fsubr fucomip add push lods pop or cmp lahf aaa stos movd jmp xchg sub push out inc push fcompl pop into add (bad) sbb push mov sub mov mov test les adc lea xchg xchg je add push jbe movsb pop enter ja fmull or push out push (bad) pop and call push out push sarb add cmc movsl in out xchg addb out xchg out push jp jnp loope sub mov (bad) aas scas mov imul lret cli in push out pop add add mov xor jns dec out fistp outsb cmc stc lods repz mov ret ljmp scas ror lea lods or sub xor adc mov loopne or xor jmp imul mov mov in mov jnp popf push mov pop js and incl push inc sahf mov out ja (bad) pop das xchg xchg fwait (bad) popa ffreep or push divps jo fistp jne and mov inc incb add inc imul mov xchg sbb sub int out ja enter arpl out add mov (bad) in adc aas xor mov daa mov out clc mov shrb push loop repnz pop add fs out jbe jg jno push out push and add and add (bad) lcall mov loopne add dec sahf inc and fimull add jle push lcall xchg mov sbb hlt out add out mov insb sub and out repz lock mov push in fcompl out adc add xchg (bad) js pop out jmp (bad) daa bound scas in scas idivb outsl push mov out xchg jne jl mov inc out (bad) iret sub mov (bad) psrld hlt popa xchg insl inc call out jge xchg inc and loope adc mov add rcl cmp in loop ljmp (bad) nop movsl ret test out mov sub xchg fnop push ljmp inc sbbl push dec cmp jo fwait je lock fistpl xchg push pop xchg pop insb int3 pusha jbe repnz fcom lods in test lods (bad) cltd leave mov push sub push ja cwtl test out mov imul dec and inc fwait lods mov inc xchg jle adc pop loopne movsl mov cmc and js out or mov loopne outsl mov and inc push lea or (bad) sti out push mov in lock pop or loope sub in imul add out and fistp out les movsb cmp inc pop pop sub out pusha mov jo sub inc lods xchg (bad) (bad) (bad) out ljmp mov mov cmc lea decl xor shlb inc cmp lock jge ja xchg jno fiadd push aad lret cmp mov or sahf inc ss imul mov push call icebp lock add rorl out and pop es mov sub sbb mov xchg dec jl iret pushf pop imul dec fsubrp (bad) stc insl ds adc ret mov inc mov inc mov aas inc outsl out dec adc jg aaa mov dec notl or xchg add test das or or out leave adc jecxz push add jmp jns jb loopne push xor insl mov xchg out pushf add inc cwtl jne out ljmp add sbb fwait sbb out inc jmp dec dec out bound aas int sarb ss mov push cmpsb add outsb dec aaa out add pop cmp insl dec adc nop arpl mov push out scas jnp das ljmp mov lods pushf out mov repnz jno js out jmp std call or dec out cmc mov in lods push test out pop fidivr jbe outsb pop xor dec pop (bad) call pop and adc lock cmp scas (bad) testl mov add push dec cwtl shr sbb stos out test pop or out inc mov loop add shll xchg and inc xchg ret out jnp (bad) mov outsb jg imul loopne xor mov mov ljmp out adc loop out inc mov mov fucomip cltd scas dec lock sub addr16 mov stos push adc aaa (bad) sub mov (bad) out out push xchg adc pushf out inc lret (bad) ljmp push xor out and outsb out pcmpeqw stos out pop cltd adc mov jp xchg and ficompl pop mov in call push faddp push (bad) enter jo pop fwait sub add popa jb and out in jmp (bad) (bad) out ss xchg (bad) je push cmp scas mov sbb xlat out cmp (bad) (bad) insl pop cmpsb sti jmp (bad) leave add cmpl jo adc jp roll out jmp mov sub mov imul fbld out (bad) pushf xchg popf and loopne cmp (bad) push push loopne nop insl in out (bad) and jno add loope cld sbb mov sbb cmpsb cs lods es pop mov iret cmc out cld sahf xchg xchg call jns adc sarb mov lods fucomi aas cli mov adc rorb in es inc out stos mov imul mov and addr16 (bad) scas out fs xchg and out xor pushf dec dec test push out sub int3 mov out rorb stos pop loopne andb ljmp out lcall fs pop mov jp loop sub lds out push adc xlat out xor call xor hlt cli out mov sub pop sbb out push fsubrs sarl mov or (bad) loopne cwtl or bound jb adc mov (bad) into xor out addr16 xchg cmp out xchg scas bound pop adc out push mov ja mov push into adcb mov addl (bad) out loop fdivrl jp (bad) xor pop out xchg aad je fwait out mov or imul mov leave add out jp jb xor out xchg cli xor (bad) mov lahf test out movsb sbb add mov fild lret lods mov mov xor mov dec (bad) repnz faddp out movsb andb dec jno js sbb out insl adc es mov or cltd dec mov lret (bad) out mov xlat xchg test out popf sbb repz lahf mov rorl pop std mov in out pop ja outsl and repz (bad) lods test out mov fist jle adc out enter cpuid shrb push or mov xor fisttp and jae sahf test out mov sbb cmp pop unpckhps sub and cmp sbb clc out pusha inc in xchg fistp out push aas sbb out (bad) (bad) fisubr out adc push lods pmaxsw lds out incb jns scas cltd ds push stc (bad) xor nop out loop xlat sahf add (bad) int3 push lret sarl jg add out mov in out addr16 pop jmp out jno mov jg add pop popa xor dec out mov daa (bad) lret out mov or xchg repnz stos push sbb ss sub cld inc (bad) sbbl jg loope outsl mov in std sub or (bad) xor (bad) ljmp das sbb daa je imul mov loop not loopne cmp orl mov outsl lods pop fdecstp test (bad) insl cmpsb ss call jg lahf out and lcall (bad) push loopne lea cmp adc add sahf out pop icebp test inc test pop shl repnz es sbb (bad) les add jb and dec pop jne cli arpl xchg xor out push movsb cmp aam jnp sbb xor jns mov cmc jb out or cli (bad) xchg pop fs popa cmp cmp (bad) and test inc dec lcall loope call fmull pop dec stc fcoms (bad) sbb jbe (bad) mov jno pop jb jmp xchg push pop sahf aad test ret repnz push out dec pop rclb pop (bad) xor out insl (bad) jbe cltd jo out xchg std xchg ss dec add push dec mov out (bad) mov addr16 out mov cmp dec jp (bad) aam fistpll cmp hlt push in mov out in leave insl insb loope dec cmc jg sub jns jecxz (bad) lock dec pop push or jmp sbbl mov out sbb lods xor xor movsl sbb jb pop mov inc cli in fidivl push inc mov sbb ds dec sbb dec out jmp out lea adc in je jmp repnz out cs or mov and lods out fcomp mov (bad) mov iret sbb jnp arpl sub in sub mov lahf adc or add (bad) mov das push test outsb imul sub int mov and pop aaa cmc lock insb jmp sbb imul or out je mov lds adc dec in jb shlb mul popf loop add ds (bad) mov out pop pop ljmp movsb fstpt arpl in jmp xor push jg or xchg push pop out fstpt and out dec in xchg pop out sbb mov xor sbb dec cmc outsl mov push mov mov stc aaa out pop es out pop in push stos inc push mov xchg jno jp insl (bad) jb xchg out rcl xorb add js lods jl pop lock out mov aam cmp mov out mov mov mov frstor add out rorb imul fistp lods sbb daa rorl mov jg iret in jnp out int3 cmp fildl out mov imul inc inc out fldt add scas rcrb cmp sbbl out inc mov divl movsl adcb push out scas xor sbb dec pushf push out mov cli dec test call pop nop js pop jb in mov insl rcrl or mov aas (bad) ficoml out pop je popf adc sub in jecxz out insb push sub cltd pushf push jae cs and stc stos or (bad) loope dec xchg cmp push (bad) out mov xor sbb lods (bad) ljmp xchg mov ret mov xor out lahf roll add inc push out add sbb movsl (bad) dec decb fdivp (bad) lock lods sub and hlt cmp data16 xlat jne inc mov xchg and mov jnp into out mov fwait subl mov mov bound adc (bad) movsb sub call mov incb or imul xchg lahf or or ljmp pop jle add jo mov movsb insl add mov aam cmp xchg adc xor out cmp scas out (bad) lahf jno sub mov inc out test xchg jnp loop mov ja daa mov inc out (bad) cmp out xchg mul sbb stos add cwtl aas in cld xor pop out call repnz jb in imull mov das wrmsr movsl push stos ds in pop addr16 inc dec (bad) sbb xor add dec popa and inc xor rcrl mov and out cli fnop std sahf (bad) (bad) fbld sbb push js out jle mov lea movsb sub imul mov ficom sarl fwait out out sti mov out call int lcall bound data16 pop (bad) movsb dec jnp cmp pop insb hlt iret out in pop mov (bad) cs mov (bad) inc add fimul fistp jg test sub xabort pop out push lock inc lea in loopne push cmp and hlt mov jecxz out push mov mov int3 lcall addr16 hlt enter xchg dec test popa sbb adc push mov dec jo outsb cmp ljmp in cmpsl (bad) push bound and inc loope (bad) mov sub lcall add out cmp adc and sarb insb push cmpsb out jno fiaddl insl ret andb stc jmp mov outsl jae loop push xchg jns xchg mov sub pop cli mov mov fisttp mov cmc push or cli push lods cmp out xor mov pop pop jmp dec cmpsl imull jo out push add test aam mov fucomip xor (bad) xchg imul push mov lods sti sub pop ljmp out inc xchg adc pop leave jle pop and jbe fsubr iret mov ds outsl xchg xchg xchg ret or add out sub fdivl cmp cs (bad) push scas cmp inc data16 cmp mov push stos jp fs dec loop out pop call stc mov xchg mov subb sub pushl repz test out dec pop jns popa cmp jo negb and loopne pop movsb movsl pop (bad) je or dec sub jns cmp sub sti jae sbb popa les cltd aam fucomip add orl mov repz cmpsl out inc mov dec pop (bad) out imul data16 (bad) pop jg fcompl push iret add iret dec or out adc xor pop ljmp iret fiaddl pop sti cltd popa xchg out test andl or (bad) sahf je pusha out lret (bad) jb fxch sub sbb sbb into sub mov add dec jle in icebp sbb ret aas (bad) aaa and adcl out out lret jecxz jg add (bad) rcrb jb inc out aad rcr pushw aas pusha fsubl cmc jae mov add xchg and lock mov inc fadd add imul mov decb dec imul test jb mov xor out push (bad) fucomi sub repnz negb fstpl ja repz lock xchg ss loope sti push scas push cmp push aas popf sub out push push dec iret ja ss test mov inc cmp ficomp push adc je mov (bad) out add (bad) fldenv ret out push cmp mov mov mov je rcrl leave aas push test mov fwait scas push dec out add dec adc inc add push mov fcomps out dec fsubs push into mov xor mov mov mov jae inc sti sub loope arpl std mov mov inc imul (bad) out data16 xchg jecxz mov xor inc mov lods dec out pop scas dec imul lret out jmp sbb pop rorl daa cltd sti shl fwait cmp mov out pop cmc and and push out mov xchg test pop push cmpsb mov push call fist jecxz jl mov or jl (bad) pop sub mov sbb ljmp mov lock ss popa dec leave ret (bad) inc clc fbld sbb xchg out in xchg movsl lea clc out fs hlt (bad) cwtl aad push jg call out andl lods arpl rcrb insl xchg inc js sbb out push jmp lahf popa and mov test and and pop nop pop jo adcb sub out and xor dec (bad) mov cmpsl xchg stc in push xchg pop mov and jecxz inc in (bad) out popa lock stos mov out out sub pop test dec jno loopne ret pop pop cmp test cld test mov (bad) sub sub mov das aaa add dec pop push aam or in inc mov loope out ret mov push xchg imull push fcompl jmp (bad) pop (bad) xchg adc dec aad in inc sahf (bad) push xor andl out inc mov jmp jle iret xchg lock (bad) pop add or scas out pop fcmovbe inc (bad) jmp cmp and scas adc iret sbb xor lock es mov notl and fistl jl mov and pop ret mov (bad) out (bad) fldt push push jb outsb daa cmp and inc fsubrl in stos mov hlt ss out push lret mov (bad) out (bad) mov push cld idivb int push iret cmp sub add mov mov push sub mov mov mov out into popa jns hlt shr inc popf mov out enter sub mov mov jl push inc dec (bad) lock out loop lret add jp fwait inc imulb data16 and jle adc push int3 loop (bad) xor xchg out xor imul add sbb incb stc bound iret push sti mov push pop inc ljmp das mov pusha rcrl cmc ljmp or iret mov out mov js insl mov xor mov fnstsw sub out fsub std push pushf int3 out dec mov jge scas pop stos out or or popf psllw out lods iret pop xor inc shl pop out sahf jmp push jb out or out push ret in mov outsl mov in pop (bad) push lret test and aad cmpsl popf out mov xchg xor push push mov cmp test adc lret mov sbb fsubr xlat push push daa inc jns add inc mov cmp xchg hlt out pop (bad) jmp push movsb push jp test lret daa push cmpsb and stos fwait mov mov in dec out lods pusha arpl out dec ret cmpsb lret inc pop loop iret hlt insb cwtl (bad) int bound pop dec jmp in mov out add xchg sbb incb pushf aad add push sub pop add fcmove pop icebp ja iret xor mov push jp mov pop roll jae,pn jns in mov out insl dec out popf movsb ffree inc push mov repnz ljmp push add xor insl sub dec aas cld mov ljmp cmp adc aad clc adc jecxz pop je popf in add sbb adc rolb jbe clc mov aaa insb insl mov loopne jge call adc sbb add cmp pushf lcall jne lea mov cwtl out mov pop cmp or sbb repnz dec out push addb cld mov pop sbb lock sub mov out fsubr (bad) mov das push pop push push push mov stos mov or in outsb rcl arpl xchg shl sub out add mov sub xchg out jns ljmp cmc popf adc pop sbb fbld lock cmpsb mov mov xchg ljmp mov inc jmp adc out (bad) mov or or or pop mov aaa daa lcall inc lods in dec shr aam or jg int3 pop decb sbb sahf out push into push and stos lods cmp mov sti pop xor adc xchg push iret rolb lods inc out xchg xchg sbbl in (bad) aas gs imul bound cltd in out xchg fsts push mov xor jg mov in and jb dec ljmp xchg or rol xchg fsubp mov cmp out jmp fsubrl out xor loopne mov push cld out pop jns rcrl xor pop adc fdivs scas mov jnp out (bad) cwtl mov mov sbb out sbb adc pop andb out dec aad mov loopne loope xchg jle (bad) ret dec cmp cmp scas decl sbb sbb sub pusha aad aam scas (bad) jp xchg outsl not out dec xchg adc xchg dec imul fstps out aaa stos sar loopne outsl fsubr mov sahf lea popa pop jae jle inc jbe push xchg cs mov mov (bad) nop push scas ret push add jbe call dec out push add out pop xor dec add imul push jnp (bad) out jmp (bad) dec cwtl xchg mov out ljmp out xchg and sbb mov jmp popa (bad) and cmc pmaxsw xor out sar aaa (bad) mov push out mov jmp xor pop jecxz insb iret mov ds mov and pop pushf (bad) scas and dec loop jmp push sub loopne or cli fs mov or in lahf mov pop mov (bad) out les (bad) xchg subb mov leave divb xor push sbb add cs lea jle out aaa out outsl in faddl dec cwtl out lret inc dec mov (bad) add lds in mov push mov add pop or dec repz pop ret aad and lahf loope (bad) sub mov mov test pop cmpsl fiaddl and lock repnz stc (bad) cmc in xorl mov mov push loopne (bad) jno imul cwtl std pop xchg sbbl cmpsb mov test add sarl xor in testb pop imul push daa sbb jg out pusha stos jecxz adc mov out iret orl out test icebp jmp in pop dec sbb into hlt out mov xchg add in xorl out or push movb into pop fcmovne ljmp shll das xor cmp lock mov test jne pop loop pop ljmp loop imul lahf xchg out (bad) outsb decl sub stc xchg ss rcrb shl xchg popa jo out and icebp cmp test ss out out lock jmp and and mov xchg out jmp (bad) push dec insb out aad cmp out out add call out es mov nop push into sbb (bad) and out sub out clc jmp stc sar popf sub movsl test sub jmp push mov out (bad) (bad) jb or out int3 add lret fs (bad) mov ds int sbbl int3 in test out jmp lea cmpsb out mov push subl add out xchg (bad) mov out mov std andb js stc xlat (bad) in inc ret pop cmp out fisubrl mov lahf fwait cltd scas mov jmp mov scas mov jno int3 out popl push nop cmpsl adc sbb sahf cmp ret and imul (bad) push clc jle jo xchg shr shrl sub xor lods movsl or lahf fistpl sti out enter jae sub jo out xor add push pop lret sti nop ficomp int pusha movsb jmp out out push and lcall pop inc enter test loope out rorl cltd movsl iret push pop (bad) insl in cld loopne test sub test inc pop sub aaa mov cli jno dec out pop clc (bad) in add out sub jae mov adc int3 adc data16 leave and loope ret out movsb lret outsl scas xor out mov in add adc or loop lea scas add mov mov sar jl push push pop sub loop mov cmp inc xchg outsl jge pop sbb jmp mov out sub or lahf call jbe mov out sahf sbb or insl loopne mov stos mov inc cmp rclb out int3 xor out (bad) mov add sbb iret push rolb dec add ret xchg scas pop out aam icebp push (bad) out lret dec in ss scas cmp sahf fs xor push jmp xchg sbb xchg mov or add push in out cld add dec add xchg leave je in mov cmp mov cltd jmp ss mov (bad) jno and pop jecxz xchg lods dec out ret and or and insl inc (bad) arpl mov scas std fcompl pop mov shrl pop pop mov sub lods js jmp mov xchg mov stos mov repz dec and xor push aad icebp sub and sub push pop enter jl push repnz shl (bad) xlat or push fdiv jnp fcomp cmpsb insl out iret cltd mov and out lods repz pop sub push jecxz mov fsubr ja test jg movsb xchg out ret bound test sbbb out jmp xchg inc or scas aad out test and xor (bad) decb mov add pop pop nop ds jmp xchg jns pop stos sub cld cmp mov out jne decb mov mov mov nop cwtl jo jecxz xchg jge cmp mov scas mov adc nop out repz mov mov rcll out (bad) fiadd pop add in dec es fidivrl shrl sub insl sbb out cltd and movsl out dec movsb cmpsb insb repnz cs mov in out fnsave push push jno cli fsubr js add jl dec out fdivl adc subl aam js mov push pop push xchg out adc pop cmc lea nop mov mov bound jnp ja int mov out mov stos test (bad) addr16 ds jnp (bad) decb jge inc sbb lods pop jmp dec add adc add cmc xor lods imul out idivb das mov pusha push test mov add sahf jno addr16 fimul dec mov (bad) hlt out xor roll sub and (bad) lcall (bad) insb adc pop hlt pop push xchg mov out out dec jo jp jl ljmp xlat inc xor repz mov out int3 sbb cmpsl push ret in ss lcall sahf xor cli fnstcw xor iret fldl dec sub scas cmpsb imul jg mov scas jecxz pop and fwait xchg sub fcoms out xchg inc jecxz cmc popa xchg and jge lret dec ds and jmp mov clc cmp jne out push xor mov out jb out in xchg adc xchg pop addr16 (bad) out sbb dec pushf cmp call cmp icebp out mov rcr out (bad) pop push jp je mov lret call addr16 pop sti push in push mov movsb cmpsl sbb fadds stos lret nop sub out popf xchg (bad) rorl and pop push stos popa scas cmp out or je stos lret push mov jecxz sbb mov and out mov jne fistpll xor out add push out std (bad) out lods fdecstp xor enter movsb out aas push loope and pushf jns es insb add or iret dec shr outsl in prefetch add pusha cmp lods xor leave out sub dec jmp out inc pandn loope shrl (bad) cltd pop fistp (bad) jno out aam mov (bad) adc lahf loopne notl push mov jnp out mov inc aam sti mov rcl pop dec ljmp mov lock out test cli sub aas or sub sbb fsubs xchg pop out cmp jmp mov aam push out adc or gs icebp cmp es mov enter out clc mov adc out out in add out push rcrb dec out jnp repz adc sub mov add ret scas push arpl jmp sub cmp inc in test mov dec xchg mov pop mov loop movsb and bound and pop or das test dec cmp and pop stos xchg inc add loope in cmc cmc adc push aam roll imul sub or pop mov imul (bad) dec sub insb outsl mov or out mov lahf stc cwtl pop cmp adc dec std (bad) ljmp sub pop pop aaa scas (bad) jg jmp int test stc sub push jnp mov mov out and jb (bad) hlt in rcrb out lret loopne push clc inc out mov sub cmp lret add jecxz aam adc loop dec orl fstpt adc enter push push push and push adc out std (bad) hlt lods aad ret insl lea xchg xor jp dec out stc add and sub xchg mov xorl xor out cmp sub out fstp loop test and pop push movsb lahf mov out leave xchg fsubrp cmovge cli mov sbb cmp in out aaa cli xchg mov call xchg mov or and mov imul jnp adc cmp pop in ds aaa pop push ljmp aam clc jmp loop and cmp add out sbb (bad) mov push fwait dec out clc icebp push movswl lods test xor (bad) lret popf cwtl outsl xchg scas mov cmp imul shll ror dec aam imul fcomp rolb out cli sbb dec fsubrp movsl xor imul or cmc adc (bad) mov fidiv out cs out shll jmp dec rclb (bad) call out adc sub lahf loope in call popa (bad) xchg add out mov iret rcrb out dec xor rcrl rclb leave ljmp out mov lea decb inc mov jns sbb jae out add gs xchg fmull aas (bad) shll out xor out test fcoms out mov add (bad) flds pusha lcall outsb and or adc frstor call and lret or popa repz data16 mov cmp cwtl xor in xor out je jb loopne rcl out add shll (bad) adc negb pop scas cs loope imul aam (bad) ljmp pop ret or out cltd frstor push fsubl xchg (bad) stc aas add sub add sbb jmp jge das scas rcll mov out in in mov out mov push adc adc loop shr dec out add test sar test js orl fistl push jns loopne add in dec xorl in pusha ljmp push pop mov sub sarb mov fs aad add movsb pop mov in push mov jne,pn ljmp jns out or lret mov ljmp mov cmp mov pop fbstp push std lea pop pop sti fwait int3 push xor jno jmp es (bad) hlt popa callw xchg jge mov add test mov lock or mov adc out arpl and jg out jmp call rcll daa push and ret enter dec xlat into out jne popf sub mov sub out cmp lret pop das imul inc out cwtl push in mov sbb mov (bad) out inc fdivr jle fucomip in pop nop out inc ljmp mov lods mov jmp out ret mov das insb out adc (bad) jne push jle dec sub pop push xchg and or into in out shl adc push loopne sub out jo pop pop xchg aas cli pop rol stc loop push ljmp rcrb push sar cmp xchg fs mov daa ret lock inc loopne out xchg (bad) dec out sbb jbe inc pop (bad) jecxz mov cmpsl adc sbb arpl add pop pop lcall sahf (bad) pop scas hlt out lea test fwait int stos fildll sbb out dec ss cmp out or mov sbbl rcrb adc iret or inc (bad) cs pop aam xor rcrb jmp pop pop and out pop dec enter outsl jg int3 aam loop cmc popa addr16 pop out and aaa adc mov jp inc in pop iret cmpsb test scas repz mov push jbe mov daa pop cmp push cltd and imul rcr pop pop (bad) push das pop insl pop ret lods outsb adc rol in aas add out push stos cmpsl inc cmp loopne or lret sbb cmp inc out (bad) or std pop orl mov mov cmpsl jg aas pop inc out jno (bad) ss cmc add jb out push push mov (bad) dec insl or push and cmpsb push pusha out sub movsb inc push ror ret cmc std and or fldl aas int fs out push mov mov inc and (bad) ljmp daa sub cmp scas scas (bad) sub lods popa lret outsl inc jle out jmp lahf repnz push into out adc dec fsub dec cmpsl pusha out repz lahf insl pop bound in out cmp xchg lcall xor out mov std xchg dec iret cwtl xorl inc pop out mov pushf jge scas xchg gs pushw stos sbb and rcrb je incb aam stos test and pop popf scas fucom sub out xchg push lea out lret lret test pop (bad) sub pop pop sahf and in sti mov pushf out pop lahf mov repz ret loopne cltd mov out fisttp pushf stos xchg jo in sub (bad) out mov popf sbb dec or rolb insl out lret adc and push out insb push mov dec dec xor bound out xchg mov jno (bad) out int dec loope ficoml mov mov nop (bad) mov mov loope (bad) out cs dec daa sub (bad) movsl mov and jo jae dec mov and rclb sbb (bad) pop mov ret out clc or mov jmp inc popa mov push pop jbe xlat pop cs inc in out push addr16 ljmp vmwrite loop jo out repz add outsb pusha negb sub mov adc out fisub icebp out add and fwait (bad) das out mov push in jbe scas jbe mov sbb iret mov mov test mov xchg call loope or lods out popa std fcmovbe (bad) and inc jo push cmpl pop push pop insb adc fwait shl mov in mov lahf mov push in pop mov out or push mov loop cmp das pop pop addl inc jne pop sub cmpsb jg jecxz sbb pop iret cmpsl (bad) fwait sbb lock loope lods loopne and out (bad) fs imul cld sub ret jno dec in or out dec negl mov lods out push mov dec or sbbl leave jnp or mov ret popa or adc addb ljmp (bad) jno xor das stc pushf or add call (bad) out push mov popa fucomp stos jns loopne bound incb cs pushf imul push cmpsl mov test cli xchg pop test pop int pushf mov out arpl sub loopne or out cmp ret jle mov (bad) scas sti (bad) inc inc or aam xor out jge adc fucomip jnp xchg mov mov add jno sbb sbb fdivs pop (bad) movsb push mov call (bad) out arpl fidivrl cld out adc in xchg mov insl std out int3 jo sti mov inc cs in jae dec push xchg mov pop cltd in xor adc jb fwait out int sbb enter pop mov out push out push ficomp lds sbb push out imul scas mov adc jmp sub cs fucomp add add adc cmp out mov lock pushf adc out insb jne lods scas sub adc (bad) xor out sub shll into out xchg cwtl inc jp pop dec sarb test ljmp (bad) mov and sub aad mov jmp (bad) pop sbb in fldz jne lods ret cmp out and fadds xor into call insl outsb inc mov pop fidivrl inc sub mov int xor pop sub pusha imul lods xor orl outsb mov and mov out mov ret enter push bound cmp das inc xchg add out fidiv sub adc mov shr xor in shlb scas movsb bound imulb popa outsl mov jbe xchg aam out data16 mov mov cltd out or in and cmp lea out repnz stc out cmp inc xor jb xor jae out addl iret scas add sar (bad) lahf cmpsl xchg inc pop cmp (bad) and xor xor mov ficoml out cmp sub std into out xor jg mov or sahf ret cmpsl out inc imul decb jae out jge das sub dec jg sub ret mov addr16 outsb clc out mov push adc mov push lock fucomi adcb add lret xchg out mov push adc (bad) adc je das int dec dec jne stos cmpl outsl out out ror loope fldl2t out inc dec sub ss cmp (bad) lret movsb hlt into in (bad) (bad) sbb jns,pn shlb cmp mov in pop mov fldt (bad) sbb add xor pop or mov cwtl js popf out decb insl and jae lcall mov out ret lret pop and out shlb adc adc fmul pop mov daa clc add jg cmp pop leave fcompl xchg and shr lods adc lcall out cmpsl movsl scas out mov adc mov xor or mov pop or popf in out pop ds dec lahf aas add out mov mov pushf fsts test out repnz mov out mov ja cli and mov out adc out or jnp mov or dec or fdiv repnz adc mov pop out scas roll pushf out jbe fcmovne shlb rclb cmp out popf add push sahf pop cwtl incb push test lcall hlt pop les icebp xchg out out loopne popf aad in jmp outsb pop sbb inc jmp pushf out fildll adc out outsb sub add lcall cmp mov out (bad) push cmpsb scas sbb sbb popf jecxz inc in aam es out mov inc cmpsl shr inc and aaa popf aas mov into int or mov loope sub mov xor push mov out fldl cld inc (bad) xchg (bad) out push popf mov jo or (bad) (bad) out sbb shr push xchg mov inc cmp dec mov test inc shrl inc vpsraw out (bad) mov push sbb and test out and cltd push jbe pop lahf rorb cmpsl mov sbb (bad) (bad) lods sahf ljmp mov xchg les out sub lret jbe push push pusha mov bound xchg mov fcmovnu std push es pop add in mov mov ret pop movsl mov dec ds cmc mov out or lods sub xchg and push sub sarl mov lods cmp xchg xlat out and xorb push sti cltd das sub out bound mov cli xchg pop loop mov (bad) pop push xor adc (bad) add cltd (bad) xchg (bad) out dec fsubrs call lahf ds insb aas pop jno loope xor ficomp test mov push xchg pop out inc pusha (bad) rcr mov add fs sbb jmp and (bad) loopne mov in ds or jne cmp dec mov (bad) cwtl xor popf enter out (bad) cmp mov push push outsb rcrb xlat in hlt call jb and push cli mov pop xor inc sub lods cmc xor outsl dec out or imul inc iret sub sahf je xchg xor mov fs not and mov jg in outsl jbe out sub loope jecxz pop jge jo int3 stos xchg scas out aaa mov fsubl (bad) outsb (bad) dec mov cmp jl daa outsl imul lock pop cmpsb pushf (bad) idivb out mov jnp mov jp out sub fisubl inc dec adc fs xchg aam (bad) jmp push roll clc add inc enter les (bad) dec lock js stos roll loope pusha nop mov icebp insl cmp pushf add das dec cmpsl rclb paddsb call mov in mov push or lods das out xchg (bad) push mov call jmp aad out mov lds test jbe aaa adc arpl loope inc popa fstps sub mov stos pop cmp rorl mov inc out (bad) pop popf mov pusha xchg ret (bad) loope cmp ret das sar repz rol aaa jp loop stos fstpt pop pop out lahf jae mov jge sbb mov popf stos mov adc sbb dec test jo and pop push push sti out jno repnz mov cmpsb jl push add (bad) add pop out jg ss push add sub or adc cmp push in inc (bad) mov out ret cmpsb push sbb sub cmp fcomip sbb addr16 or jle jbe and push jo out addr16 aam mov mov inc in cmp jb insl sbb jmp sbbb dec out aad (bad) out push xor test shrb in ret js ljmp push add push test out int cli or out cmp sarl dec in fsin add shll push mov jle cmpsb into or out orb adc push cwtl or mov arpl in (bad) out sbb sub iret sub adc (bad) decl out imul dec add or in cmp xchg push (bad) movsl popf fcmovnb jl sub adc jb out mov pop jnp enter inc jne xlat fcmovnb loop jmp addb pop out pop scas les cmpsb push out frstor dec cmp (bad) popf or mov outsl mov adc in fiaddl lret leave out int cwtl lea sub jge lods (bad) scas outsb stos out rcrl out call push fiaddl out dec push gs sub ljmp movsb add mov jecxz ljmp out inc lret fstpt lret enter push out sti loop sub out loopne cwtl mov popf das fimul mov out mov enter mov lret cld rorb lcall and jmp mov out fist mov sbb lahf loope push dec jnp adc out lock and add pop cld out data16 dec pop jl iret mov adc jno (bad) jo fst les out sub (bad) pushf xchg sarb pop out dec add rcrl xor jbe sbb int3 ret xchg mov pushf push in adc rcl adc and ja loopne outsl out (bad) or (bad) scas ficompl imul out imul in jmp out icebp adc enter rcrb mov sbb lds dec out xchg (bad) sub je icebp (bad) dec fwait pop and lahf mov negl inc jmp pop xchg mov (bad) hlt or inc add dec inc out shl loope stos hlt cmpsb mov mov jp inc lahf dec cwtl push inc divl out popa je addr16 jl xor jg ds out cmp mov inc dec jae xchg out jle lcall pop cli mov jne gs std dec out jno mov insb out inc nop adc (bad) movsb in out xchg mov xchg fs rcrl mov aas out mov jle shr inc icebp jge sub fmuls ds cs xor std fucom loopne int out bound sub dec adc push jecxz imul mov cmovo pop jo or js (bad) out (bad) aam lods in jp jl icebp add in and mov loop sti push call inc pop loope push in ret shr out pop (bad) jns xchg aas aad gs xchg mov mov shrb out out adc mov pop cld stos sub fist mov call sub fimul pop out sub in sub call lods repz jno rcrb add lahf ljmp sub out sbb jmp sbb pop in lea enter adc xchg out ret jns mov out mov outsb fiaddl inc pop xchg std call mov js imul pavgb test push ja and ds sbb adc dec mov jo dec std jg push test push div cmp fs dec lea js mov ss push sbb mov loop and xor pop dec (bad) js push mov ret aaa out jb (bad) push push xor pop or mov insl xchg pop daa out out mov pop or lea xlat sbb mov mov pop aad subb loop clc (bad) xor xlat rorb pop out cs push ret fisttp xchg lahf fnstcw ljmp in pop ljmp decl (bad) hlt inc cmp mov ja daa es popf stos cs out outsl inc cmp mov xlat cltd nop (bad) out lcall pop rcrb or pop in pusha addr16 push mov lock (bad) xchg (bad) xor cmp out adc popa cs jb cmc xchg (bad) mov incl es call outsl cmp out imul mov out mov mov int3 js xor cmpsb popa dec das inc out imul rol adc cs stos out mov fldz sbb xor dec out (bad) and cli data16 aas pop ljmp sahf (bad) fisubl das out scas xchg pop adc sub out lods pop sbb pop xchg jb and mov add out outsl mov pop aad dec sti out inc xor pop add lahf fbld pop out xor rorl out (bad) inc (bad) (bad) mov jmp sti mull (bad) mov jbe push ljmp cwtl adc sbb mov fsub (bad) mov lds xchg inc out pop inc popa lret dec movsl jo mov sub push push xor add sar icebp push fild lahf xor aam lock push sbb and loop jo enter in pushf push loopne ret mov (bad) (bad) in mov pop aad sub shr jo ss pop push or ds mov cwtl movsl (bad) mov add mov inc sbb push pop sbbl clc adc out imul gs mov mov cmp pop (bad) jno xchg pop shr bound jae call sub sbb insb loopne inc push inc lock lea inc lds in mov (bad) movsb sbb jl outsb cwtl aad pop inc xchg sbb lahf ret push cmp aas cmp inc pop (bad) jl loope sbb stos jbe out dec stos repnz (bad) loopne sub (bad) loope mov pop lahf mov jecxz xorl loopne add test ficompl lods xchg lcall cmpb call in and jecxz out jecxz ss sti ret out stos stos push mov pop (bad) ljmp aaa lret mov out (bad) adc add test cmc enter sbb xor sub and jae imul push dec ss sub in loopne das ljmpw fnsave adc and lods pop dec pop ret call pop cmpsb sahf jp mov lock (bad) out sbb loope push pop in sti add (bad) out stos arpl cwtl sub add test inc sarl iret inc in lahf pop (bad) or loope jmp out mov jp out push in lret (bad) cmp enter addr16 shr xor neg mov in jge (bad) gs std pop mov inc cli sbb out inc sbb lock out inc fcomps sub cmp loop out mov add fsubr in xor and clc pop (bad) jg lcall in aad int insl into std sahf push push lret ljmp rcrb jb sbb dec mov jp and cltd out in fcomps sti loopne rcll pop inc sub adc insl loopne pop inc xchg inc mov movsl and ror scas jmp fcmovu or loop xor mov lods mov out imul arpl add xlat out (bad) shrl pop ljmp mov fwait (bad) out xchg (bad) mov (bad) out cmp xchg loope push aam push adc out xchg cmp loopne push imul outsb rorl fdivs cmc cli jo pop out pop out in xor cmp rcl lock add xchg out rolb mov aas fbld ret out sbb in out xlat (bad) sub xchg ljmp lods and (bad) decb jb fucomp (bad) lods (bad) loop pop sbb mov mov (bad) mov loop xchg into dec mov push jecxz shll stos out aaa scas scas (bad) jl imul cmc mov inc cmp out outsb and mov rcrb mov adc mov fucom data16 mov cmp mov lods in ds mov insb in jb mov lock out push jmp inc lret pop lods iret out xchg pop cmp out decb repz outsb pop and xor add lcall loopne dec out mov mov xor rcr sbb sbb ljmp dec out movsb into in dec and aad pavgb ss test xchg out push and fbld pop mov sahf jbe out mov je inc jg stos aaa popa out xlat scas jl out xor aam leave mov shll dec pop cli inc xor cmp push lods xchg in stos out (bad) in (bad) push (bad) ffreep into pop cmp ljmp adc leave shrb jb (bad) in mov add mov push cmpsb ja repnz je lods es fcoml sbb cmp xor sub pop sub pushf mov ss addr16 jmp xchg out mov call jge out ficom arpl fucomi jl das and std mov (bad) int pop mov cli adc loopne ljmp insb dec out sub es add xchg out rol or jl add pop jle clc xor xor addl cs aas mull mov out cwtl arpl lods out xor adc test mov pop rorb out rol sub mov movsb out push mov psrlw adc or in lock out js mov pusha rcll mov mov push adc jge roll pop mov fist lret imul inc out sbb (bad) rcr cwtl pop lcall test ret xchg mov lret add in movsb rclb sbb adc push out pop dec inc pop lods (bad) push outsl sub jmp mov sub out (bad) cmpsl adc lahf jnp out jns sarl in loope out adc dec icebp cmp adc inc test insb pushf ja pop sti cmp xor fucomip dec lahf das sub inc fildl shrb (bad) lods inc loop push mov pusha adc rcrb add dec negl lret fild push sbb mov lock ljmp jl cmp lods adc mov cs je adc push or es data16 mov daa jnp push xchg pushf pmaxsw or leave aas (bad) jmp out mov fucomi inc add into sbb loopne mov sahf out arpl lcall add ss cmp mov pop sahf call add add push xlat out mov push jne scas jle inc xchg push xor add mov out mov rep lock jmp or shlb imul pop call out cli dec sbb pop (bad) stc inc dec mov repz fcompl mov ljmp sub in push out into cld nop or jbe lods pop enter adc div (bad) mov jb in shr jae int inc mov je cmp lods out fsin and xor out sub addr16 cmp mov push repz jg and sahf dec out in add pusha pop fistl out or (bad) mov (bad) out mov mov add and jbe ja and dec out sar sub ret and scas in sbb xor xchg shr mov pop mov pusha inc xor dec cwtl (bad) fstpt mov pop orl aas outsb ret pop mov pop stos out xlat or inc mov adc scas (bad) dec push inc add and pop cs sbb cmpsb fldz mov sub shr enter lret push lds cmpsb xor sahf (bad) mov mov pop jb ret rcll out js dec test xchg jecxz dec sub push and mov lahf in mov sahf ss jae inc push in in push jmp sub test push movsl in (bad) jb mov lods push lds xchg xlat loope out adc stos mov mov popa xchg dec fidivr cmp in sbb mov push cld (bad) xor xor popa sub rcrb fsubs js int3 xor out mov (bad) out repnz cmp mov add (bad) jae in fisttp out xor dec out test push insb mov add sbb out icebp out sti (bad) mov outsb or pop movsb xor shlb inc mov push mov (bad) lret fidivrl fcmovnbe in outsl out cmp out push jg insl in push ljmp iret sub insb ljmp daa jbe mov pop outsl mov sub cmpsb dec mov cld lret xchg fiaddl or jge pop not push xchg out or lods out (bad) inc ja adc aaa pop and out lods daa dec and (bad) mov fsubrl out rol sbb movsb or jmp pusha pop mov (bad) out inc idivl std out inc pop push sub cli gs pop mov mov out sbbb push xchg mov pop inc ret loopne sub test sub mov shlb inc out add mov mov ja pushf (bad) mov xlat in incb out mov xor call cs mov pop pop xor dec sub push cs in outsl insl mov in dec mov cltd je pop test cmpsl add loopne stos inc lcall and mov sbb or aad out in xor cmp fs pop arpl push in outsb sbb repnz dec out roll mov add sub jmp je repnz cwtl push adc into out and push push out inc lods cltd mov push movsb icebp out mov push adc insb xchg cs pop push sarb pop out out int3 cmp andl cwtl sarb cmp sbb xchg sub out ss outsl daa pop pop cmpsb inc int out je out dec loopne sub mov enter sahf bound iret imul add dec data16 jmp xchg mov loope addr16 pop fstl inc out clc fldenv (bad) faddl sbb into loopne (bad) mov icebp stos out and dec jmp (bad) pop stos enter sbb out and repnz sbbb sbb sub out or lea mov sub stos movsb and pop push pushf test call not sbb xchg or out pusha int (bad) mov call lcall jl imul out sarw psrlw fldl ja mov lods das jb ds (bad) cltd pop lock mov add popa in je out xchg push adc sbb out imul cmp lret mov ret jmp or xor mov shlb sub mul in push andl ljmp pusha pop dec fstps mov dec pop bound add adc sbb out sahf lock dec xchg ja loope loopne out mov and add sbb inc mov lea (bad) out icebp cmp pop mov pop ljmp cmp into xorl sbbb push sbb push sahf js out add std and negl sub mov xor movsl out dec push pop xor mov (bad) leave sub xchg fbstp ret ss mov inc fs out in test dec in add inc (bad) (bad) jmp into lock lret ss jle sub pop test mov int3 into shr imul pushf mov pop lods dec outsl fnstenv es xor mov inc sbb jo xchg into adc jne or out dec mov lea js leave insb mov inc dec fs pop test push mov mov and add or xchg pop push (bad) xchg xchg bound ret out push scas lods mov jno dec es inc adc pop pop inc adc cmpsl jmp xlat loop out mov repz out cltd sub xor dec sbb js push lds out leave and xchg aas inc (bad) mov (bad) popf dec out jge clc or iret out ds sar in mov sahf out scas addr16 es and pop test dec jb mov fldl jno inc lods aas or xor add push int3 iret call mov mov push sbb bound pop imul inc nop out inc mov sub pop lret fiaddl repz mov dec je loop imul in mov sub adc fdivr out fisubrl and repnz sahf cmc leave push lock pop int mov pushf ds sarb out add test push mov sbb movl and mov ss pop out outsl out add test out rcl fisttpl push pop icebp cld mov push (bad) xchg mov in sub in xchg xchg sahf testb out pop cltd insl or data16 stos hlt aam cmp decb in xor loop out mov inc xlat fsubr add rorb sbb mov mov adc roll push xchg imulb lea cmp jg sbb jecxz mov jle out test and and dec (bad) mov je out test movsl dec (bad) xor push aas push out mov dec mov lods lcall sub pushf decb push pop jecxz movsl icebp pop out sbb (bad) sti out sbb inc mov mov jns xlat xor cmpsb (bad) pop popa frstor adc fwait addr16 in inc movl int out cmp ljmp sub cmp shll and mov (bad) mov mov out in mov and pop push mov inc jmp fs push fmul push bound sub jp cmpl sbb jmp sbb stc daa mov lods and call or jnp dec xchg out punpcklbw int adc ds fdiv pushl mov test xor mov dec (bad) cmovbe and cmp jne xchg out and fs lds imul mov pop fdiv daa mov mov loopne cmp mov loop addr16 fbstp pop mov iret xchg pop mov sub in fidiv out (bad) push stos jb out push inc cmp int sti (bad) std out (bad) xor fucompp out fwait loope in jge xchg out rorb sub outsb jnp mov ljmp (bad) mov and test cli and mov push mov test icebp decl movsb stos jecxz scas sub cld out adc sbb mov neg outsb adc out and fist push in out jnp sub dec pop mov sub mov mov movsl sti pop mov add dec sub loope pop mov aaa push push incb jbe xchg movsb sbb or int out addr16 lods pushf jb fwait dec out mov or and aam cmp push iret push or pop repnz pop out (bad) fscale insb xchg push insl xchg mov cwtl mov or out shll out fdivrp in loope adc lods cmp out aad outsl and lds pop lods arpl pushf out js mull fwait xchg pop jge xchg dec mov out out and aas mov pop gs leave repnz xchg iret shrl dec orl out dec push push jle mov pop rorb cmc jb xchg jno pusha mov mov leave inc xor xchg jmp or mov imul jb jp lret ljmp lds test iret lret and sbb pop jmp leave sub ljmp adc push out mov rcll pop cmpsb mov dec dec (bad) adc jge iret adc push cmp pop ss ficompl (bad) pop (bad) scas fcoml xchg cmp xor pop icebp cmp inc jecxz or sub add adc out inc lods jl in mov or neg push lock push add int3 (bad) xor xlat dec out inc cmp fucom scas inc out push test cld pop and aam pop and xor fucomp and popa shr fcomps inc lcall or inc xchg rcrl pop test addr16 push es ja (bad) aam dec add and testl xchg nop loopne scas adc fisttp push cli out sarb fisubr ss mov fcomps lods xchg pop popf mov push out leave sub xchg jmp clc out xlat jl,pt popf cmp dec out psraw cwtl xor cmc pop pop lea and in jns fildl cmpsl jno jg divb repz inc pop pop cmc sub mov cmc xchg incb gs jne in fildll inc out mov mov mov in inc out es subb sbb out xchg sbb xor cld scas std stos aam out adc jp out lret daa (bad) ret cmp mov (bad) xchg mov xchg mov jne dec scas add pushf insl ficoml imul out clc jmp pop lret loope rcr in cmp iret xor movsl lock lcall insb mov fnop stos popa imul bound and ret ret out mov add ljmp hlt dec aad lock xor shlb xor es clc fcomp push xor pop push jbe jo arpl (bad) xchg mov jne pop xor aaa into nop cmpsb pop out jbe rcr inc dec mov mov mov call gs jb sahf push xor rolb add fs out mov lcall in iret loop (bad) mov mov xchg dec popa sub popw in jp mov add (bad) in out (bad) mov lods nop fucom (bad) push jo out xor iret inc scas test ja das cmpsl cmp stos cwtl adc pop jmp nop and and (bad) out enter dec mov jl insb out jecxz bound iret push (bad) out arpl mov lds (bad) in sbb rcr insl jo cmp fldz fs jbe std pusha repz mov push pop sbb out in jbe mov das jo out data16 mov out imul jns xor adc notb fsubr mov dec out push out packsswb xor aam popf or fwait lret xor cmp xchg fldz sbb xlat mov addl jno pop (bad) fistpll sar lock push push push out scas inc je icebp jae loopne inc fdivrl ret pop push add cmpsl push ror out jnp pop xor cmp pusha test jae insb cs out sti cmp fcoml fcom out jno and jns add fs mov pop sbb (bad) adcl jmp imul fiaddl loop mov jo imul call and mov addr16 mov or adc insb and sub (bad) sub xor out add mov out and out adc jmp in jg adc xchg lahf ljmp xor aaa sti mov out into xchg fadd jb xchg mov fs add movsl or out fisubl cmp addr16 pop out lahf outsb popf cld xchg fildll push push pushf lock aas out xchg xlat out popf mov and xchg xor or pop out cmp outsl jae sub sbb (bad) mov ljmp jo scas xchg mov jbe (bad) sahf out insw out mov sub es lock lcall out pop shr test mov cmp (bad) cmp dec jl daa xchg mov out inc jae push mov xchg sarb pop (bad) std imul daa movsl and mov xchg out cmp adc repz mov inc mov push lods xchg mov jle out pop mov add ss dec test mov jno inc xor rcrb ss (bad) mov (bad) daa insb mov mov out jno ja popa bound cmp lret shrb push out or fistl add data16 pop or sub ret dec push out mov in mov in sbb mov xor fcoml in out jle out sub sti enter pop and xor cli xor stc jp fucomip out aad dec push adc jmp cmp je in out (bad) xor loope mov push sbb addb push rcr incl fs into pop out in push mov xchg out fs cmpsl adc js rorl iret dec or inc mov popa loopne outsb loop les bound xchg leave and push ljmp sub andb (bad) dec jb mov xchg loop jae xchg enter fst cmc push mov out lret sbb loop out pop and adc or out xor clc xchg xchg dec leave pop adc and push sbb loope neg in (bad) and stc cmp dec sbb cmp mov mov sub inc push push or pop stos jg cmp out cmp rol mov out sbb call ds (bad) or cli fwait imul out cmp imul lret test out repnz cmc ljmp lea repnz jae repnz repz nop les loope push roll pushf mov mov imul ja push nop in ret into scas (bad) xor xor adc push cmp fisttp iret mov dec enter fidiv lds pop shlb pop inc push mov pop mov mov xor jmp dec mov add cmp mov dec adc out aam mov inc in pop test outsb lods jmp cmp sti and jb fsubrp leave push movsb pusha jno pusha out in rclb adc in lret push out push pop add out jno mov shr daa mov sar (bad) (bad) pop cltd dec inc mov cs iret aad mov fsub out mov nop ds out shr out cmp hlt aam in dec pushf push out mov sbb out pusha (bad) cmp rcrl lahf pop out push imul loop sbb je in push push aam cmpb rolb cmp shld loop jmp out adc xchg add dec popf popa ds sub (bad) out push aad jl mov push out scas add xor stc xchg jecxz out in cmp and or jle bound push cwtl push in sbb jns sbb xchg adc dec xchg out flds out dec sahf and jmp mov jno xchg out fisttpl push repz lods xchg push in and lods mov pop addr16 mov mov push out movsl icebp enter stc into xorl or pusha out xchg pop repnz xchg lods (bad) out jmp out add lcall xor test mov push lods out (bad) jno sub (bad) stc iret mov mull push aaa imul and pop scas jb jo xchg pop in sarl cld add adc inc xor out cmp seto mov sti jmp mov rol fsubl mov pop pop sbb jmp int3 movsb xor aad sarb inc js inc sub sub (bad) adc or cmpsb insb (bad) xchg push loope mov sub sub nop dec je jb mov lcall sub add pop int lret inc in push jg aaa into out dec pushf inc mov mov in xchg std mov enter adcb out xchg (bad) mov in out pushf out test and out jnp fist sbb or mov enter mov jns cs pop rclb push pop dec and (bad) mov mov out aam pusha arpl pop mov mov out addl data16 xadd xor ret pusha iret (bad) ficompl dec pop jmp iret adc dec call aad inc and sbb loop not pop insl scas xor (bad) jmp data16 cmc call fsubr movsl adc scas pop pop pop pusha mov emms out jge test out aam mov (bad) in nop sub push jne lods loopne out hlt mov push es cmc insb ret dec xor test (bad) js jmp fildll mov daa in out jnp push push and out sbb sbb bound jle outsb (bad) iret into insl ljmp jnp cmp rol lcall dec orb bound shlb (bad) stos dec mov lock mov mov dec jo xchg and mov or push out lods inc mov fdivr out mov xor cmc loopne shrb loope in movsl out mov adc stc adc sti pop dec or cs push jp inc loopne jge lods dec jae push test popf aas (bad) jle sub out loop xchg dec data16 fwait cs jnp inc test lock imul ret out pop push movb std les sub jg mov jns out adcl sarl out xchg iret or pop push and js mov adc sub (bad) cltd dec push scas cmpsb sbb fwait (bad) repz mov repnz lock test aam mov ja or in movsb cli add aad sahf out enter test fsubr into inc or out mov dec xchg gs xchg inc and cs (bad) sbb pop insl (bad) inc (bad) aad jb push (bad) mov in jecxz pop in mov cmp insl mov mov inc jg out pop aas adc out outsl or sahf and fwait (bad) pop dec in popa mov push adc out dec dec mov lock fnstsw idivl mov (bad) out jb and jmp xor mov popa jo cmp iret icebp mov xlat call xchg pop pop (bad) shr or sbb add or xor lock ljmp adc dec (bad) push jge addr16 xchg xchg scas mov je ja fisub bound ljmp cmp (bad) or popa lock push repnz sbb pop out data16 mov xor lods jge or fwait cltd out and mov iret loopne lea pop clc sub mov mov push (bad) mov fbld out adc cmp out xor sbb jns or sub cmc lock daa and pop lcall sub mov pop push vmaskmovdqu jmp inc icebp pop add lods loopne jns dec lcall ljmp pop mov inc scas mov out dec pusha test cmpsb (bad) (bad) lret xchg out pop in std clc inc or out fbstp mov out ficompl test mov jb add xchg jmp cwtl push repnz push or es mov cmp out xchg test push mov pop push dec imul or out repnz outsb lret (bad) lcall in ret out sub sbb imul xchg repnz imull sti daa lret mov (bad) or out insl pusha adc jns (bad) mov mov pop pop out (bad) sbb (bad) imul adc in ja daa cmp loop push mov leave (bad) mov dec out mov fnstcw out xchg out mov xlat loopne aad iret pop loop,pt xchg fild sbb adc mov cmp sub out xchg iret mov cmp sub cltd jmp pop leavew pop lds mov and cmpsl and test out loopne xlat jecxz aaa inc sbb ja jl fisub fscale (bad) xchg out cltd xchg arpl sbb fadds lret rcr xlat push insl clc xchg or xor mov adc fucomip ret add callw mov fs pop lds jns sub push out (bad) xor call jnp clc out insb jb ja loopne mov xor (bad) jmp cmp scas lahf sbb cmc mov inc seta nop xchg sub out jp aas push iret or aam cmpsb inc out int pushf (bad) in pop outsb push pop rcrl mov out fsts push out test inc movsl insl or insb xlat push loope call pop xchg int3 daa iret sbb out stos xor cmp dec in (bad) push mov adc jne pop fwait mov jge hlt add push push push adc pushf or add sub push mov xchg sti mov adc mov gs xchg lock inc adc sub scas mov xchg popa cmp add ds dec cwtl sahf sub cmp mov mov popa xchg jle jg loop add add loopne ds jl cld pop ret push nopl jae cwtl sub js out ret and push out (bad) fcmovu xor mov dec add xchg mov pop pop push cmc fcomps loopne test aam adc cld jecxz lcall sub xchg in mov paddusb aam pop fsub xlat push mov fldl pop out mov xchg loop sbb aas mov cli jns out orl dec adc jecxz (bad) out jmp pop ljmp test mov out xchg xor insb call stc roll inc dec loop imul das sahf ret daa out sub pop mov insl popl ljmp sbbl mov notb lock insl out xchg pop neg sbb out bound jg push into jae mov xchg cmp ljmp xor repnz cmp add pushf add (bad) aaa fwait notb ljmp nop push decl test mov out xlat inc fcomip mov push pop (bad) cmc data16 or pop outsb and fnstcw mov jbe cld xchg in inc push pop es and push inc mov jbe cli fild fwait sar mov cmc scas pop push jmp cwtl ljmp sub xchg sbb fidiv out xchg adc add lods or inc inc loopne (bad) mov hlt xchg stc fcomip in imul push and push ret pushf test xchg scas cwtl lahf out inc cmpsl fwait or jecxz cmpsb mov sbb callw out stos je pop out pop jecxz pop shlb int rcl xor out dec addr16 xor adc jnp in xor out sbb xchg (bad) mov and out pop (bad) mov cmpsb out cltd sarb xlat push sub out sub and and xchg jno cmp ret (bad) lock out adc pusha jae pop data16 out sbb push loop mov fstps aad or loope mov mov and mov mov push xchg fwait enter xchg aaa jns cli lea (bad) lcall in sub lods mov adc jl mov and mov pusha call add out (bad) mov inc adc bound out dec jnp jmp out mov sahf xor mov addr16 aas inc clc leave out lret adc insl push out or push add fisubr scas inc outsl sti xor outsb xorl jbe hlt xor sbb mov sub and jle fcoml scas fsubrp idivb adc int mov stos out mov or mov stos faddl mov out ss xchg xor cli cmp lods add jno mov fs or dec jp mov out (bad) pushf hlt and jp in mul push sbb je mov cs sub out aad lods inc scas mov jle mov movsb mov or mov sbb movsl stc push daa pop in bound rorb ljmp out push gs dec xchg sahf pop (bad) pushf je sti xor out icebp sbb xlat in jo (bad) xor adcb out fcmovb cmp out inc sub or and jno popa add push adc frstor jbe fwait sahf jge movsb adc out mov fldt mov ficomp xchg jnp int xor rolb xchg push cmpsl jae cmpsb mov out fstl dec cmp xor out mov nop loop shl sbb outsb mov cltd ret or jns loope sub jp sub nop xlat xchg pop fs jl out pop loop mov sub jns (bad) and push movd lret push jae loop cmc int pop imul mov imul dec cmp scas sbb lods aam call rcrl add out cmpsb sahf mov je (bad) jmp mov fimull jne into stos inc sbb ss lcall mov jecxz sub out xchg cmp mov ja pushw mov into xchg cmp cmp jmp in mov adc or or scas fbstp mov ljmp pop addps out fs add jno inc enter jns rcrl out icebp xor adc cmpsb (bad) pushf out les add movsb or fmull pop stos inc mov clc mov mov xor mov lcall icebp call iret cmp jp stos (bad) out push xchg jg jle imul xor mov or and sbb scas xchg lahf push or cltd cmp (bad) in cmp or cli push dec fucomp mov dec pop mov out xchg push xchg out test mov sub xchg pop and pop addr16 fcmovne fs xor cmp sub (bad) mov add bound jae pop out clc sbb jnp inc and scas lret out jp xor mov xlat pop jb mul fwait into mov pop pop xor lods in mov push sbb (bad) (bad) mov enter fwait mov and and xor push aam cmp outsl dec insl xchg pop mov in aam sub push pop popa and cltd xchg dec mov cmp pop mov out es fwait dec out add xor jbe xchg stos out pop (bad) lret mov sahf mov xor xchg in ljmp pop dec fisubl pop cmp call repnz pop js xchg inc in dec stos cmp icebp stos cld loope mov out hlt repz push mov dec sar or xor mov (bad) fisubr pop in hlt push out pop test dec sti ret out push ljmp aas popf jbe mov add in jg mov cmp divb lds push pop sub sbb pop inc out mov mov daa loop jg bound fsts loope push (bad) out push and mov out repnz dec es xor mov ret or outsl sub aad xchg mov insl (bad) pop fistpll xor push out mov cs sub dec mov adc (bad) test clc out insb push sub mov and popf lea out pop mov mov ljmp lahf out mov loope mov ret aad out hlt data16 shl jns cmpsb outsb out jo inc pop out push dec and out (bad) fdivrs and out stos xlat imul out leave lock aam add out dec addl push fs mov inc cld outsb mov loop xor or push mov xorl fistpll cwtl pop and mov in test out stos jmp add out add pushl in rcr in repz cwtl sbb push test (bad) mov inc test push call mov sbb pop pusha bound out adc push mov pop push adc xchg (bad) shr jbe jae bound inc stos push mov mov pop (bad) ja js out lret add and sarb lcall xor mov mov cmpl out fwait mov out inc (bad) sub mov int loop stos xor jge xchg sbb mov ffreep sbb adc push in popa mov inc jl mov loopne xchg ljmp arpl jl out aaa cmp movsb mov pop lods stos adc inc (bad) in out scas adc fsubr lea aas addl lahf jne ja sbb or or out and dec fcmovnbe imul out and neg popl out sti xor adc or (bad) out mov mov cmp mov push add add mov out out pop les mov sti xchg adc (bad) shr (bad) int3 sbb (bad) cmpsb inc xchg sub lcall negb int test in jne lahf pop mov xchg lock and xor inc sti out dec inc in sub sub pop adc shrb mov inc xchg pop orb ljmp or dec outsl fisttp cmp ret push je sbbl adc mov out mov jle movsl (bad) out (bad) xor sbbl out xor adc push mov ja jnp sub sub inc fnsave cmp roll movsl ja xchg mov jg add push cmp pop cmp jg xor es ret push jnp mov or int3 add daa (bad) and inc scas mov pop fnstcw movsl pop mov mov adc pop das (bad) (bad) jl dec xchg das (bad) sti xor xchg adc mov out jns shll (bad) out xchg jno adc scas mov jns inc mov shrb clc mov xor sub xchg dec xor insl jne std jmp imul test xor pusha lahf out xor cmp jnp gs sbb je and out sar out (bad) stos les (bad) js scas mov shrb adc add jmp xchg and repnz in in test and adc push push push and xlat adc fstpt imul stos movsl mov sub sbb dec fild ljmp push movsb mov daa (bad) dec adc in scas in sbb inc push int in dec out fdiv cmp mov adc adc adc cmp xlat and test iret insl cmp mov sub mov fdivrl pop lret cli jb inc call cmp lock push fist sub sub push fidivr sub pmaddwd fnstsw jl mov mov mov mov (bad) push mov cmp insb (bad) cld inc fsubrs stos scas mov xchg (bad) adc xor sbb hlt pusha stos xor enter mov in push daa push mov fisttpl mov mov leave mov inc imul cli cmpsl repz out jmp fisttp leave in mov out in mov pop add iret movsb out or fs in outsb ror dec test jo mov in icebp push mov inc out out push into jnp inc and rcll mov sti sub lock and sub adc loopne cmp or xchg out mov ret aad rolb fsub out sub dec add paddw lock mov pop in or fbstp (bad) fsubr jnp or xor (bad) clc jne dec sub fnstenv nop ja mov xor int3 cmp lds clc or pop dec les adc aad add or or test pop cmpsl mov xor ljmp cmc ss ror loop out in xchg xor in jae jl in out (bad) sub loope cmp lea xor fs dec rcrb add jne mov mov pop xchg inc xor mov ja add or out pop xchg das push pop in add ds es fsubl push adc pop js (bad) xchg xor sti mov jp adcl call loopne pop cltd ljmp out mull lds out in sti xchg xor jecxz mov push mov dec inc out enter out pop xor out jne push jnp mov data16 iret popa out fs pop loope dec hlt cmp out inc lods mov in scas dec roll iret xchg lcall xor decb or adc mov out or out nop add insl out xchg lods xlat add out cmp or out adc fistp shrb xchg cld dec es jo add enter scas dec rolb mov mov mov pop push pop out xchg dec mov (bad) xchg outsb xor hlt outsl imul loop sub subl sarb out mov movsb lock (bad) mov clc (bad) jmp push out jns rcrb dec jae decb cmpsl mov adc fmull out sub inc sahf add xchg out pop fdivl aad or outsl ljmp out xchg loope ss fimull and push in lret mov fstpt icebp leave das addr16 ja imul nop push ret neg xor sub pop (bad) and aad lock out popa jl (bad) add pop out sbb pop adc in out jo lahf mov jmp (bad) (bad) lret fidivrl fsubrp jmp jnp push mov ret in insb in stc out adc push mov out movsb in mov mov fcmovnbe mov out add fwait mov pop popf jle lret loopne fs cld stc int3 xorl pop in scas inc fbstp xor mov inc push pop (bad) cmpl or out mov sar mov pop repz mov out jne addr16 cmp lcall imul lock jp cmp scas insl (bad) (bad) and jne lods leave movsl cmp xchg jl dec sub adc inc (bad) fcmovbe icebp ffreep (bad) insb jp bnd xchg enter jne xchg ds les test sub sub xor jg in scas and bound sub call mov mov push out hlt push jb out aaa jecxz push xchg push cmp loopne mov sbb lcall jb push out outsl jecxz aad push nop pop xchg cmpsl leave xor push xor and inc dec cmp or mov and aaa idivb ficompl arpl fwait jmp mov and faddp xchg cmc mov (bad) icebp jp dec mov les (bad) out ret and jmp jle push lahf out xor je mov mov scas and test fbstp xor inc dec adc xchg int sbb scas out cwtl sbb jg das pop xor dec pop (bad) ljmp mov loop insl rorl (bad) loop mov loope stos sbb jno push popf mov les lods pop push mov mov iret orl call xchg cmpsb js mov inc out outsl jmp pop push mov jecxz jnp xor lock out popf and out data16 or or jl xchg jmp test sub data16 mov sarl js adc out push and aam addr16 pop out pop ljmp out popa inc fucomip lock out or xchg and jo cltd mov out in or sub movsb add shl pop sahf insl mov xlat jmp out ret or mov outsl aam jb sub jbe mov jb movsb jmp cmpsb fsubs out (bad) mov dec test cld push inc sbb aaa lods int fucomip inc dec (bad) and xchg mov ljmp adc (bad) jmp fwait std out pop aas inc leave xchg mov sub movsl pop mov xchg lret pop std fldcw out sbb and out cwtl fmul dec mov pop ret shrl out sbb and pop adc sbb outsl pushf cmp adc rolb out mov jo mov pop push rcl sbb shrl frstor xor gs outsb out add (bad) popa push sbb xor loope loope jnp jmp mov ljmp into jg gs ret or dec cmp cltd or rcrl out ljmp jmp mov mov mov cli adc out fmull inc mov out scas push rcll lea bndldx jge in dec xchg in out mov pop lret (bad) movsb xchg mov push dec (bad) out xchg stos mov popa ret and or xor pop xor sub adc mov pop out xor stos push sub dec daa jae lret fnstsw inc les out pop aaa jl imul popa adc hlt out adc int push mov dec (bad) lock (bad) fist bound mov shl inc cmc popf out dec ret ja and sub loop or sub outsb inc aaa sbb jbe push jne push or xchg js jecxz dec loopne iret xchg inc iret adc lods fstpl ljmp adc in and jp out leave mov sbb sub iret lret or lock fnstcw adc jo stc cltd addl lret adc jo pop cmp (bad) in aad shrl mov xchg pop mov stos loope push lock dec shrb pushf cmp iret fild jg stos xlat jle lock sub rolb ds sub inc out aam iret dec mov xchg (bad) lret add (bad) xor xor out fs add out jle cmpsl push pushf daa icebp pop in out (bad) mov popa or call sub out imul pop push orl insl cmp cmovp mov pop fwait xchg push out cmpsl es xchg sub roll dec fcomps fisttp mov jne aad (bad) fldenv (bad) xor enter jle push jae mov add rcll out xchg outsl dec mov out jle fcoms or xorl mov rclb (bad) cmp out xchg movsb jne mov mov iret stos mov xor mov pop (bad) jae cmpsl push int (bad) imul pop cld push lahf (bad) shr inc into iret push out cli jmp and push push mov jp out mov jecxz aaa aas sbb xchg jg ljmp out cmp xchg sti jb out int push xor pop fs mov icebp fisubrl in int mov out iret loope fst inc pshufw xchg out dec or xchg les push mov into cli out aaa ljmp in push ret fmull jmp shrl mov iret mov adc cmpsl cmpsb xor fildl imul pushf cld ret iret pop jnp (bad) mov jl enter pop inc lea ljmp sarl stos adc mov into fdivl mov pop repnz xor mov and stos test clc std jmp das and in fwait ss ja inc mov ret repz mov sarl jne xchg icebp cli mov movq push (bad) rol xlat jbe pop test adc decb (bad) mov mov xor nop mov and adc out idivl scas push les lcall std int sub repnz mov add or pop and nop aas int push orl adc loopne loop test jle sbb xchg mov pop or decb cli push push jecxz leave stos and insb loope int insl mov outsb stc pop das out rorl adc jnp fsubrp lods fcom (bad) data16 dec mov clc (bad) xchg push jb bound xchg out adc pop sbb add pop sbb mov adc xchg jnp and arpl std mov mov mov (bad) out mov mov jl fwait (bad) or cmp scas fisub int3 push sbb pushf and loopne in jbe fidivrl popf (bad) icebp ss in (bad) out (bad) mov call mov js jl loop out (bad) pop sub or and sub in sub add push jo sbb pop out cmp pop out ds lock sahf xchg ljmp mov jno packssdw cltd bound xchg ljmp mov loope push (bad) out sub mov je and pop lods or adc and push ljmp add adc out js adc and xchg sub cs out add repz clc dec and adc inc mov out xchg fnstenv pusha jle cmp out cltd mov test out jbe cmc mov cmpsl fistp ja add mov sbb outsb mov fs push fmulp iret in sbb popf pushf mov bnd mov xor mov push sbb pushf mov out add lea pop in outsl sub mov loope lahf push sbbb adc mov xchg mov sub cmp sub std repnz inc out xchg jg xchg in push loopne (bad) cli ljmp out fwait nop loope lahf imul lcall xlat repz cmc fidivr test jmp int3 add adc test out pop or (bad) (bad) sbb in out mov inc pop mov xor jo mov and popf lahf pop pmullw push adc jno xlat int lret ja out mov lret out pop clc and xchg jl data16 notb fistpl or xchg xchg inc adc outsb ss mov mov cwtl fwait sbb (bad) sbb insb sbb pop bound imul push pop push pushf xchg adcl hlt or sbb mov dec xchg ljmp shrb imul hlt xlat add sub push mov adc incb insl lock mov lock pop mov jl jg popf int3 insb dec pusha loop sahf or pop xor jmp call pmaxsw roll out adc das push dec leave jns pop mov or push insb inc iret xchg add nop cs out pop cli out mov xchg js pop pop xchg (bad) sub in loopne lcall repnz push cmp int3 pop rcrl mov call out sbb lret int out in xchg and data16 out cld fldenv xor mov jecxz outsl dec ss mov jge sub cli in jo lcall or inc in mov xor nop fs xchg cmp into out pop outsl iret (bad) sti sub push out pop sub loope les xchg jl mov mov cmpsl jnp inc loopne out outsb push fistpl out push int ja xchg inc stos out movsl fs xchg push dec pop fwait insl in out xor jg cmpsb jecxz push out cltd pop jmp rcr push out popa sub mov mov out cmp stos push mov test cltd jb push jns stc movsb push mov clc sub out push (bad) sahf leave pop jge adc or adc (bad) out dec cwtl pop imul mov inc adc pop xor dec jg pop xor les daa pop push ljmp dec std ljmp loopne (bad) xor mov (bad) fistp mov pop test jl mov out jp in dec insl inc jne out xor mov dec (bad) (bad) xor add out adc popf sbb push repnz stos push ss push jbe arpl inc and mov dec fcomp adc leave jecxz add insb dec xchg push sub es in out (bad) dec enter adc cmp aam xchg int3 fldcw xchg dec dec out and push out mov cmp cltd push inc add mov xor adc cmpsb adc sub lret out jno mov gs stos sbb mov pushf ds clc push xchg jns out stc add lcall mov mov bsr test jae (bad) gs xchg in cltd pushf shr jle movsb push pop jmp lret addr16 pop out cmpsb mov xchg mov arpl jbe out add jge inc outsb xor or rol orb mov outsb push jmp add loopne and push lret mov out hlt mov and xor inc ret mov leave insb negb fstl gs das ss jge mov (bad) xor dec cli push cmpsb inc jae in out pop jg rorl or lea ja (bad) out mov adc (bad) out dec arpl dec aad scas push ret inc adc out push lret pop inc push xlat mov push (bad) dec out add sbb out addr16 or imul ds popf mov pushf push lea loopne jp mov mov por stc dec inc shl mov movb dec out movsl or sbb add xchg fldt fucomip (bad) dec xchg xchg mov bndldx ljmp out test add sub out dec or add jecxz out mov and out stos push repnz in addr16 jmp jb pop push rcr mov add out add sbb dec mov jecxz aaa in js nop out mov add jno jg enter in shr data16 mov dec aas push jmp not dec fldt jae out loope mov mov lock repz stos jp sub inc (bad) adc out rol insb xchg out popa mov lret and xor out cmp loop pop lret jle xlat out adc jae jnp pop lret int3 jmp cmp jno or out bound es pop inc adc mov (bad) rorb mov mov sub xchg push pop out add je mov fnstsw movsb iret cli inc out shr adc out jecxz cs ficomp pop das adc or jecxz out mov cmp xchg pop insl ljmp cwtl outsb pop mov mov scas icebp lahf fucomp in ret ret xchg imul xchg sarb hlt fwait out cld cmpsb rorb adc jmp (bad) sbb pop mov pop cmp inc cmc out and add fsubrp imul jl add lods out lock add out mov andl (bad) sub mov adc out mov push cmpl mov xchg in out dec fdivs and out push aaa movsb adc dec push data16 andnps pop and repnz pusha in cmp jecxz pop out jno ja shlb cmpsb ret loop push fcomi jne lods inc stos out fbstp insb jnp movsl xchg ret shll ljmp push das loope (bad) dec or mov out (bad) pushf mov adc addr16 pusha js (bad) inc sub in add push repz cmp or aad movsb enter mov xchg sbb jp scas out sahf out mov out (bad) xor sarb dec enter ljmp mov or push xchg in pop jbe push (bad) mov call fcmovnb (bad) stos aam jnp fist mov rcrl sub out mov and push push jne xchg out mov add out sub int3 mov mov movsl (bad) jl mov sub sub es pop sub ficompl mov fsub jne sbb lock in aaa dec mov xchg push (bad) out jne cmp push out outsb (bad) mov add mov imul mul testl xor out jge (bad) cmp cltd pop jmp pop inc icebp mov sahf iret sub xchg repnz or out cli lods xor outsb cmp (bad) fnop adcb (bad) add sub mov out cmp xlat scas mov outsl out pop dec inc int3 sbb sub out jne mov fistp cmp shlb xchg xor popa stos dec scas xchg out and rolb cmp dec inc mov cmpsb aas fidivl outsl pushw ljmp ret les (bad) mov rcl unpckhps xchg out repz in out test pop inc mov rclb or mov lds out mov mov and sub xchg in or jbe inc rclb out pushf dec fcmovnbe push xchg and mov leave js push lea pop add ja aam cmp iret mov out cmp pop test pusha (bad) jno out iret jns pusha dec cmp push pop repnz push out lock xor test or data16 je and pop (bad) (bad) pop sub out jnp pop ret pushf mov jmp cmp das mov loope cmp dec and pop push imul mov push lcall in sub (bad) and leave in adc test rorb pop (bad) xchg dec movb fldenv and adc fdivrl mov cmpsl mov push sbb dec dec and ljmp mov out sbb push mov sbb test lcall movsl rcrl jge fisttpl pushf cld sub inc test xlat in mov outsl push push or inc sti dec lods lahf or xchg repz pop cli mov inc fild fstl mov ret pop cltd mull into jmp xor fcompl loope popa insb arpl cmp fistp lds and test mov mov mov or cmpsl cltd (bad) enter jno out in insl push inc ja push out rcrb mov xlat dec fiadd out sbb mov fwait mov les test dec lcall sbb mov out xchg inc lods outsl xchg out test jnp test das or stc imul mov push mov dec mov dec insl jne out leave shll lods lret (bad) in out cmp inc dec loope cwtl dec (bad) or iret enter mov adc (bad) aaa out mov jmp out jb inc push xlat out scas in cltd jg hlt or out mov and loop pop sbb mov inc imull mov sbb sub (bad) out in mov (bad) cs ficoml push js dec es out outsb mov add (bad) sahf out test (bad) push and jno jmp (bad) out stc mov or dec out in xor (bad) addr16 pop pop adc inc out or lahf push notb mov ret das dec loopne jae sbb nop xchg test inc roll out inc mov mov mov pop dec aas jnp fsub jns adcl fisubr jp int3 push mov cmp cbtw out les mov pushf out pop adc mov mov mov pop aam push out imul je mov and out test mov adc push adcl out xchg pop iret jg je shufps mov pop in call arpl dec xchg jp mov fist or ljmp fucomi shrl mov into out xchg push xchg in out cs sbb xchg mov xchg ret cmpsl inc out (bad) push mov jae ds dec fcoml lahf je gs das or out lods dec daa cmp arpl push inc cwtl jg out and imul pop fiaddl mov jge out rclb or iret xlat push adc (bad) addr16 xor es out jle lcall push ss insb or or shr (bad) sub out mov and cmp xor imul cmp fisubr shr repz out int3 xchg pop adc insl cmp mov out sub out mov ss (bad) out fisttpll mov jge mov pop icebp cmp mov cmp aam outsb cmp imul push adc out imul lahf psubsb mov cld (bad) and mov out xor fwait shr aas popf out loopne add and push lea (bad) sub jecxz add adc push mov xlat xor xor les pop mov insl lcall loop sbb and imull and out mov movsb imul (bad) fucomip inc (bad) push call imul out mov out in out mov push daa pop in inc mov cltd stos push push inc out cmp or add cmp xchg daa cs or repz mov cmpsl dec xchg pop push pushf push cmp aas pop mov adc xchg je dec sbb out pop xor xchg hlt arpl xrelease je imul jge mov insb lods out mov mov sub dec cli out pop adc pop nop out rcrb repz popf rcrb fcomps into dec das mov pusha jge arpl inc pop (bad) iret sarb mov mov out or and out fildll (bad) push bound push out add lahf jns out dec lods xor cmp scas mov inc add xchg mov pop push lcall dec xchg rcr or push pop aas cwtl mov push and ljmp pop pop test cmpsl insl imul sub out jne into xchg fdivrl test pop fist mov leave insl movsb cli sub imul or xor jae outsl gs mov lcall cmp testb movsb lock out das mov jne and in scas out adc inc aam popa sub mov out push xor (bad) fsubr add fwait cltd dec jno jp jo ljmp ds xchg push sbb lock out insl sbb adc out mov ficomp add add insb inc push pop bound mov jno dec adc xor out inc into cld in sub cwtl push jecxz push adc cmp les loope mov inc notb pop out aad inc mov outsb loope arpl pop jl cmpsl (bad) pop les jo dec out (bad) add cmp movsb jns push ljmp lock xchg das pushf cli push shlb add fidiv cli mov insb das in xor jecxz lret out cmp mov stos pushf in out xchg fcompl fs push xchg out stos lret adc xor mov inc lock mov adc jmp xchg or test in loopne sbb push mov out sbb call data16 (bad) push mov ds out in faddl sub cmpsb adc aaa xlat jmp clc mov or jg dec adc stos movsb cmpsb out stc es in push insb pmaxsw pop inc ss mov pop add ret ljmp and movsl dec adc imul (bad) mov bound in dec pop inc push push push imul out shl inc idivl in int3 loopne mov jg out fisubl in shr movsb dec nop call lods sub ja loopne int3 cs dec lock adcl ret call (bad) and pop lret mov rcr mov or shrl in in pop aam pusha adc call mov scas mov (bad) xchg mov sub rcrl je mov out pop mov in lcall (bad) fimul xor out jl popf mov or jp cmp addr16 out xchg xchg dec (bad) hlt mov shr popf jle and mov mov jns ja sbb popa daa jne (bad) or rcrb mov xchg add xchg mov out (bad) and dec into gs xchg push in ficompl cmp mov inc test popf (bad) repz in out std lods pop xor add xor jmp es add divl in out xlat shlb enter lds sub mov incb icebp pop jbe lds xchg push out pop outsb xor aam scas mov push out icebp gs xchg mov adc mov sub xor jmp lret cmpsl out pop push out sub repz xchg (bad) jp cld xlat js fdivs push and bound insl fcmove ret test out pushf xchg jns mov xlat push pop sub dec scas push iret pop pop out (bad) aam or lock mov in call out insb mov popa clc addr16 lret inc pusha out andl jmp lcall sub mov cmp xchg and cs sbb push popa out xchg aas push (bad) out popf cmp imul push out jno aaa mov out data16 cmp pop push dec pop push ss rcrl cmc fstl (bad) imul sub push out mov in into mov xchg adc mov pop add push aas xor pushf push or sbb push or fucomip jle pop in pop arpl and lods xchg mov mov cmp jnp fimul adc loope in lock ljmp adc (bad) pop and in cmp sahf insb cltd mov push fistl bound cmp cmpsb jmp aas mov out xchg (bad) xor pop xlat push sub inc push xlat pusha pop adc jb sbb and (bad) fucomi cmpsl flds (bad) fimull jbe nop mov out mov inc (bad) cmp jg mov xor xor pop cmpb inc or mov jo cmp out push sbb mov push imul or mov ja and cmpsl or stos icebp jge scas cmp or mov in call (bad) jae repz mov mov insb jno out (bad) (bad) lcall rol daa (bad) cmp adc fiaddl pop movsl pop mov out or cwtl lret out push inc notl pop les push aad adc fsub fsubrs out shrb add into ds jg dec mov or outsb out fldz and dec cmp inc dec ljmp fsubrp jp or mov shr (bad) or add adcl push ljmp dec out mov mov add push push clc (bad) and cmpsl and or jmp scas dec xchg dec ror (bad) cmpsl mov sub mov mov push mov in and inc out insb mov mov ja ret leave (bad) outsl out jecxz jl mov pusha pop (bad) add add out in mov mov pop mov out push mov ror sbb scas test xchg xlat data16 jnp jmp out or push fiaddl scas out jo icebp mov (bad) jns ret in dec outsl jl sbb bound mov push mov out pop dec fs mov xlat sahf es outsb cld sub xor and out sbb ss cmp inc dec or sbb xor out ret mov xchg cs jp inc (bad) xlat iret sbb mov in pop pusha jecxz out subb ficoml in out inc rclb subb imul repz iret dec and popf mov push lods xchg adc or fdivr out ss sbb stos out sti add add add lods dec add pushf aaa out scas imul xlat inc push psubsw sub mov mov cmpsl jecxz push jo pop add cmc aam sbb aaa and imul aas and cmp mov sbb out and add lea ja sbb fwait shrl lods cld xor mov fwait inc jge jb insl out mov nop imull dec loop movsb into mov in decl shlb jp sbb mov call pop fcmove push out jl sbb pop pop or out (bad) cmpsl lcall call xorl (bad) out jae test (bad) insl fucomp sahf push movsl pop pop mov outsl cmp lods mov (bad) popf pop jo nop pop lods faddl pusha in xor rcrl dec pop push jge imul xchg out mulb dec pusha (bad) inc lods mov lea cltd lahf jl add cmp inc hlt jno dec out lcall outsl cmc pop rcrb xchg pop lds and push fiadd out inc inc adc lods xchg push enter jb insb daa fisubrl dec pop (bad) rcll out lods pslld mov pushf jo imul out pusha dec cltd xor frstor (bad) or insb popa sti cmp aad in push std out adc pop fwait push jmp adc pop imul in pop stos pop inc sbb add or int3 test push (bad) fimul xor push out sub xor add or add jo pushf fcompl out insl jmp cmp out mov (bad) movsb or out push mov lds out cs imull sbb aad ljmp ss movsl outsl push sbb and lret push pop lahf dec jne aaa lea test popf xor mov out xchg imul push addr16 add pop mov lock jge push out mov inc dec nop out and and fucomi popa ret push rorl mov stos out adc sbb (bad) out popa or lahf cmpsl call out mov lret and in dec mov repz sub clc dec out pop dec xchg push out pop nop jg cmc int out push jae pushf push xor dec xchg pop mov out mov mov jg out or sub out xchg mov in push sub push inc out cld ljmp (bad) adc out std pop push insb out and (bad) mov out cmp popa lret xor arpl xor mulb fcmovnbe push (bad) repnz iret lret data16 adc mov scas aad out dec flds (bad) pop popf out push fisubl pavgb addb cwtl xor inc xchg mov dec ror sbb jbe xor lea or xchg and pop test int3 xorl out mov or cmpsb loopne js ljmp cmpsb lods out subl jns jb mov xchg push or in aam out icebp inc (bad) xor push add lcall mov or xchg mov rorl fwait ror out popa fldcw fsubr mov mov pop cmpsl push ret sub cwtl mov mov xchg dec out dec fidiv cmp sti sub mov rcrb sets (bad) mov popa out inc sbb cmp xchg (bad) gs adc dec push xchg out mov je popw and xor sar test lock daa sub cmpsl mov dec push pop out mov (bad) daa fild stc xchg pusha je int cli dec out ss bound lcall cld xchg repnz in inc or inc fldenv mov dec push push xchg daa jne cs out mov adc std fstpt mov sbb loope shr cmp pushf dec ret sub mov repnz daa pop out enter and int and out popf (bad) out sarb fisubrl pop int out sbb and push call dec xor in mov and in in cmc and lea fsubl sti sbb sub lock leave (bad) adc inc mov xchg test xchg mov pop sub ja sbb sti test out add jle dec add out in mov test clc lret lahf adc rclb ret cs out fildl dec icebp test in repz jo fildll mov inc cmp mov dec pushf (bad) cmp lea movhps sti or shr mov (bad) dec (bad) push jecxz je out fldl mov jnp adc cmp lahf jno adc (bad) icebp or call loop fsubrp sti xlat sub sbb inc out (bad) iret in mov inc inc incb mov out (bad) insb jb xchg mov pop add mov fwait leave iret xor ljmp out push and mov out dec cmp movsl cmp mov ret xchg inc rcl std out inc jecxz mov xchg lods out mov shll ret (bad) hlt (bad) fldt in cltd adc add xchg cs stc (bad) pop push faddp adc in fs mov push mov (bad) mov pop and inc out push aas inc fxam les out std out pop and dec shl dec loop mov insb out mov mov dec aas dec jmp dec jb imulb xchg dec (bad) sbb clc xchg mov push data16 or jl popf int push sbb outsb jge (bad) push aas out push add mov shr out xchg sahf rcrl xchg adc add fildll inc pop outsb shll fsubrp cmp push sbb movsb fstps dec ja iret stc sti jae inc call pop lret int3 fnsave cli mov or mov iret adc lock (bad) jbe xor out pop pushf sti and int pop jl lret mov inc lahf pop xchg jb jmp loope rcrb imul adc cmc stc out shll jae out pushf cmovp mov (bad) jnp mov jns stos jmp movsb out cmpsb dec xor subl pop or out bound ret adc sub clc mov pop data16 jo ret ficompl iret xchg stc sbb jecxz or jns aaa outsl addr16 incb loop in iret das in mov out cmp jae add jns push push out dec push (bad) xchg (bad) mov fild lea push fcomps ljmp cwtl mov sarb (bad) ljmp out sub les pop pop (bad) sbb aad cmp insb and mov daa jg pushf sub popf fsubp rep repz mov in stos shr xchg inc out dec hlt push loopne jbe js push mov cmp sub xchg les enter add into loop mov je shr push lock cmc fsubl sbb mov pop ljmp jae push xor (bad) jb and fdivr add std lds lea icebp sub fistpll mov jb fsubrs test out add (bad) lock inc imul cli pop lahf and sbb jl xchg jp dec dec stos xchg loop push jo xor adc cmpsl jae lcall sub (bad) fistpll xor outsl add addr16 jl push pop sahf int3 push mov xchg nop in out add mov rorl (bad) ss adc pop (bad) gs add mov cmp daa push out fsubrp xchg and out (bad) cmp cmpsl outsb inc rolb out dec iret xor cmp inc imul out and arpl test dec adc cli ljmp out imul or and mov or mov adc inc xchg and (bad) shl loope scas jecxz out lods outsb xor mov divb jge push ljmp and push jbe out movsb push and (bad) fbstp out or and das and stc mov (bad) mov scas xor out gs imul push aas mov out dec add pop aaa shll loop pop or lods pusha xchg lret les jb cmc in mov outsb out xor sbb (bad) repnz iret es gs in ljmp mov shrl adc (bad) mov shll call in pop fldenv movsb jl aam fs lahf movups out shr jecxz push out leave mov pop jp xor pop imul mov popf vaddps decb or add fs sub loop mov sbbb ljmp out mov lret push scas fcomps clc xor pop jecxz dec sbb add out sub xlat push out cmp fucomip pop mov icebp add cwtl adc xlat (bad) test out adc loopne mov push out push loope dec or dec inc (bad) pop pushf shlb repnz mov push pop cmpsb jp arpl sbb push lods adc cwtl inc pop and inc (bad) xchg cltd sbb test dec out pop mov mov inc xchg sahf es popa ror lret je leave pop xor in in adc inc xchg cs mov xchg mov adc fsqrt enter test pop mov pop jmp mov and (bad) cld in nop lock call cs sar push dec ret out mov push adc out mov je and mov cli mov pop mov pop out es pop inc aas cs in mul cmp pop test inc pusha adc xchg xor insb psrld in sbb cmp push aam (bad) idivl out in mov adc pavgb inc out cmc (bad) jmp stos loop inc xchg aam jg (bad) mov pop lcall aaa nop out mov xchg mov aam mov stc int jecxz dec out jne and bound dec out cltd xor inc scas dec pop lods push loope jo ret sub aad xchg or popf shrb pop fs out cltd push (bad) iret xchg mov aam rorb xor pop xchg loope dec sub (bad) pop xchg movsl xchg aam mov mov out (bad) inc dec dec and lods sub int sti rorb stc in mov inc addl jnp pop pop mov mov sbb xchg push jmp int mov movsb out sahf cmc dec jo pusha jnp out inc pop add mov cwtl (bad) sub call cmp pop rcrl jmp dec ja (bad) in rcrl mov (bad) out mov loope dec out lcall stos out ret xchg jl ljmp cmp ds xchg out bound hlt adc notb push pop out or cli xor sub ss jmp mov mov lock pusha in push mov out aam dec add cmp ds fnstsw stos test fwait lea push int3 jl sub loopne out and daa pop sub xor ja mov pop out nop and imul xchg in aaa loope lock jmp sub ret sbb sub cld bound dec into xor pop ljmp jns insl out inc jecxz pop in fwait std in or sub repnz cmp imul ljmp out stc push push mov call aam out jns out shlb ret aad lock mov movsb dec mov out sub (bad) push js mov dec jo pop sbb inc insb adcb data16 cltd push in push insb push jle lret inc mov insl jo loope push jmp call (bad) aam pop shlb out fnsave mov add pop push mov cmp into jae jle xlat inc sarl out mov sbb mov xchg mov (bad) push ljmp (bad) ss push sarl out mov sbb xchg or mov xor out adcl imul lretw loop ret (bad) popa out add ret bound sbb jl jmp int das push aad mov out (bad) es (bad) sub lahf into inc clc stos sub mov in enter push and pop pop xor out dec sbb push popa inc shr inc fxch cltd (bad) jmp xor push out xor ret jne pmaxsw inc jbe (bad) fisubr and pushf ds sti popa pop out mov fadds mov out cmp mov lahf mov mov out sbb stc xchg out iret xor sub sub cld push lock and mov shrb out clc cld fs out loop jmp sub int out dec sub adc push xchg shl or push fucomp pop xchg and clc jne out cmp sub jb lret add push sbb stos pusha and (bad) popf xchg data16 mov pop lods out cmpsb das xlat jbe cmp aas sbb subb mov dec out std call push push adc pop sub xchg out or pop adc movsb mov mov pop jg fsubl in pop push push pop out mov js lcall jecxz ljmp (bad) (bad) cmc mov in jmp cs gs insl inc mov in sub xchg push or stos lea cmp ret out adc (bad) jns (bad) fbstp lock flds lea jb in jge fisttp enter fsubl loopne lcall repz sbbl pop out inc inc mov bound pop pop out cmp or jb stos xor push sbb loope imul cmpsb mov aas mov sti out or adc out pop jae,pt leave stos (bad) sbb and lods mov ror cmpl cltd pop insl idivb fisub sbb and out cmc push aam sub or lret loopne notb insl jo out shr pop rclb in pop ljmp jbe push out sub fildl sahf (bad) fildll mov adc iret sysenter mov inc out mov outsb out pop inc fcoml xchg mov inc popf cmp mov dec (bad) out dec jbe pop iret test mov cmp xchg mov mov or ret out mov inc jo xor mov lahf lods lahf dec les (bad) in jge ret and xchg pushl aam (bad) inc arpl in sub movsb out and stc int enter jmp loop inc in push adc pop fucomp lcall mov mov (bad) out int3 test jecxz mov and or out imul cmc sub push bound outsb fsubrs in mov dec add fstpl aas outsl pop cmp fimull cltd or cmp lahf mov mov mov fldt jecxz dec cmp mulb (bad) iret fisub inc mov loopne lock sti inc out fisubr js aas sub leave movsl mov stos repz out es xchg je inc jge inc mov mov outsb xchg arpl std cmp add xchg fs push test fsubrl fistp fldl lods and outsl pusha shrb sbb cmp out add (bad) leave movsb push sub pop out popf xchg repnz test inc push imul pop scas fwait sub loope outsl fnstsw imul insb (bad) testl xlat fbld pop push and mov mov rcrb insl push inc out push fcmovne sahf (bad) pop movsl mov add rorl rcl pop and pop out cli out push mov mov je jmp ss cwtl push xchg out lret mov mov or mov out (bad) fistl aam ret fist out data16 mulb push mov and out inc stos inc xchg pop scas adc inc call out aad adc out dec decl jmp inc outsb mov push dec jmp pop push pop sbb and insb xchg xor dec xchg call sub inc out stc push mov jge lahf loope (bad) adc lods int insl inc loop out or in ja out icebp adc data16 insl hlt cs out mov test pop insb call ret mov adc test xchg shlb cmpsl iret negb or ljmp sub inc movsb xchg pop jb xchg pop pop rorl inc inc loop push insl out adc (bad) jmp mov out mov mov pop lock cld lods imul pcmpgtd ljmp or in divl add (bad) insb fimul push mov mov sarl das (bad) cmc leave sbb sbb movsb loopne sahf jmp loop popa xor mov mov insl mov dec frstor dec out inc jno pop imul out fisubrl sahf xor pop cmp jecxz out add xchg cmp add mov mov mov orb adc jmp and and (bad) out rcrb xchg inc jae cmpsb jmp add mov add scas rorb push scas jmp fucomp mov int lods ds cmp lahf sbb stos xchg out and call (bad) adc jns pusha repz loope in sub pop cmpsl arpl pop xchg push imul fstl jmp out out in cs pop daa out repnz xchg fildl xor push mov push and sub movsl xlat stc pop mov test inc out mov xor gs add vaddsd fsubrs or xchg repz mov xor sub push test fs sbb jo incb sti popaw mov les jp movsb pop je or loop mull xchg out pop jle sub (bad) mov pushf pop icebp scas fidivrl mov repnz jb pop mov jp ljmp xor mov jb jmp pop nop mov jmp (bad) or imul aad shrl daa push mov mov xchg out test push into out cmpsl in jae pop xchg push add cmpsb scas out frstpm(287 mov mov repnz stos xor push cmp ficomp adc out mov es push clc out mov add out lock out inc mov roll fidiv xor lods xchg out dec in iret jmp mov ret out lret push sahf call aam sti jno out push fidivrl cmp pop out mov out sbb addr16 popf xchg das mov cmp cpuid jne xchg inc (bad) mov pop cmp dec aad fs sub mov dec mov out pop call addr16 enter fsubr ss xchg mov mov mov call lret (bad) out and pop jns dec out xchg jnp mov pop insb pop arpl or push call fwait outsl out add (bad) push jb dec call mov aas (bad) in add out icebp rol shrb imul xor fdivs movsl cmp scas or shrb aad (bad) test sub jae mov pushf fsubl xchg out aam sbb mov xor (bad) addr16 les (bad) mov pushf popf andb aaa aad mov mov mov fsubr inc adcl inc sub repz pop ficompl out cmpsl pop sub mov mov mov sub rol adc sub jbe adc pop cs xchg mov mov push inc and dec jo loop fsubl push add out push push sbb xor rcrb out loopne adc xchg push push dec mulb out pushf lds leave out lret cmp and in push lahf fsubrp fwait push xchg lock rcrl fdivrs adc subl jp add mov out sub leave lds popa out or out xchg jmp cmpsb (bad) out ja inc je cli (bad) enter das lds (bad) out dec rclb fisttp pop test and cli loope sbb (bad) sbb and xor mov jl (bad) jb pop or cmp add in testb into sub pop xchg loope popa js out ret xchg unpckhps dec fistpll jl out fildl add xchg shl lds mov cltd xor out and shl jnp call jg lret out pop mov (bad) pop stos add adc jle out out sub xor mov push je pop stos xor mov mov outsb xchg jne das and shr ficoml adc loopne mov loop scas imul or sub stc (bad) out xchg movsb xchg out into insl xchg push add pop fisubl hlt sahf lods aam inc int or push lahf mov fucomip sub out push in cmc sub int xchg out mov mov inc fidivr push pushf in aas fld1 pop scas iret sarb dec push std xchg sti (bad) jbe jno mov push and call repnz xchg insl lcall out push fcoml dec mov add xor sbb (bad) mov inc mov mov aas orl js subb in popl pop inc push xchg cli out imul mov xchg mov add (bad) clc call mov fnop mov loop dec out popf (bad) mov pop pop enter lock dec cmpsb mov loope adc shlb lds call (bad) cld loop xor mov out jnp insb sahf dec xchg fistpll out push (bad) jb (bad) loop cs sbb loopne cmp aas jmp sbb addr16 and adc gs adc in sbb adc inc sahf out lods dec out jb loop jg add out ret movsl dec sar xchg pop out mov xchg out gs or fild push in pop jl (bad) out (bad) adc xor mov push pop ds test cmpsb pop inc gs out out and (bad) out jg cli pop scas inc pop aaa out (bad) xor fidivr pop stc adc adc dec out dec push push (bad) or aam (bad) lahf cld stos (bad) and mov test (bad) dec inc packssdw or add out gs jl out fs (bad) (bad) cli inc mov out pop mov push xor dec pushf ss out push add and idivl ja pop mov (bad) lods sbb add xchg into mov out shl dec fidivl (bad) jb cwtl loop pop jo pop cmp cmp jge out dec out lahf cmpsl mov out popf mov sbb sub movsl inc loop aas add cmc lcall insb push loopne mov lock lods or jecxz in fldt xchg repnz mov and push pop out repz mov xlat (bad) stos adc mov out adc es loopne scas pushf icebp in dec out out push jp jne (bad) or es out fdivrp or std ljmp fwait sbb push int icebp jne enter pushf out ljmp jbe dec aam sub out or je decb xchg cld mov movsb insb or out mov xorb xor push cltd jp dec movsb sub es lods adc dec aad jae bound out in mov idiv ljmp lods adc cmpsb imul push arpl adc ljmp movsl (bad) cmp out xchg fistpl loope sti mov cwtl in cmp clc xchg dec mov mov jbe sub iret pop (bad) jo out jecxz inc in or out mov (bad) mov iret repz mov cmpsb sub out mov out (bad) mov in std popa sti loop inc xor ljmp jb movsb pop es out xor or jnp mov pop repnz adc and iret es test rcrb leave cmpsl pop mov pop jnp add jns jae scas adc adc xchg sbb (bad) out xchg push push mov in lds xor ljmp xchg dec add jecxz in shlb incb mov sbb (bad) mov jns lods xchg and lods cmp mov iret sti dec mov out fstpl mov cs dec pusha loopne sarb xor rcrl jle pushf push and cmpsb pop int rorb fisttp mov rol add ss pop xor xchg imul rcrb pop es or push popa push push lods out dec outsl fidivl push sbb out jns gs out jb pusha xor jbe mov cmp loope loope pop sub add pop sbb stos sti js iret xchg inc (bad) (bad) lock mov fistpl xchg mov cmp sbbb test (bad) outsl sub inc and cmpsl or out xchg mov das fnstsw pop cmp insb mov pusha iret inc push mov test cmpsl out stos mov mov fwait add in lods jmp xor clc pop cmc vmovntps xchg or lock and cltd and sbb out jae pusha pop fcmovnb adc out cmpsl je sbb out ds dec and aam outsb mov out inc pop jno imul out or inc jb sbb mov and notb mov sub jo pop pop in inc loope les rcl out movsl adc or mov push out jnp or add push or rcr out (bad) ret test cmp out cmp or jnp stc push pusha out orl fwait out adc xor and test pop (bad) out fsubrl fidivl test or out dec cmpsl and pop scas out aad jae out (bad) jno push xchg and in pusha imul mov adc cmp sarl mov jp out xchg movsl imul mov es lods push sub daa pop imul stos aad inc sbb sub enter push push push orb insb sti push int (bad) ss (bad) aas movsl out idivl dec test imul jne xlat aas cwtl inc cmp arpl inc pusha ret out iret inc repz scas pop out jmp jle or ret sub inc loope out pop sarl dec add and out lods mov out popa jmp mov iret into out lock (bad) jl lcall add out xor sub (bad) hlt mov (bad) or rcl cli out inc pop add and xchg jno imul sub out int (bad) mov mov dec sbb in add cmp aas roll lret sbb pop popa inc rclb lret mov add jae pop adc and (bad) (bad) dec enter pop (bad) loop ljmp ret into in pop pushf xchg out sbb lds and or test je sbb out xchg dec push lret in lock mov out outsl or pop pop insb cmc jae push dec outsb add pop jb ljmp mov xor dec test or inc stc ds jge clc lock mov (bad) and xchg and loopne iret dec dec fs rolb jle mov ljmp out movsl popa push add data16 shr repnz mov xchg insl dec pop dec push fnstenv ljmp and out inc jno push mov xchg int out cwtl test and out jnp add ss (bad) cmpsl out lds pop dec add gs jecxz or loope sub ja sbb inc aaa loopne mov dec cmc push out and aam dec dec mov push inc or test add mov jb xchg dec xorl in dec scas push and ficomp gs inc xchg mov clc movsl test xchg (bad) adc icebp outsb imul clc mov shll pop out sbb push sti out mov jmp clc lods (bad) sbb test jmp jb xchg out push dec aaa cli int jp out and xchg jmp mov add dec fild push aas sub cmp or jle rcrb in popa test out cld xchg repnz fcom xor and pop rorb scas ljmp jb pop pop aas ljmp movsl out inc scas sub call aas and lock sub rcrb out aam jne fildll cmp xchg inc lds out (bad) rol mov out adc sub pusha inc cltd mov sub out das jbe inc in sbb stos rol in jne push iret clc mov push in (bad) inc in sbb arpl out mov pop rol out call popa dec pop out nop daa outsb in imul stc pop push out add dec adcl insl mov push mov xchg add ficomp hlt jmp fisttpl shll rorb xchg shll mov cmpsl insb add cmpl fwait out and mov xchg out out xchg sarl cwtl jns dec int3 out mov out es andl (bad) jo loopne push ja sub das jle mov icebp add sbb lret jge ja push lods in sbb xchg (bad) or mov xchg add scas dec jne dec inc xchg mov jae stos int out sub or inc (bad) lcall cmpsl ror adc and push lods (bad) jno jmp imul cmp mov addr16 gs mov sub pop out xchg and jo imul insl mulb stos add loop js jle sarb xchg lods sub xchg push out xor jg aam push enter out (bad) lret mov out arpl push mov ja (bad) xchg ficompl not jge inc fs (bad) loop mov fcomps insb fmull mov pop cltd jb das sahf out sarl jmp jle push mov or out pop test int3 (bad) je mov (bad) lret popf pop pop mov lods out ja and pop lods leave (bad) cmpsl xor jl mov out xor mov out outsb mov pop mov lahf rolb push push jnp sbb pop sbb sahf inc inc lret aas push sti xor outsl xor jns or ret lahf loope sub pop jl insb (bad) outsl out push fsubl es push in xchg jb test adc inc mov cli daa lret (bad) int out xchg cmp adc gs scas pop arpl cmp ljmp lds out push lahf mov jne cmp or out push cmpsb add jo and ret push call jl ljmp movb inc push pop out cmpsl mov das push adc enter aam add jp test push out xor lock add loop inc repnz incb decb inc pushf popf shrl lock shr jle outsb mov out cmp iret adc out sbb movsl xchg (bad) xor mov out add leave (bad) out out add (bad) or dec call pop nop sub je mov enter mov fidivr xchg mov (bad) jb push push cmc fistp loop cmp xor sub iret scas dec sub test jns cli test loop push bound lret and lcall inc addr16 sbb out mov cli cmp (bad) jmp or pop test insb in fbld enter fs (bad) loop imul out lahf xor push rcll pop fwait repz cmpsb cwtl out xchg push in sub test dec imul pop dec sub xchg xchg rolb (bad) out shll out mov loope fsubrp test movsl (bad) xchg sbb or cmp sbbb mov shll xchg cli fld js out or hlt xor out std lret dec xor add shr cmpsl mov out test lods adc dec dec adc icebp or out pop and sbb inc leave mov mov push adc push into cmp icebp adcl jne xor cld divl xchg xchg decb cmp out cmpl push loopne mov dec inc or mov (bad) cld in lods inc call mov into out mov imul ret ljmp out xorl jo loop stos rcrb inc popf out xchg pop cmc sbb sub lcall push insl aas push fild dec lock pop out nop mov mov insb leave cltd sub lcall pop out out daa xor fsubrs inc pop iret pop insl sbb in push cmp lret icebp outsb xlat (bad) sub aad cld push idivl push out cmp or out cli bound push stc adc mov enter (bad) pushf out (bad) flds and jb int pop das cmpsl push mov aam stos (bad) mov test push in (bad) repnz lcall lock scas sub and sub cmp in jno or adc fs cs scas call or sbb stc mov stos add jnp (bad) mov out leave aaa mov test xchg movsl push enter xor push pop (bad) adc inc aas sbb out xor mov mov pop mov out cmp cmp stos int3 fs fimull call pop (bad) ja pop cmp mulb das fcomi sub adc mulb loop xor out enter or push roll out test lods push pushf push jne icebp out push movsl loope sbb test jp mov iret xchg lods adc cmp scas pop call push cli arpl adc lea pop jmp jns cltd int jge xor fisubl jns out push (bad) movhps shr data16 push xor bnd out scas (bad) out sub or mov push mov mov push arpl test and dec lret out jb out jle movsb mov sbbl loope outsb in test arpl rorl inc out mov (bad) je lret out inc jg ret inc dec and ss mov ljmp leave jo daa add sti sbb jg add mov pushf lea stos sarb loop add (bad) sub pop ljmp cmc jmp push out fnstsw aad cmp cld es out rcrb dec stc fnstcw in in mov push and push ss test out xchg adc mov cmp sub int3 add inc out cmpsb fcmovbe out pop in xor das cmp add or call adc inc push dec pusha (bad) xchg mov ss ret jge js lods jo out ljmp fbstp jne out adc (bad) fsubr clc lds rclb ljmp loopne in scas sbb cmp movsb les and ljmp and mul add addr16 les stos or push call lcall negb in decl psrad scas in lahf or xor into cmp iret arpl into iret adc push xchg jae (bad) lea inc (bad) sub jle rorl adc sbb mov das jecxz in push out sbb in jno jle,pn sbb adc inc iret outsb cmp push add int sbb in (bad) incb push lods jge,pn and out lea rcrl out test jno dec movntq jae pop in dec or out adc add iret pop add sub pop cld or jae cmp sbb stos lds invd push sub in scas out leave rclb pop inc xchg popf cltd mov pop jb lahf cs push out mov push out lock dec adcl fisub daa ror aas mov sbb mov iret ljmp xchg inc sbb sbb push es dec (bad) mov out push loop in daa jno lods fistp mov and jg add data16 xor fcomps mov arpl (bad) cmc call ja mov push out mov pop jno push cmp test sub in pop xchg in test ret movsl ss cmpsb jmp xor gs jl push mov jo in loop jge stos out sub outsb daa or out dec and fs jbe cmc nop inc fisubrl jge xchg call xchg out enter cmp imul dec adc loopne fisubr sub in (bad) sbb iret lods inc (bad) pushf mov in in out xchg shrl xchg fist mov hlt cwtl sub or ss (bad) fs movsb lcall or cld jbe sbb (bad) ljmp gs cltd out lods push mov lahf out adc adc inc lea pop in in push out jbe pop notl out (bad) out and (bad) fisubrl xchg lea daa out push push push loope sbb out (bad) dec addr16 out out pop mov xchg shrb xchg out fnsave adc jbe out shrl outsb pop cmp jne adc mov out adc je mov sarb mov out lds stc stos add mov sbbl jmp (bad) int loope inc outsb or push xlat cmp mov je loop aam out cmpsl into sub data16 (bad) aas ds repz cmp mov mov (bad) dec out dec inc add xchg out adc iret subb push into dec outsb fild jp mov fstpt (bad) lds imul sbb aaa sub movsl cs leave xchg popa push dec insb out xor mov adc mov nop mov mov insb push cmp mov (bad) outsb negb out adc xchg jl fs xor mov es outsl or sar out data16 mov aas or imul out cmp push add shrb fsubrp adc mov push rcrl (bad) iret fpatan xchg xchg test adc cmp jl xchg int das loopne xlat pop sbb mov push shr (bad) cld lcall mov sarl out hlt rcr cmp sbb dec mov sub mov cmp aaa test mov dec out push jecxz xor out dec in mov sahf add xchg pop (bad) push lods cli mov rcr lea (bad) out jl ret fildl fistp test rorl jle repz mov pop cmp mov int3 jmp fnstsw jbe push loope repz xchg pop fs sahf jo add aas sub jb sbb add xor scas pop cli sarb mov aas xchg inc fidiv ljmp jmp xor inc mov inc ret pop jae aam out in out add jb mov pop pop sub test outsb mov out fstpt (bad) jmp xor out sbb ret adc lds pop xor iret xor out sarl push xor and loop iret jne out sahf inc add mov jnp movsl test out inc jb in pop dec add sbb mov sub iret out push cmpsl fisubl pop cmpsb xlat adc cmp out jmp lahf pop push mov stos xlat jecxz jnp push pushf cwtl (bad) scas jge push pop dec adc inc lock jnp dec in adc cmpsb pop int3 lea insb lods fistp test in outsl inc test mov pop es fimul fs or stos mov fbld (bad) lds out das lret jns pop push push ljmp adc sub ljmp out or pop data16 mov dec cmpsl adc sbbb or lret out arpl inc dec xchg mov sub in (bad) lock daa pop jbe dec push or push out jl sbb or aad out jb ds mov arpl shr imul cmp mov mov inc dec and mov out and imul push pop pop cmp leave or adc pushf and mov insb cwtl push pop mov push push push dec and int3 (bad) mov iret cmp out out sti movsb das (bad) and vpshufd dec into out scas pushf idiv pop mov shr sbbl scas out cmp ret sbb mov loopne ja or sar dec arpl outsb xorl mov push in inc cmp cmpsb movzwl mov push mov ss int3 mov cmc popf bound xchg out imul sbb outsl mov fwait add ljmp dec out lret xchg fs xchg fild xor cli imul adc push out insb dec popf adc adc out mov push rclb (bad) cmpsl loop shrb mov pop mov mov out pop ret test inc pop dec pop aad iret xchg pop mov push popa es sbb in sbb push and add dec pop ja lock sahf mov rcl pop pop int mov stc sub mov sbb (bad) icebp cli pop in push xchg pmaxsw inc pop jp add inc sbb ss mov in in shl inc out jae das daa pop faddp pop out imull aam out xchg in cli les jo into out out sub fiaddl std pusha xchg rcrb rolb int jl push pop outsb xchg cmpsb xchg cmp mov or push imul nop in push dec and int out repz insb testl lret pop out dec pop sub in fsubp data16 mov mov ror test pop pop (bad) idivb xlat ss lods jge and insb sub lea inc (bad) push pop scas sub mov or out repnz push jg loop out ret adc addr16 mov iret xchg ljmp pop jg mov inc pop cmp daa mov jle out scas and sbb loope jmp shlb xor cld fcompl jp or cmp (bad) and in stos out push (bad) (bad) icebp cmp and data16 inc aaa or lcall aas sbb iret adc adc in (bad) out hlt cld cmc enter jb push pop aaa daa push ss xor shr imul (bad) stos lahf push jecxz stc iret dec and out in xchg imul out out push idiv inc incw aas ja dec mov push out mull lcall xor roll fldcw ljmp gs push fwait sub pop kmovb add xor (bad) loope das lods (bad) scas jge push dec call sahf add inc fistpll mov cmp in int out mov mov out call (bad) push cmp push out add sub in das in pop iret xchg fisubl pop pop incb mov cmpsb sbb test nop arpl cwtl adc add mov pop ss out add inc mov incb cltd jecxz or fstpl xchg inc cmpsl loopne mov sbb dec mov pop push add out lahf stc fucomp ljmp dec xchg sub inc push xchg shr xchg cmp jbe fcompl sub imul mov push adc out pop jp (bad) mov sbb mov lcall hlt or in daa ljmp fistpll cwtl sbb cmp mov out lahf jo or insl lock arpl lods out fisttpll ret mov mov push ret je aaa rcl mov cs fwait arpl lods inc sahf push outsl movsl bound mov lock repnz out jl cmpsl adc sbb inc es ds dec stc out clc icebp mov xor sti xchg es ds xor fnstsw les lret loop or xlat mov push pop fisubl ljmp dec fstl mov cli mov sub cmp and sbb dec jnp repz ljmp out je sbb pusha in (bad) imul scas dec mov cs lods loop mov in out dec push cli cmp js xchg pop cld ds cmpsl test cmp out mov or mov sub sahf dec hlt pop out shr fidiv out sbb adc sbb adc mov add movsb and cmp lcall fucom dec push bswap scas in mov mov dec (bad) pop outsb cltd jg cmp (bad) push mov xorl dec fildl je cli stc outsl jg dec out pusha out cmc aaa cmp lahf adc ljmp hlt xor (bad) mov mov out arpl xchg jmp ret in sbb out aas xor or shl out ljmp sub (bad) shlb xchg out (bad) pop adc pop pop jmp mov pop push es sbb add out mov pushf call stos cmp iret out pop push out add jge aaa adc out lods aam mov popa aas cwtl mov out addr16 sub xchg pop aam mov lea into clc push adc nop jae dec jl xchg andb ja enter adc sub out fldcw or add cld fisttp int jno or shr jae sbb aas dec loope out mov xor sub in sub sbb popf push fldz jbe pop mov fstl out pushf je iret or mov popl xor das jns mov (bad) pop lcall in (bad) fsubs gs fdivrl scas cltd mov hlt call (bad) xchg mov add lock out faddl (bad) cltd jl loop in jl cwtl (bad) out inc fld lcall jnp in cwtl adcl imul sbb xchg jb test out (bad) xor stc out cmp xor data16 jg je sub (bad) ss jecxz,pn or in xlat cmp adc or jg lock dec and xchg sbb or mov mov xor push mov push mov sub add jo test cmpsb and cmp outsb bound outsl in cwtl out movsl mov sub adc sub call adc out fild push mov pop and (bad) shr std sbb out jns pop addr16 and pop mov cmpsl mov and (bad) mov cmp adc dec scas jne out mov or sbb and lock jae mov jno es mov (bad) leave fucomp js sbb mov faddl out clc sbb ret je repnz aam loop lods leave jmp nop and sub mov (bad) loope adc xchg fs in mov push (bad) fild fidiv stos lods inc jbe out mov clc jge dec cmp scas jle xchg fwait sbb out dec mov rcrb sbb out test lea out scas addr16 pop andl iret jo adc pop pushf ljmp mov xchg cld dec inc loope inc (bad) lock out push rcr sub xchg (bad) icebp lds out dec jp push data16 lods dec push mov out in sub mull out adc movsb jge repz xchg push add arpl gs sub xchg mov sub fistpll hlt jo daa cwtl gs fwait out cmp add loop and mov fstpl add out nop int3 out inc popa mov (bad) add in fldl out (bad) movsl mul out lock dec adc lods jecxz fbld push out mov xchg sub xchg push (bad) mov inc pop in sub out vsqrtss mov out jo pop frstor aam sbb imul insl inc loopne lret fsubrs pusha out mov (bad) xor out call and out sub imul xchg bound pop and out pop push xchg sub push inc xlat out js movsb jp pop add fimull inc push ret outsb fldl cld sti jo ljmp rol mov (bad) cli fldz xor xor test push and mov clc out cmp stos imul inc lcall xchg lahf (bad) jo daa (bad) cmp lret pop stos pop (bad) (bad) arpl shll mov lods push test lret fisttp mov (bad) mov ret fmuls pusha icebp dec ljmp jmp mov out scas or push int3 and push xchg out movsb ljmp out pop lods popa icebp lret jbe adc dec mov jl pop enter jne scas out std subl inc loopne out pop cmpsb xchg dec push cmp jmp adcl ljmp mov pop out nop push arpl lods xchg out fwait scas sbb orl inc es fs mov out ds cltd fnstenv and lock fucomp mov dec in push insl movsl cmp fldt call pop xor das lahf (bad) push sub loop popa lds out mov and lret test push imul out sub mov loopne cwtl sub push out xchg jnp cs scas cli out sub xchg push insl shrb scas negb call adc mov int xor or adc stc mov es xor out fisttpll adc in pushf call shll fcmovb call fstpl or (bad) inc mov out mov aad mov ds cld or int fisttp fistpll mov out push sub iret push shr aas sub bound negb pop add out pop mov jecxz out test jns pop xchg mov loope stos fld1 (bad) jge fs ror xor out leave mov mov test mov dec and inc dec repz in fdivs or pop fwait push pop lret and out testb fnop aam insl in jg notb (bad) adc in int3 jb mov int xchg sbb in sahf dec loopne pop sarl in lds out push inc push jmp xor outsl fmuls push scas lods pop out fildl xchg das call nop mov cmc lods imulb dec xor sub aad loopne jmp loop lret mov or pushf pop cmp cmpsb out nop mov push fwait pop scas and jp ss dec int3 xor out aam (bad) loop jge add mov out icebp pop xor mov popf xor add ret movsl loopne fisttp shr and (bad) ss mov inc push pusha out dec call fstpl pop mov cld and push aam mov popa push or fs push and lret mov out fdivs out mov in out jp push and (bad) ljmp in xchg (bad) sbb dec jne sti mov lods jns cld mov adc data16 call repnz dec fisub out andl sub out mov (bad) sar sbb popa fiadd cmp push sbb insl pop pop insb rcll std mov dec in scas xchg sbb lds outsb inc pusha inc mov das out pop std shr out push add outsb aad fnstsw out nop or and dec xchg in (bad) mov pop xchg fildll mov xchg mov xchg ljmp out mov data16 dec pop out aad xlat sahf out ds adc xor (bad) fisub fwait loop out jo (bad) ss imul inc sub adc pause pop out movsb and xchg in in jae push push mov pop mov jo mov insl or shl xchg out mov pop sahf pop and adc mov push jo pop adc xchg pushw fist out (bad) popa xchg icebp scas mov test xor lock dec pushf insl (bad) lahf out push xchg sbb jge shlb or test scas je xchg sub pop or inc (bad) stos loope in sbb (bad) mov mov push jne sbb jbe pop mov push and out aas std inc and sub setno inc mov out jns cmp call adc (bad) jp fs xor movsb in sbb jb mov adc scas out ret in push add push jo xchg mov in pop leave inc das aam rclb mov je in jecxz sti inc adc inc sbb out (bad) xchg pop jnp std adc or loop loopne fisubl incl cmp outsb lods adc lahf imul pop stc or out aaa loope repnz mov popf loop pusha das out or cmp fbld jp in push sub jno insb mov xor daa jg ljmp pop xlat or push fsubr dec sub repnz sub push stos jmp xchg icebp lahf iret sub call mov out cmp ds adc and test loop lds aad movsb out sub add pop mov (bad) test pusha into out (bad) loope add das scas out pop fcompl adc and mov insl das mov push xchg test mov in mov jg dec mov pop out out mov (bad) sbb out sbb mov xor cmp out or adc das cmp mov stos inc mov scas out out pop loop js hlt sbb sub mov repz cs in inc das add mov cmp loop push mov outsl jo cmp dec mov inc out pop jmp nop xchg out xor fsubrs test hlt jle jne inc out mov add out add (bad) out cmp push dec fbld pushf loopne push nop es ror pushf ret add out iret je outsb cmp mov mov data16 jne inc adc sbb cmp pop push xor stos (bad) pop inc inc fiaddl cmp (bad) xor stos in in and clc cmc mov and in in call rcrb out (bad) sub (bad) cmp hlt sbb shrl lahf jns icebp out stos (bad) pop push sbb jge out mov int3 into mov cmp gs mov movsb test arpl out fmul push mov and repnz movsb mov xchg test push inc out dec cltd fs or lods pop xchg pop xchg xchg lds mov inc out daa mov cli subb sub (bad) hlt cmpsl pop stc fisttp mov xchg pop insl scas sbb inc xor xchg jb cmp imul cmpsb out loopne or xlat out push lcall out push xor loop fwait jg pushf nop dec lahf out out dec out mov sbb jmp push xor neg outsl iret das cs mov (bad) icebp xlat jno push push out inc adc test jmp adc lret (bad) jmp bound and in call xchg sbb sarl es adc mov pushf dec out mov sbb ret out mov sub mov jl lahf imul adc rclb inc cmp pop jb sub aad mov add mov xor lret rcl dec je push jns mov mov sub rcrb mov inc outsb push pop push ja mov xchg das insl xchg icebp fistpll scas (bad) sub in cmp ja inc fnsave and out je cmp (bad) insl push adc mov aas movsl scas out sbb out fstps mov pop push jno scas xchg jle push dec jmp imul loop mov fdivs xor test fistpll test cli fldcw call ret imul xchg iret in or ljmp push xchg or out es sahf jne not dec out push fistpll xor inc insb xor ss mov inc out adc or add xorl cltd jmp pop add xor add adc or mov lock mov (bad) xor out xor push out jg out adc testb pop push inc out mov inc mov aam dec aad pop jno push add dec leave cmp clc fstpl rcrl iret mov int3 cwtl in mov inc jns (bad) dec mov out cmpsb mov sub scas mov call mov sub ja push adc xor push cmp jge arpl cli push out xchg sbb pop into mov cmp or push xchg pop jbe imul loope xchg mov dec loopne cwtl dec jg jb cmp xor pop out xlat adc (bad) daa (bad) push mov outsb and add lock into shll xchg iret pop push push cs xor test mov shrb (bad) push or out xchg outsl popf cmp add mov (bad) je fnstcw in out add dec pop pop mov out dec lds lock and fnstsw dec mov sbb add pop (bad) in aaa xor lcall outsl adc test inc psubsw xchg and add push movsl inc mov arpl mov das repz insl fwait xor dec cmp sti pop in imul icebp (bad) pop inc out jo dec and sbb insl pop mov iret out pop push mov fsts sahf cwtl xor and shll mov adc jae out (bad) jo mov out mov rcll xlat dec pop pushf dec inc jnp outsb imul repnz fwait jae mov fistpll push jmp aam dec mov xchg lock adc xchg dec fcompl js out gs xchg out cmpl out repz dec mov and jbe rorb jecxz cmp sti lret fnop icebp out es jo mov jb pop dec (bad) or cltd jbe push xchg sub lock push jo jmp rdpmc je xor call out mov sub jge sub inc cwtl testb sbb fwait or xchg out adc enter jle lret xchg dec mov shr loope sbb (bad) xchg mov push ljmp mov out fsub insb clc sub in mov mov jne dec sub pop and out push in jp das out sbb in fs cmp pop aad jmp xchg das xchg jo out and sub mov dec pop pusha test out sub imul adc test lea sti ljmp popf sub ja push xchg xor into pusha mov jle xor mov out add sbb xchg out sti inc sub hlt dec test xor cltd fildll repnz jg fadds (bad) xchg (bad) ret pop aam pop call and xor addr16 lret cmpsl (bad) out push enter movsb pusha mov jbe out and loopne mov xor ljmp push mov out pop jb (bad) (bad) mov xchg scas (bad) ss inc out sub mulb mov es pop sbb sub dec mov js xor std or push stos inc pop push rorb ljmp out mov sub out lret fcmovne pop (bad) jb outsl out jae push ss fucomip and or aas push test cmp jo sub fildll cmp push aas pop rcrb imul out mov std cs jno cmp ret xor loop adc movsl jbe (bad) jb pop cld pop in out (bad) mov mov cmovnp ljmp jb dec clc mov scas int or out xchg out jae mov pinsrw xor inc adc test rorl fidivl mov xor mov and adc into mov pop fnop iret mov mov outsb cmpsb ret or or ljmp inc lods out aad mov mov aas fs mov lcall pop sub dec push adc out dec outsl out out (bad) (bad) and test jne scas out in jecxz inc cltd leave mov loop mov dec or scas jb and scas mov daa fisubr ret out adc jp,pt pop gs sub out mull pop cmp dec sub call imul adc out lock int fs ljmp in sbb out mov add or sub out fucomp mov sbb cli push or inc outsb jge xchg jmp in out out loop jne mov pop fbstp and mov jmp test fsubr enter ljmp arpl out out fidiv xor shrb out pop (bad) gs out stos outsb jg and fld lahf cmp jo inc and aaa into adc loopne pop loope not (bad) adcb cmc mov pop xchg xchg test loopne (bad) cmpsl out sub pop jne sub jo push into dec push (bad) out lods stos repnz mov dec pop popf xorl add mov scas push fild xchg mov lock mov push push out inc data16 icebp int3 sahf inc out push test mov out clc or or (bad) adc sbb mov outsl (bad) fsubl pop push (bad) scas inc inc mov lods push dec cs lock das call int push sub call cmpsl sahf (bad) jp loop out xor cmp out pushf jno test xor jmp (bad) ljmp cs xchg out stc push insl iret (bad) out (bad) arpl pop out dec shrl (bad) mov gs out rorb aad out sub adc lahf xchg addl mov mov xchg (bad) ljmp cmp mov dec mov and push push mov andb out out dec dec xchg adc or xchg mov out mov into sub test add loop jne push pop out or fadd out pop lock popa pop push add adc out mov shrl fcom xchg out xchg xor int3 bound out aaa mov test mov xchg push pop jecxz mov dec stc arpl ja clc paddb stc sarb into mov jmp (bad) in cwtl fcomps daa insb push mov sti jns imul loopne lds pop mov xor repz push xchg bound xchg sahf jge push rclb out mov scas repnz out xlat and mov ljmp loope lahf rolb in lods out popa cmpsl inc cmpsb icebp sbb out ret push mov or sbbb mov out insl xchg ja mov fcmovb out scas lea add out clc mov sbb sbb mov mov call js das and out cmp mov imul and mov out loop cmp inc push cmp std cmp push mov rcrb clc dec mov shr adc push xor je sub adc jp or out mov shl loopne into out clc test das out push iret dec movsl adc mov lahf sarl out sub dec and xchg fsubl jmp xchg sub in push out movsb out lods push mov sti out divl add mov out fimull sti xchg mov cmc mov in cmpsl clc jo out fwait cmpsb aaa xchg ret pop aas icebp inc lahf enter shl shrb out cmpsl andb or mov cmp psadbw sub and ja adc jge gs out test scas pop fsubr xor pop adc lods cmp dec lock daa ficoml xor ret das inc push sub sti xchg fsubrp cmpsl push divb in pop out lahf insb (bad) pusha push dec fs jbe es lock add divb mov xchg iret push sub imul das cmp imul push out iret xchg sub faddl adc mov out mov jbe sti and cwtl out fidivr push imul std sub sbb pusha dec out stos add mov out push push sub icebp bound jo xchg add (bad) (bad) jbe nop loope in ret cwtl pop test aaa mov sbbl adc pop sbb popa mov push mov mov in out adc imul scas jl out (bad) jmp (bad) adcl fwait xor lahf add mov cmp lods pusha push fs iret in out loope mov mov fwait (bad) pop xchg add jo push dec clc out outsl xor pop (bad) fsubrs mov ret out js pop mov xchg pusha scas (bad) mov shr fcoms f2xm1 pushf out sub (bad) push out mov jb mov xor push mov loop or (bad) mov lods lret jns mov loopne xor insb mov and dec mov rol addr16 ficomp add popa aaa out je xchg jno xchg out out pop bound shr jp mov (bad) and das outsb (bad) cli (bad) aam jnp xchg inc jecxz mov cmp or adc jns icebp mov out insb jge mov xchg xchg pop out pop sbb lods insl and bound add sbb cmpsb ficompl mov and pop (bad) popf ret aas sbb sarl ljmp or pop aas xchg lahf or pop mov fsubr dec inc shrb outsl ja mov leave sti add cmp data16 xor loope out jns in in pop mov je lcall call lahf mov outsb inc out mov arpl scas loop or out in in xor pop mov in inc sub out movsl fimul and loope sahf dec sbb lret mov out pushfw aam cltd xchg inc mov cmp out adc dec ds dec sbb jmp cmc insl xchg (bad) mov push xor sub adc sbb (bad) push add push scas xchg push out cmpsb dec mov loop lret jl add xchg xchg sub pop xor insb call ss repz scas movsl jne int sub in inc (bad) cmc mov in push out mov popf xchg and hlt out sub ss clc xchg out in pusha pop xor jmp pushf ret (bad) mov sub das jb jnp out xrelease imul mov out mov inc lret out movsb cmpsb jge push outsb mov xchg adc dec fxch mov ljmp mov fidivrl popf cs pop loop xchg push push rcrl xchg pop sub out lds out int3 pop dec je mov inc cmp imul xor lcall (bad) out jge mov xchg arpl or mov into int ficom out iret sbbb out adc mov shl js leave mov inc loopne shrl in inc pop jbe stos sbb dec lret inc (bad) rcrb push test mov out and dec adc out test mov sub es inc and xchg js bound fldl mov jle outsb out jg push movsl out xchg mov fs out andb mov push out movsl cwtl mov int mov or in inc add out cmc jge in (bad) shlb cmpsb xor (bad) test push (bad) iret pop adc sarl push jmp out sbb xor pop add enter xchg xchg in pop shr cmpsb (bad) dec cmp sbb test mov push in push outsl faddl xor jg lock int3 mov out inc sbb lds push popf decb inc loop dec arpl jae inc icebp push dec mov imul pop loopne sbb push pop bound push out fisubrl and pop or mov imul nop adc clc into cli jge mov fsubr push test or and and mov xorl inc xchg out sub les bound out popf dec xor xchg pop add leave loop mov mov and popa sub mov lret pusha xchg out aam outsb insl inc mov push out ret mov movsb sbb ja lods push aas cli out pop mov fsubr popa push (bad) out and rclb out gs call lods out or arpl out cltd inc test jnp stos stc mov or sbb sbb int add out ret out push test jecxz fiaddl out lcall push out imul out pop ficom xor lds xchg mov mov out xchg push icebp inc out call repnz pop (bad) cmpsl aaa jae (bad) sarl in inc xchg in int out sbb mov fs mov fdivl jmp es mov ret test sahf out adc call dec jns cmp fmuls out in fidivr mov push popa ljmp scas out mov lahf out addb xchg mov xor ror out jbe dec sbb leave out inc in notl xchg push out nop sbb scas js (bad) mov ds out les outsb jae add dec dec in adc push in pop pop xchg pop stos dec (bad) ljmp js add pushf out mov mov insl xor adc push inc cmpsl gs cmp sbb dec jb mov call cmp sti out pop mov dec and sub js push xlat test or clc push or insb cmp stos sub aam pop cmp add imul insl add insl fldl out call idivl sahf std xchg fs sbb imul xchg jae push mov jg sbb pop js repz int3 test add insl adc bnd mov lret xchg ljmp call xor out jg stos push fwait ja out gs (bad) mov (bad) and (bad) outsl test out aad lret fdivr xchg push mov adc pop jmp lds in shr movntq cmp xor add mov xor mov push aaa xchg out popa int3 xor xchg shrb (bad) (bad) into ficompl out sub popa cmpsb add lahf pop xchg inc data16 in ljmp and mov xor out fdivp dec out pop cmp push jne cmp lods xchg xchg aas out sub outsb fsubr pusha jmp push mov lret rcr into push arpl mov out cs add out lret push imul out mov xchg sbb mov (bad) out xchg push hlt icebp pop cs or out fdivs cltd mov negl mov bound pop out or inc out xchg pop sbb shl jb mov or out dec lods push sbb fwait repz out or inc xor push cs loopne inc pop js lock (bad) inc std lahf out out cmp test xchg iret sub jae fs lods inc add repz mov jl std pop in xchg jns out mov call leave out lds mov unpcklps lret iret leave push or out iret lds movsb out out in xor bound cmp shr xor out insb fwait mov test xchg loope sub sub mov jnp cltd out mov out pop insl lock out ljmp enter or inc push pop (bad) movsl pop xor test lret sbb arpl (bad) into cmpsb push push pop (bad) fidiv pmaxsw addr16 jle dec cwtl (bad) push sbb add out ja outsb lret lcall lock call dec mov sbb push fwait loopne dec data16 fidivrl jle jge rcrl aaa das ja (bad) lods xor fs imul sub leave out jle cmpsb cmp xchg repz cmp and mov jbe out jecxz push leave ds sbb jl or sbb mov lock popa repnz mov cltd dec push mov fsts (bad) push stos lock xchg pop out jle jae clc cmc dec xchg in pop push mov dec push iret xor push clc add push cmp mov (bad) fwait mov cmp adc inc and aaa pop inc cmpsl out test jmp xchg add xlat out mov pop xchg xchg out (bad) pop pop xchg jnp mov mov sub neg adc shll rol mov aas out xchg movsb dec jns mov fisub (bad) or iret mov and aam iret loop sub pop xchg test jle cli mov leave pop cs push out stc ss push jecxz jge repnz jb lods aas out xchg sub or clc push out out fisubr mov mov cmpsl mov pop shl jae pop or outsb jmp push rclb add cmp decb or cli xchg mov jne out scas out push mov movl (bad) adc les xchg pop mov add fistp clc pop or add fdivrl inc in jl shlb test insl cmp in mov sub iret es out pop xor xchg push inc push dec add xchg inc pop cmc push aaa pusha out cli push subb mov push ds jo les addr16 xchg pop out inc xorl call xchg push push cmp out rcrb or out rol aaa iret ret sub inc jns enter loop inc add push jb fiadd inc push jmp shlb data16 js out push cmc lods ljmp int3 and add in inc out roll or in (bad) maskmovq divl ljmp fdivrp pop in les in add push prefetch and and xor adc cs pop imul jmp pop dec inc pop aas adc sub out xchg (bad) sar (bad) mov rolb xchg loope in jg lahf lods pop fwait cltd out jae pop xlat inc pop out xchg or pop out out adc aas mov xchg sub sub hlt (bad) aam outsb call xchg push lds sub das xchg push outsb addr16 (bad) ljmp and xchg out fmull inc in push xchg rcrl out mov in jae arpl adc mov cmpsl shrl xchg mov xlat out sub and out cmp repnz sub int3 arpl sub in cwtl lds xchg and aad xchg xchg (bad) jnp mov imul out sub mov jle test inc ficompl dec lret outsb std add mov pop add sti or pop xor sahf pop ljmp bound fsubrs int (bad) nop out mov add pop out jge push fs hlt addr16 bound out and movd sar mov movsl in adcb sub xor or dec lcall out fwait mov push push dec jecxz inc push pusha mov out and (bad) repnz scas (bad) xor in xchg sub jecxz movsl (bad) mov sbb jnp mov rcrb xchg mov call add imul xchg ss incl xchg cli pushf out mov pop ret pop xchg jle aas adc out (bad) mov clc dec negl jo sbb xchg push imul loopne push and adc call movsb push mov sbb out fs push or imul cmp sub push movsl fisubrl lock lea mov push xlat (bad) es orl inc (bad) in out xor sub and (bad) and sub sbbl daa int (bad) icebp out push in hlt cmp mov (bad) sub add jmp sbb inc mov pop jmp (bad) sub xchg outsl xchg cld loopne jo pop pop cwtl test dec stos push jb push das xchg or mul mov xor push pop nop scas xchg push out pusha xchg test mulb das outsb gs fdivs mov dec int popa shlb cltd out fldcw add push cmc mov out mov js adc lock mov into and sub add fldenv out xlat std add into gs add out loopne and cmp and lods ret xor out inc mov pop xchg pop repnz mov addr16 out data16 out adc dec and movsl imul adc mov mov mov es in out in sbb aam xlat adc out icebp pop cmp es out sbb or and out clc mov xchg shll aad fcmovu jmp enter fwait inc pop lock stos xor pop lea pcmpeqb cmpsl (bad) std loop (bad) movsl out jnp mov mov and fwait xchg fldenv sub push out pop mov jl fcomi in add movsb push push jg es jecxz jge out jbe or (bad) out adc ror mov scas mov jns sbb out outsb ljmp out pop cmp lcall (bad) dec push bound out push ss lret adc cmp sub test sub jno fs cmp divl popa jmp xchg push movsb into pop out rcll (bad) roll cwtl mulb and pop sahf sbb stos push movsb jns lods inc dec out pop movsl ret xlat paddd jp pop out shlb dec mov and outsl (bad) jne and sbb sub jmp (bad) jnp sbb cmp lds jecxz dec cmp (bad) dec lahf stos shl imul insl scas pop cmp xchg outsb pushf das out push or clc sub lds test sbb aad add pop pop add mov mov jg mov mov lcall or arpl paddsb out into sbb xor out cmp addb or jle sbb mov push dec pop popf das mov push cs loopne mov sbb out xchg iret sbb mov ljmp pop push das aas cld jo lea sub xor out outsl push pop adc jnp out (bad) cli fs in int3 popa adcl jl,pt jg cmp out enter dec sub push pop cmc inc sbb call xor mov xor outsb aas loopne xlat and fwait out inc jns maxps popa mov loope rorb mov add out cld and out in push inc push mov and mov xchg cmp aam (bad) mov pop sbb cmp (bad) out cmp jo xchg mov call out into in repnz sbb mov add out les and sub adc in inc insb out mov jbe aaa pop insb (bad) lock dec stc jno inc sub push arpl movsb lock clc rclb out scas nop pusha jmp add dec fsubrp int sbb mov stos daa out xor adc cmp jg icebp xor inc test push jp lahf leave incb aaa (bad) mov push jnp or stos push cli xor pusha sbb and test out mov fucomp sbb je ror sub inc fnop inc and mov iret pop pop (bad) pushf out mov lcall push sbb jecxz sbb out fwait mov ret jmp fmull pop outsl ds push mov jne test icebp out mov and lock out mov push shlb movsb (bad) mov stc fidivrl insb ja lock cli pop xchg fs mov mov jns (bad) test test push fmul add out lds pop (bad) out imul (bad) hlt out push mov mov sub pop out fwait mov ljmp mov ret out jmp andl adc addr16 jb out in lods add (bad) daa add js mov cld popf xor out insl cli mov sub mov cwtl or sbb mov mov pop jnp pop add jmp les cs das mov push out cmp push out cmp pop pop dec push mov mov test and mov out popa scas xor clc stc pop mov (bad) cmp lret sahf les jae sbb shrb pop push cmp into jnp sarb pop imul aad aas call stos in ljmp jb push nop mov popf dec inc ret xchg sub dec pop decl iret fiaddl imulb sub imul pop push inc pmaxsw pop cmpsl cs outsb sub in out lods pop push lea adc jl sub pop mov cwtl xchg loop pop incl (bad) pop cmpsl adc imul (bad) out mov stos (bad) dec cs fisttp movsl out (bad) das out imul inc push out cmpsl add push out insb dec in mov xchg hlt sarl or sub out adcl lods loope test mov jnp (bad) insl mov out fwait jno das cmpsb inc push inc out out test mov gs mov and ds inc jns cmpsb outsl pop pop (bad) mov int3 adc repz add jmp mov sbb cmp push mov push es data16 add sbb lret rclb mov fucomip pop rcrb lock inc out jge cs adc cld pmaxsw xor mov stos sub loopne mov out jge mov or test out out test dec xor out pop lea push mov mov imul sub sub jle in out and mov hlt cs or std push jmp jne les notb gs sub or xor ja sarl add add cmp mov int3 dec jp inc lock subb sar outsb cmpsb repnz out push sbb dec mov xchg shrb lock test insl test in mov rorb daa lods subl push ret cmp mov inc in out aad pop insb ret inc cmpsb sarb jns xchg add jmp or pop inc imul fstl popf cmp xchg loopne imul daa out sbb addr16 ljmpw pop gs inc movsl xchg out cmp repnz iret pop adc pushf fstl out incl sub cmp adc cltd fsub cs in push dec fild jns ljmp mov jno mov rcrb xchg in sub mov mov leave fiadd cwtl rclb popa arpl mov clc xchg xor dec mov add push scas leave sub pop ljmp in pop dec adc push in arpl scas cmpsb iret and fisttpll (bad) xchg icebp xor out xchg and shr lahf ficoml fstl fsubl test xlat adc stos inc out fistpl fwait xchg inc stos out dec js jbe lock add jne in aam out pop ret xchg cmp lahf mov (bad) aas xor and ljmp mov sbb sub mov cmc jno lods adc daa push add jl push in lds push popa (bad) mov cmpsb jo ss sub test xchg stos mov or jb call xchg (bad) push icebp daa (bad) lods das mov out fiadd adc and cld jnp sub lds sbb cmp lret xchg sbb sub out insl mov repnz psubd inc (bad) (bad) dec ss rorb sti cmp fistl sbb xchg ljmp or inc jno push out fwait mov dec lcall rolb (bad) into mov mov int out mov ror out into ficomp int lahf out stos loopne sarb shrl (bad) jno ds dec sub sub adc push dec loope std cmp out call inc mov out sbb mov js cmc test popf xor cmp out ss mov mov sahf (bad) imul int add mov push dec mov mov out sub push fistpl stos cltd dec insl repnz cmp insl xor xlat dec and or out add and pop (bad) icebp stos aam arpl mov ja push mov pop cltd ret cmpsl test lock xor xchg (bad) outsb sub ret loop (bad) sbb dec into sbb xchg (bad) divl fs ret aad jecxz xchg andl in jns push out rcr dec and fwait lret xchg sbb aas add jnp je jle (bad) notl inc out rol xlat call es inc test dec andl ss cmc lahf dec cmp aas out nop cltd repnz xchg fwait out jbe in lock rcl xor fnstcw inc addr16 out jno into add cmc push fildl adc lods out stos in divl rolb out lret insb lock sti or or call stos jnp ljmp inc clc popw dec lret pop sub nop cwtl ljmp out or and outsb ret into int3 out mov push es or jbe iret clc pop movsb out cmp sbb lea adc xchg movsb sar test mov outsb stc jo or dec inc js cmp test lcall repz lea sbb fucomip dec in mov xchg (bad) pop adc cmp adc pop sbb outsb lcall pop out loop sub jge fwait call dec sti and push cmpsl ret aam or adc add sbb out mov loopne xchg les decb pop fldlg2 movsb or push mov enter rsm or fbstp mov and das fcoms and lea sbbl jnp push mov ret sbb xchg montmul cmpsb inc mov jle in sarb bound int push in adc pop and out stos and mov pop push lea out lods sbb in jmp std lds xchg fs dec iret lock es pusha sbb test mov push xchg sahf jl out jmp jno cmp mov in rcrl fbld xchg ljmp into outsl sub gs xchg mov repz in adc sub mov aaa ret mov imul rcrb fcoml std dec mov dec imul xor aam dec xchg push pop pop add sub aaa iret lock jge pop (bad) stc in outsb shrd test xchg out xlat test push aaa pop mov in mov xor mov mov insb sbb orl push jae pop (bad) ficomp or sbb dec (bad) std out inc mov cmp sahf hlt dec rorb ljmp jle jae,pt out pop sub xor out stos mov mov out cmp mov out and idivb (bad) push mov icebp ja repnz adc dec (bad) cmp scas xchg fldl cmpb sub or (bad) add and jbe push cmp jne popf outsb xchg out out dec test data16 jmp and cmp es mov cmp xchg mov (bad) cmovs loop jecxz loope,pt and imul loopne xchg dec xchg int inc jp out addr16 xchg out mov mov push push or stos adc pop (bad) enter mov cltd hlt (bad) (bad) popf iret fistpl pop in mov mov xor jno or jne leave ja xor jp mov push je pusha or aas pop sahf sub adc out mov sub dec mov push push pop out in cmp or push gs es fnstenv ds out dec lcall (bad) fcompl xchg jnp arpl sbb out movsb scas or fcomps xchg push (bad) lret jg (bad) frstor jo (bad) jle and aam push pop ja rorl add xchg inc sti fildll sub pop fsubr daa adc xorb jnp out inc (bad) aad push add jo fwait (bad) in fs sbb imul mov js and shr pushf push pop gs in nop mov jne and mov fnsave pop sub sbb mov shrl xchg add out sbb loope adc iretw pop sbb test lock out xor loop xchg push insl out dec jmp mov sbb ljmp (bad) lcall cwtl rcrl and out pop jae jmp out bound fdivrl out lods push and fs sbb add push aaa out repz dec addr16 cmp in mov push dec pop pusha lret insl popf and dec adcl jo test cmp lahf mov lock leave roll sub cmp mov stos out aas popa pop test lea ljmp movl mov mov sub xchg (bad) fstps lods loop push addl lea adc scas cmp and je mov cwtl jge lds mov pop xor mov ds add or rcl outsb out and pop mov mov (bad) cli sahf rorl pop mov push sub cli or fiadd or add lods pop push jnp lcall bound xlat out (bad) shr dec enter lock out sbb pop es call outsb mov mov push sbb add fisubl out adc lods (bad) addr16 mov fdivs loopne shrl push mov repnz pop repz cmp test mov mov insb pop test push hlt call out loopw push out mov xchg out call mov jg push (bad) jl inc fimull mov ds sub adc lcall mov fild subl into ljmp adc or out movsl sbb dec out leave pop andl add cmpsb hlt pop cmp fist mov loop test cmp lahf cmpsl adc jle fsubr fwait xchg push jo cli dec fbstp dec lahf fsubp loop lds (bad) or or fucomip and out mov repz popa leave jbe jle out or push push insb cmp inc imul loop pop je cmp jbe inc cmp out ret sbb icebp dec aad mov xchg out pop lea popf out in mov mov lds mov gs jl mov inc outsb movl xchg out rcrb jb xor xchg gs cli aaa pop popf (bad) and jl movsl insb mov (bad) cmp out and std sub out les out cld aad jmp in inc out nop push xchg in adc data16 out xchg fwait and out js int3 insl cmp test add pop mov in or bound pop sub inc arpl xchg xchg out adc inc cmp fistpll fldenv mov jge out mov and and mov sti or mov adcl lahf aad lods pusha data16 (bad) dec data16 ds mov inc or repz jp pop stos aas es mov sahf aam fwait gs bound mov out jbe popa inc mov mov data16 out add inc push lcall icebp adc xchg sub xlat cmp shr bound inc push adc mov (bad) ljmp mov jb xchg in adc popa out dec cwtl mov mov ficom push fs test fmul in cmp sub adc jecxz dec add lea int out sbb in movsb ja (bad) mov add push mov arpl fldcw push in out inc test insb insl mov out inc push loop push in movsb mov jmp fistl xchg xor out add jns cmpsl push xchg out pop lea adc sbb out loope or jle or mov testb shlb (bad) mov jmp je mov rorb cs (bad) sbb pop ret int in pusha add fisubrl xor movsl xor adc frstor fldt out pop js sub out add arpl stos xor loopne mov pop cmc and jae push out into mov andl and xor push out dec (bad) (bad) sub out adc aam pushf adc mov int cmp aaa pop fadd jmp out testl ja adc cmpsb out cmpsl push xlat (bad) inc ret loope or lahf (bad) bnd mov cld test (bad) lret and dec ficom iret fidivrl unpckhps imul jns xchg mov out pop arpl xchg pop mov mov inc cwtl insl or jne (bad) in (bad) push cmp cmp int (bad) loopne dec fnclex bound fnstsw sbb imul scas rclb ljmp loopne iret sub mov xchg cmpsb or outsl out mov mov jo,pn xor aam cmp mov (bad) ljmp ljmp push jnp pop outsl sub loop out jae sbb xor sti inc in jg cmp scas and out cmpsl out fwait mov into fsubr popa dec sub scas (bad) in fcomip mov pop loop aas rcll sbb pop rcll fld1 std test jg,pt loopne test shl fild push aam insb ljmp push rcrb inc clc es leave xor or mov out mov jae lds outsb push pop iret cmc fwait mov dec cmp stos popa ret dec jno out notl (bad) jg movl cmp nop mov scas jne mov dec fsubrp pop mov lods push mov pop cmp adc sbb in mov hlt out dec pop xor out bound mov out (bad) aam int3 mov lret lods jns in cs (bad) xor stos arpl out xchg dec jns test mov mov sub in popf and nop test out daa mov jbe push cld clc xor loop pshufw out int3 add loopne ret out outsb mov imul mov out das aas mov push or xchg cmp mov pop add mov xor mov cmpl jbe or sarb out xor test mov out inc or mov fist fiaddl cli iret les aam addb out lret fdivrs fisubrl movsb out jge (bad) or inc clc (bad) out fmull scas fistpll push movsl fwait jmp and add adc jge call jne cmp sbb shr stc mov push sub push xchg pop (bad) push mov push and mov xchg xlat out add in xor popa out push (bad) (bad) cltd xor adc sarl fs test popa out cs insb sbb aas in lret int out loope pusha movsl pop jp jl adc sub push out push pushf hlt jb or fisubr out ret inc sbb out mov sbb out aad ljmp fimul mov jg aaa rclb jbe mov pusha pop jne movsl out dec jp orb mov sbb mov pop add mov or mov arpl out jecxz dec jbe call addr16 jns jle or pop and xor mov out addr16 cwtl pushf iret push adc sarb negb push loope adc out je les fldl xchg std pushf adc xlat into test sub je and dec out gs xor lods ja adc pop cltd add mov xor lods pop mov arpl cld pop jg fnop and lock fadd lds out pop inc icebp pop add data16 mov xor iret xlat xchg test test jle ret inc into in out push fidivr push (bad) jbe outsl ljmp sar and sbb sub cs arpl xor (bad) jne in mov add sub pusha test xchg mov xchg stos sub (bad) test popa out insb xor loopne scas xchg loop jl pop ret out ret das arpl pusha mov or test add fcoms out sub test xchg sbb mov xor out pusha pop mov cwtl cld out imul out inc inc or sub mov pop adc pop dec stc jbe rcrl decb loope ret add mov jle cmpsl and loop jb add out inc into insb fist mov mov jbe imul movsl cmpsb pop shlb and add adc adc out sbb add push xor icebp js push push sub call pop in mov inc shlb lret mov jmp outsb push push cld out (bad) pop js pop sbb out bswap jecxz in and mov lahf ret stos mov pop js in push insl lahf (bad) out repnz mov out mov pop jnp lahf outsb add xor cmp in dec sahf out shlb cmp fidiv hlt add ljmp test mov nop xor (bad) and js jne fucomp and cld test les pushf ret mov dec inc out or xchg and or xor mov out push cmp (bad) pop mov jp lret jbe leave and nop cli arpl into int out adc imul pop sub push popf out movsl jl das movsb test jecxz pop cmc jb mov sahf fcomi mov ret pusha int lods xlat inc mov add dec mov xor out movsb cmp mov mov dec adc repz int add pop lock movsb sbb xchg outsl loop cmpsb xor sub jns pop loopew adc fwait cltd popa sbb lret aad (bad) ss xor je imulb cmp aam icebp ljmp out (bad) mov jbe cmp (bad) out imul aad pusha jb lahf push dec lret xchg cltd inc jle mov scas pop add xor sar in repnz mov pop jb out stos push call scas mov aad test loop addr16 repz out mov or out dec mov sbb and push push xchg lock xor in mov jg stc fiaddl push loopne out fs in adc ja mov sbb sbb jne cmp loop cmc lahf sti out mov les fimull mov adc fildll ljmp push ljmp pop inc mov (bad) shr int3 or sub inc dec mov out loopne test je in cmp rolb out sbb out in cmp shl mov jl (bad) fistl pop adc in aad rcrl fimul sub out mov xor loop int3 test jnp mov or iret outsb outsb dec pusha jge movsl out push fild push jmp icebp lods mov dec sub (bad) mov add mov stc push aaa fs add scas push pop out pop xor out adc lock pop push xor xor aad loope outsb lahf or scas in sti out adc fucomp and adc ja push dec repnz push sysenter scas stc test xchg sbb out imul cmp outsb clc loope pop in mov popa into adc out adcl ret pusha add shr sarb test pop lods and loope xor or xlat jns mov lahf or test lock or pop pop shl push cwtl incb andl out fidiv xchg fist mov std inc cmovle das fcoml lret pop ljmp xchg xor stos mov sbb fwait pop std aam test in jmp or jecxz cs mov inc xlat iret and inc in insb pop inc xchg out jbe cmp enter dec pusha out dec insb dec fstp jb fwait out jle xchg xor out mov pushf pop pop mov in in stos aad xlat (bad) xchg xchg js mov pop imul adc dec out mov shrb fildll std pop pop push jne rcrb (bad) movsb das push repz mov out imul mov push jecxz jae nop or xchg mov les or out std mov and addr16 out jl dec jmpw repnz mov inc clc ret subb xor (bad) sti js push push sbb rcll and out mov jg and adc loop cmp shrb imul out hlt lods mov mov inc sub les sar out mov fisttpl xor xchg pop mov test mov inc mov jnp leave pop out mov aas and pop out sti out cmpsl push in xchg xlat fucomi sbb out jae cmpsl je sbbl cmp arpl (bad) push into pop out imul pop out pop xchg xlat lret lahf jbe in out mov adc test nop gs and out outsb movsl pop mov pop and lods sub rorb xor fdiv fldt mov insl ss pop out (bad) idivl inc cld push imul rol mov loope gs and dec jmp push int jle add bound imul pop jmp shr sub cmp addr16 mov push mov out lcall ret out dec and sub cmp jne sti mov (bad) mov (bad) fsub mov pop add jae scas jge das inc (bad) popf into push out fadds (bad) stos xchg out sbb call imul icebp and fsubrs or adc mov push shr int fildl pop pop iret aaa sbb xor or out sahf iret push enter jle jno xchg hlt inc sbbl sbb out inc in mov or lds ret xlat repnz dec in outsl sbb fnstcw leave insb enter call stos cmp inc adc insl andl icebp mov cmp pop in int mov iret jbe lret aad (bad) sub xchg cmp out and lock out sbbl mov cmp imul fsub out fnstsw (bad) icebp daa (bad) shr dec lods inc ljmp dec push out push insb xor xor dec pop rorb pop aaa mov stos scas dec out xchg cmp leave fildll cmp loop sub insb xchg in aad addr16 mov jl sarb add xchg mov fucomi call outsb adc pop (bad) mov in add mov mov sub into out adc mov out addr16 dec lea mov pop insb les int cmpsl jo pop ljmp ficompl out (bad) mov loop dec in pushf (bad) mov push lock iret fldenv arpl loop inc ret adc out add les xchg inc enter ljmp mov fsubr adc mov movsl mov addr16 mov cltd inc jb pop pop fwait in aam cmpsl pushf push out rorb loop gs cltd aaa fstpl mov imul dec mov mov mov movsb inc adc xchg insb xor test cld out lretw cmp (bad) test out in jg lods jae mov cltd ret and (bad) out (bad) call add out in orb subl add (bad) out cmp xchg xlat stos mov xchg icebp lock sti out mov in add fistp out adc in dec inc fldl into pop jge pop adc sub add in fs out sarb dec cmpsl out sbb pushf mov fidivl sbb sub aam outsb sahf mov bnd dec insb out int3 cwtl sub push mov xor int3 pop popf xchg in hlt pop clc out dec pop mov dec fwait and mov out in ret pusha mov xchg pop int or push out lahf adc xchg jnp out cli arpl fcomi adc mov mov data16 pop (bad) jp cmpsb das pop out mov adc mov out es ret decb pop mov inc mov xchg mov hlt out pushf (bad) and addl mov mov out jmp sbb pushf sbb pusha test ljmp xchg out fisttpl mov (bad) out cld mov lock (bad) mov mov in mov bound xchg lahf pop test inc scas imul insb (bad) stc (bad) scas inc adc push int test mov cltd dec jg add nop inc cmp and loope sar jnp pop stc aad mov or loop arpl in sar test push add mov (bad) out popa mov fsubl xchg dec cld out fcoms enter (bad) pop mov add cmc add push inc je mov pop shlb bound outsb push rcl push ljmp out adc xor out fcoml fnstenv mov cmp popa fiaddl in push ret cmp je jp insb and int lret loope mov call pop dec jmp loope push jae out bound sbb test out sub out hlt jne cwtl sbb aas push out cmpsb pop mov inc and scas out lods mov insl out jo aaa scas test dec lahf push adc jb pop mov sahf dec pop popf (bad) ljmp fs pop std inc bound aas out rcrl aad lret ljmp (bad) jne clc out sbb scas lods aam sub loop,pn or out outsl sub add loopne nop out int3 js lret pop pop inc data16 movsl inc add mov jbe inc jne push (bad) jmp ljmp rcll lahf push add call out repz push cmp out cld imul pop xchg adc sbb lcall cmpl mov push imul pop out pop inc ja dec imul out leave sub out mov mov decl add push dec gs inc xchg mov cs shll add out jnp pop ja imul sub out push mov ss inc popf rolb les (bad) mov pop sub add push fnclex cs scas add sub sbb shrl xor jmp and out jle cmp xchg rolb loop xchg inc out loop mov lea out push cmp lret out push pop lret fsubrs ret (bad) and loope,pt push ffreep push cmpsl add sub lret aaa mov popa out fs stos stc sbb mov push (bad) pmaxsw rolb bound and movsl sbb sbb in out jb push sbb into (bad) out pop fcoml pop cwtl xchg xlat insb out adc mov cmp inc arpl jae mov hlt push dec in jmp pop insl loope dec daa fsts stc jne push out (bad) adc in out adc jmp out lods mov cmp out inc xchg (bad) fisubr iret in out ljmp fsubrp test lods xchg jmp inc mov fsubr cltd xchg xchg cmp push out fwait pushf jg dec insl divb sub jecxz inc xchg mov in sbb pop mov and int3 pop bound sbb cltd repz cs out out loopne dec mul inc fstpl jnp rcr repz ljmp mov insb (bad) xchg out and ret (bad) shrb adc fsubrl jb inc mov xor fisubl data16 ss out les fs (bad) popf ss shl lea lcall repz mov (bad) insb push push push sbb (bad) icebp and outsb push xchg mov xor adc lcall call mov sarb sbb (bad) (bad) je (bad) out adc (bad) inc dec test cltd cs jbe ret out fsubl out lea sub in pushf out je into dec ficompl decl mov dec divb adc fcmovnu mov ljmp (bad) out mov aad mov loop lahf fidivr in out mov addr16 ljmp and adc adc cmove aas fmuls inc ljmp insl pop out adc out push aam gs pushf rorb pop xor aaa jecxz mov aad mov dec out xor scas xchg and (bad) je xchg (bad) mov mov shll rcrl rolb push (bad) stos xchg iret out fistp outsb out fwait movsl cli data16 dec jnp pusha shr iret cmp or pop das or jb out in and hlt and jno int3 cs out mov xor mov out fs test imul sub js push jmp out int3 repz push out dec mov or into jb out aam push aaa std jp negb loope,pt mov subl lods and jns sub mov sub out xor adc scas (bad) xchg sar and pop cmc sbb sub mov mov pop loope in js mov rcll push xchg or inc fs les cmpsl cmpsb adc mov cmp push shlb mov out sbb movsl and out out fwait sbb ret data16 push popa or dec out std ja push fcompl out and mov jnp daa out out pop jle out push shlb inc mov mov mov jge add imul (bad) cmp mov adc push jne lock push repnz out outsl and (bad) rorb in (bad) dec fidivl push or sub (bad) push icebp fldcw rcrb stos out pushf in fs out rcl mov es mov jge ret push test xor pop mov in and pop clc lret movb out ret push sbb mov jg (bad) or adc sbb and cmp out sub mov xchg fistpll inc add add fisttp xlat push loop pop stos aam in lret out push push xchg pop sti adc fsubr rorb lods inc stc imul fucomi and adc out iret cltd sbb lret out ss insl jp (bad) ret jg and dec out push bound les mov in push outsb mov xchg jmp lcall inc out jns ret (bad) xchg ja jp lret push cld mov sbb call fimull leave out in inc add movsl cmp pop pop push mov adc out push pop iret cmp sbb pop xchg pop mov lods aam or mov daa jmp lock mov out push mov shrb addr16 lcall cmp adc xchg push ret or idivb das jbe out adc pop push pop data16 cmp repz pusha out lods pop leave or push pop std sub inc push int xchg repnz (bad) mov xor cmpsl cs or xchg xor push pop jg div dec dec out lcall dec pop sbb add push das js bound out loopne adc loope push into cmp xor out jecxz std lcall shrl mov cs test mov mov andb or out mov push cmp push out lods pop push and jno call cltd aas fild and nop inc mov sbb cwtl and daa add pop lods aas jmp ret sbb loopne ret movsb push ret mov dec or addr16 pusha aaa in or and lds outsb or imul (bad) out leave pop ret jns hlt out jle pop rcl cltd lods (bad) rolb xchg js (bad) fnop cmp mov test (bad) mov repnz repz push leave incb sbb sbb pushf pop cmp scas arpl dec ss fbld jbe pop push enter imul fwait cld jmp (bad) jp lods shll push fsubp lods xchg cmp adc mov mov cwtl xchg out insl lods mull call loop (bad) ljmp arpl pop es in jp out pop mov mov enter rclb pop out xor jle (bad) das out add pop jp (bad) mov (bad) aam mov jmp adc sbb sbb mov in mov xchg mov out cmpsb xchg movsb loope icebp movsl cmc pop jl cmp addr16 mov mov jmp mov and in lds aam xchg insl scas stc (bad) sbb pop ljmp sub out add lahf mov and fucomip repnz je out aad fidivl mov xchg sub xacquire and enter mov mov fcoml or inc mov push out subl out je xor fidiv movsb and xchg fsts and lret dec clc inc leave (bad) test jmp mov (bad) cmpsl notb lock xchg out mov sbb xor jnp out fs in mov sarl xchg ret add out pop cltd aam (bad) test das xchg ljmp cmc fstps cmp jle shr out insb loop pusha out mov stos ljmp push fstl test jno add dec mov mov aad out (bad) in push shlb xchg xchg cmp es (bad) xchg std add cwtl mov push jne stc out pop in sbb pop ror repz and mov ja mov dec sbb sub out arpl insb bound xchg faddl pop out pop mov mov adc out mov mov cmp or push popa cli cmp xchg dec in clc loopne mov scas mov out shl (bad) jmp ret daa jo lahf aas lcall mov jne jge (bad) push xor loop xchg cmp mov inc out imulb inc ret out mov jae loop out insl pop iret inc pop and jb add out jge (bad) cmp pusha push out xchg xor outsl ja or push daa jg les sarl out jns dec push pusha iret pop dec mov dec es pop or mov inc (bad) out or xlat mov arpl and lock sub ret pop test into stc push leave out mov repz out mov pop sbb shrl iret out lods enter cmovae sub mov add (bad) insb loopne xlat mov scas ljmp (bad) out xor push fs jo out bound push sbb mov shlb mov sub jl test js pushf rcrl lock pop out xor out dec xchg cmp jo xor push jecxz or lods outsl cs cmpsb sbb xchg jbe cmp shl push and idiv adc push cmp xchg adc mov out mov je mov jle push insb (bad) xchg in lea out or loope psllq ljmp iret lahf mov xchg loop push xor mov out push imul (bad) mov sbb push stc sarb xchg cld fcompl in push jo (bad) jae fidivrl rcrb (bad) sbb out pop mov in stc mov xlat rep andl sub out (bad) les cmp inc cmp (bad) dec notl (bad) and je in outsl sub cmp pop push or fistpll mov xchg loopne xchg add sub and lods adc ret out mov (bad) xor and mov xchg loopne ds lea pop in aam mov (bad) (bad) sbb sub or (bad) jb sub adcl pop out sbb lods jmp stos or or fidivrl test out ret loopne sub push (bad) cwtl cs add jmp test cmp pop pushf in rcr enter sub mov xor pop out pop in or gs ja out mov jecxz lods sbb adc out hlt cmc in int xor out sbb xlat xchg and out lahf and aas and call lock sti cli and jecxz popa sbb pop scas cwtl fcomi sbb xchg out out sbb mov (bad) call mov in mov insl ss (bad) mov inc and fidivl mov ror aad mov (bad) js popa or test in jmp negb (bad) ds hlt shrb mov jg,pt jae cmp mov out or pop ja inc ret movsl fsts cs xchg clc adc push mov push out xchg lods sbb mov lcall out data16 enter (bad) push sbb mov scas jmp out mov dec lea ret or out (bad) shrl out add fwait aaa (bad) icebp cmpps into out mov rcrb cmpsl (bad) movsb lret sub pop xchg push pop js lods (bad) out jle xchg mov lea mov rorl inc std out dec pushf clc addr16 cld loopne push repnz fsubp daa out cmpsl int adc adc or icebp fsubs (bad) sbb jmp leave add out (bad) in dec int imul fcmovne xchg inc test inc out xor (bad) jae out jmp jecxz lods pusha xchg leave addr16 cmpsl (bad) sbb mov addr16 jnp sti out fwait pop cmp xor out mov mov pop add out xor fmul imull add outsl adc xchg jbe pop adc jns sbb or jnp pop mov pusha imul ds cmp fimul test cmc in sub fist movsb out les arpl xchg pop mov pop xchg inc jae fucomp addr16 je sub repz fnop inc fsub inc js addl ret pusha (bad) fbstp mov (bad) test ljmp sbb push sub dec adc push jecxz jb es mov mov test out or jns lods out or mov cwtl xchg fnstsw jbe out ja xchg out push jb xchg out sbb rcll out ds mov js test mov pop sti mov pop subb cmp out jnp pop imul adc ret js mov sub xor inc out sahf sub rclb push lock out rcll adc cmp out subl ret out jne sub cmp cmpsb mov dec push mov dec scas adc out repz repnz push shr in insb rcrb out scas (bad) out movb out (bad) jno in insl adc cltd lods pop int3 sbb xor pop out pushf stos add (bad) lahf or cmpsb cs xor test push dec lock notb push andl fs inc out mov mov adc data16 dec out aam adc decb fwait scas loope xchg insl int iret xchg lcall jae out push (bad) arpl (bad) int3 popf cmovns sub nop jl rorl out pop shr push loope push mov pop cmc (bad) mov js mov out fwait out loope mov rolb cmp cmc arpl mov push pop in loop int3 fs iret pop inc xor mov jg cmpsl or out sub pop add push mov inc iret push push lcall mov loop popf dec xlat lds fbstp mov jmp adc add fcomip pop out out or mov lds jb fwait jbe sysret (bad) pop xchg pop iret in fwait les fs sbb out and int3 shr xor push je divb out pop ja in xchg lea lock inc sub mov jl cli out popa pop outsb xchg popf sbb xchg out sbb enter jecxz ret mov push les mov fucom imul jge jle out gs cmpsb orb repnz loopne mov loope cmp loop ja jno xchg out sbb xlat insl pop out (bad) xor mov push dec push xor sahf mov or jmp rcrb pop cwtl mov xor addr16 loop (bad) in out pop stos mov push out insl adc adc pop dec out (bad) mov pop (bad) xchg push mov paddd gs imul xchg aad pop out dec sbb fwait push rclb lea lret inc adc mov (bad) data16 imulb scas cmpsb and pop out adc and and mov pop cmp add cmp push cmp adcl sub sub or mov lahf test loopne out stc bnd add xchg (bad) cwtl (bad) (bad) hlt test pop ds sbb mov ja popa out arpl mov jge push push cmp mov push fsubr cmc sbb lods mov cld add mov jle mov add stos push lods int3 pop pop movsb add mov icebp arpl mov ret nop loop xor (bad) cmp out mov pop test dec sbb ffree aas or xor sub les mov pop and ret mov xchg sub mov (bad) xor inc cmp mov cmp fcomip ror cmpsb (bad) nop (bad) lahf mov lock mov mov out pop adc shlb fsubrp subl fist mov in out pop movswl sbb bound mov jo cmpsb out test in sub pushf jnp lods add movsl jae lcall jne adc mov cmp out nop out popf inc bound ret rcll (bad) jno out int3 cmp int mov or orl xlat nop cld add lods (bad) jbe jle jo xchg js stos mov dec push in int orl xlat je inc pop mov xchg dec dec ret out test dec lock xchg jns mov xchg (bad) jmp in sub mov out cmp out arpl dec loop inc jne jb imulb aas push sub ret sub or sti out xchg jmp lcall test fstpt inc jns sub rcr mul jg fcomip adc xor jne mov mov or inc xchg out popf mov sub inc dec cmp pop out mov ljmp arpl rol cmp push and sub sbb pop sti cmc jmp roll cmpsb pop pop aaa xchg je adc cltd jmp test pop js out xor jmp xor sub (bad) mov out rclb insl data16 fistp xlat sbb push out repz aas pusha scas push fnop xchg add out rolb or int lds loopne je scas out rcr rolb imul and jge ljmp loopne cmp jbe jg aaa ret (bad) push ljmp aaa hlt inc sbb sar and cmp dec popf dec cmc out test push pop jl fisttp ds mov repz sub iret in out push mov sub dec add jp and (bad) or xchg or jno (bad) out push sbb fiaddl fnsave sahf xchg out adc pop dec hlt add fsub xchg push or sub out int push sub pop adc out cmp adc pop stos add repz pop icebp xchg cmpsb repnz add mov and out push (bad) sub pop imulb shr cmp mov out movsb jbe outsb mov in and ljmp xlat out cmc pusha hlt dec push movsb lods sahf in inc inc sbb push mov sub cld xchg movsb xor int3 add in inc xchg out xchg outsb mov jl sub imul iret mov out les out dec xchg xchg (bad) push out inc xor push lods out and add sub repnz nop (bad) sbb fistpl cli mov lcall mov (bad) pop inc jg popa lods bound sub out das xchg push dec push sbb bound mov out cmp std or imul ljmp bswap push int cmp fidivrl popf ret inc loope,pt cmp sbb idiv xchg fmull jae out pop pop xor mov out pushf mov aam outsl push dec (bad) jecxz xchg jmp out cltd mov add out jne push cwtl mov xchg idivb mov into jecxz pop (bad) out shll out cmp mov lahf cwtl out out fcmove mov inc out aas pop lock mov call (bad) std movsl pop mov cmp fsub out pop jmp out sub movsb in or xor xchg or imul (bad) sti (bad) and pop (bad) jmp in out pop mov test out fadds jle sbb test icebp push int3 mov out push mov xchg mov out ret adc sbb je outsb aas xor out pushf lods ja ret mov in dec call mov scas aaa xchg andl mov pushf in in jle dec sarb loop cmpl pop adc adc pop pop rcrb cmp pop rcrb and in ja popa out push pushf lea test add mov sub aaa out lahf (bad) dec fsubr rcrl push rorb lea and rcl out pop adc bound inc js out xlat pop cmp iret lds in in mov dec pop and fsub push mov shr push or out fldenv push nop dec out jg bound notl ljmp cmc std pop mov dec jmp and cmp lea xchg mov ret fdivl add je out fwait pusha push sbb dec (bad) push jp push inc into sahf fucom xchg rcr lcall sti test inc out js jne sub into and bound aam adc xlat insb ret outsl inc lds out movsl test stc ficom imul fistpll fdivr ljmp xchg inc pop sbb ljmp add push js out scas stos pop lods icebp mov xchg sbb dec jne (bad) out je xor lods and xlat data16 (bad) aas mov enter in test pusha sbb test insl pop daa inc outsb ljmp push jmp dec es mov test aaa lds sub push mov (bad) shr and sbb or mov in fwait jp xor aad sub cmpsb in push bound out (bad) sbb jg js jmp es outsl jb fstpl cs add mov jle jo adc inc xchg adc inc repz daa xor out test cld das inc or sti inc fistpl push cmp inc out es fucom xchg jno jmp jle sbb and adc dec mov out adc mov mov sahf or adc sub mov jge fsubrp mov lcall outsb xlat mov or cwtl or cmp adc sahf mov jo ljmp cwtl jo mov out jb add xchg in (bad) pusha and aaa xchg out lock and addr16 out sub and jns jg out fs mov stos out mov fadd fisubr jb daa loopne sbbl and clc out mov bound out add scas pop fsubrl mov ror loopne lret aad fldlg2 pop mov in popa mov fnstsw call xor testl jmp xlat sub cmp hlt loop sub in ja (bad) fistl fucom sbb out sahf inc push js dec mov adc push (bad) mov jns mov stos aam sbb iret sub dec loop test (bad) fild sti pushaw adc xchg xchg mov lea dec dec xlat sub orb sub out pop rol enter movsb out and lea push push xchg mov je inc sub and shr shlb push scas cld pop push outsb cs mov out outsl (bad) leave out xor mov cmp out lods sbb repz sub or jno jp and xlat inc mov xchg out ljmp shr sti pop fmuls data16 daa rcrb dec push jle inc pop call popa jmp loop sbb xchg (bad) sbb out pop inc shll and pop out xchg ficomp mov popf adc xchg adc lret (bad) out jecxz inc in inc das pop jnp repz sbb call push daa xchg jle out lock jmp and out inc fist push xlat adc call es lret das mov cmp gs mov fs xchg xchg int3 sub adc movsb mov leave mov test mov daa dec fwait (bad) out out (bad) leave pop in mov stos cmp sahf idivb mov data16 (bad) negl in out push dec int3 iret dec sbb inc jg lcall ljmp pop icebp mov add mov xor cmp push movsl inc js out (bad) int mov pop adc (bad) mov (bad) (bad) pop push pop ljmp inc out les xchg lret jp ret out shrl aad mov fcomps out (bad) xchg (bad) mov outsb rclb inc fistp sbb jmp iret cld nop (bad) pop (bad) popf ffreep mov inc shrl pop out ja or (bad) gs ljmp aas adc ljmp (bad) lods pop pop out clc mov push lahf out stc popf pop les dec push ret fsubrl out aad push sbb fimul ds jmp sbb arpl hlt and xchg repz ss sti pop pop xorb (bad) test popf lahf jge lods push lret or ja mov push jno stos xor pop loopne jmp inc dec test in cmp mov imul jg ljmp arpl push insb aad push inc (bad) mov pop (bad) (bad) pop outsb xchg lret pop lock inc sub dec out rcrl mov das mov (bad) mov nop push cmp out mov sahf fsubrl push cmc clc out hlt divl cmp loope fistp adc mov lock xchg shr cmp mov mov test scas xchg ja add dec cmp dec jmp pop flds lea int3 enter fistpl inc outsb (bad) int dec out push mov in repz rcrl lret imul out mov scas or adc or lret loopne jge xchg pushf rolb icebp jg shrl sub cmc out inc out loope ficompl pop cmp std mov jae sbb mov enter insl cld repnz mov out pop clc or ret out popf cmpb mov fadd fidivr stos das imul adc sbb sbb gs push mov mov dec pop xor rclb fistpl pushl cltd je xchg stc leave insl fwait push push out lret test int3 dec mov xor (bad) jae lods inc in inc ljmp not dec dec cmpsb les js add cmp iret (bad) out hlt in xchg orl scas in stos pop in cmpsb push pop pop dec insl mov xchg xchg out lds pop sub out mov subb outsl mov pop ja (bad) leave fisubl gs cmp fstps loopne pop (bad) clc (bad) dec xor inc xchg cmpsb mov sahf push (bad) aad sub out lea aas in mov sbb outsb mov cltd stc dec out in into leave mov out pop in lea clc loopne dec movsb push jge or mov push push std roll pop movsb pushf fs xor jecxz xchg aaa push mov inc hlt jg out fdivr cmp push bound xor imul jmp xchg sbb cltd lds mov cmpsl jo aad sahf push fs out lcall cs (bad) or ljmp in mov xchg divb fistpll pop stc call scas out sub ret xchg negb daa inc imul mov jg pop mov int3 fimul das gs pop rcll je jmp adc (bad) and adc mov xor out enter push out fdivl arpl int push imul mov xchg mov xchg shlb imul xor sbb inc pop push cmp xlat aas ds fadds sub or in inc addr16 mov cmp mov mov xchg inc insl or clc in and mov adc rolb out xchg repnz mov fstpl aad pop aaa pop push (bad) jno out ja add mov mov out aad jae (bad) cmpsb mov in jle pusha stos in es ljmp out pop fidiv adc int xlat dec out pop in pop pop imulb mov cmp out push or nop mov enter jge inc push negb in lcall cmc jo pop scas mov jmp (bad) repnz fimull cmp stc xor jo sbbl call jb iret pushf pusha stos mov in movsl jmp xchg xchg mov out xor scas popa icebp mov out enter or (bad) out out (bad) cs and out insl add fdiv cmpsb (bad) jno pop push test mov or xchg cs mov mov jb sbb out fdivp inc add out sahf fcmovb roll dec mov cwtl ljmp (bad) fsubrp fwait sarl push (bad) out mov out add cmp out aaa repnz cmp push sub mov add mov rcll lock xlat mov dec mov sbb out push fs aad sub lea mov push out fstl out mov das movsl insl pop adcb gs in test call jecxz test (bad) out cmp mov out add shl pop xchg push aas out jno lods push out pushf aad cmp js,pt out int3 push inc lea dec aad lods cmp jo push in stc out inc jnp (bad) out jle cli inc mov adc inc mov rcr pop out xchg cmp addr16 shlb inc out mov inc pop pushf mov (bad) and lea mov out push (bad) mov loopne or pop pop lret jnp std jb lock loopne add or adc out dec lods insb dec mov or xchg mov (bad) pop out (bad) pop pop push push ljmp and cmp loopne mov out adc out sub xchg or fldz dec dec jae sbb movsl bound aad leave out jns out inc dec (bad) xor cld lods inc (bad) adc out and cmpsb xorb sbb cmp mov fmuls test push pushf xor sub rcrb or mov adc (bad) cmp out out in popf int xor test mov mov push cli inc sbb push out lahf cmp mov out mov rol test jge sbb js mov fsubrl (bad) out adc adc xchg ja out xor rclb jp out or clc push mov inc lods xor lret repz mov push out shrb ficomp (bad) rcr mov in mov mov add inc outsb cli pop or jl ljmp (bad) push jmp dec mov cltd pop or mov mov in sbb cmpsl cmc out aam daa cs aaa mov pop lea add fldz push ret mov arpl (bad) mov adc es out outsl mov push imul add in je fwait pop call in cmp sub (bad) push in clc and inc sbb mov add pop jmp adc out add inc aad ficompl (bad) hlt adc out nop out xor lahf (bad) or scas jno sbb int3 add cld lock sbb cmp push rcr movsl (bad) pop imul push icebp jnp sbb mov jae bound loop ret and add pushl movsb popa mov aad insb mov out push mov push (bad) (bad) xlat loop sti data16 out aad stos shr sbb fptan test hlt imul pop jmp jle pop scas imul mov mov aaa (bad) jo rorl cmp push push loope out stos inc imul (bad) xor out dec repnz xchg push add adc jp pop in imul outsl (bad) enter out mov inc sub fildll mov (bad) cld cmpsl fistpll or cli adc sahf sbb dec out outsb push mov data16 mov es cltd testb out jae and test in inc lret lcall sub cmpsl mov pop aam data16 jne push and out insb outsb pop sbb out in mov mov aaa push sub push dec ret out mov adc inc ffree addr16 test test push sbb ja scas sub push cmpsl jmp pop pop enter inc ljmp out rcrb sahf xchg loopne out adc pop nop push outsl mov pop xchg and ljmp sbb pop dec sub out fwait mov xor inc std nop pop cmp mov (bad) in (bad) dec pop jne lds jl iret out add out hlt xchg aam mov jb jg enter cmp jg adc mov dec popf in (bad) cmpsb (bad) push lods and daa jecxz in jnp iret push inc pop fwait (bad) adc std icebp xchg mov jg outsb add out mov inc sub iret pop (bad) out mov pusha mov sbb out push int xchg or cmp fist and out aaa jl xchg lcall rolb mov inc dec cmp imul and loope mov inc gs lahf sub dec out jo mov int sub pop pop jmp fsubl add dec jae or fs or mov out nop pop pop dec sti mov (bad) mov inc push loop loope adc pop jge and xchg out xchg dec insl out mov mov repnz mov mov sbb aam mov add sub xchg (bad) sahf dec jl aad jg fsubr jge mov mov scas leave bound mov loopne rep sti loope pusha pop jnp xchg aaa inc mov in fcoms xchg inc pop and push adc lret ljmp aas push dec jp and (bad) mov addr16 xchg call out mull rcll imul dec (bad) in or fildll vshufps mov daa (bad) out xchg cwtl stc movsb mov mov out push loope,pt or out (bad) push cmp xchg ja les jp lock xchg insb out hlt aaa sbb out inc add ss dec cmpsb out mov mov out fidivl and push pop xor out mov popf (bad) cmpsw stos aas jmp xor mov lods xchg adc or out mov stc iret lcall ret out data16 mov push out mov pop mov lahf ds bound pushf insb test sub pop adcb in cmc mov psrlq in jecxz (bad) loopne fisttp loope in sub cmp xchg cld push outsb out add pop mov je xor into push mov (bad) fucomp lahf ret in rolb adc mov jmp push rcr pminsw pop sub push fisub lods sub push dec je adc inc stc out or fidivr mov and or arpl add xchg sub sub sbb pop or lcallw mov push lods adc push inc out std in mov jg mov xchg mov out pop gs incb dec mov sub inc mov jmp outsb and xor inc jp rorl push jnp imul inc out and add dec push sti out sbb inc fsubp and sub popa outsl fs std popf mov adc dec jmp add insb test pop inc xor mov xor out imul lret cld in inc push mov int pop sbb mov loopne lea in mov mov cs (bad) xor mov (bad) sbb sbb xchg adc fisttpl test ret out andl sbb adc push in push aam pop iret mov push ljmp stos out sbb xor popa int3 shrb out sbb clc mov out fimull fwait ret mov icebp or sbb out push dec xlat in cmp out sbb hlt cwtl and es out xor shr in out mov ljmp (bad) xor sahf divb sbb or jbe sub inc pop push jl sub lock push in cld scas es iret jecxz mov mov cmp push out add xchg dec pop jne (bad) out stos dec push test out out inc je insl test or out dec loopne in fidivrl jae xor sbb jl test push fucomp and jnp arpl jecxz or sbb sub daa movsb loopne inc lahf lock adc nop cmpsl dec mov mov mov in xchg out pop xor pop shrb je (bad) mov mov dec lods sbb or out in shr mov push pop rolb stos arpl cmpsl pop js mov jmp xchg cmp adc (bad) idivb fiadd insb mov test les and xor and cli xchg cwtl out jo cld outsb in push paddsb in (bad) ljmp sbb jo dec sub pop sub mov loop je in iret jo scas movl out or dec shrb hlt and xchg lock leavew test lret loope out or mov jnp xor std push push mov insb or ds out mov sbb inc mov pushl jp loope cmp out and out xchg fdivr sbb js jo test inc mov outsb fstpt dec lods mov rcr adcb ret pop add outsl and jmp mov inc or frstor jb mov stos out mov jns jmp xchg push out fidivrl clc scas and sar mov les inc imul pop pop pop into daa adc add sbbl adc adc outsb incl mov ret (bad) insb pop mov dec push (bad) cli pop test mov push out jg and out xchg push lds test das out mov pop je iret adc pop out adcl mov lret sub in cmp in stos std bound out out rcr pop lods or push cmp adc jne xor sbb dec stos test call push xchg mull lds (bad) cwtl scas arpl data16 jns xchg fcom push and adc decb sub push mov sub push fwait repz jns push loop adc es xlat jno imul pop sub out sbb test ret ljmp jl cmc (bad) stc mov out out mov push mov fsub cmpsb pusha xchg mov loop fucomip je and mov out sub push cmpl mov mov xchg mov and orb roll loopne ss clc jo iret pop popa inc pop mov out rcl aas movsl iret ljmp es out lods pop pop in addr16 lock out aad jmp (bad) or shr or clc inc inc sbbl lds push out sbb xlat sbb imul mov sbb mov and out dec dec jmp jbe adc popa rcl shl jae ljmp push inc loopne int3 ljmp and mov cli out mov fcomps mov jg adc cwtl sahf cmp sbb adc pop fwait loopne mov gs adc sbb pop lret (bad) fucomp xchg pop insb hlt out repz add push dec lret fiaddl incb xor fs inc in test mov (bad) sub out push mov inc cs addr16 cmp mov inc mov inc int3 out shlb cmp pop (bad) fiaddl out es insl and roll insl pop (bad) fildl inc inc push or lods clc dec sbb add out sbb (bad) fucomi mov push push or mov push mov out inc (bad) jno int push gs insb sub xchg mov pop (bad) bound mov ljmp (bad) xor jg bound cmpsl mov lods (bad) xchg out pusha jne fnstenv push shll imul mov stos mov inc out repnz hlt add adc push push pop aaa jae out fcoms mov xchg int3 add scas movsb push call push xlat js aaa rcrb xchg imul ljmp (bad) pusha jmp cltd (bad) movsb dec xor ds sub stos out icebp and mov jl sbb test inc mov fwait xlat out mov shld jne (bad) in das lods aaa out mov cmp out push or pop call int3 fistp (bad) lods out ret stos sub pop in sbb (bad) loop push aad push mov push inc fst (bad) cs cmp pop mov mov and jmp push adc add bound arpl xlat mov mov lea imul mov leave jo cltd xlat jg add push and out cmp (bad) xchg fsubr jb daa jns mov adc mov pushf jae and jge fidivrl out repnz frstor out in sbb pop jb int jecxz push ljmp mov aam sbb and testl into pop push mov insl sbb dec xor pop lret dec ljmp xchg iret or call clc movsb out out xchg popa jp and scas out xchg adc fnstsw icebp out or (bad) aad mov mov popf jge jns in add and lret loop loope negl pop mov out and out jb mov pop (bad) addr16 mov je aas jmp shl aaa pop out in jbe (bad) out in push xchg or sbb jnp mov out push cmp cmp push jecxz orl nop add lods in shr sbb mov call int add mov mov std jno out ret fabs mov push xchg movsl sbb icebp ljmp out shlb pop jne sub push xlat adc in or jb xchg sub stc mov decb mov pop mov inc pushf int cmp out xchg push dec iret jcxz jmp (bad) popa ja (bad) std out sub adc fistpll cmp out and dec xor addr16 sub jmp out pushf ljmp out cmp xchg test out add fwait xor inc cmc rcll gs pop jl out or sbb lret out dec push xchg gs sbb jecxz scas out xchg sbbl dec adc pop out jno dec dec xor mov pop add inc push out call sahf ljmp clc push sub cmp mov fs out shrl lret into sub lret cmp imul (bad) pop jo inc jbe out rcrb xor push and push dec jg jnp lods out out mov ja out add cmpsl out out in push inc out sbb out iret cwtl cli mov lea ss out adc sub loope adc (bad) mov push shll imul (bad) sub fsubs or out cmp call jl push lret (bad) cmpsb inc out fisttpl xchg mov push push sbb fdivrp idivl add (bad) lock adc xchg loope out cwtl fisttpll iret out out scas push mov xchg scas mov xor jge fbld adc movntq out dec add sub add out daa jg int hlt ficomp xchg mov sub and lahf pop mov out or add popa ficompl ja sub cmp ljmp aas jp out xchg mov cmp loopne fldt push mov out aad mov xor mov mov insl add fsubr add out out jmp jg jp into mov sub adc fwait daa out xchg dec lahf cmp out inc fnstcw mov jnp mov imul xchg in mov out pop mov cmp jbe out sbb mov mov dec cmp nop cmp add int mov out xchg faddl stos out ret or sub out mov (bad) rorb cltd and mov rcr mov imull (bad) push call ret outsb or mov mov call scas xor shr jne mov into stos fucomp fsubrs lret andb xor pop (bad) jl fadd mov pop out fnsave dec ds loop jmp cltd scas mov mov jecxz shlb xchg sub fsubr xor push lods adc xorb rcr stos dec in out jge rorb sub sbb out sbb stos mov loopne jp ljmp push push inc sarb std sub xlat fildl add (bad) and push ficompl push into mov (bad) (bad) mov mov rcrb out aaa cmp fsubrp in inc iret aad hlt imul pop cmpsl movsl and dec gs outsl out pusha push sarl sahf push inc sub gs ss (bad) pop stos sbbb out dec mov mov xchg outsb lret fwait test popl lock or xor xchg imul xor xor inc jne push out aad sbb test clc out inc out cmp jo jge xor xchg ja add out xor lds lahf and mov adc mov ret rcrl loop out cmp pushf pop jns fbld rcrb cmpsl xchg add sbb bnd cmp pmulhuw out lock xlat out stc call jae out popa loope jns je ss ret pop repnz fdivrl rorl jp lods out repz dec aaa sub mov xor nop inc pop in daa sub sbb and ja sti sbb fidivr out adc cltd das mov jmp sbb testb or (bad) sbbl and lahf or pushf lret pop out mov lea jo mov shlb and sahf or out fcoml lods push imul lret cmpsl (bad) popa nop pmaxsw lret inc adc jne aad jl popf in clc std jo mov (bad) sbb and mov push rcll out push (bad) dec sbb sahf out ss faddl (bad) fisubl int sbb mov (bad) or out (bad) out mov lea (bad) mov jmp inc xchg fcompl pop fbstp mov pop xor jle aaa push cli cmovne jns fldcw xor fcoms dec adc in cmp dec mov loope (bad) sub fs mov pop ljmp adc addb push (bad) lock mov cmp (bad) cmp xchg inc ficompl (bad) adc out shrb xor cmpsl pop jnp lods adc out (bad) lcall jb add aad enter sbb and jp in pop out fxch pop sub (bad) cmp inc or imul adc iret pop xchg mov jge (bad) loop leave out out push nop cmpsb mov and pop mov jnp aas outsl mov or jge mov lock (bad) push add out je adc fs inc mov into arpl lea push mov and or add iret or xchg shr (bad) in adc pop mov mov paddq fildll addr16 pop pop lret push insb or pop jmp push dec int3 scas in and out sbb mov push fisttpl mov or loop dec or addr16 (bad) lods mov (bad) ret out or shlb dec or in adc mov sub push xor imul jmp cmp stc adc adc jge (bad) pop dec imulb mov adc in sub xchg or push mov rorb fistp gs daa nop xchg jl out mov sbb mov mov cmpsb enter dec cmp in ljmp decl jbe lods xor cltd dec pop mov mov sub aas out inc icebp mov out fisubl out adc cmp js fidivr stos out iret stc repz fldenv movsl (bad) sahf xchg out mov in cwtl mov aad mov mov das and ret inc fwait in out push data16 mov pushf out push fild stc neg out jge mov lods data16 pop out adc repnz xchg sbb iret mov fist dec in cmc inc loop mov test jno lret out push (bad) adc ds jmp pop mov mov add aas lods xchg sbb ja jge mov sbb push and stos jb pop out es pop mov out leave adc dec dec jbe xchg out jne bound (bad) imul outsb arpl (bad) xor fsubr out fs icebp int3 jo out test aad lret out xorb dec insl sub mov or (bad) cmc fwait sub in popf pop outsl das idiv (bad) rcrb in shlb cld into test jno incb repnz out (bad) cli shl sub out and dec jmp in sub cmp sbb iret js test inc lds pop out lcall or aas mov lods mov mov in jns out mov loop push sub (bad) fcoms lret (bad) (bad) imul out sub dec dec inc (bad) pop cmc cwtl jae adc ljmp test out jecxz jo or out xchg or loope test xchg mov dec pop mov mov lods jns out adc (bad) out stc dec imul out jle pushf (bad) push push add addl sbb add mov sub ret push mov js cmp lds loopne iret out sbb and cmp std pop sub cmp or push jnp xchg scas pop xor mov loop xchg sbb mov hlt jnp out popa shrl popf mov dec xchg push add xor std pop mov mov subb insl adc aas push out inc loope push mov inc pusha test xor insl jno out and orl dec xchg (bad) shrb out inc insb out push icebp or add (bad) cs fwait ljmp insl (bad) jb pop gs nop inc cli push pop mov fisttp shrb xor mov push pop shr pop fdivrl and cmc mov subl push sbb hlt and (bad) mov test out es into repnz out cmp cmpsb xchg xchg shr jle shrb and or sahf les loop and leave sbb jmp xor imul std movsl or push fwait out push xchg mov dec push push xor sbbb sub mov cmpsb sbb mov push jp iret daa rcrl push jg ret out dec (bad) je stc (bad) push dec stos out or mov pop out push mov dec stos paddw test mov shr leave stos mov mov sbb mov test push ja mov and pop mov lret psrad cmp popl push jns pop xchg or addr16 inc jecxz repnz out cmp fcmove out aam addr16 pop lahf and and stc push jmp aas aam mov mov adc cmp xor lahf gs jmp mov out push popa cs push cwtl jg out push and cmp (bad) xor xchg out cli sub mov sbb clc xchg pop xchg (bad) gs add daa in dec pop inc out and (bad) ret in push lret fist jmp add shrl jl (bad) xor movsb xor dec imul out movsl sbb fucomi test subb cs pushf jne inc ja aam mov xchg dec ljmp out gs dec xchg sahf add or stos test cmp cmp sbb mov and adcl loop fwait and cld out je lds add pop loop pop fmuls adc outsl ret pop sub and cmc add inc jne mov pop ret jp cs jmp ret inc mov push out pop push (bad) pop cwtl rol mov jnp cs rclb pop es jp loop iret cltd shrb mov (bad) pushf mov jecxz pop movsb mov bound dec out icebp sub mov cld (bad) jp int lds in (bad) add sub sbb fs mov cmp (bad) stos jne add incl add pop js mov lea mov cmp out adc sbb lock pop cmp pop dec iret and std xlat jmp daa inc loope jle rol jnp xor out fisub push sbb pop and mov (bad) repz push mov push pop (bad) mov in fsubrl out mov data16 pop pop call les cmpsb pushf loopne adc es out enter lds cmovle xor in sub aam out xor push lea push cs jle das lret gs mov dec sbb add push cmp or std out ds mov sbb out cmp es xor out mov aad add inc nop out cmp cli pop aam sbb clc fcoms push and mov or out mov push (bad) out dec cmp adcl pop out idivl test xchg or mov outsl (bad) cmp xchg repz js jp inc push inc push xchg out pop bound aad rcrb pop js insb add fucomp sarb and nop xchg pmaxsw mov or push dec insl xchg rolb mov cli lock lods add inc xchg in dec dec mov leave sub cmp in mov lahf lods inc fidivl (bad) mov in enter sub out ror movsl insb and popa jo repnz cmp inc adc test aas jge (bad) push mov aam xchg fsubrs jmp pop add jg mov (bad) out push stc (bad) in js out mov data16 lds jo pusha add mov insl mov or xor out sbb fistl in xchg sbb stos daa in add iret enter in lods lods cmp scas xchg jge push jo xor repz outsb mov add aas jae adc xor cmp adc out test js pop push out cli pop pop jmp out or fistp popf sub out add je (bad) mov movsl out sahf insb imul fisub dec pop sub out inc push cs cld mov mov sbb jnp cmp xor test sarl outsl xchg movsb pop add std push sti out aam adc out pop xor mov and push enter inc pop dec mov mov mov sub das out aad ja imulb xchg mov mov sub cmp cmp pop xchg test xchg or adc jb aaa ss pop mov imul pop (bad) xor jecxz in add add cmp cmc jnp shr pop sahf push or ljmp cli pop dec dec sub movl pop ret out imul push inc cmp pop (bad) push jbe imul and ds imul cmp pusha repz mov xlat stc push pop mov rcrb cmpsb dec sbb arpl jns subl sbbb popa jl mov and mov pop lods fwait push out jg faddl mov lcall nop dec shlb jb dec jge loope xchg and leave iret fwait out (bad) pop and xor je lahf clc lock pop mov out pop sub mov mov push clc or fucomp jno les cmp orl lea xchg nop sbb ficompl adc sbb sbb push out xlat push mov out clc push xchg call out enter pushf mov cmp scas jno sarb mov in sahf out int3 iret scas das cmp xor out shll jmp out popa or inc mov mov xchg in std add loopne adc out ficomp shl xor dec in fnstsw mov ljmp add cmp (bad) sub sbb add mov push out dec mov push lock xchg sub std insb add inc fucomi movsl in adc jmp stos cli scas blci adc mov xor daa ja (bad) cmc xor sti cltd out scas adc mov out push call mov cmc test mov dec inc shlb jno icebp push imul out adc arpl scas sub in jae xchg out out or mov inc leave pop mov and and dec jle out sbbl imul (bad) stos dec pop pop das inc dec out mov adc cmp mov fist movsb adc cli out sub jno in pop jae jns ret aad or mov lods mov push and out insl push xor dec cmp sarb lret ljmp pop add test movsl shr jmp out push lcall out xchg out pop aam movsl out std aas out addr16 sbb lret (bad) xlat push adc loop add sti shr mov dec jae iret inc lret cmp repz mov push jecxz xlat out call ret aam mov loopne loop in rcrb push mov icebp lods cld out nop sbb out xor inc mov mov fisubl mov popa shld push cmp sub sbb fistp inc dec sub (bad) addr16 mov lret pushf mov shrl cmc fsub fs or push inc pop iret cld test call push out pop scas jg sub int3 dec mov aad mov out shrb add add repnz xorb ja pop out sub cmp pop jp or movsl mov out add aas mov jae cli (bad) sbb insb cmc int3 out fldl inc out pop jle xchg cld dec shr xchg je (bad) mov js out add dec (bad) fidivr jae out pop push bnd push int3 mov push inc sub (bad) cmp sub es xchg inc out pushf jae enter cmp sub lret mov (bad) jb xor fnsave push inc push pusha cwtl jnp adc or cld dec sub (bad) cmpsb out sbb mov aas cmp in dec xchg call fcmovne movsl testl test mov fildll xchg sbb mov xchg lds adcb inc push dec fbld addr16 call cs push loop inc push mov and push mov xchg xor jmp call mov negb inc (bad) sub xor mov out pop bound out fucom push dec cld stc add out out ficomp push imul (bad) je sbb sbbl adc mov out (bad) int lret add fsubrp push aaa xor stos jo repnz scas pop dec out sahf mov mov sub pushf out popf jo call xchg sbb adc scas inc xlat out mov gs cmpsb in inc cmpsb push mov nop mov xchg lahf ss xorb pop or call cmc (bad) pop pop dec insb sarl fsubr mov (bad) lret out icebp sahf push (bad) fisttp adc orl (bad) lcall inc sub or xorl and ret xchg test pop movsl pop iret cmp mov mov mov push in adc imul ret sarl fdivr in add mov push out arpl xchg pop fsubr cmp into pop out push sbb cmc inc loop lods mov lods xchg push loop in push push ss out mov sub out inc std pop lods (bad) clc mov mov nop out leave adc loope out call push (bad) loopne out test (bad) and ret cmpsl sbb leave call add imul lcall pop inc in out bound mov lods inc (bad) lods ds loop addr16 push mov (bad) imul xor lret pop fdivs xchg (bad) out sbb add sbb paddd sub sub add mov nop xor out movsl lock mov jecxz mov and es sbb ds out imull pop cli or out (bad) fs rorl out xchg test shlb dec out cld or jmp ficom out cmp lahf aas jnp pusha push inc in or mov aad and xchg jb adc mov gs out dec into cmp cltd (bad) and xchg mov test out in in sub inc or xchg es (bad) (bad) out cmp sub (bad) fisubr out das cmc aad shll out push (bad) shlb pop adc pextrw push sub out pop leave fstpt test sub out jp sbb push adc jmp fcoml mov xchg lock daa sub ficomp dec cwtl inc data16 jbe das mov sub (bad) (bad) out adc out jne call fist rolb mov pop in pop mov or out cmp outsb outsl lahf jno push (bad) out test cli xchg loopne andl inc ror mov push sub xchg and (bad) stc fistpll adc add mov aas mul cmpsb loop sti aas pushf mov ret cmp ljmp arpl inc cmpl jmp dec in out shll loope subb (bad) jp loop jl sbb mov aas dec mov jbe cmp adc push fild test mov leave push cmp xchg (bad) xlat lods test (bad) mov sbb js mov sbb mov xchg (bad) cld jmp adc jnp jne cmp xlat (bad) xor out xor mov xor jo pop movsb inc sbbl cmp push out lcall rorb inc mov pop mov and jg lahf ss (bad) out fmuls mov jmp aad cmp test imul or pop shr (bad) dec add push out and pop xchg gs addr16 push push movntq sub push sti iret int3 mov sub add mov and mov insb pushf in mov loope dec out xor jae ljmp fldenv (bad) out mov rorl dec fs adc test xchg dec sub in mov push insb or pusha pop scas test mov out out (bad) fild jecxz push xchg out jae test aaa hlt imul (bad) fstpl test mov add mov scas mov xor cmpsl jle lcall (bad) xor out mov jno pop mov push pop loope dec mov les mov pop (bad) lret ret out push data16 cmpsb pop dec and xor mov mov iret inc sbb ljmp lds out dec add mov inc call mov jecxz push ret xlat jge and fldt aas mov sbb in in gs insl out cmp lahf add and out lret xchg cmpsl mov iret mov (bad) scas scas push sub out mov rorl iret pop movsl fcompl mov xor mov insl lret push out shr int xchg out daa sub mov xchg addr16 out pop cmpsb outsb and pop imul push in inc sub rclb in push loop xchg sbb jbe or inc (bad) insb lahf shr test stos push mov lods pop (bad) jno xor mov xor dec xchg pop jae mov mov or xor dec or fcompl or dec pop (bad) cmc cmp and imul out xchg dec rcrl out mov fnsave test out cmpsl lahf push insb loopne sub out into add cmpsb movsb out ss stos iret pop cld sbb in aaa lahf pop addr16 sbb fucomip cmp xor in push loopne stos mov cld xor shr ljmp mov inc loope mov out cs lock stos dec ljmp out sbb lcall mov dec push dec (bad) fildll ss add xlat dec in mov cmpsb mov cltd mov mov fstpt out (bad) repz cld sahf out pop cli iret jle push mov iret notb (bad) enter fdivr sub loopne sahf scas inc popf push out es ss outsl inc push cmc jne adc sbb out dec dec sub iret inc xor ret out fisubr mov lds out mov imul cmp fwait mov (bad) clc shlb cli les or out xchg in mov (bad) mov out aas lcall push add xchg lret xor or aad sti cltd loop cs jb mov or out xor into loopne in jns mov add out movsl (bad) xor (bad) loop lock out mov (bad) lret mov push xchg out cwtl in push dec add aaa out pop mov mov fs mov mov call dec jl lods or out jg jb or or jmp in push (bad) mov push out addr16 jbe xchg pop test inc xor and mov mov xchg sbb out and or jae adc das pop out arpl out inc (bad) push pop xchg pusha es enter dec pop mov xor jmp xchg xchg mov std out add pop pop test cld and sub and ljmp out or lods mov or xchg inc and out clc mov mov out mov push ljmp out push loop cld pop arpl sbb in (bad) cmp pop or lods insl pop daa push pop inc xchg mov xlat lock sub mov loope sbb (bad) xor lret pop sbb and arpl (bad) popa fsubs pop out out push xchg adc mov bound imul jmp cmpsl inc loopne lret mov cmp sbb in sarl push mov bound xor sub out push inc jmp sarl std out jo mov jle out cs mov mov test ret cwtl fsubr dec mov mov das jno roll out stos or out add out lods mov cmpsb bound cmp out mov rolb jg push jmp stos iret popf xor lock (bad) stos xor ret stos xchg sbb addr16 add gs movsb mov xchg xchg out sub test push bound pop out sub outsb add (bad) sbb push dec gs jno out add or add outsb (bad) ss (bad) aam ret (bad) adc or pop into fistpll js out stos mov das add mov push aas mov jmp dec out cmp outsb ljmp orl mov in sbb dec or sarb addr16 ret out xor loopne pop sahf loope out iret sti xor shlb out enter and jecxz pop (bad) in add push push ss ds sbb out jae sub xor bound hlt (bad) dec pusha pop xchg cmp and in out repnz out xchg fs lods shrl jg out ds leave add jno sahf (bad) shl pop mov xlat xchg (bad) xor xchg cmc mov ss icebp (bad) test xor dec rcrl test movsl jo std in ljmp cs inc mov test push mov xor mov shr sarl jmp out sbb iret insb out aas xor pusha push scas (bad) push pop or pop sub push cmc jo loope mov dec in sub jns xchg push cli rcll (bad) iret lock add iret sub xchg mov popl shl push inc and popa pop out pop mov insl push jecxz nop add call mov es popa cs idivl mov sbb outsb loope add ss mov ds dec (bad) stc or dec adc out dec ja mov cltd push pop js fdivl iret sbb testb xorl jge out mov jne in iret dec in cli add jmp push sarb lods out (bad) sub inc xchg cwtl in mov out pop xor aas add in xchg jg loope out mov sub movsl stos push pop (bad) dec jmp push nop dec out ds mov test out pop std cmp (bad) pushf ss dec add aam push es scas and out mov xchg push xchg out outsb and movsl arpl cmp push enter jnp sub xchg out or popf out mov push test add jno (bad) out inc cld loop xor jge out insl negb pop stos aas lock enter movsb xchg in jbe dec out jno stos int3 fdivp into (bad) hlt loopne out pusha add rcrb in out in mov sahf dec out pop push push jnp xchg fstpt xchg add (bad) imul cli lock fnstcw sarl sub out jp iret push out in leave mov cli out jnp js push popa repz push movsl aam imul out xchg lret dec mov cmpsb in (bad) fdivrl cli jae jo out cmc add out pop shlb mov out lcall (bad) call dec push loop jecxz mov jbe pop jmp call mov out dec pop fldenv mov (bad) pusha imulb adc fisub jb inc mov or ret in out test inc fldt adc repz out inc rcll stos push out dec fmuls loope dec out ds imul inc or pop insb inc lods inc jmp dec jge out adc outsb les xchg xchg out mov xor inc pop fs inc sbb test out sbb and xlat jmp pop les and sbb mov cld dec mov sti ss dec (bad) loop xor negb das sbb mov xchg mov inc out outsl leave dec xchg orb out insb aas insl sbb popf pop jle add mov lahf popa lcall jns out ja push xor jecxz gs push push mov dec jp leave cli in out sbb adc ljmp out test push xchg aas imul arpl push out mov cmp or aam (bad) lret outsl cmpl mov imul push and in add stos notb stc jmp mov out in add test xor es pop inc xlat mov je loopne dec cmpsb rcr scas pop in sbb mov pushf ljmp sbbl test (bad) xchg xor (bad) xor imul adc cmp rcrl pop jg jnp clc imul out mov hlt ljmp ss bnd xchg sbb enter cmp fs out push sub test mov repnz or out and stc add ljmp out fsub pop fidiv jo test nop xchg lcall push (bad) sbb or loope pop test imul cmpsb xchg insl cmp xor hlt sbb add loopne in push fistpl ds lret nop xchg xorb in ret fsin pop and pop test and fucomip jecxz adc jnp pop rcrl out and fldl popf out cmp jg add bound push jbe outsl pop out aad enter xchg rcl inc sub mov jae xchg pop test stos out add das pop jb movsb add mov stos adc sbb dec out out outsb repnz cmp jno ljmp cs inc push inc out shrd jbe mov dec data16 xchg std aam repz inc jmp pop fucomip mov cmp daa sbb dec ljmp int3 das jl mov scas (bad) mov jmp mov (bad) out xor inc cmc test sub call shr addr16 cmp fwait out add data16 js mov test adc lods out rclb aam loopne mov (bad) ljmp cwtl xchg ret test cmp ljmp pop pop ret push aam add scas mov in mov out popa ficomp shrb shrl dec insl adc cmp dec mov rclb imul xchg out adc xchg ss inc aas dec std lock xchg lret mov mov scas je out pop aam into pusha int3 cs adc cld out adc xor inc cmpsb sub jge pop cwtl pop mov ret lock mov inc lret loopne int3 adc clc loop test or xorl sub (bad) xor mulb ss fldcw fimul xor sbb pop insb xor int3 xlat xor je lea fwait shll sbb in out ja pop fnop pop add lea fs mov jle pop ret cmc in insb adc jo push jg push inc rol (bad) out leave (bad) aam ljmp add jnp mov push js dec (bad) push lret clc xor and jb fiadd fidiv jbe (bad) out pop inc fidivrl push out sbb pop xlat xchg out bound sbb mov dec out clc fdivs pop pop sub sbb call iret adc sahf out pop addr16 push cld loop lret imul fcoms pop insb xchg mov popf cmp loope push shrb lahf call jle xchg xor nop push pop mov shr fnstenv and pushf add in xchg push leave jae cmp mov ljmp jno movsb bound push imul popf pop addr16 pop push (bad) xlat repz aas lods pop jmp adc xchg add arpl arpl ss cs xchg push ljmp add hlt cmpsl lea (bad) mov mov inc mov xchg pop mov sub mov rcr call loop mov sbb dec push nop xor insl inc aad push repz lods xchg pop inc popa adc imul push push scas add sbb mov out loop mov push xchg add push push jg in out outsl ret mov ret out add sahf out cmpsl xor jne jmp out scas cmpsb xor lock fs sub aaa push out mov das add sub dec (bad) mov lret repnz gs ja in shr jg inc push in test popf lods loop jo lock cmp (bad) into out mov dec ja xor out lods sub dec in pop xchg ljmp mov aaa out insl jg negl sbb out mul cmp push pop mov js aas inc sarb out (bad) pop fnsave es es pusha jo push lahf xlat dec sub xor add jb ret out in aaa inc sub jns sti aad call subl cmp mov loope stc out popf nop test lret test aas or ret arpl cmp rcrw loop aad jg mov dec dec rclb (bad) shr push aam movsl outsb ja mov or loop lock (bad) mov mov shl lods aad cmc out mull cwtl xor bound adc aas add pop dec jmp lahf cmpsl xor pop ljmp out out xchg fistl int iret out movsb inc and sbb pop and loope cltd pop and test mov dec (bad) scas push ret out aas cwtl inc test arpl (bad) fwait call out lret xchg add out clc idivb (bad) int3 loop out dec fldenv adc aam iret out mov outsb shr cmp mov push out mov push push and xchg ss rorb dec out scas fcomps push std aam mov pop imul aad push out (bad) jae and sahf imul std sbb call mov mov lret pop out repz ja sbb sub xchg clc out ljmp scas out in and cmpsb xchg (bad) and jmp mov loopne out cmp movsl fucomip adc cmp and leave jp adc out das sahf xchg setg cli int sbb loope mov in inc push adc mov outsl jecxz cmp shl (bad) push jl (bad) ficompl xchg push pop jnp arpl inc pop and out add repz lea lret ret iret mov imul push add adc or and xchg (bad) push out pop mov and addr16 mov push mov mov jne mov negb cmp xor out movsl mov xchg test lods pop push add scas xchg jmp cvtps2pi loop sbb iret lea inc repz out add jbe sbb out mov inc push decb sbb push cmp ljmp inc pushf subl pop and cmp out shr xor out pop mov stos pop ss ficompl out jbe int3 mov out jle (bad) mov jae xchg lods dec movsb dec out push xchg cmp inc loope call (bad) enter pop ljmp jmp pop mov mov xchg out pop lret xchg lahf inc mov fstps jecxz mov jne mov sarb cmp jb mov shll lea pop mov lcall popf ljmp push sbb cmp xchg movsl jae pop insl xor aas and subl rcrb mov inc idivl scas xchg jmp (bad) out enter leave test cld jae pop adc mov add cwtl lods (bad) jo inc pop lret cs fdivrs adc into std push mov ja pop loope enter pusha pop add dec out or arpl out mov push lds fsubl push cmpsb (bad) out dec out nop std insb movsb fdivrs or jl enter add in pop mov nop push in movsb cs je enter add fstpl pop add or mov mov out bound mov insb sub mov in out mov pop (bad) adc pop mov inc (bad) mov sbb insl leave aaa sbb out push mov orb daa aam inc mov cld and jg sarb mov xchg pusha adc aam fwait in out or or out jae in xor into sub mov popa push inc psrlq lret sub movb sub out ja shlb inc out hlt xchg mov sub dec or in mov test incb sub faddp mov incb fucomip in inc cmc ret ljmp aaa mov test scas add inc jno sbb lcall (bad) call mov wbinvd and ficoml mov loopne enter or (bad) out jns xor out cmc lods push push mov or in in es dec dec fwait xchg adcl jmp rorb adc out loop cmp mov in jbe pop push jae adc ret mov into cmp mov out and inc aaa and push (bad) rolb in mov mov into jbe loope xor sbb pop leave adc ja fisttp adc into ljmp ja call out inc test ret rcr sbb setl or xor out push pop cmp mov stos out div nop (bad) ds aam out xchg pop cmc sub mov jl mov iret sub repnz dec push orl or mov enter mov xor mov decb sbb in fidivrl fs sbb loop or loop repnz out and fild aas push out adc xor pop push sar mov push ror cwtl push and cmpsb xor cmpsl out pop jl lcall (bad) (bad) negb jmp test pop fs pop outsb jg push cltd sbb push mov mov mov inc push mov (bad) outsb fbld and out sbb xor adc or mov dec xchg adc out dec lods push cmp enter sbb movsb mov xchg out in xor mov pusha push out out lock les adc (bad) in test jnp adc pop add push pop imul arpl mov xchg out scas loopne das adc push pop pop cmp rep inc inc mov call sub test out rol aaa out (bad) xchg repnz xchg push xor iret pop push fnsave popa call iret call jg jl test xor xor stos inc test fsubr ret sub into out xor dec in sbb insl mov out push jae stos cld into ljmp das pop (bad) and fstpt dec lcall mov xlat lods sub imulb adc out dec adc (bad) rclb or popa or mov ds pmaxsw test sub icebp push call sbb push inc pop in inc out addr16 out aam ja xor test fs and cld sbb rorb in fistpl (bad) fbld fwait lods lock lea xchg inc ds sbb addr16 icebp xor sbb loopne lea ljmp hlt sub icebp arpl lcall and fsubl dec or fwait sbb jne (bad) xor mov cmpsl inc decb cwtl cmpsb in mov inc add mov orl mov (bad) int mov out jecxz jno sbb pop out adc and mov aam test xchg fwait or lret bound ja in out adc sub mov movsb out dec in idivb out outsl pusha sub xchg fist out cmp iret inc lahf mov lods (bad) out add push xor xchg in (bad) mov (bad) out mov orl ret out lcall mov add pop sbb addl push mov add in inc cli mov fisubr xchg xor sbb fidiv mov or loopne xor mov xor out xchg cmp test sar je pop xor popf jmp inc push scas in mov pop mov jb inc cmp lcall pop mov jmp jg out push out rcrb dec out scas iret inc addb lret sbb cmpsb jmp rcll jno and iret out xchg insb leave pop jne and cmp out test jo loop mov rdpmc xlat ja mov cmp mov fwait inc (bad) lret (bad) in pop push out inc xlat xchg clc push out movsl jne xchg shrb xchg fistl mov inc notb xor cmpsb xlat aaa insb lock dec mov add push jae les loop in push pop out stos mov cmp xchg add out mov sbb addr16 cld out js jmp dec nop and sub xor out call bound fucomip daa xchg iret loop mov push pop and jl sahf adc mov (bad) stos cmp scas je addr16 and inc adc jmp aad jecxz sub push fs mov sti pop pop int sbb sub popf shrl inc jecxz,pn sarl pop inc call sub ljmp mov dec mov jne mov fs (bad) icebp pushf adc fxch inc and rcrb mov mov clc mov sub ja pushf fwait out test xchg pop jg xchg push xchg (bad) into sub sub out and cld mov push test jns bsf xlat out jg mov push stc rorl les aad and (bad) lock popa dec mov add sub int test (bad) clc ds and pop out push out cmp jae mov clc out scas pushf lods mov das ret mov mov pop flds mov (bad) enter cmp (bad) daa jno out ljmp mov sbb mov out loope jns or fbld mov push (bad) mov push mov iret inc mov and and dec mov push mov jl das sub cli into mov jmp and (bad) es out jo xchg lea or add mov movsb nop sub out inc icebp insl sub sbb push aaa out sbb or addr16 push push adc mov and decb sbb cmp push inc out test aam adc arpl dec insl sbb (bad) ficom or ret das aam shl jl dec (bad) out lods into (bad) mov or dec dec push cmp xor xchg rorb fs test inc or jmp je out out sub xchg fcomps lcall push dec dec mov out add test cwtl jo popf out or pop xchg test cmc or dec mov popf sbb jo cmp or pop test out repz add out ljmp fldl2e out or (bad) iret jnp pop dec or add push cmp mov daa negl pop std fiadd test (bad) push jo loopne ds jle cmp or mov rcrb out or loope rorl aad xchg push lea lahf (bad) and out bound mov xor add adc out inc aaa out iret mov fisttpll (bad) sub jo stos mov pushf ljmp and out stc xor or xchg mov loope out push lods adc fdivr out sahf mov xor loop out dec les mov pop or ds mov sub repz in push mov sub mov cmc aam (bad) int3 mov outsb mov rcr mov mov std or scas out sbb cli dec out fcmovnu cmpsl inc hlt cwtl incb sub out test push add ljmp sbb movsb xchg cmpsb int fsubr add dec sarb fstpl sbb push loope fcmovbe icebp sarl in (bad) ljmp loopne mov inc out pop sbb xor mov out mov mov dec inc mov fwait enter fisubrl and add scas cmc fsts jle out fs jns push mov test sub and out dec daa or lock mov mov pop gs mov mov xchg out fildll push loop fmull mov (bad) out cs (bad) cld lret stos rolb jb rcll fildl dec (bad) iret out sbb mul mov rcrb push sbb jne and inc mov jbe mov mov ds out pop or lock jmp pop push movsl jo (bad) call out fdivrs in loopne stos popf fcomps sbb and mov pmaxsw pop cmp decb shll iret ja and mov add hlt imul sub pop fsubl cli push mov mov movsl jp daa cmp xor inc mov jge xchg (bad) aam pushf inc sbb in pop aas enter (bad) lcall shll loop repz xchg ret xlat out and xchg mov mov jmp pop lods mov pop mov je pop push out xchg pop add and es iret adc out (bad) xchg xor pop sbb sahf pop (bad) dec lret mov pop inc lahf cmpsl and in in jns xchg fstp cmp insb in pop push dec es xorb xchg out daa iret test out popf mov stos (bad) out mov xor sub mov sbb lea test popf adc out push cs mov out mov pusha bswap cmp ja fisttpl pop rclb out add push lahf mov adc lret stc into push out outsb pop pop out jbe pop sti shl fdivrl std and pop repnz or fucom add out push sahf mov push pushf inc ljmp inc movsb test rorb bound add xchg sti into xchg mov (bad) out loop insl mov and xchg sub sbb add jns popa mov imul (bad) mov movsl out call inc sub out iret (bad) cmpsb ret sti or shlb fidivrl out fs daa lds out cmp es scas mov out add lea pop frstor pop cmp lret movsl and out or hlt rorl clc es lock lds loopne xchg xor fucomp pop cmp pop dec inc sbb sub dec int3 (bad) insb add (bad) fldcw xchg or jmp and xchg pushf pop das arpl pavgw bound xor imul mov lds addr16 and xchg and pop sub out stos jb test paddsb mov adc scas imul mov pop mov add pop rorl (bad) and adc push jbe jne xchg xchg dec out (bad) leave inc js fwait sbb out lock fildll adc (bad) fist inc jo push dec mov idivb mov mov push popf sbb sahf push lahf xor aaa insb repnz fisubr jp outsb mov popf test (bad) ds xchg xchg imul into cld mov sbb cmp cwtl push mov mov vxorps out xchg inc pop daa movsl push cli test out or xlat pushf (bad) adc jg push popa xchg (bad) xor nop ret cmpsl dec roll es das xchg push (bad) pop lret inc cld je inc pop insl or mov jge dec xchg pop mov incb test jge fwait adc xchg sub std loop cmc out cmp mov sub push out (bad) mov cmp rcr jl loop pop cltd ret in out lods jg cld insl sub pushf sub cmc out mov jmp jmp jns mov pop data16 sbb aam stos jae into stos lahf and sbb sub mov fsubp cmp lahf fsts rolb ljmp out hlt pusha xor sbb cmpsb jle cmp inc and xchg push cs add mov lcall or shll out into inc sub jecxz data16 out pusha inc dec sbb (bad) cli out in inc roll jecxz int3 scas lods mov test fstl mov jle push scas lock pop jle and loop adc out popa scas or je aam in out jbe jo jns lods xchg incb adc loop lea incb inc ja xor jge push or jmp jg and loopne fidivr pusha push sub and enter dec stos cmpsl xchg fmul ja notl addr16 imul (bad) (bad) out xlat xor sarb dec cmp in cmp jp sub push jbe out (bad) sbb mov dec popa out cmpsb mov mov adc ljmp inc cmp rcr push jmp fucomip mov ret ljmp xor in repnz test push negl push inc push xchg es xchg xchg sahf jb and add jmp xor add jae jns push ficompl dec inc push sbb mov rcll and or dec fsubs in in ss lock or (bad) sbb (bad) rolb outsb add ljmp flds out rcll and adc rorb dec loop sti outsl jnp sbb pop adc pop jae (bad) cmp addb in add adc popf and pop push out inc test (bad) cmp addr16 jge xchg nop mov out xchg mov jmp mov xchg out mov push cmc clc pop sbb and call iret arpl inc mov adcl pop loope stos add cli fmuls (bad) mov jmp iret sti out sbb pop arpl das out clc push adc cltd adc cmp jnp mull jecxz aam out scas mov cmp fdivr ret jle js jl push out test sub mov aaa mov int out arpl jae out rcll sub cmp out pushf stos add jecxz das out lock inc popa mov iret iret mov pop aaa cwtl sub out aad rcrl aas mov out imul dec dec xchg jne out (bad) shr sub (bad) out mov cli xchg jmp repz or out inc nop stos mov sbb cs pmaxsw jo cmpsl iret lods adc sbb cmpsb out pmaxsw pop mov pop and out dec stos outsb sti out push xor fwait xlat add scas out sbb or mov adc (bad) push lret mov cmp out bound add fsubrp fisubrl (bad) push cli mov pop imulb inc out pop sarb mov out jmp push insl ja xchg out adc mov je adc xor and fstps pop xorl push int out mov mov sub lea shl rol out add sub out mov sbb and add out sbb mov ror lret mov iret adc outsb sub jb and adc mov in inc out (bad) das rol xor xor inc sub (bad) icebp mov rorb out loop test jmp ret out pop sbb fstps inc jns fisubl or (bad) pop (bad) lahf cmp xor mov loop push adc mov pop push fildll dec inc out jg push (bad) sti xchg add pop mov ljmp out adc pop repz push out xor gs xchg (bad) ss cltd sbb ljmp jnp push (bad) out or jge (bad) jo pop xchg push out inc mov xor xor (bad) dec mov cmp xchg adc lahf loope cltd fsubr sub enter lds lcall ds push js pop insl hlt push or or cmpsl add out and xchg pop outsl push xor call adc inc out aaa test cli pop sub (bad) in (bad) adc test add aas pop sbb out pop lahf cmpsb sub nop loopne push aam mov xor (bad) scas sub daa sub lods dec push out rorb rcl out stos outsb iret or shr dec js push out mov bound (bad) (bad) and sbb ljmp out jge adc cmpsl fwait jae test push pop loopne dec leave addr16 mov test stos jecxz daa inc cltd iret addb mov es out jo popf cmp fs loopne aas mov mov imul ljmp mov jae test jne es jbe shrb mov loop js jmp inc das sub sti sub scas rcll jno out xchg insl aas (bad) popa orl push test pop fldl jmp sbb out xor insb cwtl pushf mov pop rolb jae into pop in push out das inc ds mov ret jo xchg fisttpll neg popf nop out int jno lods add insl shl je lret scas cmp or pop pop sahf pop push jl ldmxcsr loope adc fsubl pop stos mov das xchg sub sub add bound outsb mov sbb push orl fstpl out sbb sbb sbb repz sub iret out xor mov shrb gs xchg push sahf cmc cwtl nopl test out add pop cs (bad) lahf jnp mov sarl insl out push iret stos dec sbb sbb or inc movsb cmc cmp pop loop mov ss out mov mov pop jge pop out prefetchw cmpsl out push leave insl cmp mov xchg iret in add (bad) out mov pop xor out divps pop out cmp mov push (bad) sub mov cwtl cmp out push sti and jl out xchg fxch mov out fdivr negl cmp nop popf push fwait pandn test push push mov inc dec mov and movsl out fcmovb andb add stos dec rorb jmp mov sub xchg inc add js out inc test mov mov xchg mov out popf in loop adc cmpsb mov sbb pop test arpl in iret pop push mov ja sub out loopne pop inc inc pop out or xor push out mov repz lods push dec pop call pushf out sbb scas push in and shr xor mov loopne push out not cmp out ja (bad) adc fisubr shr leave pop and in std push fbld or out mov pop adc leave cmpsb scas xchg ljmp and insl ret out mov sub push loopne xchg jmp add mov movsl dec out jno mov jnp sub (bad) (bad) repnz test ret add insl out imul mov add fldl leave shr mov mov mov (bad) push xchg inc sbb test (bad) dec xor push aam adcb sti sub mov mov mov mov mov pop xchg dec dec add fwait push cld in push in lea ja jge daa mov in (bad) sbb jns dec repnz lock imul fstpt addl addr16 shr mov cmp out mov mov jae xor scas pop inc add mov sub popa lcall mov imul mov cmp insl clc iret pop adc xor jns jne loope inc insb mov (bad) imul stos or xor out aas push and xlat out outsl cmc mov fucomip cli lret enter mov jnp ljmp rorb mov jo int3 jle subl je sbb jge jmp fidivrl out iret je dec cmpsl popf inc fistpl and xor lods out mov (bad) pop xor (bad) lods pop add push shr out mov push xchg outsb (bad) inc roll inc or sub shr dec cmp sbb pushf (bad) paddw stos fdivrs xorb add in inc xor icebp mov xor out ljmp xorl cli and icebp xchg test or (bad) xor dec lock pushf (bad) inc mov adc out cs out mov fucomip add jecxz out addr16 pop ja cld add mul pop outsb inc cmpsb mov pop cmpl jmp in das jne int3 mov sub cmp sub call sub enter out lahf rcl call out loopne pop lcall clc les mov xor loopne sub mov push mov dec out mov pop fldcw ds xchg or push mov aam dec cmpsl cmp fsub out repz aam xor push cmpsl inc vmovdqu xchg dec cmpl std cmp in mov bound std lods add lock push sbb (bad) xor jbe leave xchg (bad) nop out mov icebp cmp pop loop pushf test scas inc les dec (bad) mov (bad) xor std xor scas out adc cmp and mov out jle push jbe jo aaa ret loope jecxz aas or ljmp scas call sub rcl adc inc into mov sbb loopne adc mov jb,pt lds dec lahf out outsl xor sbb lret in shr test xor push shlb (bad) ljmp pop mov adc pop pop aaa pop mov rolb pop xchg add ljmp cmpsb out inc cld arpl pop adc push dec das fnstenv and xchg fistp mov mov in sub out xchg cmp out mov and ljmp (bad) in hlt in pop ret xchg xchg fs pop push and sub insb jp mov mov daa iret in jnp push jl bt cwtl ret out daa push xchg xor iret mov cmc or out icebp mov xchg xchg adc aas cmp add mov mov out sub mov js mov aaa loop push inc push cmp in (bad) rolb cwtl lods out sbb out mov aas pop inc fnstsw push fdivrs dec push sbb pmulhw sub (bad) out pushf fist fs int3 pcmpgtw mov jp dec sbb iret add push out test pop pusha or cmp inc mov loop mov pop mov das mov mov xchg push jecxz jb aas out popa fidiv in inc out lret dec sub psrlw xchg push out (bad) jmp or out and cld fistl gs inc sti push push cmp aam xchg aas mov lds cmp out dec push popa jg addr16 sub aad in out stos inc dec xor in adc (bad) lock imul push cmc (bad) (bad) aad scas dec out int3 lods test ret jne and gs xor cli pop outsl mov push bound out out rcr xor scas mov arpl mov or cli sarb in adc out outsb sbb push lcall mov pop movsb cmp adc out cmpsl sti push ret ss mov dec out fs or push jecxz xor or jb enter sbb fidiv cmp ret out pop (bad) mov and out stos mov fsubr mov xchg test sub or cmp pop jl jmp out rcrl adc ds pop mov jo fcomip xor out adc (bad) aad into loopne jbe lods pmaxsw push cmpsb in jae xchg cmp mov inc std out mov mov sub mov adc xor std lock int out mov adc rclb incb cmpl push pop loopne mov out adc pop aad push or in and enter scas jbe cmp push outsb lods dec mov lods pop lahf jae add inc mov ja into out or popa insb out mov jae loop int3 mov xchg out add cld jl out es aas mov add call mov lret mov xor out out insl push sti (bad) fucomip xchg popa mov mov xor cmp shrl les lret and fstpt or cs sahf imul mov out stos jae mov pop push xor mov pop or loope inc pop into lret out sub cmp xchg out add repz out in out sar rorl out mov dec xchg xor jae loopne gs out outsb notb push dec (bad) (bad) sbb out outsl pusha pushf mov jb lods in out out sarl push mov jl inc out and sbb out pusha lds or imul nop je out ss out scas dec shrl out sbbl call push cmp xchg dec out iret xchg adc pop lret jmp dec (bad) imul fwait out sub fidivr out and jmp and popf out xor (bad) icebp scas lods mov push aad push out ret call mov sbb sub cmp mov mov mov rorl inc xor cmp scas dec (bad) jne or sub out push cvtps2pi mov (bad) out out cmpsb mov out sbb jmp adc incb es imul iret sub jb aad mov popa dec outsb (bad) lock cmp insb push out imul lahf repz mov pop lahf sahf pop pop xor in cld sub mov addr16 jbe xchg loope push xchg aas jle push sbb xor sub ljmp out jno fmul stc imul pop test xchg js pushf lret lods push sbb dec fmul std or and lret in dec in jns mov and adc insl sbb loope mov or enter shrb pop xchg (bad) icebp hlt std or xchg (bad) sbb rolb outsl xor out lahf iret push jae in out mov cmp xor jo fimul jg (bad) mov repnz or addr16 mov fs jae cmpsb mov pop out rcrl loopne cmp push push jno mov call xchg mov fwait pop ret sbb insl js dec insl cwtl out sub out jo mov fist ss jb xchg out (bad) jp sbb xor out mov incb out (bad) mov shll or out in push gs inc adc hlt push (bad) outsb aam in aaa out nop sub (bad) leave fs xchg inc arpl sbbb mov in dec adc mov out int3 pushf mov ja pop pop xchg pop call scas cmpsl jo lds js das cmp cwtl rol shrl xor cmp xor mov rorl fs aad shrb cltd data16 mov sahf imul ja push pop ss mov loopne jne loop dec ljmp pop call out sbb shrb (bad) scas pop pop jb gs mov out stos push js jns or mov cmpsb aam aaa xlat push mov or lcall stos out std lds (bad) out ds jp out arpl insl js lock pop sub popf cmc test out stos (bad) mov jmp mov adc push (bad) jb mov sahf xchg sbb leave insb adc in loopne sub or shll les aaa dec cli lods push ljmp or stc popf cmpsb inc jbe stos (bad) out subb outsb cmp add aam cmp ljmp adc ret out sbb add mov arpl mov dec push insl adc or jo je (bad) ljmp add gs out lahf sub mov (bad) jecxz,pt push rcll out pop push mov or cmp mov sub push out out and push inc add sbb mov xor lea out adc ficompl out dec ljmp mov push fucomi pop jmp out add xor dec jg push push fs lods (bad) addr16 loop sbb lods fsubl sub std and cmp pusha mov in das add aam rcrl cltd cmpl sti and fist lods jnp (bad) xor test call mov pop add mov rorb (bad) popa insl jge xor out lods cmc jmp insb out mov iret adc mov out mov (bad) jne js int pop das (bad) jg repz jecxz xchg push cli jl and mov out jne dec jae sti mov aas push jbe xchg (bad) ljmp cmp outsb mov inc mov mov int mov add jmp cmp aad pop ja adc mov in cmp js nop and or inc cwtl jg xor out mov push adc adc aas out in aaa and shr mov loop sub cmpsl xor out lds daa test out mov mov inc cmp add decb mov cmpsl ret cli and hlt outsl mov sti out in in sub xchg pop jp or ja xlat es push (bad) lahf into icebp pop pop sbb in dec pop arpl jge loopne mov outsb sbb push mov out adc (bad) pop das ret out adc sub sub fwait lahf mov inc jno leave loope jae mov icebp enter or sub in pop popa pop out test gs xor (bad) mov xor out and sarb inc jecxz shl inc js out push xor pop pop jle xchg mov loopne out ds scas mov and and ss aaa inc xchg sbb out fstpt out pusha test nop out stos outsl sub sub outsb dec fistp jo mov out pop ret mov aam mov cmp outsb bound jnp xchg push pop sbb les (bad) fcoml out (bad) stc loope sbb iret (bad) out inc leave jmp xlat (bad) push push (bad) fisubr dec push incb cmp mov sub jae in ret rcr loopne loop dec dec xchg push out cmp xchg mov out movsb push dec mov out mov push aam (bad) out pop fidivr mov jmp outsb out or call cmp push xlat push lret and out sub jl xchg jmp (bad) out jo sbb sbb fild and out push aaa pusha insb sub out mov pop sub add mov mov (bad) push jbe (bad) loop stos jge and out sarl dec fsubp ret or sbb fs adc sbb jae xor xlat call mov scas ja dec dec rolb inc add in mov add decb push jmp cs cmp inc outsb mov push (bad) cmc shrl mov negb in jb cmp cmp rorb loopne jb mov push loop out jne sub xchg imul push mov outsl mov jp jae mov add bound leave xorb sub pop push mov cvtps2pi cs arpl pop xchg inc out mov stos (bad) mov aam cmp xchg sti pop pop inc dec test sbb jbe push aas xchg jecxz mov sbb sahf (bad) dec (bad) pushf push xor ljmp imul pop cwtl jns cltd hlt bound outsb adc notb insl (bad) cmc js pop arpl scas decl imul mov out cmpsb cmp jg adc sub and lret push (bad) mov out mov push mov aaa jno out sbb ret shll out out test lcall sahf jb insl repz out xor (bad) out pusha in jge jno xchg push out hlt in jb push lahf in out lea push scas sti push in jl xchg xor fs jo adc adc adc faddl daa in cmp (bad) mov rorl arpl sbb rolb xor out out pop cltd cmp (bad) sbb rorl and das ljmp pop insb jecxz pushf sbb out jle jae out rcrl jge out adc cmp loopne pop out xor xchg jne psadbw iret test out fsubrp sahf call std mov sub fldcw leave and inc in adc cmpsl loop add lret fucomi mov scas test pushf inc and add ret aam inc inc rclb daa mov insl cmp dec inc or fucomip das movsl jne mov aam (bad) out mov adc aad jge xchg dec jnp ljmp inc aam leave push (bad) dec out pusha jno insb mov or push sbb daa sbb mov jecxz out add ficompl (bad) push mov and call sub addr16 lods xchg loope mov lods jmp rcr push int3 push lahf xchg dec out call loopne mov mov fldt lods out clc push call rcrb rolb aam out je insl test cmp mov jle cli mov testl out pop lds lods ret cwtl pushf xchg and lret shlb push sbb out mov dec xchg xor (bad) mov cltd xor stos jbe sbb mov das or dec lret jg mov fistl out xor mov stos xor jb loope out call (bad) mov push sub adc xchg sbb daa jg ret sbb inc dec out iret imul sahf adc leave mov imul mov nop out and fisubl sahf aad out mov adcb imul out dec push sub dec test sbb (bad) repz nop mov lock sarb cltd push das cmpsl loop popa lea sub push stos mov out sbb into pop mov sub scas push push out adcl cltd (bad) xor dec mov daa adc imul xor bound jecxz out jmp inc pop fnop out push pusha lea dec out pop ds inc out stos aaa xchg sbb out sub pop inc adc mov xor xchg mov pop out bound and scas outsl xchg pop incb mov sbb mov push imulb out hlt cmpsl sahf aam mov into lcall pop jne mov mov (bad) sbb push cs and int3 push (bad) mov cltd icebp push enter hlt inc outsb pop fldcw ds andb inc bt out test and out or std dec aad fs fs out mov fist int sub mov addl push enter mov xor or out cld xor lds lret mov test adc (bad) mov cmp out cmpsb mov fimull call lea add rep cmp sbb rclb jo (bad) fcmovb push arpl int lods inc push das lds sbb xchg mov add call xchg out xor das jecxz ja incb push mov sub out cmp mov aas inc xor dec insl ljmp push mov rorl in push (bad) and idivb bound (bad) sbb push pop ja in mov lock (bad) in push mov mov scas (bad) out adc add xchg jecxz inc jb gs or in push js push rorl int xchg out push xchg jl (bad) mov out pop enter mov xor inc stos out mov out cmp bound mov push sbb mov and pushf jb (bad) data16 outsl aaa outsb push jnp xor out sbb in fsubrl mov in pop jl movsb push adc rcrl out xchg jg cmp mov pop out (bad) pop cmpsb add out fimul daa stos bound jae jns leave (bad) mov addr16 jmp (bad) jo pop push (bad) xor fild lahf mov pop out iret mov xchg xor adc pop push in das pop mov ljmp rcr or ljmp dec xlat out or rol je out jmp (bad) fwait mov mov scas lret mov out in cltd (bad) cmc sbb xor or es fwait negl les imul in out adc pop jo pushf fimull pop sub jmp das pop out enter xor push xchg out dec out inc dec jmp dec es out rcl rcrb (bad) les int ljmp vandnps leave push ret out std aam pop jnp pop (bad) out fcmove outsl fcoml mov xchg out mov movsb scas int3 jmp push out outsb pop test sahf inc (bad) out dec pop cmp or xchg pop cmp (bad) mov jb mov xchg pop lahf push in fwait pop mov insb push lds or clc adc lcall jecxz xlat les jle xchg mov insb aam daa out cmp jbe pop jmp and cs mov sub insl adc dec idiv movsb cmp inc inc jo pop std out (bad) cmpsb ret mov mov and xor cwtl inc out sti adc mov pop sahf scas jne ficompl fidivr fidiv dec pop xlat (bad) movsb mov rcrl subl out aad or insl stos outsb out push mov mov out or fdivrs (bad) mov bound inc loopne dec sub mov test out xchg jbe in dec mov jae aad cwtl mov and out xchg out or xchg xor fistpll bound inc fcoml ret out ret sbb aaa in movsl adc ljmp lods sub fild mov les data16 es xor jno loop pop inc out mov cltd jnp (bad) jns xchg xor nop decb inc repz scas lods or pop out popa fsub insb das mov out fwait out in xchg (bad) mov cmp xchg pushf adc jb push inc clc pop cmp fstpt je or imul and adc out inc dec shr and frstor or pop repnz aas mov cmpsl mov add out call inc jae or movsb popf mov fisubr push loop bnd out stos fstpl ja adc mov pop dec lcall xchg out call adc mov dec lock leave jne jge mov out fdivrl mov incb push sarl sbb out daa xor ljmp and je stos xchg scas push dec jb int out outsl lea fbld test test jmp js inc out in in inc or ljmp mov dec icebp dec fisubr outsl cmp nop in pop jo loop in inc daa (bad) ljmp adc pop add out lds pushf cmp dec in (bad) or dec fdivl out dec cmc dec mov pushf nop or mov jno mov out (bad) and sahf adc loop (bad) mov cs shr sbb hlt ret add aas jbe ja xor lea lods (bad) jmp incb and andl mov out clc dec inc xor lods into out pop pop mov and iret fadds test int arpl in mov js cld mov add lcall inc leave test push (bad) mov jle jmp cmp loop or fidivl dec ret pop mov sbb movlps je out add push test and push mov hlt sub gs ljmp (bad) ss cmpl scas cmp mul mov push xchg repnz outsl out in jl nop aas cld dec out sahf push ffree add xor loopne jae mov push pop (bad) cld and clc es out mov xchg fdivl mov loop fbld (bad) loop ljmp pop pop add sbb popa (bad) xchg sti out adc sub test test mov cmp out loope pop xor pop jb xor subl enter out ljmp out add mov out and lea xor mov cmp xchg das cli iret lods out xor ret pop int jmp mov adc mov mov sbb fbld mov push dec jo or dec je cmp mov mov out popf sarl icebp mov int loop outsl fcomip dec or mov pop cmp out sahf hlt xchg je js out xor sbb sbb sub cltd push lcall out inc xor xchg or jp imul pop out cld nop mov inc cmpsl sub add cmpsb sbb out in mov sbb lret cmp mov mov enter mov sub xchg jbe call scas sti loop leave pop imul pop xor fisttpl push jle out aas inc ret fdivrl pushf mov clc jecxz dec leave out push test sub xchg test outsl imul out pop cs (bad) popa in cmpsl or icebp into ret adc jb push pushf adc imul iret outsl jnp sbb fistp pop out sub nop jmp icebp inc out sbb (bad) jg xchg out mov jecxz xchg out pop sub xchg and push out cld mov push imul dec lcall sbb in (bad) out fsubrs inc and rcrl out and test imul ljmp mov stos das out dec les pop out cmpsb jp xchg loop test inc cmpl mov pop xchg out inc add jmp push push out test push adc ja lret xor mov jmp hlt shll xlat adc pop sub cmp inc jg jecxz out pop popa mov mov or aam out (bad) xor push push out push hlt insb popa scas mov mov push ret stos lock sarb mov mov xor int3 es xor cmp sbb icebp out rcrl or jge rsqrtps sub xor repnz dec cmc lds inc cltd out or pusha iret rol xlat push xor shlb shrl cmp (bad) out insb fwait xor lock xorl jbe jecxz lock je sbb xchg pop sti movsb push loope out cltd insl mov in inc out xchg adc pop (bad) pop dec mov lock inc out lret lods je outsb cmpsb adc out out and xchg lods imull inc inc roll mov out pop jo pop mov out pushf jae jne or leave and xchg add out daa pop repnz daa xchg pusha data16 mov pop test add xlat pop inc jge pop imul mov lret fs adc push insl into aad in out sbb lahf loopne jo xor fcmovnu leave cmc aam test outsb xchg es push outsl cmp (bad) inc clc jb mov dec adc js dec mov popa inc dec (bad) fucom mov mov fild mov xlat ljmp dec out pop and imul iret bound loope in push (bad) mov out fisttpll push rorl lcall enter repnz pop incb inc inc cmpsb jmp mov inc out pop pop cli adc sub xlat out or xor icebp pushf and xchg dec out fld and mov out mov les pop test out push push stc out pop call mov iret out cmp xchg lea leave iret adc cli ljmp inc push ret mov mov rcr pushf mov pop imull loope jmp fbstp xchg daa idivb pusha popf mov insb jecxz rcrb adcl sbb int out ja add mov push std outsl sub leave jmp out inc jp and inc dec (bad) rcl inc in call jmp fcoms push pop out es insl test loope rclb ficomp lock push push out or lods or ret cmp add mov loopne mov out ror call add or lock bound out std mov sar pop ret rol loopne fcmovbe arpl pop out int jp or fucom jmp fldenv in pop das xchg out jnp xchg loope mov stos out inc jo aad adc adc test out push rcr lret insl jae or or cmp adc add sub lods mov negl xor mov jne gs pop out loop cmp rcrb aam out xor sarl cmc xchg hlt inc dec or imul in (bad) cmpsl loopne xchg test sbb xor xor dec rcr sbb popf push rcll (bad) jae lods xchg ljmp sub jb pop lods pusha imul cmc icebp out pop shll sarb adc sub pop or stc imul out fcoml jle adc data16 (bad) aam fcmovne add fisub xchg pop loopne popf pop jmp out sub inc icebp jp addl xchg nop inc pop popa mov gs xor mov aas lds lods dec jp lea pop sbbb (bad) dec fistp mov pop out dec cmp jecxz outsl sub xchg jl pop adc inc loop mov pop push push out fisub fcomip mov mov and push inc xor add (bad) adc shrb jnp iret mov push sar mov mov daa or rcl mov ljmp imul jecxz frstor cwtl cmp lea dec (bad) pop gs stos int3 in hlt rcrb and jbe jecxz out dec paddsw out ljmp push loopne aas fldz arpl movsb mov lock test fbld rorl inc out test lds (bad) push ficomp push pop push out mov imul fwait mov icebp (bad) out push sbb lock nop (bad) icebp mov cli push sahf mov pop gs rcr (bad) xor bsf dec es test mov jbe shr cld out xchg or mov lahf lods outsl push inc out fs xchg rcll xchg jecxz fisubl pop bound mov fild add mov lret insl inc mov jecxz mov bound shl push out stos pop mov add fstl pop cmovbe es push jl lcall out fiadd out out or mov pop enter pushl leave shr inc mov inc ret ljmp cs lods push (bad) fldt lds sbb push (bad) out sub sub test mov mov xchg cmp repz lcall out rcl dec jne icebp pop sbb mov mov repz mov lds jb sti out adc out sbb cwtl add fstpt out mov pop xor addr16 xchg scas xchg mov das out aam cmp in sub cmp or es pushf sahf out push xchg les jae sarb loopne data16 fild xchg ret mov jmp test out sarl bndstx mov scas mov mov insb enter out pop push cmc jg bound das pushaw out sub mov jnp lret les jb jle cltd lcall paddsw out pop adc xor shr ffree aas mov test setno movsb adc adc out sub sti sub pop xchg lods leavew out (bad) jo and cmp xchg adc pop out adc inc std push cmp cmpsb fidiv lret jo jne leave dec adc out add pushf mov loopne incb dec mov sub (bad) fldl jno leave adc sub sub sub ljmp loop mov cltd shll out push fild nop pop sub push jg call fidiv adc add mov out test xor jae enter ljmp cltd sahf stc sub cmpsl out mov cld imulb in fistl adc int outsb xor xlat mov mov movsl sub outsb lock and ja or loopne jb out push fwait popa rcll or mov mov insb (bad) fucomp push sub in mov mov (bad) pushf cmp add fidiv insb dec pop pop cmc fbstp test mov pop in sahf (bad) pop mov nop lret popf icebp mov loope addr16 enter jl sub loope imul out adc add mov daa out aas out dec mov movsl std out jo dec add mov imul andl pop xor xchg lods xchg adc decb xor (bad) in subb or pop lahf out sbb cs push ss loope out stc mov mov push pop test out cmp dec sti xlat out xor and jns imul xchg sar mov adc jmp imul dec ror ss fs lock (bad) in bound stos and dec iret jge mov (bad) push sbb data16 popf and mov aad cmp jecxz xchg aaa scas movsl inc stos inc lock insb out test fldln2 repnz lret mov (bad) fbld xor mov xchg out repz ret (bad) out mov popa pop arpl xor lret fstps movsb je and idivl mov xor pushf std cli out out add out cmp repz lock cs mov xchg jo pop sti mov jl out sub mov insb mov out fiaddl mov jecxz inc std les jb cltd stos xor ds dec imull sahf mov mov popa dec jmp xchg ret mov sbb insl pop push mov add (bad) sbb dec popa sbb sub add ja xlat cmc xchg push (bad) dec bound loop ret jnp in xchg or test push in sahf mulps ljmp pusha out add loop lea pop daa mov jg mov out cmp sub jmp movsb lock es fistpll push add fisubl data16 aam sbb cltd lds std out (bad) xor arpl xlat (bad) out cmc ljmp jg pop xor out in gs out (bad) stos insb loope xchg es dec ret lea sbbl push adc rorb cmpsl pop adc js int in repz xchg xor bound loopne pop dec xchg js out ja sub push xor inc int3 aaa out lods fstpt push xlat (bad) loopne fdivrs js or jmp testb andl unpcklps mov lret sub lods inc out je and cmp shl test dec loopne fcomps movsb xchg or add inc ljmp outsl xchg adc or (bad) into dec push out jecxz cmp xchg xor aam in insl and fs jle out (bad) shr push cltd pop sub and and pop pop out in fcmovne fcompl aad cs xchg pop icebp mov or inc dec fidivrl fsubrl pop adc jmp lcall mov mov pop pop std into lret loopne aad enter pop mov je dec cwtl jne jge jle xchg and jmp mov pop insl dec in into int in inc push out aaa cmp data16 cltd pop inc xchg dec call mov mov xorl data16 lea and cmp iret rcr out and push out les xchg push bound (bad) loop gs push stos data16 mov cmpb sbb stc out mov imul jb cmp xor call jb jecxz cwtl sbb stos (bad) out in xchg repnz outsb fsubr cli push ret mov cmc pop jno imul xor pop addr16 fisubl xchg mov xchg test out sti in push pop sbb je dec fsts cmc lahf pop imul cmp je out addl (bad) xchg jnp fucomi lds and (bad) aad cmpsl ret jg lods xchg or jne inc xchg sub insl mov (bad) jl andl sbb shlb fsubrl out push xchg (bad) xor add cmp push rcrb push mov out push xor mov enter roll test outsb pushf push out in dec clc sti pop fld arpl hlt xor fstpt push and add lret lret cli add call mov jno insl push sbbb xchg jo inc (bad) out sbb enter add andl in lds fucomi or push pop xor inc fimull out mov (bad) (bad) out mov ds int3 pop pusha inc push das push in jbe sub scas mov bound nop out das mov push out sbb pushf dec dec shr out rorb fcmovb fucomp je leave addl lock fcoml sbb cs and adc jnp mov inc out subl out in aad sahf mov xor js les pushf out mov inc mov cmp mov and test out sbb push ret into mov and ja cli pop (bad) int mov push fucomip imul lock int out adc lea xchg ficompl adc sbb sti push mov xchg inc gs lods call test pop inc inc jmp lret imul mov popa push ljmp (bad) mov mov (bad) stc negl add jp aam or out cmpsl or std xchg inc bound loopne das inc loop mov adc mov icebp clc ss pop inc les mov and xchg pop fstpl out cmpsb outsl scas jae cmp add dec dec add inc push stc pop pop scas arpl (bad) rcrb rcll push ss shr mov (bad) jle cmp jmp add fsubr sub mov push pusha sbb in int leave imul and decb enter xchg lret xor inc mov std aas inc sbb fbstp add shlb (bad) mov out lea js sbb jge mov out jmp and sub push std out dec sub inc and pop sar fisubr outsl scas pop in fucomip pop push mov adc dec sub sbb mov pop push insb out jns pop stos push lea std push hlt test imul mov leave or pop jg inc push clc out cs out mov out data16 and pop out adc mov xor sbb jmp lahf outsb add mov daa ljmp aas ja test hlt xchg xchg push out adc pushf mov jle data16 sbb bound mov pusha inc sarl jmp imul xor sbb pop xchg scas sub dec adc out push xor data16 pop xlat jb daa roll xor mov out or lock push cltd aam ljmp and mov out mov jae mov inc int fidivrl scas loope in and add sbb add in pcmpeqw adc push push fucomp (bad) lds js out in add mov pusha outsb pop jbe pop shrw mov ljmp out or out mov or test lahf out sahf cmc clc pusha inc lds pop psraw pop test daa or rorb sahf popf add lahf push sti sub out outsb nop cmp out or test fldz testb push xor lret out imul push aad cmp (bad) out outsl push jl pop int3 jnp mov out push adc call out cmpsl and cmp out nop (bad) xchg xor test incl jbe idivb out mov jg les outsb arpl fnop fucomp cs jbe nop dec out sub out call jns pop inc movsl lahf adc loopne pop and gs in pop and mov loop add shl popa cmp and and out sbb adc out mov xchg mov (bad) jecxz (bad) aam xchg add sub sub jmp jmp iret outsb adc pop out inc pop or mov call icebp push cmp out xor mov xor dec sbb adc std cmp push mul and xchg cltd out outsl add hlt or fsubr (bad) and fild sarl mov add out mov fisubrl out int insb or out mov imul sar jae mov addl iret in jmp push hlt sbb pushl mov push out cs fcomps jns and fist adc fcoml add test mov out sbb data16 jmp in cmp mov sub pop in xchg cmc add jmp jecxz push push movsb pop or gs fsub cld sub jmp mov stos sbb xchg lcall shll outsl movsb stos fdivr mov and repnz push out jle in js cwtl cmp jae sbb mov cltd (bad) cmp call push jbe push jg cmpsb dec xor dec std lahf pop push inc mov enter roll cmp sub xchg gs xor nop and dec mov jle cmpsl mov adc dec jae push jno sbb jne pop push aad out pop mov xchg out lret mov xchg ret and ret dec sbbl push ffree push (bad) and inc xor sub mov inc rcrb jmp push test fucomi fsubl adc (bad) in xchg out js iret mov out test xchg jl das enter push xlat icebp and pop out xor mov sahf adc pop repnz outsl call enter jecxz (bad) nop out subb call or rcrb aas (bad) cld sub pop mov bound fwait (bad) mov sbb out test popa mov arpl aam fcoms fiadd out jl sbb push mov cs push inc add out ret mov sub push inc imul xor aad ljmp mov (bad) in in pop test fsubrp es mov out ljmp fs pop rcrb xlat dec mulb inc inc aaa out inc push lahf (bad) gs jbe insb or (bad) jmp jecxz cmpsb sbb adc push xchg or pop daa fs dec vmwrite jo adc out pop ja add jb mov cli insl sarl sbb jle lock das sahf mov cmp gs out clc xor pop std push addr16 mov lods repnz das lsl jns loop mov ficomp mov cmpsb out loopne sbb imul js int3 cmpsl adcl lcall adc shl jmp jb jo rorl loop sbb push fistp add pop fwait mov and push test push gs sbb in cld out push movsl dec jo ljmp mov ror pop lock out clc lahf mov jecxz gs in icebp xchg mov or push mov jno pop sahf in stos scas clc daa test push movl inc cmp jecxz dec fucomi stos and es mov (bad) push push enter push lods rclb pop imul sar cld (bad) popa outsb jns test dec pushf out out shr fdivrs push sub adc sbbb mov outsl mov loopne xor enter (bad) (bad) fsqrt jo rcrl jge add scas and inc fsts into mov xchg adc cwtl repnz pusha int jno dec movsb (bad) out lret ret dec test out adc cltd push scas xchg mov fbld jb aad xor in push js rclb jo call jmp mov inc out test mov outsb and xor add arpl cmp pop lahf jb jg data16 adc lods dec pop inc in (bad) repnz pop out push out cli add add mov gs xchg or pop sarb repnz adc mov clc insb push aaa nop out cmpsb jmp add mov sahf adc movb mov add mov leave sub push cmc add out cmp (bad) (bad) pop int3 cwtl adc push insl cmp out or fwait stos insb fbstp mov decb cmp mov les push out loope add or adc and mov and pushf jmp stos mov fcomip scas bound imul jne lret ret (bad) lock push mov aas mov into fcmovbe das pop pushf ljmp jmp cmpsb (bad) repz dec push sbb mov cltd jge ja lcall push push out or sbb and test sub out fstps (bad) out test dec mov inc jbe out out jl repnz rcll out or dec insl daa lods (bad) dec (bad) xor mov add ljmp xchg pop hlt (bad) cmc repnz fnclex mov out nop out dec sbb jbe out daa fdiv cmp push out addr16 aad sbb push mov xchg out push push inc add lds out int3 (bad) adc stc movsb lret cli out (bad) ficom adc push ljmp outsb mov xchg xor into cmp incb pop clc pop jb insb mov loop cmp dec iret mov push adc xchg sub sarb int sub imul jbe fstl aaa cltd out rcr loopne jmp push in jae fcomps push cmpl in mov mov loopne jnp inc jge mov jle xor pop lret cmpsb or das push nop fs pop and fadds mov xlat lods add (bad) and ja push sub push icebp sar jecxz out mov cli out fimull xchg les enter out mov inc fnstcw or xchg pop fsubrl dec inc xchg stos out push rol mov mov jle cmp mov outsb imul stos push push push pop stc (bad) push or jecxz cmpsb rcl out dec jp mov push xchg mov or repnz xchg pushf loop cmpsl lret dec sub lret out (bad) negl jmp xor fdivl push in lods pop and jnp out add adc mov in outsl cmpsb out jns mov ret xorl inc cmp xchg in xchg stc fs out ja xchg jle (bad) dec out jecxz shr mov lods add out lock mov and mov into gs loope mov cltd fwait in add pusha ss xchg in and jbe xchg sub scas cmp insl push xchg adc mov out fsubp cs add test or mov popf jge out (bad) and out push inc rclb lods add mov mov int3 test cmp jg lret aaa add ficoml arpl out (bad) mov nop add mov xchg xlat sub pop (bad) (bad) in lods (bad) push sbb mov les dec fdiv pop cli mov fwait out xchg mov scas xchg daa popa out (bad) loope pop (bad) push les and push xchg (bad) mov and mov imul and inc xchg clc addr16 negb jmp out mov rcll (bad) out clc push mov fnstenv hlt out jp push in mov dec xchg call rcrb test mov std (bad) adc ffree popf sub dec arpl push and leave out pop cltd subl outsl loopne lods shr out imul fidivr fldz mov insb add mov pop jl add mov mov fstps xlat sahf push pop cltd adc jle out gs out and adc (bad) add out pop outsl ljmp out das cmpl out sub lcall pop cmp ds mov inc insb fcomps cs out int xorl inc cs add jb das dec mov mov ljmp inc push (bad) fwait out addr16 add inc adc cs mov jns out in inc cli test (bad) sahf out xchg pop push lods mov imul bound mov (bad) loope fisttpl (bad) mov adc jecxz repz pusha es out push das mov in adc add rcll push loop jmp aas in xchg into lock push pop xlat shl add mov push das icebp or incb (bad) jne aam jge inc out and or mov out fstpl mov fsub shr dec lret xchg cmp and add or inc leave xchg mov out xchg mov lds sub pop and (bad) push dec ljmp lcall cmp out dec add loopne mov sub je sub inc out push cmp and out dec fidiv inc push out cmp push sub popf nop (bad) push popa out push push sbb add cs sbb dec iret mov lods push mov test pop push jns pop lods mov mov ljmp out cs cld mov popa cmpsb ljmp stc xor ljmp cwtl mov sub int cmp out mov repnz cli aam push dec mov xor cmp out jmp sub sub or shrb (bad) out rcrl cmp pop dec aam out in or jnp movsb cmp pop ja or dec pusha loope mov cmpsb and (bad) loop out pop rorb inc aam pop and call je ret aad stc xchg (bad) insb mov mov fimul aaa out repz xor out push lods imul fwait push jge scas dec lods dec push out mov cwtl fisubr (bad) std stos out insb pop testb cmpsb scas fsubs js lods inc fs sahf jns jp lea lcall push scas fucomip jl mov fisttpl (bad) repnz outsb lcall out into pushf cs out sub movaps sar mov or pop and lds out pop xchg sub stc jb mov sub out fild add lds and insb sub mov in (bad) mov enter ja out push or stos ret (bad) scas out mov stos mov xchg movsl flds jg add out sbb cli pop scas out push dec dec xchg ljmp push (bad) (bad) fisub cmpsl sti mov out pop lret adc ds out mov das push outsb pop pop or and mov out xlat dec pop dec push mov (bad) jb push out mov mov and (bad) imul ja mov fildll adc fwait ljmp mov sub movsb cmc pushf out push imull dec lods mov out xor cwtl xor imul stos fwait mov mov sahf out ret dec mov test mov negb dec (bad) repnz sahf in (bad) je pop cmc notb out jns sub pop fs or cmpsl stos in mov xchg (bad) mov sub mov inc sub xchg xor sub and and (bad) mov int3 xchg insl add daa test fucomp popf bound mov rclb test or out pop mov pusha mov aad (bad) ljmp in loop iret in outsl jmp inc shll push es and cmp (bad) (bad) jo insl scas ret pop addl in shrl ret xchg and dec out push add addr16 xlat rclb mov cmp lea jge (bad) jg sbb int3 icebp fdivrp xchg pop pop push mov mov ljmp test inc movl aam ljmp xchg or sti lret sahf cld scas clc xor (bad) ret nop ss lods xor fs xchg xchg mov add out call fsubrs lcall mov (bad) cmc out pop push jmp adc xchg out test sbb add icebp cmp repnz inc rclb cld (bad) in stc insl lcall popf sub pop push (bad) xor or in mov out aaa fiadd push out cmp outsl mov insl jb,pn cwtl out shlb push mov out es fwait inc lock ret and jno popa (bad) or adc shrb mov cmp xchg stos cli add rorb mov pop mov mov pushf scas xchg rcll out inc cs adc dec out ja icebp pop xor xchg add insl adc ret xchg mov pusha adc les jp mov comiss ss test fucomi xchg fwait jl push stos jle shr jbe sbb sub (bad) (bad) out xchg inc pop adc iret cmp lret scas push cmpxchg adc and jl sbb pushf pop out in jmp cmpsb nop ljmp insl insl dec out fcmovnb leave int stc outsb insb inc data16 ds mov lahf iret xlat cmpsl lret push mov (bad) out push icebp clc push mov pop scas dec pop out mov and gs out or movsl and mov push inc outsb ret ss pop mov adc out sbb mov insb gs mov jmp xor push arpl or dec sbb scas daa ss out jge lods adc inc pop test ret lcall pop cld pop push inc cmp leave out aas test push or insl adc sbb rolb int (bad) mov imul add mov xlat ljmp xor aaa cmp sub sbb jne insb push mov push sub jae into mov mov xor rol push inc out rclb mov xchg xchg gs cmp ret sbb jns and inc out shr data16 ja sbb (bad) (bad) (bad) jmp xchg out xor adc insl data16 dec xchg (bad) divl rcl pop aam (bad) jmp out test (bad) das loopne sub xor add cld sub sub push out lret dec inc mov rorl (bad) cltd jbe out mov gs (bad) jne mov ljmp rol int3 test imul (bad) lret push pop sub es bound movsb dec ret adc repnz ret popa push aam pop inc stc push adc mov out ljmp jns out cli imul pop push pushf and lock inc test adc inc out jmp sarl lea jmp pop xchg push shr (bad) test out mov ret sub push xchg je out sub cmp in xchg add stc jle and mov out and out xor inc mov rorb fidiv vpsrld push push xchg je inc and cli rcr aaa test mov dec sbb fsubr pop inc cmp movsl imull decl outsl mov adc and rorl sar (bad) sbb out mov notb mov int stos jecxz cmp dec das mov pop lock outsb jp imul xchg out lods push sbb cmpsb mov out jp xor mov inc (bad) jo out xorl out rclb sbb jge push pusha movsb lahf add scas jmp pop mov (bad) out leave out roll stos out mov inc pop pop data16 out fs jno jle sbb inc cs icebp inc cmp sub or xor lods mov (bad) sbb jno mov ss sub xchg cmpsb or inc or inc clc in sets pop test movsb bound idiv out test inc imul (bad) out loope sbb adc aas xorl out dec in sub cmp test ljmp inc in mov sbb je lods lahf adc or pop xchg mov xchg call popa out or shl sub addr16 and sub sub repz cwtl pop int3 pop aas out jno out sub mov sub popa jg push push daa out popf pusha push (bad) xor inc adc pop out mov pop aas ja roll dec mov out mov in xchg out push adc aam xor (bad) out mov jge mov jae xchg sub and lret loopne jb push movb flds out arpl jmp pop push mov (bad) jp monitorx or push jb out nop outsl xor aam aad std add mov mov and bound fsubr xchg leave cld (bad) insb fisttpl out hlt aaa pop outsb mov icebp jg mov sub es in and popa lods std and out xchg shlb stos int out inc rcll out mov push int fucomip test pop sub out add push push out in (bad) mov ja jmp fisttpl fsubrp ret jge jno call clc test jnp out insb lret dec les out cld loop cmp mov or imul and mov push out add mov xchg fisttpl aaa imul xor mov or (bad) mov movsl unpcklps fs (bad) test test or out push (bad) pop in xor jnp (bad) mov je and or nop jl fisubr and xchg in test jo adc adc fimull arpl jp cmp xor adc test and out pop mov out jle dec mov scas inc push aaa cmpsb jbe sub in cltd fdivrs out xchg pop jle sti popf ficomp hlt inc fldcw scas cli imul hlt lret sub (bad) fs ret jmp loope jge out stos hlt out or imul pop out xchg aad negb shl pop out movsl mov pop xchg popl (bad) cmp (bad) shrl mov xchg jne in cltd out hlt jns arpl inc test decb pop xor icebp jmp jge aad cltd push and cli in pop push rcr aas push pop inc cld pop mov push pop mov lock loop loopne icebp dec insl pop out loope stos mov inc (bad) or pop dec out gs or decb xor out dec insb xor (bad) outsl lret xchg add out fild cwtl sbb popa ljmp mov or sbb rcl out clc adc jl out add cmc pop inc mov mov cmpsl cs and add in fildll aad call pop into decb mov in mov push jo jae mov (bad) cld popf ret out pop sbb jb (bad) rcrl enter iret out lret andnps nop out xor adc and cmp and or jnp ja sbb jle out jb xchg cmpsl shll sbb lods repnz jl movsl out cwtl imul jns test mov std incb sub inc sub sbb xor ljmp (bad) xor lock xchg stos push addr16 test sub sbb inc cmc mov inc data16 jnp scas push (bad) (bad) push popl xchg ljmp push sbb ret pop push rol dec push call push lret out sbb in mov ror dec xor (bad) iret setge xlat fstps mov cmc lods out mov adc jmp out adcl inc out dec push add mov sahf das ret notb add push je imul out insl sti arpl pop pop out push divb lret push clc pop xchg sbb cmp out aam decb out xchg push dec dec push or xchg cmp das xlat test mov neg (bad) adc pop xchg adc dec cmpsb or movsb dec pop ss fistpll jmp pushf es out add fdivrs mov jecxz inc cmpsb loop,pn inc out add sti mov xchg cs out push mov mov mov out add mov je (bad) fnstcw jp or mov push cltd jb loope (bad) jmp loop jmp fmuls pop out (bad) rcl call rcrb daa shlb repz sub push ljmp adc (bad) stc out std adc out or xchg cmpsl jmp or fisttp push call mov bound or movsb cmp in in adc sbb fwait test cwtl out sbb pop in outsl popl cmp out cmpsb push je outsb mov shr mov or out jl pop push xchg or aad incb fild sbb iret loop cs stos dec adc in xor mov adc lea lcall push pusha dec (bad) negb out pop fucom and repz bound push lods enter dec xchg out in (bad) xor subl xchg int3 stos mov in lret lcall test cvtpi2ps add out (bad) xor hlt les ret shrl xchg cmc out cmpsb sub incb adc pop cmpsl out jae mov mov and add xlat shrl out lahf xchg (bad) mov out dec pop jp leave cmp xlat jmp out pop mov out fwait popf int jnp add pop iret mov out psubusb fisub fistp push roll outsb loopne ret xchg dec (bad) fbstp daa dec out sbb jbe ret push lods pop xchg into xor out sub jae and les push jns out sbb mov stos jo (bad) and mov adc sbb ror adc add fldln2 leave push out ffreep icebp jae (bad) out jne mov loopne push (bad) out iret sarb and mov ja pop pop sbb stos lock dec mov or out mov aam cmc sbb pop hlt pop pop (bad) in mov sub mov push lahf enter out test add imul cmp std add (bad) in lea jnp mov sbb cltd lret test sub imul rorl arpl add out xchg rcll cmpsb data16 loopne dec xor cwtl in lahf jmp jb mov popf push in out sbb fnstsw gs lahf pop out xor int rolb and out jns scas cmp (bad) xor pop stos (bad) xlat mov test ret mov ljmp cwtl incb push sub jbe out cltd xlat js jg jns mov mov fldcw inc mov (bad) stos out cmp pop push xchg repnz adc nop lret lods mov xor add mov popf leave xlat fcoml push out push les lret fldcw movsl sbb mov fdivrs adc out dec sti mov lds dec push xchg mov out xor adc iret out sbb mov out jge push addr16 lods out dec ret fisttp out xor in cmp pop lcall out adc ljmp sti jecxz push cs pop std out push jbe push test inc fldz fcoms mov and xchg mov sbb fdivl dec out (bad) xchg repz pop dec xlat cld and jmp (bad) cmpsb ljmp out pushf mov iret or mov test out rclb pop out push and out mov ss lods daa jge (bad) fidivr rep imul js mov ret int3 out dec cmc (bad) or aam mov stc jecxz pop fs out xor inc lcall in imul loopne inc mov and jne adc cmp int out iret adc jne cltd imul inc aas in mov in sub jae cwtl mov leave or add out or cli jnp ljmpw repz out fmulp push mov out jmp insb sbb loopne dec or (bad) out xlat into aam push repnz mov pop mov lret push out mov scas clc xor xor iret jecxz out in xor (bad) cli repz out test mov pop sub insb rclb out sarb out mov add imul cmp jae loopne imulb jmp in lock mov (bad) aas pop jo test scas (bad) mov loop xchg mov mov out in test stos movsl mov cmc in iret stos push insl xchg out out aam fucomp pushf dec cs fs iret fistpll aaa clc sub fmull lods dec icebp out mov push cli (bad) hlt mov outsb pop imul jne insl or rol jo out mov pop scas xchg icebp rorl jecxz push in sbb out xchg xor fld1 lahf xchg out pop ljmp out sbb jmp pop sub mov adc cmp out out sub out ds addr16 ret or aas aad bound sub inc (bad) ss xchg hlt cmpsl pop sbb daa lahf pop sub fstps dec out cli pop mov dec out xor add xchg aad push cs jp in out stc popf sub and and mov inc pop mov pop fnstsw in movsl leave push test (bad) sti jg scas sti pop sbb mov mov jbe cltd adc out lcall cmpsl out pop std out xor popf jne insb popa ss outsb out cmp dec cltd out sahf inc andb in (bad) mov sub out sbb test sub out xchg inc enter out push stos aaa mov ljmp fcom xchg loope out movsl je jecxz mov cmp jb xor push out movsl fs jmp mov lock repnz das in fcoms adc sub pusha sub loopne and loop add xor call out cwtl stos gs inc es dec jge fmull iret aas pop sub mov xor outsl out loop and sbb out inc outsb das mov enter add sahf jnp pop push mov es cmpsb je jl cmp dec adc out rcrl or out adc nop aad push aam in or popa push sbb jge xor inc cmpsb clc out and cmp mov mov out (bad) je psubb cmp pushf or pusha out dec (bad) lret mov scas je fstps ljmp pop loop aas (bad) push sub add mov out xchg adc je movsl jbe out aas jae ficom add icebp add lods mov push adc mov mov push xchg pop jl sub imul adc shr xchg cs xor pusha or sub push dec leave divl out into dec sbb mov stos mov pop (bad) repz mov (bad) stos mov lock ret pusha enter aam rolb pop fadds adc or cmp out xchg push repnz add out mov push push cmpsb aad in (bad) jmp (bad) push in out jns ljmp xlat arpl xor (bad) leave inc sbb mov out ret xorb out jbe inc cmp push dec or fwait mov adc cmp (bad) (bad) fistpll or dec (bad) sahf loope fadd (bad) divb repnz pop out pop dec pop lret cltd je and mov fsubr insb cli pop addr16 mov out divb call mov cmp repz nop pop cmc insb ret sbb jbe mov icebp cmpsb adc popa fbld mov nop es dec xchg into movsl lods sbb jle pop test fldl xchg bsf jns movsb mov mov andl ret das imul out mov sub xchg aas jb out push pop outsl push cmp pop negl push in jb out cwtl lods das mov mov into out mov sub push add (bad) jno cmp fstpt mov adc fdivr lret fnsave or lods mov and test xor int mov mov test mov or loop lcall ds mov imul inc mov (bad) fimull xchg adc scas jmp arpl cmp xor in mov out dec jmp inc fdivr mov or mov iret pop out mov test push pop scas repnz daa jne or push cmc mov or iret mov add cmpsb out (bad) cmp mov pop mov cmc sti hlt iret popf outsl insl out out ja insl add out inc out add pop rcr or out sbb jmp mov inc mov xlat jg mov sbb (bad) es ss out mov and out and pop repz xor pop out add xor lahf js out push imul mov lods out out and xor push mov gs clc lds jmp pop fist sub in ljmp aam jecxz jmp sub (bad) loopne out push test push sub aam ljmp dec out or push push mov add cmp inc sub cmpsb dec stos pop jg jge imul pop cltd (bad) out jmp or sti sub in pushl je mov call ljmp aaa dec sbb into inc out cmp pop xchg jle mov fwait fs dec out scas mov push adc adc ss aaa out cmc and in pop mov add cld scas jmp sub mov jns (bad) sar in dec out cmp fstps or jg pop jae mov enter out orl lods out and fstpt out inc adc inc (bad) (bad) out cmpsb push sub xor mov out insl sbb and xor loopne xchg mulb out and pop ret push push (bad) test pop orl mov push mov aad ja,pn mov push xor popf rep jae out fdivl stos ss (bad) int mov ja out mov or inc mov int3 cmc (bad) and mov out in (bad) xchg insb out dec lock pop jg int cmp sub cmp shll out jae loope mov test sbb jb jmp pop inc ljmp std cmp es pusha mov mov xor dec out sub xchg aam pop sbb out fs js in xchg mov inc mov mov push jnp push fcos jmp or mull loopne,pn mov out mov sbb out push in inc and das in adc movsb call adc out lcall xchg rolb test scas fs leave adc ljmp nop jnp cmpsb (bad) cmp lea mov xchg jo mov out fcmovnbe sub int xor call push stos mov mov sbb fwait xchg loope sbb je (bad) (bad) outsb mov out pop and lds inc aas je out push mov push xchg push ljmp rcrb out sub scas (bad) out and sti hlt add push out pop cmp data16 fsubr and fcomi int sbb or mov hlt lret sub mov scas bound pop lret loopne pop sahf idiv mov rorl inc daa sbb fiaddl mov out add mov mov bound frstor push fmulp sarl stos pushf andl cs xchg out lret (bad) push cmpsb add out fstps fisubrl xchg out (bad) aam out arpl xchg push lock out xchg push adc xor aas out pop pop mov out fwait lret sbb test mov outsl xor loopne cmp sbb or out bnd ror add jbe cmp adc in and popa jge in das out cmc adc cmp and and test inc cmp ret mov (bad) outsw in stc xchg rcl (bad) cmp add std call das fucomi dec dec jmp add loop out outsb pop fiadd outsl add mov pop mov dec lods sub push jns clc cmp fstpt mov sbb out iret jbe test xchg into xchg lahf sub int cmp push ret out pop sti addr16 int3 xor push dec ds into mov out icebp push arpl cwtl fbstp pop inc mov in jae push mov adc out out pop sub mov sbb jge test push imul xchg in dec push mov mov cmp int and je xor outsl sti out inc cmp push push into adc loopne ret (bad) pop test loope sbb lock cmpsl loop (bad) out mov pusha out and out dec push add sub pop xchg out sub jecxz cmc (bad) xor flds dec push stc rclb imul push sub loopne fwait int3 jg lret cmp out add push imul mov js gs xor aaa je out sbb imul (bad) scas mov adc les dec out xchg (bad) out je test mov das mov push jne mov movsl mov and ljmp out loopne (bad) das jl xchg sbb scas mov push dec out push mov lgs xchg inc sub loop imul push adc xchg les daa sbb out mov lods scas cmp pop sbb xor jno sub cld fs test mov loopne lods (bad) out adc test pusha push or lds (bad) out jbe inc leave sub daa out mov jmp adc dec adc sbb fisubrl lds and pop add sbb sub mov jbe jl jbe xchg and inc sti shr mov mov mov (bad) out jge or fadd and mul shrb push inc decb mov mov inc sti out cld and in sub xor lods mov mov mov fistp pop or push push cltd out adc out mov cwtl push ljmp loopne or sar mul and sub aad cmpsb inc sub test pop hlt outsl pop add outsb inc lcall sub mov sbb dec out xchg adc stos repz cli mov jp inc popa (bad) out hlt adc insb out (bad) add pop shrl adc dec inc jb xchg fadd cmp iret leave and in iret jp push ljmp in shlb jne mov (bad) cwtl fimul fstl mov sub (bad) out cmp leave stos outsb out cs mov dec cmp insb adc mov ds mull fdivrs scas fucom mov mov xchg and lcall push shll mov addr16 sti data16 out std push pop out or bound jecxz xchg mov pop test out push add fdivrs jae lods jns mov lock shlb jmp leave ret cmp inc scas out sbb push mov out add into pop rol imul das adc into test shr loope pop xor fucomip cltd fistpl lods push mov stos fsubrs push (bad) fwait mov arpl out jo and sub sbb and loopne fidivl loope fwait dec mov out lock push xor and sub insl add pop int out lret dec push mov popf mov mov jl pop lcall movsl xchg out add pop mov out add adc mov push dec (bad) (bad) repnz scas lock call inc ret into mov sbb imulb addl fisttpl xor pop adc stos and out pop bound clc ret inc push xchg sub mov iret sub test out pop ss mov mov out popa adc xor mov push push xor xchg mov out pushf push mov sub pop fisubrl in pop out xchg imul js or pop sub out aas push inc pop dec mov loopne aad cmp add out test insl scas (bad) pusha scas and add test pop ror fstpl inc out in lods xor pop lock pop sub es scas fldlg2 inc lods cmc call and (bad) ja inc xchg inc loopne sarb sbb in mov outsb out inc adc jno or out hlt sbb mov movsb jp pop cmp ficompl jg mov jecxz push aad adc sbbl js pusha fiadd sub push pop jne enter pop nop jge out adcl jmp dec lret cmp add out repz (bad) or out outsb loopne test into nop lahf (bad) mov in loop jmp out inc push push mov out xchg loopne inc jbe dec loop pop ss and scas pop mov xchg cmp dec mov jnp mov popf xchg scas hlt movb pusha (bad) mov loopne in dec add and out pop (bad) (bad) cltd outsb mov fucomp loop or in test push push loop int mov sbbb negb jbe pusha dec sti popa xchg cltd fldz mov fcomp ret sub mov xor inc jne sarb insl and call push mov push stc sub add push insl cwtl xchg in test and sbb jb mov push cli mov pop fs stc adc add pop aaa out inc dec xchg dec loop ret jl and and jno lahf adcl out mov cmp (bad) xor aad xor clc add jo subl or iret sub out aaa fdivp push out mov cld jbe leave pop push (bad) into out test stos inc push pop jnp les jecxz xchg mov out adc adc pop lret (bad) mov mov and loope aas out xchg sub fstl jmp imul stos cmp es dec ret in out out scas pop mov outsl aas out mov or out sub out (bad) mov and shl aad adc push iret mov jo addr16 jp sub aaa cld cs xchg and ljmp shl pop pusha pop cs rcr pushf movsb imul push jl out push dec out fwait test or dec into dec rolb idivb sub dec mov out ljmp shr in decl js out (bad) sub and (bad) and in mov fiaddl xor lcall mov out jmp mov test push push aam (bad) daa pop pusha into popf ss mov out inc mov cmp aaa repnz mov pop push adc pushf out imul mov push test inc (bad) sbb insl sub sbb xchg nop mov rorl jbe push das out sahf mov into test push repz mov xor push sub mov mov out adc and cld (bad) mov inc fld cmp xchg jae mov add mov loope fsub jo out mov and (bad) (bad) lock adc (bad) jno subb bound lds js jno scas mov repnz jo cld out dec sbb (bad) push out xchg mov out adc or push mov out cmc push or insb out adc push xchg lock (bad) sar pop ja mov pop outsl pop fistpl inc imul mov daa sbb or jmp or scas out int3 xor (bad) shrl cmc enter pop sahf pop mov ficom das fistp adc adc pop in sub fcomps sub xchg push inc cmpsb out xchg jmp movsl adc jns pop arpl adc out inc sbb iret pop adc std insb ja out outsl ljmp out mov (bad) call and jmp in aam enter (bad) out jb jecxz add out sahf mov (bad) push out sbb popf or pop lods adc cmp xor arpl pop jmp and in ss dec rorb out sbb dec add out aam movb addr16 or cmp lahf xchg and mov pop mov ja pop and dec mov out loope add out xor jne out nop dec mov adc mov mov sbb sub lret sbb out dec xchg mov ss imulb push cmpsb out scas inc fsubr push addl arpl rolb mov stos push push lcall sarb xchg out in adc js fsubl adc test in adc out (bad) popa movsb sarl cli mov cmp pop roll pop movsb hlt inc mov jb lcall lds out push insl lods cmp out jnp cwtl push cs aas dec xor out out roll push fnop push (bad) out cmp add pop mov pop out lods inc jg or (bad) out bound imul push test sti pop clc jecxz out scas insb push imul mov inc int3 cmp sub incb jne aam sub in lret shl bound imul cmp jne fst (bad) out mov inc dec imul add xchg jns scas sub dec loope in out mov xchg dec loop in xor inc mov push cmpsl addl sub imulb push xor rol cmp in xchg adc sbb xlat leave sub jg jae loopne out pushf aad cs pop xor sbb add cmp jno lret mov or jmp lret inc mov icebp ljmp jecxz ds sbb out or int3 xchg xchg adc sahf cwtl ret jne std (bad) sti mov ret test and loopne jmp sub and mov cld ret mov es inc fxch (bad) cmpl gs push or out out lret jle adc out (bad) dec mov jp (bad) jecxz push mov out insb js out xor push push addr16 xor aas mov cmpsl pop or xlat jmp sahf and out aam lods mov ror out pop xchg jmp jp inc dec pop push xchg das or pop mov rclb and enter lahf out mov sub adc (bad) scas imul loope jge xchg outsb adc lds out aas cmp lahf out push int bound inc pop cmp or xchg imul popf out xchg das cmp lret insl push out (bad) pop sub pop (bad) or sub out sub jo add std mov xor sub (bad) out dec mov out mov and add pop lcall jp icebp arpl out or mov mov mov cmp jge ljmp xor ljmp outsb dec (bad) repz xor cltd out inc or insb mov test push jb mov lcall dec cmpsb (bad) xor loope pop (bad) in enter inc lods xchg mov sbb movd or inc in je jae cli pop jne mov aad out ficoml lods xchg push sbb out frstor mov jp pop inc fsubp incb fbld push stos fstpl lcall sub adcl or hlt cmp out dec movsb stos pop cwtl nop cmc call push xchg es lea sbb fild adc adc iret sbb bound mov std loop push (bad) imul mov push and insb call stos out sbb jmp lcall cmpl jecxz xor frstor in pop ds xchg cld fmuls add dec rclb cmp push inc aaa in xor (bad) loopne dec out lcall loopne das mov daa aad int ret adc add out pop xlat je adc mov scas sbb (bad) enter stc mov adc adc (bad) pop fild leave sbb js jp jb or je loop fwait inc jno ds out out push xlat mov loop xor outsl and xchg jo mov ja out cmp movsb out push sub ret cwtl cmpsb daa sub mov mov movsb jg,pt pop mov clc add or sti push push ljmp cmc lret fbstp mov out mov push ret imul xchg jge stos add out cmpsl mov lea fisubrl pop out cltd or push aam aad insl sbb (bad) jae pop sarl pop jmp dec movsl xchg out pop mov (bad) (bad) movsb mov xchg and addl ret mov mov dec jp push or out dec das cs mov lret mov dec sarl insb incb ss outsb mov jmp vorps ja xor sub jle cld mov data16 pop sti shrl out pop and mov out lock mov out inc mov xor out lahf pop loope dec (bad) mov iret out nop ja jmp inc rorl pop ret in or cmp add jg in sbb out sti fwait adc xchg push shrb popf into leave mov jns ljmp das repnz popa aas fucomip push leave psllw fs repnz loope aaa bound out mov jo jmp mov test jge das rolb loopne fldt addb jne cmp lods dec out add lods std xchg insl mov xchg xorl mov mov push mov bound or out rorl in divl mov out sbb notb das scas leave and popf add rcr data16 fdivrs mov push xor adc xchg hlt push popf daa scas inc adc dec out out mov vmovss out (bad) es repnz push cmp jecxz out jae movsl pop sti scas loopne es cs test mov sub out mov add fldcw repnz lret mov int3 sub jge fs mov lods shll ss out (bad) aam xchg adc jo fistl cmpsl divb pop push out outsb (bad) xor (bad) xchg hlt jne dec stos movsl movsb pop fwait sbb and loope in pusha out add pop mov cmp aas pop inc nop push out fldt in mov (bad) bound xor out fwait push mov les pop arpl pusha add out xchg lods xorb xchg adcl adc sbb (bad) loop mov xchg or jle scas call pop lret xor out test xchg je in or stos arpl ret test aas cmp je out fwait mov xor decb push nop mov sarb out outsb jb pop popa ja movsl (bad) lds das lcall mov and fimull pop leave out mov gs fcomip sti mov out idiv dec popf (bad) push push add mov lahf mov out mov inc ret divb mov jl sub push out cmp stos sahf sub imul mov dec or mov fnop fsubrs data16 out movsb in lea popa shl out cmp inc pop lds jns scas call arpl push (bad) aaa jbe in inc pop lock sub pop out andb sahf movb out fbstp xchg pop and loope xor inc xchg mov popf sbb iret arpl scas ljmp mov mov sub daa out pop add mov xor shl lret or dec cs fistpl jle icebp pop and sbb shlb out cmpsb pop je cli int pop push out push repz sub pop mov or cmp mov shrb add adc lods adc stos insl pop mov out les clc lock repnz cld cmp dec xlat out pop data16 faddp into inc out out add cmp notb int3 sub or insl test cmp inc out nop add ja push (bad) in or and repnz insl (bad) loopne cmp aas cmpsl out lea cli inc or push jmp fwait pop repz popf sbb outsb add pop cs lret pop sub xor or imul stos push cmp pop (bad) and aam fsubrs xchg sar out mov out iret (bad) sbb sbb inc xor jns rcl movsb out pop cmpl sti jmp push repnz out inc xchg pusha loop adc mov hlt (bad) push jg xchg mov xchg mov jbe mov sbb into loop iret fsubrl lret xchg stos mov push mov pop xor jmp addr16 adc push mov (bad) out out in popf ja (bad) mov push dec rcll fdivrs imul xchg jno cmp push sub movsb out rol fucomp or scas out stos mov mov repz fwait adc out pop add jns out (bad) lock push rcr hlt lahf jge out xor sbb scas mov add cltd xchg mov mov jae jnp enter inc push mov out ret ds out (bad) aaa repnz out and and xchg pop sbb scas bound cmp fsubrl dec jecxz push cmp mov pusha scas push ss into flds scas adc pushf and rolb push sbb jge xchg dec or imul lds mov mul test adc pusha pop cmp loop jnp inc loop bound into dec (bad) sub jp jno adcl outsl mov das (bad) xchg and jecxz idivl scas (bad) mov std inc je xchg pusha and loop bound cmp stos push out push or out es pusha fsts jno xchg ja bound xor xchg fbld sti lods xchg out lahf enter aaa and out adc jb push cmp out inc imul mov jp insb mov cmpsl shrb adc pop jbe arpl inc dec lahf add shrb mov add js out lcall outsl pop loopne imul cmp (bad) popa inc in pop xlat or out sbb mov mov lock aas cli or (bad) lret pusha out int3 push lea mov pop std shll sbb cmpl push sarb ljmp fildll sbb cmp push push out dec xchg popa or insl inc (bad) out adc in mov out mov and loope jmp popl shlb out lods push xchg rorl lea xchg loope jne arpl jae fist push xchg adc mov add scas jmp (bad) mov out pop mov ret dec xchg call push mov dec pop inc loope jmp (bad) jp sub insl loopne sub mov scas push fisubl xchg mov cmp popa out dec or rol nop mov out aam sub test insb (bad) pop jecxz inc dec push xchg inc dec (bad) in inc xchg pushf mov sbb pop (bad) (bad) jns or xchg (bad) out dec sub push das into (bad) out ja push mov lock out jg scas jmp ljmp idiv pushf cmp out add cld fstpl pop jbe mov or ds shr std jle bound mov stos pop adc jp ja pop pop sub out adc and cmpsb out xchg aam inc imul mov cmpsb push and jmp int (bad) xchg mov sub dec pop and jecxz mov or ficom pop inc shll shrb out das call int3 adc bound sub cs insb cmpsl push call lods mov xor and (bad) fs sahf add cmp cmovle push in movsb out xchg sbb sub adc sbb sub fwait out mov (bad) outsb shr mov lret mov push sbb mov jns das cmp out xor sbb in mov fwait out out fs subl xorb jl sbb fxch sub imul lods test scas mov shrb out xchg (bad) jo test push pop sub jl out aam jmp shl shr out push and cmp icebp fisubrl in fsubr push cmp test dec xchg stc icebp out push aaa iret jo out sahf test out dec in cmpps out inc jmp clc push aas mov mov pop add outsb push mov and fs mov scas loop lret std out fwait movsl or out or xor jmp add pusha out lods sub mov mov mov out pusha sti imul insb dec sub xchg ljmp dec dec bound xchg out add inc adc jnp fbstp ret dec les dec pop insl (bad) (bad) pop jp shr out movsl cmpb mov mov test cmc inc xorl xor out lret push or mov out lahf jne adc and fsubr xor lock push lret mulb out jg cltd js stos psrld cmp cmp scas xchg xlat jle rdtsc or lea ljmp test push push in je xor icebp int3 push stos pop fsubr xchg leave int das clc hlt adc int3 adc cs aad or and cli jne push pop xchg xchg (bad) je adc jae outsl or push mov dec out pop sub xchg jb iret out popf cli int cltd outsl aaa dec out sub adc and out stc inc mov and mov cmpsl ja jp cmc daa out mov xor out cmp adc mov and push loope lahf es inc out mov mov imul in clc fwait stos add xchg and pop cmp push out int3 es pushf jno popf (bad) out rorb or or add pop xor jnp in and int out (bad) cvtps2pd sub out jle xchg add mov cmc or jb mov add adc inc jg cld sub push cmp out sbb movsl jae shrl (bad) iret into xor pop xor mov out test sbb out roll sub mov ficompl aas add cmc sub mov xchg ud1 test cli pop mov outsb insl popf mov popa mov test xchg cmp das adc push inc lock movsb loopne sub mov pop dec jmp adc out push and cmp mov sbb jmp push jnp (bad) mov push out or jmp push sbb cmc xorl pusha repnz stos sbb outsb stos sbb add mov out xchg mov jmp mov dec cmovb cmpsl add fsub jns push out and and cmp fisubl push sub out (bad) rcrb mov rcr sbb xor (bad) mov jmp sti jbe aas pop out addr16 (bad) xchg inc in out xchg (bad) pop add mov int lahf imul (bad) pop loope sahf jns in push add lcall jne inc out add lcall xchg out imul jae mov xchg out pop fidiv sbb or push cld pop outsb test out jle add push rolb out mov cs add pushf js sub (bad) xor out lock mov nop sbb mov cld shrb lret sahf mov les sub pop pusha call cmp out test mov inc pop mov in and jns and add out insb xor ljmp leave subl lods (bad) jmp xchg jbe es out pop lahf into (bad) cmp in push scas sub pop das fisubr and addr16 cmp fucomi push iret push or movsl lds sti or cmp sub out or or je and pop (bad) arpl out mov test push test mov lea out mov cmp out lock sbb insb rcrb sub subl inc sbb pop (bad) pop push sub out sub scas gs popl out icebp je sub lods jle ror es imul out cmc cmpsb sbb shl leave pop add sbb out mov out aad push mov cs xor out outsb inc lock sbb in out mov xchg sbb out xchg (bad) (bad) out sahf aad cmpsb stos (bad) push pushf out icebp cmpsb mov inc imul push pusha stc ljmp stos xor push in adc les insb inc cwtl out test (bad) popf push sbb stc jae bound test inc dec insl xlat out lret jbe cmp inc cwtl dec sub outsl addb (bad) faddl mov popa scas xchg xchg lock mov test (bad) pop lea jns push rcrb and adc (bad) dec lret sub dec je push insb add pop insl mov cmpsl or out repz cmp icebp xchg out fs pop aas imul pop sub jmp out xchg mov (bad) sub push or push xchg pop push mov hlt subl ljmp out cmp call rcrl pop jo jmp and fsin sbb mov pushf cmpsl out inc mov stc insl push mov and mov lcall (bad) mov iret push mov movsl ljmp lahf stc mov xchg and es inc out icebp pop test xchg cmp imul mov add mov cmp out sbb aad pop fstpl (bad) jg or xlat out loope adc add decl popf cmp or stc xorl sbb dec lock test inc adc sbb scas jb pop or push (bad) out mov fyl2xp1 arpl push (bad) (bad) lret rclb push test sbb jmp sti out aad or pop sub iret out lock fistpl mov fs and and out push xchg cmpsb add sbb or daa add cltd jmp pop xchg mov mov sbb iret call nop fwait push les addr16 jp sub lods pop (bad) ss scas sub rcrb dec mov sub fs jnp mov jne out and push and dec in xlat out jmp mov sub fistp fsubr imul std lahf sub into add out int adc nop scas xor out fwait stos in xor jno push pop jle and ret jp lcall mov sbb push push jl (bad) popf inc xor add jge cmp pop xor hlt or outsb xchg outsl xor orb jg cmpsl pop and dec mov jle loopne arpl out call out in icebp and jl lock insl out inc mov fadd out icebp (bad) jmp xorl loopne dec negb out mov mov pop mov lahf push aad cmp gs pop outsb pop les (bad) (bad) jmp jo (bad) mov in pop outsb ds sub shll pop pop out negl out or cmp out xchg hlt (bad) enter (bad) (bad) repnz add xlat out mov out xor out and aas ret outsb (bad) push stos aam popf sbbb mov adc inc push icebp std and je pop jo ljmp push out std fimull add movsb mov xchg pop andl push ja push jg in or es repnz or dec mov cmp (bad) in mov ud1 xor jo shr inc mulb andb daa fistp out or (bad) lods add mov mov xchg sub or jbe test jbe out imul mov repz xchg pand push dec out dec push mov in jb jbe dec push ljmp out sub jl out dec shlb xchg pop cmpsl mov stos pop xor in in xchg dec out sbb mov jle lock sbb out out loop mov xor jp repz xor cmpsb cmp std push mov idivb cmp stos out stc sbb ljmp lret (bad) out rclb repnz add shl ljmpw jl rorb push and ljmp out (bad) sub out inc scas insb bound into out inc ret cmp fdivr scas (bad) clc out imul mov push rorb add jne sub cltd sbb inc pop out sub loopne fcoml xlat cmp aam inc loop xorb push jle dec push jl sub sbb mov adc xchg scas test push inc dec lcall in leave aam (bad) add out mov loop sub dec mov cmp xchg dec ss clc pop outsl add aad (bad) loop fdivrs jns subl popl out mov loopne and stos clc fucomp adc cmp inc jg lahf jo (bad) pop xchg pop aam es jne xor pop repz test cmc mov dec stc popf jnp int addr16 out adc (bad) cmc fs ljmp out fmuls push popa fstps xchg outsl add mov jae fild sbb aaa or popa pop sub stc insb mov jmp (bad) and paddusw mov fisttp cmp enter stos (bad) or mov out push mov mov scas aam jge xchg ret ret push jp mov push cli jge,pn dec and rcrb into mov push icebp stc sub out jmp (bad) pop add jae fbld gs xor mov adc and icebp fwait scas insl mov pop lahf ss sub mov shrl outsb push bound loope ret pop out mov stos jno insl je out sub mov ret imul sbb out ret addr16 iret jae loope call scas out js aaa orb je sub jno sub call inc jnp pop cs jo mov fucomp xchg fiadd jo mov (bad) data16 xchg movsb out jp fnstsw out push sbb xchg test mull bound dec or pop movsl lods cmpsb ljmp ror out call mov sbb or ja cltd pop mov out fdivp and mov jnp xchg iret out adc lahf xchg inc mov loop jbe or test mov out lea in aad lock sub push mov ljmp insl jo lcall shl hlt (bad) jae mov push jecxz dec jnp pop mov pushf iret dec fwait xchg fucomp mov (bad) lahf fildll loope and xchg in xchg fwait into pop mov jnp aam fucomi enter lea cmp push push jno out ljmp popf dec jnp mov lcall sub pusha jno in xchg xchg xor out das test adc scas cmp out or and mov ljmp jg or inc mov and ss (bad) push jne je out (bad) aas xchg aas in xor jb stos test push ret fistl cld sub sub xor fidiv mov (bad) ja pop in aam dec xchg cmp jmp mov out scas pop add xlat (bad) xor loope ljmp jge or xchg loopne out std in mov adc fdiv push xchg fcomip pop addr16 mov add (bad) sahf lock jl cmp add cli (bad) dec xchg paddsb xchg fldz xor pop lret out mov mov cmpsb clc xchg loope ljmp (bad) cmp (bad) (bad) lret out shll mov out push xchg xlat sub mov lods cmp cmpsb loop ds adc fsts insl cmpsb cmpsl xchg inc jg in jo out add dec or out pop sbb pop out pusha loop in addl int sti jecxz imulb out jl sbb iret ss movsb out movb xor lcall mov mov or push (bad) mov push in sbb ficompl xchg pop out mov or shl push loop jmp jle fldz es and inc mov mov movsb jb xchg pop xlat (bad) icebp not out mov lods fwait sub jecxz test push icebp fist aad out es roll and pushf outsb jae out fcoms sbb (bad) in lods adc push sbb aad lock push in add lods xchg loop dec sub mov sbb jb out inc outsl aad sti shr push mov sub push xchg mov pusha push mov out adc imul dec scas cwtl mov sbb (bad) out icebp mov mov imulb lret popa sbb insl or jns fucomip jne pop pop adc in fs jbe repnz xlat in ds test jb jmp movsb outsl call pushf add jbe mov daa adc inc dec iret mov pop popa call cld pop and sahf xor mov xchg cltd (bad) outsl sbb sub sub mov into rcl push mov sub fbstp mov push loop hlt outsl rcll loop pop clc push sub pop cs outsb pop cmp popa (bad) mov pop add fstpt dec (bad) pusha fmuls lods pop movsl sti jbe bound out inc test fidivr inc sti or out outsb jo xor out cmpsl mov jl sub mov out mov mov xchg out fsubl or out add pop push and loope stos aad shl out jo add mov andl dec sti in cmp dec in ret lods in fsubrp or push mull jl (bad) dec adc rcrb mov les push hlt out scas sbb stos fistpl fs sbb sub insb dec pop mov or out repz adc xchg adc and aaa pop inc or in roll mov cmp iret push push loopne rcrl pop dec (bad) icebp ret insb das mov mov jo iret pop nop mov inc rorb xor ljmp (bad) out out mov int3 mov pop dec or pop push int out push arpl mov test or icebp cs jmp push add out (bad) push (bad) iret lret (bad) out add ficoml mov ljmp jle inc or les push xchg iret jae insl (bad) in sbb dec out inc (bad) ret or out mov std repnz mov out and pop sub inc inc out jle jae and call push add clc and inc movl sbbl or cwtl xor pop add aam push push adc add pop cwtl sub dec pop fwait jecxz jmp (bad) xchg rcll or aas cmp inc sbb mov movsb out pop jne fstpt and pslld inc cmpsl and xor sbb and jecxz repz loop cmc in mov jbe (bad) cmp in inc out dec (bad) fisubl iret shl flds int3 into push cmp jge out imul cmp fadd sbb xor out inc xchg jmp (bad) push out popf loop ret mov (bad) loopne mov out cmp adc push fwait ds sbb stos in jecxz mov jg ljmp xchg pop in mov add and arpl gs (bad) mov sbb pushf (bad) lret outsb rep es bound bound cmp out loop pusha or out dec je sub cltd roll add out imul push pop mov jmp xchg out mov pushf aas jb dec adc out in (bad) cmc lahf shrb pop jns pop in inc in cs cmp mov pop sahf and jne jmp dec lret sbb out pusha and jbe jmp out mov mov into out orb or xor and xor clc mov sbb bound mov dec mov ret push in (bad) mov outsl arpl out addl dec cli sbb decb cmp nop mov das lahf jge int3 cwtl pop pushf clts mov inc hlt (bad) mov sarb dec jnp aad add cmc pop out (bad) push mov push out (bad) popf sahf mov loopne in das lcall sbb xor push jne imul sbbl enter mov cmpl xor enter shl das mov clc lds ja imul xchg sub imul sarl lcall sti sbb repz out pop adc xchg ja int testl inc (bad) sbb fistp js or cmp mul sub pusha adc push out fwait pop xchg xchg adc (bad) mov pushw dec mov lea out cmc jne pop (bad) mov sbb loopne mov jg in loop repz data16 (bad) scas xor lock out mov sub popf out lahf cli int (bad) out mov iret push pusha loopne aam xor mov and scas jae sbb arpl fdivs adc int cmpsl (bad) faddl daa xchg out loopne and ret ljmp out mov movsl cltd das out lret push sub int3 shr (bad) xlat scas and mov jge cmp data16 dec mov ficomp xchg push add add mov out cmc mov shrb out test aad in sarb call pop out outsl sub cmpsl mov adc cmp lcall ds mov inc iret sbb pop xchg sarb jle testb sbb scas jns stos lret out xor mov pop ljmp push pop pop loopne dec nop sub out xchg aam mov lods sbb lods push sub cmp fisttp frstor xchg stos (bad) jb dec (bad) push pop pop sub cmp out jg aad stos xor test clc and inc and fcoms ja dec out lcall out mov je fcomip in xchg lahf test (bad) jp mov out adc jno or repnz scas cld out add inc out xchg cmc out cld scas fisub out leave sub arpl inc inc and inc dec push adc push push xor jecxz cmc mov mov out pushf adc mov scas mov pop jo jecxz out or out push pop pop fldl in jne ljmp inc out push arpl std fdivr sarl insl and pop out push push pop ljmp fcoms movsb dec aas outsb out pop in (bad) aaa (bad) test jb loope imul jne cs xchg mov and out jns imul aad ja stos mov dec jbe dec ret hlt out push lock jb sbb mov fnsave insl out push pusha adc and lret je fs repz jle lcall push rorl push (bad) daa cwtl rcrb in mov loope int mov jle pop sub mov adcl add sbb idivb pop in pop ret imul sbb dec aas fimull fucomip loopne cmpsl fstps jl out pop mov push sub cmp hlt in sub out sub mov es cmp jle push outsl popa adc xchg jns test sbb cmc repz adc ret imul shlb (bad) jb repnz (bad) rcl mov mov out mov (bad) test inc adc shlb jo pop mov push pop xchg cmp loope out or dec addr16 jae pop pusha inc out gs out mov cld jge adc ss dec imul push addr16 sub out lods jae inc (bad) jns mov rcl out das xor xchg mov loope xor call mov out scas pop sti test push inc (bad) xchg inc xchg push imul lret add mov adc imul cli sbb add fwait shr sub loopne fadd mov adc xor dec inc out and sbb (bad) in out shrl pop repz call lods fcmovnu out adc sbb bnd aad xchg in imul mov enter leave out and (bad) hlt je mov js into fcomp dec inc pop out jle lret sbb (bad) pusha sbb sub pop out negb or mov dec shl leave or fbstp xchg out fwait dec jle push popa je out lcall (bad) and mov pusha nop icebp push out add push (bad) mov dec jp (bad) push or out mov ror inc (bad) jmp loop ljmp and push push out into or (bad) sahf xchg les cmpsb push lcall stos sbb jmp mov mov jbe xchg outsb and sti iret push mov sbb scas jg testl xor (bad) add (bad) pop xor fsubrp and outsb xchg iret jmp sub sti outsb pop ficom std dec xor push out test popf mov idivl push or sbb nop pop out pop imul (bad) xor (bad) mov movsl mov sbb push push push pop xchg or sbb jl lods xchg (bad) cwtl test icebp call cmp add stos or ljmp xlat test gs mov ffreep test mov lea mul lss adc or hlt (bad) mov mov (bad) (bad) jno outsl stos pop fnstsw jo xor popa aad out ljmp xor or call fildll rcl out sbb loop mov cmp out sub xor inc fsubr ljmp out and and out mov or mov ds in test add inc jmp mov or mov fidiv in out shll pop sbb mov outsl jo dec ljmp out dec pop and push aad out mov jb frstor out daa inc jnp push mov cmpsb and out sbb mov fdivl scas sub add outsl sahf mov and jmp xor shr dec xchg lods shr mov lret pop dec shrb mov pop mov jne lods cmpsb push mov add push push loopne xor push jle mov out aam repz loope or mov mov add xlat cltd mov shr lea sbb cld adc inc movsb insb (bad) cli jg xor (bad) cltd test das dec dec or pandn rol stos call mov (bad) adc es (bad) push leave pop sub or sarl add push jbe scas js out std lock insl jns pusha add scas and pop rcr out pop sub nop out xchg ja lret mov out sub bound (bad) jo sub or pop inc xchg out lds movsl mov (bad) mov std xor push xlat outsl pop bound xchg inc pop jae mov into and lock jge movsb out nop repnz adc out ljmp cmp and mov inc lret out (bad) aam jo add leave or in sbb push aas adc movsl cmc aaa ljmp sahf sub pop push cltd xor add ljmp enter dec adc xor cmovo add inc cwtl dec mov add enter inc out lret outsb mov jle (bad) in jg inc insb xor mov out jmp xor stos pusha cmp incl xchg inc outsl xchg leave jo xchg fxch orb movsb fsubr jp inc cli cmp add repnz mov out lea rcr out sbb mov rclb jle xchg out rorb in icebp mov mov xchg pop pop out mov mov arpl lock out stc xchg push (bad) cmpsl jmp ljmp jbe or jb xchg pusha jg or out fs mov pop pop ret xchg (bad) mov setg sbb loopne aam sbb sbb popf fwait mov inc (bad) cmpsl xchg into push mov out arpl outsb jecxz rcl jmp xor les jmp aad jo cmpsb fs loopne aam sub or fcmovnu fnop mov fucomp mov (bad) jae gs inc dec xchg xor sbb jecxz push inc movsb jo pop scas es popf add xchg xlat inc pop lods xchg test mov mov loopne loopne cmp decb in jae dec aaa jmp ljmp (bad) lret xchg sub (bad) dec ficompl adc out push mov jge (bad) sbb inc or adc out mov pusha fimull mov push mov xor ss pushf iret inc lcall shrl out xor sbb cmp mov out in xor jns out push jecxz mov rcrb fcom loop in mov jbe sbb bound ja (bad) adc dec pop icebp or imul or inc sbb dec inc sub or jne imul push out mov add out xchg mov pushf lcall add mov jns dec loop xchg inc jnp out in aaa xor rcrb mov into out push inc inc rorb or in lock js sti mov out es in les (bad) out xchg mov sti out mov pop mov scas out stos aam sbb int out xor sti xchg add out xchg popa lret ja sub out cltd dec or in out push xchg mov jne adc repnz pushf in pop sub arpl lods sub mov pop out (bad) adc dec outsl pop cmpsb sbb mov in fidivr out mov pop daa out data16 sub mov popa out sub xchg call out jmp fcmovbe or push pop or nop xlat sub stos inc mov es scas cs (bad) push push out push jns sub and pop sub dec cmp popf pop mov jmp repz out push xor (bad) ret out jge test (bad) out pop cmc lods push mov repnz cli push mov in inc add dec and scas jl lods sbb mov repnz aas xchg xor push cltd out xchg xchg fsubr inc sarl loop xor out fs lods push mov xchg jbe or pop out and or xchg insb lock adc push test xchg push (bad) in mov or lock cmpsl ljmp out cmp movsb rorl test es in or push jmp inc and jmp mov out adc xchg out in cmp in roll mov add lds ljmp xorps iret pop adc (bad) loop ljmp out repnz jbe lods out push pushf into das sbb pop in pusha pop lods lret mov dec out out cltd push sub out push roll call mov ja cwtl lods xor movsl and out out out sub (bad) sub mov (bad) jb pop lret adc fs out dec adc jle sbb out mov pop shlb out mov (bad) dec out xor and enter xor das mov xor data16 ret mov mov call loopne and out inc push mov and lret mov cmpsb mov outsb cmp fs xchg (bad) pop out ss sub or or sbb je les and mov out sub xor sbb insl out popl or pop ror fnstcw in test pop loope aas insl aaa push dec out in out mov and into inc (bad) aad (bad) jb enter or cli aas cmpsb daa pop insb fiaddl out (bad) xlat jne dec cltd mov pop inc adc xor addr16 lcall lret lock mov mov mov xor jnp xchg out add or mov sub pop arpl add rorb xor mov sub xchg cmp mov dec ss ret xchg jns xchg in jp gs in mov clc xlat inc sub dec push mov fmull jl add mov xchg and ret (bad) jg mov into jl sti mov lret js out pop jns and pop insl mov aas stos xchg add lahf movsb adc arpl scas outsb adc out repz sub cmp pop sahf dec roll cs rorl bound xchg dec lods clc inc aam sbb lcall push das int3 je push sbb pop jno ss addr16 loop cli cwtl test dec imul mov (bad) adc std push pop (bad) testb aas cmp ljmp call in out push fsubs and out shrb lret pop aaa sub sbb and jle mov xchg sarl out ficomp int push ss outsl mov (bad) lahf mov out mov mov loop xlat jge (bad) dec out push push jb cwtl sub cltd psubw in or out mov (bad) cli mov push dec stc mov out adc pusha jo jno sbb shr inc hlt pop xor in cmpsb (bad) mov lcall fdivs pop sbb arpl lea and out insb xchg inc rcrb out xor xchg inc xchg out nop rcrb out jo cmp imul and pop jbe repnz fwait add mov pop jo ss jmp jbe xchg push cmpsl add xchg cmp (bad) mov out push push lods cmp fistpll inc pop out mov sbb daa xchg fucom cmp dec loop or xlat sbb outsl sarb shl sub pop or or add out jmp lcall movsl inc cmpsl int push fstps in or push jns cmpsb insb xchg popa stos insl stc cmp rclb popl fs pushf out test xchg xchg jecxz sbb push jl out in inc insb out cli or std (bad) ret les out adc cmp (bad) clc dec fwait mov add int out ficomp jno out fucomip pusha sub cs test out stos cmp stos out shll or push dec push sti in loope xor inc stos das fwait test (bad) out (bad) lahf imul push (bad) out (bad) jg popa out xchg sub inc adc cmc sar sbb daa jno dec fwait ret jo les push inc xor mov (bad) pavgw shr add or data16 std xchg pop pop add (bad) mov pop out or xchg lret adc pop (bad) out int aaa sbb xor jmp out iret sbb lds out adc dec ret jns add xchg jmp mov insl jns leave stos rcrb pop pop mov pop xchg cmp pusha call bound ljmp rolb mov add and fadds (bad) call in movsb cmc jns pop cs test insb mov (bad) daa ret fbstp (bad) sub xchg inc iret out (bad) and loopne xchg mov movb out std js cltd xor lret aas call mov dec jo adc and mov (bad) (bad) (bad) sti bound out or xchg das (bad) fwait mov or xor inc mov mov dec mov pop sbb cmp dec into shr mov maskmovq testl cltd mov gs (bad) repnz inc rclb out mov pop xor mov xchg push in lds (bad) cmc orl rol fbstp mov in je pop out sbb mov rolb jnp std iret jl lock das xchg push pop push out dec lahf adc dec es int3 out outsl bnd add mov lods jmp shr mov lds xchg out int sub inc adc sbb lcall popf out mov jo cmp call mov das jne pop movsb cli out (bad) sti xchg out and adc sbb pop movsb (bad) push dec xlat mov ds insb aad lds test or hlt nop insl lret xor fcoml shlb xchg rcl ljmp movsb push push out inc jne fs xchg fbstp icebp loop imull in int3 repz aaa (bad) outsb jmp test mov (bad) ljmp mov outsb push out out dec neg mov push (bad) mov add and ljmp iret out adc arpl in imul and out stos (bad) into jmp in out jb lock sbb repnz sub jns mov shr popa pop lcall test mov insl out jne dec adc jb mov das je xor hlt fldenv out xchg out jne aas lods xor sbb mov sub or out fnsave jmp push adc push xor imul (bad) dec out call faddl jno dec dec cmp movsb jb inc clc repz xlat lds fsubrs lods out bound int3 push cltd cwtl scas out repnz sbb or (bad) mov data16 out jp fisubr (bad) scas dec adc mov lahf mov mov mov out out aaa (bad) (bad) xor shr xbegin xchg or fcom jecxz,pt out (bad) lret push andl (bad) imul mov cmpsb imul push pop jae adc jne in mov push nop fistp stos in and mov sbb aad out lock mov das mov sub push or loop inc xor outsl push ss mov xchg sbb mov (bad) daa lods jg out sbb or sub pop stos (bad) test xchg adc bound in shr pop xchg test test inc out adc push jbe lahf push xchg sbbb call movsb lods out inc ss out mov clc aad add (bad) push popa mov addl xor imul in das adc push push (bad) (bad) ja out jmp lds out pop scas push sti pop in inc mov shr out pushw outsb mov push rclb lods and mov out mov cmp ljmp jmp ljmp inc cmp pop mov shrl push enter pop loope jp,pt sbb adc out outsl test cmpsl test mov out and iret adc jmp loop lahf repnz arpl out sbb stos push dec aam sub addr16 jge rcrl inc jb ss out roll pop jg incl out jmp in and inc fdivrs mov rorb push out addr16 popa pop out cmp (bad) pusha dec xchg out add adcb incb and (bad) push xor lods outsb mov out subl xchg bound or mov out xor js fbld mov or mov or sub sahf ret push pop clc ucomiss test add pavgw add jns in mov jmp mov out arpl push leave push fsubrl (bad) lock out dec push jecxz jno out xor mov jbe fbld lcall repnz and popf out out add pop aaa jg dec jg jbe mov stos mov shlb sub push out loope xchg xchg aam in out sbb lods mov test or out adc lods pushf (bad) pusha jp xchg push mov add xchg mov and push out scas lea jbe (bad) iret mov ljmp out jo adc push out scas (bad) jb ljmp (bad) xor mov fildl pusha roll pop xor int3 leave aad repnz out (bad) popf lahf inc and cwtl pop data16 movsb mov lahf add mov sub mov fildl sbb cmp lods jo and push out cmp (bad) aaa xor decb mov insl inc push out xor mov cmp mov insl dec or jge nop inc push scas jb fs (bad) mov sub cmp popf push ljmp je,pn in pop push jbe cmpsl jno or adc out mov out in add mov xor cmp rsqrtps das out dec cmp or inc push jb mov (bad) lock (bad) loope xchg add mov (bad) arpl shrl aad mov dec pop jecxz xchg leave pusha in incb pop out xor or xchg out lcall adc sbb ret xor stos iret pushf loop inc lcall negb fsubrp sub loop add aad pop push xchg push sbb push in add xor jae cli addr16 mov fwait (bad) sub pusha mov aas outsb imull push lret pop adc insb out into jle cmpsb lock movsl out inc mov push fwait stos inc adc jne sub add stc push out in cmpsl (bad) cmp out cmp push and or dec inc addr16 bnd sub mov ds hlt jmp add das dec in inc jg adc xor and or je (bad) xor adc adc (bad) mov or push out pop gs dec out stos clc mov jae out xadd shl mov inc add xor (bad) aas mov aad jmp out clc cmp ljmp popf lods int3 xor jp xchg sbb stc add out (bad) pop pop mov mov fiadd inc in es mov add das in mov jbe out mov shlb clc cmp sub xchg in in mov out lock cmc pop scas and cmp out dec dec pusha xchg outsl add dec leave movsl cwtl xchg jae dec jmp (bad) jle popa clc lds out mov xor (bad) and loopne fcomps jns sarb inc fbstp fldt xor lods dec adc loopne pop xor adc jmp int ret test adc dec rorb add loop cmp sub xchg sarl out inc jno loope mov or in repz inc fstl xor pop dec (bad) notb insb adc mov push pop (bad) in mov rorb in push xchg rolb push out out aas dec xchg iret mov xchg bound xor aas ss out das out adc push iret fcomp and cli in inc dec daa cmp pop sarl test stos (bad) pop pslld inc push jmp dec push decb dec arpl mov mov lods popf dec mov jg mov jno mov jmp mov mov (bad) adc (bad) loop and mov cmp pop test jecxz std out repnz adc pop in mov inc inc sahf push (bad) xor jg xchg test (bad) xor ds xchg pop in mov in idivb mov and rolb ljmp mov jbe cmp jp or (bad) out jl lret push and popf push out lea dec sbbb out add lcall lds mov out fdivs or call test bswap jns jl wrmsr test push push (bad) outsb mov adc call xor out adc dec pushf pop stc (bad) cmc pop pop movsl pop ret pop pop and pop out divb xlat and out fist mov out or dec incl les push out mov push daa cltd inc decb rcr pop es lahf sub imul fsubrp in outsl xchg push xchg mov xor hlt in xor jae ss (bad) jo loope bound out add xor sbb data16 lods imul jmp divl out and pop lods pop mov mov out fwait pop (bad) out push mov hlt pop out dec jecxz xor out jbe (bad) popa push push pusha or mov fucomip adc jae and imul sar int mov push out loopne out sahf and cmp cwtl loop mov xchg push mov xor pop add sbb shl pop sub cmp xchg outsb outsl icebp stos in out fimul dec rolb std insl aad mov movsb xor aam clc sti dec dec dec bound out test adc je mov cwtl mov out dec inc push mov out xor imul xor pop in sub lahf sti out aad push popf pop or sbb push enter pop mov roll cli push aam dec mov mov cmpsb and mov nop fs push (bad) hlt inc bound mov loop movsl mov mov shlb jecxz add cld push (bad) das data16 adc sub jb lret lcall dec add adc int3 add and punpckhdq (bad) cmp ljmp (bad) stc pop sub add jmp out pusha nop dec mov iret xor pop fistp inc cmp sub fdivl xchg rolb std nop out push ljmp adc mov sbb ret out or xchg fldenv out cmpsb inc mov sbb mov (bad) cwtl lret pusha adc xchg fs jl pop sbb pop in outsb test cmp aaa daa lcall add cmc out dec fs nop js,pn out imul xchg (bad) or (bad) out fcomp fnop mov jbe pop cmp hlt insl mov daa cwtl sub es call jb sbb jle fnsave out (bad) push mov mov sahf test push dec out loopne and aad out xchg jmp insb sbb fldcw lcall rclb out push gs pop bound lock fildll pop out addr16 out push push jmp aad xchg out aam adc (bad) testb fucomi sbb fsubl cmpsb fldz sbb fisubl fsubs fwait out jmpw sbb shrb out addr16 loop arpl push in data16 ret mov xchg jecxz sbb loop lcallw in insl xchg in shrl in sar jo out loopne and std imul adc cld fs jecxz bound cmpsb jmp jo lock ret mov xchg out aam adc shl loope outsb sbb xor loop fisubrl jmp imul jmp mov pop ljmp insb push or outsb push out pop out sbb into lock inc jne and out fldl (bad) clc daa ds js xor dec inc out xchg call jp jle cmpb pop fnstsw in add xchg adc xlat add out or dec jb pop mov xchg enter jne pusha arpl rorl push jno cld jne adc sarl xor mov add cmc xchg pop inc inc shll dec lods jb push out jmp mov mov push dec mov jbe out inc and fstl sub aaa jge xchg shr pop out aam push adc adc nop (bad) push add add bound mov outsl push sbb xor aad cmpsb mov out iret push es xchg mov jnp mov in lahf bound (bad) jmp push fs mov jb sbb fwait mov out daa adc sub decb mov lock out mov mov mov jno ljmp pop out repz out fwait sub sub out cmc add incb or xchg jge decl dec fwait pop xor jb push or repz sub out xchg aad push ficoml jae push pop push mov sti pop div mov (bad) fsubrs push sahf out fcompl xchg nop cmp out adc movsl loop push sub out add sbb aam xor pop int jecxz imul (bad) xor xchg call out pop ljmp mov mov mov cmc cld (bad) and bnd sub xlat clc pop jp out sub fistpl out popf outsl and pop and aam mov or outsb add fsub pop iret sbb jg (bad) sbb loope fcomps ja,pn mov xchg xchg or ds pop mov js and fs dec sub aad adc out dec mov icebp add out jecxz mov popa out jmp scas sbb adc mov mov cmp lahf push aad movsb dec enter pop mov cmpsl andl jge (bad) xor cwtl out xchg fsub mov hlt out (bad) xchg out popf inc mov push out inc adc ss add push dec nop jmp out mov (bad) cld inc adc in (bad) xacquire and cmp pop out inc adc xchg xchg out fsubr adc adc jae pop ficompl pop out jge scas (bad) popf shll push pop shlb ret out aam xchg addl ss rol aam push and inc xchg adc xor in test push dec jno pusha fidivrl mov sbb repnz sbb (bad) (bad) sub sbb xlat inc lods mov nop addr16 loop pusha jno popa (bad) xchg inc jmp dec push imul mov cltd aaa jp loopne adc out mov out (bad) mov popf lods data16 out nop out test fucomi inc subl pop mov enter in ja dec arpl mov inc in jle xchg (bad) out jne xchg or adc out jg mov fmul and (bad) mov pop pop dec repz in je cmpsl jns jb cltd mov out and xchg rorb out push ret mov cmp out adc mov mov pop mov clc lock xchg in pop pop pop rcrb cmc xchg cmp insl arpl rcl push rcrl dec jmp jnp jmp iret push out add pop movsl push add test xchg dec mov out cli les out arpl mov cmp sbb add inc cs xchg adc loope add es jbe in mov push and push dec dec int fldcw daa sub xchg lock mov dec pop push pop (bad) mov insb push push pop out pop js sarb fimul sarb sbb xlat lcall jno xchg shlb repz pop sub addr16 in xor rorb inc mov jns cmp je and xchg iret dec push xchg push rorl enter arpl imul das lods jecxz push ljmp invd loope push cwtl mov mov out sbb sahf in sbb out mov sbb mov (bad) cmp pop push dec aaa sbb fmull pop lret test xchg lahf push push lods ss inc mov mov nop dec dec pusha add push stos pop addr16 push dec shlb or jb shrl cld ret (bad) mov push push out std sbb sarb sub push mov pusha push adc pop fcomps mov sub cmp pand bound daa pop jb scas dec outsb push sbb pshufw jae xor sbb or gs test mov or xchg mov out movsl cmp lret or lods jae pop jecxz stos fmuls mov out popf cmpsb xor mov lret mov in ret sub mov test ljmp out pop (bad) or pop (bad) inc cmp loopne std int fnop (bad) out icebp decb sbb sahf scas jne sub cmc rcll inc cs out xchg sub pop (bad) stos push out mov mov dec jns pop imul xor mov out fsubp jge out cmc test cmp stc std enter in fs out hlt inc mov sbb in stos out movsb (bad) aad dec out cmp test push pop add rorb ss out dec test mov (bad) mull pop in adc and inc add cli mov (bad) mov pop sbb iret out imul mov out ljmp scas out popa inc xchg roll xchg add cmp xchg imul cltd bswap out loop cmp jp and leave inc mov xchg mov loop jno cmp iret push cmp sbb add or lret stos data16 iret out mov and fistpll idivb dec and cltd out xor pop movsl out cmp push hlt out repnz cmp dec lret (bad) imul mov sahf jl out sub mov test test push (bad) xor out jns loopne pushf jo add (bad) fildll pusha ja popa out push mov enter addr16 mov mov push dec out loopne mov cmp (bad) lret mov cltd pop push jo leave xchg jmp out lret movsb stos dec ljmp jbe sbb pop repz mov pop mov in adc aas mov mov out insb cmp lds sub je push push cltd adc aam outsb mov xor xchg fcompl lcall scas insl sub pop sarb dec sahf in testb sbb loop out sub mov aaa xchg mov addr16 lcall sbb inc ljmp fild sbb loop pop add jle idivl xchg sub mov ficomp inc inc lcall push out inc (bad) aad mov in adc or decb and push loope in inc inc into adc ljmp negl add mov cld cmpb jmp mov mov inc jl mov insl fistpll dec push div cltd loope imul out (bad) sbb sbb insb xor call popa iret add ljmp out xlat je cmpsl dec jo movsb out sub xchg xchg aas rcll mov sub xorb fwait jg out movsb inc mov cmp stos out jl (bad) inc mov iret jg mov out test in cmc (bad) pushf loope lods in adc mov xchg aad shrb dec sti out cld xchg pushf test int3 iret or mov faddl fmul pop mov jb daa (bad) out jne pusha cli jae out and fnsave mov mov (bad) mov out inc cld test pop dec loop enter pop call out sub into and xchg sub pop inc xchg add add enter sbb out popf mov xchg pop pop and jecxz dec or insl movsb add (bad) pop fs js pop out shlb mov xlat jb (bad) out call fdivr sbb mov out jmp push cmpsb out divl stos out dec es cmp jne push mov mov out ss xchg cltd out xor push and movsb and call dec in aad pusha out mov sub out pop mov out imul push aad add test dec inc and lcall loop xchg jg mov adc (bad) loop sbb insb jle and or pop push iret mov out dec bound out push add insb push cmp push rclb out xor inc (bad) in shll sahf pop hlt push xchg ljmp out push jmp out bound inc ds loopne outsb inc out lcall sbb movsl insb into and mov cmp sub adc out xor pop pop sbb adc icebp lahf mov push xor les (bad) jecxz dec sbb cmc sub in adc (bad) aad mov mov (bad) into setns jmp stos (bad) push in leave loop xchg out adcl inc (bad) ds out jb ret push mov push mov xor mov jmp test fcompl je cmp imul jp jae mov sbb push push in (bad) jg cmpsl incb or scas jge out mov and pop (bad) nop out xor lea (bad) adc adc ret inc mov in loope lret movsb insl in inc mov addr16 cltd pop dec out lahf rclb mov (bad) out cmp movsl cs sbb mov cmpsb ja push (bad) (bad) hlt inc popf mov and insb sub test cmpxchg fs out add push in xor xchg aas gs int push sbb mov in scas jl add pop push (bad) repnz xorb fldcw mov les jae pop sahf lea out cmp cwtl or xor (bad) xchg nop loope push es sti pushf or mov scas xor inc insb lcall add jg add sub ja out shr in aam loope xor sbb or push sahf in mov pushf jns xchg inc sbb out packssdw mov and jnp adc mov inc roll out pop stc sub out ss mov iret scas out movsb lock test xor sbb dec out sub push jl adc pop adc aam add pop sbb mov cltd and sub mov mov or cmovo popf jecxz leave adc adc dec nop stos push pop into out call mov add test jl out insb out mov mov pop jbe sub adc adc les mov cmp ret mov repz jg out (bad) aaa adc push out (bad) pop jle and les dec ss cld push fldenv inc sbb sbb mov and adc cmp subb cld out shlb lret mov mov test inc xchg in out dec push fildll add subl rolb ljmp xchg movsl (bad) das mov jo xchg push fs push sti out xchg addr16 ja in popa mov out xchg lret cmp pop out daa loope insb (bad) movsl sti sub add movsb cmp neg in insb mov jb (bad) out insl jo sbb shr (bad) pop dec rcll hlt or sub add mov cmc adc fbstp lcall aad ret pop push (bad) pop cs jle insl loope mov pop cmpsb push lds loope push fbld mov bound out test jns adc insb pop cltd push ret cmp in hlt inc jne out dec mov xor out sub in pop out inc int jnp pushf out mov and fisttp jge mov pushf out dec in mov fisttpl out mov mov sub pop ficompl push lock popf (bad) cs imul insl out iret out mov sarb addr16 sbb push out and gs addr16 icebp pop add nop push incb mov ret out ljmp adc adc lods test sub pop mov pop mov popa fwait jns mov jl out jbe mov rolb inc out pop pushf push jb stos out dec call xor add test and lds cmp int3 fadd sub out cmpsb cvttps2pi push addr16 aaa fisttpll out add jle lret or int imulb push cltd out pop cmp adc lock fsub cmp out aas lods pushf fwait imul lods (bad) out dec ret loop out out inc inc xor movsb pop pop xchg jl out mov les ljmp pop stos xchg leave mov sub lea out push arpl (bad) xor sti cs shrl int add sub push cmp out psrlq jle leave aaa push imul sbb fs dec lock stos mov insb les aas and or xchg sub mov outsb mov das lock lea imul mov mov pusha pop out pop cld call fldz add add lods scas out xor cmc pop mov cmpsb sbb sahf xchg pop out fcmovne out dec sbb jecxz xlat aad push pop pop dec xor mov dec or lods int jmp out andb or fistpll push and std es pop inc lods daa out adc xorl pop sub mov dec sub arpl out das cmp jmp push ds xchg aad jnp inc fcmovnb out sti dec in cwtl je and out mov (bad) sub pop (bad) mov ss mov inc and add push cs xor sub lret out and decl mov mov data16 hlt and inc dec stos loopne inc fbstp push jecxz pop mov ljmp xchg or xchg add sti aam outsb cmc mov outsl sub cmpsb loope fwait jmp mov in and inc pop cmp cmp mov xchg add pop movsb pusha inc out popa lret or sub adc push loopne ficoml pavgw in push enter outsb movsl out mov jb out sbb xchg and mov jle cwtl fucomp (bad) movsl pop xlat inc push mulb push popa bound out jnp lea mov sub or inc xchg lret out roll fbstp adc dec xchg in cmc out icebp shl add pop imul jecxz inc repnz push mov pop scas nop or dec out mov inc in fild arpl ljmp jns mov fbld dec cmpsl rcll out pop lds mov add xor cs mov jbe addr16 mov inc stos xchg in push mov xchg call push out sub cs mov insl push (bad) adc imul xchg pop outsb mov out stc mov imul cmpsb out and ja cs pop in jb adc gs aam into movb dec sbb dec dec pop ljmp andl and mov out add aaa inc push ja in in mov mov das sahf (bad) mov sub sbb xor out xor mov cli jle jmp jbe out fistp cltd inc lods lret jne imul adc sbb mov out push mov pusha repnz out mov jge fsubr push movsl push mov out inc sarb adcl cmovbe pop pop push int3 in cmc cmp xchg fsub out hlt pop mov lock add aam dec test in xor add adc and cmp enter pop (bad) xor out stos or outsb out xchg enter sbb pop rcrb pop jmp push jno subl out xchg inc int3 or hlt jmp popa outsb lret mov jne mov lods shlb ljmp out mov ljmp enter scas loope cmp out adc mov add shrb sub shrb (bad) aaa in out xor out mov out rclb cmp out ds leave xor imul or out call leave fstl jne out stc xor pop orb or jnp adc adc dec stos xchg decb lods add mov dec fiaddl adc and popf and xor pop out mov aad sub in iret sbb out pop xchg cltd and loopne cmpsb add fisttp (bad) lea popf out imul out cltd decb adc inc add adc sbb or out pusha sub repz cmp lods out (bad) fcmovb sub inc dec out pop pop in jae (bad) push cld (bad) cmp gs insb addr16 pop cmp movsl leave outsl loop ret out pushf int3 sub std movsb lret cmc out pop adc jl shrb loop mov out xlat pusha mov dec out divb out outsb fcmovb pushf fmulp outsl pand les ljmp fwait loopne out jg cmpsl inc ja lods inc repz pop in mov ja stos pop jnp sub (bad) mov pop hlt mov jmp cmp inc xchg call insb imul fcomip dec push xchg push outsl mov ja cltd add imul jmp lret inc inc push cmpsl inc lahf jle out mov dec pop in in cs sub aam pop or in push out out mov es sub ret sbbb pop jecxz roll jecxz ljmp jge and xchg (bad) sbb insb dec and add sarl out gs pop loope sbbl fbld push cltd jp out call mov xchg scas inc xor repnz (bad) lahf stos or test ficoml arpl (bad) and sbb mov aad (bad) ficomp repz aam lcall (bad) mov movsb aad add adc (bad) mov outsb cmpsl pop mov fsubs cmp jb out mov push cld pop clc hlt jmp loope xor nopl push push xchg in movsl popa out cwtl loopne xchg es (bad) pop out data16 cltd jno pop (bad) out outsb jle imulb or out mov sbbl scas push shrb (bad) xchg fwait sub or sub mov fistl xchg cmpsb mov fxtract jnp fsubs xchg jne out aad cwtl movsb pop (bad) js mov scas xchg pushl loop xlat aas repz ja (bad) mov in pusha and in out mov call imul or jle dec arpl gs aad add es aaa dec int xor xchg adc xchg jmp iret inc fs mov out in or push mov out aas lea mov rcrb push das rcl lods inc out nop (bad) mov inc test jne push in add jbe (bad) xchg out mov cs fmuls loopne push mov out mov fildll cmp (bad) lret jecxz loop sub rcll js and cs mov mov das cwtl mov (bad) movsb mov pop inc mov lret jmp out in xor jb fcomip cmp test in iret mov push sbb insl lock int3 orl push (bad) (bad) (bad) xor (bad) mov lods xchg out mov mov das push out cmp inc mov mov cmp jbe mov out cwtl fildl sti iret repnz fs fcmovnbe aad aam lods inc out sarl inc pop bound xchg lahf push sbb aaa cmpsl fsubrl mull push fs pop lods out xor cs repnz jae lds and jle (bad) test push adc mov or ret cmpsl loopne bswap mov cmc hlt incb inc adc out mov (bad) pop xor inc mov and pop push mov xor sub lods add xchg mov sub out loopne outsb dec jns out outsb cmp out jnp jecxz (bad) ds sub inc pop scas add fstpt hlt cmpsb data16 mov xchg mov cmpl sbb inc movsb in xchg in arpl loopne cmpsl pop jnp les or pop adc add mov mov out fistp pop xchg inc or loope addr16 scas dec in jg (bad) out dec xchg je sahf cmpl inc xor xchg adc inc adc (bad) ret int loop cmp or jo add stos pop xorb inc loopne jmp (bad) fimul xor jb push mov push stc mov addl adc rcll fild loope test ja insb push scas shrl into aaa out adc jo push out dec fdivrs add jmp add std in lock or mov pop test xchg and mov repnz dec cmp mov out jl xlat (bad) push out ficompl sbb fucomip sbb in add xor out xchg cli imulb out or jnp jl fs fstp add xchg popa push lods imul aad and push sbb lock pop jns sub jp jnp imul pushl imul or shll sub pop out shrb sub pop dec rcrl iret jmp sub mov add mov pusha pop xchg pop das adc mov jl pop jecxz cltd sahf push stos call imul xchg sti cmc sbb loopne xor dec scas in ljmp outsb fdivs sub and out or mov popa mov jne movsb or mov out sbb jecxz notb xchg setp loope pushf out (bad) test mov cltd lods loope adc daa out roll es jle dec xor mov xchg test mov out outsl xor out mov add pop int cmp test popf out cmpsl mov ss adc xor stc sub mov xchg out dec xchg popa out ss push xchg mov adc mov (bad) jge cmp data16 out cmp mov pop sub insb addr16 out fist fcoml std popa out mov or bound push fsub cwtl jno lea daa pop or cwtl sub outsb mov repnz xchg dec push outsl fdivs fisubrl inc push mov pop pop out pushf sub imul hlt outsb cwtl rorb out imul xchg (bad) (bad) repz sbb pop dec hlt das mov inc fs out leave ja stc sbb or push out add cmp push out inc mov sbb aas repz or pop mov decl ljmp out push int push mov ds (bad) fdivl lods or popf xchg sub jge jae lret test pushf add push iret nop mov xchg pop out shl fsubrs leave add push cli out cmp push lahf push sub dec mov popa (bad) (bad) adc stc or xchg out and adc out jbe call sub or ljmp lret sbb repnz and repnz pop in xchg xchg jg enter leave push aas pop fsub push xor pusha fildll jb jbe (bad) and out push out rol mov sti iret sub or xchg repnz testl arpl dec out add cltd lret cmc add movsl xchg (bad) jbe (bad) notb out data16 or pop repnz imul xchg sub rcrl xchg or or in out int popf imul xor je lods jg dec pushf adc pusha clc push push out mov icebp out leave sbb add cmp inc js inc stc out loopne fisttp out push sbb rcll mov out js xor cmp add iret sahf jmp idivb jp fdivrp loope jnp (bad) jg and xor out into sbb arpl (bad) loopne xchg loop mov in push pushf out popf nop and lock inc mov jecxz or pop out dec or popf fild fdivs out daa sub fwait std cwtl mov xchg mov xchg push in dec stos dec out test and out aas shrl sbb xchg imul loop sbb mov out aad cmc (bad) jns push out sbb sahf les div push mov movsl out es out add pop outsb sbb popa icebp mov repnz mov out pop cli mov mov cmp pop jmp shr out (bad) push gs jae xchg lret iret out rorl (bad) imulb imul out lea and adc mov sbb call cmp pop loopne mov adcl out rolb sbb jge arpl lret incb jmp pop call sub sbb out shrl mov sub icebp pusha out aad sbb adc data16 add movsl les insl jl (bad) das or push push scas clc fwait aas imul pop aad ja jo out ss lods adc xchg jno inc push push jecxz (bad) jg repz out imul dec out cli jmp jbe out push stos xor std dec xchg mov mov jmp out mov lods sbb and insl js mov outsl fildll push in or and mov (bad) push rorb add inc sbb stos arpl out pop xor insl ss jle out sarb (bad) out fisubrl stc gs sub aad ja leave pop (bad) (bad) xor out movsl and jl lods es mov mov sub push mov and pop das sahf fs out sbb cld in add pop xchg pop out jo push inc out and inc mov mov push ljmp hlt out mov push loopne mov icebp out popa xchg test pop lcall jne inc cld pop mov std ljmp sub test lock insb mov out mov mov test out lods mov out cmp pop pushf test leave jl adc adc outsl dec xchg (bad) aam xlat and int inc cmc cmpb jnp rclb mov (bad) lret faddl (bad) cs rcl cwtl movsl dec push (bad) xlat popa out imul cmp jae out (bad) mov insl adc mov sbb sub pop dec popa aam add mov mov mov rcrb ret fcompl jnp fsub cmp out xchg dec push ss pop fnstenv dec pop inc mov dec out xor adc ss (bad) test call out add (bad) xchg push push gs mov xor loope pop out inc adc mov mov enter pop aaa lret push sbb (bad) adc jge sub stc jo jns cmpsb out dec pop or das sub out mov shl pop out or out (bad) lcall movsl mov cld in fmuls cmc vunpcklps call jo dec xor testb imul loopne add adc pop dec mov dec ljmp pop mov xchg sub imul shrl xorl in shr ljmp ret iret pop aam and fcoml mov mov movsb jb dec inc in inc pop sub popf out lret outsl jbe cld repnz or sahf out mov mov (bad) jle movsl mov sbb lods pop mov xor dec sti jbe push push into out push mov mov bnd (bad) movsb pop mov jecxz push loop mov jno sti stc dec sahf mov cmp lcall fs arpl ljmp js in fldl mov in push mov hlt bound cmc (bad) mov imul jne out loop jl dec mov (bad) out push sti pop mov sbb cwtl fs push pop xchg xchg dec imul in inc out mov jo jno mov pop call xchg lds inc out push lcall jns fimul mov mov lret cli pop in and inc sbb ss mov lret jle adc pop xlat mov out out pusha add out lcall loope push fnsave adc out xor xor sbb pop (bad) add xchg push lds lret xchg adc je out mov test cmp mov into pop lock sbb inc mov loop (bad) dec arpl pop push enter dec sbb fadd je imul xchg out (bad) int3 fidivl pop daa or out mov xchg or aaa push insl (bad) xchg sbb out fisub ss dec rorl sbb xor mov in mov cmp call out loopne imul sub pusha mov sahf jecxz fsubl jge mov pop adc mov out xchg dec sbb pop push aaa scas outsl and sar add gs or imul inc mov and (bad) movsb pop push and mov push sbb negl xor push (bad) out mov lcall out sub mov lods inc out out adc ja push mov imul pop lcall insb out lock mov dec pop pop mov imul jo out mov pop out jns sbb jnp xlat out jle inc call out mov jne push push es out mov pop adc sbb (bad) pop xchg mov iret imul test push and push xchg mov imul inc push sub pop repz cmp movups sbb imul out jecxz sbb jb sbb cmpsb pop inc mov pop out push das lret mov lds dec pusha inc (bad) jecxz pop jmp decb jge movsb test push out gs and jp scas inc int out lea and sbb xor ljmp xchg push sub adc sub xor fucomp sbb leave (bad) out iret xchg aam mov nop adc loop sar jns push fmull loopne push bound out jecxz mov xchg scas out or and (bad) (bad) out fdivr cmpsl or in popa add test rcll xchg xchg inc (bad) (bad) fidivr mov xchg aad add xchg fs std int imul cmp add mov cli out mov sahf or into or sbb sub pop sbb sub mov imul out add mov push aad enter adc shl lret out pop mov sbb and outsl jo or pop rcl jb out cmpsb roll mov mov mov or out xor inc sti repz xchg jg div jmp or pop and cmp es mov decb mov push fwait mov icebp out lea dec pop out jnp imul sub pop fldt out sub push push sub adc lods jbe out gs xorl out shrb roll leave cmp lea out data16 fwait outsb xchg ja (bad) cltd cmpsl mov sbb cmpb aam xchg mov (bad) fdivs clc loopne inc and loopne xlat add pop int3 out add jecxz out sbb pushf cmp sbb aad iret (bad) sub loopne adc xchg subl pop jge dec stos jmp popl test inc or adc pop mov stos cmp jmp xor icebp or imul repnz fisubr fwait or shlb pop aam pop cltd cmpsb fstp sbb push cld insl fistl in rdmsr mov push sbb (bad) fdivp lahf icebp lock fcomip out xchg jge sbb js cli cld ljmp rcrl ja out sbb push int arpl in cltd out roll dec imul pop cmp jns test inc out insl call test mov imul (bad) xor mov add cmp out cmp lock (bad) push inc xchg mov lods les out and push xor in icebp out enter es daa sahf cs in pop stos pop mov js scas or pop mov insb je in pop jecxz xchg lret rcrl adc cmpsl or pop push adc sbb jno or test outsb data16 lock js sub rorb mov adc mov ret ja loope (bad) jbe out sbb jne out xchg sahf add out push push es xor dec lea mov sub sbb (bad) jne jmp mov out sbb pop movsl cmp xor lods push fidivrl mov insb lock cmp test out push (bad) pop (bad) mov pop inc iret cli fsub loope jg dec jb in out sub inc lock rorl out bound xchg and pop popa fs stc out addr16 xchg mov mov add out pop xorb aad ret jb jle call push icebp out lret out xchg push (bad) in push pop pop jg inc loope loop fs cmpsl xchg push (bad) (bad) sub mov pop out lret bound arpl xor out cmp xchg dec sub negb int3 and sbb pop sahf out mov sti mov ret xchg push lods scas out imul out fwait adc xor loopne lahf ficomp mov aaa (bad) ds out or pop adc add mov mov int in insb sbb out or nop repnz push out (bad) (bad) std mov or sti mov pushaw out mov dec das pop sbb adc (bad) int out faddl sub xchg ret (bad) hlt jecxz pop push jl scas or push and into out fstl sahf inc decl lods or or lods setge shlb xchg lret or cmpsb cmp out sets ds mov out dec imul mov sub in jo sbb xor das (bad) mov imul (bad) test incl arpl push and xchg or inc pop pop push aam daa std out add aas fsubp dec jge pop push xchg sub in movsl pushf subl push xchg les mov out or dec (bad) sub push out jle call out pop mov outsb push xor leave push ja lods in cwtl mov stos xlat popf dec bound call xchg pop mov cmp dec xchg mov gs daa int popf stc punpckhwd add out jl xor out cwtl roll movb scas fsub ret ja ljmp adc jg iret or cmp or jecxz mov mov sahf add (bad) out ja fs insl fnstsw or negl add aam out loop ss loopne outsb xchg loopne fbstp inc inc pop js mov mov in fisubl push rolb add sbb out dec iret sbb cli out scas loop cmp mov xor xchg mov mov test cmp add xor in aaa lea mov push push in mov divl sub push out cli (bad) and ret pusha popf pop out dec bnd xor push or outsl out data16 adc test into jnp hlt sub add out jl nop xor inc sub push sub adcl mov cmp roll out cwtl scas jae or push (bad) push out sub sub popa mov movq mov and (bad) push push cmp xor aaa stos fs jl out pop lret jmp sbb push leave sbb call push mov test movsl or pop xchg push out hlt lods and mov insb daa (bad) ret sub pop push cmpsl mov mov mov pop mov mov fimul cli int out add pop mov or pop xor fmuls into xor jmpw add mov js pop loop push adcl popf sbb fildll scas out dec (bad) pop push mov out rorl js mull iret xor add mov (bad) movsb sar ret rolb jecxz ret cwtl xlat out mov jns in dec in insb fiaddl mov xor and (bad) or pop cli push nop cmc cmp xor pushfw (bad) add adc jno (bad) roll push out scas and dec push xchg jecxz mov cmp push iret fistl out xchg jl stos sbb decb fmull jae in sahf (bad) cmp lcall out adc add imul (bad) adc xchg mov lret mov push leave fdivrl daa inc std imul jp mov loope jl cmc out xlat lods push xchg daa stos out scas cmp aad add out mov or xchg das sub cmc and and les decb out mov outsl dec (bad) and pop cmp jecxz js adc (bad) mov xor and out mov or lods fnop jge sti lock lods (bad) out pop loope cmpsb inc clc pop int3 xchg gs xlat add rdtsc fsubr in mov mov outsl test inc (bad) fwait ret out dec (bad) pushf and fldz xchg ss inc fcompl out fiaddl jg fnop out pop outsb test nop sbb sahf out pop es mov jmp jecxz sub cltd ljmp adc out and loope out out js dec clc jmp sbb adc int3 out rcl xchg fnop shll push out inc mov add or out mov (bad) das dec jne ds mov mov sub les fsub out inc lret decb out mov push and pop mov in js (bad) fs je jle xor and lods cwtl jg out pmaddwd and shr sub jmp ret push push jl jnp cmp ljmp stos mov enter jp and insl adc test jne fsubr sahf (bad) maskmovq idivl imul adc fcompl shlb mov into gs jns repz sub mov adc out ret in pushf inc jmp repz lea lods mov mov out xlat add push int fdivl add xchg ljmp mov ljmp daa pop jmp mov int3 sub xor adc fs outsl (bad) es (bad) cmc cmp and ss scas fwait jle movsl pop mov (bad) cmp out sub sub sbb pop (bad) push fs paddq and out movsl add in in stos and ljmp push cld (bad) lock and pop lcall clc loop lret pop out adc stc paddsb adc adc insb loop negb std in or and lret jecxz data16 xchg orl mov loope xchg jo out sub xor adc jno lahf pop adc call add (bad) in je pop jb mov fistp js sub inc outsl and out adc mov scas test push int3 les fiadd int sahf lods mov mov (bad) out fsubrs ficompl pop cmpsl out sbb cmp (bad) cmp leave out sbb sub mov inc out test (bad) enter sub test (bad) sbb arpl push cmc enter adc cli repz xchg in or cmp hlt in fsubr aad jge ja das sub cmc sbb jmp dec jbe inc out out scas cli pop das or enter cmpsl mov imulb push les test adc ret out push hlt mov (bad) mov jg (bad) stos push jmp and neg pusha test push jne out out mov xchg out scas cmp andl mov jle out daa aad (bad) adc adc inc (bad) xlat lret xchg cmpsb jne and push jg dec lods testb out es xchg (bad) out scas notl jl add out dec xor fucomip pop outsb xlat arpl and ret (bad) in fwait (bad) pop add stos into or ret add loop and int or sub lods (bad) fadd fwait pushf out sub xchg jo out pop inc daa lods adc sbb arpl pop enter dec pop out push es mov pushf out fcmovnb jg add lea lret shr mov ss sbb loop and loopne leave sub inc int sub mov jns add or inc jbe into inc out lods gs mov and (bad) insl cmp into adc or cmpsl out lods push push inc lcall inc add std out mov cs fs cmc aas or and je stos pop mov jb jnp in cmp ret lods xchg outsb or ss pop xor add movsl jecxz sbb sub sti mov pop xor fidivr in out inc add and cmp pop pop cmp and xchg insl pop loop ljmp pop push stc outsl out movsl rcrl rcrb rolb jge xchg sbb mov mov push mov js ficoml dec cmp sbb and ss test stos jl mov mov mov int cli sbb xlat scas jge dec test (bad) cmc jnp xor lret dec out addl ret pusha (bad) outsl loop mov xor movsl pop inc out sub clc jg adc test aaa int3 push aad pop pop jb ljmp mov adc out sbb es out add inc mov jecxz nop shlb mov mov xor jbe lock mov pop lods sub les ret imul into xchg pop in mov adc mov mov loopne js (bad) push ret xchg jbe jge les out pop fldenv mov out xor inc cld cmp jno sahf push out dec fistpl cltd incb adc insb fisubl out mov clc mov fist arpl movsb fdivrp pop lods clc popf out pusha pop jle test decl cmp ljmp mov dec xor sbb lods xor out push dec and mov xchg mov mov out or scas sahf out and neg (bad) dec cmpsb out je (bad) jo jge push movsb xor sub out in sub fwait iret dec test lods out xchg stc cmp sub xor inc xchg jb out lock out rorl pop fisttpll out test adc mov dec adc add jg inc adc mov roll push stc mov out xlat adc repz pop fs push inc jl ljmp mov fisttp dec out fldcw sbb fsubr and clc xchg sub decb push push mov xchg sbbb in ret push out mov jge fs lahf nop scas scas rcll sub xor out dec xchg fdivrp dec clc push push (bad) ljmp out rcll dec fsubrs xchg lret or (bad) push jge decb daa loop mov jmp ja dec shl mov sar int arpl lret xlat data16 in and loopne and enter pop fsubl dec jnp cs sbb xchg dec add sbb stos jecxz dec scas (bad) std push lret hlt xor push fistpl cmp imul inc push dec mov pop aaa out les mov out cmp adc add das out insl inc test mov or out xlat adc mov and lret adc (bad) leave lock push mov iret gs subl nop pop cmpsl out inc out add xchg and sub in cmc mov outsb test mov out movsb push cli or jg adc inc fistp and ss out xchg sbb inc loope out cmp push insl sbb out inc clc aad cwtl adc xchg pop scas adc cmpsl hlt mov inc mov cmpsl test cmp push pop inc pusha adc xchg adc mov pop add pop dec cs and lods stos push cld popf inc out shll mov sub out dec je enter test inc outsb cmp shrb fist dec enter push jmp daa xor ds mov out push sub ja les aas outsb aam in ljmp pop rep test cmpsl imulb lcall mov or mov push cltd pop or push adc pop xchg outsb imul popf leave push stc outsb xchg xchg xchg mov out xchg jno out cmp ss jmp movsb and sub cmp pop divl push rcr (bad) adc xchg insb and add xchg mov and (bad) insb stos lods (bad) jns cmp cmp lret dec in ret xlat nop jge out mull cmpl loopne mov out out ljmp xchg fistpll dec fisub clc pop pop jnp scas mov out movsb push and and outsl jge out leave in out jl mov imul mov mov push sub push addr16 cmp out popf xchg xchg rorb mov sbb out pop mov inc push stos mov movsb divb (bad) push pop rcr je mov inc movsb cmp scas xchg repnz cmp ficomp sub dec mov imul mov ret shrl out push push fsubrl out pop xchg xchg dec popf loop loopne xchg jl pop xchg lcall fs xor psubusw scas mov or mov inc sbb xchg imull mov (bad) popf out (bad) fdivrl inc in addr16 stos sbb add sahf pop cmp jg pop sbb outsl or jns mov aad push in subl push (bad) xor fs xor sub sbb push nop sub lods lret cld lods dec loopne ficoml (bad) rolb mov loop hlt xchg out or arpl imul inc dec pop dec sub and nop pop (bad) cli sub into mov push std in or mov fs (bad) pop cs icebp out rcll daa pop hlt sti orps out (bad) add movsb out push jle pusha out push add aaa sbb ds ja out sub and cs call dec lret jne xchg push jo cmc dec sbb (bad) (bad) daa dec xor xchg sbb pop out dec sub mov fisubr and out jecxz mov repnz stos mov xor fidiv lahf pop add popa (bad) cwtl out daa sahf imul aas data16 (bad) inc stc and cli push pop out repnz loopne cmc inc push push out adc ds fwait xchg mov push bound mov inc mov clc add stos sub mov ljmp imul lret sub insl push je out ds clc mov xchg mov ljmp adc data16 int add shll int out inc sbb out inc adc mov pop iret shr sahf xchg aas in jne cmpsl pop mov call inc out movsl stos push jb les out lock pop push out out mov xor imul mov daa pop sbb pop out rorb mov (bad) jo pop movsl mov outsb jne xor aas pop aam push and jne adc lea adc jl movsb dec xchg ljmp jb jmp cs ljmp jo adc arpl out lea test xchg insl jo in out jno xchg sub mov jl data16 imul lea add lods out inc push in and shll out fcompl fwait add mov ds pop dec mov mov nop out pop adc ret fsubr ja mov xorb out mov sbb jnp adc cs rcll ss push inc fidiv sbb cmp cmp fisttpll or out das out and in push insl dec out cld loop cli (bad) and gs cwtl lret push and mov dec or dec out rorb pop (bad) jb cmpsl lods pop out fldl add adc push es (bad) shr cmp mov out repnz push or or out (bad) xor pop (bad) dec pop in mov in sbb loopne xor cli adc das ret pop fsubr inc movsl test cmp xchg or adc inc into cmc pop (bad) or mov out cli decb adc jp js insb push and cwtl add call out inc mov xor mov in js in aad dec int3 lret or cmp xchg outsb (bad) out lods sub iret gs scas inc sbb out jbe xlat out xchg aam add inc enter sub (bad) imul dec pop or fs insl lock or cmp inc add fwait out and mov out xchg pop in out xchg or cli inc pusha pop out jae mov push outsb test aam inc push cmp popf pop cltd dec out xchg mov jnp cmc in jb in test xchg mov cld inc dec adc sub ffree add push scas mov fisttp movsl push mov insl or int je mov and mov jmp fildll sbb pop fcmovnb and mov jb cwtl cs xchg pop cmp cmp out xor sub (bad) ljmp addr16 adc cltd (bad) sub pop dec aad stos movsb aam push out scas fwait and mov jae (bad) (bad) mov cmp xchg (bad) sub dec pop imul loope pop push aam in pushw mov add push ss and jle outsl and pop in into cmpsb call add or push ficomp ds adc pop repz out and out mov bswap and lret (bad) pop sahf mov rcr outsb movsb loop adc out jp pop push sarl inc (bad) fisttpll mov xchg icebp out enter xchg bnd push test xor outsl dec in stos mov or mov mov lcall repnz rcrb sbb test inc fnsave and out inc pop sub ljmp clc iret add (bad) out repz push outsb rcrl ds fbld movsl repz (bad) cmc add call pop push add lea scas aad sbb inc sub out mov imul pop jle jae shl sub ljmp adc test iret lcall mov out xor mov out adc lret mov dec pop push inc std incb lods pop lret out mov arpl outsb cmpl out ss cltd lcall pop sbb xor popf call out jnp enter cltd sbb iret cmpsl insl sbb (bad) aas mov push push pop ret sar jb adc in mov out push int3 lea out mov (bad) push (bad) in dec mov sub mov and sbb pusha int3 out xor add push out mov mov test test mov mov and push daa iret fs (bad) loope xchg pop test das push movb sahf sub jbe hlt mov jmp add idivl (bad) outsb mov out test mov jp stos xor out pop in movsl sahf shll iret out aad (bad) mov out divl int3 stos jo loope iret mov into xor or fbld lods jp or loop mov negl xchg pop loop ljmp adc addr16 pop sbb push (bad) jg insl push loope es jno pop in fist bound sbb stos jmp fs add out addr16 push test imul lret jnp and mov adc lods mov xor lea pusha popf pop or aaa pop fst lahf mov push pop pop inc adc (bad) pushf mov fcomip das xlat cmp fcomp out inc or (bad) je inc scas lahf jbe xchg test out pop dec cld xor iret mov clc stc xor sub aas sub and push mov pmaxsw repnz imull pop (bad) das je sub fiaddl into ss jmp jmp data16 jp ret nop pusha push jne inc mov int3 (bad) jae out (bad) or fxch test test (bad) bswap out fstpl sub out inc xor aas imul push cmp in pop fsubrl scas popa call lea in inc out icebp repz repnz (bad) das cli jl pop or lods in sub out fbld rorl addr16 out cs rorb fidiv out shrb mov or out xchg mov sub les bound xchg adc fcmovbe or jo cli icebp out inc dec add or aas xor cmpsl out or idivl fisubrl mov in mov push mov stos dec bound push (bad) sti outsl mov and xchg fwait out fstp inc call out clc mov leave xor lods push pop js in lret jae cmpsb xchg inc mov sti stc adc adc div dec add test sub jmp sbb cmp in mov lret cpuid add adc je xchg push loop out out mov add pop cmpsl lock push ja ljmp out push xchg jmp xor rcrl pop jnp call push xor mov jns out cmp fcmovbe out xchg adc sub xor nop add in dec out jle lods in (bad) and or mov or or rcr push out lret jnp rorl stos pop inc loopne cltd push in nop or inc orb out cmp popa ds mov push and jno (bad) dec add pushf out mov jne lret scas popf cwtl xchg push sub out js xlat and pop roll sti repz enter aad je mov mov lea or mov out fisttpl shr and gs push jl shr jle mov sbb in xor inc ds int3 (bad) ljmp out push ret xchg inc cld pop lock ljmp fstl call pop cmp cmpsb imul xchg out add xor rorb mov (bad) ret jg out mov (bad) repnz inc into int3 sub xchg loop push lcall rclb and mov rcrb mov mov pop out or cmc sbb lea lods inc push loopne out arpl xor sbb out call fistpl out xchg cmpsl push or gs cwtl mov hlt (bad) aaa movsb movsl ds icebp pop lods cmp arpl inc test pop jg js mov mov out mov fsubl test or mov out in sub shrb leave (bad) fldt xchg insb call popf and adc mov std out nop pop mov or out jg cld xchg data16 (bad) test testl lods mov xor jno addr16 out lret or xchg outsb push inc imul loope lahf out push stos das sub or push out pop lea adc and mov push jnp mov lahf rep inc out inc mov cmp sbb in pop call fucomp scas (bad) ret gs dec out sar adc aas out and cs repnz in arpl jne divl in pop sub (bad) mov (bad) jl fldcw neg out mov mov or stc fldenv mov test jge aad loop xchg adc xchg arpl pop inc ljmp scas push sbb mov cld call out outsl mov mov out pop jae push stos inc push pop out add dec mov out enter lret bound out fiaddl push iret test cmp sub cmp pop aam iret sahf jle loope xchg out arpl lret ds pop dec sbb arpl pop out mov mov out lea es enter mov cmp sub aaa out or movsb arpl cmp stos lahf pop shlb mov fwait mov jecxz cmc icebp in cmpsl xchg pop es sbb xchg xlat push shrl (bad) jnp mov enter push mov (bad) jmp jae and and sarb sub loop and fstpl not imul rcrb (bad) jnp (bad) pop in adc xchg cli out cmp push cld stc or sar ret or out jne fisubr cwtl repnz push and add jbe movsb and insb loope mov (bad) lea lods adc out push (bad) jb shrl test pop mov mov out sub in (bad) loop or mov pop out test adc jns (bad) lds inc arpl out pop mov leave movsb out jbe mov lret xchg fsubrp jp adc (bad) pop aas dec in cwtl mov xor pop xor int3 mov mov push loopne push mov add imul or out out cli lock sub cmc loopne mov xlat out data16 sub fs stos out mull aas (bad) xor cmpsb imul mov lock stos out ljmp daa jbe out sbb cmpsb sbb jb mov (bad) sbb lret mov loope jg mov cltd jnp int ss out jns insb idivb ljmp out push pop push pop aam xor pop push andb je out xlat mov js out lods xchg xor es in lods jmp test mov jb mov scas out or sbb out cmp arpl pushf fdivrl loopne iret (bad) fcom mov pop out out sbb in ds push push push (bad) std mull out inc movsb jns xchg add cmp jne sub mov imul jmp dec std shlb mov minps out xchg das lods ljmp insb sbb sarb push pop (bad) ds mov inc aam inc sub pop mov adc in mov push push int3 aas call out ljmp inc push jle xor std out ret repz sub adc fsubrl mov mov cmp pop icebp iret les push push out pusha (bad) xor jmp push inc in sbb or insl shrl out sti cmpl mov aaa lea (bad) jg push stos gs push sub mov jl xchg pushf jnp loope mulb xor sbb inc addr16 in mov pop xorl mov pop addr16 pusha jmp jg int3 stos (bad) (bad) mov jp shlb rcll sbb es ret test pop push out sub sub jnp mov dec xlat inc addl mov bound dec in and ret push jmp push out call pop (bad) jo mov not lret pusha je out mov mov inc out test shr js out icebp push call mov push dec mov sub idivb cmp call or mov mov loop jmp testb imul outsb jmp xor out jno cli clc and sbb jo add sub mov xor cmp mov pop (bad) mov cmpsb mov loopnew dec out mov jmp sub pop (bad) rcl out mov jmp jecxz out cmc mov add das loopne hlt pop (bad) ljmp lds ret dec pushf jle out sbb jg int es cmp out pop loopne jbe mov add pusha dec leave jno mov in pop pop push mov imul aas iret xchg and (bad) adc pop lock mov adc popa incb les in dec cmp cmc es fdivrs jmp scas incb fbld dec das mov sar out and pusha repz into (bad) out inc mov ret sub pop add cmp jne aad test mov xor jae add hlt pop pop sub mov lahf mov (bad) pushw out addl sub push lahf or pop pop hlt stos daa test xchg ds jmp cwtl out pop lock push or insl enter fisttpll add mov in call out cwtl xchg out out sub jnp or ljmp out (bad) mov or xchg push inc out mov mov out push mov imul adc fisubr out cld dec nop and (bad) imul in add out xchg movb push into xchg out push adc aaa out pop fisttpl std xlat insb scas out push and shr out test arpl adc loop dec push insl and fidivr scas int3 mov sbb and stos addl push (bad) push out mov add out or jo out jge or and jmp jecxz mov xchg push xchg cmpl mov sbb ljmp pop daa lock jle cmp out pop mov imul test pop in gs sbb pop arpl mov js adc mov pop pop mov popa jecxz cmc scas (bad) out stc push xchg push xchg shll out dec adc add rcll xor lods aaa out inc lea movsl cmp push out pop stc lret rcrb stos addr16 stos nop pop mov inc loope out data16 mov cmp mov mov mov (bad) out pushl (bad) hlt (bad) jp sti fistpl fsub ljmp out call lret inc idivb subl popf pop in mov mov lods dec fnstcw jbe out mov out in test or add mov xor lahf stos in pop jo leave mov test mov adc lret iret movsb mov jb push pop fwait xchg inc jo sbb neg out lock dec and pop loopne push rcll test rcr dec inc dec out jl scas sub mov js ret xchg stc loope xor sbb fcoml mov pop adc push mov sti in jmp dec lret mov loope cld data16 push out mov mov xchg sub xchg xor out sub xchg into adcl push scas sbb call test add lea out pop sahf ror sub push and (bad) fs xor inc out dec add fisub and lock (bad) jae xor rorl mov (bad) repnz pushf lods rclb push or scas adc loop mov cmp pusha inc sahf imul mov arpl test shll icebp jg and mov gs xor pop fbstp rcr and out lcall push mov loopne out pop in fxch in adcb loopne imul jb sub pop ljmp or scas and add adc out loope les out mov xlat jecxz jp push out mov and fsts add mov out arpl xor test jle mov adc push cmpsb jnp mov dec out mov mov mov ss iret mov xchg mov cmp out andl or aam mov ret (bad) (bad) fisttp sti jl shrb mov imul fwait pushf popa (bad) pop aam loopne sbb ljmp (bad) test loopne scas dec (bad) out push sub sahf mov nop ja out loop movsl aam xchg out mov data16 sub jecxz mov ret out test dec cmp jae loope out data16 push mov icebp pop (bad) sbb imul aad sar outsl xchg xchg xor or adc leave mov movsl sahf xchg cmpsl iret jo loopne lock cwtl and pop out hlt or dec fwait pop xor out dec movsl out cmc or xchg ja mov fs inc arpl adc out imul (bad) notl jmp push mov out mov ja,pn ror xor fbstp and xchg aaa out out test jb gs pusha cmp pop jns test pop cltd daa and mov cmpsb (bad) out mov jge cmpsl out fs (bad) mov dec arpl fcoml push in (bad) xorb test cmp daa in mov xor ljmp (bad) out sti gs rcr jno dec adc sub sub aas out gs imull jle stos (bad) mov mov add enter out adc jae or roll call push add xchg leave rep loop (bad) pop cmpsl insl xlat shl into out (bad) bound arpl out and das pop mov dec aam loope jle,pn jno repnz or inc push lahf add repz andb fwait adc mov nop sbb int iret jmp outsl lahf pop xor jecxz add stc out arpl inc cmpsb out lods fbstp pop cmpb out inc jge xchg jbe les out sahf jo mov out outsl xor (bad) mov hlt mov sub enter pop adc adc scas movsl mov cltd adc push and pop and pop mov daa pop pusha push jmp (bad) popf std out (bad) stc shrb out clc mov ret test movsl dec push sbb pop lahf inc sahf sub out mov out pushf mov adc lret out (bad) cmp sar aas push push (bad) mov fucomi pop push clc push out (bad) aam cs mov dec add sub inc lret sahf scas mov insl mov mov test rclb pop loop insb mov out jmp sub ja jns fnsetpm(287 adc std cmpsl movsb loopne bound push pop out sarl jns test jb pop in jg mov push adc adc push cmpsl cli out out cmpsb xchg sarb push mov adc xor in into fwait jae mov call mov xchg pusha nop dec lcall out push push jp push fs mov out push testb hlt out mov inc es scas call dec data16 out xchg out sbb arpl (bad) lcall sub (bad) sub lahf pop xor sub pop mov push scas mov adc and push out sub ret dec addr16 test in in sbb add jbe lock out push xchg out aaa in loop pop out or mov outsb adc jbe scas xlat out sarl sub add xchg out pop push mov push push out imul iret or loopne out lret pop stc outsl mov out inc xor adc in cld insl sub rorb xchg loope loop inc mov or loopne pop ud2 xchg xor loop xor push fidivrl scas fmull out push fwait dec add mov scas sbb push fmuls ljmp out add pop outsl fstl das repnz andb mov out push or fsubrp sub test cwtl out pop rol dec js out out idiv ds es lahf mov adc out scas sub pop and hlt cmp out cltd repnz int3 inc mov stos mov lock out ja scas dec cmp aas aas ficompl cmpsb push pop sub stos (bad) jbe out push sbb xchg add sar (bad) out pop xchg dec mov mov pop mov insb test call fldcw mov ret mov iret mov push (bad) js in into cmp mov fld aam divl ljmp jecxz fwait addr16 adc outsl rol dec sbb in cs adc jle mov lods push test (bad) hlt push out cmp sbb or imul dec je and inc dec fucom push and push out xchg mov jb adc adc jg (bad) dec mov in insl mov cmp fs xchg mov dec mov mov nop adc sub push sbb pop sbb out gs mov stos dec jl rorb sbb jecxz (bad) out stos lock cmp cmc adc clc out add mov rorb loop pop lods in cld xchg aaa lds xor pusha mov out into pop outsb out mov xor jmp test test ficompl cmp out cltd xchg xor das pop data16 adc cmpsl bound out roll mov pop xlat cli pop jl dec jbe (bad) sbb cmp incb sahf mov movsl out push pop test mov inc pop pushf stos jnp lret adc (bad) fistpll mov aad in xchg mov mov push adc in pop insb out out (bad) push outsl sbb inc adc adc insb xchg out jle pop and ss out xchg inc cmp (bad) int3 jg cs in mov (bad) xor or out xlat lret js loope out pop enter push ret movhps (bad) xor dec sbb sub ljmp mov mov out mov mov arpl sti aaa mov movsb out push dec (bad) xlat and hlt out inc push xchg jmp ret pop jecxz sti fsubrp iret jne dec out into loopne stos and cmpsb mov xlat cld scas sti out (bad) jb pop (bad) sbb call aaa jge xchg imulb in punpckhbw mov in sti jle mov and dec in lahf out test popa jb out add and push pushf out call jp pop mov out add out push pushf pusha mov loopne js out xor and adc std mov loop out (bad) out cmpsl fs push fisttpl out loopne xlat inc out pop mov cmpsb inc mov jmp aaa mov jnp mov mov mov roll dec cmp pop decb xchg adc inc mov mov inc push out pop sub out mov gs call cs mov out test mov dec inc cmpsl hlt fistpll aad mov sti add push out int3 jl popa xchg xchg inc (bad) out or mov mov xchg adc dec xchg cmpsb out addr16 cmp inc push mov xor mov push push out test adc or pop dec mov out jg ljmp lock pop insb sbb adc inc cmc push or out ljmp pop jnp arpl ja pop mov jno ljmp fidiv jecxz rolb push cmpsb mov inc jbe xor out jle mov stos pushf dec push add pop fs dec es inc bound out lock and jecxz sahf test insb cmpsb jg out xor popf or in sbb outsb cmp xchg loopne mov hlt and dec out test inc mov (bad) ljmp mov addr16 mul das pop push ljmp (bad) or ret loopne das mov jp imul jl sub lods push aaa (bad) hlt cmp mov dec ljmp cltd test outsl stos mov mov adc xchg in cld enter xor (bad) icebp pop out xchg inc clc xchg out push cmp out xchg test jnp icebp mov out mov cwtl jno (bad) out aas sbb test in ljmp xor enter pop jns out ret sbb fs xchg out movsl jo xchg push jbe push mov push sahf push sub rorb popf xchg mov ret out jbe or mov mov (bad) jne lds iret es in adc pop mov pushf pop rcrl nop out leave iret sbb popl ret fbld inc inc fs pop adc loopne mov mov out sbb shlb hlt push outsl push pop mov lods out mov insb lds out test outsl xorb and insl and addr16 jae sbb xchg (bad) shr mov out leave add push movsb (bad) push out lret sbb mov push cld adc lret xchg stos xlat divl jno test data16 pop imul out in lea xor xlat loop mov push pop xchg jae push out add xchg fnstenv xchg cmp rcl daa dec out and push jne dec icebp pushf or out das fnstcw push mov xchg adc mov xor cltd and sahf test or pop aad adc fs and or push add jp cli push mov cmp cmpsw sub cmp popf call lret notb in mov inc cld movsl adcl out cltd sbb xor xchg bound call andl imulb cmp mov cmp decb jecxz insl dec inc lret in rcrl or push imul jns scas lret arpl call jmp xchg lea push and out rorb ja pop jl mov inc outsl out cs imul mov es sub out dec (bad) mov (bad) stos das outsb push push out mov cmpsb (bad) mov push jp nop pop aam adc rcll xchg int inc sub and aam sub in enter pop cltd dec clc lahf pop fwait scas and dec hlt out cmpsb incl mov es jle dec pop and in out pop cmpsl out push sbb out pop repnz (bad) out pop mov fldln2 sub iret push movsb add sbb push out mov hlt lds out add xchg jmp shr scas outsl jb loope adc mov ljmp out xchg jge adcl jmp rol out mov fcoml fdivs dec cltd mov sbb call inc jbe push out loopne fdivp xchg sub mov xchg jmp cmp out sahf adc or enter rol inc mov loop das pop add lcall loope cs jmp jo imul cmp loop incb daa dec dec bound adc xor add push out dec lds xchg out mov or sub and rcll xlat xchg push in out arpl mov mov pop out jl xchg in mov pusha bound insl in (bad) mov or lahf nop pop jl call pop xchg add and inc insl dec or out repz cmp mov repnz es out imull (bad) test pusha (bad) mov xchg jle mov mov mov mov out jl mov lcall ds push (bad) out jae gs mov loopne fwait jg les (bad) jecxz cmpsb jno push push loop mov inc loopne in sub pop out lds lret xor adc mov mov insb sub clc das mov mov ja pop stos cmc inc out je imul add lret pop call dec inc pop cmp mov fbstp mov loop,pn insb xchg cs out sub (bad) leave hlt out mov pushf sbb xor lret aad out jmp or out mov aaa push int enter xor inc pusha out std or fcmovne sub push call cmc add adc mov out sarb xchg dec jnp js out pop lahf xor je cmpsl mov ficom orl xchg enter xlat scas cmp push add cmpsl loope adc xor test inc int and out mov and push lock data16 xchg (bad) lret and jae das sub mov mov adc test cmpsl jbe cmp pop fucomip (bad) mov lods sub mov daa cmp in addb inc mov fldenv mov iret xor clc inc mov jb incb add insb jo jp mov push aas stos out xchg add leave ds pop out or enter (bad) imul enter sbb push xchg decb cld jns pop and imul out ja imul mov mov jg xchg (bad) shrl in insb clc (bad) lods movsl out sub jl dec lret adc int3 pop xor aaa out (bad) stos mov jecxz es adcl shlb dec sub test xor das daa enter and or fucom push sahf pushf (bad) out sub lahf insb mov (bad) out and aas xorb inc mov ret shr cmc jl iret out sbb jns xor jecxz jg lds popf or jb ror ds daa xlat (bad) call xor cmova xor (bad) fwait sbb sub stc jmp add cmpsb jl nop or test out pop fnstsw xchg sarl ss es inc out call std sub out sar dec fmull and out xchg xchg inc dec push mov mov add fadd iret in int3 insl lahf jbe push mov inc out sub xlat pop dec out push jno scas sub andl mov pop out loope mov xchg out mov adc sahf stos out test and popf out es dec (bad) mov scas inc ret jl aaa jp out rorb (bad) out add imul movsl (bad) jo imulb cld pusha pushf lock adc outsb push ss (bad) std fist (bad) mov rcrl (bad) shll movsb insb fsubl (bad) jg leave outsb icebp mov adc cltd divl (bad) xchg mov inc mov outsl aas stos xor jne ficom loop das dec pop mov push out scas push pop jns mov bound mov push mov push (bad) jne out insb sub mov loopne xchg arpl ljmp sbb repnz outsb pop mov std fs xchg lcall cld addl rcr loope out sub and jp pop out pop pusha cs in out repnz add lahf or pop jns mov pop ret shll lret out sub aad push movsb xchg mov cmp dec and pop loope dec out jbe (bad) mov push push out mov sub hlt out inc jno push sbb cwtl mov mov out sahf bound scas loopne in ljmp sub out cs lret ret out xor mov sub pop lahf sub inc jns jbe bound push out loopne adc sub out arpl jo inc xor out scas (bad) and out (bad) imul subb cld push lahf pop adc and add pop mov (bad) cmp sbb jmp into fs dec xchg dec mov mov movq loop test ret xlat fadds adc lahf xchg out mov adc out cmpsb shl insl (bad) cld mov (bad) std (bad) into mov lahf out sahf arpl add sub test fildl ret push mov outsb call jbe ffreep movsb fcoms lock popa loop push sar sarb cwtl ret out pop dec push out push int shl daa lahf (bad) insb adc xor inc pop lock aam bound out (bad) mov sbb (bad) repnz jge insb dec fucomip mov stos jp dec sub call pop call fwait add in or and jg jmp adcl out lods bound cli cwtl shrl movsl sbb sub repz leave out mov (bad) mov out or loope dec or imull shr xchg leave push and bound not xchg enter dec out mov jg sbb lock out sti divl test nop out or adc out and mov out jmp (bad) jecxz sub dec iret in in inc pop adc lret out dec addl cmp test shrb mov add out mov or add cld shl aad (bad) sub outsb shl mov push adc out movsb imul mov leave push (bad) push lods inc (bad) sahf and in mov popa pop rclb adc pop or mov push lock xchg jb push jp or adc cli jno cs sub out jl jo sahf stos iret lea mov cli (bad) hlt scas call dec sarb push out jg pop roll bound mov jp iret push call shr sti imul ret sahf loopne inc xlat pop cmp sub in iret orl cld outsl test push bound xchg mov xlat js fs inc aam rclb scas xchg mov sbb jg leave out mov into sarb out pop scas fisttpl pop fadd fidivr pop ljmp mov out add mov push inc in loopne fmull fwait push outsb cmp lods inc movb xchg cmc pop lret inc xchg and nop vmptrst jg inc pop jmp popa lahf lock rcrl jecxz cmp pop movsb aas loop jno mov es mov add in dec fxtract cmp rclb out sub xchg mov pop out arpl nop add in push out jmp scas mov lcall mov out (bad) mov subb out and and cmp xchg add dec (bad) fstp out loopne rcll lahf nop pop and cmp xchg out push imul out pop fild out cmpb sbb mov lods repnz outsb xor jl ljmp out les pop lcall cmp sbb dec into inc loop sub pop (bad) loop push adc mov aaa gs pushf pop sbb out jecxz add into imulb je in out dec mov (bad) and std lret out rcl movsl arpl aaa jecxz insb sbb test cmp sub mov sub push out imul (bad) aam add sub scas out out mov movsb sub pop pop jge push cmp push or ds adc ljmp loopne leave lret (bad) in add xchg icebp das shll stos mov xchg pop shrb adc out outsb dec call insb out sbb mov xlat pop and xor stc ds out jne mov sarl cmp pop das mov dec repz xchg out loope cmp push add mov push ret sub test or jbe scas (bad) out (bad) sub mov adc pop xchg outsb and dec sarb out (bad) mov xor sbb xchg sub and mov cmc addr16 jmp xor pop icebp cmp stc mov pop push dec mov test sbb lods xchg push cmc fldz test shlb or dec (bad) xchg call out cs cli jg mov cltd out das jb pop or push out sbb add (bad) addr16 out cmp aaa sarl add enter inc cltd icebp and and add out inc call out out and push sub dec insl pop out lcall push add cltd in repnz mov pushf push out out in pop xlat mov out mov push sub loope ret das sahf movsl and fimul (bad) jmp mov fcomip out cmpsl jp push mov mov in pop ficom pop fldt add imul clc mov cmp ss test dec sub dec lea push xchg mov stos test cmp xchg (bad) aad imul pop jl dec or push pop push cmp mov jne ret sahf in xchg (bad) cmp out scas das (bad) je push ss or rorb mov sahf bound and and sub pop sub dec pop in test stos out ud2 push lahf lods out das push loopne sub jecxz loop push mov out inc jecxz stos xchg pop inc push (bad) adc out mov push lahf out enter in mov jbe out mov mov cmp inc repz pop lea ret iret xchg jge ja,pn out loope push mov out pop or and mov push in add cs out mov out sarl cmp push out xchg lret xlat cltd xor arpl (bad) cli fbld loop lds jno jmp std cli sub cmp out outsl popf dec jae and or xor insl shll mov into call adc les test scas push out add sbb out xor out xor cltd xchg stc inc out or ja (bad) sbb mov xor adc lret xor inc jns mov shrl out sbb out imul fcomp pop stc out ret adc pop out test mov inc loopne jl outsb sub out (bad) sti ja leave xlat cmc (bad) (bad) gs nop fwait lods or stos pushf and xor inc rclb mov pop pop pop in aad bound mov pop insl push aam sti mov mov dec imul (bad) mov inc (bad) sbb adcl xor or movsl fistpll ds ljmp pop popa push sub dec xor out dec ja mov imul mov mov cmp pop cmp cmpsl out incb dec mov int in insl mov nop mov inc (bad) (bad) imul outsb mov pop lds jae inc stc out add pusha sbb lock jle pop movsl fistp adc fist or les add or sbb nop out pop xchg xor mov ret sub mov std out pop in and fdivl jge push and das dec scas incb loopne (bad) (bad) ljmp iret mov or loopne sbb mov sti pusha cld das pop out lss xchg mov pop fcomi imul out leave jns jmp mov mov dec faddp cs pop call jae xchg das and mov push jle repnz push or xchg jnp test mov out insl pop decl in xor arpl fwait adc inc mov sub jp push jmp icebp aaa out sub ss inc pushf lcall fildll (bad) out mov out pop lret jbe mov jb pop push xchg cwtl jmp push movsb or push das mov (bad) mov adc cmpsb out or repz ja jp fwait dec mov pop pop cltd xchg (bad) and repnz outsl (bad) out mov insb pop mov cmc sub in pop sub out cltd inc (bad) cmpsb js xchg bound fs mov nop (bad) xlat std jge pop xchg mov in push aad push sbb out xor jp loopne je iret lock rcr mov gs mov push mov mov out test fldl2t jl jne rol ljmp out popf cli pop mov dec pushf daa outsb shr mov jp iret cld sti jl loop jnp test lahf mov (bad) out jmp pop mov jae adc xchg dec (bad) test inc call pop js mov xchg notb xchg hlt (bad) icebp dec out xlat push ja xchg push pop cmp mov mov in enter and inc out xchg fcoml jne jns lods insl in jb (bad) (bad) cmp ds jl add pop lret inc mov leave insl cwtl add xchg sbb fsts fsubrp lods or jge pushf cmc cmpsl (bad) fnstsw (bad) out lock rcl or outsb cltd mov pop pop sub xorl cwtl push push out push pusha ds mov jne sahf xchg stc ja out shlb sti lahf mov (bad) inc stos ret mov jo mov das imul dec jle xchg subps popa (bad) outsl in xchg sbbb mov cmpsb jge sbb xor pop outsl cmp push lea out pop imul (bad) adc jo cwtl movsb out push test jge imulb jbe iret ss outsb pop or inc notl mov out dec pop cld jle (bad) mov out jmp sub mov in mov into loopne mov xchg mov (bad) in sub out in mov movsb out xchg cmp adc imul lds sub push mov outsl out push mov jmp (bad) std and out push push mov ds lock and cmc pop mov es jno inc mov cmp jae add xchg int3 arpl mov xchg je gs mov sti xor adc out jnp cli jmp or cld out add (bad) mov cwtl xchg jle (bad) mov leave arpl or mov dec pop ljmp ja js xchg pushf push sbb fmull mov mov aas (bad) jg xchg mov sub pop in push in outsl jns (bad) sub jmp in stos adc cmp cmp (bad) mul lods iret daa mov push sub ret fs in int mov pop out cmc fwait mov aaa fldcw sbb imul push xor insb stos (bad) out data16 addr16 das mov les ljmp sub out cli jae fsubr outsl pusha adc out mov sti out rclb push push xlat test pop mov inc out push push fwait mov or insb mov and add fild in in sbb fidivrl xchg es iret mov adc push ljmp out jnp mov out inc (bad) (bad) ja xlat xchg and inc jmp out or les lcall repz and mov call mov mov fdivrs sub imul jmp cld mov (bad) repnz inc jge jno (bad) cld out loopne fwait ja mov jecxz lods pop cmp or outsl out push push sbb sbb lahf or (bad) push adc ljmp (bad) je fistl popa loope xchg out jg scas pop fist frndint imul adc sti loope mov iret cwtl push les jp iret pop bound int fidivr ss push or inc dec out add pop mov and mov mov (bad) pusha or out repz (bad) mov loope push mov push push out pusha pop pop loopne fucomip dec xchg bound mov mov mov jp ret out pop pusha loop mov out sbb mov out cmpl xor ljmp out mov push pop (bad) mov out push sar pop stos xchg push out add mov addr16 popa or jle xchg jns xchg lods mul out rorl insb out nop pop (bad) in inc mov movsl out clc fnop daa inc sbb rorb inc pusha mov dec cld push jno sub pop push lea cmpsl mov aad outsl push cmp push fcoms jo (bad) out dec push sbb insl sub and insb cwtl out jo jbe push je mov mov movsb add js in mov fiadd jecxz in (bad) std pushf (bad) dec cmc xchg lock out fs push sub xor out adc mov insl out (bad) jno pop add sbb out mov in jg mov lahf out into fcoml pop and push arpl repz comiss out or cmpsl fwait inc xchg xchg ljmp or cltd add std clc mov sti push lea or lret ljmp xchg adc pop pop pop xchg pop addr16 jbe sub xor or out and loopne jp aad inc mov out dec loop push sub fildll (bad) push je adc out out pop test (bad) mov push shr push enter adc out lds pusha out mov jb lahf out test mov pop sub insl cmpsl ret adc adc test loopne mov aaa xor fsubr jecxz movb leave in mov xchg jge (bad) sbbb sub idiv dec loopne xchg or mov loop (bad) (bad) out sbb iret lods push (bad) call fcompl test call push ror xlat sbb mov push out sub mov scas xchg xor stc decb dec or xor lods jno (bad) insl add or mov dec out pusha icebp mov and add jne dec out push imul inc aas out sbb mov (bad) mov xor iret lods mov adc movsb inc out leave enter arpl in push out push jbe mov test and push mov scas sbb or divb inc adcl (bad) rcr push mov mov out clc repnz (bad) xor dec sarb rcll or or movsb stc add decl out inc sti push cltd mov xor mov cmpl addr16 or aas in or pop or divb pop popf jmp scas not dec push rol shr test or int3 outsl out mov add ljmp sub xor into cli mov icebp lret imul mov push (bad) ficoml inc sbbb jns std add jno or loopne (bad) leave lahf fst out mov inc inc pop cli cmp inc mov xor xor iret adc les into mov je stos out adc imul mov out movsb sub iret je ds mov xor jl adc push in jmp mov pusha xchg xchg fisttp mov push call imul outsb out lock sbb inc mov (bad) cltd dec jns sti cs jmp jnp cmp add out fistp cs push sub xchg (bad) sub iret lcall add inc gs pop fcmovu nop push jne cmpsl and pop popf pop ja dec push in out outsl mov data16 fcomip or (bad) push fisttpl out jb dec mov (bad) mov cs push ss aas xchg pop addb ret gs push push sbb out xchg jl inc popa imul pop push pop inc (bad) rclb mov popf pmaxsw inc cmpsl out dec adcl xchg (bad) xor xchg je dec or cli lock lock out mov and dec out pop outsl mov pushf add mov repnz call push cmp lahf jmp push out sbb dec insb out bound out decb out cmc loope bound daa pop add repz sahf out popf (bad) ret mov les add shrl jbe mov cmp push sahf cwtl sbb xchg push gs push vmovupd or pop out pop stc mov out mov mov mov in enter out les push out xchg mov lret lea cmc jae sbb out ja outsl in sub or xchg out lock mov sub sub jmp or mov (bad) cmp (bad) push cltd add xchg mov (bad) lret test mov push mov fucomi pop dec fs aad pop mov pop push enter fisttp pop mov xor out jb stos (bad) sarl sbb out xor jecxz js fdivr adc repnz pop hlt js insl mov ss mov xlat repz call sbb push movsb pop out mov scas lahf sub and outsb xor imul mov add data16 sbb push sbb scas ss popf insb cmc clc sbb mov rcr (bad) xor loopne cmp sarl orl mov push fwait push loope lea std pop scas add jbe out (bad) or cmp pop cld jg fxch in pop clc dec das scas mov jmp inc hlt sub stos cmovns test lock ljmp data16 jmp fnstcw out jnp mov xchg mov jl mov ret and out pop lahf mov es cltd fstpl add out dec lock mov es cmp dec jne out int3 inc or je sub repz mov xor adc iret pop add (bad) test xchg ss pop rorb xchg adc mov lcall (bad) mov mov std inc fisubl mov mov imul cltd pop stos lcall ret enter xchg inc mov xchg ud1 (bad) in mov cmp jbe push inc xor xchg (bad) mov ljmp lds mov sarl idivl ret mov in xor je (bad) sar out leave mov fsubrs ljmp jb (bad) out cs push loopne xchg out hlt and enter jae insb cld adc fcompl mov jmp or out lds out xchg fiadd test mov push mov call out in cmp sbb inc (bad) lock add in dec orl push movsb (bad) and ret cli test fistp mov outsb movsl nop or xchg xor leave mov cltd ret and mov mov ds jge or mov pop jmp enter aaa cmp inc shl lret out cld int3 or lea sbb sub pop cmc test jb arpl xchg push movsb (bad) out ljmp shrb mov xor (bad) jmp loope pmaxsw mov std out adc jecxz lcall (bad) vunpckhps movb dec lods out dec mov mov in sbb scas nop mov stc out fsubrs mov pop inc or mov fisttpl jg adc imul out in or pop int3 sti lods push dec loopne mov and (bad) (bad) stos rcl mov ss xor add push or (bad) jmp xchg out dec push xchg mov test repz in ret pop pop mov cmp jge popa jns in adc xor jne adc mov sahf fmull jg inc nop in sahf insb lds out lods mov cwtl xchg je in (bad) pop lods stos lods iret sub fcoml in mov aaa mov int and movsl sbb mov mov xchg inc div jmp cmovne push or adc adc inc xchg dec fcomp push out xor dec cvttps2pi data16 int3 push xor out or jne jbe mov cmp mov cs mov push adc (bad) dec push push out repz aas hlt dec pop repnz rorb in std out sub rcrb out cmp cmc imul out aad adc jnp (bad) pop ss (bad) mov in in jecxz sbb push mov hlt mov dec inc ss pop cmp int cwtl add push out mov insl and sub std imul or test out jge cld sub (bad) nop mov and je movsb loope enter call dec inc and add decb out enter or push addb xchg imul sti push out lret es outsl jmp gs call stos iret int lret leave cmp popa jg mov mov jmp test cmc out jp xor mov mov lret shll mov aad lret fcoml and mov cld or jb pop mov xchg lock xchg or out testb dec pop adc push es and xor lods cmpsl stos push nop insl stc out dec inc ret mov scas shrb shlb cmp out std cmc mov nop and adc in push mov iret bound loop adc push (bad) out sbb sbb in cli fist inc add call pop cltd loopne data16 push and sub mov dec push out xor and xchg subl cmp cmp mov aad and adcl sarb imul mov xchg loop adc jns sub int shl out out xchg mov iret test or out cmp push jns pop jg adc or inc aas jo xor inc xor inc (bad) xlat sub fstp xchg adc mov mov cld pushf lret out pop (bad) loopne fdivr pop cmpsb and jecxz pushf xchg pushf mov jbe xlat cmp js mov out or in jno shr jge jnp aas jb hlt shrl and ljmp outsb xchg lock in cwtl sti fs fsubrs pop sub daa test mov out sub xchg js xor push sub aam test cld enter out lock fidivr or cs and xchg out mov fcmovnb shr jnp mov mov cmp mov out es fiadd pop lcall sbb out push aad mov pushf pop lea (bad) jno lahf imul (bad) jb pushf ljmp out xlat adc add out push ljmp xchg dec xchg or out cmp outsl mov (bad) incb sarl aas in lods jb add dec sbb out jmp cmp loope pop ja pushf repnz ds ljmp ret add and push mov outsl out add or lret jle pop out scas push lahf cmp popa sub out adcb push imul arpl xchg call mov out fistl cmp in dec pop push push (bad) xlat mov inc push mov loope clc out mov push sub loope mov (bad) out out adc scas jae fild jnp and shl dec test ficomp aad push xorl psrld stos mov (bad) out (bad) loopne addr16 inc sub jne mov add ljmp out jp notb loop,pt repz repnz push ljmp sbb neg mov fwait popa js loopne sub fs adc mov jnp (bad) out jge mov arpl decl out fcomip cmovg sbb rcll or ret pop xor xor ret push mov pop push lods pop out enter outsb mov or fiadd xor pop pop (bad) pop lods cmpsl rcr mov jle stos mov mov dec lahf out repnz sub push out mov movsb out push pop incb popa sub push out ljmp dec jg pop xor loope cmpsb in out sub adc jecxz push out inc mov inc push aas iret js icebp enter test cli xchg in es sub or jo pop mov imul fdivrl in inc out pop mov dec out insb mov scas rcr js push call out mov in lea pop insl cmpsb (bad) (bad) cltd jmp (bad) adc push pop or out xor insl fs dec pushf add and mov adc sub ficompl jecxz out cwtl inc out mov es adc push call lahf cmpsl jg jbe insl xchg adc into add jge lods pop lahf xchg mov out fbld in loope out test dec sbb out cwtl ja movsb cltd (bad) cs iret jno and push or out lret push pop cmp mov into repnz cwtl add arpl adc insb movsl add ljmp out mov aam jb jns pop fsubs adc (bad) imul out pop es pop sbb hlt push push fadd sbb mov adc (bad) out and jne mov mulb ljmp out pusha fsubrs pop in loopne mov inc push das test jmp add ljmp das xchg mov (bad) ja pop loop lea test pop int3 sti push xchg (bad) out fstpl pushf sbb cmc jnp loope and adc out xchg jle sbb out dec adc aaa cmp xchg mov mov data16 scas ljmp mov inc cmp jmp es imul sub xchg out (bad) jo sub inc (bad) push out aad mov sbb incb jecxz js lret mov fidivrl jp xlat pop xchg mov lcall mov add push cwtl (bad) lock out cmp bound fcom sub pause cmc (bad) sbb xor pop or test popf outsl out mov mov out xchg and pop mov sbb in push imulb pop (bad) xor in add and (bad) in xchg mov cmpl pop xchg xor mov imulb xchg xchg fnop push dec aaa repz call sbb out shlb add mov fcompp sbb jo enter adc cs inc out sbb fist push jo pop push mov movsl pop hlt nop xor data16 (bad) mov out and div out ror jmp loop inc push shrb adc jecxz xor out dec pcmpeqw ret out movb cli not cltd out sub mov outsb ficoml cltd movb sbb stos repz pop mov test ret scas adc mov out jl pop iret faddp (bad) and out shll jg pop out inc mov xchg loope mov cmc push dec out jnp add lcall xchg in out xchg xrstors sub cltd daa add cld aas dec mov cmp (bad) adc scas jae jg sbb mov cmp add pop pusha pop cmp in xor out out aam xchg sbb adc jle gs sbb xchg dec (bad) aas out adc lock out add mov pop loope fstpl sbb jp push outsb inc bound adcl mov cwtl dec or stos add mov imul loope dec insl (bad) out gs jbe mov push inc or in dec loop out mov mov cld (bad) imulb out scas xchg add pop data16 in mov inc adc (bad) pop xchg inc cltd aaa and mov aad inc dec out outsl lods push popa push pop scas xlat ret out aam into xchg outsl pop mov jmp push xchg shrb out loope cli mov das mov mov ljmp lahf mov xchg out insb lret pushf or out inc xchg xchg adc add inc je fisubrl jne dec xchg das sbb jmp bound mov mov push jmp jnp xchg jb jne lods jae out mov mov mov daa sbb cwtl cmp repnz xchg (bad) insb out cmp in out bound cmp lret adc mov (bad) fsubp inc outsb sub iret daa stc psrad call in and inc pop addr16 and pop push fisubrl pop fildll movsl nop ljmp xor sahf es (bad) loop sub stos shll or xchg pop (bad) jb (bad) pop icebp test in jmp mov (bad) fcmovbe daa into dec xchg mov clc fsubp jo jecxz sub adc mov pop xor repz mull in xchg inc in jle jmp mov lret adcl push out sbb mov fs dec xchg fist xchg (bad) ljmp push or sbb inc std lret jmp js or (bad) fistl sahf pop xor sub leave out sub out jae ja out roll fist cmpsb dec rcr call and jo shrb repz mov out cmp mov lods dec mov push out adc mov or in out lret scas mov lods ficoml fild adc aaa loop mov jb sbb xlat rol cld ljmp and in lods popa jle sub sbb cmp test cmp roll nop pop out cmp jle ss mov inc pop and xor clc cmp outsb fnop pop cmp fucom mov in lock fcmovne jle nop xchg push punpckhbw xchg imul sbb inc mov mov mov stos mov lods rcrl inc pusha outsl outsb mov insb dec or insl in or jmp sbb popf call (bad) ss arpl xchg or adc jo out test pushf push repnz xor pop mov call (bad) xchg imul popf shr popa cmp imul jbe pushf push rorl std iret loop pop mov in jle sti imul aam flds xchg push (bad) push lods bound jmp push out loope ret out mov sbb insb iret clc or pop notb mov xchg xchg (bad) mov sub (bad) bound push popf icebp out add scas lods mov ljmp pop imul (bad) out add out pop in es loop and and push sub jg (bad) rcl push mov jmp out andl (bad) loopne in js insl or imul mov lcall xor out in push aaa mov call jo (bad) xor arpl mov rorb push out jb test sbb mov out enter pop rep (bad) xchg loop pop hlt ret pop data16 bound xchg shlb jecxz sub icebp popa fildll pop out inc pop add lea cltd dec out test mov push inc iret lods cmp mov fldl2t mov das jg out push stc out stos push and or aam mov ret push out lea fwait popa fild test shll aam test push loope data16 outsl stos ret outsb cmp fisttp push xchg out jae mov pop out das jb cmp push loopne ret inc popf sbb mov fs out push lret faddl test add ss jp sbb bound stos xlat push iret sub jg (bad) cli out inc sbb cwtl (bad) dec jne ja sub test jo out sahf adc xor sbb add aam out rsqrtps push jle and out loope jge (bad) fst cmpsl jb or cmpsb out jl and out mov xor leave pop mov push test push cmp pop inc jns ss loop aam test xor or out jecxz loopne scas cmp int push es stc das out dec xchg inc outsb lret push fucomip aaa cmpsl cmp inc aas mov bound out fisubl mov mov cmp pop rcll adc scas insb out in push lods adc xor pxor dec fldcw lret sub mov outsb mov loop pusha lods inc dec shl xlat enter push xor sbb xor or gs into push mov fstl hlt lret out mov lea out or data16 cmp rcll add dec out ljmp dec mov enter out pop xchg or mov jmp jae push repz dec cmp in sahf das xlat sub jmp add aam cmp call push out and fsubl iret adc leave jge xchg cmpsb mov out flds mov pop ljmp movsl scas ret xchg push stos jbe hlt (bad) out jg add outsb out inc push bound out fistp adc cmc cwtl es clc repnz loopne sub (bad) mov jecxz rorl mov dec mov rclb mov or mov mov pop and adc jns out jecxz out dec ljmp mov and add adc mov sub std bswap adc xchg jne repz or add pop fwait mov cmpsl pop mov insl mov add inc arpl out (bad) repnz out xor dec dec jmp out insl pop push push movl adc (bad) lcall and sbb jmp pop cwtl xlat (bad) xchg lret std test mov idiv sahf popf cmpb adc je add pop pop fucomip cwtl cmp lods imul or in dec add lahf dec outsl inc pop sbb je pushf xchg vmovaps cwtl pop pop mov sbbl push out add (bad) stos rclb pop dec inc mov cmpsb shrb out adc imul repz rorl mov loop and push call mov out mov cmp loopne push xor aaa ss (bad) inc orb pmullw jl outsl and and sbb or out ljmp pop out cmp adc ret ja adc scas fsubr (bad) jne out test int3 cmpsb cmp adc xchg fist sti pop fcmovnb or ljmp out clc test add sti mov or push push xor pop sbb aad pushf lock cmpsb xchg inc push or add cmpsl pop and rorl int lret pushf out ja dec loope cmp mov shr movsb gs cmp jb out jbe pop xchg ret mov imulb sub out leave xchg sbb pop dec hlt out pop push pop cmpl ja les inc sbb adc out daa inc mov mov stos in lea cmp test mov movsb addps clc push add mov adc out pusha dec and iret imul pop (bad) dec mov or test shlb in out decb cltd out mov cmpsl (bad) cmp push imul out adc jl adc push repz pop fsubrs jmp jb (bad) loopne in mov or or lahf lret ljmp cs xchg out or sahf popa insl out pusha sbb lds mov mov test lock lods push pop (bad) jecxz pop fbld out js add imul (bad) stc cltd mov pop int xor in out inc mov (bad) jo (bad) in xlat mov push inc jne pop add pop out lock dec in xor sbb scas in or data16 out pop in cltd xor lret xchg (bad) xor nop inc in or push out fs mov int test fildll gs jmp dec pop in lods (bad) jmp mov jo xchg stos fidiv sub jnp cmp cmp test and and lret insb jmp adc add (bad) aad ret pusha lcall rcr sti mov (bad) or cltd mov xor addr16 or jae (bad) clc dec mov loopne sbb adc das icebp push pushf out in cmpsb arpl sub popa mov or mov push out mov inc sub pusha imul ret dec push out push cmp or repz and in pop adc lods outsl imul jo bnd out mov std dec pop (bad) mov cmc movsb jnp,pn (bad) push iret mov sub imul mov adc ljmp leave testb je xor movsb ljmp sbb (bad) cmp setge cs lock or cmpsb aas xor sbb lock jl popa and mov and popf mov out dec aaa push lock mov arpl sub (bad) jns push push mov iret add jae out sub je ljmp andl stos xchg (bad) xor out mov out mov xor ljmp dec xchg mov push lcall xchg out in sbbl in push push je or fwait pop in sbb cmp das cmpsb add pop jp and mov mov out push mov or lcall jp out xchg mov call fbld dec mov out mov mov out je dec jns adc pop pop mov daa arpl or sti xor push les add mov out enter inc shlb out iret xor dec xchg xor shr scas leave xchg and xchg (bad) xchg add out mov dec cli mov jg or out cmp pop out jns sbb lret fisubr lock iret sti cmpsl repz sbb pop icebp fisttp pop ljmp outsl jbe mov lahf dec or daa mov push test rcrl push or sub call sahf xchg leave rclb lea loopne push push sahf sbb out adc pop sub out mov jb pushf insb xchg daa (bad) scas pop pop jle shl subl loopne pop popa cmc (bad) arpl cmpsl inc fdivp mov in and lods pop sbb mov daa (bad) mov popf aas les push in adc mov dec sbb jb cmpsb cmp out es fsubrl jg push mov fsts subb pop and fsubl sub movsb iret in inc outsl xchg loop push aas lahf out ljmp stc jnp lods xchg sub inc shrb movsb mov mov fisttp out cltd inc loope cli dec imul xor lds xchg xor cli cwtl sub mov or inc stos cmpsb repnz ficoml add jle jge or lea movsl pmaxsw xor inc add mov and popa fistl dec int ret cmc or lock xor adc loop inc xchg (bad) movsb mov dec stos mov sahf dec cmpsl out sbb stc out ds insb arpl (bad) mov clc sub fs sbb and sbb out adc jbe jg mov test inc jmp out sti movsb arpl fs sbb roll sahf cmp (bad) out lods adc adc dec hlt jno call icebp es xchg push jo inc pop cmpsb pop bound cmp nop mov repz mov inc push orb repnz adc or test or fsubrs jg aaa (bad) loop jbe loopne inc adc xchg movsb out or push add lahf out inc xchg scas pop rcrb fwait out sub sbbl idivb cltd pop (bad) mov out imul in and xchg out pop xor loope push es adc sub sub into mov pop mov call (bad) and xchg jge jmp out imul mov sbb stos inc xchg jne data16 out es aam fstl sbb pop xchg ss xor (bad) pop push inc cmp cmp add int3 xchg pop mov shlb cmp mov (bad) out mov xor pop iret daa lods sbb sub sbb or outsl push cmc mov cmc cltd pop mov sbb out sub jle pop jmp vpmulhw out ret lods mov cmp out bound push sbb adc pusha xor pop jecxz movsl cmp adc xor out fwait mov enter inc push out nop (bad) shrl sbb mov sub sub adc add mov fcompl xchg adc mov mov add clc out jne (bad) leave les xor cmp jl fst out enter testb out pop mov cltd movsl jmp push push or out repz add out push ret pop mov out cmp popa xor into push dec sahf imul out ja jge repz mov out movb mov or lods xchg xor or jmp push dec cmp movsb std xor jge in pop mov lret sarb daa out sbb or pop pop (bad) ficom jb std ljmp movsb sub mov call jl xchg add push fucomip out mov add or adc jne mov out pop in inc sub (bad) imul call loopne pop outsl xor cld mov xchg es out mov inc sahf test (bad) and lods jno shll mov out cmpsb outsl rolb pop ja and in hlt or ret lret pop out sub push pop pop cmpsb pop mov std cmp aas cs dec push cmp out xchg or sub xchg mov pop or mov push into sahf out push mov inc push out in fistpl push mov sbb xor inc mov push dec and fucomp or nop jecxz daa leave int sarb ljmp (bad) imul sbb out out inc popf mov cld out sbb jns mov lock push or sbb cmp add in push aam das adc pusha out aaa fldt push dec mov (bad) out sbb push out pop movsl and out sbb sub stos mov inc jns add mov in in and sub jbe out pop or or out into lahf jl sbbb sbb sahf out (bad) xchg sub mov xchg out push or stos insb jbe xchg test mov jae push push push inc int3 mov push bnd inc bound jns dec xchg mov jne mov in cmp and mov pop std cltd out fdiv push or ftst (bad) jo outsb push jbe arpl or leave and push inc int3 pop call data16 out add bound mov adc sbb data16 insl lods jge (bad) push cmc test inc popf pop mov xor jns test push scas les out or rcrl sbb xchg adc (bad) jae test dec push mov out sub jnp in xchg test cli pop out push add pop fldcw (bad) ficoml jg jmp mov jne rorb (bad) lret jge push mov jmp jns daa fcompl mov xchg ja in mov std out ds pop add xchg xchg repnz ret and jb sbb movsl roll rcrl test jp out fnstsw pop addr16 pop adc adc out adc adc cmp mov aad insl fldenv out push test sub jmp popa int3 lock sub dec ret push out sub push (bad) xor xchg daa lds cltd push xchg in or xchg push shll loop lcall dec push or dec push aas add xchg loopne test mov call pop out sub stos outsl xchg repz mov or pop jl daa xchg dec and leave mov jle mov cmc fwait sub xchg aam sbb ljmp push or fwait lahf out cmp xor enter dec into test sarb insb pop push stos sub adc out aam xor enter push dec stc dec sbb pop int sbb and dec mov or cwtl pop lods in mov int (bad) mov mov dec lea fisttpll add cld xchg out and dec xor mov arpl call sub sub dec xchg aas (bad) insb loop sbb out (bad) repnz test lret scas mov mov adc movsb aaa xchg cmp out out push movsl je push mull add fsubrs cmp out sti mov in or lods xchg pop es out pop sbb pop inc jecxz push adc out inc or out out das (bad) mov (bad) out (bad) fwait decb cmpsb data16 or repnz lret dec out push fwait test into out test mov orl dec rcl pop sbb mov inc test mov into cmp ds pop mov lcall jg (bad) in bound push xlat mov adc pop mov icebp or loop js rorb out fcmovne shlb pusha test shr pushf fchs or cmc out xor add dec icebp out xchg mov adc push insl stc loop push stos jmp ljmp test movsl sub inc imulb xchg sub fistp cvtps2pi xchg jg ljmpw stc xor das cwtl es or out jp shrl lds out insb ja inc in out mov out add mov scas in daa (bad) (bad) dec mov mov adc test sbb pop stc xchg sbb in or imul setle mov mov out dec outsb loop dec inc mov mov (bad) addr16 sbb add call (bad) lods arpl cmpsl push idivb je out and not int out lods push jbe dec sarl lods jge (bad) xor scas popa out mov ret pop loope mov mov mov mov add insb cli in out movsl lock push jne ds iret aad sarl fs push nop sub ljmp cld and mov out ds inc mov out out or dec scas repz data16 (bad) (bad) lock rcll xchg iret stos and insl es and es roll push test shrl push pop sbb in adc adc pusha in mov divl sarb or hlt out icebp shr rcll (bad) or (bad) jno and call test enter (bad) out icebp insl mov in out jg add inc aas add out pushf or jae cwtl cmp cs and sub ja out cmp mov xor mov outsl lret mov add scas das push (bad) out ljmp imul clc jmp les mov mov jg dec jge sub inc shrl fs rclb js sbb push pusha add inc adc pop out insl xor jb fisttp adc (bad) sub jg cmpsb arpl jne out pop fcompl adc in out in mov push movsl (bad) repz ror mov arpl out xchg mov shrb in cmp in push fcmove leave in out fistp pop xchg push (bad) push test adcl (bad) stc ret out outsl xchg cmpsl out mov and fnsetpm(287 xchg repz out fwait push cmp (bad) adc loope pop sbb ljmp jns std and or pop push movsl mov int3 out mov sti sbb imul xor jg or scas fwait or cwtl sbb and mov adc or sbb aas sub in in arpl roll push mov ljmp and ret sub pop fdivr add inc sbb sub sub mov out popf xchg mov adc sahf xor sbb or ljmp mov cmc sti cs (bad) jnp lods adc lret data16 pop mov sub jp icebp mov ljmp lahf dec xchg jg out pushf jae (bad) shr sub and jno mov pop in (bad) jl xchg arpl dec les aaa out cmp push lcall clc and out push dec or add mov inc mov cs push addl lock je mov jno dec scas ss adc or sbb sahf daa xor push out iret add out push bnd out or push cli push rorl out sbb nop (bad) pop (bad) xchg loop xchg cwtl pop out mov or enter je push les pop test adc push out int cmpsb push pop repz mov sub jb out fcmovu in sub (bad) lret xchg lea sub pop inc popf stos sbb and pop jecxz scas xor insl pop sahf imul and xchg lock out adc fs sbb out sbb add and dec in (bad) loopne (bad) push out popa or popf ficompl sub out adc jae mov adc stos mov std or sbb sub pop sbb mov lret add pusha inc mov add sub (bad) cli adc cwtl addr16 outsl adc mov mov stc mov push (bad) jbe out ror adc xor mov mov das in aaa fdivrl scas in inc pop mov mov leave push fstps ret sbb cmp icebp pop enter push in scas out movsb mov out xchg int arpl xor fs out decb out rcrb ret mov push lret in das push sub sbb adc (bad) icebp push in sbb mov ja mov inc and movsl out out fcompl popa and (bad) out stc rolb sub je (bad) stos lret cli popa and rdtsc mov out insb adc push out sti addr16 (bad) mov das outsl push cwtl add inc ret fdecstp push sub js mov clc lods das out jnp mov dec out cmpsl xchg dec push mov out pop (bad) aam jbe inc sub add jae sti jo fucomp push cs jno and sub cmc int3 in sub jo jl pop scas loopne xchg dec in popa into adc nop test mov mov fucomp out xor sahf push test stos iret jb aam call jecxz pop add outsb into incb stos scas adc or nop lret out imul pop data16 jbe out iret das push sbb pop adc mov push sahf cmpsb pop scas popa out sbb mov sub jnp mov clc cltd out push push sti scas fsubr push mov mov (bad) push pop movsb jge stos push (bad) das mov insb fdiv ljmp (bad) repnz sbb (bad) test lods arpl xlat out jp fisubr in xchg popa outsb hlt out (bad) sarl cmc dec je push jge,pn scas mov lahf out in (bad) dec aas mov into out icebp xlat fimull inc ljmp sub or mov repnz insl out xchg (bad) in inc add out or bswap subb adc cmp lods out mov xlat test out mov test jl push outsl std cld lret das xchg in cmp pop shr test lahf mov out push aaa pop sti lret es out xor cmp ret jbe out (bad) mov jecxz and aas out pop push dec sbb fisub jb stos pop insl pop out lods sub mov lock mov outsl insb xchg movd test and ljmp (bad) sub xchg xor pop imul je out pop xlat aad jp insl jmp adc in cmpsb shll xchg push out lret xchg mov test movsb jae (bad) cli (bad) sub jne in mov cwtl out mov inc loope out aam and js cmp (bad) out fimul sbb (bad) push imul xchg fucomp xor mov (bad) adc adc out and lods dec stos cmpxchg es jnp in imul lods out pop and push out xchg sahf es out inc movsl xchg imul jecxz bound mov mov out xchg xchg adc push mov fbld sub lock out mov jo ss cmc mov aad out mov js out jg bound jbe mov out aad mov jmp push rcrl in lahf outsb test out cmpsl xor jns test sbb adc rorl stc in insl cmpsl cmp pop loop cmp push addr16 out xchg and out (bad) cmp out adc fisubr adc (bad) xchg sub repnz pop loope sub (bad) (bad) aaa out shll cltd pusha in imul inc out lahf stos sub push fneni(8087 fsubrl jg pop and pop fdivs ss (bad) xor sbb jmp push jnp and mov inc pop fldcw (bad) cltd hlt lcall mov push pop es pop iret cmp (bad) (bad) cmp out insl jno stos mov sub adc in xchg movsb lods jmp push add push (bad) sbb and or push xchg jmp or in aas jnp das push pop cmp add sub push out push pop sbb jae daa shl sub arpl xchg adc jg xor rorb test pop pop loop jbe sub ficomp push aad dec pop cmpsb (bad) daa sarl xchg out clc sbb inc gs hlt dec out pop (bad) and sbb mov test dec mov sbb fisttp ljmp out dec imul ljmp jmp ret loopne lods das ja pop add sub (bad) (bad) cmp mov je cmpsb scas out mov or jno iret out add xorl push (bad) rcll out lcall pop out and (bad) fldz es mov scas nop mov repnz int3 or push mov test xchg scas lock hlt sub mov into or out add or imull push mov xchg and out fadd jno cmp mov inc or push cmp aad leave scas (bad) pop xchg or fiaddl pusha rol dec jbe sysret test loop or adc or mov pop dec stos and aam outsl gs xor pop fbld lods clc or mov mov ljmp and enter pop pop pop fistpll fucomp cmp dec int3 push inc call lcall cmp aad jae pop pop (bad) push roll ss sub lods mov inc test imul pop shrl cmp out loop fs sahf in fldt (bad) xchg mov fidivr xchg push pop cmp call je pop imul jae sub jmp adc out out jecxz out sbb imul xchg push cwtl mov (bad) cli adc imul outsb sbb (bad) mov jecxz out addl fstpl hlt mov callw ljmp xchg sbbl bound jb in out jecxz pushfw pop dec jo lahf push and xchg jmp rcl mov inc out cmp dec mov xor jle jno hlt decb scas mov push std shrb out loope push jl (bad) jg ljmp xchg ss mov add (bad) in xchg or out xlat sub bound fistp pop loopne out mov mov cmp pop out out aam fsubl inc cmp inc movaps cs movsl enter or inc das bound push or inc nop (bad) out and dec mov int3 fs adc pop jb inc (bad) pop addl call sub je in mov adc jecxz leave out out jg xlat lcall out shrl inc ret shr ds mov out cltd pop inc mov dec aad xchg incb push out mov adc xor xchg cmp and das push ljmp sub sub xchg mov pushf adc xchg dec outsl out sbb pop loopne (bad) out popa xchg xchg in push aas pop mov lods popf jmp sub and loopne sbb jnp loop (bad) aam insl hlt fnstenv scas icebp push xchg dec dec push xor push leave out cmpsb in rorl enter insl xor push call stos pop outsl out xchg mov out shlb and jb sbb xor stc lea out daa cmpsl push imul adcl pop addr16 sbb push stos in sub xor insl push repnz and push pop jb loop ret xor das lcall push fldt jmp dec loop in xlat stos loop lock out push adc loopne push aad iret shll jb movsb inc cmpsl ds cs lea pop push in je data16 loope int inc dec xchg xchg (bad) cmp call test js scas dec and insb pop out scas bound cmp cli es xchg fcomps mov or push mov inc push mov mov mov cs push in outsl lds sub fwait out mov rolb fs sar push jl repnz mov out and cmp out fstpl in out cmp roll jo sub fistp lea out jb nop out loopne shll inc out push mov mov xchg (bad) jb jmp out gs loop into inc out mov rcr mov jmp lods aam push push sub lret imul mov add and mov pushf jl aam cs stc out (bad) jge ror dec in inc popf out clc add lods jle popa out sahf adc gs inc cmpsl push cmp movsb fiaddl pop loop movsl jp cld lds xchg std push and daa ljmp xor in cmp and loopne aad popf test mov sub lcall xchg push gs dec stos sbb mov lock cwtl lods (bad) bnd mov push adc out jbe dec xchg mov in push adc mov lahf cmp inc out in dec sub insb js push sub fsubrl mov pop xchg (bad) out call add data16 out or sub out rcrl lods xchg test in fcomp push mov add leave out dec std mov add push je out call xor popa js clc fadd and out in push enter mov scas pop and push jmp jl cmp lods out call xchg (bad) rorl push inc ret popf lahf push push push jmp jmp lea fcomi nop cmp push into pop jo cmp (bad) outsb fsubrp pop jg xor daa aad lcall sbb mov out (bad) mov xchg jecxz inc jmp adc pop cwtl scas (bad) sub shr rcrl mov (bad) fisub sub mov js mov pop cltd jmp rcrb lock out ficomp push paddsb addr16 push mov loop cmp out (bad) call gs inc cs mov jns out dec shr movsb imul mov hlt stc outsb push out push mov lcall aam lock or pusha sub or adc mov out fisub fadd and mov sub sbb fsubs mov jg ja xor test arpl out das xchg in sub jae out loop repnz push ljmp pop xlat jmp pop (bad) and not and in lahf out stos push push repz jo lds es mov movsb pushf xor mov jbe cmpsl dec mov fsubrp mov scas xchg movsb (bad) stos popa cltd inc inc mov in adc out fisubrl jne sbb popa insl mov imul out xor outsl dec jle in (bad) ljmp xor add call scas fbld xchg stos push jns or (bad) jnp pop outsb popf insb cmp or jno ja scas loopne repnz sbb lcall and or dec mov cmp dec enter mov pop push out mov out add (bad) imul cmpsl or dec in out je scas xlat and jmp and sar inc out daa and jnp out loope (bad) enter xchg xor test scas or insl pop (bad) popa dec (bad) imul push mov es out sub mov out dec mov lea sahf stos dec cmpsl adc out inc aas test add lret xchg out pushf push mov cmpsl rcrb gs fcomps mov mov jle iret call xlat in inc cmpsl pop sub pop shrl aas addr16 out adc out push jecxz push sub outsl sbb sahf xchg in iret popa pushf imul test fimull ret loopne mov inc shrb in jl out mov add movsl push sub cmpsl jp pop (bad) (bad) mov das and in jo out shr sub int sahf and fiadd push xcrypt-cbc cmpsl push shll sub jns mov lahf addr16 pusha outsl cmpsb hlt mov (bad) pop popf movsl mov loop mov xchg xorl aaa shll push and popf push mov pop fstpl aas (bad) test cmp jg stos pusha into data16 out lds jge out mov (bad) lock out loopne push jg rcll pusha push in cwtl in out out xchg jo and aaa out iret (bad) popf sub out js inc bound insl or scas pop movsb ljmp iret mov xchg lods mov loopne out pop mov sbb mov push sub pop ror or xchg pop ljmp and sub xchg loope or or loop scas aam mov out xor mov mov and mulps xchg mov mov jbe jo andl out jge mov data16 inc fcom fstpl clc or dec push out aas movsl shll dec pop sti fdivs pop add sub test hlt aas out loopne aad rcr imul lods lahf jo mov jg aas jge dec xchg out in mov les sbb out push sbb sbbl xor push jno enter out push mov ret jmp ljmp in cmpsb mov fisub xchg sub mov out lods pop jb fwait push in inc shrb ljmp daa imul (bad) (bad) aas sub ljmp out in sub insl leave or sub out out jno mov add cmp test fldz xor or call xor xchg jmp fsub mov or stc test out rclb pop out inc imul jg xchg fildll mov pop jecxz fucomp shll inc adc insl inc (bad) jp mov out inc scas jg arpl out cwtl mov out adc cltd inc es xchg test jmp pop ficomp cli fldln2 lcall fild (bad) lock shll sub jle cmpl std imul aas push out and sahf scas pop es clc call and mul push out out add mov pop aas jae lods popf mov dec pop xlat into in push add dec lods aam (bad) xor sub push out and push pusha out pop fucomip enter pop pop add andl ljmp das mov insl jmp jne jle out ret out mov pushf pushaw stos aaa jmp mov nop sub fwait jae push sub cmpsl out fldt dec dec pcmpeqw sti xlat es ficomp dec mov negb jmp xchg mov repz and jge dec loop push lcall aas out cs mov iret stos and jbe jnp or push stos jge xchg js pop ljmp jl push sub xor aam push repz or sarl hlt out jmp mov out inc in cmp call lcall daa inc push js out aas dec mov lock out stc fisubr and out sbb test adc out mov outsl xchg adc test push inc (bad) popa loopne (bad) out in jg ljmp loop mov mov out arpl pushf jmp push (bad) in pusha mov xchg out out scas dec mov or fucomi jmp loopne jmp pop inc sti mov jmp ffree aas pop daa push cwtl es or pop in xchg repnz lods not push out or xor cltd cmpsl loopne rcrl fldenv je pop jo movsl fsubr inc insb or scas outsb out mov lods stos cmp (bad) sbb clc in out mov jecxz fcomip pop dec push in xchg lods adc cltd sahf stc jmp fwait fs out xor aaa outsb (bad) addr16 in mov jle out arpl inc aas pop addr16 mov enter es outsb sbb push data16 cmp int fcomip in push int3 lret ret stos pop push sbb pop in stos cmpsb in lret cli test in addr16 bound sub cld fwait out or imul inc adc add mov aas inc in jp out xchg shl out cmc (bad) out and mov rclb ljmp (bad) loopne mov shrb in pop push xchg cs call xchg fucomip jle dec push fist xchg inc push out sub imul fwait out (bad) pop mov or fcmovnb add in aas in ljmp pusha adc call in fsubrp pop in sbb mov sbb daa rorb push arpl outsb ljmp fucomip lea pusha pushf pop out data16 pop out je lret jae push sahf xchg subl push push mov fidivrl xor xchg jno loop into inc fildll imul sub incl test sub pop and mov (bad) shrb out push shufps jecxz mov sarl fisttp inc or jp sbb out adc (bad) jb popf pop adc sti in mov and fmuls lea lock out out fsubr jmp fcomps insl lahf std int jno lea inc pop jg call adc and jae leave cltd jmp imul sbb ja ljmp sbb push loopw mov fs and sbbb lahf out push aad out imull push jmp push add fldt mov out and xor add rep stos mov pop mov fistl sub imul pushf push cmpsb movsl pop inc out sub xor sbb mov pop cs and ljmp and call loop pop out pop pop mov cmp outsl inc outsb inc rolb aas mov loope sub hlt int3 push in push mov fdivs push xchg stos ret sbb jno arpl dec ret rorl push stos pusha outsb jo stos shlb ret lods xor push push inc out aas out (bad) hlt out mov adc push clc or xchg stos lods (bad) cs lahf or mov arpl push adc dec loop fdivs xchg sbb aad (bad) out pop and sbb pop xlat xchg movsl push or mov inc addr16 dec iret xchg mov pop fldl2e out jge inc out out pop mov mov scas push out out dec inc sbb in (bad) pop and add (bad) cmp aas pop sti aaa mov out scas cmpsb popa insl fldl mov xchg (bad) or dec and jno sub jmp mov out mov (bad) adc mov out je lock mov pop out pop mov repnz xchg (bad) pop sbb xchg insb pushf xchg mov mov sub push pop jp out imul popf stos jmp push mov xchg in sbb pop and flds cmc jecxz jmp in test fwait popa out int3 push sub push pop mov in or mov out (bad) inc out fwait adc push mov inc jmp mov aaa out push test ss leave popf jo mov pop or dec push ret add push es in cmp (bad) js ss dec pop jg loopne cmp in sbb daa xchg push push out pop (bad) jecxz out pop push and out and mov dec adc lcall out fndisi(8087 ljmp (bad) and mov jmp pusha cmpsl pop mov jmp out push js out mov xlat je ss pop scas dec mov in aad adc add push dec loope pop sub sub lret (bad) ljmp cwtl in clc jecxz in out pop mov mov sub jb jmpw in push jp push push fcmovb daa test out imul inc fdivrp mov gs test (bad) jmp loopne adc call mov into sub outsb jo jg xor jbe in cmpsb fidiv enter pop add pop out cmc aaa call call pop mov mov xchg cld insb push pusha jmp sub lods loop adc push xchg in out popf cld in push fwait loopne out jo sub xchg mov ret cmpsl jmp in mov out clc (bad) lods jp ljmp sbb icebp xchg out fsubrs push xor out (bad) insl mov arpl (bad) sub mov outsl aaa out cmc dec fucomi movhps jbe pop jns push xchg lret shrb loope pop mov out stos aad lea adc je sub inc inc jecxz xchg fisubl lea mov lock cli xchg insl mov out mov out int3 popl inc xchg sub js dec jmp test sbb sbb xchg leave aam sub jecxz cmpsb xchg loopne mov out push pop and push shrl imul arpl push pop scas aaa fld1 cmp rorl in out xchg cmpsl push lret mov xchg movsb (bad) mov jle (bad) jo mov out mov out fisubrl dec cmp das int out out dec lock insb (bad) sahf lahf push jmp popa push lods (bad) add js out out push scas pop jns jge mov (bad) icebp sbb pop adc cs outsb xor outsb mov in dec popf mov movsl pop cs loopne out jmp lret ficomp pop sub lods push loopw sub popa lret out out push test (bad) hlt out xchg jne or lahf out and dec push pop xchg loope sub sub xchg repnz (bad) test out push cmp jno push insb out (bad) pop add xor sub cmc clc ja out push xchg xor stos pop add xchg inc or lea cmp mov out pop jne stos xlat aad out test fsubrs ja sti cmpsb and sub mov fwait daa jg dec adc out fcmovu and mov fistl out daa push shll loopne ret inc pop stos loop cmpsl push sub sbb and jbe loopne mov ljmp out cmp xor pop rorb in and dec xchg mov insb loope movsb pop adc mov call pushf scas pop jb clc sbb data16 out and ds and add repnz sbb movsb test dec inc sub out daa je lods fwait rcr test ficom stos out dec icebp shr movsl cmp test lret pop mov mov fwait lods fsubr push test (bad) (bad) call leave sbb jo scas arpl out and roll cwtl call and and out pop mov cmp jb mov mov in mov ret dec mov push out cmp cmc jg (bad) xlat addr16 in cmp ja pop cs add mov out jmp call aam mov daa les xchg (bad) in out dec movsl (bad) sarl (bad) in sub rep out je pop dec inc in sub out and pop jo out imul fistl pop xchg stos test inc push in in loopne adc das push das fdivrp jl out out pushf imul jmp sub (bad) or lahf xchg std in jge cmc sbb xlat cs ljmp out mov (bad) adc outsb call popf cs movsl in out sub sbb imul paddusw pop out in mov enter in sbb ss adc mov bound outsb pop out loop fcom push push sub pop aad cmpsl adc out jmp vpunpckldq imul mov cmpsl and out mov out out xor xor out out fmull movsb rolb and mov aam scas rcr popf movsb lods pop pop aad in and stos (bad) ljmp jae lods pusha incb test arpl inc in aad cli push and in xchg fucomp out pop cmp movsb jge mov inc mov cmp jecxz out mov cmp push out inc call fs xor stos cltd mov out push (bad) lea push fnop fstpl mov fwait loope into lods lods xchg xor out (bad) mov imul pop push loopne xchg stos out stos std imul in and fistp mov iret cmpsl sub jmp sbb mov xor scas test (bad) out hlt mov sbb aad in jbe push (bad) sbb stos imul jne in jb ficoml pop fisubr jno xor movsl mov clc lock data16 out fs cmpsl and push sub (bad) scas (bad) in rorl out nop fild inc mov scas out pop rcl sub rcll pop out imul fsubr xchg fildll sbb scas fnop sar xor in ljmp out mov loopne cltd pop scas fdivrs shl loope dec xchg fbstp shll je pop push (bad) jecxz push add fisubl out xchg nop ljmp cs loop xchg sub mov xchg push out xchg scas inc movsb gs fsubrs imul in adc xor shrl arpl aam sbb lods jg clc xchg stos out out xor scas out adc in stos push daa sbb out out or out pop xor aam cmpsl daa sub cmp popf pop bound lcall loop fxch into fs call stos out lcall mov in test hlt pop and (bad) ss and sub clc test (bad) jbe ret out fs popf and mov std push push jge in xor mov lods rcl loop sub pop fistp xchg cmpsb mov out movsl loopne shlb mov jecxz xor aad pop dec in mov mov into (bad) in fwait push xorl pop test out jg add ss lahf inc push fdivp aaa cmpsl jecxz pop add pop lods pop jb xchg scas jnp fildll sub out out dec test push addr16 das fisubrl hlt fcomps out pop loopne pop out out mov (bad) and push ret mov out out das cld lahf int dec ficompl arpl repz add push fist out xor sub inc call xchg out dec jge ret in mov pop pop movsl ficom roll cmc add gs mov out out and mov loopne in test scas adc out sbb fwait sbb jmp mov (bad) push mov in pusha repnz lods out pop fidivrl aam call stos aad xchg mov imul fsubrl ret out std sarl sbb daa jge fsubrp in inc and scas mov lret sub lahf repnz mov push jle xlat shlb mov out inc stos cltd jmp stos pop sub out jo push out xchg pop out fisubr mov sbb outsb mov ret push sar bound mov push pop rcl dec call mov add ljmp js jno bound mov out cmp das fcmovu xchg test fs fist adc add jecxz cmp jnp cmpsb pop pop pushf scas loope mov lods mov lea push out xchg sub out das (bad) out out out xchg cmpsb ss pop push mov sub push out es mov out fs adc scas sub out leave fstl outsl imul loopne inc out pop and fcomip loopne cli sub sbb in push or pop loop jg xchg hlt pop ljmp xor mov out out es imul in cmpsb sbb mov cmp fisubrl sub mov or out pop out addl mov pop sub jbe out jg jo push fbstp push insl out dec sbb outsb (bad) (bad) call and lahf add pop and dec out std push sub adc sub cwtl in push cltd jg push loopne mov or push (bad) push mov xor mov sbb inc sbb pop pop mov adc jnp (bad) cmpsl xor cli out cmpsb push jecxz ret and dec dec push out sbb insb dec jle ja ror and push scas (bad) fsubrp out xor testl bound outsb arpl push jecxz in out mov repz sti das push insb loop out pop xor xor sar mov aam movsb cltd imul lock cwtl scas sbb jmp adc add inc cltd test push add aam out mov jmp pop (bad) xchg lods pusha jg ds xchg jmp in fucomi test loope sub fadd aad xchg fcmovu out mov test pop pusha jns jae out cmpsb pop mov sub lds sti leave nop xor daa ljmp sbb xor aad mov repnz xor and out out int3 stos mov je aam bound sbb fldenv xchg mov (bad) lock rcl add inc stos fwait mov and add jmp fsub in and rep pushf js inc out mov es mov sub loop cwtl lods les inc call aad rclb out mov fnsave and jbe out xor js inc (bad) das jae jmp add rcl fninit fs cwtl sbb (bad) cs call int3 (bad) out (bad) jle jg push int sar out mov add enter cmp loopne pop cs (bad) cs pusha adc into out or enter (bad) faddl ret idivl cmp movsl push and out jecxz insb rorb push xchg out das and xchg outsb push out pop or jnp lods out (bad) (bad) int3 or sahf cmpsl adc push iret sbb scas (bad) out jnp jo in push les cs out or ja and shrb out mov call jmp push pop xchg push out push xchg mov mov shll and jle pop lock shr jecxz imul out arpl in jno xor aas neg scas sub pushf push mov sarb ljmp out sahf mov ret (bad) sbb rcrl lea jge (bad) push dec out in mov (bad) (bad) pop push sub lods nop pmaxub dec shrl mov xor jno lcall cmp out repz ljmp popa pop jae icebp cmp in fsubr lahf xchg sti out dec repnz add cmp lock or out push or addr16 insb xor adc jbe and rcrl out unpcklps jl adc iret cli ja jecxz mov into push out lds dec mov mov jle adc stc xchg out shrl jmp fwait pushf hlt xlat push ljmp and rcl mov xchg jo ds lock and insb sbb out dec cmpsb js inc jne sub out lods pusha rol sahf (bad) sub loope outsl sarl mov fmul fstpl out jo jp in mov fwait pop dec sbb scas test (bad) outsl mov pop inc out movsb dec lds pop rorl rcrb ljmp loope out dec js pop aad jge ret ljmp cmpl scas cld call push aaa sbb sub out and lock cmc in pop push xchg in out lods int in xchg insb adc (bad) pop jg (bad) sub push pop sbb stos pop hlt loop add jmp pop sahf adc mov clc jg mov (bad) fsubl popf sti push out and mov ja out (bad) addl xchg test sahf fldt ret out xor rorl mov data16 cltd out adc loopne cs nop pop pop fimul xchg mov xlat in gs rclb clc rclb (bad) and fistl and push xlat lcall fcmovnbe test (bad) mov cmpsb push out pushf jp ficomp lea push fist lahf mov out fcmovbe rorb pop fsubr inc adc insl lods mov jg sub shr (bad) mov xchg adc pop xchg sbbl mull (bad) icebp fiadd xlat dec jno mov (bad) lcall jmp icebp fmul fwait popa fcomi or ficompl xchg sbb xchg fcomps rcrb loop cld cwtl ja in test jbe out orl fildll mov (bad) xchg or out and das mov fildl loop push das cmpsl fistp xchg pop mov (bad) outsb aad mov lahf into and xchg xlat daa js das data16 jb pop and fcompl in out xchg xchg mov push xlat out mov ja lcall or jecxz out sbb cld leave fstpl xchg (bad) out sahf cmc xchg out mov fnop leave fsubl pop dec pop pop pusha shr and shr xchg jg loopne jae test pop inc movsb out inc stc loopne mov adc aas xor mov jle mov inc out out dec mov cltd add int das rcr add das dec mov (bad) vmovdqu xchg decl jmp je out repnz jmp (bad) xchg lahf push lcall ljmp mov adc repz fcompl out sbb or das fcmovnu adcl push push rorl sbbl fs out ficoml push arpl out out xchg sub and das out push imul popa fimul out xor pusha inc and adc fistpl inc scas mov shrd pop pop ljmp (bad) dec mov out and xchg cld in mov ss out jg dec xchg out out pushf rcll lock out in addr16 decb ss loope enter nop inc jle or out mov das xchg mov fldl (bad) loop xchg out push pop dec push out xlat in sbb out inc out es (bad) out (bad) out dec pushf adc out pop adc out push add and pop jmp arpl push pop dec ud1 sbb mov ljmp add out stc xchg fcoms mov push popf incb lods add insl movl cmpsl (bad) mov jmp (bad) or mov mov imul incb out hlt xchg out pop mov out push loop ja into jg jno pmaxsw bound cmp ljmp ja loope movsl loop or out ror imul xchg pop xchg fmuls mov fisub into loop xchg prefetch or (bad) out xchg das xchg das arpl cmp in out mov (bad) jmp pusha outsl ss dec loop into shlw rclb pushf aam pop adc xchg pop inc out fcmovnbe adc xor out out cs and push inc and out in mov pop out sbbl outsl mov loop jne out push pushf mov mov in test jb icebp scas loopne jnp ret movsb cmp push pusha fildll rcll ljmp pop sub (bad) lods (bad) jmp loopne jg add out out and pop lods jnp adc rcrl out (bad) in mov add in inc pop je out push jno,pt test xchg and and pop out and xchg stos mov xlat es out loope inc sub lcall dec comiss lock movsb sub out in pop dec or xchg fist arpl out in jp jecxz sbb loope (bad) int test pop lods out rcrl sbb push dec sub sbb insb call es ja mov mov out ftst inc xor out out pop and pop mov (bad) jne lock in inc cmp add inc ficomp and lcall out out hlt pop mov repnz sub leave into loop xchg movsb add jmp out clc rcl cwtl and cs out sahf mov cs cmp jo lret lahf (bad) imul aam repnz daa rcl std mov push out pop mov sti (bad) out mov mov jg sarl out mov cmp es sbb insl jle pop push movsl (bad) cmc decb inc mov aad test sbb call repnz mov out fcomps and xor jmp in cs sub lahf jo adc lods test push rol pop in out and fucomip jle out (bad) out or mov mov loop mov je push out sbb in push leave push cmpsl xor cli or xor jecxz push and cltd mov ret out cmpsb mov out fsubs out adc push loopne sub jns in and sbb repz xchg out sub sahf imul jle pop jg xchg stos fbstp js (bad) or cmp dec dec fwait inc mov push inc scas (bad) push imul in stos pop mov or scas pop jmp pop stos shl out loop mov push push jb pop test inc lcall out and adc in mov push aad test repz lahf cmpsb cmp dec popa dec and cmp (bad) divl push cmp out das in fisubr ljmp out repnz sub out movsb push jp leave scas ficom out notb popf pop push das pop loopne lret loope sub (bad) es decb jl dec sarl add push out push xchg movb fldt inc fsubs ljmp in pop loopne push sbb xlat pop int out xchg lods mov mov lahf stos aad out movsb rcrb mov les mov lock popf outsl lods iret minps in xor sbb out or xchg stc inc lock incb sub xchg (bad) out fdivp hlt inc ljmp mov aad push out sub mov je les shl xchg loop cmp out (bad) push out sbb in and ret (bad) xor call jecxz dec (bad) mov (bad) jg adc addr16 shr out repnz loopne ret mov xlat (bad) rcl ljmp imul push fnop cmc addr16 (bad) out xchg push in or in or out cli in add add push in in pop add sub adc adc jb call push nop lret pop in add out and out (bad) and or sub lock mov jg pop out xor out xor pop call adc ficompl mov imul (bad) jmp xchg insl imul mov push in loope pop jmp test mov int3 outsb imul in imul outsb out in push jbe call imul popa in shlb loope lret out leave test jmp sahf popf ljmp push out jb (bad) push cld lock (bad) out lea imul loop add adc adc lods outsl or fldt and out fistp pop fisubl jmp addr16 (bad) lcall adc in jle (bad) ds sti (bad) in or out xor sbb arpl add sbb jl sti and sahf cli push jnp push (bad) call pop mov scas inc loope and lahf test xchg ds sti iret out out rorb fs jmp cmp aam add adc xchg pop sbb fsubr jp sbb xor imulb lcall out sbb test fsubrs jp fsubp mov and and adc out (bad) ret lcall sbb mov adc shrb out and or popa icebp and shr out data16 inc xchg add in add popf out aad outsb push and or pop adc loope jmp rclb (bad) je out fucomp xchg (bad) ja psubsw lock (bad) mov dec lods cvtps2pd ret shrb popf cmc push std pop and out pop push loop inc arpl pop loope bound jmp add pop add mov out xchg xchg ja cmp popf out mov dec and punpckhdq mov out (bad) addr16 popf arpl inc fs in std (bad) cld (bad) loope jecxz icebp fs ljmp mov insl dec jo out xchg jg repz call jecxz arpl ljmp jo lock (bad) loopne loope pusha dec loope adc in mov call xlat mov ljmp imul pop in jo out cld addr16 imul int (bad) cmp dec outsb push in xchg push in (bad) insl out outsl jmp insb sti ljmp pop mov jmp test push in mov (bad) lock test out addr16 lea pop call lods shr out shrb shrl push out push jmp es lretw cmpsb lods das ljmp jnp outsl push in dec int movntq lock mov mov xor xor aad fs loop xchg in outsb std and jge fsub mov out mov insl inc adc es and mov push call jecxz arpl insl outsl (bad) and fdivl lock arpl cmpsb leave dec adc addr16 mov lret or out cli ljmp imul pop outsb adc dec outsl in out jo jl inc insb and in mov out hlt xlat ret insl push jmp out insb sub lret outsb pop in cmpsl outsb test in mov test out push out out arpl out push (bad) lock and cmpsb imul jbe addr16 fldt call (bad) or xchg nop out xchg push xor arpl in call sbb sbb mov popa in aas pushf outsl imul out in mov and std out loop arpl jecxz fs rolb jecxz decb in in or sbb cmpsb inc in pop test out (bad) insl imul andl mov inc iret fs movsl vpmaxsw jae xchg (bad) loopne loope inc in out shlb xchg jo inc out rcl ret lock insb das or jmp imul out cmp pushf jo out mov shl into jmp insb mov cmpsl fildll in mov xchg mov out insb dec ljmp out out retw cmpsb fildll loop movsb push imul repz test dec out addr16 mov push jmp out xor xchg push push jmp es push lods loop adc jns mov in mov imulb out movsb addr16 fldenv jecxz or pop xchg js xchg es les fs sbb or cld inc std mov je movsb and (bad) lock call jecxz arpl aas push out cwtl jo lahf lock cmp push fwait xor out (bad) ja push add (bad) ja insl xchg repz pusha enter out (bad) jb mov stc out mov cmp fwait xlat sti mov push push out cmp lcall out sbb mov cwtl and ljmp jnp negl es xchg or sbb rcrl or fsubp das and outsb mov dec adc out dec lahf std sar out aas aaa and or mov and imul dec push (bad) cmp cld (bad) shlb (bad) outsl repnz inc push iret icebp and outsb call out xchg lea rorl adc lock mov lcall mov jecxz int int aad cmp mov mov loop fs (bad) mov (bad) out push mov mov loop jns dec pusha out dec in (bad) rcrb lahf mov xchg call out inc xchg cmp dec adc outsl xor xchg pop aad push and pop dec shr pushf adc setle out dec fidivrl out jecxz scas pop out lods add pop shrb cs mov stc out (bad) sti cwtl and out not ljmp int sub push mov ret out pop inc cltd test push iret scas (bad) mov ljmp inc fidivl hlt fsts xchg or out mov lret cmp js scas xchg gs jbe pop add out ljmp adc pop fild shl cltd iret scas imul sarl adc mov or cmc fistl push andl rcl mov stos pop mov jae loop (bad) pushf (bad) add les repz push sbb sahf mov out and and out clc mov push pop mov in add movsb iret jo out or test out adc les lods pop mov cld out out int3 mov xor cmp jle or sbb mov lds mov mov insb outsb fnop cld sub ljmp enter out lock jae icebp nop jbe out or pop xchg in mov jg pop mov adc sub movsb jae clc out insb in std and js fbld inc push in cld sbb sub xor pop sub mov sahf lock and fstpl out jno testb mov sub and cmpsb add fnstenv ret inc test out popa (bad) mov pop pop enter mov inc pop mov cmp or out push mov and cmc out push cwtl lea enter shlb insl xor jl cld imul jno mov out dec mov cmp pop jp out jge dec inc ror mov loop pusha cs adc or jl sarb or test cmpl or lods sbb mov mov cmpsb push aad push pop popf push fistpll ljmp xor add (bad) jmp imul dec push jle xor and mov mov out (bad) clc jo push dec movsb mov mov cmp xchg sub leave push and addr16 cmpsl jmp cmp decb imul mov loopew iret test pushf popf push out out test inc add jbe adc jno push sti jb (bad) out sar lahf test mov loope popa xor mov daa adc jno lds out pminsw (bad) out sbb int sub lcall mov pusha das mov xor stos adc out jmp stc mov cli fwait scas mov fld xchg cmp pop bound dec pop sbb lods scas fildll dec pusha out cld test lods dec in stos imul dec pop sbb cld mov (bad) xchg insl xchg lods xchg out mov push cmpsb adc xor out into movsl pop (bad) (bad) movups ljmp pop sub or mov ja pop or inc mov jno insb inc cmp in xor addr16 out int3 or mov addr16 gs or xor and lods fsubr imul rolb or dec outsl mov fwait add sbb mov out pusha jmp int3 mov and out add rorl outsl shl cmp out (bad) mov cmp pushf dec out push rclb (bad) mov inc movb insb and push pop or (bad) lret push out movsl sbb push insl nop ds das mov inc insb cs mov push and adc es xchg mov test fsub mov jecxz out movsb mov aaa cmpsb adc xor outsl (bad) pusha popf xchg push lret add xchg sub cs or mov mov mov aas es cmp and adc xorl nop rolb push add movsb push out xchg mov jnp add mov stos (bad) mov pusha out sub lods mov out aaa push xlat mov adc or lret leave adc ljmp insl mov sbb mov xchg sub mov movsb imul mov in push jle out xor test mov or push xchg fsub imul ret xor arpl and and (bad) pushf int mov sbb fist cwtl pop fdivs es dec push int test sub iret out xchg or mov cmc cmp out jo inc int aaa xchg int3 out jmp pop fidivr lods add leave inc push loop add adc xchg inc (bad) out ret mov int3 xor out mov data16 dec sbb into mov dec lock pop jg pop lds and lcall mov jmp mov jb repnz pop popa push enter mov in dec out and jl cmp out (bad) inc (bad) add mov and and mov xor movsl pop xor mov mov cltd mov sar mov out and iret hlt arpl cwtl adc and push cld jae repz mov out aam loope roll fmulp jo out pop xchg cwtl loop pop mov cmp in ftst sbb lcall jecxz test (bad) aaa sbb mov imul out mov pusha lea stc shr jns dec pop jmp out call mov daa and nop loop inc (bad) xor out xchg addl cmp xchg fisubl call ds sbb fwait mov pop mov out cmp out lods pop jmp or daa fsubrs lds out lods notb mov xlat jecxz jp push or fldenv in push mov shl inc mov out bound test das outsb loopne mov xchg xchg and out xchg loope jns add lea out cmp inc push int3 (bad) stos mov jae aas loopne jns out in jo or add out enter mov or dec lods movsl pop lock out das dec clc aaa or out sarl (bad) dec (bad) fcomps jo pop sbb stc cmp ljmp fisubr sub jbe push mov popa cs or mov fimul xchg pop push adc xchg les in (bad) xchg fcomps into out lea outsl out js cltd ficompl cmp arpl out out fldenv repz mov mov adc pushf out mov adc call xor mov mov jle pop out mov and cmp push mov sbb push sub fldt push je out or jecxz out sub xchg pop mov insl data16 dec in mov sahf test ljmp lods inc jnp lods insl dec out mov das push cs sub mov mov adc cmp lds jb mov xor sar mov into loopne (bad) mov dec cmp adc pop pop mov sti in or fsubrs out push mov lods aas lock iret addr16 pusha out mov xchg dec rcll int cmp fdivr out cli jp sbb lcall out lret xor push out dec mov loop xor jno out dec iret mov push out (bad) ds cwtl sub mov outsb out jmp inc mov jecxz arpl call fnstcw lret lcall call dec xchg mov sbb out daa push add pusha (bad) mov jb rcll outsb iret out fnop (bad) (bad) cmp (bad) out arpl loop lds sti out xchg jno xchg movsl stos cmp out inc popw in arpl out and inc inc lahf mov adcb shr jmp push mov jae push inc (bad) push loope scas inc movsb and out ret dec sub jo inc pop test ds fdecstp movlps mov das cmp push mov mov or inc fidivrl inc (bad) cltd push sbb xlat inc into mov insb sbb insb loop cs imul jmp xorb xor (bad) dec pop jecxz push and or pop in icebp into ret call out (bad) dec insl fmull push dec pop movsl mov and jno aas out dec lret mov imul mov addr16 test imul dec push sub rcr scas arpl cmp mov andb (bad) and inc add mov xchg int cli movsl out cmp fwait pop or out inc cs aaa fsubrs out push dec ljmp mov push lahf jecxz adc mov sbb and xchg out dec sahf jmp pop cmp in mov dec push leave and fsts insb mov and lret adc jnp cmp imul pusha add scas sbb mov repnz ss pop call xchg pop cvtps2pd xor add inc test cmpsl mov fcomps test pop sarl cltd (bad) out dec and out sbb inc mov out or lcall rcr call clc mov incb fldl push mov out mov addl mov jmp call cwtl (bad) in leave lods jo mov in fistpll aaa js movsb jo xor outsb into jle jo jns xchg lcall push inc pushf mov adc dec out into pop jbe fs js sti stos seta push sbbb push rclb ffreep pop shlb leave stc mov inc fcomip (bad) pop or loop cltd push rcrl mov pop out jp enter fdivrs fild daa bound (bad) dec sbb fucomp xchg cmp xor (bad) mov cmp fnop mov and add loope xchg sbb mov out hlt jno add xor test fnsave rcrl sbb lods dec or setl out subl fucomp pop sub fstps push jmp dec xchg mov inc insb fsubr push pop sti out push push out dec jp cmc stc push inc iret lods mov lock mov loop (bad) outsl dec xchg and jb lret repnz dec loop (bad) mov and mov cltd add insl mov ret xor insb lahf or mov push lea jb adc (bad) loope sbb in jecxz les (bad) out into sbbl mov inc arpl xchg fadds sbb mov push mov sbb ja js (bad) fsincos mov std cld cs aas ljmp jge sti add out push imul cmovs jl stos push out aad jmp mov daa adc xor (bad) push pop shrb mov cmp cmpsl (bad) clc aad out adc cmp sub push pop cltd imul lret loopne addr16 fnsave jne imul pop mov adc jle insl sub divb ds lock mov adc dec iret aas lahf in add das mov int idivb mov xor (bad) xchg lods lcall fnstcw out ret insl out xor (bad) adc mov ljmp int and mov daa adc bound sarb jg cmpb or out addr16 dec sbb aas aam out ljmp inc (bad) adcl repnz mov xchg push pop je jecxz rorl xor mov xchg out pop dec icebp xor jae out imul fcoml mov loopne out call mov out inc xchg cld or cwtl rclb and jns out addb dec xchg mov jbe xchg xor out movb mov call pop mov pushf movb lea jg push mov mov lods cmc push add jbe xor bt jge neg clc pusha push stc sub movb pushf pushf rol test test stc pushl cmp bswap lea lahf movzbl mov mov pushf pushf lea ja jmp mov add lea pusha cmc or pusha lea je stc cmp push movw pusha lea jne pushf inc pusha pushf pushf inc movl lea jmp push imul cmp cmp add pusha lea jmp add inc mov or xchg mov mov jge pop sti enter sub pop lahf cltd pop jo orl popa inc mov mov pushf ss xor add cwtl mov jne adc sbb dec mov (bad) andb nop xor xchg xchg test call jle pop insl inc jno outsl cmc sti add or test xchg das dec mov lods imul lods das mov xchg cmp adc sahf push mov (bad) enter ja xlat sti fdivrp (bad) mov adc xor mov jg add leave add push scas iret fneni(8087 push popf fwait pop imul insl outsb sarl push (bad) cmp insb and push lods cmpl pop mov int or sub jl int3 loope (bad) div jle adc jmp push (bad) rcr mov test mov mov push aaa cmp ret ss push faddl hlt lret push push stos inc (bad) ss adc into xor test mov mov mov pop sti stos adc add daa into subl rclb enter jl push repnz xchg daa mov (bad) cmp scas push mov sub popf pop fsubr mov (bad) cmc (bad) jge shr icebp fstpt int3 push jnp and call addr16 push scas lds test jmp dec jg sub xchg out popa mov leave or das mov sbb lret out push test clc arpl sbb pusha pop jge dec mov push mov les imul aaa push cmpsl push inc adc mov btc bsf test cmc mov push test cmpb jmp add sbb push pop bsf mov xor stc cmc rol mov stc stc jae repnz jmp movzbw jmp movl mov mov movl push lea jmp mov pop test sti test add cmp lds andb sub pop lcall cmp les scas pusha leave test cmp jae mov mov xlat push (bad) mov xchg sub push inc mov dec in push adc xor test loop ret sbb cltd mov out push xchg hlt xchg pop in jb inc mov pushf fisubrl enter mov xchg xor cli lret fwait jne std mov (bad) mov cmc std ret out push stos pop outsb stc incb iret pop fidiv aam cltd sti lock adc add scas push lcall jae sub cmc add rcl mov test rol shr pusha mov pusha repnz jmp jmp test sub add pushf pushf or mov lea je lea mov setbe cwtl push call lea ja call cmp call hlt out sti stos frstor mov xchg lahf cld lea pop (bad) push xchg jns mov data16 scas cltd xor in push dec sbb repz xchg scas test cmp dec jg pop insl insl mov xor xchg xor cmp push div push fs insl mov jo inc icebp push scas xchg and out push lods out jl push arpl and cmp mulb in fdiv not sub scas sub stos mov ret lds fstl scas push pop sbb xor and (bad) addr16 stos aad (bad) adc shr imul and hlt repz pop loope mov insb mov scas xchg pop (bad) and cmc adc mov in loop mov add or xchg jge xor ljmp rcll pop imul xchg pop hlt test out jmp mov mov jmp inc iret int3 push and jmp push imul mov sbb pop stc mov adc out push outsb insl addr16 out std popf dec (bad) repnz jb loop data16 inc xor sahf cs sub out push lods in btc pop fidiv int mov hlt int imul push out push inc xchg cmp mov lds push and (bad) aaa mov add xor or pop xor out push leave xor push (bad) pusha fisubrl sub fs mov cli mov in push nop clc jbe addl jle mov sbb es mov imul jl rorl ret inc and add sbb ljmp push adc mov jbe adc in xlat sahf lret fild mov daa mov mov out jg xchg inc outsl push cmpsl xlat fwait dec push iret ja,pt jb jge loope test loope mov dec pop adc stos pushf movl pusha movw movb push movl movl push mov lea jmp push call pushl pushf pushf movl call xor call mov push in dec xchg push xor loop lahf xchg push inc clc pop ss movsb inc lds mov cmpsb mov or add enter pop and mov (bad) out push cmpl mov mov xchg gs repnz or je cld icebp loope push push jo push imul ret int les (bad) push mov or mov loop lea call pushf pushf pushf pushf lea jne pushf mov mov pusha pusha lea jmp lahf mov lea seta pop not pusha mov movzbw jmp push xchg pusha push jmp pusha call jmp arpl loope mov (bad) dec mov mov pop xor push xlat cmpsb mov mov fsubl add in xchg sub loope mov imul xchg inc mov test inc push test repz fmul fs dec dec mov fucom jnp out jle movsb inc leave icebp jecxz mov add data16 inc sub or sbb hlt sbb or jnp inc cli cmp pop mov xchg (bad) dec jp sbb aas add sub pop (bad) xchg adc xchg push pushf ror clc pushf clc mov add stc jmp mov mov imul sbb pushf sarb push in jl test mov mov repnz push jp prefetchwt1 or pop loopne nop mov mov fnsetpm(287 outsb mov js push xchg push adc ljmp rorl xchg sub std dec nop lcall dec pop gs lock xor mov (bad) call mov lds out push (bad) (bad) xor lods dec adc shlb rorl mov add es enter data16 (bad) icebp push insl jno pop jae icebp lret ret inc jae push mov ret scas dec push orl add xchg mov cmp inc js and mov ret icebp aam in fadds stc and pop pushf xchg ds jns dec mov jb ja inc sbb sti mov jge (bad) pop out (bad) adc (bad) jae leave mov adc and mov lcall loope mov imul add ljmp push dec daa sbb mov lods std popl or test cmp dec popf dec mov cmp add add sub xlat hlt out int rorb pop sub sti bound in pop lock mov cmp ds cwtl aad icebp push cli xor xlat call fs sarl add mov add jmp add cltd jns sti stos addr16 jge xchg adc push in aaa mov (bad) in xchg cs icebp cld rcll scas and add lret stos test jne fcomp nop add movsb mov sbb int loopne push mov shrb loop cmp frstor cs jbe imul and inc pop mov mov pop test xchg push jnp jl test mov mov sbb jnp pop xchg adc test repnz jmp loope hlt xlat enter dec out out push mov add push pop lock rorl jmp jae cmp mov or movsb push mov mov dec xchg cmp insl pop repz jl pop in popf sbb jg xor js cmp out push mov ds adcl xor push mov es scas dec aam jns jmp mov mov push mov incl out push mov xchg cmp pop icebp sub add mov lahf repz mov int3 cmpsb ds std pop mov dec xorl shll setno push not pushf mov pushf inc ror setae setnp pushf ror inc sub add call pusha mov pushf call push jb movsb lods loop xchg mov fdivrl mov cwtl cmc pop xchg jle popa mov mov push scas lret ds sbb and or fiaddl pop jns repz ljmp in cs push sbb iret pop out push mov sub xchg dec xchg aam daa repz mov jo jns mov enter add into (bad) adc scas dec (bad) std push mull (bad) mov or fistpl scas xchg inc std or sub push mov push lret mov cs jmp lahf inc (bad) ja,pt rorb mov adc add daa pop fstl sbb mov call mov and mov aam (bad) ret mov mov add adc mov lea leave or aaa mov scas dec sbb bswap mov bswap movl pushf lea call call dec xchg std push imul jmp mov mov sarl lret inc mov ret xchg popl lods sub aaa and and push and push out out addb sub sub psubd inc sub and lcall icebp dec ja addr16 xchg imul js mov aas fnstcw roll push mov adc or stc lock or je cld and dec jbe jmp or not add lret mov xor stos lds outsl rorl cmp movsb daa cwtl cmc adc bswap push sub loop and pop insl rcl pop cli repz push push popf mov (bad) pusha jl repz mov enter pop cltd sbb negb xchg xor arpl sbb xchg mov sbb fmul add xlat dec arpl outsb hlt repnz mov out dec in jae loope pushf mov insb mov dec mov or inc cltd push sub in pop jno js imul sub sbb adc or je push jb jns fs mov inc pop iret jmp pusha pushl lea jne data16 icebp sub btr mov cmc or pushf lea je push lea not pusha lea push movzwl lea call pushf pushl mov lahf mov movzbw cwtl bswap lea pusha xchg not pushl movzbw movl movsbw lea jmp mov out aaa mov fs mov mov inc outsl ret cltd pop (bad) sbb (bad) fnstsw mov je lds roll (bad) lock jo xor sbb gs jno shlb adc cs out mov push lahf in and xor lahf xlat ret ret scas and push out or sbb jns push data16 call insl xchg rorb sub (bad) pushf scas test ficoml push (bad) adc xchg and inc adc mov mov pushl bt jmp pop ficom xor push mov into jo ret xor jge or out inc mov pop xor jo jg scas divl adc push rclb lods push adc iret mov (bad) sub ljmp pop inc cli xor mov xchg call push and push bound jmp cmp xchg dec lock dec mov or out and adc ja cld cmp mov sbb push out inc mov xchg adc out fs in popa sub jnp push js iret daa mov loop ss out dec mov lods out sub ljmp inc mov or sub (bad) in ljmp mov out inc mov and arpl addr16 in in shll sar mov cmpsb movlps push jp or push arpl jp dec fcmovne (bad) cmp mov jnp or push mov push jbe cmp in jae sub mov movsl dec idivb mov stos dec mov xchg push ljmp sbb (bad) cmc movb clc cmc mov bt test test call add dec outsl arpl inc insb insb outsl arpl adc clc or mov call clc mov test clc bt clc shl call mov div rcr ficoml xlat cld aaa mov jnp xchg sarl enter pop adc push lret test jns leave push sahf jo into xchg aas push js dec xchg dec xchg mov cld or je add (bad) hlt sbb out out jp lods insb lcall push faddl mov sti fiadd push aam push pushf adc lods dec mov pop xchg push mov neg sbb into cli or push in shll jp (bad) out out inc mov mov out inc mov gs and out dec mov mov mov and jecxz movb lods cmpsb sub out push insb cmpl cmp push mov out dec mov mov mov in std sti add cmp mov lahf mov mov mov in insb cwtl add dec mov pop out sub imul xchg insb mov push nop add lahf adc xor dec mov sub adc lcall mov xchg push out gs (bad) dec stos jbe sbb mov mov rcl mov cltd pop mov sub jle xor inc cmpsl xor dec pop inc sub js in adc sub pop jl push sbb mov adcl call sub ret aad std pop lea jns stc popa fwait out add je out jbe sti shr push mov jg aam pop jno cmp out dec mov stos cmp lcall add imul mov dec mov out out sub out dec mov mov sti out ds int pop mov dec push mov test gs adc inc mov mov es fstl std aad push lahf inc mov pop jge sub ss lods and std pop out insl mov cmp outsb repz and js int3 out push mov cmp outsb push insl jmp xor pop add fs (bad) (bad) mov mov pop mov adc xchg aas repnz dec ljmp mov jbe mov push mov outsl jnp push das insl loopne jg mov test into xor test mov add scas inc cld and lcall clc xchg mov jmp clc movzbw shld push bswap mov adc or sub cmc shld push shld push stc seto push ja sub btr xor push aaa and mov jmp cmp add mov pushf test movzwl movsbl mov pushl pusha add movw test call clc test push lea jmp call mov cwtl movsbw pushl popl pusha cwtl jmp sbb adc rorl addr16 cli aas pop int pop xor loope stos lea cmpsl enter aaa lret in test outsl lds loope sbb adc in ljmp mov pop repz std es popa pop xor (bad) frstor (bad) aam out imul or or or sbb cwtl out push mov repz mov push and xchg jne xorb sbbb xchg xor hlt in jecxz add scas inc lret (bad) enter mov in mov test push inc scas daa sub int lcall mov and out push int3 add arpl sbb jne mov (bad) push int mov cmpsb movsb inc jne cmpsl and das lcall jge enter jb (bad) adc sbb and repz mov mov sub sbb loop xchg mov cmpsb daa sbb not (bad) icebp inc jge jmp or push leave adc fs addl adc jno shr sub add xchg lea pushl popl not movzbl cwtl mov setne not cwtl not movl jmp je je push clc sti stos imul push dec jp std xor jp pop or inc xor jge hlt lods adc cmpsb dec adc insb pop vpaddd insb jbe pop add or es inc aaa (bad) inc pop addl push into das cpuid es out dec xchg loope rclb or dec sbb add and lds push (bad) push in (bad) jns or std push fucom fcmovu push dec pushf mov loop dec out push sarb stc call test stos das stos dec lea mov addr16 push mov stos dec pop cltd inc (bad) xor aam pushf and and fucom loopne iret jecxz loop lds push xchg stos adc mov push pushf xor cmp or lock imul xchg and sub pop cltd sbb push cld cmp in enter jle mov sub xor test adc out hlt negb ret inc outsb sub pop into lahf dec popf cmp xor mov std dec adc lods imul sbb mov or mull aam stc push pop test mov insl add dec mov jbe ficoml pop jae loop or cli cli out dec xchg mov mov mov xchg ss sub test push arpl sbb or mov arpl adc xchg mov push jno je fmull mov inc pushl adc lods out push cltd clc xor cmc cmp mov out aad movsb push gs push mov inc movsb jb pop jno lds xor adc or lds js or mov hlt xlat out ljmp inc xchg mov cmpsl add cli cmp jnp (bad) jnp add mov popa (bad) xchg mov out push mov or pop jno loop test and jb out and scas inc enter xchg dec bound cs mov sub inc inc mov popa mov mov mov mov inc enter push test arpl cltd test out push adc mov xchg pop adc hlt add inc jae ss mov scas mov popa fcmove jne cmpsl (bad) xor stos in fstpt cmc loop inc clc leave mov into pop fwait sub sbb pop cltd xchg push mov xlat outsb fldenv test sbb push mov pop aad imulb xchg push mov lds lea mov arpl ljmp mov dec data16 dec stc stc or dec aad xchg sbb ds decl mov and push cmpsb push inc inc mov add inc mov pop out fcoml lret add jle out or or fdivp aad fdivr or pushf push out push inc out fs fistp sbb cmpb inc fcmovnbe or sti fdivrp adc inc mov movsbw pushf movzbw mov movzbl bswap push jmp push pushl not mov mov pushl movw inc push push ror jmp inc xlat sbb add add (bad) xor add add add sbb mov sbb add add mov add xor sbb add add inc inc sbb add add mov sbb add add dec rcrl add add xchg sbb inc rcrb mov (bad) sbb jne sbb repz add add add pop xchg cmpsl mov aaa mov mov lock sub iret inc (bad) mov dec in add test enter mov add cmp inc xchg mov push xchg pop test ljmp xchg or ss imul (bad) lods movsb or push push jp pop cwtl aam in jle loopne jb adc fwait int in jle mov fiaddl push pop mov or gs inc pushf sbb pop imul push insb jno fs xchg dec sbb ss out add pop jnp sub data16 clc xchg lock push std repnz je daa sbb imul pop cli test int out and cmp sti inc rcl out push sbbl push jl in pop pop adc pop jle push cmp push icebp (bad) jnp and add xor outsb jmp test dec sub lcall sub xchg jge (bad) adc fxch imul xchg or ljmp loop adc inc xchg cmp or and aad cmp popa mov jns dec xor (bad) mov push fcomip cld mov stos sti and pusha cmpl lret mov or nop outsl jecxz mov fiaddl leave insl data16 push stos movsb aaa add out outsb orl jmp mov mov xchg or xchg or add push sub ljmp in lods leave test je rcrb sbb cld dec cmp mov rorb sbb xor call inc sahf jnp xlat es mov ja cli stc leave movb pop jge mov sbb adc mov mov lret inc out insl push fsubrl out dec dec inc iret hlt idivl dec ljmp push frstor iret rol (bad) adcb mov add (bad) repz push sbb dec adc sbb fild std lods rol sub push jns in sub ds mov inc sbb iret push fisttp outsb gs js daa (bad) lret rcl cld (bad) or leave sbb adc dec push push enter pop push xchg cmp lret xchg shrb fstps and mov enter lods and out xor and cmp and inc lcall sub lods (bad) hlt movsb (bad) and lret rclb jg (bad) lock fmulp lret mov cmc mov inc mov mov and lods mov fwait es cmpsl jb bound pop stos xchg repnz mov sti fldl xchg fs inc mov pop (bad) fs test es push pop leave ja int3 sahf in stc bound lret mov dec sbb add arpl je fistp icebp cs lods jp mov mov mov mov (bad) (bad) sbb add mov and and lods mov and jmp add pusha add bound push mov cmpsb ja jns sbb dec pushf aad jle pop das cmp pop into scas adc pop out mov add and jne xchg call mov mov insb (bad) in rorb rclb xor push outsl int lret xchg into sub loopne repnz ficompl (bad) or jo xchg minps or mov cltd lods insb push sub add xchg icebp mov mov xchg ret pop or cmpsl pop addl mov test xor jl sarb xor (bad) adcb lahf inc xor cmp inc push icebp push fstpt pop fs cli int3 fsubr orl or mov ds sub mov cmp sub and push je ret ss and or adc cmp sbb adc or mov (bad) mov add (bad) xor adc (bad) bound leave sbb cld or dec pop pop insb add mov mov imul dec mov dec push adc sbb jecxz js lods add call fidivr push dec popf (bad) shrl mov fs outsl addr16 mov mov cmpsl push fildl dec pop int pop daa push jle aaa lret lcall jg mov or (bad) or loopne int pop scas cs mov in pop mov scas sub test dec xchg xchg ret pop mov ret xor mov xlat add fs cmp call sbb cltd (bad) clc xchg sbbl dec sub mov push mov cmpsl inc sbb mov sbb ljmp mov es movsl adc dec and out je pushf pushf jbe dec pop xor adc loop ud1 add in mov je fsubp sub insl push pop sub fbld jbe cmp inc and add push push fistpll ljmp xor in loopne mov enter cmp mov arpl sbbl xor test cmpsb out repz cli shll jmp add push aaa push enter aam int3 mov xchg int cmpsl inc repz insl notl loope mov call xorl in out jo xchg incb pop or repnz (bad) cmc imul adc sub sub pop mov mov push lret popf icebp ja cs nop lcall jge,pt or por cmp lahf je cmp xlat fisubl add pop xor nop fdivl push (bad) or push jb pop mov sbb loopne xor jno arpl and mov push inc mov out movl roll or fldt dec (bad) into adc (bad) out pop cmp into mov pop xchg dec pop mov pop mov sub lods mov xchg inc sbb test push lds mov test jbe dec mov inc lods loope sbb pusha insl dec ljmp cmp arpl aad mov dec jl sbb sbb cli push add fldt out fidivrl sbb inc mov jle mov lcall or xor lock jne dec sub (bad) fstps lods jl cmp cmp std mov jl in add jg inc gs int mov jl je add loop sar scas fnstcw dec mov mov ret pushf pop xchg adc pusha push in pop xorl add mov bound jno pusha dec xchg mov ja leave cmp (bad) dec (bad) jge out and inc adc push test pushf push push std or jl out insb fucom jo push loop lcall out enter lds sbb stc dec (bad) jle mov test and (bad) mov and mov ret in cmp mov popa stos (bad) jle pop and xchg push pop aaa pushf and xchg mov dec sub cwtl out fnsave jl mov sub pcmpgtd fs pop mov (bad) inc iret xchg fnstenv leave mov xorl cmpsl push mov scas sbb and sbb xchg addr16 add aaa xchg loop (bad) mov ss dec fsubrs mov mov lea push imul aaa sti (bad) ja cmp inc out mov mov loope cld adc cli push xor mov sub (bad) xchg inc rep or inc shlb mov fst inc rolb scas add or aaa lcall aad dec add xchg mov adc dec rcll pop adc push jns shrb ficompl (bad) or fidivr ljmp dec fwait xchg idiv popf fisttpll jp lods sbb enter (bad) jmp fnstsw dec pop scas out lock test inc or xor xchg dec or add mov std fldl pop sub push add push (bad) dec xor repnz mov decl push dec mov std sbb lock iret jb mov mov push jl and fsubrs pop sbb adc clc dec mov cmp icebp mov xchg mov inc das push pop mov inc mov mov mov movsl dec iret xchg test repnz repnz lds out cld inc jge je jne dec ljmp pop mov mov xchg imul and aam push daa sub (bad) cmp repz sbb pop xchg movsb sub hlt push or rclb imul jns jmp fadd dec mov mov mov cli fsubs push jo stos aad out adc out jno jl test fisubrl push aas adc or ror or mov sarb cmp and jno jnp sbbb add test mov jo pusha pop mov ret shlb lods and sub xor imul sub pop pop cltd out sbb mov sahf jns (bad) lahf mov adc xchg roll cmc inc ror fucom xor fcoms adc (bad) mov jge xchg mov fcoml (bad) mov adc lcall movq xchg out dec push ror jno stos stc gs and push add push xor sub push mov sarl xor stos ds stc jle pop lahf insb mov mov push stos pusha cli sub lcall jae outsb sti sub imul dec or int3 lret js push push bound mov inc mov sbb mov inc idivb fwait gs cli and xchg jno dec sub outsl adc jo mov pushl mov das clc pusha popf sbb (bad) (bad) call gs jno (bad) dec mov scas bnd sti aad jle inc mov cld adc or mov fmuls popa sub mov lea xchg jg mov push jmp cmp mov cmp mov adc bound aaa inc dec jl pusha xorb out mov cmp addl sub jb lret pop adc sub fcoml es repnz mov sbb push daa or jno mov decl icebp or sub jecxz cs arpl pop jmp mov ret jb pop or loopne mov ror cmc out lcall data16 enter out jge mov xor mov gs les jg add cmpsb mov leave push nop into scas xor in fidivr sbb mov fcompl loop jb out daa test scas jae inc mov pop (bad) mov mov sub jae lods rcr inc ja rcrl cmp pop xchg adc lock cmc jo mov mov push pushf movsb add movl hlt mov or xchg push pop dec jp xchg xorl pop xlat xchg std and pop xchg xor clc popa sbb mov add test ljmp out pop jbe dec aad or jb loopne dec popf pusha call add inc sub lret cmp add icebp pop in and or mov push es movsl adc data16 dec xchg jg and jae lret rol push lcall shlb mov in jmp ljmp mov jbe adc mov (bad) fidiv sbb cmp sbb test cwtl or faddl push push mov aad mov cmp nop push jmpw je enter lcall test mov jae scas scas lock (bad) cmpsl xchg xlat xor stos inc popf addr16 cltd pop fadd jno adc (bad) pop add push (bad) mov das push mov inc push lea and ret pop loopne push push out insl xchg xchg neg cmp and data16 mov push add nop mov mov mov (bad) mov cmp daa xchg imul out lds push and ficomp or jbe hlt xor loopne mov add xchg push (bad) mov jge daa mov notl dec (bad) pusha jae pop pop cwtl test imul das (bad) xchg pop inc clc adcl nop dec mov leave sbbl sbb into mov xor add add pushl pushl lea jne xor mov push add jmp jbe fild stos xchg push mov mov fnop dec jne jns push dec test mov or mov ret xchg hlt lret mov or push into jp cli into in pop aad sub out mov xor sbb int3 pusha test rcrb subb or and movsb scas movsb inc mov cmpsb xchg arpl push (bad) fst test pop test pusha out jno fmuls lea mov das jnp mov jecxz inc add cmpsb adc cmp push mov push xchg pop out fcomps mov rcr dec pusha scas add into into xchg adc xchg cmp sbb clc sti mov push dec outsb (bad) xor inc cld bound (bad) xor addr16 jmp adc imul push or push aad jl push push (bad) cli fstl insl rcr in cmc pop (bad) repnz into add out pusha cmpsb insb jnp push add adc and add cmp jle out inc mov (bad) jns roll mov icebp lock sarl lods lahf inc mov (bad) ds out lcall jge inc ljmp mov shl in rolb inc jne test outsb pushf (bad) ljmp bound mov jge das cmp sbb rcr stc add scas popf enter sub stc aas cmpsb dec push subb fadds cmpsb test sbb push adc mov xchg jo pop adc sarb popl scas out push mov xchg pushf dec ljmp shlb and loope jo xchg fstpl pop mov xor hlt das subb bound mul out jbe sbb scas lcall iret cmp movb movzwl shr not bts mov pushf sub jge add cmc cmp clc mov bt bt cmc push test pushf push pushf lea je pusha add jle add clc jmp jmp dec dec inc xor cs dec dec add push fldl jmp and aad hlt repz rclb mov leave jbe adc cs push shlb int3 add nop and pop jmp xchg inc int add addr16 dec dec pusha dec xchg inc int out cmp mov jp pop fiadd mov enter es aas mov adcb lret xor cmc icebp add pusha xchg push xlat call lods push jecxz adc daa fisttpll xchg sbb and fstpl popa cwtl adc fs push push lahf shrb scas sbb fcoms mov xor push mov xor rcll ja push mov jl and pushl jmp stos mov or orl stos addl and xchg or out sti inc inc or fsqrt inc fiadd repz scas (bad) imul pop out pop and mov inc adc fs jecxz into ret and xchg adc ret mov arpl stc push out push cmp mov leave out cmc dec mov int lods and bound mov (bad) or add stos out mov mov daa aaa nop nop subl jo adc cmp push cmp or and aas (bad) dec jle out push addr16 or rcll mov loopne push stc (bad) dec pop pop cwtl and das xchg xor pop (bad) fsts scas cwtl add adc mov add add out pushl lea jmp pop fsubrl sub sbb inc inc nop stc pop (bad) fnstcw cmpsb aaa or rcl test dec stos push cmp push bound das mov push fdivr in mov dec mul out sahf xor dec mov sub (bad) in hlt iret cmpsl jp imul mov sahf cmp scas cltd cmc int3 pop (bad) popf cld xor mov int3 lahf movsl dec add gs and fmul call lods mov xchg xor push jb ret outsb imul (bad) mov pushl lea jne cmc btc rcr mov and add sub btr or mov jmp cmp pusha lea ja pusha imul bt jmp push jmp sub stc lea je cmp pusha pusha movb lea jmp call andl sti mov test aam jnp (bad) out push (bad) int3 ss push lahf inc mov test xchg sub xor aaa pushf cmpsb ljmp jle mov add icebp lock lock insb pop pop jge jns push data16 cmp and in jmp dec in inc es decb mov mov add lret adc xchg inc add xlat (bad) cli outsb sub or dec (bad) inc inc ror out jecxz sbb call pushf (bad) and rorb (bad) bound in repnz push imul arpl out inc imul in cmpsb jno pop jns std pop jns push xchg xor adc dec sbb pop lcall dec xchg cwtl ret je cmpsb test gs cs push nop adc test sub or push xchg insb mov adc or ret out stc flds add dec jge xor cmpsb popf jl mov and mov iret gs sbb lcall jmp dec sti push pmullw addl sub cmp and movsb sbb lock jle aaa mov sub dec mov dec mov xchg and sbb adc out add push jns inc jb gs je imul mov rol cmp test jmp pusha push push lea jae push pushl lea jmp call mov lea jg push xchg jmp bsr dec aas push rol mov bt test push pusha lea je pushf rcr mov shrd sete bts add bsf mov clc test mov lea je stc movsbw movsbw add not mov call push pop and loope (bad) imulb push add push pushf mov in dec xchg jle sub std inc fistpll mov stos sub shl inc sbb xor xchg test arpl cld in enter icebp imul cmp (bad) xor jae out mov stc and cmp js jne test mov sub movsb inc jp dec repz shl out sbb xor out cltd sbb sbb sub fbstp inc dec jl and mov pushf pop fstps mov nop rolb mov jns mov outsl pusha push jge flds xchg scas ds adc jl ret neg pushl pushw popfw call lea pushf bswap pop mov movl lea call jmp pop mov pushf lea call pusha pushf call lea je jmp neg mov jmp lea jl pushf lea jb call mov repnz and lahf aas ret les xor jb push mov adc in cmp jp pop rcrl fstpl pushf xchg js push test pop push enter jo cmp lods mov sub mov rolb mov pop dec xchg cmp ds sti fisttp dec push or inc push lret push or add lock jmp xor pushf fisubrl (bad) pop or push mov pop ds lea pop out (bad) scas popa jns mov jg pop inc fdivr roll ret inc jno sbb scas xchg into cmc pusha jp dec mov push inc mov not pushf mov mov lea pusha lea call pushf adc pusha movb push lea jae pushf lea jne pushf stos pushf movb lea jmp rep call bt bt add stc cmp test mov mov mov test lea call movzwl pushf mov bt pushl cmp add clc push mov call xchg xchg sub mov add mov loop push mov mov or push xchg inc std cmp inc scas cs popa shlb add mov mov xorb lret adc or (bad) icebp (bad) sub lret rolb imul xor pop enter fcompl sub add adc sahf cmp push sahf add inc divb mov outsb xor gs and push xchg (bad) sti inc mov mov stc xlat or xchg xchg sub pop push iret loopne roll repnz cmp xchg lds and test pushf push mov pushf lea jmp lahf call repnz fs inc inc mov shr test jge aam movsl fwait pop ja push dec aad test cmp lret stc subl xchg sbb cmc movsb mov fild inc fnsave cmpsb dec nop fidiv or loopne test mov into lea ja xor lea xlat test mov mov mov cld inc sahf push gs ret aad call jno jmp jle sub adc push fcmovnbe in xchg mov xchg jne cmp out leave in call fdivrp or movb fistl scas nop add fs je not ror inc add test stc cmp sub cmc xadd (bad) repz clc rcr mov inc clc bts setne add or add pusha mov jmp test aas test mov cmpl (bad) cmp clc call jle mov add sub cld dec mov mov fstl mov cmp in add mov in pop (bad) mov and mov sub iret imul sahf and imul push in or cmp (bad) out cmp pop add shr xor insb jae jmp mov outsb sub roll sbb or cmp inc mov sarb xor xchg fwait pop loope stc out inc fcompl xchg mov das scas sub shrb inc mov cld (bad) fsubp loope fmull sti adc cmp fdiv push cmc sub call movl pusha jmp mov pushf pushf mov movl sete pusha cwtl lea jmp cmp movw movb pusha movb pushl ret jle mov push pushf pusha lea jmp stc test bt mov cmp jmp push (bad) shrl bsr jecxz test jno dec test lcall ret pop test out hlt dec mov lds cmpsl xor enter rolb (bad) mov pop scas cmp xchg pop inc jb push lods je jl negl aad (bad) xchg mov dec mov push sahf inc cmpsb popf lds loope vmovntps mov cmp sub int3 pop mov sbb cld stc insb sbb outsb ljmp or nop mov fldcw cmp xor scas pusha adc push xor cmp mov ljmp test sbb dec sbb rcll push xchg mov sti inc iret push clc dec mov adc out ljmp mov push lods call out dec fwait cltd pop fs mov jns mov out loope shl idivb loope and std xlat int jne addb aam cwtl insb mov adc cwtl jbe iret jle andl popa push (bad) dec stc aas fisubrl ret cmpsl mov jae out inc nop dec pop jp (bad) cmp jo jb jg mov push adc and fcomps mov bt cmc push repnz jmp rolb mov push pushf adc call push cmp fstpl jnp pop int3 xor xchg xor or js push inc push mov into dec scas jge inc clc aad fldl mov jo scas nop push mov mov aam addl ret push xor sub fsub pop pop adc popa sub jno jg cmp dec test test loop outsb je push push adc cli dec (bad) xor aaa mov sbbl loope push ja jbe popa addl push jb push mov pop cmpsl inc adc mov pushf push not movb jmp push mov push pop in rcrb aas imul stc (bad) jmp mov out or int cmp sbb fild mov out pop lahf or rcr cld fdivs jl push popf stos dec rcrl lret sbb icebp xchg jo jmp mov cmp imul jmp sarl inc push test adc push adc sub cli pop lods push dec andl push push rorl adc pop or cmc dec sarl arpl pop jns stc icebp aam lret xlat dec shl leave pop popf xlat aam push leave frndint add adc in js fistp push (bad) sti stos push jl cmp icebp lret cmpsb or adc inc mov out notb stos popf mov scas in adc out bound mov call faddl inc mov pop outsb xchg cmp hlt pop test adc pop push mov cmpxchg mov repz push lods lahf imul sbb imul inc std xor out push jb jno ss bnd (bad) adc stos (bad) mov test push imul sbb sti sub clc (bad) incl add je gs inc insb imul and push call jmp (bad) push sub enter dec dec sti stos incb nop push shll mov std pop lcall xchg push scas xor xor pop lahf push adc inc mov movsl dec jno outsl ss lods das std in inc pop jg out dec pop insl js movsb push pop sahf int std icebp test (bad) out push xchg adc push fs and rcll les lcall loope dec (bad) push in cmc jmp xor outsl inc popa (bad) fldl jge xor pop mov adc shll adc push je in and pop lods aad scas mov push add in test jbe or fldt iret sti or jb roll cltd inc adc mov iret fmull jle sarb add inc lods (bad) push iret int3 fnstcw (bad) insb mov cmp clc dec test inc cmpsl xchg and jg lds popf or push lahf xor jge shl mov ret std orb sub mov andl fisubrl inc incb sub and (bad) mov inc jne dec addr16 pusha jnp adc sub (bad) mov outsl iret lcall mov pop mov decl out jmp je outsl push inc xchg jmp sub dec mov aad outsl dec ja setnp not pusha inc inc lea call movw push pusha lea jne shld mov bt pushf movb or pusha lea jb pusha pushf lea je movsbw xchg lea lea pushf xchg movzwl lea movzbw not lea pusha mov jmp ljmp and stos cmp rcll jo test iret jno sub out push nop cmp jg jo mov xchg pcmpgtd ret lcall push (bad) repnz imul adc and sbb pop insl lods cmc aaa adc xchg andb push mov cli (bad) adc xor fldl dec push loope inc pop jl add repnz fnstsw jb lods mov mov sbb int sarl pop insb outsl xchg ss mov mov push jbe jge dec pop jg push mov scas mov adc sub test test add inc or xor lea jmp fwait dec outsl ret pop test das lea adc mov mov cmc fistpl or les ds in adc aas cmpsb mov xlat push outsl imul sub mov jmp mov push lret sbb les aam lcall push fdiv inc mov das mov sbb push mov or je xchg xor faddl dec lahf lock in clc insl mov ljmp jmp adc mov arpl jns aad pop adc popa jnp in stc clc (bad) jmp jne and mov out sub pop lahf xchg pop push (bad) cmp iret inc adc movsb adc test add loop,pn xchg add cmp cmc aaa mov sub pop jp mulb ja es faddl cltd mov movsb lea std dec in inc out or dec mov fucomi push adc lds into movsl stc jg insl js out imul sbb icebp sbb jo sbb fwait inc push fild xchg out push jns in scas pop ljmp cmpb mov xchg popf push or leave fistl scas xchg sbb ja fs call cmp test pusha mov sub push movb push lea jne pushf pushf pusha pushf lea call pusha pushf push lea jmp call call pusha pusha adc mov mov mov lea jmp movl pushf pusha push lea jmp mov mov add mov mov xor mov pop sub jno and insl je mov inc fstps push sub push jae sbb gs mov push pop arpl add add cmpsb push cmpsb lcall or test loopne stos dec test mov notl das adc inc imul jge push je or mov mov ret repz int adc push cmp icebp cmp jp sub jl imul mov aas jo dec sti loopne jae std mov lods sub lahf sbb adc jge addr16 xor cwtl inc jl popf dec mov and insb mov mov mov push jno jmp mov enter add aad cli cmp ficom ja mov idivl xchg pop cmp insl imul data16 loop and xchg movsl imul loopne test and cmpsb push dec ficom lods test jns insb mov movsl popa jnp lahf fisubr js sarl rcr icebp jnp imul adc (bad) cmc or or fsub out stc fdivrl jo aam xlat xlat and pushf iret es dec jecxz cld sti add loop mov cmp cmp xchg push pop out mov aad mov adc loop test imul loop xchg push (bad) out cli iret movsb inc (bad) dec mov mov fild dec test mov add (bad) sub in pop sub shr mov test sbb repz clc stos and mov divl pushf xchg insl enter inc movb sub shll cmc or lret cmp test jle mov mov aaa cli mov sbb leave add add cmp test mov dec or jecxz fdivrp dec addl aaa test scas test fs je call movw mov pusha test mov sub mov pushl jmp lea ja push lea jb clc pusha cmpb pushf lea jne btc stc bts mov bt clc jmp lea jae sub sar btr inc mov call lea push movb call pusha push lea call jmp jmp mov call jmp movsbw pusha mov cwtl push lea jmp movsb test xor jmp ljmp aaa stc clc push xchg pop dec cmc loop add sti inc rcll mov or mov leave push lea add les jmp in out push xchg pop pop es inc stos cmpsb jo dec cld jbe sub and shlb icebp mov (bad) xchg fisubrl into repz iret loope inc lods dec mov cmpsl (bad) xor ficoml mov ds insb fidivl mov mov mov mov addr16 mov sbb fdiv mov sub pop aaa mov lcall jb pop in mov add mov sub imul insl push pop jge dec gs call lcall jne cld pop in mov scas jg sti cli into inc mov pop bound push addl sub xor pusha neg clc sub push movb rol jmp movl pusha push jmp call pusha call pusha push lea jne movsbw push pusha mov pushf pushl lea jmp lahf ss xchg lds ss clc pop in or push in or shl fistp xchg repz adc mov out ljmp out cs add xchg test push stos xor xlat das xchg dec out scas sbbl scas mov sub ss jnp pushf xorb sub mov jle xchg aaa lahf adcb pop xchg stc std mov inc loopne jo cltd sbb dec and push aaa in inc xchg in cwtl mov mov inc (bad) push mov mov outsl mov push jg sbb fisubl jl inc jns or xchg push pop jp gs scas xorb inc movw pusha lea ja pusha pushf call lea mov sti stos lahf mov dec xchg jae mov mov and in xor xor bound lods adc mov and push sub dec mov mov fbld fucomp loope sub ljmp out push and push pop out jno out fsubrp mov dec and (bad) ja aas add loopne pop cwtl cmpsb dec fistpl enter and mov add adc add sbb rclb or pop fdivl ja xchg add jae outsb pop jns decl jnp jb push lods add mov out push jle pushf and fbld sub ret (bad) outsb js rcrb nop inc fwait pop xchg push roll popf outsl jbe (bad) in mov inc xchg xchg ret test cmpsb cltd xchg movups in scas xor fsubrs sti stc cvtps2pi (bad) fisubrl into push pop pop add mov fbstp sbb ljmp xchg (bad) in out and sub loope sub sbb popa popf enter lods loope mov aad push xor out cmpsl mov lock test aaa or cli out sbb lret addr16 xchg sbb out sahf into movsl push into jmp cmp sbb mov ss scas incb call add push jb outsb jae popa je inc arpl insb gs je jb add pop std std mov xchg insb pop mov ret jns cld sbb (bad) out or mov pop daa ss sub (bad) jge jns icebp cwtl dec dec xor aam push rolb (bad) adc test mov into lods add movsb inc cmpsb adcl xchg push push stos aam mov lret bound lock fmull or (bad) mov aam nop test outsl mov in hlt pop cltd jnp mov xor xorl test popa cltd fwait sub (bad) int3 pusha cmpsb sbb sbb and cmp (bad) aam push push pushf xor and call insl xor push mov inc mov push int3 in sbb mov fnop cli mov inc mov (bad) fucomi push mov xchg cmpsl movups in and add mov mov xchg sub int3 das cmpb js push mov cwtl hlt cs clc pop adc xor mov xor pop and mov lea jmp jmp push lea je call push mov movb movw pushl ret cmpb call push lock std std test xchg arpl mov ret jl sbb lea outsl jno mov pop cmp xor imull dec jge jns mov and aam pop leave add jecxz and addr16 fisubr add add xchg mov scas xchg and xchg test and lock fmuls (bad) sbb sub repz repnz sti jl cmp xchg sahf inc fisttpl (bad) xor (bad) pop mov sbb int3 ret inc dec inc or xchg mov push mov es lcall pop (bad) cmp push cwtl daa jne pop mull sub adc pop mov mov cmpsl ljmp mov ljmp out rorb push sub adc cmp sub mov or scas xor mov das xchg xor shl loope popa jge scas rolb jae adc arpl test in (bad) (bad) call pushf movb pushl popl push pushl ret add sbb push xchg and mov sti mov sbb mov sbb cs jo mov mov mov sbb xor ja (bad) shrl inc jno sbb fnstsw cmc bound fld1 mov mov jle mov inc fcmove aam jne jne push pop test inc in frstor jnp xor xchg xor out hlt pop nop imul mov xor mov add andb pop mov movd mov mov cmpsl and stos push jne sbb or mov mov push arpl scas std jnp mov incl push pushl call call sets mov pusha cmpb push lea jne das xor call dec jecxz dec out mov rclb cmp (bad) xor mov xor (bad) push xchg xor mov not adc in fimul mov inc sub test loopne icebp sbb push (bad) stos sub addr16 xchg inc lock jmp inc lods adcl jb pop ret push stc (bad) outsb arpl jbe dec xchg neg lock jne push inc ret sti outsb test das (bad) or psrad dec dec jbe cli (bad) inc jge in imul movl pop or fist scas cli pop scas mov xchg mov lods sub scas pop cmp fdiv pop fldl cmp xchg jmp jmp aaa jge movb push add cli (bad) or mov movsl cmp mov pop push mov not out cmpsb popf push insb out push add xor jo test adc ljmp sti fisub test hlt cmp adc lods lea je cmc test call cli jmp mov mov push dec cmc negb xor lods and push and adc mov inc inc xorl push fbstp jne dec jns lock ret mov sbb enter dec (bad) mov ret add push add cli xor clc jp loop sbb jmp idivb enter pop jae insl xchg in (bad) jae test fnop rcll push pop fistpl mov pop push jo jae pop fldl2e cmp imul ljmp jle ret and repz dec sbb rcl jl jecxz pop int3 sub repnz lcall or movsb xchg cltd out push xor dec repnz lods ja or mov lcall push mov and repz push outsl aaa (bad) js mov push popaw orl enter and dec push aam pop jno js iret lret push das mov test mov push push popa popa sub sub xchg add ret sbb scas push cwtl add adc (bad) ljmp iret add push mov add xor scas clc xorl xchg mov not not pushf pushf lods stc movb stc xor clc cmc neg pusha call xchg inc pop in mov mov imul mov and andl int sub les cltd adc popa mov push fldt jle pop (bad) xor jecxz mov dec mov popf mov pop scas (bad) fidiv sbb and aam cmc cmp ljmp (bad) in add les sbb sbb inc lods sub bound in fldl gs pop fsubrs ret cmp fs clc outsb out inc fwait idivb jbe out fldenv pop pop jl jae push shl not cmc rcr xchg mov push mov xor pop fistp push sub push lock (bad) dec mov fcoms scas stc xor fildll jno xlat lea ja pusha test stc and sub xor bswap add add bsf mov rcr mov pusha repnz pusha call lret fiadd xor into pop mov cmpsb dec dec hlt fnstcw incb movsl dec dec loopne outsl in xchg test das add mov ret adc xchg inc adcl outsw mov dec es jne iret lcall movsb xor rcr mov scas or andl xchg mov ss push mov cmp ret fbld test cmp xor (bad) lods push add mov xchg lock das push (bad) sbb pop push shrb pop sahf lods mov stos dec mov call pop push pop mov lret jmp cmp inc xchg pop std sti dec cli sbb adc cs out fnstenv out inc pop xchg js xchg and mulb in iret out dec pop cmp pop adc stos dec mov cmpsb je (bad) out dec pop outsb push out sub xchg dec lea lea add out dec pop icebp xchg push xchg aas test int3 dec mov test lds add adc les jbe ficompl mov adcl lock cmp sbb sbb sbb dec out jnp mov les or adc add jne sarb out adc sarb test (bad) fdivrs sub pop pop fisubr pmullw out cli add fsubrp cmc std dec test movsb inc mov roll push xchg cmp lods cs movb pop push movsb sub in cmp sub sub adc and out bound mov out adc and or jns or sahf mov sbb pusha bound fs out cmp sbb dec inc adc out dec pop sbb cs or insl js pop inc out pop pop sahf jae aas pop push mull (bad) and imul adc repnz push arpl xlat inc les adc pop (bad) pop jl jmp nop imul adc mov xchg mov rorb push or sub jne mov pop popa test and fucomp in cli je jp scas hlt pusha (bad) fisubrl setbe and shld bt mov sbb add mov rcr push mov cmc test pusha mov call pushf jmp push lea jb pusha clc cmc test cmpb jmp push in xor stos push or ss hlt pop int3 sub cmpsb test pop (bad) cs or dec sahf pop add addr16 adc push and call adc xor popa ds mov stos sbb sti mov aaa add popl jmp push popa sub push mov fistpll outsb sub arpl jne xchg xor cmpsb fisub dec movsb lds fnstcw push mov stos mov mov outsl sub in aad add or (bad) icebp push insl mov in adc inc dec fisubl xchg test fcmovnbe (bad) out push or mov int3 sti (bad) aaa mov and rcll scas cmc insb xchg (bad) and sbb sub call mov mov pop mov rorb pop add les imul adc fistl (bad) popa mov add cmc pop or inc enter jo jp cmp mov ss xchg mov or andl int mov sub pop jg out push or sbb add cmpsb lods stos mov (bad) aad (bad) pop jnp fst repnz clc aas jo inc aas rol jecxz scas repnz rclb movsb scas jge (bad) out inc fmul cwtl cmpsb dec mov inc mov sub sbb leave pop xchg xor pop lahf hlt mov dec pop scas xor fisub and xor adc lret xchg or mov inc jbe dec mov sbb fadd or out push or (bad) push jmp pop xchg stc cmp ret pop and mov sbb (bad) in not push leave dec jns fcoml scas repnz push mov cwtl movzbl movzbl mov jmp movb lea jne pusha bsf pop sub setg cmp mov ror shl shl add dec cmc bt mov cmc bt test pusha pushf pushf lea je test clc clc sub clc stc stc call add inc gs gs imul pushfw popw pushf dec jmp cmp test jmp clc ror shr sub movzbw lea pushf bswap mov movsbw mov pop pusha pop pop mov call mov xor xor fsin inc inc clc dec xchg jg ror fnstcw xor sbb lea rep test inc dec cs aam and cmp iret push lock push jge inc je fstp or cli adc ret cmp jb jge pop jp (bad) and into adc lods call cmp leave or sbb mov fs push xor addr16 out push mov pop mov loope inc push jb ljmp push sahf push in ds push divps cmp mov repnz movsl sbb cmp pop pop jns push lock dec mov aad leave ficompl jmp movb pushl pusha pushl ret jmp jmp movl push mov mov mov pushl pushf pushl ret call lea call pusha pusha adc call pusha lea jne movzbw mov mov mov pusha pusha movb lea jmp jmp call pusha pushl push mov pusha lea jmp inc nop jbe lret sub sbb pop in mov negl loope pop xlat push or push nop and jo sub frstor cmp outsl ret dec sbb mov and aaa (bad) clc dec cmpsb pop and dec pop pop push sub mov out push cmovle adc xor add fcoms lret sub pop mov lahf dec add into xchg or fist (bad) iret lcall jb (bad) fucomip cmp adc nop stc add test pusha mov clc stc cmp test mov call adc icebp lock pop xchg mov jne xchg sahf jne sbb lret xchg pop ficompl sti cli arpl push aad push push (bad) jmp clc pop mov mov and (bad) mov jb mov int mov and xor pop jmp inc pop in je ret (bad) jo rclb xor mov pop stos (bad) push xchg jle,pt mov fnsave popf cmpsl pop xchg sti sbb leave sub rcrl add (bad) call enter into or jmp add pop or aad ret movb cmp sub add adc shr adcl out mov js bt mov pushf pushf clc cmp pushf lea ja pushf lea jb stc pusha bt cmp call lea jne sub movzbw mov bt sub clc mov test sub cmc stc cmp pushl pusha jmp lea pushf movl mov pushl popl mov pushl ret lea jne movzbw sbb mov shld bsf movzbw sub shld test or stc mov call movb cwtl pushl push mov movzbl lea pusha jmp enter cs jne sbb pop out pop fwait sbb xchg mov sbb sbb faddl jge pop add pop (bad) in push (bad) mov cmp leave and push xchg pusha jle cwtl dec hlt neg cmp add js push out ret mov push push cld call add es add das out push pop or nop sbb and cli inc adc aam jle dec js in add dec xchg out cli fldl (bad) repnz adc add jbe add pushl popl pushf pushf push pushf pushl ret call pusha lea je lea lea movzbw lea movzwl mov mov lea bswap mov mov pushf call lea jbe xor sub sar mov cmc mov shr xadd bts and add pusha inc xchg shr bts xadd add shr mov test pushf add call jmp add add cmc cmp pusha lea jb stc cmp cmp pusha jmp pushf pusha lea call call movb ror pushl pushf add pushf pushf bt neg clc shr movw pushf mov jmp pusha movl call (bad) add sub (bad) cmp mov xlat xor push dec pusha (bad) lock les mov lret pop sbb inc outsb jp ficom push cld lcall xchg push popa hlt push sbb pop shrl jmp jae lret or jns xchg xchg cmpsb nop push movsb inc vpunpckhbw inc inc dec out xor notb mov and xor add pushf push out inc add and xchg out xor inc add mov sub daa int mov and rorl addr16 fcomps bound pop lock fcmovnbe ss out push imul cmpb es in inc jns jecxz pop mov dec add xor icebp loope mov arpl ja mov es add sbb dec add cs (bad) xchg pop and out pop add push out cmp or inc mov or xor cmp xchg out push add jecxz xchg out cmp js pop out pop stos xor pop add cli cltd mov sub or inc iret adc sub add pop cwtl and out push or test mov out sub test inc lock push out inc add xor xchg add mov jp lds imul push add into xchg out jne loopne mov hlt fsubr add in add fwait sbb cli xor or or leave cmp sub arpl arpl aaa cltd cmp out or or out sub jg out pop add fimul xor sti (bad) and subl cwtl inc iret push movb scas push addb adc imul jb enter pop ljmp push gs and out in inc jno dec cmp ljmp faddl sub scas jmp mov fs jne rol mov jmp rcl clc setbe rol mov pushf cmc jmp push push xor xor inc dec dec add (bad) push call lea je push mov lea jmp not mov setl lods pusha not push movw inc call push call push test pushf lea je test clc call lea jne lea cwtl bswap movb sets not push pusha lea call movw lea ja pushf push jmp movl movzbw call add inc gs gs inc imul rorb sti pushl movzbl movzwl not not lea call inc lea or xchg cmc xchg push mov cmc add mov lea push cmc call movb jmp jmp in sti inc mov dec xorl (bad) cmpl sbb into dec scas mov mov loop inc jb or loopne sahf push mov fdivl cld rcll rcrb fs mov pushf sub xchg movsb out cmpsb in stos fsts fstps scas dec incl jecxz test fcomps and das or push loope mov inc jl and sbb push push lea fdivr jo cli in pop push pop jl cmp or ficomp (bad) and lds sub cmpsb mov repz pop jg loope test push adc pop stc movb lret aam mov xor pop test movsb inc jg test out fs and sub jno movl outsb adc dec fsts mov mov cld mov clc add push lret and sbb mov mul add push pop push mov add or mov add out scas out mov jge pusha sbb ret jnp ficompl daa xor mov cmp add adc cmp ret cmp popa fs dec lret push pusha xbegin or mov and push sbb push rorl cmp jo dec test les jge sar fcmovu stc push insl popa fs xor scas out fs iret push sub dec xchg cmp cmp sub push fwait pop jae aas cmpsb xor scas cmp movsl ja outsb data16 fdivrl mov inc out push lods xor js leave repnz adc out push jle leave mov (bad) mov aad ret add add (bad) dec les push pop das cmpsl movups leave pop jg in pusha lcall scas daa dec cmp (bad) xchg push mov pushfw (bad) add inc orl push xchg adcl shll add cmp mov stos les inc fwait pop mov out mov dec fwait dec enter clc or xor stos mov movsb test jo add mov mov mov pop lods (bad) dec adc or movsl and xor sbb addr16 fisubr add cmpsb test add stos mov mov xorl (bad) icebp xor and fdivrs in fs xor leave xchg pop pop popf push mov leave scas push push daa js aas negb push add pop out fdiv dec jl or push orl sbb loop mov sub push cmp callw mov cld fild ret out dec fs or add mov imul lds hlt repz xor pusha mov pop sbb out nop pop sub lock cmp (bad) aad xchg push gs jo jg shrb sub out dec mov xchg inc shl mov jmp into xchg lods push je push out push negb out dec pop lret and clc jle jmp popf cmp mov jb push adc aad out push fnstsw or sarb mov test scas sub and push lahf inc es out dec push repz sbb pusha push or loopne ret fcomp repz and xchg shl mov sub dec push ret fldcw xchg and (bad) jno add out cmp daa mov mov cwtl xor (bad) xchg pop arpl sbb pop fild jge xchg dec (bad) sahf pop mov scas in push xorb pop aas loope lock in dec inc and sub add add adc add adc add cmp fidiv xor ss add and insl adc mov (bad) (bad) bnd in xor xchg lods adc push shlb fistl sbb icebp dec inc iret pop xchg xor insb pop mov cld ljmp ret (bad) out mov cs xchg mov adc push in (bad) jg (bad) mov mov outsl insl push jecxz icebp push adc pushf in pop push dec cmp jno lock push pop ss (bad) loop fbld fwait mov adc data16 push fildll in push xchg fnop mov das popa in mov and fiadd out mov ja jmp xor (bad) pop mov push jl repz pop jl lahf adc data16 pop mov xor ja jno push (bad) adc cli adc jo in mov mov and xor fistpl iret stos jg repnz adc fscale pop adc jecxz xorl and out (bad) scas mov mov push insl jmp test xchg xchg jg insl adc mov jl in mov dec xchg sub sub (bad) mov xchg and rep xchg outsl jmp and subb fmuls mov cltd out pop jecxz dec ds popl and dec imul and fcomi imull addr16 jns mov inc das lahf adc mov xor icebp sbb into addr16 add out scas mov and push andb xlat lock xchg or aaa es add xor out mov ja add (bad) outsb cli scas lock nop xor mov andl shll imul add popa sub add popf ja sahf jge dec xor ljmp icebp mov jno scas mov adc xchg jecxz sbb les (bad) out cmp std imul in push mov add add inc push or loopne adc sbb fldenv mov test into in aaa stc pusha lock push arpl dec xor adc imul repz mov mov test mov (bad) imull xor test mov add into pop mov and fwait ja icebp mov and incl jecxz data16 mov inc add nop scas xor aas mov and popa xor push lock sub movsl push loopne pushf or mov add sub and into hlt out outsl xchg nop fs and pop arpl out and scas mov push fcomps xchg mov aaa cmp adc inc mov mov imul mov movsb inc stos pop daa pusha movsl xlat addr16 xchg addr16 orl and xchg push lahf jp mov push (bad) adc sbb je (bad) out xchg mov popa (bad) jg out cmp clc dec jae or add (bad) gs addr16 jmp in in adcb jo push imul xchg jae pusha outsl mov push xchg std fstps xchg xchg mov lcallw out adc adc inc data16 clc repz cmp hlt add xchg and ret aam jle dec sub mov jo xor out cmp cmpsb mov xor stos xchg les adc dec std pusha nop iret loop mov dec ljmp test ja mov and add xchg cmp inc mov dec xchg or lea or ja out cmp lahf int3 jnp inc scas (bad) lcall sub insl icebp into inc lahf dec andl arpl stos orl pop jne es outsl out jns xor imul push in pushf aas movsb mov sti pop xchg pop adc das scas xor jle lcall ret jl in enter aas mov insl add cmp fwait mov mov sbb testl addl xchg adcl push or cmp sbb mov scas in inc leave dec negl (bad) insl dec sti cmp xlat mov call pop mov pop test mov mov push xchg aaa xchg inc adc pop inc (bad) mov push andb adc mov sub daa imul xor outsl and jg bnd xor lock arpl xor sarl adc and rclb and inc jmp scas int nop mov aas mov cld adc add inc loope outsb aaa outsl mov addr16 xor push adc loope aaa outsl add addr16 outsb arpl aaa xor lock adc xor adc repnz xor outsl and mov adc push lods xlat lahf xchg bound add xchg cmp lds loopne adc test int3 out ja and push stos inc ds add jle mov xor inc push mov push xchg cmp mov adc inc shrl insl dec (bad) (bad) mov int cmp outsb loope fiadd mov lock xchg adc (bad) adc push movsl das mov testb in xor mov (bad) xor fs cmp xchg mov and and inc xchg std jle fs in cld movsb shl mov aaa inc sbb out xorl (bad) and mov xchg leave scas cmpsb inc mov cmpsl scas add lret and add fisubrl xchg adc data16 dec jns cwtl pop and mov and jle push scas mov mov jnp repz sub or add adcb mov repz push add cmp (bad) jo in imull sub add add xor addr16 movsl (bad) test push aaa mov adc aas daa bound out and push dec test adc pop imul mov ret pop sub push gs test bound adc xchg pop mov call push lahf enter insb sbb push or xchg xchg push outsb sub ds jns insb lea movsl xor mov add iret scas adc adc rclb inc out out cltd mov push cwtl and jge rorb and es (bad) adc insl and rorl and jae jecxz inc imul call pop sahf mov mov push mov add stos gs add adc stos pop adc movsl sub shl and or inc cli insb js pop jno inc inc xchg adc sub lea sub popa popf clc add push orb in testl xor add bound outsl xlat sub push lods pop inc push fs mov xchg pushl loop cmp loope mov inc xor test dec sbb nop sbbb push add sbb inc divb insl xor inc mov mov lret cld sbb pop jo jl sarl sti (bad) pushl or lcall xor mov cmp push add mov (bad) jge xchg xchg xchg dec cmp pop cmp push imul or jle sub fdivrs imul mov mov mov insl xor aas and add push pop js mov cmp por movsl sbb sub mov sti sti mov pop xchg insl es pop jecxz repnz and jne jo jge mov lahf mov jns dec jmp call in stos movsb cmp call xor inc (bad) adc mov inc outsl pop mov jne and cs mov sahf jnp and out sarl mov xor je mov add adc into and lods xor arpl jmp push mov outsl pop push jo dec jo shrl or stos fmull mov mov cmp cmpsl outsl xor shlb popa xchg mov out xor add rclb adc mov enter scas cmp pop mov scas dec mov xor ljmp push jnp sub jae mov mov aas or bound push mov xor dec test cmpsb mov inc fwait loop mov pop loope and mov mov incl std sub jp sbb insl xchg push cwtl imul cmp popa add ret or rcrl addr16 addr16 jnp and or add in mov popf shlb sub bound outsl into andl xchg or mov movsb mov sbb cmp pop jne push or fwait mov adc pop inc insl in inc mov xor add sub cld xchg loopne jmp or add outsl stos daa add incl loop iret ja repnz enter mov rolb icebp (bad) mov mov add push push jne popa sbb sub popf outsl xchg cmp sub ret aas add jne add xor add fbld xchg sub push jne add (bad) and xchg decl outsl sbb inc in jecxz fildll fiadd and leave (bad) push or mov add add int3 scas ja scas and inc repz add dec xor mov das sarl arpl movsl push int popa pop inc cli xchg icebp ljmp addr16 aaa icebp jnp sub mov movsb mov ja fstl mov xchg imul mov ret (bad) dec popa out enter add shll dec ja xor jle adc xor cmp xor popf test add inc add sbb or adc jns int lret jae add jg xor andl cmp loope add xor mov fistpl mov out test and mov dec scas jo testl and rcll jge out ds fisttp mov out (bad) pop out into ljmp dec mov ret int3 ds sbb into push jne pop sbb jns cmpsl (bad) push mov pop sub dec sahf jo jge pop test lods or idivl jo addl jge xchg sub cwtl icebp dec outsl jecxz mov dec das in out push xchg popa jge ss inc jl iret xlat pop popa daa into pop cmp cmp lock xor cld pop xor xchg cmpb mov cwtl dec (bad) adc daa repz inc aam inc (bad) js jge stos mov lods loop aam (bad) dec test mov (bad) ljmp outsl push lea mov repz push test xlat sub (bad) push cmp ret test xor pop aaa fcmovnbe movsb addr16 in enter fcompl dec pop inc gs pushf (bad) jbe incl pop (bad) test and fist je rcrb mov mov push (bad) in repz das mov lret test mov rorl sub sub adc mov loope pop xchg jne aas clc mov cmp icebp and stos add (bad) inc out (bad) xor xchg xchg in jg xor bound insl aam jne push aaa andl (bad) gs xchg popw icebp cli inc test jns sti mov in mov out (bad) or loope cmp out jno (bad) jno lock in dec fildl or ret imul aaa loopne inc sub (bad) mov pop add dec out out daa or sub test mov and pop inc mov das mulps sbb adc mull push xor push inc imul loopne jo adcb add cmp cld out fiadd add repz outsl pop out xchg movzwl jecxz pop push mov aas daa ljmp outsl xor out out ljmp add mov mov inc rorb and das mov popa lea arpl pop jecxz aad push pop xor repnz bound dec adc jno adc pop mov idivb je xchg pop aas roll pop pop (bad) pop shll das rolb pop insl test pop pop outsb fidivr loop jp aas pop pop popf insl cmp inc popf adc push jno sub (bad) (bad) iret movsl daa in icebp es scas data16 adc or ficomp and lods loope jno lea out sti int xor ljmp dec seta adc and adc xor sbb insl pop and adc sbb ficom outsl popf stos lock mov (bad) cmpsb xor insl repnz pavgw sti and pop scas dec sub (bad) add xlat bswap das insl and pushf sbb ficom ficomp (bad) out fimul pop mov lock std ret jnp mov sahf in jle push push sub xchg mov jge dec nop rcll cmp testb outsl hlt sub (bad) cwtl and and jl mov and lods lcall push cltd insl stos push jae scas mov cmpsl ret sbb mov loop xchg test aam sbb xchg mov ljmp (bad) ljmp es sbb lahf mov push jg call loop mov pusha push test addr16 sbb pop jle icebp and scas and mov ja jp and pop (bad) scas add cmpsb scas adc fnstsw in pop sbbb (bad) dec fldcw ss pop arpl jmp loopne leave or push push fisttpl movsb jl scas ljmp out push pusha pop loop fisub iret imul test and or add xor push dec push mov jg mov xorb sahf lret outsl divb into sbb pop push (bad) lock mov dec ja mov popf repnz cmp (bad) add (bad) aaa jno (bad) pop ss insl (bad) jae icebp xchg (bad) mov dec aam je out mov xor (bad) jmp add cmp ss fcoml push add scas jp loop xor dec outsl mov inc gs push je sbb dec and adc es outsb add (bad) outsl mov push xchg xchg sbb (bad) iret outsl scas jmp loop mov push loop and outsl and push fs and movsb or jg aam mov xlat data16 mov push fiadd sahf push aaa fidiv in aam and in cmpsl and pop outsl loope xor popa fs mov mov jl and dec adc inc push cltd mov lods pop sub dec push pushf insl sub js dec dec rcll adc inc das jo or mov test jno jo push ss mov xor add pop cmpsb cli out pop push push jne jb dec ret aad adc ss and es iret jmp loope js jge lahf mov arpl xchg clc xchg out or and aaa push insl aam xchg or lret lock fcomip pop push loope sub ljmp fwait mov ljmp jg ljmp scas out push push je imul imul and int3 je bound fs xchg mov inc jecxz sbb add fadds lahf push xor mov fidiv push jne cmp push xchg lret imull xchg adc jbe nop lods out jl or std mov adc mov mov and lahf lock hlt loopne and sbb mov cmpsl arpl scas jo fs les scas xor lock inc loope out xchg inc stos sbb insl ret (bad) icebp add es push adc add xchg mov nop test sub pop mov pop sbb lret mov imul (bad) and (bad) imulb mov (bad) out jge mov lods jecxz (bad) mov repz loop push adcb iret add outsb xchg dec out addr16 pop int push or mov fs jmp xlat das xor push test imul sbb push ljmp test add idiv loop xchg imul jg repz popf pop add xor outsb repz adc mov adc xchg sarl xor (bad) lock sbb or sarl xchg aaa adc or pop xor and push arpl loopne int lcall pushf aaa adc xchg sahf cmp in cmp cmp cli cltd sub sbb push push xorl mov daa lret push in and and add sub ja cli das das mov sbb or jb mov mov mov and mov popf (bad) xchg scas lea jmp xchg dec (bad) ljmp lret pop and or add sbbl lret or fucomi fs jbe inc aas pop ret addb loop sarl inc cmpsl dec inc popf jecxz loopne inc (bad) nop adc inc loopne xchg into mov rclb icebp pop mov xchg outsb xchg fisttpl lods mov (bad) adc cmp ja and ja out packuswb dec xor mov daa insl and xlat push daa cmp sbb ret repz or xor nop (bad) push leave jno in or add jmp fild and std jg or das mov mov lods mov cmp out mov mov test pop dec pop aas out jecxz repz cmpsl fldt mov loopne fs sti in pop in in inc adc negb stos pop pop push out sarb push pushl dec jbe call scas add push repnz movsb jo adc inc xadd dec das inc scas add mov jecxz jecxz add sub sbb push cli sbbl outsl jge lahf jmp scas add out imul push mov xor xchg es sub sbb movsl prefetchw addl add add xor fcoml dec pop inc xor sbb insl sub repz or push fidivr push pop sbb cld repz jbe outsl add inc out daa inc cmp addl scas movsl mov xlat aad and bound loop es imul in push fist bswap nop outsl (bad) push outsl daa ds nop pop je outsl test cmc or jns and add les aaa xor inc sti xor fimull inc fsts lret and sub (bad) mov sbb das ss jle add loopne out scas fs mov aaa lods sarb je push push jo in cmpsl mull jg (bad) aaa jne pop xchg (bad) insl mov (bad) add mov imul dec xchg push stc std or scas ja neg rcrb repnz andl ret adc or and fidivr xchg xchg scas dec xor add adc add (bad) push jecxz cmpsl rcrl shlb mov mov pop outsl mov out add inc outsl aad xor and mov pop scas mov jno popa mov and (bad) in dec jb adc jg (bad) and mov cs ja inc scas cld lcall jo inc dec push add iret xor (bad) ja mov inc xchg sub xlat int xchg aas lahf pushf outsl (bad) xchg shll dec call xor inc jecxz repnz scas sub ss popl lock xchg xor addr16 shlb pop xchg sahf into cmpsl aad loopne sbb mov mov pop add scas scas xchg sub insl ds mov push fs push inc cltd xor inc inc adc stos push insl out cmc push lock pop out clc pop out pusha lret adc add inc stc inc and fistpl pop xor or int3 push fisubr push (bad) faddl mov iret mov aam dec jle fidiv stos jo adc jno mov add pop add push (bad) (bad) es mov jmp rorl movsl (bad) push lea sub dec aas pusha ficom xchg insl scas inc insl lds ds mov jge lahf pop sub adc popl arpl out cmp es add cmp xchg sbb out and push push sbb jbe repz (bad) xchg sub aaa (bad) jo icebp adc inc lds aas insl sbb addr16 (bad) mov rcll inc pop or push es xor dec jo pop das fwait push rcll jmp pop inc jne mulb das (bad) iret push cmp stos and xchg mov mov mov inc jg ja adc and xor or out inc adc jns out outsl lahf xor sti and jge push pop aaa test sti jmp dec and ljmp sbb or idivb jo add das ljmp pop call movsb out pop ss jle mov mov push mov add inc out in int mov shll or push (bad) cli xchg mov and push push adc xchg jle pop notb pop loope xchg pushf sbb cmpb cmp ss xor xor sbb add sbb pusha das xor test (bad) out les iret aaa jnp pop mov repnz ljmp out data16 not mov loop nop or data16 pop sti inc add push jmp imul xchg inc insl cmc xchg push adc cld jmp stc rcll cmc sbb das repnz repz sti std movntq xchg movhps insl add shll aas negl in gs xlat test out sbb lods ss jl fbstp sbb scas loope stos rcrl cwtl mov fdivs pop jo das insl adc jge xor xor jo xchg jmp add xor mov data16 adc outsl test mov ds not scas jecxz dec imul int3 jg je xchg jmp mov insl pusha mov or iret imul fcomps pop dec test jo pushf sbb add lahf outsl xor adc mov (bad) adc enter cltd add xchg or call jnp movsl rclb and (bad) outsl sbb nop repz insb fwait lock dec les sbb push out cld cli outsl sub sub xchg adc insl mov sub jne mov insl loope scas cs paddsw jne adc cs jae incb inc mov in lock loope test adc fdivrl lret jge arpl jle insb mov loope getsec imul pavgb in and aam mov stos imul xchg shll jbe ja xor das adc pop lods mov insl aaa test (bad) push sub in (bad) fwait insb aaa arpl out ljmp cmp (bad) outsb test arpl jnp pop cmp mov or jle int3 out (bad) pop push scas sub push inc jl outsb and ss aad outsl or and in fisttpll xor sbb jno jge and data16 and xor pusha je adc fsubrl pop iret scas push outsb sbb push cmp in sbb inc gs (bad) shlb sti or in push (bad) lock sbb xor and add shll push bound jae insl sub and and mov repz jge es out push xchg aas adc fadd daa iret scas xchg clc xchg hlt and movsb mov mov int jg sbb push clc cmpsb jno lods mov xchg mov imul aaa adc les mov rcr or sarb mov mov xchg cld dec or adc cli scas jnp daa cmp (bad) sbb les fldt push push add inc in jo gs fsubrl lea sub jo lods mov xchg cs mov and das mov lea adc and jmp inc add xchg popa pop insl jge out mov mov and (bad) call mov or pop sub mov popf outsl xchg inc sub nop pop stos mov std bound iret lock jl call dec pop mov jo jl cwtl orl popa inc nop icebp insl (bad) icebp mov clc add scas (bad) inc (bad) testl inc adc adc les jmp fsubl mov cld jl xchg out pop addr16 scas out and scas mov fs bndstx adc repz xor adc jge pop inc (bad) fldl dec push sbb sbb stc aas sahf int fstpl stos std movb ss sbb push inc or ja push test inc mov inc lea inc inc test enter aas dec loope mov mov hlt int3 push das adc add inc push sahf sub xor adc imul aam insl push mov pop push jo lahf push mov dec mov and repnz insl out adc dec inc sub jne inc jecxz dec ljmp iret cwtl mov jno mov xchg adc jp and repz jo add pop cmpb sub lahf aas insl dec fstps fs not icebp sbb iret inc icebp mov mov stc js call pop or mov stc xchg loop mov jp and stos leave pop and jmp pop push sbb (bad) int mov jo cmp cmpsb icebp sub pop mov test add jecxz inc aaa lock imul in (bad) das rorl add jmp push pop jmp or xor xchg mov frstor sub and jmp mov mov out inc push cmp jle dec or and (bad) (bad) and pop lock mov (bad) mov lock lds cli (bad) xor xlat jp pinsrw or dec push add xchg inc pop sub jne cmovo jl xchg insl insl iret ljmp mov or (bad) cmpsb mov or pop movsl sbb test jmp sub iret push push fcmovbe sub jg and and mov and pop scas mov or mov jmp out test je outsb sbb sbb jne or dec into es inc sbb jnp add pop pop daa and xor loopne cs int inc push jb mov fwait mov xor jnp subl xchg insl sub pop mov add aad pusha ret enter inc xor inc jp adc ret xor ss mov dec nop movsb jno push das xchg inc das popf adc (bad) fstpt cmp je repnz daa inc push adc out fimull pop insl mov push outsl rclb fild (bad) je sub push into lahf neg ja or jne fldcw bound push notl xchg aaa xchg or clc je dec lret xchg fdivrl dec mov mov ss je mov inc jno dec xor (bad) xor fs arpl jae push cmc sbb das fistp jno loop aaa inc push adc fs das jecxz lahf pop mov ficomp mov jp (bad) out cltd test fild jbe test xchg sbb or mov rcrb insl leave pop movsl ret popa push mov xorb cmp out fbstp add test outsl jmp dec ja sub in movsb inc iret fldl jae scas ss add add or in (bad) xchg fcmovnbe test scas fs scas push aas jg insl hlt mov xchg add hlt xchg and outsl not out push mov jp jbe mov loop (bad) mov xor mov dec push dec mov mov lock or xchg out push std loope fiadd jo lcall xchg aam push les adc or jg je (bad) sbb mov and mov adc and jmp pop insl stos inc jb xchg dec jecxz mov jle and mulb cmpsl push ss loope cld (bad) xchg (bad) pop inc and jp pop rclb and pop ss fimul rolb jne (bad) testb movsb outsb jmp scas dec cld sub xor out popf popa push iret xor inc xchg inc sbb sub add push popa (bad) out out adc xor sub pop loop lcall push push xor jbe hlt pop fwait outsl ret les imul dec scas mov xchg pop inc xchg lock inc push ss push arpl fsubl movsb popa lahf mull push shlb out or pop dec rolb dec jmp scas and loop mov jmp adc loopne outsl incl cmp and icebp mov mov outsl add jno adc push add pop repz jg dec enter stos and (bad) mulb xor das lds jle push sti icebp imul jbe xor fistpll aas loop cmc ret iret add dec sti (bad) popa xchg and dec sbb out mov adc jp movsl jbe fistpll xor jg inc mov mov xchg std mov add lahf fs mov cmp (bad) in lock imul mov xchg xchg decl enter and mov sub sahf inc inc or and add out adc icebp and mov (bad) cmp loope aaa fild adc add or movups sub addr16 iret and std cmp es jb sbb mov adc stc jp clc jae inc jo adc adc sbb push sub lds das push mov or outsl icebp push xchg or (bad) jo mull pusha jle sub jo and jo sub gs cmpsl inc and xor push and dec push loopne fistpll fcomip bound add lods aas adc xchg mov sbb dec es dec mov pushf sub and dec jno jge sub ret mov out insl ret sysret lds subl outsl dec cmpsl test les add jge sti lea and cmp pop incl cltd push scas jne pop in dec aaa enter inc lret test sbb lds in pop adc ss (bad) out lahf pop jl ljmp rcr insl push sbb dec imul adc addr16 out adc fldenv popf or ret or shl push lcall movsb std cmpsl incl arpl xchg popa popa inc add iret ret scas test in mov pop shrb subl inc jecxz repz adc rcrl push aaa xchg test int3 addb mov xchg jb out iret stos ljmp out test out addr16 push jg out inc xchg in lock dec mov xchg clts stos popa jge pusha xchg push or xor mov out lods fistp ret imul sbb pop jmp das jg inc movsb add pop push out negb shlb in ja or add or push and mov stos push scas add add out (bad) divb push or add pop mov mov std mov mov rclb (bad) scas ret or push add push inc mov (bad) jg repnz jecxz les int push lret lods inc xor mov (bad) int or sub adc push pop push stc in lret aam xor dec xchg lea ss int ret xchg mov lea lock adc adc into shll sti fist lock mov stc push movsl ror inc gs (bad) pop fistl xor insl xchg mov xor jne daa scas aas jecxz sub loop mov sub test lahf insl not dec int sub fidivl pop out outsl mov cmpsl adc mov fisttpl or lds cmp mov xchg lahf jg pop pop fadds rcrb ss mov aam out add mov xor adc add adc mov es aaa sbb and mov sub ja add imul mov mov sub ret lahf add lods push jns pop push xchg cmpsl (bad) jne jnp int enter daa xor in ret imul push insl imul adc jo ss cltd je push call lods mov and pop (bad) pop jecxz push loop pop push pop add call mov sbb test jg imul sub test pop cli xchg in push fstpt jo (bad) outsl fucomip popf call popa mov into jmp dec dec cld and and insb sub pop push mov lock add push bound mov inc shl inc jp inc xchg pop mov loop jbe and sti mov push leave aad xchg arpl cmp pop aaa (bad) jg les dec iret pop ja lock in insl rcrb add mov xchg hlt add test jl (bad) arpl test add scas sub (bad) loop test add mov or xchg movsl out fs xchg in adc jge insb inc inc repz sub imull inc shll pop scas outsb outsl sbb (bad) (bad) mov cmp adc outsl jno pop and or (bad) into or insl int3 fnsave dec xor push jae aam mov jg jge sub daa iret outsb and orl xchg add movsl mov push xchg ds test adc jg rcrb sbb add add dec (bad) adc adc je mov popa xchg cli mov jg inc outsb and pop fbstp gs aam mov jle add outsb out lahf xchg add outsl add es (bad) jb sarl jg,pn push sarl aas push bndstx inc fldenv jno inc outsb popa add stos and das cmp out ljmp pusha jg aas or cld adc test sub lret in setno ss sub fild out add sbb inc jno test fmuls and (bad) jno fdivs mov add xchg add inc por clc mov (bad) xchg mov loop xchg or dec sub jne pop mov imul das push dec cmpsl jo push insl xlat sbb ror aam test sub add cmpsb cmp insb jl and sub in iret std sub loope jne lahf xchg pop push (bad) adc jl fdivr out push aaa or mov aas jp loope pop dec pop dec pop pop je mov popa insb movsl xchg dec and ja mov add adc popl addr16 inc fs out add repnz push in addr16 scas ret rorl ret sahf pop mov xchg lcall or push xchg in out inc scas sbb repz dec mov loop or and in sub jno and jl push mov pop mov inc iret or mov adc jecxz xor fst inc js in jae pushf mov add jl xor popf into fwait lods jnp loop dec fidiv and fs lods scas pushf mov cli lahf in cwtl mov gs lds into sbb movsb scas pop lock in bound lahf or stos fidivrl clc imul adc adc arpl pop mov cmp jb adc (bad) mov (bad) repz cmpsl test xchg icebp push dec xchg jge call sbb loopne mov in pop pop imul fistpll and xchg push mov divb dec adc push fdivp add fnop and jecxz push (bad) jmp bound aas jae ja das jno xor aad mov (bad) outsb and stos adc divb or cld push xor inc add sbb push push and out repz mov push leave aas sub mov repz loopne pop mov cmp lods and out dec into ss push adc mov fist shrl dec jge push jno pop or jecxz orl add or addr16 pushf mov sbbl int3 add lret jl insl or xor stos addr16 add ja jle push insl das mov mov std inc adc jecxz push mov inc mov aas cmc cmp cli cld jle push (bad) jge bound push insl iret das fadds or and repz inc cwtl ljmp mov xchg fwait push mov les jo sub jne push sbb loop aas jge test aaa jnp decb test cli sbb jbe mov ret pusha les rcll into sub mov add clc adc in adc adc std pop ret loope insl fcomps stos pop cmp repz push inc add jne xor mull js repz fildll add test fisttp pop or popf push hlt push sub xor movsl (bad) cmp cmp xchg jmp sub (bad) cmpsl jnp and ljmp or (bad) dec add xor sub outsl dec outsb popf pushf xor inc insl cmpsl lahf adc fist push or aaa ret adc inc std daa cmpsb bound sbb decb scas adc es clc std mov inc sub or xor arpl mov test hlt and mov nop xchg testb fcomip jmp push push in push loope out adc hlt mov push incl mov pop xor inc mov dec lret and pop lods out pop mov mov outsb lock dec mov ljmp pop sbb adc (bad) divl scas popa inc sarb add (bad) call jl inc mov mov cmp subb lcall lds and insb (bad) loopne xchg sbb cmpsb rol call add push daa add repz add pop cmp (bad) ja xor inc jge mov cld mov repz or and arpl dec adc sub popf sub or icebp insl jno arpl xchg xchg pop pop jno jl daa aas out in dec out cwtl mov xlat aas mov (bad) ljmp nop sbb inc mov push int3 pop jle fimul xor jecxz add scas insl jg loope mov xchg cmp pop imul add iret out xchg xor std pop push lds pand pop xorl fsts arpl jg pop dec jg xchg ret test inc out cli pop jle popa push adc loopne rclb pop sub out pop (bad) repz jecxz test imul das jns clc (bad) (bad) fdivp xor lods jg dec xchg adc fsubrs lods jmp std pop sbb xchg add hlt out inc out and aad addr16 pop pop push pop dec jae inc (bad) (bad) repnz lahf mov jno sbb jle and in xchg or and jne (bad) xchg or jge xchg cmpsl push sbb cmp insb out or xor leave notl xchg xor in inc push nop cmp mov test mov or (bad) movsl out pop (bad) pop dec mov out addr16 gs push sbb clc pop mov icebp lock jae (bad) outsb dec cmc ficoml loopne mov xchg cmc ss sub out jno push cmpsb mov add popf inc adc adc nop dec pop lea adc mov xchg xor pop mov lahf lods xor xchg xor out lods sub mov lea aaa adc int pop stos (bad) inc add mov shlb pushf jmp or pushf jmp add push pusha pushf lea jmp test fsubl sbb mov inc (bad) cs adc leave (bad) imul clc dec in lods das dec jnp mov mov icebp xor subl orl cmpsb and icebp fistl (bad) loopne adc mov insl (bad) or dec lcall xor mov jg jmp lock loopne push cmp (bad) cmp or add clc inc popa sti clc inc loopne pop push sbb (bad) sbb inc xor lods dec test mov xchg cwtl shrb xchg js xchg inc inc lock push les popf cwtl aaa loop (bad) push lahf inc les adc dec notl rcl jl mov xor (bad) adc push iret daa cmp outsb in pop out les int3 push popf cwtl sub or ret push (bad) cmc pop or scas xor mov mov setne setnp mov lods bt xor mov pusha call test into push xchg imul sbb (bad) sarl mov push pop sti push nop cmp in push mov sbb vpsubusb add rorb mov mov dec out and lods xor mov pop test push jnp pop jno xor scas sti lret mov mov push jb cmpsl dec mov out dec xlat adc pop lret scas iret cmp aas sbb add xchg xchg cmp pop insl (bad) in push or or fiadd xchg xchg lds inc mov mov lea inc (bad) imul jno pop insl lahf roll imul pop jle push fsubrs (bad) push xchg and push into adc icebp mov rcrl dec xlat sub jle loopne stos je in repnz ret jmp adc sub sub clc jmp cmp cmp js lcall inc mov xchg hlt fsts out div pop iret push clc incl fcompl test add xchg cmp mulb add dec sub sub addr16 pop sahf pop dec mov sti cltd (bad) xor dec mov scas jge jns shrl (bad) ds mov pop out hlt jmp xor xor inc addr16 out dec inc sbb and and out sub (bad) pop xor push outsl push jno fs or and push or int3 or adc in mov lea ja call (bad) push cld sti dec inc jne fidivl std inc xchg xchg pop mov les out mov insl je ret inc mov sahf cmp dec scas popf add addr16 adc ja cmp xor jno pop jmp fs pop (bad) dec popa flds repz and adc dec adc fwait imul stos add add rcr push repz push es rcrb push data16 fwait ret push cld sbb fcmovb push les or xor sbb pop mov mov incl (bad) and test mov mov cs push orb inc and pusha push pushl ret call jae push mov sbb mov call pushl pusha jmp jae or push pushf movb pushf lea je mov bswap lea bswap mov push not pop lea pushf xchg push pushl popl call jmp movb mov lea jae test push bt stc cmp jmp pushf movl push movw lea jmp lea je bt bt push sub push cmp mov pushf jmp call lea jb test jmp push jmp lea jae call bt pushl test push pushf pushf lea jmp mov push in or stos dec jg push movsb scas or ror or in jg mov mov lret fsub ljmp rcr jmp loop mov inc out push rcll nop and pop (bad) fs arpl scas xor scas sub stos dec adc iret lcall shrb mov push push cmp pop out push sbb mov mov addr16 ret sub cli (bad) cmc (bad) mov push push je xchg lret imul pop or clc sub sub pop mov or fidiv jl mov sub pusha xorb pushw push pusha sbb cmpsb mov mov (bad) ljmp xor jo mov xchg jl je jbe add adc sub fs movsb xor test movsl stos dec pop cltd sbb push dec fistpl and sbb jae out xchg lods xor pop bnd sub mov aam movsb out push sar jno jno mov test stc out inc into ret add cmpsb and and xchg aaa adc dec xor and xchg mov std dec stos jo mov cmp out hlt hlt mov push push and inc mov dec jg adc cli sub adc adc adc hlt (bad) add call pop loope mov lods fs hlt mov mov out xchg xor xchg xor or cmp inc xlat jns pop add jns stc sub ret and add movsl xor xchg push das jnp jns and pop js or and scas sub xor sbb scas sub adc add add add xor xor xor xor xor xor xor xor push xor pop xor jns xchg xor xor xor addr16 xor xor xor push xor cwtl xor ljmp ss ss ss xorl ss ss ss adc xor aaa insb aaa jg test scas aaa (bad) aaa jecxz cld aaa or sbb sub cmp xchg cmp cmp cmp or and inc cmp outsb cmp xchg cmp cmp cmp and cmp cmp cmp cmp cmp cmp loope add dec arpl mov aas jg cwtl aas leave aas idivl add add add mov xor push xor xor dec xor je nop xor push xor xor xor stos xor xor xor xor xor xor xor xor xor xorl sbb das outsb fdivs icebp add pop aaa addr16 loop pop cmp jnp xchg cmp das cmp cmp cmp cmp cmp dec cmp cmp cmp cmp cmp test ret cmp cmp cmp cmp cmp cmp cmp add add add push add add xchg xor xor xor xor xor jp mov add add and aaa out iret cmp cmp cmp cmp cmp clc cmp int3 aas add add add add xor xor add sbb push aaa pop aaa jbe movsl aaa lods aaa mov mov aaa fdivs fidiv sbb push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov push add pusha add add xor xchg xor xor xchg lds and xor xor xor xor jmp xor inc ss test mov adc push cmp jb test mov and je jl idivl cmp fnstcw add add add add add xor xor xor xor xor xor xor or sbb aaa inc aaa push aaa mov aaa fdivs fidiv call nop add inc add add xor xor xor scas xor xor xor pop ss aaa (bad) aaa jmp push cmp ret cmp cmp cmp ds ds add add push xor jp xchg xor xor xor add insb cmp cmp dec ds jnp,pt add add add mov mov popa xor xor ss ss cld cmp cmp cmp scas cmp cmpl ds aas add add sub add nop xor xor xor xor ss fnstsw and out xor out add add add xor add nop xor xor xor inc xor xchg cmp mov pop cmp cmp cmp int3 ds add add add xor add wrmsr repz xor xor xor xor xor mov cmp scas cmp cmp aas js add add add inc add add xor xor xor xor xor xlat xor clc ss aaa gs jmp daa cmp cmp cmp cmpb cmp cmp pop aas add add cmp add xorl xor mov adc xor insb aaa divb or stos cmp cmp cmp outsl cmp lcall fnstsw adc pop aas add add add xor add adc sahf xor xor xor xor xor cmp bound ja xchg cmp cmp fistpll pop cmp mov push aas sarl add add xor add add divb xor xor xor ss aaa jns mov cmp cmp cmp cmp ds push aas add add sub add (bad) xor xor xor xor xor xor dec aaa mov mov in cmp cmp adc add add add add mov xor xor xor fwait add cmp imul je jne cmc cmp jmp cmp jecxz add add add add dec xor xchg xor xor jne xchg xor xor rol pop sub shl push clc dec push rol test dec push setae xor push bt mov setns inc push bsf mov shl adc rcr mov cmc clc adc setl sub lea call mov mov pushf mov pushf push lea jmp es cmpsl cwtl add lahf jno add sbb add into (bad) jp xor mov jge fprem1 shlb cwtl jnp sti mov mov inc cmp mov push fistpl mov ss add in lock ds dec (bad) inc aam inc jno jmp and mov (bad) lea je pusha pushf call scas and jle out movsl inc shrl ss dec xchg jb jmp mov xchg cwtl cmc shlb sub and loope xor or mov pop (bad) jp loop mov mov sbb movsl nop in add test in mov out stos jne xor xchg jb in inc divb xor mov xor sub xor mov mov adc cmp (bad) loopne push jp ret push pop sahf adc (bad) fnstenv mov in vpsubb (bad) out push leave adc dec jp jns adc mov lahf push movsbw pushf lea mov call movw lea je cmc cmp bt push or call jae les and inc lock and addr16 leave inc pop fldl mov mov mov pop gs inc mov into cltd mov imul or cmpsb cmpsl mov xchg cmp jp fcomp call rol pop ret or inc ja jbe mov jecxz and scas and bt call movb or mov pushf cmp shrd lea mov rcr mov call mov pushl cmc ror pushl add test clc stc test neg cmc xor cmp mov call pushf lea je pusha push movl push push jmp pusha or jmp pushl popl clc cmp pusha lea ja pushf shl sub sar adc add add shl mov and mov pushf cmc repnz movb jmp call setae lea call cmc mov bsr movw sar cmp mov test sub call push pushf movl call mov mov push mov ja bswap pop pusha mov push pushl ret jb call lea call pusha mov pushf jmp lea call pusha lea jb pushf pushf pushl ret adc sbb or ret hlt leave das push (bad) pusha push clc cmp cld sarb mov or loope inc iret cld mov inc cli out jp push xor jmp imul movsb and inc (bad) and cmpsb add xchg push push add nop sub push mov sbb out das mov inc lahf rorl popf daa pop cwtl stos repnz mov dec (bad) sbb stos rcrb adc shlb ds mov test cmpsb fcomp ljmp insl imul addr16 mov aaa popl mov movb cmc push cmp pushl lea ja clc sbb ror neg sub shl bsr bt mov add sar or xor shr mov cmp ror mov stc cmc repnz jmp pusha pusha or pushf jmp lea sar dec shr mov call pushl pushf jmp movw lea jne bswap mov pusha lea jmp mov lods pushf not lea jae inc call not not pushf mov lea jmp test cmp add pushf pusha lea jmp imul pusha cmc clc add pushl movb movb movb lea jmp clc repnz pusha lea jne cmp shr mov cmc shl shld sub mov bt or cmp mov pushf cmc clc sub call pushf lea jae pushf xchg pusha jmp mov lods arpl repz inc mov pop loope and cmp pop test jb loope fs pusha xchg ret jnp out cmpsb popf mov mov cmc or push adc clc inc outsl jp adc jmp lea movsb add lret dec adc xor mov icebp mov mov pop (bad) xor mov add mov push (bad) cmp adc lds (bad) mov jnp xor xor rcll call mov xchg mov popa lea add or (bad) idivb rolb xchg jb out arpl mov in lret xor xchg inc ja lods jmp in xor sub cmp (bad) push stc pop mov test add imul aam aas push jecxz pop jge pop mov cmp dec fnstenv pop jae mov inc mov out push loope mov xor (bad) mov sarb mov adc sbb aas lea scas push or mov inc fstps repz pushf rorl jo push pushf sbb nop mov add lcall adc (bad) push mov adc push sahf inc pop stos dec into ja push sbb add rolb inc imul xchg pop outsb imul inc mov cli lods jns sub adc pop adc (bad) dec mov mov out push dec rclb mov loope orb cwtl jle pop movsb inc pop and js scas loope jle (bad) std fadd div rorb leave jmp ret into clc (bad) mov js adc and test popf pop cmp push imul mov cmc pop mov mov adc notb mov fwait pop mov pop mov in cmpsl pushf mov mov or sbb in xchg mov iret xor cmc stc sub dec pusha cltd ds dec push xchg jge ret adc jnp pop shll stos mov data16 in (bad) pop fbstp lret (bad) ds ljmp mov test (bad) int pushf iret fdivrs (bad) fisub dec sbb xchg push into out rclb mov pop push push ficom mov mov adc or adc add xorl (bad) ljmp (bad) neg mov lea or mov bswap mov and or mov pusha mov bt cmp xor movb test cmp repnz call bt test jmp call cwtl push pushf lahf pushl lea mov pusha pushf call cmc sub call cmp int3 push jnp cmp inc add or jae scas sub test push push (bad) adc stc mov push jne popf mov mov enter (bad) xor in push in hlt add (bad) mov dec pop cli xor xlat push lahf jge into mov and aam sub aas ret pop cmpsl add jno mov test cmp xor or cmp jmp mov inc pusha rcr cli inc icebp mov cwtl adc sbb mov sbb sub add mov data16 push jmp cld cmp mov adc dec pop rcll scas in leave mov mov pop out xor js xchg addr16 add imul or mov jno adc das push xchg mov inc sahf jo or int3 in mov popa shr jbe push in adc adc (bad) jmp dec out jo jp shrb or outsb (bad) repnz cld call mov scas sbb jmp cmp stc pusha add pushf pushf call movl mov push pushf lea jmp lea push movl call pushl lea jne movsbw movzbl bsr lahf xor aaa call push lea ja jmp jmp shl pusha mov lea mov pushf cmc bt push xor call mov cmp sbb setae not mov pushf cmp pushl jmp mov pushf push mov pushl ret call jne gs xor fs insb add xor pushl jmp not mov mov stc pusha pusha stc cmpb jmp pushf pusha inc lea pushf call add cmp dec into xor fwait movsb rcrb insb mulb push add mov cwtl pop dec sbb lea inc ror (bad) dec rclb mov xor iret push mov out es rcr (bad) fisttp xchg mov (bad) and xor and cmp mov rolb mov out jbe and mov lea push bound out adc add dec gs loopne xlat repnz mov movsl sbb lods dec das push adc mov decl popf les test add lea call sbb cmp inc jne or sbb ljmp repnz out rclb (bad) push xchg xor cld sti pop imul lret sbb idivl sahf int3 dec or mov xchg mov cltd fldl aam and add aas add jno js push inc pop shrl cmp inc gs mov sbb iret pop cmc popf cmpsb pop mov jne fs and (bad) scas cmp push sahf arpl les cwtl and sub mov or mov sub sbb stos adc fdiv sbb pop adc lea je push pusha pushf pushf cmp push jmp mov sub ss rclb mov push dec into ret inc mov sbb ret lea cmp int3 push and inc adc cmp mov into push outsl ret mov cli or inc dec jns mul icebp in add fwait ljmp movsl push mov jbe cs push daa stc cmc mov not pop mov in or cmpsl pop repz xchg lea pushf and call sbb or cmp lods xor lods and jmp cmpb jns pop jbe xchg and mov sbb jns push mov fwait sbbb pop (bad) lcall outsb (bad) jbe pusha imul add sbb (bad) je lcall (bad) mov movsb jbe jae jmp movsl out js (bad) lock mov std call pop sti dec jnp icebp add ds sbb push jmp stos sbb and or push mov daa cwtl outsl inc jl sub add fisubl lds scas push aad (bad) hlt xlat push nop call test int addr16 mov xchg test aaa js stos hlt inc out push jmp pop jle std mov stc xchg pop fistpl sbb in sarl roll scas push mov push (bad) inc or arpl outsb push push and daa and adc movsb inc cmp lcall jne vsqrtsd (bad) movsl mov outsl incl outsl ss fildl adcb inc fldl2e cld in adc test rol add and pushf mov push cmp push cmp call cld jmp movsb mov pop xor pop mov jle mov mov push popf outsl jbe loope xchg aas add xor in out hlt fdivs andb sub call push loope sub xchg and inc ror ficom pop vmptrst iret push dec out (bad) sti sub jne xor andl dec jne ficomp (bad) hlt inc adc mov clc pop push push mov mov mov mov mov scas pop dec js mov mov add jmp or add add mov lahf xor jmp test push popf stos dec mov mov mov jmp outsl jecxz push pop jle adc test jge loop movsl push inc nop sub dec mov iret jno mov int3 movzwl pop push pop jns out push jmp lahf lret pop adc jne and out les iret mov out repz mov push pop dec (bad) or push jmp add pop sti stos inc (bad) xor repz mov into inc mov imul cs scas add and push leave ret mov inc mov mov sub jb jl outsl arpl bound leave add rolb mov or rcrb pop push xchg dec lcall and xchg (bad) fnop jp sub mov cwtl jae fs bound sarl push std fcoms xor jecxz das adcb sbb mov push ljmp ret or cmp clc lcall dec jmp and pusha push test jg jbe adc xchg repz pusha pusha pushf jmp movb push lea ja pusha pushf inc pushf seto inc add xchg inc dec test mov dec shl cmp mov movb stc cmc clc mov mov sar btr sbb mov call int sbb dec inc fidivr iret dec pop (bad) int3 sub adc sarb lcall popa and sub dec jnp cltd cmpsl mov mov jae stos fwait jno inc lea daa jge push sar inc pusha mov ret xchg and lcall loope test push (bad) in clc mov mov jnp ficompl movsb imul scas jge add lret ds pop addl push lods xor (bad) dec leave sub pop push xlat mov (bad) int3 dec test lods adc cmp int3 clc rcll mov mov addl mov xchg cs adc add shr inc test addr16 lods xor dec jecxz or lds or cmc adcb inc push sbb call xchg ss cmc pop out push in mov sub xor jns inc adc gs mov popa mov out jnp push push jno pop pop mov scas adc or mov mov push stos push rcr sbbl lea loopne test into jo xlat cmp insb gs adc add sbb addb testl (bad) dec int cld inc jb dec stc push dec sbb les cmp in insb push stos sub add mov push addr16 int cmp pop jle ds xchg (bad) dec scas cmp sarb cmp push ja cmp mov int jl mov lea loope (bad) iret (bad) fcomps xchg xor sub test ljmp mov in mov push xchg pop fmull mov sub xchg popa adc push enter sbb stos ss inc lods jp push out push in xchg cmp lock movsl mov mov fist adc sub lret inc push add test inc xchg test mov movsb lcall fcoml icebp inc adc mov scas nop add iret aam shlb stos andb and scas adc loope rcrb ret push pushf sub sub mov xchg das adc push jne out push out ror cwtl cmpsb dec imul add or inc pop jle push cmpsb and int rorl das add stos mov jecxz mov xor enter push pop mov jmp fmuls scas push adc xchg cmp daa or fnstenv mov xchg pop jno lds scas adc mov cld mov mov xchg jle aad bound bound hlt cld fcomip fiaddl nop push (bad) cmp push out add lock test test jns adc dec jne add and adc jle cmp fdivs rorl and sub cmp lret jne sbb jecxz nop push (bad) rclb jmp rcll test icebp xchg jle cmp pop jne addr16 aas leave mov std cmp arpl fwait sarb sub cmp cmpsl test mov mov jmp movsb adc sar ret dec bound or mov cmp leave xchg mov mov or adc cs mov adc int repnz push add inc jge jl or aaa ljmp imul js sbb inc outsb stc pop dec pushl shl jmp dec xchg popf je out mov (bad) push lret shl cld xchg stos dec ret fcoms mov push dec push xor xchg out pop int cmpsl mov (bad) adc fadd and inc jns push inc cmpsb test inc mov stc cld test insl rolb (bad) stc (bad) jmp cmp cld add stc dec ficompl out cmp mov cmp xor cmp hlt inc and aaa (bad) mov hlt ss lods lret jnp out (bad) (bad) pop fwait gs mov sub pushl fldl2e not push popa xor mov and mov mov mov ja xor xchg sub add mov pushl ret inc out cmpl xchg inc mov sub cmp pop lcall mov and mov or jmp jne sbb dec mov mov les orl or or arpl mov or xor pop stc inc shlb cltd into pop out add mov adc rcl fbld repnz sbb inc xchg or mov and mov subl sahf cmp ret sbb in or inc lahf adc mov popf stc sub mov xchg (bad) adc cvtps2pi xchg push mov xor loope pop lret test push push loop xchg or fnstsw cmpsb pushf pop mov xchg jl pop jle sub adc xor xchg mov mov dec stos fisttpl push lret faddl xor and adc (bad) xchg push jp xor sbb pusha mov (bad) fadds cmp int3 inc mov mov pushf cmpsb dec int3 in movsb pushf sub add leave pushf sbb adc cmp repnz fxch clc in in ficomp repz sub adc scas adc mov sbb mov cmp pushf add call ja outsl jbe aas mov aaa or (bad) push xchg mov dec mov mov nop bound xor sbb loop xchg xchg out xor and repz loop gs cltd inc mov xor out and sub and enter adc inc test or pushf jmp mov lea je shr btr movsbw sub xor push add pusha mov pushf test mov sar shr lea inc neg bsf btr mov pusha call call add add sub (bad) pop cmp popf xchg mov add pop lcall call (bad) decl cmp and shrb lret sub sub mov popf xchg dec mov pop xchg out int3 cmp pop lret std push lods inc je jns xor push ficomp cmp daa into repnz sbb (bad) mov fmuls mov dec es inc les cmp dec (bad) cld les aaa mov xchg adcl inc sub ret xchg imul scas or je stc cmc cmp pushf lea je test cmp pusha pushl call ljmp xorl push fisubl mov in mov cmp sbb cwtl push sahf inc push mov ret mov push imul frstor dec fildl aas adc frstor pushf pop loope idiv cli xor pop ds inc aas add lods cmp xlat test fsubl sar add repnz mov notb insb (bad) sbb xor jge push mov insb jg insb cmp sub scas mov add cs inc sbb ds sbb mov shrl or clc roll (bad) (bad) fldln2 call in out sti xchg adc scas pusha lea jne rol bt adc shld mov pusha push bt cmc add test cmc pusha movzwl jmp test pushl jmp pushl movl movb pushl mov jmp jmp xor sbb stos and push or push cld add fstpl sbb jns adc cld aaa aad aas (bad) dec pop popf adc cli xchg cmp cli int and in push test test sbb mov and cwtl sbb sub decb addr16 loope push fwait mov (bad) cmp pop std xor call vmovapd fwait in cmp and push sub sbb (bad) cmp sarl getsec dec mov mov bound jg frndint in mov push xchg out push hlt sbb or mov pop cmpsl out outsl mov inc test xchg sbb xchg xchg lea pusha movl call mov pusha pushl dec pushf call xor mov daa or test lret adc imul idiv fisub or mov and push mov movsb mov outsb enter nopl ja xlat cmp lods sub xchg (bad) cld cmp lods rorb inc jle adc add aas xchg cmp cmpsb imul xchg stc mov leave pop fst sahf ss pop mov movsb mov and dec jecxz push cli sub push mov or jo (bad) out stc push cmp xchg pusha jne push xchg xor dec cmp sahf or inc jg ljmp outsl lret ljmp out cmp nop test inc jmp add add add add add xchg jb add adc add add add add daa fcomps add adc add leave sbb das mov sbb ror sbb xchg add sbb fmul sbb jle sbb and sbb loopne sbb sti enter adc add leave sbb cli push sbb xor sbb lock sbb das mov sbb clc leave sbb das mov sbb bt cmp pushf pushl pushl jmp cmp sti or sub pop or xchg js push (bad) jecxz iret push lock dec inc (bad) fildl dec (bad) movsb xchg movsl popf outsl gs loope stos mov adc clc imul or sub pushl mull fmull lds and fwait cmp hlt adc and sbb push xchg pusha ficompl add jbe call cltd mov mov push in rcrb fsubrp sbb sub xchg (bad) or pop push mov scas sub cmp (bad) call mov xchg inc or scas push sub addl sub and jb call cmp pusha lea jb call pusha pusha lea jb stc bt cmp jmp pushf call xchg inc ja repz push mov pusha sti stos cmp cmpsb and xchg scas mov test cmp mov sub push mov fadd adc mov daa sub cltd dec int pop das lock xor lock push jp inc enter movsb pushf lods pop inc and shll add mov mov je cmpl ja nop in icebp incb mov or pop cmc pop aaa call dec push mov imull out push xchg sti loope (bad) test test aas stos cs fwait inc aas cmpsl and out push clc jl out jae xchg dec jl xor rcrb bts cmp pop aas out imul cmp jmp call xor push into xchg sti test cmp adc xchg xchg push les xor jecxz mov jnp test (bad) mov inc leave dec adc clc loopne movsl and in js or test inc or xchg xor pop push hlt aas jnp sbb dec test out inc jmp enter sub mov dec outsb sub lret add addr16 mov xor scas or fadds sbb mov test inc cs out mov sub iret call lock insb mov repnz sti adc mov sti xlat xchg stos and pop (bad) push daa xor dec inc push pop mov xchg ds push scas add jmp pop add inc outsl push outsb imul imul pushf push sets inc sar neg pushf add xchg adc sbb xchg mov and jmp pusha pushf movl push mov mov lea jmp lea ja not call arpl cmc pop int or jmp or fistpl ret jle stc pop lcall sbb cmpsl test ljmp mov imul (bad) out sub jbe jnp push (bad) pusha jl pop lret cmp and push or mov imul push or nop mov push xchg xor xchg les push scas xchg (bad) mov test push xchg dec jns mov xchg insl fsts clc pop push mov cmpsb gs stos les lds fs add cmpsb sbb or add movb call clc test pushf push pushl lea jmp push pushf add jmp lea je jmp lea je clc bt clc add jmp test cmc pushf stc neg clc pushf bt jmp movl push push pushf lea jmp movsbw lea mov call imul stc add mov pushl pushl pushl lea jmp pusha movl call call movb rep pop movw not pop pop push pushl pushf mov lea jmp shr push adc mov call mov push pushf lea jmp pushl lea jne setb mov pusha bt stc pushf or pushl pushl pushl lea je pushf lea lea push xchg movzwl pusha not lea pushf mov movw push movb mov lea call jmp pushf mov lea not jmp call jmp clc cmc bt push or pushf pushf jmp bt sub call cmpb call lea jne bsr mov call (bad) lea pop data16 inc shrl es add and push aad xchg (bad) sub cmpb out cld bound push out cld in lock push push lock xchg ficom lods imul test stos adc cltd daa in and aam cmpsl dec xchg pop call and insb xchg push and imul mov daa outsl mov add jbe fbstp mov loop mov dec imul pop mov loope int3 add (bad) hlt mov popf inc subb add pop iret or roll imul dec xor cs dec dec add or mov dec mul xor cmp stos xchg add jbe add inc (bad) push cld movsl dec add adc xchg pop iret movsl cmp push cs lahf adc mov data16 (bad) or shrb jne xchg imul jmp add pop mov push shlb daa jl out popf cli sub rcrl je dec add xchg lds mov pop pop (bad) popf inc cmpl and push (bad) cmc jmp inc pop (bad) in push cs fisttpl (bad) aad fstl mov dec test ja shr ficom mov add scas add and decl je add fs pusha pushl ret pusha movl pusha movl pushl mov lea jmp lea jne lahf movb cwtl push push lea jmp pusha jmp call dec dec inc inc push push xor cs dec dec add popf jmp push pop les rclb xor cmp cltd pop aad (bad) mov int3 sub (bad) in or ss les pusha or aad fstp addr16 pop mov mov hlt repnz mov mov xchg test dec (bad) int3 or enter popa enter adc orl sbb inc scas out inc pop fild or cltd mov xor or pop test inc jle aas jo inc ja pop insb adc sbb add fs imul add inc and aaa and call test or pusha lea je movzbw mov movsbw movzbw lea pushf jmp add std in cmpsb mov push mov lock dec xchg jle mov cld sti dec test gs ss test or shll std sti fmull imul jno pop loop lods add cmp lea push mov bound lea sub imul adc repz scas xchg push outsl adcl push fwait ljmp add inc pop jmp ljmp cmp add jb jno or rcll jg xor daa adc sbb or sti stos outsl shr inc mov mov xor int cmpsb pop dec fistpl lock or fistp xchg adc xlat insl cmp mov jnp add mov popa sar fcmovnbe cld (bad) ja inc push xorb mov sti lcall pop mov loopne fsts jbe aam mov cmp lods movsb adc jne push xchg ds jl out lods jo out cwtl cltd jnp push pop repnz movsl mov inc stos xor cmp and cld icebp dec out push aam and das loope dec sbb or psubusw ss push andl mov int3 and mov in mov xor cmp sbb dec mov je jnp adc (bad) (bad) push push addr16 (bad) jnp pushf mov push clc pushl xor pop pop pop adc cld out push xor out dec pop (bad) mov orl mov adc adc js adc xchg ss or fnop adc inc jl adc add out push addl mov sbb dec push cmp mov mov clc daa xor nop and pop mov mov push bound push xchg loop rcl mov cmpsb arpl int iret ds and mov pop pop xlat pusha cmp idiv dec inc out scas orl cmc inc sub cld cmp out jne xchg fs mov and sahf popf das mov fwait pop dec aaa fwait pop lahf mov mov pushf into and fwait (bad) (bad) lock (bad) (bad) fwait inc (bad) add mov inc stos sbb xlat jecxz out sti jne pusha jl ret scas jge mov add sub pop or cld int mov cmp dec mov push lret xchg ja (bad) pop (bad) iret adc jp ss sti ret or and inc test rcrb pushf push test fiaddl inc pop fstpl mov inc xchg test loopne sarb fidivrl or inc or clc test enter and arpl lds mov aad rcrl mov sub mov test cld cld fild mov ljmp adc xchg jmp lea cwtl call pushf lea ja cmc imul bt clc pushf push add pushf lea jmp and stc dec inc (bad) out stc (bad) cmpsl mov dec inc pop xlat pop test lret push pushf xchg sub sar adc xlat outsb dec dec cmpsb cmp and call jp jb mov (bad) dec (bad) and push sub jl popf (bad) and ret adc shrb aaa mov cltd cmc mov out mov aad mov sbb or daa ficompl roll test lahf sarb mov mov lea push mov cmp dec mov pop sbb fnstsw jnp pop or repnz pusha call sub sbb cs dec scas or pushf xchg jns ficompl jmp dec scas sbb adc inc lods arpl jnp xorb icebp out mov adc (bad) orl jg mov jg xchg mov popa cmpsl push test inc or mov cmp mov pop loop mov adc dec and call lret sar arpl adc dec or fdivp fcoms stc aad inc xchg or push fstp scas xor test mov loopne pop insl icebp jae mov pusha sbb repnz (bad) pop mov sbbb clc rcr dec xor sub xor out sti and pop pop inc sub adc das fbld cmc cli add adc dec test pusha or mov mov lret sub mov fistpl aaa cmpxchg cmpsb xchg fwait jg out push enter out cmc rolb jo pop js hlt fucomp (bad) rorb mov imul xchg fneni(8087 data16 jmp loopne dec addr16 push cld sti call in cld in adc xor mov push ret into fisttpl push dec push mov push xchg jmp pop outsl mov stos xor mov insb (bad) jecxz jg das mov jg (bad) dec rclb scas js jmp dec lcall push xchg (bad) dec mov bound andl or adc in adc push xchg rclb les mov mov in xchg in mov (bad) ds cmpsb sti xor inc mov xor pushf (bad) popa (bad) cs lea loopne or (bad) cld inc mov xor mov (bad) popa aam adc xor sub push inc std fisubrl (bad) out dec gs in enter call andb incl xchg xor imul (bad) ljmp jne pusha mov add jmp lea je push movl mov mov lea call enter stos xchg sub pop push push cmpsl test call mov idiv icebp adc jge cmp fnsave frstor xor cmpb int3 mov cmpsl adc sbb int3 push fisttpl push scas aas mov imul test inc mov icebp lock call mov xlat jmp xchg test test or aaa movl xlat insl inc std add leave cmc shr scas lds stos test mov out repnz mov pop (bad) (bad) in inc jge jo push bound (bad) (bad) cmpsb js jnp popf adc std pusha pusha pushf movl jmp jmp call pop mov cmp push aam in js repz andl sbb dec test popa (bad) jnp push test adc shlb push test cmp aam push fstps mov add pop cltd popf pusha adc cld lock pop mov xor rcrl shr outsl outsb push ret (bad) (bad) or jecxz adc sbb xor and cmp int3 push xchg incb scas pop iret mov sbb jns imul (bad) sub push sti outsl fwait mov fwait pop sub je mov jbe imul push mov outsb outsl shrl enter and sahf outsl adc (bad) mov sbb and ficoml scas ja (bad) dec pop jae sar movsbl mov setle bsf mov inc bts mov cmp xor call inc xlat sbb add add (bad) xor add add add sbb mov sbb add add mov add xor sbb add add inc inc sbb add add mov sbb add add dec rcrl add add xchg sbb inc rcrb mov (bad) sbb jne sbb repz add add add sti pop add bt cmp pushf pusha pushl movb lea jae cmp cmp pusha lea jae clc cmp jmp aas xchg sub sub (bad) arpl ret pop test cmpb sub mov cmp repz cwtl cmp dec mov xchg dec out rcr scas xchg push cwtl adc pop sub int3 aam (bad) imul outsl bound sub sub decl and jb lret sti fcomp ljmp xchg andl and in sbb or adc xchg pop cmp pusha jmp pushf dec add adcl cmp fdivp sti push jae cltd jne (bad) icebp push leave sub orl mov sbb adc mov das push xchg adc jecxz jae (bad) out and arpl cmp adc push xchg push gs mov (bad) fsubl pop cmpsl mov or add (bad) sti outsb out (bad) popf lret je sahf inc (bad) jmp cmp mov mov imul push pop das lods lret jb cmpsl fldl2e fsubrl sbbb jbe add add xchg jle adc pop sub ja inc or ljmp dec test jge ds lods stc ret and or ret push (bad) cmp add repz mov jb fisubl fdiv roll fwait fwait cltd pop xbegin test pop aas ror cld aaa mov mov jle frndint inc lods je add leave ret rclb nop mov push adc pop xor xchg pop mov push mov (bad) fcom push (bad) mov mov pop push decl into inc mov ret jb mov out pop adc add sahf sub or jle sbb sub insl pop xchg es push pop push sub mov or test rcr jo in adc or aas fwait mov fcompl pop lods addr16 pop pushl cwtl movzbl mov push pusha setbe movl not movzbw lea pushl jmp pusha not lea lea pushf movl movl pushl popl pushf pushf pushl push pushl ret cmp dec mov pushf push test clc and clc call data16 int3 addr16 hlt cld ret je xor xchg lea xchg test addr16 fcomp es or cwtl sahf lahf push jne dec xchg adc cmp mov xchg ds cmc movsb dec dec test pop fwait popf inc ficompl lods sub in inc insb and cmp rcrb aas add scas inc stos je fs (bad) jbe aas cld dec std jle xchg push adc fbld or rorl inc or push jmp out in popa std data16 dec mov addl test cmp scas jae cmp sbb push stc add pusha push pushl mov or pushf movb jmp mov dec jle std aaa push hlt mov out mov mov (bad) mov lcall clc mov push lcall dec push add (bad) or shll (bad) movsb sub fisubr fdivp sti jo (bad) cmp xor push dec popa mov xchg xlat jmp jbe insb imul lret cmpsl lock aam and or pop in fidivr (bad) mov adc inc std cmc sar mov adc xlat ss jp (bad) mov push mov movsb daa xchg xor scas jo xchg inc mov mov jecxz stos lahf das dec out decl pusha mov in lahf xchg xor dec mov and xor in push hlt add pushl out jne and and push loopne cmpsb repz cli and scas push jge inc mov push and loope hlt add inc mov popa aam (bad) test xor rcll or pop repnz jae imul pop xor adc sbb dec out out push jae inc cmpsl mov hlt inc adc ret loope add and inc out push bound add and out inc push arpl xchg mov jecxz add and aas inc push fs out test push out gs xchg movsl mov aad in push mov data16 js (bad) ja inc adc clc cmpsl movsl dec (bad) in dec out ret fs repz fs ja loop inc xchg xor scas aam mov xor in out jne add and lock (bad) fsubrp xor adc push lea in jo mov jp (bad) adc mov pop mov outsl and addr16 notl lahf cmp xor dec or xor fs jg loop add bound push dec adc (bad) cmc push scas scas pop mov sub aas xchg imul mov mov mov xchg pusha cmpsb dec push sub andl mov inc fimull add roll aaa mov fild imul mov jae ret addb lds inc and sub and fs sub bound pop jecxz popa cmp (bad) imul xlat lret push add rclb adc mov cmpsb xchg js js and cltd jmp pop fisttp adc scas and ss cld lods add mov stos mov xor xor pop das (bad) stos jae pxor (bad) sub loop js adc sub ficomp inc mov mov jo (bad) mov mulb lahf xchg and xor mov dec arpl insl sbb mov sahf out out jmp ja mov (bad) adc jo inc sti mov cltd pop jne jl sbb pop lahf xchg or cmp rolb mov cld inc xchg xor fwait adc leave inc outsb lds leave js fwait sub xchg scas mov jge sbb or fsubl repnz out push cmp jnp push insl inc shl out scas test out push nop or addr16 rcrl adc jb cs fisttpll int3 add pop ret sub outsl xchg inc adc bt jmp lret sbb xor mov mov fwait jne ret divb mov pop into adc rclb idiv out jmp js inc std xor sub fldl mov jmp bound mov sahf cmpsl mov sahf and mov mov jns aad add sub jb xchg pop popa fs mov pop dec aaa nop inc js pop xor mov or loope mov cmp stos xchg push cmp jg (bad) lret mov (bad) mov sbb aad insl xchg cmpsb popf dec pop aad dec sbb mull and je dec fwait daa data16 cld fs rol int3 test incb mov mov mov lds fwait imul xchg test or sbb push (bad) movsb lret mov ss xchg jno scas cmp repnz dec pop jmp je lock mov xor push call inc mov inc mov dec jle jno adcb loop in sti push nop jb xchg mov mov fisttp test lock mov ror inc cmpsl lods xor leave add sbb in idivb test mov cwtl test cli clc pop adc xor dec pop mov push fldl cmp cmp xlat mov fcoml icebp mov adc push in clc shll xor loopne pushf or gs in xchg xchg mov push sbb data16 dec jp xor (bad) and rclb call jnp adc mov je jge cmp pusha cmc cmp lea pushf pushf mov jmp clc jmp adc dec rcl mov push clc shr clc stc pusha cmp lea js je pusha bt pusha cmp pushf lea je push cmc jmp lea jmp pusha pushf cmp mov lea je pushf push call jmp jmp xlat push xchg pop mov inc mov fs adc int3 sub adc negl lcall jmp inc sti xor out imul jns sbb xor stos sub mov lea jg dec leave cli inc jb out rorb int or xor pop adc scas movzwl not dec or mov jmp icebp loopne xor cmpsb sti test inc into bound out negb roll jb (bad) in push rcr fs into out cmpsb popf sbb jecxz lods fmull mov sub push out xchg sti rclb xchg leave dec stos inc addl fisttp repz adc dec jmp shrb call jnp push and dec into xor call sub xchg sbb push fwait xchg out dec lahf push incl (bad) adc rcrb aad sbb mov out adc jno xchg in and (bad) decl pop bound adc cld jp stos loopne andb lret rolb xchg aaa iret or xchg ds mov sbb adc scas add inc js je jb arpl jae inc inc pop in pop addr16 jns clc int ficompl push mov out push fcompl js arpl mov cld sbb and push mov aad je jmp data16 push fldl mov mov das fwait mov stos dec stos xchg enter or pop jp faddp pop lret imul out push mov pop jge sub mov inc data16 jmp adc sub fildl ret mov push (bad) cmc rolb adc insb pop dec icebp xor add roll ret jle daa add in push mov ljmp sbb mov dec mov mov ss xchg push cmp jl fimul mov scas push lret sub sbb clc (bad) or push out imul loope mov rolb in cli fucomp call sahf ficom out push xchg leave and mov or jl je idiv mov pusha jnp push jb adc add add popa addr16 imul je outsl jns cmpsl ds in push push sbb insb aad or xor add (bad) fiadd mov rol nop faddp sbb es shll mov mov jne cmpsb outsl cli dec stos cmp aam lock pop dec mov fcoms rorl lock xor out in repz jle iret adc jmp dec mov (bad) jbe xor les cmp cmpsl shrb xchg or sbb lahf cmp sar jo inc push mov scas push sub rol stc movw cmp push cmp call inc inc dec xor cs dec dec add (bad) movw shl jmp cltd xchg aaa sbb loop cmpb mov cmp scas test or pop test sbb or out dec leave pushf and push je jmp push lret sbb push xor sbb lods lcall adc cmp mov xchg lcall mov scas data16 pusha mov enter call mov icebp dec sub daa aam or dec loope jl cmp jbe aaa mov cmpsb sti aam push out cli fucomp call es je xchg or pop cmp cmp outsb mov call mov ror ljmp mov pop cmpsb pop inc mov lret fld ficoml cmpsb jl mov addr16 lret fmulp movsb push add sbb les xchg test mov or inc push adc mov or rcrb sbb adc add or scas rcll mov cmc cmp pushf jmp fdivp inc mov push cmpsl fcompl movsb stc add repz dec out sub negl dec xchg adc push nop arpl lds mov lcall popa (bad) jno adc xor jae sbb leave fsubrp pop sub movsb mov in movsb xlat (bad) das adc jecxz or inc lods jb (bad) cs es mov mov iret adcl mov cmpsl xor sbb les inc adcb pushf sbb daa (bad) div aad imul xlat repnz xchg jl or mov (bad) or xlat (bad) es lea je and rcr add rcr pusha sub or xadd pusha shr push setp btr xadd mov rol pushl bt rcl add sbb seto add add call mov jmp call inc out sub data16 mov lret sahf inc or sahf repz or daa sbb stos push lods decl gs sub (bad) xor aas add sbb fisubr loopne test dec pop out mov inc adc test jbe pop into mov pop (bad) mov pop test jae cmp aas and mov and and lahf fidivrl and scas pop or add sub push mov fmull ja scas outsl sub xor test add jmp sahf xor push mov xchg out (bad) cmp (bad) mov out pushf jb jle xor cmp hlt repz ljmp mov push pushf xchg sbb aad sbb add mov or in mov divl cmpsb in jno roll xchg sbb insb mov pop fwait or adc stos inc lods cmp call adc push xchg outsl add dec sbbb pop jns pop xor pop push jb jns jo adc out call add mov bt jmp add add and sbb add cmp and cmp add add add add cmp call cmp pushf pushl pusha call movl lea jns push push pusha pushl movw lea jmp jmp and xchg lods fwait pop jl lock add mov add leave out inc fistpl hlt repz cwtl adc loopne cmc dec insb and sbb jmp xchg fwait pop pop int3 aam aas jb mov movsl xchg cmp cmp imul insl jne rcl lea (bad) lret sbb fldenv cmp adc mov cmc sar fisttp and scas arpl pop out add loopne jmp and jg mov (bad) cmc repnz jno icebp push int add arpl xchg les mov sub inc repz mov loope push xchg push adc mov pop iret std inc out fcmovne xchg pop or ja hlt xorl insl nop or xchg mov lea push push fwait mov ja cltd insl jns dec scas popf inc mov lods cmp xor fmuls scas push jmp pop dec ret and cmc dec clc fldenv pop inc push cmp cli (bad) pushl sbb push mov xor mov adc lret movzbw bts movsbw rcl mov clc clc pusha and push stc cmc cmc add sub cmp cmc cmc add call pushl popl cmc cmp movb lea ja sete call pusha jmp jmp lea jne not lea movb call cmp cmc pusha or pusha jmp jmp add inc gs outsl fs gs popa outsb fs gs add fs je cmc call movl movb pushl popl pusha movb pushl ret lea jae test sub call jmp push bt cmc jmp pusha jmp ret rclb and fdivp sti cld sti stos inc dec repnz movsb sbb icebp aaa mov xor pop xor test add cld push jl fmuls cmc adc js and add mov stos aas xor mov mov stos (bad) ljmp or lahf adc xor cmp xor sbb or mov xchg jno cmp adc fs push sahf in pop pop (bad) ficom xchg roll sahf push pusha loop jp gs dec jns in aam pushf add movb and arpl scas popa fiadd and xor movl and pushl ret push neg not not movb pushl stos call push movb lea jae test clc pushf xor pusha lea call push pushf call jmp imul jnp and into sbb sti mov lea mov insb mov xor pop fdivrs mov mov jg out mov loop sti or cmp cs (bad) mov lods sub pop stos ss (bad) lds lods push xor insl and push imul cmp sahf mov mov xchg add scas sbbl mov and xchg popf das aad popa jne jo (bad) push outsl xchg ss test adc je add push mov (bad) pop fistpll cmpsb cmp popf test dec and (bad) mov inc adc jne shl mov pushf bt add cmp cmc test movzwl rol sbb add mov jmp movl call scas and rcl repz mov sti mov lods xor xchg movsl dec scas xor and push popf sub (bad) sbb or out adc arpl out pop xor leave fs hlt loopne sub cmp push icebp mov pop imul outsb add cmc movsb mov mov adc in xlat movsl sub mov mov ljmp (bad) jecxz (bad) pop (bad) mov sub out jae sub cs out out dec fimull shlb xor enter jae bound cmc frstor push mov jne adc pop mov and xor xor xchg and cmp mov and scas in stc loope je add add jmp mov and add leave jmp pushf push pushf movl jmp jmp jmp repz std dec xchg inc or and xchg cmpsb lret jbe loope test add aas std in mov (bad) mov add xchg xor and and pop lods call inc cwtl mov lahf dec aas jg repz icebp aam test cltd jns sub mov gs add idivl loop pop popf out mov push das xor dec sub les mov dec bound push fs push mov (bad) lock pop je sub or bound pusha scas add mov inc andl scas pop rcrl push fstp pusha pop out (bad) add outsl pop jecxz loope fstps out cmc inc scas je in hlt dec xchg cs out mov inc lret xchg or shr out dec sub mov loopne (bad) xor sbb lret adc add out aaa mov test xchg xor adc lahf das out mov xor mov push pusha and into dec inc mov bound inc fwait fwait xor loope dec jae imul add lcall xchg ja adc add sbb and adcl dec scas pop sbb loope mov pusha jnp push mov push ret jmp scas pop repz inc push add pusha movw movl pushf lea jmp clc repnz pushf jmp call jecxz mov das pusha mov fsubl xor (bad) xor push xor jbe shrl sub jp out push (bad) mov repnz inc test pop test pop outsl lods xor sbb lret push ds or inc xchg sub sub ss jge flds in mov aaa and lcall pop sahf idiv push xor movsb daa adc jbe icebp (bad) js out and sbb jb jmp ret das adc (bad) ljmp inc jae (bad) inc push dec jg repz jp adc inc mov pushf pushf pushf pushl pushl ret adc pop xor push sub push cmpl mov dec mov adc adc in int addr16 push mov sub inc mov mov popf xchg xor mov arpl sub sar sbb int3 pusha (bad) and and (bad) data16 fs movsl and xor (bad) xchg xor jbe scas aam (bad) xor xor push xchg push arpl dec stos jnp xchg sbb out dec sub mov int mov mov mov cwtl inc xchg mov inc mov movsl js lea outsb stc dec jmp test sbb fbstp cmp repnz jne cmp ljmp mov dec pop jle push sahf cmp dec stos inc push jae pop addb insl fwait add insb stos adc ret and shrb jns test pop adc push (bad) icebp in mov push stos inc jl ds icebp lock arpl push push outsl lret mov xchg sar inc jae inc imul jl outsl push push mov and scas pop lods push push in cltd xchg je push incb sbb pop add int3 aad mov idiv pop lcall mov loop ja pop in add add xor mov pop mov add pop or aad pop lds movswl (bad) mov xor (bad) mov scas and inc out jno adc daa dec sbb push jecxz aam das dec cmpsl aad mov pusha sbb sbb fiaddl jmp dec loop xchg mov aaa jmp pop pushf mov in xor sub adc xchg pushl popl pusha pushl ret pop pushf call shl pushl call add sbb add add add add add add and sbb sub sbb sub sbb add add add cs add mul stos enter pusha imul push sti sbb push add inc lds nop (bad) cmc loop xor popl pop sbb int lcall fwait push outsb jo jecxz (bad) mov push fs inc aas jge adc add sbb push xchg mov test aas jg mov cld sti pop jg lods or out ljmp into (bad) and sub mov push push pop xchg jbe xor frstor addr16 dec dec fild outsl fs push nop pop jb mov ret cs lcall jmp in xchg jne fdivrp sahf dec pop ja hlt inc jmp stos aas mov rclb or fs loopne sub scas push mov sbb mov gs push pop (bad) repnz dec cwtl xchg out in push cli or insl mov cmpsb dec inc out fldcw mov xchg jl inc xor push push pop sbb scas in push xor das cmp cmp push or sbb xor cwtl push subl push mov pop cli mov fdivrl out aad jle out loopne out gs clc pop and pop jnp sbb scas mov xchg (bad) push xlat ret cmc xchg inc push in adc xchg pop in xchg aaa insl mov outsl cmpsl sub adc mov ljmp fistl dec fidiv (bad) decl lods (bad) xor frstor xor sub mov mov and pop add iret inc pop cmpsb addl sbb lods cs jo lcall mov scas dec adc adc inc (bad) pop jne mov and xchg daa cmpsb aad xchg xchg mov xor xchg lahf xchg enter add jmp (bad) xor lea pop lock mov add jo xchg mov subl xchg jecxz jl sub popa test loop lods inc lcall jne pop lcall ror icebp mov mov stos or xchg jae loope int3 fwait mov pusha into rcrl test mov cmc xchg sub je and or xor mov movsb pushf test fimull leave lods fistl push rorl mov stos (bad) adc mov outsl (bad) out decl mov in xchg jne cmpsb loopne push ja sbb (bad) pop inc fildll jecxz or sbb loop lea sbb mov xor mov in jnp jb lock pop xchg mov mov pushf (bad) cli pop add sub add test daa in popf jl mov xchg sub cli pop int dec out sub cmpsl fsubs push inc xchg sub (bad) pop stos lahf mov (bad) lret or jnp sbb jg lret (bad) mov push cmp jmp in inc out ja jmp ja mov fiadd stos rcll repz jne icebp cmp sub xlat sbb sbb out push sub les pop mov mov idiv jb js movsl push mov cmp inc cmp cmc jo fdivrs push cli ss add add into lock cwtl mov xor sahf (bad) jne insl dec stos or lods (bad) and xchg dec cld or sbb xor dec jo mov in lret cli pop loopne dec sti ret in shll jl pusha sbb push stos cs push mov xchg adc das ret in das push sub (bad) xor dec xchg sub mov pop add adc dec in sub dec cwtl (bad) mov mov inc js mov mov movsl clc or sbb sahf mov imul out shr xchg dec jbe insl out (bad) mov scas insl stc mov sub dec lret push mov jg mov push mov aas ret aaa imul add push xchg or fsubr adc mov lock (bad) mov xor les lock xor out push scas cmp rcll add fldl pop dec sbb mov cwtl jbe orl outsl sarl enter cmp mov sti (bad) xor out fwait mov je hlt call dec xor icebp icebp ss int3 das (bad) mov jg jl es or jne leave lock push shrb jle,pt push pop sub stos pop cwtl xchg mov add (bad) cmp test dec mov cs dec xor pusha clc or testl outsb mov enter nop icebp mov cmp ja push xchg mov mov adc std insb in xchg mov sub jg jle fisubr inc imul fadd or xor adc push sbb ljmp rorb imul or hlt cs mov xor mov xor jmp out in fs in enter mov inc movsl and cmp inc sbb jmp test pop inc fs pop out cmp cmp and (bad) sub cmp xlat xchg inc and dec jbe push stos lahf xlat fadd push fxch popf mov (bad) out xor arpl adc inc mov (bad) pop rcl and push mov push mov adc adc inc push (bad) in out dec push fild mov cmp sub cmpsb push lods and dec call imul pop add jp inc call pop test xchg es jb sbb lea cmpsb imul imul pop pop test and jb inc int3 adc les dec cmc xchg mov testl cmpsb dec pop xor jb aas jno je adc and cwtl pop int3 jno daa or and sbb inc scas inc xchg fdiv shlb jb jecxz sbb cmp fdivr inc inc dec mov mov lock hlt rcrl cld ja sbb call jne cld cmpsl lahf dec mov cld adc imul loopne cli mov mov push iret test adc lock (bad) das loope push push mov data16 daa mov pop dec int and xchg xchg cltd inc arpl test mov outsb fsubrl dec or hlt inc sbb shrb xchg push push outsl gs inc cs out mov pop sbb jmp or jg (bad) inc jbe xchg or mov pop je int aad rcrl cs movsb bound pop lcall sub gs mov lods mov push jl dec lahf imul (bad) sbb cmpsb sub fsts std push cmp imul insl push push jge (bad) out fbld mov jge sarl insb pop fisttpll jbe lock pop dec stos test sub iret (bad) xor icebp push out fistpl jg mov inc into in les jg icebp rorb arpl out mov or outsl les xchg xor shrb sbb push addr16 jecxz wbinvd jle insl lods es (bad) repz cs sbb push (bad) mov ret pop cmp mov mov shlb jne sahf ss stc push shrb test mov aad ret sbb int popf jnp xor (bad) cmp enter push sbb add jnp mov mov inc fcmovne popf cmp mov das icebp test (bad) sub pushf jae dec iretw (bad) mov mov popa fsts jecxz and pop and mov ljmp mov inc mov ss jnp mov adc mov cs cmp mov jo push cmp popa mov pushf push xor (bad) icebp adcl jecxz cld xchg leave jge in stc fnstsw (bad) and mov sbb adc push pop inc outsl not sbb inc sahf dec and pop movsl daa outsl mov push movsl sbb or repz cld mov rcll insb xchg test cltd cmc bound cmp ja lahf dec nop dec scas cwtl jecxz addl push sbb inc push xchg clflush insl in lahf sub cltd sbb ss repnz adc mov rsqrtps sbb push push sub js fxch les fcomps pop jg mov xchg xchg pusha daa xchg out inc movb pop cld lret aad and fs test push inc scas imul cmc xor mov out jmp dec subl std cmpsb int (bad) xor out and sub testl xor xchg xchg cli mov loop testb popl jge clc dec ret ss lds jl pushf or je mov add clc sub cmp fcom lcall fnstcw in sarb ja ljmp cmpsb mov shr xchg (bad) cwtl add inc fildll imul ret sbb in mov sti xor inc jp dec lcall sub into fldenv outsb push sbb jns repnz popa inc stc aam dec adc pop shlb clc sahf mov dec xchg out cltd mov mov pop je push push fdivrs dec (bad) out jmp leave jns (bad) or adc scas fadd ficom sbb adc cltd repz (bad) bound stos pop cmpl pop bound mov loope jmp sbb fildl imul std cwtl add ret ds pop sub dec stc in les cmpsb (bad) out push shrb in jp push out sub jmp fstpt jle cld insl lea inc pop jne mov and mov mov cmc mov pushf push test pusha cmpb push lea jne sar xor pushf mov xor call mov jmp pusha pusha xchg mov movsbw mov mov call fs rol push sbb cli add sub fildll out pop (bad) addl fbld shll xchg xor aaa and jo mov push in or fwait inc (bad) inc test int rorb sbb mov out push mov mov (bad) xlat lods mov sub iret loopne mov push ja cltd adc mov clc pusha bt cmp cmp push lea jb cmc jmp call jmp clc stc cmp movw movb pushf lea jae xor bts shld xadd mov bsr mov bsr lea shld mov cmc sub bt stc jmp mov movzbw pushf pushf lea mov pushf movb pushl ret mov lret add cmp or mov push test jmp out mov pop imul jo stc nop inc mov jo ljmp push mov sbbb (bad) jnp das leave dec mov jne mov test push jns js sti and adc call movsb or into lods dec jg,pn lahf dec mov lock ds popl adc xchg add and inc pop jl dec jnp shl dec jp push into or test movsb int3 adc dec and or sbb or sub pop test mov inc mov and cmp aad mov and xorb adc ljmp pop fxam popa xor or push hlt xor ss xor stos (bad) in xchg (bad) (bad) daa std sub mov sub cmpsl xor das lret push xchg push mov inc int3 lods imul pop (bad) sub xor fildl xor movsb sbb dec (bad) sahf pop ret push or jge adc mov sbb (bad) scas push mov rolb inc mov mov xlat sbb subb scas sbb cmc pop in (bad) mov in repz mov hlt call adc jle add lds out test or jnp add shll xchg dec xlat sbb mov push imul pushf or test loopne ljmp pop loope jbe loop movsl in or inc in cmp cltd sub std inc pop into out pop xor scas mov stos shl xchg stos xchg push jmp jne mov in popa sbb outsb je add movsb inc nop scas xchg ret add jns cmp push mov scas cltd lods rcll mov xor daa and xor adc adc mov push jp test rclb (bad) fadds adc xorb (bad) adc cwtl pusha jnp push dec scas add aam roll push xchg xor dec pop test fcomps add leave sahf inc mov insl loop scas movsb jg adc xchg cltd jbe andb rclb mov dec outsl mov hlt scas adc add cltd jmp mov or push cmpsl (bad) out sub sahf nop push ja fsubr adc xlat call sub cmpsb pop out ss dec mov dec mov cmp movsl and add xchg adc mov or aad jo fidiv sbb lret mov sub sbb adc (bad) pop jge nop (bad) lret push or movsb sbb ret (bad) fs xchg pop or call mov es xlat xor daa mov pop sahf mov push js stos dec ja mov and inc push jecxz xchg dec jne xchg loopne inc push sub jp test mov pop out outsl inc imul dec inc dec aad lods mov popa push mov lock fidivl test xchg xor xor push jbe sbb scas inc cmc sbb fistpl and lock jp stos pop adc xor xor aaa test xchg pop fiadd ret fist dec sbb repnz ljmp add sub add rcrb scas test sbb aam sahf xchg lret push stc dec sbb ret jbe xchg ror adc push les adc mov fcoml aas xor hlt sar (bad) ret aam (bad) inc pop jle popa imul inc or push push pushl jmp pusha pushf inc jmp xchg cmp shrb xchg push hlt xor mov mov mov or loope mov add iret fist sahf dec int mov mov scas push cmp or in aas adc test hlt sub leave lret in fisub (bad) movsb adc pop dec nop andb add xor pop pop aad add sbb dec in sub aad sub ficompl (bad) enter stos lret mov jmp jae rcr icebp dec mov faddl sub dec arpl dec lea in sbbb sbb push xchg dec in scas inc and pushf pusha push movl pushf movl push lea jmp mov (bad) xor int3 sbb je sbb fldz push add dec stos mov jnp rorb ss sbb dec daa sbb repz scas loopne push sahf leave inc cmp xor mov ror ja add aaa ljmp mov jmp jne pop cld jo fsincos or xchg test pop pop adc inc push aaa mov mov jecxz jo and repz pushf sbb add (bad) jne test mov aas lcall insl pop cmp and pop xor scas inc test fs jne call pusha jmp xchg inc lret (bad) cmc pop push icebp adc sti test mov dec fild fwait xchg mov and lds or cs sub es mov and fwait (bad) loop cltd sub mov and and (bad) push and jo jp jne (bad) mov rcrb push out or jno ds repz out push mov lods pop or push dec sub clc push push xbegin mov lds pushf aas int jb test mov clc repnz movsl mov mov jp gs jp das push adc movsl outsl enter pop mov fmulp sahf aaa or imull cmp sbb (bad) jae sti lock lret rolb adc mov jmp sbb mov stos rcll xlat and lds test mov push push dec orb mov cmpl (bad) int3 bound xchg cmp inc iret push adc cs mov aaa jmp into xlat xchg out ret call add sbb mov pop lret lret push pop lahf rorl popa mov je inc jg popaw cmp faddl adc pop push aam jg xor dec in inc xchg or push in sbb inc push std pop aaa adc pop test out jb popa mov mov fist push mov jmp xor or aam pop fisub out out imul rcll call cmp icebp aam cwtl sub (bad) shll xchg inc addb stos cs jno scas inc int3 repz jmp mov testb dec (bad) sbb fistpl add cmp in imul push mov xchg add mov cmp cld (bad) mov pop into out push mov in adc pop fbld lds xor stos cs cmp pop adc xchg mov sub bt push cmc repnz call inc xchg jge rclb pop fldt cmc hlt cmp cli insl mov aaa cmp jle movsl push cmp push sti nop cmp (bad) jae rcll adc mov lock mov inc cmpsl xor sub and add pop (bad) cs pop mov imul rcll js (bad) push jmp aas push xchg push fs jne xor xchg sub lcall dec clc cmp xchg lods xchg mov pop jle pop in inc pusha jnp bound dec lds add push (bad) (bad) out mov test xchg inc mov roll fstl sbb aas lret push loopne pop rcll inc sbb xchg daa movb pushl pushl popl movl pushl ret add dec outsl arpl inc jb add test dec (bad) jmp movsb (bad) add into xadd bsf mov movsbw clc sub dec cmc mov clc jmp movb pusha lea jae push jmp dec jmp lea ja clc bt jmp call xchg jmp jne test shrd aad jb xor add bswap shr sbb mov call lea jne rcr data16 (bad) lea adc mov jno cmc add pusha movzwl add pushf xor rcl mov pushl call push add cmc call cltd dec in mov sbb repz xlat rcr mov out in inc loope repnz jp and inc mov pop imul rcll xchg movsb xor in les fcmovnbe outsl mov sub jle ret xlat (bad) cmpsb aaa or sbb enter cmp push pmullw les pop jl jcxz in xorps shl pop sub or pcmpeqd jne inc jo push jb insl insl push fwait sbb adc jb adc shr sahf (bad) (bad) call pushl lea jbe ror mov neg (bad) repz roll add dec push movzbw bts mov bswap pop add clc push movl and shld mov cmp bt test cmp pushl pushf pusha pushf lea jbe test cmp sub neg pushf mov shld sar mov xchg test lea pushf add test rol shr lea mov sbb add movsbw pusha call bt clc pusha jmp stc cmp sub call lea jne shl rcl movsbl not mov clc push bswap shld sub and movzbl shl lea pusha pushf sub bt cmp test pushl popl stc cmp test cmp pushl lea ja add clc sub jmp pushf lea je pusha mov pusha lea jmp cmc cmp pushl bswap lea pushf pusha not mov jmp mov adc (bad) push outsl jl cwtl fsubs (bad) sub pop (bad) aaa mov inc cmpsl mov xor movsb dec (bad) xchg cmp adc jmp mov das mov shr out push nop xchg fnop push pop insb push data16 test or repz data16 add push jnp jbe mov cmp in jae adc or es dec mov add stos cld adc xchg fcmovb mov xor lea sub iret fnsave mov idivl mov push mov dec mov mov sahf xchg ljmp push inc mov add mov inc popa mov lock push arpl repz mov xchg jge add pop adc mov add pop xlat aam adc rolb rcrl jae add icebp inc out push inc bound xor popf jns lcall and cwtl and pusha icebp adc sub (bad) mov sub mov addr16 stos push (bad) out push inc pusha jmp mov pushf pop sbb mov lods jne fincstp mov pushf xchg sub mov push jne mov and and lea jne pushf movb lea cwtl lea lahf mov cwtl movsbw jmp push or pushf call pusha cmc cmp sub pushf inc call or jmp and mov lret in inc push push jecxz and xor mov jne ss xlat repnz in lahf mov push dec scas nop mov pop adc push hlt jae adc mov out cmp push lahf aas fcompl fistpl fwait jge jne sub (bad) push xchg xor ret andl lock mov inc in and cmc mov mov cmpsl and cmp inc (bad) repz push (bad) repz daa mov sahf cmp fyl2x aam test adc aam adc cld movsl aas pop sti mov jge adc out popa addb cmpsb dec xlat push scas (bad) mov pop lds (bad) adc sarb gs inc (bad) cmp popa (bad) inc fwait aad sub (bad) jne push push jo xchg and in inc push popa ja in and std and ss jge inc sbb ljmp jo dec lea push sahf dec mov cli out jb (bad) push xchg movsl xor (bad) icebp aam pop movl xchg dec iret popf xchg and dec (bad) push inc adc (bad) mov repnz icebp xor es (bad) outsl into out idiv fucomp mov lods mov pop fsubl push adc xor sbb adc enter (bad) iret int3 int jne xor (bad) aas add repnz hlt (bad) out sub sahf sub dec jbe adc or int dec popa dec mov nop mov into (bad) mov outsl (bad) jmp jp inc cmp lods in lods push or xchg xor pusha inc push fucomip push inc or sarb mov loopne jecxz es xchg push frstpm(287 mov dec (bad) mov hlt adc inc adcb cwtl out inc add add fistl adc add push out push inc lcall or and outsl je cmp (bad) mov out push dec (bad) adc mov pop addr16 ficoml add int mov aad mov test cmp push add push fcom test pop xchg imul jle and hlt cli je jae pop test out jmp xchg arpl out push inc mov xor ja pop cmpb mov jb int3 jo lods mov lea bt adc sub shrd inc push and push xor pusha lahf mov cmp das rcr xor cwtl cwtl seta lea pusha pushf call std ds xor movsb and ret jg (bad) sti ss push and (bad) xor pop fwait movsl dec jp (bad) jnp addr16 xor das outsl jne lock mov push pop cltd pop addr16 loopne test aas sbb cmpsl and push push lock xor push add (bad) dec pop adc pop (bad) cs dec fdivr insl dec adc push enter lock adc lods sub dec push lea push (bad) out adc mov (bad) hlt dec scas adc xchg ja and mov pop das imul loopne (bad) inc pop fidiv mov and arpl dec outsl scas outsl test loope inc roll scas das insl cmpsb nop adc popa repnz jg adc (bad) movsl scas mov test gs bound ret ficomp movsb scas add xchg push dec fldt bound (bad) mov or cmp inc fisttp xor into or mov mov cli stos xor icebp bound insb or jge iret shll and scas lret mov cmpsb (bad) mov mov popa jge popa sub mov ret xchg rolb int push dec xchg ss jge xor rcrb adc inc aas adc test popa xlat sub push bound jno test mov shll insl lahf sti jo or mov (bad) (bad) mov enter scas (bad) repz xlat test add repz jbe gs fdivrs ret inc insl imul test in adc cmp test push xorb insl xchg jo or ljmp xor ja inc pop (bad) clc xor movsl out adc cs and into daa popf (bad) in pop rcl fwait cltd pop hlt dec add sub out (bad) or cmp push sub cmpl (bad) insl and sbb aas imul loop cwtl neg out nop push cmp repnz test lret jle mov add cwtl and in cmp (bad) repz pop jae popa (bad) xchg sbb loop insl arpl or and xchg and xor mov and scas mov or and imul out icebp outsl pmulhuw cmp loope sbb and inc xchg add js adc call jo das mov jge mov jae adc push jle sub or add nop adc movsl aas addr16 add dec mov popa dec fs cmc insl adc in mov push (bad) adc jg add negb gs outsb pop lods cs dec jno fstpl push sar fucomip dec into mov in dec push es push rcr test repz push dec jb sbb ljmp das repz (bad) jnp out push sub mov fiadd push mov inc inc outsl enter sub insl dec push leave ljmp push jns,pt in imul andb cmc inc adc xchg jne add arpl jge fildl fsubrp mov mov inc and sbb pop pop repz xchg idivb adc out cltd outsb or (bad) in out sub into subl and test ljmp aam jo imul or test sbb jle sbb das lock jp fsubp xlat sbb adc test sub shrb dec and dec sahf jo push jmp jge ss ljmp and lock jle ja jge insl fnstenv lret stos and add stc scas inc addr16 jecxz loope jge adc mov xchg jnp (bad) hlt dec mov cmovg repz insb (bad) dec ljmp pushl fs rcrb into lods jecxz imul mov mov adc pusha mov or jle neg cmp pop lret (bad) mov dec enter pop scas sub aad or in lods jb cmp test addr16 outsl adc arpl adc inc popa jb das cmp or add shll ficomp lock sbb scas gs jb (bad) sbb xor rcrl loop mov decb mov rcrb pop xor arpl and test xchg je cwtl lock pop mov fs repnz test (bad) gs sub enter sub xor sbb int arpl mov mov aam daa mov addr16 cld jo add lahf out inc and sbb and iret loope lea out inc fsubp int3 out int out mov insl dec loop gs leave pop cs sarb je enter gs loop mov out jecxz imul xchg lods jge ja and data16 adc out mov aas movsl xchg sbb pop inc insl or outsb (bad) xor in das dec and pusha and xchg inc mov (bad) mov daa pop arpl mov cwtl inc rolb inc into cmc lock add mov test daa scas loopne add lahf cmpsl mov out inc out add lea jns mov outsl xchg jl imul and (bad) jne lea cmp add cmc movups out sub in insb or jne insl xor aas nop lock or cmp fildll dec clc aam cwtl outsl xor fistp pop out pop js ja push lret je fstps test cmpsl jge fwait dec icebp call and dec cs ret mov xor out gs pop ds jns daa ljmp ret jecxz shll mulb dec adc sbb lret cmp daa pop sub adc cmpsl fld shl mov xchg cltd inc insl push and xchg fcomip and fsubs (bad) das in push and pop mov ffreep push out dec jmp insl mov ljmp or or jne dec or or dec cmpl in push sub add push sub dec jg inc stc adc loop jmp lahf adc add dec mov jecxz cld mov imul xor lret cltd cs int loopne mov xchg xchg push sbb lock imul mov enter add push mov adc je cmpsb pop push mov cli shr jl out pop idivb mov sbb je lods adc in into insl cmp pop test (bad) jle or inc jecxz jbe adc pop mov and outsb std cmpsl into cmp insb jle mov sub mov stos inc aam je je,pt push mov das idiv and add lods gs adc popa sbb jge cmp ljmp cmp mov inc pop das popa das out and out cmc outsb (bad) sbb bound adc jge dec dec push and movsb cmp shlb or fs bound mov loope vpaddw (bad) out mov inc loope clc xchg sar push and and xchg dec out push insb test xchg dec mov fimull ret mov fdivp dec and int3 mov push sub pop or sbb and sbb cmpsl das jmp dec xlat stos push das data16 pmulhuw and cld rolb jo cmp dec lods sub lds ds pushf xor ja ja addl daa leave je (bad) xor push dec clc xlat inc es insl out xchg push into loopne and fild ljmp cmp fildl dec fwait aas sbb loope add sbb sbb mov jge dec or fmuls in addr16 test mov mov jmp or lahf sti out pop fistpl outsb lahf push clc jp mov cltd jnp int3 adc insb aas mov or push pop lods lods or out movsb les clc loope aaa mov and sub cs ret adc push inc inc out fcomip jge inc pop add das lret mov push hlt test and lds and mov pop sbbb test xchg scas std loop outsb jge,pt nop js enter add js and fldl out mov gs or and xadd subl aam xor xor sbb mov (bad) push gs inc imul xchg push mov xor cltd jmp stos xchg pop dec daa test lods or insl xchg scas dec das cmpsl mov (bad) jecxz fcomip jnp (bad) push ja xchg stc sub gs push je jg sub dec out sbb jge push push jmp gs inc jae xchg and inc loope jno xchg jne adc call mov cltd ds pop and cmpl mov sbb test xor and pop jge xor andb dec rcrl pop insb repz shl ret or push add ret test jecxz loope push or cmp lds push stc jnp jmp push and and jge in (bad) gs sbb divl jae (bad) adc jle test clc jmp stos fild outsb mov jmp int add gs xor pushf cmp fs adc in out mov (bad) imul xchg (bad) cli jo jmp fsub mov ds ljmp or imul add imul cmpsl hlt out insl inc outsb add pop or xor or enter add sti lock negl mov push pop xor pop addr16 aad (bad) movsl je jecxz jge nop xor xchg arpl es xchg shll lock or add dec (bad) out add jge and lock sbb call insl repz fnstcw out bound int jecxz xor scas xor mov jecxz test xchg repz shrb push ficoml jno and jg dec loop sbb mov das bound daa mov rorb xor repz addr16 popa je lock mov sti enter int3 sbb (bad) xchg push mov xchg cltd addr16 test lock lods push xor xchg xor xlat and (bad) (bad) (bad) out scas lock addb popf and push js pusha imul mov (bad) jge (bad) push xchg imul stos scas shrb dec jge ds out mov xor jg inc jge je cwtl push sbb out xor lret push inc loop and scas daa lea or mov loope jg xchg iret cmc ds negb enter mov imul inc xlat push cmc idivl and mov pop sbb gs inc push (bad) jo jecxz jne xchg jo inc in fild sbb inc mov das and out orl ljmp pop (bad) clc mov pop inc adc pop xchg jne sbb fildll out bound (bad) lock das add cmp add ja punpcklwd pop ss dec mov sbb pop lret sbb (bad) sub cmpsl add call mov movd fs or jo xchg add sbb out jno jbe ret insl pop fldl inc mov fcoms dec ficom xlat xlat gs aaa sbb sbb test test repnz cmp push in jae movsb or test nop xor (bad) idivl (bad) mov pusha adc add and insl xchg jns push in fnstenv mov and push add xor jns loop in or jge push jmp or mov mov in adc sub xchg jbe dec jg jle mov pop pop inc mov jae adc adc cmp movsl adc xor sbb add (bad) lock cli adc fbld repz lods mov std pop and jg rcrl aad movsb out jmp jbe aaa insl movsl mov jmp jge inc ja iret es mov leave subl mov xchg push jne andb out test and or dec pop or in xchg add sub mov mov jge pop fnstcw adc adc mov iret nop movsl push push jbe mov in aam fiaddl lock and ds scas and mov addr16 popf mov ss xor xor cmpsb inc mov loope mov lods xor repnz inc idiv scas push mov jecxz jge aas sbb mov pop push push pusha stos mov insb outsb ja fs jns fwait out mov loop sub in or dec insb push jno shl fistp out sbb and fadd fildl aaa (bad) mov inc jbe push ja and dec imul mov cmpsb push cmp lock pop test pop add cmp insl imul out mov xchg mov dec arpl in les inc das xchg xor (bad) mov jge dec add dec xor aas inc push sub ficompl addr16 xchg inc leave pop sub divb das dec test and xchg sahf imul (bad) out into dec or mov jnp,pt loope insl mov dec in xor outsb lahf sub and addr16 insb pavgb jge gs leave call and clc push outsl clc inc xchg lds insl outsb add outsl sub jle push cmp or mov jmp in test (bad) aaa cmp sbb repnz ds adc test clc lock in aam in jge add push or aaa push sub add inc mov dec int3 lock and cmp fsubrp ret out outsl call jmp adc lock and xchg adc arpl (bad) aad hlt push pop aam jne lds js daa and push and xor and sub lock adc (bad) in ljmp dec movsl pop loopne and movsb (bad) push xor mov xchg sub and stos push stos jbe add sub jg add or cmp or outsb sub in xor out in lock popa outsl aaa cmp loop repnz stos cmc test lds jg push push mov push mov cli ret xor mov test mov jmp gs test lock inc popa call insl sub xchg jo arpl out popa cmpsl imul mov imul sub popa movsb daa movsl or sbb loope outsl or insb (bad) cs imul mov adc imul stos inc popa es movsl sti bound ljmp arpl inc inc imul test and movsb or es in cltd loope lock sbb jge jmp dec out imul bound cmpsl inc in and out mov mov mov stos push stos arpl inc bound inc cmpsl arpl outsl test lock outsl (bad) mov or sub mov adc loope xchg das arpl ret (bad) add bound mov out mov mov or sbb in mov adc aad mov popf scas dec and sbb inc jo insl add (bad) jns loope out mov test iret daa or and imul scas gs leave adc pop outsl push in sub outsb test insb pop adc inc mov xlat xchg insb push ja pop loop lods outsb lret in cmp dec and sbb insb or (bad) iret cltd arpl mov in add push sbb outsl add mov rcll mov add insl shlb mov pop scas in ficom or add jmp push insb and adc loop gs add push inc add pop (bad) call sbb imul pop out fisubrl int3 jge push pusha test (bad) shlb comiss int gs push pusha nop pop jge xchg call int mov sub (bad) jge daa mov insb jle je test pop cltd xor add fsubr movsb jb inc dec sbb in pop test sbb out mov lahf cli enter xor mov xorl push pop mov lock clc sub outsl xchg les das lahf in and push popa fist xor outsl or push das and xor or xor ja outsb pop in cld (bad) int3 lock mov (bad) in mov out xchg gs imul bound cmp lock mov gs popf arpl mov mov imul mov arpl xlat rol pop mov cmp out in xor inc jnp test out sti test dec gs sbb jnp mov daa test pushf add mov (bad) mov sub stc and push pop stos rorl out mov ss out adc scas addr16 and cmc push (bad) add mov sbb loopw jo mov sbb inc inc jp ja mov out inc into gs not adc in out (bad) insb jb lret out in fcmovnu idivb lock mov dec inc pop int push subl (bad) sub lock fmul xor (bad) enter test mov jge pop data16 sbb ja dec aad je push and or sahf jg mov leave imul pushf pop outsb icebp (bad) in (bad) clc add lock or jle sbb out ret ds lahf xchg sarl add test xor je pusha mov dec cmp xchg cmp inc jmp in in fsubrs and aas sub sub scas pop jae mov in nop (bad) add outsl jge and adc or cvtdq2ps push int les cli iret mov mov fwait or mov arpl sub clc cmp dec rcll pop cmp push int push mov sub mov fisttpl jo stc lea mov jnp shl test and insl push adc dec jne cld outsb dec fisubrl sbb pop insl mov lods in (bad) or loopne insl mov js lock fildl xchg sub lret pop (bad) mov cmp xchg pop loope mov dec dec xchg fs ja movsb in lahf pop pushf pushf pop das fisttp jns ss arpl adc incb inc mov out ljmp sub xor scas mov sbb in rol xchg inc orl jg insl xchg out xor push mov xchg mov jae bound inc fidivrl add cmp mov xchg push jbe int3 jo lds dec (bad) int mov cmpsb pop push cmp jmp rcrl insl xor jb int3 sbb add cmc dec and jecxz jno or sub (bad) sbb pop insl push jne jle cmp sub and outsl cli aam xor push mov aam jg inc sub mov pop popa orl inc insl pop jns out mov out adc push cltd and pop ljmp scas (bad) cmpsb stc mov inc faddl (bad) mov cld jno and fldz pop dec jp popa insb imul das enter bound daa int ds insb aad loopne insl pcmpeqd das (bad) jge sub out add stos stc or mov dec mov or mov mov jo dec gs push mov or loopne dec jmp outsb or xchg repnz in mov test push pop and aaa cld cli loope sbb or insl stc js movsl and es dec sarl jecxz outsl popa or into xchg adc or dec ficom or gs sub mov push jg inc push cld jecxz (bad) mov or lock mov daa lods call or cmp lret dec enter adc add ja inc ljmp ret and imul pop fdivl xor inc imul dec repnz jno (bad) scas insl shrl mov jnp arpl lock xchg mov cld adc jbe sub jnp xchg pop sub fsts in mov cld inc pushl test mov (bad) sbb mov jge pop dec pushf push sahf lahf lock cld fs out adc adc bound stos dec fistp pop and in pop dec clc push xorl push or push int3 movsb add cmp ja in loop insl jb pop aad jmp cli push test lds mov mull jae jno bound jecxz test sbb test in repnz popa push jge jg cli jae in adc pop and or das lea or pop mov push push mov sub jp (bad) loope in cmp or sbbb lock subl aam and or mov push (bad) into jge in xorps sahf and sub or lock sub in pop loope loopne dec (bad) mov cmp lods gs daa outsl cmp add or leave add outsl call push mov shrl cmpsl and mov cmp cmp dec (bad) int stc imul cmpsb mov push lods les stos in sub xlat xorl leave push cmp das or loop mov add xchg push mov dec lods push leave and jno pushl ds out into iret mov int3 jge inc sub insb and jg or xor cmp test or mov in fs out lea sub div jg test test es add repz (bad) (bad) sbb dec dec mov push cli sub lret sub sub mov jmp imul in int enter or mov out ja dec sbb pop mov push imul in mov and int3 psubd pusha imull stc loop pop out jnp or stos idiv xchg iret inc inc stc sbb fldpi in scas xchg inc inc or das repz jb addr16 cmpsl mov int js lea neg add push add push lret lret fwait shrl fistl imull cwtl lods insl or push loop enter daa repnz scas xor out mov dec mov mov mov mov xchg adc pop push repz imul pop scas sarl sbb or dec test cmp mov sub fwait add xchg in ja jne xchg sbb imul movsl cmp xor cmp adc pop mov push jb ret or fadds or in sub repz push bswap sub sub sub bnd xor mov push sub sarl adc lock mov je and adc popa insl cmpb in enter jecxz cmpl (bad) int hlt loop sub xlat movsb add pushf jnp jnp mov test inc adc and mov arpl sbbb in sbb lods sarl ljmp ret (bad) fisubrl aaa insl in cmp lea sub out pop jmp bound mov outsb imul jle or sar and scas sub pop movsl jp outsb inc add dec adc mov inc arpl cld cmp sbb jae popa outsl xor js shl adc xlat sbb lea (bad) jg insl fmul sahf sbb push cmpxchg repnz lret sub aas outsb dec jns enter jmp insb in fs fcoms jg inc sub scas lahf (bad) icebp cmovge inc sbb add repnz hlt and pop mov testl ljmp pop cld pop jae add push adc lret arpl aaa stos out jnp,pn subl (bad) ljmp fcoml sahf (bad) fwait gs outsl outsb xor xchg xor int push and or mov lods out inc lret sub pusha loope ret cmp mov push sub dec es sbb mov cmp dec loope outsb jle or and mov (bad) xchg arpl lea inc jl gs popa ja inc mov insl loope jge outsb dec cld and jp ljmp and mov and addl jle jge lcall gs ret shll gs stc ja leave clc faddl add je jb adc mov loop lods gs xchg or mov bound mov cmp rclb mov inc popf das sub jg jmp das (bad) std outsb jge in cwtl test adc xlat cmp mov mov lahf in pushf sub jecxz xchg mov cld stos call push pop inc dec cmp fs cmp cmp jo pop mov lock pop push adc mov mov adc in ljmp cli jno call std iret sbb or jno es std xor addr16 jns mov (bad) notl xchg sbb mov scas ds out push fidivl out test aad mov jge jle jnp pop inc cmp cld mov sbb push fwait repz (bad) and and cli shlb loop mov cmp mov je adc mov insl and pop scas in leave loop fdivrs jp adc sbb js cmovg in std sbb xor ret mov sub or rolb mov movsb xor ss jmp and or lock jge mov lahf (bad) dec into cwtl fldl push gs inc pop push js jbe (bad) or xchg aad inc shrb ljmp popa xchg pushf fild dec or ds ljmp sub pusha sub mov rcrb (bad) (bad) fucomp xchg into (bad) (bad) test stos and jge cmp test lock xchg xor adc aad or and mov (bad) dec cmc popw fwait mov push pop push addr16 adc insl jl push mov into push lret ficomp gs sbb or decb out aaa std out adc aas mov in and cmp and xchg mov mov cmpsb jge dec mov or loop dec jmp dec ljmp pop das lret out dec inc les enter mov gs push add bound push arpl in lcall sub aad imul pop int3 dec push jg and fsubrs xchg insb cmp clc insl cmpsb xchg gs pusha sub xor pop repnz and (bad) arpl jae mov jmp out xor ret js fucomip xor jge and gs pop inc adc repnz icebp movsb mov mov push mov (bad) cld jg pusha adc ret push sti idivb nop add out sub test xchg ret js or sub push das scas push lock dec xor jbe fisubrl xlat hlt aam insl adc inc scas mov (bad) xor les push mov xchg cmc bound out loopne mov sbb loope aaa aad sub ljmp jl lret xor mov ret repnz jmp notb lock xchg cwtl popa sub inc jge mov sbb xor aaa sti repnz cmpsl lcall push fsubrs dec test gs mov mov cmp mov mov insl sahf divl pop out cmp repnz xor gs callw daa inc fnstenv loopne mov cmc xor pop jno in adc das and jecxz mov ret out xor dec jle in mov dec mov adc sti out int3 cmp arpl mov lahf and bound mov dec (bad) xor inc sbb test lret xchg mov jae pmulhuw sub jecxz repz xor and adc sub inc add mov repz xor ljmp push out ret jmp cmc in and loope out add mov jnp cwtl jo inc (bad) jnp cltd sub sar lods push sbb dec out stos adc stc mov sub andb cmpsb inc mov icebp stos inc jecxz and (bad) out shll gs ss scas dec hlt add pop adc jo repnz xor (bad) add loope shrl jne mov mov cs addb mov push xchg aas lcall decb lret sbb in out cs sub push loop (bad) fimull dec inc add in xchg fnop jne ret inc jge jae call mov (bad) daa and in inc aas fcomps repnz push imull push jns or jge jae mov daa insl jle lods mov test cmp stos into fidivl test roll pop cmp add out je and cmp loope sbb outsb loope sub xlat pusha leave adc sub jg mov or jbe outsl call push sub mov ss and mov rol jecxz pusha loop div icebp scas dec gs call or outsb add loop lcall mov ss loope push push test cmp arpl lcall scas fist xor adc pop ds push (bad) hlt stos test pop cmpsl mov out mov xor out xchg cs or test sbb in ret (bad) mov je xor insb mov mov or cli (bad) sbb out cmp aad pushf and je pop insl pop dec imul mull (bad) out jl insl jecxz xor ja adc mov sub ss lock lds jge add (bad) and inc lahf jae jl shlb and gs into mov mov push cmp mov mov or mov ja push gs jg ja xor mov mov pop xor cmp ficoml lock icebp insl inc cmp or rcll shll and nop mov cli adc sbb lds lahf inc insl jge mov pop (bad) das ljmp cltd pop xchg in fisub gs adc enter xchg xchg mov fadds icebp push push push loop fcmove jl xor fs push in in lock (bad) xchg int3 sub imul scas inc xchg outsl ficom insl dec lea ja into (bad) das and and and pop cld insl cld jle mov mov xor sub or mov jecxz push xchg into xchg repnz xor dec rorl pop out add pop adc mov adc jg mov lock pushfw xchg and sbb mov faddp js inc and aam repnz jg xor push pop push dec lods mov outsl inc adc cmp gs jae,pt xchg insb mov or das gs pop push movsb or (bad) scas (bad) aaa test or call mov out mov stos hlt jge and sbb enter cmp popa and loop mov in xchg cmp jge and or arpl into daa mov stos stos out mov jmp pop pop push insl ret repz cmp scas cs outsl movsl movsb mov lret loop mov mov mov inc mov and out and aaa test ljmp mov adc lods inc pop mov int push sub add inc add enter imul mov dec movb icebp add lret xchg stc and sub or (bad) cld int3 lret insl cmp and out mov mov pop addr16 (bad) mov lcall push out jno push jp repz mull and dec pop jb lods pop cmp inc aaa mov in nop and ret in jns scas outsb enter stc adc lea mov flds xor mov (bad) jp mov mov aam fimul cmp lret mov insl sbb loope cmpsb rorl cld lret pop icebp popf out mov xor jmp lock xor hlt inc insl ret mov in jp imul jge xchg stc fidivl jnp imul dec insl jo jne movsb adc repz (bad) and pop cmpsl inc loop xor gs dec mov out lahf out movsb loop cmp inc inc ja enter push dec test cli and das or pop add das push popf add push sub movsb lret ljmp imul inc push jge sbb jno push mov or pusha mov mov aas jmp aaa bound das dec (bad) testl bound xor bound pop ret loope ja sbb cli (bad) pop xor js add outsl jne xchg and inc cmp loope mov push xor in sarl jl push insb inc adc push lret addr16 mov (bad) ret sbb mov inc jmp rcll rol fidivl mov cwtl jge add out jae dec xorb and xchg add lods (bad) stc leave and and and push adc push push mov sbb mov sbb lret es adc (bad) out sub out jg cmp inc andl adc jge (bad) push xchg gs js pop pop lock cs adc mulb and fisttpl push adc mov or add leave insl insb adc pop inc scas test jae pop push jmp inc pop xchg jge enter adc in cld ljmp fwait mov popa inc push jmp mov mov lock lahf clc sub lahf in call and ljmp out stc insl pop dec fcomps js cmp insb add or (bad) mov xchg data16 or lea pop insl adc jge pop or popa mov cmp inc jmpw test outsl adc adc pop or mov aam sub adc mov pop jo pop add dec pop decb (bad) mov or push iret std or add push jecxz xchg pop jl in out mov dec out pop es outsb scas lea std mov jb,pn and mov movq std fsts mov rol dec mov in call loope jmp jge and xor scas cltd sbb xchg or xor fcomi addr16 sub jnp mov movsb iret stos inc outsl ret ss inc loope cmp lea stos (bad) mov cmp xchg pop stc subb (bad) insl push (bad) iret addr16 outsb mov sbb in lcall add push and sbb imul xchg push sub std addr16 in add icebp jg add mov sub dec std add ficom adc in mov push push jb push cmpsl pop inc xchg jns pop and jne je inc jmp aad insl lods push addr16 jle jg xor in jo jge add (bad) mov sbb aaa cmp inc (bad) scas adc inc jp xor mov xchg adc push loopne xor stos mov push sub imul ret cmp das test ja rcrl and pop add xchg sahf scas dec inc mov push arpl inc popf xchg sbb pop jno dec shll sar mov or xchg int3 add mov xor xor adc aaa and cld mov or mov pop mov insl mov aad daa or xchg pop adc pusha out cmpsl xor outsb std call cmp fstl out outsb adc inc divl loope adc lret xchg gs out repz jge cmp les out mov mov insb lock xor arpl push push mov cwtl xor out mov out jecxz or out mov push mov out push or adc lods clc dec arpl shl fidivr push cmp xchg xor sub gs outsl sub fnstenv or cmc sbb adc push pusha push inc nop jg add dec fsubrs sbb repnz xchg add outsl inc xchg adc addl (bad) ljmp dec repnz inc mov jo xchg fdivrs fidivrl (bad) cmpsb mov out or pop loope sbb test adc sysexit or dec subl or jge sbb stos loop inc lahf lcall sub jge ljmp sti adc cmpsw notb sbb sub jmp lcall es mov popa mov fisttp hlt xchg (bad) pop arpl add sti cmp rolb movsl sub enter and mov jg bound shl mov mov dec inc xor dec pop std xchg movsb inc das mov in jl pop in push add fisttpll gs cmp lods ffreep cmpsl xor jne daa adc sarb cmp cmp pop scas inc dec xchg ljmp sub das xor add sub mov sbbl arpl cmp sbb push jmp std lea pop aaa xor dec jno adc imul (bad) xchg push mov lods pop (bad) (bad) and or (bad) jae inc xchg adc sub sub loope test xor stos imul dec hlt sbb add add xchg iret adc and jo in insb fdivrl inc or or mov sub jge mov std insl mov movzwl sbb push sbb movq xchg movsl icebp sub push mov fildll arpl cltd sub out into xor outsb push xchg or ss adc bswap aas loopew mov aas jg jmp xor jl sub push cmp add mov das sub mov arpl inc add (bad) push jecxz roll loope fsts inc mov rcrb bound lret xchg xchg jmp cltd xorl adc out jo ja orl aam call scas fs fiaddl mov insl aad jnp (bad) std sbb add addr16 pop rclb leave popa push jge outsl sub inc inc or (bad) call inc scas lret and xchg xor (bad) mov (bad) pop jg xor sub ss jle (bad) xor lahf subl mov mov xchg inc imul jmp push sub arpl pusha movsl xchg inc pushf inc dec (bad) jge lea dec mov out add es cs push push aam lock push xchg rcrl mov xchg daa add cmp sub loopne adc daa xorb cmp lcall pushf lcall cwtl xchg pop cmpsb outsb mov jbe ret xor cs xchg stos xorl jp ficomp (bad) fidivl add jge jnp (bad) push decl or add sub sub and test dec pop and loope mov ret and clc inc or push and mov jmp test jo icebp in jmp sbb or ja lock sub enter in xor dec and jge test lcall loop or fucom (bad) jecxz divb loope in jg mov pop jle mov test and roll addl push insl loopne cwtl and icebp mov stc outsl insl daa cmp jg jne mov std push pushf xor popa call push cwtl (bad) in sub sbb pop mov lahf insl decl xchg arpl mov cmpl cmc in lcall and ljmp cwtl dec or jb sub loop gs mov out loopne inc mov out in cmpsl dec pop gs roll arpl out dec dec mov mov aaa mov in in inc and inc (bad) outsl add mov repz add das push pop es dec jecxz lahf jo repz in mov cmp (bad) popl xchg (bad) mov (bad) mov push mov sbb out cmpxchg8b (bad) lret pop pop xchg jge test fsubl ljmp jne jo loope push mulb ret arpl gs daa mov xor push pop fbld jecxz or out gs in jno les shr mov jge mov inc or mov pop add cmp (bad) sti xchg insl add pop cmp (bad) cmpsl stos in pop mov std dec fdivrp mov movb iret loop jae xor mov sub gs mov dec out jge jae fcomps push fimull xor repz sbb insl pop sub ret mov ret jo in rcll push scas jge and loop push rcr lcall mov ja scas lods push jo insl sub sbb xchg rcrb sbb sahf xchg das test sub fbstp jae pop hlt or pop adc push rolb out arpl pop or out mov cltd je sbb scas outsb add loop out push ljmp out pop inc lret push sub sub hlt add (bad) out and cmpsl push cmc fstpl jbe iret dec adc xor mov jle mov (bad) (bad) aam cmp xchg scas inc xlat out mov push pop insl out jle mov sbb mov add sub push out rcrb and mov add jb scas (bad) cmp dec fcomi pushf jg cmp or cmp (bad) push repnz scas into lahf lret loope xor pop dec out fdiv jmp cmp pop add push mov shr dec mov repz out mov mov out insl sbb mov fstpl out mov lods xchg jmp mov (bad) (bad) lcall int loopne inc or pop jmp add inc fstpl popa jl shr jmp push sti inc xor out adc cmp pop pop adc mov inc adc fwait in ljmp in out loopne lock cmp out bound pop jge xchg inc xchg push cmp out mov mov fld in push arpl cmpsb out push dec cmpsb test clc sarl ret add add rcrb xor fucomp push pop cmc jecxz aam lea or popf jecxz ljmp fistpl mov mov jb (bad) loop aam mov out out loop leave loopne out mov ret lsl sub shl pop pop push out mov xchg mov sbb mov jecxz cmp cmc ljmp mov pushf out js pop or cmp insb dec add jnp cld es lret add or out dec popf insb fwait pop cli xchg adc imul (bad) mov scas pop stos popf xchg lods sub cltd mov es out adc loope sbb mov int (bad) adc (bad) sub jne sbb dec les arpl idivb xchg add mov cmp mov push mov inc mov inc push popa aaa (bad) stos jo sbb ret ja test scas das sahf add out cmp stos out fist jge cli daa and dec mov cmp sbb jge mov lock pop lock stc test fs stos iret inc out aam and jge fsubrs and pop insl adc lea fistpll add sub push lahf test xor fistpll insl rolb mov call inc in dec imul push mov mov add punpckldq lods popf aam pop insl in push enter xlat jl repnz xchg cwtl jns jge,pt push aas (bad) cmp (bad) xchg scas dec loopne ja mov sub clc or adc or jae (bad) fbstp out gs and push or push or clc popf test mov cld pusha imul std pushf xchg (bad) push ja (bad) jnp repnz call and xor and jge imul or aam xchg je push push arpl enter jb in lock loop outsb out mov xchg mov dec mov or mov mov fistp and out pop (bad) jns cmc push scas in adc imul inc data16 or inc cmp jl jnp lcall mov notb push ja inc adc lcall inc push inc and and sbb pop mov mov cs lret add cmp mov bnd iret adc mov and andl in jo bsr ret fnstenv xor pusha call hlt jo jge mov pop sbb lea mov and mulb mov jns lods push add stos jb ja mov cli shr lds out or sub push jae movsb and mov jge mov jns aas sbb imul push gs (bad) movsb jmp and lods imul lods inc or cmp xchg das mov (bad) sbb push or lea mov sbb stos jecxz jg xchg adc cmp jge js fimul cltd mov out fsubr jmp pusha mov pop inc push arpl lret push inc jge push loop sub cmp mov sbb push std or jne (bad) sub dec leave xor aam or scas out lret jno jge add lods inc pop in sub lret fadd mov mov pop cmp xchg arpl test jge or jmp loop sub sbb sbb jo aaa out fistp push inc push jge repnz or call mov push enter adc push push mov xchg sub cmpsl cltd and jecxz jo mov cmp push sbb les out out cwtl pop (bad) jp inc rorl insl loop into loope mov pop hlt xchg dec pop jge sub repz movsb mov dec fisttpl add xor sub add adc das or in insl int out ja (bad) ficoml jmp (bad) loop js xor push ret jecxz icebp stc je scas or and (bad) aas gs xor cli jecxz iret mov push adc add jp inc repz shlb movsl cmp mov inc addr16 add push sbb ret lahf xor cmp test xor mov ret cltd fsubr cmp icebp lock insl roll xor and and shrl xor mov adc rcrl lea xchg push xchg repz icebp test adc adc (bad) gs dec xchg jne dec inc movsb add pop jge roll mov icebp imul rorl mov sbb icebp lods jge ret pop dec mov mov fisubl mov div scas insl jae aam push inc sahf cmp pusha jg cs cmc into addr16 sbb xor sbb cmp popw xor cmp iret mov cmp sbb jle pop aam in insl repnz mov and mov in cmpsl (bad) mov push sbb ret sbb lret stc jg pop lcall paddq cmp lret xchg jbe lock aam mov mov cwtl cmc fdivrs dec pop out add in (bad) into sbb mul cmc sbb xor dec xchg pop jbe adc (bad) out jne out dec das xor and fs dec xor mov mov jl sahf jg push out cltd mov cmpsb aam lahf lcall data16 out fiadd inc cmp out scas nop pop out pop hlt xchg ja push pusha mov and aaa cmpsb insl outsb nop stc inc jg lods mov andl adc pop jge pop adc gs fistl lds popa push mov mov pop jmp (bad) ja push xor jecxz sbb xchg sub movsl adc outsb add xchg (bad) mov jecxz inc in sarl in jge out jns sbb dec test inc cli add xor loop lcall xchg and xor (bad) inc movsl cmpsb and and stos addr16 gs ljmp and sbb mov push xor xor outsl in cmp xor in cmp out dec jbe,pt into mov insb sti into scas push insl or xor or out jnp xchg cld xchg ja les xchg push pusha sub (bad) add push (bad) and mov jp daa int3 add pushf mov mov pop dec pop (bad) ss dec mov movsl movsl pop leave jle push pushf mov cmp pop lret notl orl xchg xchg mov dec (bad) jae lock popf shrl jbe mov add test and inc cwtl loopne in or rolb leave fwait jg rcll aad nop fstl cwtl xor popl test mov jle and loope lcall loopne (bad) inc cld xorl lods (bad) dec or xchg dec jae fsubs shll outsl inc xchg nop in call scas jge (bad) sub sbb xchg push sbb cmp ljmp mov cmp dec pop call arpl mov jo insl cwtl cmp push adc jge stos rol out out mov repz mov mov jno popa push inc or add ja adc add subb add test jge call aam cs in insl test shrb add pop scas cmp jg lods pop xor movsl fild test pop dec lds out gs das push cmp test xchg ljmp mov ja fbstp xchg cltd or imul push movsb xchg daa jnp sbb dec adc jg fisttp imul sbb jmp and add lret adc adc outsb or test (bad) lret les xor mov xchg lea dec xor cmp lds add call out jo or dec dec mov shl lock or das loop or hlt sbb cmc xchg int cmp xchg jle lahf jecxz push and mov or cmp leave ja in inc xchg sub iret (bad) cmp in pop xchg in dec adc inc or mov out stos xchg lahf mov pop jno das or add std pop adc sbb enter movhps add mov mov dec cltd repnz clc out mov push cli (bad) xor fcoms bound sbb cmp jl aaa mov mov mov mov xchg push lcall inc pop insl and adc push fucomip repnz je popf out or and cmpsb add test sbbl xor sbb adc inc bound or (bad) jecxz popa test inc popf inc mov cmc adc mov clc mov sub and jle rcrl lock pop lock jo mov adc mov popa aas pushf xchg lods jg enter cli and arpl sbb scas adcl lea push push into iret add inc mulb xor jo sub std fistpll loope xchg cli out add call inc pop push fisttpll hlt test push pop out add jg xchg jbe outsb pop les repnz loop fwait cld push insl std mov inc mov ffreep leavew mov or pop xchg out and inc out inc fistp cmp (bad) testl sarl mov out pop lgs jmp or jae jg add pusha push add shll popf inc clc out (bad) xchg (bad) repz int3 sub dec jae and jns dec sub insb fiadd mov sub notl addr16 out (bad) push xchg aam mov pop push sub adc or (bad) cmp mov call leave (bad) in out stc fs aaa ror pop jno (bad) arpl jno ja int3 adc imul cmp (bad) jge dec xchg in js dec cwtl mov imul lret gs or out lcall fbstp sbb jmp loop mov in xchg sbb jg stos sub mov mov sub cmpsb inc js sbb es aas pop movsb aaa jle out ds mov cmp rclb xor sub pop lds (bad) bound adc dec mov loop testl mov jle and ror fldcw scas and arpl aaa fadd push jg jge pusha sti jge xchg stos lea jg cmp jmp xor out xchg mov dec push sbb stos fisubl in push push aas and jle mov repz lods mov lahf mov xchg adc or sarb add iret das addr16 mov scas int mov add adc mov fwait cmc das add inc mov mov into loopne cmp inc lock insl in sub mov mov fisttp sub lds (bad) hlt ljmp out (bad) iret pop sbb adc ss test push outsb push push out pop inc or rcll scas insl mov push ja dec pop pop jge xor lds add and jb test push push lock imul jmp dec fstpt fidivl shrb xchg sarb lret in mov fisttp sub stos rorb in mov lahf sbb lcall inc pusha pusha cwtl (bad) xor jecxz (bad) bnd shll sbb testl mov mov insl pushw scas mov cmp xor push daa adc cmp push iret mov pop loope xor sub sub gs mov add jg cmpb add jb adc pop jle xor loopne cld inc lds cli and cwtl fist ja mov je lock pusha les mov sbb xchg rclb inc xchg and out and stos lret mov es mov or mov aas add fs or and std mov in into cltd dec mov stos mov addr16 push pop xor mov insl lock add pop std in test dec jb stos xor sub pop push int dec mov out out dec and jns cs fistp test (bad) xchg out mov out and pop jb pusha out sub and jle and add sbb push adc sti arpl pop loop mov ss lahf fildl and sbb (bad) out sub mov in lret test scas add xchg dec lahf cmpsl dec pusha bound int3 out test repz xchg ljmp out decl inc not icebp fwait cmp out sbb xchg (bad) out add xchg aas sbb mov cli mov add aas jle scas inc cs out lock and mov pop scas shrl mov into lock gs mov and add add lds jg xor pop add jge add mov jle aas cli add orl mov je into jno sbb inc and insb lret lods sbb cmp ds mov jnp pushf lock jmp out adc or push out pop jecxz shrl mov mov mov cltd mov loop push ret out std inc xchg cmp subl rorl in mov push daa out adc lods out loop or dec xor pusha sbb pop fs pop inc inc out cld loop out mull test lcall adc inc std jge,pt scas cmp dec test lock ljmp push pop mov cmp insl dec das popf push lock xor aad push and lcall add out push mov cs insl sbb add repz imul int3 and gs arpl in and mov adc or add test or fisttp (bad) sub hlt adc fimull lock out lods ret cmp inc rolb das mov popf out clc loop dec xchg decb jle loope mov pop mov pop hlt (bad) in in (bad) popf mov fnsave or ljmp xor movsb in inc outsl popf xchg and int jmp mov (bad) test sbb loop (bad) insb je pop lcall sbb es scas cmpsl out push jge loop xor shr or addr16 aad cmpl mov jne push hlt jno jg lret movzbl ljmp sub inc rorl sbb xor (bad) xchg (bad) out jbe loop adc cmp push jecxz or add adc pop imul popf pop imul or push lods dec and iret aas test or push out pop xchg mov ficoml mov in out cli mov xor pop in mov adc xchg pop (bad) cmp (bad) jae sbb imul popf jno and fsubrp (bad) fwait int3 aas mov call sti in cmp push gs add mov int3 fsubrs adc cld fs sahf das mov mov cmpsb lods leave in test xor pop scas push ss call mov scas mov fs orl pop xlat lret cli inc sub push and and cmp or push adc in add jns mov push add sub add cmp std gs idiv pop popa lret mov (bad) jge lock mov dec ja or jae std xor jne fdivs xchg jl imul out (bad) push jge imulb insb test lock pushf pop sub cmc xlat cmc in lea call inc pop dec imul sbb and and xor hlt push cmp out shr in sahf fisttpll inc pop pop push stc subb sbb adc std adc test pop add je popa mov xlat mov jge loopne fstl movl xchg and fnstenv pusha sbb repz ljmp out mov adc sbb test cli jns sub xchg in ss xchg repz out movsb (bad) lcall ljmp mul dec rolb lcall cmc xor mov (bad) repnz xchg inc push insl gs cmpsb outsb out mov dec dec out sti mov hlt dec arpl lcall pop pushf cmpsb into pop enter jge pop add lahf pop jmp pop mov mov dec ret xchg aas mov cmp movsb shr out insl or mov jmp xor mov mov pop aaa cmpsl js sbb xor add pop cmp xchg mov xchg mov dec (bad) (bad) inc jg std inc test lcall xor cmc jge les sbb cmc (bad) daa insl adc jge (bad) xchg popf cmp push xchg inc in sbb jae movsbl jge add jo insl mov (bad) sbb and xchg in mov add cli lock loope in cmpsl out call and cld out fs pop pop and into dec mov std out cmp cmp (bad) imul sub jle scas fadd push out mov or ja jno mov and jo or mov fcomi lsl out mov fldcw adc (bad) jmp push cmpl or adc imul insl imul pushl in subb mov add pop or in lods in pushf out pop add pop dec cmpsl arpl sarl cli loop push aam (bad) push xlat out movsb pop in out lcall mov xchg cwtl jnp inc and aad jg fs push lahf outsl lock out ss cmp jge mov sbb ljmp xor pop or pop arpl pop lss cmp push std mov (bad) xchg (bad) cmp daa orb insl mov movsl lret daa std scas out mov repnz fs sub xor push fidivrl cmc ljmp rcr fs das jnp (bad) mov lret stos out sbb inc lret jp roll stos adc jnp (bad) clc mov push int stos ja pop out out ja mov mov sbb loope insl adc repnz in gs xor inc aam out pop inc sbb lods pop add or insl jmp sub gs cltd out mov leave jo test fnstenv iret mov jmp xchg mov jge inc out in imul ss loope xchg inc pop imul lods inc pop jl sbb insl mov inc jp in lahf xchg out mov and (bad) jbe or ss inc std popa mov pop (bad) lock sub adc or lock clc mov xchg mov ret movsb enter ljmp ja js idivb test out cs mov dec mov scas ja,pn pop (bad) (bad) or mov test or setnp in dec push mov xchg addr16 ret cmp xor out inc loope (bad) lahf jl pusha or in (bad) out mov dec ficomp (bad) mov xchg lahf sub insl cmpsl outsb add pop in (bad) lahf cltd mov rcll mov dec push fistpll std xchg add fwait cwtl addr16 mov inc or mov jne jb xchg xchg sbb adc pop (bad) gs mov jno pushf add (bad) in lea les jnp out lea pop insl jg push sahf out jmp pop mov ja xchg cmp sub jge int3 and test adc lods add fcoms cmp xchg jnp xor push jbe lahf out in or adc push inc (bad) mov pop rol cmp je adc pop sub inc xchg cmpsl stos mov push (bad) xlat cmc mov (bad) clc cmpsl shrl sbb aaa (bad) push pop lret movsl xchg xor in sti push insl sarb xchg pop jle add leave das sbb out mov out test out jbe xchg adc out mov loope notb sub inc dec dec fstpl mov call inc sbb and or inc mov scas adc add push xchg sub stos sub or sbb sbb sub jmp push mov test mov loope jge enter jns js das add mov das cmp addr16 loop jge jecxz movsb adc push mov loope xor jg in push sub addr16 adc xchg repnz or hlt (bad) cmp or insl cmpb lcall inc fild shrb push xchg loope mov aam pop aam add int3 and fsub cmp daa in push pop faddl mov dec out inc xchg les data16 ja mov outsl dec movsb xor cmc mov sub push cltd sub stos out mov call mov and mov out jae neg xor fdivs mov fs idiv cwtl add mov out sbb in sub mov jle xchg add shrb out fdivp out add movsb inc pushf (bad) test mov mov stos fbld out jae sbb mov dec jns mov insl out fs dec sbb loop adc jmp add ljmp sbb push mov aam mov cmp rcrl in pop xor es stos inc dec (bad) movsb mov jae jb loopne mov test pusha sub popa decb repnz cmp aas jecxz mov in (bad) cs out orl dec inc push add stos mov pop aad (bad) je std addr16 fs movsb (bad) push add int jnp jg insl sbb ljmp pop xor cltd dec or xchg repnz addr16 add adc cmpsl pushf and insl mov jge xor fadds xchg xchg lret outsb divb sub fs in pop xchg xchg fidivl jl sbb insl adc pop cltd pop cwtl or adc sahf hlt push jge ficoml mov mov push and test stos pop jmp fsubrs jmp jge mov adc mov arpl outsl (bad) pop push dec test mov add pushl (bad) in arpl icebp out dec push mov mov shl cmpsb fwait xchg aas cwtl xchg sbb pop jmp and (bad) jmp les out add sub xchg pop fnstcw jge,pt mov (bad) ja decl out testb aas outsl jp or and pop jle test push test insl jae test pop gs je dec adc (bad) or in fpatan mov mov int3 jge in shll cwtl scas mov or andl test xchg add rcrl out jmp mov sub fwait pop shrb (bad) adc add sbb fs push inc pop ret popa addr16 negl sub xchg inc sti (bad) xor aad repz dec add xor mov jo push movsl dec test jbe int xor popf mov das sbb int lret jg loope push mov pop add test subl mov out stc cmpl cmp cltd mov jecxz pop (bad) hlt sub repz rcl mov and fwait sub mov repz xchg andl xchg lea leave icebp or lock dec (bad) and jbe lahf (bad) out imul jne out aas fwait mov pop inc xchg mov mov sub mov or mov adc ja (bad) out push adc sub lar or sarl in (bad) sbb das loope pusha cmp sbb inc jae mov enter ljmp jmp ret addr16 enter jns aaa jl push lea pusha lcall das and (bad) jp (bad) xor push push ljmp and adc sbb hlt popf insb mov dec dec aas leave or adc jl es cmpsb clc xor scas xchg mov adc mov xchg lods push xorb in test das jns (bad) adc mov (bad) (bad) mov or push out fisubrl es xchg orl fnstsw or xlat or (bad) jno fiaddl add outsl (bad) int3 fsubs jecxz dec lods test test jge std jp and sti leave adc ljmp mov cmc out stc (bad) jg mov push cmovge push push push jg rdtsc pop int3 push or call (bad) mov lcall pop sub fmull jl push xchg or (bad) pop mov lea (bad) pop mov adc ja push jmp idivb shrb outsl pusha jge sub mov aad fistpll leave cmp mov pop (bad) adc das popa dec jmp fisubl cmpsl mov push call inc out cs or stos sub out jp and (bad) pop ljmp js and ja out lea mov repz iret lretw mov shrb jb arpl out fiadd mov out fsubr pop enter or adc (bad) inc les gs and mov cmp ss out push test add into push pop (bad) add insb and out dec adc mov pop mov xchg pop imul xchg or jge jns cmc mov test ds iret push rcrl ja jb out loop xor out cli mov out lahf dec std ds int3 fisttpll rorl js call fwait pop insl repnz sarl daa cmp mov xchg or xchg jmp cmp pop fisubl movsl adc in jl imul mov mov cmc jge test cmp mov inc xor mov lea or jp mov and add xor sbb and sbb jge arpl test insl jmp cli ljmp sub pop arpl inc push fistpll fs notl mov enter jp mov in daa push dec push (bad) loope cmpsl mov xchg jecxz fdivr or sbb lret rcr outsl clc pop jge cs stos scas push roll iret outsl or jnp and inc jns rclb mov jp andl outsl add (bad) push loop stos (bad) adc mov out jo xchg mov fs sahf mov jns lret mov imul lock add ret adc and imul cmp xchg mov incb sub out in dec adc pop jb xor pop inc dec add mov jecxz sub sahf ret sahf in loope mov (bad) int3 cmc sbb aas sub xor cltd xor (bad) sub popl mov fbstp push movsb sub sub xchg std pop test push fs gs pop pusha stc inc cmp jmp sub aas hlt adcb and test sub xchg insb push dec loop inc addr16 mov out pop jo mov andl int3 call jg icebp das jge es insl adcl into in scas in cmp je jmp mov icebp mov adc ljmp popa outsl insb ret cmpsl jle icebp push mov andl stos popa xor inc daa mov (bad) cli gs (bad) hlt mov gs insl xchg (bad) lret mov (bad) scas lcall or jg (bad) xor jg mov xor jo jge data16 in orl loope aam rolb or pop into pushf inc (bad) xor ficom sub dec mov mov repnz scas popf mov shr imul dec ljmp xor rolb jmp bound mov cmp out ja callw xchg rorl xlat push into mov (bad) fdivs inc cmp inc jp test inc sbb and test xchg in out inc mov loopne mov pop (bad) test push pop jmp push (bad) lock nop jmp in xchg dec mov push out dec cmp in out cmpb or cmpsb aam test into repnz pop imul sub popa mov cwtl sbb jg insl fidivl xor int3 fwait mov pavgw pop dec insl mov and or fcompl cmp push scas add mov das es pop loope insl mov scas outsl out pop je pop cmc in out (bad) stc loope pop loopne repz pop xor sbb loop int pop pop xchg ja cmp ss pop sub cwtl push out or jns mov and xlat out dec into jl js xor aas cld pusha jne mov pop mov xchg xchg les insl push push (bad) cmc jge gs inc ret and and shl xor in jge ret int mov mov fs xor shlb arpl push add subl jg sahf lahf pop mul mov adc add adc jmp jae jl jg jge dec into lds jmp gs and iret sub push mov adc (bad) cld push pop pop aam aad add ret jge add fwait in sti push xor stc inc mov test jge gs das push push lock movb lods mov int3 loop and out int3 aas mov out call cmpsl dec es out (bad) pop jbe add sarl scas fldenv push or push in xor xor (bad) dec lock jae sahf out sub loopne sbb cmpsb xor sub lcall lret jne or js or dec test jae inc (bad) in xchg das push insl xor push push lock inc pushf enter dec jmp sbb gs dec fisubl daa arpl adc fs daa dec push cmp jecxz dec or add push xor mull xor je pop sub cmc call sub mov stos sbb gs and pop (bad) lahf fild rorb aam fwait mov add xor cmp js mov jmp into push pop out add in dec js jmp xchg inc dec and ret xor jg mov lods ss sarl fiaddl gs in jle xor mov insl push movsb dec add pop xchg sub lods (bad) lret or mov mov add pop fst inc mov loop mov out test in add iret loope pop sbb shlb es out mov adc lock adc mov (bad) xchg cmp cmpsl je lods xchg and inc cmpsb dec xor out cmp or bound call rcrb and push sub addl imul fcompl jbe lret ja jg les mov sbbl dec in test (bad) out pop jg (bad) imul (bad) xchg imul inc or pop mov sub ret ret sub test add lret rorl pop xor adc jg bound adc xor rorl xor and jae pop dec lret pop fidivrl xchg (bad) jge xor (bad) jp xchg or inc jmp into icebp out loopne push mov adc or ds xorb inc addr16 mov call adc sbb pop insb dec mulb pop and in inc inc fidiv cmp arpl jo sub in out jmp in mov add lahf insb push in test jno sbb out loop xchg cmpsb (bad) fisubr sahf ss sub aas fisubrl mulb insl hlt add stos pop mov sub and and fnstcw jp bound outsb aas jge cs jns mov mov inc add pusha cmc pop (bad) cmc push in sbb cld rcr fsubr sahf jle out lock iret cmp outsb outsb out data16 lods inc push loope mov mov jmp (bad) adc out adc aaa xchg jno cli sub jne arpl or lods inc divl (bad) push mov cmp lret jg rcll add mov ja cmp mov int clc fisttpl jbe sbb out das jge std or and dec mov or dec adc cld dec jno mov popa outsb xchg and insl mov fildl (bad) jns fucomip in fstps dec in add ds repz je aam mov gs adc jge stc xchg xchg addr16 lret cs inc cmp adc std gs ja in sbb popa cs stos fs fs mov cmp mov push repz gs inc or mov mov pop insl cmpsb jo fiaddl clc dec fiadd popa lcall mov mov cwtl out xchg push enter mov (bad) pop cwtl insl mov sti pop lret pop je insl std and stos xchg das js lock mov insb adc cs pop sbb jecxz ret out xor repz adc mov mov or xor cmp enter push sub sbb hlt movsb loop push and scas cmp lea fnsave lock cmp jge test sbb ljmp insl dec or or fdivrs stos hlt out fnop stos sarl inc or cmc in int3 add loop lret (bad) fdivrl test scas fldl adc jmp roll call call lahf out rep adc out add outsl inc jge cli sbb inc jl lahf or out cmp push fwait ss test aaa (bad) ds xchg in insl repz xchg pop or scas popf hlt out cmc out jno frstor cmp mov adcl in rorb mov shr pop ret fnsave lods sbbl pop push (bad) mov rorb inc (bad) sub shll addl (bad) push push mov cli les data16 adc push push (bad) aam dec pop test outsl ljmp (bad) gs scas push (bad) cmpsl js repz (bad) and jle notl stos jmp movsb cwtl adc aam jo test out les insl gs (bad) mov into in add sbb addr16 mov fistpll fdivr fwait lock mov cld cmp repz pop jne mov pop pcmpgtw call int3 push insl push cli pop jecxz sbbl outsb xor mov imul ret add mov negl jge mov inc xchg addr16 sti scas or mov inc fwait loop dec stos iret add or or pop into xor cld outsl cmp out jmp add out (bad) inc xchg cmp dec mov xor lretw mov mov fisubr jecxz out ret jae stos insl inc loope fwait mov mov adc out bound popf std das repnz inc out sahf pop dec loope (bad) sbb aas hlt sub ds ljmp sarb jae cmp test pusha roll pop jp imul push sbb mov out jnp ja sub jne mov jo fsubr push data16 push xor jmp movsb and mov mov enter jge out lcall jecxz sub mov popa das jnp inc fxch cmc inc xor pop and test inc arpl lahf lock jge fnstenv mov jnp xchg or fmull out loope dec cmp scas xor sti out leave rorb test gs xor jmp sub mov addr16 popf frstor jp je lds push push test dec push negb inc cmp mov jns xor fildll push addr16 popa ret fs (bad) insl xor (bad) mov add cmpsl xor ret inc cmp rcll sarl push add push xchg (bad) cwtl jmp mov movsb jae (bad) jo lahf and sarb (bad) mov incl fmul or fcompl aad aas fnstenv mov ss lods mov mov cmp (bad) ret jg mov pop fiaddl inc rcll mov xor mov xchg dec cltd out popa jge mov lea jmp rclb jae fbstp lock push cmp lahf popf inc xchg cwtl xchg adc daa loopne cmp dec insl and xor repz add jge dec xor inc xchg out push add clc in xor jle pop mov fbld sbb out stos pop or daa repnz fisubl loop cmpsl ja jmp das mov and dec push pusha pushf mov xchg jnp icebp stos lahf dec pop scas dec jnp adc (bad) loope std jge jl dec test cld xchg shll out das cmp fldcw lret lods fs xor int mov popf (bad) jo and cmpl mov addr16 jp push xor xor sti out jbe sbb pop inc loope xchg out fadds jg pop mov arpl imul push out ret cmp inc adc aam jmp in shlb out clc add mov out mov aad rcrl movsl pop fistl or in stos pop jle,pt (bad) ds fisttpl cld mov adc out fldcw repnz dec or add or adc push and adc push das (bad) out gs scas fisttpl cmp or dec das imul lock xchg gs bswap jge jb fistpl addb mov in push out rep cmovo push insl jp movsl out sbb add sub clc leave and js cmp out lds push mov mov cs cs ja and lock gs lahf inc lods lea arpl cmpb lds lods les add lret pop push gs and sbb jb jp jmp or mov xor push cmp cmpsb jne mov mov cwtl mov mov jne sbb inc lahf or js fwait inc aas jge bound push push outsb or leave lock hlt cmp xchg push jnp xchg loope insl fcompl cmp jo jecxz andl mov pop pavgw jo and repz mov shlb stos add (bad) orb in ljmp or ret adc dec ds push cmp sub js insl lods in call addr16 not pushf mov (bad) jge sub or clc leave (bad) (bad) sub mov push cs bound (bad) and cmp mov ja pop (bad) lock mov clc or pop lret mov loop sarb jge mov jp pop icebp fwait adc (bad) jo frstor mov sub sbb js jecxz push dec outsl pop jge mov loop adc cmp jg sarb dec fs inc iret pop int mov sbb xchg nop les jae in pusha pop out (bad) jb sub adc shl xor mov add push aaa (bad) loop (bad) lret adc mov out out gs push add aaa test xchg or clc xor push int jbe out sbb jne jb std in ret mov mov fidivrl out cmc sbb xchg jno mov add iret loopne jge aam shr arpl js out mov cmp and gs mov push cmpsl rcll or cltd out (bad) jp xor ss lcall in das push iret out loope cli push leave push nop xor add add add dec inc pop and pop push and cmpl push xchg leave nop mov popa stc mov fstps xchg jge leave xchg outsb push out pusha pop fstpt loop insl pop jl loopne cmp fdivrs fnsave fsubrl mov jge or js stos push pop test cmp fcoml cmp mov je and outsl pcmpgtw xor popa sbb dec jnp ljmp out add push ljmp add mov out mov jge mov lcall mov in cwtl ljmp (bad) jo addr16 roll lret adc test out xchg outsl repz and imul dec mov gs push jmp xchg aas mov loope mov pop ficompl (bad) xor jecxz xchg push ret outsb dec jns push jae lock adc stos jp daa cmp mov das scas cli lcall inc imul ficompl jb jae push icebp push add gs pop xchg imul xchg loope xor sub xor jp mov out pop in jmp (bad) xchg ret jl subl stos mov mov jo test xacquire cwtl daa pop pop outsl xchg sti jge and notb push mov bound aad push pop jg cmp mov jno jp pop xor push adc das lods scas xchg xchg or outsl pop lcall shrb pusha and mov push fidivl lock js xchg lods lods std fisubl xor loope test push add loop insl pop cmp pop adc mov test ljmp shr sbb add inc or test outsl lock gs push out enter add insb (bad) push (bad) fdivs ja and adc ljmp jge jbe sbbl lock sbb or mov das mov shrb fsubrs fadds imul pop xchg sub lcall insl leave subl clc gs adc adc adc sbb test push stos push sub icebp loopne int3 frstor out clc ljmp fbstp clc mov icebp pop xchg cmp jns sub fcomps add jo or mov mov push push test rorb mov clc addr16 popa xor lock push jge mov mov mov icebp dec lock das fildl out aas jne loop cmp mull cs cmp fcmove imul loop jge out add and insl enter push jge in shl shr pop sbb mov testb scas (bad) aas mov push lret gs rclb in mov push lret imull aas pop test lahf ficomp icebp sahf dec jb fsubl and pop movsb xchg dec call adcl xchg mov lea pop xor mov mov std pop (bad) out jge leave dec push sub sbb jbe movsl mov and imul mov lock insl dec or jbe cmp mov mulb jge jns add lea mov fs dec inc insl in push xchg jg out pop and (bad) sub or mov (bad) sub cltd or cld jbe das int loop xor out insl add stos jnp jae and push jecxz int adc aas movsb mov mov add std and clc sbb inc or icebp arpl aaa push insl lods cmovae movsb mov mov jle aam add cmp or push ja (bad) pop aad sahf sarb outsl int mov push push push inc push mov insl jns mov insl repz in insl xor sbb out fidivrl dec shr mov ret into icebp bound scas xor int push lods push aas in xor sbb and xchg addr16 ja xchg xchg sbb cwtl addr16 (bad) jmp rorl les xchg and orl jg push push push shll in add mov fs dec sub dec repnz in pusha mov sbb mov imul das sar into iret mov dec cld clc test aas insl add loopne jge test (bad) pushf (bad) or mov sbb enter or lds test xchg stc jae,pn (bad) push jge or out push insl (bad) sub cmpps mov xchg les ret test inc or jge pusha rcrl in jae mov outsl dec les adc insl cltd outsl or inc ret roll into push lret push cli push inc xchg shrl insb fdivp cmp fisttpl cmpsl in pop xchg inc leave jg stos and jns jnp mov rorl mov xchg insl sbbl and loope sub (bad) insw and addr16 icebp lret addl and push out jge,pt test ds out ret arpl mov or repnz mulb sbb cmpsl in (bad) pop loop push std ds lods loop scas sbb mov or push sar sub (bad) jg aas pusha arpl adcb (bad) cmp cmpsb push repnz comiss leave add add addps aas repz xor mov sbb mov imul push movsb lock cmp xchg lret in andl xor push out sub jg dec sub pop pusha repnz mull insl push rcrb imull mov jns pusha jge insl imul outsl push mov cmp sub cmp mov insl imul add gs pop into pop ja test push xor ret dec jb sub xor call (bad) jge sub (bad) out push add ja in xor sbb mov jge or clc pop (bad) push pushf mov aam dec in or mov or pop (bad) arpl pop lcall add sarl ja nop scas les cmpsl jne mov fs jge and adc aaa and lods mulb gs pop adc mov lahf pop or aam pop js push jecxz jae push subb mov divb pop pop arpl test and or arpl out inc add push out mov das dec mov push pop xchg adc sarl ljmp push mov inc ljmp dec ss mov add test jmp leave in insb mov (bad) je xor enter xchg pop push mov and mov sub pop fiaddl loop dec push dec mov xor sub dec loope sub xlat cli dec mov inc xor sahf sub outsl shll fucomip loope push mov or jnp jecxz add lods (bad) das push cmp push ss xor and out jo add xchg or int ljmp xchg cmp out sub mul cmc sbb ret out ljmp or xor dec xor pop into out and push inc lea or nop dec push outsl mov mov and jne out lcall mov push xor push dec fisttpll in adc xchg out int mov out inc inc fsts aam fisttp mov (bad) fcomps xor jge and pop sub mov mov roll popa xchg scas push dec xchg lods add lock out push movsb xchg ds popa mov arpl pop jmp and push leave lods pusha mov and scas loope pop out test mov mov fisubl or ficomp sbb out out sti xchg add push insl or (bad) dec jnp arpl sbbl mov xor cltd mov les adc leave hlt add ljmp dec inc loopne pop jne rcrl push test aam divl push cmp mull je (bad) jg (bad) iret lds sbb or sbb lahf rorl setno (bad) in cltd inc mov mov loope repz fsubr mov push xor (bad) movsl fiaddl call call inc or imul pop xor mov shl loope sti pop lea mov mov push scas cmpsl (bad) cld out aas mov mov dec and aaa movsl push pusha xchg jmp (bad) cmpsb xchg pop test in lahf cmpsl pop fdiv pushf cmp out out loope pop jnp adc dec add mov (bad) out add in and xlat xor gs jae jmp daa outsb mov mov push jge loop popf mov leave mov mov (bad) cmc das mov jbe pop loope mov sub out or mov dec popf inc stos out xchg cwtl ret xchg push dec push repz cmp rcrb push or ret out jp test out fwait rcll loopne cmp cmpsl in sbb out and mov bound pop xchg mov out (bad) fnsave cli lock out xchg pop loopne pop dec insl (bad) sub fs mov cmp lock sbb es sbb push insl ljmp inc pop jp xchg xchg cmpsl cmpsb cwtl xor es pop popf dec arpl (bad) out pushf pop or lods lods ficomp mov pop test cmc ss push inc add gs pop mov in test sbb sarb xchg mov mov inc clc sbb xchg je dec (bad) in lahf gs shrb mov cltd jge stc xchg xchg pop xor std rorb rorl mov xchg vmread fimul sbb cmp das (bad) jno imul or dec sub ret inc loope pop movsl adc push loop cmc and push lret mov mov xor xor cwtl aas xor (bad) stc ret fiaddl lds jge outsl ds push dec sub add adc int mov fs xor dec out into add inc sub xchg fs pop xchg or out cwtl push movsb adc lret lods scas adc sti repz dec (bad) jae push imul sbb push sub fisttp cli iret insl loop pusha repnz nop ja jge hlt pusha in dec addl mov cmc jecxz outsl add out sti ret jg sub mov pop sub jl cli ja ffree popa dec add mov in sarl mov adc sbb test ljmp test xchg (bad) and (bad) sub dec (bad) enter pop mov dec aad pushl lods sbb push callw push lret pop push push push and sbb das insl jns test jge adc shl jno mov movsl subb mov lret jg pop mov lock pop pop sub xchg popa test addl (bad) xor or push push cs lods fidivrl xor call clc xor fdiv (bad) sbb jmp fcoml lock repz ljmp mov arpl inc xor (bad) cld lret ficompl sarb cltd sub mov outsb pop cmp lahf (bad) fdiv imul (bad) out mov clc sarb mov lret dec int ja (bad) sbb sbb jg sarl jl inc addr16 and addr16 xorl mov call cmp pop or mov push mull aas inc cli out mov pusha jge ds gs (bad) xor mov loope popa mov arpl insl pusha mov mov or jg insl pop lock loop stos out adcb imul lock mov enter (bad) sbb pop ret ret fwait ljmp aaa stos and xchg pop in out xchg pop mov mov and sbb mov pop mull iret xchg fisub xor loopne (bad) xor outsl pop test andl dec jbe cmovne inc lret inc mov out fistl inc push push mov addr16 mov mov ret pop fidivl in out imul mov in out int3 push xlat mov aaa mov mov xorl shrl sub jb xchg lds outsb adc mov pop mov push jge repz and leave jbe movsl add sub mov xor mov sbb (bad) pop gs and aam mov aas ja dec dec movsl test gs sbb insl lods fdivrs lahf lods and sub mov inc inc call sbb push mov mov adc push mov push xor ror jl out icebp loope dec jne flds daa loopne inc int3 pop sbb cmp jg pop mov mull xchg sub ficomp dec xor sarb in shl aam fwait outsb mov clc out addr16 mov movsl mov dec lods in xchg lea adc mov add (bad) push adc aad imul (bad) xlat and jae rcrb add std arpl repz ljmp xchg dec lcall in push sbb insb xor sbb jge ss shll mov and and cmp dec add fidivl push add pop les push iret das push jge mov outsl imulb mov inc in dec mov (bad) arpl leave or pop jnp lret ss or sbb pop (bad) cld pop push fchs jnp fwait xchg cmpsl js xor out xchg pop (bad) cs popa sub daa into stos mov mov imul das jae neg jp dec das and rorb adc sub mov inc insl xchg pop add sub ds mov push and xor pop ja sti jp cmp loop call movb mov jo subb or xchg loope lcall fisttpll sub xor jns jo lds lock hlt push in adc fdivrp lods adc out push pop aaa ret inc add outsb out mov mov push or loopne inc add sbb inc into dec mov mov sub or inc mov ror addr16 mul rcrl push hlt pop mov push insl inc pop sbb insl push pop jo xor aam and arpl mov fdivrs repz mov sti outsl or je mov xchg jne pop ds adc and and negl sbb cs and mov (bad) xchg lods das dec into aam ja pop sub in aas jmp popa xor rolb push push jo lods movsl lock fisubl jge jg and inc in xor cli outsb xlat mov scas jge dec std fisubrl lahf aaa or and dec sbb or fnstenv xchg jl sarb stos daa sbb into and adc add mov adc stos decl sarb fnop das cli jp test imul call lock ds in je fsubrs std dec pop jl int push (bad) mov loop cli cmp cmp dec pushf out jae mov lret mov enter pushf repz add ljmp jb xchg (bad) pop (bad) icebp xchg outsb shrb pop dec jecxz clc in popf pop dec out repz xchg leave pop (bad) or push fs (bad) ficoml inc dec enter mov das gs mov aam icebp in pop cmp xchg into cmp cwtl xor scas les inc in mov out add stc cmp jb into mov xor xor pop out mov push cmc fmull int fsubp dec aaa pop inc fs fdivs jne mov pusha out cmp adc jnp jl xchg es sbb nop jno aad add shlb test out or xchg (bad) push iret das sbb mov push cli adc pop js jg repnz mov push mov test push scas jo rorl mov lret out gs jg lahf jge inc xchg test imul cmp out push lret inc in pop out aam xor sti xchg bound mov insl cmp rorb outsl jle pop pop push add (bad) sub fucom lea (bad) cmpsl mov inc sub mov mov icebp sub outsl sbb xor mov add les mov (bad) out sub stos inc shr pop dec add in pop push adc stos adcl jnp int3 aas jle mov xor rorb out repnz add jb repz ljmp mov ljmp cld or mov (bad) mov ljmp mov aaa jae test movsb shr out das aaa (bad) mov add fisttpll insl rcr pop cmc xchg pop xchg sbb or add fisttpll add add lahf inc cmpsl add aam push les xchg test push and stos xor xchg (bad) jmp call push cmp insl gs pushf jg cmp sub daa out test mov stc sbb lcall andl jg insl push arpl inc mov out and push jns ret sub movb mov enter mov cli sbb and test out insl mov push add lods loopne mov rolb lcall gs ret pusha dec or inc mov mov insl ss mov out loop test andb push je cmp clc sti lds mov xchg loopne aad and testl dec out xor jp mov xor or fild add sbb pop add pop cmpsl pop push adc adc sbb xchg add add arpl repnz jne ja sbb out (bad) mov aas shr jo lods mov inc sub aaa (bad) aaa fsubp into or push gs in loope xlat out enter or fwait ljmp jo push jns or dec out out sub push jge movsb push push inc insl (bad) xchg gs pushl (bad) ret xor in (bad) mov jae cli xchg fisubrl sbb test pop fiaddl or (bad) hlt mov push add fucomp cs jbe fisubl mov jnp xchg sub (bad) in mov and add cmp jg lcall cmp fnstenv lahf scas mov xchg insl sub and pop pop jo cmp mov adc insl stc or push inc (bad) cmp cwtl cli push push or gs pop sbb movsb lcall adc ret push push leave out cmpsl xchg and push lahf jp dec sahf out mov and (bad) shl push movsl ljmp out es gs lods inc ljmp das jmp fidivl loope adc inc shr add mov fdivp push arpl mov or pushf xor stc pop sahf stos pop or or ljmp fs sar mov out (bad) test mov not test outsl mov xor ret cmp test addr16 mov addl adc cmp mov and bound lcall (bad) gs inc add mov (bad) stos and dec pop xchg jno fsubl ja xchg jb dec mov sub push add rcrb out (bad) ret cmpl shr push pop mul lret pop inc shrb (bad) out push xchg stc outsb pop in out mov mov dec jno push arpl in lods scas out jge dec cli push mov mov push ja sub pop loope add lods out aad pinsrw mov pusha ret in shll in in and pop (bad) das jne lods pop shll into jge sub xchg int3 pop xor jge ja stos inc xor jns mov and stos or adc clc xor sahf pusha ret imul jbe ja xlat fcoml ja lahf sbb outsb xlat divl mov jge sub insl les dec insl dec jle inc cmc jmp mov bnd sbb ja enter mov adc not push rep sbb shll push popf inc add adc mov xor mov dec gs push xchg ljmp mov mov jecxz xchg outsb out pop lahf jns inc mov pop out pop imul inc push pop movsl outsl out lock out xor cld mov repnz (bad) pop stos inc test (bad) out (bad) je pop inc aad xchg (bad) aas addr16 sub outsb aam jnp add xchg scas or jmp inc cmp and adc outsb mov xchg xchg sar ljmp mov into outsl notb shl test fs cmp pop adc jns ja mov push pop ja dec sti xor es and ret fmull js shr xlat mov or jne sahf xchg cmpsl xor das insl add push cld mov shrl in and and or dec outsl outsb insl jb insb or sarb push fwait jg popf std pop jg les xchg lea insl add or orl xor or dec jle das fstpt push push jno pop mov pop popl fwait hlt addr16 xor in insb jb aam stos cs shrl xchg fsubl and xor jmp pusha insl lods fisttpll xchg add (bad) adc dec cwtl mov sbb or dec dec pop ljmp les mov mov outsb (bad) adc mov ja xchg jbe cs push sub cli repnz fildl call (bad) mov add (bad) jge xchg call out or cltd mov pop lcall sub jle adc adc insb xor pushf daa pusha scas mov out gs mov out fisubr xchg les push jae mov jp daa js stos add and imul add cli xchg fcmovbe or fidivr insl data16 lret push pushf mov dec gs popa jmp push sbb jo fildl mov movsb xor cmc sbb sub je or and lea cmp add scas icebp push push sub arpl hlt arpl push test sti dec pop test xor xor in lock xchg cmpsb ret push fwait pop out ret push fcoms jle hlt sbb inc insb iret inc jmp inc sarb add insl sbb and int inc scas test mov lea sbb out frstor pusha xchg pop mov add cltd ds outsb mov xchg push aad scas inc mov je out xchg stos insl popf aam dec push dec xor inc orl mov and fildll or lahf test mov sbb es push pop int imul push dec lret mov aad stc inc scas push push and add test pop (bad) xor dec lock jge mov hlt or sbb stos adc push sub push shr roll fwait xchg andl mov push into in jecxz xchg and pop jge sbb daa fldenv mov ret jge or in iret dec push aaa (bad) mov or addr16 icebp cmp dec inc lcall iret and (bad) pop popa nop jecxz outsl test and inc daa xor dec into xor mov gs std (bad) or cld pop popf icebp cs push cs sub bound dec xor por sbb scas cmpsl int3 inc gs xchg pusha ds sahf icebp (bad) insl (bad) gs or loope adc lret fwait jmp push dec add xor out or (bad) ja arpl imul mov mov call insb ljmp push popf in adc or cli rorb push push sti out out mov or cmp sbb pop in sbb push and adc add (bad) xchg es mov arpl sub pop add xor mov jmp mov ja orb sub xchg les les and out gs jbe xchg and and mov fadds jl nop je jae and or push orl aaa popa jge sub outsb or clc xor aaa push insb dec mov jge sbb dec imull lds jo dec pop pop ljmp inc push ret mov out sbb mov clc dec sub lcall out xchg nop jp inc aam or pop out das sbb ljmp outsb aam repz aas jne push xchg iret out dec sti cs mov aad inc inc outsb shl hlt out xchg xlat cmpl outsl out pop aam jae pushf (bad) mov or jecxz jmp cli ljmp andl push pop or jge dec pop (bad) mov inc and mov mov mov inc cld or out jecxz int3 inc xor add xor inc cmpsb inc push jnp or inc iret into movsl xchg jmp lods inc mov fdivl xor mov pop push iret sarb and cmp (bad) adc jno sub mov push lods call fstpl dec wrmsr inc cld mov lcall adc in (bad) out dec mov push pop out add aas jo inc jmp loopne inc cmp jno out sub mov sbb add sub cli xor dec (bad) ja das sub cmp adc cmc ds mov repnz adc xor jo xor xlat jle stos xor cmp jg fimul xor jecxz mov scas inc test addr16 fadds test or or xor imul (bad) mov hlt out jmp xor das fmuls push jge ljmp insl lods (bad) popf cmp testb mov add and orl add pop js lahf cld xlat (bad) pop push fs and subb jg add mov pop fldl2e ljmp and sbb cmp insl popa ds adc (bad) lea cltd mov lcallw insb int3 in (bad) rorl (bad) or mov mov xchg aad xor incl int out pop adc mov dec cmp push adc cli nop lcall popa lahf sbb pcmpgtw gs mov out loope xor out test mov mov (bad) inc mov push loop adc out and stos ds inc xchg jge out add sbb call (bad) cmp dec imul cmp mov aad jge fs inc lahf mov popa mov mov stos fstps popa cmp out pop out rcll pop insl test mov ds xchg das das out mov (bad) movsb std push popa add lcall imul jg ja push hlt insl fnstenv add jae inc out jle inc or cli loope insl fimull xchg jns inc arpl inc sub ret inc jne stos inc xor sub xchg inc enter or lea mov jae fsub xlat dec dec gs out mov stos sbb xchg lds mov lret shl ja xor jmp test cmp jge outsl mov jmp outsl mov outsl cmpsl arpl xchg repnz insb out aam test cld push mov insl xor or pop jae in cmpsl or and sar std jg mov mov add mov movsl cmp lods movsb sub out pop imul sbb lahf int3 xor andl pop push inc cmp insl scas (bad) mov (bad) pusha ja push addl out int mov iret std add (bad) pop icebp aas inc repnz (bad) jae scas pop mov cwtl push jp addr16 jnp cmp or loop xchg scas push ja lock cmp sub ret movzbl roll mov mov xchg jb jp cmp and mov ljmp cmp add sub and insl mov sbb es fcomip sub out jge enter cmp push (bad) mov mov xor das les (bad) adc sbb rcrb sub jl add and adc mov mov jnp jae dec inc call stos lret sub unpcklps scas aad das pop xor call shrl repz hlt arpl dec lods push and mov in imul pop push (bad) out push stos xor outsl cmpsl cld adc fidivrl hlt call jbe push shl aaa insb lcall and jge out ljmp ja das (bad) popa xor mov sbb in xrelease dec popf jae jno,pn push int scas push pop rorb lret jmp mov jp xchg inc daa fxam mov pop jns nop and loopne mov lahf inc sub aaa jno or (bad) in les out mov dec dec in jmp pop mov inc insl (bad) cltd mov std push pop fsubrs inc in gs jns mov push dec sahf mov cmp pushf lods pop adc shll cmp loop push mov pushf mov ret ss ds jg xor fcomps dec jmp xor xchg (bad) jge mov xchg and fidivr cmpsb orl mov mov cwtl leave xor jle pop jmp out xor stos pop out sub sub fsubs pop push or or out out pop in addr16 imul stos fnstenv sbb mov mov dec xor jbe out sub icebp pop sarb push mov xchg ret ret in out pop imul pop cmp xchg daa fidivl in xor push inc cmc sbb jle jecxz adc ret rolb jno mov lea repnz pop adc call fcompl sahf imul std add in mov scas repz dec fnsave out aas adc pop and lea out pop jge and in xlat mov mov popa aad cmp xor mov jg mov jb cmp pop subl loope sbb adc std arpl mov push xor push test push add and dec int test stc lahf pop lods mov add popa test push pop ljmp mov pop xchg sub xor jno repnz and decb (bad) lock jge jle mov outsl or testl xor or xchg dec daa popf (bad) jge aas test sub xor sub inc jnp push ret jge xlat notb fadds cmc test cwtl les xchg into or clc ds jecxz xchg scas jne lods sbb jmp adc add ja and sub pop or or jl fisub inc stc mov cli inc dec fcmovbe fpatan movsl inc (bad) jge jno (bad) lret (bad) jo jl js rorl aaa out dec pop hlt jg insl addr16 movsl (bad) xor mov cmp fldl cmp xchg and adc lods ja rclb aas sahf dec mov xor mov fsubs in stc mov jge sub pop inc dec inc lcall aam mov scas adc cmp cmp add movq int mulb (bad) fidivl mov cmp fcoms push stc repnz es out cld xchg mov adc sbb mov xor inc pop out sub ljmp jl movsb test les (bad) jb mov (bad) jbe movsb gs adc mov push sub sbb and movsb adc cmp notl jg ljmp jge popf ret das (bad) dec std out pop dec xchg jle imul fisub and push cmpsl sub or pop int les insl stos into or stc leave inc and outsl push jb insl fldpi sarl enter mov or inc adc gs inc pop inc ficoml idivb icebp (bad) cld mov nop das hlt sbb loope jge insl pop adc adc idivl lcall lock mov dec insl pop mov mulb cmpl jge shrl dec lahf in sti pop add dec pop fnstenv int3 mov lock sub sub mov pop xchg cwtl bnd std cmp push ja pop sub and xor test push adc push mov (bad) dec out in mov push xor cmc idivl aaa (bad) insl out jnp jmp call fisubrl das lea movsb add push jge cld in aam jnp cmpsb ret dec scas fsubl push pusha jge pop xchg jnp out or pop jg pop push ss sub lahf in push xchg mov jo mov arpl arpl stc ljmp test mov cwtl or jmp ret pop jmp sbb and jge clc cs or adc lahf xor out xor sbb lods sub vmread sub (bad) das sti push leave inc es push dec mov pop arpl xchg push add cmpsb cmc aam xchg ds mov icebp js adc sti out insl cmpsb (bad) out pop fwait xor sti sub stos iret in jo mov push gs adc addr16 lock lock out lcall sbb das inc xchg movsb pop in out sbb pop pop mov outsb dec leave out push mov in or loop push loope inc mov push push xor inc repz popw scas push les xor ret in pop and stos rcll fisub sahf insl sbb jge xchg data16 addr16 add rorl push cmp int or jge sub repnz sbb xor sub mov cld loop dec xor lea mov pop jg repnz pop mov and mov lea icebp cmp imul inc dec aam jge popf cmp mov xchg rorl inc sarb xor cltd in popa jge mov xor fdivrs stc inc movsl test xchg adc rcll sub test les push cmp in loope repz or out xor out lahf in incb cmpsb lret xchg out or adc icebp aam adc mov jge add in jns arpl (bad) xchg fdivs es in ficoml outsb fldl2e xlat jb enter insb and popa std and mov aam or sub pop cmpb adc jge out mov lahf insl xor insl jle lcall cmp xchg fdivrs xchg inc jne,pn mov sarl and (bad) lock faddl into cltd push sub sti inc daa adc dec mov or loop (bad) arpl aaa push pop dec repz addb adc mov sub out xor mov inc mov push cld or lahf loopne loop sti (bad) push fiadd push add mov lock sti loopne sbb adc repz cs jo cmpsb mov outsl adc gs outsb inc push jge jg mov sbb jge push mov push jmp fiaddl sub popa scas xchg out and sub and adc das jge call sub pop jp icebp or pushf dec dec inc inc cmp adcl or and adc das dec mov movsl (bad) and xchg roll (bad) dec cwtl shrl add gs popa in in clc inc mov outsl insl leave dec dec lcall fdivl push ret inc fdivp scas popa test push pop aaa sti mov aaa jmp mov mov jge sbb jo pop or lret int3 inc popf ss push or (bad) les not gs or or out xlat mov or add ljmp mov inc insb out loopne sub (bad) hlt (bad) frstor aaa pop es inc fdiv (bad) jae wrmsr (bad) push scas notl mov xchg ret inc (bad) out iret fstps int3 sbb pop mov out ja xor fwait pop scas sahf out cwtl xor movsb int fmull pop or fwait sub xor (bad) sub lret out stos std (bad) xor (bad) pop notb imul xchg cs push ret mov repz orb inc xchg pop ss gs hlt rcrl push sarl ja (bad) xchg mov add lea sub xchg jecxz and xlat lret je pusha jo aam mov leave jnp orl dec pop out push push outsl clc cmp lock push and mov sub rcr pop shrl insl xchg xorb push mov mov outsb test and xor dec out xchg adc fisubrl ja jb add dec insl shrl aam xor arpl jecxz out cmp sbb adc or shrb inc mov fs ljmp inc negb pop arpl out xchg stc sbb iret jnp (bad) lods adc repnz add fsubr push cli sub aam scas mov jg dec nop sbb lcall sbb out rorb add pop ljmp das fldl out mov mov xor inc clc inc lahf popa sarb push out mov imul cmp dec stc jl out xrelease push fidivrl cltd jbe dec hlt sbb out cmp imul pop hlt jmp dec loopne pushf (bad) xchg pusha or ss les ljmp mov aas andps faddl sbb aaa insl add lds xchg or popl jne daa mov flds xor mov jecxz cmp dec in lahf jno fwait ret pop cmc adc jno cli or data16 push lret cmpsb jmp stc arpl jge mov xchg push fisub mov jnp insl xor inc adc hlt push repnz je mov lods jg jge cld push loope rcll ljmp out jnp xchg add insb xchg std loope cmpsl dec pop xor push mov bound out xchg mov adc mov mov scas shr les adc pushf pop dec mov movsb int cli sbb or inc aaa (bad) imul insl xlat fildll cli xchg in lret fimull pop (bad) xor sar into xchg aaa push mov fcmovne icebp inc insl sub and push or sbb (bad) xlat lock jecxz adc popf xchg loope loope fs or push mov (bad) loop stos les mov sub pop cld fwait xchg mov mov addr16 stos and push push int lret int3 call cmp mov arpl xlat enter xchg lods mov cmpsb lock mov aad pop adc xchg xor push or out jg mov xorl sub (bad) rcrb jg insb jle add mov mov (bad) loopne pop cmpsl push or xchg test out push out repnz cli fidivr ficompl adc push pusha pop inc xor lods fdivl out cmp out stc out sub xchg imul popf sbb popa inc gs pop daa mov repnz (bad) stos pop ljmp push lods sub dec call (bad) xor imul dec in repnz mov jmp add mov jne sub or jmp mov fsubrs jno cmc out aas outsl pop pusha xor pop ljmp push jbe (bad) insl out ret xor inc loop lods out jmp inc out push daa femms (bad) mov repz in pop xchg pop fbld dec sub sarb jno sysret pop ljmp test aaa pop decb inc mov jno pop cs shrb fcmovnu mov xchg loop lahf out pusha add iret pop jmp lock mov push jae cmp adc mov fucomi int adc sub pop lods mov les mov inc mov xor (bad) iret (bad) (bad) daa pop outsb (bad) adc loop stos pusha dec mov pop out or pop jmp push jnp (bad) mov add add out push in push (bad) mov mov in out cli gs add and bound sub out inc push daa pop xlat mov stc (bad) icebp into jne adc sub dec or cmp mov addr16 or out jecxz inc pushf mov jecxz lods in aas sub add aam lock pop pusha mov shr mov cmp arpl test mov int3 out inc popa cwtl dec pop daa xchg mov mov add and fisub dec mov aaa insb mov cli jo or and scas pop jecxz lods aaa fildll loope xchg ljmp fimul lds out ffreep out pop jmp aad mov cmp add and test lock inc adc das xorl out std hlt (bad) pop aad and mov lds daa fbstp inc maskmovq xlat sub add add loop test out cmp rol movsl cmp mov inc out outsl pop pusha cmpsb adc pushf xlat imul std repnz stos fistpll lock (bad) fmuls push daa ret fbstp lds inc dec add sbb inc call mov insl outsl ucomiss pop mov bound out adc (bad) loope out xchg in pop stos sbb mov lock loop push cmpsb pusha daa (bad) push in fisub lods popa ret mov sub inc loop insb addl fucom mov out inc (bad) inc bound pop push out sbb xor arpl mov stos out jo bnd xchg out jmp movsl repz and mov jl cmp fidiv call add lret stos in out mov sahf pop sub jecxz push jge xor mov rorb cmp xlat and mov sti call (bad) (bad) je or cld loop jae inc rol or out xchg dec mov iret out mov adc lock setae in leave ret xchg test sub push aaa leave and (bad) xchg (bad) xor (bad) jb (bad) push gs sbb jmp pop sub dec lret mov pusha out shrb aam jb movsb in sub lods iret mov sbb lret cmp icebp add dec test scas sbb out sub mov (bad) lahf xor cmc jmp (bad) push pop fwait cld insb shufps add test jae pop out push insb je out loop and lret push stos dec cltd pop out in ror pop rclb mov xlat xor lock aam int3 das loop pop loop addr16 sub into xor out loopne xor movsb out mov sqrtps in lcall outsl sahf mov ja inc pop lret xor insb out scas fbstp xchg pop and out popf fwait std pusha out mov sbb out jb movsb in inc sub cmp sbb addr16 cmp (bad) or stos xor lods jnp mov xchg rcll push es cmp (bad) and pop lret testb (bad) sbb cmpsb dec ret lret or sub or outsl add out enter iret loopne xor xchg aas out push push push dec xlat sub (bad) add rcll aaa push jmp jns cld xchg mov jae adc add jl mov inc iret and cmc loope and lret outsl shll outsl mov push (bad) arpl (bad) ss or lret imull sub xchg repz mov enter jb dec call out (bad) mov adc pop sahf lock jge pop or push sub sub sbb aas jae in stc jmp (bad) (bad) imul sbb mov mul int3 lret pop loop test mov lods (bad) xor cmp push fs xor jae sub mov inc pop ret jg push ds (bad) loope mov js aas pop jl (bad) aaa or pop pop pop cmp pusha cld rol out jae test and rolb das fs adc push xor sub nopl out rcll fistpll pop in not jge jmp mov sti pop and cmpsb rorl scas mov sbb sahf fidivl pop movsb ljmp xor and sub icebp test out lods ljmp rcr cmp out sub add test (bad) movsl push add mov stos in add dec xchg jo xor out jae pop call scas cwtl mov pop and mov dec out test lea lock add adc arpl lret ljmp cld push lahf arpl in mov out mov and and jg das add or fs mov test xchg enter push pop lahf mov jge out test je mov add pop iret pop test out push js mov and lret out mov mov sbb inc adc or cld (bad) inc movb scas int push pop dec sub cmp adc call test test (bad) dec outsl int fidiv mov repnz movl xor pop cmp fdivs cmc test out popf pop push jecxz pop outsb push push arpl out test lea pop fldt lret outsl out out jp cld cmp push sub gs (bad) cmp mov insl add ljmp sahf loop (bad) out push lds aam inc out jg addr16 (bad) mov repnz push daa dec enter out mov push sahf iret (bad) jb movsb (bad) hlt sub out inc jl out and pop out mov jecxz pop outsl cmc jg push loop sti cmp sub jecxz dec add sti jge rol mov popa lcall rcrl inc cmp mov (bad) ds out inc insl imul add push out insb pop nop inc mov (bad) jo inc mov jns add pop sbb sub xchg push call in jecxz (bad) incb add mov test aas popa adc push fsts (bad) dec cmp mov cmpsl out orl ret aaa insl mov lcall jge es adc push and test mov rclb sahf movsl aad insl movsb in sub call sbb cmp in nop or mov cld mov lret mov and inc pop ljmp repnz xchg ret mov shrb dec das xchg sub das or pop in addr16 sahf fnstenv out push (bad) push pop xchg jp shlb inc sti sarb int test (bad) into enter repz loopne sub test pop icebp lods out pop dec jg dec or lret repz (bad) mov jg popf sbb popa push inc outsl push scas lock xchg ret pop stc das fimul sub (bad) xchg cmp cltd out sar mulb ja je fistpll lock iret js clc pusha ljmp icebp out jb movsb in sub and mov xchg add mov and into out ret sub sbb test adc (bad) (bad) jp out call call add inc gs outsl fs gs imul add enter fs add cmp bt mov neg call lea jmp mov pusha add pusha test mov bt stc call test add dec xchg jl aam fcoms xchg scas inc or or incb mov imul cltd fcomp int in cmp adc mov mov xchg xchg icebp xchg idiv dec stos imul cmc test mov push mov in popa mov or and mov push ds lret insb mov push jp test ja sub sahf out stos xor push (bad) mov push jmp icebp test push mov ss add ja sbb into push (bad) sub lahf and test in sahf cmp fisttpll mov (bad) add push les or adcl xor pop pop sbb sub mov daa aad test and add fstp sub (bad) pusha mov fucom gs sete sar in rcr les addr16 jnp sbb stos xchg das add mov in lds xorl inc js or ret jmp inc and lds cmp jmp cmp push pushf lea jne jmp movw inc call and jecxz lods (bad) jp test dec mov ljmp rolb mov pop mov es ljmp inc fs (bad) dec std jl loopne xor out push cli sbb sbb pop in fs mov rorb aaa pop push in mov push jp sub push xchg loop out dec in xchg xchg out dec inc pop pop or xlat out adcl jge lods dec fs (bad) test in mov mov lret sbb push mov xor test (bad) xchg push pushf sbb (bad) aaa out add add lock lock push lock sub clc jne andb vmread jg adc movsl arpl dec add sbb jbe jg and arpl in (bad) and sub adc into mov jg testl out or insb and add adc (bad) dec add imul or ja adc addl and sub adc and inc scas xchg je jg testl ja adc lock fidivr jae xor in jg imul and sbbb leave jb and or or (bad) sub or dec sub jg dec mov adc nop mull movsb mull fstpt sbb jmp (bad) add out dec jg fucomip stc subb jno mov add cmc sub xchg orb movsb xor push (bad) mov sub outsb push hlt popa fldenv sub push mov packssdw jp push stos wbinvd lret adc add ret push jmp dec mov adc out xchg cmp in outsl cmpsl push out or or add std jmp lock out xchg and imul mov push mov jmp and ds fucomip test xor movsb (bad) dec out fiadd dec jo test jne fs sbb inc mov sub arpl imul fisubl test out cmp lcall call mov mov push jbe inc faddp sbb xor stos pop mov pop xor jle int push and pop or sub ljmp out xchg leave add pushf aas mov les lret fildl imul mov clc scas inc ljmp out fs (bad) (bad) pop mov cld xor pop sbb imul mov or aas lods add (bad) icebp (bad) adc sub inc stos mov cli push (bad) xor aaa ret in cmp out loope adc add in xlat clc out (bad) jb push mov imul adc in jne scas outsl pop movhlps sub rcll decb push fsts addl ljmp lods fisttpll xor dec dec mov imul sbb push loopne aad addl adc adc (bad) pop cs fisttpl enter xchg les insl outsl movsb mov (bad) scas out adc xor (bad) xlat mov gs xor fstpl jae in push out pusha es and fisttpll push (bad) ljmp ljmp js sub out insb sbbl pop gs scas cmp fistpll out loope or jge lock mov test cs push (bad) jne (bad) xor (bad) ljmp sarb out aad icebp fnsave mov out jne cwtl jl cmp lods pop aas mov mov push rorl incb jmp shr mov leave xor mov icebp in je,pn ret xchg cltd in mov lds popf inc fidivr jo rcr insl cltd aas jne xchg (bad) imul outsl (bad) je sub xchg out scas push repz loop out cmp dec pop jo push outsl cltd mov mov dec push or pop or sahf mov (bad) out je inc xor gs in nop clc (bad) and pop xor push shlb js divb sti imul add or shr hlt jle ds out mulb and cmp js add dec xchg pop xchg call out out jns stos es jge pop adc fsubr jg adc and mov cwtl js loope cli arpl ret nop ret xor add sahf xor in rorb mov mov pop scas (bad) mov out jg outsl decl js out xchg jns test adc or jne inc mov in mov xor (bad) cmp int3 out fwait inc insl fbstp mov out outsb fidivr les out dec out (bad) leave movsb mov sbb dec out push aam jae sti loop (bad) mov and loope pop (bad) fisttp hlt scas dec insl in add out bound lea mov hlt fisubr js sub bnd les (bad) dec pop dec orb cmp cmpsl aas lcall popf insb jecxz xchg in clc out (bad) jns rolb (bad) dec jbe (bad) out es lods sti das xor xchg (bad) cmpsl jmp stos arpl xchg mov dec setb mov lods data16 in push test xor mov push jo cmp mov cltd pop dec xchg cmc lock stos incb nop push lods pushf xchg incb stos lret in mov les (bad) insb iret or mov nop or ss add (bad) fisubrl pop xchg push pop in xor cs cli mov adc cmp inc mov out in pop mov mov ficomp in xchg addr16 push xlat xchg sti mov rclb jecxz fs fisubr lea cmp stc inc mov sbb add push mov out test xchg jae jnp or out fwait mov and mov nop (bad) push (bad) mov sahf (bad) out dec push mov outsb int3 cmc cs sbbl or mov out ljmp fsubr xchg or jns pop clc out cmpsb jmp cs bound pushf inc movsb in dec out ds or popf xor stc out out and mov and dec scas push xor out or inc mov jns mov hlt shlb pop in js lcall inc adc ret into leave pop ljmp repnz xchg push inc add lods fsubs aam inc fidivl ljmp (bad) jae scas sub gs daa push nop (bad) repz push cmp cmp add es aad out jl mov mov (bad) mov adc imul insb out mov sbb out lret stc or mov mov mov test cwtl in out sub lret xor fs hlt and sub dec (bad) sbb pop test adc cmp repz push std dec hlt dec sbb mov and mov mov gs sub ficompl sbb lods xchg sti cmp out jl jo pop inc jge out dec imul add out inc jbe mov sbbl fwait into lcall imul in popa pop lods aas fisttpl mov mov cmp inc sahf pop outsb ljmp push shl mov loop fisttp mov push mov xor (bad) push mov jmp int push aas and adc dec test mov jo jae push (bad) iret mov cmpsb push push out fxam push pop loope sbb sub mov pop ss test sub out mul rcrb bswap add sbb inc out icebp leave xorb or mov sbb sbb pop test out jo push sub dec jmp jl int test (bad) pop pop stos lods arpl into loop inc dec out jns popa paddb icebp jmp scas in add pusha ljmp xor out lods xchg pop wbinvd and dec out repnz inc jbe out fsqrt mov in lea jmp fist int adc lds pop hlt push nop shll jge (bad) mov ljmp push (bad) lock dec loop popa ror sbb jnp adc push mov xchg or in ds and out cmpsl sbb jo sbb fs in int xlat cmpsb mov imul je out lahf ljmp sub test in (bad) cmovns adc aad or and mov out cltd mov cmp pop add pop lahf jl mov std out dec sti cmp sub jne pop sub out mov lahf outsb out inc sbb jae mov mov popf aaa mov fidivr lds (bad) in pop js (bad) inc mulb out cs mov push out add repz bound mov iret jns in adc lret mov push fwait (bad) ficomp es fcmove (bad) pop lods jae into pop fmuls xchg pop jns sarl push xchg mov lahf pop cwtl pop bound mov pop lret mov movsb (bad) xchg pop inc in sbb cmp rorb cld in or xchg mov sarl mov in not mov fcomps xor and call mov cmp and push jb sbb cld in test mov nop and ljmp push xor lock cmp adc cmp xchg push or scas pushf jmp bt add pusha mov pusha test cmp pushf lea jl jb cmc cmp jmp pusha movl pushf push pushf mov push pushl ret cmp movb pushf lea ja cmc imul pushf add mov movb lea jmp pushf lea call cmc cmp pushf pushf lea jae push cmp jmp mov pushf pushf jmp bsf mov stc cmc jmp jmp data16 fmuls xor mov sbb xchg iretw sbb popf je iret pop mov lret sarl cs test mov push out mov (bad) cld cmp stos mov frstor or cmpsb mov cmp mov bound icebp push mov or xor leave (bad) sbbl xor xor das scas pop add xchg pop cwtl push mov fstpt sub xchg jge mov dec inc (bad) sub loopne idiv fcmovu stc punpcklwd mov aaa xchg inc test loop lods push clc nop lods cmp dec and lea jle mov not jmp imul dec xchg das push int sbb pushf icebp negb and xlat push or bound xlat fildll xchg inc mov cmc loop mov xor push call ficomp hlt rcll fsubrl jl xchg xor inc pop jp mov cmp add ds out inc sbbl leave leave leave lds out cmc std les leave or pop cmpsb cwtl orl les loopne sbb (bad) enter cmp dec and xchg push je inc jae mov es adc cld cmp bt add push mov push pushl mov pushf lea jmp hlt xor (bad) aas clc xchg jbe mov dec test aaa cmc cld dec inc enter popf and lods adc out adcb xor lock and inc jmp mov and mov jbe mov mov cmp pop sbb dec inc (bad) adc xchg sbbb or cltd pop inc push rcl or jg and int ret fucomi clc jmp bound aad dec imul mov mov xlat das lea pop xchg lods xor andb hlt loopne xchg sarb mov add lods add jecxz pushf lea jbe rcr cmc mov bts stc bswap neg add bswap mov mov clc stc add bts movl adc dec neg bsr mov stc push cmp jmp movl lea jne pushf lahf pop movb pushf lea mov pusha movsbw cwtl lea pushl pushf pushl mov movl movw mov mov pusha mov pushf pushl ret lea ret rolb (bad) xchg inc push or fdivl add ljmp jmp clc dec jbe sbb cmp icebp imul or loope out scas dec xchg loopne (bad) jmp inc pop int3 push xchg pop sbbl pop testl jmp lds addr16 arpl dec inc pop fldcw aam mov aam out stc inc mov dec mov call mov mov xor or call (bad) (bad) (bad) flds mov push addl jge js adc dec movl pusha push movb movl movb lea jmp call lea jne bswap sub cwtl sar clc mov clc sar clc inc add pushf add or sbb mov push movl test call lods cmp jb mov insb roll sub das mov addr16 iret (bad) rclb mov mov clc rcr je dec stos adc xor mov pop lret inc es xor jnp or mov test bound ss negl popf xor ret es jle push and xchg dec nop faddp cld cmp cltd sub (bad) xchg (bad) gs (bad) lret test pop fwait mov push jno lret mov icebp daa pop (bad) push insl outsb pop fs pop jns pop xchg aas jo add notb lods add pop jle movl push pushf push pushl popl mov pushl pushl ret jmp jmp add jmp and clc call std aam mov jl cmpsl dec gs lods xchg push jge int rcr clc andb es cmp dec loopne mov imul push das cmpsl mov jp mov scas or out mov xor mov lahf sub hlt repz cmp sbb add sbb mov mov daa stos lock std xchg inc cli (bad) dec ljmp add in ret adc leave push dec iret hlt adc adc fcmovbe jns loope out cli pop jns loop ljmp popa lods add inc xchg sahf inc test mov mov adc nop mov mov leave jns stos adc or (bad) out cmp sub adc out dec rclb mov pushf push xchg pop and add outsl mov sahf test movsb add xlat inc ss xchg int3 push fisubrl (bad) dec pop aad inc rcll add dec xchg lods loop xchg cltd pop mov loop add sub jp mov cs sbbl (bad) xchg cmp xchg aam testl popf scas cmp (bad) sbb lret addl dec mov push adcl mov sub pop nop stc ret adc adc pop bt imul cmc pushf cmp cmc add pusha lea jmp imul popa je sti test sub mov dec leave sub les mov aad cld cmp adc and movsl and push sub pop xorl ds add mov add mov lret push pop (bad) or fucomip push (bad) dec popa lahf loopne and call mov mov pop in pop stos mov insb mov cmpsb sub mov (bad) insl cmp lcall outsl hlt test loope xchg test jl jae roll ret adc xor scas in xor cmp adc outsl jl (bad) mov mov or insl cmc repz xor gs cmp je mov add dec lock xchg push dec xbegin dec cli and jae sbb cmp repnz cwtl sbb loop fwait sub aaa inc in lock sub mov or sbb push enter and jg and jg adc sarb mov loop stc fcompl push jl inc jbe jge lahf adc in or pusha lea je lea mov cwtl not lea pushf mov xchg call lea je test or jmp lea jne btc aas sub pushf mov (bad) lock add enter add enter clc test call add mov cltd sti test icebp push jl jno mov xchg test push sub inc arpl jp mov lods fdivrs xor pop movsl and dec push pop inc xchg sbb imul xor imul sub hlt mov push or ret cld xchg and dec lret aad out push es jno movb repnz icebp inc xchg push sbb pop adc mov mov dec lea mov dec bound jecxz (bad) pop mov jnp sbb adc push push mov lea jmp add inc gs outsl fs gs imul add test mov call call lea jb clc test clc stc cmp push pusha call pushf jmp bswap call mov push pushf pushf pushl ret mov sahf mov cli pop sti stos and xchg cmp mov aaa mov mov cli hlt mov repnz pop outsl adc cmp pop aas xchg repz inc je add mov in mov inc sub (bad) mov stos out stos inc mov les lds dec mov jp pop push (bad) addr16 cmp xorl (bad) icebp in icebp dec add add add ds pop pop in ljmp pop xor loopne ss inc (bad) push jl push add mov fisubrl xchg mov xor (bad) cmp (bad) hlt pop mov mov popf sbb lods insb inc insl push adc push arpl hlt push ja push (bad) imul std in push sbb in scas sbb xchg out push or pushf (bad) popa pop adc movsb cwtl imul cmp mov adc push adc sub mov push add cwtl inc cld dec jae repz out push (bad) lods sbb cmp outsl fimull or push jle (bad) std or inc cmp fidiv sbb leave clc arpl push adcl mov add inc insb cmp fs repz cmpb dec xchg ja mov iret fistpll ret dec add int3 push pop les xchg jmp mov xchg jl mov sahf sub mov xor inc loopne insb push adc (bad) mov push push mov cmpsb push mov movsl add add js clc call jmp adc (bad) xchg xchg dec mov lods jge inc mov loope add pushf pushl pushf movl lea jmp (bad) aas icebp lock test lock aas sub aad lcall icebp scas pop dec fistpl clc jmp outsb mov lahf cmp mov aam imull lea pop out clc dec das (bad) lret pop jnp (bad) sub or arpl iret mov xchg cmpsl lcall outsl lret mov pop subb pop test mov daa in out pop adc ss xlat repnz sub repnz jg cld sub fnop push insb gs (bad) out insl jns cmp and leave adc add xlat push das insb lret xchg and mov (bad) or aad pusha loop xor jge loop imul insb cmp out or outsb ficompl (bad) inc int3 in subl xchg pop popl cli cmp out push test inc push rorb lret fnstcw dec mov lret aad or pushl ret dec out push xor clc adc sub sub inc outsl sub jae sbb fsts adc push xchg lods dec pusha loop xor stos jo push jmp add mov repz stc mov and sub call push or in jno aaa lds insb mov mov pushf jb add int3 jo jl std pushf je xchg jge aad pop inc cmp sarl (bad) lea addr16 (bad) cmpsl outsl mov mov movhps pop push inc rclb push dec aaa sub pushf cmpsb dec jne mov movsl pop push mov adc aas mov xchg xor hlt or adc xchg sub push jmp mov pusha pushf pushl ret pushl popl pushf cmp bt cmp pusha movb lea ja adc pushf sub mov sub add not and rol not mov call lea pushf mov pushl lea ja pushf lea jb cmc cmpb pushf call fcoms les xchg inc int3 pop dec orb aad scas xor imul mov xchg test lret jle cmp cmpsb test inc xchg mov and lcall lock jnp cmp enter call pusha pusha daa or add scas xor andl imul jbe sub lods dec out jbe jmp inc adc pushf test cmpsl xor mov push xor jne or (bad) inc xor movsb scas or in sub sub (bad) dec jp push mov xorl and mov inc cmp jns je sub add xor mov cmpb pusha pushf lea jne pushf btr mov movl stc call fisttpl add jo mov lret inc pop nop mov shrl xchg mov int lea and xchg push cmpsb into sbb add inc loopne xchg in inc out ficoml sbb xchg addr16 out mov or lret push add fisubrl aas sbb imul push mov loopne pop out push mov insl inc add aam stc aas jae mov aam dec inc imul ss mov fdivrl push popf ja clc jmp dec inc loop cs push sar mov push jno jl out mov pushf jg je cmp adc movl pushf pusha cmc cmp cmp jmp push cmpl (bad) ljmp dec or shl fstps or cmp pop fwait mov add push cmpl mov adc das mov mov mov (bad) mov jno jge or loop mov pop sub std ja ret lea insl push pop or lea pop mov aaa iret lcall aaa dec xchg xlat xchg or mov or pop cmpsb jne nop divb mov dec es ret mov mov mov dec pop jns js ja dec (bad) inc jge xor pop push jno dec insb outsl ret lods jbe fmull mov inc adc and out pop enter fs jmp push push inc push xor cs dec dec add mov movw pushf lea je cmp cmc add shl mov pusha test clc push add test mov pushf jmp lea ret jmp lea jg pushf movl call or push cmpl xor mov mov dec jbe mov mov dec sub scas ss cmp (bad) dec sahf xchg push test fsubl or sbb das mov cs xchg pop shl sarb mov add fsubrs sub fldl2t inc loop lahf jbe xchg inc dec sbb out cwtl pop shrb sbb fs mov in xchg pusha fld es sbb subl dec mov sub xor pop sti add (bad) icebp in call sub mov inc test adc std les and shrl cli pop sti test pusha xchg enter pop imul fs movb and pop jno prefetchwt1 lods pushf fsts mov mov ret call lcall or lcall jl inc cmp fucomp inc out cmp and xor pop test icebp lock inc ja add mov pop mov hlt fsubr int mov int3 mov sub mov out push arpl lcall mov pop jle sbb inc pop jle pop ljmp push jg add jecxz call sahf push in imul mov popf test lods jne imul and stos jmp arpl subl mov sbb call sub push ret push (bad) pop ja ljmp inc scas ss xchg lahf inc aam lods jne mov xor fild ret loope,pn push int push mov into adc sti outsb mov (bad) dec mov (bad) cmc aad dec fs jae dec push pop jl dec mov xor jne std push pop clc test cmp lahf lea setg pushf bswap pop mov pushf pushf push lea ja jmp call stc sub cmp cmp pushl movb call gs call sti test or idiv inc pop loope std xchg aaa or loop push fsubr jmp adc and xchg push movsl and xor xchg das mov inc pop insb inc out jecxz mov or or mov add inc test fimull enter adc and pop xchg hlt dec lcall test gs cltd mov out push lea ret int3 jbe jnp mov mov mov bound pusha sbbb jp popa fs adc cwtl dec movl push mov pushf pushl lea jmp movl jmp add add bts pusha bsf mov jmp push pusha test pusha push movb pushf lea je sbb call sar clc ror sub dec sub add shld mov inc ror pusha rol mov stc stc bt repnz pusha lea jne not movb lea lea push setl push jmp lea ja cmc jmp fistp xlat jl lods je sub (bad) push clc jns lock aaa mov es or das mov jmp popa jbe sub jo or jmp mov add push jnp cmp push and lock jae pop jo ss outsb into xor cmp repz mov test adc cmpsl inc push xorb sub subl mov mov enter jge popf adc into cmc cmp cmp push lea jmp push pushf lea jb push movb cmp pusha push lea ja sbb not add pusha call pushl popl pushf pushf movb movb pushl ret mov pusha xchg pushf movl jmp btr mov sub (bad) lock rol rol add (bad) lock cmc test pusha push mov lea je cmc sub pusha call mov xchg jl cmp jbe leave pushf jle (bad) fcomi pop arpl out fcomps cmp fsubl andl sub (bad) loope test xlat arpl adc mov cmp lret sub mov gs mov (bad) or push test mov loop add loopne or inc mov loop xor loop jg inc mov hlt jecxz lods out popa mov cmpsb sub or mov push out adc add jl loop adcl ljmp stos dec pusha daa pop adc mov push out sbb sbb out cld out sbb cmp lds mov or or into (bad) adc sbb sub mov jge (bad) repz pop out and pop fsubrp inc mov imul and add dec mov xlat adc add mov aad out and mov aad cld leave sahf inc jo push fisttpl push rclb sahf in or adc scas xor mov repz dec test (bad) in push pop lcall push dec scas push insb mov loop fild xor mov xor mov or jnp and jge fisub pop mov daa mov out xor adc or push or out pop mov xor out jp jno mov mov test dec sub jno jl mov movsb es (bad) leave out add inc and jno or shrb and out adc xor or shlb inc xchg lcall int xchg push mov lcall movsl push clc decb and inc out cmp and mov xchg inc test mov mov into ljmp mov cmpsb stos cli add mov jno jb jmp out add push daa xlat mov fdivl outsl adc (bad) gs loope shl (bad) fwait lock fs xor add hlt xlat es dec add int3 fucomi push nop imul sti (bad) mov test mov cmpsb inc fsubl push (bad) cmc sub inc cmp outsl mov push pusha inc push inc pushf lea jmp movl movl pushf jmp or push dec ror sbb test pop dec jb mov lods dec in (bad) in cmpsb je test insb mov cmpsb xchg pop (bad) lret adc ss in ret jbe fistpl sahf cmp out lds cmp hlt mov add or repz pop push add mov add ret insb out in daa and leave icebp (bad) daa dec xorb jle cltd jns mov fs pop push imul cmp mov jb insl push fst sahf jo cltd test sbb push xchg aam sbb jmp cmp dec jle jae rcll icebp ret je mov lods insb mov dec in xchg add xlat dec pusha or jbe add dec aad push xchg or push jnp or add insl pop imul push xchg and or pusha cmp fistp enter jle cmc std les aaa (bad) enter dec jb (bad) cmp outsb aam cli lret ds push std and push mov sbb outsb xchg loope call lcall out push xchg sbb inc fsubrl mov or cld sti fsubl jns add xor loop add fildll xchg (bad) jge test (bad) decl xchg shlb shr (bad) (bad) (bad) cmp pusha lea ja mov add clc sar mov jmp dec lcall test out int3 das fcomip lock ret jae in adc mov add jae and (bad) ljmp xor sti cmp xchg and mov enter mov les hlt dec jae pop cld loope sub cld xchg cmp add cwtl cmp jmp dec sub xor jle iret add or mov call adc in cmp xchg sub aaa (bad) mov add lea xchg and or xchg inc popf test nop mov inc or or fsubrs iret pop and pop lods xchg stos int sbb fwait inc or notl mov std in cltd xor dec sbb mov xlat add mov sbb pop (bad) cmp jbe testl arpl sti fiaddl mov jl jae xchg movsb aaa or jle add mov xchg xor mov pop (bad) jae jb repnz push int3 rclb inc js push mov sbb adc nop pushf popf push sub mov mov xchg gs pushf iret mov xchg jg pop loope dec pop aam xorl lcall popa hlt sub fs call lret cli mov sbb sti cmp sub pmaxsw imul fsubp clc jecxz mov xor adc adc inc pushf daa inc test mov pushf scas mov push dec or fimull jg test stos dec iret push sbb inc push inc push push xlat in cmp xchg data16 xchg pop call cmpsb lock push insb add or sub imul lods push bound mov mov push jbe inc xor xchg xor mov test sbb into in inc shrb mov into jo xor out out mov lahf rol mov inc pop push xchg ljmp arpl aaa imul fild xor sbb and cmc cmp and mov sub jb imul mov mov loopne xor in add leave repnz adc lods sbb lcall add push xchg sub pop stos mov mov ror test pop cltd jp push (bad) cwtl pop rcr push popf or lret pusha push popf dec pop inc cwtl dec ret jbe xchg fisttpll jnp cli cmp (bad) and pop dec fdivl pop lret insb mov iret adc int pushf xor bts stos clc (bad) mov ljmp bound ss pop jo adc (bad) xor mov (bad) std add in sti fsubrp in and lods push lea jno lahf pop push movb pusha lea ja push pushf lea jb call movsl cmp mov pop int3 add mov aaa std in jnp into dec stos sbb mov (bad) cmp movsl dec inc fisub std fmul cmp push incb jle dec stos sbb pop fsub outsb repnz sbb or loop mov and lds mov movzwl adc fistp test or jb adc add lcall jp mov (bad) js add test inc jge insb test jp ret sbb jl push lret insl cmp mov fistl lods imul cwtl stos jne sar nop nop aas out (bad) aam pop fstps cli stc xor xor pop dec movsb sbb cltd jnp jnp xlat imul rorb fisttpll out add dec mov xlat or xchg (bad) jmp popf xchg jb adc adc test adc xor pop sub mov ljmp scas (bad) insl inc and addr16 and push push pushf adc or out push fisub mov mov add mov data16 jnp push (bad) jo lock jne test xchg pop dec lock xchg sub cmp sbb add imull dec adc jl and fidivrl aas mov (bad) icebp pop push push pusha jo adc xor add inc inc insb gs outsb jne add add leave lea jmp insb jnp jecxz inc inc xchg scas sbb leave push lock pop pop loope mov adc inc nop adc adc xchg inc sbb mov faddl in cli stc fisubl daa into repz fisubr fisub adc (bad) mov in js adc xchg jae pop and jbe push inc das push fsub jbe fisubr add ja inc in lret lods inc mov xor cmc cld sar shrb int test mov cmp repz not sub fs shl adc addr16 push rclb xchg test cmpsb jnp xchg xchg adc and ret and js rcl insb scas add adc inc mov jge aas mov sbb imul ljmp jae fistpll (bad) xchg pusha push pop insl add add push pop jge jg jmp adc push sbb pop addr16 push xchg push scas sub inc in or lret mov push jne int3 mov div cmp call dec jl arpl out push fwait mov adc push (bad) imul cmp and push fcoml mov mov ljmp xchg stos xchg fidivr mov adc stos mov nop lcall push in mov cmc cld popa ds and adc pop test ljmp push pop mov es repz pushf inc fwait das stos jo push int3 xor sbb repnz mov mov (bad) lcall out push sbb adc push sbb mov call ljmp insl ret add sbb adc and pop xchg out (bad) icebp aam out ljmp adc hlt xlat inc mov add ficomp xchg aas cmc cld imul incl dec popa jecxz nop xchg push enter ja push lcall stos adc add adc push adc fwait out imulb mov mov mov push (bad) push lcall fs mov add inc jl addr16 jmp repnz mov mov inc inc sbb pop mov mov out add mov jp (bad) (bad) in dec into ret inc lods push bound jnp mov pop mov ss (bad) cmp incb enter aad cltd fst fnop nop nop xchg mull clc dec mov dec test lahf cltd lret sub xchg lods xchg or sahf rol mov nop lods dec xchg add rol addr16 sub and (bad) fistpl jmp add ja jp aam xor jge add or pop mov lret sbb xor cmp (bad) repz arpl (bad) aad mov movb lea pushf mov pushl push movl pusha jmp roll hlt repz in inc lret imul push mov mov sub in mov inc subb push push loope sub and jo outsl sbb push push gs jecxz push aam cli in pop xchg push push push xor xchg (bad) or out push cltd test adc iret fsubrl nop out pop fldcw mov mov (bad) cld jbe or pop mov add jmp out lahf pop rcll jno shrl dec fs in (bad) jmp xor cmp jle inc and lods arpl push andl add xor pop enter fimull and jmp les and outsl and pop push popf nop mov sahf inc push data16 inc mov push dec shrb adc inc sahf sbb (bad) sti ss mov adc jb sarl test in push xor mov pushl (bad) dec lret aam sub in pusha jne adc jmp lods sub or and ljmp ss jae push add out lahf mov pop cmpsb and mov fsubrl int3 add jg (bad) repnz xor xor (bad) call xchg inc mov into cltd dec mov xor (bad) and or stos inc xor push js jg pop xor lods pusha or adc sbb mov mov cmp bt call call mov loope rolb and or in fadds repz (bad) pop jl xor mov sahf into (bad) je std xor fs sahf push jbe sbb in out xor jae popf mov movsb ljmp jmp mov sbb ret push loope out dec dec push bound pop fmull aad sarl das clc add or inc int jp fs std (bad) fcomps or lea cmp and cmp or ljmp out int fstl mov dec cmp pop inc fnsave fbld cmpsb mov mov je loop mov ffree lea inc enter dec aaa jmp (bad) aas test mov (bad) out pop add mov jmp sarl dec rcll es inc mov lcall (bad) mov inc jmp mov push bound in sub es add scas mov sub pop mov lahf push dec outsb dec xchg mov jnp dec iret push sbb mov add ja inc cmpsb push sbb daa into sub sub push sahf dec sbb in ljmp scas sub in (bad) repnz mov scas pop sub (bad) push arpl int not das cwtl adc fdivr cmp lea call jle rcll and call les jecxz lret push jmp jno (bad) cmp adc xor int push cmp inc loopne add adc push movsl push adc adc out in push mov ret (bad) nop ret out outsb sti stos jbe add jmp pop pop lock ss scas xchg fs dec xchg add fsubp mov add ljmp aaa mov cmp or push mov inc lret sub mov cmpl mov inc adcl adc lcall inc (bad) (bad) jmp idivl mov and ret fmull adc aad push movsl adc xchg push mov lods sub shll sub ja and icebp dec xchg push or fldcw or mov add jnp add xchg push mov jmp cmpsl xchg lret add fmuls mov push inc (bad) out bt js mov sar push fild cmpsb test jno ret lock lock addl dec mov iret daa int cmp cltd pop pop pop pop add jns lds or push addl sub fmuls test push jle push fs outsl push pop imul sub mov add pop mov lret out cmp jne jne inc pop mov adc pop aam popf in inc nop popf enter dec push das out call dec ljmp jns jne test mov adc xor dec ljmp (bad) lret call push jp fdivl pop push inc cwtl pop (bad) xchg inc aad xchg aaa jae scas mov pop push mov mov fnop pop imul lcall ljmp mov mov adc xor cmp (bad) (bad) call push aaa sbb dec test fisub out jb das sbb cs pop fisttpll jnp add out hlt push (bad) repnz xchg and adc adc inc roll mov scas push jne cmc in call pop push mov cli fisttpll lods pop adc xchg je pusha mov call cmc test cmp cmpl mov push pushf mov pusha mov jmp shrd inc mov jmp movb pushl popl pushf mov movl pusha lea jmp stc jmp pusha mov pusha mov movb movb mov call movb mov pushf mov jmp mov not jle not push not push call not clc bt pusha cmp not push cmc and jmp pushf mov pusha pushf pushl mov mov mov pushf mov mov pushl jmp jmp mov movzbl call neg stc bt pushf jmp pusha mov push mov movb push lea jmp rcl sbb bts mov pushf cmc cmp mov bt add pushf mov mov pushf lea jmp push mov inc mov call shrd jmp pushf mov mov call jmp pushf xchg test pusha mov cmc pushf stc sub pushf push lea jne test bt cmc xor jmp pusha movb pushf mov jmp mov mov lea jmp jmp pushl movb repz popl movw mov pushf pushf jmp sbb cmc btr xor mov bt pusha jmp jno (bad) cld (bad) pushl vmovddup (bad) lcall (bad) add call icebp (bad) call (bad) (bad) jnp (bad) jmp (bad) incl (bad) or (bad) lcall (bad) mov or incl sbb dec or pushl (bad) or (bad) (bad) cld or pushl (bad) cld (bad) ljmp adc lcall (bad) adc (bad) cld or (bad) mov repz (bad) stc sti (bad) (bad) ds (bad) lcall (bad) or (bad) ds (bad) dec inc dec out (bad) incl add lcall vmaxsd (bad) or (bad) inc (bad) mov or (bad) ds (bad) (bad) ds (bad) adc pushl adc (bad) cmp vpshuflw incl or call icebp (bad) pushl (bad) pushl (bad) out (bad) ljmp sbb jmp repz ljmp (bad) sbb incl (bad) call test (bad) jnp (bad) call cld (bad) ljmp sbb incl or lcall (bad) test (bad) cld or jmp add ljmp sbb call (bad) ljmp sbb (bad) cli pextrw out (bad) (bad) js (bad) or decl pop (bad) push (bad) sbb decl add pushl (bad) repz (bad) mov pextrw inc (bad) ds (bad) cld (bad) call out (bad) jmp repz decl adc incl vsqrtsd (bad) lcall (bad) lcall or call icebp (bad) call cld (bad) jmp push (bad) or decl or (bad) repz call out (bad) (bad) stc sbb lcall add (bad) call out (bad) ljmp adc jmp cmc (bad) incl sbb incl pextrw or ljmp sbb jmp pop (bad) add (bad) jmp (bad) repnz call icebp (bad) call (bad) pushl (bad) (bad) stc sbb incl (bad) (bad) cli pextrw icebp (bad) ljmp sbb pushl (bad) (bad) cld or pushl (bad) sti (bad) dec inc (bad) ds (bad) repz dec inc lcall (bad) sti (bad) call pop (bad) add (bad) adc incl icebp (bad) dec out (bad) lcall lcall pushl (bad) (bad) cmp (bad) push (bad) or lcall (bad) (bad) ds (bad) dec out (bad) (bad) stc sbb (bad) mov adc (bad) jnp (bad) incl add incl or decl add (bad) cmp (bad) inc (bad) cld or jmp pop vmaxsd (bad) add (bad) mov or (bad) cli pextrw adc incl or call icebp (bad) ljmp sbb dec inc incl or incl (bad) add (bad) decl adc ljmp sbb lcall (bad) dec out (bad) jmp adc call test (bad) jnp (bad) lcall (bad) test ljmp sbb (bad) ds (bad) call cld (bad) call (bad) lcall (bad) mov pop (bad) pextrw add pushl (bad) repz (bad) cli pextrw sbb (bad) cli pextrw push (bad) or (bad) icebp (bad) incl out (bad) jmp repz pushl vsqrtsd (bad) incl (bad) (bad) jnp (bad) jmp repz incl (bad) (bad) ds (bad) incl (bad) pushl (bad) mov and bswap mov mov repz popl bswap movsbw mov shr bsr pushl popl mov bt data16 (bad) push rcr movl sar mov and sar sbb neg bswap pop rol add movsbw pushf rol neg pushf or sbb lea cmp sub shl cmp mov bswap sar mov xchg btc add btc data16 icebp clc mov inc bts sub stc neg push lea inc cmc pop bswap ror adc push sub btc rol movzbl add setl or mov bt push pusha cmp not cmc add bt cmp clc pushl add jmp pushf jmp jmp mov jmp call clc sub cmp jmp mov push pushf mov call cwtl call add pusha movb pushf lea jmp pushf pushf popl call pushf mov call pusha pusha mov jmp and push jmp movb mov jmp jmp pop pop xchg cwtl not xchg pop call bt or push pushl call mov pushf pushf pushf pushl ret stc push push neg cmc pushf cmc push ror stc cmp mov cmc add pusha add call pusha mov pushl popl pushf lea jmp jmp pushf pushf popl pushf jmp pushl popl push movl movl pushf pushf movw lea jmp push mov jmp pushf movl pushf pushf lea jmp jmp pushf movl mov push lea jmp cmc push cmc pushl popl test add jmp add bt bt test cmp add push pusha jmp lea not mov pusha call rcr adc mov cmc add jmp movl mov push mov jmp call pushl popl pusha pushl movl mov pushl push lea jmp sub push mov pushf lea jmp pusha push mov call repz popl lea jo pusha pusha mov jmp repz popl pushf movb movb mov pushl mov pushl popl pushf movb movw movl push mov movw movb lea jmp jmp not push cmp mov cmp xor cmc clc clc sub jmp call movl pushf pushf pushf lea jmp cmc push add bt bt add cmp cwtl cmc call mov jmp repz popl pushl pushf mov call push not mov not cmp sub pusha jmp mov pushl popl pushf pushl pusha mov lea jmp movw shr jmp sar shrd clc mov bt mov jmp movb movw jmp stc sub pushf push movw mov movb movw mov lea jmp mov movw jmp repz popl pushf mov call dec sbb pushf cbtw mov push xchg pushf clc add cmp not pusha test cmp neg movb stc sub pushl call pushl popl call mov movw push pushl ret sub pushf call push lea jle cpuid jmp mov jmp shl mov push pushl mov push mov pushf popl push push push pushf pushl popl movl pushf lea jmp pushf pusha mov mov call pushf mov repz popl jmp pusha pushl mov push lea jmp mov mov call mov jmp mov lea jno push movb pushf pushf popl call sub jmp push mov pushf call pushl popl call mov lea push pushf mov movb pushl lea jmp mov pusha pushl call mov pushf pushf mov jmp and (bad) lock test add mov pushf mov movw pusha call pushf sub stc cmp stc pushf add jmp daa shrd mov not pushf adc push mov test sub bt jmp movw repz popl call mov pushf pushl lea jmp mov push pushl popl mov call call add mov movb call shld xchg mov bsr adc xor movzbw clc movzbw bts sub jbe rcr push ror bswap pusha mov dec sub jp movzbw push xor bswap movsbw movw mov movb dec cmc push push add movb jmp xchg cld pop mov pushf cld lea call shrd mov pusha movl bt jmp push jmp pushl popl movl lea jmp pusha mov movb mov mov movb lea jmp pushf mov call call xor movzbw bswap mov pusha dec pushl cmp jmp jmp call pushf mov pushl pushf pushl call pusha not mov movb pushf mov dec bt pushf add push mov mov movl movb lea jmp stc pushf movb add clc cmc jmp mov push pusha push mov pusha repz popl call shl mov cmc cmp lea add jmp call pushl mov pushf pushf mov movb mov mov movw mov repz popl call add push jmp call mov movl mov mov push mov lea jmp mov call jmp repz popl movb mov movb pushl popl jmp mov call mov call rcr mov pushf movb push add call push lea jp pushf pushf pushf pusha jmp call xor mov movzbl cmc sub cmp inc add neg pushf bsf neg btc bts stc ror ror bswap pushf not push dec sub shrd sub and mov stc pushf call jmp call movl movw mov jmp jmp push pusha mov pushl movb push mov call bswap push lea push jmp bt cmp add call pushl popl call mov movb mov pushf jmp push push mov pushf push mov pushf jmp pusha dec cmc pushf xor stc pushf add jne clc mov stc clc pushf add pushf sub call call mov repz popl call pushf pushf pushf mov jmp pushf call pusha pushf push pushl mov pushf mov call xchg movb pushf movl pushf call pushl popl pusha lea jmp pushf jmp pushf lea mov pusha mov pusha mov jmp pushf sub stc clc and mov pushf mov pushf pushf popl push movb pushl popl mov mov movb movw lea jmp pushl mov jmp movb call add movb pusha mov mov pushf pushf pushl movw lea jmp movb mov jmp mov mov mov mov call pushf add stc sub call mov call neg cmp clc jmp push mov pushf mov mov call repz popl mov pushf lea jge push mov pushf pushl pushf pushl popl mov push mov movl mov mov mov lea jmp pushf pushf pushl popl push lea jmp mov pushf pusha pushl lea jmp jmp movb mov call jmp call pusha mov mov call stc xadd clc mov sar shl mov push cmp mov movw sub pusha call jmp mov movb pushl popl pushf mov pushf movl pushl pushf mov movl lea jmp pushf divl mov pushf mov pushf mov jmp rcr rol mov mov mov or rcl adc mov stc add push shld pusha mov mov pusha mov pushf pushf popl lea jl pusha mov movl pushl popl pusha pushl pushf push lea jmp stc mov neg inc mov pushf jmp mov pushf mov mov pushf jmp call call call pushf pushf pushf popl push pushf pushl popl movb pushf pushf push lea jmp push mov mov lea jmp mov mov push pushf lea jmp movzbw movb mov cmp rcr mov jmp mov mov push pusha mov pushl mov mov pushf movb lea jne bswap shld mov pusha pushf test call clc xor btc mov cmc push sub movb call push jmp shl pusha mov push mov mov call jmp jmp bt bt pushf xor pusha sub stc cmc ror jmp pushf mov pushl pusha cmc push add bt sub movb jmp movb test sub pushf shr pushf jmp jmp mov pushf mov pushf pushl lea jmp pushl popl movb push movl movb push push movb lea jmp movb mov call pushl popl pushl call pushf pusha mov pusha mov movb push mov movb movb pushf mov lea jp pushf pusha pusha mov movw push pushf mov jmp pushf pushl mov pushl mov push lea jmp push movl movl push mov lea jmp jmp movb pushl popl pushf call pushl popl movl call xadd inc shr mov test inc add setne pushf push mov call mov movb jmp pushl popl pushl pushf lea jmp mov pushf pushf jmp pushf call mov call inc test mov pushf add mov inc call pushf mov pushf mov lea jmp bswap call add lea jl pusha pusha push movl call bswap mov neg mov clc call push mov pushf mov call mov push mov mov call pushl popl call mov mov mov mov pushl popl push pushf movl pushl pushf pushf lea jmp pushf popl pushf pushl pushf pushl popl movb pushf movl push lea jmp xchg movzbw movzbw call mov mov mov mov mov call mov mov call mov mov pushf call call pushf mov movb jmp bts sar rcl movzbl add btc pusha movsbw xor bsr add movsbw neg jmp jmp pushf mov pushf pushf lea jmp push mov jmp mov cld call pushf pushf mov mov movb movw call jmp call pushf pushf mov jmp jne pusha movb pushl popl pusha push pushf lea jmp pushl popl mov pushf pushf lea jmp jmp jmp jmp and bt bt mov bt push jmp call mov jmp mov movl push pushl pushl ret call movb mov jmp lea mov cwtl setno lahf mov pusha jmp pushf pusha pushf pushf popl movb mov pushl popl movb pushf lea jmp xor pusha call push call lea jb pusha pushl popl pushf lea jmp mov pushf pushl pusha repz popl jmp pushf mov call pushf popl jmp call movw jmp and test clc pushf push cmp pushf lea jne add pushf setne pushf xorb movsbw bswap mov pushf lea jmp mov pusha pushf movw pushf lea jmp mov mov pushf push movw lea jmp jmp push call mov push push jmp pushf mov lea cpuid pushf cmc sub jmp pushl popl mov movl mov mov lea jmp pushl jmp pusha call xorb lea pusha lea mov pusha lea jmp cmp add movw add call pushf mov call bt test shr bsf mov xor setno rcl push mov bt call setge inc movsbw dec neg lea push sbb pushl neg mov ror add adc sar add inc movzbl stc mov cmp mov jmp push mov mov pushf lea jmp call mov push mov pushf push lea jmp cmc cmc cmp pushf pushf pushl lea jne call pushf pushf popl pusha pusha pushl popl movb mov pushf movb lea jmp sbb mov jmp mov pushf pushf lea jmp mov pushf pushf call mov pushl jmp push xchg lea mov mov jmp add add movzbw mov jmp mov mov mov mov movl pushf movw lea jmp push mov call movb pushf mov call push push movb pushf mov lea ja pushf mov pushf push jmp push repz popl pushf mov mov pushl mov pushl popl pusha mov jmp push mov mov jmp call mov pusha pushl pushl mov pushf jmp cwtl pusha mov stc stc add stc clc pushf pushf sub pushl mov movb mov mov lea jmp call call call mov push jmp pushf movl movb lea jmp pushf push mov jmp pushf jmp pushf mov push lea jmp mov pushl mov movb push mov movw mov call mov jmp call jmp mov jmp movb mov jmp add call bts ror cmp and movzww call push mov mov call mov pushl pushf pushf lea jmp jmp shl mov stc setae add mov cmc call mov mov jmp pushf jmp jmp cmc movzbw stc push ror not dec movb xor pushf jmp pushf mov mov pushf call neg lea sub shl and rol xadd mov sbb ror rcl rol add rol mov mov lea sub sbb bsr lea sbb neg pushf call stc bt add pusha pushl pushf call mov mov jmp jmp bt sub call movsbw call jmp push ror clc pushl cmc cmp sub bt clc push mov cmp test clc sub push mov pusha pushf push mov lea jmp jbe push mov xor mov sub bt clc cmc ror pusha mov jmp mov mov mov jmp pushf movb movl movw lea jmp mov mov pushf pushf lea jmp pushl popl jmp call call pushf movb mov call pushf call movl movb mov pushl lea jmp cmp push call lea jne test cmc sub push jmp repz popl pushf push push pushl mov jmp push pusha pusha push mov pushf push call stc clc and call repz popl push movl pushf movb mov call jmp jmp jmp mov pushf jmp dec pop cmc xor pusha or pushf xor not cmp mov push movb jmp call mov pusha push push pushf mov movw mov push jmp call adc shrd rdtsc stc sub call push movb mov pusha mov pushf mov pushf pushf lea je push pushf push call cmp bt sub push push jmp pusha cmp mov ror mov clc pushf call test add pusha jmp jmp mov setnp jmp pushl popl pushf pushf pushf mov lea jmp push pushf push movb lea jmp pushl mov pushf push mov jmp pushl popl movw pushf lea jmp adc mov stc pushf bswap mov stc clc add clc call cwtl mov pushf mov mov pusha pusha mov push push lea jmp pushl popl pushf pushf movl pushf pusha pushf lea jmp push pushf repz popl jmp add test sub jg cmc clc cbtw clc pusha call pushl popl jmp mov pusha pusha call mov push pusha movb lea jmp add pusha call pushf add pushf add test pushf cwtl stc clc sub pushf mov mov lea jmp mov mov pushf lea jmp call mov movb lea jmp mov jmp mov pushf pushf pushl mov pushl popl jmp mov pushf call cmc cmp add call pushf popl call call call mov pusha pushf repz popl jmp mov mov movl mov mov mov lea jmp jmp mov call pusha call movb lea jle push call jmp pushf pushl popl pushf movl pushf movb pushl movb lea jmp jmp jmp pushf movb lea jo pusha mov pusha call call pusha lea jae pushf jmp mov call pushf neg ror neg not movsbw pushf dec pusha adc and btr xor sar bts xor not movzbw cmp mov stc cmc cmp test add jmp not setbe pusha xchg bswap movsbw call jmp mov mov call movb pushl mov mov movb jmp push mov push push push mov call push push pushl popl movb pushf jmp push call push shl lea jle mov jge push pushf popl push pushl popl movb push lea jmp push mov pushf call sub movb pusha mov pushf push lea jmp mov pushf call push mov pusha call repz popl call cbtw stc cwtl movb clc pushf pushf add bt movb call pushf mov jmp jmp movb movl push lea jmp shr pushl mov push movw pushf pushf popl pushf jmp movl push lea jmp mov jmp mov pushl jmp xor call mov pushf jmp call lea jne adc shld or ror mov bt pushf pushf and bt call pushl popl mov movl pushf push lea jmp pusha pushl popl pusha call push mov push mov pushl repz popl lea jle push call xor mov jmp call push mov pushl popl mov push lea jmp pushf pushl popl pusha push pushf pushf lea jmp xchg cmc bt add pushf stc clc mov not lea jns pushf clc neg clc add call call mov pushl call pusha mov movb mov mov pusha call pushf pushl mov movl push push pushf call mov test sub test bt clc add cmp cmp test cmc neg clc lea clc call sub inc pusha jmp jmp lea jg mov pushf mov pushl pushf lea jmp mov mov mov pusha repz popl movb pushl call call pusha mov call btr sub cltd std mov adc xchg pop movzbl cltd pop shr bswap rdtsc pop sbb popf pushf mov movzbw pop pop movsbw pop call mov jmp pusha pusha movl fldcw pushf lea jmp push pushl repz popl push jmp mov call pushf mov call movl push push lea jmp test call pushf mov mov pusha pushl mov lea jmp push repz popl call pushf jmp bsr inc mov test add pusha pushf pusha lea jmp jmp rcl rcr sbb mov bt pusha add mov pushf sub cmc pusha call mov push push mov pushf mov jmp jmp mov call stc shrd jmp jmp mov pushf push mov movb call lea mov pushl movzbw mov push mov pushf push pushl ret mov jmp pushl pushl movb mov push push movw mov pusha lea jmp pushf pushf popl pusha pushl popl pushf push push lea jmp mov mov jmp mov pusha jmp cmp call repz popl movw movb call call movl mov push lea jmp push mov call call pusha mov movl mov jmp xchg push movzbw pusha jmp movzbw mov cmc mov (bad) icebp add mov lds jmp mov mov mov push call mov pushf push pushl ret rol mov call jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp jmp movzbw bsr mov test mov lea js sub pusha lea jb mov push lea jmp sub push pushf movw jmp movb movw call mov call pushf push mov mov call mov movb mov call shl aad bts mov inc and mov cmc call pusha mov mov movw mov lea jge push mov mov jmp or lea pusha test cmp pushl mov lea ja neg clc mov ror movzbw bsr lea shld shld daa sub das not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call call xor jmp stc sub pushf movb mov pushf lea jmp pusha movzbw btc aam notl inc or mov pusha movb jmp bt push neg stc bt ror jmp bt cmp std popf pushf push lea jmp jmp mov mov movw push mov pushl ret bswap jmp dec mov or push bt mov pushf sub movb pushf call push pushf pushf pusha mov jmp clc pushf add pusha movw mov pushf popl lea je popl pusha push push pushf lea jmp pushf jmp cmc bt add pushf lea je inc stc neg push ror bt cmc pushl add pushf mov cbtw cmc pushf call jmp pushf popl lea jge pusha mov movb pushl popl pushl pushf lea jmp aad lea mov cmp sbb stc clc mov sub jae push add pushf mov pushf pusha lea jmp cmc add mov mov lea jmp movsbw movzbw call pushf pushf movl movb movb lea jmp mov call jmp push movl push pushf lea jmp call dec bt pushf xor cmp pushf push stc mov jmp mov push jmp rcr mov bt mov call push pusha mov pusha call lahf dec btr mov rol mov bt jmp inc bswap bt ror rol shr sub shld or adc cmp movzbl pushf shl shrd rcr mov test jmp pushl popl movb push pushf mov lea jmp mov call mov mov mov mov mov movb call shrd mov sbb sub sub xor call not stc call jmp sar rcr jmp stc test cmpl push pushf jmp push jmp test test cmp call pushl mov add movb pusha mov pushf push pushf mov lea jmp jmp pusha call mov call jmp mov push call push push pushf popl call push mov mov pushf mov mov pusha push mov pusha mov mov call movsbw mov pusha pushf mov jmp mov pushf pushl pushl mov lea jmp pusha movw jmp pusha cmc add jmp pusha sub pusha mov movb pushf lea jmp seto setb repz popl bsr add bt clc xchg shrd mov setl sbb pushl popl cmc movl sub mov mov rol xor bswap dec bswap add rol push pushf rol inc stc rcr lea pusha call mov pushf jmp jmp lea je cmp bt call call 