cmc xor rex.WRB (bad) add (bad) push callq (bad) adc pushfq fildll sub fmull push (bad) mov lea loopne mov xchg sarb xor (bad) xchg xchg movabs sub add or (bad) push rcr loopne cmp add jne fildl lock subl add mov xchg decl rex.X adc repnz xorl fiadd stos push popfq (bad) xchg (bad) (bad) fcoms pushq jl movabs add jb cmp adc mov test mov jns (bad) loopne adc loopne xchg push rex.WRB xchg mov xchg ja sbb js cltd and enterq (bad) rex.X je nop rclb mov xor (bad) int fdiv callq scas lret mov cmp mov push (bad) cmpsb (bad) fcmovnu mov sub retq out jno insl and cmpsl sbb xchg stc clc icebp (bad) (bad) je fcompl or push andl adc repz cmp rex.B movsl outsb jle movabs leaveq sbb and mov rex.B roll je sbb cmp loopne sbb movabs mov xchg mov (bad) (bad) cld (bad) mov enterq (bad) (bad) callq (bad) or (bad) cmp add pushq jae sbb rex.R sti fcomp xchg push movabs sbb push sbb rol xchg mov stos (bad) ds mov xchg (bad) (bad) add jne mov rcll cmp add jp in out mov sahf mov jrcxz rex.RB sbb test imul or add in mov movabs shll loop sarb test and fcmovnbe out xchg mov rolb rex.B subl adc (bad) (bad) (bad) sti lret cmp rex.WRXB (bad) (bad) std fidiv lods pushfq outsl movsb sbb (bad) rex.RX or adc jl (bad) push insb lock cli push stos (bad) cmp mov repz cmp xor ja scas (bad) or mov rex.WRX stos nop and sbb mov fidivr rex.RXB fdivr (bad) (bad) (bad) std jmp lret xor (bad) mov jl incb sbb mov nop rex.WB sub lahf (bad) lods movsb test or cltd (bad) out rex.WRX in xchg rex.RXB cmp out adc test iret movsbw lea bswap movzwl movzbw lea movzbl mov jmpq jne clc cmc movb jmpq imul bt cmc jmpq jmpq add stc movzwl xor mov cmc test add jmpq jne mov jmpq jmpq cmc rol btr mov test ror sbb btc mov and mov or cmp cmc and mov sub push and mov clc not rcl sub rol sub not lea lea mov movzbw mov jmpq cmp jmpq or insb jge data16 iret (bad) mov test jnp mov jne xchg xchg iret callq movabs xchg sbb (bad) xchg add test push stos (bad) enterq mov jmp mov sub je repz pop insl lret callq (bad) or add xor xor (bad) in enterq xchg je lret pushq xchg (bad) lret push in (bad) (bad) (bad) sti out mov pop (bad) (bad) (bad) decb xor rcll (bad) jmp add add add jl (bad) rex.WRX or retq cmp xchg jne sbb sbb push (bad) jmpq mov (bad) insb jl outsb (bad) adc jmpq jns movb rex.XB xor mov sub movabs jo lods cmpsb int3 mov add std rex.WX iret rex.RXB mov jp std lahf rex xor adc jge pushfq xor cli rex.RXB rcrb jb lock push test xor rex.RX lods cwtl add (bad) lock mov sub jns rex.W (bad) (bad) (bad) cld movsb mov (bad) (bad) (bad) mov and js adc nop je out rex.RB test add add mov popfq je rex.WR rol mov js jno cmpsl (bad) ja xchg mov cmp enterq or leaveq test push sub jno cwtl (bad) cmp and adc jmpq mov test cmc cmp test jmpq jne test mov (bad) (bad) mov clc cmp add stc movzwl lea mov bt bt clc stc add clc cmc test cmp mov bt jmpq sti push je jle (bad) (bad) lahf rex.WXB mov movups xor (bad) repnz jrcxz iret hlt retq (bad) mov imul in cmp mov xchg rex.WR ds add int iret lret and sbb imul lret js cmpsb movabs (bad) (bad) pushfq mov rcrb imul fs sarb pop (bad) loop mov movabs mov jg rex.RXB sti pop (bad) rex repz sbb movabs mov cmpsl mov movabs mov add cmp xor jnp cmc cmc not stc cmp mov setno lea movsbw lea setge lea lea jmpq popq mov cli scas mov and (bad) or or pop xchg mov ss repnz pop cmp out (bad) and rex.WB sbb xor scas (bad) (bad) sbb test gs js loopne pop push out rorb adc push rclb pop push xorb roll pushfq xchg rex.WB (bad) js xor movabs rex.WRXB (bad) (bad) sti hlt xchg nop outsb ds (bad) (bad) (bad) xchg cld movabs (bad) sub nop leaveq (bad) iret fadds add add (bad) add (bad) sbb (bad) jb xor sub add and pop (bad) movabs (bad) pushq jno add (bad) (bad) out xchg mov loope mov jmp out mov test clc push jmpq clc pushq bt clc stc cmc cmp jmpq or (bad) shlb push cwtl adc xor xchg idiv mov xor or pushq xor fidivrl xor (bad) data16 retq (bad) std pushq mov cli lods cmpsl xor mov (bad) xchg pop xchg mov outsl pop pop fwait sti repz (bad) (bad) std sub (bad) (bad) decl mov roll mov lret out fwait testl xor (bad) ja (bad) sbb bswap popfq cmp sbb rex.RB push mov stos outsb movabs mov cmp fidivl stos loop and insb addr32 mov push cwtl int test adc repnz xchg rex.X jb add addr32 ja and jge rex.WRXB mov rex.R sti xor jns fcmovnbe (bad) jle ja adc jl mov pushfq in rex.R scas xchg cmc popfq movabs loop rolb fist es bsf es push scas test adc pop test sti movslq mov imul rex.WRX data16 jmpq push mov in adc push mov push stc lods mov sbb (bad) pop (bad) mov pushq mov (bad) cmp xchg pop (bad) (bad) add mov out shll enterq (bad) (bad) (bad) std fstpt (bad) add (bad) mov (bad) mov ds cmp fcmovne stc pushq es xor mulb xor sub jne stc movabs pop in fdivrp (bad) (bad) decb (bad) (bad) (bad) decl pushq rex.WR rex.WX out lea (bad) jae (bad) fdivs rex.WX ds sti sahf hlt pop loope adc jns jae pop sti cwtl rex.RXB in sbb add std mov (bad) sbb xchg fdivs mov retq sti mov mov jl rex.WRB stos gs (bad) xlat add adc cmpsl rex.RXB or out gs xlat (bad) cltd xchg rex.WXB (bad) mov rex.RXB jne hlt cltd jmp add fsts (bad) xchg adc ror or mov retq test (bad) rex.WX jl repz (bad) (bad) clc mov push movsb jno mov rex.RX add mov decb imul xchg (bad) ror stos test enterq lea or popfq mov cltd cmp nop xor cwtl rex.RXB mov int3 cmpsb clc xchg add out xchg stc push sub cwtl adc pop test out test sub rex.WRB js jrcxz mov lods cmp xchg jae add xchg cli (bad) (bad) jmpq jmpq jmpq je clc add cmc cmp jmpq mov scas (bad) cld repz add rex.WRX test xchg xor push push test cmp add rolb (bad) callq adc (bad) in sub je lret mov mov cmp or in rorb repnz add xchg mov not jge (bad) mov lahf add cmp cld mov jl (bad) (bad) (bad) std or fninit cmp pop enterq scas sbb jb nop (bad) (bad) (bad) std jae retq mov repz js add add or in rex.RX in mov rex.WR sub movsl and movslq (bad) fwait movsb orl in lahf leaveq outsl lea mov jne and mov rex.RB mov jo push or jl jge mov mov lods sti mov pop add stc cmp jmpq ja jmpq test cmp jmpq push push push rex.WB cs rex.WR rex.WR test lret stc jmpq je cmp stc stc test cmp jmpq callq stc cmc or jmpq add bt cmp jmpq jns ja jmpq cmp jns ja jmpq cmp mov fs mov sbb lret in or cmpsb adc out sub leaveq stos push (bad) enterq lods jae cmp mov mov pushq jnp js jp rex.R shll mov adc sbb add jne je xchg or xlat jmpq push scas (bad) rex.RXB and rex.W rex.WR rex.WX (bad) (bad) (bad) pop mov cltd (bad) (bad) psrad xlat fmuls (bad) (bad) (bad) (bad) (bad) fcmovnbe movsb rex.WXB xchg xchg loope (bad) rex.WB push sbb in in fild popfq (bad) sbb mov mov mov (bad) cltd mov (bad) xor repnz jmpq push (bad) cwtl cmc add movsl and in pop (bad) subb (bad) rex.XB mov or stos sbb pushq lods loopne and test mov (bad) (bad) jne pushq xchg in fistl mov movabs outsl rex.RXB mov rex.WR rex.B push mov fmull clc pushq (bad) jo (bad) sub (bad) (bad) cld xchg pop rex.WX rex.WRXB (bad) (bad) (bad) (bad) movsl push jle jbe in rex.XB imul (bad) push loop (bad) test jmpq loope (bad) xlat shr and jb xor or jmp test mov or int3 stc fcoms adc pop rex rex.WRX add rex.XB xchg gs (bad) push stos shrb out retq mov pushq xchg mov movsl pop ss sarb xchg leaveq in jp pop adc pop jmp fimul fcomps xor mov scas xchg and roll ja clc stc cmc bt imul clc add jmpq out xor or insb (bad) jno or pushq in xor (bad) jae (bad) (bad) rol (bad) (bad) idiv mov (bad) adc stos adc xchg rex.WX mov cmp jo out or adc rex.WXB mov fildll (bad) in (bad) (bad) (bad) std iret pop sub push jne cmpsb (bad) lahf add add adc (bad) fisubr cmp ss lock divb out stos leaveq addr32 (bad) (bad) fwait pop push mov cltd leaveq jle xchg xor xor mov or and cmpsl cmpsl push xchg rex.X test test movabs (bad) stos (bad) outsl ja rex.WXB imull (bad) jnp stos enterq pop sub (bad) bnd or mov xchg jns jae and movabs stos sbb negb add (bad) lods popfq movabs xor hlt lods je fisttp (bad) mov (bad) adc imul retq movsb mov adc jp loope in lahf mov and vfnmadd213ps (bad) rol sahf lods push jge imul or jge movsb callq (bad) and cmpsb fistl (bad) mov ljmp xor (bad) mull (bad) je pushq (bad) jbe scas (bad) mov sub movsl xchg sbb adcb rclb gs (bad) hlt jrcxz cmp fidivr js mov sbb fisubr xor cld or mov popfq mov movabs (bad) sbb movabs cmp scas (bad) pushq fistl pushfq jne addl mov xchg test scas je xchg push jnp mov jge scas xchg out cmp callq sub (bad) push es test (bad) rex.WXB jmp and rex.X mov outsb test rex.B fs pushq pop (bad) mov (bad) hlt xchg test sub xor lret cmc rex.XB jl test rex.RXB mov mulb loopne enterq scas sbb sti push push cmp add fsubrp mov mov pop fmuls add xchg fcoms rcrl iret and je mov cmp sahf push mov push (bad) sbb movabs mov and fiadd js enterq fistl (bad) loope push rex.X or jge cwtl jmpq adc repz frstpm(287 rex.WRB rex.X (bad) (bad) cld es pop loop (bad) (bad) (bad) dec (bad) mov (bad) imul xchg mov jne popfq push mov or pushfq xchg pushfq xlat push pop hlt stos xor cmp add add jl jle mov or push cmp cmp sbb pushq (bad) sti (bad) outsb gs int sub fidiv lods lret imul cmpsb mov rex.RXB or sub mov mov (bad) jmpq cmp test clc movzwl inc mov test clc stc stc add clc test test mov cmc cmc bt cmp test jp je bt jmpq cmp out (bad) xchg rex.XB (bad) mov add nop push mov out pushfq rex.WXB movabs rex sti callq (bad) or jb jo out sbb repnz lock mulb adc out add (bad) pop add xchg mov stc movsb cmpxchg8b (bad) iret notb cmp je in and (bad) test lock jae add pop (bad) (bad) (bad) incb orl rex.WX (bad) mov (bad) roll mov xor ljmp xchg leaveq mov leaveq outsb clc scas ds (bad) adc sbb and rex.R xor xor sbb adc cmpsb mov mov icebp enterq std and jmpq jmpq jmpq (bad) adc je loope push rex.WB (bad) popfq sbb add (bad) (bad) mov (bad) add in cwtl (bad) (bad) iret jbe lock cmp sub mul sub xchg or (bad) (bad) xor pop push loop jrcxz pop cli int (bad) adc movb add xlat jl movsb adc movabs mov pop (bad) lret sub rex.WX fiaddl push mov rex.RX adc (bad) (bad) (bad) (bad) std cmc lea rolb add add mov ss movsl rol (bad) mov xor jge loopne jnp cld (bad) cmp and push retq hlt push jge int3 insb repz adc lock add stc sub stc cmp jnp ja stc clc jge imul cmc add jmpq retq rex.B movsb push pop xchg jbe (bad) movsl (bad) outsl pop gs cwtl (bad) in jmpq movsb or ds fstp (bad) xor mov (bad) push (bad) (bad) test cltd mov (bad) (bad) pop adc loope out (bad) mov test mov (bad) rex.WRB stc adc sub (bad) fisttpl sub movabs cs movabs mov loopne jnp mov mov in in (bad) (bad) (bad) cld bswap or (bad) (bad) (bad) (bad) and push pushfq or test mov rex.WR add shrl nop insb adc (bad) mov mov rex.WRXB rex.X ja (bad) out ss (bad) add (bad) rclb test movsb lret int3 lods cmpxchg pop mov xchg scas (bad) retq cmpsl stos xchg mov (bad) (bad) (bad) jmpq std or mov icebp (bad) push pop (bad) sbb fs jns pushfq (bad) push rex.WRB enterq sub xor gs rex.X adc xor rex.WRXB jp in xchg mov mov jrcxz clc bt test jmpq callq shr bsf movsbw add add mov cmp bt stc stc cmpb jmpq stc push (bad) shll mov push or cmpsb cmpl push jbe andl mov (bad) mov repnz xor mov or out std mov push icebp out (bad) jb fcoms mov shll rcrb cmp mov pushfq mov and push (bad) (bad) cmc (bad) movslq test sub sahf push stos (bad) or (bad) enterq pop js int (bad) (bad) (bad) cld jle retq (bad) (bad) (bad) (bad) (bad) (bad) xchg sub push movsb lahf je or and mov (bad) lahf iret mov add rex.WR jno (bad) cld sub (bad) mov (bad) or loopne or leaveq push or pushq jae jae mov xchg cmpb (bad) jno movslq sbb cmp (bad) mov mov jmpq ja stc bt sub jmpq jmpq jae test test sub jmpq jmpq jmpq test cmpb je jne stc movabs test xor rcr not mov clc add not setnp add add mov clc bt bt test jmpq callq or cmp jmpq callq cmp add shrd mov cmp clc bt cmpb jmpq cmp test bt test xor stc repnz jmpq pushq jmpq jmpq jp rex.WX es jg mov mov lcall mov jge adc clc sti in fsubrl (bad) std push movabs and mull addr32 (bad) fwait shlb sub rex.RX rex.WX es repnz fwait mov add sbb insl rex (bad) (bad) xor icebp repnz rex.X test cmp (bad) add hlt adc scas or adc sbb xor (bad) (bad) cld and (bad) (bad) (bad) xor jbe scas xor (bad) (bad) pushq pushq test movabs rex.B jnp jge (bad) and pop cmp and in mov cmp sbbl push icebp iret insb xlat test xchg xchg lret cmp mov mov bt add bt movzwl not shr mov clc stc add cmp stc bt stc mov cmp jmpq jmpq pop xchg xchg not pop movabs pop jmpq cmp jmpq je clc test clc sub cmc cmp jmpq je stc sbb rcl clc add mov movzbl not xor mov jmpq mov jmpq clc cmp add jmpq callq jmpq jl (bad) shrb iret mov pop (bad) jae cwtl rex.B and lret fisubrl lods lret rex.RXB jns cs push adc movabs pop imul pop rex.B movslq or xor (bad) (bad) (bad) movabs rex.XB outsl (bad) sbb fistl add xor scas mov int push add rcrl (bad) movabs (bad) (bad) (bad) cld xchg lock (bad) (bad) cmpsb icebp cmp rex.RX jle (bad) (bad) fsubs add in fstl insb gs (bad) hlt and fucomip lods xor sbb adc (bad) push fisttpll test clc push (bad) pop retq scas lods (bad) adc popfq xor fnstenv pop test imul xchg shr sub add pop mov fisttpll rex.WRB lock bsr mov cmc cmc cmp cmp jmpq cmp xor push jp sbb mov nop nop rex.WX es (bad) (bad) push negl and or jrcxz bts (bad) psrad sbb fsubl lea mov or jrcxz movabs fwait incl rex.X adc mov ss clc or imul (bad) pushq retq lret pop (bad) (bad) (bad) (bad) (bad) (bad) cmp rex.RXB adc cmp push fmuls lret fldl fnstenv ficom jne and fnstenv sbb xchg rex.WRX (bad) (bad) movabs movabs insb int3 movabs mov mov stc cmc bt or jmpq callq jg adc jno callq jmpq ja and dec add sub btr add sub mov add mov test repnz jmpq jne stc test add clc bt cmc stc add jmpq callq stc neg add (bad) repz mov clc cmc cmc cmpb jmpq add cmp clc cmp cmp jmpq jmpq not lea jmpq jb clc jmpq movb test test jmpq cmp jmpq jmpq mov cmc bt sub cmc jmpq add rex.RXB gs outsl fs gs outsb fs add push sbb and jno xlat out adc movabs and (bad) mov sub ss and repnz mov adc mov or (bad) fdivs mov xchg addl (bad) incb adc out test (bad) jb add (bad) cld jmpq (bad) (bad) (bad) (bad) cld cmp mov movslq jnp mov mov (bad) shlb lea pushq xlat loopne sub (bad) (bad) hlt or jae popfq add add cmp lahf and (bad) jo adc nop imull mov rex.RXB (bad) jno (bad) mov jae rcll mov out sbb in out pop out movslq movabs cwtl je test test stc clc cmp jl jne stc cmc add jmpq jne je rex.W negb sar inc mov rol sub rol mov bt sub cmp jmpq jb jmpq cmc clc test jmpq cmp jmpq jb test test cmp jmpq clc bt cmp or jmpq bt sub bts dec shld add bswap lea movzbw mov jmpq jb cmc cmp clc jmpq mov repz jl cs (bad) std jrcxz (bad) (bad) (bad) mov ds stos and insl lret je xchg iret int jnp adc (bad) notl mov sub mov mov cmp ss sub repnz mov insb sbb fwait or mov mov add nop xchg int3 (bad) pushq push (bad) fxch xlat (bad) and sbb (bad) (bad) sti out sbb (bad) decb jmp push (bad) add add or xlat jns mov jmpq rex.XB repnz test rolb (bad) xchg rex.W mov imul mov imulb cwtl xchg testb rex.WRB cmpb jmpq jmpq callq clc cmc test clc or jmpq stc cmp jmpq fadds rex.WRX in movzwl out mov in (bad) rex.XB cmp loopne cmp mov stc cli mov test js (bad) in in xchg enterq push (bad) pop mov imull rex.WR or test insl (bad) rex.R cmp jne (bad) (bad) sub clc pop rex.RXB jmpq stos xor push sub (bad) (bad) decb (bad) (bad) (bad) (bad) out cli loope add jmpq sarl and jmp (bad) ja jns pop (bad) mov (bad) jnp test iret cmc andl xchg push mov rex.WB rex.X not jp xor shr rex.R fistpll repz fiadd push (bad) mov pop rex.XB mov (bad) lea (bad) sbb pop push imul (bad) xchg movabs push out add movabs adc adc pop jo jmp rex.WR rex.X pop popfq mov (bad) popfq rex.WXB adc iret imul (bad) sub sbb sub int3 iret adc imul ficomp (bad) movsl sub or mov mov jle sbb xor xchg cmp (bad) (bad) decb fbstp sub movslq xchg sub jns (bad) (bad) fcoml scas sbb xor out mov rex.WRXB cmp movsl adc (bad) fwait callq mov cmp jl or (bad) mov out callq adc xor shll shl addr32 js add insb jp (bad) lret cmc movslq imul xor or sub push (bad) push cmp adc (bad) rex.WRX cmpsl add and jno je rex.WRX xchg enterq insb adc mov (bad) or mov fistpl xchg lret (bad) rcrb test roll callq and cmp mov ja xor scas rclb roll push out jge push (bad) mov cld xor fdivrl (bad) (bad) (bad) incb movabs (bad) sub rex.WR rex.B cwtl idivb sbb popfq std sub (bad) callq (bad) jae pop (bad) movslq mov add mov lcall out mov clc movabs rex.X (bad) mov sbb add rex.WXB add mov mov retq std mov cmc cmc bt clc ror cmc cmp cmc neg cmp bt sub test test cmp not bt stc cmp stc neg jmpq cmc sub jmpq insb adc sbb jbe sbb (bad) (bad) rex.WX stos push (bad) shl xlat retq mov ds popfq (bad) mov insb adc mov leaveq movabs rcrb cs iret jmpq sub data16 and std lahf cli lret and add movslq add pop xchg mov cwtl xchg (bad) (bad) (bad) std (bad) std iret jmpq add rex.W sbb movabs rex.RXB (bad) ficoml xchg (bad) add sarb callq xor add lods mov clc mov (bad) scas mov jmpq jmpq stc cmc cmp jmpq xor fwait (bad) mov lods rex.B mov cmp push ficom int or scas sbb sahf push es jle mov imul cmp in jno jb cmp cmp mov adc rol add (bad) int3 add (bad) add loop cld cld push xor add cmc in iret cmc jmpq xor or shl mov addr32 imul leaveq cmp (bad) out push or clc (bad) (bad) (bad) sti outsb fwait mov cltd (bad) (bad) (bad) std sbbl lret xchg (bad) mov pop cld iret repnz cmc (bad) sar (bad) jmpq notb xor out shll lods test out mov retq fsubp xchg (bad) adc (bad) sbb mov xor pushq xchg add cwtl int sub adc mov add test add je bt stc test test sub bt cmp jmpq jae xor or mov stc mov btr or movzbw inc mov jmpq je cmp jmpq jmpq jmpq push fiadd sarb sub sub lret or mov adc fisubrl mov (bad) imul cli xor jb add popfq test rol jmpq orl clc push loope nop loopne psubq mov lahf mov pop mov scas test (bad) cwtl sbb sti jno (bad) (bad) in (bad) (bad) (bad) std test xor repz callq (bad) mov cmp push push or out jo (bad) movsb (bad) lea adc adc (bad) xchg mov pop repnz or mov incl fucom sbb xorb js imul jg or xor (bad) rex.RB cmp insb (bad) rex.RB add rex.WB iret retq cli stos mov (bad) push in adc imul scas jne mov add notb sbb rex.W cs mov rex.WX mov sub outsb sti push (bad) mov add out (bad) sub cld rex.RB insl (bad) jb mov rex.RB or movslq xchg push xor and stos jmp (bad) (bad) (bad) std rex.WX iret (bad) (bad) (bad) lcall fsubrs sbb (bad) (bad) jo imull fldlg2 (bad) test retq mov sbb mov push push (bad) rex.R data16 jne (bad) insl add mov add add add add jge roll movslq xchg mov xor pop xlat insw leaveq cltd mov fmull jge (bad) (bad) roll push jbe outsl rex mov and mov (bad) lahf xor (bad) jo ja cmp sub or rcl bsf add jmpq jb retq jmpq (bad) lret cmpsb push test rex.WB jmp faddp xchg xchg cld cmpb loope rorl adc (bad) movsb mov (bad) loopne (bad) sub lcall (bad) fnop adc je sub jo enterq mov rex.RX sahf (bad) add (bad) lret rex.WX callq stos mov pop loopne cmc iret in rex.WR pop push jae pushq fdivrp pushq rex.WRB rex.WRXB (bad) (bad) std pop test mov ljmp in rex.RX rex.W and rex.WRX fucomp rex mov (bad) lea popfq scas xor cwtl and mov (bad) mov stos mov lret test add add jb push cli sbb (bad) lret mov cmp (bad) pop pop rex.R cld loopne loopne (bad) sub jnp insb jp stos loopne adc jnp cmpsb mov insl je pop adc rex.WB push mov or sbb add clc test cmpb jmpq ja xor mov shl add shr ror jmpq je xchg not xchg lea not movzwl bswap jmpq xchg jb and sarb clc fadds (bad) iret icebp int3 test sub pop jg shrl lret or repz pushq sub rex.WRB loopne loope int3 mov (bad) mov and test in (bad) (bad) (bad) std (bad) xchg mov and (bad) jrcxz sub fs mov test gs mov in and (bad) (bad) (bad) jmpq (bad) cltd mov (bad) cmp adc adc mov stos add add pop and cmc xorb jno (bad) es fildll cmp mov add add (bad) outsl lret notl (bad) nop std leaveq pop sbb jno,pt out in mov adc pushq insb psubw retq repnz je cmc bt stc add jmpq jmpq bt clc test cmc sub jmpq sbb mov stc test jmpq (bad) out mov cmp (bad) (bad) out jp and jmpq imul lret popfq mov (bad) int3 lock mov mov js push mov xor (bad) and cwtl jmpq jno jbe sbbl (bad) cltd in xchg or lods lret cmpsl jl pushq (bad) cli (bad) stos and frstor callq fsubs xchg mov int3 std lea mov mov sub (bad) callq test scas es xor (bad) (bad) cld movsl and (bad) (bad) (bad) (bad) mov jg test scas (bad) push rex.XB rcrb lret popq add add jne (bad) mov (bad) out xchg shll jne rex.WB in int callq push hlt (bad) (bad) sub cs (bad) fdivl stc fwait (bad) adc pop sarl adcb mov lret rex.W push jmpq je jmpq mov movsbw pop retq cmp bt test jmpq cmc jmpq jb cmc cmp cmp jmpq jmpq adc push inc mov bsr lea adc bt sub movsbl lea jmpq jne bsf shld cmp or sub cmc test rcr mov and inc clc add rcl not jmpq hlt rorb (bad) rex.WRB rex.WR sbb xchg pop push mov mov mov or xchg pop (bad) (bad) jge xchg jae sbb out sbb mov add imul mov or or jp outsb leaveq jle (bad) fmull cmp enterq retq (bad) mov sub sub and in stos icebp movsb cld pop rex.R imul rcll (bad) (bad) (bad) (bad) (bad) divl test add clc rex.WRXB push jl out iret add add ja pop (bad) xchg mov xorl mov sub (bad) fwait mul mov popfq mov fisttpll rex.WR or pushq pushq jne mov int ja cmp mov rex.WR in shlb rex.XB sti leaveq out add and (bad) xchg jrcxz xchg fmuls rcr (bad) cmc fisttpl rcll (bad) rcl retq hlt (bad) or and cld fisub sub add (bad) cltd jo pop cmp push sarl lods es (bad) movabs rex.WRB or or rex.W or outsb fsubrl xor lods (bad) subl (bad) sti out mov mov mov cmp fdivs pop je mov stc jmp add add jl (bad) (bad) subb loope je (bad) lret rex.WRX mov sbb cmp movabs jno and mov ljmp adc adc pop and int3 (bad) out int scas pushfq mov push (bad) cli mov fmuls lods test (bad) (bad) sbb lret and lea add mov and push rex.XB sbb push mov je sub int3 lods stos rex.WR adc sub test fbld ja rex.R js xor cwtl add and sub (bad) adc mov stos and xchg (bad) (bad) (bad) sti xchg cli int3 es (bad) (bad) (bad) jg popfq frndint addr32 cli outsb (bad) xchg movsl pop or add add adc fdivrp or popq jns adc sub stc mov movabs and jns jp out rex rex.R rex.WR add lret scas or movabs shrl shl ja jnp rolb hlt clc faddp scas bndstx sub or jne or jns out cmp cmp loopl jae sbb rex.WXB cwtl push push xchg nop sti xchg add fistpll xchg cwtl mov adc push add nopl rex.WX retq movabs repz mov xchg sbb fsts pushfq mov sbb clc sarl out push and adc cmp test xchg lea mov lea pop jmpq test test pushq bt clc cmp jmpq cmp movb test clc stc test jmpq or jmpq jmpq mov jmpq jmpq bt stc ror stc sub clc cmp test mov stc test bt cmc add stc test jmpq clc clc sub cmc jmpq je bts push btc rol bswap sbb mov shld bsr dec sub sete not setb lea lea jmpq callq cmp jo stc stc or jmpq test jmpq stc and mov shl add ror xor ror dec mov clc jmpq mov js callq jmpq rep movsbw pop jmpq je bts clc add btc mov test test jmpq jmpq (bad) cli loopne rex.WX or pop jge subb (bad) pop test sub push (bad) out loope cwtl push cmp mov adc lods mov out fisttpl xchg xor (bad) add mov mov mov pushq rex.WX scas lods sbb pop repz (bad) (bad) incb stc cmp sub and loope pop rex.RB (bad) (bad) std callq add add rex.RXB mov sub mull rcll pop mov xchg or test mov lock add mov (bad) (bad) mov cwtl (bad) xor jo xor mov sti insl mov rcrl jl je ror bsf bsf btc xor movsbw movsbl clc mov xadd clc mov jmpq fisubrl rorl lock mov movabs or rex.B push (bad) pop test (bad) lock rex.R lret stos lret rex.WR int sub fwait jnp (bad) pop imul sbbb outsb imul retq insb add int mov (bad) xor (bad) (bad) rex.WXB mov xor (bad) (bad) sti mov add (bad) (bad) (bad) std pushfq adc movabs int mov sahf cltd (bad) std (bad) (bad) (bad) (bad) push rex.X push (bad) lods adc movslq sti (bad) pop cmp es jl (bad) ds out pop lret mov fimul xchg movsl mov xchg cmpb (bad) cltd mov test cmp or mov (bad) hlt mov or lret add addl adc cmc xor jmpq jmpq add rex.RB je jb movslq jae test jmpq push or jno (bad) xor jrcxz bswap jmpq cmp mov cmpsb cmp ja add out mov cwtl sub or je movslq mov cmpsb rol test (bad) retq rex.WRB sbb in adc std test (bad) rex.WR (bad) stos scas mov enterq jno xchg rex.WXB xchg out lea jp jo out rolb cwtl mov loopne adc xchg scas (bad) test cmc bt repnz jmpq movabs mov sbb adc scas in fadds lock cmpsb (bad) pop jl xor (bad) rex.W jne xchg (bad) sarb (bad) xor xor nop outsb jns mov sbb sbb in stc jae or hlt shrl cltd rex.WRXB cmp pop add rex.WXB (bad) loope (bad) rex.WB rex.W data16 retq pop (bad) and or add (bad) rex.WRX shlb or xchg xor sarl pf2id mov rex.WRX int xchg (bad) adc in cld mov jg test test mov (bad) xor jmp mov cmp jo (bad) mull ror fnsave (bad) rex.WB (bad) out (bad) movabs and mov (bad) pop (bad) enterq ja sbb (bad) mov (bad) sub xchg jge rex.RXB (bad) xor outsb fidivrl popfq (bad) rex.WRXB out push (bad) int3 sbb sbb rex.RXB push (bad) nop sub (bad) movslq int adc lahf xchg xorl xchg jle movabs rex.WRX jrcxz stc ror (bad) mov mov xor rex.X pop mov insb cmp sbb push push (bad) (bad) (bad) decb (bad) in mov or scas sahf rex.WR movabs xchg (bad) js mov xor rex.WRXB sarb sbb rex.WX or xchg mov insl outsl enterq mov (bad) cmc sub jmpq jmpq rex.B rex.R push xor cs insb add test scas add cmc cmp cmc movb cmc test jmpq jnp jae jmpq jmpq callq bts bts bt lea add sub and test mov bt cmpb jmpq jmpq jmpq jne lea not bsf sbb xor rcr stc inc btc mov rol rcr cmc inc add jmpq jno callq mov bsf sub bts add btr bswap bt sar mov stc cmp cmc cmpb jmpq xchg in outsb pushq idivb jno lahf rex.RXB mov cmp cli mov sbb and rex.WR jo mov (bad) jmpq mov sub enterq imul and imul int3 rex.B cld mov add cwtl xor or test movabs (bad) (bad) (bad) (bad) (bad) (bad) cmp (bad) pop or jge jae test pop xchg jo rcr add cmp (bad) cmp je stos fisubrl gs push rex.WB stos movsb cs fildl (bad) push gs sbb xor add add add sbb add (bad) adc or jrcxz add (bad) lret mov pushq in (bad) jae mov mov imul fs lret cmp mov fadds (bad) jae jmpq jmpq repz imul movabs rex.R mov rex.RB addl (bad) sarb sbb mov push cmp jmpq int3 mov (bad) mov or cmp rex.RX rex mov pushfq in (bad) push test adc fmuls mov push callq movsl and (bad) (bad) (bad) std or mov jo (bad) jo and (bad) mov jno sar (bad) (bad) std and xor rex.WR rex.WRX cmpsb adc add add jns jmpq (bad) sub lods mov rex.WX js rex.WRXB rex.R std pop (bad) or jo (bad) sbb movsl cmp test xor jno pushfq rex.B es fmuls pushq mov jmp jrcxz add (bad) rex.W cmpsl mov push mov fsubrs rex.X es jmpq jmpq bt bt imul cmp cmc add jmpq mov mov (bad) jmpq ds xchg (bad) pop and and sub rex.RB fs cli pushfq addr32 sbb adc (bad) mov fisttpll (bad) xchg (bad) cmp in (bad) cmp rolb xor (bad) popq mov fsts sbb sub popfq fnstsw (bad) xor jbe xor or jb push mov jmpq (bad) (bad) cld xor sub incb test in xor popfq rcll (bad) inc (bad) xor jns pop out retq and cmp mov cmp jg int cmp cmp movabs add adc enterq mov adc imul xchg jns fs rex.WR sbb xchg stc scas sbb hlt adc (bad) cmpsl (bad) (bad) cwtl mov mov mov jl sahf (bad) pop mov (bad) push (bad) add imul xchg xchg sbb jge jae xor sahf (bad) (bad) (bad) std (bad) leaveq rorl cmp in int add add adc ja insb (bad) adc (bad) jne insl int3 mov shrb scas movabs mov pop fidivr je rex.R sbb xchg xor or fstpt jl mov sub (bad) clc subl fdivrl jb xchg (bad) rex.WRB lea fimul lret scas jl stos test nop cmp jle cltd popfq lods add iret stos mov sbb testl cmp or std subb stos xchg mov (bad) adc jrcxz jnp cmp fdivrs retq movsb cmp (bad) mov (bad) (bad) cmp jmp xor jg xor in imul xchg cltd mov insl imul out pop cmc (bad) (bad) xor jle pop sti rex (bad) fldl xchg pushfq mov xchg mov sbb cmp pushq bt stc test bt cmp jmpq jb cmc jmpq push not sets lods stc jmpq (bad) or and ja jp clc hlt cwtl mov (bad) enterq imul insl ds rex.RXB lret test fidiv (bad) callq insb retq mov (bad) rex.RX mov xor sbb sahf mov fistl (bad) and add stc popfq rex.RXB push and mov jmp mov pop cwtl rex.XB icebp (bad) (bad) and (bad) xchg in or retq mov (bad) cld mov mov loopne (bad) (bad) (bad) movabs adc (bad) lock fcoms add and (bad) xor xchg (bad) pushfq mov add add push mov xchg pop ds pop leaveq rex.WR test jge or sub andl jno adc mov rcll add jmpq bt sub jle rep movsbw movsbw pop jmpq jmpq in imul cmpsl js fwait mov or repnz test add jp test jle sub es movslq xlat bts sahf std push cmp pop push jg shrb pop mull (bad) cmp xchg je callq fistp jge retq push jg cld pop cmpsl (bad) sti pushfq (bad) pop mov xor push pop icebp rex.WRB test cmp hlt xor jb fwait fwait add mov fmull rex.WXB fistl fwait xor repz bts sar lea movsbl mov clc cmp cmc cmpb jmpq lea mov setns movzbl lea setp mov jmpq jbe cld stc jmp rex.RB push shrl xchg rex.RB gs (bad) cmpsb or push pop clc lea fs mov adc mov and (bad) sbb xchg xchg add jmp loopne retq retq test xorq movabs movabs andl add rex.RXB jnp int3 test xchg rex.XB ds rex.B fwait (bad) (bad) (bad) cld mov (bad) (bad) (bad) popfq or (bad) xchg mov lahf rex pushq test mov (bad) imulb pop imul pop push mov pop (bad) repz mov insl pop add and mov pop xchg (bad) in (bad) (bad) int (bad) rex.WRX rex.R rex.WRX fs rorl (bad) cmp sub rex.WRB rex.XB roll mov ficomp stos mov push cmp lret clc (bad) lods jg mov mov lret or addl imull clc out sbb cmp in rex.WRXB xor xchg adc xor cmpsl (bad) (bad) (bad) std pushfq test loope jnp (bad) imul push testl in rex.B rex.WX (bad) roll (bad) (bad) std pop rol or (bad) (bad) (bad) mov jl (bad) xchg gs lahf xor (bad) xor lods adc xchg sbb adc rex.XB xchg mov cs out mov in sbb (bad) fs (bad) mov imul sub rex.XB repnz negb rolb xchg in (bad) jmpq xchg cmp repz mov push (bad) cld push add mov pushq xor fdivr cli push (bad) fwait imul add sarl sub mov (bad) push add andb int3 ds jp sub xor mov rex.RX xchg mov xchg sbb xor xchg outsl out sbb (bad) (bad) cld sub rcrb (bad) (bad) (bad) (bad) (bad) pop movsb push icebp movsl xchg mov sub retq xchg stos mov sbb (bad) (bad) (bad) mov jmp leaveq data16 mov pop data16 fs mov jo mov jno fcompl xchg xchg insb int3 ja je pop (bad) and cmp or (bad) (bad) js mov test sub mov test add clc stc sub cmp stc cmp jmpq sub jmpq jmpq callq jmpq bt clc cmp clc xor cmc cmc cmp cmc not cmc bt cmp cmp jmpq rex.WRX rex.RB push xor cs insb add test adc add or in stc add jmpq mov rcll jrcxz adc (bad) (bad) cmc stos int lods repz rex.WRB ds shlb (bad) cmp gs sbbl sub mov out div mov push test lods rex.B retq nop adc (bad) (bad) adc pop out mov sub fistpl data16 and jae sbb or mov xchg es (bad) (bad) cld xlat js imul (bad) (bad) je in adc rex.RB (bad) lahf jp cmp mov sub add add in and pop (bad) lods enterq rex.RXB lods mov cmpsb rex.W xchg in rex.WX xchg lret (bad) rex.RX scas xorl mov cmp mov loopne adc movsb xchg adc outsl and mov cmpl mov stos flds (bad) pop and (bad) fimul mov out xchg xor loopne (bad) mov xor loope (bad) jmp (bad) movabs lret jmp (bad) nop rex.WR mov sub orl xor movl movabs cmpsb (bad) cmpsl nop (bad) (bad) (bad) cld pop icebp push (bad) (bad) (bad) (bad) imul mov cmp xchg ljmp push mov cmp jmp xor in jae sbb add add jbe mov mov cmc mov add sysenter pushq test xchg clc adc sbb (bad) mov cmc mov loop sahf add mov rex.WRX scas rex.XB pcmpgtb roll mov (bad) fiaddl jno sub rex.X adc jrcxz fsubs rex.WRX rex.WRXB jnp (bad) adc (bad) jl movslq xchg sbb jno (bad) (bad) rex.RX lods lods sbb lahf jmpq std movabs (bad) sub insl shll xchg retq mov popfq (bad) out (bad) (bad) cld (bad) sub (bad) mov (bad) (bad) callq sub mov xchg (bad) and (bad) rex.RX (bad) rcrl mov rex pushq insb add add xor leaveq mov rex.RX jrcxz insl (bad) out jb jne and and popq pop int pop out lret push xor (bad) mov jbe xor (bad) mov mov loop mov cwtl pushq jmpq lea movsbl not lea bswap jmpq fnstsw jge mov or loopne pop test mulb (bad) mov psubusb adcl adc fldt (bad) mov lock sti pop pop sub insb (bad) roll add adc movsl push clc in rex mov mov xor (bad) sbb rex.XB cmpsl jrcxz and (bad) (bad) cld (bad) (bad) int3 push (bad) (bad) (bad) (bad) (bad) lods add mov pop push retq test pushfq out xchg shll rex.WRB (bad) hlt jno in fildll out test pop or push jmp jmp sbb add add ja mov lret pop or sub out fcoml retq mov (bad) fs cli outsb adc mov xor rex.WRX loopne rex (bad) jb imul adc bt bt add bt cmc mov test mov clc cmp jmpq bt shr bt cmp clc jmpq pushq jmpq jae jmpq jmpq je cmp test jmpq jmpq jne or mov lea shl mov bt cmc cmp sub jmpq add push gs movslq imul imul movslq test add not dec sbb push bt bts mov seto shl sub lea movzbw setbe movsbl lea jmpq je clc bt add stc bt cmp jmpq mov or (bad) push rsqrtps sbbl nop rex.WB (bad) fld cmc (bad) fild movabs rex.WX sub stos in (bad) adc (bad) ss mov mov movabs in nop loop lods sti outsl jmp nop adc mov mov stc ja sahf sbb mov jbe test lahf movabs sub rex jle push fist (bad) xor movabs (bad) std cmc lea incb add add mov sarl es rex.XB add cld xchg movabs sbb es rex.R rex.WRXB repnz shlb sbbb test add bt jmpq jb bt cmp test stc cmp jmpq jmpq jmpq ja or (bad) lock sub neg add data16 testl (bad) cmc mov test bt bt clc repnz jmpq jae cmp stc bt xor jmpq (bad) stos (bad) adc jle repnz push stos addr32 pushfq (bad) and rex.WRX xorl xchg rex.RB rex.RXB sbb jl iret imul rcll (bad) adc outsl rex.WB sbbl rex.W pop (bad) mov fstp mov (bad) cld mov cmp (bad) inc xor jne leaveq mov sbb rex.WB ja (bad) or cmp (bad) push push add jns cmpxchg or pushfq mov data16 (bad) data16 add add xchg sbb (bad) cmpsl hlt pop xchg and stc pop (bad) (bad) out rex.WX insl je and movabs pop out retq ljmp rcl in nop std fisttpl mov out sub sarb (bad) fstpt loopne (bad) repnz or xor or xchg std (bad) mov mov js pop jne movslq rex.WX repz xchg xor stos mov adc xchg pushq (bad) (bad) (bad) mov sbb (bad) pop push (bad) nop lods jnp insb (bad) pushw adc lock ds callq mov mov or add es outsl sub (bad) or scas scas and mov rex push xchg loope (bad) (bad) cld in out sub (bad) clc loop mov in push lea cmp xor add js xchg xchg rex.WRX stos (bad) mov (bad) in (bad) jbe xor rex.WX ds cwtl add leaveq cmpsb mov (bad) mov rex.WR cs or mov mov pop std mov movabs adc adc (bad) or jnp add bt cmp cmp jmpq callq jmpq orb mov or (bad) jle (bad) (bad) mov and gs cwtl fcmovb xchg adc stos fsts leaveq fwait sbb cs mov add fstpt pushq mov jmp sbb loope xor (bad) cltd test std imull (bad) jle jo (bad) lahf pushq mov mov (bad) lea movabs xorl sub movabs and fwait (bad) (bad) (bad) (bad) imul (bad) movsl js in (bad) (bad) (bad) (bad) jmp (bad) icebp hlt mov fcoms (bad) mov loop add pop pushq xor lret adc sbb out rex.R rex.WRXB jb jnp mov xlat cmc cwtl test cs mov js sahf mov xor adc jp jns jne bt jmpq cmp cmc xor jmpq (bad) clc testl (bad) (bad) stos (bad) test imul sbb push sbb out lods sbb mov adc sahf rex.RB std movl movl lods xor imul sbb rex.X (bad) (bad) std cmpsb out rex (bad) (bad) (bad) js sub sbb jno adc (bad) movslq cmpsb jmp jmpq popfq mov add pushq xchg sub adc add xor cltd rex.WX gs mov rex.WRX rex in insl popfq (bad) (bad) js lock mov (bad) insl movsl lea push cltd mov cmp cs or (bad) xchg (bad) fsubs rex.W mov sub (bad) fdivs pop psubsw (bad) (bad) push test mov jmpq movl neg (bad) icebp movsbq mov stc cmc cmp jmpq paddsw add addr32 cmc insb rex.WR mov test rex.RX insb test callq jp cmp jle test sbb out fmulp repnz rex.RX sub rorb callq and mov (bad) imul loope outsb xchg or subl (bad) cmp loop rex.XB push lods ja icebp (bad) (bad) (bad) cld cmp (bad) (bad) (bad) (bad) push sbb scas adc enterq mov (bad) lods or out lahf push push cltd pushfq and xor (bad) fdivrl xchg lret (bad) (bad) (bad) ljmp push rex.WRB xchg xchg mov mov pop or cmp add mov popfq stos mov (bad) cmp shl mov jl (bad) fidivr mov test sahf xchg (bad) add mov mov repnz rex.RX stos ficoml and sub mov xlat cmpsl adc ja andb ja in mov pop rex.X mov cmp nop nop hlt jp hlt jmpq (bad) adc jg mov pop mov xor add lret jle or mov movslq fbld insl movslq rex.WB rcrl push ss flds pushfq mov (bad) jbe out (bad) data16 popfq (bad) (bad) (bad) sti cld sbb (bad) (bad) decb sbb rex.RXB cli imul (bad) decl rex.RXB sbb cmp mov rex.WRXB sub outsb rex.W mov je movabs (bad) mov push sbb div lahf (bad) jne movabs insl (bad) adc adc cs pop mov in and sub (bad) (bad) (bad) jo lea mov pop repz pop (bad) and add xchg and insl or add cwtl rex.WX add scas jo fcmovnu int (bad) jrcxz sub repz sbb sbb (bad) cmpsb adc hlt shll imul add rex.RX cmp stc lahf int3 (bad) push add cltd jo ds test (bad) mov (bad) sbb (bad) (bad) sti (bad) jb scas add (bad) (bad) std loope rex.WR and lea xor cmp cwtl lahf rex.RB (bad) (bad) lcall retq (bad) imul fstpt jg pushfq mov (bad) xchg mov fstpl lret xchg jle pop adc or or and loop repnz (bad) push (bad) add ss sub in mov add rcr and test rol mov sub sbb mov jmpq mov (bad) jb ror xchg lret xlat or rcll xor (bad) mov pushfq xchg rex.RX pushq pop or or add (bad) cmpsb lret sub xor (bad) xor and sub out mov sbb pop mov jle movsb cli cmp (bad) rex.RB cmp mov pushq sub push mov in (bad) (bad) (bad) decb (bad) (bad) (bad) decl cmp pushfq loope imull and mov pushq mov loope pop (bad) push pushq (bad) add jrcxz or rex.WRX jno fsubrs data16 rex.WRB and lock insb retq or lea lret jmp push sbb jrcxz and mov in or pushq add sbb mov xchg sub mov ffreep rorb mov jp pushfq sub (bad) in retq (bad) mov out jp imul out shlb (bad) xchg mov add subb stos cmovb mov sti movabs scas adc (bad) sahf (bad) cmp out (bad) (bad) ds imul mov js xchg jo cmp and movabs (bad) add sahf rex.WR cmp (bad) xchg test xchg test mov pushq add and (bad) and sub loope mov xchg (bad) (bad) (bad) cld movabs mov (bad) jle adc cmpsl xlat or jl insb loop (bad) mov cmp cs (bad) mov fs (bad) (bad) sbb adc and (bad) cmpsb cmc adc in int imul nop mov xor push adcl mov add scas sbb shr (bad) rex jmpq cwtl movsb sbb (bad) (bad) retq insb rex.WX enterq mov mov (bad) jmpq mov xchg lock test mov lea pushfq imul sub (bad) scas xchg or mov jge pop and mov imul push rex.WB popfq loop rex.WB pushq sbb (bad) je (bad) (bad) mov sbb mov (bad) cld mov gs (bad) (bad) inc xchg rex.X sub xchg lret in xchg rex.RX add rex.RXB in jmpq lock lods cwtl shr sarb in sbb (bad) nop clc (bad) push or mov mov outsl pop cli out mov mov rex.WR mov lock (bad) cmp add je outsl fs gs jae rex.WRX insl add (bad) fmull push rex.X leaveq sbb movsb push icebp (bad) cmp or mov cmpsb test rex.B lret (bad) mov (bad) (bad) sbb adc mov add xor cmp mov sub int and (bad) mulb (bad) fistp sbb and cmp icebp jb jbe in or sar (bad) (bad) cld xor (bad) hlt mov rex.RXB add jns rex.WRX movabs (bad) rex.WRB js iret popfq jns in mov outsl add adc rex.RX (bad) (bad) jmpq in shr (bad) imul (bad) stos lods cmp outsb mov sbb xchg (bad) roll leaveq retq stos repnz and cmp rex.WRXB sub icebp test xor and sub jge mov xchg ss push add (bad) fldcw decb rex.WRXB sbb (bad) or std fwait lret in cmp rex.WB addl (bad) rcrl addr32 mov iret add jnp cs mov fidivl lahf enterq sar in subb (bad) mov lock fnstenv rex.WR callq push movslq push mov or sbb lods insl (bad) (bad) (bad) cld jnp rex.RX decb hlt popfq (bad) (bad) pop xchg cmp cld or jp fnsave cmp add add and (bad) incb sub test rorl and repz sub test in push repnz callq cli or sub rex.WRB cs cmp (bad) rex.WRXB jno adc mov repz clc clc adc pop cli and xor out and add (bad) (bad) cli nop rex.WX xchg leaveq popfq int sbb and cmp (bad) sbb rex.WX enterq xor sub pop (bad) cltd rex.WXB add sub imul push or pop pop and fistpll popfq xchg int3 in clc movsl mov test jle jns rex.WRB addl (bad) (bad) cld test insb rex.XB (bad) (bad) (bad) cwtl movslq stos xor jns rorl adc add add mov out int3 test jo pop sub xchg mov xchg xorl (bad) or lret in cwtl add (bad) mov mov sub mov fisttpl adc jns rex.RXB subl add movl bt mov xchg rcl or bt mov shld clc ror bsf mov test test test stc sub cmc cmp test repnz jmpq cmc stc add jmpq clc add cmc test stc cmp jmpq jne movzbw shrd setg xor movzbw not ror sar mov cmc add test stc add sbb mov cmp test jmpq jmpq bt mov bt cmp mov rcl and shrd cmp mov shl cmc cmp mov btc cmp setae setae push rcl cmp shld mov dec push bswap push ror sub dec neg push movzbq bts jmpq loope (bad) or ja (bad) (bad) push fwait rex.WB jne adc repnz fdivr pop xchg jae imul in xor sub (bad) lret jb mov outsb pop adc sub rex.WRX jge movabs mov lret mov sub pop adc cmpsb movslq popfq out (bad) (bad) insb pop rex loopne je je rex.WXB cs rex.WRB ss outsb jo std test sub push fcos (bad) (bad) std (bad) and (bad) (bad) lcall rex.RX (bad) mov or (bad) (bad) sbb stc lods data16 and pop rex.WX pop add add sbb fnstcw int3 sub test rex.XB out adc repz rex.X jb orl outsl mov xor xor data16 sbb push sub pop cmp xchg lock decl test addl rol jmpq jae rcr mov mov jmpq btc rol mov inc data16 icebp or add movabs cmc stc repnz jmpq jae shl mov inc setle btr inc mov shl add bsf sar mov test sub test repnz jmpq clc jae imul cmp stc add jmpq push incb (bad) xor xchg stc movabs push (bad) (bad) fild insb data16 mov pushq jp scas mov rex.WRB hlt mov pushfq mov xor in cmp rcrl nop sbb insl out rex.RX rex.X mov ss imul rex.WRX loopnel mov flds sbb pop (bad) pushq jns xchg cmpsb (bad) cld (bad) jl rorl repnz cmp mov cmp mov shlb ja (bad) mov or and (bad) (bad) cld sub jne mov (bad) (bad) (bad) ds rex.WXB jl movslq insl rex.WRXB es (bad) (bad) (bad) mov and movsl js idivb mov jl cmp fimul int rcrl push movabs push xor rex.RB repz rex.B add sbbb (bad) je imul outsb add jmpq callq not btc add bsf ror mov cmp cmc test cmpb jmpq jae rcr rcr mov stc sbb neg mov shld rol mov jle clc cmc cmp xor jmpq loop sub mov sbb pushq push push xor adc ss movabs push sti jrcxz movsl stc (bad) mulb mov sbb fwait (bad) xor repz addb mov (bad) mov lahf out rex.WB jmpq es rex.W rcrb jg (bad) ds (bad) pop sarl mov (bad) int (bad) rex.WRX rex.WRX iret fiaddl jo movabs add add adc lret pop add or fiaddl pop mov jb,pt cmp (bad) (bad) std cmc mov add mov rex.WB jb cmc push sub push (bad) pushq sbb pop lret enterq cltd int jmp rcll nopl sarl mov clc pushq rcr faddl lods (bad) rex cmp or rex.B push insb pop movabs imul mov mov outsl std callq jae repnz icebp pop loope scas pop (bad) icebp pushq stos decl (bad) (bad) movabs mov or lea enterq jno (bad) (bad) (bad) sti rex.WX cmpl (bad) cmp rex.R rex.WRX sarl lock retq rex.WX (bad) (bad) pushq sub xor sbb cmpsl or pop adc movabs lods mov mov cmp stos (bad) jp (bad) cwtl add fcoml adc rex.XB mov cli cs rex.WRB es jmpq cmp jmpq jmpq mov movsbw pop jmpq cltd jg add fildl sub xor mov (bad) ds imul mov jne fs fistpll sub repnz xchg cmpsl hlt in fisttpl pop adc add rex.WRX (bad) add pop (bad) mov rex.XB fistp pushq jmpq push insb push (bad) sarl (bad) mov xchg xor push cmp add add (bad) cld (bad) enterq lea lods repnz (bad) std mov (bad) rex.RX add rex.R mov or mov sub (bad) (bad) cmp jne (bad) (bad) (bad) mov mov (bad) nop mov imul (bad) (bad) test fcoms out xchg pop int3 (bad) pop add mov fnstsw and cmp sub scas leaveq negl xchg mov add pop rex.X lea xchg (bad) lock or add (bad) leaveq cmc lods and iret cld in sti in add sub insb adc (bad) (bad) push jge add pop (bad) retq pop rex.B pushq push (bad) addr32 mov mov cmp mov callq mov (bad) xchg gs (bad) jmpq push (bad) pop cmp rex.WXB repnz sub (bad) stc in movabs outsb (bad) jmp jo jno movabs pop movabs callq add jmp cli push insb jne out jge jo lods shlb add push jnp rex.RXB jmpq in (bad) adc (bad) cmpsb adc gs push xchg enterq mov mov pop icebp iret mov clc clc pushq jle jrcxz loopne vpsubd mov sti retq lods or mov test test and jmpq jmpq leaveq test add push pop enterq (bad) jmpq retq mov out mov fsub ficompl (bad) jno push xchg push (bad) scas or imul mov rex.WRX rex.W rex.RX rex.R xchg mov (bad) xor int3 rex.WXB repnz pushfq mov adc sbb xchg (bad) (bad) sbb (bad) cmp cld (bad) cltd xor dec add cmc std jo retq repz jle (bad) data16 rex.WRB cmc and add or (bad) (bad) out jbe int3 imul (bad) fnsave (bad) imul adc rex.RX rex.WRB cmc (bad) imul mov mov xchg or cmp cld sahf mov test jo (bad) decl test xchg add (bad) add lods clc add bt jmpq add xor jo mov lahf xchg ds iret cltd rex.WB rex.WXB cltd xchg retq movsb pushq (bad) rex.XB retq fwait test in jno (bad) rex.R rex.WRB icebp sub nop cmp push jle loopne add loopne in fsin xor (bad) sub jae sub (bad) xchg cmp (bad) cmpsl orl cmp (bad) mov (bad) std sub rex.WRX (bad) (bad) (bad) (bad) cmp mov gs loope test adc sub mov (bad) rex.XB ss jl sub (bad) insb fxch rex.XB fucomp js add add push cmp (bad) jmpq test (bad) (bad) cltd (bad) movsl xor xor adc push mov jmpq rex.X int out jle pop (bad) sbb rex sub pop negl hlt movabs (bad) xlat insl shr testb fs rex.WRB cwtl mov fadds cmp sbb mov fisttp lods iret test pop orl xchg cmp test push test xchg rex.RX ss scas cmpsb pushq mov enterq andl rex.WRX rex.WX loopne in roll (bad) rex.WR (bad) (bad) (bad) cld imul imul rex.WR rex.RXB nop xor cmp or insb and cmpb cli negl cld jp jno int mov (bad) (bad) lcall sti in mov jb push fwait xchg rex.WRXB addb fdivrl repnz cmp sub mov (bad) rex.X subb pop (bad) rex.WRXB cli xchg data16 sub (bad) mov incb in add jmpq sarl stos rex.WB push clc test std jae out or sbb fwait int3 add rex.W mov cmpxchg (bad) imul stos sbb (bad) (bad) cs push rex.RX fisubrl and xchg sbb adc enterq jmpq rex.RB (bad) test mov jb sarl push scas mov cltd jo icebp mov push cmp jnp cmp bnd (bad) add mov pop pop mov rex.WR notb push incb mov in rex.XB (bad) (bad) (bad) (bad) (bad) sub (bad) (bad) decb (bad) (bad) (bad) jmpq mov mov movslq or (bad) nop mov (bad) jg cmp cmp rex.RXB mov (bad) rex.RX shlb rex.WRX rex.XB movb cmp jmpq loop out add pop imul jno jl (bad) rex.WRB push (bad) rex.WX rex.RB int (bad) push rex.R mov es pushq pop ja jns mov mov hlt int test hlt sahf shr xchg push xorb or add mov sub stos test sub (bad) out fidivr push (bad) enterq lret (bad) adc mov pop je pop (bad) jp int out mov pushq scas add push rcll sub (bad) test push push (bad) xchg (bad) adc outsb (bad) or lods (bad) (bad) (bad) cld jg insl (bad) jrcxz (bad) (bad) (bad) xchg cmp mov (bad) add add adc push out and out loopne test in xchg pop and jbe and in pop pop lret (bad) jns test sarb mov cmp sar jmpq (bad) loopne outsb (bad) pop xlat rex.B add and rcll lret in roll mov jo negl imul rex.RB rex.B mov insl rex.W out mov fwait lret sbb enterq (bad) leaveq repz xor pop cld test rex.X (bad) jg std outsb iret insb imul xchg xor addr32 (bad) cltd add xchg and callq xor movsb mov test (bad) add pop outsl rex.X xchg popq jno popfq xchg and add (bad) (bad) cld in (bad) ja (bad) (bad) (bad) (bad) idiv adc cmp lods (bad) add movsl rex.WRXB or (bad) icebp push add add js cwtl mov add mov xchg sahf (bad) outsb cs lret mov adc jbe or pop rex.W lock fsts rex.R fidivl imul or xor test ja add shrl xchg mov neg sub btc clc mov cmp jmpq jne btc rcl xor shl xor mov jmpq push push rex.RB rex.RB rex.WRX cs insb add je and es and xchg push mov (bad) add (bad) sbb shlb fmull (bad) movsb mov mov (bad) (bad) loop fdivrp rorb sub jnp (bad) pop sbb mov sbb push andb xchg mov sti mul mov (bad) int3 test mov out jrcxz test sti rex.RB jne (bad) rex.W sub (bad) xchg add (bad) cld pop mov (bad) (bad) (bad) (bad) insl mov movabs sar insl xor (bad) (bad) in xchg js movabs push leaveq or not mov in mov rex.X xchg lods pushfq jbe out pop (bad) (bad) test cmp shlb cmc pushfq (bad) mov (bad) mov add shlb retq shl bt add stc mov jmpq je cmc sub cmc clc test cmc cmp jmpq test cmc stc bt not stc cmc cmp sets lea lea jmpq jae sbb stc adc not mov cmc add not not mov not mov jmpq jmpq jae bsf mov shld add xchg or mov sub dec rcl (bad) cmc mov cmp jb sub bt test repnz jmpq (bad) rorl sub repnz sbb pop in adc lock es and pop sbb sti loopne xor xchg stos (bad) (bad) (bad) sbb (bad) mov add add rex.WX pop test (bad) jae rex cmp insl sub cmpsb mov ss (bad) lahf adc or cmp mov rex.WXB cmpsl jbe (bad) (bad) std or (bad) (bad) std and cmp scas fwait mov scas mov xlat fcomp push push incb mov pop imul pop (bad) leaveq add add or movzbl jp out gs cmp or mov movsl rex.WXB rcrl decl (bad) je xor lret (bad) xchg pop clc punpcklwd jno leaveq (bad) jmp xchg cld pushfq xchg rol fstps mov xor adc jne rex.WB mov add lea mov mov jmpq jmpq in stc repnz mov iret stos push pop xchg rex.W in pushq (bad) hlt or (bad) (bad) cmp adc lret stos es and sahf mov pop xchg stc gs push test xor fistpll mov frstor pop or xchg mov xor out push mov push pop cmp test in lods cmpsb callq pushq fbld mov incl (bad) (bad) (bad) cld lock (bad) (bad) incl sub (bad) callq push callq add and ds in in mov loopne xor rex.R (bad) adc (bad) sbb rex.WRB cmpsl stc shlb adc in or (bad) or adc mov rex.WRX icebp xchg add mov mov add stos (bad) movabs lret add test cli mov (bad) xlat fiaddl (bad) rex.WRB (bad) mov rex.R (bad) xchg insl adc std sub sub (bad) cmp vcomisd adc rex.WRX sarb adc mov jne jl push (bad) imul xchg mov xchg cmpsl lret mov xchg (bad) (bad) (bad) sti xchg xchg xor std movsl scas (bad) je sub jo int rex.RB mov or rex.RXB rex.X shl leaveq mov pushq adc jns orl jbe (bad) (bad) incl rolb int3 mov int3 jge repz sbb push fldl push push ds insb retq stos fbstp push imul stc sbb loop fcoms movsb (bad) loop adc mov jg add rex.WRX adc jb cmc bt cmp cmp cmp jmpq mov (bad) imul scas (bad) (bad) clc pushq data16 nop jo rex.WXB cmpsl fiadd sub jae mov movsb clc add js (bad) jno andl rex.WRB (bad) xor xor in stos pop xorl rex.WX (bad) mov pop add mov mov push jge (bad) (bad) (bad) cld (bad) (bad) mov (bad) (bad) lods rcrl (bad) jno jp (bad) mov movslq rex.RXB data16 add sub rcl and rex.XB add jno out rex.WRX pop rex.WRXB pop enterq hlt data16 rex.RXB push es (bad) (bad) ja mov mov lock sti scas fbstp pushq stc test jmpq (bad) push mov sub in or rex.WX fwait rcrb lahf cmp or (bad) sti (bad) mov (bad) push mov int3 in out mull and (bad) fsubrs std rex.WXB pop lret mov xchg imul scas sub test (bad) data16 movabs out or jnp sbb (bad) add jne adc cmp push notb je mov imul (bad) (bad) decb (bad) (bad) (bad) (bad) in jge rorb lods sti lock and out and xchg in negb add mov outsl shlb cmp pop sbb (bad) (bad) mov insb mov xor sti mov roll xor stos lea mov fadd jmpq add cmp mov (bad) xchg rex.W sbb rex.X movsb fiadd xor lea (bad) adc sti xchg sub nop pop adc sbb rex.W fs (bad) mov (bad) (bad) mov insb in andps cwtl outsb mov fdivr ficom nop lret add pushfq in loop (bad) (bad) decb jmp and fadd (bad) jne jbe imul jrcxz addr32 rorb cmp push retq in shrl lods jg lret (bad) addl jle orl movabs xchg jle (bad) scas (bad) (bad) std xchg es movabs leaveq movabs jmpq adc movabs and lock sti or rex.RB fadds sbb movslq or or sbb push (bad) jns mov mov faddl test (bad) iret (bad) xor jmp mov sahf neg mov (bad) or lea in out test cmp jg adc xchg xor test addr32 (bad) (bad) cld adcb in (bad) (bad) (bad) xchg adc mov sub and xor mov add add and (bad) (bad) fwait rex.WR insb (bad) or xchg movl leaveq gs mov xor pop rex.X rex.XB (bad) stos (bad) add outsb (bad) lahf mov sahf add movslq mov imulb lock (bad) jne jmpq jnp stos jmpq cmp jmpq cmc stc cmp jmpq clc cmc imul bt stc cmc add jmpq xor mov xor or int imul movabs lock rorb cmp popfq stos pushq pop cmc mov addr32 repnz movabs lods (bad) insb loop jl mov loope xchg adc popfq cld (bad) jp js lret hlt adc rex.RB (bad) xchg std notl cmp (bad) (bad) std pop rex.X (bad) jb (bad) (bad) pushq jle or adc push mov adc out adc sti sub add jl xchg cwtl movabs movsl and rex.WRX cmpsl clc xchg rex.XB subl lret fs or rex.WX cmp rex.WR out movsl shrb pop mov test cwtl mov je scas rex.R int jns xchg push push rex.WRXB push cmp (bad) clc cmp cmp rex.WB in (bad) xor loopne (bad) test and xorb add repnz xchg pushq cltd callq mov sbb jne sub cld cltd and mov pop gs push out movabs (bad) (bad) jbe (bad) (bad) sahf xorl test fwait cmp (bad) (bad) (bad) cld xor sub mov (bad) (bad) incb (bad) notb pushq inc sbb xor movslq mov out (bad) mov in ja pop subb idiv jrcxz (bad) (bad) (bad) mov or out mov push outsb adc xchg mov add jae push divl add mov mov adc rex.WR push cmp jmpq or fstps test fbld rex.WRXB gs outsb mov fwait test retq retq or cli repz xchg ds es in or lret (bad) cmc cmp or clc pushq (bad) int (bad) repnz mov rex.WX loopne jae jb mov movsb mov movabs stos adc adc rex.RX lret cmpb (bad) int cld xchg int sbb xchg (bad) and js sbb (bad) (bad) (bad) cld (bad) loope rex.RB (bad) (bad) (bad) (bad) fcmovu std hlt and rex.WXB push adc pop and add add pop jmpq cld out (bad) in (bad) mov jae pop and stos cld push fisttpll pop rex.WR xor fdivrs lods (bad) cs add (bad) xor jbe mov or mov mov shlb ds rclb mov retq or mov cmc hlt or mov (bad) (bad) mov rex.WRXB and pushq mov test and gs pop insb xchg scas sub rex pop add addr32 rex.W rex.WR pop mov (bad) mov adc jrcxz lahf fidiv rex.WRB rex.WX sub jns mov mov rex.WRX (bad) (bad) cld imul (bad) (bad) (bad) jnp lahf mov jrcxz rex.RB (bad) clc sub (bad) (bad) (bad) sti sti (bad) clc icebp neg lahf push (bad) push push stc int3 stc (bad) sub sbbb in and mov enterq and (bad) and rex.XB cs or mov mov adc rex.X cld shr insl adc adc mov cmp rex.R sub (bad) sarb loope cmp (bad) cmp and xchg xchg or sub sbb and adc imul mov cmp add mov adc stos int pop rex.WB adc mov xlat rex.RB sarl (bad) or in mov lret sbb es ficompl repnz jbe mov xor or loop or outsl pushq test mov psrlw (bad) cmp sub add icebp int in ror in rex add and gs (bad) xchg rex.WB push test rex.XB mov jmp insb (bad) xchg insb (bad) (bad) icebp out xchg add mov rex.R (bad) mov jae mov pop in xchg xor (bad) xchg pop movabs retq fcomps adc or sub js (bad) mov subb jmpq cld add (bad) (bad) (bad) (bad) sbb sub xchg (bad) xor scas mov xor rex.WB (bad) (bad) push test or xlat sub or and or test rcrl xor lock ss rex.RXB xor jle push or nop subl mov movntq out lods iret lea jmpq pushq jmpq out rex.WRX mov fisttpl (bad) movsb rex.WXB rex.X (bad) cmp jl sub rex.WRX test sbb or lea (bad) mov outsl rex.XB out leavew pushfq and scas int sti xor nop jns (bad) xchg jne out movabs xchg adc addr32 jae cmpb jbe adc jl test shrl and out callq xor (bad) imul (bad) rex.RX (bad) je mov (bad) (bad) (bad) cld jle in (bad) (bad) (bad) (bad) (bad) xchg (bad) movsb imul sbb mov in add add adc mov test rex.RX jmp loop push clc scas (bad) mov mov jb push (bad) je movsb cmc insb adc adc (bad) je add (bad) push (bad) or (bad) adc lock test mov shl and (bad) pushfq enterq rex.B xchg loope jns jnp loopne add xchg adc cmpsb movabs lret rex.WB xor movabs (bad) sbb movabs push repz rex.R cmp add mov adc and ja pop es mov add mov jge lea cmp pop fmull mov loope testb and outsl cmp xchg fbstp cmpsl cs pop out subl lods sub (bad) sub adc (bad) data16 cld loopne mov std rex.WXB jg pop xchg rex.WX add mov add (bad) scas test or mov adc cmp test movl scas sbb (bad) xchg scas mov (bad) (bad) (bad) decb fisttpll movabs lret mov push rex.XB movabs leaveq (bad) repnz sbb enterq or outsb movslq cld scas mov sbb addr32 addr32 jl lods adc or je,pt adc imul movsb rcrb or cmp movsb (bad) mov adc jge mov add stc clc sub clc cmp jmpq outsb int fimull retq jb int3 out jnp adc rex.WRXB (bad) (bad) pop pop mov pop (bad) (bad) test out fild movabs scas sub leaveq movsl (bad) jp push jge mov rex.XB jns jl es xchg lods (bad) callq icebp (bad) cmp retq mov fistl cmc fsubrp rcr add out in scas es (bad) retq lods xchg mov xor sbb lods mov pushq outsb int3 rex.WR cmp out (bad) (bad) cld scas xchg xor sbb (bad) (bad) inc mov xchg jno cmpsl sbbl in add add jge or imul rex sahf mov cmpsl xorl lods cmp adc clc (bad) adc mov stos xor stos pop negb or mov and mov mov adc or xchg cmp and mov mov cwtl imul jbe add pushq retq in cmp add sbb ffreep mov notb add fcmovb xor imul rex mov cltd xchg xchg movslq imul xchg in rex cmp rex.WRX jae (bad) add add jno test cli jmpq fsubr rex.RB retq in cmpsl out int push (bad) cmc test sarb push jae fdivrl out xchg scas gs sahf decb (bad) (bad) incl (bad) mov and sar (bad) decb (bad) (bad) (bad) decl callq adcb rep xor push sub jmp sub (bad) scas (bad) (bad) and es xchg retq movabs (bad) jno (bad) jae sahf xchg cmp (bad) jns rex.RB mov outsb or rex.WXB rex.WR divb add cmp jo std (bad) (bad) movabs movsb adc jb pop lock pushq (bad) loope mov xchg fstps xchg mov fnstenv imul fildl out cmp jp cli xchg jl rex.X (bad) xor fdivrp loop (bad) imul add xor je movabs sbb sbb jle rex.RB cmc add sub jl xlat mov ds addl push (bad) (bad) (bad) (bad) (bad) (bad) data16 fsts movabs fsts rex.WRB (bad) (bad) (bad) jmpq (bad) jb cmp xor scas (bad) shr in rex.RB loope loope (bad) lret xor lods mov repz (bad) leaveq sbb jle icebp push or jle movabs jl adc jmpq jb clc test cmc cmp jmpq lods xchg (bad) imul mov adc mov jg xchg adc test adc adc jbe imul (bad) jg (bad) fs (bad) mov rex.RXB es lods add jne xchg mov cmp (bad) jg rex.WRXB cmpsl mov and mov adc push xchg enterq rol xor pushfq (bad) (bad) (bad) cld jns rcr sar (bad) (bad) decb mov sub and mov incb add add mov adc mov sti (bad) test cmp xor cmp push sub (bad) jb mov and mov sub (bad) rex.X int (bad) jno mov mov (bad) movabs push xor rex.RXB rex.WR data16 imul xchg rex.WRB cmp or jg mov imul rex.WR or jl or sub (bad) stos movabs rcrb sbb sub sbb in sti jbe retq rex.WR lea mov (bad) stos (bad) cmp cmpl shl (bad) (bad) (bad) std xchg xor imul (bad) sub nop mov (bad) rex.WRXB push es scas push rex.WRB cmp jmp jnp insl jno jo addr32 mov or lahf mov (bad) fs jbe (bad) (bad) pushq mov cmp mov xor scas or rex.RB test fdivs sbb add sub (bad) clc cwtl xchg imul movsb mov sti xor gs (bad) push mov (bad) imul add mov lea pop jmpq rorl adc pop sub fistpll jb jg rex.WRX je outsb pushfq (bad) je je adc jmpq mov gs add test es test subl rex iret sahf mov movslq (bad) out (bad) movabs rex.RX pop clc decl movabs imul mov mov (bad) (bad) (bad) (bad) sar or (bad) retq sbb outsl mov sbb xchg mov fwait test stc cli sbb pop insb addl xor jge mov push rex.W add add rex.WRXB add jns or xor xchg rex.WX test push fs in rex.WX mov mov movabs scas stc rex.WRXB js movabs mov sbb cmp mov add not movzbq movzbw mov mov jmpq lahf pushq outsl pop rex.XB add adc or pop xorl adc mov xlat sub shr leaveq imull pop out or rex.RX cmpsb mov rex rex.WR sbb mov lods and loopne callq rex.RXB or or cmp and fadd idivb (bad) cld fwait xor sub scas xor cmp add iret incl loope insl retq fs lods mov xchg push add add or cmp rex.WRX rex.W std out xchg callq add pop cmp callq add or sub rex.WX rex.WR mov jo insb or adc or or mov adc mov lods stc test pushq test clc cmp jmpq jmpq jmpq ja rcr sar sub and stc add bswap btc neg add mov rcl mov clc cmc repnz jmpq jmpq (bad) cwtl rex.X cmp pop addr32 mov or (bad) xchg mov rex.R rex.WR faddl jle xor (bad) jne or adc xor pushfq mov movabs mov test in lret in cmp rex.WRB (bad) (bad) (bad) (bad) pushfq xchg push or sti (bad) mov insl (bad) rex.RX imul (bad) fdivl sbb (bad) in rex.WRB adcl sub (bad) mov gs sbb push cld jne cmp cmp bt movb bt clc cmp bt test jmpq out pop cltd iret addr32 sbb sti cmp (bad) ds stos adc (bad) xlat or retq xor and mov xor rex.WR push cmpsl (bad) or rex.W imul ss ja fwait negb (bad) nop xchg movabs jo (bad) ds ror mov mov mov int3 mov xchg sub mov sbb mov (bad) sti jno adc (bad) pop adc jmpq jmp mov pushfq adc or and sbb clc pushq (bad) (bad) lcall xor gs lret sti (bad) mov shll mov xchg fistpll lock (bad) leaveq pop adc nop mov test and mov sbb adc xchg add imul clc cmp jmpq je bt btr sub push xor xor mov sets sub lea lea jmpq jb clc cmc cmpb ja jne jmpq je stc cmp jmpq jmpq cld (bad) icebp sarl jrcxz stos mov push mov jl cli pushfq (bad) fwait mov (bad) add callq mov xchg movsb rorl sarb mov imul rex.RXB callq (bad) insl (bad) (bad) pop pushq pop sub and in lret sbb jnp jmp mov cmpl scas in jl jo retq jmpq cld (bad) or (bad) (bad) je mov and jns fs movabs xchg out loope (bad) (bad) (bad) callq mov xchg retq mov mov cmpsl (bad) (bad) xchg mov std mov jns rex.X repnz callq xchg xchg xor ficom fidiv lea rex.WRX lret or xor (bad) rex.B imul xor (bad) push pop xchg cmp (bad) std (bad) cli in callq jo xchg xor mov xchg insb cmpsl rex.WR xchg ja xchg adc ss pushfq not decb mov pushq pushfq fwait mov sbb stos (bad) out (bad) fnsave mov pushq cmpsb shll push mov jno scas (bad) (bad) (bad) sti out orb (bad) (bad) (bad) decb sbb add add or sub (bad) xor loope sbb (bad) fcoms fwait mov or sar pushq push movb lods (bad) popfq mov (bad) mov mov (bad) fisubr push jb jmpq jmpq jmpq je jmpq jmpq std rex.WRXB sbb callq pushq sbb sub (bad) mov push xor (bad) xchg retq icebp callq je movabs jo rex.WX es pop rorb fsubrs mov callq icebp test mov cmp ja sbb out xchg rcr cmp (bad) rex.WB (bad) or sbb out std mov cs loopne rex.RXB mov mov cld cmp js (bad) (bad) (bad) pop cmp xor sub (bad) fstl (bad) (bad) fisttpll xchg jge rex.XB cmp add rex rex.RXB jb movabs repz (bad) outsb or out subl insl or adc mov add cmp cmc cmp jmpq jmpq cmp jmpq mov lea jmpq stc cmc test stc test jmpq cmp jge bt cmp jmpq jmpq callq jmpq sub rex cmpsl pushfq cmpsl leaveq xor (bad) jns loopne sub movabs (bad) cmp out or outsb rex.X rex.WRB jbe xchg sub cs xchg add test in retq test out gs xchg enterq pop sbb (bad) pop callq nop (bad) lahf sub xchg add sbb mov adc (bad) cld and (bad) (bad) (bad) dec cmp rex.WXB stos (bad) ja mov lods jae or cmpsb sbb add add or xorl repnz add pop (bad) (bad) push (bad) cmp lea cmpsb lret xchg (bad) (bad) mov sub (bad) std cwtl add pop xchg add cmpb fdiv adc and cwtl sbb add cmpsl xor add sub (bad) (bad) mov rex.WRXB mov lret pop sub or mov int mov shll jb and test gs jle mov (bad) rex.WXB add (bad) add pushq gs pop sub or sub fildl sti sti (bad) rex.WRB movslq cmpsl movabs repnz rex.R xchg xchg mov sub jl sub or stc fwait mov je xchg mov add (bad) cld (bad) imul fwait sbb (bad) (bad) (bad) callq mov jne jge and pop lods leaveq mov sub mull movabs leaveq nop cs stc push rex.X jge mov (bad) stc push (bad) or cmp movabs mov test je scas insb retq repz mov js retq cmc imul test cmc clc jmpq jmpq jmpq roll jl jne push xlat rex.W rex.WRXB or sub sahf jno out (bad) pop retq xchg adc xlat lret std fnsave xchg stos or push jle xchg adc lret pushq rex.W gs jne repnz repnz push rex.WR cs je mov sbb add add fs cmpsl pop cld repz mov loopne pop cltd in cmp rex.RB add mov and lret lods xchg rex.WRX or rorl sar fnop jp xchg sub mov movabs (bad) push (bad) mov gs loopne outsl lret (bad) movsb mov and jle xchg xchg add movabs (bad) push (bad) lods (bad) mov or and (bad) movsb xchg jns test retq test jne xchg (bad) xchg hlt jns pop push (bad) xor pop jne mov xchg (bad) add mov rcll js (bad) in (bad) mov leaveq pop and sub xor jo orb adc ficom sti push movsb xchg std cli fidiv (bad) (bad) (bad) (bad) cld cmp (bad) (bad) (bad) (bad) push rex.RB rex.W (bad) sub insb (bad) xor (bad) (bad) (bad) callq rex.B and (bad) mov sbb (bad) jge and leaveq jge mov mov jge push clc andb jp sub mov hlt cwtl (bad) pushq movsl cmc fcoml and movslq add sbb xor bt jmpq ja jmpq jmpq jmpq je mov jmpq sub stc repnz jmpq test bt sub bt clc jmpq jmpq (bad) pop push or movsb adcl fwait mov cmpsl leaveq out adc (bad) jmpq (bad) rex.RX add xchg adc test cld add callq (bad) std (bad) or mov repnz jmp pop add (bad) ja and lret xchg sbb rex.RXB mov xlat pop cmp (bad) add sbb loopne ja int3 pop adc cmp sub rex.WRB in cmp (bad) cld cltd cmpsb cld clc or (bad) retq loop pop and xor (bad) (bad) (bad) (bad) (bad) cld rex pushq push lret movabs mov and sarl ror testb scas (bad) push sub xor callq rcrb mov adc mov (bad) pop rex.RX mov mov rex.WR icebp xchg movabs mov and addr32 add adc mov test cmpb jmpq je test add stc cmp bt cmc cmp jmpq jp rex.WX pop (bad) fildll andl rex.RX mov add (bad) (bad) test and mov sbb imul push cli out data16 ss (bad) sbb add sub mov or xor pop pop (bad) jge xor rex.WX or jp mov and pop cmp (bad) jno sub retq sti (bad) (bad) (bad) cld (bad) movslq jle (bad) (bad) (bad) (bad) movabs (bad) fiaddl add add je test and test xor mov insb movswl xor lods addr32 xor cwtl mov lock mov xchg test pop not ror pushq mov rex.WRX mov adc (bad) in sbb popfq adc mov cmp data16 loopne rex.RXB and xchg gs movabs test repz (bad) test adc clc insb (bad) cs lahf rol xor loope out fcoms test or cwtl stos or jmpq movabs sub iret cmpsl sub mov (bad) fidivr sbb movslq push mov push cmp lea xchg add xor mov es test clc repnz jmpq jmpq jmpq rex.RX xor fnstenv add rex.WX repnz out iret test rex.R rex.WX ss (bad) in sub pushfq push (bad) fs int push (bad) lret lock (bad) (bad) and jo mov and or xchg and add rex.RX rex.X jnp mov hlt and stc std add mov out jg cmp (bad) retq add mov (bad) fmuls and (bad) (bad) scas mov callq rex.XB test retq jns (bad) mov mov xlat xchg xchg sbb xchg push or test rex.WRB (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp cs insb push or mov mov fwait xchg mov (bad) add lea (bad) or adc retq rex cmp repz sub sub rex.WR (bad) and lods lret stos xor (bad) mov jmpq lock rex.X retq mov lock cmp and mov xchg pushfq mov and or rex.B (bad) mov rex.XB rex and rex.WXB pop pop jl movzbl fs push movabs js (bad) (bad) decb out rex.X test (bad) xor cmp jb jo jne cltd not movsl or (bad) push or rex fidiv sahf mov rex.WB pop out rex.WR ss rex.WRX rex.XB or xchg lods enterq fs xor stos lea adc js push cmp add add je jae jb gs add test (bad) push bswap adc btr mov sub adc shld sub jge lea jmpq jmpq mov pushfq mov xor insb sub callq rex.WRX (bad) idiv in (bad) sahf push mov jns rex.WXB mov ss adc mov rex.XB (bad) xor sbb adc rex.WRX rex.WB xchg popfq mov xchg (bad) rcr rex fdivrs jb (bad) (bad) std test add add or adc lods mov (bad) cmc ja in lock cmp jo movabs xchg rex.WRXB cmp (bad) lret sub jae mov adc rex.WB (bad) test rex.R (bad) cld scas pop jge and in (bad) rex.WXB es xchg fist ror and (bad) (bad) rex.RB xor outsl (bad) rolb jmpq in cmp rex.XB rex.RXB test and jmpq lock ds pushq lods shll jrcxz subps add shlb ficoml cmp xchg add movslq cmc jle or or adc mov (bad) sub lcall rex.XB scas mov mov pushq pop rex.X rex.XB out retq sub imul je cmp cmp jmpq sub bt cmp cmp jmpq jmpq jmpq jb clc stc jmpq jne inc cmc mov test jmpq ja jmpq mov fisubl shrb adc rex.WRX sub repz (bad) pushq ds rex.WR loopne loopne (bad) (bad) lret scas js push cmpl leaveq out mov jns jb (bad) rex.R rex.WRB jnp shlb ss je pushfq xchg neg sbb sbb enterq insl adc ja lret scas fs sub push add (bad) cmp (bad) (bad) (bad) cmpsb lret (bad) jnp xchg jno cmp insb mov add pmaddwd and jbe movabs (bad) decb (bad) (bad) (bad) decl (bad) rex.WR sub fbstp out in stc insb add xchg mov sahf mov enterq jbe mov out push rex.RB adc out int std xchg in rolb or (bad) sub leaveq cmpsb mov mov sub out (bad) jne (bad) lock movsbw inc xor xor jmpq rex.WRXB sbb xor xorl mov mov lods mov ja ss and pushq push movsl and cmpsb (bad) outsl rex.WRX int3 xchg js mov rex.WRB gs rex.RB rex.WX (bad) cmp jp xchg (bad) rcrb jp in push jle xchg jbe sbb (bad) repz sbb enterq in and (bad) (bad) cld in lret xor negl shll push or fdivl (bad) cmp in push sbb lret (bad) je mov add add jae adc ja rex.RXB adc scas sub retq (bad) imul movq std lahf (bad) and test push xor xor mov push (bad) pop jns mov fucomp mov sub and retq mov retq xchg sbb loopne (bad) push rolb insb gs xlat lahf hlt outsb imul mov fs xchg adc rorl jg rex.WRX es rex.WX lret push xchg cwtl stc adc pop repnz cltd cwtl jnp pop movslq fadds rex.X in out mov pop (bad) cs (bad) (bad) sti mov (bad) (bad) (bad) std lret mov sbb xchg sub (bad) mov stos movabs jg adc fcmovnb mov xchg (bad) mov add and rex.WRXB (bad) sbb std lods pop nop (bad) cltd leaveq (bad) (bad) (bad) incl pushfq sti callq mov mov add orb fadd outsl (bad) repnz int imul (bad) adc (bad) out in mov (bad) addr32 pop rex.XB sbbl fnsave sbb mov sub pop jmpq popfq scas cld mov pop rex.XB rol ss scas adc ja test stos leaveq (bad) movabs jns xor jrcxz sbb pop add (bad) rex.R nop scas movsb out xorl jge mov fldt pop push sub xchg gs cmp sub jge mov lahf push xchg movsl mov push (bad) popfq movsl movabs sub je jno jne fstpt mov (bad) (bad) cld xor (bad) (bad) incb (bad) (bad) ja rex.X cmp fld pushq (bad) (bad) (bad) jmpq cmp fidivr cmpsb rolb xchg mov hlt cmpsb (bad) pinsrw (bad) jae cmp xlat or (bad) movabs or and loopne clc pop push cmp hlt xor xchg pushq roll cmp pop sbb mov cs adc rcl mov bt stc jne stc push shl mov test stc jmpq pushq jmpq jmpq jne jmpq not not movzwl jmpq jmpq mov mov lea jmpq je test jmpq je jmpq jmpq out (bad) or sub cmpl xor mov cmpl pop sub lods push mov (bad) (bad) icebp (bad) mov roll mov sti in jbe movabs inc xor test xor xchg add mov idiv sub cltd pop (bad) rex.WRX pavgb fcompl cmp cmp push incb pop scas sarl loope sbb xchg xchg mov cli (bad) (bad) (bad) cld rex.RXB scas xorb (bad) (bad) (bad) pop negl sbb sub sub (bad) (bad) (bad) fisttpl cmp pop ss sbb (bad) or out sub adc imul xchg and mov mov js mov add movabs and (bad) jg movabs fcomps sub bsf shld mov clc clc xor neg add and mov cmc cmc test jmpq ja cmc cmc clc jmpq xchg jae pop jge imul cmp in lea test outsl (bad) push movsb adcb xor lahf lock pop repnz or (bad) sub shrb cmp (bad) imul mov iret callq (bad) push (bad) (bad) fisubr enterq movb (bad) retq xchg xor mov jmp jnp fidivrl pop (bad) sbb stos sbbb out sbb mov mov repz je (bad) (bad) cld mov rex.WX adc enterq jg pop mul (bad) popfq (bad) loope loopne (bad) (bad) add add rex.W insb sub xchg rex.RB (bad) add enterq add xchg stc push rex.WX (bad) (bad) rex.RXB xor negb negb adc add xchg xchg out mov add cld push cmp jmpq je cmc clc push bsf jmpq cmc bt clc jmpq ja bt cmc test add test cmp bt or jmpq cmp jmpq push push rex.RB xor cs insb add fs test (bad) fwait stos fs jno repz (bad) mov sbb mov int3 (bad) (bad) sahf xchg test movabs add (bad) movslq push jle adc (bad) cltd rex.WB clc fisttpll test or loop repz cmp popfq push outsl ud1 test rex.WR rex.R sahf mov (bad) cmp cmp adc notb mov loope pushq sub (bad) (bad) cld (bad) xor xchg (bad) (bad) (bad) (bad) (bad) sub mov movslq movabs (bad) (bad) ljmp in fnstenv pop sub pop idivb pushq (bad) mov (bad) mov and (bad) mov stos xchg fcoms xor sub (bad) pop icebp pop push repnz add add pop int3 lahf xor xor fwait mov adc fdivl (bad) mov xor fisttpl movslq movl rex.WRB jl loopne sbb (bad) mov (bad) pop repnz fwait in sbb pop (bad) lret cmc stos xchg mov repnz cwtl push mov movl sub jns xchg data16 (bad) (bad) pop mov mov (bad) (bad) (bad) std rex.WRB lods push (bad) (bad) (bad) ljmp (bad) xchg mov fisubr retq movslq jle xlat sub imul push out fstpt jnp xor lahf add or mov insl adc mov xor loopne push ja pushq jmpq jo jb retq (bad) rex.RXB nop rex.WRX std push jg rcll movsb shrl rex.WRB nop cmc rex.WXB and pop (bad) and in fstpt loopne rex.WXB mov out fidivrl enterq loop mov xchg or pushq jg cmpsb scas (bad) add fildll xchg pushq lods repz jo jb (bad) (bad) (bad) sti hlt fwait icebp stos hlt (bad) (bad) (bad) (bad) loope sub retq add sahf lret pop mov vpternlogq fcom rolb add or rex.WR stos lods int push movslq rex.X rex.RB leaveq adc shlb (bad) mov sbb in xchg rex.WRXB rex.WRB rex.B mov movabs (bad) mull mov xor push xor in pop add ja clc imul stc test add jmpq jmpq jmpq callq rcr inc inc mov bt bt cmc shl ja je xchg setbe movzbw movsbq mov movzbl setge mov not mov lea lea jmpq xor push fisttpll (bad) test add (bad) jae xor nop (bad) xchg and cmc sahf scas sti push jb cmp scas sbb jp mov retq (bad) jmpq movabs shrb (bad) rex.B fild gs cmp xchg pop (bad) rex.W movslq push mov cld data16 pop sub in cmp movsb popfq mov jle lods add and iret (bad) pushfq (bad) (bad) (bad) cld sub jmpq (bad) (bad) cmp jae rex.WR add (bad) icebp (bad) int (bad) (bad) (bad) (bad) mov mov jmp jns (bad) (bad) xchg ja and adc jno (bad) sbb and (bad) test es movsl or and (bad) sbb xor ljmp mov add (bad) movslq cs jb ja rex.WRXB cmpsl xchg cmp movl (bad) loopne retq jle or fidivrl out popfq rex.WRX fstpl ds mov (bad) es test int3 cmp roll clc out movabs movsl cltd rex.WXB xor stos mov popfq clc push rex.WB movslq sbb (bad) out rex.WXB (bad) jno (bad) (bad) sti retq movabs imul popfq subl stc mov add insl cwtl push fmul in push outsl (bad) mov sub jne sub je ljmp rex.B mov mov mov rcll rex.WRXB repz mov (bad) rex.WRXB rex.X mov ss insl rex.R sub movzbl btr cmc mov neg sar inc bt add inc mov stc bt jg cmc test jmpq ja jmpq rex.R push mov rex.B repnz lods jb subl (bad) lret stos (bad) jge push cmp movsl int3 pushq pop cmpsl (bad) push xchg cmpsl sbb sarb rex.R callq cli clc sahf jo insl cmp retq sbb add (bad) fistl lret and mov in lea mov cld rex.W rex.RX (bad) (bad) (bad) imul popfq (bad) xchg (bad) (bad) (bad) rcr rex.XB loop xor mov mov rex.WRX in xorl nop push (bad) xchg rex.RXB jo add add jp (bad) fs xchg pop adc outsb (bad) mov retq mov enterq push movslq rex pop fs in (bad) sbb mov shrl cs fmull adc (bad) enterq test add jmpq jbe shld sub xor shld neg cmc mov not mov mov cmp add bswap bsf shr rol movsbw bsr test mov bt add jmpq cmc test add jmpq clc jmpq jmpq je jmpq jne rcr shr mov bt bt cmc cmp add cmc cmc stc movzwl stc bsf test mov test jmpq jmpq cli xor mull int3 mov push cli (bad) adc stos je stc movslq movslq push add mov pushq mov and xchg xchg leaveq sti lret fwait and mov mov (bad) and fild mov adc pop testl cld xor test rex.R rex.XB rex.WRB js add (bad) std sub adc adc adc adc (bad) (bad) rex.RX mov mov jnp pushq std callq sub pop adc (bad) (bad) (bad) (bad) clc sub (bad) insl cmp stos sbb movsb ja xor fstpt addr32 mov xchg jle scas (bad) cmp lea cmp (bad) retq lods (bad) mov rex.WX mov push cmp add test (bad) cmp and int3 add scas cmp (bad) enterq cmp rex.RXB out adc (bad) jnp (bad) push fidivr movabs jns mov stos jge jrcxz mov sub cld (bad) pop push out rex.RXB movabs jge and sbb and mov scas (bad) sbb fist or adc mov (bad) (bad) (bad) jmpq and fiadd xor incb adc mov cmp add movabs fisttpll cmp test (bad) (bad) lock sub add add clc repz xlat (bad) icebp xchg rex.WXB callq add es movsl xor movsb mov pushq enterq jno (bad) xlat lret int fdivp mov sbb mov cmp sub (bad) jmpq jmpq cmc cmp jmpq or setnp mov cmp jmpq not mov jmpq fstpl rex.WXB cwtl sbb shlb jle js xor hlt in idivb iret rorl (bad) (bad) xchg (bad) mov sbb fsubs test mov (bad) movabs loope icebp rex.XB cs mov mov cmp push (bad) (bad) (bad) cld sbb (bad) (bad) (bad) (bad) xor xchg push test adc loop jrcxz mov out je mov add mov leaveq and sar add xor adc (bad) (bad) callq adc mov (bad) jge clc rex.WRX sbb sub insl or xor or mov adc adc stos sub cmp clc fwait test jrcxz rex.RXB push xchg pop pop adc (bad) add mov pop sub jno movabs cmpb (bad) jno jp fwait shrl stos stc in out rex.RXB icebp out lods mov std (bad) pop stos xchg mov lret (bad) int cmpsb cmp rex.WRXB pop mov xor insb mov add xor sub (bad) (bad) (bad) std xchg xchg nop pushq (bad) (bad) (bad) push movabs outsb imul pop jb (bad) imulb fsubs rex.WRX rex.WRB jl and cmpsl xchg add movabs pop xor adc hlt or pop jmpq stc sub bt bt cmc pushq cmc test stc jmpq jmpq callq cmc sar add ror rol mov test stc cmp cmc cmpb jmpq jmpq jne movzbw shrd dec sbb mov cmc bt cmp cmp add jne movzwl btr mov cmp add clc cmp cmp stc mov clc jmpq je shrd rcr lea or push shl btr (bad) lock (bad) fmull sub lea movsbw not bswap lea jmpq callq jmpq popfw jnp lea jmpq jmpq cmc jmpq roll (bad) ss (bad) insl adc rex.XB fcoms pop fstps rex (bad) cltd scas and (bad) jns (bad) jno stc sbb imul jno xchg xchg rex.W es (bad) movabs scas rex.W icebp popfq (bad) (bad) movsl (bad) clc (bad) test sub retq rex.RB (bad) sbb shrb (bad) (bad) (bad) cld test (bad) (bad) (bad) (bad) mov or loopne jb out mov add jns leaveq jmp mov fldcw (bad) (bad) rex.R rex.WR outsb or xor mov (bad) xchg xchg mov add mov jge sub jns lahf (bad) lods (bad) mov icebp cmc cmpsl stos int movsl sbb cmp and insl pop mov (bad) (bad) rex.WB cltd rex.WRXB cs (bad) cmp jns rex.WRXB (bad) cld sti jb adc (bad) mov lahf and (bad) int3 cld div fildl sub js rclb and fcmovnb cltd (bad) cmpsl sbb rex.XB rex.RXB and test mov pop div lahf test or jae movabs (bad) scas es and mov int3 mov sbbl adc rex.X fimull jbe fwait add icebp sub jno imul fs sbb callq (bad) mov xchg cld pop addr32 mov (bad) repnz enterq ds sbb sbb mov cli popfq (bad) (bad) (bad) decb pop cmp (bad) (bad) (bad) (bad) mov push adc out push rex.X pop cli pop out jnp cmp pop cmp test lcall ja jrcxz imul push (bad) push notl jnp cmp sbb pop adc outsl or pop in outsl stos (bad) (bad) xor sbb jne js outsw jns js or movsb mov adc adc pop (bad) sbb push add jae clc clc cmp add js mov jmpq rex.RXB cmp and (bad) (bad) (bad) pop mov xchg rex.RB rex.RXB (bad) push xchg fsubrs pop sbb data16 adc lret mov jl (bad) fdivl rex.XB enterq scas mov enterq in fidivr add movabs or push or (bad) es (bad) (bad) sti cmp rex.WB cli jbe imul and xchg xlat and (bad) (bad) decb (bad) (bad) (bad) (bad) idivb add sahf (bad) test loop push (bad) insl sub rex.XB (bad) rex.WRX jrcxz stos jbe subl js in (bad) ffreep sbb (bad) stos std xor cltd xchg (bad) cmp rex.RXB add mov data16 and xchg test stos and (bad) loope rex.WRX movslq cli pop (bad) jp mov mov rex jae,pn jns xor lret jmpq (bad) cmp pushfq pop push mov movsb rorb cmp (bad) rex.WXB rex.WB sbb out xchg clc add outsb rcr mov mov sti rex.XB movabs cmp cltd pop xchg gs jp cmc loopne push rex movabs jl and (bad) rex.WB xor in outsb mov jrcxz and (bad) (bad) decb (bad) (bad) (bad) (bad) idivb mov adc mov adc movabs mov mov loopne add sub data16 and pop jbe and cmp rex.WRXB cs xchg (bad) sub xlat insb mov and stos jge cmpsl fnsave ss iret (bad) data16 and xchg pushq xor or and imul mov xchg fsubr rcl or jle mov movabs jmp (bad) mov test ds nop (bad) (bad) test mov or mov data16 outsl (bad) rex.WXB add lock lods cmpl rex.XB mov subl iret (bad) loope jp outsl sub (bad) (bad) cmp cmp js sbb sub movabs (bad) test adc push loop jo push scas add loopne jle mov movabs lock mov hlt jmpq out mov pop cmc stc xchg cmp subl (bad) cmpsl jp movslq cltd in (bad) (bad) notb cmpl and jge push cmp rex.X mov add jle xchg xchg (bad) rex.RXB rex add movslq sarb (bad) in outsl push jnp adc mov sbb (bad) (bad) cld push and test and nop or cmp iret xor int3 mov or hlt jle fisubl stos rex (bad) fnstenv (bad) (bad) jmpq (bad) fdivrp push (bad) fwait lret add xor xor lock movabs sub rex.WR mov sbb jge stos (bad) rex.WB rex.W mov in rex.WRB movslq xor xchg mov stos leaveq jmpq retq cld mov lret movabs add xor decl mov xor add retq nop adc mov mov icebp sti callq cwtl out pushq sahf insb movsb fwait std rex.WRXB outsl sahf pushq add (bad) lret icebp (bad) (bad) (bad) sti jns (bad) movabs rex adc lock scas (bad) (bad) pushq outsl outsl mov fwait iret js pushq rex.WXB repz (bad) (bad) (bad) (bad) decl push rex.WRX cld xchg cmc mov in sbb mov leaveq outsb or (bad) repnz rorb adc int js cmp xchg mov sub pop add add rex.WRX add rex.WR add (bad) add add sbbb jle (bad) add sbb mov add add add push (bad) (bad) add sbb sahf lea add (bad) sbb push sbbb scas lea add cli sbb (bad) sbbb mov add add add add sbbb (bad) lea add sbbb fimul add add add rex.B (bad) add lea add sbb movabs add add add add sbbb (bad) mov add (bad) (bad) add sbbb (bad) mov add sbbb mov add lock add sbbb mov add sbb lock rex.WRX add rex.WR add (bad) add rex.WR adc add xchg fcos (bad) jmpq jae setg stc adc mov btr mov cmp mov shrd setnp mov cmp jmpq jae bswap jmpq jne neg stc cmp or mov cmc movzbl sub shld sar bts mov je cmp clc cmp sub stc cmp cmp pushq clc cmp cmc cmp cmp jmpq test stc sub test jmpq (bad) int3 cmpsb mov sbb push (bad) loop outsb fisttpll stc cmp (bad) repz (bad) (bad) mov mov pop adc int outsl shr movabs (bad) mov pop jle test and (bad) and (bad) jge add add rex.WB (bad) (bad) rex.RXB or adc ja (bad) shl (bad) (bad) cld and (bad) (bad) (bad) (bad) cmp (bad) outsl (bad) neg nop subl scas rol (bad) (bad) (bad) (bad) mov (bad) icebp (bad) rex.WXB xchg (bad) jmpq adc (bad) je (bad) (bad) pop (bad) out cmp in rex.WB jnp adc sub jne push (bad) mov callq rex.W rex.X mov xchg hlt add rex.WX lods iret adc movabs push (bad) jbe or fisttpll sub lods adc out out jrcxz lahf rex.RXB push (bad) mov sti and (bad) jnp pop mov or (bad) insl (bad) imul and adc fs pop movd shrb mov (bad) (bad) decb (bad) (bad) repz fwait int idivl sti adc (bad) (bad) decl (bad) xchg or out out mov (bad) push cmp and xor sbb (bad) push cmp rorl sub jo mov jno or rex.XB imul and xchg add (bad) loope adc stc mov xor cmc bt clc cmc movzwl bswap shr stc mov stc add clc clc clc mov cmc stc stc cmp test jmpq rol mov test bt cmp jmpq pop (bad) xchg fs adc mov stc sahf xor in (bad) sahf (bad) mov jne jae and cmpsb rex.WB sbb test je add xor repz (bad) loop mov (bad) ds in cltd nop add out pushfq sbb jmp in shrl enterq or movsb (bad) jle out xor mov adc loop test or es jge adc xor jl xor (bad) cld test rex.WX (bad) mov lods fisubrl add add cmp jrcxz test mov outsb (bad) lahf lods (bad) mov mov movabs fldenv outsl or rex.WR rex.B packuswb movabs sbb sbb (bad) pushq xchg xor add out add push or rex.W nop push (bad) movl add scas test pop enterq rex.R and xchg mov test adc (bad) xor (bad) adc (bad) and xchg stc rex.WXB sub jl jmpq rex.RX sub sub jle xchg enterq stos pushq sti cmp imul (bad) (bad) (bad) (bad) (bad) xchg jg (bad) xchg (bad) (bad) (bad) callq mov mov lea fmulp (bad) push cmp cltd jl cmc jne push sbb (bad) cltd mov push outsb stos retq rex.RX callq add retq push mov sub and sti idivl imul loop fsts add insb pop movsb subl divl stos (bad) fnstcw xchg (bad) (bad) imul stos (bad) pop (bad) stos fidivr rex.WRX addr32 (bad) (bad) data16 adc or xchg mov and jle mov xor in in (bad) test adc and sbb mov (bad) fisubrl and loopne or push test xor jmp push rex.XB cmp subl notl (bad) jmpq callq clc or jmpq jmpq jmpq jae pushq jmpq je jmpq pop jmpq cmp bt neg stc cmp test cmp sub jmpq jne clc clc add jmpq jne sub and clc bts xor ror rcl (bad) hlt xor mov dec add cmc mov jmpq popfq fadds ds fild jp test mov stos mov lret cmpsl fs (bad) and xchg xor xor (bad) adc cli xlat (bad) xor rex.XB sbb or fld mov repz (bad) rex.WRB lahf rol (bad) (bad) (bad) cld lods rex.WXB (bad) (bad) (bad) (bad) (bad) mov jmpq imulb retq jne rex.WR sub lret data16 mov lea add and jne leaveq scas out push icebp movabs test add (bad) jnp mov (bad) (bad) rex or insl mov loop cld (bad) xor popfq cmc movabs add cmp (bad) lods mov imul enterq xchg or movsl (bad) jmpq push mov out outsb (bad) movabs mov sub (bad) jmpq or insl (bad) rex js scas jbe imul fsts in xor cmpl rex.WXB rex.WRB icebp popfq xor or or test imul test shlb fbld mov cmp or cmp push pushq jae outsl rex.WRX sbb (bad) (bad) (bad) sti out jg mov mov xor (bad) add add or (bad) mov jae cmp or movabs test jp adc (bad) enterq mull sub jge mov jb scas std (bad) or rex.WB mov rex.WRB push or xchg (bad) add jmpq lock callq and cmc push jns in (bad) testl sub sbb je movsl stc mov mov pushfq mov movslq xchg imul pop (bad) pop or push push imul lea pop mov icebp jmpq mov mulb jle sarl stos mov (bad) (bad) fs xor (bad) (bad) decb fmull add mov and mov rex.RX gs repnz loop ds cwtl (bad) mov (bad) rex.WRB xor gs jno mov fnop pop push sbb cs xchg pop xchg xchg sarl test cmp adc movb (bad) xchg (bad) rex.WB push sub jle (bad) adc mov rex.WRX and lea bswap pop jmpq add rex.RXB gs outsl fs imul add jnp sub outsl add js movabs fmull (bad) outsl pushq (bad) clc add movsl cmp mov xor jno int3 adc fistpl sub xlat rex.XB fistpll sarl repnz adc adc mov lods imul std (bad) sbb or (bad) (bad) ljmp jle mov pop in mov rcll jg rex.WRB int in (bad) add cltd (bad) (bad) jle decl mov cld test cld pop rex.RXB loope mul push xor xor stos adc xchg add add and lods jo xor movabs xlat jnp cmpsb popfq mov push retq ficom rex.WRX and adc sti push (bad) push in movabs adc (bad) fwait ja jne cmc stc imul stc jmpq jmpq mov mov seta lods cmc stc ror stc jmpq mov lea jmpq jmpq ja xchg xchg jno lea pop movsbq pop bswap movsbq pop lea jmpq bt add test jmpq scas cli (bad) montmul cmpsb sbb mov jl leaveq jmp andl xchg jbe jne sub mov xchg cmp fwait sub pop adc push es cmpsl neg gs scas cmpsl mov (bad) (bad) xchg rex.RXB or mov or (bad) sahf rex.RXB (bad) (bad) cltd rex movabs mov test in sahf push sbb mov flds xchg outsb or or adc rex.WRX rex.W rex xchg rclb (bad) lods (bad) (bad) (bad) std cmc jnp cmpsl or add add popfq rex.W rex.XB sti lret data16 or sub in (bad) (bad) mov cmp sub rex.B mov int3 insl add and jns xchg add mov push mov ds int mul shll movabs pop adc cld in in (bad) jle cmp lret xchg (bad) lret out gs fidivl insb mov (bad) (bad) (bad) shrb (bad) in rex.WRB rex.X rex.B mov imul movsb fcompl neg popfq (bad) (bad) (bad) (bad) out pop (bad) adc cmp add mov and fistpll gs (bad) ficompl (bad) cld test outsl movabs pop sbb (bad) (bad) jnp sti scas in (bad) mov (bad) (bad) cmc pop (bad) or jmp mov push xor sub bswap pop jmpq jae jmpq jmpq jno popq (bad) add jle mov mov mov add (bad) movabs pushfq xchg rex.XB movabs jno xor push outsl push fs or js jne jns xorl mov add mov mov sub adc rex.RB adc sbb (bad) (bad) (bad) (bad) std (bad) (bad) mov movabs cli cmc cmpsl xchg movabs jae fistpl (bad) (bad) retq imul add add jg rex.RX cmpsb enterq (bad) (bad) mov cwtl lcall ss outsl push cmp pop adc mov (bad) stc xchg add fidivr jne adc cmp adc adcb rex.WRB cmp jmpq jb test test clc cmpb jmpq push fninit fdivr lock adc xchg callq insl push test repnz sub flds cs icebp fldl test mov jae adc xchg rex.WRX pushfq xchg pop or retq jne pop lods jno mov xchg mov push stos (bad) (bad) (bad) cli pop xchg fmulp loop scas add add sub shrl xor cmp iret rex.WB loope loopne add add (bad) std jmp jnp add (bad) (bad) mov jae mov rol idiv (bad) (bad) cld push cmc mov cmp cmc or (bad) gs sub jae imul (bad) rex.WRB (bad) fmull cwtl mov lret (bad) mov stos pushq (bad) (bad) (bad) std rcrl movabs (bad) int mov cmp mov (bad) nop jl xor int fcoms std sub rex.WXB cltd addr32 (bad) (bad) or (bad) (bad) (bad) cli add (bad) lret outsb shr andb xor jg loopne loopne sbb rex.WRXB mov or jge rex.XB xchg mov (bad) (bad) (bad) jne mov (bad) rex.WX jmpq ja jmpq sub bsr bsr shr add bswap movzbl mov mov jmpq ja jo cmc imul jmpq jmpq js lahf jae rex.WX test stc icebp add xchg sahf rex.WXB jg sub and retq rorb cmpsb (bad) adc xor mov add push out imul (bad) out and rex.WRB adcb stc xchg movabs mov (bad) (bad) pushq adc rex.RX rex.RX rex.WX adc and imul (bad) fwait ss movslq sbb and pop xlat xor (bad) (bad) std cmc jnp xchg and add add popfq xor leaveq pop outsl lret cmp (bad) (bad) (bad) (bad) mov pop mov je callq or (bad) in in xchg mov rex.R push sti mov pop jmpq jmpq outsl pop (bad) leaveq hlt movabs hlt out leaveq xorl (bad) mov rex.RX cmc mul xor pop mov sbb icebp jae jnp cmp retq test rorb (bad) movabs fs cld out adc rex.WXB rex.W xchg stc xor (bad) jle fistpl stc (bad) or pop pop orb sti push rex.RB xchg (bad) repnz (bad) (bad) sti ja sbb (bad) std mov xor repz push and and and je and imul mov js jrcxz,pt cmp (bad) (bad) decl xchg adc mov lock add div movabs fidivrl pop xor lret pushq retq sbb mov and fildl mov push in (bad) insb jmpq mov mov pop mov ss popfq xchg std push or subl stos sbb movsl lret and mov je fs or pop mov jae rex.RB jmpq (bad) testb stc mov int3 movabs imul cmpsl lret insb enterq test (bad) (bad) (bad) std add jnp callq jmp add stc xchg mov out rex.WRXB push add cmp add rex.WRX rex.WRXB iret cli jmp pop lock (bad) cmp add add cli std fs adc in sbb rex.RX rex.WXB rex.RX movabs mov pushq sbb cltd jrcxz scas jg or jae xchg mov in mov lods xchg mov push shlb imul (bad) add mulb add mov test xor mov mov xchg (bad) je add xor jle add (bad) xor cs cmp std (bad) cmpsl mov in or stos sbb hlt (bad) or jne (bad) rex.WRX cld rex.WRX test outsl (bad) lahf rex.WR mov lods cmpsb xchg (bad) imul icebp out je rex.WR (bad) (bad) cld cmp (bad) decb or (bad) jns cmp (bad) (bad) (bad) dec rorl std xchg imul stos (bad) pop pop xchg cmpsb mov mov (bad) (bad) movsb enterq stc outsl leaveq mov push cmp loop cmp (bad) rex.WRXB rex.X loop (bad) fidivrl stc shlb rex.WR xor negb cwtl cmp jno and je push mov rex.WR mov cmp pop movslq ja mov rex.WB rex.WXB int3 xchg push rex.WRB jnp pushq xor movabs (bad) out jbe mov sub sub popq (bad) (bad) (bad) cld rex.RB xor pop (bad) mov cwtl or pushq subb (bad) insl test mov xchg imul jnp icebp (bad) (bad) (bad) (bad) callq int3 mov rex.R clc rex.W and test (bad) (bad) (bad) es (bad) (bad) or rex.WB jo or movsb enterq (bad) or jle push int adc std (bad) mov pop testb je (bad) decl fs fstl pop jp adc mov cld in scas sbb retq pop mov xor mov outsl xchg lret cli callq mov pop jge jb (bad) (bad) icebp in scas lea rex.WX outsl and jbe (bad) repz (bad) (bad) (bad) cld (bad) outsb movabs add test and movslq sbb outsl rex.R (bad) leaveq je cmp or jp clc sub imul iret or (bad) (bad) callq imul fwait (bad) sbb in add mov push add (bad) cmp movabs or xor jns cmp and lods roll adc mov pop imul rorb ja rex.W rex.X testl fidivrl jb adc xchg repz mov movabs hlt (bad) in xchg mov hlt mov adc xlat mov lcall out mov lods sbb sahf nopw sub (bad) mov xor (bad) jbe (bad) fstpt (bad) roll (bad) jb (bad) scas in rex.RX cmpsl xlat mov pop out (bad) sub stc cmp cmp jmpq bswap not mov setb movzbw movsbq mov not mov not movzbl lea jmpq jne btr bswap data16 (bad) mov bt stc add cmc cmc stc movzwl ror adc rcr bswap mov cmc add stc test mov cmc test test jmpq xor and int fucomip sbb rorl rex.W sbb outsb rex pop stc stos rex.X out lods lahf adc mov cltd ror cmp jns mov xchg adc cwtl sbbb mov rcll rcl pop mov jrcxz adc rex.R (bad) xor (bad) push jns lret (bad) mov sbb mov xchg jp jo cmp xchg loop (bad) (bad) (bad) sti clc or (bad) (bad) decb or xor (bad) imul insb (bad) mov sub (bad) (bad) pushfq (bad) (bad) (bad) decl mov (bad) sub or rex.RXB test test sub xchg rex.WXB push pop (bad) jg pushq (bad) movslq rex.WX sbb (bad) jrcxz repnz pop fwait sub or xchg sbb add xlat sub and shld mov sbb mov neg shr mov shl mov xor shl add test lea ror shr rcl or xor mov adc ror add jae bswap mov jmpq stc clc add jmpq pop jle mov mov pop retq jb bt cmc stc cmc cmpb jmpq jmpq stos jmpq jmpq cmp mov repz xor mov xor rex (bad) ja data16 (bad) sbb and mov sbb (bad) movabs jmpq add insl cmp (bad) rcrl repz jg mov rex.WRX (bad) hlt push loope (bad) test (bad) or (bad) (bad) adc mov mov xchg adc rex.WRX (bad) mov (bad) mov mov test (bad) (bad) (bad) cli jo sub (bad) sti sub shll iret mov (bad) (bad) (bad) std jo adc pushq callq xor (bad) popfq push mov lret rcll sbb fldcw add xchg imul mov push cmpsb enterq cmp xchg pushq mov fsubs add div pop cmp adc rex.WX (bad) hlt pushfq cmp insb (bad) (bad) ja ja push cmp mov and jns rex.RXB push (bad) rex.WRXB jnp (bad) iret ss mov lahf (bad) (bad) (bad) (bad) (bad) std fstps sbb sti (bad) out imul je jae (bad) adc movabs pushq push (bad) (bad) fistp push (bad) in (bad) mov lret (bad) (bad) pushfq adc out (bad) rex retq shll stos push add fstps push rex.X sbb jo adc pop pop movabs or shrl add add jrcxz retq jne out mov sarl sbb add or push callq pop xlat push lods mov es (bad) divb or jg mov cmc stc jl icebp (bad) loopne mov icebp jg cmp ds fs stc push xlat rex.X rep scas shll fisttpll (bad) lret iret fnsave xchg adc mov int3 pop je scas mov (bad) sbb in pop rex.XB and xchg cli sbb test fnstsw add repnz add test sbb add mov or sub cmp dec ror rcr mov bt bt sub test stc bt test pushq cmc cmc cmp jmpq fwait mov fisttp (bad) pushq or (bad) loop jmpq sub jno pop rex.XB add movsl push add jl imul lret pushq jo jrcxz (bad) rex.WRXB xchg shrb or push jge (bad) stc (bad) mov mov (bad) mov pop sahf fadd ss mov sti cli xlat (bad) rex.WRB fs (bad) (bad) decb pop je or icebp pop fwait jbe jne fstl (bad) (bad) push and (bad) (bad) out sbb xchg rex.WXB adc adc or out rex.WRB movl ds pop adc mov loop (bad) stc pop cmp xchg xlat mov test jge mov pop lock pop cmpsl fisubl (bad) jmpq jmpq jmpq cmp cmc movzwl rol mov stc bt jmpq jmpq fwait stos pop xchg sub (bad) (bad) (bad) jbe (bad) sub pop pop sbb and pushq sbb xchg add adc mov jbe out rex.RB scas push xchg je pop (bad) xchg movabs pop (bad) or (bad) decl add adc int3 jmp pop cmp sub xor (bad) outsb out incl rex.WX add rex.R test clc sub (bad) imul rolb sub add add sub cltd add cmp mov rcrl icebp xchg lea ss adc rex.WX (bad) adc xor mov mov callq xor (bad) (bad) cmc test jmpq jmpq jmpq cmp jmpq je setl movsbw mov setnp mov movsbq jmpq jne rcr xor rcl shl mov cmp or jmpq jmpq jne cmp stc bt test movb bt test jmpq (bad) xchg push (bad) (bad) cmp sub fdivr xor lret adc mov fstpt mov callq in jmpq rex.WRXB mov rcrl and out cmc sbb add sub lahf mov or fcomip pop sbb fwait add movsb mov adc sub mov ss sub rex.WB movabs fstl rex.RB add (bad) (bad) (bad) fsubrl in or mov and mov (bad) pop rex.X retq push jg mov incl adc push ss ja punpckhdq add (bad) (bad) xor pop (bad) or movabs push not jmpq cmpb jmpq lea lea not pop mov movsbw pop retq jmpq add sbb cmc (bad) test jg rex.WRXB cmp imul movabs cmp (bad) rex.RB loopne lods mov rex.X pop sbb and mov (bad) pop jo sub (bad) rcrl jo and cli stos jg movabs fs push (bad) jge in ja movabs pop out (bad) (bad) sub xchg rex.B or (bad) (bad) and mov or and scas leaveq decb (bad) (bad) (bad) cld rex.X (bad) xchg mov (bad) mov jbe fcmovnb add mov sub (bad) cmovs adc jno addr32 movabs fdivr (bad) (bad) cld popfq add jnp (bad) (bad) (bad) mov (bad) mov xor cmp movabs ss outsb adc add add xor movabs add cs and mov or pop mov xor rex.WRX jns xchg sub sbb sbb fs pop pushfq mov cli shll xchg retq mov movslq repnz jg sub (bad) sbb movabs (bad) or sub mov pushq fsubr xchg and nop (bad) iret fadds sti (bad) not stc rex.WRXB rex.RB ds (bad) fdivr cmc xor movsl push rex.R ss (bad) roll sbb mov add idivl (bad) fs cmpsb mov (bad) outsb jae fbld out loopne mov mov and (bad) pop jo xor lods test xchg (bad) (bad) (bad) (bad) (bad) mov test pushq (bad) rex.XB test or add add (bad) xchg (bad) mov pop xor rex.RXB out rex.WX sub (bad) xor rex.WRB mov add sbb lret sub fistp add out adc out mov fs lret retq xorl nop rex.W fdivrl xor movabs or lret mov sub (bad) adc cmp movsl cmp pushfq mov fildll sarb or callq insb iret xchg repz pushfq (bad) and jle adcl (bad) (bad) (bad) mov pcmpeqb movabs mov (bad) retq fisttpl ficom cmc push repnz cld pushq (bad) adc sub cmp rorl cld (bad) xor lret xlat xchg sub mov fs mov notb cs and (bad) repz mov xor cli mov sub rex jl movabs in negl out std loope xor and xor sbb or cmc cltd xchg rex.WXB or lods shlb (bad) int cmp xchg fldenv or pop adc gs movslq (bad) (bad) (bad) decb movslq (bad) adc mov (bad) (bad) xlat rolb (bad) jrcxz or push xchg idivl pop movabs rex.WR test pop adc idivb pop lods adc sub vsqrtsd fcompl loope sub rex.W fs (bad) (bad) cmpsb (bad) movsl cwtl jnp lahf jge movsb sbb push cltd pushq repnz xchg lods cld push (bad) mov add (bad) (bad) (bad) in lods jo cmp cmp sbb xor (bad) adc (bad) mov fbstp rcll add (bad) movabs sub ss nop loop mov xchg sarl (bad) test imul movsb xchg (bad) xchg stc xor incl cltd mov xor (bad) jrcxz jno test test je (bad) mov repnz (bad) addr32 (bad) (bad) clc xchg add rex.X xor (bad) leaveq sub notl cltd mov sti cmp pop cmp push sbbl rex.WXB (bad) (bad) decb stos test xchg (bad) mov in iret pop clc xchg cld jbe xor retq push icebp popfq cmp (bad) jle mov addps repnz rex.WX xchg (bad) pop rex.R test data16 pushq pminub test test test xor pop mov jmpq cmp movabs (bad) mov (bad) rex.WR movsl xchg adc (bad) (bad) rex.RXB lea bswap mov jmpq lea movsbw mov jmpq je stc sub test cmc cmp jmpq shr mov clc cmp bt clc and cmp je add jmpq loope fnstenv mov cmp sbb and push lods rex.RX or pop imul fs push (bad) push rex.WXB shll rex.B pushq (bad) jp and adc xchg retq test imul cmc pop sarb (bad) xor cmp in movslq mov mov movabs add scas movabs ss (bad) (bad) (bad) (bad) cld (bad) lock fwait (bad) mov jnp fcmovb add movsl mov push add jg (bad) mov jno sbb and movslq jae (bad) mov cmpsl mov movabs movabs mov out pop push or out out cmp (bad) (bad) sti (bad) js rex.WR (bad) (bad) (bad) (bad) js pop sarl mov (bad) jp enterq or and rex.WX imul (bad) cld out adc jbe mov leaveq xor adc (bad) fildl (bad) (bad) (bad) (bad) clc jmp pop mov rcll jo and rex.WXB rex.B or sarl fsub test add rex.X mov movsb jne retq (bad) rex.RXB jns pop out jl callq mov imul (bad) or add test movabs sub bsr mov cmc cmc clc sub jmpq jmpq je jmpq adc jmpq xchg test stc jmpq (bad) (bad) test mov (bad) pop cmp hlt out xor callq imul (bad) push xchg xchg sti xlat add sbb jp data16 test cmp (bad) or fidivrl xorl fdivr fistpll fcmovu (bad) rex.WRB mov in jmp vmwrite subl (bad) nop cmpsl scas pop in (bad) pushfq xor hlt cmp rex.WRX rex.B (bad) fdivl and loop (bad) push inc in (bad) xchg (bad) nop xchg (bad) (bad) cmp pushq rex rex.W (bad) (bad) cld mov (bad) (bad) (bad) dec decb jb mov push add add rex.WX sbb cltd cmp add movsl retq mov cld outsb (bad) pop or in mov je rex.WX sahf leavew pushq loop jrcxz and ss btc or rex.WRB push sti mov clc rex.W cs (bad) jmpq xchg stc xchg pushq jmpq jb cmc bt stc cmc cmp jmpq jg jg lea xchg jmp fsts rex.XB pop sbb (bad) or (bad) cmp jb rex jmp add lea and stos js lods test leaveq jp add xchg faddl sub jmp and and pop jae fidivl ss movslq (bad) lock jmp leaveq mov clc fdivr (bad) (bad) cld faddp cmp test (bad) (bad) (bad) icebp roll and imul add add jno cs xchg lret sub rex.RXB loop insb gs cmpsl push testb (bad) cwtl mov retq rex.WRXB (bad) xor cmp in retq movsl hlt movabs cmp fdivs lret gs rex.W or mov imul xchg jb bt cmc cmp cmp jmpq je stc cmc test add cmp cmp jg jb jmpq jnp mov out mov sarb (bad) or sub mov adc cmp test out out pop test jne rex.WX mov (bad) mov (bad) cmc mov fbld sar (bad) (bad) ja stos mov push lahf mov std rex.W xchg fimul (bad) movslq pushq cld in rcr (bad) std nop icebp out stos sbb add sti out sbb xchg rex.WRB xchg js cmp fnstsw rex.WX (bad) fisubrl (bad) test (bad) loope rex.B (bad) ss sahf sbb enterq (bad) (bad) (bad) fcmovnb or (bad) mov cli in jbe out (bad) sahf add add pop (bad) xor sbb jl (bad) repz adc adc lret (bad) icebp out mov hlt pop xor mov (bad) xor stc jmpq outsl adc xor mov test (bad) movsl or add cmc clc cmp jmpq jmpq add mov movsb (bad) pop rex.X and fs es push out push (bad) xor mov rex.W rex.RB mov xor fbstp push test (bad) adc leaveq bnd fidiv rex.R rex.WXB rex.WX data16 or xlat mov sti movabs mov cmp ja adc imul repnz add sbb cld fwait rex.RB ds (bad) (bad) (bad) decl and mov retq out mov and addb movslq jae stos mov hlt push loope callq jle cltd mov mov ja (bad) test mov movsl leaveq (bad) icebp movabs ss xchg or cmp test imul cwtl mov rex.WRX add push cvtps2pi movslq rex.XB mov shlb stc adc cmp xor je mov cmp lret movslq rex.RX rex.X rex.WRB iret mov cmc mov sub add push fwait rex.RXB (bad) test sbb xor push pushq mov lcall or outsb je jno mov push mov cmpsl mov cld push iret (bad) mov jg (bad) and test cli retq rex.WRXB retq mov shlb and loop mov pop jb or xor (bad) loop or movabs xchg mov in rex.WX xchg cli jne imul ficoml and data16 push and int3 lods sub sub stos push rex.WRX cmp adc pop pop sbb pop (bad) fidivr jrcxz mov outsl mov adc in (bad) jmpq movabs stc clc cmc clc test jmpq pushq fnstcw add icebp adc sbb insl mov push test test rex.W adc adc add (bad) jns in xchg mov shlb pushq mov mov (bad) faddl mov mov fcomi popfq nop mov sahf pop pop rex.XB push repz mov xor push xchg (bad) (bad) (bad) decb lock fimul sub (bad) (bad) mov cli cmp stos retq movsl cmpsl movabs pushfq cld movabs (bad) (bad) ljmp xor lods mov sub pop fwait callq xchg mov jb out std (bad) mov mov sbb pop jge (bad) scas jle xor hlt movabs out iret jle jmpq icebp push clc pushq push movabs test movabs lods push sub adc push cmp (bad) out insl xchg rex.W jbe rex.B jg xchg mov out std or (bad) clc jnp (bad) ficomp rol pop xorb mov add in subb and jo rex.WXB rex mov enterq sbb xchg pushq sbb callq jge popfq gs mov (bad) mov sbb sahf rex.WXB adc addr32 jno insl nop sub (bad) jmpq jmpq add rex.RXB gs gs imul (bad) (bad) jmpq test jmpq out retq sahf pop adc (bad) rex.XB rex.WB jp xor mov callq shlb nop out sar jle adc sahf pop pop add (bad) test fbld in pop mov and rex.X push mov (bad) outsl rex.R rex.XB or jmp insl rex.WRX rolb loop adc rex.W jmp cmp and and (bad) rex.WX xor (bad) (bad) cld add (bad) (bad) (bad) (bad) sbb out in xor mov movabs cmp imul pop (bad) xor hlt or pop (bad) xorl sarl test pushq fdivrl or test test rex.XB cmpsb xchg (bad) cmpsb vpcmpeqw (bad) orl xchg in cs adc pop out retq addl mov cmp add jmpq je dec and push adc (bad) icebp (bad) bt cmc mov adc sub clc sub setle lea jmpq jmpq pop or clc sarl adc mov in xchg push (bad) mov test (bad) gs sbb jno jo pushq fs xor leaveq push mov (bad) iret (bad) xchg rex.WRX jno rex.B imul stc addr32 mov mov movabs clc sahf test testb add (bad) (bad) (bad) sti (bad) cmc (bad) cli mov (bad) (bad) std jmpq ss add movslq mov jge mov pop mov xlat sbb in rex.XB adc icebp gs out rex.WB mov xchg (bad) (bad) (bad) inc repnz imul (bad) jnp (bad) out retq pushq outsl jg mov rex.XB fnop (bad) fistpll enterq xchg lahf std pop std (bad) jle sahf sbb mov loopne ds mov xor push add mov je mov in lea bswap lea pop retq push or jge out mov (bad) out shr sarl mov sbb gs cmp rex.WX (bad) xor out out xchg rcll xlat add push (bad) cmp and (bad) cli rex.W sbbl fdivrs stos jb popfq int mov rex.RX mov repnz (bad) and push movsl (bad) movabs pushfq clc rex.WX add pushfq mov (bad) (bad) (bad) cld pushfq fldcw rex.WX (bad) (bad) (bad) scas (bad) pop pop movabs (bad) and (bad) testl (bad) sub (bad) jmpq adc or sub adc hlt push or (bad) rex.W or imul and enterq xorl test adc jo pop rex.R bswap lea jmpq jne bswap mov jmpq jb clc test jmpq jle mov add movabs mov sti cmc adc (bad) (bad) mov jae and jp cmp rex.WB mov (bad) (bad) jg shll pop mov movsl test xchg cmpxchg xchg jp add (bad) pop pop cmp lret xchg cmc push cmp adc rex.WX cli (bad) and rex.WXB push jno (bad) (bad) cld cmp push (bad) (bad) (bad) (bad) decb fiaddl loopne cmp imul xchg retq pushq dec cmp jbe idivb cmpsb xchg rex.RX loope in pop xchg rex.W or adc nop cwtl negb ss adc and or outsl sub rol data16 movsb scas (bad) mov jne pop or (bad) add jmpq stc cmc add bt test stc add clc test cmp sub jmpq fsubrl xchg adc in lret fcoms repnz stc xchg rex.XB lahf adc push pop pop jle cs stos (bad) rex.W imul movabs rex.WRX cld rex.B or adc sub (bad) retq callq adc (bad) push or leaveq lcall lret pop xchg xchg in fwait cmp (bad) (bad) decb (bad) (bad) (bad) decl xlat insb mov push sub xor pushq popfq outsl or pop mov push mov movabs push stc (bad) addr32 adc (bad) movabs cmpsl cmpb rex.RXB and (bad) ja sub lock out mov jp mov clc repz jno cmp mov fwait cmp (bad) in sub mov jbe (bad) pop cmc movzbw movsbw mov mov not mov movsbw mov jmpq test sub clc shl jmpq stc bt imul cmp jnp cmc clc add jmpq jne stc movb jae stc stc clc test jmpq shll lods rex.WR nop fmuls (bad) mov mov push and (bad) outsl imul (bad) (bad) loopne mov (bad) xor mov (bad) callq mov int3 movl add adc push rex.WXB sti (bad) pop or mov callq rex.WX or sti jns movslq adc imul (bad) cmc out or mov sub jrcxz iret adc mov jmpq test mov rex.RXB div or sahf lock nop or rex.WRB fnsave (bad) (bad) (bad) cld pop pop or (bad) (bad) outsb pop (bad) xor mov pop sub scas roll (bad) (bad) (bad) (bad) out push movabs xchg mulb (bad) movsl loope pop rex.RXB (bad) rorl or sub ja andl mov (bad) mov sub push xor jb cmpsl scas movabs je cmp stc test jmpq pushq jmpq jmpq add add add add add sub add xor add mov addb add (bad) and addb add add sar cmc bt cmp cmp movsbw lea lea lea pop jmpq jb bt jmpq jmpq xchg imul mov cltd xchg sarb in rcll jg or (bad) mov out (bad) jb jge add mov roll loop jl (bad) std jb es mov push (bad) and xorb imul xor cmp mov test lods cmp (bad) jns in rclb test lods rex.B (bad) (bad) cld js fcoml movsl (bad) (bad) (bad) decb rex.R xchg movabs add add movsb mull (bad) or mov (bad) add add adc jl jl xchg loope xchg fidiv (bad) add xchg jns sbb (bad) push mov callq (bad) pop cli clc add jno cmc mov cmc stc bt test jmpq jne test movb test jmpq jne and mov bt shr shld sbb sub sub mov jle cmp sub bt pushq clc cmp cmp jge ja bt dec add sub seta rcl or jmpq jae cmc rcl bsf shl mov stc mov neg bswap inc mov bt cmp xor cmc cmc stc cmp repnz jmpq callq btr bsf add sar mov jmpq jae jmpq add and xor rex.RXB (bad) xor rex.B (bad) enterq xchg xor or (bad) (bad) je or jo mov mov sub sarb movabs jrcxz retq hlt push sti scas stos int lret imul test adc clc mov cwtl rex.WRXB push insb cmc mov adc enterq sti push jmp (bad) and insl loopne rex.XB jnp jb adc in add (bad) (bad) mov cmp outsb nop mov (bad) imul ss (bad) (bad) xchg cmp (bad) (bad) jl and retq add stc sahf mov (bad) rex.WB rex.RB and ss xchg movabs mov rex.X mov jg add sub mov out bswap imul in mov movabs leaveq (bad) (bad) (bad) sti repz rex.WR rex.RB (bad) (bad) incb (bad) (bad) xchg push rex.W cmp movsl scas mov (bad) incl movabs loope std cmp shrl adc ja sub cs fcompl callq (bad) mov scas popfq adc (bad) imul in test bt mov cmc test test jmpq movsbw mov setnp bswap mov movsbw mov jmpq cmpb jmpq sbb lods pop pop cmp xchg xchg mov (bad) pop (bad) rex.WB fist insl (bad) rex.WXB div (bad) scas movsb rex.RX enterq int3 mov (bad) add out rex.WRX sub push mov (bad) std fwait stos (bad) movabs fdivrs mov adc (bad) (bad) std cmp imul (bad) cmp je icebp (bad) test lock in (bad) and or adc (bad) xchg push (bad) and movslq rex.RB rex.WRB imul movabs push cmc cmpsb add add or movabs (bad) retq jge (bad) jae movabs mov int fucomi jnp loopne lret cwtl (bad) cmpsb cmc pop callq gs (bad) rex.R jne jl test jmpq jmpq stc test jmpq pop adc sub (bad) jmpq mov xchg mov cmc hlt mov sbb fildl pop cwtl jno (bad) (bad) retq loope pushq cmpsb push jle sub out test adc or or jmpq sbb nop (bad) fcomps sub and xchg sub (bad) add sub (bad) scas sti cltd rex.WRXB (bad) jno rcrb jmp (bad) (bad) rex.WB (bad) (bad) std js rex.X sbb cmp cmpsb retq (bad) pop rex.X jl stos (bad) (bad) (bad) (bad) push cmpsb test jb jno jp and and retq (bad) clc mov sbb xchg add add popfq and lahf jb nop rex.WRXB sbb loope rex.WRXB (bad) (bad) (bad) in (bad) or jae (bad) imul jl or (bad) jl loopne rex.RXB rex.XB ds ficompl rol (bad) fs (bad) rolb xchg push sub retq push es jg push lods mov lret (bad) in (bad) or enterq shrl rex.WRB xchg hlt out adc jae scas rex.WB jl xor jmpq pushq or mov pushfq rex.WRX mov imul mov sbb jbe or rex.XB negl and add out pushq xchg (bad) cmp cltd cmc popfq cmp push cmp pop jae cmp (bad) imul rex.WXB movabs outsb pushq mov (bad) jmp repz int3 (bad) mov and xor (bad) (bad) insb out cmp xlat jp cmp test rex.WR std pushfq sbb adc sub sub (bad) adc mov jg nop mov add push (bad) je imul jae add jmpq xor clc cmp jmpq add push jb je imul (bad) (bad) jmpq popfq jae xchg rex.X (bad) add cmp incl scas pop pop ja push xchg jrcxz fild jle movabs pop movabs mov add cwtl sbb scas rex.XB or pop ja (bad) js adc (bad) lahf add cmp adc pop push jb jae cmc movslq and lods imul jmpq mov (bad) js fist adc rex.RX (bad) pop jrcxz nop (bad) sar pxor jmp (bad) mov stos cmc push and (bad) decl (bad) loopne pop cld xchg pop jge cmp (bad) add sti (bad) adcl test stos int adc fstpt clc mov sbb (bad) rex.B and xchg addr32 (bad) (bad) clc stc sub or btr shld add not bswap mov not mov jmpq jmpq jmpq mov bt jmpq jmpq callq jmpq jmpq clc stc stc clc cmp movzbw movzbl lea movsbl pop jmpq (bad) jne (bad) xor xor test sbb (bad) and sub in movsl jnp push in out out (bad) nop movabs callq xchg jrcxz roll push mov jmp (bad) mov stos sbb mov (bad) mov mov jo fimull push mov pop sbb pop mov vpcomuw (bad) cld jbe enterq (bad) (bad) decb lret test push fs pop cmp cltd add add or adc (bad) cmpsl rex.WR xchg rex.WX sahf mov rex.WX repnz jne (bad) jbe cmp rex.WR (bad) xchg clc shll rex.XB push (bad) insl mov outsb (bad) pop leaveq pop mov (bad) adc lea jmpq adc adc rex.RX (bad) mov sbb mov mov scas enterq ss mov pop pushq imul lock mov adcb shr rex.WR in (bad) push rex.WB (bad) mov xlat pop xor movabs cmpsl outsl cld sbb rex.R (bad) mov xlat sar (bad) std pop xchg cmpl jne (bad) nop ds movabs lahf (bad) add mov add add fwait jg or gs mov in (bad) xor (bad) (bad) fld mov jl mov es (bad) sub jno sarb mov notl xchg clc push ss xchg mov (bad) rclb rex.RB (bad) jmpq (bad) hlt add cli or lea mov data16 lock xor sar bsf mov add add btc inc push sbb rcl movsbl mov setl xor neg (bad) lock btc sar rcr push shr sub setp sub push test push bsf sub push inc movzbw mov test bt test jmpq jmpq cmc (bad) push movabs enterq xchg andb adc test mov adc in xlat flds rex.WB (bad) jne rex.WXB mov sub push stos add (bad) repz mov xor adc fistpll (bad) movslq pop add sbb sbb and (bad) cmp (bad) (bad) sti xchg repz (bad) (bad) (bad) std movsl lock rorb sbb sub test test imul (bad) lods (bad) fidiv xchg (bad) xor jo imul cli nop leaveq (bad) (bad) (bad) (bad) std andb fdivrs and mov xchg stc add in stc mov rorl pushfq mov pop stc lcall jno je mov rex.WRB mov test int3 test test jmpq jmpq cmp jmpq je adc cmp bsr lea push bsr mov inc movzbw test sub setle lea movzbw lea jmpq lea jmpq jmpq jmpq callq jmpq jb stc stc cmp jmpq jmpq imul xchg sub movzwl add mov fnop mov ficoml sub mov je xchg callq icebp pop (bad) jg mov xchg (bad) pop icebp (bad) (bad) stc cmp xchg lret sti or adc jle in movabs jne (bad) insl scas test (bad) (bad) movl adc rex.R movabs movsb loopne movabs (bad) (bad) (bad) (bad) std sub (bad) (bad) (bad) cmp es (bad) in xor sub add cmc sarl mul (bad) gs imul add ds push in pop mov js or mov cmc pushfq mov (bad) mov and (bad) sub movabs adc adc rex.X addr32 pop adc xor jb sbb add test retq (bad) adc scas add icebp and cli je jp ss fmul cmpsb lods sti movabs imul negl rex.WB rex.X jne xor test mov andl lahf idiv adcb sbb frstor in adc (bad) (bad) roll imul (bad) test (bad) pop (bad) movabs sub (bad) (bad) (bad) cld jne sti pop pop (bad) (bad) (bad) decb (bad) cmc (bad) lret and rex.B std add add or out movsl lret jo rex.RXB retq push test pop insb cli xor sub movabs loop (bad) test jno jns repnz ds jbe mov xchg (bad) mov cmc mov lea movzbw jmpq push add jbe (bad) lods gs (bad) xor rex.WX stos rex.RXB rex.RB jg and lret scas mov (bad) pop adc sub movabs orb rex.RX hlt in rex.RX ss sbb nop popfq movabs test leaveq lods cli or xor es (bad) or pop rex.XB imul (bad) (bad) (bad) sbb add add xor sub packsswb mov pop pushq rex movabs and rex.RB cs out (bad) retq test ds (bad) xchg loopne pop stc (bad) mov pop xchg mov js scas enterq jbe (bad) popfq int mov xchg jo (bad) lret lea (bad) je (bad) or retq mov jg add and rex.WR jns mov ds subl cmc mov adc adc cmp stos (bad) or adc xchg and rex.WRB movabs (bad) (bad) (bad) (bad) cld push (bad) pop icebp sar (bad) (bad) add stc xor sahf sub ror jg mov out fcmovnu cmp retq xchg rex.XB cs (bad) cld (bad) mov (bad) mov adcb (bad) outsb (bad) sub cmp (bad) addr32 or rex adc je cli sub rolb lret pushfq ljmp lods push leaveq pop shl lods (bad) sub sbb mov pushfq rex.RB repz mov rex.RX rex.WRX mov xchg (bad) add lcall mov pop scas jl enterq push cmp movabs and rex.WB data16 xor cqto stos sub push cmp cli sub std cwtl (bad) int3 rex.WRXB sbb insl pop cmp (bad) (bad) (bad) incb xor pop push add ja jae (bad) lock add add and pop shr cmp rex.WRX rex.WRB outsb jno imul std (bad) sub retq push jmpq fstpt adc mov add stos lea xor pop out mov mov rex.WB pop lea xchg rex.B xor out push (bad) jae and loopne fsubr lea lods nop rex.RX loop add negl fwait (bad) jge push rex.WR rex.WRX mov cmc cmpsb clc cmp pop out insl (bad) (bad) movsl decb sub lret mov cltd pop repnz pop fcomps (bad) mov in imul (bad) rex.X int (bad) js mov sahf stc xchg add shrl (bad) jp adc jl sub rex.W rex.RXB enterq cmp pop mov (bad) fimull adc mov pop lret sbb rex.RB sar lret cmpsl mov cmp mov (bad) jno rex.WRXB rex.R ficompl (bad) cld rex.XB cmp jg (bad) (bad) (bad) push nop in pop retq cli push sbb adc jmpq cli add add adc (bad) (bad) push lret mov and jrcxz (bad) and jno rex.X fwait stos add jne sbb jo (bad) fcoms je xchg out (bad) pop sub xchg rex.X (bad) shr add int3 (bad) xchg xor adc rex.RX int3 out rex.WRB (bad) xlat mov mov (bad) (bad) (bad) callq mov and pop rex.X pushq scas (bad) (bad) cli repz rex.RB imul movsl outsl ror sbb mov lods pop lock (bad) pushfq xor sti (bad) cmp es add mov mov jae add rex.WR movslq rex.RX add (bad) stc clc ror jmpq jb test clc je cmc cmpb jmpq pushq jmpq shrl mov mov movabs jne (bad) rol out adc jl and cmp insb push cmpsb mulb jmp lods adc lahf cld adcl in mov stc mov (bad) retq mov xor loop leaveq and and pushq (bad) cld xchg mov pop push (bad) (bad) (bad) (bad) cmpsb lods cwtl lret (bad) xchg add xor sbb add es (bad) adc sub adc (bad) mov jb mov (bad) xchg rex.B int3 fdivrl (bad) (bad) sti xchg test (bad) rcrb add sarb adc add add xor add adc lods or mov dec bnd hlt cmpsb mov sub and sbb imul insl mov adc add lahf cmp jle callq (bad) adc sbb xorl rex.RX jae sti jle pushfq xchg xchg (bad) (bad) (bad) cld pushfq cmp int3 (bad) (bad) (bad) (bad) scas xor clc pushq jmp loopne xor (bad) sub mov cmp cmp pushq sarl lahf (bad) cs adc sub rex.R fimul in movsb (bad) (bad) imul mov add add lahf and sbb (bad) mov cmp mov pushq or and sub adc iret mov pushq (bad) repz iret sahf mov sub rex.WRB adc jp imul setne lods stc rcr ror mov add rol clc neg and sub sets not shl not (bad) repz not stos jmpq mov js xchg fcmovb hlt addr32 push mov cmpsl cmp (bad) divl mov (bad) rex.RX jns retq mov adc out sub (bad) and pop cmp (bad) cli mov mov fidiv and shl lods pushq (bad) pushfq xchg rclb out outsb (bad) cld popfq push (bad) sub cmp cmc pop fsubs pushq imul retq sub outsb (bad) outsl (bad) ds or stos roll mov (bad) (bad) push (bad) or callq xor rcr bswap mov cmp cmc jmpq cmp jmpq jne bt clc add cmc jmpq iret rolb jle pushq je (bad) mov add mov jns nop cld (bad) xchg cli iret jnp push or loope pop (bad) xchg mov rex.WX mov repnz repnz pop loope sbbb xchg sti hlt xor sti fildll leaveq xor lret (bad) sbb xor jl and cwtl jo add test or (bad) rex rex.R cmp rex.RXB (bad) (bad) cld xor (bad) (bad) (bad) decb je mov push cmp add movabs (bad) dec rex.WRXB push jmpq push xor clc outsb (bad) (bad) in adc or lcall retq fbstp (bad) adc cmp push ss (bad) hlt jmpq (bad) es (bad) sub scas adc (bad) icebp (bad) mov jmpq rex.R scas (bad) or (bad) cmc (bad) stos out jrcxz rex.RXB push rex.W sbb mov nop or sbb mov lock mov lock movabs add or cli mov rex.XB push (bad) movsl rol xor shll adc repnz add repz push sbb jo sub test add cmp movslq mov (bad) pop and (bad) rex.WR rex.X (bad) enterq cmp jnp xor movabs (bad) ss repnz or xchg std out imul mov (bad) fimull jb out (bad) leaveq mov (bad) in in js movslq mov int3 mov or xor cmp xlat lock rex.WXB (bad) (bad) cld xchg js popfq adc (bad) (bad) (bad) stos js stc mov callq mov (bad) movl or rex.RX stos rclb (bad) mov xchg test mov push insl (bad) (bad) jae loope rex.X movabs cmp add add pushq sbb sbb je (bad) mov lret push rol sbb leaveq pop retq (bad) stc cwtl test rex.WX rex.WRXB (bad) (bad) jp rex.XB xor cmp sub mov xchg (bad) test in mov add out shlb push repnz xor in addr32 fisttpll (bad) div scas lret sub (bad) cmp jle mov leaveq jmpq adc mov cld jmpq rex.WX lock rex.RXB rex.WRB test pop mov cmp iret or (bad) (bad) std rcrb addr32 and hlt mov std (bad) xchg cwtl xchg (bad) (bad) jmpq popfq cmp clc lret adc scas rex.RX rex.WRX je rex.WRXB rex.B xchg leaveq pushq cmc xchg notb mov jae (bad) mov cmp (bad) insb pushfq mov xchg mov out movabs and rorl retq jmpq jmpq jne sub btr dec bsr mov clc cmp clc cmp add test movzwl sbb or cmc data16 (bad) mov test cmp cmp add clc jmpq shrd (bad) movsl mov jle cmpsl (bad) mov icebp xchg (bad) or (bad) (bad) icebp xor cmpsb and mov add mov or jrcxz add cmc xchg cmc sarb or loop rex.W rex.XB movabs mov push rex.WXB mov (bad) (bad) (bad) cld mov imul mov (bad) int3 callq lea callq sarb es scas fcoms (bad) addl mov popfq mov sti push jne or and add add cmp fldlg2 jmpq or addr32 mov addr32 std movabs loop retq (bad) add cs andb (bad) outsb pushq xchg mov or pushq mov mov callq jmpq cmp (bad) icebp sub (bad) out shl (bad) in rex.RX rex.RXB add rex.WRX (bad) or imul sbb out movabs notb out and jp xchg add mov cmp sbb (bad) callq adc movabs insl int sbb xor (bad) (bad) std std sub xor add add pop cmp or mov pop movabs xchg push or rex.R (bad) (bad) callq (bad) mov rex.WXB or adc cmp and or xchg jne and addr32 push repnz adc xor or fildll cwtl rex.WRX push mov jge xchg sbb nop mov jp jnp (bad) cmpsb pop push xor or xlat imul rex.WRX callq and mov movabs sbb sub (bad) pop cmpl out fcomp xchg mov cld mov sbb xlat (bad) (bad) (bad) inc xor js rex.RB gs test mov cmpsl callq add cli or mov and (bad) add sub gs mov or adc outsb add add test push insb enterq (bad) mov rex.WRX mov xchg add test jrcxz add xchg shrl bts movzbl mov bsr neg ror sub rcr mov bt jmpq cmp xchg adc mov fild pop int3 jge mov test rex.RXB fsubrs (bad) jp sub gs test movabs mov mov add rex.WB ds add jnp and and scas add cmp (bad) (bad) (bad) cld (bad) jp (bad) (bad) (bad) (bad) (bad) fnstenv sbb (bad) jrcxz lock adc pop cmp fs fbld repnz or shll fsub mov and fisubl rex.WRB repz add cmp sbb imul outsl jns sti jle xor mov cs pop insb cli cmc pop loop xor loop lock and repz cld jae push mov stc xchg (bad) mov xchg fisubr std cmpsb cltd (bad) es out rcr and (bad) in cmovnp cs or mov shl cli hlt shlb cmc sbb cs fdivr movabs movabs jp insb or std or imul cmp or sbb rex.WX ljmp sbb data16 rex.WR movabs (bad) mov rex.WX (bad) sub jge movslq out movsb mov jl push cmpsl pop mov xchg jbe outsl or movabs test xor mov leaveq mov xchg xorb loop add retq xor retq not shr xchg mov jmpq jmpq stc clc bt movzwl shrd mov test cmc add jmpq push mov sub rex.B in (bad) or sbb and imull roll (bad) adc jge (bad) adc adc rex.WRXB pop jg and test test mov (bad) lret xor push rex.WX or pop lods xor mov cmp (bad) cli adc notb mov xchg pop cmp fidivrl rex.WRX rex.R (bad) (bad) (bad) cld cmp fs mov (bad) (bad) decb cmp jp mov (bad) (bad) dec rex adc jbe addr32 cmp mov (bad) jl sbb mov (bad) xor (bad) mov sbb mov rex.R add shrb push (bad) js leaveq in popfq mov cwtl rex.RX jg ja jmpq clc clc sub stc js test cmp or jp je movsbw mov movsbw lea jmpq mov movsbl mov bswap bswap lea mov retq retq js test (bad) push (bad) rex.WRB popfq (bad) rex.XB (bad) test scas pop fs xchg cmp push rex.B lret sbb sub repnz rex.RXB (bad) outsl xor rex.WRXB or sbb mov (bad) pop repnz (bad) rex.WRXB js cs lea cmpsb (bad) push rex.XB or mov rol add nop xchg (bad) (bad) (bad) decb mov jno cmp (bad) fldcw mov imul (bad) callq pop cmc (bad) int3 mov pop negb xor xchg rex.XB mov (bad) (bad) (bad) decl fdivrs jrcxz out mov ss mov or ds lahf stos xchg jmpq fcoms test adcb (bad) pop (bad) hlt (bad) mov movabs stos (bad) mov or cmpsl mov sbb rex.WX mov cltd shr mov mov pop add rex.R sub jp push xchg out fild mov (bad) jmp (bad) (bad) push xchg leaveq fs jl xor cmp and (bad) add loop (bad) mov jrcxz xchg stc fwait rex.RXB out int in sbb (bad) loop (bad) adcl jo pop mov (bad) stc rex.WRB xor (bad) (bad) std movslq rex.WX addr32 (bad) (bad) pushq rclb out fisttpl adc jmpq movabs cmpb out mov cmp cmp cs insb cmp lret mov add and pop rex.B add outsl xchg (bad) (bad) outsl fcmovnb scas (bad) xlat (bad) add repnz in lcall sbb (bad) popfq (bad) iret popfq scas lea retq push cs (bad) adc mov (bad) retq rex.B mov movsl cmpsb mov and cmp retq and add outsb cmp (bad) mov data16 cli sub jge add test pushfq mov stc js sarl (bad) repnz mov repz or (bad) and xchg rex.WRX rex.B pop (bad) (bad) ss es fiadd movabs jrcxz add fisubr int rex.WR leaveq enterq mov mov pop push shr cltd pushq or adcb (bad) (bad) sti cld stos add decb cmpsb lock rorb and jge adc or stos (bad) (bad) (bad) (bad) decl stos lret stos int3 fcmovb lock cs cmc rcrb cmp jbe adc push (bad) (bad) retq sub out retq xor insb (bad) jne je mov adc out test xchg pop or xchg imul lret cmp (bad) and pop jne sub add and pop pop cmp mov xchg xor lods add fisubr or or (bad) mov (bad) imul mov sub add imul sti (bad) sti (bad) in push test roll rorl test cwtl pushq loop xchg jo (bad) orb mov (bad) cmovle xor icebp jge mov (bad) (bad) decb (bad) (bad) (bad) (bad) pushfq (bad) sub pop ds pushq mov mov lea or std (bad) out psubb (bad) in pushq adc ja fisttp stc pop and mov sbb mov mov pushfq (bad) xor rex.WRX cmpsl (bad) (bad) mov scas (bad) cmc fildll (bad) repz in add addr32 iret mov mov jb ds mov pop sub push pop test imul and rex.WRB (bad) jbe jb flds (bad) xchg mov rex.XB push push cmp fisubr sti (bad) sub fidivr jmpq adc test insb (bad) (bad) (bad) cld cmc rex.WRXB jns (bad) (bad) (bad) decl rex.WX (bad) cli sbb sub adc std jl stos vmovdqu es (bad) jns xor rex.WXB mov add rex.WX rex.RB (bad) xchg add add jge (bad) cmpsl xor clc pop roll lods test movabs sbb cmp mov loop repnz jmp mov popfq movabs (bad) lods fisttpll pop rex.WRB mov (bad) lods rex.R cmp retq jrcxz jae add retq or in retq fdivrl rex.WRXB rex.RXB cmpsb outsl fwait jge mov fist retq rex.X (bad) icebp pop add test in rex.WRX mov xor mov rex.WR rcll cwtl enterq test mov (bad) int loopne cli rcrb cmp movsl pop (bad) mov mov (bad) (bad) (bad) outsl cld xchg mov test cmp (bad) (bad) (bad) decb (bad) (bad) (bad) callq add (bad) sub (bad) sbb callq outsb leaveq nop mov push std test outsb icebp cmpsl mov xchg rex.WRX cmp je cmp movzbl sub push xchg bsr rcl mov bsr and btr sub bswap lea movsbw movzbl lea jmpq cmc imul clc cmc add jmpq sub add negl add add add add add add or (bad) add (bad) add cmp add sbb add add add add add add (bad) outsb (bad) add add stos mov add fist add (bad) add (bad) sbb incb sbb clc pop sbb in (bad) add add add sbb add add mov add add add (bad) add add add (bad) add add add rcll jmpq add add cmc mov jmpq jne movsbw mov jmpq rex.WR push (bad) cmp sbbl mov mov (bad) add pop pop cmpsb fsts loopne (bad) xor pushfq test outsb int3 jrcxz cmp rex.WXB mov xor adcb (bad) and (bad) faddp sbb (bad) (bad) std rex.WRXB (bad) jmpq testb out out cmp (bad) xor lret xchg rex.WRB lock and push sub sub imul iret rol frstor xchg push int3 movsl pushq adc loopne mov xchg pop jnp mov rex.WRX push add add ds jle movsb mov (bad) pop (bad) xor repnz int3 (bad) imull rex.XB mov sbb jnp cs rex.X es cmp (bad) scas int movsl outsl shrb pushfq mov sub movabs add (bad) test push std rex.WRB movabs mov icebp sbb in xlat mov adc repz cmc (bad) in subl jbe rex.XB movabs stos xlat sub rex.RX mov xor rex.R mov xchg or (bad) movsb pop callq xor sub sarl leaveq or out mov jmpq insl and fmuls cmpsl sbb mov (bad) (bad) (bad) std or nop (bad) (bad) std xchg fucomip adc add add or cld pushfq stc (bad) lock xor cmc fwait in mov xchg add outsl fs rex.RB adc out jl test sub mov loope pop mov lods imul adc add fstl add xchg or (bad) stc jmpq jmpq rex.XB jne movabs (bad) mov sub add pop xchg xchg adc lret adc popfq rex.W xchg cmp retq (bad) repnz mov add push xchg rex.W data16 sub outsl roll mov (bad) mov popfq add (bad) (bad) (bad) (bad) out or cli fwait iret scas int xor xchg jnp outsl (bad) (bad) ds imul (bad) mov (bad) (bad) rex.WRXB sbb jrcxz subl movsb fldcw pop mov mov jne movsl cs rex.R push (bad) or nop clc rex.B icebp push (bad) addr32 movabs bt jmpq jne add btc bswap sub sub xor stc shrd ror mov xor clc rcl add jmpq rex.X rex.XB (bad) callq pop movabs outsl rex.RXB and stos sahf sbb cmp loope movsb or sbb mov rex.B sbb int3 (bad) retq pop lret pushq test cmc cmp cmc cs or xchg xorl jmp sti ja cld cmp (bad) cld rex.WXB mov (bad) (bad) (bad) (bad) pop (bad) out add (bad) or sbb movabs (bad) pop cmpsl fs loope cmp sbb jno fwait repz push sbb xor repnz (bad) (bad) (bad) ljmp cmpsb shlb add xchg cmovnp imul mov push rex.B int int mov outsb adc cmpsl adc sbb lret (bad) insl cli out xchg cld imul adc add movsb movsbw jmpq jb cmp bt cmp cmp jle jae bswap bswap setne bswap mov jmpq callq or add and mov stc clc bt cmpb jmpq fdivrs scas rex.R push stos (bad) xlat mov and gs xchg rex.R rex.WX cs mov leaveq in std (bad) mov cs adc xchg loope rex.X movslq (bad) sbb pop push sbb xlat (bad) pop lret sub add in repz push lea pop (bad) fstps and in xor xor fsubrs fcoms gs xchg imul and cli or in or jns (bad) (bad) (bad) and rex.B repnz callq rex.R rorl movabs scas int rex.WR cld xchg lahf stc rep xor jae mulb push mov adc add cmpsl pushfq mov mov pop stos enterq xor adc (bad) mov movsl jnp mov jmpq jne bt stc jmpq adc retq rex.WR xor jbe cli (bad) gs jge jne mov jrcxz mov int xor int3 movb insb lock xor mov mov xorl hlt stos jg jl in (bad) jb fstpl (bad) cmp mov or scas mov mov (bad) fldcw (bad) adc sbb mov outsl xchg cmp icebp (bad) insb enterq mov adc (bad) cld movsl movabs sahf (bad) jmpq mov add cmp push and scas adc sbb (bad) xchg (bad) pop xchg test cmp (bad) sbb lret (bad) roll in stos leaveq (bad) adc pushq mov rol mov rex.WRXB out movabs adc and (bad) (bad) pop adc je pop sub jg adc (bad) and adc test (bad) jge (bad) sub (bad) xchg jo fwait scas (bad) fwait in jnp xor (bad) rsm cs mov rex.WRX loop gs jne jns xor and xchg rex.WR cli out adc retq pushq test fwait jrcxz jmpq hlt jmpq jbe clc rex.WX push or or (bad) (bad) cld mov xchg (bad) (bad) (bad) dec lea rex.WXB pushfq ds xor or jp xor movabs std add add rex.WB jae jno stos ljmp je mov (bad) rex.WRX cmpsl (bad) (bad) mov fdivrs je mov int popfq gs pop xlat mov rcrl or or adc jrcxz (bad) xor add test add jmpq sar neg sar mov bsr mov rcr shr shl setge mov jmpq in repnz xor or lea rex int3 mov jp xor xchg (bad) cmp shll push mov div movabs mov sub gs jle rolb notl add mov notl sbb (bad) pop xchg push jo (bad) pop xor movabs mov addr32 jno imul (bad) (bad) adc (bad) (bad) (bad) cld and mov (bad) xor cld test pop (bad) or xlat jne adc (bad) repnz (bad) add (bad) insl addr32 add addr32 popfq loop icebp movslq repz add (bad) lods sbbb cmc push in movabs or (bad) rex.X xchg mov push cmp adc (bad) cltd cmc push movabs pop mov mov ds xchg fsubrs cmc loope (bad) pop rex.WR cmp callq xchg sahf (bad) (bad) jae movabs cmc es movabs jae cmp mov cltd (bad) retq fprem1 (bad) test nop (bad) pop add sbb loope scas rex.WB rex.WR cs mov (bad) outsb add or out jae and or cmovbe divl rex.WRXB test sub ds movsl imul outsb cmp add mov lods jmpq mov out int fnop rex.B cmp sti xchg (bad) cmp in cmp rex.RB lods mov and cmpsb mov cmpsb retq rex.R out movabs xor fdivp pushfq adc or xchg or or push sahf rcrb rex.WB pop imul xchg jp jne nop adc mov retq and cmpsl in and testl and or (bad) lret lods (bad) xor (bad) ja (bad) (bad) cld test (bad) (bad) (bad) in callq outsb (bad) repz rex.WRB add add fs xorb (bad) push mov fimul popfq (bad) ficom test je cmpsl sbb jmpq (bad) mov cmp std (bad) or mov cltd (bad) int3 insb cmp (bad) cmpsb mov stos (bad) add cwtl ljmp jl movsb rex.WRB cmc (bad) sbb (bad) mov xchg sbb mov sbb imul faddl rex.WB js movabs and sarl sti loopne loopne and insb repnz ffreep add imul sar fmull sbb cmpsb mov xchg jbe gs (bad) rcll xchg mov and ds adc sti (bad) shll movabs mov xlat pop in xor adc sub int enterq sub add sbb int sar cwtl rex.WRX xchg or jg stc adc pop adc and cmp (bad) (bad) decb (bad) (bad) (bad) decl rcrl jmpq cmp (bad) (bad) add pushq retq sub out rex.XB mov add stc push sarb sahf xchg sub popfq (bad) push loope out retq jns out subl (bad) sub mov stos (bad) test (bad) (bad) sub rex.X scas rcrb jp jno packssdw sub popfq (bad) push pop rex.WRB jge loop sahf ja (bad) test mov imul imul mov loope or (bad) (bad) (bad) decb lret (bad) lret adc xchg int adc mov insl rolb push sahf cmc clc insl (bad) push callq insl lods test jb cwtl test outsl adc hlt cmp insb and test mov test fwait mov or and pop lret adc (bad) sub (bad) rex.RB (bad) cmpsl repnz fisub movsl adc insl rex.WRB outsb xchg adc (bad) (bad) nop xchg rex.WR rex.W lahf repnz rex.WRB fcomi (bad) add scas mov xchg cmpsl (bad) sbb pop or rex rex.R (bad) repnz rex.WR test cmp add pushfq test (bad) imul fucom add rex (bad) (bad) std or push jmpq leaveq rex.X (bad) cmp int3 add mov (bad) (bad) (bad) std and rex.WB fs mov xor add ja (bad) repz rex.WB jmp xchg xchg fldl hlt pop (bad) stos lret cmp sub cmp jae cmp sub mov mov movabs sbb fsubrs cmp rol jle rex.X loope rex.RX rex.WRX (bad) rex.WX adc xchg loope jbe cmpsl sbb sbb (bad) roll xor gs jae sahf adc (bad) leaveq cmp (bad) mov (bad) lods mov movabs mov push push xlat jnp jbe addr32 jnp std jge insl fcom data16 (bad) xor mov (bad) scas movabs pop (bad) (bad) (bad) (bad) (bad) jns (bad) (bad) jp xor mov mov lret or enterq pop repnz jne and insb adc mov insl enterq rcll adc outsb xchg add adc (bad) (bad) sbb adc stos je sub not rcr neg add bswap lea movzbw mov jmpq and or in enterq mov imul movabs pushq cmp pop pop jg mov sti stos jge (bad) pushq rex.WX fucomp mov int stos testl sbb int leaveq (bad) out test mov pop repnz adc (bad) in rex.WRX xchg cmp and or int3 insb test movabs int cmp jmp jno rex (bad) (bad) cld mov (bad) (bad) (bad) fwait test leaveq insb pop mull and add add sbb rex.WXB sarl rex.RX sub jmpq movabs adc add (bad) jmpq jg and adc lret pop data16 callq sbb mov stc sub shld xor mov jmpq jmpq bt cmp jmpq test (bad) jne and xor (bad) sub (bad) sti fsubs flds callq push xchg mov stos or cmp xor rex.RX rex.RXB fnsave fildl psllw (bad) (bad) and (bad) pop jb (bad) jae jnp rex.RXB or rex.RXB (bad) sti jne (bad) std mov (bad) (bad) std mov fs pop lret jl pushq mov mov cmpsl outsb rclb jae push sub xchg jle mov insl sarl lret pop mov (bad) (bad) decl rex.WRX cmp lret cli (bad) fdivs cmp subl movabs lahf iret mov push rex sbb jnp (bad) fnstcw (bad) cmc test sub sbb mov mov xchg xchg mov lea add je cmp stc cmc add ja test test test cmp jmpq gs out nop fmull out mov in shl mull test (bad) rex.WR (bad) rex.W outsb xchg (bad) cmp (bad) lfs cs rex.WB jge xorl pop jnp stc out fbstp sbb mov sub gs adc cmc jae rex.WX rex.WRXB sub (bad) (bad) cld mov (bad) (bad) (bad) (bad) rcll lock leaveq movsb scas add jp jmp (bad) lret pushfq or xchg (bad) rex.WR sbbl rex.WXB jmp rex.WXB add stos sbb (bad) ja (bad) int mov fisttpll jae lods (bad) mov lods (bad) (bad) lods (bad) add pop jnp out fs cld (bad) ja pop jno fisttpl icebp stos test pushq sti lret lods out mov mov xor outsb sub or callq rex.RX sub pushq in (bad) or push out xchg ss rex.RXB (bad) cmp mov and (bad) loopne pop retq rex.RX movabs rex.RX (bad) (bad) shrl sarb fisttp xchg rex.RB clc and rex (bad) add jrcxz push (bad) (bad) pop push je jb push (bad) rex.RB (bad) cmpsb rex add andq fidivrl pop mov pushfq jnp xchg rex.RB rex.R mov rex.W (bad) jrcxz jns sub gs sub adc jrcxz scas mov (bad) imul sub fwait rex.RXB rex.RB sbb jl pop cmp sti fstpt cmp cli fidivrl cmp and shlb add fistpll (bad) (bad) (bad) fidivr ds (bad) xchg rcrb enterq out pop mov or and sbb add push xor jne leaveq and pop (bad) push lock (bad) lods fdivrs mov incl and xchg rex.RXB adc lods lret rex.WR rex.WXB mov push cmpsb xor sub popfq lods mov jge sbb add rex.W rex.WRX or cltd add sub xlat rex (bad) rex.XB (bad) rex.R (bad) int3 sbb rex.RXB in xchg (bad) rex.WR int rex.WRXB and rclb (bad) push push ror push sbb and xchg (bad) push in (bad) pop push fldcw (bad) fsub fnsave pop push rex sbb (bad) (bad) rex.RXB rex.WX rex.WR rex.W sub ss rex.WRX xchg (bad) push in (bad) push push push int3 push sbb lret sbb (bad) (bad) rex.R (bad) rex.RX rex.RXB rex.W or (bad) (bad) rex.WRB (bad) rex.WRXB push int3 push sbb push movsl mov and (bad) (bad) pop in (bad) rex.R rex.RXB fisttp xchg (bad) rex.WRXB (bad) push insl addl (bad) (bad) rex.R rex.RB mov add mov sub and es rolb xchg pop jrcxz add add imul pop rex.WRX lea mov add push or int rcrl sub (bad) imul sub rex.RXB mov sub sub int3 jnp xchg in sub gs push (bad) gs pop sub cmp rex.WB or mov lahf negl fstpt cmp (bad) sbb cli sub fcmovu rex.WRX or or pcmpgtd mov sbb xor jge cmp rex.RXB or pop (bad) repz and rex.X jnp sbbb cmp rex.X (bad) cmp mov pop in xchg pop push rex.W pop and rex.RB xchg jle push fistpll mov pop fildl pop (bad) push jbe outsb loopne jnp cmp jl fiaddl add and and lahf add jo cmp pop addl sub fstpt retq pushq or test (bad) faddl add mov rex.XB rcr and (bad) es xchg (bad) rolb fdivr (bad) pop or fwait push jne push lea sub mov mov push xchg jmpq pop in (bad) rex.RB sbb push xchg (bad) push in (bad) pop push pop int3 pop sbb rex (bad) rex.RXB rex.WX pop rex.WRXB rex.WR mov faddl rex.W loope sbb pop (bad) sahf rex.X adc in fdivrs rex.WR (bad) push in hlt rex.XB data16 (bad) add push leaveq cmp vxorpd (bad) (bad) push cmp rex.RX rex.W add pop push or movl out and lock (bad) lret pop xchg and rcll jno in retq stos movabs rex.WXB mov callq mov rex.WRB rex.WRXB jmp rex.WX outsb mov xchg xchg rex.WB shrb sbb stc shrq pop insl sbb nop rex.WRB sub rex.WB notb mov and flds rex.WB xchg lea mov jmp cltd adc loopne mov and fdivrs test callq rex.WX push in mov (bad) pushq pushq sub outsl movabs push es hlt andb cmp mov je and movabs mov notl xchg rex.WXB rex.WB xlat (bad) cmp (bad) rex.B rex.WRX mov jl mov (bad) fs adc fbstp cmc jbe sbb (bad) pop shlb iret enterq (bad) cmp pop addr32 pop (bad) fsub insl jg mov fwait (bad) clc stos rex.WRB lock retq movabs rex.WRXB in (bad) mov mov xchg xchg cmp jae mov sbbl scas addr32 jno insb js test (bad) addr32 repz pop movslq std sub (bad) mov xor (bad) push (bad) loope shrb lea and mov xor pop (bad) in or and mov (bad) flds icebp jge outsb mov mov xchg (bad) mov rex and fs push add mov rcr flds cmp fsubrp jp imul add rex.WB movsb loopne push rol rex.WB (bad) jbe rex.WRB pop pop rex.W pushq callq add xchg ss pushq in add and (bad) mov rex.WB adc rex.WB jne jb,pt retq rex.WB and movabs push ja enterq adc xchg insb rex.WB (bad) jle (bad) jno clc sub sbb (bad) mov mov jne movmskps lods xchg rex.WRX cmp push rex.XB loop sub jrcxz sbb test ss rex adc rex.RX rex.RX rex.RXB (bad) rex.WX rex.WRB rex.WRXB loop or rex.XB rex.RB xlat sub out sub cmp rex.B rex.WX test addr32 push and rex.B rex.RB pushq (bad) rex.WRXB rex.X push imul cmc loopne jge sub xchg shrb and ss callq rex.RXB fiadd ss and rex.RX xchg add notl fcompl or pop and push xchg rex.RXB incb and rex.B mov int3 rex.RX (bad) and in (bad) rex.X rex.WRXB (bad) in (bad) pop push rex.R push (bad) rex.RXB pop sbb rex.RB rex.WXB xchg (bad) fiadd in sbb and (bad) (bad) push in (bad) fcoml int3 push ficompl fild xchg pop (bad) rex.W (bad) (bad) push (bad) fsubp (bad) (bad) fsts int3 rex.WRX push xchg (bad) fnsetpm(287 retq (bad) push rex.RXB rex.W sbb ss rex.WX xchg (bad) (bad) (bad) (bad) rex.WB hlt sbb and (bad) (bad) shl out sbb sbb and (bad) (bad) int3 cli xchg (bad) (bad) in (bad) (bad) push loopne sbb add (bad) (bad) (bad) sbb add rclb int3 sbb add lret xchg (bad) sahf add iret (bad) and xchg (bad) (bad) and rex.B iret sbb and in (bad) cwtl push or jp int3 popfq sbb xchg (bad) cltd in (bad) int in fwait sbb xchg (bad) xchg in jbe (bad) xchg mov xchg rex.WB cmp and adc cmp xchg (bad) sub cmp and sub (bad) (bad) (bad) push cmp and jno (bad) adc and or mov pop or ja mov fnstcw (bad) test mov andl or ja mov sbb xchg (bad) or pop cmp xor jp push cli int3 loop nop andl (bad) pop pop clc lods loopne rex.RB (bad) std push in xchg fyl2xp1 xchg (bad) loope mov sti sbb and mul pushq mov jle addr32 jp (bad) sbb fs xchg push pushq and gs xchg sub (bad) xchg (bad) lea int3 movslq xchg and ja (bad) jg mov (bad) xor xor (bad) mov or (bad) (bad) sub xor xor push sub (bad) or (bad) (bad) xor sub mov push mov (bad) lods or mov int3 stos jns scas mov or lods ja mov in mov or (bad) (bad) in leaveq divb out jns repnz gs (bad) (bad) repz jmp int3 cmc jns in sub gs jmpq je int3 insb jns jbe outsb gs jb (bad) pushq outsl ja jae in sub push insl mov or pop test push pop jle ss or rex.RXB rex.RXB push push ds enterq and mov callq add fadds (bad) cmp (bad) (bad) out sub rex.RXB pop sbb pop int3 cmp movb sbb (bad) enterq shlb rex.R rex.XB add shll rex.RX cmc hlt pop vcvtss2sd sub mov adc pushq push in fnop mov xchg (bad) mov rcll pop mov jle jns rex.RB cmp rex.R sarl and rclb (bad) rex.RX and pop cmp xlat (bad) pop movabs rex.RXB fbstp movb (bad) test push rex (bad) icebp rex.WX pop (bad) mov rex mov (bad) xchg fnop rex.R rex.WRX fadd rex.X test rex.RB mov movsb xor addr32 mov popfq and rex.X loopne subl rex loopne xchg add fistl in (bad) icebp fisubrl rex.WRX or (bad) (bad) cmp pushfq callq fildl (bad) pop mov pop xor (bad) or int test test loopne (bad) enterq rex.RXB rex (bad) js rex rex.B and mov push rex.RXB incb mov push (bad) (bad) xchg xchg (bad) test test mov iret mov sarb pushq (bad) popfq repnz fidivrl (bad) sub (bad) and and rex.W pushfq jp in ljmp mov movl cmp add rex.RXB pushq fs and (bad) js cmp sbb mov rex.W (bad) (bad) cmpsb sti jnp add add test rcrl mov sub (bad) (bad) (bad) mov movsb or cwtl fnstcw rex.RXB (bad) fwait loopne add test (bad) cmp (bad) paddusb fistpl sub (bad) xor mov (bad) (bad) roll sub ror and rex.RB sbb (bad) (bad) adc shr rex.X sub (bad) add push pop and rol js ficom mov and xlat (bad) (bad) pop roll (bad) repz imul (bad) mov repnz mov fs loopne (bad) loopne shlb (bad) sub imul mov (bad) loopne int push out mov add rex.RX (bad) and movsb mov (bad) shlb (bad) test pop mov rex.XB pop sbb (bad) fistl (bad) sbb rex.R or mov retq xchg (bad) pop and sbb pop subl cld push and pop or mov add fldt push rex rex.X jle xor (bad) rclb rex.B add fcomps rcrb and rex.WR mov add rex (bad) push pop (bad) fdivrl fbld lahf jrcxz (bad) jrcxz int3 pop movabs movabs imul (bad) out out fwait divl mov (bad) movl rex rex.RX lret rex rex.RXB push cltd and mov jne mov rol rex pop mov xchg mov addr32 loop cmp loope and cmp cmp loopne in (bad) pop (bad) in and (bad) movabs fwait insl faddl and rex.WB (bad) sbb (bad) sarb add out xor (bad) push (bad) lahf rex.WRX (bad) jl mov sbb mov jmp (bad) cli sti movsb (bad) cmpsb xchg (bad) pop (bad) loop rex.WRB xor rex.XB cmp adc lods rex.WR rex.RX (bad) (bad) mov add pushq (bad) es (bad) sti in clc (bad) or loopne jnp fidivl (bad) adc sbb jle pop (bad) (bad) mov xchg loopne scas fistpl mov push in (bad) fcmovnu jnp lahf fwait and (bad) fistpl (bad) enterq xchg cmp movsl rex.W xchg movsl out ror test ficom add test cmpsb sti fistl iret and xchg jnp mov cwtl and cs and mov or (bad) cmp and mov sbb rol mov lret fildll cmp pop mov and movabs adc rex.RB cmp mov rolb add rex.X (bad) cmp jrcxz rex.W imul movl rex.WX rex.WR rex.WRX push (bad) (bad) es add (bad) rex.WRX pushq cwtl rex.B out movabs push stos sub mov (bad) pushq mov sbb fstpt notb cmp add fmul fbld leaveq pop (bad) pushq rex.WB fnsave clc rex.WB sbb (bad) mov stos cltd icebp (bad) push sldt adc xor pushq pop subl (bad) xchg (bad) push movsl test mov or out xlat (bad) gs rex.R jb push icebp mov cmpsb and fiadd mov rex.WB and xlat rol cmpsb rex.RX fsubrl mov pop movabs sub xchg jmpq mov je outsb rex.WB lock ja movabs addr32 rex.WX cs rex.WRX rorb xchg pushq pop (bad) cwtl js cmp and cmc rex.WB fcompl enterq or push jmp out cmp and addr32 mov or dec fsubrl rex.XB in mov stos cli fimull (bad) out imul ljmp mov mov movsl add repz iret rex.WR push scas jl rex.WB sbb rex.WB xor insl push jle rex.WB add jmp cmp addr32 (bad) je rex.WB inc jle callq cmc gs xchg rex.WRXB xchg mov add jne rex.WB std jbe rcl mov retq sub mov (bad) sub (bad) xor xchg add fldcw (bad) xchg pop rex.WB add mov rex.WB jrcxz rex.W fmuls and es in rex.WB rex.WRX xchg and mov (bad) lods xor xchg (bad) cmp cld rex.WRX rex.RB movabs pop mov pop adc rex.X jg lods xor rex.XB mov movabs scas add mov sbb fimull gs jo rex.WRB rex jns sbb imul mov xlat stos test jnp mov movsl xor lock pop (bad) rex.WB int3 addl mov js jmpq fsubs push (bad) (bad) push sub (bad) xchg rex.WB xor sahf sbbl bnd stos addr32 lods (bad) cmc and rex.WXB cmp pop xchg imul (bad) cmpsl rex.WB callq sub add mov outsl rex.WRB sbb xor rolb mov jg pushq enterq rex.RX xor mov adc (bad) jp or jge fidivr (bad) rex.WB add rex.X (bad) lret pop shrb dec pop rex.WB add xchg movabs cmp cmc mov (bad) add pop negb xor insl and outsl fwait rex.WXB movslq fmuls cmp xlat lret (bad) cmp xchg pop mov mov std lea rex.WRXB rorb pop cltd clc sub sti pop rex.R (bad) sbb popfq jbe lahf xchg adc pop xchg rex.WRXB xchg or movsl jo mov mov or or cld rex.XB and push mul mov test movabs pop jg cmp in mov (bad) cmpsl (bad) cmp rex.WB ss pop sbb mov mov in sti jp imul js cmp sbb test adc sub imul or push mov cmp rex.WRB loope or (bad) test rex.WB push lods outsb xchg add ja stc fs rex.RB rex.WRX test (bad) and loopne adc push mov test adc (bad) pop int3 jp mov sub pop push or pop rex.X or jb cwtl xchg out repnz rex.RB insb pop or push sbbl ja cmc rex.WB rex.W xchg fildll adc js xchg jp pop adc rex.RXB orl push (bad) std (bad) (bad) loope xchg mov mov (bad) rex.WB adc rex.RX sub data16 pushfq xchg sbb pop push mov rex.WX movabs (bad) lea (bad) loopne pushq mov mov (bad) adc (bad) stos (bad) cmpsl rex.B divl outsb xlat pushq sub pop movabs out xchg add outsl rex.WB xchg sub subl jne lahf ds rex.WR cltd (bad) sub lret mov mov sub jae decb or faddl outsl xor decb mov rex.WB mov stc rex.XB (bad) rex.R outsb retq rex.B and cmp (bad) jg jb adc movsb pop sbbl sub rex.RX mov mov adc retq rex.WXB jo outsb (bad) clc sub nop inc movsl lahf retq movsl push data16 mov insl test sarl mov rex.WB mov mov loope rex.WB jo movsl (bad) jbe pushq mov add xor imul pop rex.WRB rex.WRXB data16 cs rex.WR gs jne js in rex.B jge rex.WB cmp adc adc repz data16 (bad) rorb jmp sarl test xchg scas and rex.WRXB xchg or jno xchg sbb movabs rex.WRB mov sbb int3 lretw out push cmpsl mov mov ds push adcl or jg rex.RXB test push cwtl rex.WB fwait mov not jp rex.XB (bad) rex.WB xor mov jg jo loope sub mov movabs cmp sbbl rex.RB out mov rex.WB loope (bad) jb pushq rex.XB sub ficomp pushfq rex.WRB cli (bad) xor rex.WB loope (bad) cmp rex.WB lcall (bad) sub stc rex.WB mov mov flds sbb cmp push movabs lret cmpsl scas out fldcw jns mov xor sub add sbb jno repnz rex.RB negb test or fwait es lods push or mull pop imul sub cld xchg test xchg rex.WRXB scas (bad) lret (bad) imul setb fildl xchg imul sub and test shll int3 pop insb (bad) jge test mov adc mov cs xchg or sub xchg jb popfq in scas rex.WX and fnsave retq (bad) xchg orb (bad) sar jmpq adc pop add insl mov add add out pushq fisttpl push outsl sbb jne test sub rcrb rex.XB adc adc mov gs sbb test mov pop cld xor outsl fcom sti and sub sbb mov sahf movabs mov mov rex.WB mov fucomp jmpq imul cmpsb mov mov rex.WB jg xchg rex.WB rex cld push rex.WRX jnp mov (bad) jne mov pop movsl pushq lret jns rex.WB jrcxz push icebp scas pop addr32 out mov pop rex.WB sbb rex.WB fyl2xp1 (bad) rex.WB or (bad) rex.WB data16 jl out mov pop push cmc mov cwtl (bad) (bad) sbb sub xor fwait retq movabs insl mov rex.WB rex.RXB and pushfq push sbb insl std cs mov lods sbb or out rex.XB repnz push sbb rex.WR xchg pop and adc leaveq int add lret stos mov pop sub (bad) scas fist movsl imul adc mov cmpsb movabs shlb std addr32 stos push test xor and xor insb sbb xchg cmpsb xor (bad) (bad) push repnz rex.X pushq or adc adc (bad) pop xchg es rex.WB gs pop xchg sub rex.WRB movabs xchg jae pop test rex.WB js and fstpl loope push cmp rex.WB movsb sahf rex.RXB or jp mov cmp push callq shrb and out subq (bad) shlb (bad) rex.WRB gs rex.XB rex.X rex.WB in callq fnop subb jge stc mov test mov mov (bad) movslq xor mov push (bad) rex.WB rex.RX lods loope lret test and push rex.RB callq push (bad) pushq gs push pop sbb popfq rex.WB stc sti (bad) (bad) clc pop ffree and pushq gs mov pushq nop rex.B and (bad) pop xor sub sub lahf test lea jns insl and xchg mov sbb rex.RB mov jb cld cwtl pop or fldl loope sar pushq jge data16 cmp (bad) sub add iret or rex.WXB jp or fs retq cmp rex.WXB (bad) pop push pop (bad) sub cmp pop mov rex.WB (bad) es xchg (bad) rex.RB rex.WB add in rex.WB fimull or test in rex.WB and (bad) xchg rex.WB cmc xchg sbb (bad) xor push mov int test mov pushfq or (bad) pop rex.WB rex.RX push mov mov rex.WB out sbb xor xor shrq sub faddp addr32 movsl cmp sub mov int3 mov rex.WB rex.WXB scas addr32 xchg or and pushq (bad) mov mov insl rorb pop fmull rcll rex.WB pop test sub rex.WB in jo out mov or push lods jno sub or movabs push sbb cmp rex in rorb mov lods xchg (bad) xchg cmp in pop or mov jp (bad) lea and pop mov cmp loopne adc mov rex.RX shlb insl int add adc movabs xchg sub scas leaveq and pushq out rex.WB xor or rex.WB mov lret xchg adc push roll rex.XB popfq callq (bad) xchg or stc pop rex.WB fwait jrcxz gs fldz ss cltd mov mov ficompl xor xlat rex.WRX movabs xchg cltd imul out pop jmpq stos xor outsb or rex.WXB divl rex.XB and mov sub movl fmull or or shrb and and mov repz jno push out cwtl or rorb popfq cmp jo (bad) rclb insl (bad) rex.WR mov lret xchg rex.RX int3 rex.XB mov (bad) push ds mov enterq push adc rsqrtps rex.WB rex.WRXB sbb test rex.WB (bad) xchg insb mov rex.WB ffree test (bad) mov xor stos rex.WB rex.RB jo test int sarb loopne in xchg pop adc push xlat sub mov rex.WB out add rex.WB (bad) outsl and hlt mov xchg mov cmp callq xorb sbb rol loop cs add movl adc mov (bad) push and (bad) mov pop insl movabs int cwtl push rex.WXB and subl adc fstpl push rex.WB iret cmp (bad) rex.WB (bad) nop sub pushq rex.WX ss cli mov mov or sub negb leaveq adc or callq stos mov xchg pop lret scas rex.XB movabs fsub mov insb test rex.WB xor nop rex movabs xchg fnsave ja rorb sub and pop callq cmc cmp int3 sbb ja jge pushq adc rex.R repnz mov movslq movabs mov test in repnz sbb cmp sahf lea jge (bad) mov jg xor (bad) mov scas (bad) rex.X pop (bad) (bad) ds retq lret or xchg xor (bad) mov rex.WB mov sbb fcmovu imul (bad) xorl mov xchg or add in std add data16 (bad) rex.WB rex.RXB xchg (bad) imul pop addr32 (bad) out rex.WB jrcxz movabs pop (bad) xor jp sub mov rolb retq lods out (bad) xchg rex rex.WB (bad) xchg callq (bad) jrcxz mov xchg rex.WB rex.RX repnz rex.X rex.WRB mov rex.WB jo sbbl out sub rex.WRX (bad) xchg jl icebp rcl (bad) callq xchg rex.W rex.WR sub in rex.WRB lock pop rex.WB and retq push in callq retq pop imul lods rex.WB test mov sub xor rex.WB sub rex.RX jne rex.WB sbb cmp jmp push vmovdqa push push jge int3 js callq mov out mov (bad) stos pushq enterq movsl rex.WRXB cmp sbb and rex.WB cli push hlt rex.WR (bad) rex.WB rex.WRB divb cmp cmpl out out add rex.WXB rex.WB lods (bad) leaveq flds mov int3 ficom jo pop xor addr32 adc shl mov int3 rex.WB cmp rex.WB add fcomps leaveq sub (bad) stc adc clc rex.WB push cmp pushq xchg pop sbb cmp or mov in jne callq jmpq test or (bad) jp lock sub cmp xchg and jns je pushq rex.RB or (bad) rex.WB (bad) cmc rex.WRX sub mov rex.WB enterq mov push (bad) or loope outsb xchg mov sub repnz lock sahf rex.WB insl scas stc rex.WR (bad) leaveq sub pop cltd iret test pushq loope stos mov (bad) xor fcoml pushfq cmpsl movabs pop fmull movabs in div rex shl rex.RB rex.B lea pushq rex mov and scas lret rex.X movabs movslq fcmovnb fildl (bad) test ror andl mov testb popfq rex.WB rorl rex vpsllw mov and rex.RXB rclb addr32 lods movslq gs mov add rex.WRX cmpsb mov movsl test or rex.WX xor mov sub fmuls xchg (bad) rex.WB xor jg pushq pushq adc (bad) pop leaveq sahf pushq ss (bad) imulb xorl out lea out push insb cld mov pop and fwait mov cld fcmovb rex.B retq rex.WRXB rex.R jge (bad) fs in mov sbb lock cld pop (bad) cmp adc (bad) pop push sbb retq rex.R test (bad) cli jmp pop pop pushfq cmp mov lahf (bad) jnp sti xor je movslq out movabs cmpsb pop pop pop rex rex.X fstpl adc rex.RXB rex.WR (bad) (bad) pop xor js and rex fs mov testb mov mov and callq add jns,pt mov cmp add pop sub pop add movsl adc loopne fidivrl (bad) shll decl test movsb add clc jmpq callq jmpq movabs sub xor (bad) rex.WRXB xor (bad) fcoml mov (bad) mov xchg imul addb and fisub jbe gs test push clc pushq mov out cmp sti rex.RX sub xor sub lods cwtl push sbb rclb pushq add add cwtl (bad) popfq lret scas adc mov cld mov imul test stos and ss jp push (bad) and lret (bad) xor push (bad) push not shrb jrcxz pop adc pop (bad) out (bad) movabs rex.W xchg stos vmovupd cmp (bad) fisub popfq sbb mov in rex.WR (bad) jb jg push push jg (bad) loop mov rex.B stc xor mov add mov rex.B pop xchg mull ljmp int (bad) sub andl cmp jb fwait lret mov fidiv int negl rex.WXB fs in jno rex.RB sbb xor xor mov rex.RB (bad) (bad) decb repnz xor add add (bad) out jl or jl adc xchg retq rcl push hlt test rex.XB rex.WRB rcll mov js callq jbe cwtl lods xchg or fisttpll out adc jnp (bad) (bad) or repnz lods int test mov adc cmp rex.WRB jge jns rex.WR (bad) hlt test jne cmc movb test cmp clc cmc test jmpq test sub stc clc bt test pushq test jmpq jne test test add stc add jmpq adc scas movsb mov lea add fldt mov jbe pushfq outsl xchg movabs sub or add push (bad) pushfq jns outsl or xchg sub xchg cmpb xlat lret jp push xor xchg (bad) jrcxz sub and pop rex.B rex.X stc paddusw loop es mov pop jbe insb faddl jp rex.W jne (bad) (bad) (bad) cld jne xor mov mov jmpq leaveq mov push icebp movabs or mov jo test jrcxz (bad) mov js imul adc rex.WRX in rex.WXB or rex.WRX mov jle mov xlat imul pop jl xchg xchg nop cmc rex ds ror movabs gs adc push cwtl fcmovb pop sbbl pop ds (bad) jbe jne (bad) xor in xor fcomp scas add stos sbb add mov divb icebp (bad) (bad) (bad) cld gs sbb (bad) js lret add push (bad) pushq adc sub repz stc sarb add callq movabs sbb (bad) xor cmp sub (bad) rex.X loope (bad) (bad) (bad) pushq jo test (bad) or rex mov outsb push or (bad) push adc (bad) or iret (bad) mov test mov cltd mov cmp mov mov (bad) int3 jrcxz adc mov mov mov cmc adc cmc or jmpq cmp lret fdivl (bad) jno lahf icebp fstl rex.RB pop or mov mov fwait lret (bad) add repnz scas xlat int3 je mov jl sbb mov push (bad) in sbb (bad) and (bad) iret pushfq (bad) cmpsl push jae mov adc and subb cmp pop sbb (bad) and xchg pop xor and addr32 xchg or out rex.WX mov rorb (bad) cld (bad) mov (bad) (bad) std test xorl xor push add add jge fildl js sarl cs in cmp pop mov fidivr (bad) cmp adc lock lock retq cltd xchg mov rex.WX fnstsw (bad) (bad) test insb vpcmpeqw cmc xchg jge jl movsl mov lret sti mov ficoml movsb out rex.X add or rex.W or mov push rex.WX mov fldcw cmp push adc adc retq test add push jbe enterq imul std and and clc and or cmpsb (bad) mov rex.X fs sar leaveq lahf add mov and push data16 mov adc xor test adc (bad) (bad) sti movabs mov and icebp fs adc lahf ficom mov sbb repz test hlt jne (bad) (bad) (bad) push rex.XB xor xlat push loop leaveq xchg std movabs and (bad) (bad) retq rex.X lret jl push sti add pushq mov rex.WRX push xor stos nop mov in repz mov fisubl (bad) movsb sahf add stc bt clc stc cmp jmpq jmpq cmp jmpq (bad) rex.WB mov lea mov (bad) fsubrl out pop cmp decb sub mov rex.X rex.R add rex.WRXB push cmp sub shll lock or rex.WRXB (bad) (bad) xchg or jns and rcll lret outsb or (bad) sub mov xchg pop ds (bad) orl (bad) (bad) cld je jmp (bad) (bad) incb jl lahf xchg mov jmp cmp ja out (bad) loope ds neg cltd (bad) sbb fsts pop xor ror add rex.RB movabs push jge (bad) rol ja (bad) scas sbb (bad) xchg lret fdivl sub rex.X addr32 (bad) out pushfq xor (bad) push std fidiv scas rcrb pmaxub and adc pushq mov cmc repz ds xchg in pop mov out mov (bad) or or retq fisttp add int (bad) mov out rex.XB popq fdivrp rex.WB ds sti jp xor rex.XB sbb mov and mov (bad) adc adc scas fneni(8087 callq lret mov lods mov add cmp movabs (bad) decb (bad) (bad) (bad) (bad) jnp or cmpsb (bad) cmp (bad) (bad) sti out lods xchg (bad) (bad) (bad) incb cmpsl mov sahf push mov pushfq stos jle test (bad) (bad) (bad) incl jle in subb xor sub insb outsb (bad) lea (bad) pop xchg mov pop int (bad) lret lret and out mov cltd cmc gs jmpq jmpq rex.R rex.WRX push rex.WB cs insb add (bad) jmpq jne and rcl rcr cmc mov jmpq mov bswap jmpq cmp cmc sub cmp jmpq stos stos pop (bad) mov xchg xchg movslq leaveq lea (bad) push (bad) jae xchg (bad) mov sbb (bad) (bad) insl and or hlt movabs sar adc cmp adc push adc xor rorl repnz cli xchg outsb pushq out (bad) mov rex.R mov mov adc pop stos rex.WR (bad) (bad) cld orl (bad) (bad) xchg mov xor pop adc int3 mov pop movslq repnz ljmp cmpsb stc jmpq pop or xchg add add fisttpl xchg xchg scas (bad) or (bad) or pop (bad) test pop repz (bad) jg xchg xchg enterq pop repz (bad) jp loop movsl add test hlt (bad) push cmp ja pop mov fnsave and test (bad) incl repnz stc cmp jmpq add jmpq out outsl mov loop je add (bad) js loope sbb mov jbe jb bnd jo fimul cmp rex.WRB add adc mov xchg test retq pop adc adc jmp (bad) sbb jl cmp cwtl (bad) add jge pushq cli (bad) (bad) (bad) cld (bad) test (bad) decb addb xor icebp xor xor pushfq xorl xchg (bad) jl jno movabs jb jo cmp test cs jg cli and repz fisttp jl in and (bad) rex.W add lods test jo repz movabs rex.WX adc xchg push xchg (bad) mov and sar popq test xor pop jne movsb and and push int stos mov or (bad) (bad) sub or mov callq jbe movabs in in test (bad) mov push xor (bad) test mov imul xor add (bad) (bad) cld push sub pop pop (bad) (bad) (bad) (bad) and rex.WB repnz jg iret push (bad) (bad) (bad) jmpq and (bad) imul sahf movsl fcompl mov jae (bad) (bad) sbb repz scas rex.W icebp stos lret pushq stos (bad) (bad) rex.RX adc mov cmc repnz mov push xchg cmp es xchg jns or insl push mov fstpt (bad) cmc rolb hlt out mul out rex.R mov mov rex.RX fwait rex.X (bad) sbb mov jnp decb cmpsl test jne mov test push fild sub movsl cltd cmc xlat cld test (bad) clc push ja lahf and stos (bad) sar (bad) jb adc (bad) (bad) cld rex.WRX cld jne (bad) (bad) (bad) (bad) (bad) test fistp (bad) es sarl (bad) in (bad) (bad) (bad) jmpq mov orb jae rex.X addr32 mov jb and fdivl jb test out rex.WR cmc test rex.W imul push ss jno (bad) cs rex.B push and mov loopne int3 rex.WRX adc jmpq or callq lret in testl lock sbb movslq in mov xchg push pushq (bad) cmp imul or jnp fwait and pop (bad) stos rex.WXB mov fisubr mov mov xchg movslq mov sahf int3 (bad) cwtl xchg pop repz or (bad) pushfq add lods cmp sbb pop mov int3 and loopne iret cwtl jle mov int (bad) (bad) out mov (bad) ss mov add mov pop (bad) enterq cmc rex.WRB rex.WRX lea callq out (bad) (bad) (bad) std cmc lea xchg add add or (bad) fnstenv push (bad) (bad) movsb mov push rex.XB jg sbb (bad) or xor xchg pop xor mov data16 loope pcmpgtd mov movzbl jmpq push not jmpq jmpq jmpq callq btr movsbq add add movsbq rcr mov bt test jmpq jmpq rex.W bnd add (bad) xchg rex.WR mov in sbb in (bad) jmpq movabs xorl jae movabs xchg je enterq cmp punpcklwd adc loop (bad) xor cmp push (bad) (bad) js sbb stos mov lret xor xor (bad) (bad) std or mov negb mov out fld (bad) (bad) (bad) std and leaveq jno rex.R pushq add ja rex (bad) rex.WXB xchg clc rex fwait mov lcall (bad) pop (bad) push or js or xchg (bad) or (bad) scas int xchg and imul callq cmpsb cmc stos push cmp cmpsl mov sub shrb pushq mov jrcxz movsb or jae mov movsbw movzbw mov jmpq test jmpq (bad) pop (bad) roll or (bad) sub loope mov stos mov mov fcmovnbe add cmp mov int3 ds sbb and (bad) (bad) roll (bad) (bad) rorb (bad) rex.WB vhaddpd rex.W loop adc pop lret insl rex.WXB data16 and mov jae mov adc and pushfq sbb iret out and (bad) (bad) decb (bad) (bad) (bad) (bad) in ja jo pop int3 (bad) outsl rex.X rex.WRXB je movsq fdivrs outsl gs mov (bad) leaveq movabs sub cs shrb cwtl sbb fdivrs hlt xchg cli pop push sbb sub (bad) test mov and (bad) enterq pop movabs pop (bad) movabs add test sub adc mov fs cwtl repnz rex.XB (bad) div rex.X jmpq insb rex.WRB cmp in sub rex.RB xchg rex.WX sbb jp stos (bad) and mov cmp lret and (bad) sti outsb and shll insl cmp pop int3 in mov add (bad) (bad) decb jmp add xor vpand pop icebp (bad) stos sahf mov fdivrs sbb fmuls pushq rex.X rex.B jno pushq rex.WRX loope rex.R jne push or mov in pushq rex.XB xor jmpq cmp jae int3 lahf hlt movabs mov rex.WR (bad) jp cmp rex.WXB icebp loopne xchg clc pop or jbe jle callq jbe addr32 mov (bad) (bad) (bad) push int3 out or ds (bad) pop xchg jbe cwtl mov (bad) imul mov (bad) (bad) (bad) (bad) sbb movabs xchg push pop (bad) and (bad) jmp xchg push rex.XB add cmp cmp js jno (bad) fs jbe movsl xchg gs mov movsb mov ss (bad) cwtl mov (bad) mov in in (bad) jne cmc xor adc clc mov stc jmpq jae jae adc mov scas rex.RXB xchg push (bad) xorl (bad) movsl adc out fcmovne in sub loopne (bad) jnp sub sahf rex.WR mov and and mov sti push fwait in lret js (bad) nop mov push ror (bad) (bad) (bad) pushfq xchg int3 mov (bad) leaveq pushfq xchg stc sub cmp scas fnsave sarb (bad) movabs jnp jae es push mov pushfq icebp and out mov (bad) (bad) jmpq mov out xchg notb sub imul adc (bad) test std popfq cmp (bad) (bad) jrcxz sbb in clc movabs xor hlt out (bad) mov outsl jge jrcxz cs int3 retq xchg in sbb or pop fimull pushq (bad) (bad) (bad) (bad) rclb (bad) push icebp rex.WRXB cmp vpslld (bad) cmpsb (bad) in rex.XB icebp xchg out retq pop rex.RX movslq insl montmul cmpsb add and mov (bad) xchg stos mov mov (bad) and xor js faddp push (bad) mov out rex.B mov mov bswap movzbl bswap pop retq jmpq (bad) mov and adc (bad) mov rorl leaveq fwait jg rex.WR rex.R (bad) imul xchg jg (bad) xchg adc (bad) (bad) sub jrcxz add insb cld pop push (bad) callq and adc repnz rex.WB rex.WX or ss jbe lahf pop cwtl sahf rex.WRX mov pop rex.B jmpq adc rex.X js gs (bad) (bad) push sub (bad) (bad) decb xchg xorl push neg push packuswb jae pop sbb rex.WRX repz cmp rex.WB addr32 sarl sbb fisubr callq (bad) (bad) (bad) decl test fistpll (bad) scas fnsave movslq or sub xor jl xchg jbe mov hlt icebp pop fnsave movslq (bad) xor nop sti rolb push pop cmp xor jnp (bad) cmp mov out in add xchg clc sub (bad) scas sbb loopne mov cmp stos cmpsl adc movsb cmc (bad) test test stos jb cmp sub mov and jo jae push (bad) xor sbb lret xor repnz in fs (bad) fistp pushq mov repz (bad) (bad) std mov pop or pushfq mov (bad) (bad) (bad) std rex.WRB lret orb bnd sub js (bad) mov xor jb jp sbb insb cmp (bad) adc lea in fimull jae insb jp mov pushfq cmp test cmp sub bt bt test cmp jmpq nop cmp neg mov rex.W rex.WX rex.WX rex.R pop mov rex.WRB jp (bad) movabs jae rex.WXB xchg add stos loop sub (bad) movabs sub pop mov mov pushq out rex.XB (bad) (bad) (bad) cld adc in push sar pop out jb outsb cmp popfq cld sub rex.XB movabs add (bad) mov sub test stos repz leaveq push cs (bad) mov push rex.RX (bad) decb int3 sub (bad) imul jrcxz sbb push (bad) (bad) (bad) cmp dec lret push (bad) rcrl rex.WRB fucomi mov (bad) push (bad) or imul sub fnstcw mov rex.WRB dec popfq retq mov cltd or mov je and rolb xor stc jmpq mov xor repz fnstsw scas xchg rex.X sbb xor sti (bad) jrcxz xchg add movl mov or push mov cwtl xchg rex.RX or sub rex.WRX jmpq lahf mov mov pushq sbb scas add xchg jg (bad) mov xor rex.WXB (bad) repnz (bad) (bad) (bad) std jmpq callq (bad) pop cmovns in push rex.WB jb (bad) addr32 sbb push test adc push (bad) jne cmpsb test rex.RXB mov push add add (bad) jns lret stos mov (bad) (bad) (bad) decl sbb je scas sbb (bad) mov rex.RX mov lahf sarb (bad) (bad) xor shrl fstpt stos movsl jno lods out cmc mov roll (bad) jge (bad) ss xlat mov xor pop repz (bad) stos outsl (bad) or test verw rex.WR (bad) add movsl decl (bad) jl bt add cmp stc cmp movzwl rol btc dec cmc mov clc bt add stc test bt jmpq cmpl movabs cmp jl test shr subl fimull xor ja jo (bad) out movsb cltd (bad) rex.WRB sarl and repz push pop xchg fadd cwtl sbb (bad) rex movabs bnd adc sbb shl loopne in mov gs (bad) hlt push mov fdivs fistl (bad) cld pushq cmp (bad) jge (bad) push push mov lcall mov cs (bad) mov (bad) std sbb pop subl jnp sbb scas ds leaveq test pushq or lahf sbb rex.WXB push loop (bad) es insb (bad) pop mull mov in pop jb jmp (bad) mov xor jle sub jrcxz movabs test xlat or mov mov push pop rex.WB scas (bad) repz xor mov cmc jne (bad) cwtl adc in mov mov hlt and mov sub sti fdivrl adc mov outsl adc gs outsl cs stc sbb xor (bad) sub push xchg jle jns add sti xchg add and (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xchg movslq jns rex.RXB (bad) and add pushq and (bad) rex.WRXB and fildl adc mov add pushq or in (bad) mov xor ja jae test mov xchg mov and pop test cmpsl xchg (bad) pop cmc cs rex.WXB lret cmp sub (bad) outsb (bad) mov in enterq rex.RX mov sti shrl and pop test popfq adc frstor (bad) xor xor jbe std rex.X sbb sbb jmpq cld fbld ja (bad) mov decb (bad) sub shr lret sub cmpsl ds loopne lock rex.WXB xchg rex.X xor jbe mov fwait rorb (bad) or fdivrl push push icebp stc pop (bad) xchg pop int mov in ds adc jnp sub clc cmc test jmpq movabs xor fidivrl rex.XB add (bad) sub imul xchg (bad) adc (bad) adc adc xor rex.WX mov adc xchg xchg jmp adc pop fdivrl movslq roll fldlg2 lods (bad) clc movsl fcmovb pop cwtl jbe stos (bad) (bad) (bad) cld clc (bad) loopne (bad) (bad) decl shlb divl cmc enterq sbb outsb je ja sub leaveq cli sub rex.RX cs out pushfq (bad) jae movabs test add add rex.WRB rex.RB rolb lret or jl fidivl sbb (bad) (bad) or sub std rex.WRXB loopne insb cld xor add mov fdivrs out mov out cs rex.RXB gs outsl fs imul add sub add mov mov repz sbb (bad) xor and movsl jg mov cmp std (bad) or sub xchg pushq movabs (bad) movabs and jmpq push xor adc fnstcw addr32 jmpq movabs insl (bad) mov pop cltd sub add sbb adc pop mov (bad) enterq rex.WX rex.WX (bad) (bad) callq movabs (bad) mov mov rorb jb rex.WRX rex.RX push roll retq or xchg mov jns sub pushfq mov pop (bad) or mov adc push sbb mov in ja and (bad) jne xor test xor mov sub adc test or mov mov stos sbb (bad) test push mov xor (bad) add or mov xor int3 out add test xor xorb (bad) (bad) cld sahf mov (bad) (bad) (bad) mov rex.WRX jg xor fild add mov (bad) xchg xchg (bad) (bad) xchg cmc sub jl in rex.WR sub cmp pushfq add data16 cmp xor pop or xchg movabs callq (bad) mov cli int setb (bad) xor adc jge sti rex.X rex lahf xor jmpq scas sbb mov push pop mov mov add cli mov sub test and mov cmp (bad) and nop adc cmpsl outsb sub (bad) (bad) sti xchg in jnp pushq (bad) (bad) std test mov xor stc add movabs xchg xchg jo (bad) (bad) mov sbb (bad) (bad) ljmp imul adc fild lea (bad) in mov rex.RXB rex.WRB jge rex.WB push jp retq lods xchg sti (bad) data16 test jrcxz xor xchg mov mov icebp movabs jmpq cli clc bt sub data16 (bad) add not movsbw mov jmpq (bad) mov (bad) jp (bad) lret cld pushfq mov stos (bad) jg rex.B rcrl adc in faddl stos xchg rex.RX cmp imull and xchg out nop callq xchg loope xchg ss icebp (bad) and xchg outsb rex.WR movabs (bad) rex.WRB (bad) out lret outsb (bad) movabs imul and (bad) repnz jb,pt rex.WRXB rex.WRXB jae mov stc or push (bad) (bad) (bad) std cmc mov cmp or rex.XB (bad) pop mov movsl shl rex.WX fs cmp movsb xchg and sbb add mov repz xchg add add cmp clc add (bad) repz neg clc add dec or stc add xchg sub ror (bad) repz mov jno xor adc neg mov clc push rol add mov clc cmp cmp stc sub jmpq pop je jmpq jmpq jmpq jmpq jmpq cmp xchg pushq push and or lea (bad) (bad) pop in or ja pop mov fcompp or adc xchg (bad) rol cld fcom (bad) enterq rex.R jp lret je (bad) (bad) (bad) add (bad) lods or lea jnp jae mov (bad) rex.WB add js int fmuls scas out xchg adc mov sahf cwtl mov xchg pushq pushq xchg movb xchg in fcmovnbe mov outsl retq sbb outsb (bad) movabs rex rex.WXB insb pop lods movabs sub (bad) jns (bad) (bad) (bad) lods sub mov mov (bad) pop push xchg sbb and mov pop lock imul pushq (bad) sub or pushfq stos mov rex.WX mov jns xchg xchg jmpq xchg outsl sbb mov or sub (bad) lock rex.WRX cmc (bad) cmp cmp xchg stc ja cmc sub rol bt sbb shr add jmpq outsb jae mov out mov shr rex.XB mov cmp mov jge xchg cmc outsl and sbb mov cmp retq mov movabs (bad) js iret cmp and enterq sbb mov adcl sbb rex.X mov scas iret (bad) in sbb mov movabs jle in loope and cli push rex.B mov rorl (bad) (bad) (bad) cld or jno (bad) (bad) (bad) (bad) sbb sub lods mov cld jle shrl fisttpll (bad) (bad) (bad) lcall mov (bad) adcl adc gs gs cld outsb rex.W jns pushq xchg ja mov cmp jo xor test cltd iret (bad) mov cmc js push or notl add jbe bts bsr stc not sub sub btc mov dec rcr mov shrd test shrd add data16 mull iret shr sub bsf btc mov sbb sar add not movsbw not lea mov jmpq jmpq callq clc jmpq iret add and subb je adc enterq callq (bad) jo,pt negl data16 sbb sub lret mov stc rex.XB (bad) jmp imul cmp sbb and mov sbb shr int in push or adc subl sub pop cmp adc and (bad) in fdivr (bad) (bad) sti scas jbe (bad) (bad) (bad) (bad) fwait rex.B (bad) rex.WX sbb add add rex.X data16 cmp cwtl rex.WB mov cmpsb mov (bad) xchg lretw xor sbb sub mov pop insl enterq (bad) xor xchg mov lods adc (bad) and push mov negb rex.WXB pop (bad) mov in mov mov leaveq in xchg (bad) out (bad) cli cmc out xchg cmp mov push subl (bad) or test neg fcoml jno (bad) xor and (bad) cli cmp and stc scas add lahf fist test add out sub sbb (bad) and (bad) (bad) cld jae insb and xchg (bad) and (bad) rex.XB jg movabs xor mov push pop cmovg pop int (bad) jae push js add add movslq sbbl (bad) adc enterq cmp std mov sub mov test pop jae movsl mov xor cmp push (bad) and fnop push shll adc push loop enterq fcomps adc jl jo or mov pushq sbb movabs add std pop xchg mov rex.XB lea xor std push xchg xlat (bad) fwait retq (bad) mov (bad) cli or (bad) movsb stos (bad) xlat roll (bad) (bad) (bad) std addl jrcxz add add mov jb jl xor mov popfq mov mov insb lods loope cmpsb rex.R mov repz (bad) or or jmpq shl rex.WX movabs jne addr32 int3 pop outsl lret rex.R shrb cmp rex.RX pop movsl (bad) and rex.W jne jmp (bad) loop outsl retq shl mov mov mov jb push loope movabs add adc test mov clc xchg and (bad) jmpq je cmp bt bt add bt bt bt cmc cmp jmpq cmc stc add jmpq jmpq mov jmpq jmpq int3 or rex.WXB lock pop (bad) xchg mov out stos adc mov rex.B addr32 pop jge rex.WRXB in xchg sub (bad) mov test jb insb xchg xchg xchg rol (bad) rex.RB add xchg jmpq cmc callq std cwtl pop loope cmpsl imul (bad) add sbb (bad) xchg jne mov (bad) (bad) decb lret movabs jne sahf notl push or (bad) or (bad) xor rex.WRX jne mov sbb sub rorb (bad) sub fistpl (bad) (bad) (bad) jo jmp stos xor mov mov mov out xchg or fisubr (bad) jbe jp scas xor imull pop lods sub (bad) (bad) (bad) decl xor (bad) cmpsb mov cmc sti push or pop roll rex.R mov ja fcmovnb lahf mov jg loop cmp xchg sub in lret cmovle sub add repnz mov or out icebp hlt lret nop adc xchg and (bad) jrcxz lods rex.X mov movsl lahf sub sbbb movabs add xlat (bad) testl or (bad) sub (bad) (bad) mov xchg and mov (bad) (bad) (bad) decb jns mov (bad) (bad) (bad) or or repnz push (bad) jle je cmp sub (bad) shlb mov lods pushq (bad) (bad) callq pop (bad) xchg jae (bad) xchg (bad) adc pop xlat mov (bad) loopne cltd scas mov (bad) sub sbb int test jb rex.X xchg rex nop std clc adc (bad) ja stos lahf ss xchg stos xchg sti xchg out movabs sbb sbb cmp push xor (bad) (bad) decb jl rex.WRX add sbb sbb rex.RX rol and iret xchg (bad) stc add icebp or cmpsb jb pop addr32 sti popfq xlat (bad) imull sbb xchg rex.WXB pop (bad) movabs mov cld (bad) rex.WRX cmc sub test test cmc cmp jmpq bt test and jmpq ja jmpq xchg mov stc jmp cmovl and loopne jae rex.WRB rex out xchg mov adc clc ss add add loop mov push cmp stc sbbb sub mov out pop jmpq cs pop push mov rex.B jmp rex.B jg insb rex.WRX xorl and ds lahf adc insl (bad) cmpsl lods mov (bad) (bad) (bad) rex.WXB (bad) (bad) cld fcom jp mov (bad) (bad) (bad) jmp (bad) push rex.WX add imul mov xor sub pop lea push sbb in sbb rex.WRX or mov repnz retq cld pop add mov popfq stos (bad) adc push (bad) ja mov mov cld addr32 or xchg (bad) sub rex.XB lea rex.WXB and and sarb (bad) jmp sbb in xchg hlt jno sub insl movslq xor add pop lret jl out cmp and rex.RB cmc rex rex.WRB push (bad) xor pushfq xchg rex.WRXB cmp out pushq rex.R mov add movabs enterq (bad) (bad) (bad) cld loopne ror (bad) (bad) (bad) (bad) (bad) repz imul add add jae lahf movabs (bad) es mov movabs pop cld mov sub sbb fdivs xor (bad) rex.WR int3 imul (bad) (bad) xchg mov sti (bad) movslq jle stc mov repz mov jnp add xor (bad) pop add bts mov bswap shl add rcl sub ror inc shld mov clc sub stc jmpq jb clc cmp jmpq or nop imul subl cmpsl shrb jmp (bad) mov jb mov mov mov add sbb out rex.XB clc fucomi nop movslq and or xor sbb data16 iret (bad) pop mov fwait (bad) (bad) (bad) sti mov or hlt in or (bad) (bad) (bad) std or cltd jle rex.RX mov fisttpll insb adc (bad) xchg cli (bad) callq mov cmp jp test add jb xchg pushq rex.WXB add test rex.W push fs jae movabs or jp clc and and cmp push rclb ss callq bswap not mov movzbw mov xchg movsbq xchg pop bswap mov lea bswap mov jmpq jmpq jmpq add xchg sub fdivs pop test sbb or sub in fdivl xchg adc (bad) out mov sbb pop and mov sbb sarb mov rcr inc js pushfq and rex.WR jrcxz sbb pop loope mov lea (bad) (bad) (bad) sti cmpsb cmpsl mov (bad) std mov push mov int3 mov fbld jrcxz lods mov ror jne mov (bad) cmp xor (bad) or cmp mov push (bad) imul (bad) icebp cmp std push add mov push adc (bad) (bad) (bad) pushq xlat shlb jp shlb mov xchg fs pop adc add js callq mov lahf int test insl or je in push cmc jmpq xlat (bad) (bad) callw cld cs andl je (bad) out mov pop lahf shlb and mov (bad) leaveq mov pop rex.B sbb loop cld cmp retq imulb lods sahf leaveq lahf (bad) imul outsb out or push fildll int3 out (bad) jns (bad) (bad) and rex.RB jo mov (bad) callq xlat retq xor (bad) (bad) cld out rex.WB (bad) (bad) (bad) (bad) cli or jns lret and cmc jrcxz addl rex.WR jp mov xchg mov jae lods std (bad) and insb or int3 icebp xchg cli movabs cmc push ja cld pop rcll xor mov add callq push mov out ror int clc enterq xchg mov (bad) (bad) and xchg cli push pop movabs mov movslq addr32 (bad) cld in (bad) or add rex.WRXB sbbb xchg or rex.RX jg (bad) je scas sub sbb cs scas cli sbb stos ss rex.WXB retq or (bad) (bad) (bad) std imul (bad) (bad) (bad) jl cld mov test (bad) sub jae adc jo test add rex.X out out mov ja sub adc push cmp outsb mov add (bad) push sbb loop xchg mov jbe pop fimul jl push adc stos mov xchg mov (bad) rex.WR xchg test fimul cs idivl lgs je xchg (bad) sub rcll pop jge rcl or int popfq push test push rex movabs sbb fisttpl cmp pop xor scas add sti rex.XB sahf fnsave std xorb sbb jbe (bad) adc mov push fmuls movabs add lods pushq lock or rex.WRXB (bad) cld sbb (bad) xor (bad) sub sub or cs jg sub (bad) (bad) (bad) ljmp (bad) fdivr pushfq sbb mov (bad) fs andl push je xor xor (bad) sub rex.WX fdivs (bad) retq pushfq (bad) pop (bad) mov rex.W cmp mov adc mov (bad) in test or fldcw and rex.WRX cmp out test out stc jrcxz cmc fisttpl cli xlat mov cltd push push sub adc (bad) add adc add xlat xchg test addr32 fsubrs cmc add out (bad) pushq (bad) pop movsb nop test and jne push jg test (bad) (bad) (bad) sti lret jmp rex.WR gs (bad) (bad) std fsubp add pushq (bad) loope je mov adcb and lret pop test (bad) jle insb rex.B rex.X ficompl lret jne movabs pop fdivr cmp movslq mov fimul rex.WRXB rex.RB (bad) mov xchg pushq (bad) (bad) (bad) mov loop sub xchg movsb cld and pop repnz (bad) js jmp data16 jnp pop or cmpsl int3 fnstsw cmp sbb sbb or scas mov add fstpl push add cmp cmp jmpq xchg jns mov cmp jmpq add mov (bad) cmc jrcxz pop (bad) (bad) (bad) or (bad) cmpsb lret add fcomps cmpsb rclb int3 xor push xchg and rex.WX int movabs lock out jp mov mov test jg fwait xchg test nop (bad) hlt fldenv mov cs out and jnp out cwtl mov jo lahf cmp outsb test adc test out sub icebp rex.XB (bad) jne mov sub rex.RB (bad) (bad) std cmp es (bad) (bad) (bad) decl (bad) movsb enterq sti mov mov jmp cmp jnp add add or jp (bad) rex.RX fwait testl jg xchg jle (bad) mov push repz jmpq mov movabs jnp mov mov scas sub sti xor adc (bad) jg scas (bad) mov add mov (bad) jne test xor shr mov test cmp jmpq jmpq jbe shrd mov rcr add sbb adc cmp mov xor stc bsf add cmc add movl adc seta mov bt cmp cmp jmpq jmpq jmpq mov not mov lea jmpq pop sub out jmpq testb int jb mov and movb enterq rex.WRX scas add push cmp rex.WRB loope jb jne addr32 sub xor xchg (bad) cwtl (bad) sbb rex.W out in adc pop or (bad) fnstenv int ss test pop rex.RB cwtl pushq (bad) (bad) cld jmp (bad) pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) sub mov stc mov xchg imul add rex.WX sub rex.R cs pop cmp adc psraw nop mov test (bad) shlb cmc clc insl sbb hlt data16 xchg mov (bad) scas movb (bad) callq xor test test sub setnp add and mov rcl and sub mov stc repnz jmpq jmpq (bad) pushq adc vpsrlw jo in (bad) out mov (bad) ror repnz cld sub ds repz lock push lret jnp and cmp outsb rex.XB callq xchg mov (bad) mov scas rex.XB rex.WRX lret or lock pop rex.R or es shr add insb (bad) test jg jp sbb insb (bad) (bad) (bad) cld rex.WX (bad) (bad) (bad) pop sub xor sahf test xlat jno test fcos (bad) (bad) (bad) fnstsw push rex.WRX pop out int jl rex.WXB ljmp (bad) jo adc movabs imul cs adc mov orl rex.RXB repnz or fwait int jb cmp bt jmpq shr jmpq (bad) sbb cmp ror movsl sbb in rex.WRX popfq push xor xchg add xchg cmpsb cmp test adc mov int sahf callq rex.WB mov pop jg insb (bad) outsb sbb (bad) cmp mov lods setne incl mov fisubrl gs cmp rex.R rex.RB jmpq jb jo cltd pop pop out jg (bad) (bad) (bad) cld adc (bad) (bad) (bad) (bad) sub movslq jl (bad) (bad) ljmp sti push pop imull (bad) int loope popq pushq movslq cs lods outsl mov jne retq test push mov sub jae lret out (bad) jle fisttp mov or mov pushq gs mov mov rex.WRXB cmp or mov ficom pushfq sti callq retq stc (bad) xlat bts (bad) repnz (bad) out or lods add cmp addr32 xlat xchg popfq rex.R cmpsb push retq fimull lahf nop xchg pop (bad) pop mov ds fsts cvtps2pd (bad) loope (bad) sub (bad) (bad) icebp (bad) rex.RXB pushq (bad) cld adcl (bad) (bad) xchg push cmc (bad) pushq (bad) cmpsl mov push jno add add adc fstpt pop test jge (bad) cmp (bad) mov pushfq sbb xor (bad) xor idivb (bad) mov rex.WRB je push (bad) gs push retq lahf ror (bad) (bad) (bad) jne adc push jae and mov cmp mov sar setl movsbl bswap mov clc cmc jmpq adc jmp rex.WRX lea mov sbb retq (bad) jmp mov cmp rex.X mov rex.W jmp or out rex.WXB sahf rex.RX (bad) add fstl and xchg in adc sub rex.WX retq adcb xchg test test idiv (bad) (bad) sti (bad) adc (bad) (bad) (bad) inc lods xor (bad) (bad) (bad) rex.RXB add rex.RXB adc push mov pop cmp jo movabs xchg popfq mov icebp (bad) pop (bad) (bad) (bad) movsl add pop subb pushq rex.X xor rex.W jb cmp mov or push (bad) sti push lock std std add fs retq jae push rex.WRB lret (bad) frstor (bad) mov mov (bad) pop ss mov in lea rex.WB cmp (bad) and (bad) push push (bad) jmp sub xchg add rex.R rex.RX rex.X (bad) mov (bad) (bad) sub push enterq fiaddl cmp cmpb jmpq jmpq ja clc jmpq jmpq jb jmpq jns nop push mov xchg (bad) pop retq and (bad) shl sub out loopne (bad) jae mov xor or mov lods loop nop add in push sub (bad) mov fisubrl xor sub mov (bad) adc in (bad) dec mov mov movslq pushq test xchg sub mov xor mov lahf cmp sti jmp outsb xor (bad) mov (bad) mov lea or sbb cli mov cmp or (bad) rex.WX fbstp cld rex.WRB (bad) (bad) jmpq pushfq imul mov or push in or xor mov in mov fistpll (bad) popfq cld fwait shrl repnz out jl pop std pop fisttpll adc clc callq jmpq jne jmpq ja bt bt jmpq js (bad) lret mov (bad) outsl addr32 or imul addr32 cwtl (bad) rex.XB sub sahf mov xor callq cmp jno (bad) cmp (bad) (bad) mov (bad) (bad) mov leaveq or jl movsb scas insb retq xchg jmpq xor rex.WR rex.RB cmpl in xlat (bad) lret cli and add mov shll in popfq jle cld xchg add subb rex.WRB testl (bad) (bad) cld (bad) (bad) movsl add (bad) (bad) (bad) (bad) je xchg adc outsl mov divb retq xchg mov hlt lock ror (bad) imulb rex.W add je (bad) rex.RX fisttpll jl xlat pushq rex.RX jg rex.WRXB pop std loope pop sti lret lods (bad) or mov or mov mov in add ja jmpq jmpq jae lea not mov setge movsbl mov bswap lea mov jmpq lret mov shrl or ds in xchg sub mov or sti rex.WRX add lock mov ds rex.WXB imul fild mov icebp mov or loope xor data16 scas (bad) (bad) mov xchg sbb in in iret mov pushq (bad) notl enterq push (bad) mov lods (bad) (bad) cltd mov jb (bad) jo add sub rex.RX xchg out rex.WXB (bad) or int3 (bad) (bad) (bad) (bad) (bad) stos mov and (bad) (bad) jmpq and pushq (bad) or or (bad) cmpsl mov (bad) lock rex.WRXB movslq sub in rex.XB jo sti xor (bad) (bad) enterq mov and cmp cmc pushfq xchg mov mov (bad) lahf mov (bad) jmpq mov cmc cmp bt cmc sub clc test clc repnz jmpq jns (bad) (bad) rolb pushfq pop lods (bad) fs movslq data16 jo out pushq movsl (bad) sub push in (bad) sub rex.WRX (bad) andb cmp adc lahf and test fnstenv popfq test lahf jno std sarl retq or stos (bad) add xchg fisttp (bad) ficom xor sub retq out pop push jb pushfq adc test or sbb outsb xchg cmp xchg movabs data16 sub (bad) (bad) cld cmp (bad) (bad) (bad) (bad) decb movabs (bad) (bad) (bad) dec (bad) rex.WB imull jge repz imul adc (bad) leaveq rex.X mov sub mov cmp retq mov jo pop xor outsb rex.X sti cwtl add (bad) pushfq scas rex.W and repnz punpckldq roll adc (bad) decl jne jp movslq jle cwtl push pop rex.X enterq mov sub add mov (bad) test xchg rex.RXB insl mov jrcxz insb sbb (bad) cs push push mov mulb pushfq rcrb or js adc callq mov fisttpll xor (bad) jbe (bad) scas sbb hlt push rex.RXB mov rex.B (bad) test jnp movslq sub test and (bad) (bad) (bad) cld push fwait cmp xchg (bad) (bad) (bad) (bad) xchg cmpsl mov rex.RX imull add insb push adc (bad) (bad) jmpq xchg mov shl shlb cld in push in (bad) int3 (bad) pushq push icebp ffree and add (bad) (bad) cmc xchg jl sbb cmpsl clc ja mov (bad) ja lahf add adc mov adc adc add xchg bts mov jmpq clc cmc lock es rex.RXB adc sub cmc lock mov mov and adc js nop cmpsb es cli mov (bad) insb pop add mov mov retq (bad) and xchg cmpxchg xchg cmp cmp rex.XB or outsl leaveq jae lret pop or or cld pop and mov (bad) jo cltd (bad) (bad) mov std or xor lea insl loopne (bad) (bad) adc xchg rex.XB rex.RXB sub sub fimull in movsb sub push fs cltd (bad) mov push pushq (bad) (bad) (bad) callq jge pop lret rex.WRX repz (bad) iret rex.WRXB jrcxz enterq fmuls mov xchg std xor jg mov sub test imul hlt adc mov adc mov (bad) jmpq jmpq jmpq jmpq jle (bad) xchg adc (bad) cli outsl or cmpsb or mov (bad) lahf loopne add or jno (bad) xchg rex.RXB repz clc adc or pushq scas test jae (bad) rex.RB (bad) cmp movsb (bad) rex.R rex sbb movsl and fdivl mov retq clc xchg mov or mov adc rex.WRXB ds cli pushfq (bad) pop stos rex.RXB rex.WRXB (bad) (bad) cld mov (bad) (bad) (bad) dec fwait std (bad) enterq mov movabs add rex.WRX and gs leaveq clc xchg test rex.WX mov enterq (bad) cmp xchg rcrb sbb lods mull (bad) mov (bad) cmp mov mov adc xchg xchg movabs stc clc bt cmp cmp jmpq rex.RXB (bad) and test stos cmp rex.WRB stos mov (bad) shll jns cwtl lret cli sub rex.RB enterq push pop mov mov cmp mov (bad) (bad) stos sub test (bad) (bad) add in push ror (bad) adc mov sub and (bad) (bad) (bad) cld insb loop or (bad) (bad) (bad) (bad) jg xlat xchg cmc lock xchg cmp pop seta mull pop or push idivl add movslq (bad) icebp and out (bad) (bad) (bad) (bad) ljmp imul cmp (bad) (bad) sbb rcrb (bad) and and (bad) rex.WXB rex.X es xchg mov xchg stc (bad) rex.WRXB adc out movsl rcrb sahf rex.X int3 cmp mov jb jmpq mov jmpq dec clc (bad) rorb movsl (bad) push pop (bad) adc fs mov rex.WXB iret sbb stos rex.WR (bad) rex.R cmp rex.X push mov push cli mov (bad) int sti adc insl rex mov movabs push cmp add sarl in test shrl std and or (bad) (bad) decb xor retq out jrcxz rex.W loopne sub decl loope fsub mov mov mov jrcxz outsb pop (bad) cmp add (bad) mov test xor out es scas mov mov rex.XB jns roll push mov mull rex.WXB mov cmpsb (bad) pop cmp movslq add xor jnp js (bad) cmp and adc (bad) rex.WR retq (bad) enterq push cli in es cmp ljmp rol (bad) test sbb and flds clc movabs or fs xor rex.X rex.WRB jrcxz rex.WB rex.RB incl retq cmp scas movsb rex.W sbb and cld or sbb loope (bad) (bad) (bad) (bad) movb jne push rex mov mov loop and (bad) (bad) lcall mov (bad) pop add or fwait in (bad) (bad) cmp mov mov jno je rex.WRB rex.WRXB mov rex.WR mov js (bad) pushq jns mov (bad) push and je xchg jp xor hlt rcr push cltd and pop pushq adc out leaveq (bad) mov outsb add pop jmpq std (bad) jb xor loope sbb (bad) jae jmpq push push rex.X sub movsb rex.WR sbb mov rex.WRB out or pop loope (bad) (bad) push rex.WR rcrb sub rcll (bad) (bad) std cwtl scas idiv add (bad) (bad) push mov outsb add mov lcall iret scas lea jb clc (bad) and fs cltd cli pop rex adc icebp stc pop (bad) rex.WRXB mov pop sarl mov (bad) shlb fucomp cmp add push test rclb (bad) (bad) pop mov fwait rex.WB retq add mov pushfq stos mov fwait add shrb jne loopne callq jle xorb movabs fwait add and cltd mov repz enterq (bad) adc ja jbe adc cmp (bad) (bad) xchg (bad) sti (bad) xor (bad) imul movsb add (bad) lods (bad) fiaddl adc mov js cmp (bad) (bad) (bad) std cmc mov add or or rex.RX icebp jg add adc cld pushfq in rex.R (bad) (bad) or lods mov pop jg test pushq (bad) push callq int add shl dec mov mov xadd mov sbb rol sar mov bt cmc bt xor stc stc stc repnz jmpq jmpq jmpq stc movzwl ror mov cmp cmp jmpq add push push push rex.RX gs gs outsl jb add (bad) jmpq jmpq je neg add sub shr sub shl test sbb shl shr not add bsr mov rcr add bt shr neg rcl add cmp mov clc jmpq scas int3 out (bad) stc out fwait or xchg (bad) push test loope (bad) mov push nop jg jg repz add movabs callq cmp or mov cli push pop jae or (bad) push xor rex.RXB pushq pushfq pushq mov movabs jb callq imul cmp rex.RB lahf jge pop add cmp mov insl jbe ds jp lret rex.RB (bad) (bad) (bad) (bad) cld rex in out (bad) (bad) (bad) (bad) push vmovsldup mov (bad) pop rex.WB jnp int (bad) (bad) (bad) callq enterq pop nop xor sub rex.WR add cmp sbb mov (bad) (bad) xchg clc (bad) pop imul pop lret pop clc xor push (bad) push cmp jnp mov mov sbb js verw rex.X add gs (bad) (bad) jmpq test cmp or jmpq push rex.W rex.RB rex.WR xor cs insb add clc stos sbb rex.WRX rex.WX rex.WRB and rex.R mov fistpll xlat xchg xchg rex.W rex.W insb or mov jg sub (bad) xchg int fdivrl mov mov rex.WX mov (bad) sub add xchg mov pop pushq mov pop imul xchg (bad) (bad) (bad) std pop pop hlt jns (bad) (bad) (bad) ljmp maskmovq notl movsl int3 mov rex.RB sbb rex.WRX jp (bad) xchg scas adc sbb or push add add or mov rex.WX mov and lret pop mov in adcb stc or ja add hlt lods mov nop in sub stc pop xor xchg (bad) mov fcmovb cwtl xor mov sbb insl cli movabs xchg adc sbb or insl clc test movslq jmp cmp xchg or jmp loopne sub cltd mov push jge (bad) pop xchg std jmpq cmpsb retq mov fcoms (bad) or xor pop pop sbb rex.XB rex.WRXB mov fldcw (bad) adc gs (bad) (bad) std es pop push (bad) (bad) (bad) (bad) cmp push (bad) jmpq movabs in jg (bad) xlat (bad) movsl (bad) add cmp or add jle jge fadds ja int out push cmp or rex.X cmp mov sub xchg xchg mov int3 imul jns mov (bad) rex.WXB clc pop lgs fucomip sbb add jae add ja test sub xor add btc (bad) lock fldl fstl mov not clc ror mov cmp cmc repnz jmpq sbb outsl rex.X (bad) jns sti jmp (bad) rex.W rex.RB xchg scas adc cwtl sbb in (bad) xchg movabs push or enterq xchg (bad) (bad) jg out mov (bad) gs push add (bad) cli sub sub movsl mov adc rex.WRB cld and add vsubpd notb outsb out (bad) (bad) (bad) cld sub (bad) (bad) (bad) (bad) (bad) cmp rex.WXB rex.X es orl in test sbb (bad) (bad) (bad) (bad) mov (bad) pop rex.W lahf iret sti lock movabs add or std rolb jle data16 neg jb rex.WRB push pop or pop cmp in cld push sub and or (bad) icebp (bad) add cs retq xchg adc lea lock rex.WX mov js es push mov mov mov adc xchg sbb jno sti xchg jmpq or nop je jno (bad) int shrb pop mov add clc andb xlat outsl xchg repz ficompl pop out (bad) stos mov fbld adc mov (bad) (bad) cld iret mov mov (bad) (bad) (bad) (bad) loop loope in adc mov push jp mov xor (bad) stos pop not add rex.WRXB jne sbb adc pop pop adc cltd mov rex.XB fwait add sbb jge mov es divb jrcxz push lock clc (bad) mov sbb rex.WRX (bad) jne decl test inc loopne mov neg movsbw sub ror stc bsr mov shl sbb rcl bt add sar cmc dec rol mov stc cmp test jmpq clc outsl mov rcll lret mov rex.XB and adc lock cli xlat retq stos adc jmpq mov out or mov rex.RX fldt movslq out leaveq imul outsl jge xor out (bad) push mov and ds jmpq rex.WB or fdivrs sub pop adc cld data16 cmp (bad) (bad) (bad) (bad) jns adc outsl xor add (bad) (bad) (bad) stc xchg (bad) sub (bad) adc andl cmp out loop pop jbe cmp fdivs sbb lahf lea loope cmp push mov xor movabs sbb and jmpq jae xchg mov bswap jmpq add rex.R jae insb jne pushq insb jbe jb (bad) movslq add icebp xchg rex.XB jge adc sub loopne movabs push adc lret (bad) cmp icebp out push faddp clc ss jg repz fsts jno adc xchg pop cwtl mov nop (bad) or sbb or insb xor push (bad) adc xor xor push popfq nop pop pop adc add (bad) (bad) (bad) cld pop sub (bad) (bad) (bad) jb (bad) insl (bad) cmp (bad) rex.WX sub (bad) stc jae ja sbb xor fwait (bad) in shrb adc (bad) (bad) (bad) callq pop sbb mov test rex.XB mov out (bad) pop rex.XB rex.RXB add stos rclb retq subl add xchg scas gs adc rex.R inc mov bt test cmp stc add cmp movzwl stc mov test cmp test stc add bt clc mov bt test jmpq pushq jg pushq jmpq adc pop rex.WXB rex.R and jmp mov scas adc push clc cwtl sub fmull rex.RB rex.B sub cltd (bad) (bad) sbb gs cmp mov jl sbb xchg rex.WX rex.WX popfq (bad) sub adc enterq (bad) (bad) std (bad) mov mov xchg add add (bad) hlt fistpl lret push (bad) enterq divl cmp insl movabs jno lcall or add xor (bad) loope cmp mov mov movslq xor (bad) xchg push ss mov mov cs js xor mov mov rex.WB js cmp (bad) or int3 cmp gs cmpsb jns ds add (bad) (bad) and sbb out orl cmp cmp cmp pop js cld add or jns cmp in stos push jp cmp outsl movsl (bad) push not fbstp cmp insb add (bad) mov fstl mov sbb sub lods jnp xor xlat in sub ds sub adc xorl cmp lret (bad) fisubl imul sub push test mov js lods add add jnp xchg mov mov add out or pop lret and add sbb in pop push icebp jo pop (bad) push divb mov rorb mov and fcom or jl xor cmp xchg ds jle ds subl or xor (bad) iret mulb jle (bad) or in or rex.WRB add addb movabs cmp jbe cmp (bad) xchg sbbb (bad) callq adc (bad) cmpl jg and mov jne data16 push fiaddl push and xor mov retq push cmp shl push test add jge push rex.RX repnz adc cltd rex.WRXB sbb mov (bad) lahf xor cmp stos test rex.XB and (bad) jae test movabs mov shlb fsubp sub xor xchg jmpq pushq sbb (bad) (bad) stos sub (bad) xchg rex.WRX rex.WR (bad) gs lret std xor (bad) rex.WB je mov add mov push rex.WR adc mov movslq (bad) mov retq test retq js adc scas lret adc int adc xchg jns jmpq je inc shld jmpq and bts test mov clc jmpq stc jmpq add add xor push add add pushfq (bad) sbb add add or add or add rclb add adc add adc add add lock add movabs add lock add loopne add add add add add add add add add add adc add adc add sbb adc add sbb push adc add add sbb rex.WB jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul js jb js pop insb insb add movslq push fmull repnz or lods (bad) push add (bad) imul jp fwait push cmp pop xor data16 in or (bad) sub (bad) lods ss sbb fmul jae adc pushq je pushq (bad) shlb fadd nop mov outsb test rorb iret mov callq rex.B sbb or dec jg xor fiaddl flds cld add xchg loopne lret jae sbb js and lret pop jmp fs mov outsb jmpq (bad) mov sahf jrcxz ss cmp sbb jmpq js sbb push (bad) (bad) stos xchg sbb push stos insb movabs xchg mov push jmpq test jno add push scas mov (bad) stos (bad) (bad) mov test shr lods (bad) xor cmc xor push (bad) in rex.WRX js jrcxz rclb xchg repz lahf (bad) retq jrcxz jl imul rex.WRXB adc and retq pop orl xor sahf or icebp xchg dec and pop pop movabs add lret rex.X out and (bad) xor sbb lahf (bad) sub push (bad) and (bad) cmp cld leaveq mov scas pop (bad) in fiadd pop int3 mov lods (bad) rex.WX movslq insb adc or jb in jns fild or sbb outsb jmpq cmp mov (bad) jbe pop (bad) xor adc gs rex.R push mov fsts pop mov jns test xchg mov out (bad) pushq (bad) out test faddl pushfq loopne mov rex.WX push or andl rex.WB mov fadds xor sbb pushq or rex.WRX lahf movsb shl ss rex.WXB sbb pop stos add pop cmpsw (bad) mov xchg (bad) (bad) je jb adcb xchg mov sbb movabs lock movabs rex.XB mov icebp pop fdiv (bad) imul mov movsb and loope jle rex.X and callq xchg (bad) cmpsb add (bad) movsb (bad) (bad) rex.WXB cmp rex.W ss mov sub sbb popfq fsub ss jg rex cmpsb rex.B cmp pop sbb in je xchg int3 sub sbb mov and and jge sub imul rex.WX rex.XB stos fildll add lret (bad) pushfq sbb jmp sub rex.WB pushfq retq sbb jrcxz (bad) int cwtl mov pop addr32 jb sbb test cmc (bad) (bad) mov xor sbb jl (bad) fdivp stos fwait pushq sar (bad) leaveq rex.WXB push mov cmp pop pushfq xchg sbbl insl sahf xor adc (bad) (bad) rex.RXB cmc gs in test pop cmp or xor test fisubr rorb in push imul rex.WRXB insb out cmp (bad) pop movabs adc (bad) rcrl cmp movabs push (bad) leaveq and lods test jl fiaddl loop pop mov insb rex.RX and push in mov xchg mov ss sahf hlt jg and xchg (bad) sub add fcomip push mov and lock int add in add fldcw ss sahf scas mov cs cmp pushfq leaveq in add (bad) adc loop sbb ds rex.B frstor rex.RX sub (bad) callq add loope jl (bad) or xchg cmpsl rex.WXB push std movl cmp and repz (bad) ja callq repnz out and fnstenv outsl (bad) pop jg rex.RB imul rex.WR or rex.WX cli pop test pop push and pop (bad) cmp cmp (bad) cmp xchg imul and (bad) jmpq cmp insb push in sbb outsb or xchg (bad) fs mov jo (bad) popfq cmp xor xor (bad) repnz in mov loope (bad) (bad) imul repnz stos repz (bad) (bad) shlb or (bad) pushq jg movabs (bad) or cmpl rcr xchg (bad) std cmp pushfq jge (bad) (bad) lods (bad) cmp sbb rex.X push jne out sub pop addr32 iret xchg xor and push sbb pop mov insb retq xchg (bad) adc pushq (bad) xor sbb xchg in int dec scas mov lret leaveq cs rcrl retq movslq rex.X pop jge rex xor outsb jg lahf cmp and orl adc mov ror sbb (bad) fs (bad) or jmp dec mov cmp push movabs sbb xchg enterq (bad) jl xchg addr32 xchg retq mov mov (bad) rcll addr32 xchg fnstsw pop (bad) or testl movabs (bad) mov rex.WRX gs mov insb (bad) pop jge shl push neg sub cld sbb fistp and jnp (bad) rex cmc adc shrl retq idiv stos pop fistp mov sbb repnz stc mov iret mov loopne pop out add cwtl ja popq xlat xchg ja xchg (bad) xchg jbe pushq (bad) xor (bad) lret sub xor (bad) fidivr pushq xchg andl fbstp std mov sbb lods movslq and jle jmpq rex.XB rex.XB test push (bad) xchg add or icebp adc or mov fmuls rex.B mul retq nop xchg mov scas jmpq insl (bad) and rex.RXB or jl rex.RXB mov cltd lea fcoml xchg jns rex.RB push in int3 lahf xchg rex.WR cmpsb popfq sub ds pushq or adc cmc movsl pop repnz fisttp cltd (bad) loopne in (bad) gs imul jnp mov loop loope addr32 pushq (bad) sbbl shr (bad) cmc movsb sti movsb sbb movslq (bad) xor iret sub rex.R sbb pop femms (bad) cmp leaveq jo xor or rex.X push addr32 shlb push rex.WRB or pop xor je sbb or test (bad) jns mov xchg mov vorps xor mov (bad) rex.RXB out icebp sub movslq jo xchg nop insl and or stc test and pop lods insl test shll xlat (bad) jrcxz cld rex.XB mov push lret loopne mov callq and (bad) jp (bad) fs rex.B repnz lea and cld ja jle and (bad) fild fs cmp mov cmp outsl adc mov pop sbb test out jp fildl (bad) sbb lods imul cmpsb movabs jge pushfq sbb mov rex.RX pushfq and insb mov in ja int3 jrcxz or jmp jmpq and repnz ds (bad) pop mov cmpxchg fldl hlt (bad) (bad) cmp outsb sbb pushq sub (bad) xchg mov jo sbb sub (bad) rex.RXB adc (bad) pop or test (bad) movabs outsb (bad) ds std je movabs (bad) sbb jnp jmp or xchg mov (bad) or cmp jrcxz cmc jmp or adc stc mov fwait cwtl adc pop (bad) (bad) or lock andl jno iret jg cmp pop push (bad) clc or adc rex.XB sub callq push xor loop cld outsb scas (bad) rex.WB data16 add jno (bad) pop popfq cld pop cltd (bad) pushfq (bad) mov sbb xchg loop (bad) (bad) fistl sbb mov adc (bad) addr32 (bad) (bad) repnz jge lods loop cmpsl and (bad) (bad) jo mov add (bad) imul xchg pushfq adc push (bad) push (bad) mov movabs or jrcxz (bad) xchg xor xchg (bad) push out xor es mov rex.B pop xor cs rex.X cltd incl out adc or outsb scas rex.B gs rex.B rex.WRX rex.RB js jrcxz pushq fsubrs jp (bad) callq jbe (bad) fisttpl xchg adc push cmp (bad) ror out (bad) lock and cwtl sub pop loope hlt loope enterq cmp push repz (bad) (bad) ss pmullw mov lea and shrw push (bad) jbe xchg xor (bad) mov jmpq mov sub xchg xor sbb scas mov lret repz mov sub lahf (bad) pop pop add jo (bad) rex.RX std add sbb lret cmp xchg int3 or or outsl mov sar test lret push jo fadds (bad) and repnz rex.XB jb lahf cmp mov movsl (bad) and xchg (bad) (bad) scas nop rex.WX sbb cmpsl gs out rex.WRB mov (bad) pop imul jb mov out stos outsl movabs subb lods nop (bad) xlat and mov lcall mov jns fstpl imul xor cmovae in rex.WRXB jno sbb fcmovu rorl adc xchg push hlt rex.RB (bad) lods and or pop push jmpq int3 neg mov (bad) cmp xchg and xchg test clc shlb sbb in and jne rex.WRXB rex.WR nop es jae jb retq callq push sbb adc rep fsubrs cmp movabs rex.WX push outsb imul cs insb sar add rol btr cmp mov bt cmpb jmpq and retq sti jmpq add or add mov roll mov retq test pushq test pop mov (bad) (bad) jbe rex.XB (bad) xor (bad) (bad) (bad) std xor sub cmc cmp adc jl mov loope fistp jmp test fcomps int (bad) (bad) (bad) std outsb (bad) clc (bad) (bad) (bad) (bad) incl retq gs sbb rex.WB fs movabs adc (bad) (bad) movabs xchg jb jp (bad) scas rcll add xor (bad) cmc cmc jmpq hlt leaveq cmc in iret nop mov ds and and mov cmp cmc pop xor movabs pop sbb gs scas loop jmpq pop jo push xor xchg (bad) xchg (bad) or add rclb mov xchg add leaveq cld cmp sarb xchg rex.X hlt rorl movabs push (bad) pop stos imull (bad) (bad) (bad) cld pop (bad) mov mov (bad) (bad) (bad) jo (bad) test imul pop in lret scas mov (bad) (bad) (bad) push mov sbb or rex.W mov pop or adc add jg iret mov adc pop mov (bad) and and xchg push or xchg mov lock bt bt add cmc jmpq jne pop pop jg mov fsubrl idivb jns fiadd and mov in cmp mov cli nop hlt pushq xchg jp enterq lret add jb (bad) mov (bad) mov add mov or xchg xchg adcl xchg or xor rex.WRX rex.WX mov out xor (bad) (bad) mov xchg movabs rex.B rex.WR fstpt and sub cmp data16 movabs rorl rex.RXB test test (bad) (bad) dec (bad) (bad) cmc adc sbb lret (bad) sti lods (bad) (bad) (bad) fidivr callq sbb (bad) xchg add imul lea xor insl fstpt data16 adc gs mov xor fcmovbe cli fidivrl add add shll pop js pop pop insb add jnp mov retq rex.RX movabs (bad) mov jp jae out rex.XB mov add fildl sti (bad) jae mov push (bad) jne (bad) (bad) (bad) sti mov (bad) (bad) (bad) std shll out mov popfq stos lret xor ja rex.RXB and sbb sub insl enterq mov (bad) mov shll xchg (bad) (bad) mov sub lret lahf jp cmpsl rex.WRB rex.X sub mov pushq ror (bad) jns jge (bad) (bad) (bad) decl outsl mov mov cli sahf pop xchg xchg (bad) adc add or sarl popfq lret xchg jge mov imul sbb rclb fisttp imul rex (bad) pushq imul add jb fwait sbb xchg mov jb xchg leaveq sti cmp xchg cmc cltd xor push push and rex.WRX out fcmovu jo push andb imul mov push in movabs cli xchg rex.RXB jrcxz (bad) (bad) (bad) cld repnz fs or mov mov mov rex.WB out mov mov and rex.WX xchg rex.WX jrcxz sbb push mov retq lods fcompl pop adc pop or (bad) cmp pushq lea (bad) (bad) (bad) mov imul sub fildll jrcxz ds stc hlt (bad) (bad) add mov xor cmp mov cmpsb jno (bad) (bad) (bad) (bad) jb in hlt or movabs (bad) push jg jb stos leaveq xor loope in nop xchg add in or and insb rex.XB push insb adc movslq jo jns mov push rex.WXB mov adc mov (bad) retq insl adc sbb fcomi retq (bad) fidivl sbb jo ud1 push push jo lods rcrb rol (bad) or cwtl add rex.RXB and push (bad) cmp cmpsl sbb cmp in loope push mov xchg adc mov (bad) jb cmpsl push mov roll fs insb rex.R retq pushq ja (bad) outsl movabs mov (bad) (bad) std or fbld rex.RXB (bad) or movslq imul je (bad) fstpl pop in shrl cmp add jns pop outsb mov rex.WR xchg (bad) mov add imul imul out fcmovnb and jno,pt scas xchg cld cltd (bad) mov mov mov cmp fdivr sub adc rcll test jne movabs rex.B (bad) mov xor jmpq jmpq pushq jmpq jmpq jnp pushq jmpq insl adc pop mov xadd icebp (bad) (bad) lock (bad) (bad) mov lahf push xchg push lret rex.WRX stc cmp mov (bad) fs pop mov gs (bad) mov movsl cld out leaveq mov jp xchg sbb mov sub add mov shr in (bad) or in int xor (bad) (bad) test (bad) (bad) cld sbb (bad) (bad) out je rex.WRXB rex.XB test (bad) movsb fldenv lods jl movabs add jp add mov pop and sbb push sub mov push (bad) xchg data16 sbb retq imul cmp mov (bad) or jo push clc lret cmpl cmp test add nop (bad) lahf jmpq data16 (bad) mov rex.RX jnp push add rex add out mov movabs (bad) (bad) incl popfq (bad) rex.W pop xor jns (bad) jmpq sahf xchg mov mov (bad) sbb fmul adc pop rorl rex.RX mov and sahf out ss lahf (bad) imul (bad) nop mov jno out (bad) (bad) cmc lods (bad) or (bad) mov jbe push sbb jrcxz (bad) mov cmp push out mov jmp (bad) rex.X push std xor loop fildl pushq test adc xchg rex.WRX (bad) pop scas sub add push cmp (bad) rex.RX clc xor rex.WB and test rex.W xchg rex.WB test (bad) (bad) clc jbe fdivl jne pop mov lretw xor sub xor (bad) fsubrl test in retq movabs (bad) (bad) (bad) (bad) jg cwtl movabs add out (bad) (bad) (bad) (bad) jmpq (bad) add rex.WR test mov sub (bad) mov jbe jo mov mov xchg std pushq in out jrcxz jbe jnp mov rex.XB rol fwait and movabs xorl jge pushq jmpq jmpq xchg js pushq jmpq jmpq dec lods fs movabs mov cmp cmp (bad) fldt cmpsl loope mov mov js jnp,pn mov xchg sti pop push cmp fs fcoms mov jnp (bad) imul rorb mov push sub jne rex.XB xchg sarb jle rex.WRB (bad) xchg in mov or adc (bad) cld (bad) (bad) imul jmpq cwtl mov rorb add mov add add repz hlt push push mov add enterq in mov mov lock and negb or imul add push rex.R cli sbb mov (bad) mov cmc xchg movabs rex.WR pop mov (bad) pop (bad) (bad) fildl (bad) fwait mov jns enterq add (bad) cmp xchg pop xchg jp fwait rex.WRX enterq (bad) xchg div insl sti cwtl stc jg push jp jo jrcxz jbe movl and mov jl mov loop push jp es adc rex.WRX xchg lods (bad) (bad) cld enterq sar (bad) (bad) (bad) fistl negb rex.WB jp pop in leaveq test add add pop and cltd rex.WX enterq push push push xchg cmp xchg mov (bad) or cmpsl pushfq (bad) xor cld rorl fdivrl (bad) mov push pop mulb xchg cli push bnd mov add jbe scas (bad) verr mov add movabs jns and sbb sti (bad) mov enterq imul movabs jnp push rex.WB es in int3 movabs movabs push (bad) stc mov rex mov std cltd xchg movabs (bad) (bad) (bad) (bad) std test (bad) fldenv (bad) sti in xchg rex.WR pop lretw fsqrt jb rcrb sub mov fmull (bad) (bad) (bad) jmpq mov scas movabs data16 sti xchg rex.WRX xlat mov (bad) gs pushfq sub (bad) insb lret rex.RB repnz adc (bad) or fwait mov add mov sub dec movzbq shrd add shld add mov cmp mov xor mov bt repnz jmpq jnp push setnp not lods bt add stc clc rol cmc clc stc xor jmpq jae jmpq jmpq jne and movzbl movzbq sub not mov rcl inc test add mov shr mov bt jmpq (bad) insb xchg jae xor fisubl xor fiaddl push xchg in sub mov insl pushq scas ss sub mov xchg push adc loopne andl add loope roll cltd xor and (bad) xor xor sahf (bad) mov push and sbb fs rex.XB pop push push lods jmpq scas and rex (bad) (bad) cld out rex.WXB stc ss xlat leaveq add add jns callq push divb (bad) stc (bad) (bad) iret movslq cmp imul insl adc in rex.WR mov fwait shrl (bad) add cmc test or (bad) (bad) xlat jl xchg test mov outsl lret (bad) jbe jmpq adc rex.WB shl sub (bad) hlt dec mov not sar sar add setle mov cmp test test jmpq jmpq lods test bt jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add addr32 (bad) sub (bad) rcrl jle sub loopne sarb mov mov xchg imul cwtl mul mul mov jo and add (bad) or jne jbe sbb js stos jp and (bad) (bad) jp fistpll sbb icebp movabs movabs rex.WXB mov (bad) mov es fwait (bad) jno or shrb add adc xchg mov stos sarl mov (bad) (bad) (bad) dec rex.RXB jg (bad) (bad) loope cmpsb xor sub cmc movabs stc andl (bad) mov test cs mov sbb fisubl (bad) jo and pop outsb leaveq mov adc xor test (bad) callq movslq rex.RX cmpsl mov mov ds in mov jae jb jae fist lahf (bad) outsb mov (bad) mov sub cmp (bad) add (bad) iret cwtl rex.WXB (bad) sarl subl cli (bad) jae jno repz rex.WRXB mov pushq xchg int (bad) jp (bad) cmp hlt push rex.B (bad) (bad) (bad) cld (bad) loopne rex.WB movabs xor (bad) roll cltd cmpsl cmpsb pop cli rcrl cmc jp rex.WX data16 xchg xor orl (bad) rex.RXB add add cmp mov rcl xor data16 or in add fwait jmpq jnp outsl (bad) add jnp push mov callq lahf jne (bad) (bad) cmc iretw lahf jmpq rex cs rex.WRB es stc stc movzwl adc rcr mov stc jmpq add jmpq ja ror neg add not mov cmc cmp jmpq (bad) repz movabs xor (bad) jge sarb je jne rex.W int sarb (bad) callq lea rex.WB sub mov out pop push sti or rex.WXB add lock sub xor pop xorq or lods hlt pop mov or mov (bad) sub mov fiaddl mov sub cmp roll (bad) (bad) (bad) decb (bad) (bad) (bad) decl sub sub (bad) ror mov jae xor nop callq add xchg loope iret mov fistpll push (bad) xor jno mov (bad) and movabs flds movabs pop je and movabs sub adc xchg mov test add stc add test clc cmp jmpq jne bt sub setbe mov shrd sub or btc movzbw mov stc jmpq fwait pop test sbb jmpq shll xor out mov cltd ja movzbl and in or cltd stos or stos mov enterq sub iret (bad) cmp movabs cmpsl cmp insb add pop or iret jo xor rex.B sahf outsl jo outsb ss jns out xor sbb in jg cmp adc retq in mov test imull pop mov iret (bad) jbe sti (bad) mov cld fsubs push data16 (bad) (bad) (bad) jmp test data16 std pminub test rep faddl add add xorl movabs shl (bad) xorb add xchg (bad) xchg mov (bad) or lret movabs (bad) jae adc rex.RB mov callq jnp rex.WRXB jge out mov rex.B rorb fiaddl popfq rex.WRB mov rex.R data16 jle stc repz mov insl mov push xchg mov xchg rolb and loop (bad) imul movsl jae xor stc repz adc xchg iret xchg or xchg pushfq jp fwait (bad) enterq movsl jo (bad) (bad) (bad) cld (bad) cld out rex.WRB (bad) (bad) ljmp adc in movabs test scas sbb mov xchg sarb rex.RX or xlat fwait sub jrcxz callq add or (bad) sub pop leaveq fdivrs cmpsl clc adc and sub fstpt jae retq cmc movabs fbstp clc pop or jmpq lret adc fsubrl (bad) jmpq xchg lock or in push je jbe (bad) gs std mov sub jl scas rex.WB (bad) movabs pop test loop int3 (bad) xor loope sub retq pop pop rex.XB (bad) push push mov push out es mov sti je pushfq adc add adc mov cld mov (bad) (bad) (bad) dec jne rclb gs pop or and mov adc in data16 add add jp nop fistp (bad) (bad) pushq pop ds cmp loopne fsts mov int3 hlt xor sahf mov fisttp scas lcall jne fcomi or cmpsl xchg adc pop pushq jmpq not cmp neg jmpq cmp jmpq push neg add neg push rcl movzbw shrd test mov or mov btr neg add bt mov cmp clc stc or jmpq movsbw mov xchg jmpq stc bt stc not clc cmp cmp cmp lea lea mov lea pop jmpq je lea not setle mov mov lea lea xchg mov jmpq push movslq xor cs insb add xchg (bad) add (bad) xchg push pop xor and js pop add (bad) fs rex.WX pop push test negb fist xchg mov out cmc (bad) stc (bad) mov sub or mov cli mov (bad) imul adc adc and imul (bad) jb (bad) (bad) pop out add (bad) or je (bad) pushq imul out add (bad) outsl (bad) stc adc lret sbb (bad) rex.WB retq nop mov fisttp sbb (bad) pushq orl xor out push idivb jne cltd sub (bad) (bad) (bad) std cmc lea add add or and test hlt callq cmpsb cmp cmp xchg add test jle mov mov push add xor (bad) mov rex.RB rex.XB jl lock (bad) sbb (bad) ficompl mov (bad) andl test cmp vandnpd lods out loop mov xor sbb movabs hlt mov xchg (bad) jns and testb sbb jnp rol adc divl test sti icebp callq xor (bad) mov fdivs test sbb vphaddbq in lret cmovb (bad) xor rex.WXB cmpsb rex.R shlb (bad) (bad) (bad) cld and fwait (bad) (bad) (bad) (bad) xor callq test (bad) leaveq retq (bad) (bad) pushq loope xor int3 fwait clc xchg (bad) mov jg int mov cmp loopne (bad) xor mov mov mov jo (bad) xor int or pop jo cmp test (bad) rcr or rol push lea xadd shrd mov xor lea setno sub not lea lea jmpq (bad) mov add icebp lods (bad) imul neg adc lods cld pushfq add sub callq mov rex.WRXB in scas sbb mov in (bad) jrcxz mov rex.W ror (bad) fadd icebp in (bad) fildll (bad) jmpq int3 lahf and pushq xor movabs out (bad) movabs test rcll jb rex.RXB es test (bad) mov imul loopne lock lods leaveq ss mov lock hlt and out int pushfq jae mov or movsl (bad) rex.WRX data16 (bad) (bad) std xor mov ds (bad) (bad) incl cld addr32 cmp jle jle lock repnz mov push nop rex.WRB pop adc xchg mov out pop lock (bad) jge sbb test pop rex.X cmpsb roll add add sub leaveq in cmpsl (bad) cmp and (bad) shrl push (bad) fs rex.WX ds jp sbb sti imul xchg lret stos mov lock roll or xchg rex.W outsb out movabs int add (bad) (bad) stos pop push (bad) pop rex.XB mov mov push adc (bad) fadds outsl rcrl rex.RXB movabs (bad) imulb jns pop mov popq cmp adc pop adc (bad) lods (bad) retq movsb mov cmp add sub cltd (bad) add out callq lret roll (bad) push (bad) pop (bad) (bad) (bad) sti out (bad) pushq rex (bad) (bad) incb pop cmp cwtl iret and in (bad) (bad) (bad) incl rex.WB mov xor repz cmc sub out xor xchg mov cmpsb divb fs insb es mov mov rex.R je xchg subl (bad) sub xchg lods add jne jmpq jne xchg rex.X movabs xor loopne jb pushfq adc mov cs mov pop mov je adc add (bad) or jl add lea xchg rex.RX insl xor sbb jo sti cmp sub test sbb or and enterq in cmc (bad) push pop int3 imul rex.RX (bad) (bad) (bad) sub (bad) (bad) (bad) sti out mov fdivr (bad) (bad) decb scas cltd ljmp mov add add or and stos (bad) in pop pop (bad) mov mov loopne pushq rex.XB jp jge jle (bad) std lahf fbstp enterq jmp rex.RXB loope mov lgs add rex.XB insl insl (bad) outsb imul addr32 add cmp clc add jmpq lods (bad) mov rex.B pushq mov push test popfq rex.X jb push cmp (bad) (bad) shl mov fisttp mov jp xor adc ror mov (bad) and rex.X rex.WRXB sbb mov add out rex.WXB fbld (bad) sbb (bad) mov (bad) std mov movabs pushfq cld mov movabs js outsb enterq addr32 outsl or test rex.X js cmc gs pop imul (bad) (bad) mov jnp push (bad) and mov je sarl push bt stc jmpq ja jmpq add sbb bsr xor shld mov cmc jmpq jmpq jne cmc bswap movzbl mov cmc test test bt or jmpq xchg (bad) mov rex.RX lahf negl push test sti mul sbb movabs xchg or mov rex.B push jns es cmpsl sbb pop (bad) xchg jg or and in adc pop mov jne adc (bad) in rex.RX jo sbb movabs jo push out and test mov (bad) (bad) std pop movabs movsb jp mov rex.WB mov data16 (bad) jg or mov add add outsb mov out sub (bad) fs push hlt js adc test add xchg sti push cmp rex.RXB movsl enterw jl pop (bad) push fimul cmp movabs mov rex.WR pushq add mov lret rex.B adc negb rex.R ja add (bad) outsl fs out or in fwait jns (bad) pushfq cmpl (bad) mov pop in jo repnz lea cltd adc cmp repnz imul (bad) jb pop xor xchg jo (bad) out mov cmc or mov push rex.RX rex.WR mov sbbl jg,pt mov (bad) (bad) sti lret push rex.X mov insl mov xlat (bad) mov (bad) (bad) (bad) (bad) in int fistp pop xchg fnsave lea jmp movabs add xchg or in rex std in (bad) cmp cmpsl jg sarl movabs or or loopne pushq cmp cmc jmpq jmpq pop lea mov lea movzbw mov movzbw not mov retq fnstsw mov (bad) sbb (bad) icebp adc jge jl rex.RX xor cmp add sbb and leaveq callq movabs sub jnp and test loope lret (bad) add sar mov mov (bad) mov movslq push retq (bad) jmpq nop stos outsb cmpsl xor (bad) (bad) (bad) sti scas int3 mov jg (bad) (bad) std retq in jb movsl adc outsl rex.RX cmp push lock test or callq sub rex.RXB jp test mov mov out and and xchg mov rex.WB jae adc rcll rex.WR js js test loope adc adc leaveq (bad) ja (bad) rex.RX xlat sbbb cmp jb mov jne xchg pop test rex.WB sbb cli repz cmpsl (bad) fsub flds or cmp stos fdivl push mov (bad) test push (bad) in ds lock sub push jp,pn rex.RXB mov cwtl xor movabs pop orb (bad) mov jp sbb mov (bad) movslq movsb mov (bad) add pushq subb pop add jnp movsl cmp mov cmpsb leaveq cmpsl rex.WRX (bad) (bad) (bad) decb (bad) (bad) (bad) decl sbb (bad) (bad) jrcxz rex.XB js (bad) or mov lods loop movabs pop cld test repz (bad) movabs rol lods add add add out imul clc sub jns nop lret clc (bad) mov xchg adc gs movabs repz roll out (bad) xchg mov clc or (bad) out rolb std sahf (bad) (bad) add fwait xchg mov xchg (bad) fcmovnu lret or or scas rcrb (bad) (bad) (bad) mov (bad) (bad) stos adc jg pushq xchg leaveq sbb loop xor (bad) (bad) (bad) cli movsb adc enterq (bad) std nop loop mov mov adc pushq pushfq maxps (bad) (bad) (bad) dec cwtl cld adc add adc repz movsb mov adc sbb clc push rex.WXB (bad) xor movsl mov pushfq (bad) pmovmskb adc in ss add mov push mov loope stc stc test sbb (bad) jns shr leaveq stos lea push push push cmp cli lea (bad) popfq push push ds pushfq lcall rex.X (bad) repnz nop sub add movsb test out (bad) xchg insl adc or (bad) retq xorb sti xchg push mov jmp xor rex.WB movsl lods mov retq push sub sbb sub (bad) enterq (bad) adc iret (bad) lock icebp (bad) (bad) (bad) cld mov (bad) (bad) (bad) dec leaveq push sahf cs rex.B in (bad) jnp in sub add rex.WXB mov retq imul cmp push or and rex.XB rex.X add xchg rex.WXB (bad) (bad) add stos test mov hlt cmpsl adc lods sbb or lret pop jmpq jmpq jmpq iret scas (bad) loope repnz fistpl rex.WB adc push (bad) (bad) mov pop xchg scas push push push xchg scas (bad) xor jmp insl insb adc add jg rex cmpsb jns xchg (bad) sbb jo mov mov (bad) pop mov jb jno rex.WXB mov hlt subl rex.WRB retq fbstp or insb or and ss mov nop rex.RX ds push (bad) (bad) (bad) cld es test (bad) dec (bad) xor or retq repz add jo outsb nopl imul xlat in push fidivrl lock pop psubusb loope xchg rclb callq add add jp fs shrb cs pushq fidivr cltd add movabs sub rclb (bad) pop repnz fwait test movabs sti or jmpq or leaveq lock mov cmpl fldl rex.B mov sbb rex.WRX or int jge rex.WRXB jge mov jmpq sub movabs push push cmp cmpsl andb and clc cmp in or (bad) (bad) (bad) std or (bad) (bad) (bad) (bad) std sub and nop mov lret cvtps2pd rex.WB cmp rex.RX movabs or mov (bad) cmc (bad) sbb mov (bad) sbb popfq cmp (bad) cmc rex.RB xor neg pop jmpq jmp cmp movsb in callq enterq pop rorl mov (bad) mov jmpq mov push and (bad) and jb movabs cmp jmpq ficomp rex.WRX rex rex.R xchg (bad) cmp mov push jle jo xchg rex.WRX mov insb (bad) fcoms adc jnp lret xchg adc sub rex.RB sub cmp (bad) rex.WRXB fdivrs retq add movabs je push rex.RX (bad) push mov std (bad) repnz adc jb rex.WRB movabs leaveq lods insb (bad) (bad) (bad) cld cmpl mov sub test add add adc push or rex.RXB loope jns fwait int3 scas pushfq std sub std roll pop cli sub pop stc mov (bad) mov push (bad) scas sub mov mov cmp mov jb mov adc sti jmpq jbe xadd mov stc shld or add movzbw ror mov and shr shld add cmc btr mov shld movl cmc shrd mov jmpq jne not movsbq shld mov jmpq jmpq jmpq lods or mov pushq jbe mov out mov lret div sahf (bad) push mov rolb mov xchg push pushq scas std mov movslq mov mov ror cmp mov adcl jo (bad) movslq movabs cmpl clc fwait out repz xor (bad) outsl adc (bad) mov (bad) xchg repnz (bad) (bad) fs stos std jns sbb sub rex.RB ss rex.WRX mov out xor (bad) (bad) cld adc movabs ja pushq nop repz jne scas adc and (bad) lcall xor push rep lahf shrb shl mov rex.XB andl or sti or xchg mov mov psraw jae or push push cmp mov in in test xor rorb mull jge in sarl mov (bad) adc and movabs rex.RX sub int3 outsb rcll mov lret movabs cmc scas pop mov lea xlat (bad) jrcxz in jne pushfq js (bad) cltd adc mov rex imul pop rclb jmpq sbb (bad) (bad) (bad) cld fmull (bad) (bad) (bad) out mov sub sahf rex.WRXB rex.WXB sahf and sub rolb pushq popq popfq jbe cmp mov sbb add add or lret movsb sahf add (bad) mov lahf loopne mov add add rex.B rex.WB cmpsb test lret push rex.XB push mov (bad) (bad) insl cmp push mov push imul (bad) movsb add movsbw bswap mov jmpq jmpq movsl cmp (bad) pushq pop data16 rcr sub fdivrl movsl rcrb mov rex.B sub fnsave jo mov pop cmpsb push push data16 js test mov xor mov (bad) in (bad) sub retq gs sbb (bad) xor movabs (bad) (bad) cld cmp (bad) (bad) decb loope adc (bad) or cwtl test rex.RX rorb (bad) jg rex.WRX shrl mov push hlt jae push rex.R in rex.RX lret add push mov mov push out xor xor sub int3 clc sub out mov (bad) (bad) out ficompl outsl enterq rex.WRX callq fisubl sub xor je mov fcomps mov (bad) insl imul rex.X rex.WXB movabs nop mov (bad) lahf mov mov push decb rex.WX lret mov xchg sbb pushq rex.RX or jmpq js mov and jl scas insb mov add xor loopne rex.W or mov (bad) xchg in (bad) mov rorl popfq (bad) pop (bad) or rex.B movsl (bad) (bad) (bad) retq or xchg test add out scas or neg (bad) (bad) (bad) (bad) xor xor add add mov lret add mov loope sub std push pop xorl enterq notl jnp cmp rex.WR stc shlb or xchg mov jns fcoml (bad) (bad) data16 imul jbe mov fcoml (bad) (bad) stc cmc cmp bt sub cmp cmp jmpq in fldl lret stc rex (bad) or or (bad) mov cltd rex.XB or cmpsl (bad) (bad) int3 sub stos test fisubl cmc cmpsb movabs and jmpq ficoml movslq (bad) cmp xor insb rex out frstor jns sbb rex.WXB outsl (bad) (bad) (bad) std sbb (bad) ljmp xchg mov sti gs out nop lea shll stos outsl test in int mov and xchg or out pop sarl rex.WXB xchg sbb add push outsb push push clc lea add add rex.XB push (bad) (bad) cld ffree sbb rclb mov (bad) mov (bad) (bad) rex.RX lea jne fs fcompl xor int3 test or retq xchg mov pop scas vshufpd pop (bad) (bad) jmpq ds nop lret cmp cmpsl mov sbb rclb or (bad) lods push push (bad) stos mov cmp lret pop mov pushq mov rex.WXB adc and rex.X (bad) mov sbb rex.WRX rex.B test outsl (bad) fs in outsl push repnz rex.R test (bad) pushq mov sbb je fisubrl lahf and push enterq rex.WRB mov pop xor movslq icebp adc test xor cmpsb movabs xchg sarb adc (bad) pop adc data16 data16 adc adc stos adc orb and stc add mov ss out cli loop (bad) (bad) decb rex.WXB callq sub mov (bad) (bad) xchg mov ss jp jae cwtl clc push ss sub lock (bad) jmp sar sbb cld rex.WR and fdivrl callq (bad) mov and xchg fwait (bad) jae imul mov pop xchg hlt (bad) decl (bad) cmc test movzwl shl or cmc mov stc cmc bt stc add stc mov stc cmp test jmpq jne test clc jmpq imul jmpq jb stc stc cmc cmp jmpq fnstsw and out add (bad) popfq movabs fucomp callq addr32 scas test jne outsl or (bad) fisubl fiaddl (bad) popfq (bad) neg cltd push (bad) (bad) in add (bad) (bad) rolb cs rex.RB rex.WRB rex.WB loop jmpq mov adc (bad) shrl sub mov xchg (bad) (bad) shrb sbb cmp (bad) (bad) (bad) cld cmpsl push jg (bad) (bad) (bad) (bad) mov xchg stc xchg add (bad) cmpsb adc add ds mov (bad) fidivl and pop cs rex.WRX mov sbb loopne (bad) (bad) je out add sarl cmp sbbb mov imul jne mov and pop divw movslq sbb and cmpsl xchg and jnp rorb rex es sub sub (bad) fmull sub xchg adc out leaveq cld and lods fwait add sbb adc (bad) mov (bad) add movsl std es and clc fcmovb xor insb add (bad) (bad) cld test pop add (bad) (bad) (bad) decl cmp stos sbb insb pop fsub rex.B push (bad) xchg rex.B repz push and and mov pop test fisttpl fldenv add add or mov mov xlat mov cmp pop std callq cmp adc in and cmpsb (bad) mov and (bad) or sub pushfq (bad) adc cmc and push movsb scas xor stc cmc not bt jmpq ja seto or mov sub btc ror add bsr add mov sar add rcr cmc mov bt bt repnz jmpq jb stc test cmp jmpq callq jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add test add cmp bt stc cmp jmpq or xchg add ja (bad) (bad) insl ja div adc (bad) movabs pop mov iret stc or mov shr xor ja xor pushq pop (bad) in jno xor loope rcrl loope push mov push cs mov mov pop lods adc and rex.RX (bad) retq subl push push insl and (bad) (bad) (bad) cld add idivl (bad) jbe sub pushfw rex.WB or pop (bad) sbb (bad) (bad) (bad) callq leaveq pushq rex.WRB rex.RX (bad) hlt and fwait rex.WRXB movsl (bad) jg pushq (bad) push add add add mov sub (bad) mov push cli and mov pop xor mov pop fldcw fimul test ds jmpq rol add lods rcll mov xchg btc mov setbe sub bswap not bswap movsbw lea jmpq callq jmpq test mov (bad) xor push jns int xlat (bad) cltd pushq mov fstp cvtdq2ps popq scas insl xchg jb jp cmp pushfq rex.B roll xlat mov (bad) or add cmpsb xchg cli hlt pop (bad) (bad) mov out rex.WR je and repz (bad) (bad) rex.WX (bad) pop and mov (bad) (bad) (bad) (bad) cld je stos sahf sbb (bad) (bad) incb mov pop cmp rex.R hlt xlat mov jo xchg add add (bad) push mov rex.RX and rex.WB pop (bad) push mull sbb jl or scas mov fs add (bad) hlt cwtl sahf mov adc mov jb cmc cmp jmpq bt test jl je test add clc jmpq mov jge (bad) mov cwtl (bad) jae push (bad) (bad) nop lods lods icebp movabs lahf (bad) movabs jrcxz iret in sbb cs (bad) cld je test (bad) add fadds (bad) pushq lods mov pop test cmp test xor cmp mov fnop pop int3 (bad) pop psraw (bad) push test ss (bad) scas loopne (bad) (bad) cld jne mov (bad) decb xchg mov add add or in or or sub jne or fs test mov adc xor rex.R rex.WRB movslq imul repz (bad) and mov fs adc push pop and mov gs (bad) xchg pop adc sahf sti rex.XB lods rex.WR (bad) out rcll movabs loope sarb jno lret mov rex.XB add scas mov mov popq xchg mov in xchg cmpsl jne jae add in mov movabs (bad) (bad) stc (bad) mov mov and mov (bad) cld wrmsr rex.WRB (bad) (bad) (bad) (bad) and mov (bad) rex.WXB movabs lods sbb (bad) (bad) jmpq or sub jge sub xchg lahf (bad) in test mov data16 movabs mov js nop test adc (bad) (bad) pop in rex.WRX sbb adc push mov data16 (bad) add jp repnz (bad) mov sbb sub (bad) std stc sti out and push xor movabs movsb fidivr outsb or lret hlt pop mov insb (bad) cltd add scas es (bad) (bad) (bad) pushfq xchg (bad) insb leaveq pushfq sub jg mulb test stc mov adc rex.R cmp rex.B jno scas enterq imul cld insl mov (bad) pop outsl rex.XB jmpq mov jmpq lods adc shlb rclb and (bad) jmp movsl sarl sbb mov xchg (bad) ss (bad) fist sti std cmc div movsb ucomiss movabs fbstp add sbb (bad) rex.WB fwait imul lret jne movsb movl rex.W sbb int pop (bad) cld (bad) ss (bad) (bad) (bad) cld xchg sti pop pop (bad) (bad) (bad) (bad) cltd fnstsw push gs (bad) or fwait add add cmp (bad) test jmp neg (bad) jo and rex.RXB push insb jp pushq and fidivl pop movabs xchg movabs rex.WRX movslq shr rex.WRXB pushq jmpq mov mov jmpq pushfw jmpq rex.WRX sbb data16 sub loope js fwait rex.X int3 out cmpl ja out int3 sub rex add loope (bad) xlat fwait push ss ja adc mov repz or pushq sub mov gs jmp (bad) (bad) movsb enterq (bad) cltd imul je (bad) fnstcw sbb mov movabs jae xor xor (bad) xchg (bad) (bad) out mov mov fmuls rex.RX (bad) xor push xlat (bad) (bad) (bad) sti out repz (bad) (bad) (bad) decb push (bad) adc jo add js and add add or fdivrs jp sbb (bad) adc enterq cmp mov sub jne ss (bad) scas mov adc cmc (bad) (bad) (bad) mov and jg pop rex.WR int3 out (bad) lods sub push adc icebp callq lret loop out xor jae cli test cmpsl sbb (bad) push xorl or in xor (bad) or xchg and lods (bad) adc rex.WX (bad) or out pop (bad) cmpb lcall je jno stos js cli pop lock xchg jle sahf out (bad) (bad) cld movabs mov out push test push xor adc (bad) (bad) loop mov ss cmp in (bad) retq mov (bad) ficomp mov jae push rorl pop int3 scas fstpt test push or ja movsl sub (bad) jo mov adc leaveq test repnz jmpq pushq jmpq je jmpq rex.RXB rex.R xor cs insb add fisttp push jge jns xor callq or in and jnp or stc cwtl sti lahf rex.X sub fsubrl sbb mov cmpsb sbb subb rex.XB rep jmpq rex.WXB rex.WRXB or jb or insl mov adc std (bad) test add (bad) (bad) (bad) lcall cmpb loopne rex.WB xchg frstor jno (bad) sar outsl xor cmp rex.RX and in (bad) rcl mov xchg roll add pop rex.WRX push cmp addr32 out lea cltd mov sbb push jmpq retq out xchg rex.WRB rex.X movslq hlt sbb add mov xchg test mov addr32 jnp jmpq pop adc xchg (bad) cwtl enterq push pop cmp (bad) out sbb jp or xchg xor xorb add xorl add sbb (bad) hlt movabs rex.RX adc enterq icebp xchg int sbb cld movabs xchg rex.XB mov lods add mov fimul stc or int3 mov xor ficom (bad) sub out test mov callq rex.R insl cltd rex.WRXB or in (bad) hlt (bad) xlat insb adc mov or negl (bad) (bad) (bad) (bad) out rex.WR in fadds push gs add add adc push icebp fs (bad) xchg push stos or mov mov out xchg outsb rex.B test jle mov xlat (bad) jne gs mov fnop jb sbb loopne adc addr32 test cltd jmpq cmpl sub iret mov scas lret pushfq sbb rex.WX sbb (bad) sets movsl cmp neg adc rex.X lods neg mov or lret retq stos std gs (bad) adc loope mov sub rorb xor xrelease mov pop xchg lret jmpq (bad) cld in retq adc (bad) (bad) (bad) (bad) (bad) inc mov and sti movabs pushq (bad) (bad) movabs push mov mov imul sub add add pop in (bad) pop cld callq (bad) outsl loopnel movabs (bad) or pop (bad) (bad) xchg pop repnz popfq mov push pushfq mov rex.WX mov cld push xor (bad) enterq jno in jmpq cmp cmp pop shrb enterq leaveq xor (bad) and jrcxz test xchg out retq jle jrcxz test adcb and (bad) scas cld out jmpq mov fcmovnu sbb rex.WRX addr32 jne bsf rorb xchg mov rex.RB and mov and sbb xchg rex.WXB movslq mov cltd std fldenv cld xorl (bad) xchg (bad) (bad) (bad) (bad) xchg push (bad) add pop jge divl (bad) (bad) (bad) rex.WXB add add (bad) push or cmp mov out js cmp callq repnz cmp jns (bad) rex.RB movabs negb (bad) imul rex.WRB fs or mov imul (bad) (bad) dec rex.WRXB mov rex.W jmpq xchg fwait iret sti movabs cmp cmp adc scas enterq stos push fs leaveq sub jae or jl cli roll cmp in mul cs fadds (bad) (bad) (bad) out sarl pop mov adc fmul (bad) loopne (bad) movslq jae pop wbinvd xor cltd cmp or (bad) (bad) (bad) cld jne xchg rex.B (bad) (bad) decb fucomi (bad) hlt add add or mov mov rex.WR push sti insb addr32 callq js (bad) and enterq pop stc mulb mov jmp enterq bnd jb mov and not setnp mov lods clc add cmc rol cmc bt jge xor test cmc clc clc not stc bt cmp cmc cmp movsbl movsbw movsbl lea movsbq movsbw pop jmpq clc cmp neg clc cmc cmp clc sub bt cmp clc bt not cmc clc stc stc neg cmp cmc jmpq jmpq jmpq cmp fnstcw (bad) (bad) stos sbb js movsl xor in loop fsubl retq imul sbb push adc or jno int pop stc stos adc js (bad) rex.RXB loopne cmc movslq sub mov cltd push (bad) movabs mov out mov cmp mov rex rex (bad) mov imul push ffree jnp cmp sub outsl xchg mov faddl jns mov movabs mov js (bad) jrcxz mov scas (bad) or rex.X xchg (bad) (bad) (bad) (bad) cld cmp test (bad) fsubrl js rex.RB (bad) cwtl clc sub cmp add add mov xchg mov sahf iret lods jmpq fdivrs (bad) je (bad) sahf add in jle imulq push (bad) leaveq pop outsb comiss xchg enterq sbb jmp adc fisubrl jnp sti addr32 (bad) (bad) cmp js jmp retq repnz or out sub mov mov (bad) (bad) repz xchg fcmovnu mov jle movsb rex.WRX stos lahf sbb add (bad) sti (bad) rex.XB sbbl notb pop mov adc pop movsb (bad) (bad) (bad) (bad) cld flds in (bad) (bad) (bad) (bad) (bad) in (bad) cmc (bad) (bad) cmp jle mov stos shrb (bad) movabs xchg out xchg ds iret addl (bad) out repnz iret fnstsw mov fcmovnbe std rclb sub popfq mov mov (bad) (bad) mov (bad) data16 (bad) (bad) adc lret xchg movabs mov insb mov sbb jbe mov push sub (bad) (bad) mov pop sub popfq (bad) and rex.WR movsl push (bad) scas xchg insl enterq roll jp lea pop mov xchg incb lods rex.RXB jl rex.WRB out push jae adc mov (bad) hlt nop rex.WX rex.WX push rex.WRXB mov (bad) js xchg retq icebp fiadd cld cmc (bad) imul (bad) fldl fidivl loope or xchg xchg div add pushq (bad) and outsb (bad) (bad) (bad) (bad) (bad) cld lret sub (bad) fisub xor test push cmp and fimul cli xlat add add pop xor sbb xor cmpsb scas rex.WX repz sarb mov (bad) sub xchg test sbb sbb (bad) mov in adc (bad) js imul mov adc adc test cmp decl sbb shrd rcl mov xor clc clc add ror mov clc cmc test test jmpq repnz div pushfq mov (bad) outsb rex.X xor retq jmpq xchg mov imul adc add and outsl add out add jmpq mov popfq rex.X cmc adc jg sbb xor test (bad) jo outsl mov out rex.WRXB rex.RXB (bad) (bad) (bad) cld cmp loop (bad) (bad) (bad) (bad) decb cmpsb in push rex.RB sbb jne iret jns cs mov (bad) rex.WR cmp scas jno (bad) cwtl data16 (bad) (bad) dec jae (bad) mov cmpsl cmpl stc push sub pop fwait mov push rex.WX fld stos xor (bad) or add jnp xchg mov mov enterq jg movabs gs push (bad) insb jne add (bad) imul mov cmpsl scas shrb rex.WX (bad) mov jp xchg adc mov cmp or loope rex.XB or rex.WX mov jne movslq pop jb cmc pop lahf jo xor rex.WX clc repnz add popq cmc add pushfq in mov rex.RB rex.RXB add or test mov cltd mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) lods sahf (bad) nop int3 (bad) sub mov xchg mov insl (bad) and mov repnz repnz retq scas sub hlt movabs faddp (bad) xor (bad) scas mov pushq mov jnp vmovntdq xor or (bad) rol xchg sbb movsb xor or (bad) cltd cmc (bad) jge mov outsl leaveq pop movabs cmp mov mov lret and (bad) cmp test xor rex.RXB pop xor or callq outsl retq rex.RXB movabs mov xor out xchg stc lahf jbe movslq movslq jbe rex.WB outsb pop adc sahf rclb test movabs stos adc sbb mov xor (bad) movsb retq (bad) sti mov shrb (bad) (bad) cld or setp fidivrl lret (bad) (bad) (bad) decb and xchg pop add add or test nop scas (bad) or or jb jno cmp (bad) icebp and (bad) mov cmp rex.WXB rex.B jb or rex fdivrl mov test movabs or xchg mov popq pushq gs pop add push sbb cmp fmuls rex.RXB jno and push pushq jmpq ja clc stc clc cmc imul clc add jmpq jmpq jmpq jne shl xchg mov rcr cmp shr sub not not neg mov bt stc sub jmpq jmpq rcr mov cmp in or (bad) movabs xor pop push stos xor cmpb pop rex.WRX roll mov (bad) rex.RB (bad) leaveq movabs add sbb or jbe cmc sbb in adc adc xor shlb push rex.WXB jge jge cwtl sub xchg cld roll push (bad) int pushq fcomps xor mov jae xor (bad) jmpq (bad) xor cmc rex.W lock rol in mov add cmp add neg stc mov cmc cmc bt test jmpq add (bad) xchg rex.R push adc lret in fildl (bad) rex.WR sbb sahf add mov (bad) icebp (bad) cmp mov push xchg (bad) sarb sti adc bt adc movabs popfq std sub (bad) rex.W vmaskmovdqu leaveq (bad) mov in mov push xchg or cmpsl xlat sbb push mov cmpsb xchg push mov test outsl pushq in add rex.WX cmpsl (bad) insl mov xchg fnstenv (bad) decb (bad) (bad) (bad) decl mov xchg pop lock mov pop cmp adc add cmc (bad) push ss rex.RB cmpsl iret lret pop (bad) push out pop iret pop push add fnstenv rex.XB cmp (bad) sahf lock fwait (bad) add callq mov jae scas (bad) jno mov add jmpq adc insb test xchg and out cmp push cld xchg sub stos add add std (bad) push ficoml (bad) jge jmpq cwtl std jae xchg (bad) retq in subb cmpsl movabs (bad) cmpsl sbb (bad) movslq mov rex or or insb pushq testl jno scas rex.WR (bad) mov scas mov stos in sub (bad) (bad) (bad) cld jne fildll (bad) (bad) (bad) decb cltd mov add add or jge rolb es sub rol stos and loope (bad) cmp (bad) fs rex.W cs jne xor xchg movsb sbb rorl in rex.W movabs mov je jmpq sbb jrcxz cmpsl jp js mov cmp (bad) mov mov movabs lahf mov movsl sar sub cmp test or movsl pushq std mov fisubrl xchg mov mov (bad) test cli mov (bad) callq movabs jno fnsave rex.WXB fadds (bad) jae or ficomp sub (bad) rex.WRX enterq mov sub or pop int3 fisttp rex.WR adc rex.WX rcrl rex.X (bad) rex.RX xor (bad) (bad) cld jae leaveq fcmovnbe (bad) (bad) (bad) incb (bad) mov and add add add add rex.WRX sbb xor (bad) jmpq hlt fwait sti sub xor or rol movsb (bad) and mov cwtl in (bad) sbb ss sub stos lret and adc jb xor (bad) jmpq std out or jmpq clc add jmpq mov movsbw btc sub bswap lea jmpq pushq jmpq retq sub mov jl (bad) sub (bad) push sub retq xchg mov cli in lret movsb sbb (bad) rcr imul popfq rex.WB mov cmpsl sub (bad) jge testb rex (bad) jae (bad) jae (bad) add jb movabs add movsb mov (bad) fcoms icebp rex.WR pushq decb xor mov jmp icebp xor (bad) cltd xor (bad) sub rex.WB orl (bad) or pop out in jb mov (bad) inc adc (bad) rex.B cwtl testb imul rex.RXB es push push cld (bad) addr32 scas (bad) xor adc out pop adc fs loop loope rex.WRX repz rex.WXB pop jnp enterq and sbbl lret movsl hlt pop jbe imul (bad) movsb mov test rex.WRB movsl fucomip fimull es decl test and jmpq bswap setns mov lea movzbw setns lea bswap movzbw movsbw mov movsbw mov xchg mov bswap lea bswap mov movzbw not not not lea jmpq jne rcr bts movzbw xchg mov xor lea cmp sub shr mov cmc sub clc cmp cmc clc pushq jmpq jmpq jne test mov dec bts cmc clc sub bt cmc stc rcr mov stc stc sub jmpq ja jmpq stos xchg sub cmc fistpl rex.W push cmpsb rex.WR rex.RXB mov sub int sti out sub movsb adc add (bad) leaveq ds xorb or addr32 fs (bad) mov cld push rex.WRB sbb (bad) (bad) (bad) (bad) (bad) (bad) rex.WXB (bad) add adc mov retq xorl std rex.RB rex.XB (bad) jmpq pop xchg add movsl repz and add je jae out mov or or mov icebp push add xchg addr32 icebp xchg vunpckhpd hlt retq addr32 cmp test jmpq jae or movzbw mov neg xchg mov bsr sar mov clc sub cmp repnz jg jne clc mov bt btc sub btc lea shl mov cmp cmp jmpq xor rcr and sub mov jp movzbw mov pop lea mov pop xchg pop bswap bswap pop jge mov mov pop retq jae sbb dec ror mov mov test sbb or add not jmpq jmpq (bad) pop mov sub or adc and js adc or (bad) xchg imulb pop and adc in lret movsb test movabs push cmp rex.WRX add mov jge mov xchg jmpq sahf cwtl (bad) (bad) (bad) sti cltd add mov std stos cld (bad) imull (bad) xchg add repz mov adc insl rex.X lock push cmp data16 lods fcoml jne rex.WRB xchg mov mov rex.WR (bad) cmp pushq adc and push push sbbl out rex.WX mov cmpsb (bad) jle testb addps mov (bad) outsb push or mov out out nop mov movabs sub rex.B stos cltd add mov jp (bad) test movsbl mov bswap mov jmpq ja bt clc imul test add jmpq (bad) (bad) xor or sahf imul rex.WR gs mov (bad) jmpq std icebp mov (bad) rex.X fnstenv std pop jmpq fistp fisub lahf int movabs rcll je je popfq gs data16 test popfq xlat movabs cltd in (bad) (bad) (bad) std and movabs or xchg sti (bad) retq je pop cmp cli (bad) iret mov jl in mov sub mov movsl lret gs cs (bad) data16 (bad) fucom jne ds rex.R lret mov adc (bad) je sbb repnz mov enterq std pushfq rex.WX insl (bad) fldl cltd ss sbb imul (bad) movabs stos (bad) hlt push add (bad) (bad) pop xchg xchg push fwait cltd (bad) rex.WXB notl adc (bad) insb push rex.WRX mov ss movabs out rex.WRB rex.X rex.RB add mov cmpsl push mov (bad) mov insl xchg rex.WB (bad) (bad) cld loope (bad) (bad) jmpq hlt insl loope rex (bad) lock add je (bad) scas cld rex.W xchg mov sub xchg ror out (bad) mov and adc cmpsl (bad) imulb (bad) rex.RXB test shrb mov fwait (bad) mov lret push rex.WB xor int3 (bad) (bad) scas (bad) (bad) mov jl cmp jne cmp jmpq jmpq jmpq sbb adc lret test jmp mov imulb fdivrp out ror test jb mov push and (bad) push pop cmp int lods lret (bad) rex.WRX (bad) mov xchg leaveq add (bad) icebp in xchg adc xchg sbb xorl jl fcomp jnp sub test mov (bad) (bad) mov pop ds test xchg jmp (bad) (bad) (bad) cld lea xchg (bad) (bad) (bad) (bad) movabs sahf pop mov jrcxz mov (bad) push subl add or mov (bad) sbb pop push sbb je jge test add mov xchg push rex.X fwait lock sub movabs jbe rex.WR (bad) hlt mov jge and jo imul (bad) lods mov jnp mov rex.WX roll lret xchg (bad) (bad) movsb mov adc xor rex.X mov pop (bad) cltd push jl mov xor shrd imul loopne insb jne xor adc (bad) sti out rex.WR incb rex.RX (bad) fsubs jmpq std movnti and xchg (bad) cmp xchg stc adc or and (bad) (bad) (bad) mov mov (bad) mov mov jrcxz hlt rex iret xchg movsl es (bad) cmpsl rcrb rex.X jmp xor int3 (bad) lods movsb lret stos sarl rex.WX mov test and mov jge push fs push not jmpq jmpq rex.X mov lock cltd pop jge js xchg cmp (bad) lret xor (bad) jle scas pop jge fistp movsl push (bad) (bad) negb (bad) (bad) (bad) mov mov pop std adc fisubrl mov push adc (bad) cmp sub cmp or retq jg leaveq (bad) (bad) rex.W ror mov mov movslq scas std (bad) push xchg cmpsb fs out rex.WRXB jne sub mov (bad) or sarl and rex.X test cld lock (bad) (bad) cld sub (bad) (bad) xchg (bad) (bad) (bad) (bad) cmp movabs in rex.WXB push or (bad) (bad) (bad) mov (bad) cmp xlat mov loopne (bad) jne mov push cli lret mov insb pop adc push (bad) pop xor (bad) mov loopne lock sub stos xorb insb imul cwtl mov (bad) in sbb add je rex.WRXB adc test stc cltd rex leaveq or hlt fstp mov xchg jbe es cmc and movabs and out (bad) mov in sbb sub (bad) cld rcll cwtl rex.RB scas hlt xchg jrcxz stos cmp (bad) (bad) (bad) cld or callq (bad) (bad) stos movabs or popfq adc out in lods bnd rex.XB pop push out sbb stos adc mov xor (bad) add (bad) outsb (bad) addr32 add add or xlat (bad) (bad) pop and std imul xchg push shrl jle (bad) (bad) (bad) stos loopne data16 (bad) repnz cmp rex.WXB add mov jg rex.W rex.WR mov sbb mov (bad) stc jl push rex.X fwait jae jb xchg cmp push mov rex.WR push (bad) mov (bad) mov mov data16 jg jmpq jns sub xor push rep std repnz or callq (bad) pop (bad) push (bad) or jb xorl leaveq sbb retq (bad) in rex.WRX loop ficompl (bad) (bad) sbb jo add add (bad) xlat cld int lret pushq rex.RB add mov xor rex.RXB pop repnz rex.RXB rcl or cli ss rex.WRX pop int (bad) fdivl mov setno xor scas sbb (bad) lods lret movabs pop mov popfq cmc xor jg jb xchg or cltd mov sbb fsubrs test push xor hlt and (bad) sub (bad) sti jns ss std mov xor sbb fldt mov lea scas pop callq adc rex.R adc add (bad) shrl cmc jne pop data16 (bad) (bad) ljmp sbb movabs ja movsb leaveq xchg mov xchg ficom sub xor push (bad) pushfq int rex.WXB sti sub sbb pop cmp sub and (bad) add mov xorl leaveq stc sub jmpq pop xchg leaveq (bad) sbb test rex.RX mov repnz out or fcoml mov push fs js (bad) sti clc callq in xlat dec add sbb hlt cld (bad) in imul pushq sbb xchg (bad) lret clc fnstsw sub adc xchg shl fist rex.WXB rex.RB cmp or add movsb or out scas (bad) (bad) (bad) sti stc pop test (bad) (bad) (bad) decb mul (bad) xor in mulb outsl jge fisttpl pop cmp je (bad) (bad) dec js outsb (bad) scas rcrb addr32 cltd fldenv in xchg xchg add rex.B fs (bad) adc (bad) jb mov jl pop (bad) mov jge add (bad) jge adc jnp lea movsbw lea js mov jmpq (bad) add cmpl (bad) push test sbb (bad) add cmpsl mov rex.XB es push push add add or pop rex.WXB mov rex.RXB movabs jo push mov jp rex.WX mov (bad) xchg cmp xor mov je push stc sub mov (bad) or adc mov mov loop sub fwait mov insl lods pop mov fidivr repnz sti scas (bad) or jb or rex.WRXB mov rex.WB (bad) mov sbb movabs sar sub rcr cmp neg add dec shld shr mov neg shr mov cmp clc repnz jmpq je jmpq xlat fwait std mov push (bad) or cmp je int jnp test sub add and mov cmpsl fdivrp test cmp cli idivl add (bad) and mov movsl nop std (bad) hlt or ja mov (bad) sbb push fdivr (bad) push movsl xchg pop fdivrl mov rex.RB movabs or rex.WR jp ss stc mov (bad) loope retq pop pop loope push movslq sbb stc int3 (bad) sub test xchg add add es xor and popfq (bad) (bad) sub adc in pop rex.XB (bad) (bad) mov leaveq movabs push divl mov repz sbb and mov rex.WX andl (bad) (bad) incl verw rex.WRXB add movzbq mov test bt add jmpq jmpq movzbl mov jmpq jmpq fildl jns test rol rex mov enterq mov movabs negb jnp test xchg rex.X xchg cmp rex.WX pop rex (bad) repnz nop jle or jg mov jne rex.WX (bad) sbb scas xor mov jl mov pushq add mov stos data16 mov mov sbb cwtl mov rcr adc insb (bad) rcrb (bad) std or (bad) (bad) (bad) jmpq mov lahf ror mov int xorl jnp loope pushfq (bad) or add add mov mov (bad) rex.RX or (bad) lods sbb push test (bad) ja mov xor rolb fs rex.WRXB pushq and rex.RB movabs pop xchg xchg mov (bad) mov jmpq (bad) movb retq mov (bad) jae cs or or rex.R iret jle stos pop imul (bad) mov fisubr (bad) jno enterq lods sbb (bad) (bad) pop gs ja out and repnz or cwtl mov xor pushq iret (bad) push rex.RX rex.WX movabs adc jmp and (bad) cld or stc jg (bad) (bad) (bad) (bad) (bad) (bad) or push add repz out cmc fs rex.RXB cmp (bad) pop fldcw pop (bad) (bad) (bad) (bad) and insb push jge cmp sahf shr xchg mov cld out (bad) (bad) (bad) (bad) mov adc cmpsb lret fdivrl rcll scas (bad) insl jge rex.X xchg test jbe (bad) rex.W rex.B rex.WXB rex.WRX (bad) cmp out rex.R rex.RX mov adc leaveq bswap xchg xchg mov movsbw bswap movsbq mov retq je or adc jl loop (bad) jrcxz rex.B mov and data16 sar cmp in add (bad) jae rex stc loopne movsb jg jo sbb std (bad) fnstsw mov rex (bad) imul std pushfq out sahf add xor adc (bad) rex lock (bad) (bad) sti movlps (bad) std sti loope mov rcl stos adc hlt (bad) jrcxz and loope movabs sub xor jrcxz lret sahf imulq (bad) inc jge mov push jle mov (bad) (bad) (bad) cmc xor pushq fidiv xor mov jns jb outsb (bad) hlt movsb (bad) pop (bad) pushq adc fstpt xchg xor rorb add add add jmpq (bad) adc mov xchg and rex.WR rex.WX stos std jrcxz lods sarb test sub xchg je pop ss ds icebp adc push orb xchg icebp jmp mov (bad) cli rex pop sbbl rorb imul rex.WR cs lods cmp jmp (bad) cmp lods out cmp fwait repz vsubsd mov mov fiaddl enterq cmp rex.WRB (bad) std cmc mov int add add or sbb or push gs pop lret pop (bad) mov stos sahf add cmp test cwtl mov fsubs jl shll mov pushfq cmp scas pavgb sarl stc cmpsb mov sub (bad) outsl and leaveq xor int3 movsl jl and movb pop in and xchg rex.WR (bad) repz callq or sub (bad) (bad) mov mov rex.B movabs pushq movsb lods (bad) (bad) scas rex.WXB jne adc or jrcxz (bad) gs divb lock loop cmp mov (bad) (bad) (bad) sti (bad) cmp cmp (bad) (bad) incb (bad) imul je and fstp xchg (bad) (bad) incl ficoml lahf retq cmp mov pushfq and loopne sti lret data16 imul repnz movabs std pop jp scas mov mov pop movslq pop sbb incl add mov add add add pop (bad) add add add add add add or (bad) add (bad) add cmp add sbb add add add add add add (bad) outsb (bad) add add stos mov add fist add (bad) add (bad) sbb incb sbb clc pop sbb in (bad) add add add sbb add add mov add add add (bad) add add add (bad) add add add rcll mov adc xor stos add mov push rolb in in pop xchg (bad) fidivr rolb (bad) pop rex.R rex.W lret cli ds loop out xlat sbb lock mov movabs addr32 lret xchg mov scas pop xchg xor in or cmp (bad) xor (bad) mov or sbb (bad) add sbb mov (bad) stos pushq (bad) mov (bad) jno fwait lret mov and mov stos mov sbb mov cmpsq add lods js pop and js,pn (bad) xchg (bad) fstpt cmp (bad) fiadd movsl rex.WXB lea repnz sbb push rex.WRB add rex.X imul out jno addr32 sbb pop xchg pushq int3 rex.RXB jo in xor pop in movsl out leaveq (bad) pop cld adc shrl lret fbstp gs iret movsl outsb (bad) retq xchg rex.WB fstpl add push xchg fcmovnbe rex.WRXB (bad) pop xor in add push xor and retq sbb and xorl mov cs pushfq callq frstor add retq and rex.RXB mov mov xor adc es fidivr add int3 addb add rex.WRB or or add xor xor (bad) (bad) push shll jne cmp sub lea loopne jb sub fs jno jae retq movsl jle divl adc enterq adc or in or and rex.RB ds xchg (bad) mov (bad) (bad) and mov pop xor push scas rex.WXB mov (bad) cmp rex.WXB sbb mov cmp ror pop jmp add jle out push rex.XB mov out add xchg xchg ds js stc pop imul mov rex.WRX add in adc je adc jrcxz imul jrcxz sbb cmp (bad) jle fldt push (bad) movsl and jmp push jrcxz sbb retq mov repz adc rex.RXB cmp add push cmpsl push mov or int3 adc hlt jns (bad) sub mov repnz fmul cmp lret cmp (bad) mov sbb mov ss xchg jno xor mov outsl add (bad) rex.X jmpq and xor (bad) test mov jle or pop push adc mov push adc stos pushq push sub lret (bad) in sub mov test lock jg (bad) or xchg movabs sub jne add rcll (bad) rex add sbb nop stos addr32 or js cmp and retq jl,pn cmc rex.W hlt icebp (bad) std pop fwait cwtl jmpq in mov roll pop xchg ds cmc mov cmpsl cmp testl (bad) jmp sbb sarl outsb adc loop lods cmp outsl in cld or pushq mov rex.XB (bad) mov xlat movsb fwait leaveq outsl rex.XB xor sbb (bad) (bad) bswap mov loopne lods xor add xchg rex.WB xchg sub repz mov je (bad) mov jo movabs in cmp pop test leaveq sub rcll adc imul sarb pop xchg popfq imul in (bad) pop sub cmp mov in jl repnz fmul pushfq shlb sbb push xchg pushq lret jns sbb fs (bad) iret xor data16 (bad) out pop out (bad) pop add mul (bad) (bad) sbb pop pop (bad) rex.WR mov icebp adc push pushq cli or add (bad) rorb cmp out je rex.XB xor out (bad) cmpsl pop and and out and test xchg mov (bad) btr test (bad) ss int3 mov xchg loope mov sub add xor sbb je,pt decl std (bad) rex in sbb movb callq adc jno sbb rex.XB rex.X rex.WRB rex.WXB mov and fs fs fimull xor and (bad) rex.RXB mov (bad) int3 xor movabs mov cltd mov test xchg add es in (bad) cmp mov jne and mov cmp adc rex.W cmpsb cmpsb mov pop rex.X movabs rex.WX jmpq sub (bad) insl test (bad) and out (bad) lods adc xchg rex.WRXB leaveq retq rex.WX sub rex.WRB (bad) sbb or sub mov hlt outsb outsl movslq (bad) pop fiadd (bad) (bad) (bad) jae (bad) outsb adc mov in fidivl int out in js sub xchg sub test adc lret (bad) sub fcomp sub fsts jb insb (bad) popq jne retq add test xchg pushq and andl mov mov callq xlat sbb movabs add (bad) outsl retq rex.WX adc pop lret scas push xchg (bad) mov rcl nop movsl lea mov push pop rex.R negb hlt and xchg adc xlat fistpl rex.XB push (bad) fnsave enterq fiaddl movabs push (bad) outsb in xchg cli mov jl fisttp push movl pop test iret mov lock push or mov rex movsl (bad) movabs xchg scas rex.WRX movabs sbb xchg (bad) sub sub mov cmp push outsl movabs mov pop cmpsl xor jo notl rex.RXB ss rorl pop sbb adc mov loop (bad) cwtl (bad) or mov lods std ja mov outsb (bad) cltd outsl jno outsl sarb pop push loopne jmp imul (bad) rex.WRXB mov (bad) rex.W (bad) fcompl mov jrcxz int3 jmp cli rex.WRXB nop cmp xchg mov push jmpq mov (bad) rorb push jp xchg rex.RB data16 xor je pop divl mov in clc cwtl mov nop sbb imul mov fsts push or outsl push scas adc mov rol mov adc xor (bad) cmc and (bad) xchg rex in (bad) rex.WX cld out iret jp jne rex.WXB gs rex.R out sti popfq outsb (bad) rol rex.XB pop (bad) rex.W and jnp adc cltd pop (bad) xchg in cmpsb lock jne pop add xchg sub enterq rex.R movabs mov xor js cmp rex.RXB ja and enterq testb pop movsb cli (bad) pushq jne jge popfq lcall adc xor mov out (bad) retq out orl or fwait std pushfq mov mov icebp sub outsb adc mov (bad) fistpll fs (bad) pop jne add xchg (bad) xor push hlt mov in sbb shrb rex.RB ss xchg cltd sub sub out rex.WX adc subb xchg xchg scas xchg adc sub callq sub movsl push rcr movabs cmpsb (bad) xchg (bad) fimull movsl adc (bad) std pushfq (bad) lods rex.WRXB pop rex fs loopne pop (bad) cmp (bad) adc add xchg and negb mov loopne addr32 jmpq adc xchg (bad) es fisub mov (bad) pushfq rex.R jo add clc test add addr32 (bad) (bad) and clc es xchg mov (bad) (bad) (bad) in add test nop scas add (bad) scas movsl cmp xor leaveq leaveq cwtl psubw jo rex.WRX (bad) out rex.RB scas cmp (bad) imul fdivr (bad) mov fxch mov add (bad) (bad) mov (bad) jrcxz sti pushq xor lock pop in or icebp gs sub (bad) (bad) add or mov (bad) adc mov enterq mov stos lock shrl rex.B repz in (bad) addb enterq add retq jbe mov jmpq jns outsl shl mov gs (bad) (bad) test rex.WB (bad) (bad) or pslld rex.WRX stos pushq pushq cmp (bad) loop pushq adc rex.W sbb mov jrcxz (bad) in push or pop rex.WRXB pushfq xchg xchg in (bad) rex.X (bad) insb and or rex.WB (bad) (bad) (bad) outsl loop adc adc sbb (bad) sub or cmp sbb pushq mov (bad) rex.WB and jmp jp outsl scas movsl mov or and rex.WR or mov cmp push (bad) (bad) movabs xchg outsl (bad) xor addr32 (bad) jo clc rex.WRXB stos sub fsub insb (bad) rex rex.WR jb cmp mov rex.WRB mov add cmc and (bad) push ficoml cmc rex.WXB test fs stos sub pop cwtl insl (bad) movslq rex.WB xchg mov jp cltd lret out add in cli test (bad) fwait ds sub stc jo rex.B rex.X mov adcl loopne jrcxz (bad) rex.WB mov ss sbb cwtl rex.R orb pop fidivrl xchg (bad) mov loop jp mov fnstsw xchg orl sbbb jmpq notb jns mov pop insl loope loop pop add cs (bad) fisttp cmpl xchg adc jbe (bad) xchg sbb (bad) (bad) test pushfq (bad) je or and jnp lret jae or jp scas sbb mull pushq in (bad) mov (bad) cltd pushq mov enterq adc rex.WXB sbb (bad) es add (bad) pushq rex.RB (bad) mov fwait adc (bad) rex.XB enterq xchg (bad) outsb mov sub sbb (bad) adc rex.RXB mov (bad) rex.WRX xor leaveq (bad) sub (bad) jmp fcmovnbe (bad) (bad) xchg cmp mov test enterq sbb in sbb and test cmp subl cli rex.RB in fucomi jmpq (bad) rex push popfq xchg repz mov xlat negl (bad) rex.RB cwtl and mov test cmpl rcl ja mov pop out lock sbb cltd mov cltd adc (bad) adcb (bad) jmpq rex.RXB jp mov and adc cmp (bad) cld shl xchg neg add (bad) add stos sub (bad) cmp xchg (bad) and jge (bad) push rex.WRXB pop mov (bad) rex.WX jg scas mov (bad) (bad) sbb mov retq (bad) rex.WRX mov leaveq jmp fwait (bad) (bad) (bad) mov (bad) lea insl lock xor add (bad) mov and adc fisubrl sub movabs jp es xor ss rex.WRXB cld ss sub out add in ja (bad) push movabs and gs cli push xchg (bad) add mov repz mov std hlt stos rex.R test xchg callq adc xchg lret rex.WR rex.WR xor cld movslq pop sbb xor xor (bad) cmp adc (bad) and mov rex xor jb jno (bad) xor mov pop fistpll adc push xchg mov (bad) xchg rex.WX (bad) inc test retq xchg pop jb jrcxz pushfq repnz (bad) sarb scas (bad) add fcmovnb add rex.RX (bad) jbe rcll popfq out sbb rex.RB cli xchg adc mov add add test iret (bad) decl shll movabs not mov test test cmp clc sub clc test cmp cmp pushq test clc clc cmp jmpq jae xor in add sub imul mov and fimul lock in xchg xchg mov cmp fs mov (bad) in push (bad) mov mov jle shlb push out push insb hlt (bad) rex.WRXB rex.R rex.W add movabs cld (bad) mov popfq adc test in (bad) test cmpsb jg test sbbl add sbb push and add ja add add or pop mov or or nop clc (bad) push loope jb sub ja mov int mov popfq ja sti movabs xor scas xchg movabs jne (bad) decl mov incl jmpq add push cmp (bad) mov (bad) push (bad) stos retq (bad) add (bad) (bad) in (bad) ficompl or outsb (bad) cmc or (bad) rex.WB rex.X jrcxz xchg xchg jg cmp data16 (bad) cmc ds rex.RB xchg shrl rex.RB rex.WRB stos mov (bad) lret clc insb rex.RB sub (bad) (bad) (bad) std add out addr32 (bad) (bad) callq fsts sbb jne ss xchg lods retq test (bad) nop cmpsl mov xchg retq pop lea es (bad) mov test sbb retq sbb mov and add add and push cmp cwtl mov (bad) sbb addr32 sub test and outsl (bad) sbb rex.WR fidivr mov pop repz cld jp push mov stos pushq ja jmpq addl pop or mov mov rex.X rcl (bad) (bad) fisttp pushfq int js scas add xlat cmp add add mov or rex.RX pop push xor rex.XB pop jle xor movsl loop rex.RB rex.X (bad) (bad) push push cmpl and stos cltd adc ss sti movabs movabs (bad) mov fimul rex.WRB rex.WRXB sub mov adc (bad) (bad) cld push je imul jo retq outsl fimull sbb add or lret mov (bad) (bad) jmpq insb sub rex.WX and or sbb mov pop cld test push cmp (bad) adc (bad) mov andb add in and xchg fnstsw pop mov lods add add loopne (bad) fiadd add test push (bad) jmpq stc pop (bad) clc clc bt add test add jmpq rcll (bad) cmp lods leaveq testb callq loop sub or lods adc or sub in (bad) lahf rex.X rex.WRB and jnp rex.WB (bad) (bad) mov push add sbb rex.WRX sub mov or fisttpl (bad) int ficompl shr sarl and mov (bad) (bad) and mov pushfq xchg add (bad) pop rex.B push out rex.WRXB repnz mov fstpt movsb mov movabs frstor jne (bad) enterq or rex.WRXB out adc push mov (bad) cmp or mov mov mov fs out in sub xchg (bad) insb (bad) fcoms in adc popfq sbb test mov out mov (bad) rolb xchg pop mov fsubr xchg out rex.WRX rex.WXB mov rex.WR fcmove sarb repz (bad) mov js xorb imul xor (bad) jge rcr (bad) pop callq mov mov xor fs add in test (bad) rolb test (bad) (bad) cld jg (bad) stos (bad) (bad) (bad) (bad) (bad) xchg (bad) sbb add add add adc pop pushfq insl rex.WRX mov adc loope fisttpl mov mov sub (bad) and sub sub mov push cmp sub cmp jb mov (bad) jmpq (bad) outsb mov scas (bad) rex.WX add callq jno (bad) rex.B or fwait lahf rex.WXB jns xchg ds pop mov sub rex.RX sub push sbbl rex xchg xor xchg xchg (bad) rex.RB mov pop mov (bad) mov cmp xchg push add mov popfq lods test mov rex.R in imul cmp mov rex.X test xor mov (bad) (bad) (bad) cld pop rex (bad) outsl ds pop adc jns loope fcoms add adc (bad) (bad) (bad) out cmp pop and add insl sub (bad) mov (bad) (bad) or jl (bad) mov pop ds insl int3 push add jns adcl mov add (bad) rex.WB mov sbb (bad) rclb jp int fisttpl shr add mov icebp callq movb push jg rex.WB lret add enterq xor adc rcl test in jnp pop sbb (bad) push rex.XB mov jno push sbb xchg (bad) cltd insb scas leaveq (bad) movabs pushfq rex jg (bad) (bad) (bad) decb (bad) (bad) (bad) incl sahf cltd jae adc (bad) xchg rex.R rex.WR rex.X xchg mov rorl andl stc je (bad) (bad) mov jne subl rex.X scas pop out rcr jge mov orl lret test push (bad) xchg (bad) stos andl adc (bad) scas mov std stc (bad) jge lret fldcw leaveq (bad) sbb push imul add jp sbb xchg push ss cmc xchg rex.WXB gs xor (bad) sti or fnstcw repnz (bad) pop jl int3 rex.WRXB iret cmp (bad) push adc cmp mov outsb mov rclb and jl (bad) push (bad) lods in rorl push push mov std mov jnp pushfq jg adc add fldt jge in js fist mov mov (bad) mov add outsb rex.WR (bad) mov (bad) add test out (bad) add (bad) in cmp mov xchg je mov test sbb xor sub sbb mov imul (bad) cld push or mov mov sbb not movzbl mov pop not setge pop xchg lea pop lea movsbw jmpq jmpq add rex.WRXB outsb push imul (bad) je outsl outsb add jmpq xchg rep (bad) (bad) (bad) mov push cli callq shll movabs insb (bad) movsb rex.RB sbb sar mov in imulb adc int setp cmp rex.WX rex.RB cld fwait in and loope test lret test jle adc shrl (bad) ja int pushfq lret andl (bad) (bad) std or fiadd add fcomip mov (bad) and (bad) (bad) std insb rcrb retq push pushq rex.WRXB lock add or ja test movabs and and jbe iret cmp xchg xchg push cld test mov fs push test cmp push push push xor cs insb add and negl or clc cltd cs mov cmp (bad) (bad) loop repnz cmp cwtl push add (bad) (bad) xchg mov rex.RX imul iret lcall fs or lock cli fst mov test (bad) push lods add int3 cld lahf cwtl (bad) xchg rex.WRX mov shrb or jmpq cwtd rex.RXB and jg div fmulp cmpsb mov (bad) lods movabs shll out int cmp lods (bad) and sbb (bad) (bad) (bad) (bad) cld ffreep mov repnz cs or je add add push std test (bad) movsl mov mov rex.WRXB mov out lods shr rex.XB rex.WXB jno pop adc outsb and fs sub xchg ja cmc xchg add cli push clc mov rex.WXB adc and scas jmpq je cmc stc jmpq jmpq je jmpq (bad) or loope adc xchg (bad) (bad) repnz loop imul mov (bad) sahf icebp rex.X or or (bad) lock rorb repnz (bad) push mov (bad) icebp movabs scas mov rex.WRX cmp jmp mov je fsubrl jrcxz adc test callq punpckhbw in cld lods rex.WRB (bad) (bad) decb (bad) (bad) (bad) jmpq repz (bad) int xchg xchg add xor popfq lret leaveq sbb rex.X rex.WXB lods rol xor sub push or lods (bad) jmp jb fnstenv in (bad) xchg leaveq rol (bad) out pop movabs cli movabs (bad) (bad) push push xor xor fs insb add mov lret jb je scas mov repz sahf rex.RX lea in add jo mov xor fadd in (bad) std push sti sbb fnstsw out rex.RB mov lret jns xchg xor mov enterq xchg sub sarl pushfq (bad) sarl scas mov or rclb or or xlat loopne cmp cld jge fldl mov (bad) (bad) (bad) nop cmp push pop and nop mov jns mov sub (bad) add add adc loope (bad) and gs fs lahf adc rex.WXB movsb (bad) adc rex.RB imul lods enterq (bad) adc cli (bad) mov mov xor mov mov stos (bad) push or or test (bad) lret in (bad) and shlb mov or mov or (bad) fldenv retq xchg rex.WB push jno jge sub (bad) add and rclb add adc ds rex.WX lret stos xor sub and rex.XB leaveq pop or roll movabs (bad) and rex.RX rex.RB (bad) xchg test enterq rex.WR movabs (bad) adc (bad) mov (bad) decb (bad) (bad) (bad) decl retq xor xor add jne rcl mov pop cli lret rcrl sbb or pop (bad) cmp insb mov xchg test xchg add popfq jmpq mov cs int3 data16 mulb pop mov lahf mov add stc cmp mov cmp or clc mov clc jmpq cmc bt add clc cmp jmpq jmpq mov test sub cmc clc test pushq stc clc cmp jmpq jae pushq jne pushq jmpq ja jmpq ja clc clc add jae cmc stc or jl je jmpq ja rcr adc sub adc btr add mov cmp bsr mov not not sub mov cmc cmp repnz jmpq cmpsl popfq push and mov mov jbe (bad) pop movabs mov rex.RX shlb (bad) in push jle rex.WB sub rorb lock cltd mov out add cwtl and test jns,pn mov (bad) (bad) (bad) cld out (bad) rex.R (bad) (bad) incl (bad) adc shll mov rex.W rex.B (bad) retq mov mov lret rex.RXB push divb (bad) mov or mov push cwtl sub add movsl and subl rex.RB rex.XB (bad) rex.WRB fistl sbb pushq jnp movabs xchg sub pushq jrcxz sub stos popfq mov mov add nop outsb cmp sub (bad) add (bad) pushq adc loop mov xor movabs (bad) jmp (bad) in mov cltd jmp (bad) (bad) out cli adc pop mov jnp insb fimul xchg mov rex.XB cmp pop rex.WX jg rex.RB callq mul jb cmp (bad) rex.R test rex rex.WXB in (bad) sub and rex.WX mov xchg cmp xor (bad) jle rolb cmp xchg jl rex.WR (bad) jg cmp jl sbb pushq data16 jl rex.WR xchg loop cwtl jmp (bad) sbb xor push rex.X ss in rex.RX (bad) (bad) xor mov mov fdivl clc cmpsb adc (bad) mov fimul (bad) or cmp pushq mov push outsb stc andl mov in push and std and jge,pn in mov and pushq mov incb fiadd (bad) (bad) (bad) clc fwait lea movabs mov cmp adc add mov (bad) (bad) cli and fnstenv or mov rex.B fwait add pushq pop sub sbb (bad) (bad) (bad) sti rorl (bad) mov (bad) (bad) std push psubb xor adc ja int retq (bad) jae sub (bad) push (bad) mov cmpsl mulb (bad) (bad) (bad) callq cmpsl movabs add xchg movslq sti stos iret add push or jns xor out add xchg test cltd mov jne xchg mov xchg (bad) icebp movsb enterq retq mov jne clc jmpq jne sbb bswap clc movzbw xor shr bt ror cmp mov sar add mov mov mov test test jmpq push rex.W rex.WR push rex.WB cs insb add out or bt test jmpq test cmp xor mov bt cmp jae jb clc cmp jmpq jbe ja (bad) fbstp fsub jrcxz rex.XB hlt (bad) fimull lods lcall and push or or mov (bad) repz div frstor xchg mov movabs mov outsb adc add movabs push (bad) (bad) fidiv rex.WRB push and movabs or xor jo (bad) xchg mov adc mov (bad) (bad) cld fwait sbb push (bad) (bad) (bad) (bad) scas adc or mov sub je add add and retq (bad) sub fdivr pushq scas sbb gs (bad) mov rex.WX (bad) scas lock rex.WXB add and pop repnz rex xor push mull mov mov jmpq jmpq callq add jmpq sbb fwait push jns (bad) (bad) imul in mov cmp or xorq rex.WRX (bad) and imul (bad) (bad) cmp pop fmull mov callq mov out xchg cmp es push rex.X lods (bad) vpcomw (bad) movsb hlt and mov xor (bad) (bad) (bad) decb repnz mov jns (bad) (bad) dec add pop jnp (bad) rex sti cmp shlb pop fcmovne in mov hlt (bad) jb lods (bad) cmp sahf rex.WXB fild movabs xchg scas add rex.W rex.RB xor retq xchg fadds movabs add (bad) mov pop xchg pop adc in int test pop and int (bad) int stc loopne (bad) xchg jg,pt repnz (bad) jo (bad) fimull (bad) pop loop repnz outsl out lahf std sub mov (bad) retq mov rex.RX movabs lea shrl int jo (bad) (bad) cld mov rex.WR (bad) mov pop cwtl rex.WR test movslq mov add add rex.RXB cmpsb add and xor push push sub and test (bad) add (bad) jnp jmp lods retq rex.WX shlb pushq push xorl (bad) cwtl in in mov out rex.RXB imul movsl or loope cmpsl mov insb adc mov adc fidivrl xor and (bad) sub rex.R rex jrcxz outsb sbb mov jmp or rex.B adc loop mov adc mov fs je (bad) lods add add fs mov (bad) lock (bad) ds adc pushq loopne ficomp push rex.WRXB out or (bad) decb (bad) rex.WR rorb add add jp outsb jg or (bad) add push ds jnp mov sbb mov out ficoml rex.R mov imulb (bad) xchg (bad) mov mov jmpq jmpq (bad) addr32 test jl adc out rex rex.WRB popfq (bad) (bad) imul gs xchg loopne sahf push xor mov (bad) (bad) mov pop pushq mov rex.WRXB hlt push in fnstcw retq (bad) pop insl pop adc (bad) jbe shl rex.WX mov jne jp (bad) sbb jbe rex.WB cmpsl stos and sbb mov (bad) rex.RX in (bad) cmp hlt sti insb (bad) sbb (bad) andb mov sbb xchg sbb out (bad) (bad) (bad) (bad) std cmc lea add or xchg rex.WRXB rcll (bad) ja stos (bad) jnp cmpl in ja notb movd xchg add cmp mov mov lret cmp or movabs lret sub xlat mov nop adc mov fmull jbe pushq (bad) add (bad) (bad) fcoms mov (bad) rex.RX xor in hlt sub stos std (bad) stc and push fs (bad) (bad) hlt rex.RX (bad) (bad) out fiadd xchg jmpq (bad) xor callq (bad) (bad) cld adc mov cwtl (bad) (bad) (bad) (bad) and cmpsb mov stos (bad) (bad) repnz stc rex.W (bad) (bad) (bad) jmpq cmpsb adc jbe or ds cmp (bad) popfq mov or movsb fidivl (bad) jbe scas sbb cmpsl jg sbb xchg (bad) mov rclb (bad) or adc jne retq mov jb (bad) shlb xorb stos and rorl pop int3 ja add mov or jrcxz imul insl add pop or shr (bad) (bad) notb sarl fcompl retq jl (bad) (bad) in outsl cs sahf (bad) xor or jns (bad) (bad) sti (bad) xor fcmovbe (bad) (bad) (bad) std jmpq test rex.WB repz push retq scas mov rex.WXB mov (bad) fwait xlat ds loope sub xor (bad) cwtl iret rex.X lahf movabs (bad) inc sbb out and cmp (bad) outsl rex.WRX gs movq negl or and rex.X negb (bad) jmp lods (bad) out (bad) cmp mov cmp cmp (bad) gs fadd mov adc xchg scas (bad) mov and nop cmpsb sbb mov shr cmpsb movabs xchg addr32 (bad) xor rolb add or test lret rex.WRXB and mov mov lea mov jo flds (bad) imul (bad) scas xchg or push mov cli push out pop or negl clc movsb adcl shrl mov add movsbl jmpq je dec add and push rol ror mov test sub mov lea mov bswap lea jmpq movb cmc cmp test jmpq add rex.WR movslq rex.B insb outsl movslq adc mov jae outsl mov test test repnz cli jrcxz int jmp fisttp pop lret out (bad) lock insl (bad) in mov cmp rex.WXB (bad) jbe pushq iret cs js (bad) scas cs pushq add mov (bad) movabs pop fs movabs mov (bad) out jb jne leaveq lods rex.WRX movabs pop jp jmp (bad) (bad) cld outsl repz (bad) (bad) incb insl (bad) cmp cmp in loop retq sub add xor (bad) pop orl cwtl imulb test sbb or add (bad) and out ja pop out push (bad) int adc (bad) push add clc push push negb rex.WRXB in mov retq shlb pop add rex.RXB gs gs imul (bad) mov rex.WR rex.WR rcl fs insl or imul mov rorl fimul adc (bad) sbb int3 callq rex.RB popfq mov cwtl cmp jrcxz repnz (bad) cltd and add mov shr cmp and sub (bad) mov rex.WRXB (bad) stos (bad) retq xor (bad) xor rclb mov mov (bad) (bad) (bad) cld popfq (bad) (bad) (bad) (bad) (bad) (bad) mov rcl movabs mov out (bad) cs xlat xchg clc and xchg (bad) mov jle roll hlt out vmovups and mov rex.WRXB adc pop pushq int push sub sub and (bad) cmp sbb sub add movabs mov (bad) sbb push pop mov (bad) jae add rex.WR (bad) imul add sbbl jmpq mov movsbl movsbl mov jmpq add rex.XB rex.WB imul add iret movzbw mov jmpq stos jmpq mov mov adc (bad) jg rex.WRB lods adc movslq pop cmp rorl adc cmp movsb sbb cmpsl jne sub (bad) jbe jle loope (bad) jp frstor (bad) mov jge (bad) jge jle ja jo xchg pop out retq ja movabs cwtl orb xorb adc (bad) xchg bnd imulb out push xchg (bad) fildll rex.RB js stos rorl (bad) (bad) (bad) (bad) (bad) std cmc mov mov or mov rex.WRB fdivrl cmp (bad) imul movsl or subb std sbb sti pop rex.WRX jno pop in mov or sbb rex.RX xor and sbb mov pop test (bad) and (bad) lret (bad) lods scas sbb rex.R mov rex.WRB rex.WXB cs add mov lock sbb movslq notl mov (bad) outsl cld test iret repnz lock loope (bad) outsb mov xor cli sbb (bad) cld add (bad) (bad) (bad) adc rex.R imul lods and lea mov (bad) (bad) (bad) callq jae ds pop sub ja lods (bad) rex.RXB add clc pop cltd stc sbb mov adc addr32 rex.WRX repnz mov or movabs mov (bad) xor xchg mov rorb add add (bad) add jmpq jne shrb fmuls imul int3 (bad) (bad) (bad) push outsl push jg xchg or (bad) add pushfq ljmp ds lods sbbb test jbe (bad) int3 adc lods xchg jmpq or cld push jae jae mov cmp pop (bad) out callq test rex.WRXB out icebp adc (bad) jmp pop lods pushq push clc xchg jne jne hlt rex.RB (bad) (bad) sti out lea (bad) (bad) (bad) decb rex.WB hlt mov pop imul int3 or add add jp leaveq out stos out mulb rex.WXB jbe cltd int and add or scas (bad) add sub push vcvtss2si add (bad) mov enterq sub rex.RXB test cmc cmp test jmpq sbb lret sbb in add jg lea data16 rex.RB fcompl roll scas sbb rex.WRB cld out in mov fldl (bad) sub sti popfq (bad) jb mov (bad) (bad) (bad) cld leaveq mov icebp fisub (bad) and pop (bad) out insl callq and movslq lahf icebp sarl (bad) (bad) cld mov and (bad) jmp lods (bad) mov ds (bad) pushfq rex.WB rex.XB xchg rex.WR rex.WRX adc sub or pop sbb (bad) and xchg push (bad) pop add add pushq movb addr32 pushq lods fstl sub xchg lret sbb cmp mov add int and mov roll mov out xlat out rex.WX (bad) xchg adc sahf jae stc bsf inc mov clc stc shl data16 testl cmp jmpq bt cmpb jmpq adc rex.W jns xchg adc lret adc (bad) mov (bad) cmc sbb rex.W xor stc sbb mov movsl rex jo xor rcll add sbb sbb cltd cld mulb jb lahf (bad) icebp jb js pop clc cmp or push jg cld (bad) (bad) (bad) cld cmp movsl jge (bad) (bad) (bad) decb rorl (bad) or (bad) loope (bad) addr32 (bad) (bad) dec rex.RX or (bad) xor mull jl rex.WRX xchg rex.RXB add lahf int xor cmp loop mov adc mov pushfq (bad) sbb jge jmp xchg (bad) (bad) mov leaveq jle cs jmpq imul clc cmc add jmpq clc pushq clc jmpq in (bad) xchg rex pop cmp pushfq push (bad) add push mov scas (bad) lods mov rex.RXB add fldl xor adc cld cmc out in addr32 cwtl cli rex.WR rex.WXB iret adc orb out rex.X lock icebp nop mov shlb out rex.W std push jmpq jne mov sbb adc pop xor sbb mov jbe (bad) (bad) movsb mov mov sahf addr32 push (bad) push adc pop sti xchg rex.WX and mov loope (bad) (bad) (bad) sti jbe jns sar (bad) (bad) std mov bswap mov (bad) cmp cltd add or sub push or cltd mov roll es (bad) imul and (bad) and test (bad) jmp and mov sub fnstenv rex.R loop rex.WRX adc sti add sbb pushq cmpsb lret xorb loop test clc (bad) add icebp sub cmp cmp mov jmpq pushq jmpq push movabs (bad) mov add outsb imul shrb lret jb add (bad) pop insb out insl pop in cmp or rex.WRX rex.WXB jne (bad) mov or push mov popq push push xchg adc rex push test adc (bad) movabs xor or (bad) jnp (bad) sub mov sbb jbe (bad) (bad) (bad) cld in rcrl (bad) clc pushq adc lret lods fstpl (bad) flds js mov lcall fdivs stos loop xchg or cmp mov andl sub (bad) es xlat mov movsl data16 jae rex.R adc movabs cmc imul clc stc add jmpq jmpq add jmpq je test test jmpq je jmpq test jmpq rcl bswap movsbw mov stc stc xor cmp cmc jmpq jmpq xchg push (bad) mov pop test sub cwtl mov cmpsb and lea (bad) pop rex.XB xchg sub (bad) test cs adc (bad) jb cmp insl or jns mov rex.WRX rex.WR push movabs xor rex.XB and in ficom insb fdiv sbb (bad) (bad) (bad) cld and (bad) (bad) (bad) xor hlt (bad) lret in adc and (bad) (bad) pushq mov ds xor jb pop or (bad) jnp xor add incl adc cmp icebp pop push hlt test (bad) rex.RX push loope fmul lods fidivrl adc loop lahf push xchg leaveq adc movabs pop xor jnp pop xor sar (bad) scas test (bad) enterq push addr32 (bad) roll jmp jrcxz fsubrl cld jbe and cmp retq mov sbb movsb jno (bad) push sbb out xlat (bad) cwtl cli (bad) mov scas vcvttps2dq (bad) sahf insb pop (bad) sbb pushfq jle adc adc fs jge rex.WR repz (bad) (bad) (bad) cld xor (bad) (bad) (bad) decb pushfq rclb push or push sbb mov (bad) rex (bad) (bad) dec push mov movabs and nopl js (bad) sbb add push sbb repnz data16 (bad) jo rex.B jl or jae fs mov int sti cltd rolb adc test std jp lock add rex.WRB mov add movabs je rex.WXB loop icebp xchg mov xor leaveq (bad) ja rex.WRB push rex.RB (bad) push in (bad) xor retq mov adc imul cmpsb add (bad) jmpq movabs mov rcl punpcklwd mov mov cwtl cmpsl es (bad) mov or js jl push jbe xor rex.XB notl (bad) (bad) cld jmp (bad) jbe (bad) (bad) (bad) (bad) (bad) rolb clc push or mov data16 (bad) mov mov add jle fisub (bad) mov cli xchg stc rex.W cs cmp andl js enterq adc stos movabs insl in xchg (bad) rex.WXB pop enterq (bad) imul mov (bad) (bad) jmpq callq movzbl add rol mov cmc bt cmpb jmpq jmpq jmpq bswap mov jmpq test jmpq movzbw movzbw mov movsbl setnp bswap lea jmpq jmpq push mov jns xor stc mov mov insl pop xchg pop movabs cmp (bad) or stos es fcoms or iret imul mov (bad) or fwait in (bad) mov fiadd rcll rex.R rex.WR (bad) (bad) cld or jnp test (bad) (bad) (bad) sbb (bad) int3 vpackuswb jg or sbb lahf add js cs adc jne (bad) (bad) (bad) lcall cmpsb fldt (bad) mov sbb rex.WX and sbb test xor xchg xchg (bad) (bad) rex.RX xor xchg push or es cmp (bad) or outsb pop stc int3 mov shl jne and test add jmpq mov leaveq and jnp sarl or (bad) push cmp lock negb xchg rex addr32 mov (bad) sarb (bad) lcall add sub in (bad) imul mov mov xlat insl sbb fwait xchg andb movabs mov cmp jo (bad) (bad) push rex.WR (bad) (bad) jmp loope int3 std (bad) or xor (bad) (bad) mov push jno retq mov sbb mov ss (bad) (bad) (bad) incl adc fnsave enterq in int3 movabs movabs icebp xchg in mov imull xor ds mov lods pop adc xchg gs ja adc xchg cmc (bad) retq movabs nop push xor and cmp enterq mov fbstp (bad) mov rex.WRXB cltd (bad) imull xlat fimull rex.XB rol (bad) mull and cmp jnp mov (bad) add out in callq rcl mov xor or mov cltd repz cmc fnstcw sub test mov shrb pop pop adc xor jle xor fs cmc (bad) (bad) (bad) cld int3 movslq (bad) (bad) fbld mov xlat push xlat xchg rcrl jp sbb int cli (bad) mov add add test (bad) cld fldcw sbb jo repz mov sti outsb icebp (bad) (bad) (bad) stos jg or (bad) (bad) mov fmuls xor (bad) xlat mov int adc mov rcrb roll jo std incl adc (bad) pushfq (bad) jle jbe pop sub mov in add cmpsl jne pushq (bad) cmpl (bad) mov outsb or jne xchg mov sbb pop rex.WX repz js cmp sarb cs mov and and or test std pushfq rex.WB xor std ljmp xchg mov (bad) adc lea popfq (bad) xor add pop sahf faddp sbb (bad) (bad) cld pushq (bad) (bad) (bad) (bad) jnp xchg fs shlb sub push cli stos jo (bad) mov (bad) (bad) (bad) sti rex.WRXB test (bad) (bad) ja cmp xor (bad) scas (bad) (bad) lret (bad) (bad) push gs (bad) retq out or jbe cwtl mov sbb retq or movsl hlt movabs ja test add (bad) add mov (bad) decl stos and stos (bad) loope movslq add lahf push pop xor xor rex.XB add mov (bad) ss and mov adc rex.WRXB push (bad) push test rex.X push rex.XB fs insl rcll cld or roll add xchg lods add xchg rex.R mov mov cwtl mov gs mov (bad) xor jmp mov cmp popfq cmpsl mov ja (bad) (bad) cld popfq mov add mov sbb xchg (bad) rclb push adc or add add xor (bad) mov pushq jo rex.WX rex.B popq sub (bad) adc mov roll (bad) fidiv pop (bad) test cwtl (bad) xchg (bad) (bad) xor xlat retq cmp xor scas mov (bad) sub (bad) callq (bad) sub movsbq bsf bswap mov cmp sub stc pushq cmc cmp cmp jmpq not jb pop bswap pop movzbw pop movzbq movzbw not pop retq rex.R movsb pop (bad) test xchg lahf cmp sbb pop mov add (bad) sbb test pushfq (bad) sub rex.XB retq repnz fistl xor scas mov cmp push rex.WRXB sub jrcxz in mov scas add rex.W in (bad) rex.X xlat je add push mov iret sub cmp cld or cmp (bad) (bad) (bad) imull (bad) std sbb or fs sbb add or scas rcll insb push (bad) (bad) xchg clc callq lods jae (bad) rex.WXB outsb in xchg iret mov push or mov add pop (bad) sbb push jbe scas std jns lods (bad) and rclb mov out sbb fs ljmp (bad) and int3 (bad) jo stc jno cmp mov cmc fstps je imul mov cmp jae jns mov (bad) roll (bad) cld cltd stos out adc sbb stos or fsubrs adc xchg movabs fnstsw jnp (bad) jno xor fwait push cmc in (bad) mov and iret repz in sbb pop adc (bad) jg rex.RXB adc stc fsubs cltd fisttpl fnstsw cld test stos (bad) rex.WB (bad) (bad) decl stos fsubrs out add rcr rex.RXB movabs jp pop cltd xor mov xchg movsb pop xor rex.X lret scas pushfq std xor jl cmp ss std movabs jae cmpsl shlb jbe mov (bad) mov (bad) mov lret test cmpsb rex.WRX xchg rex.RX (bad) ds xchg rex.WX add mov scas leaveq sub xchg cmp xchg (bad) imul rex.WRB and cmp add add cmp rclb rex (bad) mov loopne add jle sbb rex.WRB enterq out rex.WXB jb test sbb cmp or leaveq mov rex.WXB (bad) (bad) rex.RB (bad) (bad) cld sub ror callq (bad) insb insl fdivl rex.WX test testb push push add (bad) mov rex.WX rex.RB (bad) ja sub movabs es imul cwtl cltd mov repnz mov out (bad) jmpq shrb (bad) in ficom adc pop cmp jmpq je bswap movsbl not add inc setle mov cmp add jmpq pushq stc stc cmp jmpq ss adc mov cmp flds sub rex.WRX mov (bad) repz rex.XB mov jmpq mov pop lahf sarl enterq pushq cs sbb xlat rex.XB xor push mov lods add add (bad) xorl adc data16 mov (bad) (bad) decb (bad) (bad) (bad) inc push jp cmpsb mov (bad) (bad) ja ja js outsl xchg rex.WR rex.WRXB add sti push data16 lods rex.X (bad) in (bad) adc rex.WRX pop (bad) jb xor jg xor cltd cwtl shr mov xchg jge (bad) pop mul rex (bad) movabs (bad) stc mov leaveq (bad) push cmp lahf sti imul rep adc sub imul decl cmp jmpq jmpq test mov adc sub (bad) stc subl xchg clc in scas (bad) cmpsl lods rex.RX shrl push mov jnp fwait sbb push push jnp int3 lahf out enterq (bad) (bad) (bad) (bad) and gs pop and (bad) xor retq add fnstenv (bad) fadd mov movabs adc jrcxz mov add (bad) movabs mov jns jae cltd mov popfq xchg test rex.XB add push out leaveq pushq rex.RB xchg sbb (bad) lods mov mov fnstcw retq imul cmp add jmpq (bad) ja xchg (bad) push sti nop out pop data16 mov push mov push lods rex.RX inc in mov imul (bad) mull cltd (bad) sbb rorl (bad) mov test lods xchg xor cmp sub nop mov ja (bad) jle movabs cld icebp es ss sahf ss rex.WX fnstenv pop (bad) cmp sbb and lret movabs (bad) stos iret fadd mov idiv pushq fistpl (bad) (bad) (bad) cld fcmovne mov (bad) (bad) out int cmp sub (bad) cmpsl fildl add add callq xlat lret outsl sbb or (bad) stos xlat push jnp rcr and negb sbb jge lret rex.RX fwait mov or rex.XB rex.R pushfq (bad) pop int (bad) (bad) mov fistl sub data16 (bad) (bad) clc sub test cmp jmpq rex.WB rex.RXB rex.WRB test pop xlat (bad) add insb rex.RX rex.XB rex.XB out rex.RX sbb in push (bad) (bad) or sub orl rex.W es pop cld data16 pushq orb rex.W addr32 rex.WRXB rex.RX xlat rex.RB rex.W sub rex.RX (bad) callq rex.RX rex.XB out iret shlq rex.RB (bad) mov pop rex.W (bad) and fisubrl rex.RX rex.W sub add rex.RXB sub add rex.W rex (bad) movsb movabs rex.W rex.WX rex.WXB mov rex.W rex.WRB es fadds rcll rex.W rex.R iret sub cmp (bad) push mov test pop loop rex.WRXB rex.RX adc retq rex.RX movabs fbld rcrb (bad) rex.XB (bad) int3 (bad) xor fdivs ss (bad) out sbb fstl push xor addl rex.W pop sub pop movslq (bad) push sub (bad) rex.W sub rex.W sub es rex.RB rcr iret (bad) (bad) sub adc (bad) gs mov loop rex.B rex.W rolb scas sub rex.RX rex.W movsb (bad) push es xchg (bad) push sub (bad) mov push iret and retq pop xlat rex.B sub movabs pop or pop rex.W rex.XB jg xor mov (bad) movslq (bad) rex.W rex.X rorb decl rex.RX ss es (bad) xor leaveq lret sub fbld push rex.B rex.W mov rex.W pop push rex.RX rex.W ss push (bad) es rex.RXB pop add rex.WR add rclb (bad) sbb rex.RB xlat rex.W push iret (bad) cs and std pushfq cmp mov (bad) add popfq shrl push rex.W sub rex.RX or data16 pop lods rex.W rex.W loopne rex.W rex.RX rex.W sub rolb iret sub es cmp sub pop cld movsb (bad) enterq cmp (bad) (bad) rex.RX rex.W movabs sti retq rex.W sub rex.RX (bad) cmp sub pushq test and rex.X cmp rcrb (bad) fnstcw repnz retq jnp and rex.XB mov rex (bad) push (bad) fldcw (bad) (bad) fwait rex.WXB adc rex rex.W es sub push rex.W sahf sub rcrb cmp cmp (bad) (bad) xchg sbb rex rex.W repnz adc cli (bad) cmc sub and mov (bad) rex.WRB pop movsq fisubrl cmp push sub es rex mov adc imull int es add xor mov (bad) rex.W rex.RB rex.W cmp rex.WR rcrb rex.WRX rex.WRB pop rex.W sub rex.W sub push (bad) lea (bad) rex.R and jp es and sub rorb pop fstpl ss fnstenv es cmp adc pop shl enterq rex.B js rex rex adc scas (bad) fmull sub cld rex.RXB pop (bad) jg stc pop (bad) outsb es mov (bad) rex.W sub rolb pushfq (bad) rex.RX shrl pop rex.RX rex.W ss sub rex.RX rex.W jp (bad) rex.RX (bad) sub int3 push (bad) cmpl ss adc rex push push (bad) (bad) push pop fistp push shlb data16 pop sub cwtl cmp std mov pop (bad) fist rex.W rex.RX jl (bad) (bad) adc push (bad) retq xor rex.WB repnz notb rex rex.WRB (bad) (bad) jg (bad) mov out mov push rex.RX sub vandnps (bad) (bad) rex.B add rex.W ss sub rex.B movabs push (bad) rex.RX rex.W sub rex.RX rex.W rex.WXB sub (bad) jmpq xlat sub mov push in (bad) rex.RB sbb and mov (bad) and ss pop sub mov rex.W sub rex.RX sub rex.RX rex.W sub rex.RX rex.W rex.WXB sub rex.RB mov sub fistpl (bad) cmp pop rex.WRB xchg (bad) add pushfq and fisub rolb rol rex.W jne rolb iret sub pop cmp scas rex.WXB (bad) add mov rex.W iret sub es cmp cmpsb mov cmp and rex.XB (bad) or rex.W push rex.W rex.RX push rex.W (bad) (bad) (bad) rex.RX rex.W sub rex.RXB es (bad) and xchg xchg sub rex.W ss sub adc movl (bad) mov and (bad) and and jns (bad) pop in (bad) push in pop rex.XB mov es push icebp (bad) jrcxz rex.WXB rex.RB rex.W pushfq sub cmp sub pop (bad) rex.WXB rex.W rex.XB sub rex.W cmp (bad) adc sub cmp ss es add sub cs xchg (bad) push (bad) (bad) loop sub rolb scas sub out pushfq retq rex.RX sub (bad) rex.RX rex.W sub add retq rex.WRB mov rex.W (bad) es (bad) rclb (bad) (bad) mov (bad) (bad) xchg xchg (bad) lea lock rex.W rex.WRB es (bad) jo (bad) rex.WRX mov es (bad) xchg sub sbb sar (bad) retq jno rex.W (bad) ss sahf mov pop fsubs pop (bad) and leaveq and sub and mov adcl rex.B add sub test ss sub stos mov rex.W add shlb push (bad) lock notb (bad) rex.WX std shlb popq (bad) push movabs rex.W rex.XB (bad) (bad) scas movl or (bad) mov jl (bad) stos xor adc iret add rolb cs rex.WRB sub rex.WXB add outsb rex.W rex.X rex.WRX pushfq push (bad) repnz negq movabs es add sub push xor pop data16 xchg in pop jnp push (bad) mov pop (bad) jbe fsubs sub lahf insl xor sub (bad) sub rex.RX (bad) mov (bad) and or jl rex.W rex.B es (bad) mull mov leaveq sbb cmp sub sub cmp fldpi sahf (bad) and repz ror (bad) outsb int retq rex.W fisttp sub (bad) rex.RX rex.W sub rex.RX rex.W rex.RX (bad) sub rex.RX lret shll rorb push jnp (bad) iret ss rex.WRXB sbb xor xor cmp or (bad) pop leaveq rex.RXB rex.W sub rex.RX rex.W stos rorb rex.W rex.W and (bad) adc sub rolb mov xor (bad) mov sub es pushq sub rex.WXB stos rex.WX movslq (bad) xchg (bad) (bad) (bad) rex.RX rex.W sub rolb mov rcrq es rex.WRX rex.RXB imul jnp xor rex.B rex.W scas sub rex.RX rolb sub push in imul and mov pop and pop (bad) sbb loop fldenv pop es jrcxz es rex.W sub rex.W sub es rex.RXB rex.WR cmp adc rex rex.X (bad) xor retq rex.W ss xlat (bad) (bad) sub iret and push sbb rcll rex.RX (bad) rex.W es rex.RB loope (bad) and cmp (bad) xchg rex.RXB cs push (bad) jle pushfq xor pop (bad) (bad) mov pop (bad) xchg es and xchg rex.RX rex.W push xlat (bad) movabs sub rolb cld in rex.WX sub push pop mov pop (bad) (bad) movsl ficom (bad) (bad) faddl pop nop (bad) (bad) and cs add rex.W xchg fadds pushfq out sub cld rex.WRB xor in int3 stos xor (bad) fisubl rex.WRB fs rex.W rex.XB cqto and retq push es (bad) cs shlb rex.WRB jmpq push and xchg add cmp add pop (bad) mov rex.WXB rex.W sub rolb jnp rex.W movabs sub es pop movabs loope push rolb iret sub es pop pop movabs pushfq iret cmp retq sub leaveq push (bad) lods outsb sub xor rex.RXB lods xlat (bad) pop nop (bad) cmpsl loopne pushfq shlb rex.RXB mov leaveq (bad) and rolb (bad) jnp sub mov movabs rex.WX cmp or rex.XB sub rex.W mov subl rex.W add rex.WRX es rex xor (bad) rex.WRB (bad) rex.XB rex.W pop and xlat pop (bad) rex.X rex.B es retq decl pop leaveq and fwait mov fdivs (bad) jp or jg rex.W rex.WRXB pop rex.W movabs pop pop cmp (bad) sub (bad) push rex.W sub rex.RX adc lea sbb rex cmp lods (bad) retq fidivl rex.WRB (bad) or rex.R rorb decb rex.W rex.W shrl (bad) es rex.RXB ds (bad) rex.WXB in (bad) (bad) xor and (bad) in and xor pop sahf fcompl repz out xor rex.WRXB pop adc es (bad) and rex.W (bad) sbb rex.R push repnz (bad) jp rex popq (bad) push mov rex.RXB (bad) (bad) sub sub pushfq neg rex.RX (bad) pop cmp and rex.RXB mov sub rex.RX rex.WRB push xchg rex.WRXB rex.RB cmp test rex.W sahf rex.WRX rex.RX sub push (bad) lods fisttpl roll fcomip xor (bad) xchg fimull push and in (bad) (bad) iret es or (bad) sti sub sub rex.W stc push cmp ds rcrb fmuls mov sub rex.W mov rex.W rex.RX sub push es cmpl xor rex.XB repnz (bad) cmp sbb rex.W fdivs int3 es mov push js adc sbb pop pop rex.W ss adc cmp rex.RB (bad) sbb movslq push push loop test notl xchg int3 or (bad) movaps rex.W and and out mov and cmpsb (bad) (bad) push mov cmc rex.WR rex.RX rex.WRB jle (bad) (bad) pushfq pop (bad) in rex.W fsubl sub movabs push rex.W ss pop adc sub cmp sub pop (bad) rol retq out mov fild cmpq shlb jo fldt adc ja pop adc jbe push rex.RB rex.W sub rex.RX ss es (bad) sub or (bad) cld mov rex.R jns xchg push xlat push jne movabs (bad) push sbb adcl xchg sub and (bad) hlt pushfq (bad) es (bad) imul rex.W rex.RB mov (bad) xchg (bad) es (bad) int sub insl and xchg (bad) and mov sub rex.WXB fnsave mov (bad) sub popfq fcoml adc mov (bad) push add mov rex.X cmp sub xchg imulb frstor enterq sub rex.RX rex.W pop pop rex.RX mulq movabs rex.RX sub or (bad) sub (bad) pop roll cmpsb mov (bad) sub mov rex.WXB pushq rex.RXB jno rex.W insb (bad) rex.RXB (bad) push (bad) and loope ficompl repz cmpsb (bad) rcll (bad) (bad) (bad) xor sub mov sbb movabs jge cmp rolb stc (bad) (bad) cs and lea rex scas rex.WRXB ds (bad) es (bad) cmovs push cs lret fistpl (bad) adc sbb push sub push es rolb pop xchg rex.RB rex.XB rex (bad) push (bad) sarl pop add int3 outsl (bad) xchg (bad) rex.RX (bad) cs fiaddl sub cmp sub fisttp sub (bad) rex.RX rex.W (bad) movl orb mov es (bad) scas or (bad) add mov retq enterq rex.R ss rex.WRX enterq (bad) movabs rex.X rex.W iret rex.RX rex.WXB retq rex.X rex.B sbb iret (bad) mov rex.RX push rex.W cmpsb stos iret pop rex.RX rex.W retq lea decb add rex.WRX es add or rex.W mov rex.WXB imul rolb rex.W sub (bad) rex.RX rex.W sub add rex.WRB mov rex.WXB rex.W iret rex.RX rex.W ss push xchg xlat rex.XB rex.XB (bad) mov jl (bad) (bad) xor push mov sub rex.W sub pop rex.W (bad) push clc fildl (bad) rex.X rex.RXB stos cmp (bad) sub add rol rex.W scas sub out cli add (bad) pop (bad) xchg (bad) cs hlt rex.WX xor xchg sub push (bad) in add out sub push rex.B add rex.XB mov neg rex.R ficom and rex.WX or es rcrb (bad) xor and outsl (bad) clc cmp dec push loope xlat lods rex.W (bad) xor sub (bad) and add fwait rex.XB outsl cmpsl xchg loop rex.RXB (bad) rex.RX xchg es (bad) lock orb loop (bad) rex.RX rex.B leaveq test gs rex.RXB rex.W rex.WRXB rex.WRXB rex.W sub rcrb out sub xchg push push (bad) addl fs (bad) cmp (bad) sub rorb sub es pop rex.W rex.R push rex.WX rex.B rex.W sub adc (bad) sub rex.RX rex.W and es xor sub (bad) rorb add pop rex.RX rex.W scas rex.W rex rex.RX sbb sub fisttp sub rex.W sub add sbb push push nop (bad) repz push es rex.XB and lret push (bad) pushfq push sub rex.RX and rex.RX out retq rex.RX sub (bad) rex.RX rex.W icebp loop rex.X rex.XB (bad) mov es (bad) (bad) icebp (bad) pop mov (bad) xchg (bad) or push repnz in retq rex rex.W fldl test fbstp es gs (bad) or push (bad) andl sub pop rex.W rex.W test sub pop pushfq (bad) rex.W rex.WR es push (bad) pop rex and rex.W and (bad) jl (bad) adc (bad) cmp scas rex.W rex.WRX out sbb rorb outsb retq rex.W out (bad) rex.RX ss es (bad) (bad) mov rex.WRB and pop rex.RX rex.W mov rex.RX rex.W sub es cmp (bad) rex.XB rex.R rex.W lahf mov rex.RX test leaveq push push (bad) cmp rex.W out (bad) (bad) (bad) pop ds and (bad) fs push repnz pop (bad) lock rex.W fisttp (bad) mov ds cmp (bad) rex.R (bad) popfq sahf rex.W pop jne push (bad) lretq (bad) movsl and xlat rex.RB rex.WRB (bad) push pushfq cmp sub mov rex.W fisttp sub es pop movabs pop negb rex.RXB rex.RB fisttp sub (bad) rex.RX rex.W push sbb mov fwait push es rex.W leaveq rex.RXB xchg mov (bad) cmpsb pushfq (bad) scas push jne sahf jrcxz es (bad) cmc je adc rex.W jl rex.W rex.WXB (bad) sub rex.RX sub (bad) pop rolb rex.X mov pushq outsl (bad) push mov push rex.W loopne pop xlat pop (bad) jns sub pop (bad) (bad) rex.RB (bad) push rex.RB rex.W shrb rex.RX or push rex.WR (bad) mov rex.W insl and (bad) ss (bad) (bad) rex.XB retq rex.RX xchg mov xlat push (bad) cld fidivr push rex.WRX rex.WRX or retq cli cmp movlps rex.W (bad) addr32 fcmovnbe shlb pushq (bad) movabs (bad) in (bad) shll xchg sub and push outsl sbb test shrb loop (bad) cltd and leaveq rex.WXB xor rex.RX rex jp movl pop mov jg (bad) (bad) rcl (bad) scas sub ss mov xor sbb and roll rex.R rex (bad) (bad) retq mov (bad) rex.WRXB nop pop enterq ss cs (bad) add (bad) (bad) repnz (bad) movsb clc rex.RB shlb iret sub es pop and (bad) mov xchg mov xlat fbld jp rex (bad) add rex.W pop cmp (bad) rex.XB shlb jnp loop push and (bad) movabs (bad) push mov (bad) xlat (bad) faddp rex.W mov push and mov add fsts (bad) test rex.W or cmp (bad) (bad) (bad) push fisub pop (bad) movsb (bad) movabs rex.RB fldenv jbe testb push (bad) fldcw (bad) add (bad) shlb xor shlb and rex.WX fbld rex.WX rex.B iret and (bad) mov pop (bad) imul (bad) and (bad) xchg mov (bad) or (bad) or fmul es xchg push pop fsubrl rex.WXB (bad) mov push xor xchg sub xor rex.WX (bad) mull retq adc rex.WB rex.W and cmpsb (bad) sbb (bad) imul pop mov pop (bad) imul cmp adc frstor (bad) (bad) repnz jl (bad) push xor fisubrl rcll roll imul repnz (bad) xorl xchg mov movb outsl (bad) pop (bad) fmull rex.W xchg int pushq (bad) rex.WR rex.RB cmp rex.W push (bad) (bad) (bad) rex.RX (bad) insl adc orb cli rcll cmp loop or fldl mov pop (bad) test mov pop (bad) rcll gs int3 shlb test jno sub push (bad) (bad) cli (bad) push fidivl je iret (bad) push (bad) sub int3 (bad) notb (bad) (bad) mov in shlb fbstp sbb xor cmp (bad) rex.W push ss scas or rex.RX rex.WXB (bad) push mov rex.WRXB rex.XB orq pushfq rex.RXB fldcw pushfq (bad) and test fcmovbe rex.RX and es xchg mov xor (bad) and adc es (bad) int adc fstps callq push (bad) xlat fisubl mov pop pop xlat (bad) xlat outsl rex.W (bad) rex rex.W sqrtps (bad) pop repnz (bad) (bad) pushq cld rorb shrb rclb rex.WRX es movabs (bad) lret adc push (bad) sbb int pushfq fisubl (bad) or andl fisub cmc xchg mov (bad) (bad) or mov cmp callq jne (bad) (bad) push sbb pop or rex.W gs rex.RX rex.RX (bad) out icebp pop adc movabs (bad) pop iret (bad) jno rclb push pop (bad) pushq iret and (bad) pushq outsl (bad) xor sarb push imul (bad) lock (bad) sub loop rex iret retq rex.RX rex.W out es (bad) (bad) (bad) rex.W and (bad) push rex rex.W rex.B push (bad) (bad) iret sub rex.WRB push (bad) add iret sub rex.RXB (bad) push (bad) (bad) lahf pushfq rex.WXB and (bad) rex.W xlat mov je sub push (bad) faddl fs rex.W and jge jns pop (bad) (bad) (bad) (bad) cld leaveq (bad) retq (bad) lods scas push sub (bad) sahf iret es leaveq (bad) or loop fisub lret rex.WR xor rex.RX rex.W rex.RB cmpsb roll xchg (bad) pop rex.W rex.R rorw shll sub mov (bad) rex.RX (bad) cli es rex.W and outsl (bad) jo push xlat push (bad) flds (bad) pop ss popfq or rex.XB sbb (bad) vxorps rex.B rex.W rex.X (bad) addr32 (bad) rcl (bad) (bad) iret sub and pop hlt sbb and ss sub mov fcomps retq (bad) (bad) or es int3 (bad) mov es retq sub push (bad) rex.W (bad) fidivl movabs pop (bad) rex.RX cmpq rex.X rex.W rex.XB push and push (bad) (bad) addb sub fldl (bad) cmp rex.WR andl (bad) (bad) mov (bad) rex.W rex.W push rex.RXB gs jmp retq (bad) cld pop (bad) jp iret sub (bad) jo and (bad) jne sbb rolb (bad) rcrl (bad) (bad) rex orq retq fcmovnb push rex.W rex.RB rex.W (bad) movl rex.RXB rex.RX cmp xor (bad) lret (bad) rex.RX (bad) push test test pop pop push rex.RX xlat ds or (bad) fmull scas ffree int3 and (bad) jb mov cld push (bad) (bad) popfq int3 or pop (bad) xchg movabs xor ss lock rcrb pop xlat sbb fcmovnb cld pop (bad) mov loop rex.RX (bad) rex.WRX adc mov (bad) pushfq movl (bad) push (bad) rex.WX adc rex.RXB repnz out lahf pop cld (bad) (bad) rcrb (bad) in mov (bad) stos ss es (bad) rcrl pop shlb push sti xchg push rex.RX rex.W sub push xlat rex.RX jg rex push shlb icebp mov shll out (bad) rex.RX jne test cmp rex.R (bad) test xlat rex.RB loop rex rex.RX jnp jns pop (bad) (bad) (bad) lods in (bad) andl push (bad) mov (bad) rex.WX cmp (bad) (bad) (bad) rex.RX fisub mov je (bad) fstl cmp fdivl js pop es (bad) mov rol cli add (bad) shl (bad) mov mov sbb (bad) fcmovb rex rex.W sbb push fnstenv jo rex.W rex.WRX and sub pop retq andl (bad) mov rex.RX cmp (bad) enterq xchg (bad) int3 adc (bad) (bad) add (bad) rex.WRB imul (bad) sub (bad) add (bad) lods cmp ss es mulb es (bad) rex.WRXB rex.XB rex.W rex.W fildl fldenv ss (bad) fwait ss pop (bad) pushq (bad) rex.RXB rex.WX (bad) movl rex.WRXB jg push (bad) andl leaveq (bad) (bad) rex.RX sub (bad) ror jne mov (bad) (bad) ja (bad) xor (bad) (bad) mov rcl (bad) rcrb fsubp pop (bad) push lods rex.WRX rex.WRB (bad) leaveq (bad) sbb mov sub jnp xchg pop mov fnstsw leaveq rex.WRB (bad) (bad) pop rex.RX (bad) mov rex sbb mov not xor stc iret sub es pop xlat xchg rex.XB (bad) rex.WX rex.RB add (bad) fsubrl pushfq pop cmp rex.RX pop (bad) rex.RB mov (bad) je (bad) push add rex.WRXB mov movl fcomps rex.W pop pop rex.RX rex.W ss sub es cmpsb (bad) (bad) leaveq xlat pop (bad) in scas sub (bad) rex.W mov add (bad) (bad) es add rex.W (bad) rex.W rex.WR rex.RX sub rex.WRX sbb sub (bad) xor add rex.RB rex.X pop jbe rex.W rex.RX cmc add (bad) es add fistp (bad) (bad) (bad) rex.RB mov rex.W xlat rex.RX rex.W movabs pop rcrb cmc (bad) scas sub out int sub rex.WRB lret rex add (bad) shrb enterq mov rex.WRX es (bad) fnstenv and mov or jne loope fisubl rex.B mov (bad) (bad) xor xchg shr rex.W xchg sub rex.W sub push (bad) test es pop adc sub rex.RX (bad) sub rex.RX sub (bad) rex.RB (bad) (bad) hlt xchg enterq sub rex.W ss adc (bad) push repnz (bad) jne (bad) (bad) jl (bad) (bad) adc rex.RXB pushq (bad) cmp je cs (bad) ja retq iret mov loop sub rex.RX rex.W and sbb rex.WXB rex.W movabs rex rex.RB push sub adc (bad) mov and loop mov rex.W rex.RX sub pop (bad) lock outsl sub rex.W mov (bad) rolb scas sub rex.RX test sub es add fild and adc es cld js (bad) scas lods movabs pushq rex.XB scas sub (bad) in retq rex sub (bad) rex.RX rex.W sub rolb scas sub rex.RX rex.W jb int3 es pop (bad) mov loop push es andl rex.RXB jo icebp and out (bad) (bad) adc ds cmp mov push cmpsb (bad) sub rex.W rex.RXB rex.W out movb push es mov (bad) and rex.RX push rex.WR pushfq fsubrs rex.B rex.XB (bad) sub rex.W addr32 and rex.RXB out mov (bad) callq sub rex.RX leaveq push rex.B rex.W adc pop (bad) retq rex.RX rex.W push rex.RX rex.W ss rex.WRB pop push (bad) push (bad) fnstenv (bad) jrcxz (bad) push outsl rex.RXB rex.W sub pop ror sub cmp (bad) enterq xchg cld push pop movabs scas sub out imul (bad) jbe jmpq push loop xor push rolb mov rex.W retq rex.RX jbe push rex.RB rex.W subl rolb enterq rex.W pop int rex.W (bad) movslq push rex.B rex.W jle push rex.RB movabs (bad) rex.RXB (bad) pop psllq (bad) push (bad) stos lods cld (bad) rex.WXB es sub rex.WRXB sub rex.RX rex.W sub rex.WRB rex.RB (bad) movabs rex.W rex.W es fdivl es (bad) mov sub rex.XB rex.W (bad) (bad) (bad) rex.RX rex.W sub sub rex.W test sub int3 es rex pop (bad) rex.RB rex.W jmp pop rolb lretq (bad) es adc cs lods fcmovne iret (bad) add push (bad) rex rex.W sub rolb iret sub es cmp (bad) int rex.W movabs es (bad) mov (bad) cmova jge rex rex.R rex.RB rex.W sti sub pop jo fisttp sbb lods or fmulp rex.RXB rex.W iret sub es jnp (bad) fadds sub out out add pop es sub push rex.W lret iretq rolb scas sub rex.RX (bad) retq rex.RX sub push es (bad) testl scas sub rex.XB mov (bad) fdivrs (bad) stos or out (bad) push mov cmp sub (bad) cmpsb imul iret rex.RB mov (bad) and (bad) rex.WXB push out rex.W rex.W es pop adc sub rclb sub or (bad) sti pop int3 rex.RXB rex.W sub es xor mov jae push rex.B rex.W sub rex.WRXB rex.W fildll rex.W mov rolb scas sub rex.RX adc sub es add loop adc sub movabs mov rex.XB (bad) mov rex.WR rex.RX rex.W callq push es (bad) icebp rol rex.RXB rex.W test pop rex.W es cmc out sub push and add rex ficoml (bad) xchg (bad) ss push ss xchg sub adc sub movabs test sub rex.W (bad) rex.W rolb scas sub lretq js movabs push rex.W pushq rex.W rex.W rex.W rex.W push rex.RX rex.W ss rex.XB rex.RXB rex.WX in or rex.RXB rex (bad) lock add out rex.RX clc xchg and push (bad) (bad) cwtl cmpsb (bad) rex.WRX roll retq es jo shlb pop callq rex.W rex.XB mov stc push pop mov (bad) push add es out sub iret (bad) mov loop (bad) xor sub shlb stos movabs add (bad) pushfq movl push movslq push rex.RB sbbq loop (bad) mov in push gs lock sbb xor rex.RX (bad) xor (bad) ss mov fistp mov es jmpq leaveq (bad) xchg (bad) and rex.RXB (bad) and rex.W rex.WRXB es (bad) (bad) shrb addr32 rex.W mov pop xlat (bad) push rorl rex.RX rex.W es rex.W ss (bad) xor xor sarb (bad) loopne,pn and shlb (bad) stc iret sub and shlb mov (bad) (bad) mov xlat shlb sub pop outsl (bad) xor ficomp rex.WRXB rex.W es rex.W ss (bad) hlt mov xor sbb and sbb pop xchg (bad) (bad) clc (bad) shrb push and nop (bad) in decl int int3 (bad) test jg rolb movabs (bad) rorb cs push (bad) test rolb test in and sub rex.XB mov sbb ror shlb (bad) jle fldl sbb rex.WRX sub pop (bad) (bad) loop (bad) rex.W and (bad) rex.WRXB lahf sub jge push iret and leaveq mov rex.W ss rex.WR es sbb negb add rex.WX retq adc (bad) gs push sbb vorpd jno out shlb and jg (bad) fild pop (bad) int3 ss rex.WXB mov movabs (bad) pop rex.WRXB rex.W (bad) push rex.W rol rex.B rex.W cmp mov js (bad) or (bad) (bad) test and movl rex.W push (bad) rex.WRXB rex.W (bad) (bad) push in (bad) rex.WRB push rex.W pop movl rex.W (bad) pop cmp movsl or (bad) (bad) test push and (bad) cmp (bad) sub add fstps rcrb xchg (bad) cmp mov sbb not shrb cmpl push sub jnp pop pushfq pop (bad) sbb lahf rex.R rcl (bad) out (bad) rex.RB rex.RB mov (bad) (bad) rex.RX rex.RB rex.RB cld (bad) sub sub push (bad) push push ja gs pop loop (bad) add xlat rex.RX mov pop xor pushfq (bad) lea fwait shll (bad) movsl in rex.XB es (bad) adc movabs jne leaveq and (bad) mov sub (bad) rex.RX retq cmp rex.WRB sub and (bad) xor fldenv icebp push and rol pop in (bad) pop in (bad) rex.WRXB pop pop mov (bad) (bad) cld push rex.RX rex.RXB lretq (bad) and hlt mov shl xlat (bad) rex.XB (bad) cmp (bad) cli and es (bad) insl ffreep rex.XB push sahf sub push rex.B ss sub push rex.RXB rex.RXB add movl push (bad) sub pop addb xchg mov rex.W mov fisttp sub (bad) rex.RX cqto mov rex.W sub fidivl es jne clc sbbl (bad) (bad) repnz add rex.RB rex.W movabs out mov fisttp sub (bad) rex.RX rex.W sub add xchg jg mov (bad) pushq (bad) rex sub push rex.WB jmpq movabs imul mov add es stos lahf iret outsb pop subb jle jo mov mov retq std pushq (bad) (bad) (bad) std sti ud2 xlat or mov xchg je sbb sarl add cmp add test repnz (bad) (bad) std mov add add sbb (bad) fsubs and imul out repnz pop ds movslq (bad) rex.WRXB out push clc (bad) cltd (bad) (bad) pop rex.X insl rex.XB in mov adc in (bad) push adc callq movzbw bts or add cmp shld rcl test mov test cmpb jmpq or popq mov fldlg2 shll out jb test rex.RB pop pop xchg adc rex.X movslq loopne ja cld es cmp mov push xor pop out sub pop xchg rex.WB scas (bad) in push cmp mov xchg movsl mov std ror (bad) or (bad) fmull addr32 mov push lods imul frstor jmpq cs (bad) (bad) (bad) sti icebp repz incb movabs jp pushq mov incl push pop (bad) gs (bad) clc (bad) fidivrl out imull pushq rcll xchg mov mov fmuls (bad) or cmpsb fdivs packuswb lock add int adc jp movslq sar sbb mov jbe xor sbb rex.WX movl add rex.RXB outsl push rex.WXB xlat mov in sarl (bad) and fimull fsubrs push sbbl xchg test loop rex.XB (bad) push sbb stos cmp (bad) sbbb jb (bad) or push cltd cmp xchg cmc xchg mov (bad) or xchg jbe pop (bad) adc (bad) (bad) (bad) cld sbb (bad) (bad) (bad) sub mov pop rex.B cmp xchg mov (bad) lret (bad) lahf (bad) push mov (bad) (bad) ljmp cmp lret sbb xor pop iret scas sbb mov test mov push adc data16 test lods jg loopne callq (bad) insl popfq mov add push pop outsl push sub cmp (bad) rex.WR pushq mov fimull xlat mov stc rex.WRB fnstcw lahf rex.W jle fcmovu fcomps loop rex.X (bad) rex.WRXB fldenv jmpq orb sbb cld cld cmc movsb (bad) lahf roll cmp repnz xor (bad) fnsave (bad) test mov xor xchg rex.WRX (bad) (bad) cld sbb rex.XB icebp (bad) (bad) (bad) (bad) sub cmpsl lahf xchg sbb (bad) repz sub add (bad) (bad) (bad) ljmp mov fnclex jae lock sbb movq push jo icebp pushfq in push retq jmp jno adc in stc pop (bad) mov or popfq cmp rex.B cmpsl mov (bad) out fs (bad) add outsb std fwait jne jmpq jb retq mov test (bad) add mov lock pop xor or pushfq rex.WRX data16 movabs jns movabs sub push sbb pushq rex.RX or orl retq movslq pop cmp mul stos or in push movabs pop leaveq pushq xchg shrl rorb adc scas xchg jmp iret shlb jns mov (bad) insl mov loope sub (bad) (bad) (bad) sti out (bad) mov (bad) (bad) (bad) decb xlat (bad) pushq add add jp iret nop jmp movabs hlt sahf mov and rex.W cltd cli xlat mov cmp (bad) and mov cli imul sbb pop sub and je bsf mov push clc mov inc dec sub not jmpq out outsb mov push cmp movntps add stos lock lret cmp push mov out sub push adc mov mov outsb jg insb pop sbb movabs cwtl jp es mov jmpq mov (bad) (bad) (bad) hlt xchg cli movabs test (bad) faddl gs pop sti lock and mov repz push (bad) (bad) (bad) (bad) incb rex.RX mov or rex.X loop rex.XB rex.RXB (bad) (bad) incl sahf iret outsb add xchg jg movabs add pushfq (bad) mov nop in stos cld push rex.WB movslq pop int3 xchg std leaveq pop push ss cmp cld mov sub adc pop rex.WRX add callq lea mov xchg mov not movzbw xchg jmpq sbb movabs or movabs rex.RX xor mul test out imull lret sub neg mov jg outsl lret or push pop cmp clc sarl cmp add je movabs sub push mov leaveq and pop imul cld hlt rex.X (bad) incl rex xchg lea or cmpsl xlat sbb retq or (bad) sbb jns pushq cmpsl stos cmp xchg adc int push xor add add or rex.RXB fdivl insb lock callq fnop mov loop outsl int3 popfq scas mov mov movabs rex.RB imul jmpq sbb shr (bad) (bad) decl addr32 or nop loop jbe and cs or cmpsl movabs insl mov jb push jmpq popfq fnstcw stc pushfq out ss mov cld mov (bad) movabs cmpsl (bad) pushq rex.WX rolb loopne (bad) xor mov mov rex.WB mov lods sbb mov int or xor sbb mulb test xchg jne retq xchg (bad) (bad) (bad) cld fldcw in (bad) (bad) (bad) (bad) in imul fs jns (bad) lock enterq cmp pushq rex.RX iret and add sti jbe std mov rex.RX push rex.WXB or jle pop push add jno rex.X rex.WR mov cs xchg (bad) (bad) jno fcmovnb stos jmpq mov push (bad) push test jno and movabs mov pop (bad) (bad) xchg (bad) retq repnz (bad) mov loope cmp xor iret (bad) pop movabs movsl rolb push (bad) sahf loop (bad) movabs (bad) fadd push and jp xor jbe xchg add out and (bad) (bad) sti out cld pushfq int3 in (bad) (bad) incb sti jae jmpq sbb add cmpsb imul (bad) (bad) (bad) incl rex.X js nop and add cmpsb cld pop cld (bad) (bad) shrl jmp notl sbb or (bad) lahf outsb retq push loopne mov pushq mov or movsb lret test or add (bad) (bad) jmpq pushq jmpq in xchg mov fs (bad) pop test fsubrs jae btc lcall (bad) and pop sbb and jl jmp xor (bad) sarl adc or int3 mov jg rex.WX sub test cmp sub rex.WRB rex.XB leaveq mov fmull (bad) jo mov outsb (bad) or stos (bad) (bad) mov (bad) (bad) decb (bad) (bad) (bad) decl (bad) loopne mov es mov outsl stc xchg push clc xchg mov sub imul nop (bad) mov xchg adc pushfq mov (bad) loopne rex.X jge rex.RB rex.WRX mov es mov lret lods xchg rex.WRXB cmc (bad) scas (bad) (bad) icebp mov or (bad) icebp sahf jmpq je mov push bsr stc ror btr mov stc sub movzbw mov lea jmpq je stc jno add jmpq adc jmpq jmpq mov and movsl (bad) push movabs cmp iret lock movabs sti pop test iret mov imul adc (bad) cmp lods int insl mov adc adc scas jns sbb hlt xchg rex.B rex.XB jo jns jno out insb (bad) (bad) (bad) (bad) out movsl movslq movabs (bad) (bad) (bad) jae mov pop cmp rex.WRX push cmp orl xchg ds mov repnz mov pop sbb sub xor mov or cmp decl inc clc sar sub clc add sar not mov clc ror mov mov stc repnz jmpq jae jmpq popfq cmpsb rex.WX cmp jrcxz nop or cmp mov cwtl cli xchg rex.WB fadds ror test (bad) (bad) mov adc add xchg popfq shrb jmpq cmp movabs test xor (bad) test xchg loopne ficomp push stos adc (bad) insb incb rex mov xchg jp (bad) (bad) cli ficoml add in push rex.RXB imull callq jle fstps movabs mov sub and push cmp fcomps mov xchg mov repnz (bad) (bad) (bad) fistl movsb xchg (bad) add rcr add sbb adc adc xchg (bad) and repz (bad) popfq adcb (bad) rex.WRXB fs mov nop stos adc sbbl (bad) mov rex.RB lock fldcw rex.W sbb lea (bad) mov mov not adc rex.RX mulb test cmp xlat outsl rex.X add or int testl jb jae push mov jno rex.X es rex.WRX lretw mov movabs and sbb fsubs insl add mov test lret pushq (bad) rex.WRXB or jmpq sbb movabs xchg pop out push (bad) repnz fnstenv (bad) outsl (bad) loopne push mov or xor cs insb add pushq rex.RXB test jle (bad) rex.WRB cli push push adc (bad) imul (bad) sarl imul jo cmp addr32 (bad) imul out (bad) test or cld loope add rex.WRB fidivr rolb imul cmp jg jmpq fnsave sarb (bad) (bad) (bad) sti out jmp add (bad) (bad) std stc jno (bad) add jl mov (bad) mov rex.WB rex.WRB push (bad) jae xor push rex.XB neg jg movsl adc js fstpl movabs cmc pop scas add xor cli jmpq rex.WRX (bad) (bad) (bad) callq push cwtl int3 stos fs rex.WX and rex.X int3 pop or (bad) mov mov rcll adc out rex.RX (bad) insb mov cli pop xor or jmpq fsubrl jmpq outsb movslq (bad) jno rex.WX (bad) or mov loopne adc leaveq stos sbb cmp pop pop xorb cmp pop out mov mov adc loope (bad) jg movabs rex.WXB adc clc fidivl mov cmp pushfq cmp stc lods mov rex.X rex.WB (bad) (bad) cld xor (bad) (bad) (bad) incb push sar imul cmp xor and (bad) (bad) or imul (bad) movabs or lods xchg sbb (bad) ja xchg (bad) out pushq (bad) movabs rex.WX iret (bad) (bad) (bad) xor cmp cmp mov rex.WXB (bad) (bad) sub sbb (bad) jmpq test (bad) mov movsbw neg dec sub rol mov clc cmp sub cmp cmc bt test pushq cmp test bt cmp jmpq jmpq retq sbb (bad) push rclb pop or mov or fwait (bad) xor fiaddl pop cwtl movsb sub xchg pushfq ds mov rex.WX loopne js cmp xchg clc ss add (bad) insb outsb popfq lods (bad) lods xchg stos hlt (bad) (bad) mov jle movabs cmp test (bad) decl push sbb and or push pop cld movsb scas (bad) push lods and and out xchg and push mov rex.XB pushfq int3 lock shrb add pop test mov xchg rex.W sarb shll adc rex.WX mov int fwait mov movsb push cmp addr32 callq add cmp mov adc mov clc pushq jb rex jnp (bad) sahf or out movslq lret pop mov fimul rex.WR push stos mov xor adcl add jo mov fstpl decb testb (bad) (bad) cs in movsl (bad) fnstsw (bad) clc flds (bad) in or jb xchg nop push push movsb hlt mul in rcrl push std mov add popfq movslq sbb (bad) cld jne lcall decb and rex.WR add add or rex.WXB lods add std or pop rex.R add fwait add and outsb jmpq sub scas mov iret (bad) sbb dec movsb negl sub rolb pop or (bad) int3 stos (bad) test enterq outsl pop sbb and pushq jge (bad) imul cmp adc sub loope mov std loope mov loop push adc je jns mov sub outsb int3 jne hlt sub mov loope and mov ds rex.WR movabs insb jg rex.XB mov cli push mov xor push icebp add movabs mov int jbe (bad) (bad) cld (bad) xor push (bad) (bad) (bad) (bad) (bad) sbb add xor rex.WRX rex.WRB out sbb test (bad) cmp lahf stos (bad) jo (bad) int (bad) cs cmp mov notl mov fwait lea push (bad) adc cld xchg cmc (bad) pop rex.WRXB adc mov fisttpll test jp (bad) mulb mov adc mov fucomp add mov out cmc stos cmp (bad) enterq (bad) repz sbb or or jb lods scas (bad) (bad) mov mov rex.WR mov mov cmp pop rex.WR jg ds or sarl retq out rex.WX retq fcoml (bad) mov (bad) test mov (bad) mov mov (bad) in jae jbe (bad) (bad) subb mov (bad) cld or (bad) (bad) (bad) sbb adc push (bad) sbb push (bad) lea (bad) (bad) lcall fistl rex.XB std or (bad) ror adc mov popfq lcall jne jge lock mov sub rex.WXB adc rex.WXB add push sbb mov adc cmc and add rex.XB (bad) je rex.RB jbe jb outsb insl outsb je insb outsl movslq jmpq add jmpq jb rex.X out jle int3 pushq add cwtl mov loope scas pop jnp lret subl out jnp adc cmp movabs cmp mov fucomi push xor mov sub imul sti cmc jbe xor test in xchg (bad) in or sub (bad) jle adc rex.XB sti mov (bad) (bad) (bad) std iret (bad) xor sbb pop lock callq fwait mov adc (bad) rex.WRB movabs rex.WB or in repz movabs sub push (bad) rex.WRXB (bad) jge pop repz pop callq outsb pushq sub sub pop imul xchg xchg (bad) scas int test rex.WRB rex.WRX imul sar decl xchg (bad) push fisttp movsbl adc add bsr mov setg add jmpq movabs xrelease leaveq (bad) xor movsb movsl lret andl (bad) lret xchg sbb icebp icebp xor cmpsb and mov pushq jg movslq xlat sarl sbb xor notl jne jae or add (bad) (bad) sti xchg xor ja (bad) (bad) (bad) std movsb mov (bad) (bad) insl rorl xor andb add xor sbb rex.RB adc rex.X callq mov mov xor (bad) jg or test rex.W jno andl (bad) (bad) (bad) fdiv (bad) (bad) out (bad) mov and add (bad) push repnz xor mov fcmovb push adc fnsave jl (bad) (bad) xor addr32 pushq (bad) adc cmp std std test or stos mov rex.XB insl sub pushfq mov (bad) stc ss jno fmull jnp in mov or pop pop roll fsubrs adc test lea addl out jae xchg (bad) xchg or mov jmp adc rex mov sub mov (bad) je (bad) fistpll clc clc (bad) retq jle jne test (bad) jp fstps push out retq (bad) iret jp mov sbb je mov mull fsubrl test xor jge hlt lods cmpsb push loopne,pt (bad) push clc rex.RX rex.WRB lea or pop xor cmp (bad) (bad) cld std pop shlb (bad) (bad) callq js insb fwait xchg push cmp lahf (bad) rex.R iretw mov test (bad) (bad) jmpq adc fdiv fwait lret xorl (bad) mov add add pop (bad) mov in mov sbb xchg sub (bad) (bad) clc pushq or lret (bad) sbb cli shrl fisttp ja jge jbe jno jge or push out jmpq jmpq popfq movabs mov mov and (bad) mov jns (bad) shl or ss stos (bad) imul push rex.WR rex.B cmpsl mov mov cmc mov cmp or lods rex.X jrcxz addr32 std add icebp repnz xchg sub push (bad) nop rex.WB movabs mov mov sbb pop in std and (bad) mov (bad) xor mov (bad) rex.X (bad) int rex.RX rex.WB lea fidivl sbb int3 rex.WB cmc jnp cmp sub js pop cmp pop data16 mov xor jnp or rex cmc rex.WRB rex.WRXB sbb and ja sub in jmpq rex.WX or out icebp loop sub push mov cmp mov sub fsubs xchg repz cltd push callq (bad) xchg pop imul sar insl mov pop sub and cli outsb mov add pop (bad) rex.WRX or scas rex.WB and xor shll pop rex.WB rex.RB movsb (bad) mov or test pushq rex xchg fisub push push mov jmp rolb (bad) sub movabs rex.WB or rex.WRX (bad) fisubr es data16 fdivl add (bad) jp movabs cmp lock outsb rex.WB scas stc in jnp rex.WB sub rex.WB sbb (bad) and jo rex.WB push and push mov xor (bad) repnz mov (bad) xchg rex.WRXB imul callq gs (bad) sub callq and xchg push lahf add sarq xchg rex.WB mov (bad) sub pop mov (bad) sar rorl mov sub sub xchg (bad) (bad) xor sbb xchg rex.WB fwait rex.WR fcompl mov (bad) out (bad) and test shrl rex.WB rex.W sbb sbb pop adc iret sti cltq mov (bad) fidiv data16 push fucomi push sbb (bad) mov rex.WB addr32 add callq add (bad) (bad) lahf cmpsl (bad) xchg repz nop mov jnp mov mov imul push sub and (bad) (bad) xchg pop or andl mov (bad) mov hlt fadd push cli rex.WRB sbb sub rex.X rex.WB mov mov jns pop hlt rex.WB retq test jns push xor mov (bad) mov cli lods rex.WB cld (bad) mov scas rex.WB sahf movabs mov mov mov rex.WB es (bad) retq in rex.X xor jb rex.WB add xchg xor or mov movabs rex.WB sbb sbb push adc rex.WB lock (bad) fs jmpq xchg (bad) rex.WB addr32 sub retq cmpsb sub xchg int3 lahf callq sub push outsb test rex.WB icebp movabs addl loopne xchg rex.XB mov data16 fistp (bad) xor mov rorb (bad) test mov (bad) nop xor lods push add stos rex.WB jl (bad) adc vmovapd movabs xchg iret (bad) test pop (bad) mov stc out mov bswap (bad) push xchg pushq test add jb (bad) fcomps pushq out outsl rex.B (bad) rex.XB ds callq (bad) push cmp rex.RX rex.WB pop mov jp es clc hlt (bad) movsl ficomp rex.RB movsb or shlb callq (bad) rorl mov push cmp dec xor rex.WB (bad) in jle (bad) and rex.WX sub sub (bad) push push (bad) loopne push ja rex.WB lods rex.WB mov rex.WB jbe out movabs test rex.XB adc lea (bad) jb cmpsl (bad) ss sbb jno mov mov or mov test jg pop sbb rorb int3 push mov sbb sub retq shrl cwtl mov (bad) pop (bad) (bad) (bad) sbb xchg cmp movabs cli push in xchg cmpsb rex.WB rex sub enterq rex.WB cmpsl xchg and rex.WB movl jrcxz mov out (bad) sbb add loopne leaveq xchg (bad) (bad) iret shll push (bad) cld rex.WX ja int3 rex.B and lret pop xor push xchg cmp retq sub mov addl sbb rex.WB popfq test rex.WB mov sbb (bad) xlat or cli rex.WB rex.WX mov vandps rex.WR (bad) pushfq int3 rex.WXB movabs imul movabs je (bad) popfq ss rex.WB adc sbb sub (bad) mov addr32 push or or jno sub leaveq pop test sbb pushq mov and callq cmp rex.WRXB jae mov pushq push (bad) or fdivrl push icebp pop rex.WB xchg xor testb push cmp jb mov (bad) xchg scas rex.RB rex.XB sti movl mov out mov or jb xchg or mov rex.RX ss pop rex.WB rex.W sarb fistp test sub xor adc (bad) jge negb rex.WRB movsl testl pop ss xchg xchg test sub adc (bad) lahf pushq and add repz (bad) cmp cmpsl callq (bad) loop sahf sbb pop rex.WB rex.WRXB mov xor std sub lret rex.R movabs pop ss in jp pop leaveq cmpsl mov rex.RB lret rex.WB rex.WRXB movb mov sti mov xor sub sub xchg rol rorb (bad) insl xchg mov in rex.WB mov enterq rex.X rex.WB rex.WRB lret and out cmp (bad) xchg es cld push roll out shrl or loop rex.W sbb mov sahf ja pop rex.R cwtl rex.WRX (bad) jp xor cmp push test add mov mov mov rex.WB cwtl rex.RXB imul jbe sub rex.WB fmuls sub rex.WXB cmc retq add or xor jmpq movsl es rex.WR mov mov (bad) rex.WB mov or cmp (bad) lods and sahf leaveq xchg loope movabs rex.RX adc test retq mov rex.WB rex.WRB movslq rex.WXB jle loopne mov sti xchg movsl xchg adcb rex.RXB subl jmpq rex.WB mov rex.WX sahf hlt rex.WB data16 mov rex.B xchg lea loopne mov xchg mov js (bad) jl test and frstor (bad) lods rex.WB lea mov cmp loope loopne sbbb rex.WRX rex.X rorb mov push pop fsts (bad) decb (bad) jno out xor fnsave jp add mov test movslq and retq or icebp pushq shr gs pop jp push mov movabs mov push pop pop lret xlat iret mov sub jb mov lahf (bad) rex.XB outsl push rex.WRB lock callq (bad) out push loope mov jb jne rex.XB ds enterq je cmp adc rex.WRB jge mov or hlt and add pushq jnp fwait push (bad) xor fldl cmc je pop movslq (bad) clc retq or outsb cmp pop (bad) push rex.RX (bad) sbb rex.WXB pop rex.W mov lea rex.XB es pop (bad) (bad) rex.RB pop leaveq (bad) mov add push rex.W xlat (bad) rex.WRB push in (bad) rex.RXB rex.XB push int3 push sbb shrl sar or fcoms pop leaveq fld1 mov insb pop (bad) rex.RX pop sub imul push pop rex.WB bnd shrl push add test rex.X fimul (bad) mov faddl (bad) jnp (bad) jo sahf fwait rex.RB roll (bad) or fwait sti int3 jnp jp rex.RB jrcxz sub rex.RB (bad) push rex.RX (bad) sbb pop (bad) mov rex.RX (bad) mov loope imul loopne clc callq add movabs test pushq (bad) pop (bad) sub fstpt (bad) sub callq rorl test test xor enterq fisttp retq int (bad) mov (bad) cmp int rex.RX (bad) xchg (bad) (bad) int rex.R and mov rex.WRXB (bad) lahf (bad) (bad) sarl mov (bad) (bad) (bad) pop (bad) push (bad) retq rex.W faddl xlat cmpb rex xor pop cmp rex.RXB adc rex.WRX pop incb ds rex and fwait xchg push (bad) (bad) push mov push (bad) (bad) pop fcomps cmp pop (bad) fcompl pop test xor sbb adcb adc and fmull hlt (bad) fistp je push pop cmp incl rex.RXB pop ficompl pop fcompl pop faddl rex.B out mov (bad) rex.XB retq rex.RB cmp sub movslq (bad) cmpsl mov loop sarb ss or fidivrl xchg (bad) cwtl es and mov fsub pop pop rex.RXB fwait mov sbb (bad) mov rex.WR gs xchg and add fistpl pop rex.W rex.RB clc fild fistp rex rex.W rex.B clc rex.XB rex jrcxz cli xchg mov (bad) and mov add (bad) push rex.W rex rex.B rex.RB cmpsl (bad) test cli mov enterq mulb (bad) lea jnp movabs (bad) xchg out popfq (bad) (bad) rcll imul (bad) fmuls sub loopne fisub mov mov mov enterq (bad) ds imul xor push and movabs jae rex.W addb rex.RX addr32 (bad) mov xlat and sub rex.RX ja lret and push fxch addb or test pushq rex.WB cmpsl xchg (bad) (bad) out (bad) cmpsb xchg es in (bad) gs movsb test add rex.WB movabs movabs movabs movabs mov (bad) decb mov (bad) std rex.WB sbb pushfq jl cmp sti or mov sbb jp pop cmp stc fnstcw retq rex.W sub push retq sbb ficoml fidivrl or (bad) push xchg rex rex.X cmpsl out and fcmovu (bad) sub test push data16 (bad) (bad) test mov (bad) fstpl pop (bad) pop rex.XB loop (bad) cmc movabs rex.RB rex.R mov (bad) sbb (bad) or sahf (bad) (bad) pushfq xor mov cmp mov fwait lret (bad) push push (bad) frstor mov (bad) cmp (bad) fnop rex.RB (bad) cmp rex.R cltd or pop mov nop (bad) fdivrp rex.RB lods push and jnp (bad) (bad) mov fildl rex.WRXB mov movabs or sti push add rex.R rex.WRX mov or pop pop or mov (bad) fisttpll rex.R movabs rex.X rex.R movslq adc mov (bad) pop (bad) cmp (bad) and (bad) fadd pop rex.WRB adc cltd cwtl push rex mov (bad) mov pop pushfq movsl rcrb and rex.WRB rex.WRXB cmc push mov mov rex.W mov pushfq rex.RXB pop cmp jno xor cmp fdivp push mov (bad) scas sbb stos es and icebp (bad) rex.X (bad) (bad) (bad) mov and rex.RXB or mov add (bad) in (bad) xor xor rex.WRXB jp or pop rex.WRXB xor movabs xchg push mov cmp add mov pop retq cmp sahf (bad) (bad) pop adc push (bad) nop push push xor and rex.WXB pop rex.W xchg rex.WRB mov rex.RB jrcxz loopne pop rex.X rex.R (bad) adc repnz rcrl or pop (bad) (bad) or add sbb sti pop or pop mov sub pop fnstenv hlt pop add scas (bad) cmp rex.X xchg (bad) mov mov stc and mov push cs mov (bad) fld (bad) (bad) (bad) cli setge pop add xor adc sarb (bad) ficompl xchg add and (bad) and rex.W stc pop and sub add rex.RB in jb (bad) push pop int3 out rex.RXB push adcb (bad) or (bad) (bad) (bad) (bad) test rex.WRX rex.RB in repnz and pop and cmp (bad) pop push leaveq int3 rex rex.R leaveq (bad) add (bad) jl enterq fmul xor test rex.RXB jnp (bad) fbld rex.WR or push xor or (bad) cmp stc pop retq or or jp andl xchg lahf (bad) add rex.XB in adc rex.X rex.RXB (bad) and mov test push iret movsl and or ja ja push andl gs rorb or lret push (bad) sub cmp retq lea sbb or rex.X rex.XB addr32 fs jle pushq push pop jnp rex.R jb sub lods (bad) or pushq mov rex.WRB imul rex rex.WRB rex.RXB fsubs add sub lret sbb roll adc sub rex or test or in leaveq adc (bad) or (bad) loopne jne lods sub sub rex.XB pop test jns retq pop cmp clc fdivrs cmp not mov ja push (bad) (bad) not mov jbe push ss cmc (bad) mov jne push xor xchg je push xor repz mov jae push xor repnz mov jb push xor icebp (bad) mov jno push xor lock mov jo push xor out iret scas (bad) outsl rex.WB rex.WRXB pmaxsw scas mov rex.WRX cs in int lea rex.WRB mov sub jmp stos mov rex.WXB (bad) lret pushq rex.WX jmpq mov cmp fidivrl mov mov mov sub rex.RB mov (bad) rex.WB rex.RB mov lods int3 jg jp pop cld mov mov (bad) fcomps fs gs int stc test cmp sbb andl imul push in add cmpl rex.RX stc insl xchg (bad) rex.R sbb cmp mov out cli adc fidivr lret pop movslq mov movsl divl fwait xchg jl rex.R (bad) mov (bad) ds (bad) jnp sbb cmp sbb pop rex.R scas sbb cmp cmp rex.R mov repz pushfq sub mov lret and mov pop or mov movzbl je add js cmp movsb jp sbb fwait and add pop sbb cli mov rex.RB movabs rex.WXB cli mov sub in fwait in jp (bad) xor (bad) add movabs mov and rex rex rex.RB (bad) mov in pop sbbl mov mov stc (bad) sbb (bad) mov (bad) mov adc rex loope jge test testb rex.WRB (bad) cli jge jns ja add and push rex.RB cmp loope and rex.B xor xchg (bad) pop rex.RB ss cmp sub adc pushfq rex.X cmp movabs popfq movabs or movslq movabs jo (bad) retq cltd rex.RXB rex.R retq (bad) jl (bad) adc add fsubl add jl pop (bad) mov fiadd pop mov (bad) in and loop shll rex.R rex.WB leaveq pushq repz test (bad) rex.RXB rex pop cmp incb pop vcmpss mov xor pop roll je pop (bad) cmc rex.RB sbb rcr cmp and fs (bad) (bad) push stc sahf rex.R rex.RX push out (bad) pop and rex.W pop push pop int3 pop sbb rex.X (bad) rex.R (bad) rex.W adc movb adc (bad) rex.WXB rex.W rex.WR (bad) rex.WRB int rex.WRXB rol push xchg (bad) rol (bad) test (bad) push rex.RXB rex.W shll push (bad) (bad) push in (bad) push push (bad) int3 push sbb and fcoms (bad) pop in (bad) pop push fcmovne pop sbb and fstl (bad) rex rex.X rex.XB rex.W xor rex.WRB push push push imul pop int3 sbb rex.WX xlat (bad) rex.WRXB (bad) pop push pop int3 pop sbb rex (bad) rex.RXB xchg in jo rex.WR push int3 push jp int3 pop sbb fdivrs rex.WRB rex.RX xchg (bad) push in (bad) rex.XB rex.RXB pop in mov rex.WRX rex.W push int3 push jp int3 mov movabs mov retq (bad) jg je roll jl and stos mov outsl rex.RXB rex.RXB pushfq jbe (bad) rex.RXB rex.RB js fstpt int3 sti cmovne movabs mov rex.RB clc jle xchg push sbb jmpq jnp movabs (bad) (bad) fiaddl push cmpsl fnstenv pop rolb sbb (bad) loop sub mov rex.W mov jp rex.WR cs rex.RX mov pushfq pop popfq rex pop (bad) mov adc sbb rolb (bad) mov stos cmp rex.RXB rex.RX sbb jl and and mov rex.RXB cld add rex.R rex.WRX pop mov rex.XB jne pop scas mov rex.WX rcll push cmpsl sahf sbb cld mov mov rex.X lret sbb movaps cld sbb ficompl add and mov mov test (bad) pop xlat or sbb rclb adc pop fwait pushfq retq adc cmp cli (bad) outsb sub sti fisttpll rex.RX rex.RXB test out and sub mov (bad) and movabs lods rclb rex.RX pop fcmovu jnp rex.W cmp (bad) sbb cmp roll pop cwtl rex.RX pop js ds movsl adc xor or fdivrl cmp add jl mov (bad) xchg (bad) (bad) rex.RXB sbb xchg icebp push sbb pop sbb test (bad) rex.WXB mov rex.RB push rex.WR (bad) out lods fcmovb pushq rcr fdivr mov jle addb sub cmp rex.RX xor or pop retq jnp add rex.W sub sbb push (bad) ja loopne push rex.RB xlat rex.RXB pop (bad) rex.RX movabs or loopne in jno fild mov out sbb fild cmp add and rex.WR loopne (bad) cwtl sahf rex.WRXB rex.XB cs std rex.B pop add push add push fcomps pop xchg rex.RXB jrcxz push lods rex.RX pop rex.W pop jrcxz cmova push rex.WR ds (bad) rex.WRXB push rex.RXB (bad) add xlat push jmpq sbb rex.WR mov fiaddl rex.WRXB rex.X pop rex.R movabs (bad) faddl rex.B rex.WR rex.B rex.WRX (bad) rex.WB (bad) rex.RXB fiadd jg (bad) jrcxz rex.RXB adc pop (bad) fimul pop pop (bad) (bad) pop sbb rex.WR rex.RB push rex.RB rex.RXB and rex.WR rex.WRXB (bad) rex.WRX xchg rex pop (bad) and fldl cwtl add and rex.XB (bad) cwtl add (bad) fmull mov sarb rex.WRB sahf in rolb fs fcoms lea shrl push xchg rex.RXB push cltd xchg push (bad) push rex.RXB (bad) add rex.WRXB mov in cmpsb push rex.RXB movabs pop xchg jnp push (bad) pop rex.RXB lcall (bad) xor std rex.RXB pop lods rex.X xchg rex.RXB (bad) and xchg jmpq rex.RXB and int rex.WXB popq rex.WRB pop push xchg cmp and rolb sahf popq push or repz pop rex.RXB data16 rex.XB rex.W leaveq movabs (bad) rex.RB cmp decb pop out mov cmp fmul jp imul mov mov and es rex.X fisttp and cmp push pop jnp mov (bad) sub mov add test mov clc xchg fdivs push and rex.B rex.RX test pop cmp callq rex.RX and xchg xlat rex.X rex.WRB adcb rex.XB (bad) rorb add (bad) sub rex.WRB rolb leaveq rex.RB sar rex.WR pop movslq out insb rex.X rex cs gs cmp mov rex.B (bad) pop mov pop (bad) sbb fcompl rex.X or push iret xchg pop faddp outsb rex.RB push ror jp rex.W rex.X or (bad) pop mov (bad) push rex.R rex.WRXB rex.WRX rex.RXB movl enterq (bad) out (bad) (bad) add jrcxz rcr movabs movsl pop (bad) jle pop rolb rex.XB cmp fcmovnb rex.B cmp (bad) fldl and lahf retq rex.X pop add add cmp (bad) (bad) incb pop and (bad) xor cmpsb rex.WX rex.RB incb and fiadd mov xor mov mov rex.WR int3 mov xor rex.R sbb enterq jmp movabs pushq (bad) (bad) push rex.WR rex.WB test and rex.WB cmp add rex.WB xor xor (bad) sbb adc popfq mov sbb xchg jge sahf cltd mov adc jbe xor adc adc outsb adc (bad) adc (bad) and enterq out or add jae sub loop rex.WXB cmp xchg vpmovsxwq xor sahf sbb stos out (bad) push shlb pop push pushq rex.RB xor jle cmp mov movabs pop and (bad) xchg mov rex.B jg (bad) mov movabs lea cmp adc pop movabs pop fiaddl adc rex.WRXB jb,pt (bad) in sbb fimull movsb mov sub retq push push xchg test imul mov sarb mov and and (bad) cmp xchg xor cmp mov andb pushq popfq (bad) cmp out lahf loopne mov xorl pop xlat sbb pushfq scas insb fwait test mov rex.RB pop mov sbb xor ficomp es int imul jrcxz adc sbb mov jb lods xor test cld test mov mov in (bad) (bad) (bad) lods and pop sbb rex.WRX fcomi fisttpl (bad) mov jg jne data16 pop mov or push loop (bad) orb add jl cmp rex.WRXB push fsubr cltd retq mov movabs je pop xchg jbe pushq sub (bad) rex.R add pop mov fwait cwtl push movslq jl cltd xchg int add lods rex.X cli (bad) add add shl (bad) (bad) jne and jge adc cwtl jg add or sbb ss adc add (bad) rex.RB mov pop (bad) (bad) mov mov (bad) (bad) lcall rex.RX pushfq out pop (bad) pop (bad) mov rex.B (bad) push mov pop (bad) rex.WX pop adc adc jp out ficompl (bad) mov gs add mov xor mov int3 and sub repz jo (bad) nop add rex.RB sub mov (bad) xchg fidivrl test int sbbb xchg add movslq cld jnp adc outsl (bad) xchg fldt (bad) (bad) mov sbb adc cmp jnp (bad) add loop out add (bad) (bad) pop (bad) sub movsb retq enterq or mov callq mov lret sbb retq jne sbb sbb or rex.RX icebp pushfq cltd sbb push cmpsb (bad) or cmp xor rorl pop and rex.XB sti adc out icebp fistp (bad) xlat clc cmp in mov jne jmp cli sbb xchg mov pop and outsl sarb push xlat xor sub jns out movabs (bad) testb (bad) pushq fdivs add rex.W jrcxz out movl gs (bad) cld in add jrcxz pop rex.R and rex.WX rex.R sti cli sbb rex.XB rex.XB pop out (bad) rex.WRXB (bad) add cmp xchg retq pushq out pop sub cmp pushfq add (bad) out fwait cltd push repnz and jno jmpq (bad) imul mov in movabs push pop jne sbb and out fisubr xchg (bad) adcl push std push adc sbb (bad) jbe cmp mov retq mov cmc fdiv adc es jb (bad) ficompl ja imul jae rex.R lretw (bad) mov fwait rex jnp rcrb rex.W movabs imul retq mov jle sti cltd pop adc jrcxz cmc rex.WRXB (bad) cltd mov hlt rex.RB andb (bad) and leaveq or ficoml xchg mov xor add xchg addb jp xor and and add mov andb adc mov (bad) push (bad) fsubl rolb xorl mov mov (bad) adc sbb and add and lods xchg (bad) fldenv mov cli push pop and testb je rex.RB xor out movabs jne test mov (bad) push rex.WRX or (bad) cmpxchg (bad) sub rex.XB sti (bad) test (bad) sub lret mov cli mov rex.WRXB test jb xor xor movabs (bad) decb and and imul nop out (bad) xor out rex.WRB rex.RXB test (bad) cmp jp fistl (bad) leaveq jbe stos pushfq out imul addr32 out fisubrl jle cmpsb push callq insl mov bnd imul (bad) push (bad) out mov adc sub rex.WR or mov rex.WRXB stos and out jrcxz jo jp rex.R movabs icebp mov adc rorb sti xor push movsl movslq cmp add rex.WRX fs add (bad) (bad) pop lret lods rex.WX movabs and rex.R (bad) add (bad) (bad) (bad) push (bad) lcall sub in and (bad) outsb pop xor or ds adc fwait loope lret cs rex.R (bad) out cmp (bad) (bad) (bad) loopne and (bad) and callq cmc and (bad) cs int3 add add rex.RXB (bad) jnp jrcxz lcall adc (bad) pop mov and mov retq (bad) outsb mov add add cli fistpl (bad) (bad) cmpsl fs (bad) pushfq out cli mov movsb and cld mov push cmp (bad) rex.RB cli rex.WR cmc mov sbbl (bad) stos jbe push rex.WRXB (bad) lret cltd rex.X mov sarb repnz add std movsb rclb out fsubrl jo add ja xor je (bad) jg add cmp rex.WRX out adc jl int3 (bad) xchg add mov (bad) rex.W or cmpb (bad) or rex.WX rex.RX repnz mov mov push out shl stc (bad) pushfq mov sti jrcxz mov jg xor fxch sbb mov movabs test xchg int mov mov jg int rex rex (bad) gs or (bad) lahf jge lods or rex.WRX (bad) jl and mov lretw push cmp mov cmp lret rex.X (bad) loopne in xchg jo pop (bad) push rex.RX (bad) (bad) push in (bad) push rex.RB (bad) (bad) pop in (bad) rex.RB sbb pop xchg (bad) rex.XB pop imul sbb push movsl mov pop (bad) (bad) rex.R xchg in mov push push push int3 pop sbb rex.RXB stos in (bad) push push pop int3 rex fdivrs rex.WRB rex.RX xchg (bad) push in (bad) rex.XB rex.RXB (bad) (bad) pop in push (bad) (bad) rex.WRXB push int3 pop sbb rex.X adc sub (bad) push in (bad) pop push rex rex.XB rex.WX rex.WR (bad) push in (bad) push imul sbb pop (bad) (bad) in (bad) rex.RXB sbb xchg (bad) rex.RX rex.WX pop rex.WRXB push sbb pop (bad) (bad) retq int3 pop push int3 push sbb pop (bad) (bad) rex.R pop rex.WR rclb pop and orb push int3 pop sbb rex.WRX xchg (bad) pop in pop rex.WX rex.WRB pop sub mov fistpl (bad) out (bad) out cld push pop mov (bad) cqto sbb sub (bad) or push (bad) rex.RX pop out xor test mov and add cmp cltd sbb sub pop cmpsb jbe mov movslq rex.X push roll cmp (bad) (bad) leaveq (bad) rolb movslq push roll cmp (bad) retq test gs jno (bad) (bad) leaveq rex.WB sub sbb mov pop jne add push rex.RXB hlt add and sbb out rex.XB rex.RX rex.X and repnz pop rex.RXB (bad) roll (bad) pop fcmovnu rex.X rex.RXB cmpsl rex.R xlat pop fcmovnu rex.RXB xchg sub mov rex.RXB rex.X xor pop rex.WXB imul mov jnp (bad) xchg shrl (bad) fldt rex.WRXB pop rex.RB jno push cmp sub icebp rex.RB stc sbb sub lea rex.RB pop test cmpb (bad) or imul cmpsb (bad) enterq push add rex.X mov imul lock fiadd iret mov movsl mov pop je pushq je jmpq cmp loop rclb test faddl add rex.WR xchg movabs movabs push sbb pop push sbb pop mov hlt mov push lret or sbb jo ficomp (bad) mov sub and or adc cmp adc add sbb mov pop cmp rex.WXB cmp movabs js movabs rex.B movabs adc xor adc pop ss fisubl pop cmp push pop cwtl out pop pop popfq pop jge jle jbe or (bad) fiaddl sbb hlt pop scas movslq mov cli addl jbe mov rex.R (bad) and and rex.R mov pop pop mov rex.W sub and (bad) pop (bad) and lods (bad) rex.WR ds jne lahf sub leaveq sbb fsubr (bad) notl stos jb sbbb pop (bad) cmp (bad) rol or pop jns in fsubrl rex.RX insb and pushq loopne rex.RX test callq jmp lea jle jne jrcxz mov cmp (bad) (bad) xor cltd (bad) adc adc mov and pop movsl jb rex.RXB (bad) repz repz in rex.RB retq cmp mov hlt cmp sub (bad) pushq and js rex.W add adc outsl enterq fadds cvtpi2ps rex.RXB rex.RB outsl xchg and (bad) rex.W pop outsl jne (bad) sbb mov mov movabs sub (bad) push xor add fisttpll sbb repnz add jle mov rex.WRXB jne shl and test leaveq xchg push xlat adc (bad) lahf rex.X cmp (bad) (bad) pop lods callq cmp loopne mov mov pop scas push sbb sahf popfq sub mov jp push or (bad) test outsb cs idivb and (bad) (bad) movabs enterq rex.WRB fstpt sbb or rex.WRX pop (bad) pop (bad) and movsb mov scas pushq rex.W push lods rex.B movabs xchg je cs loope and rex.RB (bad) fcoms retq jg sbb mov decb (bad) loopne (bad) add cmp pushfq fidivr (bad) leaveq in rcr in repz idivl movb mov or fcoml push lahf fidivrl jb or lahf rex.WR je jns fadd rex.B add (bad) lock and fs (bad) cmp orl test mov add cmp cltd or sbb rorl mov imul test pop movsb (bad) lea cli or retq out rex (bad) rex.WRXB pop adc (bad) fmull fmulp movslq (bad) add mov rex.WRX test mov rex.RXB retq paddusb std cmp (bad) sahf sbb sub insb (bad) (bad) (bad) stc xchg movabs mov add add mov addl push sbb add push movsb mov movabs and rex.R rex.W xchg (bad) int and mov in in movl stos xchg in in insl (bad) and (bad) and (bad) mov and adc gs and mov movabs cmp mov mov mov (bad) pop cmp xlat xchg push punpcklwd pop in and test and pop xlat cmp (bad) sbb mov or mov mov adc pop and push cmp movsb rex.WB jae fidivr repnz pop mov sahf decl fidivrl rclb and or sbb rex.RB cli jge fdivs cli xor out fild mov pushq add pop adc pop je xor pop inc pop cmp jo int sub rex.WRB cmpsb mov loopne cmpsb retq and push pop movabs jrcxz rex.WB movabs test rex.RX js rcr insb sub in mov pushfq jbe cli cld (bad) mov imul (bad) mov psrld jb es and roll sbb rex.WRB pop fidivl mov (bad) fmull pop cmp stos movabs (bad) ds movabs sar ljmp and movabs loopne pop loope int leaveq nop xor rex.XB mov pop sub (bad) fildl and and or sbb out fist pushq jp mov sub repnz and xchg or xor (bad) (bad) rcr movabs sbb rorl test retq sbb add adc rex.RX in cmpsb pop cmc lahf or faddl push imul (bad) pop and (bad) mov iret pop adc lret mov (bad) mov pop shufps and (bad) jg sub xor fisub rex ficompl xor test subb rex.RXB mov movabs sub pop adc rex.WRXB rex.WRX xor rex.RX push or rex.RB andl rex.RB rex.W xchg rex.RX rex.RB jne rex.B rex.WR mov (bad) rex.RXB push cmp adc rex.RXB jg rolb cmp pop (bad) rex.WX rex.WXB rex.RB xchg push rex.WXB jb or rcrb rex.XB push mov (bad) (bad) fmuls sbb (bad) cli in (bad) rex.WRXB sbb push xchg in mov mov rex.WX pop (bad) rolb rex.WX repnz rex.WXB rex.WRXB rex.W xor push jb xchg (bad) (bad) shl repnz rex.WRB pop and out rex.RX rex.RXB rex.RB rex.W rex.XB cld (bad) rex.WRXB jle add mov rex.R mov jnp (bad) rex.RXB lock add sahf ss and (bad) gs sarb jg movabs test fsubrs or iret (bad) pop lods es (bad) gs (bad) test (bad) mov mov es (bad) and adc (bad) shlb (bad) sub rex.WRXB fmul (bad) retq rex.WRX or (bad) rex.WRXB rex.WRXB cmp int out adcb fidiv enterq fs rex.RXB rex.RX (bad) rex.RXB (bad) fadds out mov retq rex rex.RB pop (bad) retq rex.RX (bad) and cmpsl rex.R es cmpsl retq xor es rex.R and retq rex.RXB pop rex.WR (bad) fdivr lret lods cmp shrb mov test rex.RX addr32 mov cmp cmc jae and cwtl movslq sbb popfq xchg sbb out add push (bad) xor loopne pop (bad) fst retq rex.WRXB es rex.X and stos rex.WX push mov pop loop add push jb rex (bad) mov pop popfq (bad) (bad) or pop xchg out mov in (bad) shrl retq movb rex.RXB sbb cld std jle jle pop (bad) rex.WR sub pop addr32 lahf vcmptrue_usps lods (bad) cmp (bad) ficompl sahf push add pop rex.RX push (bad) sbb retq movabs (bad) movsl add mov nop leaveq sub rex.R sub cmpsl notb shll fldl and rex cli pop and pop cwtl pop sub xor or xor shlb retq rex.B fwait (bad) lahf (bad) rex.RB mov jns (bad) cmc pushq sub (bad) xchg xor or rex.XB and jg fbstp xor rex.X loope loopne fcoms jne (bad) pop mov pop rex.RX out add rex.RB rex.WRXB xlat mov rex.R (bad) rex.W xchg and enterq and ds (bad) (bad) and or std mov rex.RX and mov fnsave pop rcrl rex.WRXB rex.R mov or xchg fsubrs mov xlat movlps push rex.WRXB xor movabs mov rex.RX jp (bad) sub (bad) sbb add rcrb pop cwtl (bad) lret es adc add (bad) rex.RXB ss rex.B pop (bad) fidivl pop push (bad) mov xor (bad) xor mov ffreep hlt sub loop cmp rex.W movabs mov fldenv testl add outsl cmc (bad) add pop xchg (bad) xchg (bad) cmc (bad) cmc sub rex.W (bad) fistpll and xor sub packsswb fsubl movabs sub jmp sub and gs rex.RX (bad) fincstp lods cs or mov (bad) xchg cmp adc movabs sub xchg movabs out jns (bad) int3 jle mov fildll sub and (bad) sub (bad) (bad) fldcw (bad) movabs sub xchg movabs sar pushfq rex.W or or or and sub sub jnp cmc (bad) fldenv adc cmp movabs rex.RXB xor rorb stc and leaveq popfq add mov retq cmp (bad) popfq add movabs sub xchg movabs cmp (bad) test scas (bad) mov cvtpi2ps sahf adc (bad) (bad) jo scas (bad) pavgw data16 movabs movabs rex fwait jns sub packsswb (bad) (bad) jge sub fwait (bad) (bad) fldcw (bad) movabs scas sub movslq (bad) (bad) fldl std enterq (bad) fwait and pop popfq enterq sub adc or (bad) sub and jns insl (bad) (bad) (bad) mov (bad) int3 (bad) rex.RB pop fildll (bad) movslq retq scas cli rorb jge adc or out jae (bad) jns leaveq jge test or jns leaveq jge sub (bad) lods pop mov mov bswap (bad) sub test (bad) sub enterq test sub mov pop rex.W lea test popfq jne sub lea (bad) sub (bad) sub (bad) add movabs sbb mov movslq fincstp int3 jge sub xchg movabs jmpq add out movabs add ja (bad) sub cmp (bad) fs (bad) loopne jnp (bad) fincstp int3 jge sub xchg movabs fisubl cmc jnp sub imul add cmc sub std sub cmp int3 jge sub xchg movabs adc pushfq push and or and (bad) popfq add je jnp (bad) fincstp int3 jge sub jp stos es fwait and (bad) pop (bad) int3 mov movabs (bad) and mov rex.R and adc sub (bad) pop (bad) int3 (bad) pop loope fldcw movabs fisttpl fsincos movabs imul orl sub mov fistpl cmp stc pop retq pop sarb fisub lea iret sbb fnsave jmp rex.W andl jg adc xchg iret cmpb xor pop repnz pop cmp mov rex.WXB pushfq retq rex.RB mov (bad) andl jg sbb xchg cltd mov mov mov mov (bad) rex.WXB pop sub mov (bad) pop addr32 cmp or jns fisubl cmp sbb and push icebp sahf sub stos cmp icebp sbb mov sbb orb pop pushfq adc mov std lods movslq (bad) data16 in js ror movabs (bad) push movsb movabs leaveq movsb movabs pop rex pop (bad) fsubrl cmp sbb (bad) mov (bad) out sbb add (bad) pop and jne nop incb mov cltd cmp loope sbb (bad) (bad) xchg sub cmpb cmp movabs (bad) adc (bad) pop sub jl faddl and movsb (bad) lahf add pop scas idiv (bad) push lret and rcr bsf (bad) ja mov add test and movsl (bad) xchg (bad) movabs faddl rex.WRB rex (bad) lods sub addr32 orb test push pop (bad) or pop cmpsl or rex.RXB and (bad) (bad) sbb cmp xchg push jge mov cmpsl loop out mov rex.RXB enterq add rex.WRB ds jrcxz rclb movb rex.RXB sbb repnz sarb insb mov rcr scas sub movsb retq adc stos and fidivr xchg sbbl lahf cltd int3 sbb pushq insl add (bad) xlat movabs pop mov cli pop movabs xchg mov pop cs xchg (bad) ss imul mov add cmp fdivrl rex.WX add (bad) sti pushq movabs fistpll lret and sahf (bad) and fimull or and mov in sbb push or cld jno test xor movabs push pop mov add and mov adc rex.RB loopne outsl ljmp incl rex.WRB ficoml mov cmp and mov xor lret sbb and fistpll mov mov in jbe push rex.WRXB std xor callq rex.WRXB mov sub mov and adcl pop jrcxz fwait movabs xchg xchg lret (bad) stc stc add sbb shrl retq add jp fwait sbb xor cli je sti test cmp loope lods fs repz mov cmp xchg push (bad) xchg rex.B faddl rex int3 and push xchg xlat pop add movabs and add rex.XB add cs xor incb fsubs and pop clc fchs (bad) loopne push jne pop enterq ja push rex.RB mov push movabs movabs rex.W or (bad) test (bad) and cmp test scas insl sahf pop (bad) (bad) rex mov movabs ja cmp lret add (bad) (bad) sbb cmp xor (bad) (bad) (bad) mov movslq outsb test lea (bad) (bad) jno (bad) mov sub je add push (bad) mulb retq rex.WX jmp es scas notb rex lods addl lcall xlat jne rol xchg rex.WX vpmadcsswd xchg (bad) mov movsl cwtl and loope retq stos (bad) lea lahf or add xadd push push rex.X int3 (bad) sub rex.XB fwait and in xor (bad) or rex.WR rex.X rex.WB pop mul mov test xchg scas rex.RXB and xchg cs push xchg sahf (bad) and int3 (bad) rex.RXB and rex.B jb jnp mov pop (bad) movsb rex.X clc cmp icebp (bad) (bad) movabs xor lea shll (bad) jg incb movabs jge addl rex.RXB add mov (bad) xor add fcompl xor adc adc movabs stc (bad) rex.WXB std mov hlt push (bad) fmulp add mov lret add rex.XB icebp add push fcmovne sbb scas (bad) mov enterq cmp add and (bad) sub cmp and mov loop jnp and retq (bad) xor sahf and jge push in jae clc fistl jns pop sub lods and sub push movsb sbb in or mov mov and movabs rex.RB jg xor (bad) (bad) (bad) push xor and rex.WRXB (bad) (bad) mov loopne mov and jae (bad) mov pop movabs movabs sahf (bad) add or xor rex.WRB xchg sbb (bad) lahf mov test cmp add enterq std cmp mov cli incl (bad) retq stc push xchg (bad) stc lahf (bad) mov xor fmull mov jmpq mov jmp movsb cld add rex.RB cmp lock sti ss scas (bad) sbb push xor xchg mov mov mov addl (bad) rex.WRX out mov rex.WB (bad) hlt jno lock mov (bad) rex.R rex.RXB rex.RB fadd (bad) sti rex.WB scas psllw mov rex.WRXB movabs (bad) sbb mov fwait stc lret cmp rex.RB jg retq (bad) xchg shr mov add pop int mov (bad) adc and cmpsb add faddp rex.XB cmpl sti sub mov (bad) callq (bad) sahf ss lret pop (bad) push mov jnp in sbb (bad) sbb sbb lock cld cld fstl add insl movabs xchg movsl mov (bad) jne cmp lods mov sub ficomp push and sbbl mov push mov (bad) movsb or (bad) int3 pushfq jae adc mov fild (bad) add movhps sti (bad) je rex.WR or (bad) movabs and and add ss or shlb sub cmp out (bad) cltd and in adc (bad) loopne lea (bad) (bad) lahf jb adc and add jmpq cmp rex.R movsb (bad) loope (bad) adc sub sti fstl sub push mov pushfq mov negl pop (bad) and cmp pop (bad) (bad) (bad) movabs mov sub clc rex.RX fwait std in sahf movabs (bad) (bad) pop test je (bad) cmp movabs (bad) test cli lods cmpsb pop test addl movsl cs loope sub lahf rex.RX divl popfq mov push sub sub pop mov je pop mov movabs cld xchg mov pop (bad) pop xchg rex.WXB loopne xchg loope xchg rex.X mov (bad) pop xlat rex.RXB adc add test cli rex.RX shll pop movhps and fbld js data16 jns xor xor (bad) mov pop or (bad) rex.R rep mov mov rex.RX add out fldl addps xor (bad) pop (bad) jno movabs jae loopne xor retq (bad) test rex.X outsl jae insl add stc vpcomuq outsl cld sbb xchg movslq rex.WRXB or ror xor sbb adc add (bad) xchg mov (bad) fs pop cwtl add (bad) cld and pop adc movabs sbb or rclb mov jb fistp movabs and cs pop mov movabs orl rex.WX jne pop add jl out mov stos (bad) callq lea sbb scas hlt sbb or (bad) and jl (bad) cmp mov movsb and add jns push loop cmp or push pop and mov rex.WRXB rex.XB roll fild rex.R (bad) rex.WRXB addl out and jmpq mov loope (bad) lods pop mov pushq in cmp mov (bad) sbbl mov retq movabs andl (bad) (bad) fadd paddusb jrcxz (bad) (bad) xor icebp mov mov mov fistpl (bad) and retq (bad) mov rorl lahf flds pop loopne cmp fist lahf rex mov orb cmp (bad) and mov lahf fisub rex.XB and stos and test push rex.X retq clc rex rorl push sahf rex.WXB mov push movabs rcl (bad) (bad) rex.RX rex.RXB pushq sub nop sbb pop sub mov push add rex.RB movsb (bad) stc pop mov rex.R popfq push mov mov stos sub stos (bad) lea movabs stos retq and and (bad) fisubl jb loopne (bad) rex.RB jae andl (bad) rcrb jbe xor test xchg (bad) add add rex.WX (bad) jge mov (bad) addr32 (bad) (bad) clc imul and or fs leaveq sub std xchg and (bad) mov xchg rex.RXB rex.WRXB xchg adcl add sbb movsl lods out xor (bad) mov int rex.R movabs xchg andb movabs scas movsb popfq mov (bad) (bad) and jbe addr32 rex.WRXB sbb (bad) loope rex.WRXB pop rcr (bad) (bad) sub sbb rex.XB (bad) stos sbb push (bad) jg retq data16 out jrcxz sub rex jns pushfq test cld push pop or imul (bad) and mov in cmp std enterq callq test in imul rex.WB cmpsl or stos test pop cmp enterq xchg (bad) or out (bad) push cmpsl sub (bad) (bad) jp and (bad) cwtl xlat add retq cmp (bad) fcmovnb lret rex add cmp (bad) fld leaveq jmpq sub add cmp rex rcrb cmp (bad) adc sbb (bad) or cmp adc sbb or (bad) add cmp (bad) adc sbb (bad) mov cmp mov xchg cmp mov xchg cmp rex test cmp rex sub cmp rex sarb cmp (bad) xor cmp (bad) sub cmp xor cmp sub es cmp (bad) xor cmp (bad) test mov movsb (bad) mov mov add cmp stos (bad) cmpsl add cmp rex (bad) movsl add cmp rex jl rex.W adc incb (bad) loop (bad) add xorl (bad) sub out (bad) add xorl out sub jrcxz (bad) add xorl jmp (bad) in (bad) add xorl in sub loope (bad) add xorl jmpq (bad) add xorl jo (bad) xorl je (bad) jl (bad) add xorl jbe (bad) jle (bad) add xorl jb (bad) jp (bad) add xorl ja (bad) jg (bad) add xorl jae (bad) jnp (bad) add xorl jne (bad) jge (bad) add xorl jno (bad) jns (bad) add or sub pop add cmp rex.W rex rex rex.R pop add cmp enterq (bad) (bad) faddl cmp out add lock hlt add scas repz js xchg rex.RX cmp (bad) or (bad) or (bad) add cmp sub or movsl add cmp (bad) pushq xchg or pop data16 mov shrb (bad) sub or out (bad) ja cmpsl jns xchg out mov movb data16 rex.RX andl vpmulhuw lahf add lret out sbb (bad) fstpl rex.RXB (bad) sbb and (bad) (bad) cmpsb or rex.RX stos jns pop out push fs rex.X or cld fcmovnb add push popfq repnz rex.X repnz sub pop stos and (bad) sub rex.WRB shl pop movabs out mov push fnstsw jrcxz sahf (bad) icebp (bad) fcmovne push and retq xchg jns and jrcxz pop addr32 fs xor (bad) sub cmpsl cmp (bad) (bad) out data16 in gs cmp (bad) loope loopne (bad) (bad) cld add cmp (bad) in lods (bad) adc popfq (bad) pop enterq pushq lret (bad) and vpacksswb rex.WRX xor jne (bad) notl mov mov sub (bad) cmp rex.RX xchg push jge add outsb lods rex.RXB int3 (bad) mov rex.WB (bad) (bad) test enterq or lods pop cmp mov mov add jnp pop test xchg add pop rex.XB loop rex.W faddl pop rex.W cmc mov mov rex.RXB sbb cmp add roll lock xchg (bad) (bad) enterq push and xchg rex.XB xchg gs pop movabs add in xchg push int test rex.WRB rex.WB fist xor (bad) movsl pushq jb or sbb rex (bad) lea xchg fmuls (bad) (bad) (bad) jmp lods mov lret out clc sahf push rex.WB push push sti fcompl sub test jg callq mov pop movabs rex.RB fwait loope popfq rex.RXB int3 and pushq (bad) push callq enterq cmpsl psubq push push movabs in sub sarl mov cmpsl mov movabs pushq outsb push xchg lret in rex.WB repnz ss outsl addr32 mov xchg pop or test adc (bad) nop (bad) sub xor fnstcw (bad) fistp rep cmp xchg rex.WB and (bad) mov in sub orps scas imul xor mov mov (bad) push rex.WR retq addr32 push sub sub rex.WB sub cld mov (bad) sti rcrb rex.WRX rex.XB or mov sub xor sbb rex.WB stos nop cs mov (bad) or xchg neg pop rex.WB insl movsl lods sbb cmpsb (bad) rex.B xlat mov pop cmp movabs icebp (bad) and rex.WRX (bad) rex.WB jmpq sub rex.WB cs retq jl mov push pop (bad) cli movabs fisttp rex.WB fldenv cmp and fs rex.RB cwtl rex.RB rex.WB jnp sub pushfq xor cmp lea add rclb movabs fnsave adc clc push stos xchg pushq or xor and scas or jp mov test rex.WB cli (bad) out rex.WB fsub (bad) sbbl jge push outsl xchg mov sub pushq xchg pushq rex.WB rex.WXB pop or test jle rex.WB jl pop cmp pop sti fwait (bad) in mov jrcxz cmp sbb rex.RXB sub lods jl insl xor shrb and scas push push pop rex.WR mov xor (bad) callq jl imul xchg lods rex.WB rex rex.WB rex.WRX or (bad) add sub enterq rex.WRX mov xchg fwait and xchg cmp xlat rex.WB repnz rcll (bad) movsb (bad) or jp iret callq rex.WB add xchg loopel mov rex.WRB (bad) (bad) rorb enterq je outsb adc outsl rex.WRXB xchg cs std push rex.WXB test cld lret (bad) hlt sbb or idivb rex.WRX (bad) xchg jmp jl sbb jle mov rex.WB (bad) sbb xchg rex.WB stc rex.X (bad) cmc xchg movhps imul and mov movsl cwtl add lods pop fwait rex.WB (bad) gs xchg xor iret (bad) jb rex.RX rex.WB pop sbb imul fucom sub int3 xchg mov sbb cmp xchg or xcrypt-ecb cmpsl rex.WB fdivrp enterq callq jl pushq pop rex.WB rex.WRXB add xchg int mov pushfq out rex.B rex.WXB (bad) (bad) decb xor xchg icebp lea outsl adc imul adc push div (bad) xchg callq (bad) rex.WRXB scas and jle fidiv cs rex.WB or pop mov (bad) sub (bad) lock insl test (bad) mov or push fsts push in out rex.RXB rex.WB push jl hlt pop jae push icebp push addr32 loopne jge jrcxz movslq rex.WB rex.B pop out gs rex.WXB rex.W rex.WXB test push addr32 callq jrcxz cmp rex.WB sbb add xchg jrcxz rex.XB subl rex.WB gs pop (bad) mov cltd jno test test clc test repz rex.WRB rex.W rex.WB rex.RXB pop xor add adc sub sbb cltd (bad) in es adc callq pushq enterq pop rex.WB ljmp fild cmp and rex.WRB rex.WB (bad) loopne pushq loope cmp out (bad) (bad) in rex.WB repnz cmp insb sbb push rex.RB or xor jae rex.WB jno notl or mov xchg (bad) rex.WB jae icebp rex.WRXB clc out jnp cmp (bad) sbb rorl sbb push (bad) icebp push pop cmp add or (bad) callq and add (bad) rex.WX fisttp jae pop cltd pop mull jne jbe imul rex.WXB movslq pop jg (bad) pop jge repz bnd rex.RX push rcll push hlt push jae push pop out push rex.WB jb pushq loope rex.XB gs rex.WR rex.R hlt rex.WB icebp rex.XB loopne rex.RB jrcxz movslq push (bad) rex.WRX rex.WRXB gs out nop pop push rex.WXB shl roll addr32 rex.WRXB rex.WB cli rex.WRB (bad) rex.WXB (bad) enterq rex.WRXB cwtl push rex.WRXB push jg loopne rex.WRB repz rex.WB rex enterq pop in (bad) rex.WB jo jne repz enterq (bad) rcrl rex.RB push fbstp rex.WB rex.WRX xor xor pop (bad) add (bad) pop rex.RX roll test or (bad) rex fwait shl pop enterq xor xor callq add jns (bad) rex.W xchg sahf or push sbbb add rex.WB adc and pop jae (bad) push add cmp cmp or adc and add jae rex.WB xchg sarb rex.WB pop (bad) (bad) rex.WB rex.WB or rex.WB out add rex.X cli jle imul mov add outsl push fldcw xorb and rex.XB rex.WB rex.WRB es test pop push (bad) sbb or andl push out rex.RB sbb repz xchg cmc fwait enterq rex.WB test sarb stc in mov punpckhdq xchg rex.RB rex.W adc sub mov pop rex.WB add mov out rex.X rex.WB mov (bad) enterq scas test mov vdivpd (bad) fisttp pop xchg fstps iret scas jl outsb rex.WB (bad) rex.X xlat (bad) rex.R rol jno bnd fldcw jns fistpl out rex.WRXB sub test rex.RB rex.WB rex.WB rex.R jns rex.WB fisub outsb sub gs repnz push repz push rex.WX pop rex.WB rex.WXB lock sbb imul shr pop push rex.WB jnp sub jle xchg add jns pop std imul fiadd mov push outsl rex.WB mov cs add pop movabs and pop adc cmp (bad) cmp rex.WB xchg jbe rex.RB addr32 push lock cs retq (bad) stos xchg jrcxz (bad) repnz rex.X rex.WB rex.WRX orb gs pop insb rex.R repnz testl out (bad) sub (bad) cld icebp add retq rex.WB sbb sub sahf jmpq jrcxz pop fdiv rex.W scas (bad) nop rex.WB cmc loopne lret jae rex.WB jle push push (bad) vshufps jnp cli rex.B push out (bad) outsl movabs xchg mov rex.WB rex.WB rex.W out pop rex.WB fidivrl pop scas mov pop out cmpsl rex.RXB rex.WB rex.WRXB std rex.WR in mov mov leaveq push xchg sub and (bad) nop rex rex.WB stos sub cmc (bad) rex.WXB (bad) (bad) rex.WX outsb mov rex.WB sbb je or testb out fldt rex.R mov push (bad) jl out (bad) jo sub xor rex.WB mov (bad) sarb rex.RXB and callq pop sub (bad) add xchg div push rex.WB rex rex.WB rex.WB rex.WRXB rex.WB mov rex.WRB mov (bad) jrcxz adc sbb xlat decl cld in test rex.WXB ds jb imul rex.WB push cli mov mov clc (bad) jb pop rex.WB rex.WRB rex.WR rex.WRX rex.W popfq cmp movabs or rex.W movabs (bad) rex.WB out pop push rex.WB clc movsb jne (bad) (bad) (bad) (bad) rex.WB push rex.XB lret lock shrb and outsl cli (bad) data16 push mov (bad) jg rex.WB jb je mov adc adc sub popfq jl mov mov test cmp pushq rex.W cmp or jo pop cli outsb clc sbb rex.RXB es pop sub cmpsl xor rex.RB rex.WB cmpsb pop add (bad) (bad) out pop adc jl rex.RXB fcomps rex.WB rex.X rex.WB pop (bad) xchg (bad) repnz movabs leaveq jle jns lret or fisubrl (bad) fdivs push cmp rex.WB mov sbb rex.WX rex.RXB mov sti xchg movabs jp mov rex.WB push shlb (bad) mov push pop rex.RXB push jmp adc rex.WRB je jrcxz (bad) repz out xchg add rex.WB (bad) test (bad) pop jle sub (bad) and xor push (bad) (bad) jno test rex.WB mov insl pop sub xor rex.WX lret sub jl cld sarb pop rex.WB rex.WB (bad) (bad) (bad) rex.WRX addr32 (bad) icebp rex.WRB in jle jo lock pop rex.WB int3 or loope xchg rex.WB sbbl out cmp push stos movabs rex.XB rex.WB cli ficoml out or (bad) in add add add pop rex.RX pushq scas and out add (bad) int out xchg or rex.WRXB push push mull push adc addr32 adc jae push (bad) mov (bad) movsl (bad) loopne rex.WB add je rex.WB mov push enterq rex.WB callq rex.WX cli std rex.WB in push fisttp test and fidivrl pushq int3 adc xor leaveq callq (bad) ficomp movabs pop or test in sub rex.WX addr32 rex.WXB icebp test and sub out movq or jl out rex.RXB (bad) rex.WB in xor rex.WB movsb fidivrl (bad) rcll mov mov hlt push rex.XB xchg cmc rex.W rex.WB rex.WB cltd rex.WRXB repz callq repnz rex.WB jle xchg rex.WXB out rex.WB rex.WRX rorl rex.WB rclb push sahf rex.WB push xorb adc sahf movabs xchg int3 imul or sbb int iret mov lret jae test movabs (bad) pop add jne or (bad) push rex.WB xlat test push rex.WB (bad) rex.WB rex.WR xor rex.WB cmp rex.WB rex.WXB jmpq mov movslq xchg or repz jl rex.WR test rex.WX adc jg fmuls addr32 rolw lods int or rex.RB rex.RXB or pushq fstps rcl out stos incb jg or mov mov sarb push mov fsubl xlat je callq mov rex.WXB rex.WB rex.WRXB pushq pop fisttpl in jrcxz sbb sub (bad) rex.WB xchg rex.R pop rex.RB stos pop rex.WB cmc divl and js adc rex (bad) xchg pop (bad) pop cld out mov adc out mov rex.X rex.WB rcrw rex.WRB repz callq movslq sub jmpq push or xchg rex.R jrcxz rex.WB rex.WB stos (bad) rex.WB (bad) lret test rex.WB sub fnstsw add rex.WB rex.WRX add cmp rex.WB sub or rex.WB rex.WB xchg andb insl rex.RXB movslq or rex.WB rex.WRX (bad) jle add rex.WXB rex.R cli cmp ficom lock callq enterq insb rex.W rex.WB sbb mov push (bad) pushq imull out shr rex.WB (bad) jb (bad) (bad) or test (bad) xchg cmp rex.WXB (bad) mov sub cmpsb rex.WB out pop pop insb jle rex.WB insl (bad) lock push rex.R addr32 (bad) vcvtpd2ps lret cld loope outsl mov jnp push mov fsubrl in shrb loope jns fs adc jrcxz ljmp sti lret loop push std jne (bad) out and rex.WB faddl cltd repnz fisttpll rex.WX rex.WB jne push lea cltd cmpsb pop repz sbb cmc rex.X xchg push or rex.WB push xchg sub mov in rex.WB pop jnp (bad) push push enterq hlt pop movsl rex.WX push (bad) push pushq sub pop mov in pop mov rex.WB imull push movabs leaveq mov (bad) out sti fistl lret (bad) callq xchg mov not movabs jl push fisub adcl nop rex.WB sub (bad) jle mov rex.WB vpsadbw out (bad) rex.WR rex.WRXB rex.WB and pushq (bad) cs rorb rex.WRXB sub repz repnz (bad) rex.WR out rex.WR sahf repz lock mov rex.WB (bad) mov push fucomip rex.WB retq pushq mov jmpq callq rex.WB rex.WRXB loopne xor rex.WB mov (bad) sub out gs mov adc ds (bad) outsb scas stos pop (bad) std pop sahf or cmp adc push rex.WB rex.R jle rex.WXB xor mov xchg rex.WB rex.WB push pop sbb rex.WR xchg sub push lret movslq pop jae jrcxz rex.WXB mov sub rex.WB sub (bad) jno fmull imul test lock rex.WR decb (bad) gs test xchg push rex push mov movabs insb rex.RB fistpll rex.WB jp loopne jg rex.WB sarb (bad) jno sub lret rex.RXB data16 rex.WB in cmp rex.WB sub addb push adc sbb rcrb in (bad) addr32 (bad) (bad) rex.WB rex.WX loopne mov pop rex.WRX ror test xchg cld (bad) iret xchg pop or rex.WRX or sub cld retq pop stos mov rex.WX test rex.WRX push out repnz sub sahf out clc pop mov or push movsl or subb jl mov pop rex.WB insb loope xor cmp and pop (bad) push shlb sbbl or xor (bad) cli fs pushfq in (bad) cwtl cmp lock sbb rex.WB xor jbe test rex.WB xor and push xor (bad) pushq mov fistl (bad) xor rex.WRB rex.RXB (bad) nop jb (bad) mov rcrl push rex.WB ja rex.WX rex.WB mov xor popfq jrcxz (bad) (bad) loopne sbb pop sbb adc dec (bad) rex.WB data16 and adc movsl imul push fimul jg or push (bad) loope orl retq sti in (bad) adc (bad) rex.WRXB movsb cwtl pushq scas pop xor pop jmpq rex.WRB rex.WB test ja rex.WB rex.RB rex.RB push push (bad) imul rex.WB rex.RXB mov (bad) and rex.RX rex.WB lret sbb loop adc (bad) ficompl push jns push (bad) in rex.WB fldenv rex.RX pushq rol in pop jp loope sbb (bad) vcvtpd2ps adc push and (bad) hlt pop xchg add rex.WB out (bad) (bad) retq and push push addr32 and rex.WB (bad) jp test push jae add push hlt push or pop jb pop test sub scas mov insl cmp cmp push cmp pop push loope (bad) or jbe push push rex.RB (bad) rex.WB mov mov (bad) rex.WB (bad) xor or xor rolb push rex.WB xor rex.RX (bad) sub (bad) xorps jrcxz (bad) or repz mov stc jl sbb adc (bad) cmp icebp add rex.R xorq cmp je rex.WB (bad) mov jbe sbb repz rex.WB add cli lret lea sub jno rex.XB cmp movabs callq (bad) fs (bad) (bad) retq mov in in mov repnz rex.B cltd rex.WB cli jmpq (bad) pushq xor mov addr32 mov rex.WB rex.R ds rex.WB fnstsw subl scas pop sub rex.WB rex.WRB mov add rex.WB jle and (bad) (bad) lret adc addr32 out jnp (bad) (bad) push sbb fiadd int out (bad) pop rex.WB rex.RXB jo jp fadds lods rex.W (bad) out xlat rex.RB rex.RXB js xchg mov rex.WRX frstor or cmp imul mov iret cli push (bad) or xor (bad) add or callq vpsubusw mov jle rex.RB xlat jrcxz ds rex.WB rex.WR (bad) jo out test lret movsb jnp mov sub mov test mov adc pop clc or shll xchg (bad) or lea add sbb xor rex.WB je cs insb ja rex.WB popfq imul bnd rex.R rex.WB mov std jnp cmp cmc je rex.WXB pop or adc (bad) rex.B jbe adc sub rex.WB (bad) (bad) (bad) mov rol pop add movslq lods lods loopne mov movabs shlb push pop rex.WRB fs sbb clc push xchg jg (bad) push sahf rex.WB pop xchg xor xor and in cmp mov rex xor subl (bad) lret or cmp xlat loopne push in sub xchg rex.WRX shrl rex.WR rex.RXB jle rex.WXB rex.WRXB or pop insb jb sub xchg pop popfq pop insl rex.X fcoml jge jae outsb popfq iret popfq xchg repz rex.WB in addr32 pop (bad) incb (bad) lret icebp (bad) rex.WB (bad) ss gs xchg in (bad) pop (bad) loope rorb rex.WX cmp adc sbb iret icebp sub repz rex.W lock int rex.RX je pop push jmpq sub jb jge sub jns in pop in in fcmovnu or push mov rex.WB outsl cli (bad) stos movsb insb fucomp iret cld lret clc rex.WXB sub jo sbb (bad) xor push rex.WRXB rex.WB cmc imul enterq loop (bad) rex.WRB rex.RXB rex.WX mov rex.WR rex.WRXB adcb jl add (bad) nop in imul subl jge cld fcomps lock adc scas rex.WRXB pop or pushq or (bad) cmpsl push pushfq push fstps cmp push push rex.WB fmull (bad) pop insb cmp pop mov gs rex.WX pop rex.WB rex.WB lock fsubrs loop shlb (bad) cmp rex.WB push rex.WB or (bad) (bad) scas rex.RX mov push insb push sub rex.WRXB nop pop out pop test decq adc (bad) movslq fsubs rex.WR rex.WB jae cmp subb cmp outsb xor scas rex.RX fdiv or addb adc sub cmp (bad) add (bad) (bad) repz retq add std add test push and sub sub pop movabs jrcxz xchg jne (bad) sbb stc xlat fimull rex.WB mov (bad) or push mov sub rex.WRXB push (bad) rex rex.WB or iret mov (bad) adc push xchg fidivl rex.WB bnd xor clc fistl rex.RB rex.WXB rex.WB repz cmc pop cmp mov xchg sub es (bad) push mov fnstenv jg jne jmp mov (bad) rex.WB loop sbb fxch jnp rex.WB jl xchg push cmp or movabs or xor push rex.W loope loope and je rex.W rex.W lock rex.W fisttpll mov js rex.W rex (bad) push rex.WB cmp adc insb rex sub push rex.W data16 rex.W rex.B jno movq rex.RB rex.RB rex.RB rex rex.RB movabs rex.WRX rex.WB xchg pop jrcxz cld imull adc std push rex.RB addr32 jne int jl rex.WB rex.WRX sub rex.WRB jae je rex.WB (bad) (bad) rex.R movabs rex.XB (bad) mov rex.WB rex.WRB rex.X or rex.WB (bad) sub movsb pop (bad) fstpl xchg in add (bad) jb sub push enterq outsl pop xchg rex.WB jl in pop jge xlat in ds cmp adc rex.XB rex.W in adc and push rex.WB xlat in or or ja rex.XB ja xchg add movsl insb cmpsb jmp sub sbb (bad) rcll out cmp (bad) (bad) loop mov rex.WB movabs (bad) sub push xor rex.WB outsb movabs mov jle fwait push push fistp (bad) add cmp je adc rex.WB and jg (bad) rex.WB (bad) std mov rex.WB (bad) out jge and push push mov rex.WB adc xchg mov adc mov rex.WB xor ja (bad) xchg xor mov mov (bad) pop fbstp (bad) push stos sbb rex.WB imul sub rex.WRB and mov sub mov push outsl test in (bad) xchg fwait adc pop push adc adc repnz sub insl rex.RB adc scas sbb loope (bad) rex.WB cld (bad) pop and jne mov mulb (bad) subb sbbl insl rex.RXB out cmp fsub movabs (bad) rex.XB rex.WX pop mov cld (bad) xlat pushq adc icebp push mov rex.WB rex.WXB rex.WB push add mov mov movsl (bad) fwait (bad) (bad) sti add xchg movabs fisttp inc cmp xchg cmp pop mov repz rex.WB rex.WB lods mov andl repnz movabs adc outsl push jb rex.XB pop test gs rex.RXB pushfq fldl and stc sarb rex.RXB rex.WR push sub push scas rex.WB rex.WXB mov pop xor int mov rex.RXB rcrl xchg rex.RXB xchg callq lahf rex.WXB add rex.B pop (bad) movabs out rex.WX push test rex.WB rex.WRXB rex.WRX add orl pop (bad) or xchg push icebp push rex.WRXB hlt rex.B addr32 rex rex.RXB lock mov pop xchg sbb push pushq cmp (bad) push adc nop rex.WB or add (bad) hlt ds cmp pop mov rex.WRB rex.WX push and rex.WRB rex loope gs rex.WB pop jbe adc jl add pop retq xor pop (bad) (bad) in in jbe (bad) sub lods (bad) or xchg push int3 pop (bad) fimul rex.W rex.RX (bad) rex.RB jne rex.XB mov rex.RXB rex.RX rex.WB rex.XB and rex.RB roll rex.B mov movabs (bad) pop rex.WB rex.RXB and out sahf rex.WRXB rex.WB rex.WR adc (bad) push and rex.WXB cmpsl rex.WRB rex.WB lret or mov rex sub cmp rex.WRXB rex.XB push in std push cltd addr32 (bad) push sbb xchg push jbe (bad) or pop insl (bad) sub (bad) rex.WB rex.X fdivr rex.WRXB rex.WB push rex.WR rex.X rex.R mov rex.WX rex.WRB push in fs rex.RB rex.RX pop rex rex.RX rex.WB pop sub pop pop enterq push rex.RX sbbl push adcl rex.WR sbb push rex.WB pop pushq iret addr32 rex.RX rex.RB cli jo pop cwtl rex.R (bad) scas sub out hlt fcomip mov rex.WB rex.WRX cmp sub pop gs pop xchg rex.WB cmp push test rex.WRXB rex.WRX rex.WX jo pop xor adc loop or rex.WRB rex.WB rex.WRB rex.WRXB stos push sub pop icebp rex.B rex.WB rex.XB rex.WB rex.WRX rex.WRXB addr32 pop rex.WR (bad) push jg rex.WB insl push out push imul rex.WRB push rex pop xchg push xorl pop mov rex.WR fisttpll jg sbb mov rex.WR cmpsl rex.WB test pop movsl pop vminps pop mov in insb push xor pop mov xor movsb rex.WB outsb rex.RX enterq xchg rex.WR push cmp push or push cmc push xchg sub out rex.RXB test sub rex.X sub iret cli rex.WB rex andl jns rex.WB push (bad) rex.WRX sub push sbb pop sub (bad) mov repnz add add or (bad) xchg fimul xchg jno rex.RXB xchg rex.WXB fcoms sbbl addr32 cmpsl addr32 movabs rex.WB ss (bad) mov sub in cmp sub mov and rex.WB cmp pop or add ss outsl fnop rex.WB repz repnz jne neg mov (bad) icebp scas pushq pushfq idivl jno and (bad) mov sti add je jae retq pop add rex.WB fcmovnu jbe pop xor int3 rex.RX pop xor pop mov adc push (bad) in idiv xchg mov callq jmpq movabs (bad) subl in imul rex.WB lock movabs push mov mov pop rex.WRXB int stos lret (bad) xor imul retq mov (bad) pop iret (bad) (bad) lea cmpsl sub rex.WB cmpl sub xchg cmp (bad) divl add popfq (bad) push rcrb jrcxz rex.RB movsl rex.XB movabs (bad) cmp sub mov lcall rol pop leaveq enterq sub rex.WB pop (bad) xchg movabs pop mov ss mov sbb rex.R push fisubl fsubrs rcrl notb rex.WB lods and sub xchg mov popfq rex.WB andl or scas out decb mov ds mov sahf jb sub retq lods rex.WB cli (bad) jge add movabs lahf rex.WXB mov (bad) rex.WB jbe cmc mov cmp mov rex.WX pop scas in mov xchg mov movabs xchg rex.WB rcll adc and and xchg push add (bad) xor in rex.WX rex.WB loop lods retq (bad) movsl add sarl mov rex.WX mov (bad) (bad) adc insb fsubr jl cmpsl insl ja gs test callq pop mov cmpsl rex.RXB cmp xchg rex.XB jnp callq repz pop jle rorb fwait and or sbb mov xchg rex.WB or or rex.WB push mov (bad) loopne rcl or fmull lea fcom lods fldenv (bad) (bad) push xchg rex.WB repnz jae and rex.WB pop icebp leaveq cli sub rex.WB lea movabs jrcxz fxch jns adc push icebp mov cmp (bad) xchg sub (bad) mov test outsl or ds cmpsb adc (bad) mov rcr enterq rex.WXB rex.RX xchg (bad) xlat or xchg out push sub rclb push jle (bad) stos rex.RXB test rex.R pushq es xor clc xchg sub loop sbb xchg xchg jmp imul mov fidivrl scas rex.WB (bad) rex.WB rex.X mov sbb pop retq (bad) test add in out pop rex.WB movabs (bad) out (bad) rex.WB rex.WXB rex.WB movslq sub fisub or push cmp test (bad) pop or push jne pushq repnz pop int3 xor jae mov rex.WB pop pop add test rex.WB mov pop rex.WB (bad) fldl loopne ds push sahf movsl xchg fcomi js pop or rex.R (bad) andl test loopne data16 lea xor gs movabs fwait stos popfq push sbb xchg push (bad) xor push rex.B cmc sti sub jmpq fist mov rex.WRB rex.WXB xor mov loope gs mov sub mov hlt fwait pop sbb mov retq sub jo pop lods (bad) jrcxz mov incl sbbb jb mov callq xchg mov push (bad) rex.WB insb cmp shl pop add (bad) popq rex.WB in retq mov and xchg or cmp (bad) inc mov scas mov mov sub push cmovne je or (bad) (bad) (bad) (bad) sbb callq cltd cs cmp add fistpl push rex.XB adc movsb cld xor retq stos mov cmc movabs jl iret loope xchg mov mov mov ja xlat adc out rex.WB cs (bad) shlb mov push rex.WRXB jbe rex.WXB or int3 mov cmp pop mov (bad) mov imul jmp not mov xchg outsl jmpq push lods int rex.WX jnp mov movabs loop (bad) rex.XB rex.WB gs retq test rex.WB xor (bad) cmp pop and rex.WB nop loop lea rex.WRX add push pop lret xor sbb or mov sub rex.WX rex.WB sar push hlt sbb sti test retq fisttp mov outsl stc fist mov rex.WB rex.R in xor sbb (bad) cmp (bad) rex.WB rex.X cmpsb adc jl ficoml rex jmp retq (bad) stos movslq fsts (bad) rex.WB rorb push mov rex.WRB loopne sub lea stc pushfq leaveq movabs movabs jno cmpl or mov rex.WB insl sub xchg and test mov rex.B xor sahf adc push pop ja mov sub sub mov sub movsb cwtl sub (bad) (bad) pushq rcll in cmp loopne mov cld adc (bad) repnz and insl outsl pop lea (bad) mov xchg rex.WR pop xor pushq or pushq sub xchg mov addps mov rex.WRB rex.WR repz mov (bad) jnp jmpq adc (bad) (bad) sub pushq fs rex.XB (bad) push loop rex.WRX cmp rex.WX movsl rex.WB rex.WRXB add pop push push lret and rex.WRXB mov xchg mov xchg ss negb xorb and movabs mov ja cmp (bad) sti cmc jns imul xor (bad) (bad) (bad) rclb adc xchg (bad) clc movabs movabs jl or clc jnp rex.WB sub add movsb fstps shrb (bad) pop stos mov rex.X repz fstpl rex.WB callq and push lea cli xor leaveq mov rcll lock adc sbb loop addl or pop (bad) rex.RXB push rex.XB adcl in rex.WB jle rex.WB add mov movsb repnz mov lret jmpq rcrb rex.WB and (bad) rex.RB add add lahf rex.WR sbb cwtl rex.WX iret pop jp add mov jne sbb clc leaveq xor lea icebp xchg retq cmpsl pushq lods repz jno or fistl stos xchg mul push in jnp cmc or mov cld iret and rex.WB sarb callq rex.WB int3 cmpsl subl subl repz es (bad) push (bad) callq lock rex.WB ror or (bad) ficoml (bad) jo cmp xchg mov mov (bad) mov hlt (bad) retq or orl push sahf fisttp jrcxz imul test xor adc rex.RXB fsubp xchg je (bad) sbb (bad) lock leaveq rex.WB stc jmp (bad) (bad) and xor mov mov sbb rex.R xchg retq cli xor fimul lret sub rex.WB (bad) test fiaddl rex.WB xchg pop cwtl jp cmp and jl jrcxz rolb in (bad) push movslq rex.WB std mov in xor cs movsb out xchg ja xor rex.B rex.RXB or (bad) pop sub outsb or in adc movsl out std rex.WB rex.RXB (bad) rex.X out (bad) or loop in idiv mov jnp test mov scas mov (bad) rex (bad) addb rex.WB rex.R jne,pn cmp rex.WB ss and roll adc rex.WB orb (bad) cli xchg rex.WB mov rex.WB adc push stc test and (bad) and popfq addr32 shl xchg sbb fsubrl addr32 or movslq push (bad) movabs sub rex.WX (bad) rex.WRX int3 push insb rex.WB jne xor jae callq sbb nop push jne outsb xor pushq cmp pop jbe rex.WB xor mov out callq push jrcxz pop test (bad) jne xor mov mov sbb jmp push and test test pop cmp loope xchg (bad) or rolb movsl xrelease xor rex.WB xchg test mov mov mov rorb pop mov int rex add rex.WB stc mov push out rex.WB int jno pop mov shll (bad) mov cmp mov jns mov cmp and rex.XB pop cmpsb in rex.WB ds push jge (bad) rex.WB jrcxz cli xor addr32 in (bad) movabs ftst negb jge je adc push and insb int3 jmpq pop cwtl in xchg stos sub rex.WB rex.WXB jle pushq mov mov ss lods scas gs (bad) sub mov rex.RXB sbb jl pop sbb test out mov pushq jno mov mov rex.WX andl pop or mov imul movsb in cwtl icebp rex.W (bad) push cmp rex.WB test out xchg (bad) (bad) pop mov (bad) (bad) jno mov jb pop stos mov xchg fcomp mov push outsl pop ss jb adc jg imul rex.RB je pop insl cmpsb (bad) sub (bad) imul jno setl rex.WB add stos cs adc gs push lods cli pushq decb rex.WB int jno rex.WRXB loopne in mov fwait xor rex.WB rex.RX (bad) rex.WB mov lret insl add xchg fldt rex.WB mov add sub (bad) adc and movabs (bad) xchg loopne movsl outsl pushq pop xor movabs push lahf out xorl shr xchg in in mov retq pop rex.WB (bad) (bad) rex.WB push movslq incb rex.WB rex.WR push lea pop callq jnp enterq or loop sub xchg cmp xchg pop repz lods push jmpq mov rex.WB stos fdiv fidivr (bad) (bad) int3 rex std movabs rex.W ds (bad) andl movsl iret jp jl fstl rex.WB jge ficomp cmp cmp rex.XB mov callq mov adc rex.WRX add ror rex.WX mov mov adc sarb xchg or mov pop jb rex.WB rex.RXB popfq hlt push jmpq add (bad) mov adc mov xchg xchg repz xchg mov sub test jge push sbb rex.WB jrcxz cld add in and (bad) ss mov sub rex.WB movsb enterq cmp rex.WB (bad) insl jp (bad) sbb rex.WB rex.WXB je rex.WB xor xchg (bad) pop out rex.WB rex.WX xchg rex.WRX leaveq xchg rex.WB loopne xchg and (bad) push jae jge xchg retq (bad) callq rex.RX jae and outsl jns movabs add add out mov (bad) pop (bad) callq (bad) movabs xchg cmp (bad) fwait nop lret rex.WXB rex.XB rex.WB sbb (bad) (bad) cmp rex.WR gs jmpq rex.WB scas pushq adc pop data16 pop mov (bad) rex.WRXB rex.WB pop repz insl pop xchg cmc scas pop rex.WR rex.WRX mov cmp add cmp mov sub rex.RB mov test enterq rex.WRX rex.WB lret rex.WX sti fild rex.WB xlat rex.WB (bad) rex.WRX in lea sub jle iret push lods jns test (bad) add rex.WX and jrcxz adc rex.WRXB adc xor andq repnz outsl add adc pop lret es jne push sub xchg test rex.B retq divl jb (bad) loopne add xor orl ja and jns sub outsl or cwtl mov cmp xor lea or jns movabs xor push (bad) sub xchg add (bad) push pop adc push ror xchg rex.RXB rex.WRX repnz ss mov pop pop fimull (bad) int pushq xchg pop shrb xor adc rex.XB rex.WB and out adc shll jns pop addb leaveq rex.RB pop scas pop (bad) gs shl js xchg movsl and es rex.RB subl rex jl ds pop mov add (bad) movsl mov hlt or (bad) mov jbe pop or (bad) xchg loopne sub add cmp cmp or rex.WR test mov int popfq cld rex.W movslq addr32 rex.WB (bad) rex.WB cmp (bad) (bad) sti jg rex.XB jp mov pop jmpq nop callq mov rex.WB (bad) hlt test iret rex.WB mov cmp push and pushq push mov rex.WB fnop mov jno (bad) xor push rex.WR xchg scas jp pop fdivrs xor in out repnz (bad) ja cmc rex.WRB sub rcrl and add movabs fcomps fwait stos jg pop or retq mov mov (bad) icebp mov je movsb (bad) mov movslq cmp cli or or rex.WB rex.RXB and sbb jns out fmull push xchg or (bad) jl icebp data16 gs xor push add out mov rex.WX rex.WX ss mov rex.WB rex.R movslq callq int add insb push or callq ss mov jle jns pop add mov (bad) divl sbb or jge addr32 and movslq xlat pop jmpq rex.WB (bad) xchg (bad) rex.WB mov rex.WB (bad) js and mulq sub rex rex.WB rex.B iret in (bad) fcmovb mov mov rex.WR cli (bad) faddl mov mov in jo fildll shr pushfq out xchg pop stos pop addl mov int rex.WB fldl2e addl shl jbe and jle jp xor in mov mull sarl pop orl ss mov rex.WB mov rex.XB jp flds sub (bad) rex.WB rex.WX lea rex.WB mov (bad) mov es rex.XB mov rex.WB (bad) add mov (bad) lock pop test pop and stos cmp jmpq rex.WX push cmp sbb rex.WB mov jnp (bad) movsl (bad) (bad) andl rex.WB or ja lea hlt xchg (bad) rex.WB push cmp repz lret xor outsl es movsb out pop pop rorl (bad) rex.WB mov xlat rex.WXB outsb insl rex.WB int ja xor adc fldl sbb cmp jne xlat cmpsl clc mov sub and jle int fwait pushq stc sbb mov cli nop rex.WB fild stos out out or movabs mov (bad) (bad) mov movabs adc xlat push (bad) lods retq test rex gs cmc rolb (bad) rex.WB (bad) (bad) repnz adc rex.WB push sahf fidivl test mov cltd pushfq in es xchg (bad) add adc cmp addr32 pop mov (bad) mov cmp add int3 sub mov fdiv imul add movsl sub cld mov fiadd cwtl mov pushq push xchg adc rex.WB xor (bad) pop hlt out mov icebp cli mov addr32 test add (bad) lret add or pop fwait sbb out add ds retq rex.WB jb int3 icebp in cmpl adc and fisttpl jmp adc (bad) sub (bad) adc (bad) or mov xor rex.WB idivl sub mov rex.XB lret xchg jne pop cmp cmpsl (bad) push sub flds int xchg int xchg rex.WB (bad) jl movabs cmp mov rex.WB in outsb je push fs rex.WB jge imul rex.WB mov rex.RX and loopel adc rex.WRB shl rex.WB movslq (bad) js adc mov movsl rex.X pop push insb pushq cltd rex.B gs rex.WB in movabs (bad) sub scas and rex.RB fadds ja sub add mov (bad) rex.W xor repz data16 mov sub cmp xchg (bad) (bad) sbb xchg xor push insb add push outsb test (bad) es xor icebp hlt or paddsw loopne pushq add stos mov mov and pop sub xchg (bad) xchg xor jno jg cmc rex.WB rex.W gs push mov adc rex.WB add rex.WXB pop hlt xchg cmp rolb addr32 rex.X sbb fnsave enterq jg rex.WXB rex.WB ficoml lea imul mov movabs mov repz rex.WB repnz stos (bad) rex.WB movabs mov sub scas jge fnstcw rex.WB (bad) sets rex.WB pushq push rex.WRB (bad) out rex.WB push fstps scas movabs (bad) and cmp (bad) sti rex.WB data16 pushq jle mov (bad) sbb sti movslq jg (bad) add mov (bad) cmp pop lods pop popfq lock enterq push xor mov jnp ss and or xchg in hlt xor out mov ss rcrl lahf pop mov test mov (bad) fistpl xlat rex.WB imul push in cltd test (bad) rex.WB add rex.RX add jns (bad) scas pop pushq or (bad) rex.WB rex pushfq retq mov add mov xchg (bad) mov mov rex.WB jmp jmpq rex.WB pushq jb mov mov or repz leaveq and test (bad) shr js or fs push imul rex.WB push rex.X (bad) outsl (bad) rex.WB sub cmp pop (bad) add (bad) gs and rex.WR (bad) sub mov retq rex.WRB test add out or mov in test mov fldcw lahf mov rex.WR adc (bad) jb add cmc addr32 out rex ja lods sbb pop nop ffree rex.WB (bad) rex.WRX rex.RB (bad) callq (bad) (bad) rex.WX and rex.WB loopne (bad) pop rex.RX out sbb (bad) test (bad) out repz xor pushq insb push fs rorb enterq mov cmpsl jno rex.WRXB (bad) rex.WB orl sahf enterq mov mov mov jrcxz cltd (bad) lods push jg je stc push mov rex.R mov vpsubsw pop adc jns rex.WB jge,pt leaveq push mov pop mov (bad) mov jnp mov pushq rex.WB (bad) vmread (bad) (bad) and xchg pop lea pop xchg sub (bad) mov jnp pop mov rex.WB icebp or rex.WB xchg mov jrcxz pop out lahf cmp sbb add movsl jne rex.WB nop (bad) push push rex.WB xchg cmp (bad) pushq ss xchg mov fnstcw (bad) (bad) (bad) (bad) push jnp subl (bad) xor shrl lahf cmp shr std loopne rex.WB or mov movslq fldenv jg or ffreep sti sub mov mov and (bad) lret add sub mov loope notl lods rex.WB data16 int3 fisttpll adc popfq sub rex.WRX jnp (bad) fcomip and pop cmpl mov mov (bad) xor pop rex.X rcll or stos testb (bad) rex.WB rex.RB popq rex.XB movslq fistpl movsb outsb (bad) xlat imul cmp and pushq rex.WX rex.WXB lahf rex.WB sub cmpsb add jns cli and jg mov rex.WB pop xor imull lea adc (bad) rex.WRX rex.WB loope jp (bad) (bad) rex.RXB out imul or leaveq (bad) (bad) (bad) xor jne (bad) callq pop retq adcq or rex.XB in fisttpll mov or out jns orl popq sbb mov (bad) xchg lods or rex.WRB nop subq push fidivrl mov push sar mov push lahf loopne cmc loope rex.XB xor rex.WB rex.WRB add cmpsl repnz imul and cmp enterq fs push or gs pop rex.RB pushq or data16 rex.RX test int3 pop jrcxz (bad) stos loope outsb imul test push sti add push enterq sub push (bad) (bad) mov rex.WB add icebp insb xor rex.WX imul sbb enterq mov sbb leaveq pop mov mov xor clc lret (bad) ja sub std sub sub roll push rex.WB negb enterq rex.WB add adc (bad) ljmp mov and or mov rex.WB sub rex.WB sub out (bad) imul add and (bad) jno mov pushq rex.WB mov push rex.RXB clc callq stc jno loop or fisubr movabs movsb (bad) decl cmp cmp lahf vmovaps pushq pop mov xchg iret loope in add rex.WB rex cmp push loopne fimull stc mov cmp cli mov (bad) xor add out insb and xchg sub mov sbb adc (bad) int3 out sbb adc cltd or (bad) jnp jae push (bad) cltd adc (bad) icebp (bad) jrcxz push rex.WXB xchg (bad) push lods cmc xchg push adc (bad) jno mov xor (bad) push sti sbb loop cmp scas and mov mov andl out mov mov lret and and out and fwait xchg rex.WB sbb xor jg cmpsb push or mov mov repnz cmc (bad) push hlt lods pushq (bad) jb ja cwtl add int3 negb xchg jae rex.WR sub adc jne mov repnz stos cs sub sub gs out jrcxz fisubl fnop sbb sub sub mov cmp rex.WRXB in pushq ds lock mov (bad) (bad) (bad) rex.WB xchg rex.WB or rex.XB movabs sarl xchg rex.WB and (bad) rex.WB lahf cmp fwait xor sub movslq (bad) cmc rex.WRX addr32 mov rex.WB push cmp mov lret sti sub test xchg or (bad) adc xchg orl push (bad) cmpsb lea je (bad) cmp jnp mov xchg gs mov mov rex.WB xchg rex.WB int3 lock sub pop adc (bad) movabs cwtl js mov (bad) rex.WX stos callq adc sub rex.WB rex.X repz mov rex (bad) sub (bad) rex.WXB sahf sub mov jle je cli fistl and push js sbb iret mov movabs addl lahf or insb pop sub or add scas jnp lods rex.B xor (bad) clc xchg std xchg rex.WB (bad) out lods rorb cmpsl mov shrl pop sbb rex sahf and mov or xchg and add movabs xchg callq rol ja pop xchg push cli jge ja test fwait movabs (bad) pushq push push (bad) mov lods cmpsb rex.WB sbb add out push mov mov rex.WB rex.WX fwait sarl icebp rex.WB cmp (bad) pushq push test (bad) pop rex.WRXB sub push out push iret and sub push push xchg (bad) rex.WB fwait rex.WB add in movabs lock jns stos mov rex.XB cmpsl push fcoml cltd leaveq pop sbb cmp out push sub rex.WB jbe (bad) xorl int lahf out addr32 xchg cwtl pop pop (bad) cltd movabs sbb mov push pop xor mov (bad) jns rcl (bad) rex.WX rex.WRB rex.B movabs cmc rex.WB ss pushq fldenv sub (bad) adc es rex.WB jle sarl jno movabs sbb clc enterq push rex.RXB cs and mov test out pop cmp xchg int pushq and xlat or xor (bad) divq xor int cmp mov rex.WXB popq stos sbb adc rex.WB jbe mov pop (bad) insl sub movabs push cmpsb (bad) add fist stc lret fxch test sub mov sbb rex.WB cmp rex.WXB rex.WR rex.WRXB rex.WRXB out cmpsb retq rex.WB (bad) push lret jbe out cmp rex.B or rex.WR xor mov negb gs movsl cmp rex.WB (bad) xchg rex.WR (bad) xor pushq push jb (bad) ss (bad) lock loopne and mov pop xchg int3 push rex.RX lock rex.WRX test rex.WB mov adc (bad) fisubl in cmp jle sub popfq sbb add rex.WR enterq movslq hlt cmpsl pop mov pop movabs push sub rex.W adc xlat movabs fstp sbb mov sbb jge cmp (bad) mov push (bad) sbb adc lods subb rex.XB mov xorl jbe lret rex rex.XB jbe rex.WXB or pop cli jno movsb pushq rex.X rex.W xor negb xor outsb pushfq add pop fisubr sbb jno xchg xchg testl rex.WXB fstl xor lods mov mov pop sbb addl xchg jns stc add and mov adcl rex.RXB (bad) cmp data16 movabs test stos imul mov rex.XB rex.RXB loop or rex.WRX retq add cltd and (bad) add data16 pushfq retq loopne movabs and rex.WB out es pop leaveq pop cmp rex.R and (bad) (bad) or pop outsb and mov sub mov mov (bad) sub pop (bad) mov fsubrl rcrb retq mov add xor xor jns (bad) jb loope iret mov mov pop outsb hlt mov and rex.WX rex.WR movslq xchg lods xor mov repnz mov stos (bad) mov cvttps2pi (bad) js outsb adc adc int shrl pop retq xor retq rex.RB jb rex.RX push imul pop cli pop (bad) or lods jmp cmpsl mov (bad) mov xchg (bad) movslq (bad) outsb in rex xchg mov movabs (bad) stc sub (bad) test pop jnp fdivl retq (bad) movslq (bad) fsubl scas iret sarb jle push fnstcw lret pop adc iret rex.RB shl fdivrp stos and cli and stc (bad) mov cs lahf adc adc push mov push movabs pushfq xchg (bad) sarb jmpq xor imul mov add pop jae hlt rex.RXB shlb mov cmp mov rex.WRXB gs jle pop add loopne (bad) adc mov adc rex.XB mov and retq add jle sahf jge out imul pop xlat xchg (bad) xchg sar sahf jns js cmovns cli cltd retq imul retq jmpq push jno cmpsb rex.R loopne in shll lret loopne test sbb mov pushq xchg rcrb lods addb or fadds xchg add add mov pop jp imul cld mov test rex.X (bad) xchg fdivl add rex.R add xor movabs push (bad) (bad) data16 or push ds rex.RB sbb jge or in adc (bad) add mov test loope inc outsb pop minps test sub rex.WX ss mov mov cwtl mov rex.W (bad) scas cmp pop (bad) (bad) sbb out xor lods and mov (bad) (bad) (bad) pop mov rex.RB fwait rex.WX rex.RX rex.WR rex.WR cli out (bad) rcl sub lock (bad) rex.WX mov mov push sbb xchg rex.WR rex.RX lods pushfq mov rex.WX and rex.WRB in mov cmp roll adc jrcxz push adc jae (bad) and test add jb pushq xlat jmp (bad) jno (bad) (bad) pop (bad) jp cmp or in movabs pop outsb xchg test push mov sarb rex.R add jnp scas mov xchg mov insl cmp (bad) (bad) mov mov mov (bad) cltd mov add mov mov in in rex scas or retq sub rex.WR rex pop and or adc add sarb rex.WR rex.WRXB rex.B test mov imul repz movabs rex.B js pop xchg rex.WRXB push rex.XB or pop push sbb mov movabs rex.B rex.RXB or pop in adc enterq (bad) int3 int pop cltd rorb and sub int3 (bad) rex.RXB rex.B rex.XB sbb lods pop (bad) pushq rex.WXB callq fisttpll rex.RB rex.WXB or pop es and pop ja cmpsl rex.B push and lret rex.XB pop mov pop stos push nop pop and (bad) shrl mov cmp fisttpl shlb (bad) imul pop rex.WXB (bad) rex.B rex.RB cmp mulb rex.XB (bad) pop (bad) sub xor and pop rex.WX (bad) lret rex.R adc pop stos xor gs pushq rex.WRX rex.RB push rex.WXB rex.WX sub jne adc or iret or rex.RXB fiadd int3 jmpq rex.B lret in sub pop leaveq xchg rex.RB leaveq push or (bad) xlat test mov (bad) lret rex.XB enterq in xor out add jae add imul stc (bad) fwait rex.B enterq fistl or (bad) mov pop enterq jl cmp rex.RXB and fdivl and rex.RX outsl pop stos push rex.WRB sbb jb mov pop loopne jge lods add xchg loop add pop rorb rex.WRB pop fisub enterq (bad) jle pop adc xchg rex.XB cmpsl add pop test rex.WX rex.W fcomps or sub (bad) push pop rex.WR rex.WXB rex.RXB xchg out shr ror rex.RXB rex.RX rex.RXB pop movl rex.RXB rex.R rex.WB cmpsl mov rex.XB mov int3 cmpsl rex.RB rex.WXB push mov jne rex.RXB push rex.RB xor popfq rex.XB mov (bad) rex.WRB push rolb and rex.RB movabs rex.RXB iret (bad) xchg rex.XB rex.RXB (bad) jrcxz push pop rolb adc (bad) mov rex.W sub je movabs (bad) movl rorb mov rex.X rol andb orb rex.RB pop (bad) xchg adc xchg adc (bad) rex.XB cmp rex.B in or (bad) push jrcxz pop pop (bad) push rex.W rex.RX fadds leaveq (bad) rolb addr32 lret (bad) pop lea shll test negl callq shl cmp (bad) shl or js sub movsb fcomi mov sub mov rex.RB xor mov rex.XB (bad) rex.B rex.W pop rex.RXB and or rex.RB ds retq and adc rex.WRXB incb xchg rex.RX rex.WX ds or rex.W rex.WRXB (bad) nop rex.WX push and pop add rex.WX fcomps and or pop push push lea fiadd jae punpcklwd pop rex.RB repnz lods cltd pop rex.RXB rex.RB xorb (bad) rex.WRXB rex (bad) shrb js rex.WX xchg pop (bad) sub pop push pop pop rex movsl rex.RB mov push insl rex.RB rex.WX mov rex.WB fcoms mov rex.WRB push (bad) in cmp xor rex.RB insl rex.WB xor int3 cmpsb enterq in adc (bad) rex.W mov sub and rex.RX xchg add push jne cmpsb rex.WRXB mov sahf callq jle or pop xor sub adc rex.WRXB push or pop repnz (bad) xor pop rex.RXB pop ds (bad) rex.WRXB (bad) pop lret rex.RXB rex.RX loop (bad) pop mov rex.WRXB rex.RB xor rex.W rex.RX ftst push repnz cmp rclb mov push fchs sub in rex.X rex.W mov in enterq rorb mov pop jb push lea fucomp in (bad) jnp add rex.W movb add (bad) push jl adc (bad) rex.W push in and int3 rex.WXB (bad) (bad) ficom sub (bad) rex.WX ds fnstsw fisttpll rex.RX (bad) es mov pop movsb mov (bad) push rex.RB fsts pop xor pushq (bad) rorb loopne mov push rex.RXB and (bad) (bad) push (bad) and xor (bad) push xchg rex.RB rex.WRX es xor and sub and push cmp int (bad) pop rex.R rex.R sub rex.RX pop rex.WRX rex.RX rex.RXB rex.R push xchg rorb and cltd rex.W rex.RB mov rex.R enterq (bad) adc rex.WR sub pop push pop (bad) or pop andl xchg sbbl adc push rex.WRXB retq rex.RX (bad) push rex.RB fdivs pop rex.RX rex.RX rex.W mov rex.XB rex.WB rex test xchg rex.B ficompl pop sub rex.RB cmp (bad) pop (bad) rex.WRXB pop push (bad) lret orl idivb pop mov pop (bad) rex.WRXB (bad) push adc loopne push mov pop rorb (bad) rex.WRXB rex.RXB ja (bad) or js sbb iret (bad) (bad) pushq pop nop addr32 mov repnz rex.RXB rex.W sbb iret adc pop movl cltd retq add (bad) rex.WRXB addr32 clc pop (bad) pop and pop or fsubrl and rex.WRB rex.WRXB push ficoml or (bad) rex.RXB adc rex.WXB pushq add or rex.X fstps rex.XB scas pop iret fcmovb (bad) rex.W stc (bad) or pop push pop cld faddl sysret rex.WXB rex.RXB xchg ficomp gs iret fiaddl rex.W retq (bad) rex.WB rex.RX rex.WXB rex.WRXB push lods cmp rex.W xchg fisub (bad) fwait out mov push (bad) retq or xchg (bad) rex.WRXB push rex.W pushq rex.RX rex.WRX rex.RXB sub int add (bad) rex.WRXB rex.RB data16 adc rex.WB movl push (bad) mov and (bad) rex.B adc sub mov rex.B push add or pop pop mov test addr32 rex.W pushq and sub rex.W rex rex.WRB pop (bad) (bad) fsubrs (bad) (bad) (bad) sub xchg (bad) (bad) sub jp int nopl xor stc rex.B bswap jns,pt sub (bad) pushfq (bad) cmp fdivrs add pop addl fnop rex.W sub pop rolb test enterq ss mov rex.WR sbb or xchg (bad) push push es mov rex.W rex.W sub rex.RXB rex rex.WRXB rex.RB jns test mov es gs rex.WB sbb iret rolb push out out (bad) add rex.WRXB fnop mov rex.XB js (bad) mov xor js push and xchg and sub mov add out scas ror add retq rcr cmp cmc es (bad) retq (bad) (bad) add js vmovshdup xchg mov (bad) mov enterq rex.RXB adc (bad) mov rex rex.WX (bad) jns rcrl sub pop xchg loopne fsubs xor enterq (bad) xor cmp pop popq sbb rex.WXB rex.WB rex.WRB rex.RX rex.WRXB pop ss sbb rcrb (bad) scas sub (bad) and shll fwait xchg add rex.XB cli ficoml (bad) (bad) int3 data16 retq xlat (bad) pop (bad) pop rex.RXB cmp callq lret ds sub rex.WB rex.WXB sub pushq pop callq shrl es pop fcomp mov roll negb mov es push (bad) rex.X sahf add jne rex.W cmpsl (bad) and rex.RXB jne push push shrl iret rex.RX sub rex.RXB lahf and (bad) rex.WRB push rex.RXB and stc rex test movabs out xchg or rex.WRB push xchg xchg push pop rex iret int3 (bad) rex rex.RXB xadd (bad) lret pop lret rcrb rex (bad) pushq movabs rex.RB sub mov rex.B jp (bad) ficoml adc (bad) cmp rex.WRB push (bad) rex.B rolb xchg (bad) or xor cmp movsl sub cmp sbb retq add rex.WRB rex.WRXB push sbb or rolb fild (bad) sub ds pop int rex.WX or rex.R outsb (bad) rorb add rex pushq push mov incl pop movabs rex.XB pop (bad) mov or faddl rex.B jrcxz rex.WXB xchg fild cmpsl push sbb sarb outsl xchg rex.WRXB test movsl rex.WRXB fiaddl or rex.WRB data16 (bad) (bad) (bad) rex adc enterq sbb (bad) mov push add loopne fiadd mov rex.RXB pop pop (bad) rex.RX (bad) fsubrl adc pushq or (bad) fcmovnb fcompl js push rex.XB movabs rcrb rex.WRX rex.XB roll (bad) adc fs push (bad) cmpsl rex.RB retq rex.RXB data16 pop xchg fcmovnu rex.RXB rex fnsave rex.WR adc ja pop (bad) iret fcmovbe push (bad) fidivl rex.WX cmp (bad) pop sub lret rcrb (bad) adc roll (bad) xchg pop rex.W xchg rex.WXB fs rex.WR (bad) out (bad) cwtl xlat rex.XB rex.WX rex (bad) sub fcmovu pop pop js callq scas sub (bad) rex.W and push fsub sub (bad) jle rex.WR xor pop sahf rex.W rex.RXB mov rex.W xchg pop sub sar pushq faddp cmp (bad) rex.RX push es gs (bad) cmpsl and mov movl pop (bad) shlb cmc rex.R (bad) neg add (bad) adc sbb sub rex.RB es push cmp (bad) sub sub xchg (bad) pop xchg push rex.RXB rex.RXB fadd rex.RX rex.WRB rex.XB xchg movslq mov rex.WXB retq mov push jrcxz push rex.B cmpsl movb and rcl (bad) fidivrl rolb pop adc cs movl xchg rcrl rex.W fxch and pop rol jrcxz pop rex.B sub push (bad) or callq pushfq (bad) (bad) scas rex.RXB (bad) rex.RX rex.X (bad) add (bad) xor adc and retq sub pop xor (bad) or and rorl in (bad) lret rex.RB out rex.XB rex.RXB push push xchg rex.WRB mov (bad) and xchg flds (bad) rolb (bad) jo xor and data16 clc (bad) fcmove xchg push add pop sbb rex.WRB cmp rex.WX mov jmp push gs rex rex.RB cmp sbb push jae rex.WRB push rcll shrb (bad) rex.WRB rex.WRXB rcrl in adc push shrl iret pop adc (bad) addr32 roll add int3 enterq sarl sub (bad) rex.W out sbb add jp int or pop fimul ss rex.RB add pop shlb rex.WRXB rex.X cmp sahf cmc rex.X (bad) pushq rex.X rex.RB and movb cmpsl (bad) or sub mov scas rolb jge pop rex.XB jne xchg shr pop insb (bad) (bad) sub vmovapd xchg fisttpll add and rol (bad) in sub rex.X pushq test (bad) (bad) (bad) rclb cmp mov cmp rex.RX lahf faddp pop xlat (bad) je (bad) sbb retq iret xlat push movl rclb rex.RX xchg shll pop and xlat rex.WRXB rex.B rex.B repz lock cmpsl and movl (bad) rex.WB stos sbb (bad) (bad) lods pop shll lock sarb (bad) callq push flds mov rex.X adc rex.WXB rex.WRB gs sub pop pushq sub fmuls lret clc int3 pop (bad) cltd fsubp sub rex.WRXB rex.WXB adc js sub scas xor pop je fmuls push shl shlb test faddl cwtl push pop js mov xchg adc and rex.WXB fcmovnb rex.XB adc or xchg or adc movl (bad) (bad) (bad) callq fisttp je imulb push rex (bad) (bad) cmp sub int3 add rex adc push adc (bad) rex.WXB rex.WRB rex.RXB rex.WRXB fnstsw sub push mov cmp xor lahf rex.WRX test push jg ficompl push retq sub (bad) mov rex.WRB add adc push cmp movl rex.B (bad) pop shl rex.RXB push push rcr (bad) and enterq fiaddl rex.W sub or nop adc mov sub (bad) pop add fcmove (bad) push test (bad) sub rex.XB (bad) fmuls push rex.RXB rex.RB add rex.WRX (bad) rex.B addr32 push mov out (bad) xchg rex.RB shrl add lret callq rclb jrcxz enterq fsub (bad) xchg iret shrl not rex callq pushq (bad) xor push out callq outsl faddl mov or lret rol pushq rex.WRX int3 fs sub rex.R xor out mov push sbb cmp sbb enterq (bad) es int rex.WRXB push (bad) (bad) xor sub rex sub xor (bad) push rex.B lods (bad) adc fwait (bad) push rex.B rex.WXB notb fisubl fadd and vmovaps cli rex.W fcoml rex.XB and (bad) rex.R rex.W shll popq shlb pop (bad) in loopne (bad) rex.XB add rex.WXB pushq push mov subb loopne (bad) cli pop pop pop push (bad) fmulp pop int3 xchg and (bad) sbb or (bad) loope sub cmp add (bad) and lret rex.R rex sbb rex.WB callq rcrl cli fstpl rex.X int3 lods pop push (bad) rex.RB rex.WRB rex.RX retq pop fsubl rex.XB sub int or test add push (bad) rex.R rex.W mov (bad) rex.RB ficomp push fimul cmp ss and cmp int (bad) rex.WRX rol int3 xchg rex.WXB ja pshufw fcmovne fmuls rex.R (bad) pop sbb (bad) mov (bad) mov or fiadd int3 rex.W push (bad) shrl pop rex.RXB adc jo pop ffreep (bad) push rex.WX sub int3 mov pop shrl sbb rex.X rex.RB jnp sbbl or js sub neg pushq and out int3 paddusb mov enterq iret shlb movl (bad) pop push sbbb imull (bad) out rex.RB out rex.RX rex.X rex.RX (bad) (bad) (bad) enterq push or stos enterq (bad) pushq movsl pop iret sbb enterq cmpsb push stos (bad) rex.WRXB rex.X rex.RXB rex.WRXB rol sub rex.RX pop rex.RXB retq (bad) rex.WRXB rex.W es push mov rex.RX push rex.X int3 enterq fwait xchg loopne lret push (bad) xor rex.X cmp xor incl add (bad) add es callq (bad) fcompl (bad) fildll lret jg idivb rex.WR addr32 mov adc lret xlat js cmpsl sub scas sbb fcoms (bad) adc push adc testb cmp rex.RB out or xchg fwait push rex.RB rex.WX sub in shrb (bad) loopne std movsl push in fiadd retq rex.WRXB push pop pop sub sub scas xor movsl pop push mov callq ds fld sbb (bad) enterq rex.WRB rex.W rex.WRXB push rex.RB rex.WXB rex.WRB sub rex.RX lcall fistp mov xlat (bad) pop xchg mov shrl (bad) in mov rex.W push rex.RXB (bad) rex.RXB cmp int3 (bad) (bad) out xor js or test lods mov xchg sub fsubrl mov scas rcrl adc rcrl (bad) pop (bad) rex.RB xchg fisttpll xor jns xchg adc push sub sbb rex.WR fistl pushfq (bad) rol push cmp pop retq push rex.RX and rorb mov cwtl mov xchg (bad) cmpsl popfq add jae enterq fcomp rex.RX movl or rex.RX rex.RXB (bad) (bad) sbb (bad) jbe pop and (bad) cmp rex.W cmpsb xlat movabs rex.XB cltd push jne sbb (bad) test movslq rex.WRXB (bad) mov (bad) (bad) add and cmp sbb sub sub (bad) loop and (bad) sub cmp rex.WB shl ja pushq xlat retq push enterq mov adc mov repnz cmp rex.W jae mov (bad) pop lret fiaddl (bad) rex.WXB (bad) sub rex.R (bad) rex.W (bad) rex.RB (bad) rex.RXB outsb repnz rex.RB (bad) adc movsb (bad) pop pop movsl clc out (bad) rex.WXB add lahf pop fcom (bad) xchg cmpsl (bad) (bad) sub (bad) rex.WRB movabs int push insb add lahf rex.RX iret pop (bad) cmp addr32 xchg (bad) es in xadd push pushq rorl push (bad) rex.X lret lret push pop es sub mov es retq in rex.WR rcrb retq out (bad) in fdivrl (bad) (bad) rex.RXB rcrl in rex.RB fcmovb rex.W or out adc rex.RXB gs push not jg rex.RX rex.WB or shrl pop jns push rex.RXB push jnp adc pop (bad) fstl adcl pop mov (bad) rex.RXB adc (bad) rex.RX (bad) push sahf push add cmp rex es pop cmc fsubrs int3 pushq fcompl cmp andl rex.B (bad) and (bad) enterq rorb (bad) pushq adc (bad) rex.W add out and mov in pop (bad) xlat cmp int3 (bad) rex.WXB retq fsubs push iret adc fldl sub rex.W rex.RXB fisubrl es rex.WX movsb rex.X rex.RB fs pop addr32 cli and pop rex and in cmp in or (bad) sbb mulb fadd (bad) or rolb (bad) rex.W rex.WX es sbb rex.B rex pop xor mov lret or rex.RB fnstcw int3 sub pop js retq push faddl (bad) push rex.XB sub mov int callq push rex.B cmp iret cltd pop int3 and rex.WRB mov add push int xor movsb push (bad) rex.RXB rorl lods out rex rex.WRX (bad) or outsl (bad) retq pop push and orl callq and rex.X int3 pushfq and xor jrcxz lods fsub rex.RXB (bad) out add (bad) rex.RXB cli scas cmp (bad) rex.RX ds push xor (bad) rex.W test (bad) es sbb fadds rex.WRB rex.B sbb ss sub sbb push retq xchg rex.W (bad) popfq push rorb (bad) rex.RB fsubrl fimul sub (bad) int es adc and rex.WX rex.RX (bad) (bad) (bad) (bad) loope rex.XB rex.WR cs add (bad) mov ffreep rex.RXB pop and sti add (bad) add rex.B mov in imul push rex.RXB push add mov xchg es rex.WRB jne retq int lret (bad) sbb (bad) int mov mov fs and (bad) sub sar cmp rex.R jbe pop (bad) (bad) neg and and retq (bad) scas cmp jb and and out sbb fldl (bad) fisubrl (bad) sub add fmull fcomps insl pop rex.W xchg test divq cmp pop xchg scas mov rex.B mov retq xchg cmc or roll mov enterq or std xchg pop jl shrl retq or movabs (bad) out fmuls mov sbb mov or lahf rex.X es jmpq mov inc (bad) rex std jno iret pop sahf or test rex.RB pop cmp sti es pop jb leaveq callq and (bad) or rex.B add adc rex.WRXB (bad) or push stos (bad) adc add xchg lret pop nop cmp rex.W nop es rex.RX data16 rex.W pop retq fldl rex.RXB (bad) push shlb cmp (bad) adc (bad) pushq xchg maskmovq rex.RX rex.W rex.B (bad) (bad) rex.X pop (bad) (bad) push rex.WX push (bad) and (bad) or sub enterq es push rex adc out mov (bad) pop rclb and sbb rex.WRX clc xchg rex.RXB mov xchg add sbb retq rex.WRXB rex.RX (bad) xchg movabs ds cmpsb ss cmp rex.RB rex.B sbb fwait rex.RXB add sub xlat sbb fsubp retq (bad) (bad) (bad) (bad) rex.RXB sbb push mov push add es (bad) cmp xlat push or rex xchg shr jrcxz and fcompl in retq rex.B rex.WRX (bad) jbe sahf fcomps (bad) sub xchg rex.RB out testb rex.RXB cmp fbld xchg jb (bad) sub mov push fimul mov push (bad) rex.RB rex.RXB lods (bad) leaveq cmpsl mov pop retq (bad) (bad) rolb cmpps data16 (bad) push (bad) (bad) fxch rex.RXB mov or or push cmp (bad) or and (bad) rolb xor rclb mov pop sti ficom rex.WXB iret loopne cli rex.RXB or mov or xlat fadds sbb fimull add pop (bad) stc rex.RXB add sub (bad) xor xor (bad) scas or xlat in xlat test es or mov callq jnp ja out rex (bad) rex.RXB mov sub sbb rex.XB (bad) pop fstpl mov or mov push (bad) es rex.RX sub rex.RXB movsb (bad) shrl loop jrcxz roll (bad) mov pop es out rex.WXB adc sar pop andl adc xor fsts test ss pop xor js and (bad) int3 and data16 sbb (bad) mov sub fwait xchg (bad) rex.W rex.RX roll rex.W sahf insb rex.WR rex.B sbb stc sbb callq rex.RX movsb (bad) movl rex.XB cmpsl callq or rclb fcomps insb xchg push imul stos cwtl fmuls out cltd add (bad) rex.XB push rex.WRB mov pop push jp retq pop jne pop out rex (bad) std pop sub insb mov cmp test (bad) push retq pop fcom fcmovnb pop imul rolb movb pop pop rex.WXB sub push push sub pop cmp movslq rol cmpsb enterq fxch roll rex.RB rex.WRX rex.R adcl (bad) retq adc incl (bad) jmp rolq jrcxz pop loop mov sub sub push pop rex.WRX and rex.R fisttpll mov or sub (bad) add in pop add (bad) adc and jl sub sub ficompl sub int in fimull push rex.RXB sbb and push rex pop pushq fbstp movabs push sub push fisubl addr32 rex.RB jge retq ficoml imul push and (bad) sub (bad) (bad) in rex.RX (bad) js pop fsubl and xor sbb or or rex.WXB pop movabs or es enterq fstpl fbstp push movabs xlat pop jg rex.X cmp clc (bad) push push adc sarb es out subl pop shrl retq mov int3 jg insl (bad) or stc lret jo jle pushq js adc adc (bad) jmpq (bad) pop or (bad) sub or cmpsb sub jmp pop rcr (bad) fdivrl rex.X (bad) movaps sbb pop fstl pop movabs fnstsw xchg movabs shlb retq adc adc in rex std psubsb rex.X push sti rex.RXB rex.X cmp callq int callq sahf rex.WXB sbb int adc callq mov data16 rex.WXB and add rex.B sbb fisttpll (bad) jb rcr mov rex.X shlb retq gs int3 jno rex.WR movabs add leaveq sbb retq cld int add mov xor jg rex.RXB sbb push and jo pop mov add rex.X es out push mov (bad) (bad) (bad) negb (bad) xchg pop rex.WR rex.RXB push sbb push jle push pop xlat (bad) mov in pop movabs jbe iret (bad) (bad) pop out out rex.B movabs or (bad) ss (bad) mov fisttpll cmp xchg cmp (bad) pop mov add rex.X es rex sub test (bad) cmp test pop (bad) cmp loop xchg movb pop ja (bad) pop sbb and or add in retq enterq pop (bad) enterq sbb push and sti andb (bad) lods rex.WRXB sub xor ror and pop xchg add insl sarl (bad) es movsl test stos xor jbe pop mov jrcxz or imul rcrq fsubrs rorl push loop data16 cmp xchg test fmulp es imul rol (bad) (bad) test je rex.RXB shrb (bad) adc rex.WXB xchg rex.W rex.X and rex.RXB (bad) (bad) es sbb (bad) rorb cmp rex.XB and rex.WX fimull mov xor rex.WXB rex.WRB or mov (bad) rex.WRB mov sub rex out movb mov or cmp data16 rex.WX sbb rex.WRXB rex.WXB or hlt pop jp movslq add cmp rex.WR rex.R mov sahf rex.WRB int push sbb rex pop sub rex.RB (bad) pop (bad) push mov (bad) fadds (bad) (bad) cmpl fnsave pop (bad) rex.W cmp roll popfq (bad) outsl repz lret (bad) add (bad) out iret in xor jmp data16 pushq jrcxz (bad) fmul (bad) or (bad) xchg rex.RX sbb std int3 (bad) mov push pop faddp xchg (bad) enterq mov (bad) or rcr (bad) rex.W rex.RX lock mov (bad) pop sti xchg fisub rex.RB pop rex.WRB (bad) fcmovnbe (bad) xor xlat xchg sbb (bad) (bad) fwait retq rex.X rex.WXB pop test xchg sub (bad) pop int3 or rol sbb xchg xlat pop pop xlat pop pop mov leaveq push or (bad) fwait int3 jo xchg rex.RXB jno and retq scas xchg rex.RXB (bad) (bad) repnz (bad) popfq es fildl push xlat push movabs sbb movsb leaveq push fadd sbb rex.WX pop push cmp xchg rex.WRB mov sbb shrl and xchg loop rex.XB shll cmp (bad) add rex.WR rex.WRXB rex.WRB ds fidivr cmp and pop jle callq mov fstps fstenv (bad) push sar push rex.W leaveq lret or enterq lret adc (bad) cmpsb xor rclb rex.RB je mov and cmovs enterq and add rex.X lahf sar (bad) (bad) mov fs fisubl out (bad) push pushq sbb xlat rex.W rex.RXB rex.RB retq movabs movsl in and add int3 stos rex.WR rex.RB sbb sahf int3 adc jne push (bad) push rolb shll xchg rorl lock push mov xchg int sahf cmp out pop mov cltd add rclb sub mov fcoml (bad) cwtl add sti push sahf mov rex.B pop fsubp push mov (bad) fmul pushq (bad) mov (bad) shll fstps cmp rorb test pop add movslq pop jnp (bad) cwtl rex.RXB xlat movabs mov mov cmp sbb movabs insb (bad) rcrb rex.RX retq (bad) add rex.R push adc or movabs cmpsb ficomp movslq movabs fs (bad) rex.WR rclb rex.WRB rex.RX rex.RX cvtpi2ps enterq retq (bad) mov fsubl test (bad) movb movabs fld rorb xlat faddl mov push push pop jmpq xchg pop rclb rorb jno xchg cs (bad) xor mov hlt rex.WRX out rex.W adc out push cmpsb rex.WRXB rex.W fsubs rex.X rex.WRXB adc cmpsb std ja fiaddl xchg rex cmp test sub (bad) es pop loopne xchg push or or (bad) lret (bad) rex.RXB fnstenv hlt push int3 pushq incl pop or callq rex.RXB retq mov xchg fnstcw push rex.RXB rex.RXB sti callq (bad) jb fcomps (bad) or rex.WXB sub mov pop rex.WRX fcompl push (bad) and sub or movabs (bad) xlat pop rex.WRB rex.WRX stos sub movb jmp fildl addl xchg pop cld lea (bad) testb fs std and (bad) xchg lret pushfq faddl mov fisttpl rex.RXB in test in out rex.RXB or movabs or xor xchg popfq (bad) mov sub and fild xchg (bad) xchg popfq (bad) push (bad) push hlt jne addb push outsl and je int3 retq (bad) push mov (bad) fisttp xlat (bad) (bad) rex.RXB je pop sbb or leaveq fcmovnu cmp pop cmp rex mov add sub shll sbb sbb fsubs fwait (bad) (bad) push push rex.XB jl (bad) xlat rex.XB xorb add rex.RXB rex add (bad) (bad) test push rorb add roll jmp hlt pop and rex.RXB popfq cld fsubr mov pop movslq rex.W fs rex.RB fcoml (bad) rex.RXB fs testl ds sbb cs test (bad) rex.RX rex.B pop int3 (bad) ficomp rcl (bad) insl rex.RXB or sarb (bad) in mov leaveq mov push (bad) addr32 lea (bad) test pop rol addl (bad) (bad) add mov xchg rex.W push movabs rex.RX jle pop xor test in rorb push rclb mov (bad) push pop (bad) rex.X sahf int rorl rex.RXB and rex.RXB (bad) xlat rex.RX xchg pop sub lret repnz imul iret test (bad) movabs pop xlat push (bad) xchg xchg out (bad) mov (bad) out push xor (bad) sbb pop jno (bad) or (bad) or sub jle rex.X outsl (bad) fs sub cmc xchg sub mov stos (bad) enterq pop cmpsb rex.RB sub pop stc xor add cmp lret ficoml or mov pop js movabs (bad) mov cmp sub ror rex.RXB rcll pop (bad) movabs fcom sub (bad) xor mov movslq (bad) sub sarb (bad) push xchg rex.R sub cmp cmp rex.RB frstor rex.RXB pop faddl rex.X es rex.WRB mov (bad) pop mov outsl push ss rex.B fsubl jo sub cmp movsb retq sub retq out testb stos jb add rex.WRXB push add pop fcmovnu (bad) push (bad) cmp jp xor xchg xor jae add int cmpsb rex.RXB cltd and rex.RB cmp xchg (bad) enterq fmuls rex.WX fs rex.WRB sub and rex out add mov rol sub retq dec adc (bad) (bad) (bad) enterq (bad) add rex.R roll (bad) (bad) loop icebp (bad) repnz rex.RXB out outsl (bad) xchg (bad) (bad) (bad) adc movabs sub callq stos and rex.B rex.RXB (bad) and jb retq callq (bad) (bad) push ficomp scas lret ror sub out fsub es int3 rex.WRB jne (bad) rex.WR js mov pop retq (bad) and pop fbld adc cmpsl vaddsubps test jmpq sub pop sahf (bad) negb enterq pop movabs callq (bad) sbb movb rex.WX (bad) mov xchg rex.WB adc pop addr32 xchg addr32 xchg rol insl and rex.WX rex.RXB or addb xor pop sub xor or push mov fcoms mov retq enterq stos leaveq (bad) mov push adc rex.WXB rex.XB rex.X scas rex.B xor rex.R adc adc pop cmc (bad) adc (bad) retq faddl xor push in sub pop push pop push rcrb (bad) (bad) pop pop cli xlat pop rex.WRX pop sub rex.RXB or cmp add lret rex rex.RX push or rex.RXB pop (bad) sbb rex.RX mov xor out pop (bad) lret (bad) sub push rorb lret (bad) mov (bad) negl push mov rex.X (bad) rex.RX pop movsl fistl sbb fcoms (bad) fnstenv retq sti mov jae mov mov insb enterq ficom rex.X rolb cmp callq pop lret jnp push pop fadd pop adc adc stc ja loopne rex.WRX clc (bad) dec rex.B sub out push rolb xchg sbb push fsub rex.WRXB sbb (bad) jne add (bad) fst push sub mov pop rex.RXB or rex.RB rex.RXB and push rex.W add fisubl (bad) rex.RX rex.WRB rex.RB xchg push out or push fnsetpm(287 push (bad) rex.XB lea pop cmp (bad) pop or (bad) pop cmp fcomps rcl in sbb fs jg and or andl fadds rex.WRX (bad) lahf addr32 in movabs (bad) (bad) jle adc jo sbb rcrl nop and rex.RX sub xchg (bad) shl mov push jbe adc or xchg mov (bad) sbb test rex.XB jae and rex.RXB cs add (bad) adc (bad) (bad) rolb rolb retq xor or mov (bad) rex.W or rol and xorl (bad) leaveq rex.WB fdivrl rex.WRXB sar sub adc (bad) orl pop movslq pop loope jrcxz add and (bad) lahf movabs pop push int3 rex.WRXB sub rex.RXB iret test outsl add int3 cmp cmc and test in (bad) cmp cli sub add pop iret push mov pop and pop adc decb rex.W rex.WRXB push pop xor fimull rex.R rex.WRB xchg rex.RXB mov ja (bad) sbb fdivrl retq (bad) testb testl push leaveq push mov add pop mulb fidiv mov rex.RXB lods pop sbb ja mov pop popfq je rex.RB je movsb rex.RX rorl xor sbb fneni(8087 test rolb cmpsb xor push (bad) scas cmp gs cmp push (bad) sub push cmpb mov pop rex.WRB stos mov pop rex.RB scas adc rex.RB pop lahf in (bad) rcl fidivr rex.RXB neg test cmp adc movabs int3 lods retq xor fwait pop sahf (bad) pop and rex.W pop (bad) rex.WRB rex sbb cmp (bad) stos and (bad) stos fst pop xchg iret rex.RB rex.RXB fs or xchg rex.RXB (bad) test movslq pop cmp pop rex.W retq rex.R cmc push sub outsl (bad) push insl int3 es popfq pop push rex.WRB push ficom rex.WXB mov outsb rex.X (bad) (bad) lret pop jbe push rcrl fildll movslq jp or push add adc mov retq rex retq (bad) push and (bad) cmpsb xor cmp (bad) push (bad) pop xor sub sub (bad) adc rex.R rex.RXB fild xchg (bad) sti rex.RXB (bad) adc int3 pushq out rex.RX sub xchg rex.RX iret test (bad) (bad) push add out scas pop mov rex.WRX rex.WRB sbb fmull fcmovbe rex.RX rex.RB fiaddl enterq pop (bad) hlt pop movsb cmp rex.WXB pushq test (bad) mov and pop rex.RXB outsl xlat (bad) test xor cmpsl jge (bad) rex.RXB ss fisubl ja rex.WRXB rolb leaveq pop movabs push lea (bad) (bad) pop and rex.WRB mov mov cld (bad) insb (bad) hlt push (bad) (bad) xor fsub iret leaveq outsb xchg rex.RXB repnz jmp rex.B rex.X or sar push incb cmp adc push (bad) rex.XB sbb pop mov rex.WR rex.B ss vaddsd (bad) (bad) pop out rcrl lahf mov test fisttp xchg (bad) (bad) in movabs pop adc adc rex.RX rex.WR rex.RX sar jg sbb rex.R rex.RXB and sti rcll es in fdivrs rex.RXB rex pop sub sub fisubrl out push sbb scas rex.R movabs mov push pop push adc or add sub cmpsl rex.WRB rex.X or push rex.RB jae sub mov jne jrcxz test test int3 sub push push rex.RX rex.RX and rex.RXB adc and xlat pop loopne (bad) mov (bad) outsl mov xchg rex.RXB (bad) in mov rex.RX mov jae fistp add out callq (bad) pop adc rex.WRX mov cmp pop cltd iret sub sbb rex.W rex.XB adc vsqrtpd pop rex.WRXB rex.XB pop insl and and or pop popfq xlat pop pop xlat jle lret and xchg gs rex.RXB (bad) rex.RXB movslq xlat (bad) push rex.XB sbb fcoml push ss rex.WRB mov (bad) jo sbb loopne mov cld rcrb cltd pop retq jg xor hlt pop and rex.RXB test push (bad) (bad) (bad) in sbb or push xchg push iret (bad) push add and fldt rex rex.RXB (bad) rex in es pop rex.W jnp and xchg pop movsb sub push jrcxz pop iret test (bad) mov (bad) out jbe rex.XB pop movsl (bad) push mov push (bad) (bad) add ja cmpsb xlat ja cmpsb fcomps sub es sbb rex.RXB sub lret xor pop (bad) pop rex.B push sub shrb (bad) cld push push (bad) (bad) rex.WRXB rex.WRX rex.RB xlat pop mov cmc roll pop adc (bad) rex.RXB rex.XB mov (bad) xchg enterq rex.WRB push push xlat rex.WRXB push std mov rex.WRX or movabs repnz rorl add leaveq rex.WRB rex.XB rex.WXB fistp mov (bad) (bad) push fcoml test fnstsw or rorb (bad) xor rex.RX rex.RXB xchg rex.W test shrl fsub xlat push (bad) pop sub lods rex.B (bad) xchg rex.RXB mov test and test rorb mov mov (bad) sbb faddl push pop ss (bad) callq rclb sub mov shll fdivs sahf rolb xchg rex.RB (bad) cmp stc not (bad) push rex.X rex.WRB rex.R fstps cmpsb rex.W stos push retq ds (bad) es scas (bad) (bad) enterq (bad) jno (bad) adc mov (bad) fcmove push rex.WRXB xlat push sub xchg rcll lret hlt rex.X sub mov addr32 movsb or rex.WRXB movabs or sbb mov (bad) push rex.WRXB rol rol loop pushq lahf adcl popfq or (bad) (bad) ds and pop sbb addl test (bad) adc rex.WX mov jl or fcompl (bad) xor (bad) movslq rex.W rex.RB sub nop (bad) fsubrs xchg (bad) jb push rex.R rex.RXB sti movabs fs (bad) hlt (bad) insb ficoml rex.X rex.WX cmc cmp (bad) push (bad) sub mov jmp shlb (bad) rex.RX adc mov and rex.RX fildl ds sub rex.RB fisub rorl cmp movslq and pop pop push and enterq add (bad) or and fwait push pop test push fadds pop (bad) rex.RXB push jnp fsubp push or xlat push lahf pop push sub cmp rex.R pop popfq (bad) push push enterq pop sub int3 sbb push and decl rex.WR or inc retq and pop pop hlt (bad) rex.WB jl fisttpl int3 add movabs (bad) pop in xchg lret add pop stos pop jmpq in (bad) rex.WB fsubr insl jb (bad) mov lret cmpsl test adc jnp (bad) ja xor cltd repz iret rex.WB add stos rex.RX rex.WRB fisubrl imul rex.WB push adc (bad) rex.RX and mov add jno cmp movsb std adc add push fnstsw gs cld pop enterq rex.WB adc loopne (bad) callq sub and pop mov jbe scas mov mov rcll callq jnp push (bad) jns sub jb iret xor push push mov jmp add jno out or pop (bad) jp movabs repz and jb lods stc and mov or lahf (bad) lock push xor mov rorb and jne fldl xchg scas cmpsl jrcxz jge retq faddp add test outsb lock repz (bad) sbb movabs in pop lret int3 sbb adc push xchg (bad) push in (bad) sbb pop int3 sbbl rex.WX pop dec rex.W (bad) rclb int3 pop sbb sbb retq pop or rorb (bad) (bad) push in (bad) fwait push sahf int3 sbbl or loop (bad) (bad) in (bad) rcll int3 (bad) pop jae pushq sub (bad) fs in pop adc fdiv (bad) sbb sbb addl rex.W add (bad) or (bad) (bad) adc int3 (bad) sbb pop (bad) (bad) pop in (bad) retq lods rex.X rex.XB pextrw pop sub jbe rex.RX sbb xchg xchg rex.W push in (bad) rcll int3 or add (bad) (bad) ror movabs push and pop (bad) flds sbb shll (bad) test in (bad) (bad) push ror (bad) cmp addl rex.RXB pop rex.W (bad) add (bad) adcl push lods add and or int3 rex.W (bad) push xchg int3 rcrl push and (bad) in movabs sbb andb ror push sbb push (bad) (bad) sbb fidiv adcl and (bad) retq in (bad) (bad) push xchg or fild xchg rex.W sbb pop (bad) pop push pop int3 ficomp shlb (bad) (bad) rex.W or pop lret int3 mov adc rol xchg xchg (bad) xchg in (bad) sbb sbb mov or loope rex.WXB and (bad) (bad) shl xchg (bad) (bad) push pop int3 cltd sbb and rex.XB pop mov rorb (bad) (bad) (bad) in (bad) fnop leaveq add rex.WRB (bad) rex.WRX orl add movsl adcl pop and (bad) (bad) add rex.WRXB xchg jg insl (bad) mov xchg rex.RXB rex.W lret rex.X int rcrb mov rex.WRX xor (bad) rex.W (bad) xor xchg sub rex.B rex.W rex.WB rolb fdivrp fildl (bad) rex.W sbb push loope xchg movsl imul cmovae rex.RX rex.W xchg (bad) rex.WRB test sbb rex.RXB and fild xchg sub (bad) pop rex.W (bad) fwait push sbb push sbb and int (bad) mov pop jno add enterq mov and (bad) rex.WB and insl lods pop (bad) pop and pop (bad) fcomi or stos push (bad) xorl fisttp xchg rex.WB iret fdivs pop movslq addl rex.W pop (bad) mov and mov xchg je and rex.W out cli int3 (bad) sbb xchg (bad) enterq cmpsl push retq sbb and xchg out and int3 fcmove rex.R xchg rex.W (bad) mov lods sbb mov stc or jnp xor (bad) adc (bad) addr32 rex.RB rex.X jg jmpq rex.W rex.RB bnd (bad) test mov mov pop test vandpd in stos or negl or movabs mov pop jl mov sarb rol cld movsl lea ss xchg xor rolb (bad) shrl je sbb jns add out (bad) push movabs in (bad) push rcll loopl stos and lret pushq (bad) rex.WXB es rex.RX scas shl std jmp js cmp rex.WRXB test fldenv mov pop push (bad) jg retq pmullw clc fstpl sub mov jb lret js imul (bad) insl test and movabs scas stos shrl mov fwait rex.WB fcomip shr (bad) cmp push mov jp pop sub sub lods cmp rcll or (bad) push scas imul mov repz cld cmp test rex.WB fadd adcl jp rorl in loope (bad) movsl retq std rex.B fcmovb loope rex.X and or (bad) sti pop and rex.XB mov xor pop adc jno movslq cmp jrcxz sbb rex.R icebp outsb or sahf push rex.WB adc in mov add sub out rex.WRXB nop outsl loope out test rex.WRX (bad) pop xor callq out jge cld rex.XB rex.B cmp jp xor and pushfq cltd loopne rex.WRB jbe xchg div hlt pop xchg jmpq rorl mov rex.XB and rex.RX repz mov fcompl mov rex.WB (bad) xchg loopne fildl pushq cmp test rex.WXB jl pushfq lea xchg int3 jbe jge retq mov cltd pushfq jg popq or adc mov xor (bad) sbb fs sub sahf push out xchg xor mov xchg mov clc cmp scas xor fs pushq stc mov pushq (bad) xchg rex.WRB (bad) callq cmp hlt push rex.WB mov xchg cltd add sub popfq je cmp (bad) rex.WB lods rex.RB stc jae rex.X fwait sahf vcvttss2si mov movabs pushfq add retq ss pop cmp xor mov jo fmull rex.RXB (bad) scas shll imul or mov rex.WB lock cwtl iret jl icebp sub out mov test movl xchg xchg jne fsubrl sbbl fiadd sbb mov (bad) cmp js loopne cmpl lahf or (bad) sub push lock sahf rex.WB mov push imul or xor popfq rex.WRXB (bad) sbb rex.WB lods in (bad) fs (bad) loopne rex.WXB rex.WB callq fildll mov (bad) jg movslq push sub jne cmpsb adc mulb out stc (bad) jb (bad) xchg or mov mov pop rex.WRX xorps (bad) nop fwait cli test (bad) rex.WB ds cmpsb push adc add jbe push movabs xchg cltd xchg fs pop rex.WB in shrl movlps (bad) (bad) (bad) cld jbe rex.RB sbb fwait shl push subl xchg adc pushq push rex.WB out adc frstor xlat push jo out rex.WB and in pop out pop rex.WB pop scas fisubrl cwtl push sahf and gs xchg fcoms push cwtl cmp (bad) cs cli xor ror mov iret (bad) jle mov xchg (bad) in (bad) adc mov add ficompl pop mov sbb in rex.WB fwait push or sub insb out (bad) (bad) sub lret rex.WRX int3 and sub jnp div cmpsl cmp add outsl (bad) cwtl and (bad) rex.WB outsb in (bad) fdivp enterq jp lahf loope callq push jg cld rorb add clc rex.WXB mov mov lock xchg sbb or movsl mov adc fwait imul mov rex.WRXB mov ss mov pop add jmp xchg imul rex.WB sbb stc add rex.WB xchg test (bad) test rex.WB push mov pop (bad) rex.R callq pop push cmp mov xchg rex.WRXB xchg (bad) in add rex.WB test (bad) popfq int3 rex.WXB rex.X rex.WB or lods pop loopne fldenv rex.WR xor movl jb jg mov mov repnz rex.RX adc stos fcoms jmp retq movabs iret movabs sub cmpsl jo (bad) pop xchg shrb xchg jnp push jle ja rcrl push (bad) (bad) rex.X rex.WB rex.RXB or adc adc fcomps pop rex.WB xchg xchg movabs jg add xadd and test rex.WRB xchg rex.RXB test rex.WB out fidiv sub rex.RB rex.RX xchg xor and pop push jne pop adc (bad) data16 sarl test and add int3 mov push mov jo retq (bad) mov rex.WB add or fmuls cld int rex.WB jle push pushw and rex.XB rex.WRB movsb add rex.WB fnstcw sub js fmul sar mov iret fisttpl push rex.WR mov imul sahf lret rex.WB scas add (bad) movabs (bad) sub xchg clc (bad) sub sti lahf gs push callq rex.WRX (bad) (bad) (bad) rex.R adc lock rex.WRXB jno xchg or adc leaveq rex.WB fcmovne sahf movabs in xchg (bad) xor mov rex.XB decl or in clc jp lods and pop pushq sbb test xchg pushq mov (bad) and xchg leaveq sub (bad) mov std adc adc cmpb jg rex.WRB callq rex adc xchg data16 pushq rex.WB in xor cmp sbbb insb movabs cmpsl mov (bad) or mov xchg repnz rex.WB sbb jb mov (bad) cmp (bad) lret rex.X movb enterq in pop adc sbb pop js rex.WRB retq lahf hlt rex.WB repnz gs xchg cs or rex.WB rex.XB (bad) scas pop rex.WXB fs int rex.WB jno rex.WRXB (bad) push rex.WB cltd add callq popfq int mov test cmp in rex.RB pop (bad) pushfq jo xchg lret jge int3 adc and rex.W push cmpsb insl test jb adc rex.WXB rex.X xchg mov loop sbb (bad) andl movslq mov push sbb sbb and mov sub (bad) retq enterq xchg rex.B sub in hlt sbb (bad) xor clc adc (bad) (bad) out imul xchg xchg pop or rex.XB pop (bad) mov rex.WRX mov pop pushfq pushq xor cmp push (bad) cmp rex.WB test lock fcmovnb or out int3 xlat pop pop (bad) movabs (bad) add rorb rex.B or retq sub xchg (bad) decb mov repz outsb rex.WRX mov out pushfq jb std cld cmp jge and mov sbb rex.B adc and sahf rex.WB std loopne rclb jmpq (bad) cmp rex.WXB sbb rex.WX data16 sbb or rex.WXB retq enterq or stc fist rex.X cli jnp outsb add xchg in subb xchg (bad) cmp (bad) test fsubrl mov rex.WXB jno mov and xor std adc push xor (bad) fs pop rex.WRXB repz mov rex.WXB add (bad) xor mov outsb sub push xlat jno cwtl rex.WB addr32 jl (bad) and rex.WB xchg rex.XB (bad) rex.WX callq sub rex.WB out data16 mov rex.WB fwait test jae xor rex xchg rex.WRX ja adc rex.WR imul nop movabs (bad) xor cmc stos mov (bad) test or (bad) je sahf sti movabs insb pop push sbb movabs vpmaxud pop sbb fnstcw and cmp retq outsl xor rex.W stc pop (bad) cmp ds lret sbb fsubl (bad) jo icebp scas push leaveq jnp (bad) fistpl xor xchg pop cmc out rorl movabs jg rex.X jae fmuls push sub sub xor cmp stos cwtl xchg cli (bad) rex.WRB rex.WRB mov pop add push or mov sbb mov out adc pop cs cmp pop rex.WB rex.WRX rex.WRXB sbb rex.WB loope add jne (bad) rex.WB jbe cld mov scas icebp rex.WRXB (bad) sub repz in xchg (bad) sub adc imul (bad) or rex.WB (bad) rex.R repnz sbb cmp (bad) xlat int sbb enterq push or jno (bad) ss (bad) (bad) pop lret mov push cs pushq stc pop or mov shl sub jmp (bad) orl sub xchg pushq (bad) jl (bad) icebp mov mov movl cmp movabs rorl sub sub divb jns sub test mov pushq (bad) cmp rex.WB ss and lret add rex.WB pop js cmp push add retq fnop sub outsb xchg rex.WB pushq sub jae cwtl rex.WB iret in rex.WRX gs xchg (bad) shll add sbbl cld pop jmp xchg enterq mov mov or jp or (bad) jp rex.WB jno (bad) movabs pushq rex.WB (bad) jae (bad) sbb sbb callq movslq pop sahf pushq mov (bad) or fsubr or mov mov and (bad) test lret xor mov pushq xor pushq test rex.RB xchg enterq fsubs xchg in scas hlt rex.WB sub rex.WB pop jo jne cmpsl outsl rex.WB nop in (bad) rex.WR mov (bad) sbb jb retq movabs xchg (bad) push rex.WXB pop cltd (bad) xchg rex.XB movabs add outsl ja rex.XB (bad) rex.X jae (bad) (bad) enterq adc xchg outsb jbe mov pushfq add test add (bad) rex.WB ffree pop cli out jo add adc fnstsw mov rex.WRB rex.X (bad) movabs sub add gs insb pop movabs adc adc pop jmp out cltd rex.WB rep jne xchg rex.WB rex mov pop sbb std test xchg jle jbe mov adc xor rcrb sarl xchg rex.WB or jbe orl adc mov sub pushq xor mov and shll xor sub mov push callq sbb lahf xchg mov in ds cld push push stos (bad) addr32 sub mov xchg xrelease rex.WB jge (bad) pushq xor lret in xchg sbb es out test rex.XB rex.X (bad) or repnz out pop push jns push stc rex.WR clc xchg rex.WRB pop shl (bad) rex.WB (bad) or and or cs imul rex.X pushfq push fbld sti pop jne mov cltd mov (bad) or mov loope stos push je sub (bad) mov hlt pushq cmp movabs push mov (bad) fldenv mov hlt pop push and sub movsb ds mov rex.WB cld add rex.WB movabs xor cld rex.WB xchg int push xchg xchg in iret test rex.WB cmp mov jb cli enterq rex.B sbb rex.WB retq stos rex rex.WB adc cmp rex.XB rex.WB int3 (bad) (bad) roll callq xchg push cmc adc xor xchg icebp push rex.WRXB or lods (bad) sti mov je decl sub outsb repz icebp (bad) add gs rex.X sbb jge add (bad) pop push rex.XB sub pop mov adc push callq in movabs xor xor (bad) addr32 pop sbb sbb xchg idivb lods sub cwtl in or mov insb or lret rex.WB xor mov movslq pushq mov pop adc lods mov jo (bad) movslq or rex.X fdivs out pop nop rex.RX jne retq (bad) jge xchg (bad) jle cmp leaveq jns add adc cmp (bad) rex.XB cmovns (bad) int3 and callq movabs xchg repnz cld and gs jo (bad) shrb push push mov mov imulb pop rex.WB cld loope add (bad) rex.RX gs rex.WB (bad) callq adc pop rex.WB jmp adc std vmulss xchg lret adc lods xchg jl and jmp rex.WB adc xor cmp sbb add cwtl or cmpsl vmulss shrl (bad) pushfq popq rex.RB orb cs or and out rex.WB (bad) out (bad) (bad) mov sbb shr movabs insb mov pop mov (bad) rex.B add cmpsb hlt fs pop or lret add retq and mov xorl jl mov jge scas test movabs push adc mov pushq mov jg (bad) jl (bad) cld lret incl mov adc (bad) in cli cmp je sbb ja jrcxz (bad) data16 es loop push (bad) icebp rcll sbb pop rex.WB imul lea rex.RB add loopne fisttp xchg rex.WX adc (bad) and (bad) xchg test xchg movslq cmpsb (bad) int ds test (bad) rex.RX gs (bad) rcl data16 pop push sub (bad) push (bad) sub rex.X mov add (bad) jrcxz rex.R cmp lret mov mov jrcxz (bad) sbbl mov addr32 outsb xor lods gs es (bad) and sbb sub pop repz adc cmpsl jnp add test rex.XB mov loop test and rex.WB rex.W fwait jne outsl repz int3 push rex.WB or jbe (bad) jl lret pushfq or fisubrl pop add in jne cwtl test xchg or rex fadd callw push pop add push cmpsb lea fstpl stc rex.B lcall movabs pop rex.WRB fimul rex.WRB jp xchg rex.WB addr32 mov sub jge sarb in (bad) or rex.WX (bad) rex.WB (bad) fnstenv or sub (bad) in sub pop (bad) sub push (bad) xchg cmpsl (bad) or mov xor mov movsb (bad) fwait sub rex.WB rex.WRX out nop xor hlt xchg sahf cmp add jg movsl mov sub cli (bad) outsb js mov outsl rorl mov rex.RXB shrq fsubrl cli xchg (bad) xor or rex.WB fisttpl sub sub insb rex.W fs rex.WX push (bad) callq mov rex.WB ds in mov lret int xchg test lods rex.WB rex.WRB repnz sub jnp rex.WRX gs rex.WB lret cmp adc xlat insb rex.WX sub jmpq push xchg xchg je lret xchg cmp rex.WB mov rex.B xchg (bad) rex.WB rex.WXB mov sbb rex.XB rex.WRX or rex.WB test add imul xchg gs (bad) jg (bad) pushq out fwait xchg pushq lret xor mov cltd xor sti pushq (bad) or xor outsb fldenv retq gs lahf pop push iret sbb fldenv ja pop rex push xchg test (bad) sbb pop pushfq pop rex.B jne cmp subl hlt or ss movabs rex.WR mov outsl in (bad) js sbb rex.W movsb xchg xchg mov push lods rex.WB outsb rex.WX clc rex.WB and rex.W (bad) add pop pop test lea sub adc jae imul incb test rex.RX xor (bad) cmp push (bad) rex.WB add mov (bad) testb rex.WB rex.R xchg xchg movabs rex.WB jb movabs cmp push test movslq mov sub scas mov mov shrb rex.WRB or mov gs push (bad) add add stc rex.WRX or mov rex.X rex.B xchg test rex.WRX push movabs sub movslq and scas jmpq push clc and cmc mov mov (bad) cmp fisub lret pop xchg nop rex.WXB sahf (bad) stc xor sub ja rex.WB in popq jno cmp pop out or movabs loope pushq imul mov callq mov rex.WR mov rex.WB outsl lret shrb pop movsl (bad) test callq or (bad) rex.WB mull enterq (bad) rex.WB (bad) or rex.WB (bad) retq push test cmp fs js pop cwtl mov xchg (bad) (bad) rex.B (bad) enterq (bad) js lock rex.WX mov test push push jmp in jno (bad) movslq rex.WR test (bad) push rex.WB pop pop jmpq mov sub push rex.WB jmpq jge (bad) (bad) push movabs xchg movsb (bad) clc (bad) rex.WXB test leaveq in out test mov movabs mov push pop popfq mov shrb (bad) out je mov (bad) xor sub (bad) pop xor lea xor out fstps sub lahf rex.WXB es test or xor (bad) test fnstsw cmp test lahf rex.WX sub cld (bad) and repz (bad) (bad) cld loopne (bad) (bad) (bad) (bad) (bad) (bad) repz (bad) icebp xchg out rex.WR (bad) add add jae and pop xchg rcl (bad) or add add movabs (bad) leaveq test (bad) movabs int xchg mov scas mov (bad) jne add mov out mov jrcxz push cmp xchg lahf fcoml sti loope imul (bad) (bad) mov or je test es or and stc out mov shlb xchg addb adc mov pop cmp (bad) (bad) mov cld je test (bad) pushq test ja or lahf rol pop clc mov jne and (bad) xor cmp pushq xchg mov stos sbb (bad) (bad) (bad) cld test (bad) (bad) (bad) (bad) mov movabs push fnstsw mov loopne jl scas fisttp es cmp stos scas in mov (bad) rolb ss mov (bad) lock adc cmpsw fdivl scas outsl fs in fstl sbb jmpq cmp lahf iret add add jb,pt rcr sti jmpq sub adc sub jns jno mov je subl (bad) cmp sub add mov imul lods mov xchg fcmovnb jne cmp stc movb bt clc bt bt test jmpq jmpq pushq jmpq jb retq jae jmpq jnp rex.X scas js movabs lods xchg (bad) clc mov xor es cmp xchg imul cmp cwtl rex.WB (bad) (bad) std jp mov mov pop adcl or (bad) (bad) out mov test add (bad) (bad) rex incb mov (bad) roll (bad) (bad) std cmp add sar (bad) (bad) lcall test adc sahf or jmp (bad) jle ffreep in xchg stos (bad) fucomi rcrl jne stos mov or add (bad) (bad) mov icebp ficom xlat (bad) mov seto lea bswap mov setge setp setno lea jmpq jmpq ja adc jmpq jne movsbq xor stc mov neg inc shl shl add ror shr rcl mov jmpq jmpq jne jmpq push or (bad) cmp (bad) movabs pushfq fisttp sub lret mov rex.WRXB pop xchg xchg loop ja and rex.XB icebp mov movabs sub xchg lods xchg fsubr rolb mov push pop mov rex.WXB lret out push rol pushfq xchg (bad) sbb hlt sbb add js xchg sbb (bad) (bad) or adc push (bad) out (bad) roll insl xchg cmpsb xlat xor callq fisub (bad) (bad) (bad) cld (bad) cld divb jle (bad) (bad) (bad) je mov rex.R push repz adc pop push rex.WRX mov (bad) (bad) (bad) push stc mov xor lret (bad) test jmpq addr32 jno (bad) mov test sub movabs mov jnp (bad) repz (bad) jg jl cmp mov mov sub repz (bad) icebp mov add loope xor mov jne mov (bad) repz mov andb pushq iret movsb (bad) negl repnz sub jg cmpl je in (bad) loop mov (bad) xor (bad) jg movabs cmpsb (bad) rex ds (bad) (bad) std add (bad) stos (bad) (bad) (bad) callq cmp icebp lcall ja imul loopne insb xchg mov jmpq jbe rex.RX mov add add push pop int fdivrl cld fcoms je stos js rex.R in rex.RXB roll or imul or je fbstp lret enterq or rex mov hlt mov mov (bad) (bad) clc jmpq jmpq jb test cmp jmpq shr mov bt stc test jmpq jmpq jmpq rex.RXB jg xchg (bad) cmp fidiv retq rex.RXB fisubl sahf rex.WXB jp jo lahf (bad) hlt lock jl ficompl stc lret (bad) (bad) fisub retq pop cmp rex.XB pushq (bad) add sub or add movsb (bad) decb xorb nop pushq (bad) mov (bad) std rex.WRX rex.X (bad) (bad) (bad) jmpq fisttpll (bad) sbb rclb add retq (bad) (bad) leaveq mov cmpsb xchg adc lods add stos xchg (bad) test outsb and outsb or leaveq insl or cmp loopne jmpq fimul sub fildll jle testb adc jle xchg cltd xchg cmc mov outsl cmp mov movabs popfq jge movabs in rol (bad) add sub fdivp callq jno mov mov je jo ja (bad) xchg mov cmc pushfq ds out in out (bad) (bad) std adc (bad) (bad) (bad) ljmp fisubr adc out (bad) xchg mov sub add rex.X sbb iret fadd test mov push movabs adc mov and pop adc add add jnp lods pop mov xchg mov es sbb test cs mov rex.WRXB or lock mov mov fstl (bad) testb sar ja jmpq push mov (bad) int (bad) in in rex push pop js and (bad) mov add std (bad) gs (bad) fmul out mov rex.RB js pop pop (bad) negb add sti push rex.WB pop push xchg xchg rcll and xor out mov in mov fwait in adc rcll rex.XB rex js sbb mov loopne cmp rex.WRX (bad) (bad) (bad) cld fneni(8087 lock (bad) out loop in imul test add negb rex.WB add add outsb loope adc xor sbb (bad) clc jno adc pop xor sbb pop mov (bad) sub rcrb (bad) jg out cmp sbb and and jle cmp cmpb jmpq je bswap push btr btr mov clc test rcl sub bswap lea jmpq callq stc stc sub jmpq jmpq callq jmpq bt cmp jmpq rex.R xchg test mov outsb push or push xchg mov retq (bad) pop and and pop jnp sbb cltd mov adc mov jbe mov (bad) mov xor rex.RX pop (bad) (bad) sub ficomp sbb rex.WR mov jb rex.W jl xchg pushq cmpsl (bad) test in (bad) and mov stc or (bad) jb bt cmc cmp clc cmpb jmpq or in out rcll add shll retq (bad) mov lret movsl sbb mov (bad) mov pop (bad) mov rex.WXB stos (bad) pop fbstp cltd int3 (bad) or or rex.B pop sbb xchg mov fwait (bad) jno (bad) movsb jg lods (bad) ja (bad) and fstpt out or (bad) sti lods (bad) adc jmp (bad) (bad) std rcl xchg push rex.W test (bad) movabs push pushfq (bad) (bad) in (bad) (bad) (bad) incl jl mov sbb (bad) xor xchg nop add mov rex.RX movabs repnz rex.RX sti xchg loopne clc movabs (bad) jns mov stc (bad) pop cmp cmp sub test cmc clc repnz js jne neg shl mov btc not shld inc sub bt jmpq jl jae jmpq mov cld pop (bad) sub (bad) enterw adcl neg flds (bad) or fsub fsub (bad) xchg rex movabs rex.WB jb fstl add pop fsubl cmp icebp sub or sub mov xlat (bad) (bad) (bad) cld cmpsl sbb adc movabs movabs movsl xor (bad) jmpq loopne (bad) (bad) (bad) cld sbb pushfq push jns (bad) fnstenv adc add add jl mov callq (bad) ficompl xchg and xchg mulb cmp shlb (bad) jmpq adc mov pop push cmp movsb mull retq test sahf mov cli push insb pushfq xchg (bad) cmc cmp jmpq sbb sub or sbb insl add lret stos rex.R addr32 adc (bad) push popq fstpl mov cld hlt movabs (bad) fsubp add xchg retq pop rex.R cs (bad) and (bad) push cmp iret xor and pushq (bad) imulb pop (bad) js hlt pop mov jnp movabs push (bad) (bad) (bad) (bad) xor loopne movabs in jp (bad) (bad) pushq jb mov sub rcr or scas mov adc xor fnstenv (bad) rex.WXB push cmp movabs rex.RX fwait mov cmp (bad) sti out sbbb test stos std pushq enterq shrb in not test mov ror add clc rol mov test test cmc jmpq jmpq jmpq jne sete movzbw mov jmpq cmp bt test bt add jmpq and imul or mov nop mov and jne stos retq out sbb or mov push (bad) cwtl movabs pop rex.WXB fcomps jbe lods mov jne (bad) xor in lea pop or fcomps test mov out (bad) mov (bad) rex.WX repz fcomps ss xchg adc in insb clc in rex.WRB (bad) es (bad) (bad) cld cmp subb (bad) (bad) decb ss mov scas (bad) cmc xchg cmp rex.R (bad) (bad) dec test xor rex.WRXB lock in jge or add pop rex.WRXB add xchg add out notl and (bad) in shrb mov or pop pop rex.R rolb mov std sbb sub rex.XB mov adc in addr32 mov cmc faddl je (bad) shll mov pop cmp pop outsl adc callq in test adc or scas (bad) in fcompl neg or (bad) cld (bad) mov and sub imul sub (bad) xor fidivl pop (bad) pop and cwtl movslq or rorb je jnp and hlt sbb cmp imul (bad) repnz add (bad) scas lea (bad) (bad) (bad) sbb mov jrcxz adc mov std mov or or push (bad) (bad) (bad) lcall (bad) or jge es fidivr (bad) movsl sbb jo sub jg std leaveq pop ds cmpsb cld rex.RB cmpsl xchg add cld xchg mov push cli cltd mov xchg add je mov std pop lock rex.RX jmpq (bad) and roll push rcr pushq rex.WRB data16 int in (bad) (bad) movslq adc mov ss mov (bad) (bad) and movsb test rex.WRB movabs rorb or (bad) jb mov (bad) cld rcll xchg mov and retq mov test mov callq loope mov push (bad) (bad) (bad) sti movsl stos jno cmp (bad) (bad) std mov test in mov fidivl mov (bad) cmp lea iret or (bad) retq (bad) lcall and movsb scas (bad) cmpsb int mov (bad) fdivs xor and rex.RXB push ss cltd mov (bad) xor jmp sbb gs cs mov and (bad) mov (bad) imul movabs test jmpq add xchg sti or (bad) mov (bad) push (bad) leaveq cmp adc in adc (bad) hlt (bad) out mov mov mov (bad) fdivl (bad) xchg xor sub sahf retq cld jae mov sbb je adc lock and (bad) in jns (bad) movabs jnp rorl movsl xchg mov push cmp push mov adc scas xchg jmp cld test fpatan rex.RX scas adc lret sahf out mov jns xchg add add (bad) (bad) ja cli scas mov (bad) outsl (bad) cmp xchg stos mov jb sub mov cmp mov rex.WRX rex.R or (bad) insl add jbe shrl (bad) jns rex.RXB pushfq ljmp imul mov jge nop (bad) jrcxz int3 jmp add (bad) mov movabs mov repnz mov sbb scas (bad) stos mov push fwait sbb rex.WB rex.X cmpsl rex.B div lret popq (bad) xchg lods adc pushq stos int retq cmp (bad) cmpsb rex.WXB outsl es fwait lret xchg scas jnp iret int sbb xchg rex.RXB int3 push rex.X sub jns push pop neg cmp (bad) imul pop lret pop int xor adc lods rex.R (bad) (bad) cld callq (bad) (bad) (bad) std lods sti stc sub lret and and leaveq loop (bad) loope or jg sub (bad) clc add jae mov adc or fnsave or cwtl xor (bad) fadds jl add out sub jrcxz (bad) (bad) (bad) inc loop outsb imul or je (bad) repz callq int mov outsl (bad) push mov fist (bad) and sarb movabs lea es out ds (bad) fdiv pushfq out insl outsb pop xchg cmp mov (bad) xor nop vandnps pushfq in roll callq add (bad) add addl sar shrd mov not xchg cmc mov sar bt mov jmpq (bad) insl rex.WRXB rex.WX mov or rex.WXB sbb push jl out adc mov jmp lea mov (bad) leaveq out stos sbb fnstcw cmp repz and in in xor adc fbstp outsb jge jne (bad) push jnp add (bad) lret jl jnp cwtl loop (bad) (bad) (bad) push add add add add adc pop adc (bad) xchg xor xor rex.RX mov (bad) rex.WB add movb out sub pop (bad) fs xlat add jge lock stos mov xchg test out rex.WXB (bad) xchg mov outsl push cmp and (bad) rex.WR rex.WRX mov add scas lock jmpq sti jbe xchg notb adc (bad) es or retq rex.W pop and iret cld xchg (bad) shr (bad) (bad) adc mov callq jo push xchg icebp xchg data16 jl mov and mov mov rex.WXB (bad) outsl test callq jle jo add (bad) jno push xor cmp adc (bad) adc (bad) (bad) (bad) decb (bad) (bad) (bad) decl jne sarl xlat cmp ja cmp (bad) adc popfq mov and ss cltd (bad) or add es stos cmpsb nop cmp test (bad) xor sub rex.WB (bad) rex.B movabs pop enterq fistpll add push je ljmp or add clc test bt bt add jmpq loop addr32 cli mov push mov retq cmp movsl es xchg fs rex.R test cmp and rex.RX adc add callq jge jae imul xchg sahf (bad) and push in js fnsave (bad) lahf and (bad) (bad) sti mov (bad) (bad) (bad) (bad) sbb (bad) or or sar popfq (bad) (bad) (bad) lcall (bad) (bad) rex.WB es mov sbb js cmp sarb and cltd (bad) (bad) rex.WRB pop or jle rex.WRXB test xchg mov movsb xor out clc loope lods adcb repz xchg rex.WB add test xor xchg cmp outsb xchg rex.W and test pushq (bad) fadds mov movb retq repz jae add rex.WRX jp cmpsb clc ds adc (bad) mov jae xchg or imul outsl jnp (bad) (bad) (bad) ljmp mov (bad) (bad) pop rorb lock add add sub (bad) add mov retq cwtl mov scas and cmp or sar sbb jge rorl rex.WXB popfq mov negl xchg test adc pop pushq int and lret adc mov add or callq sub btr add inc lea cmp inc mov test stc test clc cmpb jmpq jne dec test sar sub not bt mov rcl setb ror mov add dec mov clc cmp test jmpq (bad) data16 movslq and and lahf pop fs retq cmpsb movsb cmp mov mov adc add push or rex.B (bad) leaveq hlt jmp cmc mul mov lret fiadd (bad) cmp sbb rex.R cli hlt jae (bad) ss loopne jrcxz and in rex.WB adc scas fistp (bad) (bad) leaveq insl xchg sub fwait sahf or retq leaveq in ja mov fcoms rorb fdivr adc sub rex.WR loopne (bad) push rex.WB fwait mov xor (bad) mov sub adc (bad) xchg or loop (bad) (bad) (bad) sti jne jmpq (bad) (bad) (bad) xor (bad) and mov cmpsb xchg mov and fs sti (bad) rex.WRX loop (bad) leaveq stos jmp mov xchg fs (bad) sub or (bad) cmp and lahf xchg (bad) sbb add repnz mov push es xor (bad) insb rex.XB mov movsb iret (bad) (bad) (bad) jmpq rex.X add mov and ds jnp jmp clc (bad) int3 iret cmpsb and xchg add mov (bad) mov rex.X (bad) (bad) mov pop and int3 mov or add mov (bad) out add incb lret rex.RB mov in (bad) pop sub cmp sbb rex.RXB rex.RX lock (bad) std jle sub mov fidivrl jle cmp enterq sub mov rex.W cwtl (bad) (bad) push adc cmp xor push push add jl xlat sahf rex.XB orb add fadds (bad) sbb (bad) imul or (bad) jrcxz (bad) sbb rex.WB std rex.RX shlb rex.W rex.RB sbb rex.WB jle fidiv adc sub mov or (bad) faddp rex.X int rex.R rex.RXB test imul add rol pop cmp cmpsb and rex.WR test out xlat lods mov jbe pop or cmp addr32 (bad) mov vcvttps2dq rex.RX fiaddl pop add rex.WR (bad) jmp (bad) adc cmpsb outsb xchg mov push (bad) jno jbe (bad) or rex.X xchg pop loop (bad) jae rex.X push (bad) (bad) rex.WX pop xchg fisttpll fidivrl fdivrp (bad) rolb and rex.WRXB pop rex.WX (bad) mov movslq test movabs jmp mov cs sub out rex.WXB test add sub fildl push int3 loop callq mov addr32 pop add (bad) (bad) lret gs lock rex.X mov rolb (bad) ficompl (bad) jmpq movb xchg push add add loope fdivs push jg push rex.RXB add xor lock push pop rex.X rex.WR rex.B rex.WR rex.B and push sub fldl sti rex.XB rex.WB and jge cmc int3 xchg rex.RXB jle add push enterq out xchg decb fistp (bad) (bad) push (bad) imul push rex.RB fwait rex.WR mov callq (bad) push in sub fsubrs rcrl (bad) test imul jl xor push or jns add out cwtl jge cmp (bad) cmp sahf test movabs shrl (bad) xor movsb jnp mov fidivl mov int push (bad) loop rorl movabs lret pop xor add (bad) sub rex.WXB rex.RX xor iret push enterq rex.X and jnp (bad) imul (bad) mov nop or rex.B rex adc es imul fadds mov sub pop jne mov mov clc or xchg in (bad) rex.RB rex.XB adc je retq (bad) imul imulb gs rex.WR sbb (bad) jmp rex.RB and (bad) rex.B imul insl (bad) (bad) and repnz adc loop retq rex.RXB xchg and rex.WR mov sub and fsubs rex.RXB sub jmp mov (bad) (bad) neg mulb (bad) retq sub push add (bad) jmpq (bad) or iret rex.WR cmpsl rex cmpsl (bad) test mov stos jo loopne rex.RXB sub fsubrl (bad) (bad) rex.RXB repnz pop fld rex.RB (bad) mov (bad) and or sti nop out jmp lea sbb in (bad) insl movabs mov add jo fwait iret movsb (bad) rex jl iret pop imul sti jmp ja xchg retq mov jo callq add addb (bad) add mov adc (bad) popfq add mov lock (bad) movl mov (bad) (bad) rex.RB icebp jno sub mov test rcrb and popfq ds in movslq jo (bad) (bad) (bad) pop push cmp retq mov clc (bad) xchg movsl es movabs push rex.B (bad) rex.WR rex.R (bad) mov add lock push add (bad) fcmovb pop mov rex.RX cwtl xor test jrcxz sub rex.WR retq js fisubrl (bad) push add jmp cwtl or push add movabs loope cli test adc loope (bad) es fcoml leaveq sahf mov adc es movabs or ss rex.WRB int3 mov (bad) sbb (bad) xor add mov push rex.WRXB repnz jbe,pt movsb (bad) and adc callw rex.WRX retq stc mul rex.WRXB add rex.WRXB and stos gs (bad) mov xchg (bad) jbe (bad) scas mov (bad) movl mov (bad) scas add repz or pop loop push (bad) jrcxz imul loop (bad) (bad) jmp xchg sub js (bad) loop movslq rex.W push retq sub out rex.W xor lock repnz rex.R rex.RXB xlat pushq (bad) movsl (bad) lea enterq out es icebp push cmp mov xchg mov xor pushfq cs rex.B rex.RX and push mov es and xor rex.W rex.WR (bad) lret push sbb std rex.RX mov int3 ror js enterq (bad) testl (bad) and adc (bad) orl or loope xchg (bad) or (bad) mov (bad) sbb test rex.B and (bad) std out addr32 rex.W pop pop (bad) sub rex.WX test sub fldt hlt (bad) sahf rex.RX mov (bad) adc (bad) xor outsl jg or and cmpsb or rex.XB lahf hlt mov (bad) rex.RB or sub (bad) js pushq rex.WRB rex.X rex.WR rex.RB or out sbb (bad) sahf pop and (bad) outsb pop pushq jrcxz mov out add rex.WR rex.XB cmpsl sub pop roll sahf (bad) and lea rex.R mov rex.RX xor cld pop jg rex.XB cmp sub pop stos adc insb (bad) test mov pop subb pop (bad) and (bad) movsl sbb rex.WX sub stos (bad) imul enterq and mov outsl push fdivl ficom add push es or sub (bad) and rex.XB rex movabs or imul and movabs (bad) decl mov (bad) not rex.WRB (bad) pop xor jge jno (bad) push adc rorl pop pop pop shll (bad) out lahf pop (bad) pop sbb movabs rex.W mov clc cwtl std fsub push movabs sub add (bad) adc jns es rex.R push shll (bad) cmp fsubl ficomp (bad) sbb sub (bad) enterq cmp test and rex.B test (bad) cmpsl (bad) add (bad) mov sub leaveq cmp test xchg cwtl xor adc mov outsl jo adc (bad) ss cmpsb addr32 or xor loope mov in scas std icebp movabs movabs add rex.WRB xor adc iret (bad) sbb xor push pop rex.WR rex.WR pushw addr32 rex.R push xchg (bad) and rex.W test rex.W pop scas clc rex.WX push lret fcmovb callq movslq (bad) xor (bad) or push out out nop add rex.WRXB cmpsl xchg test jb jmp movabs adc (bad) data16 (bad) rex.R rex.B xchg movabs sbb rex.RXB fsincos add and sti jo add adc rex.WB fistp jg loopne out test lahf mov xchg (bad) movhps movabs (bad) xchg mov add (bad) push sub xchg pop (bad) jo pushq je test callq rex.RX sub addb jrcxz xchg or mov scas movabs rex.WB pop callq shrb sub movb rex.B (bad) jle clc add or or imul vshufps xor fdivr movabs rex.W jge rcll sub mov fwait sub mov imul sub (bad) hlt ja movabs (bad) xchg add cmpsb add add movabs rex.WRXB xchg js sub pushfq pushq test (bad) lret (bad) (bad) jnp negb pop rex.WRX rex.WR rex.WRXB imul rex.RXB sub mov int3 (bad) sub and (bad) pop hlt lret (bad) sub and push (bad) movsl lock (bad) mov fisttp rex.WX (bad) loop idivb stos cmp (bad) idivl mov in mov mov (bad) xchg retq push scas fs rex.WB or pushfq out outsb sub add sub icebp movabs shrl in orl insb sub cmpsb shrb rex.RXB rex.R sub or mov insb adc mov js orl movabs add sub push callq int sahf repz push (bad) adc and imul jrcxz sub or sub xor pop sub mov xchg mov or rex.WRXB (bad) mov (bad) retq (bad) mov rcrb add (bad) sub sub rex.X ja leaveq fild nop mov jle adc push test or lret stos mov rex adc push (bad) nop in add mov scas test sbb push xchg pop mov (bad) lret nop xor rex.X fistp add and jmpq sub scas mov mov (bad) rex.RXB (bad) pop loope jg jl jrcxz lock rex.W xor or shlb and retq (bad) rex.RX mov mov (bad) or testb (bad) push rcrb rex.RB pushq (bad) or test enterq and pop fadds (bad) or fbld fild (bad) add cs sub test (bad) xchg rolb mov out lock lahf push xchg psubsb sub or loopne push lret pushq sbb (bad) mov pushq push movslq (bad) and mov pop callq jb rorl or (bad) test out rex.WX iret addr32 adc rex.WR movsb cmp in pop cltd clc (bad) stc jrcxz add (bad) mov hlt rex.RB rex.X or sbb jle pushq (bad) or and xor test (bad) push retq movsl (bad) jno out mov and xchg mov test leaveq rex.XB addr32 test sbb sbb and adc cmp xchg (bad) xlat movsl movabs or rex movsl stos (bad) fildll or test sub (bad) pop jo and cmp and pop adc (bad) cmc stos insb clc js test jge cmp (bad) mov shlb gs xor xchg xor mov cmp fisub test add sbb gs (bad) sbb sub mov pushfq (bad) rcl rex.RB (bad) push gs (bad) push or in (bad) jmp rex.WRXB fs jl out lahf mov jb and (bad) (bad) add (bad) and imul (bad) (bad) icebp rex.RB (bad) cmp out (bad) add jns movsl in pop add addr32 sbb mov rex.XB (bad) xchg rorl imul movabs insb cmpsl (bad) fist pop rex.RB sub (bad) mov pop callq (bad) mov out pushq jb rex.RX push leaveq sbb shl stos rex.WX xor enterq movabs enterq enterq (bad) adc sub cmp fidivl mov jbe rcll incb rex.WXB pushq rex.WXB xlat adcl icebp sarl xchg in xchg (bad) add rorb push sub sbb test cmpsl retq data16 mov jmp rex.WRB rex.WB pop rex retq adc jae je (bad) movabs (bad) push retq xchg pop sbb retq lods test pushfq xor cmp cmp (bad) rex.WB (bad) pop nop xchg push sub movabs rcr rex.RB (bad) addr32 sbb and (bad) pop pop (bad) add out push rex.RX (bad) std sub rex rex.XB sbb pop xchg outsb rex.WB iret push mov (bad) cmp mov xor rex.WR sbb shrb movabs xor sub fisttpl jmpq test rex.WRX pushq (bad) callq stos sub enterq or lea mov and lods or (bad) fimull mov push pushq rex.X rex.WRX sbb jg and xlat pushq ss jrcxz pop add jo shl pop cmp xor (bad) and (bad) sub cmp adc sbb pop adc mov (bad) rex.WR je fist xor pushq and rex.WB jno rex.WX fwait sahf leaveq (bad) mov movabs sbb movslq movsl hlt in (bad) andq movslq data16 sub add lods fidivr out repnz sahf sti add movabs (bad) xor xlat stos movsl jns push rex.WRB nop (bad) test cmp sub pop mov int ficompl pop cmp hlt mov xchg lods or cmp push sub rex pushq jp movabs (bad) enterq out cmc stos enterq (bad) lret (bad) pop pop sub mov rex.R mov out rex.WRX or rex.WRXB push (bad) test out rex.WRB add sub imul push push push and mov sbb rex.RB movabs rex.RX jp xor sbb retq sbb movabs xor xor sub pop shlb mov clc enterq (bad) (bad) jg rex.X cmp mov sub (bad) xchg nop add rex.B rex.WX out adc lock test push (bad) pop fstpl pop push jb mov insl mov xor mov scas or fnstenv rex.RB cmp jmpq sub mov iret sbb (bad) mul jb rex.RXB rex.RB rex.WX es mov enterq sub xor sub (bad) enterq (bad) (bad) (bad) pop in push rex.X xchg (bad) (bad) jmpq popq shl pop (bad) adc or adc xchg and ja (bad) xchg jne push mov orb cmp imul xchg push jp jb,pn cmpsl idivl (bad) cmp or enterq mov rex.RB mov xchg or movslq (bad) (bad) (bad) mov rex.WB jmpq sub pop cmp add fidivr lock rex.B rex.WX (bad) mov leaveq pop xchg (bad) sub (bad) pop sub (bad) pushfq out or repnz rex.RX mov and rex.WX rex.RB iret adc (bad) mov movb movsl sbb (bad) (bad) mulb rex.WX (bad) out (bad) mov sbb (bad) gs xor shll retq movsb nop (bad) jrcxz jns cmpsl addr32 and out adc sbb ja or xchg push adc scas xor sub rex.WRB sub (bad) jle cmpsb push xchg in push mov rex.RX addr32 and gs sub hlt in push (bad) retq lcall ds out movabs xchg int3 push nop fmuls mov rex lock imul rcrb fucom jo xchg adc push and mov int xchg cs push pop rex.R lods cwtl (bad) mov xor rex.WX cmp jrcxz jo xor movabs shrb (bad) cmpsl add and rex.W (bad) in cmp xchg in mov cmp xchg test clc adc ss movabs sub xor adc roll repz xor fdivs cmpsb sub fwait and cmp rex.XB xor (bad) mov mov rex.WR xor add mov (bad) pop stos cmp (bad) mov (bad) sub cmp rex.WX nop mov (bad) pushfq xor out rcll (bad) mov add (bad) (bad) push fisttp out loope rex.WRB push in pop out movabs rex movabs xorb addr32 or push xchg sub cmp mov int3 sub sarb nop mov xorl imul rex.RB fmuls jge movsb in xchg sub rex.R mov mov rex.WX cwtl gs fiaddl retq (bad) sahf pushq popq add xor rex.WRX mov rex xor (bad) rorb (bad) outsb mov movsb (bad) push (bad) (bad) sbb push sbb cmpsl xchg cmp sbb (bad) fstl jp out lret retq pop sub int or lock addr32 stos iret retq (bad) and rcl movabs leaveq xchg rolb push movabs clc loopne movsb insb xchg pushfq fldl retq enterq or cmpsb (bad) (bad) mov xor rol rex.R fisttp out push rex.RB mov adc push out sub (bad) fstps sbbl (bad) xor in rex.WXB (bad) add rex.R rex.R out (bad) mov add es fxtract sahf in rex.WXB (bad) push sbb adc jb mov adc movsl rex.WRX cwtl rorl or push in adc (bad) icebp or popfq mov mov push rex.RB adc sub (bad) push adc retq adc xchg nop (bad) jo push rex.WRXB rex.WXB xchg pop xlat mov cltd fisttp and rex.R sub jg loop mov movabs pop cli pop fcoms (bad) stos nop pushq test test xchg rex.RX rex.W xchg adc or or mov and mov rex.WRXB ja jge outsl and push (bad) mov fs xor or rex.WRB rex.WRXB andl lock sbb (bad) fs pop enterq rex.WXB fmull jp fbld rolb mov rex.RB push (bad) cmpsl jmpq rex.XB ss xchg pop add mov test sub add (bad) lret std cmc pop rex.WR hlt test in fwait xchg pop hlt cmp iret jrcxz (bad) pop cmpsl adc jbe fimul sub and rex.X xchg push pushq je adc add loope sub test jno (bad) xor add rex.WB rex.WXB imul cmpsl xchg out test (bad) mov hlt adc push movl xor cmc int3 (bad) add pushq sbb movslq (bad) sub movsl push mov testl xchg (bad) rex.WX retq retq out or mov sahf subb mov (bad) mov (bad) xchg scas (bad) fnsave rex.W fcomps pushq stos and callq lahf (bad) imul and sub sub cmp rex.WB pushfq icebp jno mov pop insw and out pop retq fmuls es movabs (bad) xor sbb pop or xchg push sbb rex.WR lret or sarb sbb (bad) pop adc out sub xchg imul movslq sbb mov (bad) lods rex.WB rex.WRB sbb clc insb rex.W rex.WXB pop movabs (bad) shl clc sarb xor (bad) cmp (bad) rex.WXB sahf rclb cmpsb mov (bad) (bad) gs (bad) xlat sbb mov mov (bad) mulps (bad) or (bad) push mov adc (bad) loope out mov or or sub gs jae js mov mov or sub lea (bad) bts sbb pop cltd retq (bad) fs stos jbe movslq rex.WX adc andb cmp in xchg push out sub pushfq and mov jle cmp sbb fildll (bad) (bad) lahf mov mov adc movslq clc jg rex.WRX (bad) mov rex.XB and jg insb cli push clc rex.WRX shrl (bad) jbe (bad) clc out xor (bad) sub add movabs popfq fisttpll (bad) rex.WR lea pop (bad) int3 mov adc loopne mov and pop je leaveq test movsb rex.WXB rex lock int3 mov and rcl lret callq rex.WXB xchg jns sbb and div adc retq stos stc pop pushq (bad) out in js scas cmp push (bad) jmpq jbe sub pop rex.WXB pushq jl fsubr imul test jmp shrb repz shlq (bad) movl mov imul push ja jrcxz pushq (bad) pop stos mov sub add add and scas xchg (bad) sub pop sub lea jg loop (bad) or cvtps2pi outsl mov rex.RX pop sub rolb test xor push out (bad) loopne xor and (bad) addr32 or pop jno and (bad) test retq movabs (bad) push gs repnz mov (bad) xor leaveq sub stos rex pushq in adc or push (bad) rex.RB rex.WRX add lea (bad) scas sub xor rex.X rex.R pushq pushq imul mov int3 cmp lods pop retq repnz (bad) rex.WRXB push movsl sub outsb push xchg fistpl rex.WX (bad) imul sub and insl pop stc adcl retq (bad) (bad) sbb pop (bad) push pushq and mov callq or adc adc sbb (bad) (bad) add rex.R movabs (bad) xlat pushq and shrb pop out fmul xchg lret pop (bad) xchg mov and xchg (bad) add enterq pop stos paddsb mov rex.WRX insb push sbb sub scas adc test (bad) jno rex.WRX fdivrs test hlt pushq sbb and pushq popfq (bad) add out mov lock jrcxz fs stos xor pushfq xorb fsts mov lahf callq mov rex.WX cmpsl rex.W mov or pushq mov (bad) fcomps (bad) stc lods mov mov loope enterq outsl adcb test jnp or (bad) out in mov push leaveq add stos inc (bad) movabs (bad) out push or mov fsubrs and add stc nop and jle rex.WRXB (bad) es sub fdivrp or jle lret adc cmp pop movabs xchg or pop sti lock in (bad) sub or cwtl mov lods out or (bad) lahf (bad) rcl out js outsb jne pop and repz mov stc (bad) sbb sub xchg jbe cmc push sbb out mov xchg add rex.B repz scas andl pop int3 pushq (bad) push (bad) hlt js sbb adc out xor (bad) in jge rcrb rex.WRXB xor (bad) nop rcrl cld fs and (bad) fdivr rex.X js (bad) stos sub sub rex.X (bad) rex.R cmp (bad) fdivrs pop push cli xor xchg sbb or adc repz test and negb rcrb and mov adc cmp adc scas add mov std mov rex.RX rex.W cld (bad) out jne jge fstl rcrb pushq jne push (bad) (bad) mov inc enterq movsb rex.X rex out mov pop rex.WR pop rex.RXB incl sub (bad) adc loop mov rex.RX (bad) jb or xchg jae xor pop and jge jno rex.X enterq mov rex.WXB mov (bad) (bad) (bad) jg lret rex.WRB (bad) jg mov out imul movabs out stos (bad) or jl shlb ss mov outsl adc push cmp mov jmpq and xchg (bad) outsb pop sbb test outsb mov (bad) adc push jno mov mov imul pop repz retq insb (bad) rex.RB sbb jmp xor rex.WB cmp jl sub sub popq push push callq out sub retq subl push jge ss (bad) (bad) (bad) int add (bad) cld (bad) rex.WXB es jmp xchg or add addr32 (bad) adc or xor test pop jb scas (bad) or addl std pop add int or xchg mov push rex.WR xor cmp retq xor (bad) not mov leaveq sbb pop mov cmp and (bad) sarb mov jnp adc int3 xor ror rex.RB fist sahf rex.R and push es push outsb xchg lea pop or sub movsl popfq pushq lock adc out mov sub adc test xchg insl leaveq (bad) add xor pop enterq rex.RX fs (bad) testl push movslq nop (bad) jnp movabs sahf rex.W add jae scas pushfq and pop mov jns addr32 mov pop in ds cmp jmpq (bad) stos (bad) roll and or xor (bad) cmp fisub pop sbb add fwait stos pop add movsl rex.RXB stos movsb decb pandn pop (bad) and (bad) loope enterq xchg rex.WXB jl mov add add sub adc mov mov retq mov test hlt leaveq sarb movabs enterq sub test (bad) push adc and rex.WRB mov pushq sub jne add (bad) (bad) sbb mov (bad) pop cli lods movabs push addr32 (bad) rolb (bad) cmp sub mov xchg lret xor fidiv test xlat (bad) or sub jns push ja rex.RXB sub add movslq and cmpsb movslq hlt pop sbb and movabs loopne mov jmpq rex.RXB rex.W (bad) pop rex.X add (bad) cmp mov mov (bad) out jle (bad) and push or out sub add or cmpsl movsl in rclb xchg rex.RB cmpsl mov in addr32 add rex.WXB rex.R rex.WRXB rep (bad) leaveq movsb es mov movsb add sti lahf push repnz xor stc xacquire and fs pop mov fdivrp callq outsl sub out sub nop cmpsl push movsb out mov or xchg sub movslq cmp out cmovae leaveq leaveq int3 in outsl test mov rex.RXB pushq (bad) cmp enterq fist add rex.R notl test pop mov sbb push jns rex.R lock (bad) pushq or mov mov cmp or out (bad) shlb and xchg jo popfq cmovnp mov stos rex.WXB lods rex.X rex rex.WRXB imull leaveq mov mov test lret sub out jnp sbb fistpll rex.R data16 fsubs and pop cltd cmp (bad) (bad) mov mov cmp push out (bad) fldenv rex.WR jmpq (bad) lahf xor (bad) add mov rex.X adc (bad) (bad) movabs cmpsl clc cmpl xchg adc fstp pop cmp fldt test scas movabs mov (bad) fildll mov in test and cmp rex.B mov mov pushfq push movsl fs rex.WX rex.WRXB cs xchg insl sub fldenv pop out cmpsl (bad) or lods mov rol pushq xchg movabs out add add add sub cwtl (bad) (bad) jle (bad) es adc and sub rclb push (bad) xchg adc xchg hlt push cs rex.RX mov rex.WX fmuls adc rex.WRX jnp jmp (bad) (bad) and std pop test jmpw sub out lret hlt rex.RX rex.R adc (bad) add (bad) rex.W rex.X sub add imul shll adc (bad) push test mov xor sub pop sbb mov mov (bad) pushq sub rex.RX cwtl jns sub push mov sbb sub nop ffreep cmp mov scas adc (bad) (bad) jge or xchg rex.WRB rex.WB mov (bad) cmp mov or and sub or sahf rex.XB insl pop std and negl (bad) in sub mov or insb out rex.WRB ss lea mov sub jbe push (bad) pushq pop cmp xor and xchg and rex.W and sbb cmp test enterq push rex.WR mov push fisub or js pushq or gs in or js mov (bad) mov (bad) mov jle stos or jb rorb test xor and enterq retq mov mov test sbb (bad) (bad) out or push or sahf add loopne jo mov sbb outsb mov rorl add xor jrcxz sbb rex.WRXB int3 jp add xor or (bad) (bad) fdivp mov mov out rex.RXB repz jmpq cmp cmp mov js rex.W rex fs rex.RXB (bad) xor pop sbb (bad) out out rex or and mov xchg push xchg mov mov pop (bad) or sub pushq push xor mov movabs jmpq rex.WRX xor mov out sbb sub or xchg add pushfq and orl jae imul adc callq xor mov or sbb adc rex.R sub sbb (bad) and out jrcxz push (bad) mov or xchg rex.X js leaveq (bad) sub xchg cwtl and std out out mov adc fstl xchg imul (bad) xor int rclb jno mov rex.WRB (bad) cwtl icebp rex.WX out sti push xor cmp andl (bad) movabs test sub in rex.B (bad) imul outsl fadds mov adc sub and sub pop rex.RXB rex.X icebp (bad) (bad) out pop clc movabs or data16 movl (bad) repnz pop mov mov and push callq or jg rex.WXB fisttp rex.WB pushq gs lock leaveq mov sub (bad) cmpsl or (bad) push rex.WR out mov stos add pop push outsb incl insb pop sbb retq icebp insl push and rcrb pop imul and sub or enterq or callq rex.WRXB adc insb jmp vpaddq pushq loope mov sub imul cmp test sbb rex.WXB ficoml pop xor pushq scas (bad) xlat (bad) xchg rex.WRXB mov lock mov nop mov add callq push (bad) lods frstor (bad) sub movabs decl rex.WRX es rex.WRX outsb in mov pop leaveq xor mov mov loope int3 jle cmp or lods pushq and (bad) sti mov insb out or leaveq std pop ror pop jmp xchg (bad) xor xor sub xor mov sub rex.B and pop (bad) movabs (bad) or cmpl xor push mov sub adc sbb rex.RX push jp or adc (bad) sub cmpps push mov movslq xchg int3 or and pop pop (bad) adc lock xchg pop rex.RXB adc div or pop fmull add movabs stos sbb js rex.WX (bad) clc or push addr32 decb push cmp sbb mov jmp (bad) ja stos mov add (bad) push or cmp rex.WX cmp movabs pushfq rex.R adc or in cmp mov push cmp (bad) lods mov fcomp or jnp xor rex.RXB (bad) or ds mov (bad) out lods jnp xchg scas addr32 add (bad) or movabs mov (bad) (bad) mov sti jge scas test push (bad) stos pop pop (bad) movsw or mov or loope mov add mov add shrl out sbb int3 sbbb test and fcmovnb sbb je loope sub adc lret xchg cmp mul push int3 jno addr32 mov xlat (bad) cmp jmp cmp enterq or rex.RB cmp test push add je rcl cmc pop (bad) fisubrl jae jmp stos (bad) insl pushq jo (bad) adc mov rex.R jp es repnz outsb cvttps2pi (bad) push or (bad) (bad) (bad) xchg gs adc retq xor mov notb rorl movabs bswap sbb fbstp (bad) push std mov callq sbb (bad) sti test movsb rex.WXB stos sarb mov sub scas mov insb rex.WB pop xor fldt and xor test and and sub mov (bad) (bad) rex.R rex.WX rex.WRB sub add insb xor fisubl movabs sbb gs sub rex.WRB adc add test (bad) jmpq pop shlb sub jle add sub mov fimul mov jmp (bad) mov rex.W and leaveq test rex.WRB rex.RB rex.WRXB mov mov sbb rex.WRX push xchg callq frstor and mov sbb getsec in and (bad) jns pop and (bad) movsb sbb jb xor movabs clc pop test fdivl adc scas and pop or movabs (bad) cmp pop sbb or or (bad) jne rex.WX jmp (bad) push jl xchg mov rex.XB fstps iret in jrcxz pop movslq (bad) imul cmpsb out int rex.RX lret outsl jp xor pop jns gs jle xlat scas (bad) mov xor rex.WX add sbb and (bad) sub pop xor sub fisttpl add rex.WX (bad) imulb callq rex.W (bad) or cmpsl (bad) sub jbe mov imul ficom (bad) add (bad) add jmpq pop sub (bad) roll rex.WRXB scas add in (bad) ja jrcxz movabs gs push xor or nop pop (bad) stos nop xchg and jae rex.WX jno rex.WB pop adc nop sub fucomi jo retq divb mov (bad) (bad) rex.WR mov xchg movabs lret or or sbb xor movabs (bad) rcr out xor hlt loop shld add sub xchg mov push sub comiss cmc mov rex.WXB insb jnp pop seto and test sbb or pop mov (bad) mov outsl mov xor rex insl mov and push adc mov xchg (bad) fs pop cltd sbb test (bad) fiaddl rex.XB (bad) int3 rcr sub adc xchg rex.WR rex.B rex.B test rex.XB mov in sbb scas (bad) (bad) cmp or in and pop or adc fsubr sbb (bad) mov mov movabs add (bad) test icebp rex.R rex.WRB test notb fistpl pop (bad) js rex.XB in jno xor rex.WRX mov mov (bad) xor out leaveq push sub fdivs test sbb shll mov faddl mov out (bad) scas and sub mov ficom outsw sar and outsl idivl (bad) (bad) (bad) pushfq rex.XB movslq imul pop addr32 sub (bad) test sub xor mov out or or (bad) jmp pop lret cwtl and iret out stos int test out adc (bad) push mov rex.WB (bad) out movabs testb (bad) rex.W rex.WRXB cmp pop (bad) jge rex.WX rex.RXB cs loop rex.WRX sub sahf jno sub rex.RB adc mov movslq loope outsl callq adc mov (bad) and sbb pop mov nop pushq in sub rex add pop (bad) stos add pop pop (bad) clc or xorps popfq rex cmp sbb jne cmp or std push (bad) xor or xor rex.W rex.R lock pop xor ss cmp jp ss rex.WRXB (bad) mov cmpsl adc add add push stc movsb mov cmc jb push out clc sahf adc (bad) (bad) lahf sbb (bad) cmpl (bad) int3 lret rex.WRX (bad) sbb outsl rex.WXB (bad) pop (bad) rex.WXB rex.RX rex.WRB sbb push movsb rorb rex.WX mov retq (bad) icebp movabs (bad) jbe rex.WRX pop (bad) loope rex.W xor push jmpq mull (bad) (bad) popq sub sub or and (bad) sbb or sub (bad) jg hlt fbld enterq push mov xchg out out cs xchg jmpq (bad) pop stos push enterq push adc pop scas jle add fimull sbb mov jge (bad) mov int in or and mov jnp rex.X shlb lcall rex adc fdivs sub sti (bad) xchg rol add lret rex.B rex.XB scas test js push sahf ds outsl rex.RB rclb and lods fsubrl adc rex data16 cs sbb in out jno test sub leaveq (bad) (bad) cmp outsb sahf mov lahf pushq mov pushq outsl xchg or mov mov rcrb lret rex.WX enterq mov mov negl lret (bad) sub lret popfq roll (bad) enterq pop sbb jno mov loopne iret rex add jg add rex.WXB sub shrl test push jp (bad) out scas sub mov test jbe adc cmpl rex.X push js rex gs cmp out lret (bad) pop lods movabs sub test rex.RXB test subl or fisttpll (bad) jmpq pushq rex.WRB (bad) (bad) xchg rex.WX sub and lea (bad) (bad) rex.WRB and rex.WXB retq adc ss (bad) shrb (bad) push (bad) std fcoml jge rol mov rex.W jne,pn sti (bad) xor out (bad) iret (bad) cmc (bad) lret cmp cmp (bad) push (bad) pop outsl mov lret jno jrcxz int (bad) repz sub insl sbb rex.W mov out mov adc (bad) retq xor jp out jg int push (bad) rex.WRXB rex.RXB adc push (bad) sub int3 loop (bad) rex.WX (bad) mov (bad) loope rex.WRXB sbb sub cmp mov add mov out rex.WXB push rex.W rolb out mov xlat enterq adc or (bad) xchg xor pop and sti incl and lret insl pop lods sub sbb leaveq loop and jmp sbb and sbb rex.WRX insb movabs rex.R jg adc add cmpsb cltd ss push jb sub (bad) xor (bad) or or lea rorb and sbbb sar scas iret fwait adc mov insl pop or loopne adc (bad) xor xchg notb and rorb in xchg pushq sahf cmp (bad) mov out pushq mov or (bad) add cmp rex.RB rex.B clc jbe mov (bad) int pop cmp push loopne mov and xor or mulss retq rex.WRXB rex.WRX gs pop cmp mov movslq iret scas repz add (bad) xchg pop sub (bad) jmp (bad) mov or and rex.RX (bad) outsb repnz jl retq sub xchg sub (bad) sub hlt or fstl pop xor (bad) mov jmpq rex.WRB fwait (bad) decb out lods and adcl cmc test fwait rex.WR insb push xchg sub cmp in ss push outsb (bad) jge rex.XB rex.WRXB mov add subb jae loopne outsb push pop or mov movslq xor imul movsb (bad) sub pushfq add movabs (bad) xor sbb stos pushfq sbb (bad) (bad) or (bad) pcmpeqd (bad) jmp sbb and nop xchg pop movsl sub cmovl adc adc addl add rex.B rex.RXB rex.WXB idivl out jl mov scas rex.W rex.WXB jo adc rex.WXB push jmpq and sbb jrcxz movabs test rex.WB lea rex.X leaveq mov rex.RXB add rex.XB rex.WX xchg jo mov jne adc (bad) movsb rex.RX (bad) mov (bad) scas sbb xor out push idivl jb cwtl mov lea out rex mov (bad) imul push divl out fiadd (bad) icebp rex.RXB retq rex.RX test xchg enterq fidivl (bad) jrcxz adc rex.WRB push movslq fisubr adc jle rex.WB shlb imul scas scas movsl enterq jge (bad) and mov rex.WB repnz sub (bad) jns pop (bad) (bad) pop lods add popfq sub (bad) fcom mov fnstenv jo sbb and (bad) adcl test pop cmp rex.WRXB rex.WRX rex.RB imul mov pop sbb or leaveq lock lea test scas mov or shl rex.WRB or stos rex.WB rex movsl mov (bad) xor xchg (bad) imulb enterq and in sub popfq cld mov sub cmp sub (bad) mov mov shlb gs stos int3 mov rex.B or movabs pushfq mov add insl pop or decb in rex.WRXB pop xor cmp cmp movabs scas ds mov xchg addr32 and out xchg sub enterq pop mov fstl (bad) and (bad) icebp (bad) xchg out insl mov sbb rex.XB outsl xor xchg push adc sbb out rex.WX rex.WRB rex.WR in shl jmp (bad) mov mov pop int xor add push cld (bad) callq rex.WXB gs push cmc (bad) gs out push add nop add or rex.XB or (bad) push rex (bad) sub and lods rex.WX or and imul insl pushq add repnz enterq (bad) retq mov loope pop out rclb xchg (bad) pushq movabs push (bad) xchg popfq scas (bad) (bad) adc cmp outsb iret rolb out (bad) sbb (bad) or xchg ror in xor out retq rex (bad) lock lret movabs (bad) add (bad) jne in pop sbb pushq std rex.WXB (bad) or callq cmp (bad) sbb (bad) rex.WRX shlb (bad) sub pop rex.WX push mov int3 pop xchg or fadd test xchg and (bad) push rex.R cltd and je and clc cli mov sub mov rex.B add or (bad) lods (bad) adc movslq sbb cld add (bad) stos rex.WXB rex.WXB xchg (bad) leaveq and movsl sahf mov pop adc cmpsl retq movsb or rex.WRB mov sbb sub xlat ja xor out adc mov xchg mov (bad) scas flds or mov rex.XB adc cli cmp rex.RXB cs out pop test sub jo push rorb es fisttpll fild int3 and (bad) and and data16 cmovae cmp sub out fidivl mov movabs adc mov mov (bad) js pop adc mov sub or (bad) (bad) sbb adc (bad) retq jno rex.W push sub mov (bad) lods in jrcxz or (bad) pushq or (bad) callq addr32 jle rex.WB cmp lea (bad) sub pop pushq (bad) (bad) (bad) xchg nop retq stos mov imul cmc cmp xchg xchg movabs leaveq jno movabs mov xchg mov xor outsl fwait rol pop pop and sbb test int (bad) or pop movsb fnstcw lret pushfq xlat pop jge add rex rex.W xchg rolb ss pushq scas (bad) and xor divl nop rex.WX xchg (bad) movsb (bad) movabs loop cmpsb xchg mov jl mov push sbb lahf rex.RX (bad) (bad) (bad) adc cmp pushq (bad) (bad) subb cmova xor jb pop stc pop xor fisub rclb rcl (bad) jmp (bad) fnstsw clc rex.R push pushfq pop cltd xor ja rex.RX imul stos adc and (bad) xchg out fbld rol (bad) pop pushq out or adc popq xchg sub fbld cmp outsb sbb rex.XB pushq (bad) out andl or pop sub addr32 int repnz sub rex.WX rex.X and mov rex.WRB mov jl movabs xor (bad) enterq fcoms loop and rex mov xchg sub rol rex.XB iret pop cmpsb xor rex.W test jno add std jns mov retq test lods adc js int (bad) and movslq stc (bad) lret pushfq mov ss (bad) pushq xor (bad) mov add pop sti imul mov rex.R jnp xchg movsb faddl or rex.WX rex.W es mov cmpsl mov adc rex.R mov (bad) fwait stc movsl sbb mov jno (bad) roll mov mov cmc (bad) fcomp clc or in xor xlat addr32 jnp jne sub xchg fsubrl sbb fs and shrl (bad) mov jnp sbb fidivrl shrb adc jmpq (bad) cmpsb rolb xor xchg movabs xor jbe test test out enterq push lods cmp jb (bad) sub sub cmp (bad) jmpq (bad) fwait or rorb iret (bad) jne xor rex.X mov clc lret pop lret (bad) (bad) (bad) movb xlat enterq cmp test push jmp sbb mov test adc pop push in rex bt fadd fadds rex.WR (bad) in xor repz push ja rex.R fdivrs xor test pop ds rex.WB (bad) out or and rex.RXB mov push mov jno sub sti add adc adc cmp xor (bad) (bad) repz sub mov (bad) (bad) cmp xchg rex.RXB rex.WXB pop cmc sbb sbb clc mov mov test movabs imulb jnp out sbb jg jne (bad) sub sub shl mov add je or cmp xchg popfq rex.WRB repnz xor (bad) (bad) push rex.WRX (bad) repnz (bad) out pop es mov xchg fdivp rorb and lock jl rex.RX mov add out mov andl add movabs in cmp (bad) sub (bad) cmpsb ja jbe xchg (bad) test outsl sub retq mov retq jp fnstenv cmp jp (bad) (bad) adc callq pop fildl pop sub je out addr32 ja sti add enterq pushq jrcxz and rex.WRX (bad) jo push jae sub (bad) ss xor sahf or (bad) ss negl xchg (bad) mov push add push jg mov (bad) pop sarl pop (bad) gs pop or adc mov ja cmpsl cs and outsb rex.RB leaveq mov callq in cli (bad) sbb orb xchg mov xor cmp and (bad) sub out mov jrcxz rex.X and or mov iret pop push mov sbb push rex.WXB addr32 and fmuls (bad) xchg and (bad) cmp stc callq mov or or outsl movb xchg mov out (bad) pushq (bad) jo pop sub mov rex.WR in cmp sub std cmp xor loope xchg mov sub cmpsl push add (bad) loopne icebp rex.RB sub rorb test jge adc push jl add xchg (bad) jo sub push or push sbb (bad) mov or sbb rex.WR push and lret (bad) cmc xlat jno sbb pop ds movabs and cmp cmc cmpsl sahf adc cmp xchg fadds mov xor mov movabs mov shrl sub ror ror out mov test push cmpsl cmp rex.WXB rex.XB mov add (bad) (bad) outsl mov mov push mov add movsb loope or cwtl mov add mov push divps xor repnz push out fiadd pop rex.WR fs adc xchg js rex.WXB jmpq sub xor or adc (bad) xor xchg (bad) addr32 loope out cmp push and rex.B fistpll callq xor movabs rex.W add xchg fs xchg push or enterq mov in and test fisub in pop adc in out pop movabs or sub add and add loope xchg je adc pushq imul fisttpll js mov lret hlt rex.B pop add sub test std retq ficoml xchg sub (bad) (bad) fsub cmp and out add xchg lret and out or (bad) or xchg outsl out outsl rclb add retq rex.B (bad) cmpsl pop rex.WR movsl xlat repz addr32 fist shl xor cmp hlt fs fsubl mov mov (bad) cmp jp or lock add fisttpll rex.WRX mov stos (bad) rex.RB rex.RX sbb xchg fidiv or nop out loop rex.WRB leaveq stc rcll outsb cmp movabs (bad) loopne scas (bad) movsl xchg in cmp rex.WB test rex.R rex mov out xor movsb pop pushq or (bad) adc (bad) sub and mov insb pop fisttpl mov movabs jmpq adc loopne cmpsb cmp sbb adc rex.W out retq mov rex.RXB push pop xorl fs or xchg rol jns add adc rex.X and scas push fs push enterq push (bad) adc (bad) pop outsl pop jo callq xchg (bad) cmp movabs lret mov adc pop jno jrcxz cmpsl pushq mov push pushfq xor pop xor xchg rex.WX movabs and callq out rex.RB pop pushq pushq (bad) mov jge lahf mov rex.RX repz sbb addb (bad) adc outsl movslq and lods callq mov rex.RX pop push rex.B sub and out mov xlat rex.WXB pop cld mov test adc rex.RX xor push movabs sbb or or (bad) sub xchg mov and out retq sbb xchg and sub jp lahf mov (bad) rex.W mov gs sub sub mov (bad) jo fiaddl movsb adc insb rex.WX int3 loopne sti rex.RXB rex.XB rex.WB scas (bad) repnz push jg repz rex.XB push retq (bad) pop out enterq sbb cmp cltd xor cld in pop (bad) sub movslq xchg gs rex.RXB stos (bad) xor cltq xlat shl or xchg rex.RB repz add add fldcw mov rex.WB cld loopne jp or callq out jmpq pop or push (bad) test adc (bad) fimull rex.W push lods xchg push pop mov sbb and mov (bad) rex.RXB (bad) rex.WB xchg pop retq (bad) rex.RX adc adc rcrb add hlt rex.B rex.WRB or lods rex.WB je xor or xor retq pop push nop rex.R lret vaddsd and lea and (bad) out enterq (bad) movsb jg (bad) (bad) pop rex.W sbb (bad) iret xor cmp jnp (bad) test imul jno mov rclb rex.XB (bad) push (bad) rex.XB jl lcall movsb roll push jns mov jne (bad) sub sbb jmp jge (bad) push (bad) sarb push out fimul movsb callq cmp sub push xor rex.RXB rex.B pushq fxch movsb icebp mov out jge lret xlat xchg rex.WB pop rex.RXB loope mov mov push (bad) lock int jge push out cmc sahf rex.WRB (bad) xchg out callq rex.WB fcoms popfq sbb int movsb rex.XB rex.RXB push rex.B rex.WRB lock and rex.RB sbb push out movslq add rorb and imul scas or xchg es rex.RB (bad) fnsave js stc loopne rex.XB int3 jmpq or sub pushq sub out mov leaveq mov lods rex.WB cmc movslq leaveq rex.XB rex.WXB rex.WB lret xchg out xor push (bad) fmuls (bad) jne jmpq push (bad) out data16 rex.WRXB rex.WB jnp movsb orl rex mov rex.WRB mov movsb or mov (bad) jmpq rcrb xchg add mov and rolb clc in (bad) movslq pop sub outsb rex.RX fiadd (bad) fsts lret out test jp rcl enterq cwtl fdivrl ror (bad) leaveq xchg out adc rex.B mov rex.WRB shlb mov movabs sub or mov or fimul addr32 push test sub (bad) pushq rex.WRX vminss shl xor (bad) data16 cmpsl (bad) repnz xor loopne jp rex.WX mov sbb test add cld lea rex.WXB ss and adc rorb (bad) sub (bad) push rex.X or xor rex.RB mov cmp cmc mov mov cmp test sbb lret rex.WX leaveq xor test andl adc insl wrmsr and pop push shlb nopl xor test cmpsl pushq lahf leaveq adc mov nop jns rex.R pop jne sbb jp rex.RB xchg cs rex.WB insl (bad) or addr32 in xchg test (bad) sti lret test (bad) hlt rex.X cmpsl (bad) add loope movabs rex.RB notb pop rcrl xor or sbb mov adcb sub (bad) cmp repnz movsl (bad) fcomp add callq callq (bad) sub fsubs sub ds je xlat out sub cmpsl mov scas add repz pop shlb ja pushfq (bad) imul pop cltd icebp push xor push rex.X roll jnp clc rex.B rex.RXB es rex.X xor lods mov sub mov js lock or or test sub cmp and gs sub cmpsb add in jrcxz popfq xchg in cmp je rex.WXB (bad) push retq rex.RX adc rex.R adc rex.WB cmp mov mov (bad) sub xchg (bad) or pop add cwtl (bad) xchg callq andl mov movsl (bad) (bad) (bad) sub cltd (bad) jnp (bad) sub movslq lods in rex.XB loopne js or rex.RB fwait cmpsl rex.R sti xchg (bad) je (bad) movsb and scas retq in mov pushq adc mov sbb pop (bad) repnz sbb xchg (bad) cwtl rex.WR and pop sbb mov iret mov cld pmuludq hlt std negl shrl rex.WX xchg cmpsl (bad) sub xor and or mov je or xchg loopne xor in movabs (bad) fcoml jb mov mov int movslq (bad) add pop outsl cmc cmp mov (bad) (bad) fwait pop xchg cmpsb (bad) rex.RB movabs mov pop pushfq rcl jne or callq lods loop fwait sub adc clc loope popfq insb push rex.WRB jo stos mov lret out rex.XB loope mov gs pop adc xor and sbb sbb adc pop (bad) (bad) jmp fidivrl (bad) cmp gs std (bad) mov ja movsb mov cmc jrcxz (bad) loop ficom push rex.X mov push movabs (bad) loope movabs push lock pushq jmpq sti sub clc int sub xor cmp mov cmp cmpsl mov retq (bad) hlt jb hlt data16 and push add push sub (bad) pushq or rex.XB cwtl adc movabs jno es rex.XB push pushq xor mov and loope adc and mov popfq or adc (bad) lock (bad) callq ds (bad) sbb (bad) xor mov test jge lret test int jno or mov mov movabs sub or or sub icebp mov mov stc xchg movsl test cli icebp (bad) popfq adc and adc notl (bad) scas sub bts adc (bad) mov or fistpll xor lods stos add push jle push and pop rex.WX rex.WRB out (bad) stos cmp adc (bad) jmp rcl lahf rolb (bad) (bad) (bad) fiaddl pop xor sub adc cli jmpq imul cmp out retq movabs std jmp rex.RXB rex.WRB int and push rex.RB fwait or push rex.RX rex.W mov or (bad) rex.XB pop or mov push out rex.RXB rex pop push fs stos sbb and rex.WR pop in stos cmpsb callq movsl imul rex.R int3 rex.RB pop jmpq lods jl push mov rex sub rex.RXB pop sbbb sub push (bad) pop xchg (bad) jae adc rex rex.WRXB rex.RB decb adc lret and pop pop adcb cmp enterq cmc rex pop mov outsl xchg cmpsb rex.WRXB rclb mov movslq rex andb test push (bad) (bad) rex.RB xchg cmp je adc rex.XB ds rex.RX (bad) cltd rex.WR rex.WRX rex.B rex.WXB push test sub or rex.XB pop push sub and push outsl push push stos ror int stc rorl xchg pop and pop lods int3 push lods (bad) cmp rex.WR rex.W rex.WR rex.WX stos (bad) mov rex.B push push push out mov xor add jnp rex.R rex.WRX retq push enterq sbb add mov rex.WXB retq mov rex.RXB rex.WRXB out rex.R rex.WB sub push add adc xchg rex.WR rex.WX pop rorl pop lret rex.RB rex.XB push adc push jo sbb adc pop rex.R rex.X (bad) pop xor push cmp rex.R (bad) rex.WRB jmp xchg pop ja add and rcrl push mov rex.R cmc push mov rex.WX push movd pop mov rex.XB mov (bad) pop xor rex.RX pop roll rex.RX (bad) pop movabs push nopl push and pop rcr pop xchg rex.X (bad) rex.WB mov push mov push int3 rex.XB push (bad) lret repnz rex.RB stc mov rex.WRXB push (bad) rex.RB pop popfq pop pop and sbb in and in adc imul jae push push mov rcll or rex.RX pop sbb pop roll push mov adc mov jb in fnstenv cmp rex.RXB (bad) (bad) rex.WB add cld pushq cmovge addr32 sub (bad) in xor adc xor retq lret rex.WRX mov xchg sub xchg (bad) int or mov out sahf rex.RX rex.WB jno (bad) movsl movabs fcomi mov in cwtl pop lahf push xor rex.WRX xchg rex.WB push (bad) rex.RXB repz push movabs cli mov callq rex.WB xor sbb jrcxz iret int3 icebp xor (bad) jo (bad) cwtl (bad) rex.WB (bad) (bad) movsl rex.XB jrcxz mov pop push xor cwtl ja rex mov testb lods sub adc jle sbb in cmpsb pushfq movabs cld (bad) sub rex.WB and rex.WB cs cmp pop cmpsb fadd rex.WB mov movabs push xchg (bad) rex.WB xchg cmpsl cmp lock rex.WB rex.X add and xlat movabs data16 cmc fbstp xchg mov rex.WB xor jmpq sbb outsl js rex.W movsl (bad) jns (bad) rorl mov or (bad) loope rex.RX rex.XB sbb sbb std lods (bad) orl loope (bad) movabs rex (bad) (bad) mov rex.WR rex.WB fisttpl rex.WB (bad) ficompl shlb push (bad) rex.WB nop pop enterq xchg rex.WB adc shl int addr32 cmc (bad) rex.WRXB push out loope rex.R mov rex.WB jbe (bad) jle mov rex.B sub in shr cmp pop xchg mov rex.WB rex.R (bad) push pop in xchg pop mov or rex.WB add cmp shrl sub adc and and and (bad) nop mov rex.WXB rex.WB (bad) test outsb std rorb cmpl jge rex.WB rex.WRX repz (bad) and notb rex.B jb (bad) mov rex.WB mov test cwtl lods rex.WB pop sub (bad) jp pushfq and out sti push test adc sbb sahf xor pop gs ds sub push sub pop cltd int rex.WB mov rex.XB je or xchg (bad) jne ja or rex.WB mov cmp rex.WB (bad) mov js rex.R int jg (bad) loopne gs xchg push sub pop xor imull je lods mov insb (bad) rex.B int3 mov out (bad) mov jle xor mov int3 loope mov mov cmp std frstor sahf cwtl xor and jne cmpsb (bad) or (bad) xchg repnz push add scas jb enterq pop xor cli xchg rex.WRB fstpt rex.WRX (bad) cs fadd push push jmp stc (bad) rex.WB jge mov (bad) (bad) stc lret rex.WX add jb xchg (bad) scas and rex.WB rex.WB std push rex.RB addr32 (bad) (bad) clc lods pop and (bad) cmp rex.WB std out lret pop fstps push in fisttpll rex mov mov fcomip xchg rex.RX jns rex.WX and mov fildl cmp and out rex.WRX mov imul popfq rorb rex.WX cmp repnz movslq cmc adc pop xor mov cmp popfq nop xlat rex.XB lea rex.WB cmp sbb sub mov fnsave and xor icebp or (bad) loopne (bad) or movsb and (bad) (bad) mov push or push in lods cmp scas mov cli push rex.RX rex.RXB out cmc adc xor mov rex.WB push fdivrl cmp scas sbb cld ja lods and lods or sbb (bad) in test fisubrl pop cmp outsb jp mov mov repz pushq rex.B lods rex.WB xchg xchg add cltd lret mov repnz sub mov movslq out rex.RXB push and pop cwtl stc mov rex.WB test add (bad) rex.WXB or std and jge pop rex.RB (bad) jg rex.X adc mov mov jrcxz ja sub movabs rex.WB rex.X mov rex.WB rex.WX or jl test movsl pop lret sbb adc movsl fstps jge mov int cs fldenv movabs (bad) add adc push gs rex.B lods (bad) sbbb mov (bad) xor (bad) rex.WRB rex.WB cmp out movsb mov sub (bad) insb stos adc rex.WRB rex.WRX fistp fldt mov movslq adc retq (bad) lret pop sahf rex.WB mov add jno rex.RX movabs pop jns xchg xor mov int loopl jbe push and cmc sub adc addr32 xchg gs gs add rex.WB push mov rex.XB pop movslq outsb pushq mov decl jae lock (bad) cmp jb jne rex.RX jnp movabs adc (bad) mov fbstp mov xlat rex.WB jo pop (bad) addr32 and jae sub mov out rex.XB rex.WB and sub and rex.WB jmpq in enterq loope rex.WRB (bad) rex.WB rex.WRX ficoml js rex.WB rex.X and xor rex.WB (bad) clc (bad) mov rcll mov jne stos rex.WB mov and (bad) sub outsl jle pop (bad) fcomps stos pop (bad) lock lods sub retq test adc int outsl movabs sub push sub fisttpll lock repz mov jp (bad) mov movabs xor xchg loope fisub iret mov rex.RX fsubp rex.RXB jg rex.WRB cmp mov pushq popfq cmc mov rcl or scas fdivs mov out jbe push (bad) mov adc push stc popfq lahf ja rex.WRB es or icebp jbe mov movabs jbe or sub (bad) push rex.WRX sbb pop mov (bad) shrb rex.B or movabs push imul cmpl push scas movsb jo push sbb sub add (bad) jg leaveq rex.X lock repz cltd (bad) fadds xor push rex.WXB pop callq fisttpl xchg test cwtl jb imul push (bad) out (bad) sbb pop fild fistpl push es (bad) shlb or mov (bad) scas rex.WRB rex.WX mov jns test (bad) (bad) mov pop cltd sub lret sub (bad) add rex.WX rex.B jrcxz mov jge sub ss adc xchg faddp cmp or sub add (bad) fs mov retq movabs add cmc push lea cmc and sbbb and jns fisttp cmp mov rex.WX in lret cmp iret repz mov and jae (bad) fxch mov callq (bad) adc xor cltd movslq (bad) xor movslq jns (bad) xchg sbb lods and test lret movsb lret mov jle mov std retq jge mov rex.WRXB pushq mov cwtl sbb fwait pushfq rex.WRX outsl movsb sbb jmpq and scas (bad) ss jno cmp jp (bad) int gs cmp add mov xchg mov ss orl jnp mov fdivl sbb cmp or pushfq mov (bad) (bad) nop test jbe movabs jne rex.W es test rex.WRXB jg mov (bad) mov mov or (bad) jge cmp xor sbb lret test jo fdiv or or rol subl test cld sbb mov mov rex.WX sub fldcw sub jb mov rcll sub mov pushfq xchg sub movsb add sbb (bad) pop xchg or mov rex.WRB rex.X movslq mov add or test movsb (bad) imul pop lahf sbb (bad) outsl rex.WB cmp rex.WB rex.XB lea rol rex.WB repnz movabs xor pop (bad) (bad) mov (bad) adc lahf fxch fs add rex.WB jmp (bad) and ss (bad) sub xor jb xchg mov gs clc jne mov xchg jmpq cmpsl lock (bad) xchg rcll or xor mov test cli sbbl push rex.XB push rex.WB ss popq loope sbb insl and push cld or (bad) rex.WB fbld rex.WB divb xor add test push in mov and stc popfq mov rex.WB cwtl int3 adc sbb mov shrb mov push rex.WB enterq sarb pop fwait and lret cli and (bad) mov lock pop xchg pushq adc (bad) (bad) push movabs or mov push sbb sbb rex.XB (bad) and xlat iret rex.X add jo mov adc (bad) loop out and cli (bad) rex.WB mov (bad) mov mov popfq (bad) cwtl hlt xor rex.WB insl sbb roll sub stos push add fistl iret rclb sub mov sahf (bad) (bad) mov fwait jg scas rorb pushfq (bad) sbb movabs (bad) retq jg enterq rcll (bad) outsl movsb cmp enterq out pop repnz fbld (bad) mov gs movabs rex.WB rex fcmovnbe (bad) mov rex.WR and icebp int3 rex.WXB rex.WR rex.WB scas retq add (bad) movabs rex.RX test faddp pop mov xchg push shl outsl movabs movsb (bad) xor rex.WB rex.R and or callq adc pushfq int shlb rex.X loopne leaveq retq (bad) out shl rex.WB (bad) rex.WRB (bad) and cmpsl adc loop notb mov fwait mov stc imul (bad) test jo pop lea callq sahf loopne leaveq rex.WB rcll rex.WB jge rex.R fnstcw movabs sti stos cwtl add push and and stos xor fs pushfq cmpsb andl retq or mov (bad) (bad) movabs fnop push rorb cmp add (bad) (bad) jmpq (bad) and xchg (bad) clc xor mov sbb adc insl addr32 int rex.XB rcrb test retq test js (bad) mov icebp insb fs rcll incl lahf sbbl pop movslq fiadd mov (bad) cld xchg (bad) or in movabs cmpsb movabs lods pop lock sahf lret test insb outsl fcomp rex.WRXB rex.WB fdivl (bad) or sbb pushq xchg rex.WXB adc rex.WB mov cs es rex.WB (bad) icebp movabs rex.RB movsl adc mov pop and and (bad) pop test pushfq push cltd subl sar je (bad) es cmc push (bad) xchg adcl xor loope jg sbb cmpsb adc jmpq fidivr (bad) (bad) or insl mov js (bad) jnp mov xchg scas fdivrs pop or sub mov lret jo mov cmpsb cmpsl sbb xchg outsb add jae and test sub sbb push (bad) fsubs iret xlat pop or jge out popfq fucomip xchg pushq (bad) stos mov add fidivr out rex.W push enterq pop sub fstps (bad) lea lods fimull xchg xorl jns xchg negb cltd and (bad) add (bad) addr32 or lahf enterq pushq or rex.WRXB js fcoms mov sub mov movabs sarb push adc movabs sub add lea and xchg (bad) (bad) lods sarl sbb push rex xor sbb xor (bad) (bad) mov sbb xor sub outsl jge rcll pop pop rex.R cmpl jne rolb sub rex.RB mov (bad) sub cwtl or mov jb adc iret rex.WRXB or sub mov cmp or rex.WRX sub gs (bad) hlt rex.XB rex.RXB and or jmpq andb jmp sbb mov xor notl (bad) divw xor popfq sbb hlt loope fcmove enterq stos xor cmovb and adc mov (bad) rex.WR jnp rcr jne (bad) jl pop test enterq push pushq (bad) xchg insb xchg mov push (bad) rex.RB or lahf sarl movsl clc xor sbb adc push rcrl sub (bad) imul fisub in lahf rex.X movabs sbb sbb loop or or xor rex.RXB jg rex rex.WRXB (bad) maskmovq divl mov (bad) (bad) movabs jnp movabs cmp mov adc pop int3 (bad) or (bad) push or (bad) rex.XB stos xor rex.WB push callq jp out movabs xchg cmpsb and (bad) xor pushq test in or movabs fwait pushq sub (bad) movslq jno or and adc mov (bad) rex.RX mov add gs push lods cmp add (bad) mov loop cmpsb (bad) lahf xor rcll mov outsl (bad) (bad) or pop hlt (bad) pop stos addr32 xchg add sbb ja fisubrl adc cmpsb mov iret insl xor ficompl enterq enterq add pushq xor jns or jae jrcxz pushq sbbl lods cltd fsubr lret fimul (bad) incl adc sub jne fmul popfq pushfq push out leaveq loope shll sub fidivrl ror xchg jae cmpsl lret push (bad) cmp and fdivrl cmpsb sub fiaddl adc lock sbb sub or jae cmp pushfq mulb cltd enterq xlat stos (bad) lock out mov lods or sub adc sub mov push mov push sub mov xor pop sahf lods mov addr32 fmuls push imul sahf (bad) sub rex.WXB sub mov add pop stos add gs jbe test push addr32 fs jp,pn xchg adc rex.B addr32 xchg loope stos pop std leaveq (bad) cmp xchg mov rex.R and lahf stc in mov mov jge jle or out enterq mov (bad) lea (bad) sahf pop rex.WR mov adc (bad) or fdivrs lahf callq orb test retq add scas fmul sbb mov jg sub test outsl clc xchg mov (bad) rex.WRXB rex.W (bad) cmp (bad) rep rex.WRB repz push xor mov cmp ror xorl fisttpll jnp test movabs sub fwait out cmp lret movsb xchg fimul mov frstor or pop shll (bad) sub rex.WX leaveq or rex.XB lock rex.WXB jnp movabs mov pushq test fiadd cltd test pop rex.WXB rex.WB sahf rex.RB rolb cmp jmpq add movabs cmp and sbb (bad) cmp and rex.RB add stos xor rolb (bad) push retq mov jb (bad) pop jo test hlt and add mov cld rex.WRXB outsb (bad) shrb mov (bad) and pop and loopne xchg rex.XB and fidivrl in adc cmp es (bad) add and add outsb movslq test out rex.WB pop stos js jb (bad) popfq (bad) push adc rex.WB fwait mov sub je js sti xchg mov shrb and jmp int3 loopne pop and xchg jns fnstenv test mov push rex.WB cs out push xchg rex.XB sub pop adc insb rex.WR mov loope cmpsl enterq sbb (bad) (bad) sub sub (bad) rex.WB rex.RB jno,pt in test jmp adc (bad) xor add (bad) rex.WB (bad) (bad) int3 (bad) repz sbb enterq loope rex.RB add rex.RB loopne rcrb leaveq sub lods sbb (bad) (bad) jo push loope callq test sub push mov mov add jge,pn push xor clc sbb rex.WRXB (bad) add rorb xor push rex.X jl movabs (bad) mov lock je (bad) (bad) push sbb or cs lret leaveq rex.WXB fnsave pop fucomip (bad) scas stos in push rex.WB insl lahf jrcxz cwtl mov (bad) add outsl jl (bad) pop (bad) (bad) je adc (bad) push sbb pushq sahf add jge pop outsb pop mov mov movb outsl (bad) sub popq rex.WRX push rex.WRX xchg fldenv rex.WB sub mov movslq (bad) push stos callq rex.XB rex.WB sbb pop xchg pop mov or push mov rclb ds rex.WRB jns insb pushq lea xchg pushq insb jb jrcxz rex.WB ds add adc insl rex.WB in (bad) adc mov or and pushq out rex.RXB repz add adc push jl pop jle popfq decb and xor pop rex.WRB rex.WB rex.RX movslq add jbe mov jge out mov pushq ja gs rex.WB mov xor (bad) push cmp pop rorb fiadd rex.WB add sbb or icebp rol decb lret (bad) (bad) movabs movslq std mov jae push add pop scas mov fimull (bad) (bad) and rorb or sbb mov or cld (bad) adc sbb pushq mov je out enterq leaveq xor sub insb mov xor rex.WB xor movslq (bad) rex.WXB pushq rex.WRXB test xchg xor clc (bad) stc push movabs cltd rex.WB test adc adc pop cli add pushq or mov pushq sahf (bad) cmc imul push adc leaveq rex.X rex.WB enterq pop mov (bad) shlb (bad) lahf xchg data16 (bad) sbb mov movslq (bad) movslq adc rex.WR adc mulb sub mov movabs rex.WR imul rex pop rex.RX adc or rex.RXB pushfq (bad) sbb sub jbe movslq mov rex.WRB fwait sub cld rolb (bad) sub (bad) rex.WXB xor (bad) fs sub (bad) cld in sub mov (bad) jno pop jp outsl sub sub insl or ds (bad) (bad) cmp or out jno (bad) push mov pop rex.RX test jb vpsubusw mov mov push stos lods jne (bad) stc xchg mov xor (bad) test push push adc sbb xchg testb insl add or rex.XB rex.WX jae jo imul movsl (bad) jno icebp ss nop out sub (bad) sub xor or xchg rex.R mov jb fwait test cmp jno mov rclb rex.WX rclb imul (bad) cli loopne pop xchg (bad) xchg je shr push jl (bad) cmp cwtl rex.X lret or mov add rex.RX mov cmc movabs add insb enterq rol scas insb mov add jae pop pop movabs cmpsl rex.RXB enterq jl imul rorb (bad) add jns addr32 (bad) mov fcoms pop jge cmpl out mov rex.WX jno (bad) repz xor cmp mov sub pop sbb retq scas rex and pop rcl push pop es in jg xor (bad) or xchg rex.RXB rex mov nop sti cmc and icebp (bad) mov or movl pushfq rex imul (bad) hlt xor adc jmp add jne adc or enterq lahf insb jmpq adc movslq jnp rex.RX mov jge (bad) lock insl push add push jns rex.X clc js (bad) jns sbb adc test or (bad) rex.WRX addr32 outsl in sbb ds sarl clc pop mov rex.W repz loope rex.XB jb rex.R stos int3 lret mov pop push (bad) pushfq (bad) jno rex.RXB (bad) push rex.R retq rex.RX insb rex.RB cmp mov sarb jmp or and in jno xor scas (bad) ss lret (bad) outsl fistpll (bad) mov or sub fs scas add mov loop (bad) iret shrl test scas jl rol test add adc sbb sub sub jle movslq popfq loope gs rex.RB cs mov adc rex.WX movabs pop mov (bad) lods mov shrb lret jae (bad) (bad) rex.W data16 rex.W movabs test and cmpsl sahf rex.W rex.WRX rex.WRB movabs (bad) mov fsubl and pushfq enterq sub adc rex.WXB rex.WXB jnp jno movslq out (bad) pop jne sub pop mov scas xchg (bad) ja rex.WB scas rex.WRB mov loope lock pushq movsb pop repnz pop sbb mov cmp in lods negl int3 rex.WR push movsl frstor sbb or jp rex.WB movsb enterq jmp lods jns mov faddl rex jg sbb mov pushq in jno xchg enterq pop mov mov pushfq sub cmp xchg jo lret sbb lea test mov mov xchg rex.RB xchg pop (bad) and movsb rex.WB test loopne or movl mov jp (bad) stos xchg mov jnp in out cmpsb fidivrl (bad) in jno pop adc rex.WB jle test lret add (bad) xor sbbl vphaddbd cmp (bad) mov jo pop xchg xlat pop pushq test movslq test rex.WB sbb cmp or rex.WXB ss and loope test mov pop test rex.W or add xlat loope rex.R sub cmp lea adc (bad) (bad) std (bad) and add and mov movsb out xchg lods pushq loop or jns xchg jrcxz lods enterq rex.RXB (bad) pop xlat (bad) jp mov (bad) out mov (bad) or sub (bad) and fistpll movsl rex.WB rex.WR (bad) pop stos rex.WB js cmpl rex.XB and out (bad) scas fnstcw loopne rex.WXB cs xchg mov xchg adc xchg xor cli (bad) rex.XB jb cmp mov movslq leaveq rex.WRX ja,pn adc rex.WB push mov retq movabs xor and cs rorb sahf cld xor sbb pop and retq mov mov jg movabs mov out push mov adc sbb orl movabs (bad) xor jp adc add rcr imul xor (bad) (bad) pushq test lret rcrq in and (bad) (bad) sbb rex.WB pop mov and or movabs in js lea add (bad) (bad) test (bad) (bad) repz jge xchg (bad) push in mov pmaxsw (bad) loopne xor cltd rex.RX (bad) xchg scas sub (bad) jb sub pop rex.WRX rex.WB hlt xor or jnp and cmp sarl (bad) (bad) rex.WRX pushq repnz push movsb data16 mov jne decb movslq (bad) jne mov lods (bad) callq rex.WRB std rex.WXB mov pushfq xor cmp lret mov adc mov xchg sub stos insb addr32 (bad) lods fadds fiadd jns rex.WB and mov rex.WB fs icebp xchg sahf imul stos stc rex.RB in jno adc icebp xchg (bad) leaveq pop jle jmp int rex.WB sbb rex.XB adc adc cmovne xor ffreep xchg fdivrs movsl or hlt clc mov packuswb mov pushq adc and xor sbb cli push js loopne movabs mov (bad) adc fisubl rcrb (bad) in xchg adc pop or rex.W out jae out movsb mov sar fidivl loope rex.WXB xor pushq cmp movsl out pop lock xor pop cltd rex.XB imul (bad) (bad) sti jne mov iret clc cmp mov (bad) pop push push jne loope or (bad) add jnp sarb and fcmovnu or (bad) xchg and mov pop lods divl xor in and out movsl lods test pushq lock pop or xlat xchg cmp and repnz sbbb cmp jns pushq fdivl outsb adc test sbb adc enterq nop (bad) or movsl enterq rex.W rex.WX push lods jne loop out pop jp jge rex.R xchg (bad) sarb mov jb ds movabs lahf mov fdivs push cmpsb test (bad) rex.WB pop hlt (bad) mov lret add rex.RB loop xchg jnp push pop movabs mov jmpq (bad) movabs repnz rex.WR repz xchg negl xor movsl push push pop xchg (bad) es (bad) jmp fmull rex.WB jl (bad) callq outsb adc pop gs (bad) rex.B callq pushq outsl (bad) sub mov (bad) mov xchg (bad) (bad) test pop rex.WB rex.WX pop pop je xor ds or sbb lcall sub jnp rex.WXB adc push callq sbb retq push and (bad) jle rorb mov adc push sbb rex.X rex.WB cmp and movabs fsubr jge imull rcl mov movabs fnstsw xchg jle pushq clc cmp mov roll lock cltd push sbb popfq adc callq (bad) (bad) addr32 sub fidivr (bad) rex.WB (bad) mov add (bad) adc ds test mov rex.XB (bad) (bad) cltd (bad) jo mov divb cmp sti or adc sub cmc mov rclb bswap or sbb xchg repz pushq jle sbb callq popfq and je push jmpq cwtl push mov es sub rex.WB cs adcl stos sarb add mov (bad) andb (bad) rex.WB push mov addr32 subl sub es rex.B (bad) rex.WXB test jns movabs (bad) scas loop push insb or sub mov lods fcoms xor rex.WRX add jl jg test xor addr32 shlb mov xchg rex.RB sub jb xor xchg es sarl add ffree in jo mov xchg fld hlt add rex.B test data16 fisub rex.WRB cs lods pop andl rex.X mov lock rex.RB xchg sbb addl (bad) mov or (bad) (bad) rex.WR (bad) xchg xchg push test cmpb rex.WB jns enterq sahf rclb fcoms clc rex.R fwait jl push or rex.XB sti rex add (bad) rex.RX iret popfq push xchg lahf push jne test int3 xchg or pop sub cmp rclb jmpq or in jb jle xor mov and (bad) cwtl (bad) push int3 in mov xchg add push popfq add sahf push xchg imul mov adc out jno cmc rex.RXB out and (bad) rex lock (bad) sbb jmpq (bad) mov jo insb push rex.WRB pop test nop imul enterq test out rex.RB out fstl rex.XB nop xor clc addr32 cmovnp push (bad) add xor (bad) push (bad) cltd mov int movabs xchg orl add cmp pop scas test out lea rex.WR (bad) nop or test sub mov sbb rex gs adc rex.XB (bad) int xlat mov sub popfq push movabs shrl jbe mov add out rex.R and sbb or or xor (bad) xor nop jns (bad) shlb (bad) es out cmpsl pop rex.WXB sbb xor pop cmpsl test fmuls lock (bad) outsl xor jp (bad) rex.WX (bad) sbb movabs gs sub add cmp add rol (bad) xlat sub pop rex.XB pushq push push jmp enterq js jne rex.WRX shll cmp or cmp (bad) rex.WRX fistl int3 or callq xlat rex.WXB popfq int cli (bad) push hlt and out mov (bad) (bad) mov pop cmp jb rex.W mov jns test out push sti movabs je rex.WRX pop scas (bad) mov mov sbb (bad) callq pop rex.RXB leaveq out add pushq (bad) (bad) (bad) jne fmuls xchg xchg sbb cmovs loope adc rex.RB pushq stos pop (bad) pushq jmpq mov sbb pop test jg data16 sub xchg (bad) xor icebp rex.RX mov movabs rex.RB imul mov (bad) or pushfq pop test mov lahf rclb mov imul adc sub lods pushq add adc cmpsl sub xchg int xor xchg pop test (bad) jrcxz test retq push movsb add popfq out jg sbb rex adc callq movslq lahf fwait rex fimull rex.RX out movabs (bad) or jne rex.WRXB mov ds (bad) pop loop rolb rex.WRXB int3 pop movabs (bad) cli jbe mov xchg repz (bad) jbe fs rex (bad) push mov stc rex.B cli lahf mov (bad) (bad) pushq (bad) sbb or ss and adc (bad) add retw xor test mov add fisttp xor rex.WRXB pushq xor (bad) mov pop pop rex.WX jno lods pop test push adc lea rex.RB fistpll jge movslq cmp adc xchg mov stos mov sub loopne push and andl xchg sub rex fs sbb or retq cmp cwtl (bad) or (bad) sbb fwait jmp jno or imul jo repnz int (bad) pop and mov fistp pop rex.WR fisttp rex.XB mov (bad) xor cmpl mov stc popfq rex.WRB xor add outsl sub int3 mov (bad) push pop lret sub (bad) rcll rex.X adc (bad) decb (bad) out mov add movslq xor add fadds jne or loope fidiv rex.XB fs push and orl and cmpsl xchg push test jmpq mov repz rex.XB sub cmp pushq in pop (bad) ud1 addr32 mov cmp ficompl mov in jns or (bad) rex.WRX adc cwtl cmpsb andb hlt (bad) pop jge jns sahf push and jne jbe hlt callq (bad) cmc (bad) pushq (bad) sbb rex.WB fwait pop loop lea ror pop jns inc addr32 insl movslq or (bad) mov (bad) xchg pushq sbb fidiv pushq divb xchg rex.WB scas test (bad) pop loopne rex.WRXB rex.RX push sbb mov pop pushfq callq mov push rex.WX jns push in add cltd add or jbe movslq pop rex.WR jnp (bad) cmc xchg flds sub movsl xor sti pushq out xchg adc insl enterq push gs je jge mov mov mov jae pop shll clc push xchg sbb movabs out rex.RXB rex.WB push xor jne xor cld clc rex.X out mov (bad) scas jge pop (bad) imul scas stc lahf jge clc repnz jb insl xlat rex.WB rex.X rex.RB test jae rex.WB loopne rex.WRXB mov push hlt js sub test cmc sub lret rex.RB mov lret jp add jne jrcxz sub movabs lock lods movabs pop or xchg jp test movabs fsubrs add rex.B (bad) xor mov out fstpl xor int outsl sbb rex.WB add outsb and movabs jno repz (bad) stos rex.WB movb sub lock movabs rex.B fs rex.XB js xchg rex.RXB rex.R leaveq rex.RB test (bad) lods (bad) cmp sbb out pushfq and rex.WX sub (bad) mov sub (bad) (bad) (bad) push movabs xor or pop and and ds cld xchg fs jne test imul scas fiaddl (bad) out xchg jl andb sti rex.B add or (bad) pop xchg adc fcompl and data16 rex.WXB (bad) fxch rex.WXB xor or xchg xor ds idivb jmpq (bad) sarb loop repz mov sbb xlat xor lods (bad) sub xchg lock jno adc mov vminss rex.RX pop cmp movabs je divb or in mov rex.WX mov cmpsl add fmull pop mov test in enterq sbb sbb testl imul fist sbb jp (bad) push (bad) addr32 and movsb pushq mov callq (bad) add out (bad) enterq (bad) idivl rex.WR popq fcompl movabs rex.WRB rex.WXB rex.WRXB rex.WRX (bad) xchg fwait mov or (bad) mov fadds fmuls xlat stos (bad) pop lea enterq cs and add jmp rex.WB mov imul jbe test pop rex.WRB push cmp sub (bad) movabs stos ja fs or rex.X sub rex.WX rex.WRXB out or (bad) sub hlt (bad) xor movabs sbb loopne rcr pop test and xchg shll jb xchg retq jbe mov movsb stos or add cmpsl repnz cmpsb loop rex.RX xchg mov sbb (bad) jb fadds rex.R movabs andl repz stc pop (bad) xor fsubrs pop fstl test (bad) sub adc pop cmc and adcl and adc mov mov pop stc push xchg roll sbb jle sub fmull test rex.W mov or xchg cmp outsb xchg (bad) (bad) fldl rcrb push (bad) xor push xchg divb (bad) vcmppd leaveq adc push adc or orl xor jl (bad) sub sub out mov push lock leaveq sbb mov setne and sub sub add icebp xor movslq out xor neg (bad) fisubl or loope iret popfq mov mov (bad) or rex.WXB js sbb shrb leaveq rex.WR mov mov rex.RB es popfq pop jmpq or pop mov gs and int3 jo push xchg es push fs (bad) xchg rex.WXB (bad) mov pop and roll or adc mov movslq rcrb push mov adc mov xchg push xchg push jl mov (bad) jnp mov stos rex.WRXB (bad) mov test movabs sbb js lock xor xlat in rex.WX or cmp sbb enterq mov sub stc xor adc and pop fimull (bad) jmp cmp xchg mov sub (bad) (bad) fdivr (bad) loopne mov lods jns callq mov fdivrl jrcxz push sub not jo push or (bad) mov cs stos mov fwait movabs (bad) addr32 pushfq xchg cs lahf adc (bad) cmpsb (bad) pop pushq push (bad) hlt (bad) movsl movsl movslq jae rex.WX test mov fistp rex.RX mov (bad) cmpsl rol rex.RXB pop sub cmp mov out xor jge cld lods pushfq movabs push repz out movsb or mov jmp push (bad) cmp ficompl jmpq std jp fcompl in sub xor (bad) mov or cmp rex.XB sub cmpsl loop jns jmp fstpl imul and fnsave mov rex.WRX rorl (bad) cmp icebp (bad) pop ds test push loopne jl add rex.RB pop outsb movsl fmulp rex.WR rex.WRX in gs sahf out sbb add rex.B int3 (bad) popfq mov int3 mov pop outsl or cs (bad) (bad) xor add popfq pop (bad) jrcxz jge cmpsb pushq (bad) cmp mov xor rex.R rex.R imul sub fcmovb mov rex.RB movsb pop rcll rex.WXB int3 mov mov and mov loop rex.R rex.WR imul test lret cmp rex cli scas movabs rex.W rex.RXB cmp mov adc rex.WR and xor gs mov push shrl rex.WXB fs pop cmc push fnsave (bad) (bad) (bad) sub mov pop rcrb xchg (bad) mov rex.RXB flds rex.WXB fwait decb test cwtl cli push cmc movslq stos loopne xor scas and callq xor push mov (bad) (bad) fisttpll add jns (bad) pushq callq (bad) jno rex.WRXB lock rol pop icebp (bad) shr and popfq xlat xor sbb enterq (bad) sub xor pop mov out or xchg mov sub enterq and jrcxz mov (bad) jno rex.WRXB test jmp push add (bad) retq icebp push out push xor or (bad) cs callq xor and imul test add push mov rex.XB sub or pushq in sub mov mov iret adc cwtl cmp cmc fnstenv or and jns and adc sti (bad) out rcll retq jbe mov mov mov mov sub cmp std (bad) cmp push loopne std rex.WX and and adc loope rex.WRX lahf fist shlb jrcxz xchg mov jle sbb or mov (bad) movsb sub jnp rex.WRXB rex.RXB jmpq fsubrp std fidivl (bad) adc (bad) rex.B outsb jp test sub or lock sarb sub adc xor addr32 sub and roll vpandn pop in ficomp in or insl out imul pushq jrcxz and xor sub stos rex.W (bad) jae or callq (bad) push rex.WRX enterq (bad) xchg (bad) jmp jne or idiv sbb (bad) mov push mov xchg xor jmpq mov or movslq pushfq (bad) cmp jmpq and (bad) subl lods adc rex.RXB out xchg lock adc (bad) out rcrq cmp je rex.WB rex.RXB je or xchg (bad) add jo cmpsl xor mov fcomp xlat or int pop and enterq rex.WRB sti mov jle rex.RB xor or js (bad) or (bad) (bad) mov stos mov rex.WR (bad) pop jg (bad) repnz fwait rex.WRXB loope adc jle rex.RB and rex.WB fidivrl and (bad) jrcxz pop pop hlt rorb jl pop and sbb sub xor (bad) fnstcw mov (bad) jb push (bad) (bad) rex.WR data16 jg iret ss popfq lahf clc mov (bad) shll rex.WB jbe rex.X loope add (bad) pop cmp divl mov rex.WRB addr32 sub test jge ja rex.B test movabs rorl (bad) jns jo fisttpll xchg mov add add (bad) jp (bad) (bad) mov rcrb sbb loopne mov loope int roll sub (bad) pop xchg add retq movslq insl loop add sbb push jb (bad) rex.WB cmp sahf adc and movabs movabs gs xor mov rex.WXB rex.RX adc scas xor push add rex.WB mov sub rex.WRB test pushq rex.WR loopne sar cmp ljmp cmp in mov (bad) and mov (bad) enterq in xchg rex.R fs outsb xor rex.WB rex.WX cmp and cmp sti (bad) test xor (bad) rex.WXB movsb (bad) mov addr32 in imul outsb mov out or in rex.WB add rorb or sub repnz stc rex.WB ss push je rex.RX rex.WR rex.WRXB test punpckhbw callq (bad) pop mov pop mov sub orl jnp punpckhdq movsl rex.RX pop pop mov cmpsl fidivrl cmc (bad) (bad) rex.WB repz xchg cmp rex.WB loopne and test jmpq cmp fldl (bad) clc rex.WRB jge rex.WB cld sub add jno rex.WXB lock rex.WB xlat rcll movabs sub loope or sub (bad) stc add lahf cltd jmp rex.WB rex.RB scas test xor sbb rex.XB rex.WB and rex.WXB add add out repnz mulb rex.R rex.WB xchg rcrb es sti (bad) (bad) adc int3 jb out jne in sub lret rex.WRXB gs sub mov movslq sub rex.WB pop fsubrl outsb clc (bad) (bad) movabs shll sbb rex.WB sub and in rex.WB or pshufw (bad) gs imul lcall pop (bad) (bad) fimul or (bad) xchg (bad) mov cmc rcr jg fldl mov stos imul sbb sub xchg pushq add mov (bad) xlat mov push mov cmp stos sub cmpsl (bad) mov rex.WB xor retq test rex.XB mov add (bad) lret fcmovu callq lods icebp rex.WXB jg loope orl push sub (bad) mov sub rclb adc or (bad) rex.WB (bad) jnp add sbb cmp ljmp jns xor (bad) xchg or mov (bad) and outsb mov scas test mov mov sub es cmp rex.WB push pushq out shll std out sub jae hlt mov movabs rcrb pop pop push movsl sub (bad) rex.XB popfq (bad) mov rex.WB stc jae rex rex.RB movsl mov test mov pop (bad) ljmp test data16 iret mov jne (bad) jg retq rex.WB int3 xor ja loop movabs (bad) adc xor rcrb pushq sub xor jge fmuls lods mov cld cmpsl pop add xor and sbb in lahf mov (bad) cmp (bad) pushfq insl or rex.WRX out rex.WRXB rex.RXB rex.WX pop (bad) addr32 xor add mov mov popfq cmc shlb jnp data16 pop movsl fildll and xchg adc movq (bad) rex.RX and leaveq jle lret lock callq (bad) out retq dec (bad) shrb jno jrcxz sti je xlat or jrcxz or test in add sbb jl callq and push stos insb fwait (bad) cmpsl (bad) (bad) (bad) or pop add (bad) jp jrcxz sub test (bad) sub jae addr32 (bad) mov mov fstpl mov mov cmpsb stos and es out movabs rex jno rex.B rex.WR and (bad) fxam and jl push sub ss rex.WB xor or test outsl (bad) out push (bad) (bad) push xchg rex.WB or stos in pushq imul cld std sub rex.WXB xchg jl or retq int3 in vpaddq rex.B add fnsave xchg (bad) lock retq movabs rex.WB movsl loop pushq cmovns xchg test (bad) sbb test mov pop jo insb rex.WB fs adc cwtl xor jp lret or scas test adc xor clc fwait test xor xchg adc (bad) lods mov rex.WB outsb mov pushq xchg std rex.WR rex.WB rex.XB rex.WRX mov movslq (bad) pushq loopne cmp (bad) sbb lock pop jl rex.B leaveq push fcoml callq cltd pop rex.WX out loope out sti xor callq mov rex.WB (bad) repz pop pop out xor mov out cwtl std (bad) fimul outsb mov sti imul test (bad) (bad) jmpq cmp xor (bad) rex.WB jl cmp callq push int3 rex.WR and adc xor sub add (bad) in push cmp rex.WR retq add movabs sbb in ror (bad) rex.WR lret mov (bad) push adc pop data16 imul mov jle push and enterq xchg and out gs movsb xor lret sbb rex.WB fbld rex.WX xchg xchg or (bad) pause push cwtl (bad) and imul xchg popfq (bad) clc es push mov test rex.WB scas adc (bad) (bad) rex.WRB rex.WB mov push mov out in callq xchg jp mov (bad) outsl sub int mov and (bad) enterq cltd pop push adc mov in cwtl insl mov rex.WB pop (bad) cmp movslq out rex.X sbb xor loope callq stos xchg sbb and (bad) pushq jns enterq iret mov cmc rex.WB and mov mov scas mov es (bad) add sarb pop mov sub data16 scas xlat mov pop rex.WB pushq imul (bad) (bad) (bad) test insl fwait rex.WRXB rex.WB rex.W and or or jrcxz movabs (bad) callq push rex.WB ss loopne xor cli (bad) ja cs rex.WB in movsl push mov mov ficompl (bad) movsb sarb pop fcoms and (bad) and xchg mov sub rex.WB rex.RX callq xchg jbe fs hlt stos movabs jl mov adc lret je insb mov mov (bad) (bad) mov xor pop (bad) cmp out gs lret testl cmc pop ss xor adc or lret xchg adc xchg pop out (bad) mov or cmp adc and (bad) push mov shrb (bad) movabs imul sbb cmp adc imul rex.WB es pushq jo rex.WB fs xchg movabs pop shll sbb sub cmp sbb cmp in shll pushq xchg test (bad) imul sub movsb data16 sahf jo rex.WB (bad) cld (bad) icebp xchg or (bad) sti mov enterq push push sbb mov rex.WB cmp rex.WB lret push rex.RB retq mov push mov pushq rex.RXB rex.WB fwait xchg mov (bad) (bad) or (bad) rex.XB repnz addr32 xor mov sti (bad) rex.X xchg sahf test rex.WB xchg push pop mov xchg xchg push xchg add insb sub orb std or rex.WB repnz test cmpsl adc hlt ficomp movslq add (bad) push icebp or mov (bad) jl out rex.W sub jle rex.WB sbb cmp cltd imul rex.XB icebp rex.WRB sub sbb sbb pop (bad) (bad) pushfq movslq stos push rol movntq rex.WB mov jmpq rex.WB cs (bad) callq (bad) jnp andl cmc test sub xchg xlat nop cwtl rex.WRB rex.WRXB movsb loope mov rorl sbb rex.XB leaveq xor sub jl fisubrl leaveq (bad) movabs shrb or outsl xor sub movsb (bad) adc (bad) fisttpll rorl rex.WXB rex.WRXB test repz push sti cmpsl (bad) cli (bad) outsl and jo data16 fist movsb and or rex.XB xor lea out xchg orb (bad) fsts rex.B movsb (bad) mov nop int3 xor rex.XB mov add mov jle je or push rex.WB rex leaveq adc imulb retq retq xor outsl sbb push sub rex.WR cmp xlat jge sub cld lret (bad) in mov jg rex.RB xchg rolb or rex.WB (bad) test (bad) pop rex.XB rex.R rex.WB jne orl (bad) cmp (bad) (bad) cmp xchg jae add xlat rex.WB (bad) add movabs enterq movabs mov and lret sub fs cmp or sti mov cmp sbb (bad) loopne mov rex.XB rex.WR mov jmp fldenv imul pushq sub fsubr rex.WB sub mov mov pushfq lahf xchg push pop rex.X lods (bad) enterq popfq ds add repz jno outsb jb xchg callq (bad) (bad) insl pop and fcomps rex.WB cmp stos rol mov test imul subl pop leaveq rex.WRB (bad) iret push stos xchg cs sbb xor xchg cltd xor rex.WB repnz mov test rex.WB rex.WRB stos add cmpsl movsl sub mov push leaveq out mov and cmp (bad) rex.WX mov scas repz or out mov imul adc sub out movsb xor add cmp push outsl cs add rex.RX lods movsl jbe lea (bad) xchg movabs sti (bad) std out andl (bad) rex.WB or out ja sub (bad) jae or jmpq rex.WB add xchg rex.WXB rex.WRX add (bad) pushq es fild xchg js icebp sub mov cmp push or test imul sbb fstpl jrcxz rcrl mov sahf out (bad) (bad) jne jb (bad) orl (bad) test shrb (bad) cmpsb (bad) xchg mov xorl ror in rorb mov clc add jae (bad) (bad) rex.RB icebp loop rex.X rex.WB repz out ja outsb mov int3 jle and mov or rex.RB rex xchg out or pushfq movsb jg (bad) data16 mov lret movabs push cltd pop cmp sub addr32 (bad) pop insl pop fadd rex.WB movsb jns fwait xor (bad) movabs clc jb mull push rex.WB in pop pop jns movsb (bad) mov cmp and (bad) or callq xor outsl pop and xchg push pop sbbl rex.WB ficom rex.RXB jge (bad) outsb or rex.RX jae ja push pop (bad) test adc loop adc jbe sub (bad) pushq mov popfq jb out (bad) shlq stos xchg movslq adc sti clc jrcxz (bad) sahf (bad) (bad) addr32 jae cmp xchg mov rex.WB xchg xlat and test jrcxz add xchg (bad) lock out xchg rex movsb xlat in jp mov (bad) adc rex.WR imul cmp sarl cmp rcrb out icebp cmpsl fisubrl orl (bad) pop rex.WXB stos decq test jbe rex.WRX rex.WB rex.X adc adc clc push xchg and or sub and push rolb and rolb wrmsr pushq xor mov cmp retq adc rex.WB fistpl out rex.X and shlb movabs rex.WB sub cltd rex.WRX loopne sti rex.WXB test icebp rex.WB (bad) xchg (bad) push pop mov out test adc fsubrs pop imul jbe cmp fcompl nop sub out rex.WRX andb icebp loope rex.WB add movsb cltd pop pop xchg and cwtl or xchg mov rex.W pop and push jbe mov mov push andl adc rex or jns sub mov xchg retq rex.WRXB jmpq mov fimull sbb movabs lods rex.WB (bad) mov movl rcrl mov mov jmpq mov cmp xor (bad) rex.WX (bad) jno or pushq callq (bad) jno cmp add or out xor or mov sbb rol pushq sti movabs mov ficoml rex.RXB fimull sub loopne xchg movabs mov jnp xchg rex.WX xlat gs and test in ss sub fist mov fcmovne jmp add (bad) cmpsl loope or add lret pop rex.WR cs outsb adc adc ds fwait and outsb stc xchg rex.B sub xor add stos test jne movsb gs lret xor (bad) mov movabs popfq addr32 scas (bad) lret divl in jg push imul pop (bad) sub (bad) xchg and andb jge rex.WRXB rex.RXB rex.WX rex.RX scas jo loopne (bad) icebp cmp out test cmc (bad) sbb outsb xchg pushq sahf movabs rex.RB and add and (bad) mov xor (bad) lods fdiv in mov enterq push jb and push cmpsb mov std cmc lock leaveq mov lret fdivl pop movabs cmp adcl rcrb push (bad) repz adc out movabs outsb sahf rex.RB imul nop mov rex.WX jo push rex.RX xchg test in xlat xchg test pop sbb (bad) lahf mov xchg jbe or (bad) jbe imul lock sub (bad) test mull add nop sarl push jno mull pop retq xor rex.W add xor mov orl and sbb mov pop mov or rex.WRXB adc (bad) lods xor (bad) (bad) fnstcw movabs insl cmp test ss loopne (bad) pushq mov jl pop add jno cmp (bad) rex.X jno sub fcmovbe imul cli jno rex.WR rex.R (bad) callq lods loopne xlat fmull (bad) xorl sub bts insb mov fdivrl lock add push and (bad) (bad) (bad) cld lea or xchg add popfq add rex (bad) (bad) clc and subl (bad) (bad) scas ja xlat (bad) cmp movabs cmp and adc mov ja movsb (bad) test xchg (bad) sbb out (bad) ds or enterq jp push jp push ja mov movslq cltd icebp (bad) fcoml add (bad) cmp mov or rex.RB or cmp movslq or clc mov (bad) pop loope jmp loop jb rex.RB rex leaveq fwait rex.RX mov sub enterq or push (bad) fimul (bad) cltd rex.WB pop loop jnp push test xchg or movsl iret (bad) push int push xor js je test mov fisttp movsl jno pop icebp and test xchg rex.B retq pushq sbb fdivrl test jge adc mov gs pushfq (bad) callq enterq movslq decl and out lods pushq movabs rex.WB rex.WR movabs xor sahf clc rex.WRB rex.WB (bad) (bad) jge (bad) sub retq fwait or sub scas ror add cmp out add test cmpsl push movsl in loope cli rex.WB test push es out rex.WB hlt (bad) repnz mov (bad) jp movabs pop or or pop mov (bad) push insb fstps fstl mov jns (bad) pop pop push cld rex.WB lahf (bad) (bad) add jns rex.WRB cmp jnp adc push rex.WB cmpsb js cmc mov mov icebp lea enterq fcoms xchg rex.WX rex.WB cs (bad) movsb or loopne jge test jp (bad) and jl cs sub rex.RXB fistp divl mov lock or xchg xor out jle and (bad) movabs or or (bad) jbe sub (bad) (bad) jno fcmovb pop retq mov sbb (bad) (bad) xchg pop (bad) clc fnstenv rex.WRXB imul (bad) lahf mov rex.RXB mov xor insb xchg (bad) xor pop sbb cld or (bad) fistl jp xchg sbb in sub fmul jbe (bad) pushq lret push je adc outsb fdivs sub int (bad) movabs rex.W repz add sub sbb rex jne cmp xchg popfq (bad) out rex.WB (bad) notb (bad) sub jb (bad) pushq and xor movabs cmp and rex.WRX add add out xchg push enterq scas adc pop stos (bad) rex.B cmpsl jg in out insl adc pop xchg es xchg rex.WRXB fmuls outsb callq stos pop push (bad) sub jp test mov movabs sbb mov sub and fstpl fadds (bad) clc xor rex.RX out add jne test or test subl decb imul mov rex.WX mov mov jmp sarb nop push lock out add (bad) or adc (bad) push adc (bad) out lahf xchg (bad) (bad) pop pop cmp sub rex.WX rex.RX in pushq fisttpll loop fimull fs rex.X ficomp (bad) fcoms rex.WX (bad) (bad) add in cs rex.WB mov jg (bad) xor addr32 (bad) in (bad) (bad) lods rex.WB xchg es jns pop pushq adc lea pushq jne sbb mov rex.WB rex.RXB fsts fsubs sub jl sbb test sub nop movslq ja cltd cmp mov cmp rex.RX insl cwtl std rex.WB sti pop add lea flds fild in pop pop cld mov and (bad) rex lea (bad) pop rex.WB imul xchg jbe stc rex.WB (bad) sbb rex.WB rex.XB fmull cmc repz adc jle (bad) rex.WB (bad) sub rex.RB xchg nop or cmp pop mov cmp xchg pushfq sbb sub (bad) in and loopne or (bad) or pop rex.RX (bad) xlat jmp out lods adc fild rex.WB adc clc sub data16 xlat cmp add (bad) (bad) rex.WR and retq lock sub add addl andl add sub shll and pushq lods enterq cmp mov cmp xchg lret xchg mov pushq (bad) (bad) pop test rex.WB jns pushq adc mov pop mov (bad) pop insl xlat and cmp mov mov sbb fdiv insl in rcrb lahf xchg (bad) and test xchg jmpq sub pop rex.WB push and and lea in lahf rex.RB rex.WB (bad) sub cltd xchg (bad) push mov xchg jne (bad) lock adc rex.WB stos xchg mov jae add sub std rex.WB add rex.WB leaveq js rex.WB rex.W cmp add je cmp lods fistpll add movslq (bad) pop fwait mov int (bad) shr cmp cmpb pop adc loope push adc nop (bad) rex.W imul xchg (bad) out lahf cmp (bad) add mov in orl jne stos lret rex.RB cmp xchg adc jno decb mov and jne rex.WX sub sub gs xor test nop rex.WXB rcl out (bad) (bad) xlat and sbb fmuls rex.RB xchg jnp push cmp rex.XB pop and sub (bad) cli (bad) mov pushq rex.WB test jge cmpl (bad) or (bad) stos (bad) js insl lret enterq mov (bad) add and add mov pop loopne mov rex.WB rex.WRX rex pop mov lock movabs (bad) pushq mov xchg lahf callq out push pop mov rex.WB push jae test repz mov lods cmpl pop imul and adc cmp rex.WRXB in ss test mov mov push js vandnps push and sbb or enterq fcoml (bad) negl popfq lret cmpsb lret xchg movslq pop xor (bad) rex.WB rex.B jle mov test callq icebp cs pop enterq push or add mov sub (bad) (bad) add adc pop or lret jge mov imul mov and pushq pop mov loop sub push movsb jp fistpl or xor imul rex.W and xchg xchg mov and movabs xchg in rex.WB xchg cmpsb adc or movabs rex.RB popfw rex.WB cmp ja rex.WB iret xchg rex.RXB push in subl sbb lret (bad) pop mov ds jrcxz loopne push or shl js pop mov movslq mov sbb (bad) adc cmp rex.WR lahf rex.WB (bad) popfq jbe mov rex.WB push xor rex.WXB rex.WX (bad) mov out icebp ss stos push adc add (bad) rex.WB div callq mov sbbl xchg int rex.WB sar in hlt xchg rex.WB int3 incl (bad) pop pop adc (bad) lret rex.WB jmpq rex.WXB (bad) mov sub test mov leaveq clc (bad) rcll pushq and cltd xchg pop mov (bad) add (bad) je (bad) mov sti (bad) popfq pop int lods xor mov rolb sbb (bad) (bad) fs cmp lret rex.WB mov push int3 sbb loope add (bad) rex.XB lods movsb ja sahf sbb data16 stc rex.WB (bad) pop pop lret shlb sub pushq loopne mov mov fs loop cmp or sahf pop and cs fisubrl sub mov mov (bad) callq rex.WRXB rex.RX add scas movabs orb imul jne (bad) (bad) ss push jbe (bad) jl,pt leaveq movslq retq mov jmpq or (bad) cs rcrb test jrcxz rex.WRXB fnstcw rex.WB repnz data16 (bad) cmp and lret (bad) push (bad) loopne test xor adcb rex.WX pop int3 (bad) xchg adc (bad) jge ja insl pushq rex rex.WB fiadd leaveq adc rex.WXB lods jl sub xor in rorl jne add (bad) or add jrcxz rex.XB and rex.RXB pop sti sbb lea hlt rex.WB emms jne cmp pop leaveq and movslq rex.WRXB pushq mov pop and pop jrcxz rex.WB (bad) (bad) (bad) sbb (bad) movabs rol (bad) rex.WXB pushq cmp insb jb push rex.WB rex.WB fcompl callq sbb xlat test (bad) rex.WX xchg shrl loopne xchg rex.WB out negl (bad) test cmpsb mov shrl fldenv loopne rex.WB mov or adc or pop mov rex.R lock rex (bad) cwtl add push (bad) sbb mov int lret xor push xor js cmp rex.WB adc (bad) pop callq (bad) pushq mov or xor lahf rex.WR mov stos pop lea sub sub (bad) callq xchg sahf add out jns sub cmp add gs add xor decb jl cwtl stos rex.WXB rex.WB repz add rex.WB add divl mov lret out and rex.WX (bad) enterq loopne decl sub test pushq sub jbe add (bad) outsb fcmovu (bad) lahf rex.WXB xchg pop movslq jmp jmpq sahf lods (bad) lods push lods shrl movabs pushq iret movabs retq and xor sub sahf pop (bad) retq negb (bad) mov jbe lret cmp jmpq pop xor mov lahf sub popfq (bad) cmpsl pop cmp int push rex.W movsb rex.WX pushq cmp out (bad) xor sub (bad) mov out fwait or cld pop mov add in stos in cmp fs gs sbb (bad) xor addr32 jmpq movabs cmp sbb adc enterq sbb pop pushfq sbb (bad) mov (bad) add or movsl cmc enterq or clc sbb (bad) scas jo push xchg pop xor mov rcl rex.RB jo rex.WB xor cmc stos imul lea pop add insb cmp pushq hlt adc cmp lahf out mov cltd lods sbb mov stos hlt int3 ds (bad) callq mov mov test mov xchg rex.RB stc cmp push fcomps test jge rclb and jns pop rex.RXB xor add callq or (bad) fistpl in sub sbb (bad) js rex.WX test (bad) or ds out adc rex.WR (bad) out lods add rex.RXB rex.WB jbe (bad) rorb leaveq xchg retq ss rex.WB xor in sbb pop rcrb or sti (bad) gs pop ja pop rex.WB retq enterq rex.WR movb adc (bad) rex.WB mov rex.WB rex.WRB xchg int3 (bad) fdivrs rex.WB xchg (bad) and popfq adc mov sahf rex.X and and rex.WB (bad) mov sbb or pushq (bad) pop movabs hlt mov sub mov xor cmpsb rex.X (bad) leaveq insl addr32 pop push xchg rex.WRXB xchg je xor push (bad) pop and hlt out cmp pushq rorl mov (bad) mov jns test adc sbb repnz pop mov rex.WB rex.WR or mov mov add cld idivb mov jge cmp add rolb rcll rex.WB or cs and or cmp or pop xor clc sub (bad) cld rex.WR rorb mov and push test in popfq movsl jb fdivl rex.WRXB rex.WXB lods mov sbb xchg lock repz or sbb out pushq (bad) (bad) mov rex.WB lock mov pop movsb mov mov xor jl cmc rex.WB sbb push iret fldt rex.WB mov jae out pop jno rex.WB mov mov cld enterq test movsl out jg jne pop rex.WB sub data16 popfq shll callq int3 jo insb mov fimul (bad) (bad) movsb fsubrl callq mov rex.WB (bad) pop (bad) rex in subb xchg rex.WB pop or xor push mov add ja or addr32 cmp adc rex.WB mov cmp negl or lret jge rex.WXB xchg (bad) xor cmp xchg loopne pop cmpsb mov xor scas or mov add mov jrcxz xchg mov pop rex.WB and callq test rex.WX data16 cltd (bad) lods pop jo fst fucomip sbb test cmp lods outsl cmp and xor movsl rex.RB rex.WB or je leaveq cmp pop pushq adc cli rex.WB sub rex.WRB rex.WB fnstcw scas mov popfq rex.WB mov rex.RXB xor insl jno mov rex.WB icebp (bad) fildl pop cmp push loope (bad) ljmp add (bad) mov ficompl cmp test (bad) xor mov callq sbb rex.B imul rorl vmovntps mov test or push fldl sub js rex.WRB rex.WB sub sub sbb mov rex.X rex.WB mov mov pop add jno movabs xchg rex.WB cmp (bad) mov rex.WRX push loopne rcll mov (bad) sub jae xchg mov jle fistpl movabs pushfq cld fwait jg add js xchg adc jae ror (bad) scas pop test stos imul mov out mov fild vrcpps sbb push or test xor xor sbb jmpq ds out enterq outsl push add movabs rex.WR push vpshlw rex.R test adc (bad) rcrb ja xchg rex.WB fisttp out and out movsb loop movabs retq pushq (bad) pop enterq mov push out loop lret cmpsb sbb jmp addr32 (bad) pop (bad) rex.WB out xchg jns mov roll stc hlt (bad) clc rex.WB pop add insl rol rex.WB mov add (bad) mov or insl in push xchg cs pushq vpaddsw rex.B rex.WR mov sbb adc sub jo adc movabs mov pushq fisttp sub (bad) xchg movabs clc mov fildll push jmp std pop and in sbb fidivrl shr fcmovne jns icebp (bad) add xor sub cmp outsb xchg (bad) sbb jnp out rex.WB or rex.R callq dec jg add rorl stos rex.WB rex.RX lods retq rex.XB cmp push lea push loop movabs jg (bad) rex.WB scas jl shrl insb add mov jp sbb callq imul push push xchg fwait adc movabs sub test (bad) adc (bad) movabs lods sbb or clc int push movabs pop fwait enterq mov pop xlat leaveq rex.WB xchg sub sbb test callq mov rex.W loopne or stos pop mov repz (bad) cmp (bad) mov lahf (bad) pop add movsl jb in out repnz loop fcomp push movslq and (bad) xadd rcr pop add (bad) callq rex.WR rex.WX jrcxz enterq pop xor rex.WX rex.WB (bad) jb rex.RB and mov icebp (bad) cmc jg retq fnsave insb rex.WB sahf pop or mov xchg loope mov movsl rorl (bad) lods rex.WRXB xchg (bad) rex.WB or mov in (bad) lock addl push mov es scas mov nop icebp test (bad) in movabs or hlt push add addr32 rex.WXB repnz movabs mov and js or stc sahf and add and and xor (bad) mov xor cmp (bad) jno (bad) int3 and test sub movabs (bad) and stc iret rex.WB or jo rex.WB lock fdivl jmpq (bad) data16 movabs adc std mov imul insb (bad) mov rex.RX (bad) and lret mov pop int3 icebp mov jne xor jbe movabs pop cli imul adc or movsb pop and rex.W mov shrl insb rex.B pop movsb repnz jg subl xchg lods fildl fucomp (bad) movabs and mov add movsl fimull iret xor movabs and mov iret sub sbb rex.RX rex.RB rex.WB push or pop push sbb and jnp mov out loop rex.WB ss sub test jae rex.WB sbb sub stos mov movabs pop and push pop rex.WB fwait mov or and outsb imul fist stos xor rcr sub mov sbb mov loope loopne rex.X test or jl (bad) xchg rex.WB mov push divb lret rex.WRXB rex.WB jg mov pop (bad) pop jl ss icebp mov lret (bad) push movsb mov test push ja rex loopne (bad) pop rcll rex.RX pushq out gs (bad) (bad) sub push or sbb pushq mov jne icebp rex.WX addb rex.WB loop xchg (bad) lock push loopne addr32 (bad) jg scas jbe mov gs stos retq and retq ja or cmc outsl pop mov sbb xchg stos jb shrl jp push in mov (bad) xchg loopne fiaddl rex.WB cmp sbb mov insb xor rex.WRB rex.WB rex.X test xor and mov add cld rex.WB rex.WRX rex.WB pop pop jo lea rex.RB movabs xor stos jl nop rex.WB and cmp out sub mov hlt mov xchg jae mov sarb pop xchg addr32 (bad) (bad) je xchg callq rex.X pop lahf and fwait cld test sub jnp cmp in shl and push adcb cmc imul rex.WB push out sbb popfq rex.WB retq sahf cmp xor lods xor rex.WB adc jmpq repz rex.WB sar movsl outsb pushq ror mov or xchg lea callq mov in popfq loope jnp rex.RB rorl es rex.WR outsb cmp rex.WXB (bad) rcrb adcb enterq lcall rex.X rex.WR loopne (bad) cmp fsubrs sub sub cmp (bad) rex.XB imul and lret pop rex.WRB loop push pushfq pop mov cmpsl js cmp mov ficompl jg test or adc pcmpeqd ss rex.XB add (bad) xor xchg sbb (bad) push pop adc cmp fsubl movabs (bad) (bad) lret (bad) out lahf (bad) push (bad) fyl2xp1 movsl rex.WB (bad) pop xor nop sub xor outsl add fdivl movsb rex.WB sbb rex.WB pop stos test (bad) lock jnp (bad) (bad) sarb retq imul (bad) mov rex.WR pushq or sub (bad) stos leaveq xor callq push push rex.WXB sub or cmpsl rex.WB imulb lea ja pop xchg pop jne mov movabs push jbe xchg rex.WB rclb (bad) pop or test (bad) rex.B mov scas (bad) rex.WRB rex.WB (bad) sub rorl cmp sahf sbb je xchg jg push imul fucomip (bad) in lret movabs pop mov lea lret rex.WRXB enterq xlat (bad) addl jo pushq fcomps cmpsl push stos adc stc rex.WX cmp rex.RB movabs (bad) jg shlb pop fcoms rex.WR push mov (bad) adc int3 rex.WXB pushq xchg rex.XB in xchg cmovb (bad) (bad) neg gs in loope add xor pop std stc cmpsb scas adc and rex.WRB callq movabs push sbb adc fs iret (bad) mov pop pushq push jo pop lock push adc jns lret rex.WB scas sub hlt ss movabs cmc xchg jb rex rex.WB sbb rorl (bad) imul (bad) movsb mull and (bad) shrl scas xor (bad) mov rex.WR (bad) jbe jns and push xorl mov sahf loope insl rex.W xorl stos mov rex.WB rex.WX (bad) mov mov cltd and xchg rex.WB xor sti pop cs sahf and cli push cmp rex.WB stos push rex.WB pushfq xchg fsubs cli bnd (bad) and push movslq jnp (bad) scas rex.X rex.WB sbb lret rex.WXB mov rex.WB mov test rex.WB or (bad) rex.WB rex.R sbb (bad) push add cli movsb mov add rcrb ss pushfq callq outsl fwait rex.WRB jne add push hlt xchg sub fisub push rex.WRB rex.WB xchg shrb fstpl (bad) pop rex.WB retq shl mov cwtl fcomps pop sbb push rex.WRX rex.WRB xchg (bad) sub cmp rex.WRXB rex.WB (bad) rex sbb lret loopne push (bad) or (bad) fs (bad) pop jae mov (bad) jge (bad) rex.WR mov or or rex.X shll fstpt retq fsubr rex.WB xchg xchg addl lcall push fnstsw pop mov mov xchg rex or scas sub repnz jp xchg cltd lret lahf rex.WB xor lret push push and add clc mov scas mov mov add cltd add stos in rex.WB (bad) adc adc test rex.WB sub (bad) (bad) cmp or callq cmpsb imul cmp jbe pop fwait push (bad) rex.WB in jmp pop mov rex.WB add rex.WRB mov adc pop mov fild and lock or rex.R imul push (bad) divb fnstsw add pop (bad) pop dec ds (bad) or and mov out movslq cmc pop (bad) lret gs rex.W sbb sub (bad) (bad) jle fwait retq rex.B es pop movabs stos mov push rex.X mov repz xchg jl movsl mov int stos movabs sub testl leaveq lret pop rorb cmp fucomip rex.WXB rex.WB (bad) cmp xchg rex.WB mov push sbb rorl pop add push nop rex.WB pushq adc rex.WRB (bad) pushq mov scas callq xor add shll retq (bad) repz mov mov rex.WR or outsl jmpq test imul insb repz loope (bad) sub rex.B (bad) xor rex.B jno fidivl iret adc rex.WB and leaveq (bad) adc xor (bad) cli sbbb mov xchg jrcxz fwait rex.WB test (bad) lea rex.WB (bad) sbb iret js rex.WRB mov rex.X rex.WB adc sbb test movsl rex.RXB xor rex.W cmp cli fistpl (bad) gs faddl iret xor and (bad) mov pushq jle sub mov fnop (bad) (bad) rex.WB jne add fmull popfq cli (bad) rex.WRXB mov sbb push (bad) rex.WXB jno rex.X rex.WB fisub cmp cmpsb jrcxz rex.WB int3 xor mov je xchg callq lahf nop push cmp and jp outsl sub xor movabs jno pop out or rex.X adc (bad) cli jmp xchg callq imul cltd retq out jmpq push imul movaps int3 lret jns rex.WRB rex.WRB push mov mov and push (bad) rex.WB hlt insb movsl movsl jae (bad) rex.B std jp adc sub pop push hlt lods stc leaveq fwait jge and lret rex.RB rex.WRB incb cmp jnp gs cmp jb int3 int rex.WB rex.WR stos scas cld and pop jns data16 stos movsb out (bad) mov frstor or (bad) int3 iret (bad) stos rex.WB rex.WX movsl retq adc repnz rex.RXB mov lods mov cld lahf pushq mov jnp rex.XB rex.WB mov test mov pop nop std movabs in jrcxz insl push rex.WXB popfq (bad) pushfq stos in stc or adc sahf push frstor out test mov rex.WB rol icebp imulb (bad) rex.WB addr32 scas cmp js rex.RX movslq leaveq pushq jg rex.WXB callq add outsl rex.WXB movabs jne (bad) cs jmpq sti sbb rex.WB mov in rex.RB mov or xchg movabs lock outsl movsb (bad) (bad) (bad) out subl cmp lods jns add jle pop rol (bad) in fistp retq enterq (bad) outsl rex.RXB movsb (bad) cmp (bad) test (bad) pop retq add iret mov or mov pop cmp rex.RXB rex.WRB rex.RB or hlt mov or push push xchg push fcompl or add jns sub jne xlat ja jrcxz and fstpl cmc jns movabs rex.W or enterq xchg xchg xchg add rex.RX xchg sub jg jo mov sahf mov (bad) loop (bad) out cmc xchg mov rex.R mov pop fistp adc mov stos lods mov ss leaveq or and pop jno push (bad) (bad) adc jae adc or xchg pop jno jmp fmull rex.WRXB movslq rex.XB add xchg rex.WXB xor decb cltd stos sahf jmpq sahf adc rcll lods (bad) stos addr32 cmpsb cmpsb rex (bad) xchg leaveq imul (bad) or or (bad) out enterq xorps (bad) push and mov cmp adc rex.WRXB addr32 adc cmpsb rex.WRX fisubl jbe cli movsb pop iret leaveq pushfq sbb out callq sahf cmpsl (bad) xchg lock incb rex.RXB push pop imul or and and in ds repz pushq rex.RB callq sub cmp jge push jl hlt sub mov addr32 jo jne and out loopne pop xor (bad) (bad) adc rcl sar iret sub cmp rex.WX cmp pushq sbb rex.W rex.R repnz pop imul lods mov pop pushq (bad) ja mov push mov mov mov and add fcomps mov test jae mov and (bad) insl ficom fadds xchg mov xor cmp add notq sbb imul (bad) rex.W jno pop jg fistpll test rex.W outsl (bad) int3 cmp jne or repz push fmuls add (bad) mov push or xor movabs xchg mov (bad) ror addr32 fistl ds add enterq stos mov add cmp sub movabs stos jno (bad) jno (bad) mov sbb callq push add sub movl movsb nop mov lods fsubl jnp sbb mov movsb rex.WB mov js (bad) jb (bad) mov sub push jle sub mov pushfq ror add xchg jrcxz mov adc jrcxz (bad) jrcxz pushfq flds adc mov pop sbb pop pop cmp pop add cwtl out rex.RB fs sub pop fwait scas addr32 pop mov push mov cmp xchg insl retq (bad) and push repz add add (bad) xchg pushw sub or and ds sub pushq mov shr (bad) push (bad) push loopel rex.WRB cli sarl retq adc loopne in shrb fiadd xchg rex.WRB (bad) pop scas rex.WRXB mov scas xchg sbb in and push rex.WRX pop nop mov hlt shrb and (bad) gs sub fnop and (bad) push mov insb stc jae movabs push and lret sarl sbb or nop rex sbb ficompl cltd sbb rex.WB rex.WRX mov (bad) and mov sub mov iret (bad) push sub mov (bad) and movslq rex.RX jle ss loop movabs mov fildl addq push adc fcoms fist cwtl rcll rex.WB sub popfq cmp pop jmpq adc rex.WB push or fwait mov mov lahf in rex.WRXB retq addl loopne test rex.WB scas sti pushfq jle fiadd stos enterq mov mov je addr32 movsl mov cmp jo push roll int rex.WB scas cld cmp in sub std push out rex.WX enterq test sarl fcoms pop notb in shlb retq (bad) sti jno (bad) hlt lea cld imul jo rex.XB (bad) pushq mov add jo and callq mov pushq mov shrb sub rex.WRXB xchg iret xchg or adc rex.RX stos mov (bad) repnz (bad) xchg fldenv mov pop sbb imul jl pop rex.W mov (bad) xchg idiv cmp add mov fcmove push ds jrcxz out sub jo cli or adc (bad) gs cmpsb adcl (bad) ja in pop mov pushfq push add (bad) pop stc mulb sub mov adc cmpsl mov pop xor data16 xchg xchg add int out rex.WR rex.WRB pushfq (bad) and push (bad) callq (bad) mov pushq sbb mov xchg pop notb xchg (bad) add add rex.RX adc mov movabs pushfq mov in rex.WXB (bad) push lahf (bad) (bad) jno shrl mov mov icebp push rex.WRB nop jns xchg test (bad) sbb sbb rex.RB test rex.RXB insb (bad) rex.RXB or (bad) rex.WRXB rex.W (bad) sbb xor shrb enterq push in push push negb pop xchg mov add test jle xor jbe in stos cmp rex.WB mov (bad) sahf rex.WB shrl xchg mov sti fisubl jge retq mov pop rex.WB rex.WR cltd sub movabs jrcxz push rex.WXB rex.WB test mov add rex.XB out adc (bad) and xchg (bad) pushq mov (bad) rex.WB mov cmp xchg pop pop xchg mov (bad) xchg and pushq loopne mov cmpsb (bad) int3 push jl (bad) pop out test sbb adc cmpl mov cmp pop sbb popfq sbb (bad) and rex.WRB rex.WXB rex.WRXB iret adc cmp int3 pop std addr32 jmpq cwtl and rex.WB adc (bad) test jg xchg sub lahf enterq add add movabs lods and mov jnp cmp mov push cmp cltd sub cmpsb (bad) sub (bad) mov adc scas (bad) (bad) rex.WB pop mov imul std sahf and or mov (bad) callq imul cmp sbb (bad) rex.X repnz xor icebp sbb rex.WX rex.WB push (bad) mov orb in sti xchg sbb addr32 addr32 pop push lods cmp rex.WB rex.RX adc jne push cwtl sub jmp jp (bad) shll paddb or (bad) lea add out rex.RB and out movsl xchg add xchg mov idiv jo rex.WB loope pushfq adc cmpsl or (bad) jg or pop mov rex rex.RX rex.RB stos jbe in clc push pop xlat rex.XB cwtl fimull mov outsl mov test retq mov mov rex.WXB mov mov cmc add (bad) retq mov pop or sbb rex.WB enterq push xchg (bad) rex.WB sub mov add test (bad) push rex.XB (bad) cs decl data16 int3 (bad) xchg (bad) fs xchg lea and rex.WR lret sub (bad) fnstenv push loop fadds jl pop jnp nop stc lock enterq mov rex.WB std cmp mov repz scas xor cmpsb pop pop ja mov cwtl lock cmpsl data16 mov sbb cmc mov xor xor pop mov pop loop cld (bad) (bad) repz addr32 xchg ja rex.WB rex.X fwait (bad) nop in rcl movsl movsl sub mov pushfq rex.XB test xchg je out jg (bad) insl movabs rex.W mov nop jae cmpl push (bad) push psubusw rex.RB adc add jmp movabs and movsb ljmp (bad) out adc cli test xorl pushq (bad) sub negb or fmulp lea in sub (bad) and mov push jl xchg roll push pop rex.WR rex.R mov jo adc sub js ss fs jmp je repnz ja mov enterq cs fcoms icebp loop pop rex.WR mov pop xchg lock data16 xchg mov xchg movsb (bad) test mov rex.B rex.WXB pop cwtl (bad) rex.WRB (bad) rex.RX shrq mov sbb rex.RXB cs cmp (bad) mov push mov movslq (bad) stos push jnp lea test cmp and xor (bad) mov rex.RXB xchg add (bad) adc in or popfq subb add movsb sub test rex.WB outsb pushfq and rex.WB callq (bad) lahf rex.WB imul movabs (bad) fwait sbb add adc xchg out rex.RB cmpsl jmp mov (bad) enterq (bad) (bad) adc mov mov fcomps rex.WB adcb mov (bad) movsb pop xchg callq loop in rex.WB lods mov rex.WB jrcxz sbb sbbl (bad) mov loope int push or in (bad) or adc mov sbb movsb rex.WB push xchg test out jns or mov adc repz cld push xor movsl rex.WXB pop test lret adcl pushq ja jle pop sbb mov retq cltd fldcw cmp mov pop int jno push cs xchg adc movabs cmp push pop pop xchg push cmp jp or jmp movabs sub push or push callq rex.WR rex.WX test and (bad) adc iret push sub adc pushq gs js mov pop sub pushq mov callq (bad) pushfq (bad) out pushq imul pop rex.WR shl mov imul lret add mov jns (bad) mov (bad) outsl rex.XB movb rex.WRX (bad) out repnz fcomps sbb imul xlat cmpsl or out loope mov adc pop sti or rex.WRXB and jno (bad) or xchg jrcxz or lret fsubrl es (bad) xchg rex.WR xchg addr32 punpckhdq clc lods sub stos sbb imul mov enterq (bad) mov (bad) callq adc imul xchg add jo sbb lea cmp (bad) movabs nop mov rex push fs movabs loope rex.WRX mov cmp mov xchg jp repnz leaveq (bad) cli lahf jge jns or in sub xchg jns push movsl sbb (bad) rex.W roll scas rorb int sub push and pop cmp mov lret fmuls test rex.W movabs rex.RB fwait leaveq test adc add push rex.RX rex.RX pop lahf movslq rex.WR mov stos pop fs enterq (bad) sub sahf jne cmp iret jno clc (bad) retq scas rex.WRX (bad) jbe cld xor popfq rex.WX push jle and data16 movslq rex.WXB (bad) mov adc mov push rex.RXB divl mov mov test xchg push loop rex.W and fs pop push fstpt jge mov (bad) jmpq sbb jns pop sub mov sbb rex.WX mov ja mov and addr32 movabs jmpq and int3 xor movabs cwtl lods xor callq push callq pushq add xor (bad) scas imul rex.WRX rex.WRX mov enterq lret jne rex.RXB (bad) subb rex.B mov rex.RX cmpl repnz cmpsl sbb pop rex.WR out loopne cmpsb xchg fnsave mov rex.R cld movsb (bad) mov (bad) rcll adc movabs push mov hlt and out or stc (bad) xchg xlat xor xchg mov retq movsb test (bad) (bad) xchg xchg movslq gs jmpq or (bad) pop (bad) movsl cmp adc sbb jns (bad) (bad) cmp push pop xor xor mov or retq mov insb mov movsl fcoml mov cld in (bad) xchg xchg insl packssdw nop pop (bad) test imul jne insb xchg rex.WX or lret stos jnp ror lods (bad) xor repz add test es sarb loope mov sbb movabs incl cmp in out jp rex.RX (bad) push pop jl adc cs mov xchg cmovg sub rex.WR test mov repz pushq outsb in jge movslq cmp rcr sub movabs xchg xlat scas repnz push fdivs jbe in outsb movabs mull test lea jmpq popfq mov jae movsl movabs jnp (bad) (bad) mov cmpsl in or sbb mov pop (bad) loopne rex.W jno movsb rex.R lock jns pop mov (bad) or (bad) fldenv cmovge (bad) xchg mov push (bad) gs push push (bad) or mov and sbb insl out lea rex.RX mov fisubr and jrcxz (bad) xchg mov jae rex.XB lock mov retq enterq (bad) xchg (bad) fsubs or xor out test retq jge rolb (bad) push rorl stc cmp add add enterq push shrb (bad) or sbb movslq lret retq cmp gs (bad) sub callq xor out pushq push jg adc fnstsw sbb adc rex callq rclb add nop pop callq addb testl cmp xchg rex lods nop retq cmpsb push movslq test xchg jrcxz jle push js loop push pop xchg xor xchg mov sub jb mov cltd ss lret and (bad) rex.RB test lods sub add xor (bad) (bad) jl or nop mov es sahf cmp cli pop dec scas push jbe adc xor rex.WRXB jns cmpsb stc outsl movabs mov fnstcw (bad) fmull in jnp cld sti rex.WRX mov rex.B rex.WX rex.RB fs jg stos enterq icebp xor (bad) je cmp adc rex.RB mov mov cmp rex.RXB iret scas ds pop imul rex.WR fs sbb sbb movabs out int in mov addr32 popfq cltd or pop mov in push adc (bad) imul mov pop ficoml pushq lret push cli (bad) xor sub fdivrl outsl xor js clc sahf sbb pushq cltd sysenter (bad) lock rex.RB shlb sub (bad) mov movsl push cmp fwait rex rex.RB rex.WB sbb imulq xor inc xor pop (bad) add fisubrl mov mov mov jno enterq xor pop movabs pop jo sbb retq lea sub jl callq cmp sub push test jnp lret fstpt outsl (bad) or (bad) (bad) jb mov retq mov int3 (bad) (bad) xor callq (bad) movabs xor xchg (bad) pop (bad) rex.RX stc int xor mov movabs (bad) lret nop rorb rex.RX jmp sti test mov (bad) pop fisttpl cwtl lahf pop (bad) stos push lods (bad) (bad) rex.WB rex.X mov mov retq (bad) pop (bad) fwait cltd retq imull mov int3 rex.RB repnz rex.WB ss push and jnp (bad) rex.WB rex.RX rex.WXB xlat int mov push add pop mul stc jp rex.WRX rex.WRX (bad) loope (bad) rex.WB jnp rcr (bad) shrl xor xchg cwtl pushq rex.WRX rex.XB sbb lock (bad) (bad) rex.X rex.RXB sahf in rex.WB add rex.RB rex.WB stos rex.RX or sbb sbb movabs mov mull (bad) rex.WB in std scas push out mov loopne pop fbld (bad) cltd fimul test (bad) lods rcrl pop xchg jge leaveq adc rex.WB movabs push lods movabs ror add sub movabs xchg (bad) fildl pop and (bad) rex.WX cmp sete (bad) rex.WB pop push fistpl stc out (bad) sub icebp xor sbb rex.WB sbb (bad) rex.RX enterq rex.WB test (bad) in pop imull nop imul rolb jmpq mov in cmp pop (bad) rex.WR rex.WB adc bsr cmpsl movsl (bad) sbb push loopne stos adc mov gs mov add sbb add rex.WB ja or rex.XB callq rex.WB fs pop adc rex.X movsb jno pop mov (bad) pop rep imul scas sbb and mov stos jo rex.WB (bad) mov (bad) sbb out xor (bad) and rex.WB rep clc push (bad) adc xchg xchg mov xor xchg imul mov (bad) and (bad) hlt ficompl xchg lods xor (bad) es rex.WB rex.RX mov stc fwait rex.WB xchg andl add push fcomps (bad) fldcw adc out int3 and movabs vpcmpgtw loopne,pt cmp movsl jl mov sub std insl xor sbb cld pushfq rex.WB (bad) outsl callq or mov (bad) rex.XB (bad) jbe test or test subl mov lock sub (bad) rex.WRB (bad) divl (bad) shlb jns adc push jb callq (bad) movsl in mov jge sub xor mov and sub and jg data16 rex.WR int pop sbb adc (bad) rex.WX xchg jne rex.RB jo lahf (bad) test cmp add shlb push pop add mov sub xor lahf push rex.WR movabs sarl sub xchg add sub jl stos adc cmp loopne js xchg fs repnz lahf mov sbb sub jrcxz ficom mov jne lret (bad) jae insl test movabs rex.RB retq mov mov addr32 ficoml push (bad) pushfq and lods out and adc mov mov callq insl movabs popfq (bad) jle xchg icebp in or rex.B rex.WR callq int and push cwtl push xor cmp loop xchg mov add rex.WXB shlb lahf rex.RX adcb movabs push in jne stos add (bad) incb jne add fdiv adc mov imul jo mov pop (bad) (bad) data16 jns and mov mov or loope pop iret add cmp (bad) add test insl xor or (bad) outsb div mov jnp (bad) rex.XB (bad) jrcxz cld test xchg callq sub movabs pop rex.WRB retq or rex.RXB and or fistp rex.WXB mov pop (bad) cmp rex.B out gs or lods movabs in xchg adc (bad) sbb add cltd enterq push and mov (bad) and in out rex.R movl clc (bad) add or je pop nop ss or sub nop xchg add rex.WR sahf mov or xor movsb pop xchg rex.WR enterq outsl pop jbe mov mov subb imul rex.RX add and outsl lock xor gs jnp cmp pushq jp (bad) outsl movabs ja rex.RX rex.WRB rex (bad) or (bad) (bad) (bad) jrcxz add (bad) and jns cmc rex.WB fdivrl sbb push xor xchg jle out mov xchg xchg pop test (bad) cwtl rex.XB cmc mov (bad) cmp push pop outsb mov push mov jb xchg loope xchg mov loope xchg in fdivrl pop xor loopne icebp push mov stos fmull adc jrcxz sbb ja pop iret cld cltd imul (bad) lret fadds or fistpll rex.WR fdivs jmp test (bad) adc or xchg and addr32 icebp mov mov or rex.WRB cmp enterq or je or sub scas rex.X jmpw pushfq sub fdivp (bad) mov out xchg rex.WXB add idivl out int3 push (bad) scas movslq clc out xor movabs rex.WX pop movabs push xor lods or sbb mov xchg pushfq mov imul (bad) jmp addr32 (bad) out movabs cmp movabs or frstor in fwait out push mov pushfq callq cwtl (bad) (bad) imul and rex.XB mov or or (bad) ja rex.XB rex.XB test rex.WB fs mov rex.WB rex.XB (bad) xchg test mov jno jp (bad) movsl adc (bad) cmc in mov cmpsl lea or shrb jmpq adc (bad) sub xchg lods in loop test jge shrl (bad) adc mov lret sub xchg retq cwtl (bad) (bad) fisttp mov andb test add movabs (bad) pop pop mov xor push (bad) (bad) push rex.WB sub rex.WRX sbb addb rex.WB test int add mov rex.WX jrcxz (bad) and insb xor jns (bad) pop movabs (bad) or movsl (bad) nop mov loope cltd push rex.WRXB ja pushq rex.WRB xor leaveq movslq movabs mov (bad) icebp outsb mov sub adc movsb jno or rex.WB (bad) icebp nop (bad) test out sbbw adc (bad) ja rex.WRX rex.WR (bad) pop xchg mov adc jp retq in xlat jmp int (bad) mov movabs retq (bad) jp jno (bad) out pushq gs jmpq rex adc mov xchg pop jl scas rex.WXB xchg xchg adc stos shrb rex.WR rex.WR rcrl push mov xchg sbbl cmp rex.WB (bad) sub mov sub jg xchg in andl test and mov (bad) rex.WB xor jbe and pop in jb push push (bad) int3 rex.WB je mov sbb rex.WB rex.RXB (bad) (bad) orb push or lock mov jb stos xchg movsl (bad) push rex.WXB sub jbe or scas mov mov scas jp mov mov rex.WRX rex.WB and cmp es fdivrl jne jo and jbe mov push push rex.WB loop cmpsb shll jne test std js sbb cmc out xor outsb jmp (bad) in and sbb (bad) rex.WB rex.B rex.WB insb mov mov (bad) (bad) rex.WB rex.WRXB (bad) (bad) xchg in lods push scas adc sub jne flds rex.WB (bad) (bad) mov mov mov rex.WX repnz movabs jne lock (bad) pminub xor enterq stos add out cmp pushq cld cmp mov addl pop cmp cmp test or sbb rex.X xor fnsave nop jrcxz sub cmpsb fcoms jo adc add leaveq sub push cmp jrcxz movsl rex.RXB data16 rex.R pushfq rex.W (bad) pushq mov cmpsb mov (bad) (bad) pop sbb (bad) xor or movabs clc rex.WR (bad) out imul mov pop rex.WB outsl mov xor sub add rex.WRX rex.WR jp rex.WX and rex.XB punpckhdq (bad) mov (bad) jg scas pushfq rex.WX icebp (bad) add jmpq retq std mov jg (bad) rex.WR push pushq or fcomps sahf (bad) rex.RXB mov (bad) cmc inc rex.B insl xchg xchg pop cmp mov pop pushq rex.WRX imul loop movabs sahf or mov pushfq ds movslq cmp (bad) pop (bad) cmovnp (bad) or loopne (bad) (bad) cmp fwait (bad) int3 repnz rex.B iret or push xchg (bad) int (bad) mov in mov (bad) or fistl jle cmc xchg fadds adc pop jmpq shlb adc leaveq push jl jmpq retq adc lods sti rex.RB or push xchg mov retq icebp add mov rex.WB insb in pop xchg stos jo fmuls (bad) (bad) (bad) rex.RX rex.WRXB sbb rex.WR (bad) flds xor xor xor cmpsl es rex.WR rex.RB mov addl rex.RXB fldcw and pop cmp and jae lret pop rex.WRXB pushq data16 test cmc lahf out (bad) scas test xchg fiadd xor imul (bad) (bad) cmpsl pop jo loope insl nop ss rex.B fiadd push sub in std rex.WX (bad) adc insb int cli and stos (bad) push rex.WRB (bad) pop (bad) mov mov (bad) rex.W (bad) (bad) (bad) sub rex.WRB rcl xchg rex.RX mov std xchg and add pushq (bad) mov addr32 stos test jo push xchg and lahf mov (bad) (bad) adc pop (bad) pop (bad) in sbb add adc ja movsl out rex.WRB div loop mov pop in outsb rex.R cld scas jbe jle scas mov or out rolb test rolb xchg fstpl loope rex.RB movsb rex.WRB (bad) movslq sub adc fsubrp hlt adc mov mov xchg sub hlt rex.RX addr32 shll mov xchg mov out push mov pop xor pop or add jg mov cltd (bad) cld xlat cmp sti lret cmpsl (bad) ljmp in pop mov and (bad) test subl cs (bad) mov std pop jo (bad) xchg pushq cmc cs mov movabs mov out or adc nop mov push mov lods jg test mov sbb scas ds pushq (bad) adc xchg push mov in sub sar rex add mov jge lea sbb xchg cmp out or add pop (bad) frstor mov push callq mov (bad) (bad) (bad) cld push std (bad) negb sti repnz pop stos xchg adc rol rclb jp rex.RB pushq (bad) jbe rex.WRX mov (bad) (bad) pop mov adc and (bad) sub movsb pop mov cmc pop rex.B mov xchg mov mov xchg (bad) rex.W in xchg sbb movabs xchg rex.RX pop cmp add sbb (bad) or int rex.RB rex.RB or std cwtl (bad) rex.W adc negl (bad) mov and sahf ficom xchg jmp mov or (bad) enterq add xchg adc cmc mov int3 cmp (bad) cwtl jno rex.X pop rex.RXB scas push scas vmovapd xor mov insb or jb leaveq add imul pop sub mov xchg sub add imul rex.WRX mov mov jne xlat sub (bad) lock repz push jns pop sbb cmpsb sub jge lret movabs mov enterq leaveq stc cli mov (bad) rex.RXB nop and lahf jp fistpl mov retq or (bad) loopne (bad) add rex.X out rol pop push and sbb rex.WB fiaddl mov add rex.RB test xor and rex.W mov cmpsl mov sub rex.R rex.W mov or cmp loopne sub rex.W sbb rex.W jmp clc add push pop adc movsb rex.WR sbb clc adc xor (bad) cltd rex.RX callq imull popfq pop jrcxz (bad) gs xlat xchg rex.B mov sbb xchg enterq cmp pop rex.RXB cmp rex test sub clc push sbb pop sub (bad) xor rex.RXB rex.WR jl gs pop leaveq outsb rex.RXB mov or jmp xchg movb pop sarb test rex.WRX rex.WRXB jge mov xor mov scas add add test incl rex.XB rex.R rex.RB and xchg lret sub rex.WX xchg (bad) (bad) push push (bad) clc xor out retq rex.WR xor pop push cli pop jge cmp lret rex.R movabs jno add jb rex.WRXB loop rex.WR imul pop push pushq (bad) rex.XB or (bad) or pop mov rcrb jno push icebp xchg lahf xor movsb hlt (bad) rex.XB int3 xor fistp imul fimull outsl mov (bad) rex.WR rex.W (bad) adc std lret pop imul test sub rex movabs and rex int3 jmp andl push pushq (bad) rex.RB xchg rex.WR test or rex.WRXB decl retq imul xlat sti rex.R sbb or (bad) (bad) icebp mov sub xchg subl lock scas movsb lahf leaveq (bad) adc mov lock sub rex.XB pop jns test pop cs rex.WR fadds movsl (bad) cmp xor pushfq xlat (bad) (bad) mov or rex.WR and es std rex.B out (bad) or lods mov gs js movslq lret xchg test pop cmpsl pop adcl (bad) popq out and mov cmpsb jl movb ss (bad) fidivr rex.XB or outsl cld movabs sbbl (bad) movsl rex.WB cmp jmp outsl (bad) jo rex.XB mulb test movslq push (bad) andl rex.B rex.XB cmp ja adc pop sub movsl and sbb jle jae rex.RXB (bad) rex.WR movabs loopne add sub insl (bad) cmp mov add addr32 (bad) out test (bad) mov js (bad) jmp divb retq (bad) cmp add shrb mov pop add pushfq and fimull cmp sub notb (bad) xor rex.W rex.RXB rex cmp sub rex.WRB (bad) or rol push pop (bad) xchg and rex.WR xor out mov (bad) mov ffree jo adc fs lret sub jno pop lock test out adc jmp adc fisubr cmp rex.WX (bad) (bad) or push cmpsb jns rex.W add test push (bad) or mov add xor (bad) fiaddl lock add pop (bad) sub (bad) sub (bad) pushq (bad) sub xchg jns jae cmp sbb fisubl fucomp (bad) shll (bad) test and rex.B fwait sbb loopne es rex.RB xlat rex.WXB rex.RXB rex.W add mov std push fnstenv (bad) rex.R rex mov add movabs sub push mov add (bad) je (bad) stos movsb rex.WR xbeginq rex.WRXB rex.WXB fcomp adc (bad) pop xchg fdivrs (bad) jmpq sbbb adc fdivrs jl adc rorb add push leaveq and push xchg cmp loope clc or test fbld xor push sbb rex.XB fwait jae test fwait (bad) (bad) movsl fisubl pop (bad) movsl test rcrb fwait rex.R addb lret out and xchg mov nop pop or add out retq rex.RX rex.RX pop pop int3 push stc callq (bad) adc xchg clc mulb stos pop jge pop jmp push nop sbb movsl add sbb sub test push rex.WRX rex.WR es lret cmp test xor xchg push (bad) sti cmp sub cmp (bad) leaveq (bad) fisubr mov or insb pop add cwtl stc movabs (bad) lods (bad) adc imul mov pushq mov jb fistpll rolb rcl rex.B (bad) sub jb cmp insb pop rex.XB leaveq or rcll cmpsl (bad) jns xor (bad) sub imul rex.WRB pushfq sub rex rex.XB scas orl lods pop rex.WB clc mov or mov cmp movabs rorl fisub insb pop mov out movabs add (bad) movabs jb cmp rclb mov movslq cmpsl mov push and nop jp mov (bad) sub xlat xor fcompl (bad) callq jne mov rex.RXB clc pop out sbb cwtl jno movabs in not xor push int or mov sub addr32 (bad) test jrcxz rex.WX jno pop xchg test movsl cmpsl rex.B add mov rex.R or and imul xchg fs mov mov rex.RB rex.R xor cmpsl in sbb (bad) or rex.WRX pushq insl callq and mov je fcomps sbb int maskmovq notl sbb pop and hlt pop (bad) jmp push cli (bad) movabs popfq movsb pop xor fmull and enterq sbb adc sti (bad) sbb or sarl add fcomps decb movsb jno adc rex.W rex.RB repnz callq rex.R fwait or sbb int3 int iret adc xchg movabs sub cwtl fnsave (bad) xor sub push int3 (bad) scas rex.WXB adc lock (bad) jnp (bad) rex nop test mov (bad) (bad) jnp pop test fbld (bad) (bad) xor pop (bad) sub rex.WR lret and movabs mov rex.X out jmpq in rol and rex.RX adc test sti sub (bad) pop fs (bad) (bad) ss movabs sub cmp callq rex.R test add cli xchg adc test cmp enterq cmp (bad) (bad) add out cmp es xor rex.X rex.RXB lods xor add nop xchg sub mov jmp mov imul (bad) pop (bad) rex.RB mov movabs movslq jp fidivrl and and (bad) pushq (bad) (bad) fcmovnu in pushq test cwtl mov loop sub int3 (bad) test and jl in movsb fldl pushq (bad) in sbb rex.WX sbb fiaddl sbb or movslq negb rex.RB rex.R rex.XB mov out lods fcoms (bad) cmpsl out repz leaveq sub push sub mov callq sub movsl rex.W xchg xor pushq insb mov fadds xor or incb push pushq subl rolb fisub and scas test or xchg xchg jrcxz lret mov sub sbb (bad) push rex adc sub mov pop hlt (bad) addr32 iretq cltd xorl push or ss xchg add and pop rex.R sub out and movabs rex.RX rex.WR retq xchg outsl rex.WR sbb addr32 mov rex.WXB mov (bad) rex.WB sub (bad) callq (bad) cmpsl (bad) mov xor mov mov rex.R rex.W and sub xor cld mov or rex.WXB mov add rex.W (bad) jl and xlat jne xlat jae ss test xlat pop divb (bad) xor pop (bad) fs rex.RXB rex.WR rex.WRB xchg xor push xor push rex.RX rex.RXB rex sbb outsl cmp (bad) push lret add push xchg cmpsb jns adc sub callq repnz rex.RXB test divb sub cld andl xor cmpsl test (bad) orb sub (bad) movabs out sbb sbb gs ljmp xchg (bad) out test lahf or sarl lods mov imull addr32 sbb callq and jmp sub in mov adc sbb xlat loopne jl xor mov in push pop (bad) xor pop (bad) scas retq lods pop xor cmpsl pushq push (bad) rex.WRXB (bad) rex.WR sub out adc fidivl cmpsl movsl mov lock decl imul fidivrl sub movsb jb sub (bad) sbb xor mov push and movabs decl (bad) sbb rex.WRX lret (bad) subb (bad) rcrl ja xchg mov imul (bad) popq iret retq stos (bad) cmpsb (bad) (bad) xor adc (bad) out or jmpq fbld rex.WRXB (bad) (bad) add pushfq xchg (bad) fsubl ss push gs pop jmpq or xor outsl or or sbb rex.RXB imul decb test or fnop and ja test rorb and jbe adc jo (bad) (bad) jns (bad) fcompl rex.X rex.WR rex.XB out mov rex.R mulb push (bad) pop xor (bad) shrl pop rex.WR std pushq (bad) lock (bad) mov loop retq add sti and (bad) or pop xor xchg sub add out orb rex.WR movabs xchg mov lock mov (bad) pushfq (bad) repz movabs gs nop ljmp mov (bad) cmp cmpsl out retq notb jmp or (bad) divb adc (bad) jg mov (bad) pop loop jb fistp (bad) sub clc rex.WR sbb andb pop pop decl js rex.XB lock stos sbb sahf nop rex.W xor fstps jmp addr32 jle imul jrcxz rex.WRXB rex.WB add rex.WB sub rex.RB rex.WR stos push jo jo sbb pop loop testl pop xor pop add cmpsb rex.R cmpsb fs callq or mov sbb xchg pop sub subl and (bad) xor je rorb jg push and (bad) movabs movsl push push andl std rex.WB pop sub rex.R pop cmp adc test pop cmp pushq (bad) mov adc js jno (bad) sbb callq sub push movslq sub lea xchg vpaddw pop mov movslq sbb (bad) xlat push adc test push (bad) rclb (bad) (bad) xor (bad) std rex.WX xchg push stos sub movaps push rex.RB xor add or jne lea jae inc adc push pop enterq imul adc push push jno (bad) jne mov mov shll rex.WRXB shl mov faddl sbb rex.XB sub (bad) fsubs adc pushq ds test mov (bad) rex.RX mov rex.WR (bad) or rcr xchg xchg rcrb rex.RB decb cmp (bad) mov rcrb push rex.X movabs cli test lock or xor test test rex.WXB or adc mov mov rex.WR rex.RB movabs (bad) (bad) mov sarl xchg rex.X rex.W fs callq xchg push push int3 sub imul rex.WX rex.WX out outsl mov (bad) add (bad) imull or nop rcrb int3 sahf (bad) pushq popfq mov addr32 mov add movsl iret xchg movabs pop lea loope jp jrcxz mov (bad) movsl add pop or js (bad) (bad) xor cmp test mov clc pop sbb rex.RX (bad) movabs cmpsl mov sub sub lock push in shr (bad) out (bad) cwtl pushq test (bad) cmp cmp cltd rex.W callq cltd rex.RXB adc sub (bad) and mov rex.WRB repnz fstpt push addr32 repnz mov fisubl movabs rex.WRXB es add (bad) (bad) rex.R sub add movsb mov (bad) test outsl jrcxz cmp add int adc (bad) fprem xor and rex.RB or pop fwait (bad) (bad) sahf fcomp (bad) fldcw pushq cmp cmp rex.X add add (bad) add pop xlat incl in retq fistpl pop pop sub pop rex.RB rex.XB sub cs rex.XB fincstp xchg push sub (bad) xchg movsl push rex.WX rex.WRB loopne rex.RX rex.W sub rex.RB add rex.WRX add fld (bad) je add (bad) in fnsave out lahf and rex.W fscale mov test pop mov cmpsl push fisub pushfq in mov rex.WB rex.RXB rex.WX rcr fs pop xchg and orl sub xlat sub rex.WR rex.WR popq sti leaveq and out movabs xchg sub movabs or mov pop mov adc sar cmc fmuls movsb (bad) or in jmp jrcxz cmp fsubl data16 shlb vaddpd lods push add (bad) jae ds mov sbb es or out mov mov xor mov sbb rex.WR rex.WR pushq cmp in rex.W loopne jmp (bad) (bad) and movslq cmp rex.WR sarl xor sub (bad) jle sbb fucomip enterq shlb iret push and xor cmpsl pop xor sub mov int push cmp repz and push xchg loope rex.WX cmp push add fiaddl rex.WR cs add rex.R (bad) or add cmpsl es rex.RX push xbeginq (bad) add and rex.XB fbstp mov (bad) pop rex.R addr32 cwtl push (bad) fstps sbb add shrb clc xor (bad) push enterq cltd (bad) and mov lock mov callq (bad) and addr32 rex.RXB jo movsb mov rex.WX idivl xchg (bad) loopne xchg pop fnsave rex.WX fcoms or sysret cmp xchg or rex.RXB rex.RX rex.XB rex.WRX pop pop flds lods rcrb rex.RXB rex.RXB rex.R or pop (bad) (bad) cmpsl enterq mov rex.RB (bad) xlat xor pop test push pushfq push push insl pop push sbb shrb mov jrcxz rex.W and mov andb mov pop and fst add pop iret jne jno xlat pop (bad) add (bad) pop xchg xchg (bad) fndisi(8087 (bad) movslq (bad) cli popfq adc mov in movsb sbb lar cwtl adc rex.WRXB xchg or sbb xchg imul rex.WRX jae (bad) rex.RB cmp xor (bad) sub or rex.WR rex.RX loope and imul xchg (bad) jge jae (bad) pop sbb lock (bad) rex.WRX enterq or (bad) fdivr mov repz jne rex.XB rex adc lea lock rex.RX or rex pop outsb cmp push fmuls jo vpunpckhbw insb (bad) mov add xchg rex.RXB (bad) lods xor cmp notb adc out and icebp pushq mov leaveq (bad) int3 fsubs (bad) rex.WR (bad) imul (bad) sub test (bad) stc sbb mov cmp (bad) rex.W pop xchg rex.WR movsb rex.RX rex.W movsb and pop rex.WRX (bad) inc sbb (bad) pushq mov clc (bad) (bad) pop cltd cwtl stos fimull (bad) loopne rex.RB rex.W mov (bad) sahf and movsl (bad) sbb movabs xchg xlat sbbb sub rorb pop xlat loopne jns (bad) and push push (bad) (bad) cwtl icebp xor rex.XB addl movsl cmp int sti xor push and sahf movabs (bad) or jmpq pop or pushq push rex.WB rex.X (bad) (bad) mov sub outsb or movabs test xor (bad) xor (bad) sub decb pop ficoml movslq pop rex.RX mov andb mov movabs pop lock mov xor test sub rex.WR rex.XB fisubl push out sub iret out out adc int (bad) push leaveq testl cmc rex.R lret (bad) movabs mov (bad) rorb pop cmpsl mov fadds mov movabs xchg notl jle sti fistpll (bad) rex.RXB sbb add mov imul mov scas or fld rex.R jp rex.WR pushq add rex.WXB (bad) rex.WR lods jl (bad) cmpsb pop out or mov or adc rex.RX andl cmp fimull push callq (bad) out and jrcxz jns rex.WXB mov xchg sbb add mov mov mov adc retq cmc (bad) (bad) cmp pop testl insb mov add mov sub in adc or scas push loope out es rex.WX (bad) shll rex.WXB (bad) mov enterq shrb add rex.WRB std sub sbb ljmp (bad) rex.RXB rex.WX and andl rcrl callq rex.WR lret rex.WXB xlat xor xchg (bad) imul (bad) fisubrl mov movsb jns (bad) sbb rex rclb jp (bad) xor sar pop mov jmp sbb movabs (bad) (bad) cld rex.WXB fisub xor cli loope movsb and popfq rex.WRB pushq imul pop testb bswap clc push sub jbe pop sub pop movabs mov push and in mov rex.WRX callq and movabs jmp and (bad) cmp cmp rex.WR (bad) pop xchg (bad) xor and (bad) jbe lock (bad) rex.X mov cmpsl mov and leaveq (bad) xor or and and pop rex.W callq xchg lret sub nop sub (bad) fsubrl insb jo mov pop (bad) adc sbb mov (bad) clc mov push (bad) and add roll xor push xor fidivrl rex or test insl sbb mov push rex.RX pushq sub in mov sub data16 push popq enterq xchg imul sub shlb push cmc cltd retq sbb enterq push or fcomip jne retq (bad) ja adc jl loop in pop rex.WRX sti imul mov andl movsb add push push (bad) xor sbb cli jl (bad) mov test mov add mov mov (bad) rcr and pop jns retq pop push in (bad) sub imul or fidiv (bad) outsb insb movsb scas cmp enterq (bad) movabs fs rex.WX pop rex.R rex.WR rex.RB mov sbb mov stos scas and (bad) test loope lret in lret xlat in mov mov cld (bad) in mov sub movabs mov rex.RB repz and push out iret fildl pop or xor rex.WR scas jne fmul push (bad) outsl (bad) sub (bad) rcrb sub and mov and push (bad) addr32 fimull rex.X mov jg sub (bad) es xchg add cli and insb in fadds in xor cld rex.RB rorb loope or jrcxz (bad) callq movabs jp push push xor (bad) xor sub (bad) xchg adcb pop push mov movabs enterq (bad) test ror insl adcl hlt fildl out push jb movb int3 je std and mov (bad) mulb rex.B cmpsb movslq int mov inc loope (bad) cmp (bad) retq pminub sub cmc pushq pop rex.RB sub add jmpq (bad) rex.WR rex.WX iret rex pop pop rex.WX mov (bad) shrl xor adc pop xlat sbb repz cmp movabs push icebp cmp push out xor add sub nop movsb push mov pop rol insb (bad) push cmpl add pop roll sub out xchg sbb (bad) hlt mov lods mov add mull (bad) mov lahf or jbe (bad) retq sbb add add mov pop sub rex.WRXB rex.R hlt mov in rex pop outsl sti fs decb cmp enterq sbb lret cmp rex.WRB (bad) (bad) pop loop fidivrl subl push (bad) popfq (bad) rex.RXB add rex.W fildll (bad) mov pop decb callq or pop or rex.WR pushfq cld (bad) push addr32 retq (bad) in pop xchg cmpsb (bad) push cmpsl rex.R jle rex.WRB push (bad) jbe mov adc movabs sub andl push (bad) rex.WXB xor movabs out (bad) pop out rex.WXB (bad) xchg iret gs rex.R fs and (bad) pop rex.WB rex rcrl xor adc adc cltd mov rex.W sar cmp or sub mov cs xchg or mov sub sub sbb and sub jmp xor or sub pop rex.WR xchg pop movsb lret incb (bad) xchg push out xor sub or mov mov loope sbb rex.WR fs rex.WRX or jge cld rex.WRXB movslq lahf movabs retq and push cmpsb push xchg xor (bad) rex.XB sub (bad) stc rex.WRXB xor movsb rex.W cmp sbb sbb rex.XB test rex.B rex.WRX sub push stos out xchg cmp test jrcxz rex.WR push outsb fist mov test movsl movabs or mov xchg and out addr32 andl fsts rex.WRXB clc movabs sub imul mov int3 (bad) (bad) cmp or outsl rex.WRX (bad) rex.WR fcmovnb movsb cmpsb (bad) jo rex.WR fnsave in (bad) and push enterq out test incl xor rex.RX cmpsl or (bad) jmpq (bad) pop (bad) sbb mov retq rex.RXB xor rcrl mov (bad) sbb movabs or (bad) movabs jrcxz cwtl (bad) movl out callq nop rex.W rex.WR jmpq pop out xor pop (bad) jmp xorl test addr32 add pushq jo in int3 callq sbb xor (bad) fcomps mov xchg sahf fsubrs sub and insb addl rorl sbb imul (bad) int3 jne mov pop (bad) stos (bad) pushfq rex.WX cmpsb xor cmpsl cmp ss mov and mov (bad) xor frstor imul loop push test and xor rex.R or and (bad) mov movslq add jbe movsb cmp iret push mov adc hlt in sbb add (bad) sub xor cmp mov icebp add rex.XB add (bad) addr32 or rex.WX rex.WXB and add jno and imul rex.WXB jbe (bad) loop mov sub movabs lar add or add add rex.RB mov cmp (bad) or clc cmp stc (bad) xor fild rex.RB (bad) popfq rex.WXB push shll out rex.WR nop (bad) xchg sub mov cmpsb (bad) nop (bad) mov scas sub fisttpll popfq insl loope add fidivrl adc sbb divb or and sub nop cmpxchg fdivr push and in (bad) (bad) fnstsw scas fstpl pop jl mov fcoml rex.WR out fwait and std sti sbb (bad) addr32 fcom ds loopne jmp rex.X in divl add fildl sub ss mov movslq stos xchg repnz rex.WRB jge callq sbb test rex.WX leaveq mov clc test rorb add rex.WRX mov rex.X retq js and rex.WRXB sbb (bad) rcll jmp out pop or mov add clc sbb (bad) imul pop sbb jbe jl (bad) addr32 in cwtl pop lea movsb pop (bad) (bad) or fnsave add (bad) (bad) and mov pushq and rorl push jmpq rex.WRXB int3 mov fs pushfq pop cmp movabs rex.RB test imul rex.W mov push subl out faddl sbb test insb (bad) movabs jmp sti adc sub loope jno rex.WRX rex jmp (bad) rex.WR cmpsb and jnp and mov pop add fsub rex.WR (bad) cmpsl mov out add wbinvd jnp xchg ja mov add add mov jrcxz hlt jbe testl (bad) rex.WRX out and test test ss popfq xor jmp sbb mov (bad) (bad) jae gs sbb xchg scas mov rex.B rex.WR test (bad) callq mov rolb pop rex.RX je adc rex.WR retq cmp sbb sbb (bad) clc retq rex.RB rex.WR rex.X push (bad) add sbb rolb rclb es rex.W rex.RXB rex.RXB loopne clc sub (bad) rex.RX jno imul (bad) mov pushq clc jg adc mov (bad) mov mov add sub mov scas cmp xchg mov (bad) rex.WRB rex.RXB adc out not (bad) test loope (bad) jnp or mov clc xor sbb stos xor callq or nop xlat rex.RXB leaveq rex.B push cmpsb (bad) rex.WX sti xor pop callq fbld mov sub data16 jl (bad) xor or and leaveq lret (bad) xchg sub pushq and or rex.WR rex.B callq mov rex.XB adc imul out add xor pop int movslq rex.RXB rorl cmpsl xor neg xor mov mov data16 xlat sub std sub sbb (bad) scas imul out enterq xchg cmpl mov mov mov scas pop xchg hlt or (bad) jmp cwtl rex.X (bad) movabs jg sub imul adc int3 xchg movabs enterq or or push mov (bad) adc mov adc lods rex.WR cmpsl pop sbb add fildll fsubl rex.WR and gs mov sbb jne or lods sub repnz std std xchg jno fcoml or loope ficoml shr fs mov (bad) movslq movabs rex.X imul (bad) and mov enterq pop xlat pushfq (bad) jle (bad) add pushfq (bad) jrcxz (bad) stos xor (bad) clc movb fisttp ja sub rex.WRX mov cld xor outsl outsb mov retq callq add enterq rex.WR rex.WR pop rex.WX retq movabs rex.W sub loopne sub in xor sub movb jrcxz sub xor repz mov sub (bad) rex.B callq mov sub and rclb and adc rex.RB and ficompl jmpq (bad) fcoml (bad) movabs (bad) mov lods cli xor test lods adc pushfq (bad) jrcxz fnsave rex.B fild (bad) and rex.XB rex xchg out fcmovu sahf pop out or mov xchg (bad) mov jrcxz (bad) rex.WX lock rex.WXB mov push add cltd cmp scas jnp cld or rex.XB fild sub push adc and (bad) mov pcmpgtw es rex.RXB jp movabs rex andl test (bad) jle fsubs xchg (bad) ss rex.WR add and mov cmpsl xor cmp jp pop cmpsl sub xchg (bad) xor hlt pop test fidiv pushq cmp mov sub mov xor push add fdivrs int3 jmp rex.W fsubrs (bad) div es add cli cmp xchg fwait mov cmp (bad) cmp sub in test jl addr32 xchg movslq fmul in (bad) fwait or xor xchg (bad) pop loop sbb push addl mov and pushfq and jmp fisttp (bad) and (bad) imul fadd or mov (bad) (bad) mov (bad) mov fsubrp and jns jne scas pop rex.WR data16 rex.B (bad) pop pushfq sbb ss mov addps popfq sbb push fisttp test add (bad) (bad) jnp rex.WR movabs (bad) mov rex.RB test sbb or or jp (bad) (bad) (bad) and (bad) (bad) (bad) out xchg mov cli sub fsubs sbb int ficompl es rex.RXB fsubrl test rex.WX adc (bad) cmpsb pop (bad) mov cmpsl push (bad) or (bad) mov rex.WRX and callq cmpsl or adc out push and clc lods rex.WR and jg sub push rorb in adc add orl push (bad) xor xor subb cs add sub cltd cltd (bad) out sub mov jmp fbstp pop rolb and fsubrs (bad) js (bad) pop adc jg rex.B rex.X and movsl (bad) jge insl pop scas sub movsl (bad) add jmp pushq adc add js adc xchg loope mov icebp cmovp test cltd rex cmp add jrcxz xchg out add add add mov xchg leaveq adc mov (bad) push pushq fstsw xchg outsl loope insl xlat xor outsb sub out sbb jbe imul insb retq shl cmc mov sub xchg ja (bad) (bad) movslq pop retq (bad) movsl hlt rex.WX es xor xor (bad) mov mov (bad) mov test (bad) retq (bad) mov out jrcxz (bad) in cmpsb or (bad) push rex.RB pop sub imull cmpsl pop sbb out push pop pop movabs mov prefetcht1 jbe jg pushq (bad) mov push fucom int3 outsb cmpsb rex.WR add pushfq cmp (bad) xor lret movabs mov rex.WXB sti push jmpq je cmc xor bnd rex.X imul rex.WRB test test mov sub nop mov callq jns loop jmp add adc fxch (bad) xchg xlat cwtl js mov loop rex.B pop (bad) fsincos xor fidivrl mov addb and rex.RB andl add rex.WR btc (bad) sarl int3 rex.R or rex rex.RXB fs and cmp fcmovu mov pop movabs pop adc rex.R rex.RX rex.WXB and (bad) mov movslq sub (bad) lock rex.RXB lock add test (bad) rolb mov out (bad) (bad) int jns retq enterq xchg fsubl rex.B xlat cmp scas cmp or cmp pop fadds jnp sbb in (bad) (bad) sahf jge and mov xchg ss and rol pop (bad) mov push adc rex.RX xlat cmp pop mov repz movslq or (bad) addr32 ss xchg mov fildll es (bad) jg in rclb rex.WRXB movsb sub xchg push movabs rex.WXB pushq shrb lea movabs pop mov rex.RX jmp xchg rex.RB or sbb notb test addr32 (bad) in jmp mov jmpq cmp pushq and (bad) (bad) fldt jbe jle outsl sub cld fild lret pop and (bad) jge pushfq add mov movabs rex.X fcomi adc sub and push enterq sar (bad) and cmp adc pushq outsl out rex.B mov int cmp adc pushfq loope out sbb rex.XB mov xor adc adc (bad) (bad) add decb cwtl jno test sbb movabs in adc pop (bad) (bad) (bad) in add rex.R sub xor js (bad) fmul (bad) sbb xchg (bad) (bad) rex.X cmp rex.RX adc adc xchg mov and jl rex.RXB sar mov andl shlb test sbb (bad) (bad) mov mulb leaveq cmp xchg adc pop shlb sbb (bad) testb mov mull xor add cli imul test mov in enterq lock fwait mov (bad) cmp mov xchg (bad) rorl jae rex.XB adc add in adc pop fdivs (bad) mov (bad) mov pop xorb movslq (bad) jl adc mov movsb in rex.WR std lock fidivl scas cmpsl (bad) rex.WR shrb and (bad) rcrl out rex.WR xrelease jne mov and jmpq sbb scas pop jae (bad) sbb cmp jne sub or jbe hlt push sub fnstsw mov rex.RXB rex.WR stc and out rex.WX fidivr push mov sbb stos add cmpsb or push cmp pop cmp sub mov cwtl callq mov fmuls or (bad) lret mov pop add rex.W (bad) xor xchg outsb iret cmp movslq outsb or xchg rex.XB (bad) xor and and es (bad) cmpsb jbe (bad) (bad) leaveq imul mov cmpsb (bad) (bad) icebp jae roll jb imul mov adc (bad) andq xor movabs push rex.R rex.XB lock mov sarb and mov and movsb lret mov fisubrl rex.R std rcll (bad) xor sbb or push cmp and jmpq cltd (bad) sub pop pushq rex.WR stos (bad) push mov and or jo movsl pushq enterq movabs fisubl cli add add rex.X xor cwtl jmpq lret or rex.WRXB lret (bad) rorb mov insl rex.WRB rex.B pop adc mov add mov jo adc cmpsl push in movsb jne jne rex.B outsl fcompl jl scas sub or jne movsl sti fsub (bad) rex.WX rex.WR push jge imul (bad) cli sub rex.B pushq mov rex.XB (bad) rex.WRX pushq in sbb sti mov loope mov (bad) out xor movsl rex.R cmpsb rex.XB cmp jmp (bad) xchg lret sahf (bad) scas imul test (bad) out rex.W push add adc mulb sub test xchg subb rex.WX adc (bad) fwait or rcrb popfq sub fwait (bad) (bad) movabs rex.WRX int3 add ja std adc retq pop rex.RB rex.WR rex.WRXB jb pop xchg sub pop or (bad) jbe cmp and lods rex.W sbb and cmp out movabs test shrl mov pop stos loope movabs rex.WRB fwait mov xchg mov push rex.WR jmp (bad) or rex.WRX sbb cmp scas stc mov mov mov leaveq rex.B add push xlat rex.WRX out movabs mov mov (bad) in in and out (bad) (bad) pop and xor retq sti and movabs sbb add and gs in sub (bad) (bad) fbstp rex.XB callq xchg and fisttp out out mov or movabs ds xchg clc fidivrl cmp mov mov and (bad) xor and cli and rex.X adc add cmp mov mov rolb cmp push js cltd rex.RX mov mov push push rex.R pushq iret rex.WR (bad) cmpsb adc push mov (bad) insb push (bad) shrb rex.WXB int3 gs movsb callq fidiv adc push repz sub push addr32 mov jno rex.WXB add jmp xchg scas fadds shll mov nop rex.W jmpq mov loopne iret sti in mov mov mov rex (bad) fistp decl jmp movsl sub cmp adc test test fsubrl push xchg sub push (bad) sub (bad) movabs jns (bad) xchg rex.WR rex.R lahf rex.B xchg xchg (bad) enterq (bad) rorl imul sbbl jo mov xor rolb xor (bad) and sti in fdivr rolb movsl insb mov (bad) mov iret jle cmp orl mov jle (bad) sti rcll mov out js xor lods rex.RB xchg jmp movsl clc jns xchg test movabs clc jo imulb sbb sar pushq mov rex.WRX adc (bad) mov (bad) or rex rex.RXB movabs xor shll rex.W rex.B sub mov pop push pop sbb (bad) jno sbb sub fcomp pushq jg test mov mov (bad) pop loope rex.R (bad) movabs (bad) cmc sbb pop rex.XB pop pushq and xor in jrcxz rex.RX rex sti rex.RX shrb sbb test mov in lods retq add adc and out jle pop jg fcoml jge pop enterq cli loop pop cs jns test cmp xchg rol rex.W hlt movl rex.R addr32 cwtl (bad) pop jae and in (bad) int3 (bad) fild pop mov loop out rex.WR repz and test mov pop mov or mov movsl (bad) out nop (bad) rex.WRXB add (bad) xor in sahf cwtl (bad) scas test adc (bad) rex.RX and cmp (bad) (bad) jne iret mov fs xor repnz fcoms rex.WR cmp or sub add jmp cwtl mov pop (bad) sub (bad) imul nop pushq jbe or ss fidivrl rex.WR rex.W xor and addr32 push mov rex.RXB (bad) scas in or rex.RXB (bad) insb (bad) rcr lea enterq ds xor sub and out test jo xchg mov pop andl add jmpq in and jne mov fistl sbb test jo (bad) push in rex.X rex.WRB rex.B fstpt test add adc imul out out mov cld cmp xor sub mov movabs rex.R sbb add imul add mov sahf jl mov sub idiv mov and (bad) push shrb cmp nop out rex.WXB (bad) mov jl int3 adc cmp out callq (bad) fcompl iret mov movslq cmp fcmovb or nop rex.XB push xchg rex.X enterq jmpq sahf rex in (bad) lods sub cmp decb mov push (bad) (bad) rex.WRB rex.B mov jmpq pop (bad) repnz fs fistp (bad) rex.X push jrcxz jmpq movsb pop rclb sub adc (bad) mov (bad) test rex.R add fcmovu (bad) fcoms mov and (bad) sub lret xor fistpl retq sub adc rex jno enterq (bad) or movslq rex.RB jmp loope pop movabs (bad) movsl mov fimull adc add movabs retq (bad) movsl (bad) rex.WR sub rcrl jbe sub mov mov out and jg jo sub stos push iret jg neg repz fsub (bad) (bad) xchg pushq (bad) hlt rex.RX rex.X lret fdivrl movsb (bad) lock mov sub fsubrl push test rolb stos sbb xor scas (bad) stos mov jo pop or rex.WR (bad) rex.WRB lock (bad) (bad) mov rolb cmp rex.RX xchg callq test pop rex.RXB rex.WX rex push jrcxz mov enterq sub push incl push rex.R (bad) movslq (bad) push lret rex.WRXB (bad) mov rex.WX mov or clc cmc xorl sub (bad) add mov jle push scas and jo mov addr32 fsubs cltd xchg and mov rex.WRB adc pop (bad) retq cwtl add scas imul push mov mov pop pop dec mov fmuls callq cltd scas (bad) and movsl cmp add lock cli sbb out lods mov rex.RX pop cmp stos lret jrcxz and add lret sub cli rex adc insl ljmp (bad) enterq lahf clc or mov test pop (bad) add sub cmp rex.RX (bad) sbb mov andl xor idiv rex.XB (bad) cli (bad) shll out jne js (bad) push or cwtl cltd xor xchg shlb iret add sub test test xor (bad) and (bad) mov cmc clc adc cltd xor xchg sub retq rex.R addr32 sub xchg rex.WRB (bad) (bad) mov (bad) test cmpsl rex.B rex.WR rex.W xchg or sub out outsb xlat lea mov jne gs sbb rex.WR cmp cmpsl js and callq shl mov sub shlb outsb in rex.RXB add lret xlat cmpsl callq (bad) cmp xchg rex.RX (bad) div movsb movabs jmp retq (bad) outsl rex.WRXB sbb (bad) lahf or test mov push sbb test cmp rex.W rcrb pop (bad) or decb (bad) rex.WRXB jmp mov movabs icebp push jrcxz fmul orps or out (bad) (bad) xchg int3 fbstp repz mov retq (bad) jno mov and pushq lods test (bad) or pop (bad) test fisubrl imul (bad) icebp mov sbbl movl (bad) (bad) cmp leaveq cmp jmp rex (bad) rex.RB xlat in (bad) loop jnp imul imul movsl mov or pushq cmpsb rex.WRXB adc sbb push push push idiv xor pushfq cmp outsb pop and sub mov and movslq pop lods pushq or jrcxz xlat cmp mov rex.WX push add rex.WRB sub sub and and fisubl lea movslq lret xor pop (bad) mov rex.WB rol add and (bad) rex.W cmp rex.WRX sub add sub rex.WX xchg cwtl push sub mov out or movabs rex.WRXB nop rex.RB push push movabs or fisttpll pop mov and std pop jo pushq jmpq sub lock out push mov ljmp mov addr32 lods hlt add xchg cmpsl lahf loop and jrcxz push sub mov (bad) xor sbb (bad) rex.WR (bad) jg (bad) sarb outsb mov add (bad) pop rex.RXB rex.RXB sub rex.W cmp add jp jb cmp sub xchg lret push xor rex.WR xorl cmp (bad) rex.XB cmpsl xor leaveq icebp in movsl fsubrs cmc push and xchg rex.RB mov (bad) roll xchg xchg pop leaveq nop in pminsw xor fwait and jo movslq xor in ds mull mov jmp pop mov xchg sbb movslq pop pop std (bad) or mull jp jmpq (bad) and cltd out pop jmpq in idivl mov repz mull int mov maskmovq xchg add rex.B shlb (bad) rex.WR rex.RB mov cmp stc push xchg rex.WR rex.WXB fildll rex.RXB pop and (bad) movslq sbb xchg out sub cs cmpsl mov mov rex.RB (bad) jg movslq adc cltd (bad) jnp push adc loope push fstl rex.WRXB xchg add sbb and outsb rcrb rex.RB xlat mov movabs rol mov push rex.RXB rex.B pop cmp lahf mov out pop (bad) (bad) sti iret in rex.WR push mov loope pushq cmp mov fcomps push rex.WR out rex.R gs or (bad) sbbl cmp loope pop xchg pop cmp cmpsl es xchg rex.RXB pushq push lret or jl (bad) xor sub movsb lock jge rex.B mov mov clc stc sub (bad) and gs sub movabs in movabs jo leaveq pop mov rex.RB pushq fwait pushfq (bad) (bad) jo stos (bad) add in jge retq cmp and adc vptestnmd cs (bad) (bad) in jns (bad) std cmpsb (bad) rex.WX push xchg data16 jnp adc fxch mov sbb adc enterq out fldlg2 push rex.XB rex.WX fidiv mov rclb imull sahf rex.WR pushq sarb mov cmp mov (bad) imul mov rex.W callq mov repnz sti test nop jmp xor (bad) mov addr32 xor xchg (bad) lret rclb (bad) push rex.X mov (bad) add (bad) cmpsl fcomip fldt mov pop or test cmpl xchg outsl imul gs nop add sbb nop cs insl movabs out sub (bad) insl rcll std mov repnz sub lret int3 mov enterq jge decl fdivl push fcompl insb ja sub rex.RX rex.XB mov fcmovnbe leaveq or (bad) sub pop or xlat cmp rex.RX or cmp (bad) rcrl test (bad) psllq rex.RX rex.RX fsubrs lret mov insb (bad) mov push rex.W rex.WRXB add rolb pop push rclb shll rex.WRXB rex.W xlat add (bad) rex.RXB rex.WRB pop outsl rex.RXB fnop rex.WXB (bad) sub pop rex.RX rex.W pop rex.RX rex.RB rex.R lea (bad) fadds enterq rex.WX mov lret callq jo xor int3 ss (bad) add sub pop cmp pop insb ficom add fmull jns push and mov mov (bad) cmp (bad) fiadd (bad) loope add (bad) std (bad) add and rex.XB (bad) (bad) pop rex.X retq pop movsb rolb add (bad) rex.RX sub rex.WRXB repnz xor es adc jbe (bad) fimull jge pushq lods adc sbb push push rex.W adc mov (bad) rex.XB fimull pop rex.WX sbb and movslq (bad) and or mov sub fmuls leaveq (bad) jmpq sub movabs incb push or add or and mov out lods gs (bad) (bad) xchg xchg push pop lock in cmp push xchg decl push in rex mov and xchg fbld sub movabs cmp stos push (bad) mov movabs shlb enterq data16 jae (bad) loope (bad) cltd xchg rex.WXB add movabs movabs lahf cltd xchg test and (bad) addr32 (bad) adc rex.WR or mov (bad) jno rex.B rex.WX std mov xor xchg rex.WX jnp cs pop test mov movslq rex.RB mov adc push addr32 out test movl fs test or pop iret mov (bad) mov or bswap es movabs and pushq mov pop sub adc out orl sub adc clc mov mov vcvtdq2ps push repz xchg pop rex.RB gs pop gs (bad) cltd cmpsl leaveq imul rex.B xchg xor loop outsl xchg rcrb pop sbb addr32 rol mov fcmovne in jrcxz sahf jb rcrl (bad) rex.WXB rex.RB leaveq gs sub xchg scas fs adc jle cmp adc js rex.WR mov outsb sbb mov stos cwtl sub and rex.WR iret (bad) cmp rex.X lods outsl movabs cld jo frstor (bad) xchg movabs fs out (bad) imul (bad) push enterq mov jg fsubrs jg cmp add rex.WB cmpsl fsubrp rex.X sbb push mov cmp shlb negb loope xchg sarb shl rex.WRX fs out jae pop movsl movsb cld outsb (bad) jg sahf lea mov stos test (bad) rex.WX adc pop test and mov (bad) rex.B cmp mov mov cmp (bad) lcall outsb adc std (bad) rex.XB push stos gs imul pop adc clc cmpsb movsb mov pop cmpsl cs (bad) icebp xor pushq mov pop mov xor push pop (bad) lahf rex.WX lods (bad) cs imull fdivrs mov int3 or sbb sub (bad) adc push es fidivrl mov retq jmpq rex.WX mov push jo rex.WX (bad) mov mov rex.W ss rex.R sub or (bad) in (bad) rex.RX xor mov jno mov sbb jno nop rex.W or ds out cmp mov adc push sbb rex.R test push je xor cmp (bad) jmp imul jge add cltd clc test mov movabs rex.WR rex stos pushq roll clc fs or test rex.RX push ss rex nop jge out fstl (bad) mov sub mov and adc jmpq callq push adc sbb fcoml rex.W rorl cmpsl rcrb movslq insl or pop (bad) lret rex.W loope insl push (bad) notl and (bad) and or push or shll and and or and fsincos mov xchg loopne (bad) cli pop orl enterq (bad) mov mov movsl rex.X icebp cmpsw clc (bad) test repz (bad) cli test lods cs (bad) rex.WX rclb or es add andb (bad) fmuls insb jae callq adc adc add rex.WRXB es fldcw frstor fadds adc iret fsubs jle jmpq int pushfq and sahf rex.WR add fcomp retq sarb flds cli out movsl jp jne stc cld or ds add xchg (bad) rex.RB es or pushq (bad) rex.R pushfq jns (bad) jrcxz push out xor cmpsl rolb mov mov jnp (bad) jno adc mov rex.X fs sub cmpsb jmp mov xchg jrcxz rex.WB rex.WR mov rex.RX add (bad) test and mov ss je rex.WR mov scas cmp fiadd cmp subl jl (bad) push rex.XB sub rex.XB cmpsl or mov xchg sbb jmp rex.RXB push xchg pop adc icebp xchg outsb (bad) iret (bad) out (bad) add fldl cmp rex.WRX lock pop pushq (bad) (bad) rex.X push out cmp mov xor test es add push (bad) movabs test xor jle cmp xor (bad) (bad) repnz pushq enterq inc and rex.X popfq movslq xchg xor mov pop fistpll (bad) movabs (bad) shrb js xor out sarl out and rorb adc and out int (bad) (bad) rex.W (bad) mov nop mov movabs add lret je (bad) pop (bad) (bad) rex.RXB movsb test jb jp mov push and clc movsb rex.X cs xor in xlat mov push movsl nop lock and (bad) sbb and mov movslq mov sti mov callq pushq addr32 fild (bad) push rex.WB retq rex.WR xor jle lea rex.WRXB rex.WX idivb cmp movslq push add fcompl sub mov xchg rcrb (bad) mov jnp or mov repz sbb movabs sbb cli incl push mov xchg (bad) icebp repz cld mov cmp stc xchg mov sbb add rex.WXB adc (bad) rex.RB stos in movabs mov mov jo xor movabs xchg cmpsb pushfq cmp icebp nop and jmpq test xor sub insb gs (bad) rex.WXB sbb xchg or test cmp stc pushq jne push add rex.B addr32 (bad) cmpsl and lret out jns hlt std sub hlt test xor fldcw pop orl rex.WR jae xor mov or popfq pop hlt jbe test xor mov clc (bad) lock push insb test movabs (bad) jbe pop and cmp fistp jmp jrcxz add lea mov push xor mov icebp cmp xchg xchg movabs adc pop lret scas rex.B rex.WXB pop rcrb push int movabs lret jmp push cmp jrcxz jbe clc mov out imul and sub outsl setns xchg out rex.WR jrcxz fwait (bad) lods out movabs cmp (bad) popfq rex.WXB pop cmp test movsb rex.X jo push test pushq sub xchg (bad) and out mov negl popfq or cmpsl notb mov xor outsb sub push and cltd push xchg decb rex.WX pushfq add jne (bad) jrcxz lahf callq xchg lahf jns out (bad) and mov jae xchg sahf loop pop rex sbb movabs add jp clc cmc add rex.RXB imul or xor pushfq loopne or mov in (bad) and rex.W cmpsl pushfq loope add sbb jo repz xor movabs shrl lods mov sbb adc (bad) sbb fistpll pop jns ss jne (bad) movabs mov retq stos (bad) pushq rex.RX xchg xor sbb loope retq (bad) stos jmp jb jmpq rex.W enterq sub adc xchg and adc sub (bad) and xor test ja (bad) ss leaveq mov (bad) cmpsl rorb cmp test fcoms sbb rex.WR rex.WXB out xchg adc mov adc mov xchg rex.WRXB (bad) push nop mov ficom (bad) pushfq xchg in repnz rcl xchg popfq mov enterq pop movabs rex.WB rex orl shlb mov mov adc imul add push in repnz (bad) (bad) movabs add shr bswap clc sub (bad) enterq mov mov mov fdivs lret and icebp sti jmp (bad) test adc (bad) mov push cmpsl mov scas faddl xor enterq test or adc or mov pop jrcxz fistpll pushq xor xor adc fidivl jrcxz outsb push mov and push cmp rex.RX and (bad) pop mov (bad) mov (bad) rex.WB fadds movabs imul mov int3 pushq cli callq jns jmp rex.W rex.WR adc rex.XB rex.WX rex.WRX gs (bad) imul sbb loop (bad) popfq rex rex.WR (bad) or mov ja lret sub mov callq mov out leaveq pop sbb or test icebp pop (bad) fwait pop pop rol xor rex.WR rex.WX (bad) cmpsl jl mov rex xlat (bad) lret rex.WXB xor pop rex.RXB cltd out cmp rex.W xor (bad) (bad) test rex.R cwtl and push rex.R rex.WRB lahf loopne loope nop xor fsubr mov movabs mov cmpsb rex push ds cmp pop xchg and (bad) mulb pop (bad) jge out cmc (bad) sysenter retq test hlt lods cs xor or (bad) cmpsl xchg pushq (bad) mov jmp in rex.WX rex.WXB rex.RB in jmpw rex.W jmpq (bad) mov adc jo cmpsl test (bad) and cmpsl int out or mov rex.WRB rex rex.WR xor rex.W rex.WB rex.WRB rex.B add popfq add out bnd jl rex leaveq (bad) hlt imul pop (bad) xor (bad) mov clc movsb jmp rex.WRX fbstp mov shll mov iret adc adc mov lret rex.R rex.R xorb repnz (bad) fsubs jbe (bad) cmp fsubrl rex.XB movsb jmp cmp mov lods adc callq cmp jae xor rex.WRX jbe loop sbb xchg sbb clc or rex.RXB mov test mov or out (bad) (bad) push jge lret mov fdivs push popfq repz cmp push pop mov rex.RXB rex.XB test orl loope sbb (bad) and mov (bad) rex.WRX xchg xchg mov sub xor pushq gs callq sub rex.WB rex.RXB rex.WR pop lods (bad) addr32 rex.RX jle push cmpsb cmp cmp loopne (bad) sub gs add mov jne push pop push adc (bad) mov (bad) pop sub jrcxz fstpt rex.B adc pushq mov cmp clc pop mov pop out sbb por xbeginq pop mov and clc out sbb and mov rex.W rex.WR xchg push callq (bad) rex.RX outsb iret cwtl and jae jmp xchg addr32 sti mov rex.WR imul cltd add xchg jns faddl movabs rex.R add cld rex.WRX (bad) jmpq adc jae push roll in out int push (bad) lods and or rex.X jns or cltd sub pushq (bad) and and (bad) rex.WX rclb rex.XB mov add orl gs rex.WB rex.WB pop and retq int mov (bad) (bad) jbe lea (bad) and adc rex.RXB sub movslq adc cltd (bad) fwait popfq test clc (bad) imul rex.RXB cmp (bad) jbe xchg enterq outsb (bad) rex.B (bad) jns sub test rex.XB jns nop pushfq mov adc movsl jge cmp adc xchg (bad) cs in sarb leaveq jo rex.B stc (bad) fisttpl (bad) pop jno (bad) es rex.WR xor jmp adc jns fcoms ss xor jno fisttp jne rex.RX lock fistpll pop int out rex.WXB scas or retq mov cmpsl rex.B pop jl test and in pop jbe push pop outsb (bad) imul rex.WR popfq jns out mov (bad) xlat iret fwait lods (bad) fimull callq (bad) rcll xchg adc (bad) push xchg mov xchg xchg rex.RXB es in and (bad) loope fscale jrcxz stc cli cmp push fmuls mov xchg xchg insb iret rex.XB mov cmp rex.R cmp adc sbb pushq jns sub in (bad) xchg xor je push int3 mov mov cmp or pop ficoml xlat loopne mov jne enterq rex.RB sub fsubrl rex.WRXB mov out rex.RX rex.RB rex.RB cltd add jmpq sti out mov rex.WRXB pop rex.WR (bad) or xchg jg (bad) out rex.B repnz pop add xchg jne rex.WRXB out rex.WR rex.RB sbb (bad) fdivrs rorl add jae mov movsb mov (bad) rex rex.WRB pop jle push pop mov (bad) leaveq mov callq cmc xchg rex.X push cmpsl out mov vpshuflw ds add pop movsb leaveq push sahf mov jno (bad) data16 xor mov subl (bad) add js loopne sti vpaddsw rex.WRX xor or pushq jnp test push push ficompl test rex.RX jmpq (bad) movabs rex.WR popfq je add pop push mov (bad) pushq int es push loop cmp jae icebp icebp xlat xor mov pop add or (bad) sarl (bad) cmp and sub or out test (bad) rex.RX xchg (bad) pop rex.W and rcll xor test scas xchg addr32 and test (bad) (bad) pop push shld pop jg callq scas or outsb loop movabs and add cmpsl (bad) pushq test (bad) imul (bad) test add addr32 (bad) xor pushq clc fs fcmovu cmp xchg sub pop rex.WRXB jno rex.WX jmp cmp movsb clc rex.B (bad) sub rex.W cmc movabs es rex.W or stos mov (bad) (bad) movabs add retq test sarb rex.XB lock movabs rex.WXB popfq imul push fsubrp and fcomp callq mov cmpsb movb int in (bad) insl (bad) or stos mov (bad) mov sub mov jns rex.X fidiv int xor mov (bad) sub in in movabs adc (bad) mov cli or jmp mov jb mov fsubl test ss pop pop rex.W jmp adc jne movabs rorl cmp rex.R and addr32 (bad) adc movsl notl xchg and mov pop loope repnz fs int mov pop cmpsb rex.WR lea pop es pop data16 (bad) out and (bad) push sub mov int3 pcmpgtb or sbb xchg rex.WRX rex.R out lret rex.X fs mov mov cmp xchg (bad) sti jge cmp (bad) sub imul shll (bad) movslq pop test (bad) (bad) (bad) pop rorl rorb mov fistl mov mul or jge insb mov push mov (bad) addr32 movabs rex.WR (bad) or mov data16 popfq out push or mov cmpsb rex.WR sarb and (bad) addr32 push sbb clc or fcoms rex.RXB retq and rolb (bad) xlat popfq cmp int jmp gs test and test movabs js mov movslq rex.RXB es jle leaveq mov jl pmulhuw cwtl rolb cld sub (bad) push cld faddl fbld ds movabs mov clc xchg lret or push or pop rex.RXB rex.WR sub mov mov cmp scas adc add fidivl add rex.B rex.WR pushq (bad) (bad) rex.WX repnz shlb rex.B and insl mov cmp movabs movabs mov mov adc test adc sbb (bad) fidiv rex.WXB rex.R cmp adc rex.XB cmp shrb mov or movabs sub (bad) pop (bad) callq pop jnp push jbe rex.XB mov sbb (bad) negb loope (bad) or rex rex.WR fs xor push mov in nop jbe push jmpq std out mov xor out sub movabs xor clc (bad) in sub jmp pushfq outsl out mov xor lods xchg mov jns callq (bad) pushq (bad) fiaddl cmp add fdivrl and lea fs shrl push cmp rex.WRB pushq lea movsb rclb cmp jrcxz shrb rex.WR pop test cld rex.RX cli cmpsb mov jno push insb jmpq sub (bad) jle sbb repz jmp mov (bad) push mov (bad) loope movabs sbb imul push rex.WR rex.RXB (bad) (bad) mov movabs lahf movsb sub hlt movabs mov cmc movsb jns push sarb movabs or shrb or adc or mov stos xorb pop scas imul stc negl adc mov or xor rex.RX sbb out jno xchg pop (bad) out jae or es rex.WRB jo ss mov push or mov sub sbb loopne in pop lock imul addr32 scas stos insb rex.WRX xlat gs movslq rex.WRXB shll je rex.RXB (bad) fadds imul movabs pushq jrcxz fs rex.RB or (bad) cltd sbb jg int3 outsb out rex.WX stos mov gs xchg mov mov xor sub xor sbb callq cmp (bad) (bad) sbb mov jle enterq (bad) xchg cwtl (bad) lock push (bad) test rex.WR (bad) cmp cmpsl hlt scas loop adc (bad) jb xor stos fiaddl or test shrb rex.WX mov (bad) in shll pop jb outsb adc mov sub ss jp (bad) pop (bad) cmp add jne mov push (bad) xor pop mov fiaddl jo js or insb (bad) mov outsl rex.RX sub in sbb shrl and fisttpll fbstp (bad) (bad) or clc (bad) xchg rex.WRB data16 and (bad) adc js sub pop addr32 rex.WR lods cmp rex.RB mov cmpsb je sub adc add jge add push test jp xor and and adc fwait sbb test sub je adc mov pop (bad) mull mov cmpsl rex.XB enterq (bad) out test es decb insl sub repnz outsl imul (bad) jo fldl sub rex.WX out jmp adc (bad) sub cmp pop test mov jmp (bad) hlt ficomp mov mov out rorb adc or pop clc cld hlt sub fcmovnu add mov mov (bad) leaveq mov and (bad) adc adc ss or cmp rex.WR add push addr32 cmpsb (bad) rex.R rex.WX sbb rex.WRXB xchg in mov sub imul cmp cs xlat rex.RX xchg (bad) loope movabs mov or hlt movabs rex.RX mov (bad) leaveq and (bad) stos cmp loope in jrcxz loopne pop (bad) pop pop or or rex jnp rex.WXB rex.WRX mov mov xor cmp jmp cli (bad) mov push (bad) ftst test (bad) mov cmpsl and nop fidivrl (bad) add jns (bad) mov test cs int3 retq sub mov pop ror data16 lret add mov mov test pop (bad) (bad) out callq mov fisub and (bad) (bad) push insl (bad) (bad) rex.RX pop add and (bad) adc sti add cmpsb stos jns cmp push test data16 scas xlat jnp push mov xchg enterq jbe and cmp push (bad) sbb shrb (bad) pop sub (bad) add push adc lea and cwtl mov in xchg cmc mov cmc rolb mov jle stos rex.WXB ficoml jb jbe fcmovnb (bad) adc std loop add callq mov sbb (bad) out jmpq callq rex.W data16 adc movslq loopne insb (bad) push or sub jnp rex.RB (bad) mov (bad) movl insl jnp push (bad) lret add (bad) fistp mov jmpq adc out mov jnp pushq pop cli xchg stc retq or nop pop callq cmpb adc movsb andb lret (bad) rex.WXB rex.W push insl mov lock sub iret es mov mov es push (bad) and jae push xchg xchg fisub pushq mov add jge mov mov cmpsl sbb (bad) pop cmpsl adc leaveq mov add rex.R rex.X (bad) (bad) test and mov rex.XB pushq xor sub movabs add rex.RXB mov jno (bad) ficom mov cmpsb (bad) pop xchg jg (bad) adc neg stos callq rex.RXB rex.XB sub mov pop and sub mov pop stc addr32 adc cs adc test xlat and imull cmpsb cmp add ds cmp xor shl add sub (bad) rex.WX lahf cltd pop mov shlb (bad) xor mov (bad) (bad) scas cld repnz or rex.WB pop gs mulb gs pop mov lods cmp rex.R push rex.W vmovhps and jmp pushq jrcxz and adcb mov rex rex.WX out (bad) sub rex.R (bad) add cltd sub fild fild xchg rex.W nop imul lahf and sub rolb fild xchg rex.W rorb movabs fidivl fwait xchg rex.WB outsl mov (bad) pushfq xchg sahf rex.WB fnstsw in cld and jmpq rex.B rex.WR movslq repnz (bad) jg rol lods adc fcompl imul xchg xor movsl fnsave mov rex.RX mov xchg (bad) and (bad) (bad) push fcmove xchg sbb rex.X sbb jns cs add (bad) adc rex.WRXB push (bad) repnz mov or jg in fild rex.W (bad) (bad) test jno movsb (bad) rex.WB (bad) rclb push callq xor mov sub adc cmp jrcxz cli or (bad) adc cmp xchg push vaddsubpd roll fimull cld pop outsb (bad) mov and mov or cmp xor mov fnstenv mov stos push add rex.XB (bad) pushq mov xchg subl (bad) xor addr32 rex.WB fsubrs (bad) rex.WB lock mov (bad) sti mov adc cltd xor jae (bad) adc rex.WRXB rex.WB in ficomp lahf sub mov rex.X out xchg movsl int rclb scas jno push sub and mov fs fadd flds lret mov cmp pop (bad) scas pop rorl xor rex.WB pushq jrcxz rex.WB repz loope jne test (bad) jb and push lods cmp rex.WB rex.WX (bad) pop (bad) repz (bad) adc cmp xor scas clc mov mov jg push (bad) mov loopne repnz movslq sbb gs mov pushq (bad) or imul mov mov (bad) jne iret rcll movslq rex.B rex.RB ss (bad) jae mov xor (bad) jrcxz ja popfq stos pushq xchg push mov push pop insb xor or and (bad) rex.WB movabs je (bad) rex.WRX adc retq flds (bad) rex.RX add lahf and jbe outsl roll pop (bad) jo rex.W add jp cmpsb je jle pop xor rex.WRB jg imul push pop fistpl mov rex.R iret rex.WRXB rex.RXB pushfq rex.WB rex.WXB rex.B mov add rex.X rex.WXB jp sub out cmpsl xchg rex.WB (bad) out cmpsb xchg rex.WB es in movsl test rex.WB test and jrcxz movabs movabs rex.WB (bad) and rex.WB movabs mov (bad) movabs std fnstsw rex.WB jl cmp sbb fstpt sbb fidivrl callq cltd jns movabs mov jg mov rex.RB or faddp fistpll cmp add lahf (bad) addr32 push jg and (bad) rex.XB cmp cld in loop jnp pop jmp hlt mov rex.X rex.WX rex.WX jmp icebp jnp fistl and add pushfq sbb ja in cld adc fisttpl or rex.X lea (bad) pop add mov movabs lea lea (bad) (bad) orl (bad) pop (bad) movabs cs fcomip hlt (bad) pushfq adc mov add fdivrl sub test adc cmp or es rex.R mov mov pop jnp shrl subl push (bad) (bad) lret sti pop mov rex.RB lock insl mov (bad) movabs movslq (bad) sbb ficomp xchg mov movabs cmp adc enterq or jne enterq lahf xor movslq sahf rex.XB and xchg and pop adc push and xor mov rex.WRXB imul or sbb (bad) lea or or rex.X (bad) (bad) std jrcxz rex.X movabs test and retq jge sahf ds adc adc lods (bad) in rex.X and jae test mov and and rex.W rex.XB rex.X (bad) xchg (bad) xchg mov (bad) or pop push fnstcw retq rex.XB xor (bad) nop stos rex.RXB scas out add cld popfq cmp imul rolb and (bad) enterq add xor and fisttpll and sahf negb rex.WR rex.XB rex.X jne mov lahf pop cmp add (bad) (bad) in (bad) scas movabs loop mov or retq sahf decb rex.RX fild rex.R mov rcrl mov in fwait cmc loopne pop sti adc rex.WXB movabs add rcrb repnz (bad) enterq (bad) add pop (bad) fs rex.XB cmp movsl cltd mov xchg rex.RXB fcomps js cli jo rex.RB rex.WXB sbb test pop fcompl rex.XB flds out adc ja mov rex.W xchg fnstenv (bad) push or andl sub jle or std lret rex rex.W rex.RXB fmul pop add sub sbb or or lret rex.RB sbb sub mov pop or or (bad) or rex.WB or mov xchg test sub mov rex.XB or sub sbb fdivrs cmp not mov xchg ja (bad) (bad) not mov xchg jbe ss cmc (bad) mov xchg jne xor xchg je xor repz mov xchg jae xor repnz mov xchg jb xor icebp (bad) mov xchg jno xor lock mov nop jo xor out iret scas rex.WB outsl rex.WRXB pmaxsw scas rex.WB cs in int lea sub rex.WB or lret stos mov sub (bad) lret mov sub jmpq or adc sti and rex.WB sbb mov jns addb pop lret rex cli in sbb retq add sub movabs mov push sub sarb rex.B and (bad) rex.RXB jg cmovno rclb mov rex.RXB repz rex.RXB rex.RXB fwait mov cmp pop mov pop rex.B cmpb pop add fwait sahf sub fisttpl fldl sbb fistpll cmp rex.RB test rex rex.WRX pop adc jle mov and mov fwait movabs rex.W rex.B clc (bad) (bad) and sbb jb movsb jle (bad) xor mov mov rex.RX mov sbb rorl cmp movsl imul xor adc rex.RX (bad) out cld rex.WRX jl add pop push add loop add nop std mov loopne pop fcmovne sbb psubq fistpll lret int sub (bad) stc movb (bad) fwait movabs in add je movsb and rex.RX or fidivr and mov hlt fadds cmp ficomp jl out sbb rcrb fwait mov rex.R mov jmpq movsb cmp (bad) test (bad) pop rex.R sbb cmp cmp sbb fsubrp outsl test and in add nop loopne outsl pop imul and hlt mov cmp (bad) (bad) pop xor lret adc and jmp rex.XB mov jbe xchg rex.RB test sub fs cli (bad) jl xchg subb add jp mov cmp in pop (bad) sbb rex.R lock (bad) ficomp and rex.RX (bad) scas fwait mov in pop add lcall sub (bad) and xor pop decl fmull (bad) loope xchg cltd fist test add (bad) rex.WRX cli (bad) xchg imul and cmp xor pop loopne rcr xor xchg ss jl gs mov pushfq test jg (bad) pop mov xchg rex.RXB rex.RB movabs xorl add add fnstenv and retq cltd rolb (bad) xchg jl (bad) movabs addl in out in add (bad) rex.W jrcxz rex.X mov imulb rex.WB rex rex.WRXB rex.RXB rex.X mov clc test fcompl rex.RXB sbb sarb (bad) retq sub rex.RX retq pushq cltd out xor je push pop fwait and mov (bad) fs icebp cmp rex.WRXB push xchg rex.W push in (bad) push push pop int3 pop sbb pop (bad) in int3 rex.W mov rex.RB or (bad) rex.X and rex.B rex.X rex.RXB rex.W retq and xchg (bad) rex.RX (bad) rex.RXB (bad) imul enterq leaveq or rex.WXB (bad) lret in (bad) int3 push rex.WRB int rex.WRX (bad) (bad) iret in (bad) rclb int3 rcrl push and (bad) (bad) shl push (bad) (bad) push push int3 (bad) sbb lret sbb pop (bad) (bad) rex.B jno (bad) rex.WR int3 push sbb pop (bad) (bad) rex.RX rex.X rex.WX in (bad) push push push int3 push sbb lret sbb ffreep xchg (bad) rex.XB pop rex.WXB push sbb pop (bad) (bad) rex.R xchg in mov push push pop int3 pop ficompl push fildll rex.X fwait fs (bad) mov jmpq mov (bad) incb callq enterq test movabs pop pushq rex.XB pushq or sbb (bad) pop out jns int (bad) jns mov pop sbbl mov (bad) sbb mov jns pop and rex.R fs jle pushq pop jnp fwait add mov or jp pop rex.WX rex.RB sub rex.W xchg (bad) xchg adc movabs (bad) cmp mov fcmovnu std xchg mov mov jne loopne sbb mov rex.WX (bad) xchg rex.X outsb mull outsb data16 out sbbl (bad) shll test jp cmp movabs xchg fsubs (bad) test shlb rex.XB (bad) rex.WR xor jae nop pushq push rex.XB imul sub incb fwait or fiadd push insb leaveq lahf rex.R rex.WB push (bad) xchg xor add add add rex.R addb rex.W (bad) jle (bad) rex.WB adc (bad) and repnz rex.WB rex.X (bad) ja jns mov mov (bad) rex.RX rex push icebp pushfq jb sub (bad) ja cmpsb subl lret rex.RX jo jmpq push loopne mov imul insl pop and fnop adc mov pop jae lods rcl pushq push xchg rex.WB and in cmp (bad) and rex.B imulb mov sbbl or fs pop (bad) out add clc and cmc jmpq movabs jmpq pop (bad) rex.W test sub mov jle enterq rex.RX (bad) pushq ja gs jmp add push rex.W (bad) xlat in and ja jmp rex.WRXB jge fmuls sbb jo (bad) jp lock imul cs (bad) pop (bad) sbb jno xchg jno sbb loop pop xchg gs sahf movabs mov adc loop mov (bad) icebp pop push ror sub and pop (bad) (bad) repnz cmp fwait sbb testl roll jnp and pushfq cmp rex.WR (bad) cmpsb movsb or pop mov or push cmp rex.RX rex.RXB movabs rex.WR rex.RXB out rex.RX jg push (bad) sysret cld lahf mov jbe lret rex.WB outsl movslq movabs or cmp (bad) rex.WXB rex.WXB mov frstors icebp divb sbbl ds (bad) adc (bad) or adc mov vmovaps test sbbb or cli setnp rex.B iret rex.WB loopne cltd in sub mov (bad) rex.WRB adc rex.WB mov mov test rex.WB gs rex.XB rex.X jae sub ficom mov mov pop cmc pop movsl (bad) enterq jl add movl sti (bad) cmpsl (bad) sbb rcrb mov (bad) movsb movabs add (bad) cs rex.XB xor (bad) rex.RXB rex.WXB pop test rex.WXB xlat rex.W pop rex.XB xlat sbb rex.WR xchg rex.W pop rex.RX adc stos rex.XB cltd adc rex.XB mov push rex.WB rex.RX push xor rex int xchg pop ds (bad) idivb mov cmpsb cltd retq pop push (bad) hlt xchg sub add fsub shll xchg rex.WX rex.WB push cld pushq lock cmc mov xor test and xchg xor mov mov rex.RXB adc test out rex rex.WB (bad) fwait xor (bad) and (bad) pushq flds mov add andb in rex.WB xchg rcrl test ds rex.WB adc sahf cmp rex.WB rex.R mov lods sub rex.WB pushfq pop cmpsb pop (bad) rex.WXB sbb fsubl cmp cld xor mov insb add (bad) es movsb or clc fwait test (bad) cli (bad) jp or retq or rex.WXB (bad) xchg clc movabs jbe outsb retq mov xor push out int3 jo mov ss ss and jae decb vpavgw mov or insb (bad) sti sbb rex.WRXB adc retq (bad) cmp mov retq retq sub xor cld sub cmp and pop push sahf (bad) rex.WX rex.RB rex.RXB rex.WR rex.RX rex.XB rex sub rex.WRB pop push leaveq pop (bad) push rex.WX (bad) fwait rex.WRXB out (bad) loope ror pop rex.WRX jno (bad) rex.WXB xor mov pop and (bad) loopne rex.WX push cmp mov rex.XB rex.WXB (bad) pop rex.RB (bad) (bad) pop pop rex.WR rex.WRXB sbb or rex.RX (bad) rex.XB rex.WR stos push std push sbb (bad) rcr rex.RX jl and rex.WRXB (bad) push rex.RB rex.WRXB es lret rex.XB push js mov jnp add (bad) rex.WX xchg pop es mov rex.XB pop rex.WX rex.RB rorb push mov test (bad) push rex.RB (bad) push sti pop pop rex.B rex.RX rex.B rex.WXB rex.XB (bad) mov rex.RX push rex.XB pop (bad) jne sbb push mull rex.RXB jbe push (bad) sub push push int incl ficomp pop rex.WRXB pop rex.WR or xchg mov mov ja addr32 push retq (bad) cmpsb rex.WB rex.WXB (bad) rex.WRXB addr32 cmpsl sub pop out sub (bad) or rex.RXB addr32 xchg es data16 rex.WRXB push roll sub leaveq fisubrl rex.W (bad) (bad) push rex.WRX fisttp rex.B movabs (bad) pushq rex.W rex.RB push rex.WRB pop rex.RXB rex.RB rex retq add rex.XB mov (bad) and int mov es rex.R rex.RXB sbb rex.WRXB pop pushq rex.B adc shl rex.W mov mov (bad) cmpsb rex.WRXB and sbb cmp test and or sub xchg (bad) rex.RX test cmp out mov addr32 shlb fcmove mov rex.WB movabs fsub push mov adc rex.WXB rex.W rex.WRB (bad) push or rex.RB (bad) (bad) (bad) xlat iret fsubl scas rex.W rex.WB (bad) movntq out rcrb (bad) rex.RX push mov adc sub lock rorl rex.XB rex sub (bad) out push xor rex.WRB enterq sub push fisttpll (bad) pop jae sub cmpsb rex.WRB in fcoms mov pop pop in fadd addr32 pop xchg cmp jns add rex.R rex.RX fsubrl fisub pushq (bad) pop add and or (bad) rex.B xchg lea or (bad) ficomp fdivr cmp (bad) (bad) rex (bad) add enterq fwait (bad) fcoml scas sar sbb xchg rex.WRXB test fcompl fistpl mov sub cmpsl cli and rex.W fsubl retq sub vmovntps lahf hlt rex.B rex.X rex.W fwait movsl rex.RB (bad) rcrl (bad) hlt push cmc fdivrl (bad) (bad) stos retq (bad) push fildl out cmp (bad) rex.W push out retq (bad) pop rex.WRX cmpsl (bad) movl smsw push (bad) rex.W iret mov rex.WB rex.WRB rex.RX rex.WRXB mov cmpsl movabs data16 (bad) sbb (bad) rex.WRB push (bad) rol out sarb shrl cmp pushq rcrb rex lret adc rolb (bad) xchg rex.RXB rex.WX rex.XB rex.R rex.RB es rex.WR (bad) push xchg cmpsl rex.WXB sub push test enterq rex.XB rex.WRX in rex.RB out data16 rex.RXB sbb rex.WXB sub push out push int mov imulb adc flds jp iret rex.WRX rex.WRB push (bad) pop out fcmovne pop cmc icebp int push rex.RXB fstpl rex.RX rex.RX rex.W mov sbb or sub push adc cmp callq xlat xor fidivr (bad) (bad) loopne xor roll cmp rex.XB and (bad) cmpsl (bad) (bad) rex.W (bad) sub rex.W rex.RX sub (bad) rex.W (bad) sub sbb rex.X (bad) sub jb movabs (bad) (bad) rex.RX fild iret fisubr cmp out fildl xor push callq jb syscall adc pop (bad) (bad) rex.RXB rex.WB retq (bad) xor fwait rex.WR imul mov cmp xchg lcall movabs sub fsub and pop (bad) or (bad) add and jne cmp pop ss sbb push pop rex.W rex.RXB andl pop push loope ss adc xor (bad) (bad) jp and sub push xchg or rex.R rex.RB mov rex.R lret cmpsl clc stc ds shr (bad) mov retq jnp rcll rex.RX and fmull rex.RXB retq rex.RXB rex.R retq rex.W and rex.W leaveq cld int3 rex.B (bad) sbb fidivl rex.R insb fcmovu cmpl rex.RXB sbb push rex.X rex.X pop push mov rex.WRX rex.WR adc rex.RB xchg faddp (bad) loopne nop and iret iret add cmpsl rol fwait (bad) pop cmp int sbb addr32 or (bad) rex.RXB sub rex add movsl pop (bad) cmp test rex.RX pop fcmove or faddl fwait xchg rcr faddp pop sbb rex.WX cld rex.RX fidivl pop popfq (bad) or (bad) push es sub pop add pushq adc xchg rex.RB xchg cld in sub (bad) cmp add xchg (bad) shlb rex.XB (bad) lahf sub (bad) sub fsubl rex.B xchg std int3 movabs sub pushq pop add test repnz ss pop rex.W ror sbb sub mov rol fbld cmp (bad) test int3 pushq rex.WR (bad) push (bad) enterq push enterq fucomip rex sub (bad) push rex.RXB jmp add sbb rex.R jle (bad) (bad) cmp pushq rol and (bad) (bad) cmpl test xlat sbb movsl rex.WRB push rcrl adc sub rex.WX leaveq jnp fisub retq (bad) movsl pushq rex.R rex.RB retq cmpsl hlt (bad) jne add pop pop cmc (bad) test xchg rex.RXB movsb mov mov xchg (bad) add test rex.RX popfq leaveq pop test scas cwtl cmpsl pop jnp sub scas add sub int3 enterq rcll or fmul add rex.RXB add sub rex.RX jnp sub sub or in and ror (bad) fistp jbe callq sbb addl xchg fbstp shr mov retq (bad) mov pinsrw rex.RXB push orl (bad) and shll rex.RXB jge rex.RB add shrl or int3 jns addr32 lret jp popfq or jge pop rclb ja outsl sbb sub data16 pmullw js fdivrs rex.WRB gs pop xchg rex.W (bad) xor int3 pinsrw fiadd retq movsl rex.XB sub rex.WRB (bad) sub hlt test pop push cmp or cmp xchg lods rex.WRX (bad) (bad) pop rex.WRXB insb xchg rex.RX mov jl rex.W retq cmp mov mul mov sub pop and fisubr rcrb rex.W lock (bad) rex.RXB rex.W rex.R rex.XB cli pop lret sti int3 push movl cmpsl rex.RXB and mov cmpsb xchg fidivr (bad) cs lret push fidivl jns rex.W pop in pop rex.WRX leaveq retq sbb callq xchg (bad) pop (bad) cmp pop std rolb add rex.RX or rex.RXB sub enterq rex.X rolb cmpsl sbb pop test sbb out xchg push (bad) sbb (bad) pop mov fildll (bad) lret pop rex.WRXB (bad) gs push fiaddl out stc testb enterq or add (bad) (bad) push and fcoms (bad) mov fistpll sbb pushq rex.WR rex.XB rex.WRXB (bad) imul rex stc movsb addr32 js jnp add push js mov mov and sub add cmp rex.WR cmpsl lods int3 rex.XB rex rex.WR xchg rex.WRXB pop add cmpsl (bad) (bad) rex.W cmc rex.RX cmc faddl fisubr movabs and sub mov (bad) rex.W movb (bad) je iret (bad) xor movabs (bad) push rex.X sahf (bad) faddp fimull stos repnz retq mov shll pop test rex.X xlat (bad) int int3 (bad) icebp mov dec jmpq (bad) test rex.RXB add jmp mov movsb movsl cmp rex.RX xchg push pop pop (bad) pop rex.RXB push rex.RB rex.W test pop rex.RXB and sub imul (bad) hlt pop ss out rex.R shrl sub rex.R add pop addr32 (bad) enterq rolb test rex.WR push out fisttpl and sub rex.R int3 movabs (bad) fistl sub rol push test addl rex push rcrb (bad) es rex.W rex.XB xor xchg pop outsl fnop and leaveq (bad) test sub sbb rex.WB mov mov or ficomp push test cmpsl hlt push mov rex.WXB add leaveq rex.RXB (bad) sub and lret fldz rex.RX iretq rex.W icebp cmp (bad) rex.WRB sahf mov fsubrl pop add or shlb (bad) jrcxz push repnz add rclb sub sub rex.WRXB rex.RXB int3 rcrl repnz popfq add psrad sub rex.WRXB cwtl lret mov test mov rclb int3 sbb and sbb rcl xlat (bad) adc fiadd (bad) out rex (bad) int rex.WRX ficompl fcompl ficomp retq (bad) jbe add pop push pop rex.W cmpsb rex.WX mov scas (bad) (bad) pop and add cmp pop retq nop pop (bad) jo rex.X retq movabs fmull fiadd add (bad) sbb and push (bad) rcrl rex.RB pushq and push loope (bad) fadd sbb int rex.RX cmp rex.RXB pop movslq int3 (bad) lret add (bad) jmp or out rex rex.WRB ja pop (bad) rcll cmp xchg cmp jrcxz cmp int3 sub rex.WRXB rex.WRXB (bad) sub callq sub add fs fisttpll rex.RXB and shrb rolb mov rex.RB push pop rex.WX lock adc jmp lret gs push (bad) insb movsb rex.X rolb in (bad) enterq retq push pop ffreep rex.WRX (bad) push (bad) loop sub fisttpll (bad) mov rex.X mov fadd add jrcxz add sub (bad) rex.WR (bad) data16 addr32 mov sub (bad) sbb fadd cld rex sbb (bad) (bad) rex.RXB sbb mov out or sbb lahf push out (bad) sub loopne data16 (bad) xchg rex.WRXB (bad) rex.RX sarl rex.WRB pop and lods cmpsb callq enterq je mov xchg rex.XB mov icebp (bad) cmpsl sub cmp rex.WXB rex.XB (bad) xchg pop rex.RXB lret push mov imulb fldt pushfq cmc sub (bad) (bad) (bad) test and retq rex.X push and int sbb movabs push rex.R xchg add rex.W rex.W retq lretq int3 cmpsl (bad) xchg cmpsb and (bad) xor callq xchg sub mov mov es sub xor int3 cmp add fidivl (bad) faddp or rex.B fwait pushq mov rcl movl retq fisubrl rcll cmp (bad) mov push movabs incl rol enterq decl (bad) pop push (bad) sub or rex.R (bad) rex.WXB rorl mov pushq (bad) (bad) (bad) movabs (bad) roll out outsl repz lods (bad) (bad) leaveq pop cmp rex.WRXB rex.RXB push mov push shll rolb data16 vcvtpd2ps incb (bad) push sub pop cmp mov mov sub loop rex.W rex.B rex.RX (bad) (bad) push (bad) test rex.RB rex.WRX (bad) rcrl (bad) pop (bad) vcvtps2dq sub rex fidivr mov pop jbe shlb (bad) hlt cmp and cltd sbb jne (bad) (bad) faddl add pop (bad) (bad) rex.WR mov ss sub rex.W pushq xchg fisttp rex.W pop int3 xor (bad) (bad) sub xor (bad) (bad) rex.WXB hlt (bad) (bad) pushw out mov rolb mov rex.WXB rex.WRB rex.WRXB rex.WRB es sub jbe rcl push iret in xor (bad) cli cmp adcq rex.RXB movslq xchg pop or push (bad) ffree test ror (bad) fiaddl retq and pop gs addr32 sub fist adc fcmovnu repnz enterq lahf retq loopne rex.WRXB (bad) xor (bad) (bad) sub sti fcompl cmp xchg pop or pop callq fisttp rex.R movb and (bad) sub rex.W pushq sbb imul mov rex and lret int3 add (bad) rex.W pop rex.RX sub icebp fcmovbe rex.X add (bad) and out rex.RXB rex.RB rex.WXB (bad) ss rex.B (bad) mov in pop (bad) rex rex.W rex.WX push retq test lret (bad) rex.B rex cmpsb pop (bad) add or mov pop (bad) subq in cmp roll fs cli pop fimul enterq push cld rolb rex.W push out pop (bad) fimul stos rex.WR mov rex.W pop (bad) movslq sub pop (bad) sub rex.WX mov rex.WXB rex.X sub outsl rex.WB cmp rex.R fiadd sbb (bad) push add xchg add xor fmul loope jne cmp mov (bad) rex.WB xchg movslq xchg mov or and mov rex.RXB rex rex.W (bad) int3 sbb jno push and rex.W xchg push bswap mov jno push adc cmp adcl (bad) xchg jns rex.W mov movl (bad) (bad) pop ljmp push leaveq xchg xchg rex.W sar rex.WX imul rex.W movsl movslq rex.X ss xchg (bad) fsub fwait (bad) sbb int3 (bad) sbb and (bad) (bad) rex.WRXB (bad) rex.WXB cmpsb sbb (bad) xchg (bad) fnsetpm(287 pop (bad) xlat push (bad) int3 adc shlb rex.WRX (bad) mov (bad) movsl rex.WXB rex.W rex.RB (bad) add (bad) (bad) fistl int3 (bad) sbb rol lea data16 (bad) rex.RB add add fisub sbb (bad) in (bad) push push rex.WRXB lea callq xlat adc rex.W mov sti test sahf (bad) shlb retq push rex.W rex.WB popq lea in in pushq data16 push rex.WRX rex.W rex.X xchg mov rex.WB sub fisub rex.R cmp sbb jg mov mov lock cmp and mov rex.WB rex.X jl jp xchg clc movsl fcmovbe movabs jno movabs jmp addl callq mov test js or jno rcll fdivl xchg (bad) add pushq movabs mov cmp (bad) sub sbb pop (bad) int (bad) enterq pop mov jbe test or imul rex.WX xchg int outsl stc rex mull movabs jb out sub push stos mov mov cmp adc lock rex.WB data16 nop cmp jge pop (bad) rex.B rex.WB (bad) cltd jp (bad) movsl add outsb sub xchg fucomip jns mov movabs rex.WRX mov callq pop fisubrl add out cmc jns out push fsubs (bad) jnp (bad) movsl (bad) mov loopne movsl xchg or push mov pop lret cs cmp mov push (bad) sub xor rex.WB mov (bad) mov lock outsb rex.WX loop enterq xor pop (bad) fwait iret rex sbb rex.RX (bad) (bad) loop out (bad) mov sbb adc rex.WB hlt jae pushq jge rex.WB cmovge xor pop rex rex.WB mov or rex.WXB rex.WB (bad) (bad) movabs callq or rex.W lock (bad) shrl test (bad) xlat in jle jno addr32 (bad) mov out movabs mov ficompl cmp cmp test xchg rex.R cld cmp rex.WB rex.RX or ds (bad) and addr32 movabs nop sub cmp or xlat cmp cmp fscale mov push pop and rex (bad) push cs xor rex.XB pop fisttpl rex.WR cmp (bad) (bad) (bad) (bad) movabs xchg callq sbbb xlat ss mov jle lret or xor fnstsw outsl or adc mov (bad) imul (bad) mov pushq xor gs fcmovb pushq xchg sub rex.WXB rex.WB rex.W gs or rex.WB in out rex.X (bad) sub sub (bad) fs out mov rex.WB movsb mov pop leaveq outsl rex.WB xor ds mov lea sbb in scas mov fdivr sub callq sub (bad) out jmpq movabs cmpsb push ds xchg (bad) (bad) push xchg (bad) mov sub pushfq add and sub ja std lock ficompl lahf fincstp out (bad) mov js cltd imul out rex.WB push movsb or xchg outsl rex.WB cmp sub rex (bad) (bad) pushq rcl test (bad) (bad) sub fcompl jle pop rex.WX clc jp and sbb pop (bad) loop in fsubs or and xor (bad) test xchg loopne (bad) rex.WB movl rex.WRB pop push rex.WB xlat xchg lea xchg movsl sti rclb rcr es rex.WB iret and cmp popfq cmpsl mov int mov rex.RXB rex.WX push sbb (bad) or popfq rex.WB in add (bad) cltd mov jl xchg cwtl rex.X xchg (bad) nop pop rex.WB jae rex.WRB rex.WB lods movsl add lret pop pop xchg pop xchg jge scas mov (bad) xor (bad) (bad) or rex.WB (bad) mov std pop push out stos mov (bad) rcrl mov fimull sub mov (bad) fwait xor out in rex.WB jg jnp and imulb cmpsl jle,pt pushfq rex.WB lock ss pop sbb and (bad) fildl xchg push rex.WB sbb (bad) push insb fild xchg cltd push sub pushfq rex.WRX (bad) rex.WB rex.WR leaveq in jb out xchg pushq rex.WRXB rex.WB test jp sub pop rex.RXB (bad) push add xchg iret scas mov jbe push (bad) clc mov push fldl pushq mov mov (bad) gs or loope mov sbb jrcxz (bad) fild rex.B cmp imul and pop rex.WR or mov sti mov icebp rex.WB pop add lret movsb rex.R rex.WRX gs push push sbb (bad) add (bad) test sbb cmp nop or adc xlat jno rex.WRX rex.RX pushq fs mov rex.WR (bad) adc (bad) sbb sbb lock callq push nop scas in stc leaveq jp stos callq (bad) add out xchg int3 rex.WB pop clc jns cmp mov negl rex.WX fidiv push xor adc mov retq movsl and sub cmp and or test jge push ss rex.B lods mov (bad) adc callq push jns js cwtl xchg pop stos and push lret rex.WRB rex.RB rex.RX push movlps rex.WX cld adc lods fucom rex.RX sub pop rex.W rex.RX stos rex.WX xor rex.RB (bad) (bad) xchg rex.X insl pop rex.RX rex.RXB adc lret cmp rex.RXB (bad) jnp xchg jp rex.W jne xor pushq enterq idivb rex.WX rex.X (bad) rex.WB sub push mov (bad) sub addb jmp rex.RB rex.X (bad) or loope mov rex.WRX or popfq push std rex.WB and retq rex.WB xchg xor cmpsb test imul in pop pushq gs loope in push jl (bad) rex.WB rex.WRB rex.WR sbb add callq pop rex.XB fsubr addr32 pop mov rex.WB cli rex.WRX cltd adc pop and psraw or (bad) xchg push callq jns pop sub (bad) enterq movabs cltd and mov ja rex.WR push ss rex.X rex.WXB (bad) imul icebp rex.WB std iret lret rex.WB rex.WR rex.XB jrcxz sar pop lret movabs sbb (bad) jno xor test test rex.WB insl adc vpackuswb mov xchg adc movsb rex.WB lret cmp movabs push outsb es sti out adc imul rex.WB xor (bad) jmp jrcxz jns rex.WB or out push out callq add fstps rex.W mov out mov pop es push and rex.WB or lahf movsb xchg mov (bad) (bad) rex.WB js in rex.WRB rex.WB rex.WRB (bad) add imul rex.WB fist pushfq or (bad) mov retq movabs mov rex.RB mov xchg (bad) or pop push movabs pop rex.B popfq xchg sub cmp xor sub lods jp clc rex.WRB movsb sub fs mov stc add orl sbbb mov xchg rex.WB and jno pop insb cwtl (bad) rex.WRXB rex.B adc jbe in (bad) fistl sub rorl std rex.RX or cld rex.WB js cmp add rex.WB (bad) popfq pop xor (bad) callq or rex.WB fwait imul cmpl rex.WB rex.RXB movabs rex.WXB (bad) sub (bad) sti pop and mov fstl sbb std rex.WB subl int3 psubusw fildll rex sub cmp rex.X repnz (bad) (bad) cmc push push add (bad) sahf (bad) lock lret pop xchg xchg imull rex.WRX imul rex.RX sub adc xor mov (bad) rex.WB mov mov cmp push jge mov loopne out sbb xchg rex.RX out pop mov in mov mov (bad) rex.WRX rex.RB (bad) rex.WB jno cli cld jrcxz rex.WB stos xchg jbe sbb adc jnp movabs mov mov push mov enterq push insl push mov decb rex.R rex.WB test mov mov xchg lock std dec sbb movabs xor rex.WB int3 push gs fwait push jb push (bad) or or xchg cld xchg clc pushq pushfq repz rex.RXB rex.WB adc rex.WB (bad) or or add rex.WB outsl test rex.WB jo jae out rex.WR rex.WB sbb xchg lea or xchg sub sub pushfq rorq or mov rex.WB popfq (bad) mov cmp pushq push rex.WB cwtl rex.WR fwait (bad) movabs pop jnp rex.WB push mov fwait rex.WX outsl rex.WB mov jp imul rex.WB cmpsl adc rex.WRXB rex.WB mov (bad) test rex.WB rex.RXB push loop out (bad) rex.WB sbb fildl rex.RXB xor adc nop jae xor fsubrp movabs cmp rex.WRXB sub cmp movabs rex.WB lods outsl xor add mov popfq fisttp (bad) (bad) test pop jb mov loope in mov xchg xchg imul xor (bad) fwait cmp callq rex.WRXB lret xor xor xchg xchg lods push mov scas push pop cmp and (bad) out (bad) jns rex.XB (bad) int3 pop pushq notl ds mov cmp sub pop hlt mov xor jo xor push (bad) pop lods rex.X jge cwtl sub or decb pop sti jne rex.WB test rex.WB fmul jl or xchg rex.WB out gs xlat jo leaveq cmpsl pop je push cmp cmp ss rex.WRX rex.RX rex.WB (bad) (bad) scas (bad) stc mov retq sub sub fisttp retq fmul movsl rex.RX and xchg push xlat sar (bad) xor rex.WXB add adc rex.B in sub jno rex.RX rex.W (bad) mov (bad) and jne sbb mov jmp retq rex.RXB rex.B (bad) adc (bad) xchg lret jb faddl pop mov jae rcrb (bad) rex.RB outsb sbb out sbbl (bad) sbb enterq lods push outsl pop sbb cmp and rex.W add rex.W rex.B pop pushfq push cmp (bad) lods (bad) in mov rex.B rex.W push xchg js adc lods jl fdivr sti push xor jo (bad) popfq retq push jge sbb add rex.WRB sub (bad) cltd add int3 mov mov fildl negb pop push movabs push lahf lahf fmuls push pop pop (bad) sub rex.WXB rex.WRXB fnsave rex.RXB and stc pop (bad) pop push xchg or enterq ror cmp sub pushq in (bad) or push out xchg ss rex.RXB (bad) cmp mov and (bad) loopne pop retq rex.RX movabs rex.RX (bad) (bad) shrl sarb fisttp xchg rex.RB clc and rex (bad) add jrcxz push (bad) (bad) pop push je jb push (bad) rex.RB (bad) cmpsb rex jae (bad) (bad) rex.W xor rex.WRX jp rex.W push rex.RXB or rex.RXB or (bad) (bad) (bad) mov pop (bad) rex.RX in rorb sbb in jmpq pop in (bad) rex.X gs (bad) (bad) and add or (bad) (bad) sbb rex.WRXB leaveq push push int3 imul movabs sub rex.W rex.RXB leaveq pushq out or jle mov rex.WXB gs rex.XB mov pop mov sub (bad) rex.RB stos xlat inc rex.W (bad) retq int3 retq sbb (bad) (bad) rex.RXB xchg in lret push rex.WRX (bad) sbb iret (bad) (bad) shl push (bad) rcll int3 rcrb push and (bad) (bad) push in (bad) fcoms fstps fcmovb fistl (bad) pop push rex.B sbb (bad) sub out enterq pop xor cmp rex.W rex.WR sub xchg rex.RXB jp (bad) rex.RXB lods mov stc sub or jns (bad) rex.B sub rex.RX mov xchg or rex.WRX mov cmpsb pop (bad) ficom cmpsb pop rolb pop (bad) cld push push mov push rolb or (bad) mov mov (bad) (bad) (bad) test neg rex.XB push retq rex.X ds jp xchg rex (bad) out add cmp mov or (bad) (bad) out repz movsb rex.WX add mov push movabs faddl addr32 pop mov (bad) je rex.R rex.WR insl add retq jno,pn jp cmp xchg sbb mov lods rex.RXB jl rex.WRB xor and sahf mov je xor vhsubps and imul lret mov or rex.RXB sub pop rex.XB push sub or rex.W andl (bad) mov cmpsb rex.W roll xlat insl xchg iret es jno data16 rex.WRX pop push (bad) loopne xlat rex.W rex.W rex.XB iret (bad) imulb rcrl test std push xor (bad) (bad) mov retq rex.W xchg (bad) rex.W xchg (bad) cmp mov rex.WRXB rex.W (bad) add rex.W repz xlat es rolb rclb (bad) mov outsl rex.W rex.XB cmp mov (bad) test pop xchg iret push (bad) jrcxz shlb rex.RB mov (bad) rex.RX rex.WRB (bad) mov rex.W es jl and and (bad) (bad) rex.RB (bad) adc push iret cmp retq in cmp mov frstor adc mov rex.B rex.W sub sub rex.W out lretq mov cmp sub and (bad) ss es pop add fmuls rex.W (bad) rex.WRB sbb pop push pop mov and fnop imul (bad) rex.RX rex.RX rex.W ss sub es (bad) hlt push sbb xlat push rex.W and (bad) rex.RX rex.W sub es rex.RB loope rex.W sbb enterq rex.WR rex.W imul adc movabs (bad) pushfq orl sub pop rex.RX cmp (bad) sub rex.RX pushq push icebp (bad) pop std rcrl (bad) rex.W rex.B rex.RX rex.W sub rex.RX rex.W rex.WXB sub (bad) rex.W rex.B rex.W rex.RX rex.RX mov imul rex.WX fisttp sub xchg movabs add (bad) orb (bad) lods and out test std rex.WR lret rex.WRB (bad) rex.RX rex.W sub rolb pushfq rex rex.W es rex.XB popfq sub rex.R rex rex.W rex.WXB rex.RX rex.W pop and rolb rex.W rex.W jge cmp (bad) sub insl mov test push (bad) rex.RX and sub pushq insl stos roll (bad) mov cmp rex.W sub rolb xchg rex.RX iret rex.WR rex.W push lahf rex.W rex.RX rex.W sub add jg rex.WX jle push cmp (bad) sub test sub rex.W ss sub rcrb (bad) xchg xchg mov sub rex.WR rex.W add rex.R sub rcrb (bad) iret xor (bad) lret rex.WR sarb pop out (bad) jle fmull rex movabs xchg sub rex.W fcoms rex.WRXB rex.W sub rex.WRX rex.W sub fwait xchg rex.WR rex.W sub rcrb scas sub sbb sub push add rex.WXB and fisttpll pop fmuls sub pop pop loope (bad) enterq sarb sub sub test sub movsl movslq rex.W scas xchg cmp (bad) sub add rex.W rex.RB rex.WXB sub pop jl mov mov jg rex.RB and fildll rex.RX rex.W sub rolb mov pop (bad) (bad) (bad) pop xor pop xlat (bad) (bad) mov xchg rex.WR repz rex.RX rex.W cltd sub cmp (bad) sub scas mov sbb adc rol rex.W rex.W rex.WRB rex.RX lret cmc sub rex.RX rex.W sub rex.W mov xchg movabs sub rex.W sub callq mov lret (bad) jle (bad) mov rex.X rex.WR rex.W jnp xchg and movabs pop (bad) rex.RX rex.W sub rex.RX rex.W rex.WRXB sub sti mov movabs rex.W rex.W es sub adc sub rex.RX ss es (bad) test movabs push (bad) movsb ficompl (bad) rcrb (bad) sahf mov lret (bad) (bad) rex.RX (bad) push add sbb std int3 mov jns int mov callq (bad) rex.RX rex.W push rex.RX rex.W fisubrl rcll xlat rex.RX (bad) rolb scas sub (bad) rex.W (bad) rex.W rex.RX mov mov rex.RX rex.RX pop rex rex.W jbe shrb rex.WRXB push rex.W and push (bad) out ss (bad) rcl int3 enterq cmova rex.W rex.W xchg movslq rex.B rex.W scas sub rex.RX rex.W rex.WRX rex.RX jo push rex.W adc rex.W scas sub out int3 movabs cmp rex.RX (bad) sub rex.RX sub pop (bad) test or add rex.WXB iret sub rex.XB loop nop mov (bad) rex.WRXB (bad) push (bad) clc (bad) mov and rex.R (bad) rex.R (bad) mov pushfq pop and movabs cmp es sub (bad) and xor push (bad) xlat adc (bad) (bad) or (bad) pop rex.W rol sbbb add (bad) repnz (bad) int3 push xlat rex.WRXB fwait xchg xchg rex.WXB rex.WX int3 test and (bad) int lods fisttp sub push es sbb push push out insl test rex.W (bad) sub add rex.WRXB rex.XB sub rex.B out icebp and rex.RXB (bad) movaps iret and mov rcl pushfq es (bad) movabs (bad) fcomps or xchg jmp int3 rex.RXB rex.W sub rolb scas sub rex.RX xchg push push rex.W cmp or rex.RX rex.W outsl sub es rex.RXB push movsb (bad) cwtl fistpl retq and push push rolb (bad) out stos test cmp (bad) sub test sub rex.W ss sub jae (bad) rorb test pushfq imulb push rex.RX (bad) sub sub rex.W ss fnstenv or push jae push rex.B sbb xchg rex.RXB rex.W adc cmp ss es (bad) push iret or rex.R rex.W (bad) movslq popfq push shrl xchg scas sub out mov sub fisttp sub rex.RX cmp sbb rex.WB rex.WRXB rex.W sub rex.RX rex.W rex.W rex.RB sub fs xor pop stos insb pop push rex.W (bad) push leaveq rex.B rex.W scas sub jnp fcoml xchg cmp (bad) sub test sub pop es xchg rcrl rol (bad) (bad) mov insl mov (bad) enterq outsb rex.WR rex.RB rex.W rex.WRX rex.W popfq rex.RX (bad) enterq outsb retq rex.W sub jbe cmp sub (bad) movsb (bad) adc sub mov rex.WR rex rex.W lea rex.RX sub (bad) rex.RX rex.W mov es jl cs stos mov movsb jmpq rex.W sub add jae rcrb rex.W shrl rorl in mov rex.RXB enterq sub (bad) or (bad) int3 rex.WRB (bad) xchg test push mov sar scas test cmp (bad) sub rex.RX cld pushq fisttp sub push es pop xchg (bad) rex.W rcrb rex.W rex.WX sub movslq sub rex.RX push rex.B rex.W lock sub rex.W imul rex.W out rorb add jae cmp or sub sub rex.RB push jmp test pop rex.W pushq and sub rex.W rex.W (bad) es es xlat (bad) loope es rex.WRX (bad) mov sbb fild cs rex.WR rex.W testl rex.WRX and (bad) push retq push mov add in rex.B repnz jae rcrl mov sub retq (bad) rex.W sub jno rex.RXB rex.WR rex.W rex.RX rex.WRXB lret rex.RB movsw fxch sbb pop sbb rex.W fldenv (bad) rex.W sub adc pop sub shll pop sarb and rex.W sub or iret sub es pop ds (bad) iret add lret (bad) xlat enterq iret sub and (bad) (bad) (bad) (bad) xlat enterq rex xor push pop (bad) (bad) xor push (bad) (bad) lods pop rex.WR cmp (bad) fwait test cmp sbb out movl rex.XB fsts rex.RX mov cmp rex.WX scas and nop int jrcxz add rex.RX rex.W pop retq mov fldt in fadd (bad) test rex rex.W sbb movslq xlat outsl (bad) rcl (bad) push rex.W (bad) pop fsub or rclb rex.W movabs rex.WX mov rex.X (bad) adc cld fcmove rex.RXB jae loop cmp and sahf leaveq rex.B rex.W rol mov pop fildl (bad) or iret or push fistpl cmp push push pop (bad) movsl add pop cmp and rex.RX (bad) (bad) loopne ror and (bad) push sub and sub shr and leaveq (bad) add (bad) mov fcoml test xor callq rcrb fildl movb sbbq push and pushq (bad) rex.WX rex.B cmp pop (bad) and rex.X es xor sbb shll mov sbb mov es (bad) insb adc orb cmp (bad) and test mov (bad) loop leaveq jl (bad) (bad) adc nop pop (bad) rex.RB pop (bad) fnstenv rex.XB (bad) rex jne sbb rex.RX (bad) movsl pop cmp cmp cmp and (bad) insb test (bad) and rex.WRX and (bad) jno (bad) enterq fstpl jl xchg pop add push sbb (bad) (bad) mov sub movsb sbb es mov (bad) (bad) (bad) (bad) push (bad) (bad) adc (bad) (bad) pushq rex.XB icebp rex.WXB in (bad) (bad) int3 rex.RXB fwait mov (bad) (bad) adc or rex.RB sbb jg rex.XB jns xlat nop pop (bad) retq (bad) rex.RX rex.RX cmpb (bad) or leaveq (bad) retq pop and fcmovnb push sbb (bad) rex.W fistp (bad) cmp retq and (bad) lahf stc push rex.W outsl (bad) mov (bad) in fnstenv retq retq mov shlb push (bad) mov (bad) (bad) push mov (bad) pop and (bad) (bad) ss es sbb or test (bad) fldcw pop rex.RB sbb push rex.W rcl (bad) test outsl (bad) pop xchg fmul or rex.RX pop es sub (bad) roll testl es add ja or rcll es (bad) fidivl sub rcl (bad) or leaveq (bad) (bad) sti fadds (bad) out (bad) and iret pop (bad) add es es pop (bad) mov pop jne repnz rex.W shlb and (bad) rex rex.RX (bad) xchg (bad) sub ss (bad) mov (bad) push (bad) test (bad) add rex cltd pop fisub pop (bad) jl repnz pop jns sub push shlb and (bad) and iret (bad) jbe fstp (bad) xor (bad) add loop xchg in cld rex loop sub int3 (bad) pushq cmp in retq cmp roll fmulp in xorb rex lret ficompl rex.W pop push push push rex.W test mov shrb rex.RX sub pop outsl (bad) outsl (bad) sbb shll (bad) jge add push sbb pushq adc adcb out sub ror pushq pushfq (bad) fnstenv ror sbb mov es mov jl (bad) int add or shrb pop adc mov push pop push (bad) xchg sub leaveq fiadd imul (bad) rex.WRXB rex.W fs (bad) and push rex.W pop movl xchg mov (bad) (bad) mov sub or lods (bad) push rex.WXB jb rex rex.W loop rex.WRXB rex.W (bad) push rex.W mov xchg mov rex.W or fisubr (bad) sub add outsb sbb (bad) pushq cmp sbb jne pop jo sub (bad) enterq gs xchg or pop shrb or add add pushq rex.W push insb jbe fsubs lock adcb and (bad) mov rcrl rex.B (bad) adc rex.W mov pop fildl add xlat pop rex.WB rex.W mov int3 rex.WB mov or cmc loopne rex.WB std cmp add cli fidivrl imul test push and jne rorl jle test andl fdivrs insb mul movabs test fisttpll je sub sbb pop fxch cmp or sbb and data16 rex.WB iret fs repz mov xchg (bad) lods sahf rex.B fcoms rex.WB cmp xchg pop rex.WB (bad) pop (bad) retq and push loope sbb pushq mov push rex xchg cmp or stc (bad) mov sub (bad) (bad) rex.WB and loop mov jrcxz sti push cltd xchg mov jbe addr32 pop sub pop rex.X rcrl xor (bad) (bad) xchg imul rex.WB in icebp jmpq rex.WB mov and pop callq cmpq add sbb callq (bad) (bad) rex.WB (bad) add and loop rex.WB rex.B fadds movsb mov sub add pushq (bad) jb test xor icebp pop rcrb pushq (bad) rex.WRXB sbb xchg fisubrl (bad) test fwait ds xor rex fstpl je mov jno xor sub fmuls sub in xchg pop rex.W (bad) jnp mov sub shlb mov cmc cmp (bad) cmp sub mov retq (bad) ss xrelease jno or cs loopne add testq (bad) sub (bad) jae mov or movabs (bad) imul ds sub jne jge push nop mov lock rex.XB or jb pushq sbb xor callq iret cld push leaveq movsl clc mov rex.WB cmpsl jl xchg or iret pop (bad) push fs movsl movsl rex.XB add fldcw mov (bad) rex.WB cmp (bad) jns xchg iret test test rex.B stc jmp stos (bad) rex.WB movsb mov or out mov xchg cmp iret xor or push mov jne xchg adc cmpsb fsubr jrcxz scas (bad) rex.WB rex.WR pop xor faddl rex.WB sbbl push roll (bad) int rex.WB xor sub rex.RXB lret stc cpuid (bad) (bad) xchg sub push (bad) sub addb mov in (bad) (bad) xor pushq js stos jo rex.RX rex.WB xchg rex.W rex.W es or adc insb pop sub and loop cld xchg repz (bad) cltd jmp mov add or int shr mov (bad) (bad) mov nop (bad) movabs test clc rex.WRB xor jno in (bad) pop (bad) fisttpl sbb xor sub xchg lret jb callq out and pushq mov mov stos and mov ja ror lods movsb (bad) push or sahf adc stc (bad) (bad) cmp int3 js mov scas mov rex.WXB (bad) push cmc push rex.WRXB imul enterq pop add scas jge notb (bad) pop xchg jmp movsl movsl movslq mov xchg adc sub and loope or addr32 fs mov cwtl (bad) scas jp sar in sub in rex.RX outsl cmp add (bad) mov rex.WB xlat lea repz cltd andl int3 scas sbb (bad) (bad) (bad) adc movsb mov cld sbbl adc xor mov jae test xor pushq rex.RB pop (bad) ds (bad) xchg test xor ja loop (bad) xchg rex.WB mov xchg xor jle push push loopne jo or loopne sub out jnp mov repz mov movsl ficompl enterq rex.XB hlt ja jns fdivrs popfq enterq (bad) retq iret xchg rcrb stos (bad) or out in add es pop push (bad) test add fildl pop decl jrcxz (bad) push mov test rex.B rcll outsl mov imul mov cmp stos in stc rex.WXB lret rex.WB (bad) jle cmp hlt rex.WB pop rex.WRXB rex.WRX xchg xor sub rex.R lret pop jnp rex.RXB lcall (bad) xchg jo adc test jl (bad) xor rex.R repnz out cmc (bad) sbb mov insl (bad) test pushfq callq mov adc lock add (bad) rex.RB rex.RX (bad) jnp stos (bad) rex.WB lock adc xchg lret rclb adc lods movabs push or adc (bad) movsl cli cmpsl mov (bad) int3 cltd cmp loop jle (bad) iret test leaveq rex.XB rex.WB (bad) cmp enterq or sub (bad) and adc add mov xchg jge cmc pop mov jo fimull jbe hlt sub push xchg (bad) mov rex.WB leaveq cmp test mov imul addb rex.RX xor rex rex.WB cwtl insb sub rex.WB rex.B mulb int push mov stc (bad) (bad) (bad) movsl rex.B rex.B pop mov movabs mov (bad) rorl scas jbe test orl jae adc rex.X leaveq (bad) xchg adc stos jbe or jo mov pop sbb sub leaveq movabs mov addr32 stos rex.WB adc retq push pushq pop xchg add and mov sub mov rclb mov jg mov mov xchg pop push pushq pushfq rex.WRB cmp jbe movabs lods movabs mov rex.R (bad) clc sbb pushq mov lahf (bad) out lods imul xchg movabs or add sti cmpsl loopne cli retq sub push test gs lret mov rex.WB retq mov cli jmp pushfq std mov (bad) mov and adc lret xchg fwait pushfq ror test push hlt xchg repnz fstps rex.WRX cmpsb mov pop rex.W cmc sub rcll (bad) pushq cltd and rcr movabs adc xchg lods (bad) mov rex.B add lock rex.XB movntq (bad) ja (bad) pushfq (bad) push int xchg mov fsubs (bad) je or (bad) lods enterq sub (bad) jmpq sub frstor sub retq (bad) mov adc fnstenv movsl fimull or fs rex.XB adc and add in sbb or callq rex.WRX repz adc (bad) pop rex.WB ds sarl or iret ja push rex.WRXB push fwait (bad) pop sub (bad) jbe xchg callq adc pop in (bad) rex.WXB pushq xchg rex.RB rex.XB repnz rex.RB rex.WB xchg xchg lret clc push (bad) and mov rex.WRB out movb cmc cmp shll mov callq cmp sub xchg or pop and lret rex.WB or (bad) xlat fwait sub (bad) xor (bad) rex.WX data16 fldt movabs rex.RB rex.WR jg rex.RX outsl cmpsl sbb rex.WRX and jge lahf orl rex.WB (bad) or movabs cmp fsub rex.WB fcoml pop jo push xor (bad) je add movabs add movabs mov push lea sbb ss mov sub fidivl insl movabs sub loopne cmc negb lea jge mov rclb rex.XB loop lods fsubs mov jl ss js xor add andl add mov (bad) rex.WB rex.WXB addr32 lret sub (bad) (bad) decb rex.WB int3 stos sub fisub xchg push clc rex.RX rex.WB bswap xchg push jno jne cmc sti rex.WRB movabs pop (bad) (bad) pushq popfq pop movslq add lock rex.WB movabs loop (bad) (bad) nop push sahf (bad) sub (bad) lahf or imul rex.WB movabs jnp lea pop rex.WB test push rex.WB sub jo pushq rex.WRB xor (bad) rolb xor sub xchg test fmuls sbb jae jge je fsub mov mov callq rex.W scas cmpsl rex.B rex.RXB or rex.WB loope mov movsl (bad) xor add and ja rex.B (bad) out movabs in push (bad) rex.WB int xor mov pushq imul movabs stos xor cmp mulq xchg rex.B es fdivrs rex.WB out (bad) mov pop fstpt cmc je out (bad) push and or jns outsl fcompl xor mov adc sub xor rex.RB es and (bad) leaveq test rex.WX lea andb mov pop or in (bad) ror add mov test fsubr xchg test rolb loop scas enterq outsb cltd clc jns sub stos cmc (bad) push pop lea in test xchg sahf rex.WB rex.X rex.WRX (bad) pop callq scas rex.RB jge movabs out rex.WXB fwait movabs or andb rex.RX mov fldt or mov (bad) jge int lods rex.WB rex.XB pop jmp mov fdivrs lea rex.RX pop push (bad) jne (bad) sub xchg pop test sub rex.WB add mov repnz retq cmp addr32 (bad) fildll pop mov rex.WXB rex.WB adc cmp rex.B rex.WB notb sti movabs adc movsb cmpsl jmp mov push pushq or rex.WB or jns rex.WB movslq cmp lret (bad) push push xchg in (bad) addr32 mov nop and mov sub add stos incl imull rex.WB pop retq sub xor push jg jne subb add mov lods fmull rex.WB loopne rex.X callq test movabs rex.WB rex.WRB pop rex.WB pop out sub adc jmp movabs rex.WB (bad) (bad) in sub in int3 ficoml (bad) es mov test mov xorl pop in movabs jg rex.WR rex.WB cwtl in decb sub addr32 shlb stos xchg push pop jae mov rex std scas (bad) loopne xor pop xor push mov (bad) rex.WB sbb (bad) in imul (bad) and movabs pushq pop mov xchg rex.B pop test xchg (bad) retq outsb push (bad) andl and mov push icebp xchg cld ds pushq xchg out frstor rex.RX movabs or insb rex.WB rolb jmp lret rex.R pop insl mov rorl mov (bad) int3 (bad) pop cmp rex.WXB jge rex.WB jns jmpq or cmpsl (bad) xchg adc pop add pop cli xchg sbb cwtl sub movslq (bad) push (bad) rex.WB rorb movl rcll (bad) (bad) xchg pop decl fisttpll push cmp xlat (bad) mov ja shl rex.WB jae mov callq mov rex.WR rex.WB (bad) sarl jnp (bad) sub (bad) lods hlt add shlw rex.WB rex.WRB push lret mov test mov (bad) cmp push (bad) push mov jl sbb (bad) es sub adc (bad) int push pop add fucomi xchg (bad) xchg xor rex.WB jb out gs rex.B rex.WXB jl rex.WB movslq callq incb jo (bad) movsl imul xor sahf data16 jmp (bad) (bad) adc sub mov sub xchg rex.WB sbb in pushq in push pop (bad) xlat sti rex.WB xor movabs adc addr32 jp repnz rex.WRB cmp rex.WB imull (bad) and pop cmpsl and or (bad) in pop sub hlt loope rex.WB mov add fisttpll (bad) sahf cmp test and rex.WRB sub cmpsl lret add adc rex.R (bad) cmp mov sar or (bad) cwtl cmc push mov es (bad) movsb mov movsl adc in mov xor sbb movabs gs or in pop rex.B fiadd mov fs push sysexit xor adc (bad) leaveq cmp xchg fwait xor movslq lret sub (bad) js test and sarb lahf lods outsl pushfq pushq pop rex.WRB cwtl or cmp (bad) imul sub xor push push in sub rex.RX rex.WB movsl lret addl movabs jle js xchg cmp rex.R rex.WB lods push mov mov popfq jle mov (bad) cltd insb mov sti mov cmovl and sub (bad) enterq outsb xchg pop jnp loopne or out mov rex.B cmc movabs sub sahf fsubl (bad) xchg sub stos rex.WX rex.RXB stos rex.WRB loope jne jrcxz movabs (bad) (bad) (bad) mov push cmc fwait rex.WB mov fisubl xchg sbb (bad) cld rex.WRX rex.WB adc mov xor push in fbld ds and loop lret std add popfq rex.WB (bad) es push xor add cmovae xchg (bad) js sahf pushq adc rex.WB rex.W (bad) jge sub (bad) jns (bad) add fiaddl (bad) rex.RB rorb push xchg and shrb sti test (bad) or or sub jl outsb jp push jrcxz and (bad) ljmp xchg xlat xor shll (bad) or sbb fwait lahf cwtl xor sub test rex.RXB rex.WRX rex.WXB shlb or rex.WB mov jb rex.W rex.X repz rex.WRXB xor mov (bad) mov ss xchg rex.WB movabs divl imul pushq popfq jo sbb sub rex.WRB (bad) rex.WB jns rex.XB rex.B movabs mov lods pop rex.WB add fmuls data16 cmpsb cmp rex.WB pushq and pop sbb cmp pop jge outsl rex.WB xchg or repnz rex.XB jg data16 (bad) retq rex.WB (bad) jp (bad) cmc rex.B popfq (bad) push ficomp callq (bad) imul xchg rex.WB add fcoms xor sub rex.R sub sub rex.B rex.W (bad) mov stos cmp sbb fimull (bad) je mov movslq fnstcw (bad) jbe and lret rex.RB mov pushq jge mov in sub cmp rcll (bad) retq rex.WB jns icebp sub cwtl test and clc lahf cmp cmc rex.WRX rex.RX jrcxz repz rcrb and gs jb sub or sbb xor xchg fisttpl (bad) movslq xchg movsb pop sub movsl std pop (bad) lret (bad) pushq push sub retq rcrb test movabs mov push scas mov lods loope mov (bad) rex.RXB pop and movsb out fldt jae (bad) rol push sbb pop (bad) rcll popfq sbb stos xchg sub movabs and pushq xor sub jbe (bad) rex.WB mov retq rcll (bad) jrcxz callq xchg movabs mov push fimull mov push addr32 or roll test leaveq int3 sbb add mov add mov (bad) and movabs adc (bad) lret sbb lea in push negb pop rex.WB pushq callq mov push and pop loop imul jb cmc rex.WRB rex.WB mov mov rex.WB clc pop subl jge lret rex.WB test int and pop (bad) (bad) shrb rex.WB lods (bad) and jbe rex.RX callq mov jmp (bad) (bad) loopne sub pop rex.RXB cmp xchg out jge (bad) out (bad) adc rex.WB jns xor lock out rex.WX (bad) xlat movsb and fidivrl mov rex.WRB push pop shll xchg xchg sbb (bad) (bad) sub adc jrcxz (bad) shrl jne (bad) (bad) pop fadds (bad) push xchg jo (bad) (bad) pop lret add sub scas mov rcrb mov rex.WB idiv xchg mov rex.RX loopne lret push test test jp sbb rex.WRB rex ds xlat movabs (bad) (bad) cmpsl sti cmp repz movabs popfq and rex.WB notl (bad) push cmc or jp pop mov insb sbb rex.RB pop (bad) jg movabs fsts enterq imul lea jmp mull (bad) and mov sti push cmp add push sahf mov retq fidivr add rex.WB movsl lahf mov and or cmc rex.WB rex.X callq in mov rex.WB sbb xchg rex.RX or gs bnd pushfq cmpps push sub mov rex.WB mov mov rex.WB push pop rex.W rex.WB ss cltd fstl add mov rex.R loopne fdiv or out cmp jbe (bad) stos push sbbl and outsb add pop pop test rex.WRB rex.WB jae xchg roll jo mov notb stos cltd in (bad) rex.WX in rex.B cld (bad) push out jo add out push sub in rex.WB (bad) (bad) sbb rcl xchg pop mov cmpsb rex.WB mov jmp outsb adc xchg sub (bad) movabs in push test ss jns rex.WB pop rex.X int scas rex.WB lret sub pop rex.WB mov (bad) or rex.WB jnp,pn mov addr32 jo icebp jle leaveq cmpsl sbb (bad) addr32 add mull int3 movabs icebp jns cli rex.WB andb cmp rex.RXB mov or mov jge mov xchg pop pop rex.R cmp rex.WRXB rex.X sbb jmpq rex.WB sbb pushq jno fcmovnbe (bad) fwait cmp and imulb scas cmc insl rcrb rcll jo and xchg int sub xchg outsl (bad) sub adc leaveq and stos movabs out rex.WB sub inc outsl push or jl cs adc add lods (bad) rex.WB jle (bad) jmp es rex.WB (bad) hlt sub jbe rex.WB xlat (bad) mov rcll pop rex.WRB rex.WRXB rex.WXB rex.WRX pop shrl cmp idivl fidivl pop (bad) pop fmul sub rex.WB xchg imul pop movsl (bad) fcmove (bad) (bad) xchg and orl test (bad) adc rex.RXB rex.WXB rex.WB loopne jns xchg movslq sbb rex.RX and imul int in mov loopne sbb (bad) mov (bad) xchg rolb rex.XB fs (bad) jns in xchg (bad) (bad) rex.WX movabs xor (bad) or (bad) xchg test int (bad) xchg movabs movabs push sub jg rex xor pop jns pop test rex.WB push (bad) cwtl (bad) js (bad) jp (bad) pushq addr32 mov and iret jmpq pop add out cmp cwtl mov xchg cmp add push mov movsb sbb jno fwait out cmp or mov ja cmp sub xor and pushfq jle ficompl fs negl (bad) (bad) (bad) push xchg (bad) cmp xchg outsb (bad) rex.B rex.WB retq (bad) mov jp cli lods rex.WB stos (bad) rex.WB mov mov clc (bad) and rex.WB sti lock callq (bad) sub shrl sbb jrcxz or xchg add xchg nop cmpps cmp xor (bad) in loopne rex.B rex.WB sbb xor pop xchg or fbld mov (bad) pop callq ds testl movsb rex.WX sbb out adc rex.WB add int3 adc (bad) (bad) mov mov rex.WB ficomp mov jbe mov xor sub rex.WB roll push rex.WB xor in mov in ficom mov clc loopne subl jg pop fdivrl rex.WB shlb rex.WB scas sti (bad) (bad) movabs sbb shll out xchg jge rex.WRB add movsl (bad) pushq push push lahf movsb stos push sbb movsl rex.WB xor (bad) mov (bad) rex.WX decl and pop stc (bad) (bad) (bad) int3 (bad) pop pop lods ss xchg mov cmpsb (bad) lret shl mov push insl rex.WB cmp rex.WB out sub jo in es movabs and (bad) fsubrp scas (bad) jnp mov out cmp callq rex.XB movabs xor rex.WB (bad) insb cs cld adc xchg scas cmp cwtl data16 push retq loope xchg or sbb addr32 adcb fidivrl xchg xchg (bad) movsb lahf or sub callq mov mov (bad) test scas sub (bad) rex.WRX sub or cmc out xor hlt gs jnp adc jg incb xor or jae push mov jmp retq mov (bad) (bad) push or lods pop addr32 movabs add (bad) rex.WB add pop and std (bad) pop (bad) xchg jg or mov rex.RX (bad) xchg (bad) add push push enterq cmpsb rex.WB mov (bad) and movabs pop rolb nop sahf pushq sub and callq rex.W rex.WR sub rclq mov add xchg sub out rorb xchg rcll and or mov mov rex.WR fdivs xchg adc in (bad) ficompl rex.WB and add ja cmp (bad) add and mov push outsb mov jno clc retq push sbb jmpq (bad) adc xrstors je rex.WB stos and clc fbstp test rex.R sub pushq icebp clc (bad) rex.WRX adc pop (bad) pop push gs rclb (bad) or jb pop sbb rex.WB movslq rex.X rex.RX rex.WB mov (bad) mov imul jne cmpsb movslq jo adc enterq shlb add subb adc callq mov ja iret test out mov jns mov lock jae rex.WB ss xor rex.WR rex.RXB adc shlb cmp rex.WB lret addr32 ds rex.WXB rex.WRB push pushq test mov imul xchg pop movslq xchg lret in div ss rex jrcxz rex.WB cwtl int rex.WB movslq cmp imul rex.WB scas out xor and mov orl mov push incb sub rex.R sub xchg mov repz rex.WXB (bad) xchg cmp (bad) and rex.WB fs mov jmpq (bad) fimull lea je rex.WB fstl rex.WB (bad) push jmp adc add (bad) xchg je jmpq cmp popfq rex.X rex.WB rex.WRXB add xlat jb and lret rex.WB push notb sub pop hlt ficom pop rex.WX rex.WB nop gs (bad) mov xchg push jb (bad) mov test jnp and rex.RX rex.W mov rex.WB sub xchg mov and (bad) int3 sbb nop sbbl cmp adc addr32 sub rex.WRXB mulps cld fwait or (bad) cmc rex.WB jo (bad) movabs cmpsb movabs adc icebp (bad) and leaveq js mov rex.X rex.WB pop loopne rex.WB test or mov stc lahf jb sub rorb loopne xlat jne sub movsl pop adc push rex.WB (bad) lret (bad) rex.WRXB scas int sbb jbe (bad) adc insb repnz and rex.WRB rcrl rex.WRX rex.WB int callq rex.WB pop fsubrl cmp mov (bad) stos pop stos out xchg lret and stc iret adc movabs (bad) ficom mov xchg fldcw rex.WB xchg orl push (bad) and rex.WB mov sahf sub rex.WB xchg fildll pop jl pop and (bad) clc mov rex.WB xchg test imul fnsave retq stos int3 (bad) push callq xor add add imul (bad) (bad) jae rex.WRX jge add sbb shrl fldl jno test cmp loope and push or sarl pop loopne rex.XB (bad) insl pop rex.WB (bad) lods sbb cwtl cmp mov jbe lods xorb jge (bad) mov sbb jo imul sub (bad) xchg (bad) fiaddl rex.RB sbb pushq fs mov and lods insl sbb cmp sub icebp jl lods imul push rex.XB and in mov test or adc jg push mov pop stos out pushq movsb (bad) callq push sub (bad) xlat xchg rex.RB es (bad) add rorb rex.XB fsubs or sub out pop sbb pushq jl outsl repz mov rex.R mov loopne in rex.X loope or rex.WB (bad) or ds lret pop test (bad) sub scas enterq repnz rex.B add rex.RX scas callq sbb or rex.WB movabs rex.WB (bad) bnd (bad) stos movsb mov rex.WRX mov (bad) data16 xlat xchg xchg (bad) (bad) enterq loop xor flds loope sub mov in rex.X xlat lea xor mov outsb (bad) cmp loopne idivb sbb int3 xor push (bad) adc int xchg rex lret rex.WX ss (bad) fsts rex.WB xor rex.W mov pop rex.WXB rex (bad) mov rex.WR fwait movabs cmp rex.XB and sahf xchg cwtl xchg jle movabs in pushq rex.XB (bad) xor rex.RX mov sub pushq jmpq xor movabs movabs outsb rex.XB stos int3 rex.B rex.WB cli (bad) (bad) adc vpsrlq out movslq jno rex.WRB rex.RX pop rex.XB rex.RXB pushfq addr32 or test or or pushq sar sbb pop rex.RXB sti mov mov (bad) cmp loop sub lock xchg (bad) cmp (bad) sub fcoml fld movsl push mov rex.B push (bad) jp (bad) andl leaveq mov xchg fsub cmp pop rex.WR mov fistpl loop (bad) or cmp adc movsl push fcmovne in adc pop jg adc mov sub lahf neg (bad) rex.WB cmp rex.R (bad) cmp or add movabs fdivr insb pop rex.WXB pop rex.WB loopne mov mov callq sub sbb notl sbb insl rex.WB negb loopne rex.WR fxch callq (bad) scas rex.WX frstor push mov imul mov jns xchg rcrl fsubl iret rex.WB mov (bad) xor rex.WXB (bad) (bad) adc mov rex.WB sti jb stos mov rex.WB jmp rex.RXB rex.WB fwait insb movabs (bad) js,pn out in xchg enterq sar rex.WXB rex.WX (bad) fsub (bad) adc mov scas and test adc or cmp ds cmp fnop mov pop rex.WB sub fisubl xchg cmp pop loopne xchg and fs fsts fistp lods retq fimul rex.WB pushfq rorb (bad) mov rex.WB jbe rex.R movabs sub (bad) push mov mov out rex.B xchg (bad) fstps rex.WB or rclb (bad) test cli rex.B insb sbb xchg (bad) imul cld sbb mov jmpq test push sbb pushq mov xchg push add outsb pop (bad) hlt rex.WR rex.WB pop mov callw cwtl mov rex.R (bad) jge stc sub loopne fisub lods (bad) pop jno rex.WB lea pop push adc rex.RX mov pushfq stos gs addr32 rex.RX rex.RXB sbb stc add adc rex.WB adc sub xchg cmp rex.RX movabs push cmp scas sub rex.WB insl xor sub int3 pushq (bad) jne test ds stos lret rex.WB fnstsw jae movsl cli cmpl mov or rex.B stc pop push leaveq rex.WR data16 jbe (bad) rex.XB rex.WRX sbb pop fsubrp sbbq adc add xor rex.WB (bad) addr32 or cmp rex.WB data16 sub rex.WB popfq mov subb cld divb sbb sahf add movb jae rex.X jb (bad) xor rex.WB insl lahf pop mov (bad) iret imul callq loopne push fs popfq vrsqrtps push fs movabs xor and jmp mov rex.WB mov cmpsl leaveq rorl rex.WB fxch push adc xchg rex.X xor cmp cmp orps fbld or rex.WB xor xchg data16 loope and lret fimull (bad) rex.W xlat rex.WB rex.WRX repz (bad) rex.WB jmpq fdivl popfq ss adcb rex.WB std or xor push xchg stc push and sub (bad) fdivrs (bad) jnp cmp pushfq pop cmp adc (bad) in cmp (bad) rex.WB jge push xor js cmpsl add cmp jle frstor mov loope rex.WB rex.W fcomps xchg mov sbb rex.WB enterq xchg cmp jb imul adc scas pop repnz xchg mov js sub jo es xor cmp out rex.RX (bad) (bad) adc (bad) adc cmp lock add xchg out outsl pop (bad) popq xor sbb sub cmp test or mov (bad) add rex.RX pop out sub movabs rex.RXB rex.WRB movabs pop xchg enterq fidivrl popfq xor iret test rex.RX rex.RXB (bad) enterq (bad) cmpsl callq movslq rex.WR mov (bad) lock ja xor test and rex pop sub jne xchg shr mov rex.RXB cwtl and rex.WX and add sub ror callq or sbb jle rex.WRX jne in out push (bad) xchg rex.X and rex.WXB js pop callq notb lea lea rex.XB imul adc movabs lahf pop movsb mov ficomp adcb adc cmp (bad) rex.XB sti xor mov pop (bad) rex.X pop outsl out insl cltd iret in gs or rex.RXB iret jmp fadds mov fbld fcmovu movb cmc stos cmp lret sub rex.RB sbb cld (bad) pushfq cltd out movabs repz cwtl add enterq mov (bad) push imul cs (bad) rex.WB jne callq rex.WB movabs jne (bad) pop xchg mov add rex.WB movsb notb rex.WB and test xor sub lret movabs int add pop movabs pop cmp xorq push rex.WB (bad) js retq mov jnp (bad) mov or lock loopne loop sub sub (bad) movabs (bad) xchg (bad) enterq testl je rex.WB add mov ja sbb adc lahf and pop xchg bnd addr32 or cmp loop add mov pop rex.X pushq lock insl (bad) rex.WB and add adc push fsub (bad) (bad) nop cmp add lea outsl lret rex.WB retq lahf mov pop fwait rex.WX movabs jl sub pushq or outsb pop clc rcll insl (bad) adc rex.WR pop or or pushq sbb mov rex.WB addr32 rex.RB stos fwait rex.WB mov shll adc (bad) pop (bad) adc sbb popfq (bad) mov mov jo rcrb (bad) imul jne xchg or (bad) or or add rex.WRXB sub fstpl (bad) lret repz xchg stc (bad) movsb cmp pop rex.WX rex.WB (bad) mov (bad) pop sarb lret (bad) xchg xchg rex.WR rex.WB repz in rex.RX rex.RX outsb rex.WB jrcxz add rex.WB out popfq mov xchg (bad) enterq rex.WB rex.WXB xor out or int sub outsb mov out outsl xchg (bad) imul pop and add mov rex.WRXB movabs mov lock fnstenv (bad) scas sub cmp in (bad) mov xchg jmp (bad) jno lret add loopne pop (bad) mov and outsl imul cmpl rex sbb pop mov movsb movabs clc btr insl gs (bad) cmp rex.WR iret (bad) xchg sbb ja add stos mov (bad) pop roll int push push (bad) (bad) xchg sub xor in mov and rex.WB xlat jo mov in fisttpl rex.WX or sub jmp repnz cmp rex.WRX repz xor rex.WB rex.XB test (bad) cwtl icebp pop mov adc shrb rex.WB clc sarl icebp jmp push or (bad) je callq rex.RX (bad) cltd fwait addr32 pop lret xchg pop sub in cld (bad) rex.WB mov (bad) (bad) cmc fucomp rex.WB icebp (bad) callq pop mov pop xor (bad) and adc imul pop cmp (bad) pop xchg loope cld or xchg in sbb rex.R shl lea mov outsb ds or lret in sbb xchg jmpq rex.WRXB lock jne mov clc mov rex.WRX (bad) (bad) rex.WB cmp loop or pop (bad) xor adcl and xor push jnp rex.B pop mov cltd addr32 js cltd pop and insb or clc adc out pop (bad) pshufw test out rex.X cmpsb rex.WB jg ss fs xchg lock pushq jl lahf jns cmc rex.WB mov es xor cs (bad) sub xchg callq push or rex.R rex.WB fiaddl stos add xchg jb cli hlt xor rex.RXB rex.WB cmp fldenv jge cmc mov (bad) movabs and cmp cmp cmp adc setnp imul pop jp xchg in or mov callq pop scas rex.WXB xchg rex.WRB fcmovb mov fsubrs or pushq mov (bad) rex.WB callq (bad) or out ficom fdivr or push adc sub cmp pop sub movsb rex.B push lret sbb add addr32 xchg mov push outsl (bad) rcr rex.RB rex.RXB or rex movsb push push mov pop sub push fnsave (bad) mov (bad) or ficompl mov sub cltd faddl jo rex.WRXB sahf or rex.WRB push rex out insb outsb add sbb push (bad) out (bad) (bad) mov xchg sub pop retq callq cmpsl (bad) rex.WRX jrcxz cmp rex.WB sti pushq imul rex mov sub jno sbb lret mov xchg mov and (bad) in loopne enterq fldcw add push mov fiaddl pop (bad) shlb or rex.WB mov lods movsb int rex.WRB cmp rex.WB xchg push (bad) jae (bad) callq (bad) add adc rex.B movslq (bad) mov sub sbb mov imul add mov cmp fwait callq jne pop pop incl rex.WB jnp fsubrs rex.X xchg sbb pushq (bad) pushq cld test in xchg (bad) sub mov (bad) push rex.RX test popfq push cwtl rex.WB cmpsb xchg repnz cmp push adc rex.WB cmc imul sar (bad) icebp in scas mov rex.WB js cmpsb sub mov in test pop sbb rex.WB fbld insl sahf adc mov cmp pop rex.WB xchg rex.WRB jrcxz rex.WB xor sbb mov retq fdivrs jno sub pop or cmp mov movabs shlb push in xchg pop mov lea cmpsb cld push sub adc pop xlat ss cmpsl (bad) (bad) xor out lods test xor sub (bad) and jne jno fistp fisub pop cmp sarb cmp jo push fs pushq movabs xor loopne out xor add sub or (bad) add rex.WX psubq notl fidivrl test jno or sub xor sbb retq mov xor movabs rex.W lock jg loopne cmp int3 mov (bad) mov jge add out or and rorl mov lahf mov fs (bad) retq cwtl rex.WRX rex.WB rex.WXB or rex.WB movsb (bad) idivb incb clc (bad) fwait out jne (bad) cmp sbb xor cmp rex.WRXB add adc rclb sbb xchg adc movsb sub fwait xor xchg mov xor jp adc in orl sti jg rex.WB imull jmpq or sub (bad) gs data16 lahf jl cmp andl sub (bad) mov fwait (bad) repnz movabs outsb rex.WB add (bad) mov push movabs (bad) rex.WB ror xchg adc test fmul add xchg sar sub (bad) and loop data16 rex.WB rex.RB and insb imul pop mov loopne jrcxz sbb repnz outsb (bad) adc sbb (bad) scas lods rex.B scas out xchg mov mov stc std xchg sbb test cmp jl sub (bad) imul rex.WB pop es sbb rex.WB cmpsl movabs (bad) adc test stc vpunpckhbw (bad) mov test pop jg rex.WRXB xchg rex.WB (bad) (bad) movsl xor fadds mov xchg fld (bad) push fimull (bad) rex.WRXB or jg (bad) cmp pop cli adc rex.WB rex.XB (bad) xchg lcall push mov cwtl and xorl popfq test jnp xor int gs (bad) cmp xchg clc jp push stos cltd xchg leaveq (bad) mov data16 ds rex.WB sub stos xlat rex.WB rex.RXB (bad) and (bad) mov xor mov or mov jrcxz rex.WB adc pushq and test rex.B rex.W rex.WB jmpq stc sub push add pop in (bad) xchg cmp repnz int3 (bad) lea jns rex.WXB lock jo xor jmp pop rex.WB cli lea imul movabs rex.R out callq jae rex.WRXB cmp (bad) rex.WR pop (bad) rex.WRXB cmpsb mov test push jp (bad) fsts out stc add (bad) outsl sub ror lahf sbb adc out or pushfq pushq push (bad) cs mov nop jo rex.B std sub popfq sahf test shr rex.WRB callq xchg rex.WX (bad) mov (bad) pop lret mov adc sti lret rex.X testb nop mov pop retw or push rex.WRX rex.XB xor mov xchg gs cmpsq mov js mov nop je mov in pop xchg subb xor icebp (bad) loopne pushfq cmp rex.WXB scas sbb stos mov xor (bad) or movsl out rex.RB addr32 test out or xchg cmp in rolb lock mov clc and scas out adc mov cmpsb imulb mov addr32 mov pop push pushfq cwtl mov jae outsl mulb fsub loope fsubs retq pop jbe rol (bad) fistpll adc (bad) push xor in rex.WRB and rcrb pushfq callq mov movabs or rclb and (bad) insb (bad) xlat jno (bad) pop gs (bad) testl test (bad) pop cmp (bad) sahf fdivr (bad) rex out xor cld cmp sub jmpq orb rex.RX rex.WX mov mov ja sub rex.WX imul neg insb or sub fxsave pushfq and pop scas xchg imul cs (bad) lret (bad) push mov rex.R rex.X shl cs (bad) mov lcall xchg lret xchg lock movabs and adc rex.WR cmpsb divb icebp gs and negb pop mov ljmp sbb (bad) insl (bad) fimul xor rex.X rex.WB movabs fmuls mov push ja rex.WB (bad) push or or callq xchg cmp outsl rex.R stos jmpq rex.WB fs or xor tzmsk (bad) mov rex.WB jge cs pop (bad) rex.WXB cmp retq pop pushq or xchg (bad) rex.WB mov out mov rol xrelease (bad) out mov jbe push mov pmuludq mov imul movslq jle cltd movabs js cmp outsb cwtl rex.RB rex.XB adc scas rex.RXB add or imul xchg jne pushq mov and rex.WRB callq in push pushfq movsl stc mov sbb mov sti cld (bad) lret or test cmp adc jl cmp popfq pop stc movabs rex.XB jnp xchg outsb loopne cmpsl mov and and sbb scas add (bad) pop and sub xchg test mov rcll ffreep cmp enterq xchg rex.WRXB insb (bad) out cltd xor or cmp rcrl sub xchg (bad) jne sbb sbb clc and or lods (bad) jnp rex.WXB (bad) cld rex.B pause in rex.WB adc rex rex.XB jle pop (bad) lods sbb (bad) (bad) jae sub insl pop (bad) lea rex.WB rex.RB ror callq (bad) ds (bad) nop sbb mov cwtl mov mov pop pop movabs (bad) jb cltd clc or xlat pop stos scas or and rex.WR and push rex.WB sbb mov mov and (bad) sub callq movl xchg movabs negb loopne cvtpi2ps sub (bad) rex.WB mov xchg jge insb push push or jl adc sub pushq pop flds lods (bad) cli jge mov (bad) or rex.RX xchg jrcxz outsl out rex.WB xchg sbb rex.WR rex.RX in (bad) (bad) retq (bad) jnp movabs imul decb scas mov cmp sub or rex.B fidiv movabs xchg and popfq xchg rex.WX rex.WB ss out callq rex.RB cmpl repnz addr32 negb or pushq je mov (bad) lock std incb pushfq (bad) (bad) pop rex.WB xchg popfq and in rex.WB fldcw xchg mov pop sbb pop ja iret mov jl (bad) (bad) out rex.WB test pop (bad) or pop jns sbb imul pop fild rex.WRX cmpsl rex.WB jns cmp sbb test sbb stos movabs or adc jrcxz gs rorq and imul adc rex.WB jmp lret insb mov lret shrl jge (bad) loopne and (bad) out xchg mov rex.RB (bad) jmp (bad) sbb (bad) sbb (bad) cmp adc movabs lods test sbbb js mov add (bad) mov pop mov rex.XB xchg (bad) (bad) adc push pop cmp (bad) adc pushfq xchg rex.WR pop xlat xchg nop or movabs sti jg lock cld sub mov mov push (bad) cmpsl fistpll lret movsl push adc xchg data16 xchg xor in sub pop jl xchg mov pushq rex.RXB cmp rex.WRX out lock pop (bad) sub std (bad) in sbb add push sub add rex.RB mov insl cmp rex.WRX sarl popfq or push repnz (bad) loopne rex.RX es push loop adc rex sub push xchg (bad) jb movabs cmp sbb addb or push sub jle (bad) repz scas push jle (bad) (bad) jno cwtl rex.WB push rex.WR movabs rex.WRX cltd xchg icebp (bad) lods rex.WRX rex.WB (bad) rcrb or in pop out stos or rex.WB mov pushq rex.WRX rex.RB xor add xor and adcl fisttpl rex.RX sarb test adc mov push rex.WB mov lret (bad) rex.WB (bad) cmc xchg test push rex.WB (bad) or xchg (bad) rex.WB rex.WR rex.WRX or push push pop movabs mov jo out insb sub cmovae repnz rex.WB (bad) (bad) rex.RB movaps scas cmpsl rex.WRB scas mov sub pop jg or repnz enterq stc jnp outsb jno rex.RX js rolb (bad) callq rorl (bad) fisttpl rex.WRXB movslq rex.XB sub fxch pop leaveq mov and sub add movabs adc or jns (bad) repz (bad) jle rex.WRXB mov rex.WB (bad) ss sub push pushq (bad) sub cwtl mov lret (bad) push mov rex.RX rex.WRB pop rex.WR lods sbb out pop roll rex.WRX (bad) outsb and movslq outsl rex.WB (bad) in lea scas jbe icebp rex rex.W loop fisub pop cwtl mov pop or mov jp callq ja rex.WB int3 jg rex.RX sub retq pushq hlt sub rex.XB xor icebp xchg pop loopne rex.W push nop rex.WB fisttp mov retq mov in ja push cld out xchg sub (bad) jp add icebp popfq and xchg loopne rex.WB test outsl addr32 push fisttpl pop andb or insl rex.RX mov and (bad) pushq sarl xor pushq (bad) nop or lods rex.B jp and (bad) scas rex.WB repz notb rex.B (bad) (bad) adc (bad) mov (bad) jbe xchg test rex.WRB pop and fsubl or imul cmp cld lahf and jne xor rex.RB movabs (bad) insl jg and add (bad) (bad) xchg (bad) sub rex.WB rex.W rex.R andl rex.WB insb div add rex.RB rex.XB add cmpsb shlb jmpq push sub rex.WB cs (bad) sbb in mov cmpsl mov xchg rol je push mov adc rex.WRB rex.WB rex.WX add scas cltd out addr32 lods (bad) (bad) rex.WRB pop (bad) jno (bad) mov add adc xor xchg stos iret jmp callq lahf sbb movsb ljmp rex.WXB jg (bad) movslq mov ja iret push callq (bad) rex.WB xor and movslq sbb psubsb lods callq fcom rex.WB retq add cld pop cmpsl mov sbb ja outsl xchg (bad) push or add xlat outsl repnz cmp rex.R int retq imul push pop movabs rex.WRB adc jae int3 sub fimull scas rex.WRB out sub lock out cmpsl loop movsl xor pop sbb int (bad) mov (bad) mov add sub cmp lock rex.RB in (bad) and (bad) repnz sbb xlat cmp pop adc stos mov (bad) (bad) (bad) in (bad) pop test (bad) (bad) push xor mov movabs push fdiv xchg adc (bad) (bad) (bad) movsb outsb addr32 cmpsb imul jns adc mov test mov test (bad) movabs test sub add addr32 lock movl shrl adc xor cmp callq ss sahf (bad) sub mov (bad) push enterq sub (bad) (bad) and lret nop jp cld mov push rcll mov mov fiadd jno gs jnp hlt xor sub mov xor (bad) push loop rex.R movsb cmp fbstp (bad) shl cmp mov xlat callq in (bad) rex.WB es adc sub fldt orb jp jp rcr (bad) cmc adc sbb xchg cmpb cmp rex.RX adc out mov jmp (bad) rex.WRXB sbb lods push rex rex.WRX scas pushq iret pushfq (bad) rex.RB iret rex.WRXB pop shlb repz (bad) jmp (bad) addr32 mov (bad) mov pop lea mov fsubs stos (bad) fs (bad) fisub and rcrb pop sub div (bad) mov rex.WR test rol jno jp outsb rex.WRX rex rex.XB popfq rex.RXB sarb cs je fwait sub idivl pop iret lods cmp sahf test jns mov sub jmp (bad) mov xlat nop sub xchg out stc or rex.B cld rex.XB xchg rex.W jo (bad) mov sub ja mov adc xor test push mov push js mov adc pushfq mov (bad) out and jbe jne (bad) insl (bad) stos (bad) (bad) jo rex.B mov (bad) (bad) scas (bad) je popfq outsb mov xlat (bad) cmp and fmuls shr repz xchg enterq rex.XB push add clc imul pushq (bad) jmpq xchg rex.RB es (bad) push or rex.XB mov pop pop rorb ffreep xchg test mov and rex.WRX add sub jmp push callq rex.X fs xchg out add js sub xchg rex.WR sub and enterq test sub imulb lea push js add sbb pop pop (bad) jle (bad) cmp movabs movsb and leaveq test mov stos lret jmp sbb (bad) sbb jp lret fadds cld and loopne lahf pop rex.RB retq mov sub xchg sahf cs or fdivr imul rolb push int3 mov and lea decl rex.WB loope test pop outsl sbb (bad) (bad) mov fwait in (bad) jnp int3 fldenv push movsb rex.WB mov rex.WXB rex.WB mov rex.WB (bad) adc jl mov pop (bad) rex.RXB movabs or ror sub add mov adcl (bad) (bad) outsb mov fsincos callq jo and add shr leaveq jp (bad) rcr xor stc data16 (bad) (bad) loopne outsb (bad) loop and jns out (bad) jbe fildl callq cmpsb loope sahf jmp rex.WB rex.WRX (bad) pushq (bad) rex.WXB rex.WXB mov xor movabs pop insb mov rex.RXB sbb ror sub movabs (bad) lret or movsl cltd mov or rex.RX pop (bad) int lret punpckhbw pop movslq adc rex.WXB or pop adc add jg (bad) pop mov xchg mov (bad) shlb insl nop movslq sbbb rcl jnp enterq fildll (bad) push andb (bad) sub movsl movsb icebp jb jmpq (bad) add enterq stos sub loop out (bad) cs or jne stos insb (bad) sub int3 adcb leaveq pop pop sub xchg cmpl sbb ss or lods jno jb add or jp (bad) and pushq sbb sti pop pop xchg mov (bad) rex.WR rex.RXB cwtl xchg adc jo,pn movabs outsb (bad) vsqrtss rex.WB mov sub rex.XB cmp lods pop je and cmpsl pop int (bad) out and (bad) loope,pt ja movabs (bad) insb (bad) jne mov rolq pop pop rex.R (bad) cmp rex.WXB loopne jnp rex.WB mov pop pushfq and int3 (bad) es sbb orl push (bad) scas mov gs adc pushfq or (bad) fwait leaveq stos popfq shrb rex.WB sarl (bad) fiadd jbe mov (bad) fcom scas mov and movabs lret rex.WB xor lret cmp jns cli rex.WB sbb (bad) rex.WB xchg mov jp adc addl (bad) mov iret ds rex.WX sbb fwait sti and rex.WB rex.RXB je jbe sub scas test out repz mov movslq adc clc pop xor add (bad) rex.WXB mov or (bad) jae imul out pop xchg xor push imul (bad) sub cmpl rex.WB lods (bad) or (bad) fsubl xchg outsl sar (bad) es pop loopl mov pop sbb movsl (bad) jbe pop iret xor pop jl xchg xchg xchg outsl push nop push (bad) (bad) fistpl jp sub movabs cmpsl out rex.WB (bad) jns push mov mov pop (bad) rex.RXB jl data16 js addps enterq sub mov xchg (bad) rex.WRB sahf jne lea jno fs (bad) and loope xchg (bad) (bad) and cmp cmpsb rex.WXB (bad) or rex.X (bad) adc xchg rex.X movsl mov (bad) rex.RB cmp jne iret pop rex.WX (bad) add pop (bad) (bad) jge xor cltd mov mov (bad) rex.WRXB test movsb (bad) mov (bad) and jmpq xor shl or rex.WXB fld rex.WB rex.WRXB gs movabs enterq out nop jg lea and sub or scas sub or jns lea (bad) or test sub retq lock mulb pop sbb rex.WB sbb imul outsl rex.WB imul rex.WR test rex.WB push imul add test sahf sub and xchg mov rex.WB xchg sbb pushq xchg enterq test sti pushfq sub sbb movabs cs retq fistl or (bad) push loop icebp hlt push rex.WB (bad) lods outsl pop adc jrcxz xor (bad) xchg mov fistp mov fsub leaveq rex.X test add movslq movabs fmuls jnp adc fisttpl xchg cmp push lret rex.R add sbb rex.WB out gs add movb callq outsb pushq loop movsb sar cmpl (bad) rex.WB insb sbb retq pop lods outsb xchg rex.B (bad) jae js xchg movsb cmpsl rcrl sbb (bad) (bad) fstpl callq xor fldenv cmp retq mov imul mov (bad) scas movabs cltd cmp cli imul or rex.WB xchg sub psrlw sub and repnz pop pop fldl add out xor scas rex.RXB pop loop (bad) js sub subl rex.WRB (bad) pop rex.B rex.WRXB rex.WB push cmp (bad) ja mov rex.WRX cmp pop mov (bad) fldt sbb rex.WB rex.R cs out (bad) push sahf rex.WB mov xor rex.WB cmp fadds (bad) rex.WX rex.WR rex.WB mov ja sbb hlt adc mov cmp xchg add mov movsl clc mov rex.WB (bad) sub addr32 data16 scas push sbbl adc lret adcl repnz or or xchg mov pop pushq and add (bad) out sub and lock (bad) (bad) rex.WXB jae fld mov jge sbb rex.WB fs (bad) and fisub insl imul lods rex.WB es mov rex.WRX xchg rex.WX rex.WB ss (bad) mov cmp add sub sbb jge mov rex.RXB xor xor orl cli xor imul fs jnp ficomp or (bad) cltd mov je (bad) or (bad) cmp movsl stos (bad) sbb lret jl rex.WB (bad) mov test xchg mov xchg rcr (bad) cltd stos push jrcxz add outsl (bad) iret push (bad) adc rex.R rex.WB sub mov cmpsb in rex.WB add addr32 adc (bad) insb cmp mov push cmp leaveq (bad) mulps jo (bad) xchg rex.WB addr32 stos xchg sbb and rex.WB mov test and movsb xchg rex.WB mov test jnp add pushq xchg fildl stos cmp out addr32 sub (bad) wbinvd (bad) and rex.B test adc movslq movabs leaveq or retq and cmp in add sub jae mov stos (bad) xchg push jl push movabs movl or rex.WXB sub movabs fucomip out mov (bad) lock mov iret cmp sub lods es (bad) mov addl pop rex.WX movabs xor jne sub push adc mov adc (bad) rex.WB fbstp xchg fwait and (bad) mov (bad) in rex.WB add movabs sub pop out adc mov lret repz lret icebp rex.WRXB test or or push cmc jno rex.XB rex.WB mov divb pop sub sbb mov pop pop rex.W in and rclb movabs lock lods jnp jns rex.WRB fwait adc loopne lock cmp or jp leaveq mov pop mov mov mov fucomip (bad) rex xchg pop callq movslq (bad) cmc jno xchg out and xorb push sub pushfq (bad) and pushq fistl rex.WB cs fnsave (bad) pop pop sti rex.WB fistpll pushq movabs pushfq add add mov movsb pushq (bad) xor jge rex.WRXB loopne ss mov add cli jno (bad) movabs gs rex.WB xchg mov xor xchg cmp popfq pop push movabs xchg test rex.WB (bad) vmovlps movabs addr32 rorb pop pop mov jge xor data16 stos test rex.WXB or push xchg xchg mov rex.XB cmpsl xchg out adc in pop sahf mov popfq (bad) callq cmp rex.WRX xchg (bad) fidivr mov ror mov sbb xchg rex.WB std pop imul pop mull outsb jle adc pop rex.WRXB rex.WB data16 and sbb out rex.WXB fwait inc addr32 pop in cmp pop cmp pop (bad) movslq rex.WRB icebp (bad) in adc xchg js mov jbe jmpq push (bad) mov xchg xchg divb jge add leaveq xchg push shl fild rex.WB (bad) (bad) ss js jrcxz fdivs rex.RB enterq in xchg cmp mov fwait (bad) idivb add or pop xor rex.X retq je lea std rex.RX mov jo xor mov xor rex stc iret rex.WB mov (bad) movsl push mov lahf xchg pop rex.B mov stos retq (bad) movslq fimull mov (bad) cmp rex.WB (bad) rex.RXB loop mov (bad) addr32 push xchg mov (bad) jne or xlat fsubrs movsb imul cmc jae xor std pushq cltd rex.WB retq fnstsw push (bad) jp cmp pop xchg fs clc rex.RX mov fs lock retq movabs rex.WR sub rex.WX xchg or retq adc xchg jmpq int3 push jmp out fwait jns and (bad) sbb popfq jp fwait jle lea fdivs mov mov sub rex.WRX sub (bad) movabs adc rex.WB clc add shrl mov xchg (bad) loope rex.WRB mov rex.WB xchg xlat push movabs out (bad) imul repnz loope mov out roll cmpsl shrl fiaddl test int push lret scas (bad) test sarl test lea (bad) addr32 rex cs mov in mov rex.X fnstcw push mov xor or movabs rex.B fwait mov andl es xor and mov pop rex.WB cmp mov adc jo and mov mov mov cmp rex.WRB cmp sub mov fidivr adc pop notb mov retq (bad) sub (bad) cltd retq sarb jae test movsb in lahf (bad) mov or mov test mov xchg hlt cmp shlb pushq idivb stc mov jo jns cmovae rex.WRB xchg rex.WXB sahf decl mov inc mov (bad) lock mov (bad) mov or movsb sbbl imul fwait pop in imull mov in and rex.RX cmp cmp mov fisttp leaveq sbb enterq lret rex.RX mov int in pushq rex.WRX xor or pushq (bad) shrl (bad) repz add callq imul enterq lret push sbb rex.WB insb in (bad) jg xlat sub push fs rex.WRB cmp movsb and mov in push loope push (bad) rcrb movsl cmp rex.WB icebp jbe ror out cmp add repnz pop mov rex.X jne retq add or ss mov pop mov adc jp retq pop mov push rex.WX sbb mov addl push movsl cmc (bad) sbb fldt (bad) je loopne mov and cs jne xlat rex.WXB pop jo scas (bad) rex.WB (bad) stos movabs iret cmp insb test outsb xor rex.WRB out notq jo rex.WB fiadd imul adcl ja and lret rex.RX rex.WB rex.WX cli push shlb leaveq ja xor sbb or in rex.WB repnz fiadd rex.WB fwait sub (bad) jg test addr32 xchg cmc mov cltd sub (bad) add jmp sbb (bad) (bad) popfq out mov iret outsl fsubrl jns add out pop cmp in scas (bad) mov sbb cmp fild lret cmp rex.WR rex.WB and out (bad) mov adc sub add (bad) push in imul pop and lock or hlt popfq mov pushq add xchg rex.WRX push sub movabs add mov addl iret repz mov sub and and rex.WRB addr32 cmp or fldt xchg (bad) pushfq sub rex.WX rex.WRXB xor (bad) (bad) clc cmp movsb rclb enterq sub mov mov pop (bad) xchg push pushq test (bad) xchg in sbb cmp popfq cwtl iret cltd insl gs adc sbb pushq add sahf xchg rex.WXB lret (bad) mov xchg out rex.WXB mov movslq mov rex.WR rex.WR mov pushfq (bad) rcrl (bad) sbb jge pushq (bad) or cmpsb (bad) pop data16 mov fadds sub sub add (bad) xchg retq add (bad) js sub jg xor in lock mov rex.RX sub xchg mov jo jmp sahf (bad) (bad) clc push cmp imul mov jbe jg es mov and (bad) out (bad) xchg and rex.B test rex.RB addr32 xor add cwtl retq callq sub (bad) pop rex.WR imul cmp rex.WXB in xchg add sti rex.WB stos in (bad) sub sarl fdivl (bad) or rex.WX cmpsl sub mov cltd testb pop pop stos rex.WXB sub fistpl (bad) decb lret and push xor nop data16 or outsl movabs fisubr xor jno and insl rex.WRXB in and enterq xchg mov push (bad) jg rex.R ja retq (bad) or or (bad) sbb mov (bad) dec adc rex.WRB callq push mov rex.RB pop jnp adc add pop out int ficom (bad) xchg xchg mov and sbb rex.RB cli xchg (bad) pop pop nop rex.B and callq adc retq (bad) iret rex.RXB (bad) out xor (bad) push gs sub rex.WB or add push rorl movabs fnsave js sbb iretw or movq and push rex.WXB (bad) and xchg rex.WX std clc outsb mov enterq sub pop rex.XB sub rex.X and fiaddl cltd mov or pop addl rex.WB mov fisttpl cmp or cltd pop push (bad) in scas cld sbb push sub xchg xchg (bad) sahf lahf ja mov rex.WB or (bad) adc movsl repz rex.WR xor sbb push xchg push roll add out hlt xor (bad) sbb rex.WB jmpq stc mov add push pop rex.RXB rex.R sbb rex.WB xlat movabs push fs adc or (bad) jnp cwtl iret cmp and out rex.WB sbb add rex.RX push push (bad) sbb cltd lahf jmp (bad) mov (bad) rex.WB nop mov sti rex.WB sarl pushfq insw lahf rex.WB rex.XB jb sbb sub mov jne pop iret (bad) icebp (bad) mov pop cmp mov pop scas mov jb fldenv movabs leaveq xor cltd lret jno or mov mov movabs or rex.WB lock jae pop imul notb rex.WB nop push rex.WB pop sub rex.WRXB out cmp cmpsl adc sahf cwtl pop mov xor leaveq cmp rex.WB fldenv (bad) mov fmuls rex.WRX lahf (bad) (bad) rex repnz xchg and (bad) mov jmpq (bad) rcrl jo rex.WR rex.XB rex.WRX imul repnz xchg in jae jno sub subl rex.RX movabs mov fucomp mov rex fs cmp (bad) rex.WRXB rex.WRB sub cs jrcxz adc rex.WR mov jrcxz repz rcrl (bad) mov xor shl add and movb (bad) out push int sbb or pushq pop orb or xor mov pop lods mov clc (bad) and retq pop outsl fstpt jg (bad) ja stos xor rex.W push int xor pop or sub pop imul or out callq movsb movabs loopne (bad) mov (bad) stc push loopne test (bad) mov lahf mov movslq sbb push popq pushfq jo scas xchg rex.WRB rex.RXB mov movl cwtl pop in (bad) jns and jb xchg in insl (bad) (bad) xchg scas cmc pushq mov rex.RX gs adc (bad) lea or pop jbe (bad) loop test fstps movl loop (bad) rex.WB lock movabs lahf (bad) lret and jae pop rex.RB mov cltd rex.RX std lret pop mov add push retq loop ss data16 (bad) mov xchg mov rex.RB fbld mov rex sbb rex.X sbb (bad) and push or loopne xor and cmp in lock sub and xchg rex.WB rex.B jp push sub pop adc lret cwtl add callq loope rex.WRXB rex.WB retq xor repz and popfq or rex.WB stos xchg movabs add mov mov fisubl js sub movsl and lahf rclb int rex.WRB int3 test or jrcxz jne mov adc roll xchg xorl xor stos sub movabs lret sbb rex pop movsb movslq rex.WB rex.W lahf rex.WRB (bad) rex.WB ss cmp movabs sub pop (bad) rex.XB retq adc cmp movabs (bad) xor mov xor rex.WB (bad) mov or (bad) scas int3 test mov pop cmp repz fidiv imul rex.WB hlt adc or callq (bad) mov add pop (bad) adc rex rex.WRXB fdivrl imul rex.WB pop pop xchg fldpi xor sarb rex.WB loopne out scas insb sbbb (bad) jl push andl jo in cmc movsl or rex.WXB rex.WB insl addr32 pop and (bad) enterq push fimul adc lods in test jne cmp mov xor loopne jl lahf rex.WRB in pop add rex.WRX rex.WB jb rex.WR cmp jle or and rex.WB push add (bad) pop cli out or sub add cli add push hlt cmpsl cltd pushq pop fsubrp xor vsubps and sub rex.RB fimull (bad) movabs (bad) cmp gs mov movsl (bad) jg jnp xor push clc jmp (bad) and pop and mov out xor cli sub movabs outsb adc or xchg (bad) fs data16 callq xor add (bad) out rex.WB jp lret imul adc fnstsw rex.WB sub movsl lock adc pop cmp cmp adc mov cmp repz mov rex.RX movabs xlat (bad) jne js push add popfq mov push mov rex.WB ss lock movabs sbb rex.WX mov jnp cmp ds xchg sbb (bad) jle adc rex.WR gs andl scas pushfq jno push data16 (bad) rex.WB pushq mov sbb stos cmp loope idivb pop sti lret sub movabs mov rex.WB paddb mov sti scas sub (bad) lock iret ja (bad) rex.WRXB jp lahf lret rex.WRB pushq rex.XB shlb jp int lea xchg mov rex.WB xchg pushq push pop cmp fwait push mov or test pop sbb (bad) (bad) add cmp mov int (bad) pop rex.WRXB pop ds out mov xor lods rex.WB mov (bad) movabs or add fcoml xor pushq imul retq test mov sbb int3 fsubs adc sub (bad) mov orl sub mov pushq adc rex.XB mov sub cmp rex.RX jno mov cmpsb push jg testb cwtl rorl leaveq imul movabs push cmp or add jge rolb rex repz int3 cmp rex.W rex.XB push movslq callq (bad) loopne cmpsl xchg pushq sbb pop scas movsb jp (bad) rex.X rex.RB mov xchg add minps mov rex.WR mov addl in adc roll push movsb test jle out sbb adc push (bad) in pop rex.WRXB rex.RX popfq std (bad) stc cmp movabs pop in sbb sub pop xchg rex.RB test (bad) shlb faddp pop sar movabs (bad) rolb cmpsl out xor jb iret rex.RXB fdivl mov in (bad) data16 xchg or (bad) xlat stos (bad) sub fsub shrb enterq nop jb push sahf rclb jrcxz xchg (bad) mov pop jp (bad) and rex.WXB scas std pushq add sub out cmpsb xlat mov push lret mov popfq jrcxz (bad) leaveq rex.WX and sbb rex.WRXB cmp and xor mov and rex.R fist jne pop sbb movsb (bad) xchg cltd roll xlat movsl test retq cwtl cmp nop add pop mov pushfq mov jmpq jge or hlt scas mov mov nop in xor popfq rex.R (bad) stos imul je movslq jo rorl cmp es sub repz mov (bad) cmp pop scas (bad) xor pushq in add test adcb (bad) roll adc mov je cmp (bad) xchg xchg popfq fsubrs push and cmp retq repz sahf jg cmp movslq repz add rex.WRXB and rex.WXB mov scas xchg pop jg stc (bad) xchg (bad) rex callq sub hlt pop movabs fcoml out jo sub cmpsb mov imul and xor mov jbe pop or cltd (bad) or callq cmpsb imul or adc fs xchg loopne mov cmp jo mov mov movsb cmc and fmull xchg jne loop stc mov mov rorb movabs fs rex.RXB rex.WRX rex callq push adc lret negb out rex.B sbb (bad) xor insb fisub sbb sub hlt mov (bad) movabs mov sbb xchg in imul add movabs mov rex.W push (bad) movabs fdiv pushq xchg lock repnz movsb stc jl rex.W cs rex.XB test rex.R and stos rex.RX cmp hlt lret fstps in rex.X scas or test lea push or (bad) xor clc rolb test movabs addr32 mov es rex.RX adc mov or je stos test xchg sahf in flds (bad) mov repnz xchg (bad) leaveq imul or cmp cmpsb fcom mov mov and rex.RXB or (bad) jae jge or cmp and or fcomps (bad) test xlat jge xchg test mov testl xor lret and (bad) stc jae cmpb retq movl out loopne pushfq rex.B rex.RB (bad) nop mov (bad) add iret roll xchg cmp stos pop mov sahf lret hlt stos mov cmp cld xchg fsubs popfq add pop mov pop jbe add jns fs cmp jp out cmc or in xlat sbb stos je insl std (bad) mov rex.XB rex.RB sub (bad) movabs or push rex.RB jp adc pop loopne jge rex.WB cmp jno test rorb rex.WR lock rex.R addr32 xor push (bad) sub jno jmp lea mov or mov (bad) repz cmp fcompl jb imul push flds retq movabs rex.W es pop fcoms xor jl (bad) jns fistl lret (bad) sbb repz callq test mov popfq pop leaveq jb rex.WRXB int out sub sub fs (bad) rex.RXB cmp sub je sbb sub shl and pop repz jmpq loop mov sti scas subl rex.X pushfq rex.WRB add mov loop fwait out sahf (bad) push (bad) mov pushfq jp sahf rex.WR mov mov (bad) rex.RXB lods ja push fist (bad) loop out mov jae pop jno xchg mov rex rex.WR rex.RXB and test test sbb and (bad) outsl adc sbb lahf rex.R (bad) fs movl rcrl mov xchg (bad) (bad) cmp pop addr32 mov decb (bad) jbe jmpq (bad) xchg cmp rex.XB div insl mov int xlat mov add xchg (bad) or xor movsl add imul add xor retq rex.WX js jns (bad) jge add rex.B pushq jno jge adc out (bad) sbb pushq sahf jns or imul stc (bad) hlt retq (bad) mov cmp jae or fisub iretw lea test mov mov jb mov callq ja ja outsl mov testb movsb mov shl rex.X jb and in rex.WB imul sub cmp xchg loop jmpq es rex.WR rcrl (bad) sbb in roll rex.WB std xor xor sbb outsb ja stos rorl ljmp sub out rolq mov movabs adc cld out sbb mov in js cltd sub scas pop sub and push or in cmp iret or test rex.WRB es movsl push rex.WRX mov movabs jmp lret pop movabs cmp (bad) insb (bad) rex.WX rex.B fwait or jb movabs xchg rex cmp ja addl cmp rex.WB xor jnp and (bad) cmp rex.RX push pushq add adc mov xor leaveq rex.WRX js add jge mov rex.WRXB mov xchg in addr32 movslq stos (bad) jnp scas movabs push mov hlt or push pop (bad) std (bad) xchg (bad) out fs rex.RB pop add js rex.WRB addr32 outsl (bad) cmp adc pop lahf jo rex.RB add rcr in data16 and scas leaveq (bad) lret roll stos insb lret xchg rex.WB xor jns mov rex.WB pushq mov rex pop (bad) fstps rcrb sbb xchg sbb stos lods incl and xchg scas cmp rex.W jp push jae push fmul rex.WB stos mul jrcxz mov loop vmovsd adc out jo jl rex.W sub stos cmpsl (bad) std rex.WB rex.WRX mov (bad) repnz sub ja scas leaveq mov leaveq pop rex.WB mov decb jo sub jmpq and mov movabs cmc or incl jge xchg sub mov jrcxz sub cli hlt rex.X sarb rex.WRXB fwait rex.WB (bad) sahf mov or callq (bad) jbe outsl rex.WXB (bad) (bad) orb callq push pop stos sub (bad) lea (bad) sti rex.W rex.WR cmp outsl sub jge rex.WB rex.XB (bad) shlq xchg mov in rex.WB outsb (bad) rex.W or add cmp (bad) pop (bad) negl (bad) adc pushq outsb pop cmp lea (bad) ds sub jg push mov xchg rex.WB or outsl (bad) movabs iret adc int lahf enterq pop cltd push pushq in out std and movabs loopne mov and or icebp xor enterq rex.B rex.WRB cmpsl cld callq (bad) repnz mov pushfq rex.WB rex.RX je sub shrb fisubl push rex.WRB rex.WRXB (bad) mov sub jns jg xchg pop (bad) cmpsl popfq pop mov jmpq lea cltd fwait pushq xor xor (bad) push movabs jge iret push or (bad) sti rex.WRXB stos cwtl sub out pop ljmp iret (bad) jo or or mov xchg rex retq adc cmp hlt jbe pop rex.W rex.WB or jmp push push jne pushq enterq (bad) fiadd jle clc push mov mov (bad) (bad) fdivs (bad) sub adc in loop xchg enterq int3 clc jae add xchg addr32 rex.RX xchg pushfq (bad) ror enterq fild (bad) xchg (bad) jbe rex.RB lret mov (bad) rex.WB add (bad) rex.WB out mov js pop and adc (bad) and and stc fs pop adc stos decb add insb rex.WRB xor (bad) rex.WB repz mov out (bad) test and push (bad) (bad) outsl add or mov (bad) enterq add rex.WRB jno cmc and sub xchg sub fldl add rex.WB pop movabs out xor adc sti rex.WRX sub rex.WRXB fwait sub pushq or mov gs pop fcoms sbb jg rex mov retq sub cmp fucomp gs movabs shl popfq loop push adc (bad) std notl pop mov mov xchg fstpl loop (bad) popq rex.WRB mov or fldl retq push xchg add mov imul leaveq xor stc push scas add mov jl movsl lock (bad) jae mov leaveq (bad) push (bad) mov lret rex.RXB push (bad) or and test mov mov cmp rex.WB mov in movsl xchg mov (bad) (bad) pushq or popfq pop push xor mov movabs mov (bad) cmp out mov sbb and (bad) mov popfq xchg xchg sub mov (bad) or shll cmpsb sub repz adc lea xor adc sub xchg jge movabs push xchg in movabs jle stc rex.WB and insl (bad) mov mov (bad) rorl (bad) fbld jle fwait push lods rex.RX mov int callq scas out sub (bad) insb (bad) scas push mov and lods pop (bad) (bad) movsl movsl sub fmull test mov in bnd rex.B in adc jl pop rex.WB add sbb scas cmpsl mov rex.WRXB mov rex.WB rol pop push enterq ror mov data16 jns out cmp (bad) stos xchg rex.RX xchg add callq outsl mov ds mov and push repz and rex.WB mov jmp xchg sub rex.WB cmpsb (bad) adc test test jrcxz cmp sub rex.WB ficomp mov movabs and rex.WXB (bad) rex.WB xorl stos sub cmp push sub outsl movsl rex.RB mov add fisttpll (bad) movabs imul lcall xor retq jae rex.WR xchg loopne adc xchg (bad) sbb lea push mov rex.WB mov loopne pop cwtl mov rex.WXB mov insb mov sbbb mov (bad) pop push ss pop (bad) mov rex.RX rex.RXB cmpsl sbb addr32 sbb xor mov (bad) cli retq rolb pushq lret jbe callq or fadd xchg js sti rex.RX jae and jns rex.WRX rex.WB hlt cmpsl rex.WB stos in icebp xchg repnz movabs (bad) and pop and mov fist xchg push add (bad) pushq rex.WB rex.WRXB jp (bad) jle (bad) sarl (bad) rex.WB (bad) clc int adc jbe rex.WRXB push cmp xchg push xlat js xchg hlt xor rdmsr (bad) je movabs cld sub jp (bad) rex.WRXB ss fistpl scas movsl (bad) (bad) fadds fmul sbb rex.W lock (bad) subb pop outsl movsl out fdivrl leaveq xor fiadd rex.WR sub sbb jl movabs loope out es sub adc push repz push callq std (bad) mov sbb rex.X enterq adc lods pop xchg mov and rex.WB test test data16 (bad) nop sub cli cwtl rex.WB (bad) and xchg mov xchg rex.WB cmpsl sti cmc (bad) adc rex.WB clc lret jmpq rex.WB (bad) jle (bad) (bad) rex.WRB loop rex.WB mov fmull movabs jne sub jl push push (bad) ja sbb mov movsl in (bad) rex.WB callq jnp rex.WB (bad) or test (bad) rex.WB rex.WXB lock cmp and rex.R add push mov rex.RX fisubr push cs (bad) rex.WB cltd test xor lock rex.WB rclb mov cli lods sbb lret rex.RB push cmpsb xor jnp and push pushq hlt pop adc cmovno (bad) jno xchg rex.WB stos mov fwait movsl movslq rex.WX pop xlat mov sub sbb mov cmpsb xchg or movslq add scas rex.WB std lret movsl icebp lods push (bad) rex.WB js jbe int3 rex.WB pop lods xor sahf sbb mov lret imul mov and push mov rex.WB rol rcll rcrb out lret fs movabs insb rex.WB imul rex.WB mov sub sub xor sbb mov in (bad) pushq movb addr32 xchg xchg retq push jno nop sbb xchg rex.WRX adc callq and jg and or cs in movsb xor imul pop movabs (bad) rex.WB adc pushq imul push nop mov stc jrcxz lss mov xchg rex.WXB rex.WB (bad) sub (bad) (bad) cmp shrb sbb test cmp outsb imul jl (bad) mov cmpsb gs insb cmc jle roll cmp rorl cmp xchg jl fwait retq rex.WB add movslq sbb rex.WB fldl cmpsl rex.XB sub push add cmpl sub lods fsub test out rex.WRX pop mov (bad) (bad) cmp (bad) mov push fucomp push add or pop sub sub cmpsb rex.WB rex.WXB pop (bad) xchg insb cmp mov pop fstps rex.WB sub enterq retq sbb pushq out cltd callq sub sub stc callq (bad) rex.WB jg rex.WB lret rex.R sub sahf rex.XB movabs mov pop xorl (bad) push push leaveq rex.WB fidiv xchg cli and mov rex.WXB (bad) rex.RX (bad) movabs adc ss callq xchg pop rex.WRX scas mov mov repnz cmc xchg movabs stc fldcw (bad) fs lock cmpsb leaveq jg rex.WR and rorl addr32 and pop add jmpq in (bad) rex.WB (bad) xor (bad) je sub test std add sub pop (bad) rex.XB int3 or sarb pop (bad) and movabs outsb (bad) jne (bad) add imul add retq repz push adc cli fisubrl callq rex.XB xor sbb (bad) pop mov in loopne (bad) mov addb rex.WRXB (bad) adc (bad) mov xor add jl jo outsb je xchg ja and xor jmp shr cs jo pop test pop int3 scas jbe cmp push mov push sub roll ds leaveq insl sub sub rex.WB fisub xor and mov rex.WX cmp sub fsubs data16 adc loop (bad) sub cmpsb movabs (bad) xor sub xchg mov je sub in and addr32 movsb test adc (bad) xchg or stos cmp (bad) rex.W insl enterq nop jo sub or lock cmp (bad) sbb pushfq rex.WXB movslq add scas xchg mov in cld rex.WB (bad) adc es rex.WB rex.WRB pushfq callq xchg sbb or xchg loop cmc jne rex.WB int adc push lret xchg cmpsb or movabs add adcb mov je rex.WB adc xchg rex.WXB sarb pop xor (bad) fildl popfq movabs pushq mov shrb jnp sbb imul movabs adc in cmp push xor (bad) add jbe sarb (bad) repnz int test or (bad) (bad) xor push (bad) jns jbe pop pop rex.B rex.WB rex.RXB or jg jge and pop in cmpsl pop or rex.WRXB rex.WB stos outsl mov fistl adc rex.RB int3 rex.WB (bad) gs rex.WX pop adc loop out rex and xchg jg jmpq rex.W adc rex.WX cmovns nop push push callq (bad) fsubrs out leaveq push movabs (bad) imul jge callq (bad) test rex.WRX sbb rclb pop mov rex.WX imul push or pop mov notb rcl rcrb adc out rex.WRB rex.WR adc fisubl or pop gs bsf xlat movabs or movslq movabs (bad) incl cmp divb xlat push or movsb cmc addr32 (bad) mov callq lret enterq cmpsl enterq push sbb mov mov jne callq rex.RX push mov stos rorl outsb add fidivl xlat (bad) mov sbb pop pop addr32 xchg fwait adc (bad) cwtl mov jmpq adc rex.WX xor testl mov mov rex.WXB gs lods sub loop fiadd test rex.RXB (bad) and add cmp xchg test jg nop pop test adc jns jbe fimull add adc (bad) movabs (bad) int fcoms cmpsb je mov rex.XB rex.WRX push (bad) (bad) or or cmp (bad) mov rex cltd rex.WRX jne adc addr32 add pop andl rex.WB sbb enterq sub test ficompl shlb test push push or rex.WB xlat test sub movabs je popfq mov insb rex.XB rex.WR push cmp int3 ficomp (bad) fildll in rex.WB jno adc (bad) (bad) add mov movsl out in or push adc pop int3 xchg sbb jg push movsl xchg enterq and rex.WB pop jmpq rorl pop xorb or (bad) xchg (bad) movabs sbb pushfq je callq pop rex.WRXB (bad) (bad) pop sub add (bad) out xor rex.W (bad) enterq retq push push out rex.WB mov test (bad) (bad) xlat (bad) add int3 rex.WB (bad) rex.X ja rex.WB mov js je (bad) (bad) (bad) mov movabs cwtl rex jb ja and (bad) and and jae in (bad) rex.WB rex.RX adc xchg in or in jp loope and jne mov rex.WB pushq push psrld iret (bad) rex.WR rex.WRX and (bad) mov rex.WB push jl mov fstl jmp sub adc fmuls push rex.WB or enterq nop adc xchg movabs leaveq (bad) mov stos sub (bad) cs (bad) movabs xorl cmp (bad) mov cltd mov pushq mov imul loopne push lret push loopne sub or icebp test (bad) push fisttp sub imul sub adc rex.WRB rex.WB in add (bad) clc mov jp sub or neg (bad) lea cwtl movabs pop movabs push pop rex.WXB or and cmp mov js (bad) push xchg callq mov lret callq rex.WRX callq push mov loopne outsl pushq ror mov insl add imul jne xlat shll icebp sbb pushq rex.RB (bad) push jle or and rex.X push repnz push loopne outsl jmp mov mov push loopne sub shrb (bad) repnz rex.WRX rex.WXB sbb (bad) popfq push movabs pop rex.R rex.WB mov cmp push iret pushq mov clc cmpsl faddl adc sbb movsbl xchg rex.WB (bad) bnd movsl cmpsl sub cmc or push rex.WX and mov fstpt rex.WB movsb lahf sub cmc std add fwait sub cmpsl sbb icebp callq rex.WB test data16 jne test scas and mov pop sbb sbb std jne jl mov insb add jmpq in xchg rex.WB mov lock insb callq loop movabs fsts rex.WB out jmpq cmp xor lret scas movabs (bad) in test add lea rex.WRB repnz pop enterq (bad) out mov mov cli movslq adc mov iret (bad) xor movabs loopne (bad) sub add lods add lret pop push clc cmp adc js rex.X movslq mov mov fsubl rex.WB movabs movsl and push adc sub mov (bad) movabs sahf callq test gs jg repz movslq clc xchg out int adc out mov (bad) out (bad) or mov rol out cltd fs rclb rex.W cmp cmc iret xchg (bad) sub rex.R fs xor out addr32 fsubrl cmp lock rex.RXB rex.WX or insb addl fbstp jle xchg and and sub int cmc mov fs rex.WR imul and mov leaveq mov (bad) cmp ds fimull mov (bad) and sub sarb clc mov (bad) repnz rex.R sub xor xor (bad) cwtl (bad) pushq and (bad) rex.WXB jrcxz and xor jmp pushq insl sub cmc (bad) jb movslq test js fmul sub pop cltd pop (bad) pushq cmp (bad) movsl imul mov xor rex.WRB out rex.WX (bad) rex.R xchg mov out adc mov mov (bad) cs adc mov or fwait cmpl rex.WR out (bad) rorl incl in sbb fdivl pop pop rex.X js (bad) retq fwait sbb rorb std out vpsubd xchg rex.WRB mov fdivs ror std test add rex.WRX (bad) (bad) xchg mov (bad) gs or (bad) lock (bad) rex.WRB leaveq cwtl nop (bad) xor out fwait or cmp ds fdivr sbb xor rex.X cmp and push (bad) sub and xchg cmpl popfq mov mov retq xchg add mov ljmp add and pop fldl pop add rex.WR cmp add ds orq out scas addr32 (bad) cmp xchg (bad) adc push outsl push mov enterq jmpq fstl out stos xchg (bad) (bad) icebp xor mov movslq cmp cmp jo (bad) (bad) cmp std mov cwtl sub movsl (bad) mov (bad) ror mov ds ss (bad) (bad) cli movsb jrcxz std push cmpsl icebp rex.X cli fsub (bad) sub outsb pushq cmp mov rex.WRXB icebp (bad) loop sbbl xchg divl and cmp mov and jmpq sub (bad) push lock cmp sub cmc pop push rex.X and mov out cli jo jno rex.WR negb push and xchg fst add pop (bad) (bad) fsubrs xchg or fwait (bad) sub mov data16 rex.WX mov (bad) sbb jl fs (bad) enterq mov mov movabs pushq pop clc sub decl movabs loope or jmp (bad) shlb sbb fs xlat pop rex.RX loopne cld incb (bad) pop push fwait movabs rorl orps or pop lock shlb out jge lods push jo loop retq sarl jmpq lea sahf repz fistpll (bad) cwtl leaveq adc fs xchg sub clc addr32 adc pushq mov push and int shll sub out jns (bad) fldt add push xchg retq mov fwait (bad) jl jmp cmp xchg mov idiv rclb repnz in in and jnp or (bad) cmp or jae push popfq sub mov je (bad) push sub jmpq pop out movsl jnp fucomp jmp (bad) mov rex.WRXB out pop push add lea pop rorb gs rex.XB lock outsb gs (bad) (bad) push adc (bad) lea stos mov fidiv out mov adc lret pop mov (bad) lea cmp xchg out pop push mov idivb je fldenv xlat xchg movabs mov jge xchg mov mov nop xor cltd test or lret add rorb pop rex.WB es gs cmp gs scas mov push mov xor (bad) lret rex.WB rclb mov orl je push imull mov xchg rex.WR rex.WB (bad) mov xor enterq rex.WX rex.RX rex.WRB xchg fstl mov mov data16 (bad) (bad) outsl out sub sbb sub adc test rex rex.B js mov movsl fmull mov add rex.RX mov callq mov rex.WRXB icebp pop rex.XB pop push cmp rex.WB movabs push fxch sbb mov jg jo rex.WB retq testl (bad) cmp in mov mov rex.RXB cmp rex.WB jmpq xchg imul fcmovnu ja xor xchg cmc jge pop lcall retq (bad) movabs cli rex.WB loopne lea (bad) jne and cli iret rex.WB jrcxz (bad) test out loope (bad) xchg and rex.B jbe fildll movslq fmuls (bad) cmp enterq ss int pushq rcrq fldt test push sub jl loope mov pop sbb test jl fdivl sbb jns push repz rex.RXB rex.B cwtl int jmpq callq (bad) retq xlat cmpsb rex.WB gs loop jae (bad) pushq (bad) pop or mov rex.WB (bad) test insl mov cwtl rex.XB jle (bad) xchg jne rex.WRB repnz rex.WB fisttp rcrl out (bad) rex.WB xchg rex.WB je iret in (bad) adc lahf mov sbb cmpl cmovns sbbb adc rex.WXB rex.XB rex.WB callq pop scas mov lahf mov and mov (bad) jg pushq movsb cli rex.RX sub pushq cmc mov jp add (bad) push adc outsl mov cwtl add rex.WB rcrb fmuls lea adcb rex.XB jb (bad) js adc adc rcrb test retq scas push mov or or in adc orb test (bad) add or movsl (bad) cmpsl rex.B pop fs or gs jp sub sub cs (bad) sub icebp ja rex.RXB test cmp (bad) (bad) (bad) (bad) rex.WX repnz lahf pop addl sti and (bad) rex.WB fisubrl rex.WB sbb pushq fmuls rex.WB or sub add stc sub (bad) lods mov cmpsb push xchg in (bad) and fwait movabs xor rex.RX rex.WB outsb out in adc sub (bad) leaveq sub loop jne or out repz push insl push fs sbb test sti cmp (bad) mov leaveq pushfq out cltd (bad) (bad) jne xchg pop clc test (bad) sub xorl fisttp (bad) push rex.RXB stc xchg fimul sub ds lahf xor cltd adc mov adc adc mov (bad) (bad) sub in cli (bad) test rex.RB cmp fisubr test jrcxz sbb or imul or callq andl (bad) adc enterq jae rex.RX sbb rex.XB and out lahf std sub cmp (bad) sbb outsl notl mull (bad) in retq test lods std rex.X adc jge sbb sub jne and cwtl adcl shl movabs add je (bad) (bad) rex.W or rex.WX or jl dec pop (bad) (bad) add outsb (bad) (bad) add sbb repnz retq scas lret lea loope hlt outsl insl fs jo,pt in (bad) cmpsb rex.RX (bad) addr32 xchg callq add xor rorb xchg sub (bad) xor repnz insl sbb or rex.RXB add xchg adc out add adc adc loopne lahf push sarl rcr pop orb rex.XB or lods pop sub pop (bad) movslq icebp xchg addr32 movabs push pop (bad) jl in sbb (bad) sub out shlb js sub cmpl (bad) loopne movsb xor cld sub pop mov (bad) cmc or jo in in fstpl sub pop lods repnz cmp (bad) add pop cmp int3 rex.B imul (bad) mov scas xchg popfq or and pop sbb rex.R in and cmp sub (bad) cld pop (bad) (bad) sbb (bad) mov sub (bad) pop (bad) cmp adc fwait out (bad) clc in xchg adc pop rex.XB push sub jp test pushq pushq hlt ss jo mov pop (bad) cli push shrl rex.RXB data16 loop (bad) cmpsl fldt xchg (bad) and kxorw sub in retq sti xchg lahf adc hlt pop add (bad) and loopne (bad) rex.XB (bad) bswap movsl mov push fdiv mov mov or movslq adc mov fnstsw cwtl ss sub add iret out gs fisttp rex.WX jp rex.WRX orl addr32 enterq repz cmp sbb out rex.WX addr32 cli xor (bad) adc pop or mov mov (bad) jno gs out add jge fs or retq (bad) pop cmc (bad) in loope fstps sub jne lret lret popfq xchg xchg (bad) rex adc mov movabs retq adc movsb test rex.WRX (bad) lods rex.WB jae fs cltd xchg jrcxz movabs (bad) mov cmpl (bad) sub int clc out and pop pop rex.WB data16 imul xchg repz imul movabs (bad) sub xchg mov mov sarl and (bad) movabs out sbbl xchg movsl rex.WB js fisub (bad) (bad) sub movabs out jmpq xor lods lahf imull scas repz subb rex.WB movabs push movabs iret movabs out jp stos push cmp scas movabs cli data16 sub cltd sub rol fadds clc movabs or stc (bad) jp or or lahf in mov rex.WB add test sti adc cltd rex.X movabs and rex.WB (bad) cmpsb jmpq clc sub mov jle (bad) jbe jno or adc rex.WB (bad) lods jnp fwait shr out jmpq (bad) out in leaveq cmp fcoml jae or sbb lret xor jno cmp movabs mov (bad) (bad) pushq fmull xor (bad) rex.WB rex.X cld add pop retq test hlt mov shlb xchg push (bad) divb fwait loope enterq mov ffree lret pop and jmp or (bad) xchg or pop sub push mov cmp rex.WXB jmpq movsb or retq scas push push mov lock sub nop mov ja movsb je xchg movabs lods fisttp cltd pop out mov stos (bad) cmp fist pop pop xor std (bad) sti leaveq cmpsb mov (bad) cmpsl and rex.WB pop fstps rex.X and push (bad) rex.RB popfq (bad) rex.WB add xor xor fbstp int rex.WX mov push add imul push mov rorl add cld and xor add rex.WXB fbld addr32 andl sbb fcmovnbe retq push rex.WRXB mov adc add push iret rex.WB shll loope ss movsl adc fldenv sbb fimull jae rex.W xor xchg subl xchg movabs pop in xchg (bad) andb mov callq rex.WB mov jne and and rex.RB imul in sub test rex.WB (bad) (bad) and je (bad) (bad) enterq sbb mov mov cwtl (bad) imul xchg rex.WB lret data16 outsl rex.WRB addr32 data16 mov out movabs rex.WXB (bad) in pop (bad) pop repnz jp pushq in fsubs pop jle pop mov xor mov rex.WXB (bad) fs addr32 callq rex.WR pushq mov sub loope sbb pop (bad) callq pushq (bad) cli test jnp and sbb (bad) fsubrl fcomp cmp int add jo xchg (bad) fsubrs adc loopne js clc incb in (bad) movsl xchg add std enterq mov cmp rex.RB mov rex.WRB out xchg je movabs (bad) and adc stos test adc xchg lods fldt mov and mov pushq (bad) pushfq mov lret push (bad) sub repz adc xchg out rcr push pop mov rex.WXB test addr32 rex.WR xor callq fcmovu testb and xor ror push or (bad) test sub repz sub adc add rex.RXB and xor sbb (bad) adc mov jae cmp pop jl add push jge mov rclb rex.XB rex.WXB cmp test xchg sahf pop xchg adc cltd rex.RXB movb rex.B rex.WR rex.XB bnd in sub movabs cmc sub cmpsl out cld sahf stos stos push fs mov sub xchg mov jge negl out (bad) pop loopne jnp lods or xor movsb shrb (bad) mov sub (bad) fsubrs es rex.WX jl and xchg (bad) mov xor rex.RXB (bad) rex.WRXB pop xlat or stc pop sub sarb rex.WXB pushq sbb jo mov (bad) rex.RXB rex.WRB xor rex.WR (bad) sbb leaveq in (bad) and xchg and iret mov push (bad) out (bad) fcmove fisttpl or callq cli cmp cwtl and push cmpb xchg push lods movsl movabs jmpq adc cmpsl (bad) mov sbb enterq mov or rex pop and mov xchg int3 rex.W lretq (bad) rex.WXB xchg or mov rex.RB outsb add (bad) test imul cmpl retq mov cmp jg (bad) xchg clc or push scas rex.WR rex.RX sub test (bad) sub add rex.RB rex.B (bad) jrcxz popfq (bad) (bad) movabs iret and and or ror out ja adc cld int fbld sub rex.WRX shlb out or rex.XB mov sub cmpsb push adc pop adc cld mov mov xlat jmpq test leaveq pop fcomps fcmovne add adc addr32 (bad) or shl or (bad) je pop out lods mov rex.WX xor movabs mov cmp cmp clc xor sbb out movsb loop callq cmpsl xor callq (bad) (bad) in sti frstor push rex.WX mov jae mov std movabs sbb lahf loopne or (bad) jo sbb mov jbe adc push jg push outsb push imul or mov sbb test (bad) shl sbb rclb jb pop data16 jbe movabs sti nop test cmpsb pop rex.WR rex.XB (bad) xor cmpsb sbb jns cld (bad) movabs (bad) lods adc rex.W (bad) enterq je rex.X popfq sbb (bad) (bad) imul adc mov sbb fcomi (bad) sub stos lret rex.RB or sbb lret out nop sub clc gs xor int3 ficompl mov cmp nop rex.RX test imul add xchg xchg rex.WB xor rex.WRX and rex.WB add cmp movslq popfq rex.WRX sbb (bad) mull pop mov xor pop (bad) sub rex.WXB fsubrs sub xchg rex.WB fnop js mov sbb repnz or rex.RB pushfq push jnp mov rex.WX pop mov pop stos int cmp and add outsl fwait xor rex.X movabs stos jns add jnp push rex.RB data16 pop rcll rex or in xor xchg and (bad) adc (bad) sub add mov mov hlt and shlb nop jo prefetch scas mov divl test xchg rex.WR mov (bad) fsubl add pop rex.B push (bad) (bad) (bad) push adc and xor mov add sbb lahf push jb rex.WRX sub pushq outsb rex.RXB (bad) out rex.WB rex.WXB rex.WRXB rex.RB rex.WB add (bad) callq cmp mov push pushq mov sbb jns jge sub gs shll rex.RX movsl fisubr xor jo (bad) (bad) xchg stc retq cmp negl fs jmpq rex.WB fdivrs rex.RXB and or nop adc stos (bad) jns imul mov clc rex.B repz cld pavgw or callq xchg pushq lea hlt rcrb repz sub (bad) ss outsb xchg pushfq jg insb or rex.WB test (bad) (bad) movabs (bad) jbe pop (bad) mov movsl int3 gs addr32 sbb rex.W adc and loopne (bad) pop ss pop cwtl cmc jbe xorl mov int3 repnz fs sub (bad) sub callq stc (bad) (bad) outsl sbb repz rolb jno sahf sbb adc cmp gs js outsl roll mov pop vmovsd pushq and movslq in cmovns fwait rcrb add mov (bad) cmp fcmove sub sbb movabs xlat add adc xchg in retq or mov insl jo add (bad) rex.W pop sub lahf pop and pop gs loope cmpsb xchg add push cs xor mov pushq mull psraw in pushq test lret jb,pn rex.RX shlb xchg hlt outsb rex.RXB xchg rex.WB lret sub jmpq xchg movl callq rex.RX rex.WRX cmp sub (bad) sbb rex.WRXB callq callq or adc jno jo sub out rex.WRX and sbb imul sub mov (bad) jb popfq pop and (bad) mov rorl mov std jmpq add mov sarl lods sub and pop in movslq fsubrs rex.XB or repz pushq fstl xor fistpl rex.RB pop stc or insb (bad) (bad) (bad) (bad) lods add mov adc loope (bad) mov rol xchg ja rex.WB (bad) pop cmp rex.WB out cs mov (bad) (bad) add pushq repnz pop (bad) sbb enterq lahf lea push sbb rex.RX data16 (bad) sahf retq sarb jne jrcxz sti std rex.WRB mov out (bad) (bad) loopne insb or push (bad) and fldcw rclb (bad) fsubrl mov and mov mov jg (bad) pop rex.WX stos mov movsb mov mov (bad) (bad) mov add sbb nop pushq mov movabs stos (bad) rex.RB sub loope sarb iret xor and rex.RB rex.RXB push xchg ja (bad) (bad) mov rex.WB rex.X rex.R cs sub cwtl or rex.XB stc (bad) or cmp mov rex.WB imul rex.WB shrl (bad) mov cltd in movabs sbb xchg pop jns or clc (bad) adc sbb (bad) mov rex.WB (bad) (bad) jae add cmpsb adc xchg pop rex.WXB push sbb movabs rex.XB jle cmp (bad) (bad) xchg rex.WB loope adc enterq sub rex.WB (bad) cmpsb adc add sub repnz cld (bad) movl (bad) (bad) xlat rex.X fstenv mov pop (bad) test int3 sarl test pop rex.R rex.WRB fmul mov push pop test loope adc mov adc pop push outsl cmp xchg (bad) rex.WB lahf scas rex.WB pop mov push (bad) loope mov and icebp push xor mov xor addl (bad) xor in mov int mov rex.WB sbb rex.WB lods cld rex.W rex.X (bad) pop (bad) clc out and sub insl movabs or movabs lods nop or rex.WB int3 rex.WX mov rex.WB jg nop sahf (bad) jmpq out adc jae (bad) sub (bad) enterq stos repz add rex.RX push sub pop rex.RX test mov pop sbb in jns test rex.RB xchg sbb sbb (bad) pop or pop cs rex.WRB fs ds test (bad) xchg rex.RXB (bad) cmpsl jg or popfq xchg jb jno sahf adc frstor hlt sbb negl sbb adc movabs xchg (bad) mov cmc adc mov ds cltd (bad) jbe sbb mov push fisub fcomip rex.RX cmpsl (bad) addr32 pushfq or callq test js out (bad) push sti movslq rex.W rex.RXB sahf int repnz push icebp sub movabs xchg add jg add jmpq data16 leaveq jl imul retq callq rex.WRXB (bad) and sarb stc clc mov roll jg outsb rcrb jbe jb out cmpsb cmpsl xchg cmp repz (bad) mov (bad) jp (bad) mov mov pop or xchg sti add pushq (bad) push xor cmpsb mov pushq movsb pop sub clc rex.WB hlt callq rex.W (bad) out lea mov callq sbb jnp rex.WX rex.WB rex add callq mov sti mov mov cmp xor or outsb js cmp sub push (bad) rex.W leaveq test cmp rex.WB repnz lahf stc rex.RX xchg (bad) jp lods rex jns add adc push and rex.WRXB sub pop (bad) cli push pushq mov (bad) mov vpcmpgtb xor xor sub (bad) xchg imul or push cmp push cmp movslq (bad) out ja pop (bad) gs sub or sub enterq cmc fs (bad) and cmpsl or add mov in push jno adc jne lea (bad) test xchg retq push (bad) (bad) addr32 sub pop loope lret xlat rex.WB rex.WX pushq sbb jnp sbb add mov cwtl push jmp xchg (bad) callq push sbb or outsl xor adc (bad) adc xlat (bad) fsubrl out fisubl fadds xchg rex.WX and (bad) jrcxz enterq sarb (bad) int3 fadds mov mov mov xor rex.RB gs jle sub not adc (bad) mov (bad) pop rex.RXB rex.WR fcom xchg callq pushq rex rex.RX xor xchg out (bad) lods pushq rex.WXB jg leaveq sbb stos sub mov imul xor mov cmp lods fdivrs and mov push or mov in xchg or lret or jmpq mov imul jo iret std lock pushq fdivr (bad) movabs (bad) xchg sbb pop icebp or mov out (bad) hlt gs xchg (bad) push jne out in mov lock movsb mov sub out sbb push shrb sbb movabs add cmp jno test or movsb jp lods sub imul int3 sbb ficompl ja lods addr32 int mov lea roll sarq rex.RX mov lea sub mov cwtl cmpsl push mov fs mov (bad) out rclb out callq add addl or cmp cmp enterq cs mov sbb ds mov sub movslq (bad) cli subl adc stos cmp push jrcxz add ficomp test shlb pop out (bad) (bad) push pop out rex.WR (bad) movabs push shll xor or mov movabs (bad) mov rex.RX rex.B xor pop add push fcomp or adc mov int3 enterq sub (bad) mov cmp rex.WRXB (bad) cmp xchg jge rex.RX mov mov or rex.WRX jrcxz movabs mov loopne adc or cs sbb mov or lock adc sbb cmc mov out (bad) movabs (bad) lret rex.X rex.B test push test es rcrb push xchg push rex.RXB rcr rex.XB stos mov sub jl push jge sbb mov (bad) sbb (bad) mov (bad) paddq test mov pop imul mov rex.X enterq fisubr push jge nop sarb (bad) mov cmp rex.RX rex.XB xchg rex.WRXB rex.WXB leaveq movsb pop (bad) rex.WXB test rex.WRB xor mov xor jno (bad) repz (bad) lods sub pop mov rex.R pop and imul xor cwtl adc stc insl adc cmp (bad) fmuls icebp cmp movslq imul (bad) mov cmp jg mov rex.WXB pop add ficomp push jb sbb (bad) jrcxz,pn (bad) mov cmp xor cmp cld pushq add jbe or (bad) fsubrs stos push subl movsl push sub jp push (bad) fldl or (bad) mov cmpsb fsubrs (bad) pop sbb sbb (bad) out mov (bad) sbb pop rex.WXB (bad) jns sbb rex mov cld mov out rex nop loop and fstpl cmp rex mov cmp mov enterq push (bad) rex.WRXB rex.XB pop pop pushfq push (bad) push sbb sub jg insl or mov mov sbb rex.RB rex.RXB es rex.B add fld1 out push jns int3 cmp rex.RX sti jle rclb pop rex.RX and jle adc test gs mov mov push iret lret std mov cmp xor rex.WRX out rex.WX pop add sbb outsb test adc rex.B faddl xchg cmpsb add retq test sub lods xor loop sbb pop xchg int3 nop movabs lahf je (bad) pushfq clc pop or imul adc movb stos xchg movabs and add fmuls sub insb (bad) sub int movabs or mov enterw mov xchg adc pop fnop nop mov cld lret insl rorb rex.XB sub rorl movl add retq adc adc retq mov leaveq jb adc (bad) mov mov cld push xchg jmp popfq retq scas (bad) int3 stc rex.WRB cmp repnz fldenv add cmp sub bnd xorl test add (bad) enterq (bad) pop outsl lods (bad) adc rex.WXB rex (bad) icebp jne sbb or rex jrcxz pop callq adc out scas or movabs cmp xchg or cmp sub movsl add test jae mov cli jp xor sub out nopl lret rex.RB jae cmp push cmp icebp (bad) (bad) sti cmp rolb pushfq out or or (bad) rex.X addr32 int3 (bad) pushq out std lock retq cld mov test subl mov cmc pushq (bad) (bad) (bad) rex.WX (bad) lret fcomp pop cmp (bad) gs sub int or (bad) (bad) and jle pushfq clc movslq adc (bad) pop rcr mov out sub sub sti or xor out insl leaveq cmp fwait sbb xchg pextrw fdiv adc out sbb pop nop movslq lret lods mov out mov xor decb cmp ds or jno or (bad) or (bad) sahf pushfq xchg sub loop xor mov not (bad) rex.X (bad) cmpsb lahf xchg pop jle mov mov scas (bad) pop push jno rex.RB (bad) and lods rex.XB rorb cli xor scas movabs or out loopne adc negl and (bad) adcl out scas int3 (bad) jno (bad) push cmp iret cmc movsb jg push add (bad) xadd popfq adc leaveq insl jnp outsb rex.RX subl addr32 test mov add (bad) or pop rex.WX addr32 sti cmp mov (bad) or rex.RXB sub (bad) pop loope cwtl rex.WRXB mov (bad) movabs lret (bad) add push xlat pop (bad) mov (bad) (bad) adc sub sbb adc jle (bad) mov (bad) adc pop popfq sbb insl pushq cmc or rex.W push xor rex.RXB rex.WRX xor rex.B jge icebp ds (bad) rex.RX xlat pop (bad) mov stos sti cmp jmp adc rex.XB lods leaveq (bad) xchg rex.RXB (bad) mov (bad) pop (bad) movabs (bad) leaveq clc and push rex.B rex.X imul push ss mov enterq lock xchg shrl or cmp int (bad) or rex.WRX mov test xor pop cmp mov jrcxz clc orb push add xchg cmp xor sbb xchg sub cs jb sbbb or sub cmpl fimul jns mov sub loop xor out cmp (bad) lock rex.WB and jp mov rex.R rex.WB (bad) xorl push mov callq lods or std out (bad) cwtl rex.WXB adc mov int3 push and (bad) repz rex.WR movabs adc loope mov xchg jle rex.W rex.WB (bad) (bad) movslq add add push fidivl cmp je in rex.WRX rex.WB jns mov fldl pop mov xchg pop rex.WB jrcxz cmp add (bad) sub (bad) rex.WB (bad) outsl sbb fldt jmpq fcompl (bad) rex.WB rex.RX pop (bad) xchg fwait lods addr32 outsb callq jle (bad) or push sbb (bad) rex.WB lods cmp and push mov sbb rex.WB mov (bad) lret (bad) rex.WB movsl testb frstor (bad) jmpq addr32 rex.XB cli xlat xchg (bad) cld push cmc xchg (bad) rol (bad) mov add ds adc jrcxz (bad) and outsb rex.RB sbb sbb sbb add (bad) add ss push movabs (bad) mov add mov xor or or push leaveq mov sbb insb fldl test cmp pushq sub lret jb rex.WB pushfq xchg cwtl movabs mov rex.RX shl (bad) jmpq adc retq cmp (bad) push rex.WXB enterq test ud2 (bad) (bad) jb push jns push nop rcl sub push divl rex.RXB rex.RX sub add rcll rex.WXB adc je test rex.WRB sub test rolq rex.WX sub adc sbb push add mov jg je loop scas cli int3 test adc movsb jg ja fdivrs mov rex.WX push xor adc ds pop xor (bad) sahf rex.RB (bad) pushfq xor jrcxz xor movsl lahf mov lret shl in addr32 (bad) lret callq xchg lock pop in nop rex.RB rex.WX push iret loope cmpsb jge pop test mov (bad) mov mov pop rex.XB (bad) xor sbb stos rex.X out xchg push scas stc movabs pop (bad) jb jb in mov repnz rex.RX out (bad) sub test mov pushq lcall rex.B rex.RXB mov sti imul ja jg mov rolb (bad) sbb data16 jae sbbl pop xchg jg in lods rex.WB pop popfq rcll mov (bad) fmul or rex.WB or push sub rex.WRXB rex.WB xchg rex.WRX test adc mov adc icebp (bad) mov scas pop xlat xchg cmc (bad) (bad) pop cltd adc rex.R test shll rex.WB rex.RB lock xchg jnp sub mov (bad) or push rex.WB push mov push jo ja xchg (bad) push lret mov movsl (bad) ljmp (bad) push and (bad) rex.WB push pop rex.WRB or callq pop jge xor pop movabs xchg jg cmc or lods mov pushq rex.WRXB pop sarb in decl sbb popfq (bad) (bad) push push jnp (bad) (bad) int3 cs (bad) jbe (bad) (bad) mov sub jne (bad) ljmp cmp jno outsb stos mov jo sub add movabs out (bad) js lods cmp fcoml hlt add mov rex rex.RX (bad) js movsb adc mov movsb outsb adc mov or add clc (bad) mov rex.W xrelease popfq sub (bad) cld lahf or mov (bad) sub (bad) or movabs jae mov or cltd repnz mov outsl xchg testl fcmovu push rex.X stos xor mov push rex.W addr32 xchg (bad) or push add jns cld jo sbb rex.W push xchg xchg adc xchg rex.WXB xchg (bad) jbe int3 out (bad) hlt adc xor (bad) cs fldenv add (bad) rex.XB dec fsub mov rex.WX and sub jnp cmpb or cmpsl sbb (bad) (bad) in add sub cmp pop jge pop cltd iret xor retq adc jg sbb cmp push xor mov xor cli test and fs cmc jne rex.WB repnz (bad) nop lea cmp idivb out rcll sbb or test mov rex.WRX mov insl shrb mov (bad) rex.RXB sbb pop imull jrcxz mov rex jge pop (bad) cmpsl rex.WB mov out mov cmp pop cmpsb xchg sub xchg adc push and and mov mov out sub sub mov adc push xchg rex.WXB and out adc jns mov rex std callq (bad) icebp incl adc jge cmpl push int3 mov pop (bad) out push incl ja (bad) lahf (bad) (bad) or rex.WR or push pop cmp jmp mov add sub cmp (bad) movabs sbb addr32 vpcomuq js and sahf fistpl mov jmp pop (bad) sbb and (bad) pop (bad) pop imulb mov and rex.X andl cmp (bad) repnz std fistpl jns push ficomp in mov imul push adc rex.XB rex.WRXB add (bad) mov adc fcompl lods movabs iret xchg imul pop movabs add cmp rex.RX and xor (bad) push rex.WR sub imul rex.WRXB test push (bad) (bad) lret out stc hlt (bad) sbb xor sub ja pushq js fcompl (bad) (bad) rex.WB (bad) fwait loopne pop push jnp notb pushfq (bad) push (bad) rex.RX pop (bad) xor in sub int3 fist rex.RXB out adc push (bad) (bad) callq sub push cmpsl test sbb xchg jb loopne (bad) rex.WB add (bad) (bad) and xchg adcl or (bad) nop loopne lods sub and cmp rex.RXB adc rex.W rex.WB repz int leaveq cmc out push and adc movsl stc vpextrw rex.WX rorq shll data16 rex.WB cld sub movsl flds xchg rex.RX or movabs iret sub stos lcall movsl sbb xchg gs sbb cli jno es jg imul rex.B lret or rex.WB (bad) stc scas xor insl rex.WB outsl fimull pushq stos xor jo (bad) retq pop (bad) out test fistp xor (bad) jp adc stos cmp sub mov xchg rex.WB mov jge flds or vpinsrw xlat cmp add mov sub lods cwtl and (bad) xchg rex.WX (bad) repz scas xor rex.WB std pushq adc sbb hlt loop mov (bad) movabs mov sbb movabs fsubrs pop xor or or sub mov lea xchg vpandn fs mov mov (bad) mov icebp movabs cmp int clc mov rex.WRX movabs rex.RX je or sbb loopne pop jbe pop xor rex.R pop jmpq retq pushfq pushq sub addl (bad) mov adc rex.RXB rex.WX push stos and or hlt shlb mov movabs or roll rex.WB in mov (bad) (bad) andl jb (bad) add pushq nop pop movsb jl push sub (bad) int3 (bad) push (bad) jne leaveq adc retq rex.W rex.XB rex.R cld rex.WB cmc pop out pushq xor sub adcq add pushq test add (bad) push popfq pop mull rex.WB (bad) (bad) sbb cmc xchg test cld rex.WRXB addb pushq stc pop rex.WB or movslq loop or (bad) mov push sbb mov rex.WB jns mov lret mov movsl ss cwtl (bad) pop (bad) lret (bad) rex.WB xchg fs sub or push out pop and sub adc mov or cmp rex.RXB movabs rex.WB or outsb mov test es push or rex.WXB movabs retq rex.WB adc pop mov add test fst pop mov int3 out rex.WB pop (bad) jmpq rex.RXB callq cmc rex.B (bad) movslq js movabs cmpsb and addr32 xor (bad) rorl rex.RX sub in xchg xchg sahf not int3 xor mov repz movabs movsb fimul pop cwtl stos fdivl rex.WB frstor fistl jle (bad) stc retq rex.WRXB mov movabs adc xor xchg ss cmp xchg xor retq xchg scas xor in cmpsl mov rex.WB rex.WXB add jae xor outsb jae rex.WB (bad) (bad) mov cmc push sub decl icebp jns and stos hlt rex.WB xlat test pop mov rex.WRXB test sbb nop pushq gs jno sbb jo jnp or mov or sti rex.WXB cmp rol rex.WB jne rex (bad) out xchg out add sahf rex.R xchg add add fdivs stos loope cld (bad) divl (bad) cltd push rex.WRX sahf int3 cmp mov cld nop jle jmpq mov xor or mov loop sbb gs (bad) jl imul mov cwtl xchg sub cmp sbb mov rex.WRB int addr32 icebp or mov (bad) (bad) sbb add rcl rex.W testl out and mov out cmp divl mov (bad) (bad) cli or insb lret jo retq loopne int cmp not sub (bad) (bad) lret cmp (bad) (bad) xchg cltd mov rex.WB fsubrl (bad) push pushq rex.WB add fldl2e lea (bad) push jno (bad) retq cmp xchg jne icebp sub jg int xchg xchg rex.WRB rex.WX fwait and int3 imul (bad) sub leaveq stos sub adc rdmsr rex.WB repz imul add cmp rex.WRXB xor sub dec and out push rex.WX xchg int3 adc in es xor pop jno push or push scas pushq or clc movabs rex.WB repnz adc cmp jns cmp xor jrcxz xor sbb jbe cmc scas movsl (bad) lret sarb out es (bad) movabs mov (bad) (bad) imul rex.WB (bad) movabs xlat fisttp ss sub push jne rex.WRX mov rex.WB add cmp (bad) pushfq rex out shrl (bad) orl or push (bad) movsl jle and data16 mov sub xor cmp rex.X rex.WB xchg sbb retq rex.XB rex.WRX (bad) pop add or (bad) cmovae cs pop imul mov ss rex.RXB mov mov rex.WR movsb sub mov movabs int3 rex.WRX rorl rex.RXB (bad) xchg pop mov and je sub orl out movabs nop je insl imul sub jbe push clc (bad) mov jle cli hlt and xchg pop jmpq rex.R mov divb shrb pop rex.B rex.RB mov insl lock rex.WRB pop rex.RX sbb pushq scas rex.B (bad) jge rex.WRX gs rclb ja ds (bad) (bad) mov jae xchg or and retq rex.WB (bad) (bad) dec pushfq mov (bad) icebp loope ss lock jo andl mov loop retq jg cmp xor xlat (bad) mov xchg (bad) sbb mov movsb rcrl movabs js cli jne sub sbb add rorb movabs leaveq rex.WB (bad) jb (bad) sub add lret maskmovq testl (bad) mov mov mov gs rex.WB shrl pavgw (bad) push rex.WB repz mov (bad) jge addr32 int sub fistp push xchg push outsl leaveq fld mov out rex.RX adc (bad) je (bad) frstor rex.RB push movslq lods pop repnz fdivrs hlt lock xchg mov test mov xlat loope test (bad) push mov adc jg and jo lcall int xor push add mov in xchg loope mov or adc push callq rex.WB jmp ds std out rex.WB addb rex.RB mov jrcxz mov test mov movabs test xor and (bad) popfq lods rex.XB push (bad) test mov xchg pop adc (bad) rex.WB mov rorb jne sub cmp (bad) jrcxz sub rex.WB push movabs jge (bad) xchg adc rex.X mov rex.WB sarb xchg jmp cmc (bad) stos pushq es pushq rex.RXB jp jne std rex.B orb xchg add repz rex.WB in (bad) in (bad) cld rex.WB fstpl movabs (bad) lock addr32 adc (bad) cmp pop sbb std (bad) cmp cli jno rex.WRX out cmp popfq test pop mull mov pop push rex.WB (bad) jnp shrb movsb rex.WB cmc enterq push movabs (bad) (bad) jle cld cmp jns xor pop xchg add push sbb movsl mov scas stos add cmp sub test flds rex.RB fcompl or lock stos out sub sbb or pop mov stos sbb pop fisttp (bad) sub pushq or and ds pop (bad) pop and scas outsl rex.WRX or mov adc add lods (bad) pop rex.B and (bad) gs rex.W loopne jp rex.X rex.WB es and cli sbb movabs rex.WB cmp (bad) (bad) xor add add addr32 notb fstps jo mov or lret cltd cli mov rclb in fistl rex.RB sbb mov sbbl gs cmp sub (bad) insl movabs cwtl retq jo rex.XB movslq insl mov or mov mov ds rex.XB pop xor movabs (bad) mov fadds repnz add adc out pop std out (bad) (bad) lock pop outsl std jbe repz sbb jmpq mov test cs rex.B popfq xor rex.XB and xchg rex.WX xor mov enterq in cmp hlt xor (bad) sub loopne cmpsb (bad) xchg xorl sub jg je xchg sub xchg rex.WXB nop jmp mov rdtsc (bad) repz (bad) xor decl ffree loopne mov (bad) sbb cmp and cli rcl fs enterq loope sub pop jae xchg movsl push rex.RB test rex.B (bad) jg or mov (bad) movsb movabs jbe rex.WRXB rex.WRB mov data16 pop (bad) (bad) mov push lahf add add in rex.RB or (bad) sbb lea movabs xchg add cwtl pop cld mov enterq jb pushq xchg or out push jns hlt xor rex.RX int3 push (bad) popq (bad) std mov retq lret jae popfq sub (bad) (bad) cmpsb (bad) jp lret sub gs in cmp outsb jb (bad) rex.B nop stos imul rorb push push pop pop pushq scas gs or xchg push (bad) sbb jmpq or imul mov or lret rolb and rex.WRXB (bad) xor adc (bad) rex.WRXB cmp es rex.WRXB add (bad) clc int3 imull pop or rex.WXB pushfq insw pop cmp test orl sbb test repnz push rex.WRXB mov rex.WB out rex.WXB movabs xchg repnz xor (bad) mov jl callq pop add rex.WB mov loopne movsb sub xlat lret mov repnz rcrq retq out rex.WB jmpq mov adc push ja rex.WRX cmpsl in sub jmpq push jnp rex.RXB (bad) jae rex.XB pop out test rex.WB rex.WB mov sbb movabs sub rex.WB mov repz (bad) jne mov int (bad) push lock mov rex movabs pushq rex.XB jmpq cmp push scas xchg adc rex.WB mov pushfq (bad) in leaveq push (bad) in cmp mov mov out iret adc rex.WB (bad) lock (bad) rex.WXB outsl pop jbe add xchg icebp sub rex int3 rorl divb rex.WB rex.RXB adc (bad) rcl mov rex.WXB (bad) test lock ja xchg mov rex.WB addl mov jb outsb jle cltd rex.RX pop (bad) mov mov imul in sar rex.WB cmp sub sub out nop jmpq vpunpcklbw sbb movabs clc push rex.WRX js cld cmp rex.WB gs add leaveq rex.WB (bad) adc jrcxz pop push and adc fmulp pop (bad) xor movsl jrcxz in pushfq or mov lahf jno fcmovbe and movsl (bad) mov cmc sub rex.RX (bad) or push (bad) and ds cmp (bad) movslq (bad) (bad) jp sub rex.XB or xor pop (bad) or rex.WB scas lods jle mov rex.WB pop pop cmc push rex.WRX adc rex.WB mov out pushq sbb jl xor jo movabs (bad) stos movsl fwait lea rex.WB pop notb (bad) mov push jo add (bad) adc pop or (bad) jl iret jne mov mov rex.WB lea push jle rex.WB xchg je pushq or loop push rorb lods imul (bad) imul rex.WB test mov cs mov rex.RXB push vminss cmp (bad) jno (bad) pushq add int3 mov stc lods rex.WB fmul xor addr32 out out mov pop loop adc cld pop rex.WB mov outsb lret cmp out add rex.WX sub or xchg jbe cmp and (bad) rex.WRX out ja mov sahf clc (bad) cmpsl data16 rex.WB repz mov insb add rex.X rex.WX rex.WB (bad) in jo adc push addr32 or mov (bad) rex.WB cmp sub pushq sbb xchg repz xchg (bad) sbb push adc loop fldt retq fwait (bad) mov cwtl (bad) rcrb fld (bad) rex.WRX lods movsb insl (bad) sbb xchg rex.X callq fisttp movabs sbb cmc or (bad) or mov scas cmp pushq loopne decl jns jmp fisttp mov addr32 fsubr imul xchg cmp mov xchg xchg in clc sbb cmp retq sbb cmp jrcxz xchg (bad) fwait test fld repz (bad) (bad) sub or movabs mov xor cs sti (bad) enterq adc out sub mov push (bad) mov out pop lret popfq rex.WX rex.WRXB mov subl jb jp jbe enterq jmp pop cld sbb insl hlt (bad) stos jo out cltd xchg push addr32 mov imul add int3 xchg rex.XB cs add test (bad) xor push lret sub sbb jp mov sub (bad) xor rex.X cwtl xlat roll sub push push sub rex.B (bad) callq lock mov mov sbb rex.WR add (bad) rex.RXB lock rex.R rex.B roll andl push pop sub mov add roll rex.RX movabs clc sub ja xor loop and test sub sub rex.WX sub rex.B sub (bad) pop loope jne (bad) mov xchg mov push fstpt lods xorl cmp (bad) enterq mov es lods cmpsb cmp rcrl out sub lock (bad) push rex.RX xor int3 leaveq out pop popfq adc (bad) (bad) xor lods xchg outsl or or pop mov jp sbb test (bad) rex.WB (bad) sub out scas rex.WB movsl cmp add sbb jg mov and cmp test rex.RB nop rex.WB (bad) rorb pop rex.WX cmpsb push mov adc loopne (bad) (bad) (bad) sahf callq (bad) rex.WR lock cmp leaveq jb (bad) adc xchg lods xchg iret insl callq jae rex.WXB add adc adc (bad) pushq or sbb movabs hlt outsb jbe rex.WRXB pop in push add js rex.WR rex.RX xlat rex.WB (bad) shr loopne (bad) rex.WB mov mov callq nop ror loop sub cmp addb lods rex.WXB rex.WB outsb cmp ja hlt (bad) xor and xorb movabs sub (bad) movsl (bad) cmp push rex.XB jns pop push and mov (bad) cmp pop stc (bad) (bad) xor (bad) jbe sub jmpq cwtl lret sub rex.R push jl clc sbb mov jbe cli cld movsb and cmp and and mov pushfq (bad) out jge orps or orl (bad) mov (bad) jle mov outsl pushfq or test fwait callq idivl (bad) iret mov (bad) fmuls xchg and xor pop (bad) jbe rex.W lock adc rex.WB jae jrcxz jne add movslq cltd rex.B pop and cmp icebp (bad) pushq icebp pushq jno hlt movabs enterq or popfq retq xchg out clc push mov int mov icebp (bad) scas rex.WRXB rex.XB ds imul vcvtss2sd fimul fistp pop jns fwait (bad) pop (bad) (bad) rex.WX rex.WRB cs fdivrp jae pop cmp push jno xchg out cmp out and and sbb sbb xchg (bad) cmc and (bad) stc repz and in rex.WB mov xchg cmp rex rex.RB lahf (bad) rex.RX nop loop adc mov rex.WB adc mov fcmovb out (bad) push push movabs insb rorb cmp jae (bad) sub cltd cmp mov (bad) xchg (bad) fist enterq rex.RX push (bad) xor cmp callq mov or (bad) push cmp jle insl cmc mov pop (bad) rex.B or pushfq xchg push callq test (bad) callq add (bad) stos cltd jp (bad) clc xchg imul fsubrl cmp addr32 add pop and (bad) out (bad) in xchg lods andl sahf ds (bad) xchg pushfq movabs pop add pushq xchg rex.B lret cmp jmpq or movabs nop movabs (bad) loope fisttp jge test lea rex.RXB loop or adc retq rex.WX xor js xchg (bad) pop rex.RB fdivrl (bad) xlat movslq mov mov and hlt (bad) out movsl lahf pop fs xchg rex.X rex.XB jno es roll mov jg ds addr32 adc pop rex.RXB and (bad) pushfq cltd int3 lret rex.WB ss jmpq jo cmc mov push sub movslq test (bad) ja and push movsb pushq cmp or pop mov loope jnp iret push pop cmovae (bad) cmp cwtl rex.WB popfq add insl (bad) pushq movabs (bad) jnp jbe lret lea xor pop xlat sub scas movabs enterq outsl rex.WRB xor jbe (bad) movabs xor rex.WB push lret (bad) cmp sub and pushq retq lahf add movsl cltd jo imul (bad) push sub cwtl imul xchg popfq iret adc or adc mov or adc pop cltd adc stos data16 int lret movslq test (bad) xor push insb je adc pop lret rex sub (bad) (bad) enterq imul rex.WXB movabs enterq rex.XB rex.RXB rex.RX adc fsubrs addr32 add fs sub ss (bad) out stos or rex.WRB adc lods mov mov cld add and cltd xchg enterq sbb outsl xor (bad) lock jnp rex.RB movsb cli (bad) callq stc mov retq jle or scas (bad) movsl rex.WR xor pop sub js mov outsl or push jg rex.WRXB fiadd pop test fimul data16 rorl test rex.WB adc je sbb (bad) jl adc (bad) and mov jae out mov rex.WB and sbb sbb rex.WB test mov pushq rex.WRXB xchg (bad) (bad) hlt mov (bad) stos pushq mov mov add rex.XB stos mov push pop mov (bad) pushq scas xor add mov add movabs push fildll pop mov sbb (bad) int3 rex.WRX lock xchg (bad) jnp adc ror rex.WB rex.XB (bad) (bad) movslq (bad) cltd sub mov jmpq rex.WB rex.WXB mov notl mov adc (bad) or retq (bad) mov jne (bad) out jge rex.WB mov mov adc rorb movabs pop pop rorb xor stos test mov in repnz jae icebp pop rex testb jl callq or out (bad) test fwait add jnp xchg fistpl rex rex.WRX jns (bad) fwait dec movabs rcrb callq mov addr32 rex.WB stc add mov adc rex.WR rex.W mov mov mov pop (bad) mov bnd and movabs jmpq test rex.WB rex.R mov push xchg addr32 retq pop sbb movabs rcrl jbe rex.WB (bad) lock (bad) (bad) rex.WB rex adc test mov outsb sbb xchg xchg xchg lret subq lea sbb (bad) jmp (bad) loope pop (bad) jle out jno in (bad) mov jmp adc push rex (bad) mov and push movsb pop push (bad) rex.WB (bad) lea mov stc rex.RXB rex.WB lock rex.WRB fwait xchg outsl rex.WB rex.B je (bad) cmp xor add rex.WB (bad) (bad) and mov ffree stos mov stc rex.WB xchg lods sub jns (bad) adc int and xchg xchg rex.WB cmp fcomps and xchg hlt mov add test (bad) pinsrw jg jp rex.RX (bad) cmp sub push (bad) jns leaveq out js adcb cmpsl or (bad) mov sarl rex.WRXB out (bad) mov (bad) (bad) sub rex.R movsl sub andl sub rorb pop push mov outsb fldl movabs movsl loopne push imul pop cmp enterq (bad) test jo adc xchg incb fs xor pushq ffreep rex.X pop jne xchg outsl rex.W repz mov lret retq push adc sbb jns out scas scas hlt rex.X addr32 std sub sub push adc (bad) rex.WB repz fiadd lahf mov lods sub fimull (bad) (bad) movsl xchg js rex.W rex.X (bad) pop mov jrcxz sub mov jle sbb lock cmp sub mov and lahf rex.WB or retq rex.WB cmpsb and (bad) xchg add and (bad) push mov adc loope sub (bad) push pushq jp loop rex.WB push retq rex.XB int add (bad) fnop outsb mov or rex.WRB xor rex.WR repz pop rcr mov loopne lret rex.WB fcoml sbb pop add iret rex.WX (bad) rex.XB movsl mov rex.R rex.WRX addr32 jl movsl push pop icebp (bad) pop rcrl cltd (bad) out callq rex.W (bad) rex.RB pop jrcxz pop cmp cmp (bad) and loopne lret adc cmp jnp push in cmp sbb ljmp jge mov or test xchg xorl pop gs jmp xor sbb test out cmp or rex.WB mov rex.WB in (bad) add cmpsl (bad) scas pop adc mov mov mov outsl loope jnp in leaveq or clc hlt sbb ss sbb mov cltd and (bad) pushq (bad) scas rex.W movsb or imul iret lret pop xchg (bad) sub rex.WR loope iret stos add out in rex.W (bad) rex.WR push mov add jne pushq shlb (bad) and lock xorl insl out enterq imul (bad) sub outsl push rex.RB gs rcrb add sbb add subl imul in and rex.RXB lods xchg imul imul rex.RXB movabs rex.WRXB out mov (bad) rcll or mov jg jno movabs sub rex.RX push cwtl movabs rex.RX pmulhw adc mov jne (bad) cltd xchg adc repnz jl fldenv int rex ficoml mov pushq lret out (bad) shr clc loope fcoms push rex.RX cltd std fwait push xchg rex.WRX (bad) push test fcomip (bad) (bad) fcmove mov rolb rex.RXB push iret sahf rex.WB es jl xchg xor (bad) rex.WR scas sub cmp popfq add stos rex.WX push imul cmpsl jg rex.B fwait mov rex.WB jg clc std std lock xor mov sahf leaveq or xorl enterq clc cmpsb ds mov rex.WRX and mov sbb rex xor jne movabs (bad) jns sub clc xchg int jmpq movabs mov add sub test scas mov (bad) xchg movsl (bad) outsl adc xchg rex.WX sub (bad) sti add loopne movsb xchg mov sub sbb movb mov jo movabs pop add jb xor rex.XB lahf cwtl adc push rex.RX out (bad) rolb repnz or push rex.WRXB jne addr32 rex.RXB jmpq retq leaveq rex.R jl (bad) jns movabs xchg (bad) add out cli sbb (bad) xchg fcomps ucomiss xchg lret mov add rex.W add idivl es sub lods movabs scas xchg and mov rex.WB rex.WX jo out add sahf rex.WX retq fsubrs pop fldenv fild idivl test mov js out add xor xor rex.RB cmpsl (bad) fdivrl movabs push mov add cli (bad) sarl movabs pushfq cvtdq2ps scas test mov (bad) mov sbb (bad) mov push sub rex.B rex.WXB out nop outsb xor out cmp mov mov iret andnps es loope fcmove sub mov rex.X add nop rex.RB enterq rex.WRB movsl xchg push movsb cmp outsl movabs add adc ss add movabs loop sub popfq (bad) adc cs cmpsl push in ds (bad) jrcxz fnstcw mov or pop and cmpsl cmp sub ds pop mov test (bad) jbe mov mov or cmp sub std xor (bad) and cltd je (bad) sbb fistp lcall pop test enterq (bad) popq mov (bad) enterq rclb rex.W rex.WB ss pushq stos cmp rorb (bad) cli mov nop mov callq mov pop retq adc rex.WB jae retq in cltd (bad) or test (bad) test pop callq rex.X loop mov xor cmp mov pushfq hlt rex.WB mov push jo cli or sahf lret adc xchg rorl sbb mov rex.WR sub adc fisubrl repz movabs pop in (bad) add fistpl loope lret lret ss mov cli mov testl imul movslq xchg push xor addl or rex.RX fnsave retq xor scas jl subl add xor int pop add popfq fwait loopne movabs adc jnp jrcxz lea jae (bad) mov out (bad) pushq jno jrcxz mov in sub mov xor (bad) mov sbb cmp callq add mov scas pop rex.RB rex.XB sbb sbb lret xchg pop out mov outsb adc cmp loopne sub cmpsb mov cmp je cmp jg mov shrl stc mov pushq (bad) rex.RB mov movabs (bad) mov push rex.WB jp imul ja lret nop test notl push push (bad) (bad) rex.WB repz repnz addl enterq lret jno (bad) callq cmp push gs repz cmp in or sub cmp (bad) cmc jrcxz shrl or mov push jns and pop push movsb pop movabs and mov xchg sub sub cwtl clc movabs imul fsubr js (bad) mov callq xchg rex.RX rex.WB shlb rex.WB lea pushq fmull rex.WB (bad) add push sub rex.WB (bad) (bad) pop mov (bad) jbe xor mov mov rex.WB in iret (bad) or mov pop out scas jb pop sahf jne (bad) mov mov callq movabs (bad) rcll int (bad) rex.WB xchg pushq sbb movabs (bad) rex.WB movabs sti movabs add cltd cmc jmp push jne fnstenv rcll movabs xchg pushfq rex.WR mov movabs (bad) cli or mov xchg nop cmp leaveq icebp imul fcoml (bad) and rex.WB ss and rex.WB rex.WXB (bad) pop int3 lock outsl loope sbb stos (bad) rex.WB jmpq (bad) and fmul fmul and xor pushq popq sbb rex.WB cmpsb rex.WRX movsb sbb enterq sub int3 out rorq cmp cmp add fimull (bad) jo jg rex.XB mov (bad) or pop stos fiaddl cmp sub rex.WB pop jg sub add outsb in cmp jae rex.WB sar rolb lock rex.WB stos push and rex.WB js (bad) test mov movsb push invd jnp mov lret (bad) add (bad) (bad) (bad) cmpsb pop rex.WRXB nop or add cmp jg mov sub mov rex.WB ficomp gs stc (bad) clc (bad) or retq movabs or (bad) rex.WB mov add fndisi(8087 callq (bad) xchg shll (bad) lret cmp negl cltd es lods push pop sbb add lret in or movslq xor mov and jmp popfq (bad) insl fnsave decl pop jno xchg es cmpsb push scas jl rex.R (bad) jle mov rex.WB (bad) cmp movabs movabs sbbl int fisttpl push (bad) rex.RX (bad) lret (bad) mov fucomi or sub clc push movabs movsl loope (bad) movabs mov sub mov rex.WB (bad) xchg xchg and callq xchg mov (bad) out add in rex.B lea adc outsl and (bad) (bad) mov test ror (bad) adc lret stc rex.WRB fwait sub sub and test mov rex.WB out and push fnop jno loop test jl push and (bad) cmpsb rcr and iret lea jg nop add and (bad) fwait adc xlat sub sub rex.WX and ficoml lods mov rorl js idivb (bad) rex.WB and shl rolb jns addl push or (bad) pop scas rex.WB gs out pushfq pop jns push rex.XB or push nop push rcrl xchg cs xchg jne or rex.WRB pop sarb cli roll (bad) pop mov xor test sahf rex.WB iret insb add xchg movabs out add loope xchg xor rex.WB pushq rex.WX retq test add (bad) fcmovb mov in rex.WR cli cmp jrcxz rex.WB add xor rex pushq (bad) pop push jo xchg fwait mov je jrcxz rex.RB movsl scas cmp xchg add pushq (bad) and std callq add fs pushfq test jno popfq (bad) adc rex.WB push add xchg jnp retq rex.RB or mov lods (bad) add jle test in movabs push outsb fldenv movabs pop (bad) mov pop fldt push push and (bad) cld rex.WRB xor mov insl or jl rex.XB shr iret add movsb mov cmpsl rex.WB xlat xorl mov stos add xchg xor hlt outsb or ror (bad) (bad) push rex.WRB rex.W (bad) movslq push mov fcmovb mov sbb mov and fnstsw js in rex.B fisubr lret mov ss adc leaveq mov (bad) or rex.WB rex.WRXB or pop ja testq rex.WB mov test jo cltd in pop mov xor pop test pop in loop lea (bad) sti xor rex.WX mov pop pop mov retq iret rex.WXB mov rex.WB sub fnstcw imul and fild mov data16 sub add stc cmc (bad) rex.WB negl movsl addr32 (bad) mov movaps fcomp outsb rex.WRX rex.WB lods stc rex.WB xchg adc mov (bad) (bad) rex.B cmp loop adc sbb rex.WB (bad) cwtl fbld enterq xorb add test sbb rex.XB rex.WX divb push sub sub (bad) xchg sbb cmp lock loopne (bad) int3 xchg rex.WB rorb fs outsl movabs test (bad) rex.WB pop (bad) push mov movabs and jns sbb pushq rex.WXB rex.WB mov mov imulb fidivl ror jl or sbbb pushq in rex.WB fildll fwait (bad) test movslq xchg (bad) push or sub (bad) xor test pop adc rex.B (bad) fcmove or fwait mov (bad) sbb sub popfq (bad) callq or sbb (bad) xor mov pop jp mov mov pop mov int rex.WB lods enterq std cltd or (bad) mov notl xor sbb lret xchg (bad) xchg sub int3 jbe push imull ja rex.WRX fldcw (bad) pushfq rex.WR out mov rcr sbb mov or int3 (bad) cmc sub jg scas outsl callq rex.WB and mov or adc clc outsl rex.WB ja insb mov movabs fwait push (bad) popfq sub stos xchg rex.R (bad) sbb and xchg insl outsb (bad) callq fucomp rex.WX cmpsb and imul xchg xchg js mov add xor movsl pop (bad) jrcxz cmpl mov pushq or movl rex.RX sbb rorb repnz or pop outsl (bad) (bad) cmp movabs push mov rex.WRX cmp lret rex.XB movabs (bad) pop rex.XB sbb (bad) adcl pop lods push (bad) adc mov and cmp (bad) imul mov push ja pop int3 js push and ss jp rex.WB mov or xchg sub (bad) data16 rex.XB insb mov or push cmc loop pop jae adc sub lret rcrb rex.WB outsb stos mov (bad) jb rex.XB mov jo jne rex cmp pop loope imul xlat adc (bad) rex.WB (bad) lret fsubr repnz mov xchg nop stc (bad) rex.WB add jle fnop rex.WRB imul sub pop retq lahf rex.WB jl xor pop jns subq mov enterq jno add gs (bad) rex.WB cs rex.X mov xor jne sbb mov popfq rex.WB ds test push movslq jae and sbb negb (bad) xchg bswap (bad) jne fiaddl out in or adc mov (bad) clc cmc push jmpq iret callq jns xchg jnp rex.WB fwait rex.WRB xor adc and jg xchg (bad) xlat and mov lret loopne pop or addb int3 mov (bad) enterq pop mov (bad) rex.RX test (bad) nop out pop mov rex.WRXB sub imul enterq cmp fstpt cmp sub sbb sbb (bad) sub gs loop mov xlat outsb jmp rex.XB sub mov rex.WB or mov mov jne imul test js cli rex.RB and test loop sbb xchg lret and rex.WB mov out (bad) jp jo (bad) fst imul cmpsb and movslq push rex.WB cs insb sbb pop push mov stc pop rex.B or sub jp rex.WB (bad) mov stc jno js decb xchg rex.WB mov divb jne xchg xor (bad) rex.WB rex.X pushfq rex.WXB and (bad) movabs mov rex.WB or rex.WR mov movslq cs (bad) fdivs testl imul sub jnp movsb xor rex.XB and xchg and fcmovnu mov sub callq (bad) rex.WR (bad) jle (bad) callq jns xor adc pop sbb adc (bad) retq loopne mov hlt lock callq lods icebp out xchg jbe and fmuls mov jmpq pushq mov std push jmpq rex.X rex.WX rex.WR test rex.X xor fiadd pushq cwtl sub clc in nop jns sahf ss nop cld jbe (bad) rex.WRXB test push adc jb cmpsb adc rex.WB data16 stos test fnsave rex.WRB cmp retq cmp sbb shlb fsubl xor mov mov xor push adc loop jns xor out adc mov or rex lea mov icebp jb (bad) fbld (bad) rex.R rex.XB mov sbb fs scas and out xchg rex.RX push out mov movabs cmp (bad) test pop or xor fcoms mov add lret insl push sub ficoml mov sbb lret pop fwait mov rex.WX insb add leaveq rex.WRB sbb scas cmp xor add pop mov jg push add rex sub push in xchg jg jg xchg gs movslq xchg mov adc (bad) mov rex jne cwtl xchg or xchg movabs (bad) outsl (bad) rex.WRXB rex.RB fsubrs adc test mov lahf movb mov mov jnp cld sbb test jle rex.W ds testl (bad) movabs jg mov (bad) (bad) rex.WB addr32 sbb pushfq push enterq or movsl fistpll (bad) repnz out jb adc sub mov in (bad) or test icebp (bad) mov stos pop js push and popfq (bad) fsubs movabs retq rex.XB or lahf (bad) scas adc (bad) (bad) cmpsl add lods adc sub loopne sub (bad) (bad) sbb lods mov or xchg int (bad) fidiv movslq stc ss pop rex.XB pop pop mov jne rex int or xlat push (bad) cltd js push pop xchg gs gs fimull loopne mov subl imul notb rex.WB movsb sbb xchg in gs pop push cmp lock sub pop (bad) loope test js orb adc rex.RX es mov sub cmp xor xchg and jg (bad) mov in rex.WB ss out fisubrl movsb in jle (bad) xor jmpq icebp xchg adc icebp test movslq mov (bad) sub xor movabs cmpsb data16 and orb (bad) clc xchg jg push pushq mov seta push mov xchg cmp mov stos rex.WRXB or pop rex.WX shlb rex.WRXB xchg rex.WR rex.WX add stc push stc mov cmpsl (bad) rex.WRXB sub callq fidiv cmp mov (bad) iret scas rex.XB out in mov add (bad) pushfq and lods pop jg cld lahf xor jmp rex.W xor rex.WRX rolb adc push rex out fildll sub rex.RB push fstl cwtl hlt insl repnz leaveq sub (bad) cltd add jb or repnz push cmp xor sbb lods and cmp int3 rol enterq jne mov in sub std mov (bad) mov push rex.R mov test sub sub loope jb rex.X fs rex.R jbe or fsubr enterq push xlat lea addr32 mov stos push lret push (bad) jle in std movsl sbb pop out insb sub rex.XB imul sbb movabs mov and lret icebp je callq (bad) (bad) (bad) rex.WB sbb rex.WRX jrcxz and rol cld rex.WB fcoml sub lret (bad) rex.WB sbb rex.WB int movabs rex.WRB shl hlt (bad) pushq js push scas pop mov lret ds or rex.WB (bad) lret iret fnstsw adc lods rorb rex.WB rex.B pop rex.WRB out xchg movabs and callq stos mov repnz rex.WB jbe movslq es and std and and test sbb fcom mov stc gs rex.WB es rex.WR add stos movabs in test (bad) rex.WRX shrl adc sahf rex.RB push sub mov and rex.WB jle (bad) sti jae subb and xor xor loopne mov jno sub cmp out rex.WB and (bad) or cmp rex.WRB rex.WR rex.WB and mov mov clc adc add and rex.WR cwtl shrl pop loop lret (bad) xor cltd idiv pop and mov loop add and sub mov cmp cmovb cmp hlt ds callq rex.RB mov sbb mov sbb adc rex.XB (bad) out sub jp rex.WRXB xchg pop mov cmpsb sub scas mov orl enterq roll or jno insb xchg jbe rex.WB rex.X (bad) movabs xchg mov mov clc (bad) (bad) (bad) mov outsb push rex.WB mov js jg add test or mov and repnz mov add movslq movabs rex.WRXB mov and out adc rex.RB pop (bad) sub push retq cmpsb rex.WX rex.W pop rex.WB es or xchg test rex.WB rex.XB repnz mov (bad) cmp movslq lret rex.WB xchg push insl rex.WB (bad) xor xor sub push fisubr jmpq add retq jrcxz rex.WB cmpsl push (bad) fmuls xor (bad) and rex.WB (bad) pop add cmp or imul push stos xor rex.RB mov scas cmp (bad) push adc sub outsl mov push shlb jrcxz jbe xlat mov (bad) (bad) fdiv rex.WRXB mov cmp jle (bad) repnz movabs cld lahf and (bad) movslq adc stos and enterq sub push (bad) movsl or jg jnp enterq (bad) rex.WB pop je push (bad) adc retq xchg pop rex.WX jno or jnp mov stos sbb test and pop push rep (bad) xchg jle mov (bad) pop (bad) sbb mov jge int3 movsw adc jno xchg pushq clc in xlat movabs repnz sti fadd out adc lods rex.W fcomip lods lahf movabs (bad) sub adc pushq rex.WXB pcmpeqd int3 (bad) jge mov xor sub fadds test rorb jae sub insl rex.RXB rex.RB or (bad) rex.XB (bad) fstpl sahf lret push adc or xchg mov (bad) pop icebp xchg pop rex.WR (bad) outsb mov mov je (bad) movabs sub repz (bad) or xchg sub scas cmp jo rex.RX movabs pop push cld pminub enterq mov push in xchg cld in lods pop rcrl sti popfq push lahf mov xchg rex.WXB sbbb xchg adc rex.WB cmpsl mov ss js (bad) fiaddl rex.WB sub push movsl or int mov callq xchg leaveq pop mov rorl rex.W rex.WRXB lods rex.X jnp rex.B shll iret lods pop push jo pop pop (bad) rex.WX (bad) mov test (bad) movsb pushq fist int3 or or xchg push rolb pop push data16 movabs jnp (bad) jae rex.WRX xchg mov out rolb jrcxz cmc scas rex.X sub ss stc mov (bad) mov cli jns cmpsb mov rex.WB insb jge cmp outsb rex.WB lret xlat loope pushq jge mov and out xor rex.WXB setno add jg jb out gs xor insl rex.WB jae,pn movsl rex.R retq pop lods jl sub sahf pop andnps lea movslq (bad) rex.WXB pop callq sbb and faddp imull sti rex.WB in (bad) cmp pop mov and stos jmp rex.WB stc enterq rorb mov cmp icebp (bad) rex.WB (bad) xor push and xlat in rex.WRXB lock cmpsl xor rex.WB push adc fldln2 cwtl xchg (bad) (bad) pop xor (bad) or jns adcl adc repz movabs xlat push push xor loop pop pop jnp pop xor pop mov pushq xchg jo sahf add rex.RX rex.WB (bad) xchg mov iret push or add in and sti in loop callq fidivl xor or callq xor (bad) rex.RXB mov (bad) rex.B callq repz cld jnp adc fidivr adc mov (bad) (bad) (bad) xor pop repz rex.RX mov (bad) sub push imul enterq rex.X xchg mov sub movabs pop xor sub jg or fst movsb cs push push clc lahf test je or (bad) (bad) mov sbb mov out bnd imul or out or repz icebp mov pop and (bad) lahf mov add push rex.WB xchg movl (bad) clc pop rep retq and loop cmp leaveq rex.WB fildll rcll mov (bad) pushq add push enterq out and jne jne movabs xchg and cwtl jae rex.RXB mov pop cmp mov sti or add cli (bad) gs mov lods rex.RB lods jns stc callq scas test (bad) cmp pop sub (bad) or jae sbb sbb adc (bad) xor mov rex.RX rex.XB insb (bad) (bad) fldl mov mov lods mov pop (bad) (bad) ffreep pop and rex.WRX lret pushq rex.RXB nop ja and (bad) push cltd imul add fsubrs lret pushq pop jmpq cmc xor lret push int3 adc rex.RX rex.XB rex.RXB (bad) pop fstps mov cmp push xchg rex.RX fnstenv movabs or ss add movl cmp cmc jo push movabs (bad) xchg xchg xor in mov lock (bad) (bad) imul test pushq pop xor (bad) push rex.RB test sub rex.B (bad) test jmpq (bad) movabs or (bad) pop shrl and iret xchg loope mov or (bad) rex.RB jmp (bad) loop out (bad) rex.RX xor movabs rex.WR repnz or and xor mov (bad) pushfq or fildl repz enterq mov sub lcall xor rex.WRB rcrb and push (bad) rex.RX or mov ror push mov imul xor rex.WB or push mov lcall rex.WB shl fstpl movabs enterq std cltd cmpsb in jns (bad) rex.WX retq rex.WB adc (bad) mov (bad) push (bad) cmp rex.WB cmp add fldt iret or cld push cmc movsb jge cmpsb movabs or xchg mov (bad) cmp out icebp imul jl push rex.X (bad) ja xchg jmpq outsb movabs lret sub sbb movabs (bad) xchg and pop fs jns pushq cwtl rex.W addr32 pop in mov lock rex.B cmpsl rex.WB cmp (bad) rex.WRX add pushq (bad) rex.WB cmp rex.XB (bad) pushq adc (bad) and rex.WB rex.XB sbb pop movabs xor jno pop cltd js (bad) jnp (bad) addr32 rex.RXB js rex.WB xor cmpsl jge stos rex.WB je mov lret cmpsl and push mov adc cmpsl (bad) (bad) cmp (bad) rex.WB jb leaveq xchg add (bad) movabs (bad) sub shl rex.WB and (bad) xchg add rex.RX mov adc and fistp adc mov int3 adc (bad) rex.WB sti xor fadd sahf jno insb rex adc cmp addl adc addr32 jmp xor (bad) js push rex.WRB movsl mov ja cltd sbb fs or movabs (bad) mov xchg int3 (bad) (bad) xor loopne rex.WB repz or popfq insl add jmp (bad) (bad) jnp sti push scas sbb insb mov movsl scas out rex.WB fdivl push and or rex.RXB sbb scas lock push sbb (bad) jns movslq sbb xchg adc rorb xor sbb jns fnsave add movabs ja pop sbb push pushq (bad) and rex.WRX pop jne rorl fimull test outsb cmpsb (bad) jmp fnstenv xchg lret in iret ja pushq pop (bad) push pop (bad) movsb (bad) callq mov rex.WRB lahf cltd push jmpq push fisttpl js jbe adc sbb cli rex.WRXB rex.WB (bad) jge mov movslq (bad) rorb cmp pushq (bad) lret rex.W ss adc subl movsb xchg adc fadds (bad) rex.R lea mov andl outsb pop lahf cmp fisubr in (bad) out push (bad) int3 xchg rex.X pop xchg je (bad) movsb (bad) rex.WB (bad) ds leaveq jbe mov jrcxz (bad) pop rex.WB mov (bad) mov cmp (bad) mov fwait lock imul rex.WB movabs jl rex.XB imul rex.WB (bad) stos mov rex.WB fldl2e fimul (bad) cmp (bad) rex.B shlb push rex.WB stos stc or mov cmp sub out cs out xlat fidiv sub add cmpl pop enterq test xor push and fcmovu sub xor (bad) jl jmpq leaveq xor cltd retq add rex.RXB jb pop pushfq stos andl push sub fdivrs lret loop add sub scas rex.WRXB rex.R (bad) rex.X or (bad) cmp xor movsl mov (bad) retq push ss add outsb (bad) push addr32 sub cmp cmp (bad) jns cli sbb stc hlt jbe sub roll fdivp (bad) add enterq xchg (bad) leaveq paddw rex.WB mov sub lahf pushq cld stos in leaveq retq sub (bad) jle mov rex.WRXB testb jg or sub subl or mov mov or rcrl movslq cmc mov lahf or idivl insl iret rex.X mov scas leaveq (bad) xor repnz cmpsl in movsb movabs and add push insb rex.W faddp pop mov fcoms callq ja sub jmp incl or cmp rex.RB rex.RB adc cmp cmovne fisub rex.R jno enterq lods sub out rex.WR jno fcmovnb pop (bad) sbb sahf mov or shrb sbbl rex.WX xchg stc cmc rex.B push adc std xor loope (bad) je popfq movabs (bad) cld or fs retq movabs xchg sub xchg js xlat jp push mov jae (bad) jg pop pop or and cmpsl imul fs (bad) jae test (bad) out sub mov negb loopne jp and sub and iret jne (bad) imul rorb mov gs rex.XB outsl xchg int rex.WB rex.RXB add sbb (bad) testq rex.WB mov ljmp or (bad) jae (bad) pop sub rex.R loope,pt movabs push (bad) rex.WXB lahf sub or or loopne rex.WRX jno push movsb xchg retq rex.WB xor (bad) xor push xchg xchg xlat jnp sbb fcoms int jns rex.WB jno sub pop adc and cmp leaveq xor imul (bad) insl rex rex.WB add sub sbb push js movabs and out jbe (bad) fdivrs (bad) rex.WB or and scas add adc sbb jrcxz adc retq mov ds push (bad) sub jns stos mov mov nop rex.WB (bad) sbb rex.WB add add out std rex.WB mov and repz rex.RB (bad) in or pop stos int retq add in rex.B or callq fistp cmpsl bt or pushq jne test iret xor mov xchg jg fadds cmp vmovapd rex.WR pop or sub (bad) mov or rex.R rex.WB or or rex.WB fnstcw or add loop mov (bad) pushq push push int3 jb mov imul xor movslq sbb (bad) xlat ja mov imul retq push pop xchg pop movslq pop xchg mov mov jg fisttpll xor (bad) fldl xchg sub xchg (bad) data16 pushfq mov rcrb pop cmp fwait je sub (bad) mov sbb sub (bad) adc lock push mov push sub xchg adc sbb jge jns mov rex.WR mov es lahf xchg and callq icebp rex.WB add mov push callq jnp test imul (bad) rex.WB icebp jmp jb fcomp cwtl rex.WB div push (bad) push xlat or pop mov rex.WRXB rex.WB shll fdivr sub add push xchg mov movb sub addr32 sub fisttp adc rex.WB int3 cmc scas cld popfq mov xchg sbb push cwtl lock pop and rex.WXB loopne cmp xchg insb ljmp packsswb cld mov or (bad) add pop and cmp (bad) lea jp push sti sub xchg pop and vunpcklps cltd rex.WB cli pop (bad) push mov pushfq sbb rex.RX or test mov js jns mov stos clc xchg insl (bad) rex.WB cmp push test xchg rex.WB (bad) loopne push and imul rex.XB ds and loop clc movabs xchg rex.WRX fcmovnbe nop rex.WB icebp jb cmpsb rex.XB and loop xor ficomp xchg xlat push rex.WB test hlt cmp loop scas insb subl addr32 test fnstcw mov push movsl xor mov insl (bad) pop rex.WB xor pushfq and add rex.X xor cmpsb fucom movabs or popfq test loopne rex.W cmp jbe and pushq pop test out test push in lret pushq jmpq rex.RXB movsb movsl ss (bad) lahf add movsl andl faddl movabs mov jnp movabs cmpsl jns sub int fcmovnb scas sbb movsl pop (bad) pop push adc nopl lret sbb (bad) jmpq mov jle scas (bad) (bad) sub or push xchg sarl movapd and jge mov shrb rex mov cmp cwtl movabs rex.RXB sub rex.XB rex.R loopne mov rex.WB ficompl mov rex.RX rex.WB std (bad) adc xchg mov lret cld movabs rex.WB cmp mov fxam (bad) rex.WB int or rex.WB cvtdq2ps in rex.WB outsb adc lods mov mov jle sbb xor xor or incq sbb callq (bad) push and movabs sub je (bad) xchg xchg lret test mov jne rex.WB imul sahf rex.WRXB (bad) rex.RB xlat (bad) sub movsb mov mov clc jb mov shrb lods pop pushq repz pushq rcl stc (bad) xchg xlat rcl (bad) jp jo loopne sub sahf hlt popfq test rorb add pop adc rex.WRB ss or nop fistl cmp mov cmp push rex.WR xor js add rex.WB in fdivrs rex.WB es (bad) sub mov rex.WB addl xor outsl xchg movslq popfq movsb (bad) (bad) sahf (bad) sbb sub gs retq rex.WB je imul xor and sbb rex.WB cmp jnp push pop xchg jmp adc cmp retq insl xor sub jo scas rex rex.RX and xor jo addb adc mov fcomps jbe adc or popfq jle mov add push pop decl addr32 repnz mov out xchg mov scas add movabs loopne ja adc xchg (bad) sti jmpq (bad) cmc mov mov rex.RB test and xchg cmp push cmp cmpsl xchg xchg mov xchg and imul addr32 (bad) repz add jno movslq pop rex.RX push xor pop xchg test sub movsb pop out jno sarb out test lods movabs pushfq push xlat mov test add (bad) sub paddusb (bad) sbb (bad) or insb pop roll (bad) sbb sbbl out ds adc stos rex outsb lea pop fistpll (bad) cmp mov (bad) push or rex.WB xchg add out jge je sub or movabs (bad) cwtl or (bad) stos pop sbb cs lcall cmp sub pop add adc loope add retq test stos outsl pop in cmpsl rex.WR loop retq xchg sub (bad) rex.WRX idiv scas rex.WB (bad) sti cmp jae (bad) jns (bad) rex.WB fwait pop pop xor mov scas jns (bad) sti rcrb je sbb cmp lods mov adc rex and (bad) fisttpl pushq jrcxz (bad) sub fs mov sarb (bad) movabs jno lea addl jge push mov rex.WRB mov sub push sub hlt rex.RX jne es rex.RB out sub cmpb lods movabs cmp jne insb push sbb outsl mov rex.WB rex.R pop fistp xchg enterq push (bad) sti out rex.WB in out imul mov or imull fs push xchg pop mov xchg add jne adc mov ficoml cmp scas loope rex.WB (bad) jge (bad) pop scas or (bad) pop xchg gs add mov add movsl adc rex.WB mov mov (bad) or rex.WB xchg jb vmwrite cwtl rex.WB cltd lods nop or or test mov cmp pop lret lea out add sahf pop xlat movsb jno sbb mov mov xchg mov pushq and rex rex.RB rex.WX stc roll mov xchg xchg rex.WB ss jo adc test data16 outsl pop xor imul sub ffree rex.WXB xor andb sbb fadd scas test adc pop (bad) callq add mov rcrb cmp lea stos sbb in int pop or cwtl rex.RXB fisttpl sbb stos xor insl add sub cmp outsb (bad) (bad) (bad) int3 rex.XB mov imul (bad) (bad) mov xchg addb jge rex.W fildll out insl (bad) and (bad) fdivrs and loop sbb jle out movslq int test and rex.WRX movsl xchg popfq rex.WXB (bad) fwait (bad) rex.XB scas rex.RX mov stc jb callq push mov sbb jae stos lret add lea (bad) or enterq jns pop pop cmp movabs sti xor or (bad) jb or movabs jne mov test xor pop rex.WB insl sbb rex.WB std (bad) rex.WRXB rorl repnz (bad) xor sbb jle movsb sti push sbb mov insb cmp pop outsl (bad) sub mov lret lret and pushq adc mov (bad) outsl imul movsl (bad) rol push fldt movabs cmp pop mov mov or loopne (bad) pop push lahf add ror add cltd sbb mov rex.B xor rex.WXB add callq jne push cld or cmp jrcxz adc pushfq jmpq shll ds jmp push rex.X sbb sbb fidivl es rorb (bad) rex.WB or and int3 pushq mov mov adc jg test mov and mov push rex.WR (bad) imul loop notl (bad) cmp sbb movabs rex.WB adc jg callq sub cli rex.WRX in jns insl jnp mov xchg mov cmp pop sub cmpsb sub cs and (bad) mov movsl sub js in sbb int lret sub cmp movslq (bad) xchg push movsb sbb lret callq push enterq (bad) out jl push mov callq (bad) movabs movsl jge rex.WB (bad) (bad) fwait or callq cmp add mov fstpt sti rex.WB cmp push (bad) push (bad) and cltd mov ror xor pop jmp test adc and jns movabs ss int3 jb (bad) pop and stc mov (bad) rex.WB cmp pop (bad) jno movabs mov gs sbb push sub (bad) (bad) or (bad) mov cmp add loopne jmpq out cmpb movsl (bad) vmulps test push or rex.WXB rex.R jne jbe (bad) rex.RX xlat loopne stc rex.WB fdivr jae rex.WXB pushq xor test jge xchg stos (bad) pop cmp rex.WB cmc (bad) xchg sbb movsl or std rex.WB xchg mov in or outsb jb xchg rex.RX jmp (bad) rex.WB push sub cmp rex.RB out or int3 rex.RX (bad) mov (bad) mov (bad) rex.XB jae xchg xchg rex.R rex.WXB lea div or movabs push sub rex.WB stc retq rex.WXB rcpps mov pop xchg xchg xchg rex.WB adc or rex.W gs rex.WB mov fist rex.WB rex.WX rex.WRX and cmc vpcmpeqw add cmpsl test jo (bad) jno rex.W jbe movabs cs mov cwtl sub fmull lods out rex.WXB mov sbb pushq or mov jp sbb mov pop (bad) movabs fisubr test (bad) cmp xor mov cs or mov movabs pop enterq in loope xchg push testl movabs outsl test je callq mov push rex.WR data16 mov fs sbb rcrb rex.RXB add and test lods addl jp push cmp mov xchg hlt pop (bad) jnp xchg (bad) push or (bad) ss rex.WB in xchg orl mov rex.WB xchg (bad) mov imul sub fisubrl rex.R rex.WB push lea sbb sbb mov add mulps popfq pop out mov mov rex.WX mov mov jmpq mul (bad) (bad) sbb (bad) rex.WB es and (bad) sub rex.WXB rex.WRX and xchg test fs pushq mov fmuls push test (bad) retq rex.WRX xchg es sub rex.WB jg jrcxz lods (bad) dec and mov push int pop (bad) rex.RX insl add push pop rex.XB mov push lret pop and pop push cmp (bad) roll rex or mov mov movabs jnp (bad) sbb (bad) lahf (bad) cli and jle (bad) cltd in rex.WB pop (bad) rex.WR sti (bad) test or mov pop push movabs sub repnz rcrb mov add fcmovb jrcxz push cmc (bad) rex.WB (bad) xchg jmpq cli test in add out push cmp sbb (bad) cmpsb subb addr32 add outsl pop cli cmp insb stos (bad) mov jns sbb lods sbb xchg loopne sbb popfq rex.XB mov or rex.XB es rex.WR icebp mov clc (bad) rex.R rex.WB ss cltd addr32 xchg test rex.RB add mov mov stos sbb xchg xchg fcoml or or or flds rex.R (bad) cmp (bad) shlb rex.WRX out pop (bad) adc rex.RX and jo outsl mov orb rex.WB or rex.WRX rex.WB ss xchg movabs in pop nop xor cmp movabs (bad) xchg (bad) jae sub pop (bad) stos int retq (bad) hlt outsb pushq shrb out pushfq pop mull ss cmpsb cmp scas rex.WR rex.WX (bad) cmc mov xor iret and fimull fwait and add adc (bad) rex.WX rex.X shll xor rex.WB mov (bad) fwait mov insl rol xchg (bad) or pushq and xchg (bad) sub xchg int3 cmp (bad) rex.WB jrcxz int (bad) and ds push mov lods movabs pushq rex.WB fimull mov xchg loope jb cmp jle sub rex.WB repz enterq (bad) (bad) rex.WB lods retq rex.RB loope out or rex.X (bad) cli add (bad) ficompl push cmpsl loopne and out lret push mov rex.WB rex.WX pop sbb fsubr mov repz rex.WB jne pop rex.WR mov lret lahf rex.R (bad) and or add movsb pop scas and mov cmp out xchg xchg ljmp mov out (bad) int3 fadds mov adc push mov (bad) rex.B fcmovu (bad) xchg retq addr32 js or push rex.B (bad) sar sub enterq jae movl nop push add (bad) jno stc orl mov adc adc out rex.WRB or mov outsb or (bad) jrcxz test outsb (bad) cmp push mov xchg add (bad) cmovp mov test sub js jp pop xchg cmp rex.W fs scas push mov xor leaveq rex.WR push sahf testl stc lods (bad) int stc rorb test movabs (bad) sbb in xadd sub out xchg addr32 in idiv clc rex.WR test (bad) xchg (bad) stos (bad) callq and or retq mov gs cs mov fidivl imul movabs and (bad) lock push sbb pop lret rex.RB test fild (bad) in (bad) adc js rex.WXB rolb mov es pop std (bad) sub rex.WRX and or enterq mov jae adc push cwtl stc pop sbb xor rex.RXB xor mov sub out or push (bad) rex.RB movl add (bad) xor adc add add mov jnp and sub stos xor (bad) fwait rcll (bad) (bad) in outsl imul (bad) sub jo pop out add callq scas (bad) stos verw push addr32 lock std sti enterq icebp repnz xor add (bad) shrb fwait mov mov jnp xor adc insl mov int or sbb fistp in lods out imul gs and sbb xor rex.WB jne stos xlat adc rex.WB sbb callq push fwait push test jp jp lret test cmp sub callq push shl pop cmp repz xchg push stc fsubl rex.X clc rex.B mov xchg push pushq jl jrcxz or out cltd jb stos movabs adc sbb xchg insb jmp iret rex.WRXB lods rorb and rex.WB cltd movsl jb add pop and push test mov xchg jne stos (bad) stos pop jmp add xor sub rex.WXB rex.WB mov rex.XB mov in rex.WB lods cmpb and sbb push rex.WRXB ss jae and or movabs sbb movsl cmp cmpq xchg xchg pop rex.WR sub movsl lock add enterq jne rex.X (bad) rex.WB cmp mov jle rex.WXB insl popfq (bad) sbb push cwtl xor test (bad) rex.WX rex.WRB addr32 cltd pop loope movabs shr rex.WB jl mov and (bad) (bad) mov or in out mulb imul out cld (bad) or xrelease pop cmp test rex.XB cwtl xchg rex.WB fldt clc repnz pop rex.WRX cmp callq cld ffree and sbb jle pop adc sub fidivrl (bad) pop push lret scas fsubr insb data16 mov iret or out ficoml movabs subl rex.WXB fidivl (bad) mov jns movslq cmc wbinvd movsb rex.RX (bad) fadd mov pop xchg cmc push push push or movabs popfq pop in rex.WB movslq (bad) adc test (bad) pop repnz rex.WRB rex ds jne shr (bad) pushq fisub or or lahf adc rex.WB (bad) adc push callq rex.WXB lock adc retq (bad) movsb addr32 xchg xor rex.WRB test out out fisubl int3 fildll mov adc (bad) adc rex.WX sbb callq test sbb jmpq and insb push jns rex.WB lret (bad) rex.WB rex.R int rex.WR (bad) out hlt add pop mov lods sbb rex.WB (bad) jge callq (bad) clc (bad) movabs or push js movslq xchg (bad) imul jmpq movabs xchg xchg (bad) xor rex.R sti pop adc xor (bad) push int sbb xchg mov rex.WB rex.WRXB sti rex.X callq mov push sub sub cli push (bad) push rex.WB mov pushq loop jmpq rex.WB (bad) mov mov xor pop cmp stos xchg rex.WB fs fwait insb rex.WXB rex.R lahf push push movsb in or retq sub out xlat (bad) bnd jp push cmp iret leaveq jl jmpq std cmp or rex.XB cli rex.WB gs (bad) pushq sbb rex.WX jmpq xor mov jrcxz push sbb cltd or rex.WB rex hlt (bad) (bad) adc lahf jle cld pop mov rex.WB clc mov (bad) lret mov xchg push rep movabs sub cwtl cmp stos orl sub lods mov sub (bad) gs rex.RB xchg enterq rex.WB xchg mov (bad) rex.WB rex.WRX es adc in push sub outsl xor jg sub jmpq scas leaveq (bad) rex.WB rex.WX mov (bad) jns rex.WB push cmpsl (bad) out sbb mov xchg xchg xorb and movabs ljmp nop (bad) mov push mov sarb fisttp repz lods mov xchg mov pop (bad) in (bad) rol xor imul jo mov (bad) pop rex.WB cmpsl insb rex.WR rex.WB (bad) movabs pop subl xor out sbb imul add xor add in mov push or idiv in lods mov cli rex.RXB rex.RX sub (bad) mov and rex.WB retq fcmove out mov xchg pushq mov adc mov hlt rex.WRXB outsl rex.WB loope insl (bad) mov pushq xlat mov rex.WB rcrl in rex.WRX hlt (bad) xchg (bad) rex.XB pop (bad) lahf sub (bad) outsl lret pop mov je cmpsb (bad) jmp jp pushq (bad) lods stc cltd mov xor push adc xlat (bad) stos std mov xchg (bad) insl pop sub out pop xchg jg rex.B rex.R rex.WX rex.WB outsb sub xor movsl test and orb jbe jmpq rex.WB rex.XB mov or lret (bad) push mov scas callq (bad) movabs add rex.X in cmp (bad) (bad) xchg add lock loop callq ja push cmc fwait xchg rex.WB std cmpsl imul or adc (bad) (bad) clc test iret jl push rex.X enterq (bad) push rex.WRB pushfq sahf sbb callq sti decb test cld jmpq mov adc (bad) or cmpsl fistl rex.WXB rex.WR rex.WB rorb movl icebp mov and int scas movslq xchg push loopne adc int (bad) imul lret rex.WRB pop mov mov mov enterq and sbb or xchg jp lods adc rex.RX xchg movsb add cmpsb rex.RX movabs cmc movsl rex.RB rex.W icebp movslq lahf rex.RXB cmpsl or jne (bad) sub and and push cltd or cmpsl mov cmp outsl xor cltd gs xchg lret lods push cli addr32 add in (bad) imul cmp push pop test mov cli (bad) sub out (bad) (bad) sub xor mov sub add test addr32 lahf data16 rex.WB loopne jl jle xchg xor mov push cmc add and mov (bad) icebp sarl xchg xchg rex.WB jo (bad) jnp push or rex.WXB adc cmp xlat ss add pushq xchg pop rex.WRX iret jne psubb jno push loopne mov movslq sub xacquire out sbb pop adc xlat sub rex.RXB rex.B pop (bad) mov push movsl xchg (bad) (bad) mov pop out movabs jp pop rex.WR rex.WXB rex.WB addps pop rex.WB cli fisubrl mov pushq push push leaveq outsb lret cwtl pushq subb mov pop data16 and movsl rex.W pop flds mov xor sbb jae movabs add rcrl leaveq add pushq std fimull jmpq lods retq movabs test push pop loop mov out fisttpll fisubl cld es sub and ss (bad) js cwtl mov clc (bad) in (bad) pop incl mov rex.WB insb loopne adc mov mov (bad) sbb mull rex.WB cmp pushfq (bad) xchg adc sbb callq test sub jmp rex.XB movsl sub movslq movslq (bad) enterq rex.X (bad) movslq (bad) xor xchg iret lret xlat fs imulb mov jno cld mov or fistl ds and imul pushq mov cltd mov sbb mov lods iret movabs jge pushfq jle cs insl hlt add movabs adc rex pop fiaddl rex.RXB rex.X rex.WRX rex.WR xor xchg mov movabs test sub mov leaveq or sub sahf cmp rex.WRX rex or rex.WRX push std cmp in (bad) data16 and xor repnz (bad) retq (bad) rcrl xor cmp ss mov repz (bad) sbb cmpsl movabs cmp rex enterq enterq rex.XB scas imul (bad) (bad) (bad) addr32 adc insl scas rex pushq push callq (bad) pop test push orl je sub xor pop mov movabs mov and in lock rex.WR mov (bad) xchg xor (bad) push rex.WB mov push xchg cli std rex.WB (bad) mov pushq es leaveq sub rcrl (bad) sti xchg pop test pop mov in insl (bad) iret rex.WRXB sub ss mov out decb xor pop insb sbb or lret mov adc cmp rex.WB push mov add xor rex.WB or or outsb rex.WRB movabs rex.W shll or (bad) mov std (bad) rex.WB rex.WXB push rolb sub xor adc (bad) push movabs (bad) adc (bad) push (bad) out mov (bad) test rex.WB rex.X sti loop sub cltd ja cmpsl pushq lods jns push (bad) sub cmp (bad) rex.WB mov (bad) fisubr retq je movabs callq (bad) jle loopne adc jp pop (bad) js rex.WB lahf popfq loope jrcxz jle pop in xor in pushq (bad) pop (bad) cwtl rex.WB rex.RXB outsl jnp fmull cmp mov pop lods movabs mov lea out sti in jp sarl push lods xchg int3 rorl lock mov rex.X rex.WB and in lahf imul mov rex.WB rex.R lock cmp sti pop (bad) and mov movabs ja xchg jl mov xchg in sub gs xlat mov rex.XB cld (bad) xchg and mov cmc imul sbb pushq movabs or sar ss push rex.WB test push rex.WXB cld movl sub fucomip rex.WXB cltd pushfq sub add leaveq jmp (bad) sti sub jmpq pop movabs loop jns xor (bad) lea cmp mov movabs jne rex.WXB pushq mov jo rex.XB mov jne movabs sub pop (bad) rex.WR clc (bad) (bad) movsl fcom andl rex.RB sub cmp cmp (bad) xor js (bad) scas loopne sbb pop (bad) jrcxz or or (bad) sbb (bad) fcoms or push or rex.WB out (bad) mov loop (bad) mov mov sub push pop pop jl movabs rex.WR xor or repz rex.RXB add xlat rex.WB rex (bad) push movsb rex.XB rex.WR sbb and xchg jae int3 movabs imulb and pop (bad) out (bad) pop mov xchg sub rex.WB je xchg jrcxz jle lret rex.WXB movsb adc (bad) cmp and sarb (bad) out rex.WB mov data16 jnp rex.WB pushq movsl iret cwtl stos movsl scas pop rex.WX icebp rex.WRX sbb jle pushq insb cmp add add fiadd rex.B callq adc rex.WRX stc xor fiaddl xchg (bad) loopne mov and fyl2x push jne mov mov in movsb sbb sbb rex.B addr32 movslq sahf jne add mov (bad) (bad) mov icebp mov test rex.WXB jmp mov jbe frstor (bad) (bad) fild xchg adc jbe add lea pushq sub or addr32 lahf xchg and sbb or xor rex.R (bad) xor cli pop adc or sub test jl pushq cmp jl test jno xchg cmpsl (bad) data16 sbb test test mov cmp cld pushq xchg loope pop (bad) (bad) push or fs (bad) fildll int rorb add push mov mov rex.WB sub xchg and lea test cs (bad) adcl lods pop rex.R test pop fldln2 pop out push sbb rex.WB cmp sub int3 lock push push mov cmpsb rex.WB test mov sub (bad) jnp rex.XB out insb pop addr32 mov clc rex.WX rex.R push push rex.WXB cmp mov sub xchg lods and and (bad) callq jae pop rex.XB jbe sbb and pop mov pop insl xchg popq rex.X rex.WX xchg lea int (bad) sar cli rolb cmp (bad) mov sub mov (bad) (bad) mov (bad) (bad) mov mov sbb lea (bad) xor rex.WB adc test callq lret pushq add data16 sub xchg sub mov ss lahf xor fwait pop jne (bad) cmp retq in xchg rex.XB jbe rex.WB jns mov (bad) rex.RB xchg int movslq add rex.WB cwtl (bad) lock rclb jg or (bad) pushq mul jmp pop rex.RX out rcrl sbbl (bad) cmp cmpb rex.WRX xchg repz addr32 xchg (bad) loop repz mov rex.WB subl adc rex.WRB mov xchg push out rorl rex.WB mov and adc cmp push rex.WB lret and xchg sbb cmp movabs rex.WR cmp cmpl addr32 pop mov and lret or cmp pop (bad) out xchg mov (bad) insb jno movslq xchg pop movsl leaveq sti in fs cmp loop pop pop jrcxz scas pushq jrcxz rex.WB mov xor sub rex.XB sub or rex.WRX cs (bad) (bad) enterq rex.WB cwtl add sti xchg imul pushq jrcxz jmp mov (bad) push mov rex.WB pop jns insl adc pushfq (bad) sbb (bad) rex.WB cmp add pushfq rcl cmpsl xchg rex.WRXB mov sti pushq xlat test repz adc mull loopne cmp sub movsl outsl xor push lcall enterq cmc pushfq pushq push rex.XB rex.RB js adc movsl cmp jne or enterq fisubl sarb pop sti and iret (bad) cmp jp or add xchg xlat mov cltd pop (bad) insb flds xchg jnp mov (bad) jns outsb int3 jle or fbld sahf iret retq pop add imul lock iret mov (bad) rolb pop rex.WB rex.W in lea xchg test fstpl (bad) rex.WB mul mov and lock lods rex.WXB mov leaveq jge or (bad) pushq mov and (bad) retq rex.WB data16 cmc rex std out (bad) add mov (bad) pushfq (bad) fsubrp cld rex.WB jo data16 sbb fsubs in and loop xor (bad) cmp callq insb add adc mov pop jrcxz jne (bad) (bad) rex.WR adc rex.WB sub pop lahf cmp mov rex.WB sub push fs sub lods rex.WB jle jo imul rex.WB push mov or rex.WXB push (bad) rex.WB sahf jns rex.WB rex.WRB int3 add callq adc enterq lcall ds xor sbb retq lretq rex.WB rex.RXB scas or sbb and lods xchg jo mov icebp rex.WB rex.W rex.R in xchg jne rex.WB xor retq stos adc push movabs movslq rex.WB rex.X nop or cmp sahf rex.WB (bad) adc and mov xchg (bad) rex.WRXB movabs mov xchg xchg rex.R add test pop (bad) jmp std pop (bad) (bad) mov jrcxz push rex.B stos pop jno cmpsb rex.RX jmpq sbb or insb rex.W rex.RXB fwait mov (bad) jno lahf outsb out (bad) or lods mov callq mov mov jne insl xor movabs mov test xor popfq nop adc loop (bad) jbe (bad) icebp jp and or xor cltd lock lahf (bad) jno sub jmpq loopne popfq sub adc rex.XB jl cmp jmp rex.WR rex.RXB pop out mov mov sub pop sbb stos pushfq pushq add xchg and jmp fdivrl loope sub movabs mov add sbb adc cld test jo jnp std jo xlat pop nop jmpq (bad) fidiv mov addr32 pushq or mov (bad) shll xchg lods or callq mov (bad) push stos jno addr32 jns cmp lock rex.WB pushq stos xchg mov sti test mov rcrb pushq int3 or jno (bad) pop flds (bad) movslq fwait xchg rex.WB idivq mov (bad) leaveq adc push rex.WB cmp mov int3 rex.WB shrl jp pop fisubrl insb loopne cmp rex.WB cmp (bad) (bad) fcompl clc push mov mov mov test rex.WR rex.WB or (bad) rex.WB rex.WX popfq cli retq mov mov sti loope fisttpll adc push pop xor movabs (bad) xlat test and cmovp add add push and rex.WR notb in pop push (bad) (bad) test (bad) add rex.WX outsb sub sub sub repnz or mov xchg mov je negl pop ss int pushq jle cmp testb loope ss movsb (bad) jmpq loope (bad) stos (bad) cmp sub xor (bad) enterq in and sub negl sbb in retq lods fnstcw pop jnp cmp cmp or cmpsb mov xchg push pop scas movabs mov (bad) cs xchg pop xor sub or (bad) repnz push pop rex.RX andl pop cltd mov mov repnz imul rex.RXB or jmp (bad) mov or or out (bad) (bad) cld roll lods std adc or sarl pop push movabs mov movabs (bad) insl xchg (bad) xchg rex.RX outsl movabs test or mov add in and pop fsub int3 cmpsb pushq mov (bad) callq callq cmpsl jge sub rex.WRXB fwait sub sbb popq iret test or add pushq rcrb lret int3 mov subb push jrcxz iret mov mov (bad) sub fs cmp or mov movslq add mov stc push mov cmp xor loope pop adc and and or or repnz rex.WX scas callq cmp lret and sbb sahf cltd mov xchg enterq scas movsl and rex jno fs (bad) or pushq mov rex.RX loope movabs or lea jae push in sub pushq cltq cli xchg rex.B (bad) movslq pop (bad) cmp testl (bad) or sbb in (bad) cmp pop mov xchg rex.WRXB rcr rex.X rex.WRXB mov xor push xor fsubrp test cmp rex.RX xor pushfq jno sbb mov pop sub shll lock rcrb pushfq (bad) out xor icebp pop test sti int3 movabs (bad) lock fistpl sub cltd in sub jbe sbb push add push sbb pop test in mov cmc vpcmpgtd rex.WX cwtl imul xlat xchg push rex repnz callq out mov mov pushq data16 (bad) fmuls sub add add (bad) (bad) std xchg xchg mov (bad) outsl rex.WB in data16 fimull mov add movsl jg insb shlb ds adc iret pop rex.WB (bad) (bad) lahf sub add rex.WXB (bad) rex.WB icebp or (bad) (bad) sub rex.RX pop xchg rex.WB pop (bad) (bad) je (bad) pop rex.WB cmp cmpsl rex.WX callw outsb (bad) rorl pop out sub push cmpsl cmp pop jmp push ss data16 fldcw (bad) lea push push mov rex.WB fidivr callq int3 fdiv cs (bad) or sub sar xchg (bad) test pop stc icebp (bad) or or pop lret rex.R stos rex.WB repnz rex.WRXB jrcxz mov push (bad) in rex.WB or adc push stos int divb fisub push mov shr lret rorb mov rex.R loopne (bad) cs imul mov outsb (bad) in pop movslq jmpq callq movslq int3 add stos sbb mul (bad) xchg setbe pop rex.WR sbb movsl fsubl cmpsb mov sti xor xor fisubl rex.X rex.RB cltd jmpq sub xchg fisubrl mov in (bad) mov (bad) xor (bad) nop mov xchg pop dec lahf rex.RXB sub adc adc (bad) hlt out int3 add ds (bad) (bad) cmp xor pop push xchg flds pop idiv (bad) movabs cmpsb fmuls pushq cs sbb cmp (bad) rex.XB cwtl lods cwtl retq faddp rex.RB push jae xor (bad) pop xchg fistpll sub and enterq pop or adc test fiadd or or sub (bad) (bad) ds or mov mov push (bad) in xchg xchg lods or pop (bad) lahf ss rex.WRXB xchg (bad) xlat sar (bad) mov rolb mov data16 fsubrs mov xchg rex.WR rex.RX lods and or lods (bad) (bad) sbb sbb idivl (bad) sbb out adc fcomps (bad) push jrcxz jge rex.WR rex.XB movsb (bad) rcll test cmp dec sub cld (bad) insb scas movabs rex.W callq test rcrl jle add rex.RB (bad) (bad) je fwait out xchg mov sub xor and xchg repz mov movsb fs scas push jo xor (bad) and jle std out (bad) movq lock shrl mov popfq outsl mov in jb (bad) sub xor jno xor fwait (bad) out (bad) jrcxz mov or and iret fs xor retq pushq sub xchg insl movabs (bad) xor popfq adc rex.WRB pop callq rex.X jno or outsb (bad) ds ss (bad) mov pop insb pushfq xchg and mov mov (bad) mov enterq lods retq es rex.RB xlat fdivrs mov imul stos (bad) and mov pop (bad) add imul sub pcmpgtw rex.RB addr32 cmp cmp jno (bad) pop (bad) (bad) xchg mov rex.B lock (bad) (bad) sub sarb lock in mov out movsb cmp lahf movslq sub rex.W shll cmpb repnz test (bad) xchg pextrw movsl movabs (bad) adc (bad) shr sub cwtl mov test mov mov xchg movslq movslq and mov rex.R push test sti xchg add out and jne fadds (bad) fisubrl packssdw (bad) je rcr enterq sbb mov push (bad) mov out fisubl xchg (bad) fdivrs sub pop jl mov in jne mov jno in or cwtl (bad) mov jle cmpsl pop (bad) out insl int3 mov (bad) lock rex.RX xor and adc test loopne ss pushq cmovbe cmp cmp mov mov mov dec retq (bad) addr32 (bad) jo cmp test sbb mov sti xor cmpsb (bad) mov add jmp xchg subl hlt mov jb (bad) mov add movswl pushfq out adc lahf (bad) cmp sub rex.WRXB (bad) out rex.RXB scas and rorb xor (bad) sub data16 ja test (bad) pop xchg sub adc frstor fidiv clc out pop sbb callq (bad) sti iret pop mov rcll jne rex.R rex.WB pushfq and popfq lret adc rex.RXB ss sbb movabs add (bad) rex.WXB pop add int rex.WB jmp rex.X xor mov sbb jge (bad) lods insb enterw js neg imul rex.WB addr32 mov cwtl insl (bad) addr32 or push rex.WB (bad) add xchg sbb sub mov int sub scas leaveq sub fstl cli add jrcxz movabs addr32 (bad) (bad) mov gs rex.WB rex rex.RB callq xchg test pop rex.WXB lret add (bad) js jl or or jb movabs mov mov xor and addr32 (bad) notb leaveq mov (bad) jl xor add or push cmc or cmc rex.WB sbb add repz int enterq and cli xchg pop rclb (bad) xor and fldenv (bad) lret mov rex.WXB xlat rex.WB addr32 sahf faddl int3 movabs or sti loopne jo xchg sub rex.WB mov retq stos rex.WB xchg rex.WRX int cmp pop movslq and pop nop push or pop xchg xor jae mov outsl adc push (bad) push xor and ja cmp cli movabs rex.W rex.WB mov mov addr32 rex.RXB pop (bad) (bad) sar pop add rex.RB add rex.WB rex.WX insl push imul and repnz jrcxz scas xor rex.WB rex.WXB pushq (bad) (bad) lods sub cmp pushq xchg enterq lahf loop shrb addr32 (bad) lret faddl and rex.WB out sbb fwait movabs push imul or cli lods xchg cltd rex.B sbb lret push bnd add add (bad) lret xor jno rex.WB fs fbstp adc dec leaveq mov out (bad) cmp xchg or mov pushq add push mov and sub sub pushq and loope fisub popfq cmp test hlt divl cs jne out sbb in sub jb test pushq leaveq (bad) pop cld leaveq insb rex.WRB sahf popfq xor es notl stc cmp (bad) data16 lods (bad) stc out sub add cmp rex.WB and scas mov lock addl decl xchg rex.WRX rex.WRB add rex.WR in cmc sub cltd imul roll rex.W rex.WB pop fmul or movsl cmpsl rex.WB rex.WRB xchg addr32 es rex.WB push callq add rcrb (bad) pop rex loop add xchg rex.WRB rex.WRB rex.RXB adc xchg and test pop jns xchg jo out fndisi(8087 fs jne push pop cltd (bad) rex.WB (bad) xor rex.WB mov retq push rex.WB or movslq mov (bad) es rol shrl jmp cmp push rex.WB data16 jp cmp rex.WB (bad) cld mov jne (bad) rex.WB rex.W sbb rex.WB and sub outsl fdivrl movabs mov jge int3 movabs js jb int3 adc test sti adc rex.WRXB fdivs hlt rex.WB mov test or rex.W cmp sub adc sub rex (bad) cmp int3 (bad) pushq mov xchg rex.WX enterq movslq in (bad) rorl (bad) ja rex.RX mov xor cltd fdivr mov data16 lahf xor jle pushq rex.WX fnstenv cmp enterq adc or cmpsb mov adc adc jp lods mov rex.WR jg fisubr pop insl mov rex.RXB adc xchg rex.WB rex.RXB push insl mov test jge pop (bad) xor mov xchg (bad) movsb mov mov push xor mov jp sub hlt mov out addb cli sbbl push (bad) std movabs sar jmpq or xchg add ss (bad) and es lods test cwtl mov jne lret and pop (bad) xor ss sahf cmc (bad) (bad) test rcrl add mov (bad) xor jl cmp cld out movabs sub push nop or or fwait rex.WB movabs mov jae test rex.WXB cwtl jnp or add xor add sub int3 (bad) (bad) pushq push rex.WXB bnd adc imul mov callq mov pop subl mov sbb out hlt jrcxz (bad) (bad) rex.RXB rex.RX out movabs movabs and mov shr jnp ja fiaddl sbb jge rex.WRXB cmp cli in jo ja jnp jp push rex.WRB (bad) adc jrcxz (bad) jle in fsubs (bad) xor mov rex.X rcll jo jbe mov rex.WB cmp je push adc iret scas adc mov and mov (bad) movabs and jmp and mov rex.WB jg stc mov movsb (bad) jge xchg and lock (bad) pop xchg jbe stos (bad) lret fisttp ror sub sbb (bad) mov (bad) mov xchg (bad) leaveq insb fidivl rex.WB rex.WR lret rex.WRX (bad) rex.WR callq and (bad) push stos or mov stc sub pop push cmpsb lods loope (bad) jno and (bad) rex.RXB enterq out int or test jne fstps or gs and callq push xor xlat subl mov clc mov loopne cmp xchg push mov testl jl mov jnp xor xchg cmp jg loop icebp cli mov jno hlt and or jo scas retq insl xchg enterq movslq cs stos in (bad) xor stc fcmovu or rex.RX rex.WRX pop rex.XB loopne cwtl callq scas mov mov rex.WRX push rex.WB rex.RXB xor and add rex.XB rex.RX xor sbb hlt jae jle rex.WB pushq mov xchg (bad) (bad) push pop fsubl add fisttp cmc fcom out (bad) rex.WB test insl ficompl or pop (bad) xchg rclb mov mov and movslq sub rex.WXB out retq fidivrl (bad) loopne movsl fild cmp pop xchg andl rex.RX xchg mov cld cmc jno test sbb out leaveq pushq rex.B lahf imul insb fisubl movslq repz xchg pushq iret jmpq sbb mov (bad) test or rex.WB and cld movabs add mov adcl and rex.WR rex.WRX jne or rex.W push shl scas gs push pop (bad) lret mov rolb addr32 add or rex.WB sub xchg (bad) rex.WXB xchg xor out test mov sub (bad) stos rex.WB rex.B (bad) jae (bad) cs rex.XB iret push stos pop mov lret cmp cmp xchg pushq rex.WB gs loopne out lods sub xlat sub movabs in in mov jg adc testl lock movslq sbb mov sub pop rex.WB sbb jne leaveq sbb xlat rex.WB rex.B popfq cmc or (bad) in or (bad) notb rex.WB xchg lea or (bad) retq push in (bad) add jo mov pop jmpq sbb rex.XB (bad) (bad) add rex.WB (bad) movabs lock push rex.R clc xchg mov xlat shll (bad) outsl jle cmp (bad) mov rcrb std pushfq cmp rex.WB fistpll (bad) push xor mov leaveq rex.WRB insb push (bad) (bad) (bad) js mull jl adc ds (bad) xchg add (bad) rex.WRXB jg mov pushq gs sub lea movabs push add mov mov mov add rex.WB scas clc int xor add cmp fisubl in (bad) je rex.B xchg or xchg pushq enterq ds callq cli jge or sbb (bad) lea and xor pushq shrl (bad) sub mov xchg cmpsl add imul (bad) xchg add rex.WR rex.WB (bad) and ss stos sub shlb pop xchg test sub insl pop retq rex.WB in jo mov add (bad) (bad) mov out or jrcxz rex.R (bad) (bad) mov and pop push (bad) es pop sub (bad) scas xor in mov ja add jnp push movabs rex.B rex.WRXB je xchg sub xor xor lret hlt add iret mov and sbb push movabs test int3 cmp xlat pop ja stos shl (bad) ds jle sar (bad) xchg outsb (bad) mov push add jnp fadd (bad) mov orb jge test rex.WX insl and mov repnz movabs mov mov ja rex (bad) rex.WB xchg (bad) sub rex.X cmovns imul lret mov xchg pop or out loopne and sbb jo (bad) scas push stos notb rorb (bad) jbe rex.WX rex.B push rex.WB ds test (bad) and and fmuls movsl rex.B rex.RX pushq (bad) pushq sub cmp movabs stc jns sub (bad) sub mov jo sti xor lods outsl shll (bad) rex.WB (bad) add ss mov rex.WXB fs push rex.RXB pop fs xchg xchg mov pushq mov callq sub mov lret movabs rex.X sub cmp jl pop scas lret out mov jmp add jg rex.R or (bad) add jge (bad) mov sub xchg cmp test rex.XB cmp jns out jno or mov and lret (bad) cmp test mov rorl (bad) movabs lods test callq add cmp fs outsl adc cwtl cmc rex.X xchg sbb jle data16 adc cmp test cmp rolb and jo mov mov (bad) cmp (bad) rol mov xor sub jb out mov (bad) pop lret rex.R xlat in cmc (bad) mov adc mov add pop mov retq movslq (bad) mov add or sub (bad) (bad) movabs in fstps (bad) fcompl rex.B rex.R or rex.WB iret jmp sub movsl mov push rex.WR rex.WR cmp mov fwait (bad) xchg sahf (bad) and mov test mov cmp retq (bad) (bad) (bad) rex.WB clc fistpll jmpq fisubr adc xchg pop cld push and movabs (bad) (bad) sbb pop rex.WB xor rex.XB jae rex.RX mov in (bad) outsl fisttpl cmpsl sahf stos adc and xchg xor loope jbe pushfq (bad) movabs cmp je (bad) pushq test rex.WB adc rex.WB sub pop (bad) rex.WB fs sub mov adc mov push sub ljmp pushq imul add (bad) (bad) sbb outsb leaveq (bad) test xchg adc out pop vmovhps or cli sbb fisubrl jmpq jg xchg (bad) add sbb mov adc jnp fstp cld mov push (bad) outsb icebp imul out mov fsts icebp mov pop cwtl in mov xor test sbb xlat xchg or (bad) (bad) adc rex.X (bad) or xchg ja jle push sub cmp rex.RXB insl xchg std mov rex.WX cmpsl xchg push or out mov lock movabs outsb (bad) (bad) cmc adcl dec mov xchg divb out adc pop repnz push mov pushq (bad) pop out (bad) stos sub adc rex.XB adc lock add scas mull clc mov retq (bad) lret xchg jns adc nop cmp cmp cltd rex.XB jge in outsl rex.WB push rex.WXB imulb rex.WB fs test (bad) rex.WB rex.WRX adc retq rex.WB rex.XB jge jmpq push adc or repz fmuls test mov hlt movabs and out adc retq (bad) xchg outsl push rorb rex.WXB jae rex.WB imul loopne jp jnp repnz rex.RXB adc (bad) and pop movabs cmpsl ja xchg or mov and jmpq imul mov (bad) (bad) sahf rex.X pop movsb jg icebp scas insl sarl and rex.RXB test ja,pn and fucomp rex.RX xchg cmovns lods movabs lea (bad) mov rex.RX add sbb rex.B jge rex.WB rex.WXB rex.B jne xor mov movabs in pop rex.WB es fmuls jae,pn add icebp sbb iret cli or add (bad) jle (bad) adc xor rex.WB jge cmp sbb rex.XB sub ror (bad) pushq pop xchg (bad) add fwait (bad) rex.WR sub jecxz roll loopne mov mov and rex.WRB pop push (bad) in cli (bad) lods rex.WB rex.WR rex.WX adc popfq loop xchg int (bad) (bad) rcl adc lret jl pushq mov add rex.WB movsl and (bad) rex.RX (bad) loop rex.WRB sub rex.WRB rex.RXB adc jl (bad) not callq rex.WB sarb rex.WRXB rex.RXB sub int add movl push rex.WRB gs lret nop fstpl mov cmp jl sub lret stos lock xor movabs test lahf insl push hlt ficom jno sbb (bad) xchg insb testb pop loopne rex.WRB adc popfq (bad) retq mov (bad) mov cmp scas pop (bad) jb rex.WRXB (bad) rex.WB (bad) cmc insb rex.WR jl sub (bad) pop jp fisttp push hlt rex.WRXB (bad) (bad) push gs rclb cli gs sbb jmpq fmull fldt sbb lret mov mov xor push and xchg add rex.WX pop rex.B ss pop add adc mov push push pushq cmpsl rex.WB cs stos rorl (bad) jns mov decl sbb or test xor hlt fldenv lahf loop rex.WRX lods add xor xchg cwtl (bad) (bad) lret ficompl psrlw mov cmp sarb jne imul cmp mov je add jp orl xchg sbb sub rex.WXB cmp xchg movabs test (bad) out (bad) cwtl loop cmc (bad) div jno sbb int repnz repnz (bad) sub cmp (bad) or mov or imul lret jle pop mov rex.RX xchg (bad) loop push mov xchg rorb sbb lea test cld pushfq sub xchg or cmp jno rex.WXB icebp sbb push fmuls movsl mov rex.R jno enterq in rex.WRXB repnz iret cmp loopne cltd jmpq enterq test out ja sub mov xlat mov and lods (bad) pop iret clc rex.XB sar mov rex.WRXB mov test lock sub push scas (bad) rex.WX int adc pushq xor addr32 stos std rex.XB outsl rex.X sub jne lcall std stc xor sub idiv jae pop addr32 rex.WR subb retq jb mov ds int3 add sub (bad) mov rcrl roll cmp fsubrl mov rex.RB out sbb mov mov (bad) sub lret fs out push ljmp mov mov out test rex.RX sub rex.XB or rex.RX ss xchg callq jbe shrl test xor imul orl sub mov pop cmp sub retq sub xor ss push xchg clc xorl push (bad) or (bad) sub imul movsb mov jrcxz mov or mov cmp int3 cs rex.WB rex.WB jae fimull add ds int3 (bad) mov and mov movsb fidiv lea rex.WB sub add pop (bad) sub (bad) rex.WB rex.RX mov orl add (bad) rorb jle rex.WB or outsl orb lret pushq movabs or adc cwtl rex.WXB push mov and rex.WRXB gs pop mov rex.WB lock jne fsts rex.WB (bad) rex.R movabs rex.WRX out or mov (bad) lea xor fisubr sbb lahf cmp cmc test sub add movsb cmp int mov mov imul cmp rex.WR outsl addl jrcxz jbe out nop fldcw rex.WB rex.WRX es (bad) loope rex.RXB jrcxz push or mov in rcl adc movsl fistl out mov sub sbb (bad) or loopne cmp sbb xchg je rex.RX jg int data16 ficoml minss cmp imul je pushq xor imul (bad) rex.WB je sarl jmp adc insl decl rex.WB cmp rex.WB and mov (bad) rex.WB lret push out xor adc iret and cmp jle (bad) or push cmovge pushq sub imul mov rex.WX rex addr32 fcomps push rex.R test fs stc push in sahf pop xor cmc pcmpgtw add rex.WB outsl mov xchg callq jge (bad) sbb in (bad) rcr insl sbb out sbb push test or loopne rex.WRX loop pushfq rex.RB sub (bad) hlt push out add (bad) rex (bad) jmpq js jno rex.B rex.WB mov mov (bad) cmp and stc lret callq xor push (bad) movabs (bad) (bad) enterq rex.WXB xchg decl movabs xchg clc subl push scas rex.R rex.WXB test (bad) (bad) mov test xor mov (bad) cmc rex.RXB sub mov shll test (bad) xor lret xchg push mov retq scas mov (bad) or fstl mov cmp mov jg sub insb fild and mov mov (bad) test mov mov repnz xchg rex.W pop stos rex.R in fcomps rex.XB repnz lea scas jmpq or rex.WB scas imul sub jmp test push (bad) jnp mov and int3 rex.RX rex.WB sbb movsb rex.WB (bad) rex.R sbb in push rex.WR retq (bad) in rex.WB outsl ja sub pop callq rex.XB (bad) ja stos push jmpq (bad) xor pop cmpsb movsl in mov jl rex.WB int xorl and mov movabs (bad) mov pop xlat and rex.WB xor add jae xchg movsb add cli sahf adc pop movl loopne xor mov or cld rex.WB xchg retq movabs push or xchg decb in push popfq cltd lods (bad) stc vcvtpd2ps jmpq mov rex.WRXB rex.WRX movsb in jle xor mov jae sbb rex.WXB (bad) (bad) push lahf xchg decb repz lea (bad) and movabs mov (bad) jmpq test int js jp and movabs (bad) movsl jno sub in cltd jrcxz repnz frstor fwait rex.WXB cmovns xchg and mov imul xchg idiv callq push mov cmc xor js rex.WB stos or leaveq adc sbb xchg push callq movslq imul sbb test mov xchg pop repz rex.X sbb push movabs mov or mov xchg je rex.WRX (bad) movslq pop push rex.WRX (bad) pop rex.WB es callq or rex.WB rex.RB jo cld out mov outsl cmp and rex.XB mov (bad) mov imul movabs add rex.WB nop (bad) add adc cmp stos rex.WX fimull iret jne fcoml lock push lea push mov xor iret jl cmp or (bad) mov rex.WB movsb sbb addl cmp push movabs cmp push cwtl rolb rex.WB cltd cmp jns (bad) movabs rex.WB or (bad) (bad) stos or rex.WRB lock xor sub jns or jmp or push scas push push and rex.WB hlt (bad) int pushq enterq lahf mull xchg jp mov (bad) cmp frstor rex.WB cmp pop addl and rex.WB and addr32 sub and pushq enterq out mov adc std fldenv (bad) add or rex.W movabs or cld sar rex.WB lock leaveq hlt mov xchg pushq je push and or jnp out rex.B rex.WB push mov mov adc mov push mov (bad) mov add lret rex.WB outsl xchg js and push test rex.B repz (bad) xor ss movabs mov loopne js push gs fadd popfq (bad) add (bad) sub retq sub mov (bad) (bad) icebp xchg rol mov adc lock imull enterq scas or mov and movabs cmpsb sub cs rex.RXB loop sbbl rex.WRXB rex.WRB int3 jge rex.WB (bad) insb xchg fdivrs rex.RX rex.WRXB gs rex.WB rex.XB jne jno pushq movabs xor movabs ror movabs shrb movabs (bad) (bad) mov movslq xor xchg jp loope js xchg js xor rex.WRXB mov or fisubrl (bad) (bad) adc rex.WB (bad) xor rex cld cmpl sub rex.WRXB pushq cli in insl rex.X repnz pop (bad) mov cmp (bad) rex.B (bad) pushq fsubp xchg rex.WB repnz (bad) stos sbbb (bad) mov rex.WB pop je minps mov lret jb jle sbb pushq xlat rex.RB out jno imul movabs cmc scas rorl sub xor (bad) push retq out jge pop in or pop adc (bad) pop and addr32 repnz hlt rex.WB mov and pop out (bad) int3 mov rex.RB outsb mov (bad) rex.WB adc rex.WXB and (bad) stc movabs rex.RX sahf xor mov pop rex.WB cwtl (bad) enterq in callq rex.XB push pop jrcxz pop pop (bad) lods sub cmpsl jg xchg push lock callq pushfq fldenv jbe imul loope scas pop hlt leaveq rex.WRB lods loop rex.WB jbe add data16 xor movabs cmc cmp rex.WB sub cmp out mov pop cmp jne adc fstps push rex.WB (bad) mov (bad) adc rex.WB push pop cmpsl mov sbb sub sub xchg rex.WB jbe iret xchg jns adc lock add (bad) (bad) (bad) out mov lahf add push sbb sbb (bad) cmp (bad) rex.WX stc test rex.X rex.WX lret scas jge or add test add xchg test rex.WB sub movsl xchg (bad) and (bad) mov xchg push adc imul (bad) roll xchg xchg lods stos fistpll jb out mov outsl cmp (bad) mov loopne movsl mov mov rex.RX cld ss sahf data16 mov or cmp lods in sbbb lret (bad) (bad) mov sbb xchg scas in scas add jp rex.WB fisttpll mov rex.WRX loopne sub and cmp rex.WB adcl push add (bad) (bad) or stc data16 rex.WB rex.B imulb loop pushq pushfq fs stos std mov jb and (bad) js (bad) xchg icebp pop out add pushfq addr32 mov jne or add (bad) rex.WX (bad) mov lock sbb gs sub movslq jmp jo cwtl xchg xchg in xchg enterq loop pushq xchg and (bad) cs pop jb rex.WB mov cwtl test callq mov sub pop and rorl push jae (bad) pop xor outsb jl out es loop mov (bad) jl movsb pop ds pushq sbb jp stos xor xchg loope orb jp loopne xchg xchg sub mov lock cmp enterq mov mov rolb cmp mov loope push rex.WB lahf flds cmp pop retq outsb (bad) jbe xor add shr (bad) repz add rex.WB std cmp pop test rex.WB ss (bad) lods loope xor xlat push hlt fdivrs cmp shr rex.WRXB mov (bad) (bad) fwait push (bad) sti ja jge and (bad) rex.WB rex.WRB (bad) sahf and fsubl shl sub xchg xchg mov gs xlat cmovns std movsl (bad) and rcrl push out xchg rex.WB out (bad) out fldenv pop rex movabs pushq rex.WB retq lret adc rex.RXB cltd insb sub fwait jno test test adc add sub (bad) sbb pushq or and cmc (bad) sub push (bad) rex.WB movslq mov xor adc sub cmp in xchg shrb sar (bad) cmc and pop test addr32 (bad) fstps sub xchg loopne rex.WB jrcxz mov or cmp pop mov jns mov rex.WB rex.XB rex.RXB fnop jbe fisttpll rex.WRX std push fnstcw xchg js sahf stos push jl rex.W rex.WB cli movsb jbe movabs pop callq out pop (bad) sti rex jo ss fisttpll imul fcomps rex.WB mov rorl sarb rex rex.WB cmp (bad) adc outsb ror pop movslq or retq pop add rex.XB adc rcrl rex.WB rcr cmp callq xlat xchg push gs rex.WB mov mov add (bad) cmpsb rex.WB adc xchg hlt (bad) or (bad) push lock jb cld push fstps sub adc movabs (bad) sub xor test rex.WXB decl ss divl movabs ja add js jbe mov pop xchg iret addr32 fistpl (bad) xor sahf xlat repz jg pop movsb push and mov rcrl notl (bad) scas sbb jle fldl rol sbb callq (bad) lods xchg imul jnp (bad) mov imul pop sub lock add push jb sub cli stos (bad) sahf sbb (bad) cltd in sbb jo xor or xchg cmp add rex.WR or pop (bad) (bad) push jl rex.X iret pop (bad) mov jrcxz rex.WB jns,pt and shll insb loopne (bad) add pextrw jbe or rex.WB in cmp out rex.WXB lock addr32 xchg (bad) sbb (bad) rex.WRB sub jo scas add mov es rex.WB (bad) movabs movabs js or rex.WB (bad) sbb mov clc (bad) cmp adc adc cltd xchg movabs or ljmp sti mov xor (bad) pop cld loopne (bad) pop mov mov sub callq sub pop enterq (bad) ss rex.WRXB or pop shr and mov xchg (bad) fistpll jle fs jrcxz jae in mov in pop and rex.WB notl rex.WB pop mov pushq jp callq test jb (bad) push rex.RB rex.WB sbb enterq cmc ja pop xchg movsb rex.WB (bad) xlat (bad) lods (bad) and sahf pop cli and mov fisubrl rex.WB (bad) mov pop rex.RX in ja push enterq or test es add ds adc mov push xor pushq push rex.WB rex.WXB and jnp pushq and rex.WX xor and js jp xchg (bad) (bad) mov out test jl rex.WXB rex.WB sub int3 rex.WB out shll add pop rex.WRB jne in callq jb xor xchg cltd ss loopne insl popfq lret (bad) jne addr32 cmp xor adc or (bad) rex.WRX mov je cmp pop push and (bad) rex.WRXB jbe rex.WB mov sbb popfq and cqto fimul mov (bad) in cld cmp sbb cmp adc loope movabs nop pop rex.WB cld mov (bad) movabs add test clc ds sbb (bad) rex.WB repz mov repnz push loopne pop (bad) xchg sub fidiv rex.WB out lods xchg pop rorl movb (bad) leaveq adc pushfq mov adc mov rex.W cmp sub add fistpl push adc shr xor or (bad) sahf test lahf xchg fistpl jno shrb (bad) stos pushfq scas and push mov xor (bad) jge fcompl and lret psraw mov rex.X rex.WXB (bad) jl test or insb movabs enterq lret test callq rclb or xchg addr32 push adc rex.WRB sub xlat (bad) clc in fisttpll lahf pop pop rex.XB pop mov decl xchg out iret clc lods movsl cld rex.WB pop ficoml fistp cmp out mov rex.R xor scas rex.WRX xchg fstps lods rex.WXB mov or (bad) xorl incb rol (bad) cmp sbb or rex.WB enterq jl je rex.WB subq or xchg fimull sub leaveq push scas adcl sub scas out rex.WB (bad) or cmp (bad) jbe adc mov repz cmpsb (bad) (bad) imul push or jmp jge mov rex.RXB sub mov (bad) and (bad) jl xchg pop or adc sub rex.RXB test (bad) add test mov cld xor rex.R (bad) rex.W rex.XB movabs mov leaveq jne addr32 data16 std imul push (bad) mov cmpl retq addr32 in lock retq rex.WRX mov or movabs mov pop in jmpq sahf fcmovb test cld cmp out add stos (bad) out mov imul addr32 or (bad) fcmovb jb loopne sub sbb rex.W mov mov callq sub (bad) push lahf mov rex.WB addps retq and pop loope scas mov (bad) pop int3 mov mul rex.WB mulb pushq (bad) mov mov rcl int3 rex.WB ffree movabs vmovsd rex.RB push rex.WB sbb nop jmp cmp (bad) jb mov xchg push (bad) cmc (bad) pop movsb (bad) sub and jns clc or cmp (bad) rex.WB (bad) rex.RX rex.WXB xchg adc rex.WX movabs test insb in vmovq jl and jb gs movsl adc movabs out add mov rex.WRB in rex.XB lock mov callq xor pop and push sahf rex.WB rex.WRXB movabs out jmp pop sub add rex.WR stc xchg rex.WB or rolq sbb rex.WB adc mov movslq jg hlt je (bad) lock addr32 (bad) add (bad) sbb fstps iret sub pop mov jge sbb rex.RXB stos pop (bad) pop shlb callq (bad) (bad) push cwtl xchg ss cmp jnp (bad) pushq and in std sti sbb sub xchg rcrl sub pop and rex pop repz bndldx shrb pop cmp (bad) (bad) xchg hlt cwtl enterq movsb pop loopne out lret xor movslq (bad) mov (bad) xor cmp adc and pop cwtl out test sub (bad) movsb rex.R loope cmp jmpq loopne js pop lock rex.RXB ficompl std lods leaveq (bad) cmp push repnz sub sar enterq sub int push add pushq pushq mov jne cmp test mov rex.WRXB lret push mov and movsl movsb outsl add mov (bad) decq or pop and loopne stos insl (bad) negl rex.WB mov add pop adc out mov rex.WXB clc rex.WB lock shrb push jne add add mov rex.XB ds imul (bad) jbe mov fdivs repnz rex clc insb data16 addr32 adc rex.RB (bad) callq loopne rex.WRX cwtl je out mov js pop loope gs xchg lahf sub rex.WB rex cmp outsb push fs rex.WRX (bad) jnp (bad) (bad) push sub and leaveq ficomp jb fsubs xlat add ds loop rex.WRXB lahf (bad) push cmpsl jp xor lea sarb rex.W rex.WB lods sbb gs xchg retq sbb mov or je rex.WB (bad) sub or cmp cltd pushq rex.R rex.WRB lods push pop (bad) adc retq nop rex.WB xor cmpsl loope js ss sub lret pushq or in sub shrb decl pop rex.WB data16 and cmc repnz repz add jmpq test pop addr32 lock lods or push cmp xor mov scas lret xchg sub add retq push mov rex.WB (bad) xor push sbb sub (bad) and cmp cwtl outsb pushq xchg imul (bad) insl imul cli (bad) incl mov jbe jne xchg rex.RX fldt cmp (bad) out in pop stc out fisub rex.WR rex rex.WRB and rex.RX rex.WRB sub rex.WRX cmovge fistpl (bad) or gs cmp cmc ja push lea adc and fcoml push sub sbb mov test lods retq sub xchg pop callq (bad) mov sub sbb imul xchg (bad) cmp (bad) insl or mov (bad) cmp push movabs fistl addr32 push pushfq or and rex.WRX push gs sub lret jge push imul mov (bad) xor jbe movslq push cmp xlat pop outsl (bad) and movsb pop push (bad) sub mov (bad) test hlt push cmp or mov rex.WX ficomp rex.RXB rex.WRB imul or cmp fs imulb int3 leaveq xchg xchg jo cmp mov rex.WRX cs (bad) push cmp enterq xor gs (bad) stos out xchg in (bad) movsl and callq xchg sub lods lods xchg pop adc fidivl movabs mov pop mov movabs movabs cmp (bad) rex.X outsb lods xor sub (bad) (bad) mov jnp jmp fisub xor xchg (bad) sbb test adc enterq cltd icebp imul xchg and cmp jp xchg cld add (bad) (bad) ficomp cmp add pop or (bad) rex.R sub movslq andl nop or jnp lock rex.W mov movabs cltd ss xor xchg addr32 xlat jmpq (bad) ror xchg (bad) out (bad) mov pushq add fcomps (bad) sub sbb or adc jge shr repnz rex.WB rex.R clc add fcmovu popfq add pop (bad) lahf repz js stos enterq and rex.WXB ss rex.WB sbb add je xor jl insl xor rex.WB and repnz test rex.RXB mov adc movabs pop sbb sahf adc rex.XB rex.RXB mov xchg xchg jne rex.WB xchg or leaveq rex.WR rex.WB lods cmp imul pop retq jle push push movabs pushq add jrcxz repnz or stos rex.WRXB callq loope callq adc jge xchg add out pop and cltd pushq adc or movabs jbe outsl jae (bad) fdiv xchg out callq mov rex.WB (bad) mov mov loope ds repnz or (bad) movabs (bad) rex.WB rex.WRXB (bad) (bad) xchg adc sbb in push rex.WB (bad) callq fs push lods (bad) xchg callq mov rex.RB lods rex.R rex.WB rex.W lret rex.RX xchg in (bad) incl push and cmp movb xchg (bad) (bad) rex.RX (bad) loopel (bad) sub fstps rex.W in int sub repnz movabs xor sbb push adc cld iret pushq xchg imul and push (bad) mov fist rex.WXB add rex.X cmp (bad) rex.WRX pop jg mov pushq pushfq rex.WRXB rex.WRXB sbb push movabs fmul pop and xlat stc rex.WR rex.WB jno jl adc pop and rex.WX xchg adc xchg (bad) xor sub cmc loopne xchg iret xchg push loope insl rex.XB lahf and cmovns lret xlat mull (bad) out jae fisubr mov gs and push ja,pn rex.WB (bad) (bad) mov enterq sarl (bad) loopne (bad) rex.B (bad) rex.WB cld (bad) (bad) pop (bad) pop mov pop push iret leaveq and mov rex.WB addl ljmp push (bad) mov js (bad) xor cmp rex.X rex.XB (bad) cld test rex.WB imul push and enterq adc enterq rex.RX rex.WB cli retq ds xchg callq adc push adc fildll cwtl nop sbb rex.B mov pushq fdivp sub mov mov (bad) repnz insl js rex.W rex.RX mov push retq movabs jmpq (bad) cmp cwtl int3 test out sub rcr js lret mov pushfq mov jo,pt fstp test je or jbe sbb loope sub jo sbb vcmpneq_osss xchg adc insl jb fxch xchg rex.WB data16 (bad) mov movabs lret (bad) rex.WB jo cmp rex.WB rex.RXB mov sub or rex.WB loope shr hlt rex.WB mov in sub nop cli sub (bad) out pop retq adc (bad) lock in jo int int3 push imul xchg rex.B cmp in push movslq jns (bad) xchg fidivr andb sbb mov (bad) int3 (bad) rex.WB in icebp xchg cmp or (bad) callq imul movslq push rex.WB (bad) rex.WRX rex.WB cld jg movabs pop pop or cmp retq mov movsl rex.X cli xchg rex.WRX xor lods sbb and (bad) sbb cli cmp mov lods (bad) sub push mov rex.WB loope fwait in and stos stos rex.WB loop xchg push xor adc rex.WB or sbb push (bad) mov (bad) sub lock rex.B mov gs movsbl xor (bad) cmp lret mov xor mov rex.WR mov imul lods adc rex jnp lods pop jmpq and adc fcmovbe ss lret add orb cmpsb rex.RX rex.R imul xchg leaveq stc and jae sub std lahf cwtl sbb in (bad) (bad) xlat add cmpsb ss xor pop cmp ds sub sub adc loop repz mov movsb callq out out mov jns (bad) icebp cmp (bad) movabs or pop (bad) mov (bad) jne xchg insl mov in cli (bad) sub clc insl add mov cmp push (bad) (bad) adc or (bad) mov rex.WRXB add leaveq jg out pop jb mov push xchg nop push xchg rex.B rex.XB ds pop jne jnp enterq or pop or pop (bad) pushq test ss (bad) mov in movabs pop mov (bad) sbb (bad) (bad) mov cmc xor and rex.B xchg cmp ds xchg sbb mov gs mov jge rex addr32 xchg rcr rex.WRX lahf push enterq push jmp (bad) mov cmp fs pop xor pushq rex.WRXB rex.R lret addr32 stos mov rex.R (bad) adc fmul sub sub insb addr32 pop mov (bad) xchg rex.WRXB jae ficom jge mov adc cmp (bad) rex.B mov mov sbb rex.RB out jo stos xchg or sbbl rex.WXB (bad) sahf mov cmp xlat out xor (bad) fidivr pop outsb mov add adc ss mov lret movabs shll rex.XB push pop callq lret ffree test rex.XB (bad) jns cmp callq (bad) shll stos loopne add insb mov jno movabs test (bad) ja rcll add cmp fidivr (bad) hlt leaveq imul (bad) out mov callq mov rorb out rol (bad) movabs sbb and pushq mov push mov adc rex rex.RX xor rex.B addr32 mov (bad) (bad) idiv not cmpsl test sbb rcrb fistl jmpq or enterq rex.RX in leaveq out loope nop jno scas out retq sub and sbb rcrb loope jg and and jno js add rcrb pop or retq loope push popfq (bad) pushq sub (bad) cmpsl adc add test lret pop xlat lods xor (bad) and decl rex.RX jo (bad) stc jp jnp loopne push mov rex.R jmpq (bad) xchg mov (bad) in sbb xlat insb cmpsl cmpsb mov out pop mov adc movabs data16 rex.WR or adc jno adc rex.WB in fidivrl xor (bad) mov sbb stos fmuls insb pushq (bad) mov retq rex.RXB jb out xor shrl (bad) mov jrcxz or (bad) mov or push jne cs jns int3 imul insb fldenv push (bad) rex.WXB adc (bad) movsl sbb mov cmp (bad) adc sbb rex.RB rex.RX xchg pop push xchg xchg adcl imul mov test repnz jge retq lahf mov xchg sub (bad) out sub push rex.WX movsl (bad) rex.WRXB push pushq adc cwtl out jrcxz stos in rex.WB icebp and test rex.WB fwait rex.WB sbb rex.WX lea cmp sub push adc sarb loop movsl lods retq data16 mov (bad) xlat rex.WB adc jp push rex.WB sub lret sarb movq rex.WB shlb sbb jg movsl adc (bad) mov test lret outsl callq (bad) movsl retq push addr32 addl sbb jbe sub test and adc push xorb in rex.B and loope sbb (bad) mov (bad) rorb fs lret jmpq cmp insb xchg rex.WRB leaveq es movabs pop out sub xor out or mov retq (bad) rolb rex.W jne adc and pop xchg rex.RXB cmp or (bad) cmpsb cmc mov movabs xor sub xchg pop ss mov jl mov mov and (bad) icebp sarl mov scas nop mov pushfq icebp push rex.R pop pushfq cmp xchg rolb push testl rex.W out repz sub cmp jns and and rex.WX shrl add rex.WRB fisubr sub rol loope (bad) rcll fwait mov sub (bad) xor adcl fildl or outsl adc je es pop addr32 popfq sub sub pop int data16 scas (bad) (bad) mov (bad) movabs (bad) imul popfq sbb (bad) fs (bad) pop pushq (bad) push sub hlt rex.RXB lahf addr32 fnop jns movabs rex.RX jbe rex.WR adc bswap xor pop cmc fsubs movabs push test rex.WX loope xor rex.RB mov rcrb retq xor (bad) xor pop jle pop mov (bad) or lea data16 add rex (bad) jp pop iret rex.RB push rex.WRB cmp decl jae pop push (bad) je pop sub movabs (bad) pop add or nop sub pop (bad) add xor and (bad) popfq or xchg and testl popfq ficom movslq mov mov rex.WRX (bad) pop rex.WB orl lods rorl sbb retq (bad) jo rcrq push xor mov xchg rex.RXB and (bad) rex.WB lods (bad) push mov pop leaveq xchg (bad) fldl pop lret or cs rex.WR rcrl xchg xchg cmp cld push rex.B rex.WB mov push and fwait pop lea rclb retq (bad) sti lock rex.WB (bad) sbb (bad) push loop out (bad) xor rex.WB xchg mov (bad) fdivl rex.WB cli rex.B mov push sub out (bad) jle fstl and cmp adc jg pop movsl jl sub xchg rex.R addr32 iret mov in pop stos lods rcll (bad) add movsl mov leaveq jnp adc shrb pushq adc mov (bad) (bad) in rex.WR movabs rex.WX jge xor fadd rex.RB rex.RB int cmc test add mov in (bad) rex.W insl rex.X mov xadd push movabs sbb rex.RB add (bad) lea rex.W lock out pop addr32 rex.RXB rex.R test rex.WR (bad) fisubrl stos cmp xlat out int lret pop rex.WX sbb nop rex.XB int3 and cld rex.WXB gs or sub mov mov ss (bad) pushfq sbb out jo pushq fnstenv sbb pop or andl idivb vcvtss2si push sbb rex.WB fdiv (bad) rorb rex.WX vsubps sub add pushq adc xchg shrb mov pushq jp,pn rex.WXB (bad) imul in callq test rex.WRX and mov out cs push sub rex.WRB fsubl rex.XB (bad) mov push rex.WB cs scas xchg xor insl mov mov imul add rcr push addr32 and sub rex.X ds adc or adc out lods rex.WB rex.WX repnz hlt rex.WB sahf lods addl scas cmpsb movsl pop or pop cmp sub (bad) (bad) mov shrl scas in add pop cmp cmpsl fildll stc sbb jns or frstor xchg mov add lock xchg mov push or icebp mov cmp test movabs (bad) idivl es jnp (bad) add mov pushq cmpsl cmp rex.RX rex rex.WB sahf leaveq outsl xlat roll cmc icebp pop sbb (bad) fcmovne ficompl (bad) add stos push mov sub pushq mov es mov sahf rex.B push cmp rex.WXB mov mov (bad) pop jnp xor out cmp (bad) pushq movabs adc (bad) rex.WB rex.B imul sub xor rex.WB in and mov test pop jns enterq movabs rex.B retq test callq xchg sbb test je or adc lret xchg push lahf (bad) sbb enterq jbe loopne rex.WB cmp retq (bad) mov sub mov rex.WR test mov cmp cmp in test cltd (bad) cmp rex.WB divb pop or nop sti sbb (bad) loope fwait sub data16 sub ds fisubl lahf repz sub movabs cmp mov in fisubr lods bnd rex.WRXB movsl or (bad) sbb shll pushq cmpsb rex.WR addr32 out cmpsb mov mov (bad) mov loopne pop add add xchg xchg rex.WX movsb or mov data16 xor xchg rex.WRXB xchg rex.XB rcrl cmp fcomps rex.WRX test jrcxz sub xlat cld sbb pop fdivs pushq mov push or xchg popfq push stos sub fsubrl mov fdivr pushq nop push rex push fs mov pushfq push and sbb (bad) lods jo,pn (bad) fildl rex.XB cld rex.RXB pushq (bad) jno gs fwait cli outsl lret decl jp stc jne adc std rex.WXB pushfq scas (bad) sbb stc popfq cli sub ja xor sub add mov (bad) sbbl lods rex.WB imul sbb mov or outsb mov ss rex adc xlat cwtl (bad) (bad) pushq jne pop pop jge and retq rex.WRB rex.RB add cli loop data16 push xchg xchg fcmovb movabs test adc imul adc cmpsb rex.WRB data16 addr32 movsb test rex.XB xor mov xchg pushq xchg sti (bad) mov movaps add pop pop in movslq roll (bad) mov rex.WB std lods (bad) popfq rex.WB jmp cmp cmpsl addr32 divl and icebp cs movslq pop addl cmpsl add adc sub jl jrcxz movsb shl sbb xchg jne rex.B and jae data16 stos (bad) mov (bad) xchg push jp gs pop push in add out addr32 (bad) pop fdivl sub and add pushq mov xor mov loopne mov lahf fiadd mull enterq jo mov or movabs out pcmpgtd jo rex.X (bad) pop mov adc or notl xchg jge or and cli outsb push in pop vsubss cmp gs xor movabs or pushq xchg xor pop jle xor mov cmpsl (bad) mov int3 movabs (bad) mov cld outsb (bad) (bad) rex.XB mov cli and mov (bad) repnz pop fstpt cltd mov fild rex.WB jp (bad) rclb adc or (bad) cmp push cmp data16 iret outsl rex.WB rex.RXB sub js sub out sub (bad) faddl jl lret sbb xchg test sub (bad) rex.XB rex.WB fildl xor xchg rex.R rex.WRX out pop mov sbb loope test retq jns (bad) (bad) (bad) (bad) fisttpll stc adc test mov xchg out rex.WRB rex.WB sbb fcom push (bad) xchg or jl outsb push or jge push imul jrcxz push in rex.WB and jle pop (bad) sub loop rex.WB imul adc xchg (bad) (bad) int rex jmp repnz mov cmp movsl (bad) fmulp rex.WB mov push out movabs mov roll and hlt push push movabs out imul adc rex.WRX movsl jae imul fsts movabs cmp (bad) je rex.WRB add scas rex.WB (bad) jno sbb rcll (bad) add leaveq or mov jp (bad) rex.R loop jbe orl out fsubrl ss mull or hlt pop rex.WB scas mov test mov retq xchg outsb mov mov sub (bad) (bad) test (bad) pop rex.B add (bad) fcomp jle sub stos mov pop test jae pop xchg sub jrcxz leaveq or out sbb movsb mov fcomi movabs fldenv xchg adc shll fcom rcrb (bad) icebp adc xchg lret rex.WB repz jp rex.W pop sub mov sub mov cmp jnp xor xor clc adc stos mov mov int3 imul mov movslq imulb shrl (bad) xchg lret jb mov outsb insl and cmp movabs cmpsl cmp js je imul mov (bad) imul add (bad) imul lret mov adc es or jrcxz sub fs jb or jmp stos icebp hlt cmp (bad) sbb cmpsb shl divl xchg outsb (bad) test stc movsb sub mov out pop xchg jno mov imul lods add push and leaveq int addr32 test sub loop rclb stos repz pushq (bad) mov out stos jno sub sarb xchg je mov callq js push pushfq xor nop mov jbe jle sub sub test idivb jmpq int3 ficompl movabs cmp stos mov mov xchg ficoml sti pandn pop sub nop jns xchg cmp pop (bad) mov pop (bad) pop jno incl rcrl or rex.RX cmp (bad) xchg cmp hlt loop and or xor mov pushq scas sub movsb push sub xor pushq mov rex.WRB cmp mov (bad) xchg repz jno adcb (bad) jo sbb xor jle movabs mov xchg push sub xor push (bad) mov adc rex.WRB rcr push xchg test pop rex.RB xchg nop rclq (bad) insl mul sbb jnp (bad) or test cmp cmc mov mov rex.B xchg insb sub mov (bad) jg mov rex.WR fstpt and rolb cmp (bad) xor (bad) pop movslq (bad) callq sbb lret add scas or rex push cmpsl nop and cltd jp rex.WB pushq (bad) pop movb sahf pop xchg cmp stos cmp add cmc pop sub lock (bad) push or rex.WB lods sbb (bad) rex.WB stc insl cmp addr32 (bad) cli pop sub sub xor lret or jmpq callq xor rex.WX movsl or divb (bad) cmp lock mov (bad) icebp rex.W adc (bad) mov xchg xor add lahf or cmp sub pop fmulp or (bad) add mov sub mov cltd cmp (bad) cmp movsb pop mul (bad) lret lret and jo or or push rex.X in or retq cmc enterq fidivr jb stos cmp cld out fs jnp add sbb gs sub fucomip cmp add scas cmp add xor pop out jmp jle pushq (bad) mov (bad) mov rex.WB ss clc rex.WRB sub xchg (bad) rex.X and (bad) ficompl loope in sysexit cmp push fs or jp mov sub and sub sbb rex.W shlb pop add (bad) cmpxchg sub (bad) (bad) rex.RB mov rex.RB rex.WB push cltd sti movabs insl mov mov rex.WRB jle xchg pop push lock push (bad) orl es mov rclb rex.B xchg test push or rex.X rex.R jne mov or pushq iret (bad) pop (bad) sub mov push sub sbb movsl incl movabs mov (bad) rex.WB mov mov sub leaveq cmp mov imul out insl clc push cmp movabs (bad) push jg cli pop test mov push scas imull rex.RX fadds adc adc icebp push in rex.XB addr32 rex.WR movabs xchg rorb sub mov jns int3 (bad) (bad) lock rex.R movabs adc jmp frstor in jno mov pop jg and xor push rex.WB and xchg fucom scas pop fs repz pop (bad) (bad) add rex.WB push movabs pushfq rex.WRB (bad) fbstp mov and xor (bad) cmc push fnsave push push (bad) mov fs rex.RX movabs mov std pop rex.WB repnz mov (bad) push (bad) pushq (bad) movslq add shl rex.WB sbb outsl gs sub test mov cwtl mov push gs mov (bad) or sub and rex.WRB rex.WB rex.WX (bad) jne push cmp rex.WB iretw xor in mov or movabs repnz or outsl xchg rex.B or test (bad) gs rex.WB sbb jbe mov cwtl (bad) (bad) cmp pop mov (bad) rex.WB push popfq mov rex.RXB pop mov not or ja movabs mov rex.WB ficompl (bad) (bad) sbb int3 repnz rex.X (bad) cld (bad) cs movabs enterq rex.WRB or adc adc fisttpl (bad) (bad) (bad) loope jl movabs jbe mov loopne pop rex.WB (bad) mov and xchg cld (bad) pushq stos sbb cmpsb cmpsl rex.WB outsb sub or and pop pop jb movsb mov shr jl imul loopne xchg adc rex.WB cmp (bad) fnop mov movabs in add jmpq rex.WRB rep mov (bad) insl jl (bad) sarl jns rex.WRX ss sbb movabs shrl mov (bad) (bad) (bad) rex.B adc rex.RX add mov outsl sbb lock add add test mov rex rex.WB and movabs pop test (bad) rex.WB lret or sbb (bad) and rex.B (bad) gs movabs rex.WXB xchg xor push rex.WB fs (bad) shrb xor add in fst pop addr32 cmp repz sub mov rex.WR rex.WB or mov (bad) jl (bad) rex.WB adc iret nop callq add sub pop rex.WX jnp out rcrl (bad) xchg xchg mov jle (bad) mov pop mull movsl (bad) pop leaveq sub jmpq jne rex.WB test rex.WB xor iret or or xlat callq (bad) xor rcll rex.WB adc retq rex in lea rex.B fwait repnz mov fstpt push movabs ss cmp jno pushq std pop cmpsb sbb rex.WRB rex.WR movabs (bad) xorl (bad) pushq retq (bad) rolb xchg (bad) vpunpckldq mov (bad) xchg rex.RB test xchg or xor pop out pop (bad) rex pop rex.XB jnp pop cltd movsl sub movslq xchg xor fistpll pushfq mov (bad) sbb mov push hlt jle and movabs xchg jp mov xchg sub sub (bad) pop imul sub (bad) (bad) and xchg (bad) push fistp addr32 movsb rex.RX icebp sub jbe icebp outsb int3 (bad) rex.X sarb in stos mov sbb sub jo rex.WRX cmp insl sti mull pushfq jno adc or push mov xor xchg mov add adc sbb or xor repnz xchg cmp lret (bad) rex.WXB loop mov or rex.WRX xchg adc pushq lods or outsb (bad) pushq enterq flds mov add and add xchg movabs push pushq push std jge adc mov cmp pop cmp xor sarl push xchg mov (bad) popfq adc movabs fdiv push cwtl xor (bad) (bad) (bad) push leaveq push gs rex.RB mov movabs cmp push jl or sbb (bad) pushfq (bad) add shrl sub and jge je push rclb mov test lods xchg out pop rex.B sbb xchg lret and (bad) adc jno mov lea mov in repnz addr32 jo (bad) and (bad) rex.WB mov adc pop and xor int3 and mov (bad) push pushq (bad) (bad) sbb push jo push or movabs insl sub fwait rex.WRXB (bad) sbb rex.RB outsb fsub rex.B rex.WB pop or mov sbb cmp xchg callq pop (bad) movabs (bad) jae outsb sub (bad) xor mov (bad) cmp and cmp push push rex.WB jne movabs out loope out push jbe movabs add jg (bad) retq mov pushfq mov push rex.R adc loope and fcmovne add jnp cmp xor (bad) or callq movslq push adcl rex.WXB mov ja lods (bad) fnstsw cmp retq sar out stos sub in sub rol sti faddl movabs sub jns (bad) lret (bad) rex.WB fbld insb jns rex.X cld xchg (bad) (bad) sbb lods xor mov (bad) or mov imul lods xchg fwait xor mulb sub rol xor cmpsb idivl jae or movabs rex.WX (bad) pop rex.X pop vmovntps pop sub and hlt stos push std clc push (bad) gs adc mov lahf cmp rex.WB jae mov xor fmuls maxps jmp sub mov pushq or xor sbb rex.RB rex.WB add (bad) adc (bad) (bad) sub cmp xchg in loope out jno sti (bad) pop cli rolq lock movabs imul adc (bad) (bad) push or adc rex imul sub sub (bad) jge and adc jns rex.WB xchg mov shll mov jl (bad) loope movabs add jmpq jle movsl or callq rex.WRXB pushfq cld rex.WB fcmovnu push pop movsl pop and and movabs fwait sahf rex.WRX scas adc cmp mov sbb rex.XB mov push rex.XB fs stc std rex.WR adc push or mov hlt (bad) jl or movabs sub (bad) (bad) sbb ss rex.RXB sub or sbb jle sub (bad) push int3 xchg (bad) out adc test pop cmp mov xor pop rex.WR rex.WX add add pushq adc movsl pop adc sub pop mov rex.WB pushq mov idivb pop nop ja hlt movsb fisttp pop and leaveq adc test mov (bad) (bad) enterq ja hlt cld pop outsb jb mov xchg adc and pop jo rex.WB mov rex.W movabs and (bad) rcrl rorb mov xor or sub es push mov mov jne out scas mov dec jae sub (bad) sub (bad) (bad) add pop mov adc and scas rex.WXB mov movabs (bad) sub and (bad) push rex.WB data16 sbbb (bad) scas loope cld rex.WB and out jp test fstl mov loop in stc pushq pushfq movslq cwtl (bad) and rex.WB and adc repnz jb jg push rex.WB sub xor sub rex.WRB lea cmp mov retq cmp int cmp movsb loopne rex.WB rex.WR xor mov cmp pop (bad) (bad) mov sti out mov and sub (bad) lret (bad) sub rex.WB mov cmp lea pop and push sub pushq push sub add rex.WB sbb rex.W rex.WXB or stos rcll xor jle push jns pushq ja cmp movabs jmp (bad) out or imul and rex.WB or in callq xchg loop mov retq fisubr cmp loopne sub stc (bad) pop callq add rcr in rex.WB test pushq rex.WB jne cqto push nop pop push or rex.WRB xchg pop adc js callq jp rex.WRX cmpsl mull cmc rex.WX mov mov rex.WX jns xor push movabs mov push fisttpl adc add mov std mov cwtl push and xor adc pop (bad) movabs xchg out mov cs push loopne push lods (bad) pushq (bad) sahf int3 rex.WXB (bad) rex.B rex.WB lret stos adc xlat jmp in rex.WX push and (bad) (bad) rex.WRXB cld (bad) xor out lods ds pop ja callq (bad) (bad) in xchg jmp rex.WB rex.RB rex.WB sub rex.XB out and rex.WRB (bad) xchg (bad) testl pop frstor xor (bad) rex.WB xor sub movabs (bad) xor fisttpll out fdivrl (bad) mov test inc (bad) rex.WB int3 fisubrl (bad) pushq push (bad) xor push jle xchg push xor cwtl push test sub imul jp loopne and loopne (bad) rex.RX rex.WB or jae int3 cmpsb pushq nop pop jge jmp rex.WB fidivrl sub rcrb jne clc rex.WXB or sub add push loope retq push std mov out xor andl rex.WB mov add insl (bad) add rex.RX pop mov lahf sbb imull rex.WR (bad) jno orb xchg lods stc rex.WRX jns popfq and lret repz fwait ss (bad) rex.WXB rex.WB enterq and imull sub jmpq lea rex.WB sbb int3 xchg fdivrp movabs add icebp js push xchg movsb (bad) test (bad) out and ss sbb jno adc sub adc sti sub rex.X xor push cs mov push sub lods addr32 push rex.RXB mov imul rex.WX or mov insb (bad) jbe jmp in push test mov adcl nop pop or cmp cmp retq xchg or jmpq rex.WRB (bad) rorb imul insb loopne movabs jne rex.WRXB pop or iret movabs sub callq in je mov hlt and (bad) gs cmpb scas xchg cmc rex.XB push rex.WB xor pushq sbb scas rex.WRX lret lret leaveq (bad) clc mov jns js adc cwtl enterq rclb and lock rex.WRB xorb (bad) pop cltd fistp lods xchg loop (bad) xor test movsb mov popfq repnz or (bad) mov in (bad) rex.RX rex movslq mov pop test xor out push fs es jae fst jns xchg sub fyl2xp1 rorl cmp jmpq js retq (bad) rex.WRB rex.WB cltd callq pushq jns rex.WB rex.WB adc mull sarb rex cmp (bad) cmp rex.WB int xchg and jns jmp insb add (bad) (bad) mov xor loopne js pop (bad) push sbb or int3 pop stos shll mov pushq int3 push xchg rex.WR data16 sub xchg cmp js callq or lock test (bad) sub and push rex.RB movsl rorb or cmp sbb (bad) sub pop sub (bad) adc iret pushq cmp test nop adc fcomip pop cmpsl mov push cld out pushq sahf and add fisubr jg retq jbe (bad) in sbb or jmpq imul (bad) or rex.WB insb out popfq and cltd rex.WB rex.R int rex test int3 in rex.WB sbb int callq mov sbb rex.WRB (bad) (bad) rex.WB (bad) add add rex.W sub adc ss (bad) test clc es in cmp mov rex.XB pop add rex.WB add fiaddl out pop sti cmpsl (bad) (bad) xchg (bad) cmp out sub mov xchg pop fdivrs popfq fist push rex.RX es lahf xchg sub jg clc in imul pop gs fcmovnu pop lea adc xor rex.WR pop out test (bad) jno movabs xchg jae (bad) sbb add rex.WRB and (bad) or (bad) add movsl mov sbb mov or shll jne mov sub (bad) cmp pushfq or pop rex.XB rex.WB cs (bad) and pushq cmp int3 (bad) lods test out add rex.WRX data16 (bad) pop rex.WB xchg cmpsb rex rex.RX rex.X push (bad) retq adc pop sub pop sbb and sti or (bad) (bad) push mov out sbb or lret je sarl rorb cmp mov movabs jo movabs push rex.WRB (bad) lock out or (bad) cs sub fxch test lods sbbb rex.WX rex.RX xchg js mul (bad) push jge,pn cmp loop pop (bad) rex.B rex.RXB add fwait iret xchg pop addr32 mov jb pop and xlat cmpsb stos test (bad) add shrb and test mov (bad) int3 (bad) cld mov scas rex.RX jmp cmc (bad) push scas lret (bad) cmpsl fwait stc lret (bad) (bad) cmp enterq xchg push mov sarl repz sbb sub (bad) (bad) (bad) push mov cmpsb je in out fsub or mov enterq int jne mov xlat movabs roll add cltd jrcxz pop retq rex.WRXB mov (bad) sub push cld (bad) jp imulb mov mov rex.WRB rex.XB movslq pop imul (bad) pop sbb movsl loop xor lret pushq pushq hlt mov shr mov push (bad) xchg int xor xor insb (bad) (bad) fisttp jne add push shl (bad) add scas or movabs lahf rex.WB test push (bad) adc sub rex.WB push adc rex.WB and jrcxz push movabs rex.WB xlat xchg or (bad) jmpq pop mov imul rex.RX repz addr32 rex.RXB add cmp mov xlat lret or rex.WX movabs fiaddl fstl lahf add (bad) callq shr insl pop pop push in sub in (bad) rcll (bad) sti stc mov mov (bad) fcmovnbe xor in (bad) (bad) rex.WB pushq sbb mov or rex (bad) cmp test movslq and sti jnp mov rex.WRX movabs push callq jbe lea int jrcxz xchg js rex.WRX lock rex.WR and repnz rex.WB in rex.RB in (bad) adc mov (bad) cmp add in scas jno or test stc push xor fist and xchg jns pop (bad) rex.WB pop addr32 lcall jmpq callq sub popfq adc out jnp rex sbb pop mov shll push (bad) sbb or xchg movsl pop ds pop jne sub ds testb (bad) xlat sahf pushfq mov sbb pushq push jbe lahf (bad) xor es adc and shl add rex.WB rex.WR iret or in lods loopne scas push jl fdivs ficompl test xchg insb pop mov es cwtl in sbbb adc push mov adc mov pop rex.WB mov jno outsb out (bad) or sbb nop xchg xor adc cmp rex.RX lods push insb pushq rex.WB rex.WRB and mov lods movabs add mov retq (bad) fisubr rex.WB test leaveq (bad) lahf sbb mov and xchg ja adc scas mov movsb cltd rex.WB int3 movsl and loope jle out test enterq rex.RX push rorl mov rcr pop (bad) cli movabs rcll rex.WXB xchg sub and jge (bad) adc fistpll rex.RXB (bad) rex.WB addr32 and xchg rex.WB fistpl cmp sub (bad) rex.WXB pop and gs rorb rex.WX mov icebp push pop loop jbe rex.XB rex.WB mov and rex.WRB repnz (bad) rex.WB stos (bad) add je rex.RXB rex.WB mov (bad) sub jge add and movabs loopne int3 xchg (bad) push rex.WRXB (bad) and cwtl pushq jg rex.X mov loop mov outsl fimul add data16 mov cwtl mov jmp fbld enterq sbb rex.WB add pop and clc jne pop rex.X pushq test stos (bad) cmc rex.WB rex.WRB (bad) jmp mov jb rex.XB sbb push int xchg mov bnd rex rex.WB (bad) stos out idivb rex.WB test cmp movabs xchg cmp insb sub jmp jo pop sub (bad) jnp push icebp in rex.WB (bad) lret cmp pop sub or popfq push fstpl xorb rex.WB out xor sub rex.RXB push scas gs subb or (bad) sub cmp push mov jnp lret xor pop rex.WB add je jae rex.WB xchg fwait repnz addr32 callq sbb scas pop retq adc rex.X xchg fisttp add xchg (bad) push xchg sbb mov add cmc in add rex.RB rex.WB xchg push cltd push mov movabs out add mov and std decb sub pop jae mov push (bad) cli xchg rex.WRX (bad) and cmc xor rex.WRX mov fisubrl pushq insb (bad) pop rex.X sub (bad) or xchg rex.WB push retq rorl sub push fstl push rex.WXB rex.B rex.WR push movabs sti pop movabs (bad) pop enterq imul xchg mov pushq push (bad) in rex.B sub and rex.WB sti rex.X loopl,pt rex.WB scas (bad) (bad) jge (bad) rex.WB (bad) fmuls int (bad) rex.WB lret (bad) rex.WRX or lahf and (bad) mov rex.XB out fsubl and push jns pop or and rex.WRX (bad) mov cmp std (bad) mov adc pop mov stos mov pop rex.WB mov out repnz cmp (bad) rex.WB gs xchg fisubrl xchg (bad) and cli pop add mov rclb scas (bad) hlt fwait cmp loope xchg add fnstsw adc mov cmc (bad) retq sub (bad) fisttpl outsb rex.WB push movabs imul push rex.WB mov insb (bad) sahf repz (bad) add (bad) push and icebp xchg adc push sub rex.WB mov and lock lahf loopne loop fildl mov scas (bad) rex.WB in (bad) rex.X js int xchg movabs rex.WB pop (bad) sbb sub mov (bad) mov or lods and lret push loopne adc adc hlt mov or mov in mov sbb fnstcw xchg jmp outsb rex.RB (bad) lods (bad) (bad) rex.WB lods pop addr32 rex.RX in cmp rcrb or (bad) lahf rex.WB es and jnp xor jrcxz pop (bad) fcoms pop (bad) orl outsb test (bad) pop scas mov sub fwait mov clc or ss stos push sub bnd lods rex.WXB imul psubusw jg (bad) loop add sub rex.RX (bad) out testl mov mov scas or rex.WXB add rex.WB rex.B mov jae xchg cli stos or iret jne sub lock test push movabs hlt cli movsl (bad) loopne push or inc movabs movsb (bad) push test and and and rex.WB (bad) divl lret or xchg xlat xor out pop gs (bad) push (bad) movabs sub rex.WRXB adc loope,pt xchg out jne sub add or (bad) pushq mov rex.RB int3 xchg add sbb (bad) in jo sub push orl lahf (bad) jp cmp loope and or adc mov addr32 (bad) rex.WRXB mov repnz ja jns jmpq jns push and sub sbb add xor lret jbe iret cmc rex.WB rex.WR out insl in (bad) pop test push sbb rex.RX nop movslq movslq outsl jg add lret lods ja xchg (bad) (bad) rol sahf xchg rex.WX pushq add movabs (bad) rex.WRX push movslq pushq sbbl rorl pop rex.R xchg shl or std test fldcw loope shlb (bad) rex.WB rex.WRB pushq nop push mov (bad) pop sub (bad) sub sbb jb sbb sti rex.WXB insb and roll xor outsl jle (bad) push mov push movabs sbb xchg imul rcrb (bad) outsl movsb xorl rex.WR pop jg or std jns add xchg (bad) (bad) (bad) vpunpckhbw add imul jge adc movsl packssdw (bad) stos push outsl lret rex.RXB pop and rex.WB (bad) imul jmpq js cmp stc scas out sahf mov cmp fs add push mov adc and rex.WXB mov in jno gs mov jnp test (bad) data16 (bad) enterq jle push rex.RX xor (bad) js callq sbb mov rex.WB fs cmp hlt (bad) sbb fldz pushq in jns sub pop (bad) and or pop movabs xchg jns mov rex.RX rex.WX addr32 rex.XB repnz cli data16 add xorl rex.XB cmpl pushq (bad) rex.WB repnz cmpsl (bad) mov clc jno movslq callq rex.WX or lods xor in iret imul jmp out cwtl pop jge cmpsl movsb loop test btr (bad) iret in test hlt or out rex.XB movabs (bad) or or leaveq movabs lret cs rex.RB shl push mov fisttp popfq loopel xor rex.XB (bad) jno rex.WR stos rex.RXB mov gs movslq test adc rex.WRXB rex.WB (bad) int movabs and out out mov loope jl (bad) test (bad) int3 in jg je rex.RX jb push jl scas xlat sub (bad) in imull and rex.WRXB mov callq fwait jg push rex.WRXB mov xchg mov (bad) leaveq rex.WXB and jmp or (bad) roll sti xchg fsts gs mov cmpsb mov mov rex.WB rex.WRX pop xor rex.WXB lret fcompl mov push jle movabs in pop xchg out lahf lret jbe retq (bad) adc test mov mov imul (bad) test jb jns insb pushq add movsl repz jp out fisubrl pop sub and lret rex.B rolb mov subl int fwait (bad) jg cmp cmc push out icebp gs mov rex.WRXB rex.XB fs and rex.WB mov (bad) xor mov rex or pop ds (bad) and out movabs cmp push outsl lock mov rex.RXB (bad) movabs rex.WX sub sub adc and mov mov out sub mov add rex.WB or or sub mov stc (bad) je (bad) mov or jb hlt xchg int mov mov icebp cmpsl stos pop out rex.WB jrcxz jb rex.WRB rex.WB sbb movabs mov out (bad) sbb movsl sbb pop pop movabs sub lods sbb in mov movabs or es retq (bad) xchg pop mov adc rex.WB jp fwait cmp rex.WB rex.B rex.WRXB xor jl fildl imulb psrad xchg sub int3 callq testb rex.WB pushfq jle fnstcw xchg or retq (bad) fisubrl rex.WR fisttpll fdivl jmpq and and rex.XB pop rex.WB pop rex.WRX adc pop rex.W rex.X rcrl pop adc pop outsl ror rex.WB hlt jns jnp xchg out movsb clc stc rex.RX add loope mov std callq out rex.WRX (bad) sahf cmp gs push and sbb mov rex.XB stc lret int3 rex.WR mov movabs pop xor (bad) test adc and (bad) mov pop negb andb push jmpq enterq frstor scas mov mov shlb add out xor divl cmp xchg rex.W pushq cmp xchg xchg (bad) rex.W xchg subl xchg ss rex.RXB mov adc movsb cmc mov pop jns out movabs movsl popfq cmp mov scas test rex.WRB rdtsc jno outsl xor jle rex.WR (bad) xchg mov fxch mov (bad) or pop sub rex.X (bad) in xchg adc push sahf cmp enterq pop sub sub jmp sahf cmp mov (bad) (bad) iret mov xor xor rex.WXB not clc jmpq xor mov rex.RXB pop pushq rex.WXB callq in cmp enterq rex.WX (bad) jbe adc lods mov (bad) (bad) mov or add loopne (bad) adc movntps test shrl and movabs (bad) (bad) rex.XB sub movsl rex.WRXB loopne rex.WX push lods jno cmp rex.RB callw jo hlt or test divl sbb push rex.RXB xor cmp test xorb (bad) push xchg mov (bad) loopne (bad) movsb jle or mov or lret callq (bad) mov rex.WB outsl fwait (bad) rex.XB jle pop fild push rex.RXB pop pop cmpsb ficompl rex.WB rex repnz lret psrlq stos rex.W rex.WRXB cld (bad) (bad) (bad) repnz jbe insl test pushfq cwtl rex.WR add add mov out pop rex.WRXB scas es (bad) retq pushq lretq repz orb push xchg add adc pushq rex.WB (bad) cld mov jns movabs xor adc iret jrcxz insb rorb mov rex.RXB fs test out adc jne and test sub and cmp enterq add leaveq xchg sub lahf pop addr32 jge xor xchg rex.WXB rex.WB add cmpsq rex.WB xchg sub jge ficom push addr32 rex.R add int sub cmc jbe es addr32 fildl pop repnz sbb cld pop out rex.WXB nop movabs retq mov or out data16 insb xor lret push loop int3 rex.R comiss divl sbb imul cmp imul out rex.WRXB jbe pop rex.WRX xor rex.XB xor data16 and jmp pop mov in xchg imul fs movslq or rex.RX fild sub leaveq and cmp and (bad) addr32 leaveq ja or (bad) nop xor mov (bad) pop js mov sub data16 sub rex.RB movabs nop rex.WRB sahf jnp or fldenv sub fidivrl insl push shl (bad) movabs out js mov (bad) orl movabs xor movabs psubusw pushfq std lods (bad) in mov rex (bad) rex.WB mov adc sub shlb mov enterq (bad) ja scas jg clc rorl sbb push lods mov outsb cmp out pop out cld sbb xchg sbb mov rex.WRB rex.WB stc fs and sbb (bad) (bad) (bad) rex.WB lret pop cltd (bad) int sub sub scas mov movslq repnz lock shrb (bad) es cmp data16 movabs xchg (bad) out lock adc callq insl paddsb sub xor pushq (bad) stos add cli sahf stos adc (bad) sbb fisubr fwait jne push (bad) (bad) and pop test mov cmp adc outsb (bad) pop gs negl push xor mov cmp fwait hlt ror lods enterq xorb xchg push push jo (bad) rex.R mov stos add xor test rex.R rex.WXB mov (bad) loope adc rex lret (bad) movsl xor mov cli push lret push mov adc cmpsl sub mov pop jl xor jl xor (bad) sub es pushfq push xor mov mov cltd adc jb pushq int (bad) sub movl cmpsl enterq rex.RX jb mov and je or sti xor scas xchg or imul cmp movabs mov xor cmpsb xor (bad) adc jmp jp pushq (bad) cmp out push (bad) retq js or pushq and std jl and xor sti sbb cltd or cmp (bad) je rex.WRX (bad) js mov xchg or test pop and or test fcomps out mov push cmpsb addr32 movabs jmp mov retq movabs rex.WX sbb cmpsl and and orl (bad) xchg or cs (bad) jne (bad) xor stos rolb fiadd xchg xor sub nop testl outsb pushq test (bad) mov xlat cmp xchg mov fisttp adc (bad) rex.WB mov movabs cmp (bad) fcmovbe or insl imul movabs and adc mov ljmp cmc mov push rex.WX rex.WB clc test adc movabs cmp mov xchg scas movslq mov pushq callq mov movsb rex.WB sub (bad) xchg push popfq (bad) outsl cld je pop (bad) (bad) stc adc sub push clc push movabs mov imul fidivl loopne cli (bad) pop rex.WB decb push (bad) rex.WR push xor or subb (bad) xor and (bad) movsb sbb (bad) rex.RB pop sti or in xor (bad) movabs or mov sahf xchg jo pop and retq leaveq xor mov (bad) rex.X leaveq pop rex.WB repnz xchg in sub (bad) sbb (bad) (bad) xchg test xchg sub push mov mov rex.WX (bad) in push xchg in movabs (bad) mov rex.WX clc jo jno sub movabs rex.WXB cs jg test (bad) push jns int rex.RX (bad) test cli rex.RXB (bad) insb fnstcw (bad) test out sahf cmpsl lock rex.WX rex.WRX mov (bad) slwpcb nop mov cmp gs outsl adc scas rex.WRB test movabs fisubrl (bad) rex.X (bad) sub mov sbb loopne add movabs insb and sub cmp sarl sub (bad) jnp (bad) sub fldz mov insb fiaddl add cmp imul push (bad) push xchg movabs push (bad) and and rex.WB fsts (bad) (bad) add xchg xlat hlt pop and fcmovnbe fimull cmp int or pop test rex.WB (bad) icebp xchg mov pop xchg jmp (bad) rex.X loopne mov jb out pop and pop sub ja lahf cltd (bad) pop (bad) movabs jp mov add xor out iret pop mov sahf and ds loopne lret (bad) fisttp mov pop popfq rex.WB jge sbb cmp rex.WB (bad) jbe (bad) cwtl rex.RX xchg movabs std (bad) cld repnz rex.WB sbb es rex.WB xchg rex.WB rex.WX (bad) adc rex.WB jrcxz rex.WB (bad) jle sbb (bad) imul hlt rex.RXB cmc mov (bad) lahf fcoms push xor jno fisub mov push mov jae callq xchg adc add rex.WB orl (bad) imul out je xchg rex.WRXB pop pop or and test movabs callq add and movsl xor (bad) xor xchg sbb movl add pop in (bad) out cli xchg and sub sbb js sub leaveq stos rorl sarl rex.WB rex.RB ds out imul and nop stos sub (bad) mov push jns rex.B rex.WXB xchg cli pushw xchg (bad) adc int and out loop mov and mov mov mov adc pop cmp push test xor outsb (bad) jbe in test cmp jmp jp,pn add mov jno xor rex.WR leaveq addr32 cltd movsb push mov xor and pop (bad) sub mov rex.WXB movslq sub jo sub (bad) rex.WR rex.WRXB cli movsl pop rex.WR (bad) adc ja mov cmc and mov popfq xchg xor mov mov cmp cmp leaveq (bad) pop loope es cs (bad) nop gs mov imul jae rex rex.WB pop sub add scas add add (bad) movabs xor in (bad) lret sub (bad) std xor rex.WB movabs sbb pop pop jg movslq out (bad) jnp (bad) pushq stos movabs rex.B addr32 jns rex.WB mov cmp out movabs (bad) (bad) jle lods int push mov divb (bad) enterq (bad) int jl lret add rex.WB in pop pop push rex.WRB rex.RXB rex.WB or pushq rex.WB outsb or cmpsb (bad) mov pop cmp pop test xor rex.WB jmpq fcom adc rex.WRXB rex.WB mov decb mov (bad) repz mov sub xchg or rex.WRB (bad) cmc rclb lock or mov jo pop (bad) (bad) mov (bad) rex.R rex.WR adc (bad) jae xchg imul jmpq and sub add add mov push and retq out jno rex.B rex.W xor (bad) enterq fldcw ss nop pop or mov mov lahf rex.XB cmp ror xchg jne adc scas mov mov (bad) out cmp out rex.WB add fisub fsub pop push pop xchg out rex.WXB or addb jae push scas adc (bad) in rex rex.WXB push sub mov adc xchg test js pop jmp (bad) movntq out outsl jl add push js mov and cmp jmpq xchg scas out (bad) adc pop (bad) fdiv jge mov pop cld (bad) add loopne add and fadds insl subb in cltd rex.R xor scas jo pop lahf addr32 add pushq rcrb mov add decl xor lret sub rex.RXB pushq adc retq divb (bad) rex.XB jrcxz (bad) lods jb imul cmp fbld jb js and mov insb xchg (bad) (bad) adc sahf (bad) sub mov xchg xor cmp fadds test jb and rex.W rex.WB xor mov mov cmp cmp (bad) rex.WX xor out adc sub lret jne,pn mov cmp rex.WB xor addr32 mov rex.B add (bad) insl rex adc push vpshlq int3 movb or adc push mov lret (bad) push test push hlt lock (bad) sub (bad) test rex mov mov nop repz push add callq out movabs and cmp (bad) pop adc adc push xchg jmpq scas (bad) fdivrl mov out ficom (bad) (bad) out callq rclb in sbb (bad) and cmp (bad) sahf movsb jmpq (bad) sub rex pop movabs movslq lock leaveq mov push insb es pop imul shrb loopne xchg rex.W add lock xlat loope rex.WB fadd imul divl or xchg jp (bad) jne (bad) jno rex.XB and or js or mull cmp and jle rex.WB rex rex.RB jrcxz movabs cld adc loope add and fisttpll rex.WB or rorl and leaveq movslq add out add in sbb pop and cmpsb mov mov loop xchg or lret fldenv movabs loopne mov clc and loopne push pop or or lods cmpsb push (bad) mov rcll clc (bad) sbb test mov nop rex.XB sub retq jae rex.WXB rex.WB scas sbb in lret rex.WB rex.WRB xchg pop xor in callq jae and mov mov mov repz (bad) sbb stc (bad) pop mull lahf fwait rex.WRB subq callq mov cmp rex.XB loopne mov (bad) xchg ja lret pop sbb (bad) xlat repz or repnz and (bad) mov jbe addr32 cmp in loope rex.WX rex.WRX mov movabs stos pop or mov rex.WB rex.B movsb rex.W xchg incb fcomps sti (bad) add rex.WB and callq and xchg xchg ffreep pushq fistpl gs cmp xchg jle movsl stos iret pop rex.WR rex.WB retq add mov rex.B or xchg add mov and loop rex.WB jbe je shr rex.WB mov iret rex.WB cmp (bad) sbb lock (bad) cmp in rorl gs (bad) xor and jb xor push xor pop push not rex.WB rex.WRX sub int pop rex.RX lods sub mov pop cmpsl adcb callq or adc cltd subl adc jbe mov stos or (bad) pop (bad) cs rex.WXB fnstenvs pop out and nop push jne pop xchg pop cmpsl jrcxz pushq xor movabs sub xchg jmp xchg movsl (bad) cmp mov rex.WB jae lret imul jle (bad) movslq rex.WB (bad) and roll rex.XB outsb es and mov push xchg callq jns xor rex.WXB (bad) mov mov test sbb mov js lret jge fstpt loope add movabs adc xchg adc outsb leaveq and callq cmp cmp xchg pop nop rex.WB mov vsqrtsd and jrcxz ficom sub fs xchg lods rex.WB jg gs ficom (bad) (bad) mov push in xchg movabs (bad) ss (bad) lods (bad) ror mov std mov cmpsl rorb int lret movabs xor movl sub (bad) test adc (bad) rex.WRB rex.WB xchg movsl (bad) test (bad) mov outsb out (bad) (bad) push leaveq add sarb movabs loope mov (bad) cmp add pushq or mov mov add cmp or xor sub xlat mov rex.WX (bad) rex.WB loopne or lcall push (bad) movslq mov rex.WB lock push push test cmp or fld rex.W fs movabs (bad) jns rex.RX xor pop (bad) and js (bad) pop repnz movabs movsl int3 movabs sarl xlat rex.B sub mov rex.WB sbb hlt xchg jmpq rex.WB (bad) pop and rex.WB cmp xchg xchg xchg add mov callq adc rex.WB and rex.WB sub rex.WB jo loope jmp lock rex.W jno movslq and stos pop sub out rex.WX add jae or xor pop imul movabs ja xor push mov fcomps sub pop sub sbb mov sbb enterq or xor (bad) ljmp jo mov movsl or pop sbbl (bad) (bad) jo test (bad) stos (bad) mov sub mov rex.WX push mov add push out push cli mov and je xchg push sbb leaveq or scas (bad) pop (bad) movabs mov sub subl fs rex.XB iret in hlt sub add rex.WX in cmpsb movsl gs rex.RX sarb push out jmp or xor mov add add leaveq xchg cmp popfq or rorb icebp nop js outsl (bad) sub pushq adc (bad) nop jge leaveq cmp xchg loopne rex.XB je mov sbb jae pushq rex.RB cmp mov adc imul rex.RX and push sahf (bad) enterq xlat rcrb cli or test jnp xlat fisubrl (bad) (bad) lret lods cmp xchg (bad) sub and adc adc add clc (bad) (bad) retq (bad) pop pushq push mov (bad) xlat lret xor xchg outsb and and retq pop and fbld lods (bad) rex.WB outsl sub cli sbb (bad) mov (bad) rex.WB or retq lea test cs mov (bad) movsb rex.WB vprotd insb rex.WRB cld adc xchg pop sub sub (bad) add rex add rex.WR add jp and cmp (bad) icebp (bad) (bad) pop cmpsl mov rex.W cmp decl loopne pop mov add add movabs xchg jrcxz adc mov mov and mov rex.WB scas jle lret rex.WB fwait mov add xchg mov sbb hlt jmp sbbl mov movsb and sub jbe mov xchg add jb callq insb pushq jp rex.XB mov xchg rorb or fistpll rex.XB loope retq rex (bad) imul cmp jb xchg popfq pop (bad) lahf cmp callq mov fs push (bad) callq pop rex.RB mov lods rcr wbinvd fsubp pop pop icebp xor test test (bad) pop rex.RX in (bad) rex.RXB (bad) sbb nop out testl test (bad) rex.X sub (bad) sbb sub lret lods movabs rex.WX push rcrb fisub and int rex.RB adc rex.WB pushfq (bad) nop jnp mov cmp rex.WB rex adc sbb loop jp lea sub push stos insb push sub enterq fidivrl or (bad) xor or out push cs scas pop adc std push scas jmp gs sbb rorb cmc repz (bad) out xor pushfq test fnstcw movslq mov sbb xor lahf lret icebp pushq pop lea lret fimull mov and mov rex.WB (bad) sub rex.RX (bad) adc rex.WRB ds rex.WB (bad) rolb (bad) pushq rex.WB and jae out loop xchg sub lods out jo enterq (bad) movabs cmp stos movslq (bad) icebp data16 jrcxz xchg sub adc rex.WRXB xchg cmc rex.XB (bad) mov cmp fimul pop add rex.WXB jne leaveq retq push pushq (bad) (bad) data16 adc (bad) (bad) andl xchg push add push xor nop packssdw sbb pop clc jrcxz jg jno sahf rex.WB xchg lods decl or rex.WB out xchg rex.WB rex.WRXB mov out jns sub rolb mulq (bad) pop movabs add lret rex.X cmpsl xor rex.WRB test shrl (bad) mov pop hlt rcll loope cmp (bad) pop and outsl rex.WRB rex.WB or in jb rex.R xor lock rex.WB cli and rorb (bad) jmp rex.WB rex.WRXB enterq sbb in lods mov rex.WRB std addr32 sbb sbb xor rex.B rex.XB add and lahf sub rex.WB jmpq mov (bad) xchg pop (bad) rex.WB rex.XB jnp cld rex.WRB rex.WB es movabs hlt pop lock test (bad) xchg jg sti or (bad) mov cs xchg jae push push mov insl leaveq stc sub cmp rclb movabs int fsqrt (bad) pop fnstsw out repz rex.WRXB addr32 addr32 test mov add xchg pop ljmp (bad) rex.WB sbb rex.RXB lea sahf stc mov push adc (bad) sub jno mov mov rex.XB mov or xchg (bad) std add rex.WB sbb xchg sbb rex.RXB jb int lods rex.WB and cmp xchg add cld fsubrl int3 ds and rex.WB and mov rex.RXB jnp jle (bad) (bad) sar xchg mov (bad) xchg repnz mov push sub or pop pop rex.WRB mov pop pop mov lods out addr32 mov iret sbb rex.WR add pop mov rex.WB xchg xorl outsl idiv sbbl push xchg add lea cwtl rex.WX (bad) rex.WB mov sub jmpq hlt push xchg or addr32 fnsave pop pushfq andl scas push cmovns (bad) (bad) sub fwait sub (bad) jo rex.WB mov leaveq and and enterq xor adc gs push rex.WB mov sbb pop push sub icebp cld sub (bad) mov pop cmp xchg (bad) mov push rex.WX and xor int3 cs movabs rex.WB rex adc cld xchg wbinvd fucom rex.WB movsl ds sub sbb mov push pop cs cld retq lret lahf callq mov sub sub and cmp mov mov fcmovnu (bad) clc imul sbb xchg lea movabs xchg in and nop or test cmc stos rex.WB and jae (bad) (bad) xchg rex (bad) scas mov callq rex.WXB rex.WR xchg insb sti jo sbb mov pushfq sahf (bad) (bad) fisttp (bad) test sub sti rex.WXB sub fstpl pop mull mov pop retq enterq rex.RXB jns and or add mov jmp adc and sub stos pushq rex.XB push (bad) rex.XB js fbld mov mov adc xor std cltd xor cmp addr32 pop test rex.B cmovno xor sbb xchg cwtl mov push pop out jp rex.WB (bad) xchg fwait or scas lock add repz iret stos (bad) addr32 rex.WB js insb rex.WB cld (bad) mov rex.WX fs sub lahf push (bad) movabs jl cmc fnstcw (bad) jb sub data16 rex.RB out pushq rex.WB movslq pushq (bad) sub mov jp sbbq jo rex.WRB xchg xchg in rex.WB movsb nop rex.B or cmpsb scas pop and test in (bad) mov movabs js jns movabs rex.RX add or icebp (bad) pushq (bad) (bad) mov jo rex.WXB rex.WRX or cmp shr xlat rex.X loop addr32 jp sub mov (bad) test add jmp rorb rex.WB xchg cmp pop sub rex.WRX rex.WB lret and xchg adc negb add loopne xchg lret (bad) js stc mov (bad) pushq sub cmpsl scas je push pop adc test sbbl test jmp xchg (bad) sarl pop sbb rex.X (bad) (bad) add or adcl shrb or and mov loop and adc mov push je lods in (bad) pop orb jae fisubr (bad) adc add retq jo jne gs push rex.WX push push pop jno rex.RX or jb pop and (bad) push vmaxpd leaveq sbb movabs fmull (bad) jl sbb sub (bad) jg mov iret test pushq and movabs gs rex.WR sbb (bad) popfq xchg push (bad) (bad) scas adc ja (bad) imul mov decb (bad) rex.WB (bad) cmp (bad) jle adc push (bad) rex.WB retq jmpq and (bad) test ror or fildll jae mov retq xchg rex.WX xchg sub loopne jge mov ds out rex.RB lret in std add pop xor fimul add (bad) pop mov jrcxz fildll mov leaveq lods mov mov out scas pop es pop xchg in mov (bad) rex.RXB iret xlat (bad) (bad) fcoms and rex.WXB xor mov pop insb stos mov jo jmpq retq rex.WB stos (bad) (bad) cmpsb adc rex.WB sbb add mov es mov (bad) pushq mov in (bad) in (bad) test out shrl ja adc jge movabs or rorb out rex.W adc jl rex.WB pushfq push fwait loop push stos roll sbbl rolb (bad) in (bad) fcomps rorb mov sub xchg out pop and rex.WX sbb jg and mov jb rolb gs (bad) xchg fmuls jo in movslq or mov rex.WB rex.R push adc cmpsb or jle rex.W xor sub lret (bad) cltd retq movsb or cwtl rex.X jne and xor or (bad) (bad) xchg stos push jbe sbb push rex.WRXB push in sti incb push mull or ja mov pop shrb mov movabs sub js jmp repz rex.WB test jo pushq (bad) sbbb jno mov outsb fimul (bad) sub add rex adc cmp cmc push and pop (bad) and cmpsl rex.WX adc sub loopne imul push jo xchg sbb push rex.WRX fimull rex.RB es stos movabs sbb lret cli out and jno lods push mov mov pushq rex.RX fcom or push (bad) mov mov add sbb shr insl sub cmpsb out imul fs sahf rex.WRXB js mov jrcxz cmp sub rorl je lret cmc ud2 mov rex.WB imul scas clc (bad) (bad) movabs adc cmp pop js sub insb xor rex.WRX addr32 cmovne rep pop cld callq rex.R push js push (bad) fldt rex.WB rorb and jnp nop (bad) movsl rex.XB sub (bad) clc adc mov callq enterq add pushq testl cmp sbb orl fs movsb int rex.WB cmp jae (bad) rex.RB or mov fidivr test rex.WRXB adc rex.WB (bad) sbb rex.WR jrcxz insl test jae out movsb mov xor mov cmpsl xlat (bad) (bad) js rex.WRB imul xchg and (bad) sbb scas or fdivl test push pop iret mov insb sub (bad) xchg rex.WRX (bad) (bad) pop movsl rex.WR lods or xchg sarl xchg push (bad) rex.WRB movsb mov fs cs enterq (bad) out rex.WRXB mov (bad) xorl jmp xchg movabs movabs push je retq push mov icebp sarl mov div xchg (bad) data16 sub or rex.WB cs lods and or mov rex.WB xlat (bad) cltd idivb xor rex.WB cmpsl cmp lahf and xor lods leaveq lret lret (bad) sub pop cltd gs mov (bad) callq sub nop leaveq lret mov pop movsb stos lea cltd jge callq movabs or movsl div cwtl push sub push rex.XB (bad) repz rex.WRX rex.W jmp adc hlt or rex.RX fwait and (bad) mov je fnsave xor fucomip rex.WX xor (bad) lahf or retq and cmpsl out retq rex.WX (bad) adc sub fs lods lahf pushfq loopne shrl imul push sub rex.WR test sub sbb callq (bad) mov es clc fiaddl mov pop jb adc fldt rcrl mov ss cmp push rex.WRB gs jp mov retq lahf rcll jmp (bad) test lret rex.WB mov pushq nop adc rex.WB movabs mov popfq stos (bad) mov (bad) xor (bad) cld xchg push mov ds rex.XB and cmp cmp rex.B pop adc rex.W ds mov insl or rex.RXB pop (bad) movabs adc shrb testl add pop push stos out nop stos xor lret movslq mov push rex.RXB mov mov adc enterq jge mov out jo jbe movabs out callq (bad) lods push (bad) mov xchg rex.WB and rex.WX rex.WB fadds movsl and in popfq test xchg or mov jns sbb int3 push ljmp mov xor jge mov push mov shll xchg movabs rex.XB scas rcrl fildl mov cwtl and enterq (bad) in jno lret xchg xlat cmp int3 pop mov and nop rex.X pop jle rex.RX lods pop push sub or fiadd lock rex.XB rex.WB lret (bad) jne orl adc insb xor jb mov sub lret frstor add cmp shrq rolb pushq mov out test adc rex.WR (bad) mov (bad) rex.R jae rex.WB add mov mov sub pushfq iret adc out jb adc test sub add mov rex.WR rex.RX mov mov data16 pop addr32 decb leaveq sub movabs sub movabs xchg (bad) mov cmp nop incb cmpsl rex.RB add mov movabs jge enterq addr32 push cmc push and sub sbb jmpq xchg cwtl movabs jge cmp js lea xchg and adc mov not mov rex.WRB (bad) or sub mov iret cmp xor push adc test cli cld pop (bad) int (bad) rex.WB xchg xlat jmp fdivs rex.R rex.WB and xlat mov rex.WB fcmovnb (bad) repz add and sub xor xlat jg,pt pop (bad) mov pop rex.WB pop insl xchg or cmp xchg rex.WRX (bad) xlat lods popfq vprotq icebp outsl pushq and sub neg cmp insl stc adc (bad) callq rex.RB pop xchg movabs rex.WB and ficomp (bad) cmp pop je (bad) (bad) or sub stos push push imul scas rex.X xchg jns mov lea jrcxz (bad) jae and sbb push cmp shrl imul mov clc jl or sbb or movabs int rex.WB cs sarb pop or sub divl std lods push scas (bad) xchg rex.RB or outsb add or sbb jnp cmp and xchg iret leaveq and lret add (bad) out sahf pop hlt (bad) icebp pop pushfq lods test and imul pushq and (bad) callq and cltd rex.RX in out adc rex.WB sbb mov (bad) jg (bad) rex.WB rex.WRB test and pushq xchg (bad) xchg test mov add sbb mov sub js fisubrl jae pop xchg subq mov movabs js xchg in jrcxz (bad) sbb movabs (bad) retq (bad) (bad) sub jno pop rex.WRX stos (bad) jb (bad) rex.WB xor push and sub wbinvd lods cmp mov sbb mov jmpq add gs (bad) xchg outsb rex.XB sbb jle in sbb mov (bad) callq imul jo jrcxz test rex.WB xchg fprem fistpll movsl xchg or add out mov (bad) in rex.WRXB sahf and loope adc xor ja or roll movslq push pop sarl push mov movabs lahf mov or mov scas ror and rex.WB xor xlat xchg repz sub fs xor test xor xchg sub in (bad) mov iret test push hlt fs movsb rex.RB rex.WB xchg xchg mov sbb jno rclb (bad) enterq mov xor (bad) or mov mov sub xchg fidivrl callq mov xchg mov push xchg stos and rex.RXB rex.WB test push jo lods lods rex.WB ss adc and add sub enterq repnz test jrcxz in cwtl rex.WB lods jmp nop lock rex.WB cmp mov rex.RXB rex.WRB rex.WB movsl rex xchg rex.WB rex.R xor jmp outsb rex.WXB movslq sti pop std movabs or rex.WRX mov stos loopne rcl imul mov push (bad) rex.WB (bad) and ficomp pushfq fbstp addr32 cld xchg shrb mov xchg rex.WB movabs movslq sub mov je mov rex.WRB pop out pop rex.X jno xor sub adc fildll (bad) sbb mov outsl rex.R (bad) xchg (bad) push jne jge (bad) jbe movsl stos stc push add mov nop leaveq (bad) sahf movl gs insl (bad) in rex.WB jno and stos mov mov xor rex.RB sub rex.R insl xorq mov (bad) jnp (bad) xchg mov push icebp rex.WB callq jmp scas cld packuswb pop (bad) ss pop cmp lods mov pop out push sub sarl sub and fimull (bad) mov loop lods (bad) push push std pop int3 add and or sub mov rex.WR rex.RX imulb sub (bad) stc repnz test push mov rex.WRB movsb rex.WB rex.WXB rex.WRX fs push (bad) rex.RB leaveq cld rex.WB test out (bad) pushq sarl rex.X (bad) jae jb shrb jns xlat (bad) push pop sbb jg push xchg add insb lods add fdivrp cmpsl sti (bad) mov rex.WB (bad) jo enterq push or rex.WB in in xchg rex.XB sub adc cmp (bad) sbb push movslq jmp mov pushq scas rex.XB iret push je mov adc pop xchg or and rex.RB pop mov add loop shrl (bad) repz mov push js xlat sub rex.WRX movabs adc js mov imul push vandpd pop and movabs fldenv insb sub fnop (bad) or rex.WB mov (bad) fdivs pushq leaveq int xor (bad) xor pop jbe (bad) jmpq adc fiaddl add xchg outsl rcrb rex.RXB in xchg nop data16 rex.WB sbb cs or loopne pop and movsl repz rex.WRB xchg (bad) rex.X in xor and or mov mov (bad) jp jg sub xchg lods cwtl xchg and jmpq (bad) mov xchg xor in iret out add push rex sbb mov ds (bad) rex.WB cmpsb cmc mov ffreep xlat sbb mov loop cmp (bad) rex.WRXB fstpt pop mov test push test (bad) (bad) cmp (bad) rex.X (bad) xorq imul stos rex.RX rex.RB testl rex.WB movslq push (bad) or movabs xchg cmpl pop or scas mov test sub fcoms (bad) (bad) rex.XB out bnd add outsl andnps cmc adc mov mull loope jle rex.X jg ja js mov rex.XB rex.WXB push sbb in xchg add jae and pushq push (bad) fmull icebp repnz std movabs leaveq callq and jmp mov mov scas add or divps rorb and push push out rex.RB and push jge (bad) (bad) (bad) jo cmpsb stc and push rcrl imul (bad) je mov out (bad) add repz mov fistpl cmp stos mov sub rex.WB rex.W (bad) outsb rex.WB rex.R fcomi (bad) callq movsl cltd push mov orl (bad) lock and fimull faddp mov movabs (bad) and ds js out sbb xor sbb xor (bad) rex.RB sahf sti adc rex.WB in sub sub retq rolb (bad) rex.WB jle loopne rex.WB sahf popfq flds out rex.WB fcmovu test loop lock jne (bad) mov cmpsl pop rex.WB (bad) gs and hlt pop push jg pop test mov push (bad) sti callq jne rex.WRB rex.WR xchg xor (bad) rex.WB jne adc pop push rex.WRX scas cmpsl shrb mov fbstp pop pop cmp fucomp insl out pushfq movsb mov mov jg xor jns mov cmpsb stos pushq test (bad) mov int3 and (bad) mov add (bad) out rex.WRB (bad) cmpsl fwait (bad) (bad) pushq adc cmp loope movabs (bad) pop movabs rex.WR xor jnp jo xchg outsb addr32 jg or nop jmpq push movsl rorb lock push (bad) sbb mov xchg and rex.WB rex.B cmp (bad) jl in mov xchg mov xchg jns imul and rex.WRX (bad) cmp je rex.WRX xor (bad) xchg imul (bad) rex.XB stc data16 pop push sti jrcxz add pop rex.RX rex mov sub xchg (bad) lret cli imul lahf pop leaveq (bad) jle adc movabs jmp or cmp mov (bad) insl push sub jle jbe cmpsb mov addr32 and mov or xchg imul sbb xor (bad) loopne xor cmp sub leaveq xor pushq rex.WB hlt push (bad) jp pop sub rcll mov pop jg jmp rex.W rex.WB notb cmp sub pushfq sbb ds rex.WB xchg sbb pushq mov add (bad) jnp pop rorl hlt repz xchg stos test cli mov std rex.B movabs jb push movsb (bad) (bad) xchg test xchg lret pushq movsl cmp movslq jno add xor or (bad) icebp pop callq sbb rex.W xchg repz out rex.XB (bad) cmp icebp rex.WB cmp rex mov rex.WRB jb test or rex.WB lods (bad) fcomip (bad) rex.WB rex.X jp movabs rex.WXB xchg adcl (bad) rex.WB hlt sbb xlat repz rex.B rex.RXB and xor rol insl int3 cmp sbb ja movslq orb (bad) xor rex.WB fwait xor (bad) movsb push fsubs rex.WB mov add adc lahf fwait and push (bad) addr32 bnd loopne in movabs and in fdivr mov xchg je out idivb sub out jb (bad) cwtl pop mov rex.WB cmc (bad) int3 test pop pop push xchg lret jmp movslq sub xor cmp sbb cmpsl rex.XB rex.RXB rex.WRXB xchg leaveq movabs pop adc sbb or cmp pop loop test es sbb pop jg rex sarl jne xlat (bad) sarb mov fprem1 cli test and stc pushq (bad) pop rex.WB jb xchg movl rex.W xor sbb or (bad) and sbb add lea mov or shl rex.WRB add sub mov (bad) stos rex.WB and fdiv (bad) es mov push mov rex.WX and (bad) cmpsl int3 xor sub sbb adc pop and xor adc pushq mov xchg pop xor mov callq (bad) pushq loopne int3 xor icebp (bad) sub test adc add lret pop add jl movsl lret mov (bad) and sub rex.R out rex.RX xor rex.WB rex.XB (bad) es retq fiaddl push rex.WB rex.WR sbb jmp pushq movsl sub sbb rex.WB cmp pushq adc or rex.RB (bad) or (bad) jb mov mov addr32 pop test mov push loope rex.WB push mov lret sbb (bad) sub (bad) out rex.WB ja xor movsb jmp (bad) callq (bad) and pop (bad) data16 xor je lea popfq leaveq jno sub data16 cmpsl adc (bad) rex.WRX cld addr32 jb add jrcxz mov incl (bad) xor lahf (bad) (bad) in cmpsl decl mov rex.WB in adc rex.WB loop push sbb sbb callq (bad) andl cmp or addr32 and sub movabs and notl mov retq mov xchg (bad) (bad) xor rex.WB rex.B cmp lock xchg in (bad) rex.WB rclb xchg out rclb (bad) pop rex.X mov out cmp mov rex.W xor test (bad) xor (bad) gs callq ss stos cmp cmp jge lret imul rex.WXB sub and xchg rorb push cmp imul addr32 pushq jnp or push divb cmc callq int3 rex.WRB rex.XB je (bad) scas rcll rex.WB loopne loop mov push mov rex.WB sbb sub rex.WR rex.WB jo cmp or outsl rex.B scas (bad) stc xchg (bad) xchg adc mov push push push movabs cmp (bad) push or mov sbb rex.WRX add lods int3 xlat fs lock cmpsb mov testb jge cmp xor jl rex.XB rorb sbb std lret sub or (bad) pushq adc stos mov (bad) cmp rex.WRX jb and negl movabs fs mov and jle sub cltd or adc mov out pop bnd rex.B mov popfq (bad) push callq mov (bad) xchg mov pop (bad) jae sbb ss adcl sti sub cmp scas rex.WX rex.WXB xchg imul rex.RXB or sbb cmp mov jnp and rolb pop js push mov out sub cmp rex.WB sub cmc (bad) xor xchg stos test (bad) rex.WB (bad) jge lret jmpq (bad) testb jbe and cs js or movabs jbe int xchg test sub cmp movabs adc out mov cmc cs (bad) test retq cld and (bad) test (bad) adc (bad) roll xor movsl std jnp add (bad) rex.X (bad) (bad) movabs enterq pop nop movabs jnp icebp jrcxz pop mov adc movabs push add gs (bad) mov rex.RB es pop rex.RXB mov rex.W push jl cld (bad) rex.WB cmp xor add rex.WB nop imul rex.XB (bad) jo (bad) callq enterq cs rex.WB repz (bad) adc push xchg or pushq xor in lea callq (bad) (bad) icebp cmp leaveq (bad) xchg test push xor incb movsl roll rex.WB icebp rex.WX rex.RXB (bad) sbb and sub pop retq (bad) int3 gs rex.WB adc (bad) rcll clc in mov (bad) (bad) jnp in sti rex.WB rcl pop rex.WXB icebp rex.WB (bad) sbb incb rex.W rex.WRX push xchg in cmpsl jge sbb out rex.WRB (bad) (bad) cltd (bad) jb and push (bad) mov rex.B pushq lahf test xchg sbb add (bad) stos and xor mov icebp jne rex.WB ds (bad) (bad) rex.WRX rex.WB (bad) mov ss mov pop (bad) push in add push pushq or fwait rex.WR xchg fmul subb cwtl and cltd rcl adc mov (bad) xchg sbb lods mov (bad) mov rex.WB mov xchg jno cli cmpsb movabs pop (bad) int imul rex.W sub or mov rex.WB (bad) (bad) pop or stos fist rex.WB sub stc add jrcxz push out and iret pushq and jg cwtl or jrcxz or cltd lret (bad) psubb (bad) or rex.WB sahf div repz rex.WB out loope (bad) pop int3 (bad) ss mov (bad) mov add rex.XB and rorl ds mov push xor (bad) rex.RX jl push add and pop mov mov je insb (bad) cmp xchg mov xchg icebp pop xchg cmp rex.WX cmp movabs mov jne ja (bad) mov movsb in sarb pop mov (bad) cmp pop adc ja sbbb (bad) repnz cmpl and mov rex.WB sub mov (bad) rex.WB rex.W (bad) std mov mov rex.WRXB xchg scas fimull pop cmpsb loopne (bad) pop callq (bad) lods (bad) decl mov and jmpq (bad) rex.X xor cmp xchg mov sub movsl mov rex.WB fnstsw rex.WRXB or xchg out addr32 mov cld (bad) movslq (bad) or add xchg mov pop repnz cmp rex.WB xchg cmp enterq imulb pop (bad) std movabs jno (bad) pushq mov adc stos nop pushq stos or pop loope in fnstenv cmp mov or rex.RB rex.WXB rex.WB mov (bad) mov mov xchg js pushq sbb repz xor fistpll mov test outsb movsb lods mov movslq (bad) (bad) fdivrp pop shrl sbb stc imul mov jrcxz in ja movabs add sti push cmc xor xlat xor rex.RXB fldl mov mov mov cmp std (bad) mov cmp in shrl pop lea (bad) in mul add movabs sub lods int3 adcb sbb rex (bad) testb mov and push (bad) mov mov lods mov (bad) jno add clc (bad) (bad) jg mov std movabs cmp xlat rex.B add je pop out ficom rex.WB rex.WRB gs push xchg js cmp popfq mov jns mov push xor jno push es cmp pop pop scas stos rex.WB sarb fs xorl pop jo mov (bad) jbe jno or sub or rex.WXB retq out fdivs test mov pop loope sub movabs mov and jge pop in mov add lret jnp sub rex.WB rex.WB (bad) or (bad) or callq iret mov or and sub je pop jbe mov in push (bad) or imul fcoms pop clc mov xor out (bad) adc shrb push iret popfq sub adc sub xchg add stc xchg sbb repz (bad) pop adc retq nop push sbb insb or mov (bad) out sub clc add (bad) jp mov add mov (bad) jo sub pop test cmpsl rex.WX (bad) xchg or jmpq stos pop retq mov jp outsl test fdiv jo or mov pop rex.WRX fcmovbe mov rex int (bad) in sbb pop mov jno push retq jo or (bad) or (bad) mov pushq retq int3 and adc pop rex.RX (bad) int3 xchg adc es sbb (bad) iret cmp lea sub xchg mov cmpsl movb add mov and pushq movslq (bad) sub (bad) repnz std xchg std (bad) retq (bad) or and (bad) movabs or mov js imul or sbb adc lahf and xchg mov (bad) add jno fldcw orq mov icebp rex.RX cmp mov sub callq and ffreep mov xor rex.RB (bad) and retq (bad) std xchg cs pop xor xor orb and ror and (bad) insb mov test lods sbb adc clc jle stc or (bad) movsb fnop (bad) repnz (bad) mov test rex.WB sbb rex.XB xchg (bad) pushq ss retq cmp rex.WR and movabs jns roll or push cmp jno rex.WB jnp loope and fsubl (bad) pop stos or lea movabs push and stos rex.WB mov test xchg push pop jmp pushq xor (bad) outsl mov rex.WB es (bad) mov xchg ss push pop cltd out add push mov adc (bad) and cs rex push rex callq (bad) (bad) (bad) jge rclb mov pop or testl mov sub mov mov rep retq test cmp loope movabs adc (bad) fs rex.WX rex.RX addr32 xlat (bad) cmpsb sub cmc repnz in adc cmpsl rex.W roll adc or (bad) mov and jnp sbb (bad) (bad) cwtl sbb (bad) pop (bad) fcmovnu adc loope mov vmovaps (bad) (bad) pushq cmpsb movsb sti cs rex.R rex.WXB xchg (bad) cmp sub faddp pop pop (bad) cwtl push push cld push out (bad) xchg imul jb rcrb pop jge xlat sbb cmpsb rex.WRXB mov sbb movslq mov mov lret mov xchg xor or cmp lods xor cld mov mov (bad) (bad) add (bad) nop xchg movabs insl cmp ja movhps xor fstpl rex.WB js jrcxz push add sbb rex.RB xchg rex.WB xor jrcxz fsub cltd xlat sub rex.WRX rex.B rex.WB adc callq lret clc push add rex.WB jmpq push jge fsubr mov adc lods mov pushq rex.RX enterq es pop sbb (bad) pop fist rex.WB xor (bad) test test add jne pop rex.WB rex.X nop rex.WRXB pushq or fiadd lret loope,pn scas sub mov movabs adc pop and test (bad) or rex.WB pushq cmc (bad) rex.X fs rex.WRXB icebp rex.WB rex.RXB movsb out ja rex.WB sti and adc pop (bad) (bad) rolb xchg mov in add push imul mov xchg or jns mov (bad) cmc add cmovns in push (bad) mov test imulb fidivrl cmpsl or sbb jnp lock leaveq popfq add insb or or lahf sub lods stos push push stos fcompl rex.WXB adc addl int rex.WB mov (bad) adc lods imul (bad) push rex.WXB movabs or popfq pop (bad) rex.WX rex.WB rex.WRXB cmc mov movabs mov xor lods add mov pushq (bad) rex.XB push (bad) xchg xchg mov leaveq pop vpsubusb sti mov pop sub mov cli (bad) nop mov test vpsrlw in fidivrl rex.WB mov imul (bad) rex.WB outsb cwtl sarl push rex.WB push loopne movabs jle sub mov loope adc repnz fidivrl pop jp pushq (bad) rex.RXB cwtl insb sub lret jae xchg js loop sti xchg jne xor rex.WB jge or sub xchg out rorl mov test and rex.WB iret std clc (bad) rex.WR rex.WB xchg orl lret sbb mov rex.WR rex.WXB adc rex.WRB jae mov mov push retq rex.WRB push jg rex.XB mov rex.WB add and sub (bad) sahf shl rex.X in sub rex.WB mov xchg jb sub jo pop (bad) pop movslq movabs jbe (bad) add sub rex.WB cmpsb not jb (bad) jle lock xchg rex.WB xorl mov nop je xchg pop test pop lods pop rex.WB (bad) orl rex.WRX sub (bad) pushq popfq pop notl rex.WB fstps icebp ds andl jge sub cmp rex.R movsl fs test rex.WB adc or enterq push movsb js (bad) xor mov jrcxz fidivl or push lock rex.WX pop mov mov (bad) sub xchg fldt (bad) pop rex.WB jmp pop xchg lahf lock mov movslq sub sub xchg callq movsb or adc addr32 adc (bad) shrl xchg roll sbb mov movabs cli push mov repnz add sbb jae rex.WR rex cltd (bad) jp fs fild lods test movabs mov push (bad) jb sbb (bad) fadds divl xchg ffree and rex.RB (bad) cmp (bad) cld icebp fisubl adc pop cs movabs jno adcb movabs test fcos pop fmuls mov rex.WRXB rex.B pop fnstsw (bad) pop (bad) movabs mov mov fldenv sbb and rex.WRXB sbb decl mov adc mov add data16 retq or jb pop push (bad) jmpq test sub vorps addr32 push (bad) cmp andl movsb cmp pop rex.RB rex.B out rex.RXB repnz sbb (bad) xchg xchg mov xchg rex.WR add rex.WRB rex.W rex.WX rex.RXB add sub pop adc mov pushfq shr cmp cmpl rex.WRB sahf push movabs cmp rex.W (bad) rex.WXB es in (bad) (bad) mov jmpq and (bad) or jg rol fcomps rclb imul int3 push mov (bad) popfq movabs xchg lahf rex.WB mov (bad) (bad) sbb jle jl or pushq lahf and jbe push mov rex.WB add cli (bad) cmc rex.WB jrcxz in gs movabs push lret rex.WB or (bad) leaveq cmc callq outsb jne xchg orl movsb movabs sbb xchg or insb xchg add (bad) or pushq test xlat and js xchg rex.WB mov xchg adc out insl stos sub lret fdivs rex.WB lret cwtl adc test jge movabs fwait testl or cmp mov (bad) jge fiadd sub mov jnp (bad) stos rorl stc rex.WR mov jle push loope xor cmp sar rex.WB je rex.WX mov movabs in add and jnp xor (bad) push sbb rex.RXB fisttp movabs (bad) adc popfq jge push imul fsubl movabs (bad) jp sbb pop lods adc sub movabs sub cmp rex.WB add imul rorb jl outsb pop scas movsl sub mov cmp in in (bad) mov mov rex.W adc and loopne loop lods shr or sub add (bad) add rex.XB (bad) test movslq lods and jl rex.RXB outsl out repnz mov pushq mov rex.W rex.WR rex.WB adc xchg jmp mov jrcxz (bad) (bad) rol cmp in (bad) add sub xor movabs pop rorb xchg mov or pushq rex.XB and adc rex.WB fisubrl cmpsb movabs push and (bad) sbb pop lcall movabs add movslq pop pushq rex.WB rex.WB and loope xchg movabs rex.WB xor mov sub sub movabs or xor sbb adc mov (bad) sub cmpsb divb sbb cwtl xor or (bad) xchg movabs mov xlat sub callq orb (bad) push jns sub xchg mov rex.R data16 push rex.WX rex.WB cmp retq add rex.XB (bad) std rex.WB fmull pushq mov mov insb jl mov popfq fxch mov (bad) or clc test fmull test or cmp mov (bad) and push or scas and rex.WRB rex.WRX rex.RX xor lret mov loop andb pushq lock insl fimull leaveq xchg mov rex.B pop movabs fcomps mov stos jg push cmc rex.WB mov (bad) lods rex.RX rex.WB jmp movabs cmc out (bad) adc insb (bad) lock leaveq mov pop adc movslq (bad) lea scas nop xchg pushq rex.WXB callq lods rex.WB xor jl movsb cmc callq sbbl xor rex.WB mov loopne fcmovnbe sub pushfq icebp and rex.WX out (bad) or (bad) sub rex.RB pushq (bad) cmc loope (bad) pop cmp push rex.R (bad) movsb jo fs (bad) xchg data16 rex.RXB addr32 or fdivr movsb jns cmp jno mov roll adc jno (bad) xchg cli fstps adc rolb fs lods sub xchg cmp jle xorl (bad) cmp (bad) sub int3 adc mov add jmpq and mov lods and movsb movabs insl imul gs (bad) rex.R es in lea fildl (bad) incl cmp mov (bad) and sbb or (bad) (bad) (bad) orl cmpsl pop stos (bad) pop mov xor xor mov mov mov movabs pushq cmp orb cmp push insl sbb xor fisub adc adc rcl rex.WB (bad) xchg js sub outsb sbb adc (bad) mov xchg pop xchg mov xchg mov fdivrp (bad) (bad) and sbb (bad) shrb cmp rex mov fimull mov mov sti pop (bad) mov enterq sub stc or add data16 jae (bad) jrcxz movslq rex.W repz ja and xchg adc push out lret (bad) out imul rcll mov jmp rex.R push fdivp adc rorb mov adc xor or pushq add mov mov sar xor sbb out rex.WX repz fs jp sbb jge (bad) (bad) popfq add and adc ficompl sub out adc sbbb cmp pop insb ficom jbe rex.WB cmp rex.WRB (bad) mov sbb rex.B mov (bad) mov push fild xor fidiv jmpq ficom mov iret or jnp nop add cmp sub add mov clc cs xor rolb pop test jmpq pushq (bad) or addb push xchg xor (bad) or (bad) xchg (bad) loope sbb fdivl in js (bad) pop sbb rex.WR or jge (bad) cmp adc (bad) cld cmp or rex.X popfq push or cld scas mov lret rex.W lret mov pop sbb push icebp xchg mov xchg jmpq cwtl lea out mov and and sub mov hlt xchg add loop cltd fdivp outsb ds (bad) sub xor subl fcomp pop ds cs cmpl (bad) push out (bad) imul outsb pop sub test push add lret rex.WRXB xchg (bad) push movabs shrl adc (bad) jb movabs mov repz jmp cmp lahf jle (bad) add (bad) cmp mov rex.WXB pop cmp lret sub nop add sub movl and rex.WR (bad) xchg pop adc movabs (bad) outsl rex pop adc xchg rex.RB (bad) pop pushfq push xor gs xor or lret mov xor jrcxz and sub (bad) cmp jb outsw mov sbb gs (bad) mov repnz xchg or stc lret jo retq ja cmc push xchg rex.X adc mov (bad) or leaveq (bad) mov js cmp rex.WRXB cli sbb xor push orps cmp (bad) cmp jne movabs repnz jge (bad) jrcxz orb adc retq xchg or movslq cmp mov cmc xor (bad) cltd mov (bad) pshufw mov cltd rol gs lods lret and pop lret (bad) test clc or jle hlt (bad) icebp xchg sahf or (bad) rex.WRB movsl (bad) callq iret rex.W push test sub cmp rex.XB add movsl (bad) rex.WB xor es rex.WB std cmpl pop and jno xor push movsl or xchg jg (bad) pop sahf nop ss mov pop sbb ja loopne popfq xchg or addr32 sbb gs add icebp xchg sbb jrcxz ja sahf and fstps (bad) xchg jmp iret movslq imulb cltd gs xor shll rex.WB and cld outsl in xchg int rex rex.B cmp sub fistpll sub mov pop rex.WR sub (bad) (bad) cmp sti jrcxz stos pop hlt pop lahf rex.XB movabs je fisubr sub pop mov and fldl leaveq movabs pop or pushq imul rex.RX push movabs in cltd rex.WB lods add insb in gs or and xor adc jg jmp push add mov cli imull or cmp xchg or (bad) jnp adc movabs (bad) (bad) pushq stc test out (bad) movabs cmp fmuls pushq imul xchg xchg cld rex.XB movslq add lret or xchg jns iret sub out mov cwtl xor (bad) mov mov rex.W hlt jae cld negb pop and out movabs pop jo or sarq lock mov loopne rex.WB mov out cmp fdivrs movabs jno xchg (bad) sti push rex.WB (bad) rex.WRX ss stos mov pop rex.RB in xor sub cmp rex.WR rex.WB mov rex.RXB rex.WX push (bad) rex jae or callq cmpsl rex.B push and outsb push lret push rex.WXB rex.WB lea movsb (bad) pushq lods out pushq insl cld (bad) (bad) push rex.WR rex.WB rex cwtl leaveq leaveq rex.WB movslq push pop and testb rex.WB rex.RB cmpsl cmpsb test mov (bad) pop rex.WX rex.WRXB xchg fs movabs (bad) mov fwait sbb stc pop sti jmpq test (bad) rex.WB orl and jmpq rex.WRX rex.WX pushq mov mov lock rex.WRB loope mov rex.WXB movabs pop callq icebp (bad) jae and movslq lods or rex.WXB rorb in fnstcw std jle movsb or rex.WB rex.B or negb rex.WB movsb pushq (bad) (bad) or sbb out sub pop mov (bad) lret and and cmp insb rex.B outsb enterq xchg ss lea rex.WRX enterq and pop scas pop xchg xchg clc mov stos lock jnp incl outsl movslq adc mov fimul sarl lock mov mov (bad) add sub (bad) push enterq mov rol or jns or sub push leaveq pcmpgtw pushq (bad) xchg cmp in (bad) sub int3 scas pushq mov in xchg adc jne mov sub (bad) pop in xchg andl or jg idivl push (bad) rex idivl fildll (bad) pop xor xchg fimull xchg adc cmp es cmc and xor je or addr32 mov mov mov addr32 pushfq mov (bad) pop xor rorl outsl fcomps xchg rex.WB test sub stc scas rclb pop callq jmpq fimul push (bad) (bad) adc movabs jo jmp test fimul xor rex.WR cs adc and xchg (bad) (bad) and sbb popfq jp rex.WRB addr32 test (bad) rex.R (bad) cmpsb jg rex.RX cmpsb cmp xchg movslq jno fwait pushq push enterq xchg imul rex.RB fs rex.R out (bad) test (bad) es add out movabs decb cmc rex.WX sbb pop fnstsw fld pop repz es sub rex.XB rex.WX cmc fbstp and sbb movsl (bad) and mov iretq pushq xor out push roll push sub movsl sti mov gs js addr32 gs mov (bad) mov movsl (bad) jl jle pop rex.WB ficompl sahf je sub mov cltd mov (bad) insb iret repz jmp pushq (bad) popfq iret mov (bad) sub rex.WB rex.X xchg outsb (bad) mov mov decl pushfq pop lret (bad) rex.WB rex.WRX jne pop es fisttpl cmpl stos rex.XB sub enterq pop rex.XB cmp xlat mov in out pushfq rorb ja rex.RB add cmp xchg jmp stos decl (bad) jnp xor rex.XB xor jns rex.WB fildll addl (bad) test sub xchg movb mov movslq rex.RXB cs hlt adc xchg mov (bad) mov mov int add xchg or cli rex.X int3 jae fstps pop jle scas (bad) in jbe test lods outsl mov rex.R push mov sub jle,pn ja stos rex.WB add enterq mov movabs cmp repz icebp or add (bad) mov jns adc nop (bad) iret or rex.R rex.R or test lret callq (bad) xor (bad) xor movsb enterq sub roll xor xchg sti jg insb out push (bad) shlb mov mov push loopne leaveq xor sub rcl rex.WB lods (bad) mulq (bad) pop test sbb outsl (bad) fsubrs callq mov mov pop rex.WB xchg push xchg (bad) popfq data16 nop adc or xor add sub (bad) (bad) rex.RB fs jno rex.WB fidivl rex.WRB sbb cmp push (bad) adc mov sub pop incl lret sarq cmp jo mov imul pop cs and outsl cli (bad) xchg hlt clc jrcxz movsl add or pop rex.WB cmpsl mov stc rolb scas push add cmp sahf jo,pn rex.RXB mov (bad) jno rex.WB (bad) or (bad) fstpl push (bad) (bad) mov mov rex.WR jp (bad) cmc pop iret push sbb scas out cmp sahf xor push movabs outsb rex.XB rex.WRXB rex.WB xrelease in or sbbq (bad) (bad) push xchg rex.WRB rex.RXB xor mov sub data16 (bad) cmp adc lcall (bad) rex.WB jp fwait mov addl and insl test pop adc ljmp xor xchg sbbl psllw (bad) jge and mov rex.WB fwait loopnel je cltd in (bad) callq test test xchg hlt cmp lods sbb mov std add add adc rex.WB movslq add (bad) movabs rex.B xor or int3 movabs hlt pop rex.WB out test movsl rex.X scas rex.WB data16 (bad) mov mov mov (bad) callq imul mov jge and xchg sbb stos or rcll rex.WXB xchg mov mov rex.RB rex.WB rex jnp test mov rex.RX mov rex.R sbb je cltd stos xchg testl stos add nop (bad) sub sub (bad) movsb enterq add cwtl fwait pushfq adcl rex.WRXB (bad) movabs in rex.WB mov leaveq mov je push adc outsb add insl rex.RXB (bad) rex.WB shlb and jns in jo mov push and rex.RX stc jp mov repz movsl outsb cmp in rex.WB jb shl imul adc sti pushq hlt push out pushfq scas sbb jb jns sub mov xchg pop scas adc insl mov xchg fs mov flds sarb sarl xlat jmp (bad) loope (bad) cmc (bad) xor and sti rex.WB test movaps fdivrs mov (bad) jp (bad) rex.WB rex.RXB scas or mov rex.WR cmp or mov rex.RX pop mov stos fwait iret rex.WB fstl test rep icebp mov test rex.WXB retq (bad) mov (bad) je xchg movabs cmpl not mov test mov cmc rex.WRB sub negl xor js sahf or pop insb xlat in adc movsb out movabs mov jle rex.WB ss or add adc btr mov rex.WB or rex.WB sahf scas or (bad) lock xor rex.WB mov mov leaveq movl or fdivs sub divl repz ds xchg js movabs adc mov adc jns outsb cmp (bad) sbb xor push jle cmpsl ds xchg rex.WX (bad) mov pop rclb add cs (bad) xor pop scas ja shl (bad) movslq xorl enterq (bad) cmp or adc int jp push fsubrl stos xor and xor xchg sub add jmp and or rex.XB cwtl hlt cmc (bad) callq rex.XB and (bad) addr32 jb push divb (bad) in pop push rex.RXB jne retq rex rex.WXB popfq out int rex.RX pop rex.R addr32 cltd retq and scas adc sub xchg sahf scas sbb in mov rclb (bad) (bad) cmpsl jrcxz out or mov movsl movsl iret rclb (bad) xchg std xchg movabs jmp bnd (bad) stos (bad) pop add cmp movsb mov (bad) outsl test or nop rex.RB pop sub pushq mov adc rex.X loope sarb ljmp cmp retq stos jbe xchg in rorb mov loope pop sbb fiaddl and lods (bad) push sbb (bad) ja sahf insb (bad) cli mov and jl out jbe fidiv jb (bad) outsb fmuls rex.WX pushfq insl cwtl rex.B (bad) cmpl ja sbb fdivrl out sbb (bad) pushq mov out sub add (bad) cmp cld movabs sbb adc (bad) or es sub push xor sbb xor ror pop fbstp and and popfq jmpq lock and jne or fucompp mov (bad) jns xchg and xchg pushq jle mov mov repz or and subb sbb or fildl (bad) fisubl xlat add fsubr popfq sub outsl jns stos add or mov stos sub hlt lods mov pop (bad) pushfq cmp push test cmp cmp shlb push popfq pop ljmp mov cmp jne sbb xchg adc or xor cltd add cmp shlb cmpsb test rex.X push rex.WX mov mov outsb rex.X or (bad) mov loop and jne rex.WXB (bad) retq movslq jle rex.B clc fmuls push (bad) sub (bad) mov rex.WB xchg rex.RXB and pop jge fcoml nop adc cmpsb xor cwtl mov add shrl pop movslq (bad) jge sub rex.R add adc add movsb (bad) retq (bad) mov mov addr32 sbb hlt jbe or and rex.RB cltd cli pop rex.XB fsubrs push sbb and adc jg mov rex.WB rex.WRX out xlat rex.WB fdivrp shll cmpsl (bad) cmp mov jle rex.WB (bad) cld mov sub xchg clc mov rex.WB leaveq movabs jg sub push xchg lahf pop rex.WXB and sahf retq leaveq hlt push or adc add sub stos cmp jg mov xor rex.WB rclb mov pop ds mov mov rex.XB rex.WB fdivrl sbb lret rex.WB xor mov pushq add push movsl xlat icebp testl push rex.WB mov mov pop movabs mov mov rex.RXB rex.R push (bad) pop stos rex.WB je movslq jns lock fs negb sahf (bad) jbe adc (bad) pop (bad) push add (bad) xor adc push stc movsb bt repnz rcl adc (bad) mov rex.RX rex.WRXB sub outsl mov (bad) xlat push test xor push std in addr32 mov cmp xchg rex.W jge,pt enterq (bad) je shll push retq or or rex.WRB (bad) (bad) xor and roll jg test pop in xchg (bad) and and xchg sbbb (bad) stos int pop or xor push jle rex.WX add (bad) movsl movsl jno or mov (bad) rex.B movslq or jmpq movslq icebp movabs mov notb pushq or adc push rex.WX adc cmp add pop lea enterq je adc rex add (bad) pushfq mov rex.B rex.WX mov js lock mov sub cmp rex.R (bad) rex.WRX rclb jne insb movsl faddl (bad) xor scas xchg rex.RB out (bad) repnz or rex.RB xchg (bad) rex.X imull add xchg and in cmpsb (bad) notb mov clc sub sahf xchg callq pop sbb rex.WX rex.W sti pop or xor adc ds cmpl fcomps insl xlat cld (bad) jo pop rex.X cmp add callq (bad) add xor movabs out repnz mov popfq push xor psubsb callq fcomi rex.WRX and rex.W rex.X incb rex.RX fstps sbb hlt (bad) pop js movabs (bad) cmp out (bad) rex.X out and rex.WR out insb push cmpl add loop incb rcr (bad) hlt xlat rex.RB mov xchg xchg cmpsb (bad) mov or movabs insl xchg (bad) icebp leaveq xchg xor adc fdivrp xor jg push (bad) rex.WRX mov test push out add sub popfq data16 and adc and (bad) movabs int3 mov movabs (bad) rolb mov rex.WRXB fisubl sub test (bad) scas out sub sbb (bad) jmpq sbb jge sbb rex.RXB rex.B callq ss rex.X popfq mov adc out repnz sub idiv ds xchg (bad) and add xchg rex.XB adc mov xchg xlat cmp mov (bad) xlat movabs pop out rex.WX jae rex.W rex.WR cmc movabs (bad) int3 out xor jae es jmpq lods enterq add (bad) rex.WRB rex.WB xor in rex.WB adc nop movsl jl xchg sbb rex.RB pop xor (bad) lahf rex.WB divb callq pop mov rex.WRB rex.WR rex.WB adc in fdivp or (bad) mov addr32 (bad) (bad) cmp hlt and sahf leaveq cmp jge (bad) rex.WB in mov fdivs push mulb retq push mov sbb pop and cli or jrcxz rex.WXB mov sub (bad) mov push pop and (bad) mov js rex.WB rex.WXB or xchg pushfq (bad) rex.XB cmp (bad) outsl movslq sub pop cltd xlat (bad) add mov (bad) pushq and cmp (bad) mov leaveq es xchg lods insl mov popfq retq jns rex.B rex.WB insb xor imul shrb sbb data16 mov (bad) and xchg int sub mov rex.WR cmpsw scas xchg adc (bad) adc rex.X outsl movabs xor rcl mov sbb movabs mov (bad) (bad) cli mov jp fdiv add rex.WXB cmp jge (bad) mul cltd pushq (bad) movl sub add rex.WRXB cmp repz insb mov pop in (bad) adc pop mov loop (bad) imulb xlat loope es scas testl callq mov rex.XB (bad) jne (bad) sub sbbl outsb jns push and mov retq (bad) sub (bad) fadd cmp ss movabs and xchg (bad) cmp sub in rex.WB and notb sbb ja imul sbb rex.XB or rex.WB gs (bad) (bad) adc lret xor lock rex.WB int (bad) jg (bad) cmp adc faddl rex.WXB loope adc jo rex.R rex.X xchg cmc out rex.WB sti movabs rex.WX lock rex.WB fist rex.WB movsb icebp cli ja jp rex.WB (bad) decb int3 (bad) (bad) in jmp rex.WB cmpsl ss (bad) adc jg (bad) xchg rclb cmpl and (bad) mov (bad) rex.WB es movslq movabs cmpsb rex.WR mov imul mov pop cmp jnp clc mov insb rex (bad) or mov leaveq or rex.RB pop (bad) jge repz rex.B rex pop push adc adc mov lret decb rex.WB repnz callq jrcxz rex.WB sbb pushq rex.WB add (bad) sbbl xor xlat xchg jo xor in (bad) add push movabs sbb fucomi movabs movabs je xor movsb sbbb test out rex.WB clc sub fsubrs repnz rex.WB setb fistpll xor fs rex.XB rex.WRB rex.WB xchg leaveq loop xlat jbe mov mov roll icebp outsb xor movabs jg fcoml xor jae imul mov cmp add shrb scas (bad) test pushq mov jns jb jrcxz rex.WB xor sbb (bad) xor rex.WXB movsl iret xor (bad) loopne xor rex.WR (bad) mov mov cmp pop movsl sbb add out test jrcxz (bad) mull out jmpq (bad) jne push pushq (bad) pop rex.W rex.WRXB lock mov lea (bad) adc or addl callq (bad) rex.WXB or cltd (bad) push repnz mov pop jbe or (bad) pop (bad) xchg sahf mov (bad) stos rex.WB mov or add jrcxz outsb rex.B or rex.B rex.WB rex.WRB (bad) (bad) push or sub movabs callq mov mov xor (bad) mov fldl cmp adc nop mov enterq jmpq in int3 sub jl sahf add rex.WXB rex.WRX sbb (bad) outsb and xchg (bad) cmp cltd (bad) sub icebp mov mov (bad) xor fstps add rex.XB xor sbb jns add xchg mov (bad) lahf jl rex.WB js rex.WB rex.X (bad) stc imul outsb pushq mov rex.WB cmp cwtl (bad) (bad) mov popfq (bad) shrl cmc callq and add shrb or rex.WB jg insl (bad) imull sub in movabs lahf mov xchg nop or fwait adc pop movabs loope mov or es pushq pop enterq jge push in rex.RX (bad) movabs pop and js cmpsl add retq (bad) fildll test add fsubl (bad) or mov xor rex.WRX rex.WB or pop mov imul (bad) je mov test push mov (bad) loope sbb sub rex.WB xor bswap (bad) sub stc retq (bad) cmp mov rex.B loop stos (bad) sbb jne adc add push (bad) enterq push mov fcoms mov std test (bad) mov mov rex.R (bad) rex.RX repnz movabs rex.WR rex.X fldenv (bad) rex.WB or out ds enterq xor loopne pop xchg icebp jmp imul rex.WXB jle and imul rex.WR cmp cmp fcomp shrb or and xchg jmp in shll jnp cmp shl mov fisttpl sub jp adc xchg mov sub fcoms rex.WRX (bad) mov jae loopne rex.WRXB test and pop sub mov scas jns rex.R movabs in (bad) outsb lods sbb (bad) js (bad) insb pop repnz sub fs stc add mov cmp sub (bad) sub pushq fs push in rex.WB (bad) pop gs adc loopne (bad) rex.WB pop rex.RB xchg in sbb shrb push mov outsl adc jl jbe xchg xchg data16 (bad) lock push or (bad) stc sbb pop cmp jmpq sahf sub push rex.X adc repz test rex.WR sub pop cld pop sarb add stos movabs xchg mov or pop cmpsl xor sbb xlat mov loop in or push es mov lods rex.WRXB cld add pop addr32 stos xchg popq je xchg jge rex.W rex.RB rex and nop xor mov scas hlt (bad) and sub or pushq rex.B cmp shr rex.B gs cmpsb add (bad) xor lods push and sub jns pop sbb pop sub cmp sub lock xor (bad) movsb stos and lea or and outsb jne mov pop ljmp cmp mov lea rex.W pop jl mov xchg push rex.WR sbb (bad) or pop rex.WRXB fs (bad) or movsb pop push xor mov outsb hlt lret mov rex.WXB nop jo jg (bad) repz sub mov sub stos jnp pop mov (bad) xchg mov fs enterq gs rex.WRXB or nop iret (bad) jmp xchg sub gs pushq lahf sbb xor pop out (bad) sbb rex.RXB xor movabs xchg jmpq imul cmp leaveq and (bad) pop movabs out pop cmpsb test jbe shl test adc xchg rex.WXB (bad) pop stos sub loop push jno pop (bad) pushq retq hlt scas add sub or addr32 sarl movsb scas out popfq sbb sub adc jne int3 (bad) std test adc jp rex.WB (bad) repnz data16 rex.WB push (bad) rex.WB es (bad) (bad) js and enterq fwait rex.WB rex.RB or scas add push rex.RB sub imul rex.WRX mov xchg rex.WB sbb (bad) or cmp imul mov stos sub js adc cld xor (bad) in shrb incq (bad) pop jns xlat rex.WB xchg mov cli data16 stos (bad) rex.WRB push and mov adc (bad) (bad) out lahf mov sarb (bad) (bad) rex.RXB sub cmp rex.WRXB in rex.WX callq cmp std (bad) mov movabs es (bad) mov rex.RXB rex.WB and lock lea jns (bad) adc fidivr fmuls add incb mov rclb xor repz rex.RB int movabs xor (bad) scas decb add (bad) mov rex.X js xchg (bad) incb adc rex.WB mov fs rex.WB leaveq bnd rex.W int rex.WB cmp lret rex.WB add rex.WB add xchg mov movabs sarb push ja xor mov cmp push pop sub mov rex.RX loope lods adc jno movslq fwait clc push test add rex.WRX (bad) fbstp jge movslq sbb jno jge rcl (bad) or rex.RB and insl lahf adc mov rex.W enterq callq cmpsb popfq jmpq clc popfq rex.RX xchg rex.RX add pop data16 (bad) test int mov sub (bad) mov push clc (bad) xchg sub repz add sbb adc rcl xchg rex.WB rex.WX int sahf js sub mov mov rex sub jg sub (bad) cmp roll (bad) cmp add pushq repz test cmpsl or sub test sub jrcxz scas pushq and fs jp ss add cmp imul mov (bad) fldl out outsb rex.W rex.XB rex.W movsb fbld jrcxz decl in xchg or callq insl mov sub rex.R mov int3 rex.XB adc and fwait pop push add cmp rex.RXB mov rex.WRB sub (bad) pushfq add jrcxz rex.WB fs xchg rcll add fimul xor nop jns out retq add fisttp mov pop pushq rex.WRB (bad) rex.WB lock (bad) sti fidivrl lods callq or add pop jrcxz xchg movl or lret rex.WRB adc pushq rex.WXB xor cmpsb rex.WB (bad) cli shr xchg rex.WB push sbb loope movabs jno imul pop cwtl sbb retq mov (bad) (bad) mov cmp rolq push (bad) imul (bad) add or (bad) adc retq rex.WB test loopne int3 mov ds (bad) pushq fldenv gs mov (bad) in and mov xchg fild jae jrcxz,pn xor rex.WB ficompl sub fs pop jg mov xchg cltd sub lods push leaveq sub fisubrl mov sub rex.WB and rex.WB lock (bad) sbb add adc cwtl jmpq jns (bad) mov dec lock data16 ficom cmpsb cmc add rex.W rex.WB rcll rolb cmp (bad) insl mov rcr rorb lret repz rex out mov (bad) pop lret xchg outsl (bad) xchg pop callq xor loopne rex pushfq rex.WB data16 insl mov sub mov sbb (bad) (bad) retq sub rex.B pushfq rex.R test xor movabs outsl frstor callq or je callq pushfq (bad) push gs int3 subq add cmp rex.WB clc jae sub cltd and rex.B (bad) fisubl push orb cmp jne mov insl push sbb fldt rex.WB sbb xor push cmpb pop je xor movslq pop or movabs enterq mov xor jae or test test mov jno rex lock cli (bad) rex.WB (bad) lret (bad) enterq sub mov mov rex.RXB xchg sahf push xor cmp xor or stc sbb and (bad) adc pushq adc test rex.W gs insl rex.WB xchg sub pushq movsl rex.WB shll mov fcoml shll pushq (bad) (bad) pop mov rex.X xchg test xor xor mov rcrb mov pushq and (bad) mov cltd rex.XB or sub and (bad) (bad) rex.WB push (bad) ja xchg pushq pop sub shr jo jns xchg pushfq rex.WX loop mov addr32 mov shrb rex sub (bad) lret (bad) mov rex.WR repz (bad) rex.WB cs stc (bad) sbb (bad) (bad) jrcxz pushfq xchg rex.WR xchg ja (bad) and xchg pop fmuls push rex.RX (bad) rex.WB rex.WB jbe pop jge push enterq frstor xchg (bad) enterq mov (bad) xor rex.X jg and (bad) cmp movabs retq lods push xor mulb es (bad) out jl mov pushfq pmulhuw fildll mov test callq orl data16 sub mov or mov callq cmp rex.WRB scas push leaveq movabs sbb ror or sahf pushq mov rex.WB cmp cli sub and mov (bad) xor rex.WB fwait xchg loop stos movsl rex.WB test test (bad) (bad) (bad) adc sub (bad) rorl and pop jno insb rex.WB rex.WRB xlat xor lods sbb push movsb je sarl pop pop or and mov addr32 sbb mov in in movsl sbb pop cltd pushq rex.WB rex.WRXB pop pushfq cld jo jmp lea mov sbb rex.WB rex.XB lock std cltd rorb test imull (bad) (bad) add movabs adc or outsl and insb (bad) fs add xchg callq cmpsb cld enterq pushfq fcoms sub push rex.WRB in out sbb pop test callq sbb (bad) add or mov fcompl mov push (bad) rex.WRB imul mov and cld out rex.WB data16 cmpsl in rorb sub rex.WXB repz pop jns cmpsb out hlt sbb (bad) rex.WRB (bad) mov adc (bad) popfq (bad) enterq pushq shll rex.WB jl xor ja sub lods fsubr scas pop movsl pop cmc mov sbb (bad) (bad) mov js insb (bad) mov imulb and icebp bnd rcl cmpsl cld mov xchg push mov leaveq repnz movslq in xrelease stc xchg rex.WB (bad) jbe mov cwtl rex.WB mov movslq sub callq cltd pop dec sahf rex.W or jo (bad) and rex.WB mov rex.RX lahf loopne rex.WB jno xor jp push loopne xor adc fidiv xlat movsb (bad) rex.WB in sbb mov sub insb fidivl cmp mov (bad) imul (bad) sub or mov sbb in testb rex.WRX test cmp rex.RXB sbb orb xlat hlt xor rex.WXB scas (bad) ror (bad) xchg rex.WRX loop xchg sub fs fmull movabs in (bad) pop rex.WRB rex.WB rex loopne stc and sahf fucomip out or or (bad) xchg pop sub jrcxz addr32 adc std pushq jle rex.WB pop loope test (bad) pushq (bad) xchg (bad) xchg rex.R mov sub js nop imul (bad) mov lods (bad) in or testl test cmp enterq mov rex.RX cs movabs retq lods fs sub pop sub out leaveq hlt mov rex.XB mov fcmovnbe cltd fisubl mul callq (bad) and je movabs rclb rex.X (bad) pop loop pop jne pushq push push add movabs push cmp gs mov adc popfq add cmp movabs retq fistp sub add mov or mov rex.W xlat (bad) icebp rex.WXB rex.WB jg,pn or xchg mov test pop iret (bad) lods xchg mov jl and enterq jno cs add sub xor idiv pop loopne movsb je test movslq rex.WX subb add add mov mov push rex.X (bad) jl sahf int rex.W sti gs or mov (bad) xchg in lods (bad) cmp lret or sub sub movsl (bad) or loope or rorb mov (bad) sub (bad) mov insl jne and add xchg movabs rorl callq cmp rex.WRB rorl jle xchg cmp sbb push or (bad) mov rex.WRX gs stos jno push (bad) leaveq (bad) out test mov mov (bad) rex.WX callq std rorl (bad) rex.WB (bad) jl xchg sub sub (bad) incl (bad) rex.RX xchg cltd sub (bad) mov out cs jrcxz xchg mov shll insb xor out test shl pop add or mov xchg cltd (bad) jnp fisttpll (bad) or cmp mov mov test (bad) pushq and rex.WXB rex.B add pop (bad) jbe fdivrs jge mov hlt ljmp imul rex.WB adc pop push rex.XB and and pop xchg iret (bad) int3 adc stos mov callq pop addr32 clc roll (bad) cmp cmp rex.WB jmpq ffreep or scas cmp rex.WXB cld movsl js out jle nop stc sub jnp rex.WRB repz xchg jno mov pop cltd (bad) and rex.XB (bad) rex.WRB (bad) pop not and rex.WB rex.RXB gs pop es pop mov sbb xor adc push sbb xchg jne fldt (bad) in mov sub pop xchg movabs (bad) shrb or (bad) loopne xchg outsb or movsl loopne sahf rex.B or rex.WX mov jmpq rex.WB jnp mov vpaddsb pop add (bad) rex.WB xor adc mov sub mov push lock xor repz jo clc mov and mov rolb rex.WB (bad) or rex.B and xor pop pop movabs (bad) xor (bad) rex.WB cmpsb outsb jge cwtl mov xor jae (bad) sbb jl (bad) mov mov (bad) push loopne jne rorl sub adc (bad) xor loop sub push cmovge push (bad) sub enterq adc xchg cmp pushq rex.WB (bad) mov hlt int add cltd rex.WB addb or jp movabs mov xchg cmp or xchg (bad) (bad) movabs (bad) rex.WRXB rex.WB (bad) push loop fwait or rex.WB imul fidivr int (bad) mov mov jl rex.WRX enterq vxorpd add icebp sub gs pushq (bad) test test pop cmp pop loop or fldl mov sub push retq out lods jg rex.WXB sub iret xor popfq sub mov lods adc cmp loope mov in rex.WB push or adc clc mov and and (bad) mov jnp ficom sub popfq loopne es add cmp bnd sub int3 jne rex.WB popfq adc mov repz ds rex.WRX adc out (bad) leaveq xchg lahf enterq cmp repnz cmp in insl mov imul nop sub clc movslq pop pop pop (bad) mov xor (bad) mov rex.RX sbb mov stos movb js rex.WB lahf xlat out or sbb jrcxz and gs rex.WR mov (bad) sub cli sti rex.WRXB fistpl test retq (bad) data16 std loopne callq adc (bad) xchg or rex.WB mov scas rex.WB insb xchg rex.WRB rex.RXB add mov test rex.WB int and sub test xor (bad) sub xend sbb push pop (bad) shrl rex.RXB es jle pop cmp movsb pop gs or fnstsw movslq (bad) (bad) retq out xor rex.RX push (bad) sub (bad) rex.WR data16 lods xor jrcxz rex.WB test mov rex.W mov push rex.B jnp rex.WB and sub mov rex.X iret test (bad) or (bad) movabs jns add cmp xchg or std mov mov js (bad) add jle insb pop (bad) add scas rex.WB sbb xor stos rex.WB rex.R rex.RXB (bad) jae sub cli repz (bad) xchg rex.B add or xlat rex.WB rex.WR cltd scas shll loope movabs cmpsb pop out rex.R mov (bad) xor addr32 xchg rex.WR sbb jge leaveq fdivs nop gs pushfq imul or fcomps jp push sub movabs (bad) sub loope jl push mov out cs add jb (bad) rex.WRB test rex.WX movsb pop rex sbb cmp test rcl (bad) sbb std (bad) jno adc (bad) rex.WXB jns xchg sarb sub icebp mov and rex.WRX xor icebp and hlt xor fwait (bad) (bad) es movslq stos jrcxz push adcl (bad) cs xchg mov pop mov push rex.WR mov sbb pushq (bad) jns push jrcxz test cmpsl rex.WX and cmc sub imul and xchg (bad) pop stos pop sbbb and lock popfq mov cmp rex.B rex.XB retq je adc icebp cs (bad) and negb test rex.WX fs clc xchg enterq xor or sub fcmovnu jnp (bad) out xchg ja push rcll cmp movsb cmc leaveq out pop mov enterq or stc rex.WX xchg rex.RXB (bad) sbb mov addr32 stos lea (bad) hlt push lock and mov iret and insl mov pop sub adc add jmpq (bad) sbb and test adc (bad) rex.WRXB out lret rex.WR push adc push (bad) hlt adc pop jg jno sub fist clc rex.WRB stos sub negb and psrlw jbe rex.WRXB movabs and jnp fsubrl subl cli jmpq xchg retq xlat adc out fbstp pop je sbb rex.RXB rex.R (bad) rex.RX rex.B in (bad) notl clc outsb add test jne pop xchg js sub sbb add push leaveq imul (bad) pushfq adc sbb mov mov push rex.WX callq mov cld rex.WB ljmp mov mov out test xchg sar cwtl and rex.RB rex adc insb rex.RX (bad) movabs xchg rex.WB adc cltd mov roll testb or xchg push jl add rex.WRX rex.B mov xchg rex.WB rex.WRXB lret clc (bad) mov cmp sub imul or sarl iret add (bad) int push xchg out rex.XB (bad) or push negl rex.WB mov int addb jg (bad) jb cmc rex.WRX rex.RX push xchg jnp rex.WB rex.X negb adc repz movabs sbb rex.RXB es rex.WB retq mov fimul adc (bad) sub jns je sbb lret imul (bad) xchg mov lcall (bad) jle lods xchg adc and adc cmp push xchg or add push and gs rex.WRB scas stos mov sub loopne test callq lahf insb xor loopne push rex.WB shll cmp add test adc (bad) pop ja xchg jno cmp fisubr imul js jo decb movabs lods loopne stos ja (bad) vmulpd sbb popfq and (bad) lret rex.WRXB push rex.RXB xchg cmp pop lods rex.WR jne shrl in or rex.WB ss fdivp cmpsb lock rex.B callq push in scas cltd push or push xchg rex.B ds sbb addr32 and imul test callq rex.X (bad) out lret sti jle popfq (bad) rex.RX (bad) cmp rex.WB jge cli add mov pop ficoml fwait rex.R or sub incl (bad) rex.R test retq fildll (bad) adc mov (bad) cmp (bad) movsb movabs xchg adc lods (bad) jmpq adc (bad) repnz or cmp (bad) pop mov subl fimul stos mov sahf mov jne in rex.WB (bad) jno adc sbb sub and pop in xorl out jo rex.WB rex.RXB subl pop (bad) loopne xor pop (bad) (bad) (bad) pop out lods fs outsb retq in out test pushq xchg callq jo cmp rcll mov jp movabs adc rex.RB rex.B rex.WB fcmovnu clc and jae sub jmpq push or or (bad) (bad) jnp mov stos xchg push out push mov callq shrl ss push sbb gs cwtl hlt pushq pop stos movsb mov xlat and xchg mov sub mov lea push sub and cwtl shl popfq nop leaveq adc data16 (bad) mov rex.WB rex rcrl and sahf pop sub (bad) and pushq xchg pop clc rex.WRXB rex.XB movsb (bad) rex.WB mov (bad) jo mov pop mov rex.WB in (bad) add cmp push cltd adcl (bad) (bad) (bad) movsl out jle lock (bad) ror jl rex.WB sbb adc idivl cs out pushq retq (bad) (bad) add mov orl out add xor int3 sbb pop lods pop and mov outsb paddb jns movsb movsl jge ss mov or pop mov nop adc test xor or rex.X jnp lret (bad) jbe mov in sbb (bad) pushfq xor or adc sub rex.W sub lahf pushq addr32 or cltd sub (bad) cli cmovbe (bad) repnz push enterq and icebp (bad) je fcompl imul mov js addr32 rol push mov icebp jle mov mov pushq xchg mov (bad) lock pop retq sub rex sahf stc popq rcrb js jns scas test push mov mov sbb scas mov cwtl sub mov (bad) repnz jg xchg sub in jns jo (bad) mov rex.RB rex.XB or or ss xchg hlt adc mov (bad) imul sbb push or sbb pop pop loopne xchg rex.XB sbb sar in (bad) fldcw xor xchg cmpl out jmp (bad) cmp lea rex.WRX callq mov and adc sub xchg push add (bad) push stos rex.WB or sub xor mov push (bad) mov outsb jl test sub sub xchg jge add jno jp scas in and mov sub pop stos mov repnz outsl sub sbbl scas sub xchg pop xchg leaveq cltd popfq rex.WB jge jmpq mov insl rex.WB push jg jo,pn mov outsb xchg xlat add testl (bad) movsb mov rex.WR rex.WB repz rex.WX mov scas xchg sub fsubr insl cltd (bad) fdivs xor sub add mov shlb mov rex.WB (bad) (bad) xchg cmp (bad) (bad) fdivl repnz pushq out out xchg popfq rex.WB shll sbb decb ljmp outsl fsubrl iret jge xor rex.WXB movabs rex.WX test jg retq jrcxz and rex.XB data16 adc mov callq clc sti mov test addr32 rex.WB xchg callq xlat mov scas mov push mov ss mov or sbb rex.WB imul rex.WB shll add fisttpll sbb out out sub movabs in mov addr32 (bad) out std adc push sub mov add mov mov (bad) (bad) addb (bad) out cmpsb cmc mov sub insl xchg xor movslq rex.WR jbe (bad) (bad) jo movabs cmp or jmp push movsb gs cmp cltd xor sbb movabs mov retq cmc shl movabs adc movabs pushq fdivl jl jnp (bad) sarl rex.RXB add sub cmp sbb pop movabs (bad) mov pushq pop push sbb addr32 nop mov movslq rex.WB and xor not imul rex.WXB stos js mov pop (bad) fmull rex.R rex.WB fwait cmpsb or (bad) stc push xchg imul loopne push leaveq jle rex.WB add jl movabs sbb rex.WRB orb mov rorl or fs jg xchg movsl movsl lods add pause push push and fnstsw in stos xchg lods jmpq sub (bad) jo sub roll out rex.RX (bad) and rex.WB push jbe mov cmp scas rcrl xor fstpt movb (bad) jrcxz rex.WB fwait sbbl jbe add (bad) (bad) (bad) cwtl lock jp and scas callq pop mov (bad) pop mov imul mov push and rex.WB retq (bad) jbe movsb xchg adc in rex.RXB or fs sub loope rex.XB sub retq rex.WRX (bad) hlt sub nop xor fisubrl cmp sub movabs stos incb mov loope and movabs ds pushq (bad) test mov cmp (bad) sub popfq xlat (bad) add lahf xchg cmp sarl imul (bad) clc cs insb sub jns ja cmpsb pop jne rex.RX iret jne jl,pt outsl add mov adc popfq push pop sub xchg add movabs (bad) jp mov (bad) sbb add add addr32 fisttpll adc leaveq mov fsubrl xchg in cmp xchg imul rex rex.R xchg (bad) sub (bad) callq mov rex.RX rex.WB (bad) pop cltd test loope js mov rex.WB (bad) lea pop push (bad) loopne rex.XB pop sahf fsubrs fcmovnbe jbe and std fnsave sarl (bad) out xor mov push rex.XB shlb (bad) stos cmp lods xchg xchg fprem1 mov sbb negl rex.WB lret pop repnz gs movsl mov movabs pop jg pushfq data16 xor or leaveq ficoml divb cmc (bad) rex.WB (bad) or lret shlb idivl icebp rex.WB (bad) test jl pushq xchg iret rorb movabs fcomps jnp rex.W rex.WRB (bad) ror push test xchg stos xchg icebp std out jp (bad) xchg add pop cmp loope (bad) cmp sub std pushq mov xchg jle test fs and pop retq pushfq cs movabs mov loopne lret xlat xchg rex.WXB mov cmpsb (bad) test movabs push (bad) fs pushq sbb lret movsb sbbl adc imul rex.RB xor cmpsb out loope mov adcl in rex.X rex.WB repz stc xor cmpsl sub (bad) movabs sbb adc push iret (bad) mov sub iret pop push sbb cmpsb fs sub mov xlat pop fmuls sbb pop push sbb sbb icebp mov popfq out xchg or femms mov (bad) outsl mov mov scas gs mov shrl pushq (bad) mulb xchg rex.WRB insl rex.WB (bad) and mov rcrb iret hlt cmpsb mov sub fs ds xchg imul in andl jrcxz jrcxz mov enterq rex.B loope test jg enterq push fwait (bad) rex.X jle (bad) mov rex.R insb test jg add xchg fisttpl xor lret or (bad) test sbb outsb pop repnz xchg rex.RX stos out ja adc adc fidivr enterq mov rex.WXB pop iret sahf pop lods (bad) mov sub jle or jp mov (bad) sub pop in mov (bad) (bad) xchg (bad) xchg fdivrs stos jae sub stos callq rex.RB rex.XB jb mov mov mov lock pushfq cmp cld and in (bad) stos sbb (bad) xchg test jp pop (bad) cmp enterq fstpt or cld mov frndint rex.RX sti rex.WX int lods pushq rex.W cwtl or jbe mov or test or mov cltd out add pop (bad) out jrcxz sub es (bad) outsl xchg mov callq mov xchg rex.XB rex.R rex.WX push leaveq retq or stos adc sub cwtl sbb mov (bad) (bad) popfq lret rex.B mov mov flds cmp push sahf cmp imul xor adc (bad) sub push pop jns (bad) jnp data16 mov (bad) cmp pop (bad) (bad) movabs (bad) pushq sbb (bad) addr32 int3 test rex.X imul xchg or push jb adc rex.X sahf popfq rex.R add jno outsb (bad) fstpl pop jbe roll (bad) sarl jne test xor fisub xor (bad) out movsb or rex.WX mov jp cld cs jo (bad) test jae rex.R repz or loopne xchg cmpsl callq push or sarb and sbb pushfq cs sahf (bad) (bad) xchg (bad) jbe mov mull xchg pop testl adc sub pop fdivp and add in stos ds out movabs xchg mov and (bad) jo in (bad) or fldt mov rex.WX (bad) and rex.XB mov pushq (bad) movabs callq pop add stos xchg rex.W retq jbe mov cmp cltd cmpsl sub sub xchg test loope xchg add xchg jae mov jne push imul sub add out sti mov adc cmc (bad) mov or mov add sti or sbb fs int3 movabs (bad) or jrcxz insl test jmp xchg cmpsb mov add or mov or enterq pop cmp lock mov (bad) push adc stos loopne cmp mov movslq mov mov cltd cld test rex.WRX (bad) (bad) xor out fcomps and out ficompl movsb clc rex.WX xchg cwtl mov or fdivr jg sub in hlt (bad) or or frstor sbb gs movslq pop rol rex.WB or rex.WXB (bad) rex.WB insb jbe loopne ds jo mov (bad) mov scas or je (bad) rex.WR fwait pushq (bad) jb mov cwtl out in add mov rex.W or lock or (bad) cmp push cmpq jb mov rex.WB lcall rex.WX (bad) mov sbb push (bad) movslq (bad) callq (bad) add cli out push rex.WB rex.WXB jno test sti mov icebp ja rex.RB movslq adc movabs mov mov stos loopne or subl push rex.WB sti jmpq xor rex.WR (bad) rex.WRX mov add mov lods shll (bad) cmc cltd test cmp (bad) xchg loope push adc scas mov sbb add mov cmp fistpl addb movsb (bad) pop mov push scas imull mov xlat rex.W sarl rex.X stos int3 jp xchg xlat movabs sbb jle scas cmp and jnp lret sahf xchg int3 es icebp sbb retq popfq sub rex.RX lea mov mov clc retq (bad) cmp mov (bad) cld xchg mov fildl (bad) sbb pushfq in push test mov cmp mov (bad) (bad) cmp fnsave hlt jo rex.WB movabs add movabs lods mov and movabs iret loopne xchg push mov and mov rex.R xchg or rex.X adc rex.WB addr32 cmp rex.WXB (bad) xchg addl test in cld test (bad) callq mov push cmp rcll (bad) cmp callq fldln2 rex.WX loop xchg xor leaveq (bad) movabs movabs mov in rex.WXB rex.X rex.WB pop push insl repnz movsl test mov jae mov mov jge (bad) push int cmp (bad) idivl incq ss jge fsubrs rex.WB lahf in mov loop or out (bad) sub andb cltd (bad) rex.WB mulb out (bad) loopne and insb sbb (bad) mov pop pop or xor rex.WB stos mov pop push fisubrl faddp xlat sub mov icebp xor mov jns xchg sbb pop xor outsl out mov rex.W rex.WB cmp and fist cmp rex.WB out and callq mov movabs xor pop (bad) enterq rorb pop mov xchg sarl pushq pop rex.RXB repz adc mov stc lret adc jl or mov rex.WR rex.R rex.WB (bad) xchg rex.WXB stc rex.WB andb rex.WB imul movslq or cltd mov insl enterq cli pop mov test rex.WRX rex.WB add stos rex.WRB icebp (bad) (bad) rex.R out stos mov cmp cmpb mov rex.WR adc (bad) pop jnp mov xor push rex.WB scas movabs retq push sub jo rex.WRXB hlt loopne or mov scas push enterq sub out imul pop jmp pop scas (bad) push in pop test rex.WB rex.W (bad) insl mov (bad) pushq (bad) and sar lret mov (bad) flds (bad) mov rex.WXB mov xor rex.WB fsubrs loope ljmp enterq cltd and sbb lret rex.WB mov (bad) lea rex.WRX mov pop test test (bad) loope fdivr cmp (bad) cmc mov sbb fs fisub rex.RX outsl pushq in pop movabs sub xor sub mov (bad) push imul mov pop outsl add mov int3 faddl leaveq or sub jbe rex.WR ss setnp jbe popfq movabs repnz fdivrs pop or rex.WR xchg adc rex.WRX addr32 nop mov and pop psrlq (bad) jb lret cmp rclb rex.WX sbb pop out (bad) test rex.R insl mov (bad) fdivs mov add rorb hlt sbb sub fiadd sub rex.RB pushq pop adc (bad) and std pushq movabs clc add (bad) adc stc mov retq mov sahf adc rex.WX mov jbe rex.X jge cmc lret nop jge clc rex.WXB insl lea mov jl mov rex cmp jb addl push sub (bad) fsubrs test leaveq lahf pushq mov sub push xchg rex.WB cltd std rex.X push cmpsl (bad) mov imul sahf iret xor cs fdivl xor test or mov mov (bad) push (bad) fwait mov fcoms rex.WRB enterq cmpsl rex.WXB push mov ja xchg jnp add rex.WXB addr32 xchg insl mov pop jmp xchg (bad) mov or jne fisubrl (bad) mov clc sub rcll pop or movsb (bad) (bad) lret in lods (bad) and (bad) repnz fcompl lods outsb mulb rex.RXB iret dec rex.WB repz cs data16 jg (bad) mov (bad) lock (bad) iret or (bad) mov fstl ds icebp callq popfq loope (bad) pop adc lock rex.WB mov xlat (bad) (bad) mov in fprem rex.WB xor repnz (bad) cmc movsl or mov pop sub outsl pushq test rclb sbb in pop ror loope repz movabs push jmpq jb mov rex.R rex.WB cmp pop add rex.WRB rex.W rex.WRX xchg rex.XB ss int3 mov xor jnp rex.WB lods jg stc sbb lret out rex.WX mov jmp or icebp pop movabs adc addr32 insl pop or stos rex.WB xchg and or (bad) rex.WXB and repnz xor imul xchg add rex.RX rex.WB stos ficomp rex.WB rex.WX sub pop nop cmp movsl retq addr32 pop out stos rex.WB imul insl rex.X xor or sbb push rex.RX ja repnz icebp pop and retq movabs fmul (bad) out push (bad) ja lods adc cmp stos jb (bad) idivl or jne and xor sbb jae imul lock push rex.XB xor vunpcklps pushq mov lock fdivs cli pushfq rex.WRB jne insl ss rex.WR (bad) (bad) cmp rex.XB hlt fs fisttpl rex.WR shl out xchg add sarb xchg rex.RXB fiaddl push rol pop push xlat std mov stc mov jne movabs or (bad) mov push (bad) ja,pn and rolb (bad) mov in lret orl cmc or xchg mov jmpq mov rex.WB pop (bad) (bad) in and (bad) pushq (bad) add or mov jae hlt push in movsb pushq rex.RXB je gs mov movabs add addr32 rex.WB push xchg or stos rex.WB rex (bad) and xchg mov rex.WX movsl fiadd rex.X xor retq cmp push rex.XB mull pop mov lret pushq jle stc push xchg repnz rex.R cltd cmc pop movabs retq fucomip fsubrl fldenv push (bad) sub or lahf rex.WB je movsb xchg enterq sbb (bad) (bad) jbe mov leaveq mov rex.WRXB pop rex.WB lock jo stos adc sbb rex.WB rex.WX sbb out in sub sub movabs mov (bad) neg adc rex.WRX fs pop lods in or or pop (bad) rcrb (bad) or (bad) sub fs and movsb fs retq add std vpsraw mov (bad) pop in jp jae cmp movsb add sbb push add rex.B (bad) adc xchg fs (bad) pushq jnp test rex.WXB rex.XB jnp (bad) pop mov movsb in (bad) pop (bad) rex.X sahf fistp xchg sbb jns (bad) mov jbe or lret cltd repz push sub fldl or es mov jge sbb in nop test movsb (bad) (bad) int3 mov jb sub loopne outsb adc pop jo sub xlat out retq (bad) jge xor int sub or (bad) movslq mov sub rex.WRX fcoms cmp js rex.WRXB (bad) imul xor test pushq or (bad) adc (bad) rex.WRX cmpb addb xchg (bad) enterq iret loop retq cmp vrcpps fdivrp (bad) (bad) cld pop xor (bad) or sbb cmp (bad) (bad) insl callq jo sbb pop out sar lea xchg (bad) js xchg push outsb adc iret fidivl imul push cmc (bad) or jg outsb (bad) rex.WB pop out (bad) jae scas callq jrcxz pushq rcll rorb rex.WR and xchg (bad) in rex.WB sub jnp rex.WB js and mov (bad) rclq mov int3 movabs retq (bad) in pop adc stos push add jbe movsl cmp fiadd movabs out mov popfq add jnp xchg xor xchg js (bad) in leaveq cmp (bad) adc xor rex.WB mov lret (bad) rorl js and cwtl pop movl push xor or mulb loope rex.WX or movabs (bad) in (bad) jbe xchg callq fistpl cmpb rex.WB xchg push lods rex.X pushq js (bad) jne (bad) (bad) cmp clc add (bad) loop fistl rex.WB add mov pushfq mov push rex.WB fwait mov xchg cld jbe xchg mov or retq (bad) addr32 (bad) (bad) nop push imul subb push shl stos movabs (bad) movsb rex.WB (bad) rex.RX pop out jo xor mov adc movslq (bad) movabs cmp decb jmp and pushq cmc leaveq (bad) rex.WB es jle movabs add movabs push or stos jo scas rex.WXB rex.WB cmp ja (bad) movabs mov stc jb mov nop jg add and jrcxz imul mov lock movabs or xor lret out (bad) mov (bad) pop or sub (bad) cmp popfq movabs mov jmp out jno cmp or (bad) test xor rex.WB mov mov and or sub rex.WB movabs repnz lret (bad) (bad) data16 or rex.WB xchg jle pushq ss sbb or pop cmp popfq or rex rex.WB and push cmp (bad) (bad) (bad) std push rcrl (bad) pop sbb xor mov in rex.RB lock jmp in mov cwtl rex.WXB and cmp add mov movsl sub imul rex.WB rex.WB (bad) sbb rex.RXB sub add jmpq loope sub out jo add xor xor movabs test clc jnp movsb callq movabs rex.WB fistp cmp imul or lahf movsl mov nop jne rex.B sarb xor (bad) sub rex.WB iretq pop sahf and and rex.B rex.WB jmp test insb int loope sub pop fmull orl push (bad) sub pop mov xchg popfq addr32 imul xchg lods jno pushq cmc push out mov enterq (bad) decl stos (bad) mov add rex.WRB int3 adc xchg icebp adc mov mov sub test mov outsl xor cmp (bad) stos adc rex.XB xchg add mov (bad) pop mov dec imul jbe push sub nop lahf rex.WX test fs or mov add loopne pushq pushfq cmpsw pushfq cmp xchg stos scas loope popfq js sbb cli mov pop (bad) rex.WB or in pushq jbe and cmp or movabs add mov sub nop rex.WB fild shll rex.WB fwait sbb cmpsb mov fildl popfq and (bad) (bad) fsts xchg xor sub testl (bad) (bad) imul fisttpll and insl (bad) mov rcll rex.WB and cltd rex.RX rex.WB jns (bad) movsb sub xchg lret push (bad) test out sub cmp movabs push cmp (bad) mov (bad) scas rex.WB sbb sbbb add (bad) stos hlt movabs test je rex.RB rex rex.WB and add mov fcmovne add and push jg pop and lahf lock insl rex.WB movabs rex.WB jbe adc retq movsl test sub rex in pop loopne movabs adc std es lods cwtl pop pop insl rcll movsb (bad) movabs (bad) jo adc subl push sub js (bad) pop in push movabs (bad) in clc and (bad) test push sbb (bad) negb (bad) movabs or (bad) rex.WRX jnp push rex.WX mov prefetch mov (bad) add rex.WB rex.WRXB jrcxz subl sbbb rex.WR rex.XB add or and rex.B rex.WB (bad) add adc pop jge (bad) rex.WXB nop mov (bad) jno clc xor or rex.WB (bad) push (bad) lret ds adc sbb rex.WB rex.RXB rex.WXB scas mov and or callq (bad) mov cmpsb cmpb movabs pop rex.WR rex.RXB rex.WB rex.XB add cmp mov orb or rex.WRX push (bad) (bad) pushq cvtps2pd rorb fnstenv mov inc push andl (bad) repz (bad) and rex.WRB (bad) (bad) psubd pop retq or lret lods cmp jl and rex.WB out xchg callq rex.WRB and cwtl enterq sub callq pop and sub (bad) cmp or (bad) sub clc adc hlt pop mov movabs outsb out rex.RB stos pop xchg push cmp rex.WB xor adc movabs (bad) addr32 cmp xor rex.WRXB push or jge callq mov setb (bad) pop scas sbb clc sub (bad) mov cmp push pushfq push movabs (bad) retq test movabs rex.WB or jbe enterq sysret (bad) push in fwait jg xor xchg rex.WB test push data16 xchg add std mov shlq cli sub mov or and out mov gs (bad) lock in pop (bad) rex.WB out sbb frstor rex.WB xor sub lods mov outsl test insb pushq adc clc adc stc xchg test push xchg rorl imul add cmp rex.X movabs cmp sub stc (bad) mov in fwait or jo subl enterq mov lea (bad) cltd (bad) (bad) movabs cmpsl sub or rex.RB rex.WXB or incl jno mov hlt movl stc (bad) movabs or xchg (bad) pop xchg movb add xchg clc mull clc fsincos pop xchg cmp sub rex.RB sub lahf lock jb jne (bad) jp jae xor add mov sub xchg movslq add sub cltd push lret (bad) xchg xchg out or mov pop mov ds or xor fld jae outsb lock (bad) rex.RX mov adc nop (bad) rex.W jo xchg (bad) (bad) (bad) cmp (bad) movsb sbb xchg add iret and jle cmp std rex.WRX data16 mov test (bad) add xlat rol lock sbb (bad) or mov rex.WXB (bad) push (bad) jne add xor pushq mov and jge cmp addr32 movabs mov mov in xchg pop xor iret je in sbb mov or and ja cmpsb mov add lret rex.RX fs fidiv sub xor ja xchg nop (bad) rex.WRXB rex.RX (bad) stc add rcr push push outsl jle enterq mul pop or and jne xor cmp jbe cmpsb es sub popfq std mov callq sbb xor xchg sub retq cwtl stos cwtl loope xchg mov je jae out push jns mov stos addr32 adc movaps sub (bad) hlt pushfq sbb adc jno pop rex.WXB xchg mov pop jae pop mov add fnstenv mov jle sub pop sub retq rex.RXB sub mov int3 or mov push idivb pop gs retq (bad) outsl jne or push (bad) sub (bad) rex.RXB fistpll mov sbb in (bad) in movabs movabs push clc (bad) sbb in rex.RB out add hlt rex.RX and xor callq add movabs sbbl jg mov pop jle cld xchg (bad) sub mov rex.RB (bad) and outsb mov sbb fisubr addr32 sbb pop movslq and mov fdivl adc pop pop lods movslq scas cmpq rorb test xchg movabs rex.WR rex sub and push add cld mov adc (bad) jg adc jge or (bad) imul repz ds gs mov xchg (bad) imul and mov jnp or cs enterq pop jrcxz rex.WB out cwtl lods outsb pop js rex.WB mov xchg loopne movsl rex.WB rcl rex.WB orl sbb (bad) (bad) callq sub (bad) fmull add (bad) shrl (bad) push mov xchg rex.WB rex.WR cs nop rex.WRXB jnp cmp pop ja and push mov adc fwait and add sub int3 push (bad) gs jle add sbb pushq pushfq push in subl rex.WX (bad) jo push jnp rex.WXB rex.WB faddp lods jne test add push js leaveq jmpq (bad) or or cmp lret (bad) and push rex.R rex addr32 rex.WB jno mov sub push cmp push rex.WB mov (bad) jge xor sarq and jb out cs mov popfq rex.WB fs push loope push out in mov (bad) (bad) rex.WB fwait notl jg mov stos insl lea push fsubl lods rex.WB (bad) push or sub and xchg rex.WX rex.WRB rex.WB rex.RXB adc rex.WB jo sub addr32 (bad) out bnd mov movsb rex.WB subl fmuls or rex.WB rex.WB movabs jmp rex.B (bad) adcl mov sbb es rex.WRXB jnp rex.WB fiaddl callq and mov (bad) rex.WB lea jl incl ror rex.XB xchg (bad) cmc xor rex.WB divl cmp push mov cmpsl loope ficom (bad) cmp (bad) lock rcrw shl xchg or leaveq cwtl add mov and jp cltd rex.WB xchg fidivl (bad) xchg xor (bad) cltd xlat rex.WRB rex.WB repz rex.XB xchg cmp cmp rcll (bad) rex.WXB or sarb rex.B popfq (bad) jae (bad) push (bad) mov mov rex.WB xchg ss rex.X rex.WRX data16 orl mov mov rex.WB movsl js push pop icebp pushq rex.WR rex.B jl lahf sub (bad) xor rex.WXB in cld xor mov insb rex.WRB adc pop push f2xm1 test popfq (bad) mov jmpq rex.WB incb cmp movabs xor xchg sbb rex.WB xchg sub pop mov out lret sahf sbb rex.RX repnz sub (bad) js mov (bad) pop sbb and (bad) xchg xchg cmp xorl pop rex.WB (bad) mov rex.WB pushq neg (bad) xor adc push pop rex.WB shrb out rex.RB pop lret movslq lret lock rex.WB rex.X fisttpll rex.WXB jne sti clc sub (bad) out push fsubs stos xchg loopne and in sbb in and out btc mov (bad) pop jrcxz sub stos js adc or (bad) rolq faddp sub retq (bad) rex rex.WXB ss sub movabs stc and movabs rex.B mov sbb xchg fldl rex.X cli pushfq jo (bad) repz movabs push xchg add mov rex.RXB in test sbb movabs cltd fisttpll rex.X mov (bad) imul or cli lea mov scas (bad) pop fild (bad) add adc xor ss (bad) test pop test pop and callq cmp push or out xchg xor rex.WB add xor (bad) (bad) cmpsb xchg and out add and sbb repz movabs rex.WB add int3 and rclb out sub (bad) mov outsb rcll (bad) mov cltd movslq sub hlt rex.WRX jrcxz gs and out cmp rex.WB lret add xchg in jl ror out jae pop jns (bad) (bad) and (bad) lret add insl rex.WB (bad) or xchg jge jrcxz loopne pop jp mov (bad) xchg sbb add jns or xchg mov adc and lea rex.WB repz (bad) (bad) outsl sub fisttpll lea orb xchg push sub test iret test insb lret sar fldl fs jno xchg mov jno or (bad) pop (bad) mov jbe rex.WB (bad) repnz mov mov xchg sub movsl pop (bad) or adc sub rex.WB lahf ss add fisubl loope mov jb lods and xchg orl rex.WRB rex.XB rex.WB cmp push pop or rex.RB xchg mov loope mov jl rex.WB ficoml roll mov fdivrs xor pop or (bad) and mov rex.WXB rex.WB lock callq pop (bad) movslq xchg fsubl movabs push loopne rex.RXB movabs hlt in lods mov mull movabs stc movabs icebp or and push rex.WRX popfq rex.WX gs insl pop push (bad) (bad) int repz jbe sub and (bad) push outsl mov rex.WB add or enterq add jns (bad) mov rex.WB (bad) xchg outsb ja sub incb lret adc mov cmp adc (bad) ss loop icebp retq or sti push iret (bad) adc and out pop (bad) (bad) jmpq cmp pop lea adc jmp (bad) mov sub jb gs fiadd and fwait mov jo rex or add rex.WB or rex.WB rex.X ds shl xchg rex.B rex.WB fwait add mov sahf rex.RX je in (bad) cli jge rex.WB ds (bad) test lock (bad) or repz add push cltd (bad) mov rex.WB (bad) and or rex.R rex.WR fwait mov pop mov xchg icebp stos pop add push (bad) mov adcb adc xchg fistpll sub xor rex.RB rex.WB mov and incb xor sti rex.B jnp jne xor xlat sub roll sbb movabs add cmp rex.X (bad) retq rex.W rex.RX rex.XB xchg rex.WR (bad) cmp in mov pop fwait hlt fsub and xchg insb xchg cmp rex.WB ds sub mov lret adc mov addr32 in ja decb rex.WRXB (bad) push scas lret out jle (bad) pop enterq out imul adc sub imul js orb sbbl gs add push rex.WB (bad) jnp repnz mov cmpsb movslq fdivrs (bad) jnp sub xor add xchg movabs xchg xor add subq cli mov std stos sbb sbb rex.WR sub mov mov fwait and or add mov mov jle iret adc rex.X gs (bad) pushq pop rex.RXB hlt lea test rex.WB cwtl sbb cmp enterq push push push (bad) icebp (bad) lahf and lock mov (bad) cmp pop (bad) jp jne jl movabs movslq stos xchg pop jge mov (bad) jb or in mov jbe rex.RX (bad) add add callq (bad) jnp test imul add xor in lahf mov pushq jo pop sub pop in sub insl jbe test movabs pop mov data16 in repnz xchg mov rex.W nop (bad) out js sbb push jo (bad) repnz mov cmp xor mov pop addr32 test cmp jmp pop cmp jae andb jge xchg mov or (bad) out enterq fidivl movabs rex.W sub mov or mov cmp std mov adc jnp incl xchg pop stos jbe pop xchg (bad) shrl rex.RXB mov push rex.RB (bad) sbb andl mov add xorl mov cltd test xchg mov sbb fcmovb (bad) cmp add fdivrs jae jge sbb cmp (bad) sbb mov (bad) or adcl cwtl rex.X or (bad) mov (bad) movsl jg (bad) shlb stc shrd jge mov in push imul jp push outsl pop addr32 mov jmpq mov fstpl rex.RXB or fisub movsl fs andps (bad) iret xchg sbbl cltd push adc repz pop ficomp rex.W rex.WB repnz adc (bad) fstpl pop rcrl rex.WRXB rex.WB (bad) stos movabs rex.WX rex.WB (bad) movabs xchg (bad) rclb add jae pop (bad) (bad) rex.WB addr32 movslq sbbl rex.WRXB retq rex.WB add and jno xchg rex.WB movsb pop (bad) mov mov push clc movabs js sahf and test in add adc jns sbb scas lods pop nop mov mov and mov movabs mov pop mov xchg fwait sub stc icebp rclb mov add sub jb imul rex.WB rex.WRX mov jle sbb cmp rex.WR shll sub lock mov sbbl leaveq fdivs cmpsb fmull outsl rcrb (bad) rex.WXB pop (bad) xor (bad) rex.WB jmp movsl sbb (bad) xchg pop adc (bad) fmuls (bad) (bad) icebp and int addr32 push callq and add sbb lods ror js sbbl insl fldcw adc js jbe adc loopne sbb (bad) (bad) push cmp fldt scas mov movsb (bad) mov mov cwtl jrcxz (bad) push retq (bad) push enterq imul mov adc jg adc lret sub (bad) stos icebp add pmulhw lock xor es (bad) cmp pushq adc (bad) mov outsb pop pop pop mov callq sbb xchg xor jbe rex.W icebp jnp pushfq adc rex.B (bad) push scas negb clc rex.B (bad) lahf fmul xlat sbb loopne sbb or rex.RX out cmp mov (bad) out pushq (bad) sbb sahf rex.W loopne sbb (bad) mov sahf pushq insb xor pop sub leavew xchg (bad) and lods adc sbb test sub xchg rcll (bad) stos rex.B lods or xchg jne pushq cltd leaveq jp rex.WB repz or push sbb and lret jle pop sbb xor or lock (bad) mov xchg xor mov and rex.RXB scas pop pop adc mov adcl (bad) cmpsl sbb mov or gs (bad) movabs pop ds jrcxz mov je mov (bad) rex.RXB sub cld test cmp xchg clc (bad) sub cs sbb test push pop (bad) mov adc xor sti adc push fidivr insl xor or rex.RX rex.RX cmpsl rex mov scas sbb lods outsl or std rex.W rex.WR cmp fdivrs and mov retq fisubl stos sub lock rex.WRXB clc movsb sub pop xor or xor cmp movslq ja push mov jg imull (bad) xchg xor adc fisttpl sbb cmp (bad) xchg ffreep leaveq int3 (bad) pop ss jnp adc repz sub fadd pushq cmc outsb pop test pop sbb pop (bad) je or (bad) push (bad) fsubrs pop movsl sub loop xchg test data16 notl cmp sub rex.RB clc jne xor (bad) sti push xchg mov sbb (bad) test or movsl sub sbb (bad) cmp mov subq (bad) xlat mov movb or outsb clc sub xchg rcll hlt rex.WB rex.WR (bad) loopne (bad) jp or mov mov (bad) cmp rex.WB gs (bad) (bad) push xchg mov rex.WB sahf jnp (bad) iret out rex.WB pop pop test jae pushq sub out (bad) cmpq scas fild add (bad) (bad) repnz xchg rex.WXB movabs test or sbb rex.XB rex subl pop push retq movsl (bad) scas adc cs xchg rex.WRB rex.WB or mov mov add enterq xchg insl jo cli jnp (bad) (bad) icebp pop mov pop outsb sbb sub addl jns push rcr int int3 shrb sbb rex.B jg rex.WB (bad) xchg (bad) pop rex.WRXB in orl (bad) (bad) jns (bad) mov rex.WX sbb fcoms rex.WX test popfq add pop sarb lods or mov movabs sub outsl negb rex.X jmp (bad) (bad) (bad) jmpq or (bad) jne test push cmovns rex.RX movsl rex.WR xor (bad) rex.WB cmp or xor and push lret (bad) lahf sub adc int3 pushfq jno add mov retq outsl mov lret mov rex.X jl rex.WB (bad) mov push cmp cmp retq (bad) sub movsl or (bad) rex.WRXB test (bad) jmp (bad) rex.WR callq mov rex.WRX xchg rcrl es rex.WRX jae (bad) sbb loope adc adc mov lahf push and out (bad) (bad) add push rex.WR rex.RX test xlat adc scas lahf xorl rex.W fdivl mov push sbb (bad) pushq (bad) rex.X movabs test fs cmp repz hlt in xor pushq rex.WRXB (bad) pop sbb xor callq sub sub pop mov sbb pop loopne adc (bad) jo mulb out rex.WB mov rex.WB rex.WX (bad) mov mov out clc jge jmp (bad) (bad) cld sbb (bad) xlat (bad) sub push ja rclq (bad) add and gs in insb cmp xchg rex.WB mov (bad) (bad) push decl pop in xchg fisttpl test movsl pop mov jno addr32 lods jne push sbb rolq pop lock imul pop (bad) sub ficompl sbb out mov fisttpl mov out pop (bad) mov and movabs loopne (bad) scas (bad) push (bad) jl rex.WB rex.RX cmpsb mov jge (bad) andb rex.WX jg rex.WB jle movabs rex (bad) rex.WB (bad) jl lret jnp rex.X rex.WB (bad) (bad) pop rex.RXB rex.WB (bad) jbe jo mov imul (bad) rex.R rex.WR repz pop rex.XB lods sub shl or mov pop repnz lock pop rex.WB out xchg test sub (bad) jmp cs shrl xchg fisubrl imul push cmc stos add rex.B cmp and cs xchg (bad) mov leaveq test xchg (bad) fisttpl rex.WX loope mov mov mov movsl addl enterq and in rex.WX retq (bad) mov nop add (bad) xchg or xor rex.WB sti (bad) (bad) sub mov cmp (bad) rex.X rcll rex.WRX rex.WRXB rex.RB rex.XB mov push mov or pop sub adc scas sub movabs jrcxz lea out lahf jmpq jne std test rcl (bad) rex.WB adc (bad) fldl mov sub mov fidivl outsl and xor (bad) rex.WB test rex.X rex.WB sbb mov (bad) rex.WB add xchg or xchg ds cmp pop sub rorl xchg push in (bad) jmpq sub ficoml xor (bad) cmp add mov ja xchg outsl sbb pop or sub (bad) sub (bad) cmp es test (bad) lret out add pushq out (bad) push rex.B test pushfq and callq push push and sub or movabs lret std rex.WR movabs nop js scas and sub int3 fwait xor (bad) xchg shll jno xor test pop sbb pushq (bad) rex rex.WRX mov data16 jbe sub rex.X repz sub push xchg sbb rex.B sbb sbb gs imul mov movsb or adc sbb out movabs rex.WRXB cs in imul sbb sub cmp xchg pop jmp fidivr mov xorl outsl (bad) adc pop xchg (bad) (bad) mov callq push orb scas rex.WB out callq pushq xor add mov rex.WRX imul out out pushq mov cmp jg sbb sub movsl stos callq pop xchg js mov (bad) (bad) xor imul pop and (bad) (bad) rex.XB rex.WRX lret (bad) shrb (bad) rex.WB push rex.R (bad) out xchg sarb sbb outsl rex.WB jae mov mov push jnp mov (bad) fs retq or (bad) add ficomp jns movsl jmpq rex.RX mov (bad) je (bad) jbe mov mov jle (bad) xlat cvttps2pi (bad) xchg pop pop pushq addr32 movabs movsb (bad) sbb push push pushq movsl pop (bad) cltd and mov scas mov jno and mov and adc mov pop icebp scas jnp mov stos loope xor insb xor adc and fisub (bad) and (bad) cmpl push (bad) push lret push pushq jmp add retq fwait push ds int sub (bad) jle shll fstl sub imul je rex.WX rorl pushq (bad) add rex.WRX in testl (bad) mov jmp and (bad) gs shl add adc movabs sub rex.RX pop cmp add sahf lea (bad) mov int sub and xlat ss (bad) rex.WRX loopne lea (bad) xchg jns (bad) jge out loope sub stos out jno movslq mov mov std sub test jae fistpll stos rcl xchg cmpsl adc es int popfq cmp pushq (bad) (bad) sub rex.XB (bad) stos leaveq rex.WB ds mov (bad) rex.WB cmp repnz mov rex.X loope fwait rex.WB and lea sub mov movslq callq movsl mov sbb rex.WX movabs push (bad) (bad) test pop rex.WB push pop jb int fdivrp mov gs adc sub callq (bad) cld push (bad) cmp rex.WB and scas rex.XB loopne mov clc outsb icebp movsb loope xor rex.WRB addr32 lahf and rex.WB mov mov jle mov mov (bad) cmp rex in pop movsl jb push rex.WB ss enterq pop cmp xchg scas rex.XB pushq lods imul sbb ja and push outsb lods mov movabs or cli stos xor jbe testb xor (bad) jb xchg (bad) push (bad) add (bad) rex.RB rex.WR push mov push push cmpsb pushq out (bad) mov hlt rex.WB mov adc jl repnz rex.W mov rex.WRB rex.WB mov pushq push sub (bad) fnstenv (bad) rex.RX cltd icebp (bad) in leaveq enterq (bad) mull fstpt add (bad) xor jns rex.WB (bad) js jge push add xchg fcmovb sbb sub rex.RB js push adc xor or cltd xor rex.B mov and pushq rex.WXB cmc push jns (bad) rex.WB notl (bad) pushq (bad) xchg or or mov test outsb (bad) rex.R rex.WB adc repnz or shrl jns sub and sub rex.WR or idivb lret cld adc (bad) es fcoml adc or adc rex.WB (bad) in (bad) and pop fsubs mov movsb adc xchg xchg and loop add lods jo movabs je out push sub cmp add add xor clc rex.RXB sub jle fistl cmp mov pop jo add subl sub in gs pop mov fnop mov add rex.RB mov sbb imul rex.R lret test mov (bad) xchg mov rex.WXB sub rex.B xchg sub mov xchg adc int cmp sbb loop lods push mov fs mov mov xchg jb rex.RXB mov sub insl add rorl or andb sbb mov (bad) or jmpq nop rex.WRB test jno xor mov push xchg lods decb cmpsb and xlat out xor (bad) pushfq xchg adcb and (bad) (bad) (bad) xor (bad) rex.WRB push out mov in pop (bad) mov (bad) cmp insl in leaveq or pop (bad) enterq enterq movabs mov sahf mov rex.RX rex.RB pushq cmp xor cmc outsb pushq (bad) cmp faddl repz lock lods mov cltd push cmpsb fsubs jo lret lea rex.WXB cmp and add shlb pop jmpq push sbb jl mov cmpsl enterq push jl (bad) div adc pop sub jbe xor lret out rex.XB pop jne cmpsb movsb pop movsl lea pop cltd and lock jns jbe (bad) cmc xor pushfq push rex.RXB imul (bad) clc mov push mov (bad) fist test repnz mov push (bad) out and pop (bad) movslq push push add and imul jo (bad) xor sbb rex.RX repnz cmpsb cmc adc nop movabs jle in (bad) pop adc cmp rex.RX ja repnz retq pop (bad) cmp ss jo imul mov sbb lret vpsrlw jge sub mov jmp add test mov fsubs xor xchg sub or pop rex.B rex.WX or (bad) movsb push sbb rex.RB or mov jge,pt shlb stos testb sbb pop fwait stos nop pop sub movslq (bad) rex.RXB and sbb fisubr or mov push loope (bad) out rex.RB xor mov xchg movsb mov rex.WB (bad) in sbb loop pop (bad) adc test or push adc mov (bad) test (bad) sub cmp mov rex.X stos movslq xchg fcomp in mov adc adc (bad) in out xor (bad) (bad) rex.XB xchg mov fmulp jno add faddp addr32 add rex.WX pushq cwtl fsts mov sti movsb in fmull paddw pushq add fildll lods add rclb jne xlat retq or push fwait lock rex.RX lret out sub mov je (bad) jb test addr32 xlat test shrb int sub rex.WXB (bad) rex.WRB movabs add xchg or or out sbb (bad) (bad) pushq cmp mov and test iret (bad) sbb add vminsd movabs (bad) mov out movabs cmp adcl mov (bad) cmp sahf jno xchg xor sub cmp jrcxz ror rex.WX mov mov adc jrcxz popfq enterq hlt (bad) sbb xor push cs rclb xor xchg xchg (bad) xor jns mov add pop (bad) scas lahf callq pop mov test (bad) (bad) fiaddl imul ffree loope pop (bad) (bad) mov or iret jno (bad) or sahf sub ror loop rolb (bad) adc jmpq lods cmpsl test rolb retq sbb rex.WB fadd sub rex.X rex.WB es xor rex.WB (bad) hlt rex.WB (bad) cwtl (bad) lods rex.WRX (bad) cmp rex.WB sbb (bad) jg mov xchg (bad) negb lea cmp loop rex.WB add xor (bad) jg (bad) popfq rex.WB jmpq (bad) out cmp sub movsb rex.W mov (bad) xchg out clc popfq lret xor (bad) pop push int3 not fnstenv push xor test out add enterq adc rex.RX cmpsb mov lock sub fmuls adc movslq or pop movsl mov fst (bad) pop xchg cwtl (bad) xchg decb xchg (bad) movabs (bad) (bad) cli (bad) std lret rol sub (bad) mov add xor movabs push push enterq ja (bad) (bad) loopne sti out mov rex.W (bad) xchg rex.WB rex.WXB rex jbe rex.WB incl rex.WB add mov and and or sbb add cmp pop repz lock lods push (bad) mov or ficomp int3 clc movabs jo xor stos xchg rex.WRXB gs sub xor out xchg and cwtl cmpl rex.X add sti adc push or sub xorl mov push sti (bad) (bad) mul mov (bad) rex.RX or (bad) and mov (bad) test and ss xchg movsl and rex.RX js cmp and rex.WRB sub std xchg imulb pop callq (bad) jb lock rex.WX clc fnstsw cld fisubr mov jge (bad) shrl out rex.RB movsb (bad) cli ja pushfq cmpsb movabs rex.XB jl movabs sbb add (bad) sub outsl adc movabs jle in (bad) test and icebp jne pop (bad) rolb rex.RXB movsb or xor mov fidivr scas stos rex.RXB rex.WX (bad) sub repz movabs mov cmpsl rex.WB and rex.WB pop mov sbb mov lea out mov mov mov addq or (bad) movabs pop pop rex.B cmp jle rcr data16 jbe mov enterq rex.WX rex.RB enterq push nop push scas xlat fwait and lahf sbb adc xchg repnz xor push (bad) xchg fsubs rex.X push pop or mov callq mov hlt rex.WB rex.WRX mov (bad) mov rex.WB mov (bad) rex.WB mov or iret loopne (bad) (bad) jrcxz clc rex.B in jo xchg xchg loop add jne rex rex.WRX push cwtl movslq xor int3 mov stos int3 jl add xor outsl pop loopne jno sub xor jrcxz sub jb fisubr mov (bad) (bad) rex.WB xchg loop jnp fisttpl (bad) adc (bad) mov pushfq movabs (bad) nop (bad) (bad) loope pushq mov mov (bad) push (bad) push push mov hlt and mov jle and lret xor test cmp cmp or rex.WRB sbb mov push enterq popfq stos xchg add push pushfq add jrcxz test loop movslq xor nop fdivrl cltd jg out movsb scas rex.WB (bad) pushq rex.WB jne addr32 rex.WB lret pop rex.WRX mov mov movabs cmp or stc sub add scas repz lods lods (bad) in push mov sub addr32 xor cli sbb rex.WB test mov xor movsl or push mov pushq fst lock cltd shl rex.WB add rex.RXB movsl add pop (bad) repz rex.WB adc (bad) out fmuls in sub add insl cs mov movabs in rex.WB loop mov xchg lods movb and sub and or xchg sbb sbb xchg adc (bad) (bad) repnz rex.W test cmp mov retq xchg sub or fs flds xchg adc sti in (bad) pop add cmp lods rex.WB outsb xchg sbb cld (bad) adc or test std jp (bad) mov xchg rex.WB or pop (bad) rex.WB icebp (bad) jae movslq and mov pop mov idivb data16 in sub in ss loop rex.XB rex.WB mov cmpsb cld movb (bad) scas test (bad) (bad) rex.RB xor lret sti xchg (bad) mov js sub jmpq xor xor hlt cmc sub push repnz xor rex.WB cld xchg callq (bad) iret clc test add mov jl movabs sub rex.WRX mov mov xor pop mov pop movslq movslq add rex.WXB retq add (bad) pop (bad) and (bad) out sbbb sub cmp jge loope pop out cmpsb or stos add or repnz cs push retq mov int3 sub nop jge cmpsb lods mov out push imul fisttpll add icebp insl pop xchg lret stos sbb mov rex.X insl add pop jo mov movsl adc cmp rex.RB data16 (bad) out or loope movabs mov add mov fist (bad) cmp fwait sub and movslq (bad) out cltd ficoml mov (bad) rex.RX cmpsb sbb pushq (bad) (bad) lahf or sub or std cltd push callq mov andb adc retq rex or and jp je,pn (bad) test rex.X (bad) movabs iret jge rex.W rex.WR jmp test jbe (bad) jns (bad) lret rorb rex.B add or rex.WR (bad) rex.XB pushq lcall jmp out xor addr32 sub xor rex.RB loop mov and sub andl fsubl add (bad) mov fadds rex.W (bad) xchg xor and shrl mov fsubl adc shlb cmp loop or stc xlat (bad) in jno (bad) and test fdivl cmpsb out push rolb and fistpl (bad) sub or fistpl shlb (bad) pushq mov (bad) sub mov (bad) lea nop (bad) movslq (bad) cmc mov jge callq xchg cmp xor xchg rex.XB rex.R push lret jp sbb adc rex.RB jge orb fmul (bad) jno icebp pop push lret je push sub rex.WX (bad) (bad) sbb in jae roll addr32 mov rex.WRXB cmp mov xchg in retq pushq cmp in subl sub rex.XB xor (bad) movslq cmpsl jb xor (bad) mov cmp (bad) cmp pop lret add add xchg (bad) jne xchg mov (bad) push cmc (bad) lock mov sbb gs and or jrcxz sbb in iret pop stos movabs js push subb std jg adc iret out xor jl sub add (bad) rex.WB lods repnz add rcrl lret imul xchg or mov pushq mov (bad) fdivrl fcmovu movabs sub mov xchg xchg pushq pop push pushq out xchg jbe (bad) and pop out mov mov js cmp (bad) (bad) sbb (bad) loope adc sub cmp movabs movabs or leaveq sub cmp rex.WXB pop push rex.WB or jno iret gs faddp rex.B rex.XB (bad) adc xor cli pop (bad) loope rex.X sbb rex.WB jg push xor sub movabs mov pop rex.WB cld (bad) or xor setno push jle cmpsl or rex.WB adc add imul rex.WR loop or out test mov cld or (bad) rex.WB jmpq xchg scas addr32 mov rex.WB (bad) push stos (bad) push in (bad) xor mov fsub add mov cli lret notb cmp pop add fsubrl sbb push icebp or int3 mov adc jl ja sbb adc cwtl or scas callq or hlt mov lea or sti fdivs int3 (bad) xor test cmpsb enterq rex.RXB sub test (bad) adc or rcll repz cwtl incl sub imul pmaxsw (bad) es or loopne jge lret (bad) add add rex.WRB sub enterq stos icebp xchg hlt add xchg cmp in addr32 in sbb imul movsb xlat sub pushq out out fninit add scas (bad) callq xchg enterq mov enterq rex.RB addr32 xchg xchg add adc and (bad) rex.RX movslq xor cwtl add mov jg pop gs not (bad) (bad) rex.B (bad) movabs rex.WRX sti push mov jae sbbl retq and add jmpq jbe cld (bad) xor adc cmpsb callq movsl test mov in adc jge lret pushq (bad) rex.RB cmpsl lods repnz push rex.B jge pop loop movabs in hlt rex.RXB or mov je leaveq rex.B int3 mov mov mov adc rex.WB pop stos xchg movabs mov rex.WB mov rex.WB jrcxz sub xchg shll (bad) stos callq adc rex.WRXB and jns or lahf rex.WB rex.RX jge rex.WRXB in pop rex.WB or rcll sub xchg out leaveq loope (bad) movabs mov and ficom xchg mov jbe sub fldt (bad) leaveq (bad) loopne sbb xchg pop cmp and rex.WB pop pop push nop (bad) mov movabs cmp fistpl rex.RXB xor jno pop and rex.WXB xchg xchg and je movslq jnp callq xchg pop (bad) adc fimull rex.WB sbbl nop ss rex.RB pop adc lret popq adc cmp (bad) subl jb rcr or fsubs sbb lret or and and xor out pop xchg add movabs (bad) nop adc rex.WB xor (bad) sub jl adc push addr32 fbld add xor orl mov rcr stos rex.XB rex.WB (bad) idivl packssdw fs (bad) rex.WB jrcxz (bad) (bad) and and and cmp ja faddl (bad) rex.RB push rex.WB jo rex.WB sahf cmp push loopne (bad) out rex.WRB jae test mov mov mov mov fildl rex.WB fs movabs mov mov (bad) rex.RX (bad) rex.RB xchg add pop orb lahf jp icebp (bad) rorl and push pop fbstp add mov int sti cmp (bad) sub (bad) (bad) (bad) icebp imul (bad) (bad) rex.WR pop (bad) xchg rex.WB in xchg (bad) xchg sbb (bad) xor add pop stc lock rex.WB cmp (bad) mov fs ja rex.WB int3 mov jae pop jle and rex.WB sbb outsl mov (bad) mov cmp insb mov insl addb fwait movabs loop jle int3 rex.WB (bad) xlat mov fidiv fs add movabs in adc lret (bad) int fisub jrcxz rex.WB es insl mov cmp imul mov movabs xchg int3 jg leaveq mov jns or and sub rcl adc jp pop rex.X cmp (bad) lock pushq push rclb adc lret xor mov mov stc xchg sahf xor imul cmp and add or repnz jrcxz mov xchg adc or rex.WXB imul xor (bad) orb movsb adc (bad) (bad) rex.WRX or rex.WB xchg (bad) mov xor jno (bad) lea je push in cli cmpsb rex.WB pop mov cld rex.WB iret jg push (bad) mov shlb sbb rex.WRB rex.WRB pop pushq scas add jg rex.WB xor (bad) movsb (bad) adc and je (bad) callq mov (bad) loope cmp xchg mov mov (bad) (bad) cmp pushq adc test pop pop (bad) enterq fs loope loop sub dec jge rex.B sbb cmpsl out cmp mov sub mov test movslq (bad) mov (bad) ds negl hlt rex.W mov (bad) xor movabs fcmovu xor xchg sub cld movsb out rex.B lock stc (bad) in rclb cmp (bad) outsl sub cmp sbb movabs pop add movabs add pushq (bad) sub lock (bad) nop rex.RX mov push (bad) insl pop cmpsl jbe (bad) sbb rex.WXB loope (bad) movabs cmc xor jae rex.WB es in sub (bad) ror (bad) mov jmpq out leaveq sub nop fdivl test mov mov jmpq out xlat sub push in callq pop sub xchg adc mov rex.WB cwtl pushq xor mov (bad) mov pop rex.WXB add out hlt lret std pushfq callq adcl jge jl jg fbld mov adc (bad) rex.WXB (bad) pop sub add (bad) pop movabs int3 sub es (bad) pand adc rex.WX test push xchg sbb insb rex.B pop popfq push mov jne rex.WRX jrcxz in clc xchg sub loope rex.X movabs fsubl pop push movabs push out jae leaveq callq rex.WB in sub add outsl lret xchg (bad) sub (bad) mov cmp je (bad) insb data16 js mov rex.XB and rex.WRB movabs mov es mov rex.WB (bad) adc clc jae int3 addr32 cmp mov out pop push movsb mov jb jnp hlt and out cmp sbb insl rex.WB jl adc mov int nop cs pop mov adc retq pop loop addr32 xchg pop adc (bad) push in rex.WB movabs sahf or rex.WX out cmp rex.WXB in js icebp (bad) pop out xor rex.WR pop sbb rex.RXB cmc imul jmp and pop rex.WB popfq movabs or or std imul cmp movsl cmpsl (bad) sub movsb adc sbb mov subq test pop rex.WB jmpq rex.RX in in (bad) stc or adc adc xor data16 pop out fisttpl retq std popfq iret jne (bad) push and rex.WB scas lods shll (bad) (bad) sub push sahf (bad) callq mov jno scas je or jbe movabs pushfq out and rex.WB mov jno cmp pop (bad) shrd imul mov xor rex.WRXB and test cmpl icebp (bad) gs jrcxz cmp repnz mov clc movabs mov rex.WB ds enterq sub movabs and rex.WRXB out imul xchg or (bad) rex.WB (bad) pop jo xchg movslq pop jle xchg fisttpll mov sub (bad) fwait (bad) mov mov cltd add mov xchg movabs jnp adc (bad) callq mov cmp add xlat rex.WB pushq lock stos rcll clc mov push retq cli sub add (bad) cmp push pop or test in test cltd lock sub (bad) jbe sar callq (bad) mov fldl sub clc sarb jb jmp lock or (bad) pushfq out movabs rex.RX shrl lods sub sti and int (bad) cmp lahf enterq adc jmpq retq negl retq gs push out adc mov jmpq test xor outsb push leaveq jo nop gs or or sub jne mov (bad) sub (bad) movabs movabs rex.WR and orl in or sub mov sub rex.XB mov (bad) (bad) movabs cmp orl repnz adc sub movabs (bad) fldcw and xchg xchg adc cwtl add jp jne out add pop movslq mov adc stc mov test xor mov test imul sbb movsb popfq rex.WR rex.WRX rex.R xor test callq popfq jmpq out cmp test es (bad) test pop rex.XB jmpq rex.WRXB lods fsubl mov xchg subl cmp rex.XB insl jrcxz shl rcll add push xlat loop es data16 rolq andl (bad) enterq mov out sbb sub movabs push in xor adcb or pop movabs (bad) rex.WR cmp (bad) lods add test rolb testb jmp rex.WRX adc push es xchg imul (bad) insl lahf (bad) jno or jge rorb (bad) shrb movabs (bad) addr32 push (bad) sahf jmpq (bad) in mov mov (bad) sbb jno sbb repz (bad) mov jp cmpsb (bad) xchg lahf xor hlt outsb int fsubl shr test movsl mov rex.WRB (bad) out mov imul or and xor js addb fadd rex.WR es jge cmp push adc mov and leaveq xor shlb jl (bad) mov (bad) rcll cmp rex.XB xor stos mov (bad) or movl pushq xor pop xchg rex.WB (bad) pop sbb rex.WX (bad) add mov fnstsw push in mov je icebp outsb mov mov (bad) push lret sub lret sbb clc or cmp es add test xchg mov (bad) cmp adc repz pop push adc xchg test inc pop test jle (bad) xchg push push or mov js (bad) sub in hlt test mov fldt rex.WRB push rex.XB cmovo sbb movslq loope rcll rex.WXB in pop (bad) rex.RB rex cld movabs sbb in rex.RX (bad) pop and rex rex.WB fsqrt (bad) mov rex.WB iret xchg and repz movsl push sub rex.WB js and fwait (bad) push jno mov stc push and mov stos (bad) movsl incb adc test icebp and xchg adc insl xchg int3 test rex.WB mov retq (bad) add rex.WB mov lods mov sbb push out fimull adc out and addr32 rex.WB sbb (bad) loopne rex.WB push rex.RB out imul adc add xchg cltd test rex.RXB sub push rcll sub xor pop (bad) xchg rex.WB mov rex.WX gs shlb pop mov jle movslq cmp cmp lock (bad) repnz ja rex.RX fdivs xor loope push push (bad) retq out mov xchg (bad) mov jns mov pushq sub xor jrcxz rex.RXB rex.RX rex.WB cmpsb loop lahf and and mov ds (bad) mov stc mov jle rex.WB sub mov gs mov rex.WR fsub add (bad) push cmc rex.WB rex.R test xchg (bad) loopne or test jl (bad) xchg pop (bad) frstor loop (bad) (bad) mov xchg (bad) adc test roll movabs ficomp xchg push cmp mov jrcxz mov stos add orb xchg mov vmovaps movabs adc (bad) cmpsl data16 mov lea sbb xchg pop es and mov add stos adc rex.WB rex.WR imul mov scas outsb sbb orl pop rex.RXB rex.X cli (bad) rex.WB sbb rex.WXB and mov and adc movslq pushq mov jrcxz scas in and (bad) fstps (bad) leaveq fs xchg mov sti adc fcmovnb test (bad) cmp shrl (bad) or add and stc adcl push add repz out insl movabs (bad) or iret rex.WRXB mul mov adc rex.XB and insb and or push xchg test add or mov nop movabs mov js callq imul in rex.WB and leaveq sub rex.WB xchg movabs jns fmull pop and mov cmp sbb adc movsb scas (bad) mov sub push jb (bad) xlat mov (bad) cwtl js xor loopne mov loope sub mov rex.WXB (bad) cmp loop rex.WB out jle,pn andb (bad) pop (bad) jge subl rex.WRX pop xchg rex.WRB sbb push fcompl rex.RXB rex.WX fs xchg rex.XB lahf (bad) addr32 test frstor (bad) movsl cmp or (bad) mov mov and rex.WRB cmc xor imul add loope pop stos (bad) mov adc (bad) insl lahf in fsubrl adc rex.WB repz xchg add pop fldcw fstpt shl add xchg adc jl push jp mov xchg push loopne lahf sub fadds (bad) fsubr fnstcw hlt mov mov mov jo pop jno (bad) fsubr pop (bad) and (bad) cmp mov (bad) cltd out rex.WXB rex.WB rex.RX jb cmc (bad) push cmp sub lods xchg outsb loop movabs xor rorl adc cmp std addr32 xchg mov mov cmp cltd test insb adc mov (bad) jmpq (bad) mov rex.X add jns rex.WB mov jmp retq andl stos insl rex.B pop jb push (bad) xor mov cmpsl iret or enterq adc repz movabs sar gs (bad) callq or cltd mov xchg rex.WXB mov rex.WB and push mov rorb sbb rex.WXB adc sti rex.WB sbb cmp pop pushq (bad) push add mov test stc mov push xchg push test (bad) dec callq (bad) icebp hlt mov pop or rex.RB out or addr32 and add leaveq xor xchg and insl lret (bad) fwait test mov fwait push popfq cltd imulb or mov insb rex.B adc jl (bad) xor in sub ss sbb push mov shlb jno movabs icebp retq pop lret fidiv mov xchg add rcl rex.W test fwait sbb adcl addl rex.WX rex.RB (bad) (bad) mov or ss inc repz out jle push pop add mov movabs movabs pop pop outsl (bad) (bad) or jp insb xlat out mov rex.RX rex.WX xor sub fs rex.WB repnz xor mov scas rex.WB rex.WR cli (bad) (bad) out pop fs (bad) (bad) (bad) xchg jae or xor out test and test (bad) out hlt sbb add cwtl imul (bad) mov xchg sbb sub in stos cmpsb clc std out rex.WR sbb push paddd shl and rex.WRXB lret xor insl sbb lahf lock std (bad) sbb jb lods cwtl mov loope sbb sub decb movslq int insb leaveq push rex.RB test lods fwait (bad) push xor fs scas (bad) or pop jge repnz and xor pushq rex.WXB rex.WRXB out imul movabs rex.WRXB xchg movabs pop pop and xor movabs rex.X es gs je sbb sub lea add movabs cmp rex.WB retq xor mov subl test add stc ror lret adc and push mov rex.WXB rex.RX js fildl push sbb mov rex.XB repnz pop mov jb in mov xchg and mov repz rex.X cmp callq (bad) rex.WR jmpq (bad) xor push (bad) (bad) rex.WRXB js push cmpsb xchg lods jno push ja mov rorb (bad) sub mov rex.RB (bad) xchg push rex.WRXB ror pushfq in rex.RB rex.R jmpq jo outsb rex.WRB sbb in movabs (bad) rol jns add rex.WRXB jno lock or (bad) int3 mov and loope int adc hlt iret (bad) fwait pop (bad) loopne xchg xchg rex.RX rex.WB lock and enterq (bad) (bad) out cld jp ja rex.WB sti jbe movsb rex.WRB addr32 mov movabs adc stos pushq (bad) lret (bad) rex.WB ja xor (bad) enterq addr32 rex.WRB or insl outsb jmp leaveq fildll xchg sti (bad) fmull movabs jp sbb (bad) mov xlat callq fistp andl rex.WB rolb pop out sub adc (bad) xchg xor sar (bad) rex.XB jg int3 out add fiadd pop cmp (bad) fsubrl xor or sub nop jmpq fstl lret pushq sub movsb sub rex.WB (bad) movabs pop fistpl add cmpl xchg and jnp rex.WB int xor andl adc jns mov callq test hlt repnz rex.WB rex.X sub or pop mov add (bad) fcoms movabs lea fmuls cmp mov or loop lock sbb nop (bad) loopne rex.WXB rex.WRB pushq idivl outsl rex.WB imul adc or insl rex.WB or adc movabs rex.XB mov test or cmp sub pop and (bad) rex.WXB xchg (bad) jp xchg icebp jge fsubrs (bad) cmpb lahf (bad) xchg out cmc lret xchg sub rcr loop insl (bad) stos nop push pop sbbq rorb (bad) sbb (bad) fs (bad) rex.WR sub (bad) push rex.RX rex.W or rex.WB movabs mov movsb jle or rex.WB rex.RB fisubl ror rex.WB sub (bad) mov push callq imulb cmpsb xor jo rex.WXB movslq rex.X jmpq mulps rex.WR push fwait (bad) jne mov nop jne in stc adc sub mov xorb ficoml rex.WRX jbe scas data16 lahf (bad) loopne jae bnd mov movsb cmp push sbb movslq callq test cmp jns (bad) jg sub es rex.B pop jg jle or enterq adc test cmc sbb cmp add add mov hlt jp xchg or je rex.RXB adc add mov addr32 pushfq (bad) push sbb cli cwtl mov test imul (bad) rex rex.WB mov pushq rex.WX rex.WB (bad) adc cmp stc mov mov (bad) pop movabs (bad) rol xor rex.WB (bad) fmul rex.WXB rex.WB pop movsb js neg sbb shrb repz loopne movslq rex.WB jns mov mov rex.WXB (bad) cmpsb fs mov outsb jle loopne cli cmp negb mov add xchg std rex.RB movsl rorb push pand rex cmp cmpsb loopne (bad) jle mov rex.XB mov test callq callq fldt jno movabs mov lea (bad) shrb pop cmp movabs pop mov data16 sbb or lahf ficompl jl lret rex.WB and insl (bad) xchg mov rex.WB lea lret add cmp (bad) cmp mov movslq cmp movabs mov jno push hlt jbe push (bad) (bad) outsl callq and (bad) cld idiv and pop jo rex.WXB add in pop out xchg rex.RB mov (bad) mov rex.WRX lea rex.WB sbb pop out xor rex lea push sbb pushq pushfq pop mov std or insl test add movsb ja sub movabs xorb imul cmp and push shl mov es push clc (bad) movslq rcrl and push and lock sbb (bad) add (bad) and sub pop movabs mull sbb outsl rex.WX callq movslq clc xor (bad) mov adc jl mov or rcrl (bad) pop lret rex.WXB rex.WRXB rex.WRXB lock movslq (bad) jae clc ja (bad) callq fcoms xor shrb (bad) icebp xchg mov (bad) insb in callq pop sahf jbe shll mov pushq jns retq (bad) lock rex.WXB rex.WX (bad) and mov retq jns add out pop rex.RXB (bad) xor lretq sbb (bad) mov popfq push rex.WRXB (bad) push rex.WB jbe imul pop sub and std jae rex.WB mov jns enterq sti (bad) pop stc (bad) (bad) (bad) movabs stc (bad) lods adc sbb rorl loopne push mov or movsl rex.X out jrcxz pop add test adc (bad) xchg rex.WB (bad) jo fcoms rex.X (bad) lret (bad) (bad) push xchg cmp sarb (bad) mov mov rex.WB loope retq and (bad) pop fs (bad) xor data16 adc rex.WB rex.WX rex.X in cltd rex.WXB ss rex.XB mov pop pop fs roll out adcl (bad) rcrl sti andl scas rex.WB or (bad) out shr pop movsb (bad) fldcw push int pop push xor (bad) adc imul jg ficom jno rex.WB cmc mov and xor rex.X rorl (bad) rex.B or rex.B repnz out callq cmp xor mov movsb rex.RB ss (bad) rex.WRX adc pop mov cmc pushq cmpsb repnz add sub mov rex.WB or xor xor rex.WB rex.WRXB mov mov sti push int3 mov loope jnp rex.WRB movabs stos icebp lods rex lea adc int (bad) imul (bad) (bad) rolb mov data16 sub xchg pushq int3 sub adc pushq outsb insb (bad) pop sbb jne movsl mov imul xchg mov gs (bad) mov cwtl rex.WB mov jnp sub data16 (bad) ja pop sbb sub rolb ss gs and rex.WB out pop xor (bad) (bad) xor cmp push mov movsb movabs jl mov mov callq jb pop pop mov (bad) (bad) rex.RXB (bad) cltd (bad) sub mov hlt (bad) cmp sub jnp sbb mov (bad) rex.WB xchg std sub lahf rex.WXB int3 xor (bad) cmp js loop movabs nop mov mov in insb (bad) push scas rex.WB sbb rex.WB cmpsb rex.R rex.WB js rex.WB sub mov rex.RX rclb mov rex.WB (bad) pop sub test movsl xchg mov sub sub jns nop jp out or cmp sbb rex.WB (bad) pop cmp retq in jnp rex.R rex.RX (bad) (bad) (bad) sub repz insb rex.X vmovdqa mov jne mull push rex.WB leaveq imul mov (bad) (bad) (bad) (bad) ja imul (bad) pop (bad) cmp rex.WB insb idivl outsb rorl sbb (bad) cltd lods mov or xlat xchg (bad) cs pop insb sub mov mov sbb adc sti (bad) imul imulb fs cmp or pop pop pop fldt rex.WXB push icebp push and rex.WB outsl imul mov xchg cli sub popfq fstpl test jae fistpl sbb cmp movsb or shll or fldl jle,pt sub stc (bad) movabs adc xor cmc imul rex.R cs pushq (bad) adc (bad) leaveq xchg lret scas xchg rex.WRB adc rex add push xor shll add add rex.RX div mov rex.RXB mov push or (bad) ja xchg xchg pop rex.WRB add out adc adc adc rex.WX test add cs movabs (bad) mov imul or mov push (bad) out jmpq mov cmc pop (bad) add cld (bad) (bad) mov vpcomb pop xchg test test mov fisub push shrb mov lret pop decl std out jl mull (bad) fs rex.WB sub xchg (bad) pop push jp or mov xchg mov int3 out jmp cs pop adc jne jg (bad) rcrq addl or mov jge lock cmc rex.WB fistp rex.WB and adc cmp es rex.RX shl (bad) jne xchg rex.WB outsb add rex.WB stos mov (bad) (bad) notl cmp jmpq cmp rex.RB rex.WB add sbb std rex.WB adc (bad) add jbe cmp jle (bad) xlat adc (bad) sub int3 rorq (bad) xchg lods mov xor xchg fwait add push push mov std imul shld xor imul xchg add cs (bad) and enterq movabs rex.WRX cmp rex.WR rex.WB adc rex.W rex.WB sub (bad) adc js rcll sbb jg callq push rex.WR sub push jmpq (bad) es cmp pop sbb (bad) (bad) adc clc sub pushq adc (bad) cmp lahf or rex.WB rex.WR mov cmp rex.RXB add rolb rex.XB pop xlat rex.WX js (bad) adcl (bad) iret adc pop mov je jp xlat movabs xor mov iret leaveq rex.WRXB rex.WB xchg (bad) or hlt push sbb rex.WB jrcxz rex.XB rex.WB pop mov mov add jb rex.RX lock pushq movabs es sub je and repz and and jbe xchg xor scas icebp rex.WB xchg jo repnz or or pop rex.WB rex.XB popfq outsb cmp (bad) sbb loope and addr32 (bad) mov sahf rex rex.XB add add out imul pop mov movabs pop adc lods (bad) in cmp rex.X pop and rcr pop push rex.WB cmpl rex.WB pushq (bad) orb pop test pop rex.X rex.XB movabs push xor movabs sub (bad) fisubrl (bad) adc xlat mov ja rex.W xchg xor lahf ror (bad) rex.X mov and pop shrb adc addr32 callq rex.WRXB lret loope and cwtl (bad) and pop outsb lock pushfq fstl in rex.WB mov rex.WB cmpsl insb sbb (bad) sub test (bad) mov mov cld (bad) and jno es rex.WB shr sbb movslq (bad) cmp fwait mov (bad) ror out (bad) mov (bad) addr32 cmp rcr callq adc shll jmpq xor jrcxz enterq fstl sti pop jmpq movabs xchg or (bad) (bad) xor leaveq mov (bad) and movsl mov rex.WB sub jno rex.WRX test xchg ja mov rex.WB faddl (bad) (bad) add rex.RB lea (bad) jmpq shr sub loopne rex.RB (bad) callq fsubr push sub cld add mov stos pop pop movabs out in sar rex.WXB rex.WB sub and mov out sbb jbe mov ds jns rcr out popfq or jno fldcw push pop imul pushfq vminss cmpsl mov and push jl movsl adc mov movb pop mov js movabs (bad) pop mov addr32 decl rex.RX (bad) add std rex.WB cld xchg scas jae rex.WXB retq and insl ja jge jmpq mov popfq xchg cmp rex.XB pop repz cmpsb or enterq (bad) pushq cwtl mov insl xchg jnp and lret pushq (bad) rex.WB mov xchg ss mov lcall outsl rex.WB shrl callq nop cld pop rex.W adc (bad) imull rex.WX rex.WB fwait push fs test pop mov rex.B jge (bad) stos pop test push sub and xor stos mov (bad) nop push cmp add (bad) mov (bad) test fs rcrb mov (bad) mull rex.RB lret in data16 rcr xor pop jl mov (bad) pushq pop sub fwait jne mov sarl push adc (bad) push movabs rex.WXB movabs (bad) (bad) sbb fs vcvtps2dq mov hlt cltd (bad) andl cmp lret pop movsl sti and (bad) jrcxz lret mov push incb pop js rex.WB mov push rex.WB mov loop mov neg cmp popfq rex.WB mov rex.RXB rex.WB outsl mov rex sub rcl rex.X rex.WRB mov (bad) fdivrl (bad) cmpsb add movabs xchg rcrb mov lock or sub sub retq fcoms jns sbb pushq sub push push cmp mov fisubl xlat (bad) movsb add xchg pushfq add cmp enterq mov and cmp movsb xchg in pop callq mov divl callq (bad) mov mov (bad) mov mov sbb mov rex.RX leaveq (bad) rex.WB (bad) imul xchg pop (bad) rex.XB rex.B movabs jne xchg rex.WXB sub jbe cmp mov iret rex.WB sar mov movsb rex.WB movsl sbb insb mov rex.WB int3 (bad) rex.WB js add cmp in jp fimul pop outsl mov (bad) (bad) jle callq (bad) xor rex.WB pop idivl callq lods mov lock ja movslq stc in callq sbb jle (bad) loopne cmpsb subl pushq jo outsb data16 pop push rex.WRXB (bad) rex.RB stos icebp mov jbe leaveq (bad) xchg pop lahf cltd mov jrcxz loop loope jl (bad) adc retq insb rex.WB rex.WXB xchg (bad) lods pop mov jnp mov rex.XB out rex.WB rex.B enterq stos (bad) gs mov cmovne cmp jbe mov jb test xchg pop imul out (bad) jno pop movabs repz xchg sbb rex.XB xchg rex.B enterq in push mov (bad) sub int jns shrl rex.WB test loope or xlat jmpq rcl (bad) rex.X in jae cmp rex.W jl pop push (bad) callq pop and stos cli or int movsl (bad) rol sub mov insb loope rex.WB enterq imul xchg movabs iret rex.XB or popfq data16 (bad) pushfq movslq (bad) adc cltd js cmp rex.WB rex.X lock add jmp rex.WB cmpsb add scas in sbb pop retq test mov rex.RXB pop sub xchg xor lret sub lret es movabs jrcxz adc pushq mov pop (bad) sbb (bad) jno hlt (bad) jo pushq rex.RX fldt repz fcomps lea pushq mov jns pushq mov lock out (bad) mov fist test (bad) push retq rex.B xorl and ds ficompl (bad) (bad) pop xchg xor (bad) (bad) (bad) js mov loopne out in movslq rex.WB push int repz xor or rex.WB jle rex (bad) push (bad) out jmp rex.WB sub sbb cli add test rex.WB jb rex.WRXB rex.WXB loope andl (bad) fwait out mov and xor rex.WRXB rex.WB (bad) movabs rex rex.WB movaps jg ds lret movabs clc (bad) out movsl pop (bad) rex.WRB (bad) pushfq mov (bad) add jmp xor lea push xchg rex.RXB rex.WB insb flds or pushq rex.W rex.WRXB rcrb subb mov test rex.XB jns mov add xchg mov cmp rex.WB push shlw je rex.W movl sub xchg rex.WXB cmp (bad) pop fwait sub insl callq xor rex.WRX rex.X or xchg rex.B xor out movl (bad) js sub movsb inc cmp fs rex.WB rorb xchg mov cltd rex.WB push xchg fwait scas (bad) sub movabs xchg cmovns jmpq or jrcxz adc rex.WRX mov psllw movabs jge gs cld (bad) adc jle test adc cmp sub cli mov pop xchg rclq and sub mov imul lods rex.R push xor (bad) xchg rex.WB jmp mov or mov leaveq push rex.WB mov (bad) push callq or xor rol sbb lea decb fistl rcll out mov outsb sbb retq and andl mull out sub jnp rex.WB or rex.RB rex.WR xchg rex.WB lock lret xchg push rex.WB pop outsl xchg mov xchg jne push repz enterq rex.WRXB cwtl imul fs mov add (bad) sar pop (bad) movsb (bad) xor lods (bad) cmp iret xor rex.WB cmp adc push bnd add rex.WX sub repnz push rex.WB jle rclb push rex.WRX xlat (bad) sarb outsl jge cwtl lods loope rex.WR xchg mov fbstp rex.WB sti movsb adc fwait movabs int3 pushq sub rex.WB (bad) jnp pop out test scas gs rex.X repnz (bad) rex.WB and in cwtl cmp movabs retq test xchg rex.B rex.WRXB sbb (bad) lret rex.WB mov xchg rex.WRB rex.RB rex.W and cli rex.RX mul mov pop cs rex fcomps cli xor imul rex.WB rex.RXB (bad) pushq hlt or pop mov mov cwtl mov (bad) sbb jbe adc pop rex.W cld cmp mov pushq sbb or jmp and cmpsl rex.WB add test sti push rex.X rex.RXB in xor data16 (bad) test movsb rex.WB test rex.WRXB rex.WX mov callq add repnz xchg push rex.RB imul (bad) pushq (bad) pop sub lea sbbb mov jb mov fst pop test (bad) movabs leaveq fdivr in push rex.WB and iretq or sub jge movslq leaveq and mov pop cmp stos mov and or fucomp add (bad) sub xor mov jle mov (bad) sub iret jrcxz movabs callq fwait mov sbb sbb rex.RXB (bad) rex.WB std push cmp test mov scas jl adc movabs outsb imul sbb jb lods mov nop xor jg rex.WB fnsave popfq addr32 (bad) rex.RX data16 and popfq insb mov pop loopne lea push mov add pushq in in xor mov movsb icebp sahf out callq (bad) and int (bad) (bad) pushfq rex.RXB add xor jne mov pushq mov sahf movabs (bad) iret jo (bad) mov rex.XB xor adc (bad) sub and rex.WX fcoml sub xorb rex.WX lods pop jae jge test cmp stc rex.RXB and pushq in adc add mov (bad) adc cmp div fst and adc fstl test sti fistl pop (bad) lahf (bad) xchg rex.RB rex.W rex.RX ffree movabs jge movabs cld (bad) rex.WB test xchg sub or (bad) stc repz outsl test sbbl jp rex.WX mov rex.WB xchg add movsb enterq (bad) xchg push fdivrs test rex.WRX rex.WR rex.WB xchg xchg rex.WX sbb std rex.WXB jbe testb (bad) mov add xchg sahf mov (bad) pushq push sub outsl addr32 movabs rex.WB es (bad) xor fstl iret xchg and imull pop xchg rex.WB pop jmp xchg xchg loope xor int js jns sbb or cmc rex.WB mov rex.WRB xlat cwtl rex.W (bad) mov cmp mov or cmpsl jo jg out (bad) fmull popfq fldenv hlt (bad) loopne jg test js pushq cmp rex.XB scas mov sysret rex.RXB enterq adc in sub jns movabs sbb adc callq mov rex.W push (bad) (bad) (bad) pop rex.X mov fs mov pushq fwait (bad) and gs mov push (bad) addr32 adc (bad) sub (bad) adc or sbb pushq rex.RB add in jle (bad) (bad) xchg nop data16 retq (bad) sarb jle int pop test fadds in add push cmp or std cs jmpq jge pop pushfq xor popfq or (bad) cmp push sbb lea sub movabs stc movd mov enterq and callq cmp (bad) cs nop movabs js notq stos subb mov insb or popfq jmp rex.RXB shll out mov (bad) popfq (bad) xchg rex.R cltd rex.WRB or sbb (bad) jbe or sti mov (bad) sbb adc and out roll popfq or pop (bad) (bad) and cwtl cmp insb stos loope push cwtl cmpsb clc movsb sub (bad) (bad) cs and rcr ja add lret jne jl sub cwtl pop adc outsl rex.RX rex.WX and jnp lock rex.WB push sub scas movsb fstps rex.RX xor enterq cmpsb shrb xchg lods jp push test ffree pop shrb loope (bad) cmp rex.WRX gs sbb enterq (bad) mov ja and jg jg repz test cwtl add retq cmp xchg jbe cmpsb add rex.XB cmp sbb icebp movsb jp mov cli mov add pushq fdivrs mov (bad) rex.WR fildl in cmpsb ja mov std (bad) rex pop rex.B jle lret sti pop adc gs std xor movabs outsb sub loopne cmp data16 rex.WRXB rex.X adc fiaddl (bad) rex.RB mov mov mov stos or loopne movsb and lret xchg or mov push jno lods rex.X (bad) xor sbb adc mov adc mov mov mov rex.WRXB jp push cmpsl mov (bad) or std test rex.R rex.RB repnz mov rex.WRB ds jne jge adc or (bad) sti pushq adc xor push int3 xlat repz rex.WRX xor mov jmpq fstl stc push scas test rex.WRX fldl (bad) sub jne lret or outsl or popfq rex lret lods rex.WX (bad) adc mov enterq rorb xor mov mov stc rex.WXB rex.XB lea enterq mov retq cmp add lods jb test jl mov mov or sub mov and mov xchg rex.XB and sbb stos adc cmp and mov xchg cmp sbb orps lock (bad) pop pop mov nop cli (bad) jne mov (bad) jb cmpsl cmpsb int xchg rex.WR (bad) fistp sbb cmp add xlat (bad) mov or sub sub movabs fdivrl adc mov outsl cmpb cmp (bad) movslq rcrb mov rex xlat mov pop test rex.XB (bad) mov jne sub xchg je mov rcrb fmull scas (bad) sub and sbb add sbb stos imul push mov es std imul (bad) xchg (bad) cpuid insb lahf loope jle (bad) loop pushfq jge sub add pop (bad) add js adcl repnz pushq in mov negb (bad) (bad) xchg clc sbb jl xchg xor or movsb rex.XB pop (bad) xchg rolb rex.WB lock stos add xchg (bad) xor xor push js and sub sub popfq cmpsb rex.WB rex.R (bad) mov rex.WB repz (bad) (bad) imul mov adc pushq movabs cmpsl adc lea mov sub (bad) (bad) data16 (bad) hlt xchg out outsl jle orl callq (bad) push cmp or or test xchg test mov outsl movabs and cmp lods xchg popfq sbb (bad) rorb cld gs xor push rex.WB (bad) add ljmp cmc adc jo stc lods push stos and rex.WB icebp imul rex.R xor rex.WXB cmpsl test loope pop sub mov pop test (bad) rex.WB rex.XB out rex.WB push xor ss repz cltd push jrcxz pop ficom cmpsl rex.WB (bad) imul test sbb jns js gs rex.WB (bad) fcomip pushq (bad) pop mov (bad) test add (bad) and movabs sbb mov jnp add xchg shl enterq (bad) jae (bad) pushfq jns rex.WB int3 push xchg adc (bad) callq bnd callq add test or sbb (bad) mov mov movslq callq fsubl push (bad) pop outsb cmp callq or rex.WB sbb (bad) (bad) stc scas out (bad) xchg gs scas rex.WXB jg ljmp push push out loop in xchg (bad) jrcxz and adc rex.RXB sbb rcl cmp rex.WB scas or xchg (bad) (bad) adc xchg push adc negl pop and mov adc add rex.WB jge and pop (bad) movabs sub sbb loop pop mov add mov jb loopne lods rex.WB rex.WRX jl push cmp movabs cmpsl add and mov (bad) add cmpsl rex.WB (bad) jge sub fild rex.WB push mov pushq cmp callq and pushq rex.WB cmp cmpsl push xchg rex.R jrcxz in rex.WB (bad) mov lea pushq xor (bad) cld sbb pop out movl movslq cld mov jae test leaveq (bad) xchg xchg jp push pop neg nop movabs xchg outsl rex.WRXB sti cmc rex.XB cltd or mov xchg mov rex.WX outsl adc mov (bad) mov sub (bad) mov push push jbe jno pop add pop (bad) lahf gs cmp int3 mov pushfq stos lods rex.RXB (bad) mov mov pop (bad) fwait insl or xchg mov loop rex.RX js out (bad) cmp cmp rex.WX insb sub rex.WR rex.RX cs int3 sub sub mov jns out pop addr32 adc xor mov lea out (bad) pop mov rol mov movslq int3 jmpq (bad) mov fnstenv jo adc pop iret cmp pop add rex.B rcrq fstl rex.RX out (bad) cmp (bad) stc or movsl in (bad) pop (bad) enterq rex.W cmp or pop (bad) rex.WB (bad) and rex.WRXB xor push lods lret adc hlt outsl cmp add mov jns (bad) add and imul sbb ds repnz shlb (bad) repnz jle stos sbb rex.B pop sbb push cmpsl callq add retq xor ss sub rex.WB jns (bad) sub xchg add cltd xor orl sub mov cmp rex.X repz ljmp (bad) (bad) test mov or sarl mov or jns push fsubrl (bad) cwtl fbld mov fsubl add (bad) pop callq out xor mov loopne out push (bad) add adc movabs and or jp cwtl mov rex.WB add movsb rex.WRB xor lahf (bad) and jle and adc loope cmp push sbb loope (bad) pop pop (bad) adc stc movabs hlt ror leaveq jns rex.XB pop (bad) shr repz adc (bad) mov pop adc add or sbb add pop out test adc (bad) loopne mov xchg nop out mov jmp xorb lahf jge pushfq shufps test fmuls loope mov rex.WB jns movabs adc or fidivrl (bad) pop repz (bad) callq or add xchg and (bad) callq test lea push xchg fldt int3 (bad) sbb std sarb sub add sbb xor pop or xlat (bad) add xchg rcll (bad) hlt mov test adc jle je gs sub pop shrb (bad) jmpq (bad) jb xchg test cmp hlt jge js cmp repnz stc movslq mov (bad) pop popfq jrcxz cli movslq nop or mov sub fwait rol (bad) (bad) mov rex.R scas (bad) mov fmuls mov rex.WRB out pop sbb std jne jns outsb rex.RX rex.XB jnp push (bad) push (bad) nop jrcxz std mov stos or adc (bad) test jbe sbbb rcl loope in push jno lahf mov addr32 out pushq jo sub (bad) sahf rex.B mov (bad) mov xchg cmpb insl out rex (bad) movsl sub shrb rex.RXB cmp xchg push leaveq sbb cmp int3 sti xchg jae cmpsb xchg rex.WRXB push push (bad) callq clc (bad) jg mov sarb ss pop and jo fwait sarl popfq addr32 cmp loopne in sub gs xchg xchg (bad) je or and repnz pop in out xchg add xchg xchg addr32 or pop cmpsl adc add (bad) (bad) int3 rex.RB test (bad) (bad) rex.RB iret and mov xchg je xchg (bad) sub imull outsb shrb pop sub (bad) enterq xchg mov mov mov addr32 adc sub (bad) lods gs (bad) movsb xor or (bad) mov imull sbb in stc sub leaveq loope (bad) (bad) data16 (bad) fistpl mov (bad) fnsaves fs rex.WRB out stos mov rclb (bad) sbb (bad) rex.B xor jg sub jp shl sub rex.XB mov repz jb or sub rex.WR rex.R push callq or rex.WX xor sub pop gs sub prefetchwt1 rex.WB add rcll add xor rex.WB cld ss cmp sub xor pop add jo jo push xchg rex.WB clc repnz adc rex.WB (bad) rex.WR test mov sarl loope callq and cmp xchg rex.R rex.WRB add jae lock rex.WB rex.WX repz xchg rex.WB rex.RX xchg lods jp sub fs movabs jle jp and mov xor scas mov pop (bad) jmpq icebp rex.WB adc int add pop lret lahf mov push movabs sahf add clc jg ds test lea data16 (bad) rcrb adc (bad) (bad) sub imul rex.WRB lea (bad) fcmove rex.X or rex.WXB rorb xor je (bad) (bad) rcrb pushq (bad) movabs rex.R xor jrcxz fcmovnb xor in or test jns mov mov cmpsb lods movslq rolb loope test callq pop es (bad) rex.W or jno pop rex.WB fiadd hlt rex.WB test cmpsb xor cltd mov fistpl (bad) pop xchg and mov (bad) push pop fisubrl push gs pop adc je nop mov sub rex.WB rex.W or or add test lods rex.RB std rex.WB xor fs scas adcl std or (bad) mov rex.WRXB xchg in pop bswap lods rex.WR pop sub test adc (bad) pop (bad) and pushq add shl cmc jno mov (bad) in movabs popfq jl rex.WB sub (bad) or imul sub vpunpcklwd sub ds nop in rex.WR rex.WB movsl jp mov push and in or pop sarl mov std or cmpsl shrl int3 loopne es mov out rex.WB mov push or adc out mov xchg xchg in cmp (bad) js sti rex.W or xchg fldcw clc mov test loop pop xor movabs pop neg (bad) out xchg rex.RX (bad) push xchg sub lods lock rol leaveq out movabs (bad) scas (bad) pushfq cmpl sar out (bad) jb jg jl (bad) cmp xor rex.WB push cltd mov add xchg subb rex.WB pop loopne nop retq sub stos add (bad) (bad) jle fdivs out fwait es rex.WB xchg ja xlat add sub pop cmp and gs movabs xchg jmpq add pop push push fsubrl out rex.WB lea js (bad) sahf lods mov lret adc rex.WR mov pop rorl je fcomi rex.WB std (bad) movsl sub sub cmpsb adc lahf jmpq jne outsb rex.W out push out incb (bad) cmp xchg data16 rex.X pushq rex.WXB cmc hlt push mov xchg mov sub and jge push (bad) cmp movabs mov cmpsb rex.WRX cmp rcll mov pop (bad) stos test push psubb (bad) push xor mov cmp (bad) xchg (bad) (bad) mov xor callq not in nop mov (bad) rex.WR pop movabs (bad) jb adc clc movabs in movslq rex.X (bad) movsl (bad) rex.WR (bad) sti mov adc (bad) imul cmp adc rex.WX pop fimul int lods movabs xchg add mov popfq pop rex.WR rex.WX rex.W ss and cmp and add add pushq cs fildl (bad) enterq pop cmp mov or or (bad) and sub enterq enterq add mov (bad) sbb cmp movabs lahf imul sbb add cwtl mov lods push add or (bad) lret sub xor or rex.W es addr32 rex.WRXB imul (bad) (bad) pushfq adc movabs adc cltd movsl enterq leaveq in xor and (bad) in jge push xchg lea mov rex.RB rex.RXB and sub ja cmp push (bad) (bad) jg (bad) sbb callq sub sarb sarb xchg xchg sbb and pop jb movabs sahf jge lock cs cld xchg stos callq imul or mov imul or rex.RB rex.XB xchg fstpt adc (bad) or sbb adc and subb fisttpl shlb std cmpsb sbb mov rex.WX (bad) rex.XB fildl lock loopne adc clc mov hlt (bad) popfq idivb leaveq rex.WB lock sub jno add movslq (bad) sub jmpq or rex.WXB (bad) (bad) (bad) bt pop fnstcw loopne push jrcxz (bad) lock fwait jns std jno and std sub insb xor (bad) test sbb adc jne (bad) ja mov (bad) test push pop sub or movabs mov fs jmpq xchg sarb xor (bad) enterq mov rex.R in out mov adc pushq mov push xchg jno punpckhdq test jns cmpsb (bad) mov imul nop jo or and movabs stos xchg pop rex.RB popfq (bad) push pop mov out lods xchg mov push or (bad) add pop xor (bad) jno cmp cmp push or cmp or retq jno push out pushfq icebp jnp push cmpsl insb or mov (bad) (bad) mov sbb rex xor fdiv scas enterq mov mov test stos rex.WRX sub xchg pop and ja jrcxz (bad) jb and cmp lahf (bad) sahf rex.WR push xor stos sarb shrl clc add imul and test rclq cmp push (bad) callq or (bad) adc movl mov and jnp mov pop (bad) mov sub or xchg imul push pop sub sahf rex.WR xchg rex.RX xrelease pop fadd pop rex.R push adc popfq callq stc rex.B addr32 popfq or rex.WRX ss movsl (bad) (bad) pmaxub mov movabs or or adc std jne mov pop lea movabs pop loope and stos movslq sub gs cmp mov mov mulb jno addl xor int cmp pop movabs jae mov movslq cmp adc jmp rolb (bad) push insl lods loope xchg movsl pushfq jg mov cmp (bad) addr32 mov mov sti or mov and xchg test scas or rex.B out rcrl addl adc (bad) lods pop int xchg enterq add jae sub xor jns add xor fisubl mov decl (bad) mov iret rex.WB adc jb add sti (bad) callq or (bad) vpaddusb push (bad) rex.WRX mov gs rex.WB adc cmpl pop rex.WXB pushq sbb fistpll rex (bad) rex.WB push ja movabs pop rex.X (bad) push rex.WX int3 (bad) or andl push cmp xor (bad) mov loop cmpl (bad) and rex.WB jae mov cmp xlat sbbl xchg (bad) and addr32 (bad) mov (bad) adc mov sahf pop repnz fs cltd in sub and (bad) rex.WRXB test lret mov pushfq xchg insb jno or mov xlat add repnz xor popfq rex.WX pop add or sub jb test sub adc mov fcoml shrb jne adc adc mov out test cmc cltd (bad) mov rorb (bad) fdivrl repnz jno (bad) jrcxz xchg fisttpl push je out xchg out movsb add jl rex.XB ss (bad) rcrl sub in repnz movsl mov mov imul rol or popfq rex.WRX xlat sub mov (bad) xchg movslq pop adc xlat or mov cmp fmul rex.WX test in xchg pop retq pushq subl (bad) stc and (bad) adc movsb cmp push cmp vpcmpgtw push or rex.WRX add pop mov (bad) (bad) rcr loope pop jno fmuls cmp add repnz cltd rex xor add sub or jnp pushq xchg xor pop pushq hlt mov out push rex.WR cmc mov adc jp gs sarb push test rex.RB rex.WX mov jns pushq add rex.RXB fisub leaveq mov jge pop adc mov ds (bad) push mov subb xchg add sbb pop adc leaveq (bad) mov push shrb (bad) addr32 rex.RX adc push or test sub rorb fwait cli push pop mov pushfq adc rex.WB lret ror icebp orl jge sbb movabs js rex.WB rex.R lret adcl or pop rex.W in loop or loope lock (bad) hlt test lahf jae xorl rex.WB movabs scas rex.WRB rex.WB mov idivl cmp movsl in pop sub xchg and pushfq sbb jl inc rex.RB cmp movabs sbb pop mov rex.WR rex.RX (bad) rex.WB gs rex.WB (bad) sbb cmpsl rclb xchg rex.WX rex.WB scas leaveq push fs cwtl push fcomp xor data16 movabs xchg jl push mov scas clc xchg sub cs std pop addl pushq leaveq gs (bad) lret adc mov callq subq mov sub pop mov out or xorq lret (bad) insl movabs and rex.WRXB pop mov (bad) jo pop pop adc lods xchg mov push mov repnz rex.WB es xchg rex.WX sub data16 and in xchg movsl rex.WB mov out outsl xchg shll lock cmpsl adc push fstps fisttpl (bad) fidivl rex.WB push rex.RXB rex.R movabs loopne out cmp (bad) mov nop rex.WB rex.RX (bad) (bad) pop add fs jo rex.X movabs (bad) sbb sub (bad) (bad) clc and and in sub (bad) pop rex.RB rex.WRB (bad) fmul jne out sub wbinvd pop loope test movsb (bad) jo (bad) cmp fidivrl pop rclq lea int3 add sub xchg rex.WB (bad) enterq mov rex.WRX repnz retq mov sub out out lock cltd cs rex.WR nop icebp sub cmc or rex.R rex.R fimul rex.WB rex.WR out stos clc and (bad) jl xor adc (bad) mov add lea int andl rex.RB jnp rex.WB bnd (bad) add add enterq in mov cld imul rex.WB rex.WXB xchg rex.WRXB std cmp rex.WB add jbe and jae rex.X jns movsb out pushq xor popq xor and es rex.XB retq cmp iret xor (bad) mov sub (bad) sbb movabs mov rex.WRX rex.WRXB lock jle cmp sub xchg (bad) cwtl scas or test pop pop lock gs jle push mov notl jno sub or movslq lods add or fwait cli movabs (bad) rex.WRXB jns lock jmpq (bad) loopne icebp or mov test es (bad) adc (bad) mov movsl mov and int cmp addr32 mov or js or cld cmp (bad) idivl jno test (bad) mov xchg ror fistpl repnz rex.B xor (bad) mov jmpq movslq push in sbb movsb adc outsl pop sbb xor loop (bad) rex.WRX push jne test sub (bad) in (bad) test xchg jmpq cmp pop or scas mov nop pop data16 push mov (bad) or (bad) mov loopne in jb js mov es xor push insl mov push test and and out mov rex.WB fsubrs xor sbb in mov or (bad) rex.WB pop push mov add outsl jne fidivrl movabs fisttpl mov or rex.R mov gs movsb decl sbb and or test out or retq gs sbb test add js pop mov imul rex.XB push (bad) cmp cmc out cmp hlt pushq pop rex.WXB push in ja mov negb fwait movsb rex.RX movabs add (bad) in test test xchg shlb (bad) int3 sub fdivs jp movabs movabs xchg cmpsb jp es stc imul (bad) jmp mov pop xchg (bad) and mov rex.WB out vmread xor rex.XB repnz popfq mov and test mov cmp test insl push push (bad) xlat cltd xchg and rex.WR pop mov (bad) adc testl rex.WRX or rex.R rex.XB test hlt scas mov repnz jne rex.W xchg (bad) xchg xor push out adcl fwait leaveq adc sub push int3 (bad) add rex.WB movabs push rex.WB rex.WRX cmp out jg sub rex.XB rex mov retq sub fnstenv sub and add cmp (bad) sub data16 jg cs rex.WX mov jae icebp jbe push xor cmp mull (bad) lretq repnz push rex.WR data16 fist rex sub adc jl out rclb xchg cmp push cmp mov lods jge rex.WR rex.WRB outsl test rex.WRX rex.WR or cmp mov rex.R repnz or (bad) xlat movabs xchg push rex.WB mov mov and push lcall adc hlt (bad) jmpq rex.WB (bad) mov imul mov xor mov mov cmp xchg rex.WB lahf or movabs mov lahf jge xchg ss cmpsl movsb adc fwait addl sti pop rex.WRXB jrcxz cmp cmp incb xor mov fildll (bad) out xchg xor lock add test cmc (bad) scas mov in cmp (bad) pop push xor addr32 popfq int mov outsl rex.WB jns or andl jae gs popfq out (bad) rex.WB xchg add and adc rex.B (bad) es pop (bad) and adc in cltd xchg callq rex.WRB cmp (bad) pushfq cltd fildl (bad) and (bad) rex.WB mov pop movabs mov (bad) xchg push (bad) mov cltd loope xor sub pushq flds movabs (bad) (bad) rex.WB (bad) repz rex.RXB lock (bad) imul xor jo pop in (bad) addr32 xchg rex.WB xor mull lods mov lret movsb add rex.WXB cs fidivrl jnp fs loop mov or xor add jg cltd retq rex.X rex.RB xchg retq sub or out lret lock pop neg repz jns and mov xchg fildll add loopne xor out xchg rex.XB sub out in cmp frstor movslq int (bad) fidivr lretw rex.WX rex pop (bad) div clc jmp mov and rex.W mov and adc mov (bad) push sbb leaveq cmp add or in push xchg fistpl cmpsb cmp add rex.RX test icebp rex.XB in (bad) mov mov mov clc jno or insl sbb cmpsl rex.W or push ja push addr32 ja add sub rolb rex.W icebp mov int3 sti leaveq jge jmpq mov jo push outsl jne (bad) rex.WRXB ds sar stos add add or jae add jmpq rex.R movabs adcl xor lods loope (bad) (bad) rclb rex.W sub rex.RXB movabs mov stos adc (bad) xchg imul adc mov mov xchg add and (bad) imull sahf rex.WXB int adc rex.RX test jno imulb or or (bad) or ljmp push mov sbb mov pushq rex.WX and xor sub or sub (bad) jnp (bad) (bad) (bad) (bad) sub jle fucomi loope xchg mov or mov rex.R pop fbstp gs jb addr32 xor xchg xchg clc add add popfq xchg or (bad) mov rex.RB rex.RXB ss pop jns jne push cli enterq rex.XB fstpt add mov sub jmp (bad) rex.WB movslq shl or add mov mov (bad) (bad) pop testb xchg in rorb je lahf mov shll rex.WRB gs (bad) xor icebp scas cltd in mov outsl (bad) (bad) (bad) int3 mov leaveq jge mov loope es nop xor xchg (bad) data16 mov icebp rex.WB rex.WXB hlt cltd (bad) and jne cli (bad) mov in fiaddl (bad) cmp callq xor rex.WB rex.R cld (bad) rex.WX movabs out jle pop loopne (bad) test jmpq fistp sbb (bad) rex.WB jg int3 shrb (bad) movabs xor rex.X rex.WB rex.WRB (bad) adc addr32 push addps xchg lods mov rex.WB (bad) cmp rex.WB outsb loope je xlat mov sahf add jg (bad) std callq cld push rex.WX rex.WRXB test data16 stos xchg (bad) mov pushq xchg push in rex.RB sub jmp mov xor rex.WB pop outsb je rex.WXB sbb (bad) in rex.WB lock sbb inc rex.WB cli gs cwtl adc add jne movabs mov (bad) int test xchg rex xchg (bad) stos push pop or mov loop lea outsb jb cmp je (bad) (bad) lret outsl cmp and jp fs or (bad) xchg cmpl xor (bad) retq je sbb mov (bad) (bad) xor int3 gs clc lret push enterq mov push sahf outsl cmp xor push jb test pushq movabs add add sbb loope hlt mov xor rorb iret rex.R rex.WB fild leaveq rex.WX add mov stos je jo rex.XB push mov scas jne xor mov loopne cmp movabs (bad) lods in xlat jns xchg jb jno outsb jrcxz in shr rex.WB test jle int jnp rol adc xor sbb loopne mov (bad) hlt xor sbb int and jg pop pop ror xor mov rex.XB xchg mov insl rex.R andl cwtl ror gs test leaveq xchg xchg sub cli leaveq jrcxz movabs sub add icebp rex.WR (bad) out fcom push pushq int pop ja jp in ss lea mov cmp or (bad) pop stos iret (bad) rex.WB fcmovbe pop add (bad) cmp pop out cli rex.RXB es rex.W xchg int xor jl rex.X cltd xlat nop (bad) orl movslq pop rex.WB adc outsl rex.WX add add icebp movabs mov adc callq movabs and rex.WRB adc (bad) movabs mov andl out mov movabs rex nop push mov rcrb insb rex.B sbb sub cmc or (bad) add pop pushfq rorb push in pop jp out rex.WX test callq push sub sarl fcmove adc (bad) addr32 xor stos (bad) xlat rex.RXB fisubrl retq mov pop mov cmp movabs xor xchg out in cmp (bad) movabs (bad) mov subb sub xchg in mov addr32 mov (bad) imul (bad) in outsb rex.WR (bad) add push popfq ljmp insl retq (bad) (bad) xlat push jno idiv push or fdivs decb scas rolb push repnz rex.R (bad) and rex.WX rex.WRX (bad) decb rex.B rex.RB rex.RX or fldcw xchg pop add mov push (bad) (bad) pushq adc rex.RX lea rolb jns cmpsl mov cmp mov (bad) callq out subl pop int (bad) jnp cwtl xchg rex.WXB xchg lock jge mov xchg (bad) (bad) loopne pop push xchg insb (bad) sub rcll mov (bad) pushq add lahf shll (bad) mov rex.W fs cmp jns stos enterw sbb cwtl push jle bnd (bad) cs icebp int3 rex.W (bad) push fldenv sub div cmc (bad) (bad) rex and or pop clc pop loope rex.WB mov rex.WRXB xchg js xor outsl cltd push fistpll imul adc add lret push rex.WB sti (bad) sbb negb retq dec cs gs jge mov std (bad) mov push rex.WB fwait xchg (bad) pushfq rex.WR int3 xchg cmp rolb (bad) rex.WXB mov sahf lret xchg and lahf out rex.WB or pop xchg pushq shrl fsubrs lahf rex.WRX jno pshufw sub stos and retq shrl xchg (bad) movabs sub add sbbq (bad) std loope cmp pop (bad) xchg sub lret (bad) cmp (bad) mov rex.RB or cwtl (bad) popfq rex.XB push push xchg imul retq mov rex.RXB adc pop xlat adc mov shlb lea rex.RXB js rex.RXB fwait cmp xor adc xchg rex.WR sub jg or retq sbb data16 rex.B mov mov mov out js (bad) cld loop rex.WX sub loopne adc lods pop sbb clc mov xchg rex.R es pop shll iret (bad) or adc icebp jb addr32 rcl (bad) adc pushq mov addr32 rex.B hlt xor cmp rex.WRB jno push adc cld or repz test fs or (bad) cmpsl mov in xchg stos sub add push (bad) nop jae mov cmp (bad) cltd sarl (bad) xor mov or xchg retq mov negl xchg lods hlt pop pop (bad) xchg rex.RX rex.RX cmpsb callq enterq add ja pushq fs or testl xchg or (bad) sub jge imul loopne rorl xchg sbb out mov scas jmp frstor adc jne push bnd sbb cwtl push mov (bad) rex.WXB mov xchg sahf pop rex.W callq stc cmpsb movabs cmp (bad) xor mov sahf sbb sti pushq movabs sbb (bad) and rex.WB movabs rex.WB or sub rex.WB sbb sbb enterq push sub and (bad) (bad) (bad) (bad) ja rorl and xchg xchg (bad) xchg test ss jnp (bad) (bad) rex.WB lahf xchg mov rex.WB (bad) sub add and movsb rex.WX add fmulp rcrl mov (bad) (bad) mov jno test push js (bad) adc rex.WB (bad) pop fcoms enterq jge (bad) jb add jrcxz shll pop movslq lahf push rex.XB pop xchg xor pop shrb rex.R rex.WB (bad) sti xor cmp pop xor (bad) and je xchg adc adc push movabs rex.WR (bad) sub xchg rex.W or adc test sahf adc pop (bad) mov or lods in cmc xor or std and je or sbb push cmp push lods sub (bad) push sub scas push xor pop (bad) ficoml jno mov or movslq stos sub xor lea pushq sub rex.WR (bad) mov fucomp je scas divl (bad) cltd cmp std lret jmpq fcoms jae retq xchg adc xor (bad) adc sbb mov movslq fwait outsl lods mov test xchg and and xchg sub add pushfq rex.RX sub pop (bad) or clc insb cmp jb and and addr32 and add insl (bad) stos and adc cwtl addr32 xchg push movsl sub mov jns movslq rclb pop mov or scas pop enterq shl movslq adc (bad) cmp orl push scas rex.RX rex.XB xchg mov js mov rex.RX (bad) sbb movsl rex.WRX (bad) pop cmp sub adc cmp adc mov loopne rex.W imul sbb or cmc fwait pop push (bad) mov sbb mov or (bad) js sti push cmpsl fistpll rex.WRB pop push sbb in (bad) (bad) (bad) adc (bad) rex.WXB xor ja popfq add mov outsb pushfq (bad) mov in test hlt sub adc adc movabs scas lahf (bad) int3 rex.XB (bad) push vshufps cmp rex.WR stos fucomip xchg xlat jmp rex.X movslq or rex.WRX lahf cmpsb push insl addr32 rex.WR fwait sbb cmp clc push nop lock (bad) sbb mov xchg pop fcmovnb movabs adc pop cmc (bad) enterq xchg (bad) movabs and movl mov ds sbb sub mov pop jns (bad) xor push rex.RX (bad) (bad) test in (bad) retq and (bad) jbe mov stos rcl (bad) scas (bad) mov jno jmpq cmp jo imul mov pop xchg sub int3 pop rex.WR bnd movsl leaveq sbb xlat mov (bad) movabs (bad) sub shrl xchg adc push (bad) decb jne lock popfq rex.RX sbb mov (bad) or rex rex.WXB mov cs cltd movsb (bad) rex.WR (bad) (bad) (bad) mov rex.X sbb out movabs lret mov scas cmp add xchg add rclb cmpsb rex.WR jmpq test jns fcoml xchg clc cwtl rex.WRXB pop (bad) xchg fldcw out push push push out (bad) xor push jg rex.X mov pop or rex.WX rex.WRXB (bad) mull jge mov fmull jp loope in orb rex.WXB rex.R rex.X or (bad) mov (bad) mov js mov test in mov cwtl mov pop rex.WRX xor xchg orl xchg in rex.WB nop mov je rex.WB xchg fsubr sub pop rex.WB add pushq rex.WB pop movslq movabs pop add jle cmp sbb rex.WX (bad) sub cs movabs sub iret rex.WB rex.WRB sub mov cmp cmp push sbb pop (bad) (bad) or xchg push xor xor js (bad) mov leaveq mov es callq popfq rex.WXB rex.WX je loop cmc enterq cs icebp rex.WR fisubr mov sbb mov (bad) rex.WB mov jrcxz rex.WB mov pop movabs rcll mov lock xor fbld jg adc rex.WB mov or add add movabs cltd sbb sarb test xor sbb or push mov mov stc movsl (bad) out or (bad) repnz lock cmp add pop mov and nop mov add fisubr xor (bad) insl pop in stos movsl movabs pop cwtl xor (bad) in cwtl rex.WB sbb movabs cmpsb cmp mov pop scas sub rex.B imul rex.WX rex rex.RX rex.WB repz (bad) int3 ja rclb stc retq xchg enterq icebp mov (bad) leaveq jrcxz (bad) jns rex.WXB jnp (bad) pop jrcxz mov sahf inc xor retq cmpsb pop loopne lahf stos pop test es addr32 fnop sub rex.WRX cmp test rex.WR mov sbbl iret scas rex.RB rex.R mov fwait sub notl (bad) js rex.XB sub (bad) mov push loopne fdivs rex.WRX lock lahf and jbe pushfq out fmull (bad) rex.WRB push sbb xchg lea rex.R sbb mov adc add pop stc stos adc jo pop sub or jno out out xorb lret std rex.XB jne xchg fisubrl in sub movabs out (bad) rex.XB rex.RXB stos loope jne mov repz lea out (bad) (bad) jns xchg cmp enterq mov xchg jae or or sub rorb (bad) movabs (bad) (bad) (bad) out add rex.RXB xchg test addr32 xor mov pop mov pop rex.R rex.RXB mov rex.RXB out rex.RX add jnp sbb cltd add pop rex.WB test sub movabs callq pushq push (bad) and cmp add push rorb pop (bad) (bad) pushq sbb stc xchg xor ss andl fsts push mov xchg lret jmpq pop (bad) mov mov sbb rex.WB repz mov xchg scas in xor notl rex.WB cmpsb (bad) out rex.WB (bad) movsl faddp jns mov (bad) outsl jg rorb jp mov imul rex.WB pop (bad) xchg callq in rex.WB retq clc mov rex.RX sbb iret jne mov (bad) xor cmp lods fldl (bad) lods and retq sub (bad) (bad) fsts xor cmp movabs lock jg jno loope sub sti push mov cmp movslq (bad) (bad) mov fnstenv xor rex.WRXB mov out scas stc add mov or movabs (bad) pop or add movsl mov cmp jp scas sub (bad) pop pushfq lret retq sub in pop cmp icebp stos outsl hlt out pop movabs or (bad) mov jle cmp xor (bad) and movslq test cli ja fcmovnbe xor movabs int3 rex.WB jb (bad) jns insl rex.WB fwait mov (bad) sbb jrcxz (bad) jl and mov insb rex.B cmp loopne rex.WB push jge push rex.RXB movabs (bad) rolb callq jae rex.X (bad) (bad) mov cld test cli (bad) fwait sarb stc rex.WB rex.R popfw movabs cmp addl lods mov and xchg rex.WR cli push loope mov xor repnz xchg movsl pop sti and rex.R rex.WB jno jns pushq negl (bad) xchg clc js jmpq jne or (bad) (bad) lret rex.WB lock repz add pop hlt repnz (bad) pop fwait xchg stos push rex.W xchg (bad) loopne test lods cmc lret jg int3 mov push push fstl (bad) sbb pop xchg sahf mov rex.RB mov imul rex.WXB out rex.X sub pop loopne adc sbbl lea push adc test je or scas movsl push mov xchg loope and fisttp sbb shrb stos clc (bad) add int or fsubl (bad) sub jle (bad) mov test (bad) jg cmc js mov xor loop fadds rex.WB (bad) mov imul adc insl test rex.WRXB movsl pop xor rcrl jrcxz bsr callq sbb rex.WRXB xchg sbbq sahf mov jge adc loopne jno imul jp cmc adc rex.WRB rex.RB mov xor xchg testb jrcxz test jbe (bad) fimul jle lahf int3 mov pop rex.XB sbb sub test rex.WB rex.RX mov test (bad) (bad) mov sbb mov xchg out xor lar and movabs in jns js xor sub mov rex.RB (bad) (bad) fsubrs shll movabs nop rex.X rex.RXB adc cwtl rex.WRXB out callq andl bnd push movsl cmp jae stos sbb (bad) movabs stos repz hlt (bad) lock shrb push scas movabs jle jno mov mov movslq lods outsb frstor orb pop rex.RX (bad) and rorb jbe enterq sub mov and cld xchg cli (bad) andl mov rex.WB jge xor and xchg push mov jle xor sbb retq rex.WRB lods rex.WB mov out xor cmpsb nop ror scas js or rex.RB (bad) xchg rex.XB movabs xor lret and pushq negl popfq rex.WR and pop rex.WRB xchg iret xor in jo (bad) rorb imul (bad) mov adc xchg test xchg mov lods orl jnp roll rex.B rex.WB jge decb mov movabs xchg mov cmp pop fwait pop and pushq add and sub jp stc loop jno (bad) (bad) xor pop or (bad) rex.WB jmpq xchg xchg rex.WR jo cwtl xchg fs adc out rex.WB stc sbb (bad) fwait sbb add jg callq push cmp rex.WB adc mov pop xor jo (bad) add mov stos insb jl int movslq mov and hlt cli xor test rorl rex.X rex.RB cmp stos cmp mov cltd fcmovnbe adc sub addr32 scas rex.WB xor rcrl movabs lret callq rex.WB mov out (bad) (bad) stos xor movabs sub jp rex.XB mov repz (bad) jg jmpq jae rex.B sbb pushq imul test mov pmovmskb xor loopne (bad) sub push fimul pop loope sub mov (bad) rex.WXB xchg jae in rex.WXB fnop repz rex.RB mov ficom cmpsb (bad) sub add push sub pop xor cmp ficompl pushq hlt rex.WRXB adc outsb je jl rex.WB rex.W xchg es push rex.WR rex.WB cmp jp jns (bad) sarl jrcxz and mov imul xchg mov (bad) fimull mov cmp out movabs pop push rex.WB scas shll pop jns mov movabs cmpsb mov cld xor pop jnp fistpl callq outsb movabs notb jmp test pop jp push cmp xchg mov rex.WB movabs add adc mov pop rex.WXB cwtl and rorl mov jp jg and (bad) pop nop retq cmp jmp pop sbb ficom enterq adc push sub jmpq ror js scas lock cmp jae xor iret mov (bad) insb rcrl jnp int rex.WB loope rex (bad) xor xchg jle rex.WB out push sbb incl lahf (bad) rex.RXB push retq mov rex.XB popfq rex.WB leaveq and movabs xchg test pushfq (bad) loopne test rex.WRB rex.WRB sub fs push (bad) je movslq push mov addr32 pop or (bad) ja pop je pop rex.WXB mov jp and out repnz stc movabs stc or repz jno jo rex.WB jrcxz rex.WRXB (bad) cmp xor or pushq rex.WXB pushq xor pop xor fcomps jge imul push rex (bad) sahf (bad) retq sub add sbb xchg rex.RB mov jmp and rex.WR out imul jno (bad) fld adc ficompl push (bad) fildl movabs subl jae addb rex.W xchg in xor jp lods cmp sub (bad) mov rex.WB es insb outsl mov pop (bad) movabs mov or fs pop test jp or rex.WB mov xchg rex.WX movabs jrcxz (bad) leaveq rex mov in rex.W fld xchg rex.WB or add pop (bad) rex.RX rex.B (bad) loopne push add movsl in (bad) mov (bad) cmp cmc mov (bad) sub (bad) movabs mov mov addr32 rex.B or movsb mov jle add test rex.WRX pushq xchg sub rex.XB rex.RB std jl (bad) rex.WB js in jne (bad) rex.WX test rorb mov fistl (bad) push gs (bad) rcrb frstor je and or jmpq sub push sub (bad) rex.WB out mov test mov push scas mov jmpq rex.WRXB addl pop and push rorl mov or push (bad) adc sahf scas cli or push (bad) (bad) sbb pop setne fwait (bad) rex.RXB (bad) push rex.WB mov movsl rex.WRXB rex.WR xchg out sub int rex.WB notl mov (bad) jns pushq jrcxz and (bad) (bad) xor imul or rex.WB and (bad) add scas (bad) mov pop mov lock mov push (bad) add and retq cmp pop pop mov adcl mov movabs icebp (bad) rex.XB rex (bad) (bad) rex.WB (bad) (bad) clc lods (bad) and xor cmp mov (bad) sub mov push xchg add xchg out mov jmp in rclb cmp mov (bad) test rex.WB mov cltd rex.RX sarl mov pop cmp xchg (bad) fist (bad) rex.WX sub push leaveq stc cmpsb (bad) mov pop sub rex.WR or imul push decl rex or or fnsave push cmp (bad) int3 fcompl pop lahf imull (bad) or add add add push (bad) (bad) fdivrl mov push sub push pop scas rex.WB xchg callq rex.WRX nop cmp fbld movabs cmp pushq (bad) sub sbb (bad) mov loopne rex.RB pushq std ss rex.WRB rex.WRX add shrb sub leaveq (bad) pop jle (bad) mov sbb mov rex.WB rorl pushq mov rex.WB jrcxz xchg (bad) add jno movabs mov and (bad) scas mov test rcr adc add sbb and (bad) cmpsl out fmull mov and mov mov enterq rex.WR push xchg and sbb push xlat push mov fisub rex.WB xor sub scas and rex.WB xor pop mov jg xchg clc and mov sbb xchg mov cmp (bad) rex.WB test rex.R (bad) mov lock mov rex.WR repz rex.WRB (bad) roll xchg mull sbb callq pop out rex.WB sub rcrl mov movabs fidivr fcoms rex.B mov loope (bad) sub mov jp addr32 sbb test (bad) ds (bad) rex.WB in (bad) sbb lea movsl mov imul out cmp insl mov mov jg orl (bad) mov mov clc negb cltd (bad) movabs jmp (bad) sti outsl (bad) hlt xchg push (bad) (bad) std xchg cmp jo (bad) in loopne loop jp xchg adc ja insl add enterq (bad) mov mov xor adc sbb (bad) clc sbbb movslq or mov jbe fisttp mov (bad) (bad) rex.RB xchg imul rex.RXB rex.WB xor in adc cmpl xor pop movslq and rex.WXB lret ja jne lods movabs jp pop and callq push xchg addr32 (bad) push sub xchg lahf (bad) hlt jno xchg and rex.WX rex.WB add jmpq push (bad) gs repnz sahf movsl hlt sub sub callq add hlt fisubr push or mov movabs rex.WRX fs rex.WB rex.WR sbb add mov rex.XB pushq push jmp mov sub sti movsb cltd add rex.B movabs (bad) fstps incb test lret (bad) cld in mov jmp movsl lahf rex.XB and rex.WB jrcxz xor (bad) (bad) or (bad) pop pop loop sbb (bad) sbb rex (bad) rex.WB adc rex.R insl rex.WB fcoml ds sub xor sbb fwait pop mov jmp pop mov mov sbb idivl or test (bad) push pop movabs and push rex.WB rex.WRX and push mov xrelease out test int3 imul out and rex.WB fwait xchg pushq pop sub add cmc in (bad) adc js in cmp xchg stos sbb jp or xchg (bad) and cs sbb movb sti mov movabs loope cmp out (bad) mov icebp sub or push (bad) (bad) xchg (bad) jo rex.WB test (bad) or imull push mov jg rex.RB rex.WRB test adcq sub in (bad) fs loopne sbb add ja movsl loop repnz add push or rcrb cwtl rclb je (bad) popfq sbb lea std lret mov or add test rex.WB movabs cltd sub mov mov and (bad) (bad) mov (bad) test pushq movabs cmc insl cmp sbb nop add pushq icebp rex.RXB out or (bad) sbb push adc sbb movslq (bad) mov sub adc (bad) adc push add rex.WB add or (bad) pop movabs out test insb (bad) and adc mov stos rex.WB jb gs int lods addr32 test callq mov or loopne cltd rex.WB cmp xchg imul mov rex.WB xor loope (bad) pop movsb jmpq (bad) int stos (bad) pop movb cmpsb cmp fisub xor icebp rex.WB jp mov jrcxz pushq mov movsb test cs sub fs (bad) adc push pushq (bad) movslq cmpsl sti mov sub adc movabs or imull xor cmp in xchg (bad) stc pushq movabs (bad) rex.WB add cmp rex.W adc pop fsubrs rex.WR xor es jmp xor movsb add sub sahf sub adc jle sti xor pop rex.RXB cmpsb and enterq outsl sub stos lret and adcl (bad) je add test sahf adc (bad) sbb jge (bad) shlb rex.W push xor (bad) fisttp (bad) scas popfq (bad) negb pushq mov jle xor sbb movslq (bad) adc out or sbb mov (bad) in (bad) test adc div nop mov pop pop rex.W mov xchg outsl adc or fucomip mov cltd std rex.RX outsb insb (bad) rcrl (bad) movsb lret callq nop rex.B cmp mov (bad) rex.WRB fwait jno (bad) rex.WR (bad) sbb out mov pop jg sbb cmp std mov (bad) jae and mov (bad) (bad) icebp pushw (bad) push repz (bad) sahf nop addr32 xlat push fisub movabs pushfq and rex.WX stos lahf xchg and cmp sub int3 addb callq (bad) pushfq xchg mov imul pop (bad) push shl in loop push addr32 rex.WX andl cmp add callq cwtl callq jmpq and adc lock cwtl push mov push adc mov (bad) adc mov or mov (bad) es mov movabs xchg xchg pop xchg xor mov jl imul (bad) jo cmpsb jge jns test jo hlt rex.WX rex.RB (bad) fidiv pop mov sbb test jb popfq jbe (bad) mov rex.WRX jns sbb mov pop cmp loope cmpb xor repnz cmp callq (bad) addr32 mov jg in (bad) mov rex.WRXB test pushq mov sbb adc lea rex.X fmulp rex.WRB jo cmp movabs lods (bad) pop mov enterq or movslq rex.B sub loopne cmc (bad) movslq mov nop shlb pushq cltd test lock pop push pop clc push jne mov or fs enterq out test bt cmp fs jbe adcl rex.B ss pushq nop enterq and rex.WRB cmpsl jno jl (bad) pop cmp push sbb insb add mov (bad) cmpsl sub mov or in mov test sbb adc jb adc addr32 jrcxz callq xor mov sahf adc (bad) jnp adc push push and add (bad) sbb andl fildl vmovaps rex.RB rex.RXB rex.WRB fucom movsb (bad) pop pop retq roll test xor pop or cmp cmp js jmpq (bad) test or in xor popfq movabs sbb add scas (bad) sub sub mov rex.WRX pushq jae (bad) pop movsb jbe insl repz mov sbb rex.WXB push adc mov movabs adc retq stos xchg sbb rex.RXB xor rex.XB lods jo mov xchg (bad) xchg jns pop or (bad) push and mov sub pop scas (bad) (bad) insb callq loopne (bad) cs xor (bad) jmp mov push jb rex.X xlat mov rcrq rol mov pop sub rex.WB repnz (bad) xchg mov addr32 jl pop or push mov pop rex.WB mov rex.XB (bad) sub add test lea outsb loopne mov add rex.WXB pop cltd rex.WB add (bad) clc rex.WB adc popfq sub cmpsb loope or icebp hlt sysret rex.WB fstps (bad) sbb jmpq sub xchg pop mov rcll test rex.WB adc xchg lods mov rex.WB jle mov add (bad) (bad) test (bad) or rex.WB cli outsl add and pushfq lock test xchg cmp jns (bad) push push rex.WB (bad) pop cwtl add or mov sub push mov rex.WB and sbb pop movabs xchg (bad) (bad) stos callq mov in mov rex.WB sbb adc movabs sbb jmpq cmpsb sub or mov mov stc cmp adc lret repnz movabs pop mov jne jae movabs outsl rex.WXB movabs or sub imul rex.WB sbb sarb cpuid add ss rex.X leaveq lods xor fsubr rex.WB (bad) testb cmp xchg imul sub push adc rex.B rex.WX xchg ss jb callq jmp add callq fdiv sub rex.WRX movsl push rex.RXB rex.WRXB lea and js lahf (bad) xchg rex.WRX rex.WB in test rol rex.WB enterq (bad) xor repz negl and addl or int3 rex.WR rex.WB mov je push xchg lret cltd (bad) rex.WB and (bad) sbb (bad) adc cli sbb add rcr fldcw rex.WB rex.WRXB (bad) (bad) jbe mov push or sti cmpsl cmp scas (bad) mov mov adc jae iret mov (bad) rex.WRXB negl clc rex.W rcrq test cmp (bad) int test xor add cmpl int xor rex.RX mov rex.WR fs pushq sub ds and jbe jne pop fs out pop sub sub push jmpq add repnz and test rorl enterq (bad) (bad) mov pop pop rex.WB lods in sub cmp pop lret psrlw (bad) rex.RB pop mov addr32 addr32 retq bnd or mov fmull repz (bad) xchg test xor mov movabs mov movslq rex.WB fildl sub (bad) sub (bad) mov cmp or mov rex.WR jmp xchg add rex.WB je movabs lock ja mov mov push (bad) xchg pop or lahf sub cmp xchg int3 imul mov loope (bad) rex.RX and rex.WB mov cmpsb fadds mov dec (bad) xlat test sahf jmp (bad) (bad) or subl xor sbb cmp or enterq xchg cltd push mov loopne sbb rex.WX loop movb adc jae mov lahf movsl sbb jne rex.WB (bad) sbb (bad) (bad) cli pop jp rex.WB insl xor xlat jbe rex.WB add push mov rex.WB add stos lods mov rex.WB outsb shlb (bad) int3 rex.WB nop adc mov iret jrcxz test outsb rex.WB retq add (bad) push callq test (bad) pop cmp rclb adc rex.WXB rex.WB mov jne add push rex.XB and mov (bad) cld rex.B mov fidivrl loop test sub or decl mov movslq xchg lock pushq (bad) add rex.WRX cltd xor ss adc sub jle clc outsb lods xor and rex.WB fs (bad) movslq mov jb shrb (bad) cmc ljmp rex.WX (bad) fcomi or add push pop enterq callq and xor or rex.WR rex.WB jg sti and adc and movsb out hlt xor leaveq in adc sbb xchg (bad) (bad) test mov callq rex.WRXB out sbb rex.WB xchg fwait xchg jge jg rex.WR sahf add stc insb rex.XB enterq (bad) outsl pushfq jae movsl sub shll (bad) out sub loop rcl cs rex.WRXB rex.WB fwait sahf dec and scas rex.W push in or outsb pop rex int3 movslq mov (bad) push cmp rex.WB out adc (bad) jg jrcxz outsb (bad) xor rex.WB (bad) rex.XB pop sub pushq push scas mov mov rex.RB out jge pushfq or test mov pushq rex.WB ffreep (bad) lock xchg or gs lret sub insb mov sbb rex.WB lahf (bad) or rex.WB adc loop rex.WB mov adc push bnd scas movslq mov jno (bad) jg es movl lods sbb xchg fs sbb icebp (bad) xchg or cmpsl xchg rex.XB stos pop int rorb int3 sub fistp sbb leaveq (bad) rex.WR xor jrcxz sub out sub push add push (bad) cmp mov clc xor mov jrcxz orl movabs sbb (bad) lcall pop adc cmp or movabs (bad) mul movabs (bad) test rex.WR and lock loop outsb sub sub pushq hlt jnp out fcoms cmp mov addr32 insl fwait cld jbe mov add xlat (bad) (bad) cmc cmpsb iret cmp pushq mov pop or xchg xchg fimul jo notb mov pop nop fsubr xchg xchg sbb std in add enterq (bad) lret pushq push cmc clc lods clc enterq cmp mov mov insl movsb xlat mov ror sub scas sub stos rex.R cmp (bad) (bad) lock or xchg rex.WB (bad) jno (bad) out in pop pushfq sub (bad) fiadd rclb pop sbb rex.WB stos rex (bad) in rex.RX rex.WB add xchg lea cli rex.WB out or pushq jrcxz repnz jp sub or rex.WB sbb andq cmp lock in ss xor pop rex.RXB lods mov movabs push xchg clc (bad) rex.WRX test mov test mov (bad) js rex.RX movabs fimull mov addl pop or cmp sbb (bad) push loope or or or jrcxz sti sbb mov callq stos shll fadds adc sbb rex.WRXB rex.WB movabs pop cmp pop test retw decb (bad) movslq leaveq (bad) test and jle je sub std jl xor rex.RXB xchg sbb mov and xor in (bad) cmp sub (bad) sub (bad) adc cmp mov stos scas (bad) jne sbb (bad) add fcoms xchg (bad) (bad) rex.RX xor mov retq cmpsl rex.WRB movabs xor mov bnd (bad) mov or (bad) sbb movabs lret mov push movabs or push xor add scas (bad) movabs movsb and rex.WRB xchg rex.X xor mov xor outsl adc rex.W in cltd mov in add jg or mov lea rex.WRB rex.WB mov loope leaveq in gs adc fisttpl out and test push cwtl (bad) rex.WB test sbb loopne pushq iret cld retq cmp and xchg outsl sbb loop sub mul xor cmc mov jge (bad) test movsb or (bad) mov iret (bad) pushq push mov add mov (bad) leaveq xor repnz adc mov callq addl fistp testb test pop (bad) test (bad) out data16 repz mov rex.WB jbe in sub movabs loope rex.RX clc and pop push (bad) push outsb test jbe add xchg in imul rex.WB out andb rex.WB cwtl insb pop cmpsl out rex.RB rex.WB jne or sub leaveq outsl callq push (bad) pop cmpsl test sbb xchg rex.RXB in (bad) pop movsb nop ds retq lods (bad) cwtl icebp pop jb jns rex.WB jp and xor (bad) rex.WB rex.RX adc movabs out (bad) rex.WB add mov lahf int fisub cmovge mov iret pop mov divb mov rex.WB push xor pushq rex.WB cltd cmp add stos mov (bad) pushfq (bad) xor rex.WB (bad) mov lea jne callq fwait pushq and mov ficom mov in (bad) in cmp rex.WB std adc jae repnz gs pop (bad) push fsubs jmp pop loop rex.RXB fisttpl rex.XB (bad) mov rex.WXB test xorl in push sar sahf xchg callq int3 mov outsb rex.WRB leaveq push pushq pcmpeqw xchg std rex.WRB retq xor fnstsw xchg pushfq cli rex.WR rex.WB test or movsl stc (bad) rex.WRXB xchg (bad) sub lret jno pop lods rex.XB xchg rex.WB and xor rex.WB xchg addr32 jp iret es stc push test (bad) jns rex.WB xchg jb cmpsl jns stos mov rex.W fstps int3 in scas cltd shrl test in rex.WR xchg divl rol jnp pop mov stc insb int retq addr32 movabs test leaveq jmpq cmpsl jrcxz fidivr cmpsl jbe mov pop mov test rex.WR xlat test (bad) (bad) std mov pushfq (bad) loopne sub out xchg add pop fdivs sub ds pop cmpsl and xor stos or rolb rex.WB rex.X and sub (bad) rex.W rex.WB repz mov pmullw and pushq mov sub or or pop add cmp insb xlat test (bad) pop or pop (bad) fmuls int3 add jo mov (bad) pop rex.X out popfq jmpq rex.WB movabs gs sub adc mov (bad) addl roll sar callq jp rex.WRX (bad) (bad) rex.WB mov (bad) jae lods stc mov test fidivl adc lea retq sub imul rex.X imul (bad) (bad) adc jg push mov scas push rex.WRXB (bad) callq jmpq add fimul jne or lods sti xchg add divl rex.RB movslq jge mov or (bad) sbb rex.RX fistpl jbe xor xlat sbb mov imul inc adc cmp rex.WX push jnp pushfq mov js cwtl imul movabs sub pop (bad) lahf loopne pop jae sub adc cmp sub outsl (bad) pop lods pop xchg mov (bad) enterq sahf cltd (bad) add rex.XB in (bad) pop test mov xor sbb add xor in rex.WR (bad) push pushq jmpq fsubl outsb pop (bad) push or stos lods or and rex.WX mov push mov outsb and jo cld divb rex.WB incl movsl xorl add out (bad) xchg (bad) movsb mov mov xor pop repz (bad) rex.WB shr sub shll (bad) (bad) push sbb fsubs jne xchg mov (bad) insb cmp rex.WB sahf testl movsl rex.WB scas out jo imul outsl (bad) movabs movabs or rex.B cmp test rorb sahf fdivr loope (bad) push test push insl rex.WB and (bad) int3 mov movabs jnp xor (bad) pop and rex fildl (bad) insl callq mov jno mov movabs (bad) nop lods rex.WRB mov (bad) jb movabs sub iret xor or jnp hlt rex.WRB adc pop (bad) (bad) out cmp sub rex.RX rex.WB cmpsb add callq scas cltd rex.WB and lea orl and push (bad) sbb movabs stos sbb sbb sbbl imul scas xor hlt loope add (bad) rorb or or sub ss pop cltd fimul mov xchg cmp sbb movabs pushfq sbb xchg jne push rex.WB iret repz or rex.RX (bad) test cmp (bad) jnp and xchg test (bad) jne callq (bad) xchg rex.R rex.WB push callq (bad) rex.R xchg ss retq (bad) movsb xchg adc (bad) in movabs rex.RXB rex.WB rex.WRX enterq adc outsb fdivrp (bad) cmp callq rex.XB and rorb pushq add lods lret xchg rex.WR out addr32 pop iret xor iret and adc add test xchg testb std cmp (bad) (bad) xchg push shrl pop movabs ror (bad) (bad) sti fldl rex.WB jae lock xor (bad) jbe jmpq sub mov mov rcrb push mov cltd rex.WB cmp jbe pop (bad) test movabs shrb insb rex.WRB fwait (bad) cmp sub sbb (bad) rex.WX sbb retq subl leaveq movsl xor ffree and out cmpsl adc or repnz lret pop out and mov rex.XB mov xor int jge xchg (bad) mov xchg jnp adc rex.WB (bad) loopne mov in (bad) and rex.WB cmp (bad) jae rex.WB rex.WRXB push mov rex.WB (bad) fistp cs imul or lret cld rex.WB rex.WB lea loopne (bad) in (bad) retq shl mov test enterq mov jp xor cmp mov mov pop adc jns mov ja jle rex.WB xor repnz jae rex.WB (bad) mov fiadd fmull outsb test leaveq (bad) mov addr32 xchg sub iret out push rex.WR rex.WB and test movslq pushq or out (bad) add jl lret test idivl test (bad) mov rex.RX mov rex.X rex.WR (bad) movslq push rex.X rex.WRXB shlb jo,pn jnp (bad) rex.WRB or pop stos rex.WRB pop xor (bad) push rol cmp out mov jg sub test nop and sti iret cmp out fistl int3 loop mov (bad) cmp mov rex.XB lret adc (bad) xor out push (bad) rex.WRX shrl (bad) imul sub cmp (bad) test jno xchg and movabs movsb (bad) jge xchg popfq ss mov rolb (bad) imul rex.W rex.XB xchg fs or addr32 jge push pop sub xchg jmpq (bad) rcr jge fdivp out rex.RB movabs pushq push test jg sub xor or out fxch pop cmp test fwait or and cld (bad) or (bad) mov cmc pop jge sbb (bad) pop cmp add rex.B rex.WR and rex.RB push sbb mov xchg cmc iret and xor jnp div cmp add pop fs sub jbe (bad) mov cld loope callq hlt mov test and jns cli adc push scas in rex.WRX sti rex.R negl xchg pop push retq sbb addb cltd addr32 fildl fsub mov callq xchg movabs rorb sub movabs gs (bad) lods je in outsl jae int (bad) rex.WB out cld rex.RXB addr32 (bad) rex.WB and jrcxz stos fwait loop (bad) imul (bad) sbb xlat (bad) out (bad) jl sub pop jno (bad) add movsb repnz jb data16 fxch rex.WB leaveq cmc out in (bad) in rex.WR scas int pushfq repz lahf mov rex.WRB (bad) lock rex.WB and mov adc push rex.WXB rex.WB mov nop rex.XB movabs or imul push test mov test pop push mov sub je pop icebp jrcxz (bad) mov insl sub leaveq test sub leaveq callq cli rex.WR cmpsl imul pop sub movabs (bad) lock xchg (bad) sub and lods (bad) jb mov (bad) push adc jo (bad) jns add popfq xchg sub pop (bad) fild fsubr sub lods add mov mov xchg mov insl or fisttp movabs nop leaveq retq es (bad) iret popfq sub mov int leaveq sub sbb in movslq insl enterq fsubrs mov loopne add clc and pop rex.RB outsl rex.XB rex.WXB mulb sbb (bad) ja popfq xchg sti push (bad) rex.RX repnz add pushq mov mov jo sub in sub mov lock std imul (bad) mov enterq popfq mov xchg int3 rex.B test retq (bad) xor fsub pop pop loopne rex.WR (bad) movabs stos jbe (bad) retq and pop out test jae mov movabs movslq sub movabs rex.WX jge insb test (bad) sub or mov adc cmp es jb pop (bad) movups or ss sbb addl cmc (bad) fdivl enterq jge jbe cmp test xchg iret pushq or push pushq push test fsubs jns imul (bad) pop or xlat lods stc pop orl pop mull shrl fmull add sbb loopne imull xor mov jge lahf rex.R (bad) rex.W fiadd (bad) lahf mov (bad) outsb movslq mov jno cmpsb jae (bad) scas xor (bad) rex.RXB (bad) insl (bad) lahf xchg fmull mov rex.WRXB mov mov je rcr (bad) fnsave (bad) cmp (bad) rex.RB test pop out sbb xlat outsl push rorl rex.RXB shlb mov rex.WRX fcmovne pop rex.WRX xchg rex.WB jns notl test jge and rex.W addr32 xor and retq fs xchg (bad) sub fucom xchg sub lods mov jo xor rex.WRB rex.WB fstps rex.WXB rex.X decb rcl test js cmpl xchg sar xlat mov cmpsl pop iret fidivr adc movabs pop pushfq mov add stos xchg imul fisttpll icebp (bad) in rex.R mov push (bad) jnp fstl rex and rex.WB movsl sub pushq (bad) out movabs and mov adc cmpsl add xchg mov data16 retq jmpq (bad) es fsubs punpcklbw cwtl cld rcr (bad) rex.WR sub xorb rex.RXB rex.W (bad) retq push pop iret jne sub (bad) test fcom leaveq roll (bad) xchg mov stos sbb pushq cmc out stc (bad) pushq push pop jo sti pop sub movabs (bad) out push xor (bad) lahf (bad) mov int3 push xlat rex.WB icebp out hlt cmp add cli pop mov ss movabs (bad) xchg sub cmp (bad) xor rex.WB repnz test pop jrcxz or xchg imul retq pop in pushq mov cs mov rex.WRX and sub movl rex.WRX fstl xor in cwtl stc fsts jle mov test add jno and push push sub jl stos fisttpll ja jne in stos push pop push hlt jrcxz rex.WB or fcmovnu (bad) jbe adc xchg mov fsubrl leaveq lret xchg xchg lret sub insl sub mov sub sub mov push movsl mov cmp mov movsl rex.XB rex.X mov and gs mov out sti test sbb out push test insb add (bad) adc or cmp (bad) lea int3 adc pushfq in pushq jns cmp xor mov or mov enterq xor (bad) rex.WXB mov mov or adc sub pushq popfq sti pop scas push mov (bad) sub movabs adc out cmp icebp cmp rex.WB adc lods imul pop outsb or movsb hlt xchg xor test movabs in icebp mov rex.WB js sbb pushfq movabs vmovaps jle sub ds addr32 clc (bad) sbb movabs loopne rex.WR cmp xor pop (bad) push rex.WXB rex.RB movabs pop (bad) or lret cli pushq rex.WB xorl movabs rex rex.R rex.WB int3 cmc xchg fmuls rex.W movsl rcll rex.R add imul mov sbb (bad) lock imul in movslq jns (bad) or xchg pushq sub rex.WB out mov frstor rex.WB movabs andl push rex.R rex.XB stos and mov shlb push cmp rex.XB and ja cmp (bad) fsubs lods rex.WB jns jno xchg jb rex.WB leaveq fcompl callq rex.WRXB push or rex.WB mov movabs xchg test jae (bad) ffree repz xor es rex.WB data16 stos sbb out fildl movsl xor rex.WB rex test (bad) pushfq in mov mul and (bad) fldl repz mov std jle addr32 sbb cwtl sub sahf add insb iret rex.WRX adc rex.WB lock rex.RB pop or and jmpq mov rex.WR jno cmpsb add hlt rex.WB mov loope xor rex.WB repnz imul xchg pop xchg cmp pop mov rex.WXB cmp rex.B (bad) retq int3 (bad) xor outsb lock loope xchg out mov pop sahf pushq repz mov jmpq xchg cli mov (bad) pushq loop jb jnp stos push (bad) movabs xchg xlat loopne (bad) scas movsl mov adc cmpsl pop rex.B stos callq (bad) rex.WB push je (bad) rex.XB sbb jmp rcll clc js (bad) jo (bad) test jno iret adc mov or rex.WB (bad) mov lods rex.WB in div lea callq (bad) cmp jne gs sub push fsubrs rex.WB (bad) test (bad) rex.WRXB add (bad) adc sbb cmp push and pushq adc xorl rex.WB (bad) addr32 cs xchg testb pushq pushfq push rex.WR cmp adc (bad) jb push in mov (bad) scas jae movabs or test fildl or movslq (bad) cmp adc sbb mov movabs mov push (bad) push xchg rex.WB rex.WXB xchg mov xchg cmp pop (bad) jl outsl jno jbe adc ficompl pop pop scas fwait (bad) rex.WB pop (bad) fadd addr32 std sbb enterq rex.WX rex.RXB jae rex.WB or pop xor jbe pop (bad) xchg mov xchg (bad) cmp std rex.WX mov xchg insl (bad) hlt rex.RXB rex.WB (bad) (bad) xlat push (bad) rex.WB in pop idivb (bad) or cltd rex.RB ds mull cmp (bad) andb or (bad) int3 movabs xchg rex.WRX xchg test (bad) adc rex.WX mov pop lea sub retq je insb scas and push jp push insl or vmovups pop iret and xlat sub js sbb (bad) (bad) test loope sub or rex.WB test (bad) movabs xor imul jle movsl sub lret out pop loope out int icebp add sub (bad) adc xor mov insb (bad) decb xor xor or lret mov rex.WB adc retq mov mov in decb out sbb out (bad) movq cmc addr32 jae xor (bad) sub rex.WB and stc fwait jnp imul jae mov pop jrcxz push xchg rex.WB (bad) je stos pop (bad) rex.WB jl,pt sbb mov and insb (bad) push xor rex.WRX rex.WB rorb scas cld in cltd rex.WB jle loopne shrb mov fucomp (bad) adc movabs (bad) (bad) add rex.WB jae xor orl (bad) nop test lret jp rex.WB addb hlt cmp out loope (bad) clc pop lret mov (bad) pop rcl sbb mov mov std movabs mov mov xchg out rex.WB (bad) (bad) mov xchg addr32 in rex.XB pop and rex.B cltd adc rex.WRB testb rex.WXB add jle xlat lods fs (bad) lea pop int3 sbb (bad) clc or sub (bad) cmpsb callq lods (bad) adc (bad) rex.WB (bad) mov lahf push roll pushq rex.W rex.RXB cmp insl add (bad) callq jrcxz rex.WRB mov addr32 rex.WRXB rex.RX ss clc jns fs iret rex.WXB stos pop xchg (bad) cmp xchg leaveq adc lret xchg rex.RB pop jbe cmp retq (bad) movslq lods push and pop movabs cltd retq out (bad) roll stos pop jg rex.WB mov (bad) lret lea rex.W jp rex.WB repnz scas jnp mov mov dec xchg rex.RXB pop sahf xchg gs cmpsb jmpq and rex.WRB xchg rex.WB leaveq stos mov ljmp jmp jb lods rex.WRB mov sub enterq lret or je mov (bad) stc cmpsb mov and cmpsl rex.XB or sbb pushq fwait rex.WB jno pop iret jne pop movabs mov push xor insb fldl sbbb in movabs rex.WB enterq (bad) pop test (bad) out je (bad) rex.WB (bad) or rex.WRB loope cli leaveq add gs (bad) ja rolb stos cli adc pushq jmp loop gs rex.WR rex.WRB or mov cld xor sbb add js cmp rex.RXB rex.RX (bad) rex.R orl cmp (bad) mov add movabs rex.WB xchg leaveq rex.RXB rex fucomp or jl adc sub lods mov cld pop movslq push in jle test popq mov callq mov xor mov add out pop callq (bad) rorb cmp in iret add rcll rex.WR pushfq je sub (bad) in rex.WRB rex.WRXB rex.X (bad) rex.WB insb lret rex.WB xchg (bad) sahf adc add (bad) iret jmp sub rex.WB mov jne rex.WB mov xor rex.WRXB pop rex.WB xor pushq sub (bad) (bad) test (bad) stos sub movsb ss sbb sbb push (bad) rex.WB rex.X fcmovb rex.RB loop,pt pushq rclb jb rex.XB and jae movabs sub jns scas rcrl push loope movabs fldenv or xchg enterq movsl jmp add in mov or jb sub rcll movslq in or cmpsb (bad) iret adc xor push and lahf add rex.WB sub sbb js rex.WRX (bad) mov rex.WRX pop (bad) cmpsb adc push push stc callq push (bad) cli movslq pop iret (bad) add pushq lods mov gs push rex rex add rex.WB scas mov (bad) and add repnz clc lret rex.WB sbbl rex.WR outsb insb pop rex.WRX add outsl sarl and sub rex.WX pop mov rex.WB (bad) push test setnp cmp jge loope pop hlt sub cmpsb mov xor mov mov mov mov ds loope (bad) mov hlt addr32 cmp (bad) jns stos rex.WB (bad) mov je jl sub add xor leaveq je sub movabs (bad) nop xchg xor sbb rex.WB (bad) rex.WR rex.R addl adc addr32 adc sbb loope popfq pop mov (bad) rex.WB mov fisubr xchg movslq rex.RB rex.WB rex.WB (bad) rex.XB rex.WRB rex.WB or xchg jae (bad) rex.WB (bad) je (bad) xor adc shrb out (bad) push cmp imul je stos jno (bad) add loope cmovbe pushfq sahf test push cmpsl js rex.RB movsb xor lods cmpsb mov or push imul rex.WB pop cs insb sub rex (bad) xrelease rex.WB cmovns gs adc rorl test cmp movslq (bad) je fstpl callq pop in sub jns lret (bad) enterq (bad) andl sbb push (bad) jp rex.WR (bad) cmp mov rex.WB rex.WXB rolq pop pop mov or lods mov loope sub mov sbb sub jg jno rex.XB cmpl jge jge fadd sub mov rex.RX and rclb xor rex.WRX fs shl mov icebp fs cmp callq (bad) neg pushfq cmp outsb xchg out and rex.WB jl fimul movabs imull js rex.RXB ficom lods enterq mov push sti and js xchg test or test sub jno pop lea nop push xchg rol ss (bad) adc xor xchg (bad) stc push imul out (bad) adc lret fnstcw mov jp test sqrtps pushq xor push ja mov sub (bad) lahf mov lret rex.WB add rex.RB rex.RX add jne addr32 outsl (bad) mov lret (bad) rex.WRB cmp or movslq and (bad) insb cs (bad) push callq rex.WR rex.WB pushq push movsb mov (bad) lret and pushfq rex.WRXB xchg scas in add callq xor and (bad) enterq xor xor cld pushq fmul movabs mov push pushq in (bad) (bad) rex.WB cwtl mov sbb rex.RX pushfq (bad) xchg rorb jnp test rex.XB add lret (bad) cmp xchg cmp and movsb pop in cmc sub xor or jnp or fldt xor jle or gs out lret mov insb cmpsl (bad) fs popfq add repz mov or rex.WB lock std rex.WB movl add cmp outsl movsb rex.WB callq iret jae (bad) rex rex.WB and (bad) adc rex.WB jrcxz rex.WRX in xchg pop xchg hlt out push rex.WB xor mov xor lret adc xchg rex.WRX sbb sahf fmuls or sub leaveq int movabs (bad) repnz (bad) sub fsubl rex.RXB rex.X pop xlat rex.X rex.RB rex.WB jmpq pop enterq cmp (bad) out push and (bad) sub mov roll leavew rex.WB and rex.X enterq (bad) (bad) mov and movabs mov pop cmp or (bad) mov (bad) adc (bad) and test add insl push rex.RXB rex.WB jno movabs in rcrb (bad) (bad) (bad) lods jns sub pop cmp push cmp mov rex.R leaveq (bad) fmuls adc xorl int cmpsl jmp out xchg sub sarl rex.XB rex.WRB rex.WX rex.RX jg sbb adc test rex.WRXB sbb jbe mov test fwait lret (bad) gs xor and jge push lods fisubl movabs mov adc cli jb rex.WB sub retq (bad) jge or loope add cmp movsl jp movabs mov xor iret mov insl callq jb iret pop xor and mov icebp rex.WRX rex.WB rex.W sbb (bad) jl (bad) in pop and xor leaveq xchg movabs pop add add fldenv (bad) repnz rex.WB rex.RX xchg fnstsw pushq int out sbb mov (bad) push mov rex.WRB rex.RXB xor rex.WB (bad) pop gs add pushq and scas or xchg adc or test loop push push outsl test and stc or mov mov callq test xor and sbb rex.WB fcompl add subl jmp retq ja adc mov xlat sbb cmc stos mov xchg mov mov and subl rex.WB sbb xor ds xlat movsb sub (bad) jno (bad) pop xor stos adc cmpsl or fstp sub fucomip out sub pop (bad) (bad) rolb xor or jne (bad) adc js,pt ds (bad) rex.RXB cld sub (bad) movsb retq sbb xor jno leaveq sub cs jne imul addr32 sarb in lock (bad) (bad) rex.W out sub (bad) rex.WB stos and sub in insb (bad) lock pop ja rex.WB cmp sbb xor rex.WX adc pop (bad) stos (bad) clc rex.WB mov xlat lret test xor sbb xor stos or rex.WRB test cmp mov pop sub je (bad) fwait (bad) jbe jp loope mov mov mov callq movabs es rex.WB outsl (bad) sub (bad) rex.WR popfq movabs cmp xchg sub movabs addr32 rex.RX push mov mov repz jp xchg jg loope sti pop int rex.WRX rex.WB repz pop push push sbb retq mov rex.WR movabs xchg ja add sbb test (bad) cwtl callq rex.WB (bad) outsb mull rex.WX rex.WB push out out (bad) callq mov callq rex.B rex.WR rex.WRB rex.WB jg outsb rex.WB mov mov or jo js callq xchg (bad) rex.WRX or push xlat repz stos lods mov push or subl roll rex.WB lods (bad) (bad) rol mov xor rex.WRXB or imul movabs push pop in out mov (bad) jnp (bad) cwtl xchg loope mov push mov mov sarl enterq leaveq retq (bad) jo pop (bad) jno (bad) rex.WB jb or rex.XB mov (bad) jns out xor xchg xchg push ror in mov (bad) jmpq (bad) (bad) pop (bad) adc pop out out pushq or or pushq fcompl movabs enterq (bad) and (bad) add (bad) fwait out or (bad) adc ds cmp pop mov leaveq movsb push gs jg push cld stc pop rex.WB adc (bad) jo rex.RX fs cmp (bad) test enterq xorl sbb mov pop (bad) bswap stos sbb or mov (bad) jmp callq add cld stos and fcoml pop (bad) rex.WB sbb sahf rex.WB es int in cs sub jp xchg cmp in rex.WB int3 test rex.WB (bad) rcr cs rex.WB and pop mov sahf cli rex.WB rex.RB (bad) jno shrq pop test push es xor pop add jnp xchg adc (bad) cmc retq sub mov rex lret and pushq retq and fisttpll jbe (bad) mov rex.WXB adc cmpl and lcall or mov (bad) mov addr32 add scas movabs rex.RB lret mov orl mov movsb xchg movabs pushfq scas sbb lret rex.WB (bad) add push insb or (bad) stos push rex.WRX popfq xchg orl pop pop fldl2t loope rex.WB add cmc out adc jge mov in cli fmull xor addr32 sub xlat imul mov rex.X (bad) adcl cmp rex.WRB ss mov int lock (bad) xor movabs add (bad) xchg push rex.R rex.WX lret in mov rex.WB nop fwait mov cmp packssdw and mov push or idiv movslq cmp (bad) loope pop adc sbb sahf jle pop fcomi rex.WRX pushq (bad) mov fstl (bad) movabs movabs rex.RX rex.RXB sub iret (bad) in movslq cmpsb and in and stos (bad) (bad) pop (bad) cmp or (bad) lahf (bad) add cli fisubl adc out stos rex.X stc (bad) (bad) rex.WRXB pushq xor mov add cli std cwtl movabs fbld addr32 es mov (bad) (bad) fcomps cmp (bad) rex.X repz adc outsl xchg test (bad) adc stos sub jle sub roll test mov repnz lret mov or jb xor movsl mov pop (bad) fwait sbb repz xor lock cmp retq mov (bad) push (bad) push sbb test scas es sub adc cwtl jno icebp movabs (bad) fisubr insb (bad) out mov xor pop sub xchg loop data16 mov mov (bad) xor fwait xor pop pushfq push loop xlat test in lods pop rex.WRX (bad) push push stos ds loope sarb stos (bad) imul fwait lods lret push mov adc mulb or push pop in or mov add xchg data16 cs mov test (bad) jge rex.WB jmpq pushfq and pushq mov rex.WR callq lret xchg lahf sub xchg push rex.RB pop and (bad) movabs nop mov addr32 adc rex.WX xchg rex.RX jge cmp rex.B and enterq sbb outsb pop or (bad) adc std push push or adcl jno mov rex.RB sbb (bad) lock sub xchg adc cltd out stos (bad) xor xchg cvttps2pi lods (bad) mov pop (bad) data16 jbe loopne sbbl jno rolb in test jg rex.XB mov or andl (bad) push sub sbb and (bad) mov ja mov movsb adc fstpl cmp rex.R rex.WB push sub sbb adc or pop (bad) stos mov in rex.WXB rex.WX lea rex.R (bad) xchg out xor fidivr scas xlat data16 rex.WRXB lea pop addr32 int3 js jmpq movsl out (bad) rex.WRB es (bad) mov rex.R mov js mov (bad) mov adc add mov xchg cmp pop (bad) (bad) icebp adc or stos fsubr gs mov add sub and (bad) or jmp adc movabs iret rex.RB jbe (bad) stc movsb sbb (bad) xchg xor (bad) mov (bad) sub movslq add js test xlat xchg addr32 sti jle push fs idivl adc and fwait jge adc rex.RX push loop imul loop pop sti movabs pop test (bad) or sbb je mov je adc xchg movslq out xchg xor or nop (bad) (bad) jb sbb (bad) movslq rex.W (bad) fwait add lods mov xchg (bad) lret rex.RX sub (bad) movsb mov pop rex.WXB jb pop rex.W (bad) cmpsl sbbb sar (bad) clc sbb cltd sbb xor (bad) mov sahf lahf rex.X rex int xor out rex.WR es mov xor cwtl jb rex.RXB es xlat fld cs adc sub mov mov sub jne jge sarb rex.WB sahf xchg (bad) pop fs (bad) scas pop ja iret out (bad) (bad) scas adc or clc rex.WB (bad) ficoml sbb xchg lods test jae cmp in sub cmp pushq gs mov xchg or cmp sbb xchg rex.WR rex.WB imul vorps push (bad) movabs sbb rex.XB js (bad) cmp xor add nop rex.WB movabs scas add (bad) movslq mov mov (bad) fisttp andb cmp pushq lea sub pushq (bad) rex.WXB outsl out or pushq in rex.WXB fsubrs rex.WX xor pushq stc push mov loop jae lret int repnz std sahf pushq pop rex.R fsubl test push and pushq push gs mov rex.WRB or mov rex.RB and add mov ss rex.XB rol insb mov addb movsb (bad) rex.R xor (bad) es sahf fdivs fcmovb adcl cltd sub pop (bad) cltd movb mov xor sbb fisttpll xor jmpq add sbb push add add cs ja,pt out or lods repz lods mov mov mov shll (bad) rex.XB sbb cmc or mov rex.WRB rex.RXB rex.RB fistpl fcmovb xor and rex.WXB push rex xor in int3 packuswb push icebp mov mov jae fsubp lock xchg mov rex.WR stos cltd adc or stc sbb insl or cmpsl xor popfq (bad) sub lret sti (bad) (bad) in stos leaveq or push jb movslq jmp pop or test or xchg jne push or (bad) sub adc lods rex.RX jnp push test enterq sub or xchg and out xlat pop leaveq jmpq sub rex.X in test sub (bad) rex.RXB cmp outsb add imul (bad) movabs sub lcall (bad) insl in add (bad) fcoml or xor push mov leaveq xchg scas sbb mov pop pushq rex.WB rex.B flds retq addr32 adc add rex.WX or rex.WRB cmp sub rclb cmp repz rex.XB int3 mov mov ss lahf fildl jo rcll jns mov add or rex.WB adc adc xor repnz jp xchg mov (bad) rex.XB enterq or pop cmp hlt sbbl push jg movabs xchg icebp pop callq mov sub (bad) adcl mov mov xchg out outsl cld push (bad) in out loope push rex.WB or popq cwtl xor push data16 shlb ljmp cmpsb mov sub mov cmp cli cmp rex.RXB addr32 sub or mov sub or mov mov or sub sbb xchg (bad) movabs out cmpsb pop out sub in (bad) mov data16 push insl (bad) xlat rex.B jne push movslq and (bad) out jns mov (bad) sti rcrl add (bad) loop iret jg lahf and (bad) bnd mov out mov jrcxz and rex.WRX jg and cmp xchg (bad) xchg movabs jno xchg fwait adc mov loopne pop scas retq and rex.XB es addr32 loopne fs cmp jb add test xor callq test sub push adc clc pop push pop or xchg rex.WRB mov xorb lahf int (bad) addr32 cmp fistpll mov loope push fwait sbb or roll (bad) (bad) jrcxz xchg xor fstps fisubl callq mov icebp rex.WB rex (bad) and sahf rex.WB iret rex.WXB rex.X rex.WB jne mov mov (bad) pushq add sub pop rex.WB addr32 mov rex.WB rex.WB jmpq mov jrcxz rex cmp jg lret sub rex.WB sarb rex.WB rorl (bad) and cmpsb icebp or jle xchg (bad) sbb cltd movslq mov fildll test rex.WB mov xlat rex.XB in data16 pushq jns rex.WRX rex.WR rex.WB xchg shr fisubrl loope pop add mov add rex.WB cmp rex.WXB adc movabs std pop retq rex.R push (bad) rex.WB scas push stos and sbb pop (bad) je rex.WRX rex.X rex.WB pushq loope cmpsb and jmpq add mov andl test xor push cmp outsl fistl (bad) fisttp mov int push and int3 cmp outsb mov sahf mov (bad) xor rex.XB loopne leaveq mull lea pushq (bad) push pop mov sbb (bad) pop cmpsb (bad) sbbb sbb in test (bad) fildl mov fs (bad) rex.WB in push jne unpcklps leaveq ds (bad) hlt (bad) in mov sub out (bad) cwtl out rex.X test cltd pop push rex.RXB xchg push in (bad) outsl pop sbb (bad) pop jne (bad) jne (bad) jbe push fwait out fimul xchg lea rex.WB mov nop cmp pop cvtdq2ps (bad) mov retq loopne movabs callq jg repz rex.WB or fdivs rex.WXB pop nop mov repnz (bad) (bad) rex.WRB rcrq ds xor push out sti jl mov insl fs cmp jrcxz shrb test sub (bad) (bad) jae pushq push rex.WRB fs hlt xchg leaveq mov retq imul fdivr cmp or (bad) ss mov in fnstsw loop ja mov and loopne and (bad) movsl mov rex.WB shrb pop data16 rex.WB push xor xchg xlat callq or test sub pop pop movabs clc rex.WB test mov (bad) sub (bad) sbb sub lock xor xchg and sub pop mov rex.RX mov insl movl rex.WB adc movsb mov sub stc enterq lcall mov (bad) rex.WB xchg imul rex.WB popfq xchg sbb orl jo xchg rclb rex.WB loop push scas fdivrl sbb xchg lret rex.WB fwait iret in (bad) push movsl pop add stos mov mov int3 fsincos xchg rex.WR add (bad) (bad) (bad) or sbb adc jo (bad) movsl or rex.WB (bad) adc data16 (bad) pop (bad) addr32 bswap outsl rex.RB loope fcomps cmp pushfq jno xchg lods jg push xor testb (bad) push rex.W repz rex.WX and add ja rcll int (bad) sub rex.WB rex.R push rex.WR adc (bad) rex.WB in (bad) (bad) cwtl (bad) loope pop or xor lods sub xchg int (bad) mov jg adc movabs mov insb xchg rex.R cmp pushq rclb sub mov (bad) out mov rex.WB jo repnz (bad) jne iret loopne rex.WB pop lea jno loope mov ja jl in or fucomip rex.XB sbb or iret fnsave or jmp sahf or pushq jle movsb xchg sub sbb rex.WR rex.WRXB sub (bad) (bad) jmp (bad) lret or rex.WB fucomip rex.WB or rex.WR rex.RB repnz insl loopne sub jge movabs out rex.WB rex.RX mov movl imul fcoml xchg (bad) movslq rex.RXB jbe rex.WB jg cmp mov rex.WXB rex.WB (bad) lods pushq fwait push sub xchg enterq (bad) int pop lock or sbb mov jnp retq (bad) rex.WB addr32 adc rex.WX lock fwait out repz sarb (bad) push (bad) or rcr mov mov lret jge rex.X data16 sub (bad) (bad) xchg movabs (bad) rex.WXB rex.WB or xchg mov jbe jp add (bad) pushq (bad) movabs stc int3 (bad) callq cmp rex.WR rex.RB add add (bad) sub add movabs mov (bad) and xchg in fisubrl rex.WB stos mov rex.WB mov xor adc or xchg mulb pop scas rex.WRX jrcxz (bad) sahf fs rex.WXB es and leaveq rex.WXB test ss in sbb sub (bad) push int3 jl rolb adc retq (bad) lret pop and rex.W rex.WB jrcxz sbb jmpq xor cltd xchg loop (bad) rex.WRX rex.WB rex.WX sub rex.W rex.WB movabs xor rex cmp pushq rex.WR rex.WRX pushq vsubpd (bad) sub jne orl rex.WB mov or add lahf cmpsb pop retq xchg xor cmp and or enterq enterq and pop iret fs std xchg rex.WB mov (bad) pop rex.WB pop scas mov pop jmp test (bad) pop jl cmp rex.WX ffree callq iret jo adc lock sub fimull icebp stos fsub mov rex.WB scas cmp jle (bad) mov (bad) pushq movsb jns rex.WB sbb pop (bad) jbe push fldcw mov lret rex.WB jbe callq rex.WB xor xor rex.WB mov nop cld popfq pushq and js xchg (bad) rcll rex.WB push (bad) mov rex.WB rex.RB and outsb xor jns movsl xor rex.WB cli outsl callq in loopne xchg jae mov mov and sub movsb cmc cltd sub test movabs push sub cmp imul adc and std or sahf sbb enterq (bad) sbb in fdivs (bad) fwait adc xchg ds (bad) rex.RB or movl rex.WXB push sar movabs fnsave ds (bad) mov xchg (bad) ja nop pushq ficoml xlat mov sub (bad) and cmp sub mov (bad) sub sbb cld out pop or pushq callq repz and jmp jmp pop sbb movslq int3 fs mov shrl rex.XB movsb and and shlb rcrb movabs jne fstpl pop (bad) test mov cmpsl (bad) mov sbb (bad) test cmpsb mov fsts cmp rex mov gs adc or push xchg movabs scas pushfq (bad) ja retq mov rex.B rex.RB rex.RXB shrl xor (bad) and rex.WR mov pop mov mov push pop sbb retq cmpsl cmp std sub adc shll lahf or mov in addr32 and add or rex.W (bad) flds mov addr32 adc jb shr popfq pop sbb out test (bad) insb addl add mov insb xchg cmp stos jnp jl rex.W (bad) rex.XB out leaveq sbb and xchg lret (bad) hlt rex.WRB jne rcrl imul push xlat (bad) push xor xchg enterq (bad) scas cltd leaveq cmp xchg pop rex.WRX int3 push or adc cli (bad) pop sbbb rex.R (bad) jne mul rol pushfq (bad) lods in or (bad) or movsb sub fcomps rex.WXB (bad) mov xchg push in out fsubl movsl in retq xchg movabs (bad) rex.RB rex.R rex.WXB jne add fldl2e nop jne or sbb rex movabs ja sub (bad) lahf sbb jb adc cmc jp xor (bad) test add (bad) mov sbb (bad) cmp pop or and xor or mov mov or fsubrs cmp jno push add add std out cmp hlt rex.X cmpl jbe test add fwait rex.WRX cli sbb adc test fnop (bad) addr32 pushfq adc lods rex.WR mov outsb add (bad) sbb retq and rex.X rolb sub rex.WRXB mov add lret (bad) or (bad) mov xor (bad) jge (bad) pop and out xor lret rex.RB (bad) (bad) jbe rex.RB (bad) mov rex.W rex.RB fldt (bad) fdivrl cmpq imul mov and xchg (bad) ss pushq lods (bad) out lret negl mov and pop fwait out (bad) loopne in xchg push sub stos pop (bad) xor ss xchg xchg rex.WRXB pop retq ficompl rex.WB out callq rex.WB in rex.R es (bad) movsl pop xchg mov rex.WB rex mov sub lahf and jne xchg mov shl sbb mov negb flds mov push popfq in (bad) jmpq sbb push movaps (bad) movabs imul (bad) rex.W rex.WB sbb stos xchg push sar jae (bad) add cmp sbb vminss (bad) jmpq rex.WB jb jp (bad) mov movabs cwtl pop fwait (bad) out repnz rex.WB int mov stos mov (bad) rorb rex.WB and mov mov and mov ficom (bad) rex.WB (bad) or lock (bad) push addl sub xlat sbb xchg xor fnop (bad) movsb in jle fimull lret sub scas mov adc (bad) cld popq lahf rex.RX rex.WB push ja imul rex.WB and test (bad) jmp movabs movsb test (bad) (bad) repz sahf pop mov (bad) shlb fldcw cwtl (bad) (bad) addl jb mov jbe (bad) out stc callq mov jo xor rex.RB sbb cmp test callq movsl add cmp lret mov (bad) (bad) loop (bad) loopne push xchg (bad) push vmovdqu mov (bad) or rex.WRX fidiv rex.WXB rex.RB push rex.WB xor sbb mov jnp or rex.WR loop rex.WB icebp mov add or xchg rex.WX pushq fsts jns mov int xchg popfq adc xchg negb scas insb std adc fstpl add movabs mov rorb cmp ss outsb rex.WB movabs movsl jnp icebp mov test and loopne jb sub xor out adc rex.WB iret or (bad) decb imul cltd xchg rex.WB and pop or loop (bad) fs add xchg push in int mov xchg sub mov stos push imul mov retq sbb (bad) (bad) (bad) add sarl icebp and jno jae test xor sbb movsb cli (bad) rex.WB pop add (bad) mov rex.WRB or lret mov rex.WR jge,pn orl mov pushq repnz out xchg std xorl sub js (bad) jns sub jne (bad) sub jmp pushq popfq rex.WXB add xchg sub xchg stos (bad) (bad) or pop test mov and (bad) rex.WB (bad) push xchg fsubl stc rex.WRB scas shrb xchg leaveq (bad) pop cltd sti xor in or outsl rclb fmull jp adc loop jmpq sub leaveq rex.W gs and mov xlat xor cli cltd cmp jno repz mov jns int3 mov push or mov pop add fcoms (bad) rcrb fs sub xchg xchg pushq jne cmp (bad) insl (bad) adc xchg cltd imul movabs (bad) (bad) out xchg xor int add mov je jge stos jno sub pop (bad) stc add (bad) movsb pop mov hlt iret xchg push scas push cli cmp test (bad) xor (bad) mov (bad) int push rex.RXB (bad) sub (bad) ficoml lret pop rex.WR pushq movsb rex.WRB fdivl mov sub jnp (bad) fistpll popfq mov xchg mov rorl xor pop repnz enterq fcmove subb movsb (bad) jnp mov fimull shll or mov push callq rex.WR sub retq je in cmp rex.WRXB jrcxz idivb std repz rex.RXB pop rex.WB xchg cmp add sub (bad) jrcxz xchg mov lret cmc pop sar sbb rex.WR pop sahf xchg rex.WB popfq stos sahf mov pop sbb lret test (bad) rex.B rex.RX addr32 ds rex.WB rex.WXB repz scas add enterq fwait out loopne xor movsl (bad) sbb mov adc (bad) cmp rex.WXB xorl (bad) sbb lret add rep (bad) (bad) out mov in push decq fnstcw or (bad) add fs fsubrp xchg lret pop xchg sbb (bad) sti outsl (bad) sub loopne stc push cmp (bad) pushq mov out or jmp rex.X out pop mov pop mov sbb stc rex.RXB cmp test (bad) test mov add jns pop retq mov sbb fsubrs jl mov rex.WRXB rex.RB movabs orl rex.WB cltd xor jno sbb push rex.X or fsubs pushfq jno imul callq callq pop and rex.WRB rex.WRXB rex.WRXB rex.WB data16 cmp xchg lret xchg xchg rex.WXB rex.WB jge jle (bad) lret xchg lahf push mov xchg cs xchg (bad) jb fwait lret test or mov rex.WB or (bad) jae out rolb sub rex.X rex.WX rex.WRB mov hlt shr shl fstps int jg jrcxz std or add (bad) cli cmp nop and incb (bad) rex.WB repz out pushq (bad) rex.RXB sub cmp (bad) rex.WB mov rcr rex.WB outsl hlt (bad) (bad) mov (bad) cmpsb movabs mov xchg mov push xchg add push or cmp lods out sbb jg pop clc cmpsb mov loope (bad) push cmovne mov stc sub es (bad) subl (bad) mov xchg cmp mov rex.WRXB in callq int jge and loope jg add sub lea (bad) and (bad) out mov addr32 mov lock int3 (bad) xor cmp adc adc sbb addr32 jp callq sub movabs jle push lods rex.WB loop lea mov nopl xchg jnp adc movabs decl ficompl mov rex.RX test rex.WB xchg push movabs sbb (bad) popfq rex.WB (bad) (bad) rol (bad) pop test cmp (bad) mov (bad) loope sub (bad) roll rex.WB rex.WX (bad) or xchg adc scas test fnsave add callq rex.RXB (bad) pop add rex.WB rex.WRB rex.WB xchg orb (bad) ja (bad) xchg and (bad) mov cli pop mov mov pop pushfq cmp int xchg (bad) lods mov (bad) add xor or jp,pt mov pushq rex.WB or or (bad) sub test push data16 ss iret lods shrb callq xor mov mov mov es mov scas xor jae pop jp (bad) sarl (bad) rex.WB loop or rex.WB gs sub rex.WB push in int push pop (bad) jb repz rex.R pop imul jg test retq rex loope rex.XB maxps (bad) sub rex.R (bad) in movabs retq test clc mov rex.X rex.WB loop rolb (bad) (bad) and rex.R rex.WB popfq xor xchg (bad) pushfq rex.WB rex.WXB test sub rex.WX clc lods jmpq int3 gs pop leaveq mov rex.WB rex.WRB cs out test pushq cli pop popfq xor add or lods cld rex.WB jae test rep fs pop in (bad) subl sarl cmc xor (bad) sti cmp rex.WXB and rex.WB shll xchg (bad) (bad) pop jge lods lret (bad) (bad) movaps mov rex.RXB xchg adcl mov cmp xchg sub sbbb mov jrcxz pop and (bad) and mov andl mov lret retq jo xchg imul mov sub rex.WRX rex.WB rex.B lea sbb icebp mov sub and imul pushq mov je or add int3 mov jrcxz and ja xchg sbb addr32 or (bad) cmp (bad) rex.WRXB out pop adc rex.WB retq nop stos push rex.WB repz callq mov xor rex.WRB sarb rex.WXB movabs rex.WRX push or rex.WB rex.RX es and cmp sub scas imul cmp rex.WRXB rex.WB xchg xchg (bad) (bad) rex.WB pushfq (bad) xor or in (bad) rex.WR xchg mov fs lock repnz jne js jge mov jge loope js jns movsb (bad) setno xchg rex.X cmpsb mov pop rex.RX add lahf (bad) sahf mov lret addr32 int rex.RX push sarb movabs andl mov movabs pop movsl sar or jnp and rol callq movabs mov cltd mov pop movabs (bad) or cltd sbb js pushfq mov xchg add mov leaveq add add retq std mov adc pushq (bad) jmp jg (bad) ljmp and (bad) xchg rex.RXB enterq lahf jnp jb clc cmp out enterq outsl push push stc rex.WX push jmp rex.WRX jrcxz (bad) stos mov adc pop jge (bad) push repnz sbb sub rex.WRB (bad) stos mov repz sub sbb mov add enterq jge movabs xchg jbe movsl jmp jo fwait cmp shrb adc faddl push add rex.RXB rex.WB rex.WX mov shlq test xchg movsl xchg push and in insb cwtl (bad) push clc fwait mov jg pushq rex.RXB sbb jne fisttp xchg xchg (bad) or hlt jns rex.WB mul pop jnp mov mov (bad) mov xchg xor lea sarl adc roll loopne es xchg xchg pushfq pop jle in rcrl mov out outsl (bad) push rex.WB rex.R (bad) pushfq rcr rex.WB or leaveq (bad) imul rex.WB fs mov (bad) ss test (bad) xchg callq push xor jno xor sub pop sub sbb mov mov movabs jp pop outsl (bad) insb sarb or pop xor (bad) sbb and pushq movabs pushq loopnel sub rorl sbb cwtl (bad) and lock shlb cmp rex.WB cs mov sbb enterq std jnp mov cli mov and ss rex.WB imul sbb xor fdiv xchg sbb adc int3 cmp loop add movabs (bad) pushq sub addr32 mov cli (bad) (bad) rex.WB mov movslq xor jrcxz xchg test (bad) sbb add jnp xchg xchg movabs mov and rex.WB lock jrcxz (bad) adc mov shll (bad) rex.WB addb (bad) test insb rex.WB xor lahf callq rex.XB pushq cmp cwtl rex pop mov pop xchg loope mov movsb sahf pushfq cmpsb retq cmpsl (bad) pushq rex.WB xchg cmp ficomp rorl je out xchg jno push cmc fist (bad) lock or test callq fwait xchg icebp scas sbb rex.WB retq xor (bad) movabs (bad) xorl movabs sub sub xchg ja pushq (bad) lret rex.WB (bad) movabs sub es add mov repz push mov xchg sbb addr32 lret mov in movabs adc push sub and mov and leaveq cmpsl pop sub rex.WB repnz int sbb rex.RX lods adc (bad) rex.WB mov rcl jbe scas rex jge (bad) out imul rex.B rex movabs pop cwtl pop sbb retq sub or rex.RXB rex.WB rex.RX ficomp rex.WB jge sbb jns push cmp lock (bad) (bad) divb rex.WB mov ds mov push std mov lods xchg rcll rex.X icebp jl xor orl xchg shlb rex.WX sbb imul (bad) (bad) lods rex.WR (bad) hlt mov rex in movabs jbe or mov fsub imull enterq mov jae sbb xchg rex.XB std pop pop sbb cmp cltd or xlat rex.WX (bad) test mov incl mov (bad) movabs shl test (bad) movabs and adc rex.WB (bad) cli out xorb fwait (bad) clc rex.X rex (bad) rex.WB ss enterq mov mov loopne (bad) (bad) insl mov ja push mov decl rex.WR rex.XB rex.WB xor repnz pop enterq mov mov addr32 push in pop or rex.WB mov sahf test sub rorl fistpl sbb jp lahf imul rcll rex.XB mov retq pushq movabs (bad) icebp cmc in pushq sbb xor icebp cmp sahf rex pop or pushq mov rex.WR rex and neg rex.WXB repnz scas sbb cmp pop push in mov mov insb fnstcw rex movabs or sbb mov (bad) (bad) rex.WB mov push add mov push pop adc rex.X (bad) loopne sbb test rex.WRB rex.WB repnz in retq movabs movabs mov adc outsb sbb mov push (bad) rex.WB rex.XB ja sahf lret lods (bad) loope sub rex.WB fisttpl xor cmpsl cs int mov out cmp xor clc mov sti icebp xchg lret rex.XB gs or xchg mov sub add jbe lea rex.WX je (bad) or pop sti je sub cmc retq mov (bad) rex.WXB mov test sbb jbe xor cmp roll or xchg lods (bad) and int3 test pop xorl xchg rex.WR cwtl popq stos jg xchg jl jp ja repnz mov and outsl stos sub pushfq cltd xor rorl cmp pop jge or add (bad) jno (bad) stc in xchg rex.WB mov in test mov (bad) outsb enterq ficoml rex.WX mov jo jle push jmpq (bad) mov xor lock adc pushq mov cs adc xchg rex.WB int3 rex.WRXB hlt xchg sbb jb mov sti mov rex.WB rex.WXB out mov int push or xor xor push adc (bad) addr32 xchg rex.XB leaveq pop adc adc xor rex.WB (bad) std mov clc rex.RX cld xchg nop (bad) mov data16 sbb push popfq rex.X or je jo jl mov stc rex mov cli (bad) pop jrcxz pushq movslq (bad) (bad) (bad) xor and popfq rex.WB movslq lret push sbb in pop imul and jbe mov sub insb sub rol callq ds xor movslq fidivr sub fs (bad) add sbb rex.WB (bad) pop jo in mov (bad) or rorl cmp insl (bad) outsl rex.R rex.WB imull (bad) setns cmp shlb cmp rex.XB rex.WRXB push repnz push (bad) or fcmovne add insb mulb callq xor lock push movslq rcll nop out callq rorl mov fldt mov mov push js add xchg xchg adc sbb mov xchg movabs test rex.WB (bad) adc push xchg cltd test stos out fwait sub pushq pop rex.RXB sbb rex.B mov enterq (bad) rclb sub mov outsb jge rex.B pop rex.WR int jae shlb cmp (bad) mov gs push jrcxz fmuls cmpsl and push mov mov pop mov pop fsubl cmp out rex.WB push pop sbb fmuls rex.WB add lods testl push rex.WR rcrl push adc rex.WB mov (bad) cmpsl rex.WX lahf loopne lret es mov jge rex.WB mov mov rex.XB and xbeginq (bad) pop push retq out sub adc rex.RX sub add loopne jnp or xchg iret cli sbb rex.X pop incb and fcomps xor pop mov lock cmp push rex.WRB movabs loopne (bad) jb rex.WX cmpsb outsl xchg int3 xlat movabs pop rex.WB mov callq out ss mov sbb pop mov push stc mov push sbb scas xor pop and xchg push sub (bad) xor sbb or movslq mov xor stc repz mov fldcw sub cmp mov out mov outsl (bad) fldenv jo rex.WRX jb cmpsl xlat or cmp pop orl leaveq or rex.WRX fildl movslq or sub add outsb or cmp andl mov rex.WB cmpl adc movsb mov orl rex.WB (bad) (bad) adc cmpsl and (bad) sub addr32 rex.RB (bad) push adc jmp popfq xchg pop incb rex.WRXB roll sub repnz mov rex.WB movabs rcr mov sub sub add cmp mov movabs sahf neg mov movabs add or ljmp mov retq push addr32 xor stos cmp sub rol sub xchg stos (bad) rex.RXB movsb (bad) mov imul mov (bad) (bad) mov (bad) pop popfq mov int3 sbb sub divq retq push repnz jle fs xor gs adc rex.W (bad) or stos mov callq repnz enterq pop or std jmpq add mov imul add xlat cmp sub in mov loop callq movsb or rex.RX xchg scas loope pushfq add rcrb push jbe push movabs lods jno pop pop repz fwait sbb (bad) hlt movabs bnd mulq sub rex.RB (bad) jno (bad) or mov add push rex.X rex.WR addr32 adc jrcxz (bad) out or in stos xchg pop pushq or or or cmp and mov cmc (bad) test sub or stos std mov test rorl imull rex.WRB loopne cmp jne or mov scas sbb (bad) (bad) enterq add loop mov mov rex.WB ss mov int3 (bad) test movabs pushq pop adc push sbb in jns ja adc lahf (bad) cmp sbb rex or sbb in popfq (bad) nop mov pop cltd scas outsl or mov popq push ficomp jbe adc (bad) imul std push and out rex.WXB hlt and add sub callq out rex.WR mov add or rex.RB lret xor add and push pushq movabs jp stos (bad) js add sub push (bad) xchg cmp mov (bad) rex.WRX or xchg fdivs rcrb or jrcxz pushq cwtl or sbb (bad) (bad) callq addr32 outsl rex.W mov sbb rex.XB rex.RXB or addl rclb xlat mov rex.WB xchg jge rex.WB fldenv rex.WB nop (bad) push sub retq jae enterq add mov pushq mov adc addr32 rorl mov rex.WB stos pcmpgtb (bad) (bad) rorl xchg nop lods icebp rex.WB xor xchg es test jge iret fisubrl mov movl movslq mov fldenv out mov xchg jae and div sub (bad) movsl cmp cmp lret shr pop mov sbb jbe icebp (bad) (bad) (bad) (bad) jp rex.WB notl xlat icebp pushq callq xchg movabs xor add popq cmp push sub (bad) (bad) fdivl xlat movsl jge punpckhwd pop rex.WB cmp rcl pushq rex.WXB ja sub cmpsb fmulp test (bad) (bad) rex.RX jmpq add lods cli rex.WXB pushq mov in fbld enterq out mov (bad) jmpq or fadd xchg data16 fisubr push (bad) mov push push insl pushq jne lock sbb pop (bad) pop (bad) adcb int3 cltd push loopne (bad) nop (bad) (bad) test divb jl stos mov jmp test sbbl pop mov cmpsb movslq lea fistl add loopne rex.WX (bad) lods fistp xchg fadds sbb pop adc sahf push add ja mov iret jns mov xor jg jmpq or cld lahf mov rex.WB rex.WRX cmp sbb rex.X out decl xchg pop scas push shlb or (bad) and push lret enterq sbb jmpq (bad) xor (bad) add (bad) retq mov mov sbb push mov sub jge (bad) push sti push std cs cld addr32 callq insb mov fstps xchg and jne pop pop rex.WB rex.W rex.RB orl std rex.WXB xor or push in (bad) in xchg (bad) sub (bad) in adc fidiv or xchg gs jno and stc xchg icebp std push fnstenv (bad) rex (bad) retq (bad) jrcxz add jg fsubl repz rex.RX sti xchg jbe cmp mov out cmp movabs pop negb adc mov callq (bad) (bad) cmp cltd add (bad) mov jle mov jo (bad) or xchg xor sbbl movslq fs outsb pop rex.RXB movslq sub (bad) xchg idivl xchg or (bad) test push (bad) xchg leaveq out rex.WB addr32 add movabs rex.RX pop jnp out rex.WRB mov nop xchg movslq pushfq (bad) sbb rex.WXB (bad) out test sub xchg js (bad) in cmpsl retq xchg cmpsb stos imul jb rex.WRXB incl leaveq test js (bad) cli lock xchg lahf loope xchg (bad) fcomps faddl callq rex.WRX sub mov mov pop scas xchg in sub lods and sti mov nop sub movslq mov push loop or pop xlat and push movsl shr sub jnp (bad) push rclb gs mov std push mov andl in or jno pop xor (bad) fidiv retq enterq jnp lret xor (bad) pop (bad) cwtl xchg xor rex.R out out rex.WB rcr clc mov add rex.WRXB rex.RXB (bad) (bad) cmp test rex.WRB callq sub adc sbb rex.WB rex.X cmc xor notl stc push sti pop push imul (bad) mov icebp (bad) ja lods movabs rex.R lock pop out rol push add xchg sbb (bad) gs cld add or sub jl movabs rex.XB lret add divl jp pop push cmpsl cmp rex.WB mov fcompl int leaveq jae jb jo insl mov xchg movabs (bad) pop iret sti (bad) callq (bad) and xchg data16 orb (bad) loopne out or add and (bad) fdivrl xor or scas push push clc gs lods or xor mov loope rex.WRB sbb shrl in cmp (bad) retq movsb (bad) or rex.W rex.WB rex.R (bad) (bad) jae cmpsb retq mov retq mov cmc sub cwtl and in clc push xlat add mov add loope int sub or (bad) mov mov (bad) out (bad) stc movabs callq push cmpsb retq rex.RB enterq jge xchg (bad) xchg or cmp scas and lock sti pop retq xchg rcrb and mov repz sbb sub divb xchg push xor retq mov jbe or (bad) lea cli pop rex.RXB insl sbb lahf cmpsl xor sub (bad) xchg movsl and (bad) out rex.WXB (bad) test scas iret loopne (bad) jne cmpsl (bad) shl push mov (bad) mov negl mov sbb sbb retq mov enterq loope pop shrl jbe pop mov or pop sbb jle out xchg pushfq mov (bad) add cmpsl pop rcrb (bad) jno xchg scas mov movabs adcb jmpq cmp fcmovbe xchg cmp stos pop (bad) push (bad) movsb insb or addr32 rex.XB adc rex.X andb xchg mov (bad) (bad) movabs xchg rcrb out xor jns stos (bad) jg rex.XB push xchg cltd add insb push out fs or adcl fwait pop lods or sbb mov sbb xor out sbb cltd cmpsl (bad) xchg or rex.R data16 leaveq (bad) mov mov mov mov fldcw cs clc xchg cmp cmp add subb fadds jnp repz stos in sti rex.WRXB repz test sbbl callq (bad) sub jne cli rex.WB adc rex.X jge adc (bad) and insl in xor cli callq rex.WR jp vxorps rex.WB pushq xor (bad) rex.WRB test mov (bad) outsl add pushq test mov rex.WB rex.W add icebp (bad) sbb loope cmp push je adc cmp rex.RX rex.WX pushfq sub sbb jge jl pop rclq callq nop lods test or fstpt push jb push and movabs sbb js (bad) (bad) callq add sbb lret test xor movabs iret and xchg sub rex.WB retq xchg and in loopne jb (bad) xchg xchg rex.X (bad) xor imul nop cmp sub rex.WB mov (bad) sub sbb rolb or or push pushq test xor fldenv roll xor rex.W cld rex.WB cli leaveq (bad) ss adc push and jo rex.WX callq mov or ja retq movslq pop mov (bad) (bad) rex.WRXB xchg or movabs pop movsl rex.XB test movb jrcxz test ss in pushq lock (bad) rex.WX pushq sbb (bad) cmpsb insl jne xchg xor pop fwait and lea movslq in adc sbb push jge xchg imul jmp rex.WRB adc in rex.B ss cmpsl cs movabs mov sub int3 gs rclb rex.WRXB (bad) pushq je rex.WRX or rex.XB rex.WB test movslq (bad) callq fisttpl rex.XB movsb and jmpq callq rex.WB (bad) sbb clc sahf rex.XB (bad) and push callq jg test addr32 je mov jl rex.X callq mov out jge pop addr32 imul push mov callq (bad) addr32 roll fwait rex.RXB (bad) repz add rex.WB out iret sti mov sub (bad) addb rex.WB fstpt rcrb (bad) push (bad) in sbb pushq movsl mov mov scas rex.WB js push sub xlat mov rex.B (bad) movabs sbb lret callq gs (bad) retq addr32 clc lret (bad) rex.WRB rex.RB xchg jb ds movabs xchg icebp cltd adc pop rex.WB and jmp rex.WRX xchg addr32 mov rex.WXB rex.B mov movabs (bad) (bad) cld jne test mov fldcw movsb test (bad) rex.WB xchg sbb (bad) lret movsl (bad) cmp cwtl out cmp out scas movsb push (bad) jl sbb fldt (bad) (bad) adc push mov rex.R cmpsb fmuls or sbb hlt xchg (bad) sub sub gs (bad) xor push mov pop jnp (bad) adc test rex.WX or sub movsb fwait iretq jp test cmp sbb enterq repz (bad) rex.WX add xchg stos pop retq sbb xchg jno mov sbb je (bad) rex.WB test loopne or rex.WB test sbb adc leaveq rex.RX outsl in mov rex.WB add clc (bad) pop rex.R stos insl pushq addr32 es sarb and pop movabs jbe mov pushq data16 std rex.WX push pop adc sahf mov (bad) insl outsl xchg callq bndldx stc outsl xchg rex.WX xor retq rex.B rex.WB push icebp sbb adc pop stos (bad) std rorl mov sub (bad) jbe sub popq loopne push (bad) outsb (bad) mov sub xchg decl xchg or rex.WRXB pop movabs insb sub push add nop mov out test movslq rex.WXB out imul adc mov jnp imul push push cmpsb (bad) movsb xchg sub adc adc sub cmp pop cwtl cmc cmp rex.B cmpsb popfq rex.XB (bad) mov jmp jmpq rex.WX sub mov out repz pop (bad) cmc (bad) iret (bad) (bad) xchg jmp jge popq rex.X rex.RXB (bad) out loop (bad) mov movsb fmuls sahf loop push sahf xchg (bad) cwtl cmc xor lods jge push adc imul rex.XB ss rex.WR (bad) sub (bad) rex.XB add pushq adc mov rex.WRB fcompp loopne icebp xor lods popfq pushq (bad) cwtl popfq push enterq rex sub sbb jbe rex.XB mov pop pop out add lret pushfq or xchg insl and rex.WRX shr mov lret mov adc je lods (bad) xlat or callq and sub stos mov divl fcom xchg rex.WRXB repz (bad) negb rex.WRXB movabs rex.WX mov xchg push or callq (bad) (bad) pushq rex.RX rex.RB xchg (bad) add cmp sub (bad) jbe (bad) jmp mov rex movabs sub rex.RXB imul movsl (bad) rex.WB pop movabs icebp adc rex.WB pushq adc sbb jnp or flds addr32 fsubrl lods rex rex.WB rex.X jo and xchg rex.WB pop push jae mov sbb or or scas adc (bad) cmp fsubrl out mov cld xor xor or lea sub mov (bad) mov cs flds fwait xor add and push mov cwtl (bad) (bad) nop lret mov mov lahf mov rex.WB rex.X lret out xlat (bad) sub jge (bad) mov in xor adc (bad) pop imul fistpl xchg and (bad) jo (bad) sti and mov in mull movabs rorl fwait imul or (bad) rex.RB insl mov xlat roll pop loop rex.WB (bad) lods jb,pn xor push rex.RXB fisttpl cmp mov mov stc (bad) (bad) test pop pop mov callq rex.WRX cltd movabs adc rex.X rex.RXB sub sbb jg movabs retq or and rex.WB pop lods jb shlb int3 loope push and je xor int rcrl lods xchg add add out cwtl xchg out imul mov cmpsl mov rex.WB int lods shll xor sarb out cli mov mov xchg cmovns fwait mov pop or (bad) jno rorb imul mov mov xchg sbb rex.RX xlat add roll jne movabs sahf stos lods fistpl rex.WRB pushq sbb mov rex.XB js mov or push xor ficompl or mov and push movabs jrcxz imull cmp rex.WRX rex.WXB shr (bad) jle jae sub mov andl rex.WXB pop and sub pushq (bad) (bad) rex.WB pushq lock mov movabs retq imul rex.WR add test lret pop (bad) iret jae pop retq (bad) callq mov xchg or pop and movsl sti pop mov xor cld mov cwtl rex.WB rex.X lods mov pop mov gs jo push push cmc fiaddl rex.WB fwait rcll jno leaveq mov (bad) rex.WB test xor and adc mov movl sbb rex.WR rex.WX retq add loop (bad) movabs jo add add sub sbb repz out out in outsb jp xorl or rex.R sub or je test stc xchg xchg (bad) jnp js pop lahf rex.WRX and insb rex.WB rex.WX mov sbb (bad) mov and jp mov rex.RB sub lahf sub lock pop push pop mov rex.WRB rex.RXB jae rex.XB jg rex.WR test jmpq mov or push add cmp pop mov cmpsl pushq pop mov sub lret rex.R loop jge rex.WRXB rex.RXB scas add rex.X adc sub jmpq (bad) sub jnp jle adc add pushq xor mov pop sti test loop (bad) xchg jb push push or sub outsb mov lret xchg retq sahf callq mov xchg movabs (bad) mov pushfq add jmp cwtl adc mov (bad) (bad) callq cmp in enterq test mov movabs std cltd push retq or sub popfq sahf jle addb outsb cmpsl (bad) add xchg movsl hlt rex.WB sub sub jns jnp mov test fwait cmp (bad) jbe rex.WB and (bad) mov push ficompl sub vmovaps xchg pop rex.WR xchg cmpsb sbb cwtl pop in sub nop (bad) std ja pop add enterq cmp rorb xor pop push (bad) pushq adc sub rol (bad) addr32 push push xchg xchg rex.XB adc mov mov jns leaveq std add push sub adc cmpsb movabs mov xchg mov cmp fdivs xchg jb (bad) rex.WB (bad) fisub pop jno lea xor xor jmp xchg out or lcall rex.WB jns adc test sahf rex.W sbb or lock mov mov mov shlb fisttpl outsb rex.RB cmpsb pop adc push rex.WR rex.WB fs retq push rex.B rex.XB callq (bad) and repz rex.WB mov rex.WB cmp adc sub insb sarb pushq movabs loope jbe or callq pushfq (bad) push mov rex.WB rex.RX rex.RB (bad) sub lods (bad) push and leaveq pop insl rex.WRXB outsl cs callq cmpsl imul rex.WB mov adc jle test mov pop sahf xor frstor jl notl rex.WB lods pop rex.RXB jmp (bad) pop retq std rex.WB sbb andb mov lea mov in xchg hlt int3 cmp rex.WB push jns mov popfq xchg xchg mov (bad) xlat int3 (bad) mov (bad) or movsb sub (bad) icebp (bad) jge (bad) rex.WXB jo rex.WB scas xchg xchg xchg jns cli rex.WB decb mov leaveq popfq add jns cli out or xchg (bad) loop mov test xor fstps int movabs (bad) rex.WRX sbb movsb outsb xchg nop rolb orl in test mov adc cli subq rclb movabs (bad) out scas iret imul enterq xchg (bad) stos jrcxz mov (bad) sub sbb xchg vpsubb (bad) jbe callq in mov xchg push jb add movslq rex.WB jp int add push jp rex.WB mov rex.RXB rex.WB iret jl roll movabs jmp (bad) ja xlat sti cwtl or retq cmpsb fs sub rcr sub rorl sti rex.WB and or or rex.WXB jnp (bad) pop jmpq (bad) sbb (bad) outsl lods (bad) mov sub fbstp pop rex.RB (bad) rex.WX rex.WB xchg int3 js mov std rex.WB or add lret sar push test rex.WB es and in xchg xchg rex.WB (bad) jns pushq (bad) pop cmpsl (bad) push jne mov mov sub out push rex.WR pop and mov mov repnz (bad) addr32 movabs rex.WB rex.RB notb callq (bad) leaveq cmc rex.WB rcrb push xchg jmpq (bad) scas push adc (bad) jb enterq movabs mov fldz sub sbb lock mov mov (bad) leaveq cmp rclb (bad) or rex.WB sub movslq push insl push (bad) rex.WB rex.XB movsb rex.WRX pushq out outsb lods rex.WR lret xor loope popq hlt int3 orl jrcxz in (bad) callq ja rex.B cmp or je (bad) pushfq and (bad) mov jnp imul sub mov cmp rex.WB lock pop rex.WB ss push js leaveq out sub (bad) push (bad) xor shrl imul xor movabs cwtl imulq push in cmp jb push xchg leaveq retq adc adcl xor pop test mov and xor jbe sbb incb pop jns rcrb rex.WR enterq (bad) jp (bad) (bad) addr32 repnz mov test sbb xchg push jno or fistpl sbb sbb sbbl leaveq (bad) sub push or movsb movabs push jne xchg add js adc and xor pushq adc jns add add movsb mov xchg lret add mov es ljmp push jno sbb rex.X repz sub xchg loope sub fstpt shrb mov jmp psubb rex.WR rex.WRB loop pushq (bad) (bad) sub (bad) mov lret movabs jb rex.WB (bad) xor or out rex.WB (bad) int xchg movsb jae rex.WB in pushq mov outsb or rex.WR push xor mov rex.WB cmp and fbstp rex.WB lods adc rex.WB mov sbb cmp adc (bad) popfq add pushq adcl jle xor and sbb rex.WB lods xor rex.WB (bad) fsubrs in (bad) push adc (bad) mov xchg (bad) decb imul movsl (bad) (bad) push (bad) add imul (bad) sub out push (bad) or jmp pop shl enterq lret pop pop outsl and test outsb add (bad) jne push or (bad) (bad) rex.WB cmp fucomp (bad) pop fisttp inc cmp xor add rex.RXB jae cs movsb add out sbb mov (bad) mov test sbb push xchg insl nop rex.WB rex.RXB stc sbb sub mov cltd xor (bad) pushq sub pop rcrb fnsave or insl mulb rex.WB fisttp (bad) stc cmp pop cwtl rex.WRX rex.WB rex.W fs data16 (bad) rex.WB orb fucomip mov mov js rex.WX repz stos mov cwtl enterq imul cmp cmp iret or loope in mov fsubr jle fwait pop rex.WB jmpq xchg (bad) rex.WB rex repz xchg jo rex.WRB (bad) pushfq sbb rex.WXB xor mov lret add (bad) sub loop callq or push fidivr insl add std adcb rex.RB rex.WB and (bad) jne mov loopne jo sub xchg jp pop (bad) shll (bad) jg mov fnstcw rex.WB sbb rex.WXB shrb rex.WB mov rex callq add (bad) mov loop push rex.WB rex.RXB notb xchg lret rex.WB rex.WRB xor adc callq mov or pop sbb imul xchg mov cmp pop (bad) ds rex.RX adc movabs adc out movsl xor out test cmpsl xor stos sub push (bad) xchg roll movabs fucom xchg mov in retq push jrcxz rex.RXB rex.WB xor movabs sub jp fidivr mov jne push xor movslq mov sub loopne pop mov scas xchg (bad) (bad) movsl mov fs movabs gs rex.W cmp sbb insl divl rex.WB and (bad) mov (bad) (bad) movabs lret rex.WB sub out sub xor xlat mov pop add mov pop jns jb (bad) adc jg xchg sub sub mov and mov cmp (bad) pop (bad) rex.WB xchg rex.XB rex.WB jrcxz lret nop cmpsb fcomps insl or data16 fidivrl rex.WB adc cmp (bad) (bad) rex.WB (bad) pop jp add rex.RX fimull xchg rex.XB (bad) movabs outsb mov out ds mov sub mov rex.WB (bad) rex.B rex.WB rex.XB mov adc mov nop iret and mov (bad) jnp pop (bad) addr32 movsb je (bad) out movsl rex.WB xor idivb mov sub or movsl cmp rex.WB data16 cmp jge int (bad) rex.WB movsb hlt push stos mov pop and cmp rex.WB push xchg fcomps cltd movabs lret xor stos jo rex.WRXB mov movabs notl mov or rex.WB rex.X cmp xchg add (bad) (bad) cli fldl sbb fwait mov out xor sbb ja repnz scas jmpq callq popfq pop pop mov rex.RB pop sub add pop xchg xor cli pop out jle std int insb cmpsb xchg xchg sub jns rex.WB mov rex.RX (bad) (bad) (bad) or xor jo cmp stc enterq pop jrcxz (bad) and jo mov (bad) in push mov rorl in movabs movabs movsb xchg jmpq xchg sub (bad) (bad) push out (bad) push and rex.WRXB vpshaq jnp (bad) xchg xor leaveq loop (bad) mov (bad) add or rex.WRB outsl rex.RX cs rex.WX cmp rex.RXB movabs (bad) rorl and rex.WB sub mov rex.RX es mov mov rex.WB ss cwtl subl mov xlat cmp imul fwait add sub push rex.WB adc xchg out xor movsl push pop popfq jmpq mov pop (bad) jrcxz jns rex.WB ds (bad) jb or rex.WB in xor sub insb callq mov rex.WXB pushq pop sub sub movslq mov (bad) xchg int3 adc pushfq rolb out xchg leaveq in jnp iret fdivs or std jp (bad) push cld loope push rolb in pushq mov xchg or sub jle mov push jle enterq pushq sub rex.RX fstpl fisubrl mov out push or test rex.WRX scas lret sub rex.XB push sub cld (bad) sbb xor leaveq ja fnsave adc js cmpsb imul mov mov lret jrcxz mov fiadd sub xor mov enterq jae (bad) mov rex.WRB push sub movslq hlt mov movsb loopel pop adc hlt rex.RX and (bad) mov test or pushfq mov movabs imul cld cmp xchg and clc cmpsb sub xor icebp mov addr32 jo xorl std (bad) sub in xchg mov lret or add je xchg (bad) rex or pop (bad) xchg rex.RX iret (bad) add (bad) lock enterq cmpsb mov scas (bad) int add jrcxz pushq popfq (bad) push xchg add (bad) (bad) gs cmpsl push (bad) (bad) enterq (bad) fldt mov iret (bad) (bad) add or sub xor adc dec cwtl sbb xlat cwtl rex.WRB sbb imul int3 lahf and cmpsb xchg xlat cmp or hlt out mov rex.WXB and add hlt in (bad) adc rorb imul rex.WRX pushq mov jno test rsm sub div mov movabs push movsb cmp and rex.RXB cmp sbb jns jns movabs (bad) or (bad) pushfq lods jno mov mov imul and out sub pushq cmpsb sub pop jbe add rex.WRX push (bad) mov fdivr (bad) jge scas in adc (bad) jp stc rex.XB cmp addr32 cmpsb pop cmp out (bad) movsb rex.WRXB popfq sarl lock xchg mov imul sbb out pushq (bad) mov sub addr32 sbbl and sub decl fsubrl push and push jne in cmpsl fcom adc mov pop jge sub (bad) je adc (bad) (bad) cmovae (bad) movb repz retq or or rex.WR gs pop mov rex.RXB and jmpq movsb fbstp pop (bad) retq fcompl (bad) pushfq movabs push jae rex.WRB lret ficoml xor add fdivrs push rex.WB jl (bad) stos cmp movabs (bad) retq xchg pop mov pop jb rex.WRXB (bad) pushq xchg push adc push stos mov popfq mov pop or rsm scas mov mov mov rex.WB cmp lret fsts xchg jge ds hlt sbb rex.X rex.WB lock icebp push or sbb lods add (bad) rex.WX mov (bad) mov rex.WB xor cmp lods add callq sbb movabs push enterq subl fstpt (bad) callq sbb (bad) mov pushq sbb mov adc cmp sarl and (bad) rex.WB rorl in (bad) (bad) xchg (bad) or rex.WB xchg in loopne in (bad) stos mov xor push sub or jge loop sbb jae je sahf test pop (bad) mov wbinvd (bad) loop fcoml adc out jg rex.WB imul (bad) icebp rex.X or nop (bad) lahf cmp rex.WB (bad) (bad) (bad) int push movabs loope push fidivr mov cwtl mov rex.X lods rex.WB cltd outsb adc cmp rex.RX rex rex.RXB xor fmul push mov adc jae cmpsb mov or (bad) callq fdiv add lods push cwtl hlt rex.WRB mov retq movsb pushfq sub cmp jnp cli pop cmp roll callq rex.WB (bad) or (bad) push (bad) mov pop mov rex.WB (bad) cmp mov clc clc rex.XB rex.WB mov xor push sub rex.WX rex.WB add (bad) cmp repz rex.RX rex.WRB rex rex.WR in mov (bad) scas and (bad) insl fs (bad) iret test loope adc (bad) (bad) xchg adc scas cwtl rex.XB and (bad) sbb rcrl push rex.WRB rex.WB mov jne xor enterq (bad) (bad) pop (bad) adcl movabs cmp rex.B fs xchg (bad) and pop pop rex.WB or mulb pop rex.RXB mov (bad) cmp jns std int pop xor rex.WB sbb xchg adc scas cmpsb addr32 callq (bad) jno and add (bad) (bad) fcmovu addr32 mov or fwait push rex.WB repz movsb adc pop jb pop mov repz retq (bad) xchg (bad) mov or mov mov xor and movslq rcll outsl rex.WB (bad) ss push rex.RX pop movabs cmp mov mov cli pop adc test nop imul retq sub rex.WXB push stc rex.B jno je jmpq and ficoml rex.WRX rex.RB cmp pop roll adc ja stc int xchg scas mov imul xor jnp fcoml push push and (bad) out xor and callq xor rex.WRB jae pushq pop xor test adc int (bad) jg rex.WR ja data16 or jle clc mov jg outsb movslq jge and adc loope mov add sahf lahf retq cmp pop sub jo xlat mov sbb mov (bad) repnz insb movabs fbld lret jmp jnp enterq adc (bad) movabs xchg nop jnp fdivr mov sub and mov pushq cs (bad) push adc mov mov (bad) and test fs stc addr32 (bad) push rex.WR es and lods push xchg rex.WXB mov jmpq insl sub sbb pop std movsb jbe or vpor rorl ja jne sub test push push cmp add (bad) callq mov add (bad) enterq rex.RXB lock pushq xchg adcq repnz fsub xchg adc jns cmc (bad) es or (bad) jle fsubrl cmpsl insb and (bad) (bad) fdivrp or mov enterq sub cmp adc jg movsb (bad) lret test rcrb rex mov scas (bad) movabs push rex.RXB pushq ja xor je int3 and jl mov fs (bad) jne sbb adc mov jns add xor imul (bad) add pop iret imul sub mov and or xor mov mov jg cli fistpll rex.WR (bad) test mov (bad) and hlt nop mov rex.WR (bad) repz callq and or rex.WR fucomp fldcw mov rex.W (bad) rex.W (bad) test jo (bad) push (bad) cmp stos jne test stos mov pushq retq insb xchg (bad) pop pop xchg pop and fwait pop (bad) or mov mov enterq scas fscale adc push mov mov sub gs loope pushfq mull (bad) (bad) fdiv and (bad) add (bad) mov imul sub cmp add (bad) jno xor (bad) add rex.R out jnp mov movslq rex.RXB sub jae sub gs mov adcl (bad) (bad) (bad) fidiv out (bad) in (bad) xor pop or rex.RX pop and incl rex.RB fnstcw or adc pop push sarl iret or (bad) std mov push js pushq test cmp sub jnp out sbb sub add (bad) sbb stos jp jae outsb jge xor mov or adc vdivpd xchg xor jmp jae mov rex.XB cmpsl jae out lock and add pop rex.X test jle (bad) mov push sbb xor lret xchg sub rex.WB cmp movabs cmp scas shrb sub cld out movabs rex.WB xchg cmp xor and iret (bad) sub scas rex.WXB cmp rex.WRXB lock (bad) push jle int3 sub or scas push (bad) movabs push lods rex.B ss repnz jo push mov lahf movslq gs rex.WRXB xchg scas jne cli rex.WB scas outsb xor pushq iret rex.WRB cmpsb (bad) sbb sub rex.WB and or sbb jmp add sbb push cld push and sub or push addl lods jrcxz adc pushq in push push xchg pop (bad) rex.XB rex.WRX mov in jrcxz cmp or (bad) mov jae (bad) sbb push pushfq rex.WB sahf rex.RX xor rex.WB or xchg mov sub mov cli mov rex.X rep rex.WB test sub and xchg fildl mov xor (bad) rex.WB and rex.WB mov sti jge shrl sbb xchg callq (bad) xchg ss or retq pop ror or gs rex.WB and xor (bad) enterq cmp ds mov (bad) (bad) fsubr sub pop rex.WB nop rex.RX add cli or (bad) or rex.X repz adc xor rex.W in or rex.WB or shrl mov push pop stos outsl gs orb pop (bad) (bad) and stos rex.WB movslq lods sbb rex.WB (bad) sbbl push (bad) js mov (bad) jmpq movabs fwait mov push sbb xor or (bad) out cmp mov (bad) addr32 cmc cltd jns xchg adc rex.WB (bad) xchg pop lock (bad) loopne or rex.WB jl fistpll sarl (bad) test out movsl rex.WR sar xchg fnstsw mov data16 and callq pop mov imul jp xchg (bad) cmc (bad) es cmp rex.W rex.R rex movabs rex.RX (bad) and (bad) cli xor lret (bad) cmp jae sub repnz scas movslq jmpq push pop loope pop mov cmp sahf loopne scas sbb mov cmp stc pop sub in and rex.WRB ror jle out (bad) add (bad) loope mov sub scas fdivr popfq push cmc add rex.WB adcb sbb add in lock rcr rex.WB mov mov sbb shlb sbb leaveq stos imul xorl negb (bad) std mov (bad) and pop mov callq rex.RB mov (bad) (bad) mov iret adc rex.RXB xchg (bad) js fidivrl sbbb popfq stc sub pop adc hlt (bad) neg pop (bad) xor rex.WB (bad) int push js (bad) nop imul (bad) sahf loope out jp xor test sub pushfq rex.R rex.W fldenv xchg fimull insl cmp imul fwait or (bad) pop mov callq (bad) fisubl xchg rex.WB mov rex.WB jmpq mov mov xchg push int3 andl (bad) addr32 mov (bad) (bad) push movslq or pop rex.RXB xchg movsl add stos fldl2t or callq cmpsl rex.WRX loopne xchg (bad) fstl rcrb cmp mov rex xchg (bad) mov (bad) nop and xor rex.B rex.B and push (bad) (bad) adc vorpd jmp (bad) ja fcompl pop cmc adc rex.RX out and movabs add cld rex.WB rex.W lods cmp movabs cld cmpsl movabs sbb movabs rex.WB std (bad) and (bad) bnd xchg sahf push repz pushq sub movabs xchg rex.RXB mov rex.WB jb (bad) (bad) jne (bad) loope cmp xchg cltd fistpl adc adc sbb imull and pop push push movabs (bad) mov ss add rorl pop mov in pop rex.RX (bad) divb pop sti xor test (bad) cmp lock xor out pop pushq rex.WRXB (bad) push push int3 (bad) sub gs adc decl mov or fstps leaveq or jno pushq in pop insb mov sbbl sbbb movsb mov movsl loop popfq xchg or (bad) repz (bad) xlat mov xor jno adc mov ror pushfq mov sbb rex.B cmp hlt scas rex.WB cld xchg insb movabs rcll (bad) xor insb data16 pushfq and rex.B gs movabs test fwait pop out push lret xchg (bad) ffree rex.RB movabs loopne xchg es sub jge pushq push repz addr32 mov rex.WB adcl (bad) lea push movabs push mov mov retq sub rex.WB lret callq movabs std jmpq xchg in lock rex.RB jne sti imul jp push pop (bad) enterq rex.R movq iret (bad) (bad) pushfq rex.WB lods insl in ja cltd adc adc cs in fldenv in pop xchg xchg (bad) sub rex.WRXB imul (bad) mov xor rex.RX rex.WB lods sti (bad) scas mov (bad) rex.WB (bad) xor pushq repnz sbb loopne div lock push add shrl rex.WXB lret xchg push xor pop or rex.WRB mov pop loop xchg cld cwtl imulb sub hlt xchg and (bad) jp (bad) cmp retq add and sbb test lods rex.WB xchg mov callq (bad) iret cli movslq int lahf callq jno mov (bad) insl mov sub ss test rcrl sub rex.WB rex.WRXB repz pushq add flds mov and addr32 add sub fdivrs test enterq sub rex.B push (bad) sbb data16 jle sub jp out (bad) rex.WR fs xchg fbstp shrl pop mov (bad) rorb jbe scas (bad) pop jae jbe rex.B (bad) sti rex.R mov frstor rex.RX mov mov xchg adc push rex.WRX movsb stos fcmovbe fistpll negl pop xchg out rex.RX mov jg cwtl insl (bad) rex.WR mov sub and stos leaveq mull xchg or out test movslq push cwtl divl cmp rex.RB rex.W fprem1 imul rex.R ss adc (bad) pop mov pop leaveq movabs (bad) movabs rex.RB xchg negb addl (bad) movsl sbb pop mov stos test sub or pushq (bad) ss jmpq es or pop (bad) sbb cmp out (bad) sub movabs mov test sbb gs jb jmpq push sahf add pushfq mov fwait sbb jno std je mov (bad) fcoms rclb lret mov leaveq or and xor rex.WB push pop mov enterq (bad) outsl lock int push adc jge mov adc mov data16 outsl in stos rex.WX (bad) lret jno add cmp xor callq rex.WRX mov mov rex.R xchg cmpsb xchg jb xor int3 xchg (bad) (bad) add xor sub movsl enterq cmp int (bad) cmpsb xchg add addr32 sub out sub adc sub jmpq xchg push pushq pushq loope push (bad) mov rex.RB rex.XB (bad) pushfq and iret and rex.WR rex.RB rex.WB rex.WX or jo pushq in mov loop or cmp jne mov in movsl insb rex.X xchg mov pushq mul mov and (bad) fisubr (bad) movabs rex.WX rex.W xchg test ja jae mov (bad) loope adc movslq test fildll adc loope jbe xor fwait jae and xchg cmp out push jno jb cld callq mov mov pop cmp mov pop xchg fidiv or rex.WXB sbb ja cmc or test jbe jg test retq movabs push jo insl xchg iret push pushq lret iret fsubrs add (bad) mov rex.R or pop xor sbb jae xor or stos sub mov repz xchg (bad) nop movslq stos (bad) cwtl movabs test popfq and ss repnz lret rorb mov mov testl jnp insb rex.WR sub cmp es xor rex.WX imul xchg push jns jb sbb rex.WXB rorl mov xchg enterq lret lret jb add add adc cs rex mov in pop jrcxz (bad) cmpsb addr32 (bad) jl sub (bad) mov (bad) mov jge adc lock cmp (bad) rcll (bad) repz cmp rex.WX rex.WRX cmc mov (bad) enterq or mov cs outsb rcrb or pushq rex.WRXB pushfq jmpq insl test mov xor or rcrl shll xor mov jbe and mov rex.B pop lods rex.RX push movabs rex.XB rex.WRX shrd push mov xchg rex.WXB adc jmpq jae (bad) mov out fist je popfq mov movabs pop sub pushq sub jmpq add hlt cs iret xor std (bad) pop rex.RXB and or test callq sub pop xchg callq data16 mov (bad) fsubrs pop rex.RX cmpsb or ss push sub cmp mov fs jno adc xor cs push mov mov data16 lock pop sub (bad) adc cmp mov or and rex.RB xor jno cmovno mov cltd mov pushq rex.R sahf (bad) callq xor or mov and (bad) je pushq fimul loop and fldcw movd test pop xchg pop or out xchg loopne cmpl (bad) test (bad) adc rex.R fwait (bad) (bad) hlt (bad) jmp xchg (bad) repz pop sbb imul (bad) add sub or fistpll sub mov cmp mov jbe outsl js xor rex.W fwait stos mov rex.WR gs xor cs push or mov xchg rex.W rex.W (bad) vmovdqu jmpq (bad) sub test rex.WXB rex.WX sbb rex.WRXB (bad) mov stc xadd rex.W add shlb jns jl and subl sub scas enterq add jl lret retq mov in out add xor pop jle xor std mov mov add or out adc (bad) mov shll pop pop icebp fs mov adc ds clc (bad) (bad) mov outsl cmp or lahf or in xchg mov push (bad) leaveq push out cmp shrb icebp jrcxz jmpq rex.WRB repnz add (bad) psubusb (bad) rex.W pushfq cmp or rex.WX sub fnstenv (bad) xor adc ficom mov push pop push iret xchg add movabs and fbstp cli mov retq iret icebp out cmp in adc out adc jns (bad) fmuls rorl (bad) fist cld pop nop int icebp mov test fs push push cmp mov rex.WR lods push mov (bad) fs or add (bad) pop cmp sub (bad) mov fisttp (bad) add or lods jl mov je mov fisubl mov push (bad) addr32 sub push and (bad) sub add push loop cmp test outsb or sbb pop or cmp xchg testl xchg jo out xor in sub fwait adc jg popfq movslq sbb ds insl pushq in (bad) jne (bad) mov scas enterq movabs hlt cs rex.WRXB fs rex.WRB stc jbe xchg (bad) mov jns out mov callq and cmp mov sbb sub mov and cmovne xor rex.WX (bad) jrcxz (bad) out in callq (bad) pushq pop mov cs popfq push xor cmp cmp shrb sub pop pushq or jp mov subb pop loopne outsb cld xchg out fdivr and xor adc (bad) movabs or fstpt mov sub push fildll adc out mov push imul out sub mov sub and movslq lea (bad) rex.WRX repz movabs loop and popfq or mov mov push stos jle mov and jrcxz xchg (bad) fcomp mov rex.WRXB cld or nop xchg cmpsb loopne subb and add xor mov (bad) jrcxz sti ds rex.WX mov movsl mov xchg pop test out out xor jns add enterq pushq rex.XB (bad) (bad) test push or pop jne adc xchg movabs fdivr sbb cmpsl imul jp (bad) push add and mov ss mov xchg sbb jmpq mov lock out (bad) jbe sarl mov test cmc cld rex.WR mov push lahf cmp jo rex.WRX (bad) or fnstenv (bad) cld rex.WB jp fwait mov stos (bad) mov xor mov xchg out sub sbb jg imul pop mov subl addr32 sub movabs out jmpq jrcxz xorl add (bad) rex.WR test rex.WB rcr adc xor cwtl push scas mov out rex.RX sti repz pop rex.WB fadds enterq (bad) and out rex.WRB jbe xor jmpq rcrl ficom es cmp movabs (bad) fistpll jns rex.WB lock addr32 (bad) loope rex.WB out hlt jno js callq (bad) pop rex.WB movabs pop or insb add mov push movabs pop add repnz push xchg cmp pop pop mov lahf and rex.WB fwait sbb cmpsl rex.R rex.WB (bad) cmp std mov (bad) ficomp pop cltd movsb or rex.WR or fildl imul loop movabs int3 cmpsl rex.WB mov (bad) idivl mov rclb mov push cmp sub imul es xchg roll push jp jl lods rex.WB sbb xchg (bad) icebp rex.W and pushfq (bad) iret rex.WB cli sahf cmp enterq es adc lock lock sub pop sub rex.WB rclb lea or callq xchg sbb mov pop (bad) ds loop jl sbb movsl xchg rex.WB (bad) mov (bad) sbb fimull jmpq xchg cltd push int mov lret (bad) nop mov jmpq rex.WB (bad) (bad) adc or mov and loop adc (bad) push and xchg rex.WB xlat or xchg sub sti mov rex.WXB xchg (bad) rex.XB callq pop adc sub add pushq or rex.RX loop rex.WR (bad) repz (bad) rex.WRXB jmpq rex.WRB movsb push sbb in js es idivq cwtl (bad) movl movabs (bad) xor cld (bad) retq (bad) out pop push add int3 loopne lret movsl shll mov jb lock movabs rex.WB cld add mov in decl and adc mov sub cld sbb (bad) sub push sti rex.WR or (bad) in (bad) pop (bad) add pop (bad) movabs fdiv xor pushq mov mov stos jo jne rex.RXB movabs repnz jg and leaveq movabs jb and mov in pushfq adc push sub sub lods xor cmpsb rex.WB jle adc rex.WXB rex.WB add (bad) (bad) cli sub (bad) int3 (bad) (bad) mov lret mov rex.WB jmpq sbb pushq int movabs (bad) test je rex.B mov mov rex.WR rex.WXB ss mov or out repz cmp (bad) sub in rex.WRX pop rex.XB mov pop and push mov sub cmp or fnsave jbe xchg jne retq (bad) outsb andq cmovns sub nop mov jo test retq outsb or data16 xchg add jg xor retq cmp sbb std add fnstenv push jl pop (bad) retq adc iret jp fsubl pop in icebp pop fcomps sub cmc rex.WB jmpq imul mov loopne (bad) add test rex.WB push andb cli rex.RX mov retq fisttp insb jg pushq scas decb mov movsb movsb add stos cli cmpsl pushq pop icebp rex.WX incl cs sub imul xchg push (bad) fwait movabs jno mov push mov rex.R imul movslq adc sub jno in outsb xor adc fsubrs in es add test (bad) (bad) mov lret std loop sbb pop (bad) pop fisttp (bad) (bad) push shr cmp mov sub adc xor rex.RX gs es idivb gs movsb retq xchg or movslq (bad) jle sub sti addr32 or xor fild lock jmpq adc int negb xor movabs xor addr32 pushq outsb or and xchg jge cmp pushq jge or popfq rex.B add movsb sahf lock push scas cwtl (bad) (bad) addb cmc xor frstor adc (bad) lea push rex.R std (bad) mov sbb movsl (bad) and pop in out adc push rcrl jge lret xor xchg loop popfq or clc pushq sub sahf rex.WRX data16 rex.WRXB lahf (bad) cmp sarl repnz shr pop sbb jg cmp rex.WRB mov jo pop sub add popfq xor and movabs (bad) fdivr cmp (bad) outsl xchg (bad) (bad) add (bad) movslq xor shlb (bad) callq cmc sar popfq test jmpq sub incl pop mov ss mov (bad) rex.RXB cmpsl (bad) nop lock xchg loopne test movabs or cltd adc rex.WR leaveq pop add lret rex.WRB addr32 and fninit or mov (bad) rex.X addr32 iret rex.WX jrcxz push sub or mov fldcw xchg cmp test sbb fsub pop rex.WRB jo and movabs rolb movslq rorb push cmp cmp push rex.RX rex.RB rcrl and sbb sub push rex.WB (bad) int3 lods (bad) mov shr jns jae xchg test xchg out push pop rex.WB movsl (bad) icebp mov rex.RB pushq popfq pop hlt fisubr sub pop int scas rex.WRX jmpq (bad) (bad) adc rex.WB divb (bad) loop and ds mov (bad) pop (bad) leaveq rex.WRX cs jg and jmpq rex.WRB pushq rex.WB rex.RX (bad) or or mov pushq jns xchg sub (bad) mov and xor jg sub shl sbb (bad) cld fldcw (bad) cli (bad) clc clc push testb add (bad) stos rcrb pushq (bad) or (bad) shr cmp loope int3 mov movabs (bad) movsl cmpsb fwait test jne jle cmp movabs sub adc pop jne xchg sbb or pop iret std mov xor mov movsl (bad) rex.XB or mov rex.XB loopne fistp movabs (bad) sub (bad) (bad) movslq sub lret test enterq (bad) jb sub cmpsb (bad) rex xchg and out sub rex.WB or enterq rolb sub cwtl scas cmpsl sbb lock and mov lret rex.WB xlat mov imul add cld pop xor rex.B movabs rex.WRB rex.RXB in pop rcrq cs rex.WXB repz jrcxz rex jmpq (bad) mov xor rex.XB xchg mulb sbb (bad) add or jns icebp push jg js lret lods adc mov scas add or sub (bad) movslq and add rex.WXB rex.B es callq add and icebp outsl cmp or add out or (bad) jne movabs (bad) add data16 jns movabs xchg (bad) xor rex.WRXB loopne icebp lea cli rex.WB add cmpsb sub (bad) mov rex.WB mov rex.RXB add lret cwtl and mov xchg callq loope addr32 push icebp mov negl xlat push jbe psubd cmp es pop add rex.XB shrl fdivrl adc (bad) (bad) loope je (bad) insl rex.RB cs rex.WX (bad) mov movabs pop pushq mov xor (bad) or (bad) imul pop fldcw xchg add movslq rex.WB rex.WRXB xor mov add and (bad) iret pushq rex.WRB (bad) or sub and ss (bad) iret pop (bad) or (bad) or rex.WB cmp divb fild pop stos (bad) jno add rclb ja and (bad) out mov push jge and je outsb (bad) mov xor sbb sub mov lret jnp push mov enterq xchg movabs leaveq sbb movsl mov fistpll xchg rex.WRB rcrl rex.WX fidiv rex.RXB push imul fsub mov xchg jmpq fcomps insl retq (bad) jge xchg mov stc mov movabs lahf (bad) pop out xlat orl or and rex.RB ja lods int3 rex.WB cs sti xchg movsb movabs mov push mov movabs mov imul and es cmp in rex.WX rex.WB rex.WB rex.WRXB (bad) loopne (bad) iret xor mov rex.XB (bad) (bad) cmpsb rex.WB jae (bad) rex.WB ficomp mov test ja mov push insl cmc rex.WB mov mov test cmp insb int enterq pushfq and and jnp cmp es mov fldcw or in xchg rex.WB mov insb pop push pop cmp xchg fdivrl or lahf sbb fs rorl push (bad) movabs mov xchg (bad) rex.WB pop in rex.WB rex.X movabs fistpl insb fsub cmp xor rcrb rex.WB rex.WB adc movsl push jno push (bad) (bad) (bad) (bad) mov js rex.R repz rex.WB cmp fcoms (bad) push enterq rex.WB rex callq repz neg jnp cmc movsb add xor sub xchg add (bad) rex.W cli mov mov cld cmc cs gs xchg fsubrs push bswap rex.WB jp cmp jns callq pushq jg addb fs sub jbe rex.WRB ss rex.WR rex.WR or mov cmp adc adc movsl loop rex.RXB fisttpl or xchg (bad) and fadd jbe pop rex.WX lock push addr32 sub adc insl rex.WX rex.WXB callq callq add int3 xchg shl rex.WB mov pushq pop (bad) xor sub jno rex.X retq cs rcrl rclb cwtl int sub divb jne xchg and rex.WXB test or fisttp movsl sub sbb js lret jnp mov std pop pop jns xchg xchg (bad) mov out (bad) (bad) lret add jae mov mov scas movabs mov (bad) rex.WB pop sti stos cmp int3 fidivl (bad) jns cs icebp movsl retq xor ja es push xor xor mov lock pop or es adc movabs add jrcxz rex.RB stc mov sub loopne push or fldenv rex.WB xchg (bad) sub xorl rex.WB rex.RXB (bad) pushq (bad) mov movslq xchg xor xchg adc xchg rex.WB add pushq movslq movabs lahf mov mov negb push pop sbb mov lret loope sbbl in mov pop sub mov push add lods or insl rex.RX movslq testb jle sbb (bad) movabs cmp add rex fcmovnb jl xchg pop movabs negb fdivs stos movsl mov (bad) test lock loopne jle rex.XB pop rex.WRB rex.WB mov (bad) scas test jnp jae iret (bad) fmull repnz pop loopne sahf out xor rex.WXB (bad) sub xor sti sbb pop lret jnp adc push push adc popfq push sub rex.X xor push cld xchg rcrb rex.WRB rex.R rex.WB imul fstps ss movabs sub retq (bad) nop sti rex.WRB int3 addr32 insb pop lods fisttp rex.WB rex.WRX data16 (bad) mov sarl sub sahf and shrb out xor mov sbbl rex.WB cld add rex.WB ds lods cmpsb xadd push in rex.WB stc pushfq mov ss imul sub rex.R rex.W hlt decl sti test sbb sub ja mov js (bad) sti cld and (bad) pop adc xchg xorb push jrcxz (bad) sub (bad) int callq and callq pushq movsl loop (bad) rex.WB shr (bad) pop test lock rex.WB rex.WXB and outsl js and mov xchg pushq pop jbe xchg jno callq rex.RB push add mov lods insb rex.WX jns shll or rex.WR es leaveq xor add pushfq or rex.XB lock push test decb rex.WB jb repz icebp gs in (bad) fcoml fwait callq gs movabs xor imul rex.WRX adc mov or cmp andl pop (bad) push (bad) rol (bad) xor cs mov and xor fisubr fcmovbe rex.XB movabs test (bad) add sahf imul rex.WB xchg jnp leaveq rex.WX out rex.WRXB pushq fisub shr frndint rex.WB cmc adc or fildll cmpb cmp hlt push jb adc xor add movabs rex.X cmpsl je test jb int3 cltd xchg scas add sub rex.WB loope rex.X jrcxz (bad) je in rex.RX retq fbld (bad) hlt xchg lock cs (bad) add or outsb movabs rex.R xor xchg (bad) loope jne rex.WB xchg (bad) jg scas push rex.WB js test clc xchg imul mov sti xchg sbb mov lods mov fisttp jbe (bad) movsl int3 rex.WXB mov out outsl adc mov xchg iret sbb rex.WR rex.B rex.WB jl (bad) loop push (bad) rex.WRB out stc andb add movabs pop (bad) cmpl test sub rex.WB test rex rex.R sub enterq movsl sub xor and stos and mov xor sub lea shll rex.B jbe pop adc sub shr loopne rex.WB mov cmp xchg (bad) sub sbb rex.X pushfq pop loopne jo (bad) lock (bad) rex.WB (bad) fisubl push or rex.X rex.RB xchg mov (bad) cmp sbb and insl cmp movslq (bad) cs (bad) je,pt outsb sub test fcoms fwait popfq xor pop rex.WB lods mov mov callq and rex.WB xor clc jp retq jns es jp sub rex.WB adc sub test push sub (bad) (bad) pop outsl stos data16 and sahf mov jne (bad) cmp xchg (bad) gs lods rex.WRX and or sub lods sub sbb jrcxz fsubs jns adc jle rex rex.WB insl add movsb rex.X jno add (bad) imul (bad) insl loop mov and and or lahf fs fwait popfq (bad) shrb jbe push out push mov adc adc repnz rex.WB mov sbb add lret rex.WB sbb mov jge (bad) (bad) mov iret rex.WB pop lods push adc cmpsb (bad) and cmp insb int and (bad) int3 adc mov mov mov lods mov mov pop in (bad) sub pushq callq callq xor add sub shll mov push test mov jmpq lret lock rex.WR push sti out sub sbb and cmpsl sarl rex.R rex.WB adc jge xor cmpsb xor retq adc (bad) pushq mov movsl scas pushq repz (bad) lret or (bad) iret cwtl movabs push and cmpsb repz jno or ss add loop xor or adc sbb cld jns rex.W outsb pushq mov lods cli mov xor jge sub mov cmc rex.X pushq out sbb rex.WR hlt jrcxz pop movsl (bad) add cmp and (bad) (bad) xor rex.WR leaveq jno and enterq xor cwtl jno fildll lret mov lods fdivrs or jnp jns jns std cmp std ss cs lret mov rex.WB in sbb test rex.WRXB ss (bad) (bad) rex.WB rex.RX in jmpq mov iret rex.WB int3 rex.RXB adc mov adc pop imul int3 and fstps cmc movsb loop rex.WB (bad) or cmp (bad) and test push mov rex.WR rex.WRX rex.W add add stos rex.WB leaveq add mov out (bad) incb addr32 cmp rex.X orl callq xor and xchg (bad) jb (bad) in rex.WR fildl xor cmp rex.WB iret push add fld rex.RX xchg mov rex.WXB lea mov clc outsl mov stc jne rex.B rcll mov and xor sbb and fist xchg out loope es and (bad) movabs movabs xor movabs sbb shrd retq (bad) (bad) cmp rex.WR (bad) sbb xchg mov leaveq adcq jle lret rex.B rex.WR pop cmpsb rex.RX leaveq mov fscale rex.WB push (bad) cmpsl repnz sub rex or fisttpl (bad) and in jbe lea insb jge mulb sub mov rex.XB callq pop jbe add xchg sub mov cld sbb retq rex rex.WXB mov jns rex.R rex.RXB rex.B rex.WB rex.WRXB xor pop movsb (bad) sbb loopne ljmp loope imul jne movsb insl rex.RXB (bad) out mov push movabs adc (bad) int movabs rex.R je rex.WXB nop cmp adc in rex.RB pop jb xor cmp pop add mov sub rex.WB lods xchg adc cmp rex.WR push pushq and (bad) gs sar idiv cmp lahf frstor cltd callq xchg rex.WB retq fildll rex.WRB rcll or jl cltd movabs xor push adc imul push test cmp xchg andb (bad) rex.WB xchg addr32 sbb retq js xchg movabs push gs jae mov lahf movsl andl int movsl mov retq xchg mov icebp (bad) hlt sub shr push retq (bad) pop mov fstpl xlat rex.WB imul mov xor xchg adc xchg xchg pop jmp outsl jae (bad) mov js movabs jae nop rex.WR cmpsb rex.WR repz rcll (bad) rex.WXB push movabs jns cmp fisub add cltd decl jae mov (bad) callq push fimul lods cmpsb lret test fidivl xchg retq rex.WXB pop lahf mov cmp or (bad) xchg insl jle rex.WB mov fcmovne adc sarb mulb sbb pop xor and icebp or jns rex.WB (bad) add (bad) jno pop in movabs rex.R (bad) adc xchg rex.W rex.WB add xchg outsb mov push push adc mov push jns jae pop cld adc push ss (bad) rex.WB movabs stc (bad) xor add outsb movabs int rex.B mov sub rex.WRB repnz outsb xor mov rex.WB idivl push rex.WB cmc out cmp jo pop or stos movabs leaveq and test imul test loope mov sub xchg fistl or mov movabs rclb sub jmp out rex.RXB pop cli (bad) add out gs or sbb cmp (bad) sub pushq jnp (bad) jp and (bad) int cmp ljmp stc sub pop stos xchg pop sbb test (bad) and movsl and (bad) jmp xchg xchg sub hlt mov jmpq mov ror jne divl pop xchg jrcxz (bad) testb rorb pushq mov nop mov movsb xchg xor (bad) movabs (bad) mov rex.WX adc movslq imul addb mov or test mov jge adc (bad) fs mov sub (bad) rex add imul iret sub (bad) sub xchg rex.W addr32 mov leaveq (bad) sbb outsb pushq rex.XB add sbb jne adc mov out rex.WXB (bad) shrb add adc adc pop movb xlat xchg in pushfq add or movslq (bad) cltd pop je (bad) callq std leaveq in sub rolb mov in (bad) pushq mov (bad) and jbe rex.W sub adc (bad) mov movslq jmpq jno sbb repnz int (bad) sub (bad) xor sub sbb out stos pop push mov sub outsl adc pop cmp fs or loop jp cltd leaveq mov cmp xor (bad) rex.WX rex.RX callq fsubs (bad) mov mov (bad) jo mov (bad) or sub cltd ja (bad) (bad) movabs (bad) imul mov xlat jnp xorl pop push in flds pop cmp outsb (bad) fs cmp pushq cmp xor push lret xor rex.RXB rex.X rex.WRXB sub cmpsb mov mov sti cmpsl ljmp push pop rex jg insl rex.WXB sbb rex.WB rorb callq ja push sahf (bad) cmc movabs mov sub jo and cmc repnz rex.WB cwtl (bad) rex.WB pushfq loope jnp and imul rex.WB xchg movslq (bad) lret cmp (bad) neg pushq add rex.WRX and fisttpll icebp rclb rex.WB enterq sub (bad) or sub jle out leaveq enterq jle sti xchg int clc mov jl push xchg xor sbb sbb rex.RXB std push add and jge out (bad) pop cmc cmpsl test rex.WB addb outsl mov pushq data16 or fimul pop cmpsl (bad) int3 lods (bad) rex.XB rex.W imul pop (bad) repz jae (bad) rex.WB jo rex.WB unpcklps pop incb shlb in lock fldcw fcmovne rex.WB out (bad) addr32 loop sti test mov rex.WB or xchg lret imul rex.RB pop stos xchg sub pushq je (bad) int rex.WRB ss adc jp rex.WRX (bad) and rex.WR jle sub test movabs add mov mov (bad) in mov insb rex.RB (bad) sub imul mov xor nop add jo xchg mov std sbb rex.WB rex.W (bad) (bad) mov scas sub rex.WB or sub push out jnp rex rex.RX data16 mov imul or pushq adc icebp push (bad) cmpsb movslq stos mov rex.W rex.WB movabs rex.WRXB mov (bad) outsl sub nop and or js rex.WB xchg test movsb or and (bad) jmp rex.WB je mov callq insl rex.WB sub jae movabs out mov outsw rex.WXB rex.WB push fwait repz (bad) sub xchg or mov imul divq xchg push (bad) mov rex.WB xor and add fs lods rex.WB stos xor and add repz mov rex.X (bad) (bad) pop sbb xor (bad) mov movsb adc leaveq rex (bad) movsl clc mov cld push (bad) imul sub rex.RB fbld lods sub loop jg and rex.XB mov xor and movsb pop notb sub mov adc push movabs cmp sar addr32 int rex.WRB lret jae (bad) es (bad) rex.WB lods retq xor jp movabs retq xor xchg cltd es leaveq and outsb rex.WRB mov es adc out pushq mov rex.RB pop pushq ficompl movabs loope (bad) and sub pushq (bad) mov rex.RXB rex.WB cwtl rcrl movabs jo cmp int cmc insb (bad) orl pop (bad) push loopne or cld pop jae mov cld xchg (bad) movabs fcoms int3 mov rex.RB (bad) callq int3 jne rex.WB cltd sbb insb rex.WB mov test mov rex.WB or jg (bad) rex.XB ds xchg test (bad) cmpsl ficompl mov sub sbb fwait out mov lock cmp out stc (bad) xor rex.W orl fimul rex.WB ss clc adc or retq xchg cmc (bad) rex.WB movabs nop cmp imul rolb shlb out pushq xchg rex.WRXB mov rex.WB xchg out cmp sbb xchg rex.X sti push movl (bad) (bad) or callq leaveq (bad) outsb sbb push insl iret movabs jge jmpq and or pop repz add jnp (bad) loopne rex.WXB rex.B cli rex.WB retq clc (bad) icebp movabs push vmovntpd outsb rex.WR test rex.WRB nop je xchg loop (bad) in rex.WB sti sub shrb lock fidiv ror pop rex.WB fwait pop test sub js (bad) rex.WB in cmp adcb insl (bad) rex.WB (bad) and jrcxz mov idiv (bad) repnz pop rex.WB pushfq push sbb or mov mov xor leaveq rex.WB adc mov mov xchg push sar imul push mov jp cmpsb cmp movsb and outsl rex.WB addr32 mov setp (bad) movabs rex.RXB cmpsq pushq xor rex.WB iret sti lock rcl idivb sbb callq rex imul or ficomp repz or mov and nop imul cltd out or adc xchg cmpsb pop (bad) repz iret fsubrs xor sub mov rex.X xor pop jnp add mov xchg mov out xor cmpsl rex.WRXB insl lahf xor movsl lods test scas xchg imul rex.WRX test lahf rex.X gs xor sahf movsl fdivs out callq mov sub std sub sub sub clc int std (bad) (bad) rex.WRB int3 (bad) std movsb adc fcmovu pop movabs pop andl sub rorb movslq and lret rex.RXB cmpsb add rcr or cwtl mov out jp imul sub mov lods (bad) lods rex.WR pop pop outsb add xor pushq push js movabs or (bad) cmpsb hlt (bad) mov stos adc xchg clc repz xchg imul mov mov mov nop leaveq ss stos and hlt pop gs outsb jno adc and xchg insb (bad) (bad) cmpl insl mov int push cltd sbb test pop sbb push cli mov movsb (bad) (bad) xchg cmp pushq and mov jbe out leaveq int3 adc js cmp jp add (bad) mov es (bad) iret cli pop (bad) fstpl scas mov mov cmp pop movabs mov mov stc rcll and rex.WB (bad) mov sbb sub mov insl js xchg rex.WRXB cmp int3 mov loop movabs rex.WB or sbb xor leaveq adc add rex.RX rex.X rex.WRB sub ja sbb fmul cmpsl cmp pop (bad) mov repnz xchg insl rex.WX adc sub in xchg rcll and (bad) fisubl add xor (bad) retq fwait data16 stos (bad) callq push (bad) scas test xchg sbb mov pop add (bad) rex.WB mov mov mov pop test rex.WB xor add cmpsb and rex.WB rex.WR movsb repnz rex.WB push jl test (bad) jmp sub rex cmp test cmp cmpsl (bad) adc fldl (bad) clc imul (bad) outsl push jnp pop rex.WB jrcxz andl mov mov jp sbb jg pop mov sub idiv mov leaveq cmpl (bad) xor rex.W rex.WB add fadd rex.RB fild nop shlb sub test loop mov cmpsl adc je out (bad) sub int and int3 jmp rex.RB rex.WRXB es enterq imul test imul (bad) adcb pop sub cmp fwait sub lahf je sbb out jnp ficomp (bad) and xchg (bad) rex.W push adc movsb mov sbb jp push jmpq outsl popfq js je (bad) (bad) (bad) pushfq pop and movslq nop xchg rex.WB mov mov lret out cmp or icebp lahf jl cmp pop push fwait (bad) mov out sbb xchg adc and ds movabs mov jmp pop push imul clc sub mov adc jl movabs or or (bad) lock stos mov stos jge sub lahf int3 mov out push xchg add cmpsb mov cli rex.WB repnz imul mov mov or or adc and enterq cmpsl mov lret (bad) test pushq stc push rex.WXB mov (bad) incl mov (bad) jl repz push or fsubrs xlat rex.XB lea (bad) pop imul out push push mov pushq (bad) test pushq cmp and in (bad) (bad) mov adcl sbb leaveq popfq rex.WB sbb jge repz mov stos pop jb mov fist xchg push in xlat cs rex.WB jo out cmp add stos rex.WB rex.R rex.RXB adc push mov je xchg (bad) rex.WRB or (bad) and movabs data16 rex.WB lret je rex.XB (bad) ds push cs test in adc lahf rex.B (bad) lea out xchg lret and rex.WB sub pop push adc sbb popfq add rex.WB rex.WXB sbb jge add rex.WX mov mov cmpsl sarl sub xchg rex.WB rex.WRB xlat push (bad) cmp ror pop (bad) test pop push callq xor outsb (bad) in repnz (bad) mov rex.RB add add int3 push or test push movabs jl lods sbb rex.WB adc (bad) rex.WX rex.RX rex.WB xor xor in rex.RX rex.WRB (bad) movabs and adc cmp shrb iret mov push mov fimul rex.WB xor pop movabs xor rex.XB pop orl sub or and (bad) jo push and pushq add sub sub out (bad) push sub jbe iret mov mov movabs rex.WRB and xor push jp add movsl mov xor cmp xchg loope movslq mov (bad) in pop pop adc out callq jno mov scas xchg pop es lea hlt jp rex.WB jmp add pop mov rex.WB rex.WX or (bad) xchg callq sbb test cmpsl sub (bad) int rex.XB rex.W lods rex.RXB xchg clc push pop rex.RX sbb adc rex.WB sahf cmp rex.B xchg and fisub movabs rex.WXB jmpq cmp idivb rex.WB lret jnp jmpq rex.WB cmc mov jae rex.WB xchg pushq mov sbb rex.X repz rex.RXB (bad) pop and std xor (bad) mov out ljmp rorl clc outsl adc cld (bad) (bad) fnstcw fwait adc insl rex.WB popfq fisttp rol clc adc pop (bad) repnz fstps int cmp jmpq rex.WB rex.WRB cs callq xchg ja (bad) or sub nop (bad) and retq int3 scas xor xchg callq push lods out and cmpl or (bad) jb movsb pop xor and rex rex.X sub pop (bad) mov (bad) jl leaveq sub mov or fsubs (bad) sub add rex.W xchg lahf rorb jne (bad) mov mov iret rex.WB hlt (bad) movsb add jbe callq jo negl push (bad) adc out incl shll jno out xorps and sbb (bad) loope fisttpl in xchg callq jb pop rex.X push (bad) sub sub fmull movabs pop jmpq (bad) leaveq jnp idivb xchg mov rex.RXB add (bad) retq sub xchg mov pushq addr32 mov sti and divl movabs mov lahf test and (bad) jbe adc push mov sub cmp rcrl out rex.XB pop insl sbb stos rex.RX cs pop xchg (bad) cwtl rex.RB cmc or cmp or nop cmp mov fdivr push adc loope or jns push mov rcrb jae pushq es addr32 or jmpq pop sub rex.WXB rex.WR out mov or cmp (bad) movl insl scas sub pushq cltd movsb xchg add or or (bad) or pushfq cmp push jg callq mov test cmpsb add fcmovne mov imull cld sahf sarb (bad) lret mov rex.RX jo rex.WB leaveq test (bad) sub add shll rex.WRB out in jns movb jge and sub mov insb cmpsl push mov (bad) sub adc sub sbb (bad) andb pop out gs add mov out (bad) adc xor insb pushq sub stc fs mov insl cmp and mov stc (bad) out mov add (bad) pushq stos xor leaveq adc cmp rex.W rex.WRX push (bad) adc (bad) push or (bad) xor (bad) rex.WRB or movabs jno insl mov mov add std xlat mov pop sub sbb sub mov movslq sar out rex.WRXB rex.X mov jmp scas loope test cmp mov pop adc pop rex.B adc enterq cmp push movabs xchg (bad) sbb test sub imul sub push int (bad) jge out shr adc movsl (bad) fwait rex.WR jno jg pushfq sbb push (bad) (bad) sbb xor sub or jne adc pop movabs xchg int int3 retq pushq bnd cmpsb (bad) sub movsb test in js mov add cmp or add sub lods adc cltd (bad) sbb addr32 cli cmp or (bad) sub push pop (bad) retq (bad) iret retq cmpl sahf test xchg jrcxz repz sbb jbe mov out sub and push addl lahf mov add adc jge ss pop lea ljmp rex.RB fsubs repnz mov out add sahf adc imul pop rex.WB adc jl (bad) mov (bad) imul cld pushfq jns and repnz xchg jne xor hlt (bad) jns adc sub (bad) rex.W subb fwait mov mov rex.WR cmc xor adc or (bad) test (bad) pop callq xchg (bad) insl out pop or (bad) sub (bad) movabs fsubrl adc jno out xchg in (bad) xor (bad) pop andb mov addr32 pushq icebp rex.R mov ds (bad) push xchg addr32 mull mov xchg pushq sub sbb sar icebp and sar ja rex.R push (bad) icebp fs out movabs jae (bad) movsb fadds and hlt mov rex.WB jmp add adc fstps idivb jle xor jrcxz mov rex.WXB rex.RX rex.WB sbb loopne pop pushq sbb cwtl lret imul leaveq pop (bad) (bad) push cmpsl (bad) int and (bad) mov iret (bad) movslq (bad) mov rorb cltd rex cmp rex.WB jo xor rex.B pushfq rex.WB cwtl in (bad) shll jmpq (bad) jle mov add movsb jb ja rex rex.WB or movabs rex.WRXB rex.X lods (bad) sbb push rex.WB fnsave cli add (bad) fsubl cmp (bad) movabs movsl (bad) sub pushfq add sub ds rex.B (bad) mov rex.WB (bad) pop loopnel data16 rex.WB rex.WR mov adc icebp or rex.RXB jle jnp (bad) notl insb clc (bad) adc insb rex.WXB xchg test sarb movsl fcom sub fisubl rex.WB mov (bad) mov sub (bad) enterq xchg rex.WRXB (bad) gs sub sarl rex.WB std xchg fsubrp xchg add (bad) xor rex.WB lods pushfq mov rex.WXB jge sub movsl mov lock xchg sbb popfq (bad) retq or shlb (bad) jecxz iret cmpsb movabs (bad) or lret sbb jl rex.WB cmp jae sub rex.WB mov pop (bad) cs (bad) jrcxz rex.WXB rex.XB out adc cmp jmp insb repz movabs pop pushfq xor (bad) or fcoms out movsb int sub or mov pop sub mov rex.XB movabs (bad) decb test iret adc cmp xor (bad) lret hlt push pop sbb jbe push int mov (bad) or rcrb mov fcomps lods imul mov jb mov mov lods push sbb repnz out adc push pop mov adc push insl cmp jmpq fs rex.WB rex.X adc mov ficom jb pop ds (bad) movabs or nop sbb gs (bad) enterq rex.WR addr32 insl rex.W pop sub (bad) imul xchg ss stos xchg repz mov mov mov mov cmp in rex.W cltd stos cmpsl cli int3 cli rex.WXB rex.RX xor and add out sub shr enterq push jge fwait (bad) je mov and nop xor rex.XB rex.XB rex.RX insb (bad) movabs mov and loopne xchg fdiv adc adc test mov lods (bad) mov ds xchg sahf sub xor or scas sub mov hlt movslq xor mov mov pop mov jnp pop cltd (bad) stc sub lods (bad) xchg je jle rex pop (bad) mov sub test int3 (bad) rex.WR lahf adc (bad) xor or (bad) fsub cld (bad) lret iret lea leaveq jb mov cmp (bad) xor rex.RX addr32 outsb (bad) mov xor rex.WR sub pop fs addr32 cmp cs jmpq jbe andl clc (bad) pop popfq (bad) nop testl sub je fwait stos retq (bad) imul lahf or and outsl cmpl mov sub fcmovnb pop pop enterq jmpq outsl notb sbb (bad) rex.RXB mov addl outsb or outsb add add rcrb icebp adc (bad) scas movabs scas rex.RXB imul insl (bad) decl imul ja sub jmpq mov int vcvtpd2psx in rex.WB (bad) icebp pushq movabs fwait loope rex.WB mov (bad) (bad) pop loop and sti rex.WB or (bad) jb rex.WB sbb adc xor or loopne adc or cmp insb mov xchg movsl retq addb add push push xchg lods sub xchg xor rex.XB fwait jp fbld (bad) sub sub sahf cmp enterq xchg cmpsb pushq (bad) or mov push xor ss or pushfq xor outsl hlt push rex.W jns test (bad) pushq rex.RB push cmc and xchg or mov movabs stos rex.WR int cmp scas leaveq pushfq xchg rex.WB mov push and sub xor ficom sub (bad) push fwait xor add cli hlt (bad) sbb rex.WB sub mov rex.WB fsubrl pop jge (bad) rex.RX cmpsb jl mov gs adc cs push ds pop rex.WB out or test test rex.WB lock (bad) cli (bad) jb (bad) (bad) rex.WB loopne icebp mov jns cmp popfq movsl or jl rex.WB test xor (bad) lods xlat in out rex.WB in (bad) jg adc rex.WRB fldl xchg je jrcxz rex.WB rex.WRX rex.WXB mov rorl (bad) mov (bad) (bad) js or outsl (bad) ja fwait mov add rex.XB xchg leaveq (bad) xchg outsl out pop pop push (bad) (bad) rex.WRB (bad) (bad) and cs movabs cmpl addr32 lock xor cli rex.WB pushfq out callq jns jne icebp ss notb imul adc clc fucomp or xchg (bad) out add orq xor mov push or pop rex.WB xor xchg test and lods ss xor and (bad) (bad) push pop pop push add xor out dec rex.WRX test xchg and test xchg (bad) pushq in movabs jo addr32 (bad) enterq loope xchg rex.WB rex.WRB adc or adc (bad) cmp rex.WB lock pop movabs loope cmpsb xor mov stc xchg add rex.WXB (bad) mov rex.RX outsl stc sub lahf sub movabs rex.WRB mov callq frstor fistl or (bad) callq rex.WB adc (bad) or std mov sbb jo mov pop and mov push fistl add int3 cmp imul jnp jg jle,pt add xchg sbb loop rex.WB mov jg fsts rex.WB cmp adc pop and cltd jmp iret xchg or or (bad) (bad) (bad) and jl sub mov xchg xor jp testl test fs mull pop jmp adc fstl or sub pushfq xor imul or rex.RX pop vminps add pop add sbb xchg mov mov push jbe loope push jmp mov lods leaveq and cld and cmc add outsl sub pushfq popfq cmp imull push cmc and loop sub in xchg retq adc cwtl mov sub test sub gs rex.WR cltd rex.RXB rex.RB sbb jns pop rex.RXB or xchg sub clc sub int3 jb mov xchg sbb outsb rcrb xchg cs mov cs or add (bad) out insb enterq push mov lods mov popfq sub mov xchg adc rex.WB fadds sbb rex.WB mov shrb rex.WB mov rex.WRB lret iret mov (bad) pushq push movabs mov add push cmp in movsl sahf adc (bad) (bad) (bad) push push mov mov icebp or or cmp sbb (bad) (bad) enterq adcl push xchg mov mov loopne jmpq rcll (bad) pop fmuls sub stos lock mov jg cmp jge sbb rorl cmp cltd jae push (bad) and cmp sbb (bad) xchg retq (bad) lret sub (bad) lret rex.RX movsb mov je push cmovns addl fs or rex.WB sbb xor movabs callq flds (bad) (bad) nop mov movabs and cmp test in mov (bad) push pushq (bad) (bad) (bad) (bad) retq rex.WRB test or sub rex.RX and loope out xor lock and pushq lret (bad) rex.RX movabs outsl cmp (bad) lea mov mov cmp jbe movsb ss mov decl scas jae xor jmp rex.WRB rex.W xchg cmc mov fidivl scas popfq rex.WB rex fcoms sub cmp rex.WB mov sub (bad) out mov push data16 (bad) callq sbb rex.WB mov (bad) (bad) (bad) sbb or jb test fimul test jo cmpl clc loope mov movabs push pop jp rex.WR pop icebp xchg (bad) sub mov and rex.R pushq push pop sbb rex in and (bad) xchg rex.WB rex.W (bad) rex.WXB loope rex.WB jb,pn rex.WB js adc (bad) and es add (bad) rex.WB add mov stc cwtl or movabs scas data16 hlt rorb xchg push and ss callq lahf cltd rex.WB addr32 rex.WR nop rex.XB mov (bad) xchg test rex.RXB sbb mov (bad) mov or push (bad) mov (bad) sbb callq (bad) (bad) es callq imul (bad) pop mov sbb (bad) mov pushq jno or mov and rex.WX int3 (bad) rex.WB retq mov lea rex.RXB fsubl (bad) imul rex.WR push adc push (bad) (bad) (bad) rex.W or (bad) imul add movabs sub push push pop xlat sbbb xor (bad) out int callq push rex.RX callq cmpsl jnp std rex.WRX movsl or cmp cmp outsb or rex.WB mov (bad) mov or sbb out jae cltd pop mov gs jmp callq outsb mov mov repz push pop retq lea sub movsl (bad) add or leaveq mov (bad) push fwait nop pop sbb lock sub orl rex.WX gs sub addr32 callq xchg rex.WRXB cltd rex.WRXB int3 add movslq lret (bad) (bad) js imul jns in or jne mov sbb (bad) and hlt callq (bad) sub movabs (bad) insl fwait (bad) movabs push cmpb pop rex.WB hlt (bad) ja and (bad) popq fcoms and in (bad) xchg jmp sub mov jbe push jns jp addr32 lahf rcrb (bad) fldl movslq mov callq js push clc xchg push mov sahf rex.WX xor ss add rex.WB movb fmull cld out (bad) mov leaveq push out gs movslq xor push retq insb addr32 lret xor sbb callq lcall rex.WB ds cmc cli sahf (bad) rex.XB rex.WB xorl or je or or jo and in adc rex.WB cli (bad) rex.WRB repnz fwait int3 jne pushq pushfq ficom adc scas out pop lea add lcall loope rex.WB retq pop mov (bad) or adc ja incb mov and fs jo or rex.WRXB push cmp out mov mov repz add xor loopne jns (bad) rex.WRXB mov mov mov pop cltd xor cli (bad) insl test push icebp sub (bad) ficom imul jrcxz rex.WX xor sbb out push xor rex.WB (bad) mov xor lahf and sub fnsave rex.WB pop mov callq (bad) adc movabs (bad) rex.WB in mov (bad) addr32 ficomp rex.WRXB rex.WXB mov rex.WB ss xor (bad) and outsl mov in icebp jmp pop addr32 xor movabs insb (bad) adc movabs rex.WB movsb cli rex.X sub pop adcl rex.WXB lods add cmp (bad) xor (bad) mov fdivrl mov jb mov (bad) shl outsl sti rex.RB stos xchg (bad) jmpq cmp sub pop jp adc mov loope repnz fistl sub movslq lret or callq add pop stos insl rex.WB mov cmp or int3 pop push mov rex.WB repnz (bad) jbe (bad) out shll xor pop mov add mov out fcom (bad) jns push xor sbb jl rex.WB in shll jb xor loop rex.WRXB test jnp and fsub (bad) (bad) cmp jmpq mov fcomi stos (bad) int adc lahf decb ja rex.WR and flds mov rex.WB sub jle jb mov rorl mov out xchg callq movabs sub rex.RX outsl jge add andl icebp add rorb mov loopne rex.WX sbb rex.W push loopne shr sub mov enterq sbb mov popfq mov out mov xchg push mov and stc pop rex.WX mov jno xlat ror lahf cs lea hlt outsb (bad) mov rclb mov sub xorl imul sahf rex.WRXB sub (bad) enterq or xchg (bad) movabs jns (bad) (bad) mov jmp outsb shr cmp sbb stos callq mov or loope outsb rex rex.B pop adc rex.WB and push rex.XB adc shl movsl lret (bad) mov movabs cld xchg in rex.WB mov (bad) retq add je (bad) cwtl gs add in push fiaddl fisttp test adc (bad) mov or std (bad) (bad) sbb (bad) and (bad) jnp movabs loop je mov ror cwtl or xchg leaveq push mov rex.WB cmp pushq unpckhps mov (bad) sub movabs imul mov mov adc jns lret lcall (bad) push xor mov rex.XB sbb and es (bad) pop pop nop xor (bad) push imulb and rex.B lock cmp sbb fistp loopne rex.XB addr32 sbb and cmp rex.WB rex.RXB mov stos movabs loop rex.RX lock and xor retq imul stc push cli movsl jnp (bad) (bad) notb push cmc jmp pop xchg loope nop (bad) clc rex.WB pop sbb hlt and imul sbb cmp loop mov mov rex.RX clc rex.WB out (bad) (bad) adc rolb xchg mov rex.RB rex.WRB (bad) movslq xchg in pop (bad) jne and int3 (bad) out rcrb lods in mov push xor (bad) (bad) outsl fbstp (bad) enterq and pop rolb sbb mov add (bad) loop movsb and (bad) movabs ja mov push fimull outsl movabs xchg loopne (bad) rcr es add repnz mov lods sbb push rex.WRB loope rolq movabs jnp rex.B ja sbb rex.RB and xchg stos (bad) mov mov lret enterq pop adc callq iret lea sbb lock sbb (bad) or add mov popfq subl imul jns out fcoms rex.WRX in pop (bad) loope rex.WB sarb jp pop rex.WR rex.B xchg mov movabs jne pushq rex.WB fs mov and (bad) shll rex.WB sar movabs (bad) sbb rex.RXB addr32 (bad) jb or cmp data16 fwait cmp mov mull sti (bad) sbb jg or rex cmp (bad) cmp outsb rcr fisttpll add rex.B adc push rex.WB rex.WRX pop insb mov sbb push jne xchg and and out rex.RXB bnd ss std (bad) callq adc rex.WRX test test cmpl rex.RXB rex add movsl (bad) rex.WX mov cmpl pushq sahf sub out rex.RB callq out (bad) rex.WXB (bad) cli (bad) adc es sub rex.WX pop xchg xchg jmpq fs cmp incl xchg out mov pushq sub jnp rex.W fsubrl repnz in sub add mov scas rex.W rex.WB adc repnz xchg sub jns (bad) (bad) mov (bad) mov insl jne test es (bad) rex.X and sbb sbb rex.WB lock lret ja idivb xor mov adc int3 movabs int popfq sub imul test stos jmp cli test (bad) int rex.WB negb or rex.WB (bad) jrcxz sub xchg sbb fndisi(8087 pop movabs iret (bad) xor jne repnz fidivl (bad) pop in shlb sbb jno ficomp rclb add or rex.W sbb lret (bad) (bad) jnp movabs cli sbb pushfq sub sbb jno retq fldt cmp loop rex.WB ds pop movsb iret in (bad) (bad) xchg (bad) rex.WX jg icebp repz movb or mov std addl fstpt rex.WB rex.XB mov (bad) xor pop mov repnz (bad) and sub push adc data16 sub add (bad) in (bad) loopne cmp movsb movabs jno mov (bad) rex.WB cmp rex.WB and faddl xchg jno callq retq rex.WRB rex.R and pop stos test xchg divb jle fcoml push (bad) out gs divl xchg sarb rex.RXB callq pop mov loop pop rolb push mov test sbb xchg test jg xchg (bad) rex.X adc cmpsb ficoml retq adcl and (bad) adc mov sahf rex.WX out adc shll sub jns cmp sbbb repnz rex.WX adc rex.RX sbbl jne mov pop repnz rorb in pop pop out mov es callq jns cmp sub mov (bad) rex.WB cld add fstpl jp (bad) jnp rex.WB (bad) (bad) movsb jae adc retq loopne cmc rex.WB fwait and jo in lods xchg push stos mov mov adc add rex.WB xor (bad) data16 rex.WB sub jb mov pop in lret or adcb sub movabs loop out sbb mov lods mov cwtl push (bad) rex.WB js pop rex.X mov xchg int3 rex.WB rex.WRB rex.WXB rcrl xchg mov add in mov add decb (bad) (bad) fisubl sbb movabs int3 sbb rex.WB push leaveq retq push sbb pushq (bad) cmp xchg mov pushq or movabs fldcw pop retq cwtl out mov and sub sti pop rex.RB (bad) mov jle int3 test sbb jmpq mov repz cmc lea xor sahf callq vandnps (bad) clc rex.WB rex.XB pop sub test lret rex.WB sbb push (bad) (bad) sub rorb (bad) and repnz rex.WB (bad) (bad) add add shl mov and movabs adc xor retq movsl stos (bad) test (bad) jnp xor stos (bad) cld and push addr32 std push add or (bad) sti and xchg mov pop mov loop rex.WB (bad) sbb xchg cmp mov jl jrcxz pop out jb lret and rex.WB sbb or (bad) leaveq test and rex.WRB out loop mov rex.XB ds (bad) cs rorb mov xchg rex.RB sarq add sbb rex.WXB rex.WB adc test xchg jnp xchg pushq pop sbb xor rex.RX test movabs in rex.B callq or adc mov add or jb or insb pop stos (bad) cwtl and adc rex.WRB rex.X mov push movsl retq xchg cltd rex.WB sub pop sub enterq jrcxz xor add popfq rex.WB mov add fwait movsl sub push xchg (bad) sbb fsubs in mov or pop cmpsb out test rex.W insl lods rex.WRB fdivrl (bad) rex.XB rex.R sub loopne mov rclb rex.WB retq push icebp add pop rex.WB fdivrl rex.WB test andb vunpckhpd xchg rcrl jnp jb pop ja fsts (bad) lea (bad) or sub (bad) adc jrcxz xchg mov and lea cmp adc (bad) adc stos sub mov vpaddd sbb enterq sbb push rex.WRXB (bad) test enterq mov rex.WB cs xchg sbb mov mov scas lods (bad) jbe rex.WB rol xchg and pushq fdiv pushq cmp rex.WB (bad) jns push or fxch es pushfq xchg movabs mov movabs (bad) mov out adc (bad) rex.WB retq jae (bad) cmp in add pop inc fsubp in xchg pop (bad) pop movsb sub cs callq flds imul (bad) rex.WB xchg mov rex.B rex.WXB rex.WRB stos movabs jrcxz mov rex.WRB mov mov and scas fwait rex.WB fstpl (bad) mov fnstenv movslq test rex pop hlt rex.WRB push callq xor (bad) xchg flds movb fdivs lods xor jge pop psubb mov xor movabs rex.WRX and jbe out sbb cmovnp popfq rex.WB sub sahf cwtl mov sub test add xchg rex.WRB mov rex.R rex.WB jnp cmp rex.WB adc (bad) (bad) std cmp push rex.WB add rex.X xchg cli rex.WB iret mov outsb rex rex.WB movsl sbb notl cld rex.WB jne ds mov outsl (bad) (bad) xor cmp sti loope rex.RB xchg (bad) sub leaveq ja rex.WB rex.WRXB xchg addl mov sbb cmc pushq (bad) pushq add sti idivb rex.WB movsl packssdw xchg movabs (bad) push movsl js scas (bad) in leaveq mov xchg jno mov or jp jnp cmp out mov sbb mov (bad) mov (bad) push add in je push pavgw mov int test (bad) movabs rex.XB movabs xchg pop movsl push (bad) cmpl imul addr32 mov mov test rex.WB cld pop mov repz addr32 push rex.XB sub rex.WB shrl insl callq je xor insb (bad) (bad) clc or movsb (bad) in fiadd (bad) stos negl adc in lods movsb fisubrl addl mov sub rex.XB (bad) callq mov iret addl test fidivrl jo cmp fbld lods retq xchg mov fcoml sarb or or mull rex popfq insb jp in mov out cmpsb push (bad) adc retw movslq jp xor jb test out rex.WXB callq mov je movslq sub pushfq cmovs mov mov rex.WRB mov rex.WRX pop cmpsl (bad) enterq xchg cwtl pop push mov pushq xchg (bad) imul test lret or pushq cmpsl sub movabs mov sbbb rex.RB rex.X stos rex.X sub rex.RXB jge mov mov (bad) mov jns or and data16 (bad) (bad) lahf enterq sub (bad) adc cmp (bad) or stos cwtl sub movabs retq cli push sub xchg sub addr32 jrcxz test xchg cs mov push or pop rex.W xchg icebp rex.RB rex.XB movslq push sbb scas (bad) jmpq cli mov jge rex.WRX pop push fidivrl push sub popfq sub jae rcll (bad) jb and jge adc or mov int adc sbb jl add push stos movsl movabs cmp mov cld pushq fisttpl rex.WRB lret clc stc gs rex.X adc cwtl rex.WB test sbb add jle mov movb or out sbb push pushq mov xor xchg push movsl mov push mov push (bad) add rcrb movabs push adc cmp sub adc mov rorw fwait jo and lods (bad) retq addr32 rex.WB sbbl pushq (bad) mov xor (bad) pop sub movabs adc xor lret mov (bad) fisub js (bad) sub mov sub push and je rcrl rex.WRXB rex.WB and jmpq rex.WB notb and and fs (bad) mov jmpq pop movsl and imul sub je xchg pop mov lret test rolb push and pushfq pop rex.WB mov xchg cmpsb bswap rex.W gs (bad) jne cmp out jge movsl pop sbb sub xor (bad) cwtl or ss push rex.RXB mov (bad) or rex.X sbb jmpq test lret rex.WB rex.WR and (bad) (bad) add add or sub divl jle xlat sbb sbb add mov mov (bad) mov icebp mov rex.WB (bad) pop imull rex.W ja cmpsl pop (bad) rex.WRB cs stos mov imulb std xor cmp nop xchg imul imul fs xor mov sub sub or lods jg movabs fsts movsb rex.WR enterq (bad) popfq or test fisubl push movsl mov (bad) mov (bad) movsb ss data16 fwait ror mov pop repnz (bad) fildl sub (bad) xor push push mov xor fcompp pushq fmull push sub push rex.X std xor jae inc sbb jns sahf gs add rcrb divl (bad) lret loope (bad) mov std pop retq out pushq pushq push jnp orb cmp mov (bad) sub cwtl and hlt mov gs and movabs sbb jno sbb rex.WRX addr32 mov ja test sub fild jno jne (bad) insl pop (bad) (bad) xchg rex.RXB (bad) addr32 cmpsb jp xlat rex cmc (bad) (bad) data16 gs rex.X sti push xchg mov rex.X rex.RXB mov mov cmp retq push xchg rex.RX test and rex.WRB adc lods idivl sub loope xchg rex.XB rex.RX xchg add sbb lret mov add adc rex.R rex.RB sub rex.W rex.RB enterq (bad) and jbe rex.WRXB test (bad) push push in vpcmpeqd stos cmovg fcmovb pop fsubrs (bad) mov jmp sub ffree pop rex.WX pop (bad) fnstenv clc rolb adc sbb xor sub sbb xchg (bad) mov callq mov and (bad) rex.RX (bad) divl icebp rex xlat cmp mov movsl (bad) pushfq (bad) (bad) rex.WRXB mov movslq jae subl (bad) loopne add rex.R rex.RX in pushq lock fcoms nop adc rex.WRXB (bad) xor (bad) xchg popfq push (bad) (bad) jne retq fnstcw pop xchg int sbb gs movl push movabs (bad) rex.WB loop int push outsl add pop fstpl xchg (bad) cltd callq xor or (bad) rex.W pushfq add (bad) mov mov out andl cmc rex.WRB adc rex.WB pop idivb mov rex.WXB xchg (bad) movslq cld mov (bad) test retq (bad) pushq loope mov cltd sbb (bad) rex.WB cmp insb cwtl mov rex.WR push rex.WB cs test fwait std rex.WB jge or (bad) in rex.X stos fdivrs cltd fistl or pushq jl (bad) int sarb add rex.R or push lret cltd lahf rex.WB fnstcw pop shlb rex.WB test (bad) icebp rex.WB pop lret cmp push pop sub fsubl ficoml movslq (bad) rex.WB or rex.WB mov outsl (bad) loopne (bad) rex.WB outsb sbb (bad) push xor pop test insl test rex.WB (bad) loopne fistpll (bad) (bad) add adc rex.WX hlt gs in rex.RB sbb rex.WB outsb or lret hlt sahf scas pushq mov cmp rex.WRXB rex.WB mov sub or pop lret rex.RX sub (bad) pushq pushq sti push test mov mov cmp mov pop rex.WB fwait (bad) mov stc adc fisubr xor mov je pop rex.XB rorb clc movsl (bad) pop rclb jb (bad) (bad) xor rex mov or jp ds clc jmp (bad) (bad) int or and and scas test jg sahf rex.WRXB mov rex.WB rex.R orl and roll or mov jnp adcb sbb test and rex.WRB (bad) rex.RX imul adcb gs jno or (bad) rex.WB es adc (bad) outsb sub lret stc rorl xchg rex.RX mov pop add clc jle jge pop jmp rex.WB jrcxz (bad) int3 rex.WX or (bad) out out push rex add fsubs out sbb (bad) jge loop iret rex.X cmc xchg jp sahf shrl lret rex.WB lods xor lahf jb (bad) (bad) sbb stos xchg callq mov rex.WXB xchg (bad) pop rex.WRB mov shlb mov rex.WB xchg xchg imul retq mov scas jb fucomi xor or lret rex.WRB repnz testl mov insl rex.WXB and add adc sbb and popfq callq stos mov mov push (bad) je jbe cmp out pop mov adc add pop cmpsl mov or adc cli rex.WB jno fbstp add je pop cmp (bad) movb cmp (bad) add (bad) or mov or mov rex.X xlat cli rex.WB cmp shlb test mov rex.WRB movabs or imul rex.RB rex.WB push fadds (bad) lods xor leaveq rex.WB (bad) repz add pop (bad) sub rex.WXB in callq cmp xchg sbb pop xor sbb or xchg sub adc out rclb jns add or (bad) push test rex.X fbld movabs rex.WB cmpsl push test fmuls rex.WB lock push enterq add adcl sub push or xchg pushq pushfq mov sub scas sbb jmp mov xchg cmp sub (bad) scas rex.RXB lods cltd stc sbb fbstp pop clc or jo pop adc add and pop in loop hlt gs (bad) adc xorb xor pop pop and xchg pop rex.WXB add cmp jmpq fdivl (bad) loopne hlt out xor rex.WB rex.RXB sbb int fstpt js in mov lods stos rex.WXB leaveq mov rex.WX or (bad) mov add or jrcxz mov jne shrb hlt jae mov sbb addr32 jle cmp (bad) mov pop jp loopne test in push xchg jbe js pop callq rex.WB nop movabs add xchg cmp xchg mov sub insb cmpsl rex.WB test add movsl sub jl loop jmp ja rex.X rex.WB jae mov out enterq or movabs (bad) rex.RB data16 push iret or pop sub xchg mov mov (bad) mov mov push jge sub out rex.WR lods rex.WB (bad) (bad) test data16 rex.WX fldcw (bad) lahf mov xor xor sti addr32 mov fsubrl in pop mov movabs enterq xor push xor fisttp gs (bad) iret sub neg nop decl mov pop xor imul mov (bad) sbb lods pushq int3 rolb mov rex.RX imul outsb cmpsb std pushfq rex.WB and cld pshufw (bad) rex fwait rex.WR rex.RB jbe cltd sub pop rex.WRXB xchg mov add pop rex.WB pop popfq jrcxz mov sbb (bad) es outsl xor rex.WB mov jle rex.WB in jnp lret mov and mov gs ja nop pop fldl fs or xor rex.WR jrcxz (bad) mov movabs mov cmpsl and add adc push push xchg sub rex.WB xlat shrl or pop rex.B addr32 rex.RX sub (bad) in lock (bad) stos push (bad) callq pop or pop rex rex.WB rex.R hlt ffree sbb (bad) enterq cwtd sbb pop stos xor sub (bad) mov sti pushq psllw rex.R cmp xor sbb or add fs mov in (bad) cmpsl lret (bad) and jnp cld push movabs in adc jb fucomi xor shll pop out in (bad) jno cs xor and insl or rex.WB fwait lock test or jno (bad) cmp and sub js ficoml jge test movabs movabs fidivl rex.WX addr32 rex.WB enterq mov (bad) rex.WB mov not js rex.WB (bad) test sbb sub xor sub shrb xchg movabs retq sbbl cmp (bad) loope xchg es packuswb (bad) movslq test sub mov rex.W rex.WX movabs rex.WB sbb rex.WB nopl cmp xor gs sbb lret movslq cmp fs shrl and pop test test and xor mov out pop mov stc jb push (bad) and outsl rex.WB movabs mov xchg rex.WB imul fbld stos push add pop mov cli and (bad) cltd mov hlt enterq test insb xchg lret xchg (bad) mov movsl and (bad) shlb rex.WRXB rex.RX cli in addl and pop lods sbb sahf in int stos addr32 xor out add and je ja or jno rex rex.RX leaveq jne data16 rex.WB mov shlb lret sub gs lret imul mov cmp rex.WB (bad) pop push stos cmp cmp movabs scas imull int push cmp mov or rex.RXB leaveq rex.B rex.WB imul sbbl sub (bad) and lock or and and cmpsl lret (bad) (bad) rex.WRX movsbl int mov mov (bad) rex.WRB cmp push cmpsb add (bad) xor sbb lahf ffree (bad) adc and rex.RXB xchg je (bad) rex.WB loop in xlat xchg test test fdivr (bad) pmaxub es (bad) cmp in rex.WB in cwtl (bad) xor test addl rex.WR lret in sbb pop sbb scas cltd add and xchg rex.W cmp add fdivs mov push andb add and mov pop mov (bad) rex.WRB test push or (bad) rex.XB cmpsb movabs mov mov (bad) imul retq push rex.WB fwait int3 (bad) add push test out lahf rex.B adc orl mov (bad) push lea mov shll pop incb push and rex.WB test movabs adc sbb lock jbe mov nop (bad) fstl sbb xchg insl (bad) or enterq lods xchg repz xchg cmc mov jb movsb pushq mov push xor pushfq mov sub sub adc push adc movabs xchg insl pushq mov adc rex cld (bad) lret jmp (bad) in scas repnz rex.X sbb cmp addr32 mov cs int3 adc adc je cli gs xchg rex.WRB xor sbb int3 adc cltd rcl rorb jg (bad) test pushfq (bad) data16 (bad) test rex.X rex.WRXB rcrl sbb rex.WR pop fldl add add or iret push imul test movabs add pop sbb pop pop cmp xchg jne fisubrl (bad) mov (bad) (bad) jge cwtl pop imul fisub movabs rex.WRX je cmpsb es push out adc movsb rex.WB stos test clc sub stc sub add hlt or imul lea xchg sbb adc add callq cmp push xchg hlt rex.XB jno cmp in imul fisubrl push jnp add hlt popfq scas movsb test xor popfq movabs mov fsin out clc or lods shlb xchg flds rex.RX push rex.RB iret je scas or and movsl xchg iret rex.WRB std out int3 sub movabs sahf xor sub fcomps movsb int3 lret cmc rex.RXB rex.W rex.RX je rex.B sub rex.WRX rex.WR xor mov (bad) mov leaveq or sbb mov loope or add rex.WRXB sti movabs stos jbe (bad) retq cmp int mov movabs adc jbe or or js jae pushq cmpsl sbb mov mov jmp mov push pop int3 sub and lock pop rex.B mov sub addr32 pop (bad) mov rorb adc jle int hlt (bad) (bad) rex.WR rex.XB rex.WRX lods adc (bad) repnz add nop or push out (bad) pop adc sbb (bad) lea or fdivrl sti (bad) jns (bad) and cmc cmp ffree (bad) mov ja mov pop imul rex.WX fwait adc push (bad) or mov adc cmpb rex.RX negb movsl mov pop sbb mov cli rex.XB rex.RXB pop ficom (bad) cmp jb and fcmovb pop add adc mov movabs movabs push sub pop insl clc loop pushq rex.WXB lods mov or add addr32 push movabs adc mov psrld add add repz movabs pop faddl mov scas fwait stos (bad) jno sub lret fwait mov js sahf pop jl cltd imul rex.RXB fimul test rex push sub push pop mov (bad) rex.XB add push (bad) popfq pushq jrcxz loope mov (bad) rcl repnz sti pop mov (bad) roll mov cmp (bad) iret xchg rex.W rex.WRXB fxch (bad) xor pop movslq ljmp sub in or sub push fstps adc nop fisttp (bad) rex.W jae rex.RXB jg (bad) callq (bad) rex.WX mov (bad) rex.WXB adc sbb mov jp mov sahf mov addr32 sbb jp rcrb imul movsb sbb insl jbe cmp cmpsl retq lahf add mov lcall fs add cmp (bad) add dec push sbb xor callq (bad) xor jns ja test (bad) test fwait rex.RB and pop out repz enterq xchg fnstsw xchg cld jg,pt out (bad) (bad) and and (bad) sbb leaveq stc scas movabs adc or pop jmp loop lahf addr32 imul sub pushfq pushq mov adc iret push rcrl test (bad) pop fild mov rex.W jae test fnstenv test cmp sub jno sbb adc xchg adc xchg ss or je xor cmp adc sbb add push data16 shlb popfq cmc adc and mov jae pop sbb mov xor rex.WR rex.W fwait movsl movabs xchg adc adc or mov sub push mov sub push outsb popfq (bad) (bad) outsb movabs sbb cmc rex.WB fwait jns xchg sahf ds pushq cmp rex.B xor and sub (bad) rex.WR or rex.WX (bad) mov int3 loop adc fs rex.RX lcall addr32 sahf (bad) movsl (bad) mov and test out sbb loope rex.R lret rex.XB sub jg sahf rex.X adc out nop sti (bad) test in or cwtl movabs js pop loopne out mulb (bad) sahf cli lea jae jge mov cmpsb jns (bad) mov data16 (bad) adc mov int adc sbb push rex.W push jb lahf cmp and (bad) repnz movl callq xchg enterq xchg movsb or pop sub pushq (bad) nopl mov (bad) callq xchg scas out in out movabs nop pop xchg cmpl xchg (bad) lret and (bad) rex.RB sbbb jae xor rex.WB jp xor (bad) xor sbb push enterq rex.WB (bad) cld (bad) lret or jb pop push jmp mov insb xor ss pop movabs xchg fs push xchg push push movslq movsl jle jo cltd add rex.WB (bad) movabs callq jg xlat mov mov sub xor push fs rex.WB rex.WRB movabs rex.X rcll pop out rex.WB ds nop mov clc mov movabs int3 xchg sbb rcl jle (bad) loope pop pop sti icebp rex.RB rex.WB in rex.WR and lock (bad) (bad) xchg rex.WB lods sbb or add (bad) mov ss insl ja rex.WB es jno (bad) push adc (bad) mov lahf push cmp scas fxch movabs movaps xor (bad) cli imul (bad) xor loope fcmovbe in xchg xchg jl cld push movabs out adc retq pushq callq lods mov rex.X out rex.WX push pop cmpsb rex.WB lock and fdivrs rex.WB rex.X mov lahf retq sbb cmp add movslq movabs sub (bad) push test jb cmpsl gs pop xor mull jp pushq xor and cmp in scas cmp jmpq (bad) mov (bad) xor stos and mov loop (bad) push repz mov rex.WB jrcxz rex.WRX add lret insb test cmpsl pop rex.WR rex.WB iret jns lods jne int3 rex.WB jae jrcxz (bad) popfq rex.WX rex.WRX push jrcxz repnz insl fmul ja out scas popfq add pushq jge scas in loop (bad) notb rex.WB iret sub rex.WXB add cmp (bad) (bad) ja mov mov (bad) stos or xor adc sbb test sti mov insl and sub sub loopne jle cs cltd pop sub mov xor test rex.X rex.WXB fisttp (bad) rex.X push or push pop sub test rex.WR callq fmuls stos insb movsl xchg mov mov out and ja jge int3 test mov (bad) xor rex.RX mov or iret sub adcl mov push rex.WB mov (bad) rex.W in push out pop sub rex or outsl gs cltd lock rex.WR rex.WRXB vmulps adc callq out cmp rex.RXB rex.RB rex.WRXB callq add rex.WB movabs jle pushfq and cmp sub test stos and and xchg mov cmp pop cltd pushq mov pop outsl xor rex.RXB push loop lret enterq rex rex.XB xor cmp xchg rex.WR xor jnp jge outsl pop cmp adc and jbe fwait sub jmp (bad) mov push cmp (bad) rex.WB rex.W stos movabs shrb add imul cld test xor (bad) cmc out pop insl rex.R and sub adc push (bad) js test icebp retq leaveq sbb in adc (bad) adc pushfq cmp test cmp rex.RX mov jl leaveq rex.WRXB pushq or add (bad) js stos or lret mov movsb rex.WRB cmpsl (bad) mul jge rex.WX hlt (bad) imul sub lods (bad) and movabs insb jge addr32 movabs callq jne movsb clc es adc movabs pop test pop cltd (bad) es sub jge int3 es mov shrb mov div imul and cmp (bad) (bad) sbb pushfq rex.WXB mov push and mov (bad) cmpsb or (bad) push rex.W jg (bad) mov pop enterq nop rcrb or xchg outsb leaveq movabs mov mov rex.WRX cmp loop jle pop pop addr32 movabs sub rex.RXB xor add fsubrl rex.WXB mov (bad) push (bad) in or cmp adc (bad) cs pop leaveq rex.WX add mov je movabs popfq mov cmp mov add fsubl fs cs insl movabs jle mov xor (bad) rex.WR xchg push fwait jne push mov (bad) nop rorb cmc mov ss sahf (bad) cld or add movsb std cs sahf movabs pop mov rex.WR int3 cmp or cmp cmp jg leaveq rex.WRX test jle or pushq sbb jb out jo std lock lahf movabs jb mov lret rex.B fsubrp sub and add rex.R sbb sti ficomp sbb stos (bad) (bad) xor xlat (bad) jno jae xor jnp je divl cmpsb std push test (bad) cmp rex.B rex.X jno (bad) js and outsb mov jmp (bad) insb (bad) cli retq mov in sub jg jbe pushfq repz (bad) sub fbstp sub (bad) add jne adc sub push psrad rex ss rcrb mov sar or stos and es rex.X mov (bad) out or cmpsb rex.WRB (bad) imul or (bad) enterq testb retq mov cmpsb rex.RB movslq jp xchg mov inc cmp out out jle push test push rex.R add out or loop or leaveq adc ror rex out xchg or pop or leaveq mov jnp (bad) or loopne mov movabs (bad) rex.WRX and ds mov push lods and movslq idiv and mov rex.RXB (bad) addr32 popfq sub cmc movslq cmp sbb test cmpsl lret rex.WB xlat out lret mov gs jno int in sahf (bad) ds (bad) cmp lret sub (bad) and (bad) xor or pushq (bad) movabs rex.WRX xchg or push sbb (bad) test mov rex.RX rex.WRX xchg enterq or or cmp rcl movsb jle fwait sbb ss jno fldl jmpq (bad) pop xorb mov pop fdivrs pop hlt test sbb add (bad) (bad) xchg sub in movabs xor leaveq xchg rex.RXB imul mov (bad) pop xor jbe lahf fdivrs (bad) mov int fnstenv jrcxz cmp cmc insl out shlb out jge clc fidivrl xchg adc outsl mov xlat (bad) cmp jle (bad) mov mov mov fdivrp and or (bad) stos adc add jg (bad) push rex.WRXB cmp movsb cli addl add mov add mov repz cmpsl stc pop out es xchg add jl (bad) mov sbb shll lea and es jae callq sbbb test movabs rex.RB js stos fmuls sahf pushfq out orl sub mov and sbb (bad) outsl (bad) stc rex (bad) movabs rex.WX cmpsl outsb or mov divb jmpq push lea fsubrl retq jle or fsubrl jmp and jg jns xchg rex.R pop fsts pop mov push (bad) sbb push retq rex.RX (bad) in mov add or stos sub push push xchg adc cmp or stc (bad) div retq cmp imul mov addr32 (bad) lahf jl pop icebp retq mov pop ds (bad) and sub shrb lahf in pushq jne adc mov fucomp or and lret mov mov ds jl movabs (bad) ficoml cmp push mov xchg or and scas popfq adc outsl jnp mov leaveq push mov imul sahf cwtl xchg idiv sbb subb (bad) mov cmp rex.WB add or jmpq or (bad) movabs and adc test hlt fimul pop or (bad) mov push rex.WB fcoml loope xor xchg rcll xchg mov hlt scas test pop out in js (bad) jb (bad) rex.WR movabs or pop rex.B pop (bad) (bad) sub loopne cs movabs jno xlat (bad) repnz in movabs std xchg test jmpq (bad) jne adc rex.WR xor (bad) mov push rex rex.R callq mov push movabs sub or (bad) pushfq sbb sub jnp and sbbl pop or test (bad) frstor sbb pop and mov adc fcmovne nop xchg mov movabs (bad) rex.WXB rex.WB lock mov repz in lret jle ror out rex.WRX sub fist (bad) cld mov lea movabs (bad) mov cmc stos lods shrl jl movabs (bad) rex.WB data16 outsl sahf fidiv pop xchg or cld jns pop rex.WB rex.RB repnz movabs rex.B ss fild jnp rex.WB add cmc insb retq add mov scas fstpl fcomps es xchg rex.RB out rex.WB repnz jnp sarl xor punpckhbw mov rex.WB sbb callq (bad) imul orl xor jno and mov out push and (bad) nop shrl push rex.WXB (bad) sub (bad) (bad) rex.WX rex.WB lret rex rex.WRB (bad) stos xor adc pop jae (bad) rex.WXB movabs xor movslq (bad) add and and (bad) or rex.WB rex.RB icebp xor js rex.XB adc rex.XB movabs ds lret and add rex.WX scas (bad) int rex.WB outsb adc push gs jle cwtl cmpsb mov (bad) add adc cmp (bad) mov rex.WB adc movabs imul scas out movabs xor retq stos test rex.RB (bad) rex.WB add push rex.R rex.WB lret sbb callq stos add sub retq or push clc cmp mov pushfq jrcxz icebp rex.WB rex.XB repz sti pushq enterq add sbb jne push pop jo movabs cmc (bad) scas movabs sbb add jle retq mov rex.WX adc mov push (bad) jmpq (bad) pushfq add imul mov rex.B fs fucomip int rex.WRXB or sub rex.WR rex.WB rex.X cmpsl sbb movabs lret (bad) pop imul xor mov xor pop (bad) xchg xchg sub xor xchg rex.WXB rex.WB xor pop mov or movabs (bad) jo test lea and pcmpeqb mov cmc pushq sahf movabs mov xor stos (bad) (bad) or movsb fisttpll sub or pmaxsw add rex.WB xchg mov add out pop cmp or and jns test rex.WB (bad) cwtl stc pop orb insl or movabs rex.R shrb rex.XB rex.RX xor and shl pushfq jo or rex.X insl or (bad) jl rex.WX rex callq mov (bad) jno addr32 and rex.XB repnz fwait push rex.WB outsl fdivp movb push sub cmc mov and jb lret data16 mov adc adc stc lret mov addq test mov sub addr32 (bad) in pop rcrl imul orl ja pop rex.WR rex.X mov std pop adc adc (bad) (bad) sub enterq incb outsb imul jmpq repnz hlt repz rex.RXB mov jb int gs and jrcxz mov adc or push fiaddl xchg cmc xchg or or ds add pop lahf int or or rex.WB mov add leaveq pushfq mov push fistl mul xchg mov mov movslq mov (bad) callq jge rex.WB stos jmpq cmp fcoms jns add stos rex movsb rex.WB rex.WRXB rex.WRX jge and (bad) rcr pushq xor fstpl stos (bad) movslq rex.RB (bad) xor popfq (bad) test (bad) or movsl add ja pushq out in push or xor rex.WR rex.WB rex.WR test push es sub in (bad) fwait movabs rex.RB rex.R or adc movabs sbb rex.WB (bad) xor add cltd pushq in subl rex.WXB add rex.WB in (bad) callq rex.X (bad) or cli movl pop stos (bad) (bad) rex.WRB stc xchg or cltd in mov rex.RX movabs mov mov adcb (bad) xlat test pop callq rcll rex.R mov andb mov (bad) mov mov hlt fisub (bad) movabs mov mov push scas rex.WX mov ss movabs repnz jmpq out movslq mov movabs mov int3 (bad) int (bad) and push outsl pop loop outsl sub (bad) (bad) sub hlt or movabs rex.WB (bad) push movabs sub or loopne rex.RXB repnz (bad) rex.WB (bad) xchg lods rcrl (bad) repz fsubrs loop callq test out movsl jne (bad) rex.WB popfq mov sub mov mov pop ja pop movabs rex.WXB add outsl lods push mov (bad) (bad) lock rex.XB test adc (bad) push xor rex.WB ss mov sbb lods rex.WRX mov xor add mov (bad) pop outsb cmp cmpsl (bad) xchg outsl lods rex.B rex.X rex.WB (bad) mov movabs movabs (bad) test movabs fiaddl nop xchg rorb xor pop push out (bad) sub movabs mov lock rex.WB add fwait mov jb jrcxz out rex.X jge jle (bad) sub callq popq callq add (bad) test out rex.WB xor or (bad) pop rex ds sub cmp mov and imul rex.WRXB mov jns movabs push jb callq fiadd push rcrb fdivs (bad) (bad) je gs out lahf adc push out pop xor data16 imul rcrl rex.WB rex.B movabs andl rex.RB jle (bad) rex.B iret sbb mov (bad) movslq loope rex.WXB rex.WXB cmp rex.WB repz xchg push (bad) lods jb mov sahf rex.WB adc rex.WRX movabs outsb shlb sbb or and push jae lock stos imul sbb mov sub push mov pop movabs movabs xchg mov sbb rorl rolb in rex.WB cmp push scas test mov (bad) (bad) push sub rex.WRX rex.W sub sub add add ja mov xor callq rcr insl rex.WX xor fcmovnb rex.RX cmpsb adc retq rex.WB hlt sub test sbb rex.RXB sub test iret xor (bad) outsl xchg pop jns and (bad) xchg scas cmp pop (bad) adc pushfq es rex.WX and jg pop callq or scas adc cltd pop jno and stos orb mov xchg pushq pop insl rex.WB hlt movsb push sbb pushfq (bad) sub outsb xchg (bad) lock iret mov rex.WB cs xor rex.WRB subb (bad) rex.WB (bad) mov (bad) std stos (bad) cmp xor ss (bad) shrl cmpsb insb mov (bad) scas enterq jmp jmpq adc cmp test mov and stos push pop lahf cmp pop mov mov callq add jnp addl fdivrp (bad) xchg addr32 ficompl (bad) jl xorl popfq pop add cmc test rex.WRX repz mov push add adc test mov xorl add sbb (bad) adc (bad) stc callq or loop rex.WXB xchg clc lret (bad) fisubrl mov cmp and add xchg jnp incb jp adc callq callq jne sub pop mov and xchg imul fistpll in movsb rex.R callq pop add rex rex.WRB mov int mov mov cmc enterq pop rolb xor lock cld or xchg push add or rex.RX rex.WRX je mov rex.B and (bad) xor xchg in sti (bad) (bad) (bad) rex.WB (bad) fdivs (bad) int3 loop adc in xchg pop push push sub mov and scas pop and (bad) shll rex.WB repnz mov lods cmp scas test and loopne rex.B add xchg mov mov mov mov (bad) xchg outsb pushq xchg sbb movabs rex.B lret scas xor jns mov pop pushq pop or cltd sub (bad) xchg mov rex.WRXB rex.RB cmpb jp xchg pop clc add stos insb callq test push xchg incl imul mov callq scas (bad) push cmp sahf (bad) test outsb (bad) fucomp cmpsl push loopne push adc (bad) mov adc in rex.RX sub rex.RX rex.WR cmp rex.WB and or add push rex.WB outsb pushfq ja cmp nop mov and add loopne xchg xor out push lret mov pop add mov fild movslq and xchg add movsl jrcxz pushq outsl iret (bad) iret rex.WB (bad) xor pop rex.WB movabs mov movl rex.WB in jne imul sbb xchg xchg lods add add fnstsw cwtl mov cli mov cltd cmpsb and sbb jnp jae (bad) stos loopne rex.WB (bad) mov rex.RX sbb test fildll xor xchg insb rex.WRXB ror in cmovns je (bad) mov test jge rex.WB es add and shr insl sbb retq iret lret (bad) loop rex.WB lods (bad) rcr push movsl jae test (bad) pop push (bad) movabs retq fidivr (bad) jge ds rex.WB cmp xor int3 rex.WX adc (bad) push mov xchg rcll adc mov adc rex.WB push or or out rex.WXB int3 (bad) roll cmp xlat callq pop rcll rex.RXB movslq (bad) add adc pop sub ja jbe mov rex.WXB lock enterq rex.WRX je adc xchg test add imul rex.RB repz mov push jnp or push lret (bad) and and jmpq loope sub rex.WR rex.WRXB or (bad) test orl roll pop mov stc xor cwtl rex.X mov test mov callq movabs mov (bad) rex.WX sbb xchg enterq mov (bad) pop or rex.WR mov out sti mov sarb pop add mov pop addl rcl sbb push add or xor fdivs sub rex.WR pop jns adc lahf sub sahf cltd in (bad) movabs pushq test sub lret shrl mov clc xchg jne clc adc mov pushq cmpsl in or (bad) jmp test rex.X rex.RB out pushfq mov and rex.RXB sub (bad) xchg rex.W pop push fmuls xchg lret notb cmpsb sub ds cmp rclb es jno icebp std sub scas push jmpq mov pop push mov sub cmc pushq stos movabs pushq add xchg fsts (bad) movsl (bad) cmp movabs (bad) adc (bad) ss xlat (bad) cwtl or sbb and jnp jo fnstsw (bad) mov movsb (bad) pop cmp mov insl cld (bad) rex.WRB clc enterq xchg pop mov or pop in cmc pushq (bad) push rex shrb jmpq sub negb ljmp and (bad) insb sbb mov jle (bad) fildll push rex.XB cmpsl mov pop movabs add test sub fild movabs (bad) xor (bad) mov xchg mov rex.WRXB mov push mov out (bad) mov (bad) rex.WB movslq rex.B rex.WRXB jp ror leaveq cmp push cmp cs ss add pushq xchg out (bad) movslq rex.RXB test pushq jne insl jae and shl pop setb pushq push pop callq pop cmpsl jnp (bad) (bad) pop movabs pop (bad) data16 rex.XB insl and lret adc ja rcrb jmp int test jmpq add or xor sbb rex.W test (bad) (bad) cmp and xchg jp movabs cs xchg out jl or sbbl cli rex.WB pop jmpq lea mov movabs pop and mov sub adcl shrq loop rex.WRX rex.WRXB rex.RX adc loopne repz callq jns iret or and in addr32 movsb fldl sbb test rex.RX gs and xor lret mov rex.XB imul callq sub iret cmp imul idivb iret sub scas rex.WB data16 movsl xor pushq pop pop (bad) rex.WRXB (bad) pop movabs rex.WB lods rex.WRXB out jbe (bad) rex.WB sbb popfq mov mov movl and int xor imul pop push add pushq add add sub add (bad) pushq movabs (bad) (bad) movabs imul sub jmpq jg (bad) sub fs pop and cmp mov mov and js rex.B rex.WB repz xchg es jae sbb out movabs test rex.WB cmp mov loope (bad) xchg adc jbe test popfq rex.WB imul cmc movsl xor rex.B rex.RX rcl and pop mov xchg loopne rex.WB mov (bad) callq mov pop and and scas test pushq sbb retq xor (bad) jrcxz or pop add cmpsb rex.WB flds jmpq push sbb push icebp xchg jo mov test pop xchg push sub and (bad) icebp test mov mov js rex.WB rol cmp (bad) retq mov and (bad) sub rex.RXB lock and add callq (bad) jmpq rex.RX xor cmpsl in mov rex.WB imul in cli (bad) pop movslq xor rex.WX fistp sbb movabs cmp fdivl cld mov jb (bad) mov stos hlt cmp pop mov (bad) addr32 out xchg xor clc jns rex.WRB out jmpq (bad) jrcxz gs cld lret movabs xor (bad) pushq adc mov insl rex.WX (bad) xor (bad) data16 push hlt fcoms jno int3 (bad) lock lods hlt rex.WXB stos push xchg in std sub fldl cmpl rex.X mov push mov mov icebp rorb push repz adc (bad) (bad) mov mov push imul repnz ss sub jge out (bad) enterq sbb enterq cmp rex.WX jae pop (bad) adc xor mov rcr sbb addr32 jmp jno test sub mov callq lret jbe (bad) sbb add mov mov xlat or clc (bad) jns jo rex.B jnp test (bad) sub sbb or xor sbb loope mov fwait jns xchg and add sbb sarl or pop loopne pop rex.WX jp mov cmp xchg adc jno cmp (bad) mov clc gs mov lock cmp push jno cmovs or sbb cmp add pop jg sub js hlt xlat mov scas rex.WX push sbb mov sbb pop movabs shrl std pushfq jae push and movsl xor pop or fs pop mov rex.W rex.WRX and addr32 (bad) pushfq fs push (bad) shrl mov add jge and div out xor rex.RX cld cmp mov rex.XB fs (bad) enterq sti stos addr32 cmpsb mov xlat out sub movabs (bad) jmpq adc push xor in jge jmp mov movslq (bad) jnp ja out (bad) out icebp int3 adc movsb (bad) rex.WRB rex.WR push cmp sbb jno (bad) pushq addr32 nop imul adc fimul cmc mov mov push shlb push test pushfq and lea rex.X xchg test loopne sub push and (bad) add es fcmovne jmp jrcxz (bad) faddl push out pop (bad) clc (bad) leaveq enterq and rex.RX notb (bad) (bad) int sar lahf in (bad) add test mov nop (bad) (bad) cmpsb fwait sbb and add xorb mov sub xchg xchg pop movabs sub sti mov callq adc pushfq sbb stos add out pushq (bad) sub add rex.B xor cmp cmpsl cmp sub movslq jo add adc movabs push mov (bad) mov push pop lret sti pop outsb sub mov push cld adc cmpsb (bad) rex.WB mov enterq jbe jb xchg retq cs in retq notl (bad) jge cmp sbb xchg mov rcrb movabs hlt lahf mov jo cmc mov rex.WB sub ss cltd sti mov and rex.WB lahf fcomi int3 sbb imul divb xchg (bad) rex.X xor int3 shr rex.WB (bad) mov jrcxz or lods mov addr32 rex.WB xlat fistpl mov and (bad) mov push sbb rex.WR rex.WRX rex.W repz callq lock test andl rex.WXB xchg int adc fdivrl rex.B rex.WX movslq (bad) jp,pn sbb push (bad) repnz (bad) xor rex.WB callq xchg roll xor (bad) icebp pushq rorl sub cwtl int3 lahf pop sub callq andl int3 jp mov lret (bad) sub (bad) sbb adc lret cmp xchg int (bad) sbb loop imul mov rex.WB addr32 test loopne insl (bad) add fmuls sub mov jae cs repz lea loop movslq (bad) xor or hlt scas xchg movabs in rex.WB cmp addr32 out push add and rcll ja pop (bad) adc insl imul push (bad) sbb xor lret pop movsb cmovns cmpl rex.B or out push cs sub pop or pushq popfq clc cmp cmp (bad) outsl gs loop add test retq rol insb and push rex.WB (bad) fildll and rex.WB repz rex.WRX cmp mov xor or and jnp ss movsb rex.RX movabs mov push push and movabs pushq push and idivl rorb mov int3 movabs rex.WX rex.WB mov jrcxz add (bad) push setno adc xor std mov pushfq push add pop in rex rex.WX xchg jg and mov push xor rex.WRB pop pop push rex.X rex.RXB xor insl jo jmp ss jle xchg sub mov add (bad) push fisttpl popq sti (bad) stos (bad) (bad) lret insl mov (bad) mov rex.XB imul rex.B adc mov jno adc add xchg lret xlat rex rex.RB imul jg fbstp or xor jns (bad) xchg xor xchg and rex.WB jrcxz fsubrs xor rex.X rex.WB or popfq rex.XB rex.RX mov pushq fcompl shr pop imul xchg rex.WB enterq and rex.WB ss pushq xorl cmp sbb retq jne xchg (bad) add rex.W pop fiadd mov and cmp add (bad) movslq enterq sub (bad) rex.WRX repnz cli mov pushq fcmovnbe lret callq loope push retq fbstp rex.WB pop sbb sub lock leaveq (bad) pop mov rex.X pushq (bad) movslq (bad) sub adc mov addr32 and rex.B loop rex.WXB mov lock (bad) leaveq leaveq and mov pop cmp xor (bad) jge rex.B rex.XB sub fmul retq (bad) sub rex.WB (bad) stos mov sub callq pop repnz popfq pop and jne movabs lods sub repnz adc outsb push or add or xchg incb cmpsl fcmovne cmp xchg fidivl sbb jle mov rex.WRXB rex.WX and stos mov jno,pt in pushq movsb insl scas sub outsl push in (bad) in out cmp cmp in negl ja fxam or sub add (bad) add movabs sub jnp xor rex.XB loopne movslq mov shrl xor mov push jae out test rex.WB rex in cld sub (bad) decb mov sub mov xlat in sub jmp xor jno rex.WB pushfq rex.WXB fisttpll rclb rex.W mov sub mov rex.WRB rolb mov sub pushq xor retq pushfq frstor (bad) jle rex.WB (bad) mov sahf adc add jb adc test decl cmovge shll mov pop pop add test movabs cli (bad) lea xchg ss rex.WRX lock out xor imul icebp (bad) loopne xchg rex.WRB rex.WB leaveq fwait test fiadd and xchg lods and pushq (bad) rex.WX movabs rex.WR rex.XB sahf sub and pop push sub push and jmpq jmpq (bad) nop rex.RB fisub mov jnp mov hlt rex.WB (bad) fadds incl mov fdivrs decb imul pop push mov push jge (bad) pushq rex.W mov (bad) fistp cmp cwtl pop mov jns retq and retq (bad) test stc jbe lods push xorl xchg jp mov cmpsb and rex.WB sbb sbb ds mov cmp (bad) out js (bad) rorb ficom retq add and cmp rex.WRX sub push mov mov in cmp (bad) iret adc pop mov xchg insl rex.RX jns adc xchg mov rex.WX callq (bad) in adc xchg (bad) xchg xchg push imul jo jmpq fisubr (bad) rex.WB fistpll movsl jg push enterq (bad) (bad) (bad) rol jl scas mov adc jg sub (bad) push in retq (bad) es rex.WB xchg xor (bad) xchg rcll push pop lahf add sub out or mov test xor mov pop loop nop pop cmp pop push repnz shl fisttp push rex.RXB sbb rex.WB xor in sbb cwtl jae movabs sub fsubl pop xchg enterq (bad) (bad) callq outsl rcll rex.WR fsubl pop mov in rcrl mov retq rex.WB sub mov lea movsl (bad) push pushq jbe je loope outsl pop xchg incl rex.WB mov mov mov shlb rex.WB rex.RXB gs cmp rex.WB xchg xor rex.WB mov sub mov or adc int3 fidivrl jle cltd sahf insb sbb fldenv data16 rex.WRXB std in xor js (bad) mov rex adc stos rex.RX jge and clc pop sti xor (bad) movabs adc push sub mov (bad) sub retq or leaveq fdivs sub mov pop subb std mov xchg (bad) adc (bad) out mull or push jle scas mov rex.X rex.B jb (bad) pop (bad) scas clc adc lods in out sub jb test xchg movslq fldenv pushq (bad) movabs cs sbb rex.W ffreep sub (bad) movabs adc cmp cmp stos sub adc and imul and push out rex.WR (bad) fildl and push leaveq callq (bad) hlt sub mov test movsb mov out sub adc lods rcrb sub sbb sbb or test imul lret lea add jnp cmpl add fs mov imul (bad) (bad) (bad) enterq imul (bad) stos rex.XB imul int3 outsb xchg rex.W icebp rex.B pop mov rex.RX jb (bad) mov decl push adc jl leaveq (bad) and (bad) pushq in (bad) cmp push ja adc lock xchg sub ss or cmp sub rex.WR mov jno movabs sub and popfq je pop es stos mov repnz mov rex.RXB rex.WB mov mov stos test add enterq repnz (bad) sbb pop xchg mov xchg test jno push add pop pop (bad) rex.RX sbb loope pushfq add or rcrl movsl xorb hlt pop mov jne or rcrb negb lods fildll sub andl lods adc sahf push mov mov addr32 (bad) pop mov rex.RXB mov or data16 leaveq xor lods mov mov enterq mov mov lahf pushfq xchg cmp rex.RB rex.RXB pop in or pushq out insb test cwtl lret mov popfq movslq (bad) rex.WRXB imul (bad) add iret push jae cmp adc rex.WRXB rorb (bad) jae add lods (bad) and xchg add adcl outsl push mov movabs push and sub add adc and push xchg cwtl movabs rex.RXB (bad) push lahf mov cmp stos sub (bad) cld leaveq push jno rclb push sbb pushfq insb add fildll xchg fs (bad) jp callq mov xor fwait test (bad) push imul pop outsb xchg stc rex.XB movq and iret sub stc cmp cli lcall add (bad) mov imul jge gs and movslq jno movabs imull scas int3 xchg xor outsb movsb pushfq or cli (bad) rex.XB shl push retq sbb cwtl (bad) jnp jne shlb or push stos rex.B rex.XB sub orb xchg push fwait mov sub sub xor (bad) shr push sub out je jle iret jp testl sbb mov or (bad) cmc jns push (bad) mov rex.B sbb loope (bad) cmpsl sub callq fist rex.WX push cltd imul (bad) xor mov (bad) rex.WB repnz je nop sub adc outsl mov (bad) test rex.WB jne jmpq pop sbb loopne push pop iret fsubrl sub clc mov (bad) lods je (bad) xor mov push movabs fldenv iret std rex.WB (bad) js cmp (bad) rex.WB pop hlt movabs jmpq mov xchg pop push sub jo movslq movabs retq lods outsl xchg adc (bad) (bad) (bad) and jae stc pushq out push (bad) sbbl pop add insb cwtl rex.WB fdivs cs loopne (bad) pop jbe (bad) lret ja push sub mov rex.WB push cmc (bad) pop pop push and xchg adc adc add (bad) cmp sub lods mov movabs mov jl sbb (bad) rex.WRXB push sbb cs and (bad) (bad) push sub jb rex.RB or rex pushq callq sbb fiaddl fbstp rex.WB sbb or cld sbb gs fmuls (bad) (bad) xor rcr jae jp sbb (bad) mov mov sub rex.X mov sbb cmp js add movabs popfq xor callq add int3 popq rex.WB flds movabs xchg (bad) loop std and and mov repnz rex.WB rex.W mov mov icebp or loopne xor test fdivrs rex.WB cmp jne loopne and rex.XB jle push (bad) mov (bad) mov pop mov rex jp rex.WB xchg push repz enterq mov (bad) bnd cld mov nop imul cmpl movabs in movabs cwtl push xchg rcr movabs (bad) (bad) pop jb or rex.WB (bad) (bad) add rex.WX (bad) (bad) cmp jns fist rex.WB (bad) or cmp rcrl cmpsb sbb push sti rex.XB (bad) ss rex.WRXB mov lret xchg sub out movslq sbb xor pop popfq cli mov mov and shrb (bad) mov sti lahf xchg (bad) in sahf mov rex.WRXB rex.RX icebp movsl jle (bad) mov fiadd xchg sbb rex.WB fst rex movabs sbb xchg and cmp (bad) movsl or pushq negl adc mov sbb repz sti push movabs gs sahf mov (bad) pop in (bad) mov (bad) iret leaveq loop int xchg pop (bad) movabs test xchg sub xor outsb (bad) cmpsb xchg loopne add jmpq cmp movabs (bad) movslq movabs repnz push pushq jg sbb mov prefetcht0 or cmp movabs scas adc sbb cmp (bad) jrcxz mov mov xchg enterq (bad) (bad) jle jmpq rex.WRX repz or sub imul or insl jmpq pop cltd sbb or and rclb movsb sahf scas xor pop movabs insb push in xchg xor pop rex.W sub mov lret cmp pop mov fucomp scas sbb adc js xor cwtl cmpl pop pop jg imul cli sub cmp fmuls pushq notb pushfq fs (bad) sbb (bad) mov fsubrp rex.XB adc mov jns sbb rex.WB pushq scas outsb jno pushq retq jo push cld (bad) rex.WR (bad) rex.WB (bad) sub adc rex.WB pop fstl sub lret jns int3 pop (bad) fs mov vpunpcklwd cmpsb jne (bad) rex.WXB decb test fdivp or (bad) or movsl movabs rex.WB cmc movabs add sbbb sub movabs (bad) jl,pt xchg rorb in test mov sbb (bad) and in rex.RX fs mov rex.WB ss out mov pop cmp sub mov xor jb jrcxz pop rex.W mov ja mov in rex.B adc (bad) in cmp stos (bad) cli loop lret rex.WRB (bad) rex.WX addl (bad) rex.WXB in rex.WB dec add shll sub mov jrcxz (bad) add (bad) movabs adc fucom (bad) jbe leaveq jle lret pushq or fimul adc adc mov in mov and cltd loop lret xchg (bad) ja sbb add rex.WB xchg mov cli pushq cmpsb push add sub or pop jae rex.WRB sub loop pop push or movabs test or adc add pop (bad) mov (bad) (bad) cwtl ds rex.WX xchg int3 sub mov jno or sbb movsb rcrb cmpb push enterq sub or sbb and pushfq pop insl movsb test or rex.RX andl cmpsl rex.WB (bad) imul add mov and test lods adc (bad) cld pop pop mov mov retq rex.W es push and or rex.WB mov int3 (bad) loope (bad) xlat (bad) jns loope pushq sbb sbb lock rex.WX mov rex.RX push test fs orl rclb pushfq (bad) sbb pop and xchg mov movsb rex.WB mov sti xchg xchg lods xchg xchg scas rex.RB rex.W rex.RB adc pop rex.WB jp xchg xchg ja mov xchg loope lret movabs fidivrl rex.WB (bad) mov add (bad) rex.XB and mov rex.WB push scas (bad) jl jle (bad) iret or repnz push and xor rex.WRX (bad) rex.WB cmpsb fisubl scas out cmp int3 jo (bad) jnp fimul gs lods jb jae (bad) data16 movq and or cld and or (bad) pop xchg or addr32 mov data16 lea (bad) (bad) out (bad) rex.WB and sub xor lods add sub rex.WB cmp (bad) cmp adc mov rex.WB xor lea mov in cmp rex.WXB xchg (bad) sub (bad) test mov rex jo xor xor (bad) or sub sbb push pop fwait rex.WB ss shlb xor pop fs rex.X mov fs xor (bad) add mov rex.WB test rex.WX imul pop popfq add or sub mov rex.RB xor sbb fmul sbb rex.WRXB mov rex.WRX or or add mov sub movslq pop loop cmc fsubr lods rex.W mov xlat retq or push mov popfq popfq rol xchg out xlat or std mov jmp and xchg test mov rex.WX lock outsl nop gs rex.WR jno gs rex.WRXB rex.WRX rex.WRXB (bad) rex.B xchg (bad) hlt xor (bad) mov push jle push push fstps hlt add and lods (bad) mov rex.RB rex.WB outsb (bad) rex.XB mov xor (bad) (bad) (bad) clc mov add rex.WB mov (bad) mov nop lret rex.B int enterq rex.WRXB adc (bad) pushq scas pop (bad) stc rex.WRX addr32 fs rex.WX lret data16 rex.WRB cmp stc jne mov cmp rex.WR rex.XB cs movabs pop mov jmp add and xchg enterq rex.XB ja sbb jrcxz pushq xchg push loop cmc (bad) rex.WB (bad) rex.WRX (bad) mov mov (bad) mov movabs adc mov pop (bad) (bad) rex.WB mov xor push loopne stos hlt mov sahf mov push cmp (bad) rex.X rex bnd and imul mov movabs rcll push (bad) retq movabs lret add neg shr data16 sub fstpt je xchg enterq (bad) in push (bad) xor test fisttpl fwait jle callq (bad) mov adc (bad) (bad) mov rex.WB mov icebp jbe sbbl sbb and add xchg ja gs sub cwtl movslq movabs xchg sub fdivs lea xchg cmpsl push cli insl rex.W rex.WRXB rex.WB rex.RB sbb rex.RXB rex.WB (bad) out cmp rex.WRX mov mov pop imulb callq movabs (bad) movabs cli (bad) mov ja rex.WRXB sub outsl sti pop xor (bad) sbb jg loopne test (bad) (bad) sub rex.WB repz adcl sub add sub (bad) mov xchg sub pushq sub jo ja and mov cmp rex.WB (bad) rex.WXB (bad) or or jmpq and repnz rex.WXB fild xor xlat rex.RXB insl and (bad) xchg lahf jmp outsb cmp and (bad) addr32 rex.WB clc adc jmp push xor adc (bad) (bad) test push cltd (bad) cltd (bad) std xchg lea jle out mov cltd jns,pt or idiv pop pushfq cwtl pop imul sub (bad) jrcxz rex.WB (bad) test sbb stos mov adc ja jo add (bad) rex.WB jbe cwtl xor subl and add adc mov gs xor pop stos fistp test cmp out cmp xchg rex.WB push fs or rex.WX cwtl in fdiv pop test rex.B pop mov pushq or add movabs test addr32 push outsb fwait adcl or and test adc rex.WRX (bad) int3 callq out pop (bad) pop and out mov incb mov stos adc rex.WB cmp rcll lods mov jbe js or in xchg pop imul sub leaveq (bad) jns orl out pop sbb mov callq cmpq push sbb cli adc or in pushq lock frstor movslq insl addr32 sbb gs std es push (bad) xchg add pushq popfq mov xchg stos in rex.WRX rex.WB pushq or (bad) jo xchg stos xlat in rorb rex.WRB insl xchg or addl pop adc (bad) xor pop (bad) or sbb sub lahf push rex.XB (bad) stc (bad) xchg (bad) movsl movsb stos sub pop (bad) or data16 callq mov jp xchg and fcoms out (bad) and pop mov adc addr32 push (bad) adc mov rex.WX out leaveq notb retq pop pushq mov addr32 jge sub nop pop xchg xor callq jg imul jno mov mov (bad) je and rex.W rex.WRXB mov fsubl xor movslq adc (bad) add mov int3 test movabs xchg cmp lahf rol pop xchg or or mov popfq (bad) sub sub mov xchg jb mov movslq test rex.X xor addr32 jg pop rex.RXB rex.WRX mov pushq mov (bad) push enterq movabs rex.RXB cmp movsb scas fimul fist cld (bad) mov rex.WRX sub xchg cmpb shrb mov adc rex.WB (bad) movabs jmp cmp jne (bad) xor pop mov insb int3 cmp rex.WX lock jbe icebp xor (bad) test mov rex.WB rolb rex.XB rolb mov add mov jb lret or addr32 test push cmp rex.WB (bad) cmp rorl xchg pop or pop imul push (bad) pop and (bad) or cltd rex.WB xchg rex.WRB jl gs rex.WB rex out pushq cmp (bad) xchg rex.WB outsb ljmp (bad) jl mov loopne jmpq loope (bad) movabs push xchg xchg sbb movb icebp (bad) rex.RX movabs or or sub (bad) cmp out xchg movabs gs push (bad) test sbb (bad) xlat std in add lods (bad) xor cmp movabs (bad) sbb and (bad) (bad) jns out (bad) fisttpll jmpq clc out testl (bad) pushq pushfq rex.XB rex.XB and rex.R shr xchg xor push rex.WXB loope (bad) pop pushq mov rex.WRXB addw int fsubs test insb vandpd test push lret adc (bad) (bad) notb cmp pop and rex.R repnz movabs jl (bad) mov int3 std pop cld pop xor sub rex.WB push xor push (bad) mov jo vdpps xchg repz int3 fnstsw rorb std outsb (bad) sub sub cli test pop test stc rep movsl movabs popfq push cli test es rex.WRX callq and rex.R fistpl xchg push rex.WB mov rex.W and jbe mov callq cmpsb cwtl test rex.B jp jl mov (bad) rex.WB xchg in jns mov rex and movsl sub gs and mov outsl out pop fmull hlt or fisttpl mov push jmpq (bad) xorl callq sbb mov rex.WRB callq cwtl add or loopne cmp mov jrcxz xchg xchg cmp push iret sbb jg jl repz xchg sbb rex.WB loopne fstl rex.RX data16 push callq in cmpsl negl (bad) outsl jl cwtl sbb cmp rex.WB sti pop push rex.WRX rex.WB movsb stos movsl (bad) pop xchg loop mov movabs cmovns push (bad) js jge rcrb rex.XB rex.W rex.WB cltd in cmc shll pop mov je rex.B rex sub adc or push and cmp jrcxz rex.WB add jno clc sahf cmp lea cmpsb (bad) add mov push mov add (bad) mov lods pop rex.RX ds rex.WB xlat (bad) or push outsl pop rex.WB rex.WRX fisttpl rex.WB repnz cld cmpsb subl pop (bad) mov out xor push (bad) test dec jno cmp adc test mov cmp ds pushq mov push mov or (bad) in (bad) testb (bad) cmpsb sbb out push roll (bad) test xor mov ja rex.WB fwait movsb andb (bad) jae and mulq jg cld push fucomip or std mov rex.X lock lahf (bad) (bad) test clc and rex.WB in movabs mov rclb pushfq lock rex.WB sub lahf rex.WRB (bad) outsb cmp (bad) test xor xlat negl movsl rcr movslq xor or loop shrb cltd and rex.WB push mov rex.WB inc or mov outsb in imul movl out movabs jle rolb mov rex.RB or rex.WRXB (bad) mov rorb rex.X repz rex.WB adc leaveq or pushq mov rex.WX mov movslq popfq push repnz jle pop push iret push mov lret rex.WRX add jmpq pop cmp out and rclb sub test leaveq movsl ja pop imul and pushq xchg out subb imul lret sbb rex.WB mov jg xor rex.WB rex.RX mov rex.WR loopne sub xchg int sub mov rex.RX shlb (bad) mov pop mov rex.RXB xchg orq cmp rorb (bad) jle js enterq xor icebp mov rex.WB rex.WRB cmp notb pushfq mov (bad) lock retq xchg rex.X sbb lret insl cmpl fldenv (bad) or add push jbe repz sbb (bad) icebp rex.WB mov clc movabs loope mov rex.WB repz (bad) pushq ds xor cmp rex.WB fdiv xchg loopne out enterq rex.WR rex.WB (bad) mov xlat rex.WR mov mov push rex.XB int3 in rex.WRB adc sti adc pushq retq add lods or in mov xchg insb icebp mov pushq out rex.WRB outsl (bad) mov pop adc test je rex.RXB mov rcll push rex.WXB rex.WB (bad) lock imul pushq (bad) jo cmp loopne or outsb in js sahf fild rex.WRB xchg sbb jp rex.RX stc (bad) cmp out sub pop xchg xchg (bad) push (bad) xor ficomp lock jnp rex.RB test add jge insb cmovb rex.WB js retq imul adcl lods cs (bad) rex.WX rex.WRB rex.WB rclb rex.WR xor jne movabs testb mov rex.WB movsl adc or xor sub retq int cmp mov movslq test mov (bad) pop sbb mov iretw jb fstpt es cli rex.WB sub std and outsb add (bad) enterq rex.WB rclb mov adc jp mov cmp rex.WXB lret adc shrl rex.W (bad) pushq cltd pop mov xor (bad) adc pushq orl rex.WB xchg sahf pop pushfq iret push and mov movslq rex.WRX rex.WRX add icebp push (bad) cwtl insl (bad) pushq pop shll rex.WB inc pop sahf rex.WRXB rex.WB mov rex.WRX lock leaveq fs pop shll rex.WR cltd xchg leaveq (bad) or push rex.RXB (bad) movslq (bad) stos pop loopne rorl je out and sub insb rex.XB jne cld rcr jge jp xchg or or loop sub (bad) rex.WB xchg addr32 movabs pop pop lea cmp sub out and cmp pushq jge (bad) and nop retq pop rex.WX jb mov int3 callq xchg rex.WRXB int cmc rex.WB pushq jae addl sbb push imul rcll xor (bad) int3 or cli xchg pop jne or nop loop rex.WXB cltd mov pop mov lea pushq cmpb repnz (bad) pop sbb (bad) scas rex.XB push loopne adc xchg mov (bad) loopne repz rex jae cmc outsb sti pushq xchg (bad) (bad) rorb (bad) rex.WB stos frstor pop and sub gs jg mov add pop imul fisttpl rex.X addr32 adc mov movabs repz movabs rex.WX rex.RB scas rex.WB leaveq rex.WB mov sbb jns xchg fiaddl sti cmp pushq rex.WB mov rex.WB (bad) push xlat js or (bad) rex.RXB scas rex.WB rex.WR rex.W (bad) xchg divb je and (bad) sub lret push or or ds test ja retq push (bad) (bad) mov mov movabs pushq xchg sti rex.WB (bad) jle js add rex.X mov stc mov hlt loop movslq rex.WB (bad) adc jg loop fstl scas mov insl (bad) test fwait mov pop scas (bad) mov and rex.WB mov cmp and cld or icebp mov insb and jo faddl xchg or mov lods loopne sub scas movabs cld mov mov movabs sub rex.WB cmp sarl callq xchg mov sub jbe pop rex.WXB xchg or mov pop out pushq mov rex.WB scas jmp push cli in rol fldt and mov mov rex.WB cmp out fcomip cmp rex.X or or callq sbb xchg (bad) int3 adc sarl xchg addr32 rex.RB sahf popfq movabs pushq mov mov (bad) rex.WRXB loop iret jo rex.X add rex.WX (bad) rex.WB notl (bad) movabs jp push sbb sub pop cmp pop movabs movabs sbb rex.XB lods (bad) add (bad) je pop leaveq jmpq frstor out jb xchg loop out or cmp fs adc xor stos callq or rex (bad) or push in rex.WRB test stos in in cmp xlat xchg mov push pushq movabs ror xor pop outsb (bad) test nop mov add leaveq rex.WX or je xor adc enterq jns mov fcompl (bad) xchg (bad) fnop loope pushfq rex.RX add fst insb callq (bad) (bad) xchg sub cmp jge mov mov xchg int3 add jge xchg rex.R rex.WRXB callq unpcklps push movsb rex.WR (bad) out cmp cmp fildll cli fs (bad) fmull jbe rex.WB jns (bad) loope xchg movsb jl test jrcxz xchg and callq mov add sbb fs mov (bad) loopne adc push push xchg cmc push pop sbb test movabs adc rolb mov rex.R es or js lods pushq imul pushfq rex.WRB jo,pn sbb fistl xchg add xor (bad) rex.RB rex.WB test pop cmpsl cltd xor out jg test ds rex.WRXB scas push movsl lods push rex.WB nop repz sahf (bad) (bad) movsl sbb xor jmpq rex.RX rex.WB int pushq or push add or push (bad) jmpq test div (bad) pushq scas hlt cli movabs popfq insb (bad) stos or jge (bad) jge (bad) cmp imul cmp sti or jne js ljmp (bad) lahf stc leaveq pop xchg lea sbb retq out rex jge (bad) rex.R jle out xorl pushq lret mov push mov out orl mov mov sub cmpsb pop repz mov xchg movabs pushfq (bad) ficomp pushfq push (bad) enterq scas sbb (bad) (bad) pop push rex.R rex.RX (bad) pop mov and popfq mov xchg add pop jp or push and push rex.WRB cltd gs (bad) or xor enterq imul cmp movsl (bad) and sbb fmuls sbb callq test cld and lods out (bad) movabs movabs (bad) ja in or mov movsb pop rex.R jo hlt sub rex.WRX sub mov jo pushq pop test nop sbb xor mov jb (bad) and (bad) cwtl push repz xor enterq add int (bad) (bad) and mov jp movsb sub repnz icebp rol out stos xor (bad) sub jmpq loop leaveq outsl sbb rex.XB sub push sub es shlb sbb pop mov xor pop out sahf lret xor rex.RXB rcr sbb std sti enterq push xchg xor negl in clc (bad) rex.WB sahf rex.B rex.B (bad) nop in jns (bad) adc push movabs xchg (bad) or mov adc sbb mov (bad) and popfq mov mov add adc (bad) out xlat fcmovu loop lea movabs movsb lret add push (bad) jmpq cmp cmc and or loopne add ss orl fcompl pushfq mov jne mov pop addr32 xchg or shrl xchg (bad) cmp mov retq sbb sbb fnstcw cmp rex.W sub pop lret (bad) jle cmp popfq sbb rol je stos mov (bad) sbb callq cmpsl add or movslq jge rex.RXB movsl cltd mov int3 movabs (bad) movabs xor out out retq (bad) out mov mov cmp in push lods (bad) cmpsb add movsb rex xor cmp enterq test jge adc hlt adc rex.WX sbb adc rex.WB adc int movsb jb in add mov imul (bad) or adc outsb add cmp out (bad) ffreep rex.RB in xor xor mov push lahf push insl add rex.R faddl cmp sub test retq sbb movabs out repz cmpsb (bad) (bad) scas movabs iret lret mov jno pop mov enterq cs rex.WRXB and push jge lods hlt mov rex.WX push rcrb jno mov add movabs loop jl (bad) (bad) rex.R xchg (bad) sahf cmp xchg enterq callq xor cs pop (bad) jmpq add xor mov (bad) in test add test es popfq test xchg rex.WB fiaddl pop adc fstps sub (bad) lods adc out mov pop sbb xchg add lods insl pop fwait cmp mov (bad) stc cmp mov int3 incl (bad) outsl rex.WR jbe mov test enterq and cmp mov iretq push shrl movslq rex.WX mov sbb test hlt mov push rex cmp adc mov cmp xchg and sarl add mov test jg sub fistl push pushq mov rcrl insb adc movslq add insb mov out push fcom jne test or fidivl rex.RX rex.WX rex.XB add cmc xchg and in ror mov cmp rex.WB (bad) jne sub std loope pop adc add mov sub pop fdivrp lahf push (bad) rex.WB adc xlat xchg movsb rex.X pushq out push imul rorl (bad) shrb adc pushq rex.XB or retq icebp subl or jge (bad) fcoml cli roll mov test test pop jne (bad) outsl (bad) add (bad) push enterq (bad) addr32 and mov xchg xchg xlat pop pop repnz rex.RX rex.B shlb sub xchg loop jae fcmovu add push jle movabs rex.WRB sbb xchg stos repnz cli subl hlt cmp ja callq and push mov movabs or (bad) xchg push std movslq leaveq rex.RX stos fcomi test cmp je rex.WB gs fld1 outsb pop xor (bad) testb xchg cwtl mov repz fsubr lea repnz jl (bad) and mov jmpq std ja scas stos (bad) repnz or pop (bad) enterq pop and and movabs push xchg rex.WX callq jle rex.WXB int rex.WB mov addr32 (bad) or retq decb (bad) sub xchg jbe nop (bad) sub push or (bad) jo push xchg mov shrl mov xchg iret fwait (bad) rex.WB movsl test cltd pop sbb rex.RB mov pop mov mov xchg lret mov sbb movabs sub js rclb mov xchg callq sub mov pushq nopl lret movabs add (bad) fldl (bad) repnz sar xor rex.XB rex.R jmp movsb in (bad) or fisubr leaveq mov fistpl mov lea and push and leaveq push jno loope rex.W or adc cmp (bad) jmp (bad) cmpsb cmp pop mov push (bad) mov lahf in (bad) rex.WXB clc (bad) add sbb or in push push rex.WX mov out leaveq test js nop jo or mov shlb and push mov movsl push jns gs cld mov add mov mov stos add insl andb imul or adc pop idiv fwait pushq rex.WX movsb cmpsb or xor xor cmp and jmp imulb xchg (bad) subb nop mov fnstcw mov rcl xchg xor sub add push (bad) or loopne scas cmp jne jrcxz add sbb jno cwtl (bad) sbb cs retq test ficomp rex.XB xor or rex.RX callq or jrcxz (bad) and push push adc jge insl rex.WB shll rex.WB (bad) test pop out cmp gs mov (bad) xor cmpsl add jge roll fidiv int xchg jg (bad) pop (bad) (bad) adc rolb mov adcl push loopne add insl gs (bad) iret sub pop push mov and xchg repnz cmp (bad) cmp push rex.WRX fldl (bad) jns loope test sti and fnsave rex.W rex.X lret rex.W popfq cmp stos jb test mov pushq (bad) rex.WB jg leaveq jns gs jrcxz (bad) rex.RB rex.RB rex.WR rex.WB and test callq rex.WRX rex.WXB or (bad) nop or in xor pushq lock ss (bad) rex.WB idivl movabs mov xchg cmp rex.WRXB cwtl (bad) pushfq lock lret rex.WB (bad) lea (bad) jne rex.B and fisttp jl and rex.WB (bad) in rex.WB fs adc data16 leaveq ss lods rex.X callq je push imul (bad) xchg cmpb (bad) cmpsl adc pop pop loope and pushq jae rex.WRX xchg cmp (bad) rex.WRB lock mov jnp jo adcl push mov shl xlat rorl add add cli sub lods callq rex.WR pop or cld movsl clc movabs orl iret popfq (bad) rex.WB push push pop cmp cli int3 mov movabs cmp mov mov (bad) sarw retq rex.WXB sub xchg jns nop mov movslq or jge push movabs xor xchg nop scas lods xchg rex.W xchg rex.WRB rorw cmp lods sbb push out cmp xchg mov repnz cmp adc leaveq (bad) adc (bad) ds mov cmp mov (bad) (bad) clc and adc mov sbb xor rex.WRX rex.RB rex.RXB hlt sarb cmp xor mov fldcw movabs cmp mul cmp (bad) jns pop movabs (bad) jle sub cmpsb pushq jg rex.RXB lea in xchg repz pop insb adc rex.RX ficompl rex.WXB adc mov rex.X enterq adcl rex.WXB movabs addr32 xor (bad) rorb jns loop adc mov insl (bad) push add cmpsb add mov lods adc rex.RXB pushq rex.RB lret (bad) ja mov mov rex.WB mov pop sbb lock sbb mov (bad) mov jne (bad) cmp (bad) sub xor lahf mov movabs loopel (bad) pop (bad) xor xor in sbb adc or mov (bad) fstl mov lret cmp xor (bad) flds (bad) rex.WB and cmp fistl pop xchg xor (bad) iret mov rex.X int3 lret xor sub xchg (bad) pop mov shr or rex.WB mov push mov rex.WRX rex.WB test (bad) add in (bad) stos cmp jno sti lahf out jmp xchg mov push mov callq jns jmpq mov pop movsb (bad) rex.WB loopne or rex.WXB rex.WB movsl (bad) rolb (bad) cmp rex.XB rex.WRB jg add pop mov push mov sub (bad) int3 imul xchg pushq loop es xchg sub (bad) jno cltd mov movabs and mov sub rex.WB fsubrs jmpq std mov (bad) push in cmp mov xchg add data16 cmp rex.WB jp rex.WX rex.WB retq xlat (bad) out mov test loopne jrcxz or imul addr32 mov gs nop callq or xchg mov (bad) addr32 xchg enterq rex.RB imul (bad) sub jno (bad) push movabs in mov fs rex.W sub (bad) pop (bad) add mov mov (bad) cmp addr32 rex.W test push (bad) mov rex.WRB fidivl xor lods mov rex.WB rex.WXB pop add rex.WB mov (bad) jrcxz jbe (bad) sub push (bad) rorl mov xor rex.WB incl sbb fwait out std rex.RB pop or or cltd or push rex.WX imul rex.RXB cmpsl xchg xchg xchg add rex.RX and or rex.WX cs scas fwait xorl movsb jmp (bad) (bad) enterq mov test mov pop maskmovq (bad) mov pop lods rex.B rex.XB mov out xlat (bad) frstor fs sub (bad) (bad) notb movsl mov (bad) rex.WRXB repnz cmc (bad) in test xchg jp out xor or pop retq (bad) fmuls pushfq retq xor (bad) imul imul je mov fwait test jae (bad) movabs mov (bad) (bad) xchg cmpsb rex.XB andl hlt sbb jns sub mov retq loope icebp adc pop xor fs pop adc jae add (bad) rex.WRB jmp pop (bad) cmp mov cmpsb test pushq jae xchg add xlat push insb js sahf sbb (bad) push mov (bad) sub (bad) insl cmp nop lods mov imul (bad) enterq rex.RXB fs sub sbb and cld mov cmpb mov adc jno rex.WXB pushq xor in shrl cmp push lods add scas adc (bad) (bad) cwtl add xlat stos (bad) sub test (bad) popfq movabs (bad) cmp (bad) sub (bad) or cmp lret fs adc lret lea and fcoml jg pop shrl fnop add sub popfq (bad) rex.WR push lahf (bad) (bad) mov ljmp and add rex.WRXB and adc fs (bad) (bad) xor sbb mov xor jmpq addr32 sbbl std xor mov nop push and stos or sub pushq rex.R add movabs rex.WR movabs stos callq xor fdivr mov pushq lods xlat imul out dec mov icebp movslq add rex and mov (bad) (bad) sub sbb xchg cmp cmpsb fs sbb hlt (bad) fwait movabs (bad) (bad) fstpl int imul sti pushfq or rex.R add mov notl push rex.W mov pop (bad) rex.RB (bad) mov fxch mov movl icebp ficompl imul xchg sub mov addl mov xchg (bad) scas xchg (bad) (bad) push push (bad) mov rex.R (bad) (bad) out icebp cmp (bad) jb jmpq (bad) imul rex.R rex lahf (bad) (bad) adc retq sbb pushq (bad) cli (bad) lahf and cmp rex.R lea xchg mov sub in mov sbb and sub stos out push rex.WB loop jo and fildl add cld retq mov fs sub jg rex.WB xchg add movq jo hlt xlat sti mov cltd (bad) rex.WB in lods cmp mov clc hlt data16 addr32 mov jg shr pop rex.WX push je sbb cwtl scas and sti movabs imul cmp adc int or add repz jg mov xor jmpq rex.WB xlat add test rex.WB sbb test jl stos (bad) pop retq or (bad) test rex.WB rex.WRB lods fistp push xchg int (bad) sbb (bad) lock addr32 test movsl rex.B insl sbb sub xchg push int3 (bad) repnz rex.WXB or xor xchg jmp or (bad) jae rex.WRXB sbb repz imul test repnz hlt sti push (bad) rex.WB xchg xor cli adc cmp rcl or and (bad) sub or push lods rex rex.WB js movabs xchg rolb adc fwait jnp stos nop rorl pop gs add and mov (bad) mul movabs je push out rex.WRXB loop rex.W push in cmpsl pushq in jrcxz mov gs sbb push rex rex.WB jne test rex.RXB or mov out pop in jg out hlt adc mov pushq nop (bad) xchg insb retq fs jl (bad) rex.WB (bad) negb repz rcl rex.WX or sbb in push (bad) pop jmpq (bad) xor mov rex.WB rex.XB mov jmpq stos loope andl in movabs cmp loope sub clc cmp and std andl sub jb rex.WB pushq xlat (bad) sti xchg rex.WB (bad) mov lods mov movabs outsl insl mov pushq add mov xor sub cmp mov test (bad) (bad) movabs clc js add cmp push cmpsl (bad) mov cmpsb mulb mov pushq mov rex.X testl and insl rex.W rex.WB movabs sub stos (bad) movsb rex.WB pushq fildl cmp jnp gs or callq (bad) leaveq rex.RXB sbb cli xor sbb je jno (bad) icebp rex.RB sbbb movsl mov cmp fild fwait hlt rex.B jbe (bad) pop lods callq fsubr push sahf (bad) rolb popfq rex.WB imull (bad) callq add mov scas (bad) imul xchg fbld rorb ja (bad) adc pop cltd pop jrcxz (bad) sub sahf rex.X xor rcrb repnz popfq out push rex (bad) (bad) or test xor mov jbe pop or add sbb (bad) sub xlat (bad) (bad) (bad) retq xor lret pop ss jmpq mov fiadd add enterq in outsb pop popfq jno jmpq and jae fs rcll loopne xchg fwait sbbb fdivl or rex.XB xchg add (bad) sbb (bad) test mov jbe (bad) rex.WB mov in (bad) rex.X ss js jne retq and cwtl xchg (bad) jp mov or enterq (bad) pop xlat and (bad) rex.WB enterq addr32 rex.WB add sbb lahf pop pop fstps adcb rex.WRX or leaveq popfq shrl xor rex.XB retq rex.WRXB fst cmp pop testb rex.WRX rex.WRB fcoms cmp mov rex.B ss jmpq sbb (bad) jne (bad) jnp std leaveq mov fmuls rcll movabs sbb rex.WB rex.WRX (bad) movsb cmc cmp movabs jns insb stos jo jo rex.RXB insl jrcxz push clc fmull rex.WB movabs rex.WB mov (bad) retq insb (bad) push rex.WX mov rex.WB rex.WRXB xchg lret pop leaveq or (bad) (bad) cmp js jrcxz push sub imul fidiv outsl fneni(8087 mov mov xchg (bad) insl in rex.WB vldmxcsr push stc rex.X sub push (bad) int in (bad) lahf addr32 cmp outsb xchg sub rex.RXB sub rex.X cld pop (bad) lods movabs (bad) sub rex.R (bad) mov mov (bad) xor mov std sub add (bad) xchg cli adc notl rex.X (bad) (bad) retq out cmp rex.RXB lock or (bad) sbb int3 add (bad) fwait xchg jl xor mov cli shlb add ja (bad) sbb sahf out sub movabs xor lods mov imul pop jae decl movabs sub (bad) mov xchg pop enterq xchg pop lahf or sbb mov jmpq movl lret stc or and mov jg rex.R adc (bad) int3 and fsubl (bad) rorl test out mov ljmp movabs std repnz mov fisub sbb pushq pop (bad) loopne rex.WB fs rex.R add adc clc cmc adc push stos movabs jns and (bad) xor push rex.WB rex.W sbb leaveq xchg clc mov rex.R mov cmp movabs (bad) xchg (bad) push pop rex.WRXB xor mov rex.WRB sub (bad) push (bad) loopne fidivrl lret rex.WB ds roll add rex.XB and jns callq outsb lea xor cmp (bad) data16 movl sbb jo imul mov stos jge movsl xchg fcomps in fnop mov mov jge movsl sub pop insb (bad) (bad) out pop or (bad) sub outsl test jp mov (bad) insb (bad) sbb xchg sbb callq (bad) cmpsl adc movsb rex.XB ja mov pop xchg movsb outsb jle rex.WB (bad) decl repnz pop (bad) lfs rex.WB rex.WR adc mov jge xor fild (bad) ss rex.WB fldt test pop jrcxz fisubrl rol movabs (bad) or cmp sbb and sub pop (bad) rex.WRB rex.WB data16 test popfq mov jae adc mov cwtl push mov movabs nop rex.WB and adc xor sbb imul (bad) mov rex.WRXB mov in xchg jle mov sub scas xchg xchg loope movb popfq push in mov rex.RB ss mov sbb xchg movabs jrcxz jmpq rex.WB ds iret xchg push repz (bad) callq clc sti push imull and push rex.WRXB lods loop adc jl (bad) (bad) rex.WX cmp gs loopne out popfq rex.WX imul pop clc ficom out jge rex.WB and addr32 jmp leaveq fstpt rcll rex.WB pop (bad) (bad) mov scas xchg pushfq adc mov xchg repz jo (bad) rex.WB iret mov xchg out movabs or mov rex.WB cltd push cs addr32 (bad) (bad) xor fs and rex.XB rex.RB mov cld xchg (bad) sub mov (bad) mov mov (bad) rex.RX and push pop add pushfq (bad) xlat rorb insl (bad) push (bad) jns (bad) jne xchg lods in jg push lret int or mov rex.WB sbb (bad) lea pop rex.WB or push leaveq movsb rex.WB sub rex xor cltd (bad) mov sbb mov mov sub or mov clc add hlt scas popq (bad) cli rex.XB xchg jns sti rex.WB movabs pop push mov rex.WB pop push stc xlat rex.WB lods in (bad) repnz (bad) (bad) shrl mov add cmp sbb rex.WB rex.WB lock (bad) mov push (bad) rex cltd cli pop jns callq (bad) icebp pop jp (bad) movabs xor xchg sbb clc add or (bad) pushq (bad) (bad) addr32 loopne iret rex.WB sbb and add out insb in xchg movsl or jae and rolb jno (bad) fiadd jrcxz movsb cmp sar cli rex.W push push movabs outsb rex.WRX rex.WRXB int3 rex.WB push stos ja rex.WXB lret mov jns mov rcl callq or insb test je lret xchg stc rex.RB rex.WB xchg (bad) sarl out jno rex.WB xchg scas sbb insl (bad) sbb pop rex.XB sti sub pop jmp mov pop outsb test mov test mov jbe mov sbb sub (bad) rex.WB xchg mov lea (bad) or fcmovnbe jg jns (bad) movsl sub repz sbb fsubrl mov add rex.WB rex.WRXB rex.WB sub callq or mov cmp or and rex.W cmpsl sub in (bad) shlb scas or (bad) adc (bad) out lods pop fstpl addr32 stos push vmulps (bad) movabs (bad) pop xchg nop (bad) sbb jne (bad) cmp ror sbb popfq rex.RB cmp (bad) retq clc cmp xchg rex.WRX data16 push rorl pop mov sahf rex.RX push pop pop xor leaveq sub repnz cs rex.WB mov rex.RB sub gs stc lods movsb mov push jmpq fcompl adc push cmp pushq or rex.WRXB rcrl sub mov ds gs or mov std or cltd sub popfq lret cmpl jge pop lahf retq sub pop insl sbb outsl enterq sub rcr movabs sbbl sbb movsl cld in rex.B pushfq (bad) xchg xchg push and cmp xlat orl fwait adc sbb rex mov movabs loope adc (bad) int3 rex.WB push pop iret mov mov mov cmpsb mov mov negl in xor and add cmp push xor mov shr push jnp sahf loopne (bad) out (bad) rex.WB scas pop int3 or mov or popfq rex.X and lret rex.WB mov mov sahf pop test or flds pop and icebp fildl rex.B pushq and push and and (bad) or mov jp fmuls rex.RX in mov in lret pop andl xchg sub lock pop push rex.WX mov (bad) loope (bad) sub jbe push sbb jb movsb callq pop rex.RB movabs (bad) rex.WRXB stos lret in adc ss (bad) push and int3 xlat movsb out or retq jg adc (bad) mov (bad) (bad) (bad) es and rex.WRX movabs push and outsb cmp stos cmp rex.RX mov je sbb in (bad) or or cmp cwtl cmp xchg jae outsb lea (bad) (bad) fisttp movabs rex.WB mov jle pop jrcxz (bad) xor sti (bad) (bad) mov rex.WRB push lahf or mov rex.B jae sub popfq enterq jnp je xchg or (bad) out cmp es iret stc rex.WXB sbb rex.WX movsl scas imul jnp adc jmp (bad) movsb psubsb cmp stos movslq (bad) jb (bad) or (bad) rex.WRX rorl nop pop pushq or xor push test rex.WX rex.WB mov mov adc sub cmp (bad) movslq cli mov mov xchg int3 mov adc jno or jg rex.WB rex.WXB enterq sub (bad) cmp mov je rex.WB (bad) iret push movsb jnp data16 add idiv leaveq out pop mov or rex.X or mov or mov push js add rex.WXB add or sahf je test or add (bad) lret adc (bad) mov outsb adcb rex.WB scas mov mov and clc in xchg xchg cmp fnstsw rex.WRB repnz js add mov out rex.RXB cmp (bad) (bad) jbe jns and shr (bad) int3 sub divb pop rex.WB or retq (bad) xchg mov and mov rex.R pushq rorb adc rex.WX movb mov fild jbe pop adc xor rex.WB xor pop loope lret cmp rex.WRX lock jmpq mov pushq (bad) mov or add rex.WB fnstenv or pop cmpsb cmp cld lret jb mov mov jg rex.WB mulb fadds xchg mov movabs fidivr and rex.B retq imul rolb mov or gs (bad) rex.WB mov loop pop add push push rex.X fs popfq jmp or shlb mov lods and jle,pt pop loope rex.WB ds push pushfq and fs stc cmp (bad) gs (bad) jns and sub pushq cmpsb rex.XB or pop and xchg movabs pushfq add (bad) fsubs (bad) in (bad) test rex.WRXB movabs fldenv sbb sbb rex.WB rex.RB fcoml pop stc int fxch cld sub rex.WB pop (bad) xlat jns pushq movabs mov jns rex.WRXB jne jge fsubrs (bad) pop (bad) hlt movhps (bad) lea lret cli rex.WB repz jo rex.RXB and sbb xchg loopne fucomp adc pop rex.WB (bad) mov sbb add je push rex.WB cmp loopne and pushq mov popfq mov rex.WB test hlt pop jge mov mov scas push flds (bad) movabs jrcxz js insl movsl cmp (bad) imul jno mov pop lahf mov scas lock or rex.RX loopne jg rex rex.WB xorl pop cli cmp jl (bad) outsl xor adc push stc movabs jno cmp out mov xor pushq xchg cld (bad) rex.R rex.WB fs add int3 out mov mov fistl in fidiv jg jmp and pop int3 xlat or gs push clc addl retq xor mov pushq (bad) and mov rex.WRX movslq pushq and mov xchg sbb rex.WX (bad) retq sub in xchg cmp mov push sahf jae rex.WRXB rex.WX push rex.RX in movabs rex.WXB sbb shlb add push jrcxz cmc (bad) lods mov fsubs sbb adc rex.WB jns in xchg jbe rex.WRB out test (bad) rex.WR rex.WB xorl (bad) xor pushq cmpsb and scas sbb jmp cli sub (bad) mull jbe mov sub test sbb (bad) out fidivrl pushq pop pop or iret xor xor sbb in mov push mov push je mov test add lods mov out (bad) xchg jb lret rex iret frstor adc lock callq (bad) pop loope shrb test stos movsb push in mov push xchg int3 rex.WB rcrl fwait mov loop outsb rex.WB mov movabs mov mov lret rex.WRX rex.WB rex.XB mov or cmp lods fimull xor jg push movabs or and movsb pushq add or out cmp (bad) (bad) adcl jrcxz xchg xchg es rex.WB (bad) in rex.RX rorb rex.WB test rex.WRX lret xchg xchg rex.WB fnsave or insb pop mov mov cmp movsl (bad) xchg push cmp jrcxz sub sbb pop (bad) test fisub imul repnz xchg rex.RX xor pop mov sub adc ja and (bad) (bad) adc retq test add sbb and scas lock adc xchg jrcxz rdtsc sub pop clc mov pop rex.WB or test xor fs enterq pop (bad) movabs shrb sub pushq stc out outsb or or loop and rorl fs mov cld (bad) mov mov cmp (bad) int stc cltd rex.WB push insl rex rex.WB jmp callq sub or mov add imul add scas push cmpsl test rex.WB sub sbb rex.WRX fsubs (bad) jl xor adcl pop rex.X gs test (bad) shll rex.RXB sub rex.WB cmpsl mov outsl xor movabs retq lret in es adc cmp js rex.WB mov jmp cmp cli push out mov or xor (bad) rex.WB rex.XB xchg fsubl cmc pushfq jmpq mov jg subl xor or pushq jne lret adc cltd rex mov (bad) rex.WRB rex.WB rex.WRB fmuls pop pushq and lret movslq rex.WRX add cs cmp movabs repnz rex.WRXB xchg adc lret lahf jge icebp fs retq rex.WB pop push scas xor or js rolb mov fs fbld gs mov scas popfq (bad) mov and jo (bad) scas or enterq mov mov mov js movabs adc (bad) loope pushq rex.WB mov push mov mov jnp (bad) repz sub xor push and pushfq sbb jmp add xchg imul (bad) jg rex.WRB rex.RX xor (bad) fsubr (bad) test int3 xchg jmpq adcl xor movabs out xor movslq cmp retq xor cmpsl pop mov (bad) movabs in or nop stos xchg test movabs push cmp pop rex.WRXB adc mov (bad) jmpq adc outsl mov cltd (bad) xor data16 pop out pop jrcxz rex.WXB rex.WB add retq scas xor fidivrl imul shl shrb rex.WB mov fwait idiv fsubl movsb jg lock sbbl test in mov (bad) jns rex.RX shlb pop or movabs rclb mov add cmp adc pop mov movabs (bad) rex xchg cmp and ja lods rex.WRB sbb clc jmpq cmp rex.RB gs rex.WB jo movabs rex.XB (bad) pop movslq jbe retq xor (bad) sar push rex.WB jle jg xchg out pop xor fwait rorl or cwtd fstpl rex.WB out or add pop sbb or xchg mov (bad) sbb ficompl rex.RB mov pushq movabs sub rex.X jle rex.WB icebp mov jne mov sbb out cltd mov (bad) push push (bad) scas xlat (bad) mov or cmp pushfq sbb insb rex.RXB push xchg adc rex.WRX imul (bad) xchg movabs or rex.WB out stos je or rex.WX (bad) and stc (bad) rex.RX js mov orl sarl (bad) in sub sub (bad) rex.R iretq pop ficoml retq (bad) rex.RX hlt (bad) sub xor mov sbb rex.WR push sub stos test (bad) movsl ror jmpq iret (bad) hlt js mov push push adc pop rex.WB fild (bad) ds shl or and loopne jnp divl test jns xor adc push loope iret hlt lods rorb repz rex.WRXB push or subq (bad) cmpsl cmpsb sbb push movabs rex.WB jrcxz repnz rex.WB and add sub rex.RXB rex.WX push cld pop loopne iret adc loop sbbq push fxch lock in pushq sub rex.W mov fist movsl or mov rex.WB fs int (bad) scas leaveq sub (bad) rex.WB cmpsl (bad) jbe push sub (bad) test cmp rex.WB in sub or (bad) rex.WB retq out (bad) in movabs push movslq rex.X xlat cld movabs xchg and lahf mov (bad) or sahf jmpq mov sbbb data16 js rex.WB rex.R (bad) xchg iret jae rex.RB rex.WB gs outsl sti (bad) sahf jrcxz jl xchg xchg movabs pop (bad) shll adc pop rclb sub (bad) rol movabs (bad) rex.WR fcoml imul movabs mov ja jnp jb adc rex.RB sub test rex.WRX rex.RB push (bad) test adc pop data16 push (bad) xchg jno cmp xchg or int rex.WRXB outsb (bad) pop movslq mov adc hlt sbb rex.WB xchg xor mov out (bad) xlat jns cmc stos subl push out push jge sbb (bad) mov (bad) lret jo test shll prefetch rex.WB adc sbb rex.WRB (bad) mov addr32 jg (bad) mov mov mov sbb clc pop pop mov cltd bnd insl pop gs decb sub sbb scas cld mov mov fadds (bad) or (bad) xchg sub jg xchg repz rex.WX or repz and (bad) xchg cmp pop xchg subb pop mov jbe js fbld or cli sbb jns fcmovnbe popfq lock in jmpq nop test mov cltd push enterq movslq pushq cwtl in imul fimul rex.W cmc rcl rex.WX data16 int3 mov (bad) lahf push stos push cmp (bad) pop xchg movabs (bad) movabs (bad) movl rex.WR fs jns push mov ss insb (bad) (bad) xchg pop rex.RB pop rorb imul data16 rex.WRB jne jno jp mov in cmp movabs cmp pushq mov xlat (bad) in rex.WRX test sbb stos add hlt scas pushq cmp lret push repnz ja out notb enterq xor jmpq jmp pop (bad) add lret std mov rex.X scas cmp push out callq xchg push jmpq mov (bad) (bad) adc (bad) (bad) (bad) and sarb cmpsb leaveq int3 xor add sbb test (bad) rex.RXB iret rex.W add or out leaveq mov pop add xor callq movabs sub scas enterq rex.RXB mov lahf rex.WRB rex.WRB (bad) callq mov (bad) push scas rex.WRB test mov retq push or xor (bad) (bad) sub lea xchg ror js ds push rex.WRB sahf jmp mov rex.W rex.RX add lea rex.WRXB rex.B xchg (bad) rex.WB (bad) callq pop loopne movabs adcb cmp jl xchg rcrb rex.WRX rcrb or (bad) sub stos rex.WB (bad) (bad) insl rex.R rex.RXB pop or (bad) lret stos fildll enterq fistl je lahf movabs insb xchg movsl jrcxz je movabs jmp stos pop (bad) jne mov pop jg mov rex.WB rcrl mov out lea out sar pop and rex.WB retq xor xor cmpsl imul gs test xchg and pushq lahf jns int push sub sub mov rex.XB (bad) xchg cmp ficoml pop or fidivl pop rex.WB data16 adc lods mov test jno mov ds out fld1 movsb outsl mov (bad) push rex.WXB or cmp cli (bad) sub (bad) mov rex.XB sub xchg scas sbb mov adc mov cs sbb jae adc mov movsb (bad) (bad) xchg rex.WXB push (bad) jae sub movslq out sub (bad) (bad) repnz add rex.RX jle (bad) js callq int3 stos scas test jp xchg data16 decb subb xchg sbb rex.X rex.RXB sub hlt in imul xchg scas pop insb in rex.XB rex.WB fisttp addr32 cmpsb cmc lahf leaveq rex.WB clc xor movabs mov adc callq (bad) movsb callq callq mov sub cwtl (bad) mov rex.WB outsb jne or or rex.WRB (bad) mov adc std rex.WRB rex.RB rex.WB ds je xchg push test pop cwtl iret (bad) mov popfq or sub cld rex.XB xor lods rex.XB (bad) rex.WRX out int3 xchg addr32 add out lret push callq cmp push rex.XB jrcxz rex.WRB addb (bad) mov cltd jmpq fsubrl pop popfq xor rex.WB or outsl (bad) mov and out scas rex.RXB sub mov test leaveq jb or add mov mov rex.WB sbb or rex.WB rex.WRX rex.WRB pop movslq imul test es (bad) movabs pop rex.WB punpckhdq jae and (bad) popfq (bad) cmp enterq add mov adc stos (bad) rex.WB clc rex.WX outsl cld and rex.B mov pop add rex.WB xlat or add xor (bad) (bad) xchg pop mov pop lea sub mov (bad) test adc callq add adc out sub or cmp pop rolb adc lret xchg jns cwtl adc (bad) rex.WR rex.WXB (bad) (bad) (bad) jns pop addr32 or add adc pop int3 mov stos jb add scas mov mov fldt movabs insb shll (bad) rex.R stc movslq hlt push rex.WB mov sahf xchg add nop rex.WB or test push hlt cmp rex.WB adc loopne clc and stc enterq (bad) orl or test mov rex.WB (bad) ss movabs pushfq mov sub movsb psrlw lret xor xlat (bad) xor jne stos sub stos rex.WB (bad) bswap (bad) xchg rex.RB mov (bad) int3 cmp rex.WB lret fmuls jae jbe movabs and addr32 popfq cltd sbb int3 fadds xchg adc pop rex.WRB enterq (bad) sbb pop sub pushq cmpsb jp jl xchg lret rex rex.XB adc and mov push pushq jne pop (bad) sbb xchg retq (bad) (bad) rex.B or lock gs mov and push cmp pop fsubs push movabs jno rex.WXB (bad) cmp and shrb cmp xchg fldenv (bad) rex.WB movslq sub vcvtsd2ss sbb mov fisubrl rex.WB mov mov rex.WB add out jrcxz mov jl ja js lahf (bad) rex.WX jae xchg stos rex.WB cmpsl jmp lret add add mov jbe clc pop mov stc es fs mov sub mul xchg cld jge loopne and pushfq pushq iret rex.WXB and xor retq lods jmp or leaveq rex.WB rex.WR mov cwtl jl adc fbld rex.RX orb jmpq rex.WRXB cmp (bad) fsubrs (bad) fwait (bad) (bad) mov test rex.WB hlt fimul sub repz stos (bad) add mov and rex.X (bad) sub es rex.B pushq scas (bad) hlt xchg sub xchg (bad) (bad) mov ficom lahf (bad) mov jg (bad) js flds xchg (bad) sub movabs fsts jmpq push retq add rex.WR pop (bad) mov cmp mov movabs rol orl div in rex.RX rex.B int adc stos or rcll loop and rex.WB cmc rol xchg add xor pop fs cld push rex.WB or shll mov jns push jb std movabs (bad) xor stc sbb and and rex.WRX rorl mov xchg popfq jb stos xchg iret leaveq rex.WB incl in rex.WB (bad) mov (bad) lock vandps (bad) jnp out rex.WB (bad) xor push loop rex.X mov and mov fs retq movsl (bad) sbb pop rcr test add (bad) rex.R xchg cmp push cmp test cmp lret ja pop pop mov insb cwtl xchg rex.B sub push (bad) roll js rex.WB pop or rex.RXB (bad) shrb mov pop (bad) mov pop movslq mov adc insl jmpq sub pop hlt sahf rex.WX rex.WB in adc cli sub rex.XB lret adc movsl (bad) sbb stos addl (bad) pushfq test mov fstpl mov outsl imul callq push rex.WR pop mov pop push (bad) sub push pop js orl xchg in or xchg sbb retq mov pushq and test ror insl rex.WRXB or (bad) cmp and cli pop movslq (bad) lods movabs (bad) sub jne outsl push rex.R pop rex.WRB fs movabs xor sbbl jmp scas rex.WB cmp push jno mov jmpq and rex.WR add rex.WXB xchg or fwait pop xchg movslq in in xchg stos test rex.X int3 and fcomi pop mov fs jno je testb mov push pop or pop cmpsb mov test rex pop sbb xchg clc rex.WXB adc dec cmp (bad) add rex.WB push lods pop xchg popfq push jns xor mov mov rex.X rex.WX pop sbb adc rex.WB rex.RXB movslq mov rcl (bad) cli (bad) rex.WB push loope mov rex.WB add imul (bad) clc push ja (bad) sbb mov mov mov out pushq or mov mov in cld and (bad) loop rex.WRB mov pop rex.WB hlt movabs sbb loopel pop (bad) (bad) rex.WB jns adc rex.WR mov retq fcomps add rex.X jp loop in xorl (bad) sub push or ds movabs movslq (bad) mov sbb fwait stc repz rex.X addr32 sbb (bad) xor addl push push pop rex.X xchg rex.WXB xchg out popfq mov callq stc (bad) rex.WX (bad) or mov add outsb and push push rex.XB (bad) je mov shlb adc xchg int3 mov callq or rex.WXB (bad) sarb movabs frstor or xchg lods rex.WB and rex.WR (bad) rex.WB out push lods mov callq cmp push rex.WB icebp xor pop pushq rex.WB loop and push fmull movabs test xor sub sbb rex.RXB jb rex.WB rex rex.WXB rex.B sub lahf sbb cmc out sub repz callq jae mov add rex gs sub mov (bad) out lea fsubrs (bad) mov cltd (bad) (bad) (bad) rex.W pushq push es mov sahf adc pop rex.WB sub imul callq rex.RXB movabs flds xchg rex.B sub rex.X mov iret push jge movabs fsubs rex.B addr32 mov test movsl pop adc push xchg xor lret fildll rex.B rex.R (bad) gs rex.WB rex.WXB (bad) xchg jb cmp xchg outsl out pushq (bad) rex.RB stos lock (bad) (bad) int3 sub movabs pop cmc imul sbb loope add (bad) jae imul repnz (bad) rex.XB xchg adc out (bad) and mov clc out outsl push sub jg mov (bad) jmpq adc and (bad) pushq cltd rex.R rex.RB cmpsb and xor mov addr32 jge cs push fmul jrcxz push pop mov (bad) lret lar lods test mov jp callq pushq xor movsb push js pop mov addr32 je in rex.WRB addr32 mov cmp xchg out mov pop repz fnstsw jp push pushq jmp in enterq fmuls test sbb sub jb rex.WR rex.RB pop iret leaveq in rex.WRB rex.X fnstenv (bad) mov (bad) (bad) pop nop fimul movabs xchg scas shrb mov sub xchg movsb (bad) sub sar adc add test callq lock (bad) sub (bad) (bad) add test cmpsl pop rex.WRX lock es mov xchg mov xchg cmc push movabs movabs (bad) rex.B sub sahf lret test jo movabs mov or sub xchg cld cs sub mov (bad) fistp test imul pop test xorl int add (bad) jo and rex.WXB sbb mov xchg adc sub movabs push sub mov rex.RXB stos lret mov scas adc sti adc insl rex.WB icebp push mov stos or rex.WB xchg mov rex.RX test (bad) jns nop repz cmp xor mov pop or xchg in jo pop and sbb imulb pop xorl jno xchg jmpq (bad) rex.WB rex.W cmp femms cmc rex.WB (bad) cli (bad) fcompl mov or subl (bad) push lret and xor push cli imul jnp mov sub pushq test movabs mov (bad) (bad) cld movabs rex.XB adc movslq push pushfq (bad) icebp jbe sub sbb mov mov outsb pushq (bad) (bad) (bad) jae,pn mov (bad) xor and rex.RX rex.WB rcrb or pop xlat sub cmpsl out out enterq fldcw push (bad) mov mov and (bad) sbbl scas movslq mov rex.WB jno in pop es loop xor (bad) xchg jmpq push cmc rex.X mov sbb xchg jbe or test mov rolb lock xchg rex.RX out xor add push (bad) xor rex.WR scas rex.WRX rex.X jge mov cmp clc es out pop outsl stc or mov push movsl rex.WB sub (bad) rex.WB callq rcrl jge (bad) cmpsl cmp (bad) ds rex.RX mov cs rolb pop rex.WB jl movabs (bad) movsb imul add mov add jmpq jo in xchg pop pushq movabs pop xchg rorl rex.WB add xchg jmp add push xchg adc (bad) out rex.WB mov (bad) xchg (bad) callq xchg test jmp in movabs rex.WR jns outsb pop mov mov int3 mov loop retq add cmpsl add or xor mov xchg xlat ss sarl rex.WB xor scas lods vmovapd je js pop jns rol test sub (bad) xlat xor outsl or sbb pushq es mov jg mov rex.WB (bad) xor pushfq out mov rex.WB (bad) jbe pop rex.WB pushq nop fldl shll adc mov sub (bad) fisubl (bad) stos mov retq clc loope or jb jmp (bad) rorb cmpsb out rex.WXB sarb js adc scas push cmpsl lret ss (bad) sarl add mov nop mov push rex.W cmp and or adc pop mov mul sahf retq or rex.WB fsubrs cmp (bad) cmp jle cmp mov flds sar je scas jg lods leaveq cmp push fs and mov imul lahf insb rex.B loope addl test sti add xchg jrcxz mov mov mov jle int rex.WRXB adc pop pop data16 sub fcom push mov repnz xor cli ds mov (bad) (bad) xlat rex.WB in jp xchg movsb rex.B fwait clc mov popfq cmovge xor (bad) jae jo lahf fs xchg clc pop adc clc cmp mov mov cmp jns lock rex.WB mov push rex.WB or add (bad) xor rex.WB lods insl (bad) fs movabs mov add sbb push data16 xchg movabs xchg (bad) sub add cmp addq mov jmpq jrcxz out rex.WB movslq sti add (bad) rex.B cmc (bad) mov out leaveq rex fidivr rex.X imul (bad) mov rex.XB pop insl rex.WRB jbe jne (bad) sbb pop (bad) jrcxz cmp rex.WB mov xchg fwait pop mov xchg ds add cmp enterq or test cmpsl rex.WRXB outsl je mov jp cld enterq mov jo or rex.WXB xchg pop decb push push jl insl sub jbe mov rorb callq sub jmp data16 loopne xchg rex.WB cld std cmp push test adc add pop rex.B add std or sahf push add mov adc rex.WB repz lock and mov mov jg fmul jae xor or pop adc xchg xchg or cmp rex.WB rex.RXB add callq mov push scas outsl jp pop sbb and iret (bad) mov jle stc rex.WR in mov rex.WB imull push movslq cmp jae fisttp or imul jbe sub mov addr32 rolb pop stc push push cmpsb or pinsrw or adc adc popfq mov lret add outsb (bad) pop lret xor mov (bad) (bad) rex.WB hlt scas outsb mov mov mov test cli retq jbe callq and adc (bad) (bad) lods rex.WB mov vxorpd add pop addr32 xor int3 retq adc popfq pushfq and in pop clc orl rol mulb sub jno callq repz cmp movsl push mov callq lods lods rex.WXB rex.WB test (bad) fdivl adc rolb pop sbb sbb jae movsb rex.R mov xor vmwrite rex.WB (bad) rex.WR fs or rex.WXB pop addr32 retq rcrl cmc icebp xlat or callq xchg adc (bad) rex.WB pop mov rol pop rex.WB rorb callq and movabs loope sub hlt rex.WB pushq or add sahf (bad) repnz popfq cmp (bad) stos retq or mov lret callq rex.X cmpsl jae pop (bad) lret idivb push xchg rex.XB xchg repz or rex.R movslq fdivs pop in (bad) sub mov xor and sti loope adc cmp (bad) rex.B mov movabs pushfq or test sbb mov mov sbb push or rex.XB (bad) (bad) mov xor rex.B out cli out (bad) in add sbb jb lret fdivs (bad) lret lods pop callq (bad) retq enterq cld jge repz xchg xor rex.WR fs rex.WB xor jo (bad) repnz xor icebp xlat mov jbe (bad) mov (bad) mov or push add (bad) fmuls cmp out int pop cmc pushq mov in fbstp movabs mov jae xor enterq ja mov or sbbb movabs mov (bad) jns pushq sub and gs out pop stc (bad) js xchg movabs gs leaveq sub std lock mov fcmovnbe cmp out jl retq rex.XB xchg xor fwait (bad) jle fsts mov icebp fdivs sbb gs insb jg orl leaveq jrcxz rex.WB rex.XB sbb sbb test or cmc xor subl (bad) sub in pop out rex.RXB leaveq rex.WB and pushq mov outsb rex.WB icebp pop mov scas xchg mov and push xchg push loopne cmpsl orb sbb clc push repnz (bad) out (bad) push (bad) jb and rex.WB pop xorl fstpt subb pop and jo jp adc loopne lods nop icebp mov mov xchg fiaddl (bad) and shr movabs in pushfq rex.WR clc push xlat rorl rex.WX mov push or outsl sbb add (bad) sbb (bad) (bad) cli and and (bad) fucom scas std (bad) rex.WB in push (bad) es mov (bad) adc rex.WB je pop pop cmp and jg or jp and jg (bad) jle mov (bad) (bad) jns imul lahf sub stos pop hlt rorl loopne push fisubl xor jae and add jo adc movsb cmp int3 test and or insl rolb stc retq xchg sahf ds xchg repnz rex.RXB (bad) cld mov and cltd repz out add clc xor cmp in cmp and pop pop mov push mov imul or pushq lret xchg jge rex.WB mov cmp loope (bad) rex.RX rex.XB push mov xor clc std iret jne movabs rclb popq sarl enterq xchg add fisttpl lret xor cs out sbb sbb sbb xlat lret push popq (bad) test (bad) (bad) mov rex.WB rex.X movabs loopne jp xchg fs rex.WB movabs pop stos and clc mov mov xor insb push movabs mov mov rex.RX shll pop fisttpll jae sbb (bad) adc pop rex.WB outsl mov faddl (bad) mov out and js pop rex.WXB add xchg scas push xchg sbb jbe lahf cli rex.WB xchg or xchg movabs sbb cmp (bad) or (bad) xchg pop cmp rex.WB sbb (bad) mov and (bad) rex.WB mov jo loope (bad) loopne data16 adc jmpq jns int stos (bad) stos repnz cmp movslq outsl xchg lods loope fldt xchg jae mov mov sbb cwtl std (bad) imul mov ja addl sub out rex.WR lret mov sub not (bad) jnp in stc (bad) cwtl movabs sub jp rex.XB jbe rex.WRXB mov js (bad) or or cmp cmp push and sbb mov fstp xorb cmp push push sub test (bad) (bad) sub or es lret sahf add cltd adc sub shl xor jae mov add pushfq rcrb xchg std lret sub loopne (bad) add out jne sub (bad) jbe int3 push enterq (bad) sbb rex.WRX add loopne rex.RXB mov clc insl or xchg rex.RXB (bad) fistpll mov push rex.WR push xor xor cmp push sbb sub mov insl (bad) pop movslq cs xchg cmp adc sbb push pop lods sub mov jmp imul outsb callq movsl mov mov rex.WR cmp jg xchg lret cmpsl pop addr32 lret (bad) imul adc mov push movslq push imul adc icebp outsl rex.WB stos rex.WRX rex mov rex.WB or js jp pop add (bad) int pop rex.WRX rex.WB or xor pushq cmp add pop rolb and pushq fisubl insl jo int add add sub jae mov (bad) push mov sub movsb pop enterq pop rex.WB xor mov rex.XB and (bad) rex.WB sbbl sub (bad) movsl (bad) rex.WB and clc rex.RX sub in (bad) xor mov retq (bad) movabs jns mov push leaveq jg data16 out (bad) sub fldl in rex.WB rex.R mov out xchg push lods xchg pop nop int out addr32 pop scas js retq pop movslq rex.WRX mov movsl out icebp pop fldt lret gs (bad) and data16 add xor mov subl (bad) pop jge sub (bad) out adc cs push movabs rorl lock test cmp rex.WXB pop mov pushq lret jb test mov push rex.WRB cmpsl rex.RB test cmp push adc cld (bad) out xor jae adc xchg cmp leaveq rex.WB cmpsl pushq mov push rex.R adc xlat mov cmp cmp or roll jle cmpsl movabs cmc (bad) and rex.RB fdivrs (bad) callq mov rex.WR rex.RB (bad) test xchg xchg rol pop xchg mov jle out hlt xor pop or not jmpq pop fcmovnb mov mov (bad) (bad) mov sub repz lock add mov cmp rex.X fcomps push addr32 rex.RXB xor repnz pop and push in and xor (bad) (bad) rex.RXB cld push ja rex.RX fadds cwtl xor (bad) push sarl fdivrs xchg (bad) xchg sbb push rex.WRXB rex.RB rex.RX mov mov mov mov cltd jl mov mov rex.WRXB gs mov (bad) lods or (bad) test rcr (bad) cld sbb lret xchg rex.WR fmuls jae jae in mov jnp std xchg mov cmp rex.XB rex.X rep outsb (bad) cli movslq and mov out out push sub enterq test and or fnstenv test movabs xchg mov orl sub mov (bad) adc scas gs fs cmp or xchg std pushq ss pop int lret mov adc stos hlt rex.XB mov pushq sbb test (bad) cmpsl push sub icebp sbb ja cmp (bad) add (bad) callq stos sub stc (bad) mov mov mov sub jbe mov (bad) add sub loope nop (bad) rex.WXB add fdivrs rex.WB (bad) loope or hlt insl pop movabs lahf mov mov ror xchg xchg movsl (bad) (bad) rex jmpq cmp (bad) mov pop stos (bad) rex.WB shlb (bad) loopne rex.WB shlb cmp mov cmpsl xchg clc rex.W push imul callq or or fdivrs xor movabs jnp mov rex.WB jb insb (bad) jl mov and xchg or sub rex.WB fwait retq xchg sbb mov pop mov sub stos dec fcoml sub xor add pop (bad) rex.WB movsb movabs lret or pop jg sub std (bad) cs cmp xchg shlb retq out movabs jb rex.WB test and cs and insb rex.WX rex.WXB or xchg lret (bad) pop movslq imul rex.WB push loop fcmovnu (bad) test sbb pop sub mov pavgb adc ficompl xchg and rex.WB rex.RB cmpsb cmp or pushq icebp and jnp pop push rex.R jg mov fisttpll add pop rex.W pushq (bad) (bad) mov rex and adc (bad) test rex.X test sbb and sbb psubsb adc movabs int3 sbb rex.W and xchg add sub rex.WB sbb cwtl (bad) jns movslq rex.WXB xchg (bad) (bad) cmpb rex.WB movd in cmpsl sahf push test cmc out adc rex.WX (bad) faddl mov (bad) shr adc stc fiaddl js xchg jle lods and or int push or (bad) rex.WB rex.RX lock pushq cmc mov out sbb movabs cmp mov fcmovu (bad) divl movabs test lahf sub addr32 scas and (bad) pushfq rex.RX adc (bad) lea rex.RX rex.X lods decb or int3 (bad) sub xor adc movabs pop adc ja out xchg shr jae mov pop rex.XB (bad) sub jp jno pop sbb movabs and lea rex.WB jno out js popfq sti in add cmpsl fistp js inc pop xchg rex.WX rex.WB sbb jl out rex.WB pop mov test retq fisub (bad) movabs mov sbb pop rcr jns nop (bad) in sub jnp movabs sbb jno add (bad) push mov rex.WB loope imul mov cld ffreep add sar popfq rex.W sbbb xor xor xchg jmp loopne cwtl pop nop std and pop sbb rex.WR mov lret rex.X push (bad) (bad) popfq pop mov add xlat add sbb rex.WX rex.B or adc (bad) rex.WB fs enterq jmp ds push (bad) push out popfq pop pop and (bad) (bad) rex.WB (bad) or out test jne mov mov mov mov xorl adc pop mov movslq (bad) enterq enterq sub divb xor (bad) (bad) mov sbb int3 xlat (bad) jnp lahf in ja negl retq callq and movsb xchg lret movabs jns (bad) xor (bad) addr32 (bad) push movabs (bad) rex.WXB cmpsl rex.W push sub cld data16 jrcxz rex.WR jne xchg add sbb fwait push movabs test out jp (bad) rex.X lock cmp (bad) jmpq testb and repnz add retq xlat retq push icebp sub cmp lods popfq mov push cwtl mulb fdivs jbe push rex.W (bad) xlat out and ja jge add cmp (bad) pushfq cmp add sub cmp test stos pop pop (bad) mov cmc stc ss nop fcoms imulb or in or (bad) jle out xchg push cmc lods imul lahf movsb jg (bad) (bad) jae xor push jno sub out xchg sahf fldt rex.WXB mov movsb jnp mov adc lahf push cltd je popfq sbb movslq jb (bad) xchg adc mov (bad) (bad) pop lret mov enterq (bad) test add rex.WR push adc (bad) je mov test rex.WB xchg in loopne add or fidivl fldl rex.WB cmp add in (bad) (bad) je fmull rex.WB (bad) (bad) out pushq adc jne out movsl jae mov (bad) sbb rex.WB ds mov out sub movslq pop fisub addr32 xor jnp add cmp int hlt test (bad) jle jno stc rex.WR xor rex.WB (bad) push movsl xchg lods sub movl mov rex.WB es xchg or movsb pop cmc push jg in adc outsl clc jne rex.WXB rex.X xchg sub (bad) rex.WX pop (bad) (bad) movsb mov mov (bad) add sub icebp push rex.WR fwait adc rex.R rcr rcr pushq out push jmp and scas ds push in rex.XB insb mov (bad) (bad) xchg enterq rex.WB jno or (bad) jl fmul enterq bnd shrb loopne push mov mov add push or repz imul rex.RB mov cli (bad) sbb rcrl fisubr je (bad) cld xchg and or pushq iret jg adc or fidivrl cmpsb fisubr sarb and rex.WRXB jle cmp (bad) outsb or rex.RB rex.WX scas and xchg push and or jmpq (bad) and or (bad) ja (bad) mov rex.WB clc jge xor fisttpl xchg mov lahf sbb cltd flds pushfq (bad) pop jg (bad) xchg sub callq fistpll rex.WB add mov rex.W rex.WRX xchg rex.WB xor push or or xchg xor push movslq (bad) clc fs jns sub in sub jno loop rex.WXB gs jmpq cmp insb idiv mov insl addr32 loop testl rex.W pushq rex.WR sub scas xor rex.W fs fnsave rex.WB cmpsb cmpsl movsb data16 rex.X rex.WXB cmp jle ja adc sbb cmp (bad) pop jo mov mov add mov and sub mov (bad) jmp mov enterq jmp outsl inc xchg rex.RB cmp and rex.XB jne jg fwait rex.RB push and ja push jb repnz jle ss imul movsb (bad) (bad) xchg out movsb lahf cld push cwtl lret (bad) (bad) mov pop repz ds int3 and stc push sub fdivl enterq xchg mov push sub movsb clc (bad) sub xchg (bad) std pop sbb sbb pop test jo andb cli mov (bad) movslq jp out stos sub idivb mov mov cmp lock pop rex.WR (bad) rex.WX idiv mov nop cmpsl push xchg fisub (bad) out xchg jmp ja pop (bad) (bad) nop stc and cwtl movsb adc cmp out or shlb rex.X stos sbbb rorl sbb adcl stc cwtl (bad) xchg adc rorb xchg xor add leaveq sub (bad) out (bad) (bad) rolq push xchg addr32 mov adc xor int push flds rex.WB rex.XB mov xchg rclb sbb rex.WRB in add pop callq vandnpd xchg (bad) jp (bad) sbb jnp (bad) add scas pop in sub mov out outsl lods lret xor jo lods add pushq lock rex.WXB test xchg (bad) jo pop cmpl push (bad) and loopne (bad) sbb cld or repz enterq mov clc jbe pop jo fistpl rex.WB add cwtl rex.WB test and (bad) ja (bad) push lods cmpsl movabs pushq test jmp movabs lret mov cltd imul retq callq xchg popfq push xorb xchg (bad) ja loop (bad) pushq add (bad) outsb xor rex.WRB xor mov (bad) cmp lea jne cltd imul mov rex.RX rex movabs cmp jg mov mov rex.X jo out outsl mov mov outsb push pop notl sub ja mov mov rex.WRB rex.WB retq adc rex.WXB imul (bad) jle lods rex.WB mov cmp xchg (bad) sarl mov adc mov (bad) cmpsb pushq mov or rex.XB retq gs stc add and mov enterq and in gs fcoms movabs jp sub sti rex.RX jmp mov callq js sahf jno rex.WR push movabs int je add orl addr32 add (bad) je and test faddl rex.WR fidivr (bad) mov popfq push pop fist icebp jge in and xchg fdivl adc pop jg rex.RB mov push push fcomi (bad) jmpq outsl adc callq pop rex.X out leaveq imul jp addl mov sbb cs (bad) rex.B rex.WX xor lock lods stos pop mov mov fwait jle xor rex.WB rex and (bad) (bad) rex.WB sub loopne rex.WX jnp rex.XB and pop cmp ja pop xchg rex.WB callq roll rex.RX pop push rex.WB rex.W cld (bad) (bad) xchg cmp pushq mov popfq (bad) pop (bad) (bad) jno movb adc rolq lahf push rex.X push pushq pop (bad) sbb cmc callq (bad) rex.WB xchg cmp scas pop movabs pop rex.WXB addl iret add and (bad) sub pushq pop or js out sub movsl retq sub rex.R mov rex.RB rex.WB in push sbb pop cmp rex.WRB xchg mov (bad) (bad) stos (bad) mov rex.RB pop rex.WXB mov adc cmpsb and decl sbb add mov xchg (bad) popfq scas sbb jg sub cmp (bad) pop jb pop and retq ds mov sqrtsd add enterq and pop (bad) (bad) roll adc mov loope sbb rex.RX pop pop rex.WB jns adc add lock pop enterq pushq (bad) rex.WRB rex.WRX jmp fstps out (bad) add push or adc leaveq out (bad) rex.WB test push lret xchg rex.WB mov rex.WXB mov sbb lock cmpsl jp cmp ja pop cmp or mov rex.W mov mov pop add movsb xor jl xchg push scas callq rex.WB adc (bad) push lret movabs leaveq jp (bad) or (bad) mov fstl rex.WB subl rex.WB js adc outsb xor ss (bad) and mov jb rex.WB pop rex.WXB jnp addl cmp (bad) mov in xor push and shr fldenv adc (bad) adc add ss (bad) pop hlt mov loope fisubrl ds addr32 cmp xchg add rex.WB jno push int sbb rex.WB pop in flds mov rex.B mov cld xor jne cmp rex mov cmp shlb rex.WB mov movabs adc sub cmp ficoml lock adc popfq loop addr32 and sub fiadd mov xchg sbb rex.WRX sbb rex.B rex.WRB sub ud1 add xor (bad) push and data16 push stc jbe rex.XB insl pop rex.WB loop (bad) outsl iret in movabs mov pushq mov sub rex.WXB mov movabs push and jne or xchg jrcxz subl callq rex.WXB pop pushq jbe cmp and (bad) (bad) or add cmp pop (bad) push sarl (bad) jbe insl rex.WB data16 push push lock sbb (bad) movsl (bad) cmpsl (bad) int3 fs mov or (bad) rex.WRXB sub subb add pop iret loope jno and jno mov sbb mov cmp rcrb mov pop rex.RXB data16 push retq movslq movabs mov (bad) jl repz xlat pop xor movabs sub add (bad) push jno jmpq nop cmpsl addr32 repz fbld enterq jbe (bad) mov rex.WX push movabs mov leaveq dec popfq mov mov jno mov movabs xchg or xchg push (bad) or loop push movsb sarb push clc test in (bad) retq addr32 rex.B rex.WRXB cs insl pushq or movsl nop rex.RXB ss (bad) int jns rex.WB pop and xchg in rex.WRXB jns lods rex.WB mov sbb sbbb (bad) pop push mov jp pop stos lock sub (bad) pop jb out jmpq (bad) fisttpl mov pop xchg cmp and (bad) (bad) scas rex.X in cmp pushq rex.WB sbb fistl (bad) mov rex stc jns lahf adc int3 callq mov xchg push je (bad) pop flds sub sbb push in rex adc movabs lret mov ss sub jne rex.X push (bad) rex.WRB mov rex.B out pop mov cmc rex.W sub (bad) callq rex.WRB cvtpi2ps or rex.WRB (bad) push rex.WXB sub outsl sub rex.WXB outsl test iret leaveq mov jg add ficom (bad) rex.WR and icebp xchg adc cmp mov rex.WRB es movsl push fist cmpsb cmp pushq rex.RXB rex.WX fbld jne test rex.W (bad) jno jbe xor add (bad) or cmp out add jmp pop rex.X cmc mov in (bad) (bad) and (bad) nop test sub xor rex.RB (bad) rex.WB rex.W or push xchg (bad) sub push and and rex.WB cmp jrcxz rex.WB add rex.WB xchg fsubs push add push sti retq (bad) pop adc je rclb or rex.RB repnz rex.WB lret retq mov (bad) jmpq insl (bad) movabs (bad) lret cmp movabs clc rex.R sub rex.WB mov (bad) or push test sub rex.WB movsl loopne pop rex.WXB repnz adc xor lret (bad) jne (bad) js fildll loope shl shrl jrcxz mov (bad) mov fcomps sbb or enterq mov icebp mov jl ffree test (bad) and jbe adc test movsl outsb cmpsb and (bad) fnstcw sbb rex.RX pushq (bad) notl (bad) jl (bad) sbb pop addb sbb fistpll shrb rex.XB (bad) pushq or mov es fildl jl or pop movabs mul cmc (bad) mov lahf push rex.XB xor cmpsl rex.W lock pop sbb nop sbb xchg adc in mov mov or (bad) mov out ja fisttpll mov or rcr xchg pop sahf cmp rex.X sub (bad) pop mov leaveq jbe (bad) out rex.RX repnz jb jl push (bad) and repz roll (bad) mov add lods (bad) out rex.RXB xchg enterq fidivrl (bad) (bad) cmc xlat rex.WRX cmp and sbb icebp in rex.WB mov rex.WB out mov movabs ja callq out push rex.WRX or test xchg clc subb rex.R es or push cmc rex.WRB in rcll rex.WB push sub int3 and and or rex.WRX rex.WXB rex.WB jmpq mov data16 mov iret lahf movslq rex.WR rex.WB ss rex.RXB pop sahf rex.WB and adc rex.XB stos fnsave shr stos (bad) pushq cld pop push adc iret cli insb sub cltd cmc out mov cmp test lahf movsl and enterq leaveq fs xor cmpsl rex.WB lret mov xchg jmpq mov rex.WB pop out test and int (bad) pushq lods and rex.WX sub adc or sti rex.WB cmp add insb sub (bad) rex.WRXB rex.WB (bad) pushq mov add or and rex.WR loope sbb test test xor (bad) lods sub pop and (bad) icebp pop mov cmp or xlat cmpq jne icebp rex.WB and js shrl rex.WRXB xchg rex rex.WB (bad) loopne jns mull xchg fildll movabs or cmp sahf mov or movabs xor fs rex.X fscale fiaddl and rex.WR nop addr32 pop movslq rorb cwtl int mov jbe or movslq and lahf sbb gs mov rex.WB (bad) mov sbb (bad) jne orl stos jp sub mov (bad) xchg pop rex.WB adc leaveq jle out xor stos xchg or rol jno jo movabs jns rex.RB (bad) repnz pop mov jbe enterq pop jp movabs and scas test roll (bad) rex.WRX and sbb push repnz push mov (bad) subl xor mov push movsb out sub pop mov rex.WB sub in sbb sbb mov push repnz sbb sbb sbb cmpsl lods loopne cmp clc push test in movsl push sub push cmpsb lret (bad) clc rex.WB mov stc jg rex.WRB callq andl and fs orl mov mov mov (bad) mov out or xor gs leaveq cli (bad) pop lods sub rex.WB clc stos insl push jne (bad) mov rex.WB (bad) ror (bad) add xchg fcompl or adc xor mov cmp rex.WRB scas rex.RX adcb (bad) adc pop adc pushq (bad) ds sub lock (bad) pop sbb icebp retq adc mov add outsl rex.X in (bad) nop adc fisttpll jae movslq rex.WB mov rclb adc (bad) or (bad) sbb mov rex.WB push retq rex.X decl or cli jp ja or mov pop (bad) callq in (bad) jp (bad) push test rex.WB lea shrl callq rex.WRB pop push out lret (bad) mov or in xlat adc sub adc mov lret out fsubrs imul negl mov xchg (bad) jns jge popfq cwtl or mov or fildll cld mov or and sbb xor out xor pop rex.XB adc mov movsl (bad) insb mov sub xchg rex.WR mov pushq cltd or jo push repnz rex.XB pushq (bad) sbb or repz mov xchg mov rex.WX outsb xor test scas add fwait (bad) xchg rex.WRXB jrcxz movsl jno or sub rex.WRXB insl out (bad) jl pop (bad) clc xchg (bad) (bad) movabs sub cmp or or rex.WRB sub cmp cmp mov jrcxz xchg jae imul rex.B rex.WR push rex.WRB enterq repz sbb rex.WB mov jg push data16 or stos movabs jg incb rex.WB cmp rex.XB es xchg rex.WB fs repz rex.WB jo movabs add push push add outsl and bnd out rex.WB xor rex.WB cld movabs rex.RB (bad) callq pop in andl vpcmpeqw jae mov jmpq (bad) hlt xor loopne jrcxz movslq movabs loop pop push callq (bad) and jae pushq (bad) sbb jl (bad) out in insb xor sub cmp sbb fmull push mov rex.WB and (bad) nop push jrcxz addr32 xor xor xor (bad) loope cmp xchg rex.WRXB rex.XB repnz mov jle xor pop mov rex.WB (bad) data16 sbb or cmp and add retq (bad) lods nop mov enterq push int mov stos iret frstor (bad) retq mov or gs adc ja pushfq (bad) repz pushq and pop test adc int push jle push lods in insl (bad) movsb or jge outsb rex.RXB mov movabs rex.WB (bad) mov (bad) pop callq (bad) or stos or adc mov stc es addl rex.WB callq (bad) or pop pop insb cmp out sahf adc rex.WRXB or sub add leaveq jns callq movsl and rex.XB rex.WB cld push adcl xor sbb and and callq in mov jb callq xor in pop mov rex.WRXB (bad) adc push mov adc movabs ficompl (bad) (bad) sbb pop sub push push (bad) lret orl mov jmpq cmp out (bad) movabs cltd push mov callq rolb korw (bad) pop mul icebp sub rex.WB jne fistp mov rex.WB mov (bad) rex.WB hlt cmpsb (bad) in rex rex.WB rex.X mov jmp (bad) add outsb xchg test mov cwtl rex.WB rex.WRB mov outsb cwtl rex.RX movabs or jb xchg add (bad) xor sbb callq pushq rclb lods mov (bad) rcl mov rex.WB fwait lahf mov lret rex.WB ds add sbb rex.WB xchg icebp add add jae push (bad) int xlat movsl je xor adc xchg rex.W rex.RXB jge in lea (bad) (bad) push mov clc movabs stos rex.WX mov adc and rex.WRXB fwait test pop push idiv (bad) rex.WB jo mov mov mov push lahf rcrl movslq rex.RX adc fst mov sub mov mov cmp rex.WB jnp lret ds lfs stc mov pop xchg jo mov lods push rex.WB movabs add jl sti rex.WRXB fisttpl sbbl rex.WR jb rex.WB fldt mov outsl fsubr enterq pop push xchg clc (bad) (bad) scas rex.WRXB (bad) sub adc or cmp jbe mov add jae rolb leaveq rcll fcomi pop sbb sar sub lods jb shrl rex.WX jle in mov loop jbe rex.WB jae pop test cs js xchg adc stos xchg cmp (bad) xor data16 sub sub lock test (bad) mov rex.WRXB gs fwait out scas rex.WB sbb adc (bad) or mov xchg fdivr in pop stos cwtl rex.RB rex.WB fwait jno rex.RX data16 rex.WXB int xchg hlt (bad) hlt and pop lret movsb test outsb sub rex.XB pushq movsb cmp shlb movsb (bad) mov es (bad) (bad) sti mov in xor xor cmp imul sub roll outsl (bad) movabs test callq jle jno callq or loopne sub (bad) divl fstl in scas jo mov xchg sub and (bad) movsl rex.RX xchg mov sbb mov cmpsb mov and std xor movabs (bad) mov lcall mov rex.WRXB rex.B rex.WB (bad) out loope push addr32 lea flds mov rex.RB in add cmp cmp or pop rex.WB rex.X mov (bad) rex.WB sbb out callq rex.XB stos js rex.WR pushq (bad) out (bad) rex.WB or es add movabs pop rex rex.R repz (bad) rex.RX add (bad) movabs out or cltd out xchg and popq lea rex (bad) stos cmp callq test jp movabs fisub mov int in push and cmp (bad) pop ds push sub testl pop cmp (bad) imul jo (bad) repz iret movslq (bad) lret insl icebp rex.WB (bad) scas fcompp test rex.WB out fst cmc sbb sub cmp jl rex.B rex.WB stos rex.WB mov jl rex.WRB rex.RXB loop mov lods xchg rex.RB xchg jl pushq test out add jb pop push adc ja test mov and and jae and scas rex.WXB mov out xchg retq cli (bad) (bad) sub mov enterq gs out mov sub mov jnp mov mov notb push sub add (bad) callq jg xor sbb scas (bad) insb js sbb movsb out (bad) pop mov mov rex.RB rex.WX mov in movsl and xor fsts cmpsl addr32 ja (bad) mov std imul xchg jrcxz or push mov pushfq rcrl rex.R (bad) loopne and mov xlat lahf mov lea xchg cmp adc (bad) hlt rcll or xor rex.XB addr32 pushq (bad) push xchg (bad) push or hlt sub int3 jmpq rex.WB push (bad) push icebp imul es rex.WB jne cs out jns mov xchg add int3 cmc fistp jo out (bad) fild xor movsb imul xchg rex.WRX rex.WRB mov sub rex.WB rex.RB ss (bad) pop or gs movabs scas cld push sub pop mov lods mov xor sub shrl rex.RXB in int3 mov sub cmp rex.WRX movabs retq push mov cwtl shrb subl cmp xor xchg fsub xor sub xor callq jbe,pn (bad) add loop (bad) jno int mov sub xchg or notl cmpsl pop (bad) (bad) sahf mov (bad) add xchg out cmp test jnp movabs in or in (bad) mov repz ds pop callq stos and xchg prefetch mov jnp (bad) cld cmp cld lahf sub lock add and outsb sbb addr32 in (bad) retq callq sub hlt rex.R xchg or (bad) pop (bad) (bad) mov add pop push and sub xor outsl xorb sub incl and rex.WXB rex.RB pushq xchg cmp (bad) out movsl enterq fdivrl xchg lods xchg (bad) callq push int3 mov fisttpll nop ror (bad) es fs (bad) xchg pushq lods callq fldt sbb rex.W rex.X rex.WB rex.RX data16 rex.WB mov loop (bad) stos (bad) mov rex.WB sub rex.RX rex.WB mov mov movsb mov xor jno rex.WRXB ror push es mov decb lock (bad) callq fistl imul lcall xchg add jnp (bad) cmp push jns rex.WB es repnz or (bad) loope push sub sti xchg xor and (bad) icebp jbe mov mulb or movabs sbb sti sub mov rex.WX rex rex.WRX icebp (bad) jmp fmull (bad) callq std lea roll jg jae rex.RX fimull (bad) rex.WRX stos sbb mov lods (bad) (bad) adc mov mov movabs movslq push lods movsl stc (bad) rex.XB rex.WR or rex.RX movabs ss xor insl popfq or lahf mov stos (bad) push and jae cmp cli rex.RB scas callq imul xor jb popfq (bad) stos testb rex in fdivrs lods jb jge rex.WR (bad) test mov and cwtl rex.WR pop stos js xor loope push movsb add rex.WXB gs push test or (bad) jg mov pop movsl xchg cmc outsl pop xchg (bad) rorl add rcll (bad) icebp out mov add (bad) cli insl mov rex.WB cmp push popfq (bad) cmpsl lahf out (bad) std rorb mov jno fisubl mov sub rex.WRXB adc pop movsb rex rex.WB sub pop scas pushq xchg movabs sub (bad) mov notl (bad) cmpsb adc (bad) movabs pushq (bad) (bad) in js add rex.WRB rex.RXB add add pop cs add ds rex.R repnz (bad) decl movabs rex.RXB add rex.WB (bad) sbb (bad) sub frstor (bad) rex js (bad) pop xchg lahf idivq (bad) cmp sub (bad) pause mov stc mov lods pop xlat mov rex.WB movsb xor fs rex.WR rex.WB and rex.R rex.WB lar (bad) clc or rex.WB adc nop push push or pop and callq rex.WXB callq cmc mov add (bad) test rex.WRB rex.WB imul retq (bad) clc (bad) and pop xchg and sbb fmull ss movabs cmp xor outsl in cmp pop movabs mov fidivrl movabs fisttpl nop (bad) movabs sti jae or sub or or (bad) pop xor test movslq (bad) test pop fisub icebp imul (bad) sub (bad) mov mov (bad) (bad) jmpq test sub repnz xor cmp pushq and adc movabs fiadd sbb sub out pop rcl rcrb push repz rex.W fmuls fimul sahf mov sti pop rex.RX movhps (bad) or mov rex.RB add movabs pushq sbb cltq test retq mov xor (bad) jo (bad) movslq int3 movabs leaveq push scas sub in out (bad) (bad) mov push (bad) test rex.WB jo mov fcompl std sub jno or sub test xlat mov cmpsb rex.WR mov rex.WXB movabs outsl pop orl and mov enterq sub (bad) test (bad) rex.WXB push cmpsl test icebp (bad) push sub std leaveq fadd push rex.RX in mov rorb xchg je rex.WXB js lock push mov add adc and hlt mov (bad) xor cmpsl std mov outsl rex.WRXB repz loope and and idiv mov (bad) out iret pushq xchg (bad) (bad) mov (bad) jmpq (bad) jne in (bad) imul callq mov retq (bad) sub jo retq or adc clc mov jbe rex.WX push lret cwtl rex int3 std adc enterq jae sbb jrcxz jae lret (bad) decl orl retq (bad) clc fs (bad) or (bad) lods sub jge mull scas (bad) enterq (bad) add sub pop adc and std mov (bad) sub rex.XB rex.RX sti add shl rex.RXB xchg (bad) jae push (bad) in rex.WXB jns retq jnp (bad) mov shrl push (bad) (bad) sub adc or jle xor test (bad) stos shr movslq mov xor (bad) out sbb frstor movabs out sub sarl sbb test or fwait lock lods out insb fldl (bad) jg rex.WXB rex.X rex.RX (bad) insb cmpsb pop push sub push repnz int3 mov jbe retq test fsts xchg rex.X pop (bad) fisub sbb in popfq cltd add mov mov (bad) leaveq (bad) xor add lret test or (bad) and (bad) lret or mov callq sbb jno rorb jg subl mov (bad) xor leaveq scas mov jae movslq scas imul jo in (bad) loope or mov (bad) rex.RXB (bad) movsb push and lret mov insl add adc jmpq popfq pop push fdivs (bad) pop js int enterq sbb pushq or and (bad) mov rex.WB add sti ficoml jb in xor add lahf rex.WB pop mov rex.WB cmpsl push nop or in push pop incl sub (bad) lret mov lret sub rex.WB ud1 push pushq xchg rex.WXB lahf and pop mov rex.WB add mov adc and callq jg rex.WX pushq (bad) push (bad) pushfq movabs rex orl (bad) push (bad) and and enterq iret cli rex.X rolb (bad) rex.XB or (bad) cmp repnz cwtl adc iretw (bad) pop xor jge rex.WB or cmp xor cli mov addr32 out push rex.WRB lock mov adc sub nop (bad) (bad) rex.RXB rex.WB (bad) loopne jmp ss add rcll lods xchg rex.WX ja in rex.WRB rex.WXB rex.WB (bad) (bad) or jnp hlt sub sti sub sub rol push mov movabs (bad) repz (bad) xor fstps (bad) pushfq (bad) clc movabs fild cmp (bad) mov (bad) ss pop jle repnz (bad) rex.WB (bad) jmpq ja rex rex.R rex.WB pop (bad) lahf rolb and jno mov test adc cmp cmp mov push rex.WB sub jg cwtl sub stos bndldx add sub (bad) push callq (bad) jge,pn rclb and adc sbb (bad) (bad) rex.WB in jo movb movabs push fcmovu rex.X in rex.XB (bad) xchg retq and mov jrcxz sti movsl (bad) leaveq mov sbb or cmp rex.WB (bad) mov (bad) xchg mov or callq (bad) icebp cmp rex.WB cmpsb rex.RX test (bad) sti push (bad) sub sub addr32 pop xchg rex.WB and pushq rex.W rex.R xchg cmp (bad) addl pushq movabs loope pop xor out sub pop mov loopne leaveq test rex.XB (bad) push pop mov pop mov callq sub or jp and and xchg movabs enterq jl hlt stos pop mov xor sub fldenv xor push rex.WRXB fstpl jge sub ja and mov imul jne rex.RX fistp rcll test (bad) addr32 jb sub mov cmp jae in push (bad) test retq rex.X rex.WB iret cli insb rex.WB pop or fidiv (bad) push xchg rex.WRXB push or imul rex.RX lock mov rex.WX lahf fnstcw rex.WB lea mov data16 rex.WR adc rex.WB outsb sub add add sub test cmpsl pop mov or sub stos lret enterq popfq adc (bad) cmpsl (bad) xchg rex.RB rex rex.WX std (bad) mov lret rex.WB mov fs mov int3 fist pop test jg sbb or cmpsl rex.WR callq movb icebp js sub stos and movsl movabs movabs rex.WB rex.WRB (bad) leaveq xchg jmpq rex.WB (bad) jbe je (bad) xor jb (bad) rex.WRXB rex.WB es fsubp movabs shlb (bad) and (bad) stc scas push movabs adc and je mov imul ljmp rex.WX adc cld sbb loope rex.W fistpl enterq (bad) pop adc (bad) out cli (bad) xchg mov cmp add (bad) sub leaveq (bad) cmp rex.WX (bad) xor clc push pop imul scas xchg movabs mov out xchg (bad) ficomp cmpsb (bad) imul mov or insl (bad) rex.WB (bad) (bad) sbb rex.RXB roll es or push (bad) (bad) sub retq add iret rex.RX and adc rex.WR pushq (bad) cld cltd mov (bad) icebp (bad) sub lods xor sar sub mov rex.R sub lods movabs xchg rex.WRB lods mov xchg rex.WB jb mov rex.WB xchg add callq imul pushfq adc add jns sbb sub movabs lods rex.WRB (bad) mov in and sbb rex.B rex.XB movsb (bad) cli add movslq cmp adc (bad) vpunpckhbw xchg insl jnp rex.WB mov rex.RB mov (bad) sub rex.WB sti mov (bad) rcr xchg push cmpsl sbb xchg push rex.WR xchg (bad) mov (bad) (bad) addb cs rex.WB and and sub repnz (bad) (bad) mov lret xor (bad) cmp rex.R push adc movsb or fisttpl pop sub cltd rex.R je gs pop xlat (bad) scas mov (bad) ficom (bad) rex.WB rex.WXB test pop mov movabs mov imul js jg rex.WB rex.W rex.X testl sub iret movl or pop retq and jp out lret mov sub jmp rolb mov add fisttp xchg jbe decl scas cmp mov sub fisubl callq rex.WX (bad) sub jb push imul and add adc iret std xchg rex.R outsb shrb insb cmpsl movabs (bad) lahf or rex.WRXB out xor xor test rex.WB jmp pushfq sub fcoms (bad) jg cld adc movsl mov (bad) vmovapd iret fsubrp (bad) out or mov (bad) (bad) push fidivr xchg jno xchg push pop test mov xor neg out (bad) xlat jo ds push test rex.WR jmpq rex.R fstpl xchg jg clc ja sub iret sub or clc ucomiss pop add mov iret rol mov xchg sub mov rex imul mov addr32 shrb rex.WX je sbb xchg jns mov add sub callq sub (bad) (bad) sub mov mov xor test adc adc rex.RX test fimull xchg (bad) add out movabs or pop pushq imul xchg icebp (bad) jmpq mov setb rex.WX push movslq (bad) and sub subb mov xor (bad) pushq out rex.X imul and scas (bad) out rcll shrb xchg (bad) xor add movabs icebp jae (bad) movabs or xor rex.WB addb hlt sbb in jno int3 (bad) rex.WB xchg sub test mov push es test lods out movsb stos rex.WX rex.WRB rex.WR xchg push sarb stos rex.WB imul push movabs jnp lods insb mov test sti (bad) rorb sbb push movslq scas push movabs xchg and rex.WB mov adc mov mov rex.WB cmpl (bad) jrcxz rex.WB mov mov (bad) rex.WB pop test fs lret imul sub or cmpsl xor cltd sti push mov and (bad) movabs cmp movsl fsubrl rex.W imul (bad) (bad) sub rex.B out mov mov adc rex.WRXB movq loopne pushq mov sub sub mov mov scas rex.WRB es (bad) imul xchg (bad) rex.WB sti jns or repz movabs mov rex.WB (bad) (bad) xlat pop outsb cmp sbb callq mov sub in jl (bad) (bad) pop rex.WB bnd rex.WB fwait mov fistpl cli nop in callq cmpsl shll movabs rex.XB or and sub (bad) xchg pop cmp (bad) adcl loope insl pop ja fimull pushq retq pop rex.WB rex.B rex jmpq mov clc mov jg fdivrs rex xchg rex.WB hlt repz in rex.WB mov jb lea repz xchg rex.WB xchg pop push sub rex.WB mov jrcxz cmp (bad) (bad) pop jbe push xchg xchg (bad) test xchg out push jne mov (bad) sti jbe pushfq icebp xchg rex.WB mov shll adc (bad) rex.WRXB icebp xchg rex.WRB ss (bad) (bad) enterq or imul push or (bad) push (bad) retq stos (bad) scas fadds xchg rex.WRX loop fnstenv mov (bad) (bad) scas cmovns add lahf cmp add loope mov sub jo roll or fisttpll (bad) lock xorl rex.WB cld mov rex.WB lock (bad) mov cld repz push scas jno callq jne rex.WXB rex.WB and cs jp test rex.WB cmc repnz addr32 (bad) nop rcll xchg lods xchg rex.X mov sbb mov mov insl mov xor loope,pt (bad) clc imul rex.WB out pushq not sub rex.WB insl lock rolb mov imul (bad) cmpsb sub adc (bad) pushq (bad) rex.WB outsl jmpq (bad) mov mov rex.WXB fmull stos (bad) xchg (bad) mov cmc (bad) sarb pop imul cmp rex.B add movabs xor cmc cmp push xchg rex.XB movsb rex.WB (bad) pop mov rex.WX rex.WB sub mov rex.X push or push pushfq enterq (bad) mov jb (bad) adc xlat xchg hlt xor (bad) (bad) mov mov add mov sub lods rcrl sub (bad) fldenv movabs stc pop in push jg lret cmp sub (bad) rorl push je (bad) rex.WB movabs cmp xchg mov mov movabs mov sub out notb push rex.WRX mov pop jl sub fsubp mov push mov xor je lret cmpsb (bad) rex.WB pop sar pop xchg scas (bad) test out movslq push xor jrcxz rex.XB pop lahf rex.WRX (bad) mov test sbb mov rex.WXB (bad) or xchg and rex.WR pop addr32 callq xchg and cmp cmpsb rex.WB rex.WB xor xchg mull movabs jp rex.WB scas cwtl add fcomps jl sbb and out repz rex.WB sti cld out rex.WB xchg out fcomp adc jne (bad) in callq or es (bad) (bad) cwtl fist push orl rex.WRXB or jo popfq test pushq rex.XB sbb rex.WRXB sbbl rex.WB rex.RB rex.WRB addr32 (bad) and and add popfq add (bad) nop (bad) (bad) xor pushq in pop out xchg repnz jrcxz out adc xchg outsl cmp sti xor scas add (bad) mov (bad) icebp or and and adc xchg (bad) loop xchg pop xor loope rorb mov adc sahf retq stc mov outsb idivb mov mov clc rex.WB xchg cmp iret out (bad) rex.WB (bad) push mov mov mov in ds js (bad) mov jo pushq in adc or popfq and pushq enterq sqrtps cmp sub movabs rex.WB (bad) (bad) jrcxz cmpsb enterq xor mov and (bad) and imul es testb cmp adc jmpq gs rex.WB push adc fucom rorb (bad) movabs test out push movabs adc pop (bad) jne mov (bad) addr32 gs rex.WRB jne rex.WX xor rcrb test out sub adc (bad) cmpsb jb push movsb mov sbb out add leaveq push mov or fcomps sar mov push sbb test mov rex.RXB loope loope pop mov int3 fs (bad) sahf mov sub repz push lret jnp ficoml (bad) rex.WX (bad) pushfq rex.RX mov sub adc sbb or mov sub pop lock (bad) mov mov cltd (bad) cld pop outsl adc movsb adc sbb jae mov cmc movabs test (bad) or adc rex.WRB cmp (bad) cmc mov (bad) xor (bad) out jg pushq pushq int mov (bad) test addr32 cmc pop mov (bad) (bad) pop out push add sub imul (bad) shlb in adc pop and sti cwtl js int rex.WB fild lret xor mov xchg push cmp sbb mov movabs ja rex rex.WX adc cmp (bad) jmp rex.WRXB movslq xchg rex.RX lods (bad) int (bad) rex.WB lret push push test rex.WB pop out (bad) jg mov gs pop cmp data16 mov cwtl movabs sub rex.WB icebp lods push fwait xchg rex add or (bad) outsl enterq test push rex.WB mov xor pop cmp add sbb or sbb test xlat xchg cmp imul jo xchg push xchg rex (bad) (bad) mov jge mov jns sbb rex.X fld (bad) fsts ja push cmp test rex.WX lods mov cltd fs (bad) divl (bad) (bad) push addr32 icebp mov movsl adc loopne pop test add mov in pop je xor cmp pushq insb push rex.WXB rex.WRX rex.WB pushq rcll (bad) pop lretq clc add pop rex.WB lock stos sbb mov lret (bad) (bad) push rex.RX and pop push adc outsl xor pop in movabs fistl addr32 xor mov (bad) leaveq rex.WB add out rex.WB sti repz nop xchg xor incb jle push movsl sbb rex.WRB repnz cmpsb or push or sub mov int3 nop or rex.WXB adc (bad) cli mov movabs movsl in xchg push insl rex.B rex.WB or jmpq insl push sbb movsb and sbb jo adc xor idiv xchg jne (bad) jrcxz callq outsl movabs loope rex.WRX repz xchg rex.WB mov push cli rex.WB add enterq pop addl rex.WRB insb rex.WB or test lods rex.WR movabs jno fiadd rex.X (bad) jl xor rex mov insb cmp lea lods sbb mov xor pop movq cmp jl lret (bad) rex.XB sub movslq jae xchg lea rex.WX add fucomip jmpq pop and (bad) test mov mov xor shlb cmp (bad) shrl (bad) callq sbb rex.WB sbb pop (bad) and fmuls rex.WRX mov in and (bad) callq (bad) fmuls (bad) pop mov int mov and cmpsb add movabs ss rex.WRX pop in cmp xchg (bad) jrcxz or movabs je ficompl cmpsb pop mov rcll cli xchg rex.WB rex.XB rex.RXB stos sub rex.W (bad) rex.WB push jns rex.WRX adc std fisttp push jl fistpl sub subb cld rex.WR insl sub pop (bad) mov mov (bad) push lea push movabs adc cli rorl mov vcvttss2si outsl mov cli jbe pop rex.WR rex.WB xchg jno cmp mulb xchg in rex.WR rex.WB clc rex.WR fnsave rex rex.WB insl ror pushq and cwtl pop movabs (bad) imul sahf outsl jb mov pop jl sub notb sub mov jle (bad) fdivr add in rex.WB mov sahf pushfq jmp pop push and push mov rorl or cltd ja js enterq mov mov ficoml lock mov rex.WB rex.WR mov ja addr32 cs je push and xchg mov psllw sub cmp xchg cs (bad) ja jno callq mov mov movslq mov rex.XB mov ds rex.WB add xchg (bad) push movabs jp mov ja rcll es in (bad) push rex.WXB xor (bad) sbb bswap sub jp xchg ds scas jne stos mov in pop (bad) and pushq cmc rex.RB mov retq js (bad) rorq rex.WB (bad) cltd frstor and ds mov cmp iret (bad) fwait rex.WB pop pop or sub enterq xchg clc fst sub movabs cmp and rol sti mov (bad) mov movabs or pop (bad) insl add pop test jns xor pop mov pop xchg push mov rex.R and (bad) leaveq (bad) test rex.W rex.WB (bad) cltd out xchg movsb pop (bad) sub rex.WB sbb rex.WB sub rex.WRXB pushq xchg pop fwait or sub (bad) fldt jmpq lret rex.WB (bad) cwtl mov sahf rex.B rex.WRB mov shll lcall cmp rex.WB js sti and pmaxsw nop rex.WB insl (bad) xchg gs xorl cmpsl sbb notl or sbb add sub rex.RB rex.WR imul push rex.WXB imulq repnz pop (bad) xchg mov icebp loop push sub (bad) rorq sbb jp stos and jo xchg jg shll test rex.WRXB fstps rex.RX fistp jne adc movabs push sbb imull sbb movabs rex.WB fmull xchg mov and iret test (bad) sbb xor jo (bad) (bad) mov adc sub jp push scas fs test fisttpl (bad) adc loopne in pop movabs data16 xor (bad) push (bad) in xchg rex.XB callq rex.WB rex.WRB xor outsb mov sub mov sbb mov out mov imul nop (bad) (bad) (bad) loop xchg (bad) repnz mov rex.WB adc sub rex.XB and add rex.WB ss fnsave rex.WB xlat sub pushq mov push (bad) (bad) stos rex.WB int icebp fnstcw lret loope imul and movabs adc pop push leaveq rex xchg rex.WX rex.WB fmuls adc pop and jo sub mov pushq mov (bad) pop adc push stos callq cmpsl xor (bad) or sbb fidivr loopne out fs es stos (bad) mov rex.WB stc scas test (bad) lahf jnp push push lods fidiv cmp xchg je xchg rex.RX push or pop test mov lret stos jno in test fs insl rcrb (bad) lods sub movsb rex.WB or adc and sahf int movsl sti cwtl leaveq (bad) (bad) loop sub movslq jnp imul fldenv rex.WXB xchg add mov mov cmp cs (bad) movabs iret popfq (bad) jbe test rorb jns movabs rex.RB mov mov rex.WB xchg (bad) push rex.XB jle adc (bad) jmp callq push pop rex.WXB loope fldl rex.WXB rex.WRX sbb sub cwtl rex.WB (bad) adc inc pop shrb cmpsl cli div mov rex.WX sbb movabs lea mov movslq lret loopne (bad) movsb rex.WRXB mov push adc and cmp xchg mov mov jrcxz stos sub sub or push pop rex fadds sbb ss (bad) push mov fimull retq xchg cmp add (bad) jge xchg jrcxz sub out movabs (bad) mov (bad) cmpsb rex.WB adc enterq jg fldcw (bad) rex.WB or adcl rex.WXB rex.RB popfq push rex.WRXB lock rex.WB mov xor (bad) popfq mov sub retq jmp (bad) vucomiss lret pushq sub jle pop mov pop imull lahf (bad) por sahf sub lods jns xor ds rex.WB cld (bad) mov mov cmc jmpq and (bad) mov push rex.WB cmc rex push (bad) rex.WRB and in rex.RB (bad) add rex.W adc pop std scas xor and xor insl or rex.WX (bad) add movabs ficompl movl mov shll push rex.RX jg and rex.RX mov test and jl movabs (bad) outsb jns (bad) movabs cld mulb cmc out jno rex.WB rex.B jne test decb test movabs xchg es repnz (bad) ror mov jmpq (bad) jg ffree stc mov xor cmpsl pushfq mov jne rex.WB cmc sub data16 testb fild sbb jg (bad) mov cmp mov rex.WB fs (bad) scas xchg xor sarq (bad) jo sbb loopne cmp rex.WB sbb and pushq adc cltd mov fwait rex.WXB push and xchg and rex.WRXB enterq xchg jb clc (bad) mov sahf callq js andl out mov (bad) push callq movslq movabs adcl jmp stc and iret push sub mov mov out and (bad) (bad) movabs lret add (bad) rex.X push sahf ss jmp pop fwait mov (bad) adc jno fldcw outsl (bad) cmp (bad) in xlat and out push (bad) or cli std (bad) xchg pop ror xchg rex.WB rex.WRB pop (bad) (bad) rex.WR addr32 callq push sahf xchg (bad) pushq pushfq (bad) pop sbb fimul rex.WB ja sbb rex.R rex.WB leaveq loopne movsl cmp lods xchg addr32 rex.RB rex.WB div fwait push out movabs xorb (bad) xchg pop (bad) (bad) (bad) pop jae rex cmp (bad) lea insl push scas or callq movabs xor div test (bad) pop adc (bad) adc in fwait lock rex.WB or callq jns pop test rex.WB (bad) pop push jnp xchg rclb rex.WB js loopne ja mov mov (bad) adc in (bad) fmull movabs (bad) repz sub xchg push test retq push sti mov jne imul cmpsl jbe movabs cmpsl sub js jle sub sub xor test (bad) repz jge xchg mov sub jo rcrl (bad) push jns stos rex.XB cmp sub xchg push mov cld movsb mov jns negb ja or jg pop out vandnpd mov jae (bad) push rex.WRX cld sub rclb sbb mov adc cmp (bad) mov pushq fnstenv jno pop mov testb mov (bad) subl cmovae rex.WR rex.WB es ror leaveq loope or loop fs xor cmp xchg (bad) cltd pop mov (bad) mov cmp cmp mov (bad) push (bad) lahf rex.RB movabs fmull (bad) (bad) push fadds push rex.RXB loope adc mov (bad) sar cmpsb callq lret pop out mov movabs jl outsb vpshuflw shlb adc movslq (bad) sub int rex.WX rex.WB stos sarb or pop rcrb (bad) insl cmpsb movabs pop push repz lahf rex.WB xchg adc rex.WXB sub mov cmc or mov xor rex.RX rex.RB (bad) xchg xchg adc pop or xchg addr32 rex.WB cwtl sub (bad) push cmpsl mov lods xchg (bad) push jae mov or subl sbb lahf xchg enterq or in rex.RXB movsl hlt xlat (bad) int rex.WB mov pop cmp xchg push mov sbb jmpq movslq adc xchg adc (bad) sub rcll stc mov sbb lods imul xchg fiaddl je mov lret callq ss cmp (bad) lea or lahf repz add (bad) callq (bad) push sub out cli cmc movabs (bad) sahf rex.RB testl je sbb xchg rex.WB rex.WRB mov or cld movabs mov rex.WRXB addr32 (bad) sub (bad) xor in cmpsb pop jmp push out pop jnp fldl add (bad) adc ja rcrl xchg retq sub cld xor xchg fidivr jne retq mov test subb xchg adcl rex.WRXB (bad) (bad) (bad) jo adc loope mov stos data16 pop mov shll test and sub repz fadds cmp lret add fistp mov cmp sub sub jo fstl movabs addr32 std out mov stos pop ja iret adc lock adc ss shll cld jp (bad) and or pop out cmp and sbb sarl cmp adc mov adc pushq mov sub imul jrcxz leaveq sub sub loopne or push rex.RX (bad) (bad) mov cld lock callq mov (bad) mov push retq rex.WX jrcxz scas lea movl fsubrs mov rex.WB xchg rex.WR add rex.R jno or rex.WRX pushq add fidivr (bad) rex.WB rex.WRX sub lret xchg fxch and leaveq movsb movsl adc out jbe xchg push push and iret vcvttss2si push hlt sbb fisubl rex.WRB mov je jp rex.RX mov lea movabs mov mov sub (bad) callq or sbb insb nop enterq callq adc rex.WB mov fstl jp xchg xchg pushq mov cmp cltd sbb rex.WB std rex.WRB mov xchg repz adc xchg and insl (bad) cmp addr32 jne jns mov pushq stos lret rex.WB xor retq mov mov rex.WB xchg je or push pop and jle movslq adcb mov sub decb je add (bad) pop cltd xor xchg iret add out fs rcll repz add outsb push (bad) cmc in push cmpsl mov test sbb movslq (bad) pop shlb pushfq int jo mov ds shlb out lea movsl adc test mov test (bad) mov (bad) (bad) xor or fcmovu add insb je rcrb (bad) push cmpsb jno xor (bad) adc cmpsl xor mov cwtd rex sub leaveq mov xor fiaddl rex.WB xor xchg xor fstpl sub jle subb rex.WRXB lea mov adc jno sub pop mov rex.WB scas movsb add pushq out insb or fdivrs fstpt xchg insl pop jo adc pushfq (bad) je or sub xor rex.WB jnp out stc rcr (bad) (bad) add adc jbe (bad) (bad) cmc xchg jnp cmp lret and (bad) (bad) out fisubr callq rex.XB (bad) pop lret clc (bad) pop jmpq ja addl add rex and push add cmp sbb rex.WB ds rex.X rex.WB mov decl mov fistpll or (bad) jp mov mov rex.WB push (bad) or add (bad) repnz lea rex.WB fs movslq stos (bad) lret rex.WRXB cld add mov xchg or shl add fdiv fimul mov movsl std xchg int cmpq callq (bad) cli push push cmpsb sbb insb xlat test repnz (bad) xchg mov fcomps adc rex.WR rex.WB mov add rex.XB std cli sub movabs jp (bad) (bad) repz sub pushfq rex.RXB sbb lret and outsb (bad) rex.WB and ds rex.WX rex.WB rex.W movsb callq xchg lea stos movabs rex.WB xor mov test jns push fwait push out rcl cli rex.WB int movabs std sub and pop loopne adc sub (bad) fimul test (bad) pop fwait mov jns (bad) sub movabs (bad) rex pop movabs (bad) pop movabs rex.X (bad) rex.WB jl pushq es (bad) xor xchg shld push rex.WB xchg fnsave mov rol push pop insl movsb pushq ja fidivr nop (bad) movabs movabs callq (bad) push push rex.WB ja mov xor rex.WB cltd cmp pushq xchg pop int3 outsb scas (bad) pushq jne xor xchg xchg rcrl push and loope data16 rex.W xchg test cmp sub pop rex.RX movsl rex.WB (bad) fidivl enterq cmpsb push adc adc mov retq (bad) fstl pop or in cmp jp rex.W rex.WB fwait or rex (bad) sub (bad) sbb roll and add and (bad) sti movabs jb scas enterq adc out mov jle xlat shl enterq lock cmp mov cmp mov lahf imul (bad) (bad) (bad) ror or mov lods cltd cld add pushq adc (bad) out (bad) mov jae mov (bad) (bad) rex.WB (bad) or rex.WX cmp xchg callq movabs cwtl xchg in or or mov jrcxz xor or retq fdivl add mov rex.WB (bad) lock rex.RXB rex.XB enterq fdivrl imull ds jmpq and xchg rex.WX rex.RX stc or int3 push jae pop sub rex.WR and cs testb jb rorb stos pop lock (bad) xchg rex.WB xchg rcr rorl vmulpd xchg xor mov mov mov clc lret (bad) add cld xchg xchg sbb fwait enterq test in mov icebp out xchg push rex.WXB sub jne mov btc mov enterq (bad) xchg rex.RB paddusb pop insb cmp jle or fidivrl sbb fwait loopne faddp rex.XB mov mov callq xlat xor fcom and callq jnp sub cmp stos add mov rex.RX and iret scas clc pop rex.WR pushfq rex.RB es pop rex.WRXB imul rex.WX outsl loopne iret out cmp out cmpsl or jo adc mov push sbb (bad) or cmc adc mov out mov mov loope pop addr32 scas mov adc sub addr32 pop (bad) rorb cmp jbe lret retq rex.RB loop xchg sahf pmulhw or rex.RB movabs xor cmp out xchg jns cmpsb jns rex.B lea pushq rcrl rex.R cmpsb pop retq mov out mull mov (bad) mov pop pop rex.XB (bad) cmp (bad) enterq (bad) mov and (bad) out mov data16 movsl (bad) (bad) retq gs push mov or jo sub popfq jns jbe mov (bad) (bad) movabs out jno add rex.WRB pop add (bad) jmp adc js rex.R mov addr32 rex.WRXB rex.RXB xlat (bad) cmp sbb push lea fsts in movabs test (bad) rcrb cltd xlat push insl sub ds jb cwtl (bad) lret pushfq xchg push scas (bad) xlat xor adc out cs imul mov (bad) (bad) mov xchg (bad) jmp add pop int xor adc (bad) lods movslq fdivs push mov test fwait or xor cmpsl mov (bad) scas sbb jae iret addr32 pushfq test jle stos add pushq sub movabs lahf roll mov mov fsubrs xchg (bad) (bad) gs or addr32 insl jl (bad) push jbe cwtl sbb xchg out pop or lret cmp (bad) rex.RB mov mov movsb enterq out movabs (bad) loopne,pn sbb sbb adc jne xchg push jmp adc (bad) sub (bad) popfq (bad) cmp sub sbb rex.WR (bad) jnp sub xchg rex or mov cli rex.RXB or add (bad) fdivs sahf mov mov cmpsl or ja in (bad) fcmove rex.RX rex.WB mov cmp gs lea rex.WB in pop cmp movslq cwtl (bad) adc cmp out movb push mov in (bad) mull scas sbb pop mov clc rex.WB and movsb leaveq xor pop (bad) (bad) jl xchg rex.WB push push jle jmp cld or rex.WB add mov callq testl rex.RXB fwait pop mov rex.WB mov xchg sbb (bad) cmp loopne rex.WB sub rex.WB sti out movsb mov pushq rex.WB sub xlat rex.WB out orb lods cmc mov cs jo jg rcrb (bad) mov retq jne retq xchg mov (bad) lahf xchg hlt pushq callq pop cmpsb (bad) xchg rex.WB jp pop mov movabs push push mov stos lock rex.WB icebp ror fmull (bad) sub mov loope sub pushfq push lret (bad) cmp out rex.WRXB movabs jbe jbe cmp faddl movl xor mov out test mov shr sbb xlat rolb cs (bad) rol repz xchg rolb gs lahf jne (bad) jmp (bad) sbb shrl xor cmc imul test (bad) and or scas rclb pop popfq (bad) xor or mov add rex.WRXB (bad) retq xchg sub leaveq mov mov mov jb test mov mov or rex.WRB lahf in std stos rex.WX add cwtl ds (bad) repnz push xor retq xchg mov jl pop xchg sub (bad) mov mov pop or sub movabs hlt or xchg mov xchg rcrb loop mov sub (bad) pushq xorl and and clc je ja sti movabs pmulhw lret outsl mov movslq es (bad) outsb insw stos add imul movabs jp in push jle adcl adc adc fs sub adc jb fdivs sub xor rex.WRXB rex.XB enterq pop rex.WR leaveq (bad) pop mov pushq scas rex.WB enterq (bad) sub rex.XB rex.WRB adc or (bad) test shrb (bad) insl jrcxz (bad) xchg rex.XB sbb sub (bad) (bad) cmp add (bad) mov adc fs movslq mov xor adc cmp lods (bad) cmp rex.X notb or mov scas and xchg sub cmp mov mov movabs sbb pushq movsl or jl fcom (bad) xchg in cmp jb cmp or (bad) gs lods adc test pushq push fdivp push xor mov rex.RB rclb add lea jno movabs enterq (bad) lock jns add and mov js jg popfq fsubrs sub jb xchg (bad) rex.W sub xor stos and rex.B addr32 stos pop add add pushq lret add vunpcklps and sub sbb fistpl test cmp rex.RXB shlb (bad) divb pop mov mov push pop rex.WB mov xor retq rex.RX jo loop ror xor js movslq sub clc fnstcw pop xor mov or sub cmp adc sbb (bad) push (bad) push pop fcmovb and jge retq jnp sbbl jg cld enterq je (bad) movsl enterq sbb mov cld jns jbe add add mov enterq fildl shrl xchg and xchg push fwait pop (bad) movabs cmp rex.WB jne bswap out cmc xchg and scas (bad) pushq or bswap jnp adc lea sarb or movslq mov sub (bad) mov or fstl rex.WB and repz callq sub lods (bad) movsl fist pushfq xchg sbb jge sub cmp decb pop mov jbe and rex.B popfq sub imul push loope adc sub callq mov rex.WRX out stc pushq jp rex.WRX imul mov fwait lret xchg outsb movsb rclb outsl push sub rex.XB repz movabs (bad) or adc mov ja and mov rex.WX and out gs xor hlt rex.WB or stos int mov repnz movabs rex.WRX push xor callq lods movsb push mov or cmc out in push mov rex.WB cmpsl sub jp xor movabs (bad) (bad) rex.WB movabs rcr adc rcrl fdecstp (bad) shrl xor mov leaveq out jmp rex.WX and pop push or fiaddl fwait movabs retq add xchg rcll sub sbb icebp loopne (bad) loopne cmovo test (bad) pop mov sbb nop callq cs scas rex.WR in rex.WB ds fsubl or rcrb je jle push (bad) fstps push std pop (bad) pop xchg xor sub push repz retq clc cld mov rex.RX cmp jp (bad) int3 rex.WB push pop rex.WB mov and movabs rex.RB mov cmpsb sub add rex.WRB test (bad) (bad) cltd rex.WB movabs out scas loopne test and (bad) rex.RX xor jne outsb jp and mov or mul and xchg adcl (bad) add retq jl push sti cmp push sahf sub mov xchg scas int3 popfq rex.B and xor pop xchg mov adc xchg sub jmp mull (bad) jne subl rex.RXB cwtl sub jns xchg jbe xor pushq rex.R rex.RB and push rex.WB rex.X mov and rex.WB push rorb rex.WB (bad) loop mov and sub rex.XB sbb mov push sar adc rex.W gs fcoms sub rex.WRX mov rex.WB xchg adc loop (bad) rcrl xchg (bad) jge push pop rex.WB rex.WRX movb out jmp (bad) pushq xrelease mov lock jno (bad) fnstenv cli movabs sbb or imul xchg sub pop mov movabs jo cld cmp adc movslq mov stos rex.WX shlb add add lods lods pushq jne,pn pushfq cmp adc rex (bad) shlw pop rex.WX jo rex.B rex.WB xor ss stos sbb in add mov in (bad) rex.WB pop add push nop (bad) test icebp xchg lar sub (bad) shll (bad) rex.W (bad) icebp rex.X xor cmp push enterq push add rex.X popfq pop retq gs jb sarl (bad) mov ja jmpq lahf sub xchg sub shrb push mov mov loopne pop pushq pushfq xchg scas in movabs (bad) cmp adc cmpsb in int3 mov std outsl xrelease mov cmc cmp xchg xor xor rex.WRB (bad) imul notl add rex.WRB sub mov jns push (bad) neg (bad) mov testb cli (bad) orl repnz rex.RX add mov cmp stos mov push cmp rex.B and jo stos rex.WXB rex.XB or add hlt adc xchg repz xorl testl (bad) mov enterq rex push fsubrl movl or or sbbl flds pushq (bad) sti (bad) jne test jle rex.WB rex.WRXB lahf rex.WX (bad) mov test jno je rex.WRB movsl fildll pop ss mov push rex.WB out rex.RXB cmp stos xchg (bad) fdiv rex.WB mov sbb and in rcrb xchg jge int xor xchg mov add pop xchg pushq fstps movslq pop addr32 (bad) sbb push stos xchg cmp pop fwait (bad) mov adc push movabs xor iret add jb xchg test movabs (bad) jb (bad) out pop mov in stos push and mov iret lods movabs sbb pop movabs lret sbb add push (bad) gs mov rex.B icebp add stc loop (bad) xor add in cmc push (bad) rex.WB (bad) adc jg movslq xchg jl jb lret in pop push insl push and jmp cmp xchg int (bad) rorl stos mov pop push movabs rex.WRB pushfq pop pop rex.WB fwait pushq (bad) in add fstpl repnz rex.RX ss cwtl (bad) (bad) leaveq jmpq mov imul rex.WB lock mov in stos rex.WB (bad) fsubp lods movabs in add jns mov rex.WXB adc sbb retq (bad) push scas sub shl loopne cld loope or or (bad) (bad) jns in rex.WB fidivl rex.WR rex.WRX push rex.R je sbb (bad) stos popfq lods js xchg push rex.WRXB rex.XB movsb push or icebp movabs (bad) movsb pop in or (bad) add (bad) and retq enterq rex.WB cs pop jle pushq pop shll rorl loop sbb jmp test pop push (bad) ss movsb stos and mov jl mov loope xor rex.WB jmpq js xor movabs xchg je js rex.X pop cmc scas fwait or mov fst mov push rex.WB rex.RXB and (bad) fdivs decb (bad) rex.WRX rex.WRB sub cwtl mov pop movabs loopne mov movabs in loopne rex.R fsubs ss pushq push push (bad) mov sbb pop cs sub jl pop xchg adcb or xchg mov xor and (bad) (bad) mov push (bad) adc adc in pop cwtl rol mov fnstcw (bad) js rex.WB mov fcomp lods rex.WB test (bad) mov jno rex.X fisttp jbe jnp (bad) retq out rex.WXB movabs fiadd orb std xchg loope insb pop xchg adc movsl add fisttp (bad) xor (bad) js retq cwtl and and (bad) pushq rex.RB nop adc and sahf push loope js sub leaveq data16 stc adc mov push cmp (bad) mov adc repz or mov jae,pn push xor (bad) pop push movabs add or (bad) push mov push or cmp or or push sub pop mov out rex.XB sub enterq pop (bad) rex.WB lods sbb (bad) and out pop in rol sub stos test sub rex.WB popfq imul xor rex.X add mov icebp sbb lods ja jle in cwtl scas scas repz ss outsb add (bad) jne out rex andb movsb (bad) jae add xchg fiaddl add imul adc movb and or rex.WX sub mov xchg loope rex.WR leaveq outsb sub mov (bad) add mov adc fistl sbb pushq (bad) push rolb or xor add rex.WRB fimull fnstcw (bad) sub adc rex.WB mov jne lret fmuls jbe rex.RX and je (bad) movslq or pop cmc frstor sub rex.WXB xor rex.WX xchg movsl pop rex.W sub (bad) jmp lods (bad) (bad) movsb cmp flds cmp test sub sbb retq test (bad) sbb add enterq adc xchg sbbb mov jmpq wbinvd mov jle int3 (bad) rex.WB movslq (bad) cld (bad) loope rex.WB andl movabs mov scas jge push rcrb in rex.WRB incl push sbb adc rex.WR cmc (bad) pop fcmovne cli cs rex.WB xchg pop in sbb sub rex.WB jbe adc and (bad) sar rcl shll lods or xchg cld lret xor mov rolb or (bad) jg mov je push xlat sub (bad) rex.B es cmp callq sti mov fisttp movsl movabs mov jno incb mov rex.WB in mov rex.WB imul rex.WB loop (bad) enterq loopne pop in fcmovne sbbq adc (bad) movsb sbb sub movabs sbb addr32 adc movabs rex.WXB (bad) incb sbb imul (bad) mov pop data16 shrl pop rex.RB rex.WX lret fadds jnp rex.RXB push and rex.WB loopne and push (bad) xchg fimul pushq out sub xor addr32 cmpsl icebp rex.WB test vorps xchg je out enterq rex.RX test xchg (bad) sarl mov lahf xchg insl rex.WB enterq movsl retq ja jrcxz (bad) xchg mov imul rex.WB and adc scas test movabs pushq retq and xlat mov cmpsb (bad) mov out xor rex.XB add (bad) fcomps lret xchg ja rex.WB sub (bad) xchg (bad) rolb (bad) and pushq movabs pop dec xor cmpsl sub mov xor out push cmpsb iret jl (bad) movabs mov (bad) imul and (bad) jns sbb xchg jbe pushq sub loopne imul movsb stos sbb (bad) lods mov addr32 or push sub (bad) pop adc mov rex.WB xlat sub sub xchg pop enterq int3 adc (bad) adc or (bad) stos (bad) xchg adc mov adc gs test sub sbb sbb rex.WR sbb rex.W push pop xchg scas out mov jae sbb movabs lahf fdivs and mov outsl enterq (bad) push or xchg loopne imul mov int add hlt clc cli push movabs add test cmpsl clc (bad) rex.WB enterq (bad) pop rex.WB add popfq subl or rex.XB lret add cmpsb loopne push sub jbe xchg test fsubl rorl loop movabs int3 or int3 lock (bad) js rex.WB out jb ds pushq sub xchg flds test cmc leaveq xchg in sub sbb sub sbb jle adc (bad) movabs add rex.WB test or or (bad) loopne pop sub (bad) fs loope cmp movsb (bad) rex.RXB (bad) rex.WB cs cli and push cmc enterq sub movb clc je (bad) (bad) mov repz loopne cmp in mov clc jo callq movabs xchg cltd cmp fimul (bad) (bad) or fcmovbe rex.WB out notb stos sbb in pop cmp sbb adc test rex.WB data16 rex.RX int3 rex.WRXB rcrb mov rorl rex.WRXB (bad) fmuls adc rex.WB push stc sbb sub frstor pushfq callq addr32 pop and out mov adc (bad) rex.WRB fldenv sbb xchg imul (bad) mov pop movabs fdivrl enterq rex.WRXB scas sub rex.WB popfq mov (bad) fwait (bad) rex.WB int3 in (bad) scas ds sub (bad) push sub (bad) sbb pop push rex.WB cmp movabs push or (bad) push sbb mov sub rorl jmpq jb sbb test pop lret rex.RX sub sahf movabs shl xchg stos movsb addr32 rex.WRB and sub movslq rex.WX sub (bad) jl idivl cwtl data16 add test rex.RB or lret jge clc or pop out rex.RX test addr32 pop rolb testb cwtl lahf rex.WXB lret pop pushq push pop mov pop icebp rex.WRX or or cmp (bad) jge enterq push or pop orl lods std rex.WRXB movabs mov or retq cmp push rex.WX test test test lret xor sub mov rex.B mov es pop rex.WXB lock or (bad) movabs mov outsl cmp mov push out out add jno xor sub popfq xor mov loopne rcr xchg push fsubs cli push movsb xchg shrb pop sbb cltd movslq and enterq sbb xor pop mov (bad) mov xor fadd adc fdivr (bad) fistpll je sub cltd (bad) out jg icebp and loop sbb xor test (bad) jbe sbb cmpsl imull lea rex.X (bad) rcll push movsb or shrb int3 add sub xchg movabs and clc out rex.WXB pushfq mov or data16 (bad) add mov cmp jbe cld mov and pop xor shlb xor push movsb int3 rex.B ss scas addr32 xor mov lods jno cmpsl add sub add test (bad) shr or in fsts adc loopne in mov (bad) push mov mov push movslq out xor shrb (bad) xorl rex.WB mov sub cld lret and rcll (bad) rex.WR pop and adc mov mov cwtl jmp enterq (bad) (bad) push test nop xor (bad) push or mov pop mov and xchg mov cli rex.R (bad) xlat rex.WRXB sbb jno bswap and mov adc xor jo mov or mov notl test iret sub pop rex.RX icebp scas push movabs jno fcoms es jl fwait lret jno leaveq jne (bad) rex.RX out lods or (bad) mov mov or push xchg popfq and pop imul rolb and jrcxz sub or or (bad) or rex.RX sub mov jge xor fistpll mov xor callq lret sbb (bad) out rex.WX jnp xchg add lock leaveq stos fadd cld fdiv lahf pushq repnz imul mov fucomi add rep jne test and adc cmp (bad) loope imul xlat push mov sub pushq mov (bad) sti movabs mov xchg push enterq je repz stc pushfq cmp xchg (bad) xchg lret mov imul je rex.RX test xor adc adc fsubl jmpq or rex.RXB pop sub lea cmp rex.W jnp lret xchg mov push pop movabs add in out rex rcll cltd and jbe insb test jmpq js jl idivl xchg cmp or pushw xchg adc repnz pop (bad) mov pop xor mov or enterq or sub int3 stos repz sub int rex.W xchg sub insb and mov (bad) pop push pop (bad) mov insl mov rex.WX pushq rex.WR pop popq rcrb cmp rex.WX cmp sbb cmp rorb xchg adc fimul stc sub lahf callq (bad) (bad) push (bad) xchg jae (bad) loope rex.WXB rex.WRXB shll fwait mov jg faddl jae loopne nop sahf addr32 sbb (bad) pop sub jg jle movabs or repnz xchg rex.WB push mov rex.WB mov data16 jrcxz sub stos test pop add mov rolb rex.WB xchg or or cmc jrcxz mov je pop shrl mov out rex.WRB rex.WB rex.X xchg xor (bad) popfq rex.WX (bad) mov and and push rex.RXB jb sub or mov (bad) rex.WRXB rex.X cmp lret xchg lret add (bad) push ja mov xlat rex.WB xor movsl add mov rex.R pop (bad) rex.WB add movabs rex.WB add rex.W mov (bad) mov fisubr push (bad) pop or sub adc push mov rex.WB (bad) mov movabs xor rex.X fmull xchg mov xchg cmp test xchg (bad) fidivr sub sbb pop (bad) loope (bad) rex.WB jo lods or movabs mov sub je add jle xor jp mov rex.XB loope push jns jg sub add test (bad) loope rex.WR sahf jb in adc out jae rcrl rorl and vmovupd mov rex.RB add or rex.RXB lods callq (bad) fldenv js lock xchg rex.WB cmp rcrb pushq sbb fwait sub add in rex.WB jg test (bad) iret movabs pushq lret lods cmpsl sbb js test jno sbb pop imul enterq stc lea (bad) mov insl mov (bad) movabs push cli imul mov pushfq rex.RXB callq xchg rex.WXB rex.WB rex.R imul rex.WB push add test rex.RX mov (bad) sub rex.R lods jns add and rex.WB xor jmpq jp js fdivs cmc pop fwait loopne rex.R es (bad) pushq cmpsb callq xchg push sub lret callq xor mulb mov push xchg and sub movsl imul mov push mov and ja rcrl out sub ds ror callq pop pop enterq jg push add mov cmp sub test mov int3 sahf jnp loope mov rex.WB lock and rex.WB rex.RX mov (bad) (bad) hlt and push repz movsl movslq rex.WB es jg in sub rex.WRX rex xchg retq test cmovl or adc test lock loopne xchg xor rcll movsl pop (bad) movabs test rex.WRXB rex.WRB rex.B rex.WX rex.WB enterq (bad) jns rex.WB callq movsl sub movabs pop rex.WB in (bad) adc ja or vsqrtps loope sbb cmp (bad) mov fnstsw cld cmp push hlt xchg or retq pop jmpq cmpsb jbe insl clc sub jne out rex.WXB in rex.B or and xor (bad) cmp rex.B jge movsb rex.RB add stos jle (bad) mov outsb rex.WRXB rex.WRX rex.RB pop adc sahf add callq rex.WB loope stos mov (bad) fistp mov sub (bad) imulb rex.WR xor rex.WB test rex.WB (bad) jle out jbe out mull fistl stc (bad) rex.WB lcall sub (bad) negb sub clc (bad) lods mov mov cmp movsb mov adc sbb xor movslq in shrl rex.WB addl (bad) cmpsl movabs movabs add sbb or sbb rex.WX (bad) rex.WB fwait callq insb rex.WB (bad) adc int3 rex.WX cmp pushq xchg (bad) add jns rex.WB cmp xchg subl cmp movabs sub sti out push pop rcll fsubrs insb retq leaveq sub fs in insl pushq sbb pop sbb rex.WXB (bad) mov rex.WRXB cs (bad) retq rorl imul js rex.RB xchg mov (bad) (bad) adc rex.RB xchg jns xchg (bad) (bad) pushfq jmp mov fisttpll pop rcrb add xor clc jl leaveq xorps or sub rorl jmpq or int pop scas rex.WXB rex.WRX rex.WB shrd adc icebp rex.RB out or mov add enterq rex.WRXB add movabs mov rclb movsb mov sbb movsl imul out imul mov mov pushq jge and cld sub or test mov addr32 mov shll xchg (bad) sub and leaveq xor xchg pop fimull pop imul decl test lret fdivrs pop stc rex.WX (bad) (bad) out lahf sub out push sub cmp mov jbe add jge mov (bad) (bad) pop loop fildl adc rex.WX or cltd sarb rex.WRX movabs sub (bad) repz (bad) addr32 insb rex.B (bad) pop rep jp push adc sub (bad) xchg mov rex.RXB rolb add adc rex.B jrcxz mov fstps push fisttpll xor (bad) cmpsl mov js or psubsb jge jrcxz mov xor and (bad) ficom (bad) mov or jns or popfq rex.WRX fisubr push xchg cmc rex.RXB xchg (bad) xchg rex.WRX rex.R gs adc sub jmp push add jbe rex.WB pop rex (bad) xchg rex.WR rex.RXB mov stos in insb jne pushq jrcxz std (bad) mov push (bad) movabs mov mov test rex.WXB push mov fisub xor adc cs or cmc iret jge (bad) icebp sub fimull leaveq and sbb fiadd fwait retq add sub test cltd push lret sbbl movsb mov pop rex.RXB xlat fildll fs xchg jrcxz push data16 (bad) hlt mov jnp (bad) clc movabs adc mov sub (bad) pushq movslq xlat insb pop pop je in pop jrcxz cmpsl push mov cmp shlb mov sbb outsl (bad) scas add add (bad) or lock or callq stos jne and push rex.RX (bad) xchg rex.WRXB mov ja adc iret cwtl loopne mov jl data16 sbb test fimull fildl pop notb test mov cmpsb rorl pushq ficompl add scas test xchg rex.WRXB mov or (bad) cmp (bad) (bad) and std mov push rex.WX (bad) movabs add movl rcrl (bad) imul pop mov nop jl add (bad) fs lret mov sbb sub sub pop cmp pop pushq mov cmpl rex.WB rex.WB lock adc (bad) lret and push (bad) imul push (bad) sub fisub out (bad) or and mov or jge or pop pop shl cmp movabs pop rex.WB orl out loop out fadds or sarl mov xchg mov movabs mov push rex.XB fbld or adc xchg decl iret fnop or sbb or scas rex.WRB fcmovbe (bad) pop mov sbb rex.XB rex.WRB rex.RXB fcmovne (bad) leaveq pushfq push push cli add mov mov or je xchg mov push fabs rex.WB rex.WRX cltd jae out movabs (bad) sbb rex.WB repz iret pop sub clc out (bad) stos movsb push andl rex.WR and incb mov xor test jns mov add add (bad) fwait jl fmuls and test in cli (bad) rex.WB xchg xor jb (bad) sub rex.WB xor xchg repz (bad) cwtl stos imul pushq (bad) leaveq outsl or pop movabs sub (bad) movslq out js rex.R loope loopne xchg mov mov rex.WB jg (bad) mov idiv callq mov rex.WB add add (bad) test rex.WXB and mov jne push movabs (bad) test (bad) rex.WX rex.WR rex.WRB rex.WX xchg pop mov xor movabs adc cmp and mov icebp cmp jrcxz rex.WRX rex.WRX (bad) rex.WB movabs adcl and fnstsw in pop rex.WB sarb rex.WB shl sub (bad) jns rex.WR rex.WB (bad) and rex.WB jrcxz enterq mov jg (bad) loope cli adc retq jp push or fs xchg pop (bad) gs pop (bad) sub adc (bad) lods loope or add pop (bad) insl pop cmp clc rex.WR push cmp lods (bad) cli sbb and sub lea movabs rex.XB cmp push stc rex.WB retq add (bad) rex.WB pop rex.WB add rex.WB lods rex.WRB mov rex.XB adc pop rex.WR xor rex.WB fdivrs orl mov in and push xor (bad) mov rex.WR cmp xor out jne rex.WR (bad) movsl (bad) cmp sbbl icebp rex.WRB sub mov fucom ficompl scas pushq push mov xchg fs rex.WB and movabs mov pop mov in rex.WXB clc rex.WB fmul mov int iret (bad) and ds sahf mov (bad) (bad) (bad) (bad) movsb mov xchg cld (bad) test movabs push mov movabs (bad) (bad) imul rex.R mov rex jl lods add adc rex.WB outsl rex.WRB mov push push mov (bad) adc movabs pushq ss lret lods add lret fnop xor rex.WB pop std cwtl fnstcw (bad) add rex rex.B xchg jae out lods or (bad) jno rcrb rex mov fstpt cltd scas js adc retq rex.WB (bad) rolb jle xchg xchg cmp retq movabs mov (bad) push mov xor cmp iret mov shlq jle and xchg cmp mov addb (bad) rex.WB sbb (bad) mov cmp out or out xchg sbb mov (bad) rex.WB scas scas pop es lock (bad) pop (bad) (bad) pop movabs sbb retq (bad) cmpl pop sahf push jo add in (bad) cmc xchg jnp mov sub adc xor or add xchg rorb rex.WB lret pop mov or (bad) xor (bad) rcrl cmp rex.WR and jmpq sub jne mov sbb rex.WRB mov (bad) push movabs mov rex.WB (bad) rex.WRXB pop decb ss and push (bad) push mov rex.RXB add sub jne pop (bad) mov out mov andl cmpsb scas pop (bad) iret jg mov rex.WB rol (bad) mov std mov stc jge scas imul (bad) repz retq lahf out rex.WB rex (bad) rex.WB adc add cmp mov retq sbb rex.WRXB mov out cmpl sbb (bad) sarl lea rex.RB mov orb rex.WB rex.WRX lahf and rex.WB or icebp adc add rex.W loopne cmp in outsl (bad) rex.WB fs sub mov cmp pop mov sbb push cmpsb jp and rex.WRXB rex.X repz add stc cmp add rex.WR rex.RX or push pushq ror rex.WB jno (bad) faddl adc rex.WRXB rex.RXB sbb rex.WB sbb rex.WR rex.RX ds pushq enterq push lods movsb add insb and xchg pushfq rol (bad) pop ja movabs cmp jle add insb pop imull ja lahf jo xchg lock sub vmovapd movabs mov jnp mull mov mov fs sbbb jl pop xor clc movlps (bad) push leaveq (bad) fs test jmp rex.RB lods lret jne xchg adc pushq lock rex.RX idivb or js out ficom out rol add nop in xchg or or (bad) add mov loope (bad) test (bad) mov sbb fsubl cmpsb (bad) xor orl (bad) jrcxz xchg (bad) sbb mov cltd add push or (bad) (bad) stos (bad) or imul adc (bad) popfq (bad) rex.RXB sub sbb mov (bad) add sub xchg (bad) scas pop xlat leaveq xchg (bad) cmovns in xchg sub adc callq adc mov xchg push movabs mov add rex.WR rex.WB (bad) (bad) rex.WRB cmc in rex.WB jmpq rex.WB iret or jmpq int (bad) shl (bad) mov fxch sub rex.WR rex.WXB rex.WB xor addr32 xchg enterq (bad) rex.WB rex.X rex.WR sbb adc mov or xlat add mov hlt rex.RXB mov rex.WRX add jp sti mov xchg ffreep rex.WB xchg out sub loopne or (bad) rex.WRX imul and (bad) pop xchg int3 or test andl test incb callq xlat xchg lods jnp rex.WB rex.WR rex.WB pushq xchg mov sub fs (bad) pop adc rex.WB ror vmovaps pop cld notb movabs rex.WRB out rex.R adc mov sbb xchg xchg je xchg fldenv addr32 jo stc fistp je rex.B rex.RXB retq rex.WB rex jmpq xchg rex.WRXB jne fs (bad) sti add int jle ja rex.XB enterw in scas pop pushq fwait lock cwtl jne cmp cmpsb data16 adc in retq push icebp and pop rex.WRX pop movabs adc jmpq rex.W std (bad) jnp fxam adc jno pushq rex.R scas scas fcomi add jmpq or ror (bad) pcmpgtb (bad) mov lea mov rcrl cmp clc (bad) push insb flds pop push sub xor cmc mov mov jne adc mov scas sub pop shll sbb (bad) cmp test fidiv xor pop out addr32 jle imul (bad) pop roll cmpsb pushfq mov (bad) (bad) rex.WB rex.WB in clc cmp sarb orl pushq (bad) rex.WB sbb fimul (bad) mov rorl or mov rex.WRXB (bad) fidivl and jl mov stos retq rex.WB iret (bad) pushq (bad) outsl pushq cmp rex.WRX cmp rex.WB test mov xchg es lahf sbb enterq sahf pop jns gs push clc cmp movabs (bad) add pop jrcxz hlt mov mull (bad) mov pop leaveq addr32 in xchg push mov (bad) push and andnps (bad) rex.WB adc mov callq jnp push rex.WB xchg mov push nop xchg movslq mov (bad) (bad) rex.WB ja (bad) int3 std movslq (bad) mov or pop adc rex.WB fwait out ffree nop/reserved rex.WB rex.WR cs jge addr32 (bad) int clc insb in xlat cli rex.WXB test jl rex.WB rex.RXB fs push sub cmpsl in pushfq cmp movsb imul sbb sbb mov mov mov repz push pop add movsb iret mov sub scas or mov pop mov xor stc cmp mov clc (bad) cli stos and fisubr cwtl mov enterq xchg adc adc push mov es push retq pushq gs sti xor (bad) (bad) pop sbb adc or rex.XB mov insl (bad) shlb xchg retq movabs mov mov sub ss rex.B rcll out xchg mov sub pop mov cmp mov (bad) rex.WX pop pop loopne mov jno rex.WR repz movsb push (bad) pop addr32 fcomps rorb adc fcompl sub lea jle xchg mov rex.RXB fstl (bad) stos nop pop cmp callq mov rex.R mov sbb rex.RB add pop or jle and or pushfq jns (bad) test fdivrp movabs jg data16 rex.WRXB mov xchg xor add or pop cli adc packssdw (bad) pop cmc rex.WX fcomp cmpsl add sub jbe callq mov gs xor insb and mov fistl (bad) leaveq (bad) and loop push (bad) cmc xchg sbb negl adc test in add xor jp ficomp addr32 xchg jge push sti rex.W repnz (bad) popfq sub add fcompl mov sbb sub std cmp sub or ds (bad) fisub imul (bad) jns adc add mov sbb or cmp (bad) rex.WR rex.WRB rex.W (bad) lret stos push (bad) push adc cmpsb out movabs rcrb repz xchg pushq add (bad) xor rex.RB mov (bad) rex.R rex.RXB sub xchg mov (bad) movabs ds out je pushq jge (bad) ja pop out mov rex.WXB clc rex.RB cmpsl (bad) sub in fs (bad) lret lods std lret (bad) pushfq sub add adc rex.WR out sub outsl scas (bad) icebp rex.WB clc (bad) fdivr sub and callq (bad) hlt in pop cmp rex.RXB add jns lret pop stc jmpq pop imul jne stos sub sbb rex.R and je callq mov or mov imul cmp sbb callq out push xchg (bad) cmp lock xor push xchg sub or pop mov sbb sub addr32 (bad) callq xchg push idiv fidivl mov push (bad) cmp mov lea cmp jg rex.XB pop enterq rex.RXB addr32 cmp (bad) mov rex.WX sbb push movb rex.RB xchg (bad) repnz jg out (bad) loope add jo pop nop jge cwtl mov (bad) mov mov imul in (bad) rex.R repz xchg xchg adc or iret callq clc cwtl rex.WRX punpckhwd clc xor (bad) mov cmp stos push add adc xor sub leaveq mov cmp imul (bad) int3 rex.WR cmpsb std jg (bad) mov stos (bad) push or xchg xchg (bad) (bad) mov rorb xor and adc or jbe sub (bad) pop rcr addr32 pushq mov sbb add (bad) cmp movabs shrb (bad) fwait rex.WB (bad) push sub cld mov ja rorb gs jbe rex.WB pushq rex.WRX lock xor jmp repz rex.WXB lea (bad) (bad) jp rex.X rorl scas push mov add rex.WB xor (bad) add rorb nop cmpl xor rex.WB (bad) gs rex.RX roll cmp xchg pushq (bad) or movsl rex.WB movabs loop insb cmp (bad) mov out scas or adc jle or imul ss test sub (bad) rcll and xchg fdiv push cltd mov movabs addr32 rex.RXB jmpq or rex.WRX or cmp (bad) xchg jle fbld xchg shll mov jbe mov sub scas (bad) adc adc pop (bad) in adc std rcr (bad) sub cmp sbbl imul (bad) insl xlat xor cmp push movabs jb jae mov (bad) movups scas je insl mov movabs popfq lock in and shl fildl pushfq (bad) rex.RXB sub mov (bad) mov xchg (bad) pop pop scas (bad) pop jo movabs test sbb sbb adc xchg (bad) cmpsb mov mov cmpsl mov in cmp xor cmp cld adc xchg out cmp (bad) scas push cmp sub mov mov xchg sub pop sets rex.WR pop rex.B loopne icebp rex.WXB sub (bad) out insl mov (bad) xchg pop cwtl callq jmpq stos and lret xor push shrl shrb push (bad) lret out push pop mov fcmovnu scas sub adc push jae movabs stos imull and stc cs data16 sub rex.WB xor test rex adc ljmp ficompl ljmp push imulb xor (bad) cmp pop fwait ja scas mov idivl sub in rex.RB rex.RXB ja mov outsb rex.WRX fnstsw cld (bad) out imul ds rex.WB (bad) loopne loope rex.WRX movabs push rex.RX rex.RB popfq incl sub mov stc ffree movsl clc add xchg cld lods rex.WR rex.WB rex.WRX repz jle rex.RX (bad) sahf imul out rex.WB rex.RB popfq iret sub and cli cmp popfq rex.WB shrb mov mov ficompl (bad) cs loopne push and mov shl rex.WB rex.XB ss retq jg rex.RX rex.WB adc mov loopne addr32 loopne xor mov retq out leaveq js,pn (bad) test outsb push pop addr32 jo,pn shrb (bad) xchg rex.WR rex and fisubl rex.WB (bad) movsb (bad) jp outsl cmp cmp cmp in push (bad) rex.WRX popfq mov ffreep test (bad) push lret stos rorb (bad) int sub rex.WX xor outsl add retq jns mov test in (bad) jl movabs jo (bad) (bad) pop cmpsl mov jle ds js xchg pop and rex.WRB imul adc jae jge rex.XB lret mov cmp sbb fcmovu movabs sbb or push ds pushq sbb and lea lret rex.WX xchg cmpsl movsb shll in pushq ss in mov fimull pop negl addr32 pop mov rex.WB xor push rex.WR rclb pop jmp loop pushq (bad) rex.WRX add callq mov pushq adc retq rex.XB mov insb sbb loope adc movabs rex.X movabs ja pop stos and callq adc sub pop add push jae out rex.WB movabs push (bad) (bad) mov rex fildll loopne xchg rex.WRB sub xor rex.WR cs push mov sub loop fisubrl (bad) (bad) (bad) jrcxz sbb rex.WB cmp lods (bad) sarb (bad) pop out mov pop xor (bad) (bad) rex.WB movabs or cmp rex.WB leaveq or pushq (bad) pop rex.WRB (bad) rex.WB lret es sub mov loopne rex.WB add stos mov test pushq std xchg in movabs (bad) movabs (bad) mov mov ds adc sbbb movslq pmaxub movabs cli fs push jae mov repz xchg data16 pushq (bad) pop add xchg rex.RXB std pop addr32 mov lods (bad) movsl rex.R cli mov es rex.WB cmpsb mov (bad) pop sahf ds cmp cld and xor and hlt add out pushfq (bad) (bad) xchg fcoms rex.WB movabs rex.WB or fwait sub sbb retq or sub movslq icebp mov out add push movsl movsb scas addr32 mov enterq pop jp sbb lret stc lods ja out sbb mov retq xchg adc and pop (bad) mov callq (bad) (bad) leaveq mov pop (bad) jno mov (bad) xor (bad) test add loopne mov push insl or cld xor movabs rex.RX rex.X mull cltd sti pop pop and rex.RXB (bad) test (bad) insb xlat adc sbb fadds jp (bad) cld pop packuswb (bad) jrcxz cwtl rex.WX pushq (bad) xchg sahf cwtl push rex.XB rex.RXB (bad) test fbld pop fbld leaveq add test mov leaveq mov lahf add sti push rex.WRB jge (bad) (bad) test (bad) sbb (bad) iret cs enterq movabs out and clc nop rex.RX mov stc xor (bad) mov (bad) or sbb xor sarb in out and mov mov pop rex.WRX (bad) jmp rex.RB pushq int3 lahf pop enterq (bad) or jne iret (bad) sbb and rcrb cwtl jae adc (bad) rex.WB cmp pop int3 mov loop (bad) adc clc addr32 cmpsl cwtl jrcxz (bad) and in movsb rex.WRXB fdiv cmp imul mov (bad) sti xchg adc movabs (bad) adc js insl (bad) (bad) (bad) jns adc mov icebp adc sbb (bad) pop lock sub pop sbb jle or loop jmp lret or nop xor fwait std sub cmp in pushq int out scas jmpq (bad) movsb (bad) loopne clc jb (bad) jno ja imul movslq cmp cmp sub rex.X lret xor int3 stos shr scas test lret rex.WB movslq jo sbb rex.RB sbb hlt mov movsl callq loop and pushfq pop fcmovnbe rex.WB jmpq pop xchg iret sbb rex.X push mov add loopne cli jnp cmp (bad) xchg or xchg or mov rex.WB rex.RX ds pushq push test push jne xor jbe pop rex.WXB (bad) push leaveq repz and sbb push and out loopne lret xchg xchg int push jns sub fs rex.WB stc or out rex.WB add jge cmc (bad) fwait enterq out stc sub xlat add and rex.WB nop and mov pushq movabs xchg xor fiaddl gs adc ja callq rex.WR movabs subb rex.RXB (bad) rex.WRB mov iret pushfq push mov adc (bad) sti sbb sub mov gs (bad) pushq and ror (bad) sub push imul insl rex.WRX movabs pop pop movabs incb rex.R sub push sub (bad) cmp or fcomps rex.WX jno (bad) rex.WB or stc cmp jbe (bad) divb jg add sbb orl and mov andl xchg (bad) and hlt mov rex.WB shll (bad) sub xor mov (bad) mov sbb xor iret clc mov xor sub cmpl cmpsl jp (bad) mov sahf rex.W and add fstl movabs movsb out sbb sbb loope jmpq add cmp rex.RXB movabs cwtl xchg fmull out xchg clc repnz movabs (bad) ljmp sahf push fisub cmp lea addr32 lods lret rex.WXB (bad) lea (bad) sti stc jbe loope adcq mov ja jg imul add add (bad) scas stos popfq lods rex.XB outsb icebp and ss cld (bad) pop rex.WB xor (bad) rex.WRXB callq pop xchg mov adcb mov adc xor (bad) fsubrs sub jg jle rex.WB rex.WR rex.XB (bad) (bad) mov adc jg rolb sbb push (bad) mov (bad) (bad) adc pop (bad) rol lock and test mov movd stos scas xor movabs push callq adc outsb mov push lea mov mov sbb int3 rex.WB data16 mov sub jns rex.RX insl rex.WB insb movabs xor pop xor mov lods cmp and stos (bad) mov rex.WB (bad) sub push out nop rex.WXB xor jns cmp mov (bad) and (bad) clc cmp rcrl mov lods fs fwait cmp leaveq mov ljmp xor sbb sub sbb pop (bad) xor out (bad) js lea xor mov fcmovbe xorb lret adc cmpsl sbb lock mov xchg callq or mov push rex.WRB fs std int3 out in rex.X cmp jns (bad) cmpl jns (bad) pop shrl rex.B xchg xor (bad) out test and cmp out out (bad) and pop jns sub and test (bad) insl out stos push mov test rex.RXB and mov andb test push cltd rex.WRXB movups (bad) sub in jg or enterq or in adc xchg (bad) mov callq adc in xchg and or cmc xor or loopne xchg icebp sbb movsl loopne rex.WRB rex.WX jno pop or in (bad) retq test fcomps (bad) lret test add (bad) (bad) rex.WR adc xor lods (bad) xchg fidiv hlt xlat adc pop addr32 hlt (bad) mov push movsb test fsubrs lods (bad) rex.WRXB fld mov ja movabs (bad) fcoms push cmp callq callq xor mov ficompl rex.WX scas pop notl or enterq cmp out lods push jle cmpsl and sub stos or adc fisubrl ror jg mov jne sub jl lock pushq xor test popfq (bad) pushfq movsl or sub mov movabs fcmovb jl adc adc enterq out adc rex.WB popfq fcomps loop rex.WR rex.WB (bad) adc pop mov cmc imul and and pushq (bad) movsl lret rex.WX (bad) xlat or xor mov jnp leaveq sub rex.WB (bad) xchg shrl sub fisttpl xchg iret (bad) rex.WRX jle callq shrb (bad) movabs xchg mov sub (bad) mov shrb jo and mov push or rex.WB or push (bad) sub jge test nop imul rex.WB cwtl push iret insl hlt cmpsl sbb rex.XB xchg test rex.B rex.W xor test (bad) push rex.WB es movabs sub notb rex.WB mov cmp lea (bad) rex.WRB out rex.W out push in (bad) rex.WB mov jnp (bad) jb rex.WB lods fild sub push lret push jmpq sbb sub rex rcrb mov gs fs sub fwait mov and int rex.R repz mov (bad) cmp repnz rex.X jl pushfq rex.WB and or rex.WB cmpsb retq xor lock (bad) (bad) xchg ja rcrl sahf mul mov mov sub mov (bad) repnz test adc (bad) je in jbe rex.WB insl mov fwait or rex.WB shlb xchg or or popfq rex rex.WB loope (bad) xchg (bad) (bad) fistp sub pushq rex.WB xchg test rex.WB out jge add movabs (bad) (bad) xor xor cmp or xchg stos rex.WB (bad) rex.RX rex.W rex.WR push stos lret clc jbe in push nop mov rex.WR rex.X pop loop (bad) (bad) rex.R rex.WB sub pop rex cmpxchg xchg pop cwtl mov popfq (bad) rcll rex.WB fnsave jno (bad) lods rex.WB ds sub jmpq adc xor divl push cmp lock (bad) (bad) and in rex.WRX jmpq add nop jp (bad) mov rex.RB rex.WB cmp push pushfq xchg lock sbb rex.WRXB pop sbb cmp movb hlt xchg fiaddl add mov insl xchg rex.WXB test cmpsl rex.R rex.WB movsl rex.XB xor rex.WR test jl imul push mov cmp stos (bad) adc push rex.WB callq sub mov enterq data16 mov add xchg rclb mov movabs out and xor mov pop mov adc jg movabs xor iret mov push pushq stos jno sbb fwait movsl scas push xor or in sub (bad) and rex.X push lods fisttpl sub or out pop loopne rex.B (bad) and mov iret movsl cld mov mov loope sbb cmp (bad) insl mov ror out xchg push rex.R int and rex.WB rex.RB (bad) cmp cmp xor test (bad) pushq fcoml (bad) rex.WB rcrl rex.X (bad) imul mov hlt stos rex.WB movabs xor test or (bad) sub mov xchg test movslq jmp jp popfq js pop fwait mov (bad) rex.RXB repz lret incl ficomp insb subl rex.RX rex.WRXB out outsl jno mov xchg mov adc rex.WXB ja rex.RXB outsb push jl nop mov movabs movabs (bad) lods xor sub pop jge cmpsb movslq pushq cmp movsb outsl and movsb mov pop icebp in callq int3 fstpt sub adc (bad) data16 pushq jno (bad) xor xor fldcw js repz mov jle push pop (bad) lret add xchg fmull test out std or mov mov nop pop (bad) jg xchg out movabs fmul repz rcll rex.WX or lahf adc and rex.WX cld xor sbb add xchg mov pop jno cmpsl jb (bad) stc rex.WB mov (bad) xchg testb add add rex.WB rex.WXB (bad) fucomp cmp rex.WB mov (bad) gs cmp repz rex.WR rex.WR out in cmp rcrb rex.WB rex.WR jne add mov (bad) (bad) (bad) movabs (bad) jle (bad) rex.W mov xor (bad) pushq sbb (bad) nop push rex.WB pushfq (bad) adc xchg xchg (bad) xor vrcpss jl cmp jg jbe sbb sahf cmp and (bad) cmp rex.X xor and adc rex.WB cmp or xor (bad) xor mov scas jl out mov (bad) sub rex.XB (bad) cwtl sbb lods or out xor sub cld pushq notb mov jmp (bad) jmp sbb mov sbb sub sub sub jge rex.WRXB pop in add sub jo jmpq mov rex.WRX movsl notb cmp gs sbb movsl outsl xchg cmp pushq xchg adc xchg sarl jbe xchg mov jne addr32 int3 (bad) (bad) sbb shrb (bad) rex.WRB or rex.RX sbb (bad) (bad) cmp jge popfq iret sbb je xlat imul mov insl (bad) cld add out mov and lods movabs imul lret xor test pushq stos mov fisubrl iret rex mov test sbb jle stc and hlt sub jbe sahf test xchg jo out cmc sub mov jg sub in leaveq add lret xor xlat xchg add lock sbb or lods pop rex.X rex.WXB mov xor lahf lock pop mov ja fwait out jb pop rex.RB (bad) sbb rex.WRB push or jg enterq push xchg data16 or (bad) mov push sub or in jge rex.WX (bad) callq (bad) add (bad) and sub sbb and (bad) (bad) cmpsb mov xchg mov jne lock pushq (bad) jle (bad) je insb lods mov push pop cs (bad) lods pop or movsb pop insl stos rcll iret out leaveq rex.WRXB imul rex.RB out xchg cmp movsb roll (bad) pushq iret rex jp int movups mov sub jbe mov lret imul fnstsw idivb scas and mov or xchg jno rolb or push sar outsb (bad) rol (bad) sub js cmp xor mov popfq mov add xor jne sbb sbb retq std xchg (bad) fdivrs imul rex.WRX ss pushq (bad) lret and out xlat rex.WR pop lret add es (bad) addr32 shrb (bad) adc out jae loope iret (bad) or cmpsb xchg fadds cli push sti xor and (bad) fstps mov (bad) xorl in icebp sahf xchg xchg rex.WRXB rex.WB lock mov xlat in mov pushq mov mov pushq imul movsb stc rex.WB (bad) add add (bad) sbbl fsubs push add push je rex.WB rex.X mov xchg and (bad) sbb iret loopne rex.XB rex.WB rex.WRXB in rex.WB jp ja (bad) (bad) jo fldt orb rex.WB cmp out leaveq lahf stc (bad) xor pop and ja std loope movabs or test pop (bad) xchg out add rex.WXB adcl rex.WB and (bad) mov mull (bad) pop mov outsl xor pushq rex.R rex.RB hlt sub (bad) xchg mov retq rex.WX data16 imul jrcxz push enterq fistp rex.WRB push cld pop mov push movsl rex.WXB in rex.WRXB (bad) or imul xor scas sbb loop (bad) xchg (bad) ss rex.WB adcb mov cwtl jne pop imul xchg jl jmpq mov pop xor repz rex.WB sbb loope int3 (bad) cmp sub pop addr32 xorl or rcr mov or fyl2xp1 xchg mov lret sub push xchg callq xor xor cmp jns or fstpl movabs xor mov test cmpsb add add fadd ds jge shlq retq pushq xchg rex cs insb pop iret jp jbe jns pop push jge mov (bad) pop sbbb movabs fwait lret jae push fsub pop rex.WB int popfq fildl rex.WB mov outsb rex.WXB rex.WB (bad) (bad) fdiv inc xchg adc out lock (bad) imul sbb int vmovntpd add movabs test rcl rex.WB rex.WX sahf sbb popfq test out sub pushq adc jne (bad) pop vminsd and callq scas mov push jmpq test (bad) fs repz rex.WB xlat (bad) jne je rex.WB ss (bad) rex.W lock xchg (bad) rex.WRB rex xchg rex.WB enterq mov rex.WB lret push mov and imul jno rex.WB sti pcmpeqw scas rex.WRXB rex.WB fwait gs sbb xchg rex.RX pop std movabs addr32 pop rex.WB xor lock stos xchg xor jge (bad) rex.WB imul xor push mov mov rex.WB sahf sarb push fucomip nop pushfq rex.WXB xor movsb rex.WB rex.X mov jns rex.B mov fcompl sti addr32 (bad) pushq xchg xor or rex.WX rex rex.RX push (bad) rex.B (bad) stos addr32 (bad) xchg or int xor out (bad) loopne push stc enterq callq pop (bad) clc movabs cmp bnd std adcl cmp (bad) pop movabs push mov xor in test hlt movl or xlat stos sub (bad) lret sub (bad) sbb sbb rex.RX or movsl (bad) mov (bad) outsb jle xlat sub pop sbb callq nop fcoms mov (bad) iret vsubss (bad) ds cs shl jmp fldcw rorl jno notl mov xchg push jno rclb mov test fsubrl test adc rex.WR mov sbb push pushfq xor rex.WB cmp jbe rex.XB rex.RXB rex.WB sti pop callq pushq rex.WX retq xlat insb rex.WRB rex.WRXB pop jle outsl cmpsl test pushq mov (bad) (bad) jne lret push mull adc rdtsc imul loop or lret movabs xor (bad) (bad) (bad) cmp mov fnsave movsl ror out sub (bad) add lock pop cmp rex.WRXB (bad) movl sbbl push test sbb fstl jnp (bad) mov icebp xchg (bad) ds push or movabs fisubr iret jmpq fmuls push stos cmp adcl or sbb jo fcompl decl sub out jb push (bad) roll vandps test (bad) sti mov callq (bad) rex.WB fwait cltd (bad) (bad) repnz push (bad) rex.WB lods push xor (bad) clc (bad) jl int sbb pop mov xor xchg rex.WB (bad) mov rorb cmp (bad) rex.WB jle test je cmp jge (bad) (bad) mov xor jne lret rex rex.WB and pop (bad) mov lods adc sbb cmpsl pop pop gs rex.WB xchg (bad) lret rex.WB lock adc rex.WB je rex.WB insl clc mov (bad) sub test roll rex.WB mov callq mov push jnp enterq in pop rex.RB (bad) imul jbe sbb rex.WB or sahf jge or lret and rorb jno sub and es xchg loope adc jl rex jno rex.WX rex.RX (bad) mov push (bad) sub js out jp (bad) push push (bad) (bad) (bad) rex.WB push cmpsb jmp jl sbb cld jo rex.WB movabs nop mov repz sub je js pushq test add (bad) rex.WB (bad) cwtl (bad) cmp mov jne movabs mov es imul pushfq mov es out or rorl mov (bad) vmulpd cmp xor lea pushq out mov (bad) adc (bad) stos repz sub sub mov (bad) rex.RX rex.WB push subl insb rex.WB lods clc or sub mov rex.RXB adc rex.RX rex.WB mov pop jl mov cwtl loope mov shrb xorl mov and pop jbe mov push rex.RB rex.WB add push rex.WB or adc cmp mov test test xchg or mov retq (bad) out negl pushfq mov cmp (bad) fnstsw jbe push push sub adc sub xchg out ror jae add jnp lea clc rex.W pop or fcoms cld (bad) or sub push (bad) data16 mov fldl in mov xchg cmp adc adc jmpq imul xchg or cltd sub push xor out or test rex.WR cmpsl sub xor pop rex.RB (bad) rex.WB (bad) cmp loop stos stos test loope mov (bad) imul (bad) adc sahf lret cmp jrcxz rcl and xor shll and rex.RXB rex.RXB rex.W fwait push (bad) rex.WB imul mov xor movsl cmp sub rorb std push mov jbe rex.WB movsb or out (bad) out and pushq add icebp out cmp jrcxz (bad) mov (bad) rex.WB push enterq je or xor imul movabs mov iret lock xchg xor (bad) fmuls xchg sbb cs xor jp pop or adc push fldenv mov sbb data16 ds fisubl push loopne rex.WR enterq mov jge mov sbb rex.WR rex.WB xor leaveq rex.RB sub (bad) fldt mov add sti clc je mov int3 andb adc and pop movabs cli (bad) rex.WB outsl and xor add incb mov stos iret mov gs jmp sahf rex.WB jns jl shr jge mov xor (bad) sub jp out addr32 cmp adc or out loop rex.WXB mov rex.WB in (bad) rex.WX hlt rex.WB add js xor rex.WB add in cmp icebp rex.WB sub rex.RXB gs sbb rex.WB xor adc sub jae out rex.RX jns int cmp cmp lods jp fnsave mov push cmp sub iret jle movabs (bad) adc in mov xor jne add and rex.RB rex.WB pop xor (bad) sbb push cmc rex.WXB rex.WB rex.X rex.WR (bad) sbb xor (bad) scas mov and in (bad) cltd rex.WB adcb out rex.WRB sahf and adc sbb rex.W and or or adc imul rex.WB mov data16 (bad) rex.X mov or leaveq adc rex.B rex.WB int3 sahf sbb cmp jbe pushq rex.R (bad) movsl mov ficomp movslq cmp xchg out int sub nop cltd test in test ss xchg popfq (bad) mov push and insb add push movslq add iret adc decb sbb addr32 mov push loop xor rex.WRXB leaveq loope or mov pop sub pop (bad) mov movabs mov jns imul (bad) pushq movsl push sbb (bad) imul rex.B fwait mov or movslq stc adc xchg xor add pop stos mov int3 rex.B (bad) adc pop lahf fisttpl add cmpsb add or rex.WRX mov jge jrcxz rex.B sbb cmpsb xorq addr32 jbe leaveq rex.WB out stos push push mov mov (bad) sub add xchg mov adc mov rex.WX and pop imul cmp pop hlt rex.B movabs in enterq jmp repz movabs pushq mov and gs fldenv cmp xor xor rex.WRX pop push or cmpsb (bad) movabs movabs test adc neg xor mov cmpsb mov jp rex.WRX ror movabs sbb cld pushq jmp lods rex.RX rex.WB rex.R adc mov lret add (bad) adc iret xchg cli xlat (bad) rex.WB rex.XB and rex.WB movabs adc rex.R mov in icebp and add adc roll (bad) gs cmpsl rex.WB incl cmp sarb sub movsb pop (bad) (bad) xor es vpackssdw stos or mov sti loopne mov rex.WB (bad) fstp ja (bad) xchg mov (bad) xchg outsl pop in std int3 jle cmp and scas jns outsl sbb cmpl imul rorb lock out and (bad) fnstenv sbb jmpq (bad) cld popfq data16 sbb xchg in cmp rex.WRX lret xlat rex.RX sub mov rex.WB (bad) push leaveq stos out (bad) rex.WB mov jns xchg rex.RX and rex.WB in in xchg push rex.WRB andq cmp cmpb pop repz rex.WB in pop (bad) cmc stos mov scas fdiv (bad) xor cmp kunpckwd jo add (bad) std jl mov rex.WB cs popfq cmp push loope xor rex.B sub loopne in or rex.WR rex.WRB jg add jnp out in and jbe jmpq std cmp push (bad) jnp lret and rex.WRX addr32 mov cld (bad) in mov adc jbe mov movsl jno rex.B in rex.WXB std cmpsl add rex.RX (bad) and insl mov or push mov addr32 movsb sub sbb push xchg cmp retq loopne lea pushq xor sub lahf rex.WRX rex.WB repz rex.WX rex.R mov retq loope adc (bad) movsbl push (bad) pushq loope loop mov sbb pop rex.W (bad) xor mov imul outsl (bad) cmp rolb int fdivl rex.WB rex.WXB pop mov rex.WRB xor add pop fcompl jle mov mov out scas cld (bad) rex.WB (bad) lahf insl sub sti sub (bad) fisub rex.WRB adc fsts push (bad) xchg adc xlat in lret imul sti mov pushq (bad) cmpsb cmp test pop iret int movsb (bad) mov or in or adc fstps mov (bad) loop test rex.R gs rex.WX rex.XB or cmpsb shr rex.B cmp fnstcw xlat (bad) fs cmpsb or (bad) rorl xor push pop rex.WB mov rex.RX jge hlt mov rex.RXB pushq fisubl mov jl ja sub lods rex.WB loopne pop jmpq (bad) stc loope test jne (bad) xchg add jge rex.RXB cmp movsb sub mov or (bad) pushfq rorb rex.WRXB or fildl loopne jo push rex.WB rex.X cmp lahf rex.WB decb mov rex.RXB rex.WB mov or rex.WB fwait insb int addr32 jns rex.WRXB mov sub adc data16 mov cmp xchg jae (bad) jle movabs rex.X rolb (bad) fldcw mov rex.WB gs test sbb rex.WRX sub xor push movabs loopne andb xchg js mov sub (bad) (bad) pushq insl insb adc addr32 imul rex.WB rex.W clc movsb mov sub mulb rex.WR sub (bad) fild rex.WB sub lret test (bad) cli cmp rex.WB xor retq mov sub (bad) lret hlt rex.WRX fucomip out mov sbb add iret scas mov movabs cmc jne sub pop fcoms movabs cmpsl movsl push rclb sbb leaveq hlt pop rex.WB repz xchg add jbe rex.W cmpl rex.WX andl vmovhps jb and jne popfq pop fmul (bad) lret es push jmp (bad) rex.WB es sub mov leaveq cli mov in scas repnz enterq rex.WR jge scas gs rex.WB es sub ds rex.B xchg and sbb push out pop shrl rcrl push rex.X rex.XB and push rex.WRXB xchg xor mov int3 cmp jbe mov rex.RX push push pop cli rex.WB rex.RXB jge leaveq pop mov out imull insl pop rex.RX popfq mov jb xchg pop adc sub mov mov rex.WB mov adc test cli (bad) fsubrp rex.WB out rolb ficoml rex.WB sub and int rex.WB pop rex.WX rex.WB (bad) std scas jmp fmuls lret sbb mov (bad) sub outsl (bad) xchg leaveq push adc (bad) jne outsb and mov movabs push lahf stos stos mov rex.WX sbb (bad) mov (bad) imul rex.WRXB rex.XB pcmpgtb imul jle sub faddp pop sub lods push jle out rex movabs (bad) or stos (bad) mov and pop adc sbb xchg jbe mov scas or movabs pop out mov push pop rex.RXB and insb or push rex.X callq retq push rclb jne out sub lea movsb pop int (bad) push lods (bad) adc and cmp jge mov add mov js rex.WRXB rex.WXB rex.WR (bad) (bad) sub jo sub mov lock pop add (bad) in pop jrcxz push fild mov rex.WB rex.RXB lret test sbb jmp cwtl mov (bad) push lcall jae int rex.X adc outsl lahf sub jmp jb imul adc pushq movabs push sub jne movabs stos mov add fisubr fmuls sub vorps fwait pop pop loopne xchg out jrcxz test movabs fbstp adc xchg push sbb out sub mov movsl cmp movabs rex.RXB enterq xchg mov pop mov mov mov loopne cld adc push (bad) or fisttpll (bad) or sub push (bad) cmpsl jp xchg and mov push add rex.WRB addr32 sbb fisttp out retq enterq xchg cmp int in (bad) (bad) mov (bad) (bad) (bad) rex.WX mov jge leaveq sbb and lahf rex.WB mov rex.WB negl pop jbe sbb loopl rex.WRX and addl je std and rex.RB or sbb in mov ficoml sti jnp sub or pop push cmp cmpsl xchg rex.XB mov cmp jns xor ja cmc rex.WB js or adc jmp add (bad) pop (bad) loopne mov data16 (bad) outsb (bad) pop (bad) rex.WB and rex.WX loope imul mov insb pop in (bad) cmpsl adc movabs xchg enterq mov sub test rex.WB mov sbb fnstcw and rex.WB mov (bad) mov movsl loope push push sbb pushq movabs movabs adc outsl lods rex.WXB repz rex.WR mov (bad) rex iret pop push ss sub (bad) cmp movabs jnp mov rex.WB je lret out sub (bad) or leaveq cmp (bad) incl mov rex.WB es outsl repz movabs push rex.WR (bad) clc xchg pop fist mov test add rex.WB (bad) add (bad) rex.WB (bad) (bad) std out and mov shll lret rex.RX sub shrl (bad) outsb (bad) cli nop movabs (bad) pop vpunpcklbw pop test (bad) rex.X push insl out lahf cmp pop lcall rcrb (bad) fcmovnb rex.WX rex.WB rex.X rex.WB cmp pop icebp or mov mov fimul and jb xor dec jae test (bad) mov jo rex.WXB rex.RB xor and pop (bad) (bad) jbe rex.WB addr32 in sbb lret rex.WB rex.RB fmuls mov (bad) xchg rex.WR (bad) leaveq sub gs jb adc pop mov rex.WB rex.B mov push rex.RB decb insb or outsl sbb (bad) rex.WX movabs retq rex.WXB movabs (bad) leaveq loopne callq sbb std out add or std sbb rex.WB lods push pushq add mov (bad) std xchg push xchg rex.WB cs movl (bad) (bad) leaveq fsubp cmpl xor callq (bad) and and mov out sub gs mov and test adc shl rex.RB lret xchg xor movslq addr32 jge xor (bad) out (bad) insl rex lahf (bad) mov addr32 movsb loopne rex.XB ss test bswap adc out jp rex.WRXB jns (bad) cli jl sub fs sub sub add mov stc push movabs outsb scas push adc (bad) movabs pushq out pop (bad) cmp and (bad) sub jno pushq fsts movabs xchg fucom jnp xor mov loop rex.W adc mov mov mov (bad) ja jae fnstcw cld es jge fldl2e xor sub jnp or xlat ficom adc jg fcomip lret cmp mov insl jnp in xor sub int3 (bad) rex.WX xor jp cmp pop adc (bad) gs xlat rex.R (bad) push insl rex sub sub cs neg insb enterq mov movabs (bad) negl es sub mov or hlt (bad) mov sub stos adc movabs rex.WX cmp push shlb (bad) lret test xchg int fcompl xor mov and movslq add cmp sub sarb xchg sub fild add adc retq mov rex.XB xchg cmp lods repnz (bad) jmp rex.RX loopne pop fnsave (bad) rex.B xor int xor pop xor fdivr es rex.WB retq mov (bad) rcrb in pop add push test (bad) (bad) cmp mov rcll in jb fist rex.WB fsubr (bad) xor sbb fisubl mov and rex.WRX rex.WB stos movsb in and rex.WB loope mov rex.WB hlt mov push test fnstcw (bad) rex.WB rex.R leaveq rorl adc push lret int xchg loopne sbb movsb adc (bad) jg leaveq or fstpt (bad) xchg mov xor xor mov fldenv push pop (bad) callq test es (bad) cmc rex.WB cs addb sarb rex stos mov orl mov xor pushq fsts test pop retq and adc xor mov sub mov (bad) sub movabs jbe and sti xchg xor mov and callq (bad) movabs push callq test rex.RXB fwait (bad) fmulp pop rex.WXB test or mov insl rex.W lret rex.WR sub (bad) (bad) cmc fidivr retq push sar std mov (bad) movabs pop sahf maxps mov jo ja,pt or repnz lock sbb and push add jno movsb cmc xchg jp jno movsb sub pop adc rex.RB sub (bad) test test jmp cmp mov cmp (bad) adc xlat fstps sbb pop (bad) icebp cmp jbe (bad) pop addr32 testb jmp (bad) je hlt (bad) scas xor mov (bad) xor (bad) icebp xchg callq pushq hlt lret pushq or cld jns rex.WB rex.RXB and add adc mov pop (bad) loopne rex.WRXB cmp movabs scas movabs push retq or rex.WB sub rex.B (bad) scas test (bad) xchg stos push rex.B (bad) xor (bad) rex.WB sbb sub rcl fmuls ds cmp (bad) mov rex.XB adc sbb mov add orl and (bad) sub fistpl mov (bad) fmull repz lock sub cmc xlat (bad) test rex.WXB (bad) add test fisttpl push sub sub mov (bad) in add sub rorl pop cltd sbb (bad) (bad) pushq cmp jno lret (bad) jns movabs vcomiss movl jmpq (bad) callq xchg push pop rex.WRXB test data16 out rex.WB add es pushq (bad) mov mov scas stos xchg enterq out and jle pop rex.WX std movsl fyl2x (bad) rclb rex.WB rex.B and pushq (bad) ja int xor (bad) and add subl jno (bad) mov add or out lock es loop test ds callq push or jbe jrcxz pop (bad) lret movsl pushq fild callq std add cmc push cltd xchg out xchg adc xchg outsb xchg and mov rex.RXB (bad) mov pop cld imul xchg or cmp adc mov add xchg push lock xor sbb addr32 (bad) (bad) pop lea rol (bad) rex pushq es lret out cmp adc insb scas mov repnz rex.WB movsl jnp repz or rex.WB icebp mov fcoms retq cld iret xor xlat push in sbb and rex.R xchg sub cli (bad) rex.WB (bad) out push in movabs push pushq adc outsb mov movsl movsb push (bad) rex.B rex.WR shr sub sub out sub pop mov push lret jmpq xor paddusw repnz lods sub (bad) mov test test jle xchg repz rex.WB add push xchg retq rex.WB or mov push cwtl stos in (bad) rex.WB fs fcoms mov hlt outsb mov add in rex.WB sub or push addr32 test sub out rex.RX xor xchg sti (bad) mov rex.WB ja pushq movabs sub or sub (bad) jae imul xchg outsl rex.WB in test mov addr32 pop movabs negb push add (bad) rex.WB pop mov xchg rex.WB mov callq push hlt jno movsl fdiv or in jns adc imul loopne (bad) addr32 jnp mov push adc cmp adc jge mov ss jg scas (bad) push rex.WR test stc or lahf jnp and pop push jrcxz push and xchg or jbe xor rex.WRXB rex.R or test repz fldenv (bad) jl mov jno (bad) ss add add sub xchg cli pop pop test rclb out (bad) jns mov jns jrcxz xchg pushq pushq outsl add enterq (bad) or mov stc rex.X rex.B jae in pop jnp in push rex.R jg and add sbbl xchg xchg mov or pop nop ja cwtl enterq sbb adc movsl loopne xor rex.WX es rex.XB xorl or callq scas addr32 push pushq sub movabs out stos pushq sub (bad) mov jge iret jl (bad) data16 repz (bad) addr32 push repnz cmp jge cld or mov fsubrs xchg pop movsl or pop (bad) pop test clc (bad) (bad) pop je (bad) sub add jle sbb rex.RX in (bad) push rex.WB stc cld xorl xor out rex.WB fmull xor add sub rorb add rex.WXB adc lahf mov mov add scas ror rex.WB xor mov push mov xor cli push jb fsubrl cmp pop sub jp adc repz insl rex.WRB iretw sbb movabs mov fdiv (bad) sahf je pand cmp test pop jge (bad) cmp pushq (bad) push repnz mov in xchg jmpq cwtl sub (bad) sub in idivb or xchg cmpsl add rex adc icebp cmc fwait (bad) loopne movabs cmpsl in sub xchg jmpq fmull movabs mov leaveq (bad) adc (bad) fisubrl outsb setge or mov push add ds (bad) push push es xchg push stos mov loope or cli cmc subl rex.WRX rex.WXB jmp movsl sbb out pop movabs popfq sub lret sbb sbb rex.WB test mov rex.WB loope adc callq sbb mov insl pop and rex imul sbbl shr jmpq rex.WB rex.RXB (bad) rex.WX mov test and and movslq sbb xchg xor rex.WX pop add fbld out rex.XB jbe fs test leaveq (bad) fsubrl (bad) rex.R rex.WB shrb mov mov (bad) xchg rex.WRB and rex.WB rex jo test (bad) xchg rex.WX (bad) mov or out rdtsc cmp rex.WXB roll (bad) and (bad) (bad) xchg (bad) enterq jp fiaddl test cmpl (bad) rex.WB (bad) and lock sub cld clc int3 mov rex.WXB rex.B or fistl mov adc fldcw cmc fildll (bad) adc retq cmp rex.WR pop push test (bad) mov pop movabs mov sarb popfq jo adc test pop idivb xchg (bad) out rex.RB rex.WB faddl in retq sub out jmp mov fmull movabs sbb retq (bad) pop scas jl adc clc mov mov test rex.WB pop fwait imull jp stos lahf and xor rex.RB rex.RB (bad) rcl adc fs push in ja (bad) cmp rex.RXB rex.WB out imul fidivr rex.RX mov mull (bad) mov xor rex.WB rex.XB cmpsb data16 sub mov jb push insl mov add pushq mov insl std mov pushq jae or adcl xlat rex.WRB imul addr32 rex.XB cmpsl (bad) sub std (bad) rex.WR rex.WXB jb sbb xchg (bad) stos (bad) cmp pop nop sarb jb lea movslq and add out rex.WR repz push cltd iret jne mov pushq rex.RXB fidivrl sub mov gs sbb fnop and imul pop xchg pop rex.WX je add xchg cs xor xor adc pop rcrb negl adc xor pop adcl fwait loop mov pop adc xor sub pushfq out sub mov lret push (bad) jo pop out push and mov sbb jmpq stos add movabs leaveq repnz xor fidivl iret sti mov or cmp (bad) lret out adc lret (bad) loope fwait or sbb nop mov sbb or xchg push pop pop je jg or adc rex.WXB pushfq pushq pop movabs pushq sbbl fucomip in sub movabs orl lret fdivs (bad) rex.WXB test stc (bad) (bad) and out sub rex.XB mov (bad) mov mov and fidivr cmp test jmp and adc jo icebp stos xchg fmuls sbb adc rex xchg test cld and sub fstpt jbe push sub movsb movabs or lret rex.RB rex.W mov adc rcrl pop (bad) mov (bad) sub loope xchg pop jno iret pop cli xor movabs cmp pushq movabs insb lcall mov jb movsb cmp addr32 lahf push push lock fcoml out mov push mov test cmp (bad) sub fnsave rex.WB jns xor pushq in push sub rex.WB es pslld pop push insl rex.WB movsl loopne cmp (bad) sbb push rex rex.WB (bad) or adc xchg and add rex.WB rex.WX rex.WR push cmp xchg hlt push adc pop int3 test fs rex.WX repnz scas andl sub rex.WRB and cmpsb rex.B (bad) callq movabs lock jbe (bad) rex.WB out std push xchg pushq jbe pop mov xchg push lcallw mov movabs out and stos (bad) jne cli sub (bad) mov (bad) xor push in add in fbld cwtl rex.WB xlat (bad) xor lret lock lods (bad) or pop rex.WXB cmpsl callq sbb push lret sahf push (bad) push mov rol xchg clc push rorl jmp stos jo (bad) push addl (bad) shlb (bad) jl mov push test rex.RX scas repnz mov push mov and sub cmp loope cli je cs movslq rex test rex.WB jb fistpl in (bad) sub and sbb push movabs int fisttp rex.WB es rex.WB hlt cmp rex.WXB pushq push adc movabs or sub test hlt fidivr pushq rex.WB fmull (bad) cmp rex.WRXB mov loope (bad) test fs jle rex.RXB jns xor jbe push dec in (bad) ffree lret xchg mov push jbe popfq mov jmpq jge xor stos and sub add xchg movslq (bad) sub cmp add or cmc mov jbe jo sti mov pop xor rex.WR pop pushq pop jno (bad) out pop xlat xor lret and (bad) mov sub adc fwait push mov jmpq movsl rex.WR lret lods sbb outsb rex sbb (bad) ja retq jae rex.WRX mull movabs fs lock (bad) add rex.WB sub rex.WB fcmovne (bad) rex.WB rex rep cltd xchg callq and rex.WB pop xchg xchg rex.B or notb pushq lods xchg sahf rex.B addr32 mov cwtl sub movabs and orl lods xchg rex.R (bad) sbb xor mov (bad) or xor (bad) rex.WXB movabs rex.WRX cmp rex.WRXB sbb push xchg cmc shl rex.WX sbb mov (bad) cli adc (bad) movabs pop push sbb lret push sbb (bad) rex.WRX or rex.RX and or sbb insl js rol rex.WB xlat mov (bad) sbb int adc outsb (bad) movabs cmp (bad) stc incb mov mov or mov push adc xor pop mov nop xchg (bad) loope rex.WRX sub pop xor adc rex.WX clc out xchg cmp loopne (bad) mov rex.WR sbb stos rex.WB jg and loop sub add in (bad) imul or movabs subl sbb (bad) add lods rex.WB cmp or stos lret and rex.WR movslq leaveq outsl pushq mov jl repnz or retq adc cmp int leaveq rex.WB fwait add rex.WR gs cli fnsave mov (bad) rex.XB loopne (bad) movabs sub add imull and addr32 scas fwait pop push adc leaveq and jno rex.RXB (bad) fisubrl rex.RX push rex.WB shrb and stos jbe or or jne shll jle (bad) xchg cltd xor sti mov xchg rex.WRX mov push (bad) mov rex.WB mov and rex.WR (bad) jae rex.XB loopne jmp (bad) (bad) leaveq or fistp out movl sub (bad) mov stos xchg movabs rex.WB clc int (bad) add pop fnstsw mov in rex.WB xor sub (bad) pop rex.RB push sub flds sub sarl (bad) and adcb (bad) rex.WB rex outsl ds jo (bad) test (bad) ficomp movabs sub and mov stos (bad) neg mov rex.WRX xchg or sbb add sub xchg lods cmp mov sub adc loop (bad) and push (bad) sub push (bad) movsl movabs cltd (bad) or test xor cmp sbb (bad) or pop loope mov loop jl pop cmc rex.WRB xchg (bad) mov add rex.WB in pop outsl adc addr32 push movslq or test add jo pop sub and loop,pn std rex.WB (bad) (bad) mov movsl add (bad) pushq popfq sub divb adc jl and fsubrs jg rex.WB test (bad) or je jmpq rex.WB cmp movsb xlat lods rex.WB rex.W (bad) push leaveq jg rex.WB enterq pushq jb xchg (bad) rclb and int3 rex.RB popfq test adc pop test mov cmp ja cmp rex.WB clc mov adc retq nop sbb xchg xor pop push rex.WB (bad) test mov adc add fnstcw xor push or in enterq push (bad) mov gs push test cs rex.WB loopne (bad) (bad) mov and (bad) repnz js sub add sub xchg rex.WB rex.WXB stos jle mov sub mov rex.WB rex.X pushq mov cmp popfq cmpsl out lods mov jle imul sub sbb movl jbe (bad) or mov mov mov (bad) mov out fs mov decb sbb jno out pushq rex.RXB addl (bad) lahf lods rex.RX (bad) pop int push or mov std (bad) orb (bad) scas in scas rex rex.WR insl sbb adcl pushq std sub mov (bad) adc mov (bad) callq sub clc je callq mov iret xor movabs adc sub mov and pushq or push lret (bad) cmp mov mov (bad) (bad) cli xchg jo push add movslq mov in scas fbld (bad) in or (bad) pop pop (bad) addr32 mov insb jns (bad) xor sbb jnp push jae cwtl loop xchg (bad) (bad) xor (bad) sbb rex.RB adc add and addr32 or pushq nop xlat incl clc pop (bad) cmp rex.X mov gs pop pushq xorb adc retq retq lret in push rex.B mov sbb es (bad) rex.WB movabs cwtl ds lahf mov (bad) jne shll insl or pushq mov sub mov rex.X xchg (bad) icebp xchg add sub (bad) pushq stos rex.RXB cwtl lock push push callq movabs mov out adc xor fcompl movabs rex.XB data16 rex.WB test lods (bad) sarb (bad) movabs jnp (bad) pushfq xor xchg or pop out (bad) mov sbb int rex.WB xor sub (bad) jp ficoml add sbb push (bad) (bad) xchg rex.WX rex.R (bad) (bad) mov clc movabs pop decb shl pop add mov loopne movabs cwtl mov and ja xchg retq popfq push rex.WB xchg mov push in sub sub movabs stos xchg push xlat (bad) jbe sbb xor mov rex.WB orb push xchg rex lock pop sbb popfq and loope idivl cmp lods mov rex.WB loopel adc stc (bad) rcll rex.WB xor add fnstenv mov fisttpll (bad) outsl movabs lret int push test cs adc rex.WRB adc movsl cmp gs insl and cmp (bad) push pop xchg (bad) (bad) (bad) test nop jo movabs stos int3 loopne pop rex.RXB movabs xchg xchg xlat xchg hlt test mov out mov jno rex.R retq rex.WB add fnstenv or rex.WR movslq pop in and mov (bad) sahf movsl jno push sub mov sbb xor xor adc mov retq rex.WB rex.WRB xor movsl (bad) std loopne xchg mov add not (bad) push and in xchg rex.WB rex.RXB iret in push mov sti mov pushfq and xchg mov (bad) rex.WRX stc xchg rorl addr32 fnstenv rex.WX test (bad) lret and mov cld jg (bad) sub iret addl cltd xchg out xor fildl xchg lea xchg fisttpl (bad) mov xchg xchg jae pop rex.RXB mov insl js add pop jmp (bad) (bad) push and test adc lods or retq sarl movabs cltd pop xchg repz (bad) or jrcxz (bad) xchg xor or pop lods cmp rex.WB jno cmc retq sbb sbb add (bad) movabs pop test loopne jno jno mov pop lret rex.WB outsb and jle pushq mov (bad) test mov rex.WB jle shlb (bad) leaveq outsl (bad) rex.WRXB clc cli sahf rex.WB xor rex.WB rex xor ficompl adc cmpsb adc push jae sub pop movsb adc (bad) rex.WB sahf test rex.WB lret in xchg sbb lret stos rex.WB jbe (bad) loope rex.WRXB rex.WRXB xor xor rex.WXB in xchg push rex.WB (bad) out cmp fistpll xchg sarl es (bad) imul add mov add in roll mov xchg insl rex rex.RX mov push mov adcl imul mov je shl add rex.WB adc (bad) xor movsl sarl pop addb pop add jns leaveq pop xchg out sub (bad) jnp jl add repnz (bad) rex.WB rex.B mov sub add and sbb idivb repnz mov cmp mov push adc rex.WX pop mov cs or out test roll fisubrl pop cmp lret add and jl out rex.WR adc clc movabs leaveq pushfq rex.WB xchg cmp and retq fxch (bad) pop sbb rex.WB cltd or js outsb mov fdivs push imul pop mov rex.WRB rex.RB rex.WB sti pop xchg cmp (bad) adc rex.WB cmpsl fwait lock lret sub (bad) mov rex.WRX fldl mov jne je fimull sub mov std retq out callq movsl (bad) pop out (bad) adc mov jbe lret js (bad) callq mov imull push (bad) xchg sub (bad) mov or sbb xor rex.WRXB xchg xlat ffreep mov sbb rex.RX or notl xchg lods movsl push cmp cmp jbe cmp pop cmpsb sub popfq push adc and lret lods (bad) add cmc xlat or jmp je xor rex.RXB jne (bad) push (bad) in adc cli and push retq adc add adc cmp add repnz adc xchg rex.RX adc pushq xor push (bad) push fcoms movslq (bad) and (bad) cmc adc mov cmpsl jmp pushq lods movabs mov pop rex.WR notl fstpl jbe push mov xor pop rex.WX sub sub and test outsb sub and lret jmp mov test loop jbe pop (bad) jns pop rex rex.X pop data16 rex.RB mov scas repz movsb or jne mov xchg xlat (bad) rcll jb (bad) cmpsl cmc imul loopne jmp xchg notb cmc (bad) mov pop movslq jle retq flds mov in mov (bad) in popfq sub mov xlat pop or movsb add rex.WRXB gs sbb xlat jmp rex.RB repnz insl push fdivs lock mov xchg push out (bad) jno (bad) sub jno push and mov hlt push mov lods (bad) lock xor rex.WRXB (bad) callq xor in (bad) xlat mov xlat sub cltd cmpsl sbb rex.XB or stos pop push mov pushfq (bad) negl shlb mov rorb adc pushq or cmpsl sub scas jge adc imul leaveq decl test repz (bad) jno cmpsl mov pushq test pop (bad) mov xor push pop push push out mov mov mov iret sub mov cmovl int (bad) retq sbb or or add rex.W rex.WRXB rex.RXB insb shlb adc leaveq (bad) lods jp popfq adc xor fistpll test sub add jmpq pushq jnp xor in sub gs rex.W iret std enterq mov rex.WRB jb fbstp push and hlt sub outsl add xchg movabs rcll or (bad) movsb mov cmp dec xor pushfq out push ja (bad) and pop leaveq mov (bad) sub sub rex.WRX andl and (bad) repz pushfq pushq pop cltd fwait fs popfq xchg outsl mov push (bad) rex.RXB fiaddl cmpsb icebp push ss rcl out cltd cmc or fstpl pop pushfq cs rex.WR xor mov int3 fistpl out pop pop in (bad) xor (bad) cld push adc (bad) cltd jbe pop lret mov idivb cli cmp cmpsl and (bad) or push clc rex.XB mov movabs and enterq (bad) sbb jo loope test or out (bad) (bad) or fistpll nop fidivr rex.WRB (bad) mov pushq sbb pop sub (bad) pushq add (bad) sub xlat rclb mov and test rex.RX es rex.WRXB (bad) lret jo stos and rex.WR callq pop (bad) (bad) (bad) rex.WX mov push cli mov (bad) sbb add adc mov jbe (bad) pop mov (bad) or callq fadds mov orl rex.W rex.WXB stos sub cmc adc adc cmp (bad) out je mov rex.RXB rex.B rex.RX rex.X (bad) cmpsl lods (bad) (bad) or movabs je int3 sahf fstpl add xor (bad) adc in jo out push (bad) fld ds add sarb fdivl rex.RB (bad) add xor cmp enterq lahf sahf out imul adc (bad) xchg jge rex.X mov sti jl cwtl and loopne mov cmpsl scas (bad) lods (bad) jns pop mov pop cld retq or movabs pushq (bad) rex.XB repz (bad) jmpq std rex.WB (bad) shlb add xchg retq adc mov (bad) adc sub lods cmpsb and scas and scas lret sub (bad) cwtl cmp out mov rex.WB mov sub cmp sti push sub or fistl xor fadd push cmp rex.WXB lods (bad) sarl cmp jmpq rex.XB jns jg int (bad) out movabs xlat test pop rex.RB mov rex.W movabs (bad) stc mov js ficom cmp lea test xlat hlt rex.WRB add es rex.XB and rex.WRX fnstsw mov shr fsubl (bad) sub rex.WRX jmpq pop adc (bad) xor push xchg loopne jmpq cmp loopne mov rex.WB (bad) cmp loop rex.WB and mov adc nop rex.XB rex.R rex push fisub movabs loopne movabs rex jmp test in popfq (bad) mov mov int3 pop xchg push (bad) cmp (bad) insl adc cmp xchg add (bad) (bad) and (bad) stc rolb test or mov (bad) fstpl movabs insl scas movabs xor and rex.WB jge int3 jb rclb cltd in test jg jns movabs push jle pop jmp movsl fmull sub in cmpl jno or movsb rex.WXB xorq out sbb cmp sub rex.WB adc adc rex.RX shll (bad) or rex.WB callq sub idivl add rex mov (bad) mov enterq jnp int3 rex.WB lock std (bad) callq pushfq cli xchg loopne xchg sub xchg movabs or (bad) movabs retq (bad) cmp test pop rex.WB push cmc rolb jno pop mov sbb mov (bad) lret cwtl sbbl (bad) cld (bad) out sub xor and sbb scas (bad) pushq fldl jo sub movslq fistpll jl addr32 (bad) rex.WB (bad) rex.WXB xchg lea decb xchg jp mov sahf lahf sub in push movabs scas out hlt jp subb std loop (bad) xor int rex.WR cmpsb jae rex.B insb sarl cmc mov rex.WRXB pop pop sarb (bad) fdivrs ja pop in (bad) (bad) mov pop jl jle cmp (bad) adc cltd rex.WB jno push lret sub rex.WB addr32 movabs fisubr out psrlw (bad) mov mov std rex.WB jp mov push movabs adc (bad) jl xchg int and rex.WRB clc rex.WB mov sub push je rex.RXB movabs pop xor (bad) add test test rex.WXB repz in stos or rex.WB enterq or rex.WB insb shlb lahf mov sbb push (bad) fldt loope test add pop movabs in pop out lret (bad) nop rex.WB add (bad) xchg mov test (bad) rex.WB rolb mov push (bad) rex.WX xchg add add imul rex.X xchg nop or out out push xlat jle or movsb (bad) xchg lods (bad) hlt mov and or int rorb scas rex.WRXB (bad) loope data16 mov es (bad) out pop mov mov mov and xor imul out test xor and (bad) sbb pop movabs lret cld xor add mov stos mov pop out jmp rex.WXB (bad) and js pushq (bad) rex.XB lea test test rex.B in (bad) clc rex.WB cmc repnz and imul orl out fcmove subl or mov sti out pop cltd pop add enterq insl or push out xchg and jg js mov jl (bad) rex.RX jne mov add cld rex.B lret rex.WX out jge ja rex.WRB test retq rex.WB ds rex.R push (bad) icebp test cmpb icebp pop and sahf loope test fcoms pop jl sub jnp xor push cmp or xlat (bad) and inc or iret callq rex.WX (bad) (bad) loop sahf nop leaveq imul (bad) jp sub fcomps addr32 decl mov int rcr rex.RXB and mov or xor retq (bad) es sbb ds lods (bad) rsqrtps fwait jnp sbb add jg sbb add xorl mov rex.WRB mov mov jns test pop test (bad) (bad) jmp or movabs (bad) cmp test xchg mov sarb jne mov rex.X cmpsl test int3 movabs cmp rorb mov cmpsb fbld cltd pop mov pushfq mov movsb xor negl add (bad) rex.RXB xor (bad) jb cmp stos sbb rex.X fsubl rex.WB adc jbe xchg mov and sti xchg movhps add jne mov xchg xchg or (bad) movslq sub roll rex.XB jnp xor fnstenv adc (bad) movslq sub (bad) mov repz xor test mov mov rex.WRX push mov adc mov test (bad) rex.WXB rex.X rcll rex.WB and mov pushfq (bad) insl sahf or add mov mov or pop rex.WX sub mov jno sub push callq movsb retq (bad) xchg (bad) (bad) rex pop rex.RXB (bad) imul rex.RB rex.W cwtl pushq lret mov (bad) (bad) mov ja rorl int3 movabs sub rex.RB mov ja sbb or push jae fucomip jbe jo retq callq in mov rex.WRX xor shll pushq push scas shrb movabs (bad) or or rex.WRXB lock and pop loopne sbb out (bad) xor mov mov sarb test rex.WX loopnel movslq pop cltd repz sbb cltd not cs (bad) test ss xor push jbe cmp xor addr32 pop fcoml fcmove cmp pushq stc push jbe jo sub and mov rex.WB insl jnp cmp rcrl in rclq ss icebp rex.WB clc outsl callq pushq repnz enterq or cs push in imulb repz icebp push roll (bad) (bad) clc mov fdivrs jno rex.WRB pop add (bad) (bad) jbe adc sub insl cltd lret int3 movsb sub (bad) fimul cmp adc xchg add pop push (bad) clc enterq sbb rcrl cmpsb sar addr32 nop mov and fcompl callq or out xor rex.WB pop loop sbb movabs js movabs je xchg mov push xchg rex.WB mov xor rex.WRB imul rex.WB add jrcxz orb and rex.WB sub push rex.WB repz rorb sbb jrcxz (bad) rex.WB mov (bad) add sahf orl leaveq movabs lods adc (bad) stos addr32 rex.WB mov (bad) nop rex.WB cltd outsb adc (bad) mov add (bad) jmpq jb cmpsb rex.WB rex.WXB or add scas je stc retq xor leaveq (bad) xor mov xor rex.X rex.RXB jrcxz jg sbb out and rex.WRXB addr32 cli rex.RB rex.WB pop adc pop and xchg test (bad) xor (bad) (bad) rex.WB cs xor leaveq insl xchg repnz jp (bad) sub imul jmp adc pushfq sub sti mov rex.WB jg pop add add clc ficom mov sbb sub push and loopne sub xchg xchg shll in mov icebp mov fs jne,pn ss addr32 push (bad) rex.W rex.WRB mov pop xlat in jg loop (bad) jae pushq movslq test adc (bad) push pop mov rex.WB cmp movabs sub sub test (bad) (bad) cmp callq shr and clc push rex.WXB or rex.WB fisub movl fnop pushq (bad) cmp in mov sub rex.WB movsb mov jle cwtl push ds js test sub out rex.WR rex.WR (bad) (bad) rex.WB rex.XB xor xchg mov popfq xchg xchg sub rex.WB movsb rex sub stos rex.WB rex.WRXB rex.X jo rex.XB pop (bad) adc jno js and in xor neg jno outsl int or testb rex.X mull outsb repz cmp cwtl jmp pop loopne pop insl rex or stc rex.WB out jle (bad) cli movabs movsb (bad) int std rex.WB (bad) nop jb pushq sub (bad) jge pop add movsb rex.W and addr32 xchg cmp xlat xor ja imul jp pop (bad) movabs or icebp mov (bad) test out cs lahf mov (bad) clc cmp cmc cmp out adc (bad) rex.WB rex.B xor add addr32 fwait loopne and mov cwtl stc push js push mov leaveq add cmc addps ja rex.WRB (bad) repz and (bad) rex.WB (bad) rclb je or stc rex.WR lret out stc ja test jl rex.R rex.R push decl loop (bad) es xchg (bad) cltd mov int3 mov (bad) sub test pop (bad) rex.RX rex.WB retq (bad) lock mov push rex.WB rex.R rex.WXB rex.WR movabs (bad) rex.WB push mov (bad) cld movsl jbe stos pop xchg mov test sti out (bad) rex.WB jno test rcll push add movabs mov rex.WB fcmovne xchg mov mov rex.WB retq rex.RX or rex.WB int rex.RXB rex.XB mulb mov stos mov xor movsl testl rex.WB mov outsl mov push push loopne movabs pop fdecstp mov (bad) movsb rex.WXB rex.WB scas movl lea rex.WB cs clc xchg or rex.WR rex.WB rex.WRXB movsl pop push rex.WX mulb rex.WB pushq xlat rex.WB popfq or jp lods xchg or and stc rex.XB jne push push (bad) repz lret (bad) ja mov mov rex.WB rex.RX mov and pop mov mov add mov mov in scas loopne and sub xlat rorl (bad) mov add pushfq rex.WB rex.R retq cwtl rolb fistpl mov add (bad) decl rex.WB iret rex.WB addr32 pop in (bad) mov rex.WB cmp adc jle and clc xchg mov adc (bad) mov sti add cmp pop mov out rex.W rex.RX jle mov cmp push jns movabs movslq xor (bad) stos or rex.WB sbb (bad) js ja shrb cs or rex.WRXB rex.XB icebp retq leaveq popfq mov mov jno mov (bad) cs add (bad) mov xchg pushq (bad) movsl push bnd insb (bad) (bad) sahf lret in push xchg fs cmp test addr32 movslq push lods movsl pop rex.B test xchg xchg rex.WB rex.RXB rex.RXB mov (bad) jp ss (bad) mov rex.WR jbe xchg rex.R data16 cs or int3 out (bad) rex.RX clc add add push cmp push fcompl movabs cmpl jbe push pushq xchg jle xchg or rex.WB xchg or mov and (bad) xchg add mov (bad) sub sbb in out js rcl movsl movabs rex.WB rex.B adc (bad) out (bad) std iret test (bad) sbbl rex.WB divl jrcxz add sub retq stos xchg addb nop loope mov (bad) xchg movabs imul rex.RX mov test enterq mov cmpsl pushfq cmp and xorq xchg (bad) xchg jbe xor or mov or stc rol iret xchg pop add (bad) test mov rex.B lock sbb (bad) out fiadd mov rex.WB rol (bad) jno adc mov callq (bad) jne (bad) fiadd jp scas cltd rex.WRXB rex.XB rex.WB std outsl or mov rex.WR cmp adc incl in rex xor and sub rcrb rex.X gs mov out and jmpq leaveq push movabs pop rex.WB xchg ja or (bad) rex.WRB mov or addr32 movsl fld mov loop mov mov or xorb or mov test rcr sub ficompl sbb rex.WB xor rex.WB xchg data16 adc lret cmp and mov mov cmp lret (bad) stc sub xor callq fimull lock rex.WB pop cwtl addr32 push callq and cld rorb adc xor movslq movabs (bad) rex.WB push pop lods sub pushq mov (bad) mov cmp mov cmp fcomp fnsave int3 callq (bad) mov push lret (bad) imulb (bad) (bad) jrcxz rex.WRB xorl ja rex.WB rex.RX xchg and sbb rex.WR out int out push mov gs rex.XB repz (bad) push adc (bad) adc (bad) mov (bad) cmp rex.WB jbe mov push or (bad) jle rex.WRX (bad) sub cmp (bad) cmp out (bad) shr rex.WX mov push push test mov lahf xchg pop hlt jo push rex.WB rex.WR sub lret mull sub test movsb (bad) cli rex.WB (bad) xchg shrl rex.WB pop sbb xchg adc cmpsl enterq movsl orl adc loopne repz adc push out sub int (bad) (bad) cmp rex.WB es pop retq push hlt mov cld (bad) jge (bad) xor and mulb test (bad) cltd rex or (bad) rex.WX int mov (bad) popfq rex.WRXB repnz orl rex.WB movsb enterq xchg adc imul (bad) rex.R add cmp xchg rex.WB mov orl sbb icebp xchg out data16 addr32 xor xchg rex.WXB jge fisubl xor jle divb clc fnstcw clc mov fbld (bad) je sub movabs std add retq add in (bad) rex.WRB rex.WX movsl rex.WB rex.WXB (bad) sti xor mul rex.WB fld mov fisttpl xlat xchg out add and cmp sbb insl pop addr32 (bad) callq sub rex.WB (bad) xor callq jne push pop sub sub (bad) add mov callq testl sub cmpsl sti mov xor cmp rex.X cltd rex.WRXB adc rex.WRXB sbb jmpq push movsl or movabs sub sti xchg cmp xor js push hlt add jnp gs cs rex.WB or (bad) cmp callq push and add or xchg mov rex.WB pushfq lock rex.WXB rex.WB sbb rex.XB and and (bad) mov rex.WX cmpsl and mov (bad) movsb xor rex.WRX or repz (bad) stc push ficomp movb add movsb mov nop xchg int3 loop lret and (bad) (bad) (bad) jge mov (bad) lret std rex.XB cli mov callq fcmovne movabs (bad) sub stos or fcoms int3 pop sub mov rolb mov (bad) cwtl lret mov mov pop rex.WB sahf adc or notl mov (bad) decl xor cmc fucom and push frstor pop xlat push movsb rex.WB (bad) int3 mov fs sub imul out xchg mov (bad) rex.WB rex.R loope in cli rex.WXB (bad) int3 sarb push (bad) and es add repnz rex.WB rex.WX sbb xchg sarb xchg push loopne mov rex.WR insl rex.WB or sti scas hlt ficompl nop push rex.WR rex.RB jrcxz rex.WB mov lret rex.W rex.XB rex.WB cmp lret sub sub in (bad) push rex.R sar stos and pop push out icebp cmpsl clc add jne and xchg pop out int sub outsl (bad) shrl xchg rex.WRB movabs loopne xchg (bad) fsubrs outsb pushq and callq xchg movabs and xchg nop xchg rex.WB sub callq js rex.WB and sahf mov mov in jmpq cmp rex.XB or jo rex.WRXB jmp jge mov rex.RX or rex.X scas and jae or cmp fstpl rex.WX sbb lret cmp mov jne insb mov rex.RB sub leaveq (bad) mov mov mov cli jbe or imul push xor (bad) rex.WB fwait adc jg pop adc sub sbb je (bad) mov in js int mov pushq scas test rex.W fs out rex.B data16 leaveq lea sub loop push rex.WXB push not rex.RB rex.WB adc sbb pushq cwtl rex.WB loopne mov sub addl jg pop jno orl and add (bad) js loopne jmp sub testl mov fwait (bad) push mov in add rex.WRX fsubrl (bad) (bad) retq movsl jg cmp push rex.WRB pop push (bad) rex.WX mov scas xchg pop push (bad) pushq push xor imul loopne sub or sbb and popfq rex.RB rex.WB or adc adc adc adc rex.WR fild leaveq (bad) push fwait or movabs and cmp (bad) shrl fs add push jge jnp,pn push loop sbb cmp rex.WB out xor sub in mov stc in sub lock leaveq and add fldenv rex.R rorl (bad) rex.WB jl xor or xor add icebp push enterq jne mov (bad) mov rex callq out or sahf mov enterq jg mov movslq mov mov (bad) mov xchg adc jno sub pop fmull sub sub lahf sahf jmp loopne jle xchg fsubr out or fs and movabs xor pop (bad) rex.WRX movabs adc or mov hlt jrcxz xchg rex.WXB (bad) pop rcrb (bad) pop mov or cmpsb xchg pushq jg (bad) lods bnd in ja sbb out movsl ss movsb mov sbb rex.WB cmp rex.X cmp sub jno lock sbb popfq mov cmp std (bad) push cs rex.W mov or (bad) xchg (bad) sbb (bad) cmp and (bad) mov jno data16 jo rex.WR add pop rclb (bad) idivb addr32 lret mov test imul mov subl jrcxz add pop mov rex.RX pop jmp fsubp rex.XB movsb add sub (bad) cmp push leaveq lods loopne sub or xor rex.WX add leaveq add shr or push sub popfq outsl xor out sarb sbb xchg in mov rex.WX sbb in imul sub stc fadds repnz or (bad) int3 jno mov hlt cld mov rex.RX addr32 xor or fstpl cmpsl sub and jg pop or or (bad) int in (bad) xchg sarl movabs out xchg sub (bad) jo xor (bad) xchg mov jrcxz jo (bad) repz retq (bad) jae add push xchg mov decl rex.RXB adc lret clc subl mov (bad) pop movabs pushfq loopne js movabs imul test jmp movsl mov rex.WRB rex.WB rex.WRXB cltd or (bad) adc (bad) insb sbb rex.WB (bad) push or scas in leaveq rex.WB sub mov (bad) pop rex.WB (bad) mov movabs rex.R orl mov (bad) and scas movabs lahf mov unpckhps rex.WB or sub enterq movabs iret in jg adc push add pop enterq push adc adc loopne rex.XB (bad) xchg xchg push ja pushq movl sub scas (bad) rex.WB (bad) mov sub movslq leaveq std push mov fisttpll cmp rclq (bad) pushq movsl sub fcom shll and mov xor fbld std or pop mov int3 sahf rex.XB loope es rex.WB outsb sbb or sahf cwtl lret (bad) icebp fldenv and movabs (bad) rex.RX gs out lods mov xor rex.WB in fildl jmp rex.RXB movabs ficom js stc out jae (bad) stc (bad) rex.WB (bad) jl icebp mov idivl jmpq out rex.WB cmp or rex.XB and adc out (bad) pushq fdiv rex.WX (bad) std or sbb callq (bad) movsb rex.WB rex.WX movabs (bad) or rex.WB rcll mov shrb fstpt jmp and add adc fucomip jge (bad) sub movabs movsl je out scas push and movabs outsb mov cmpsb pop rex.WR xchg push (bad) popfq pop sub rorb jrcxz sub xchg fcompl or sbb push repz pushq sub rex.RB rex.XB rex.XB jno sahf pushq mov callq jbe movabs movabs or mov mov rex.WB xchg (bad) mov mov int3 pushfq je cmpsl test (bad) rorl pushq rex.R (bad) xor xorl shlb rcr js adc (bad) out rex.B mov cmpsb jne lods cmp add scas pop (bad) rex.WXB and fildll cmp repnz testl mov xchg xor or (bad) sbb rex.WRX fcmovnu pop sub rex.XB pop (bad) (bad) movsl (bad) sar xchg adc and (bad) sti rex.WRXB outsl shr ja pop out mov cld jno rex.WX rex.WRX mov and outsb fcmovnu enterq rex.WB sbb (bad) lcall cmp pop xchg xchg (bad) test callq (bad) (bad) cmp imul sbb rex.RX data16 (bad) xchg lods cmp (bad) add insb (bad) mov movabs and (bad) mov pushfq (bad) fsubs and jb mov rex.WX rex.RX xchg rcll addr32 jmpq sub data16 rex.WX rex.XB cmp movslq rolb and mov and add or in fdivrs sahf scas lret clc jno mov fdivl std sub idivl and sbb es (bad) xchg xchg js iret test mov mov rex.WR jne loop (bad) cmc sbb or out pop (bad) fcoml jge movsl cwtl callq fimull jno outsb insl pop cmp imul gs (bad) repnz rex.RXB rex.WRB movsb mov jnp jle pop ss fnstsw mov out add rorb (bad) fnop mov mov pop in jmpq test (bad) jmp and ss xor push add xor rex.RXB test nop mov or test rex.X insl pop pushq mov mov ffree stos movabs mov stos rex.WRB (bad) (bad) sbb sub mov xor es adc push movsb pop imull and xor (bad) mov jmpq jrcxz sub add rex.B fisubr pushfq rex rex.WB retq rex.WB or mov fistpl (bad) xchg sub rex.WB lock (bad) in mov retq rcrl pushq fwait repz data16 or test ja insl jmpq xlat (bad) xchg mov (bad) lret pop data16 rex.WB std rex mov int3 add sbb jo fistpll sub rex.WB movabs (bad) test cld rex.WX out sar jle mov mov test cwtl and rex.WB or iret (bad) sahf sub cwtl rex.WXB rex xorl movabs or mov pop adc test retq ja cwtl xor push cli imulb loope sub xor adc and lret (bad) (bad) rex.WRXB rex.WXB rex.WB mov sbb (bad) sub or enterq test add or movabs (bad) rex.RXB mov and rex.WB stc adc fimull mov sar pushq rex.WB jge (bad) jp callq rex.WRXB loope pop jle cli xor repnz fucom addr32 mov orl nop mov loope notl hlt rex.R jp mov pop mov lea adc rex.XB add (bad) cld scas or sbb rex.R movsb lret callq callq xchg rex.WB add push jae sub (bad) jbe mov pop loopne add jle,pt cld retq sub andl cmpsl pop xor pop xchg scas invd faddl cmp (bad) std cmpsl push movsb out pop xchg (bad) jp paddusw jrcxz pushq ss clc shlb and pop mov cwtl movabs mov (bad) mov shrl insl (bad) and rex.WB lods mov or sbb icebp cmp pop lret rex.WB pop iret jge sahf pushq rex.WB jmpq outsb pushfq mov and rex.WB add imul mov (bad) jp lods rol scas push jrcxz rex.WB push rcr sub cmp rex.WRXB (bad) pop movsl movslq xchg mov addr32 sbb sub xor rex.WRX pop rex.WRB pushfq xchg or insb (bad) adc sbb in mov rex.WB (bad) rex.B sbb mov stos test mov in movsl pop cmpsl sbb jbe ds (bad) adc lock adc rex.WRB or push mov stos mov pushq mov pop retq sub cmpsb add rex.R icebp imul xor stos mov rex.WXB jl callq xlat nop jge data16 (bad) flds movl retq cmp ds frstor mov notq (bad) sbbl popfq and xchg mov jl push (bad) rex.WB imul xchg xchg xchg movslq lods ftst mov mov shrq (bad) (bad) test test rex.WB and fisubl lahf mov pop push pushfq (bad) sub or adc pop stc rcll or sub xchg xchg ds rclb cmc sub mov xor rol icebp sub test in movsb jmpq rex.WR rex.R cmp push (bad) cli sbb enterq sti cmp mov fild sbb mov xchg fcmovb mov test jno sbb es out rolb int3 mov lret and rex.WRB cmp repz rorb icebp test push loope in in (bad) (bad) cs (bad) rex.RXB gs rex.X jge gs test jns cmpsl mov fmuls mov (bad) pop pushq xor out rex.RX push sub (bad) xor int3 mov fidivrl test (bad) lea pop or ficom or mov cmp xor and rex.W lock movl rex.WRXB nop neg mov in jno sbb and in xor incb sar adc adc mov div rex.WB rex.RX push sbb mov mov pushq sub cwtl fwait clc cmp sahf pop cmp movabs shll lret data16 pop loop adc xchg (bad) retq push mov mov add lods callq js jmpq (bad) jnp rex.WB rex.W lahf xchg sbb icebp rex.WB cmp rex.WB testl (bad) in xchg rex cmpsb push clc sub pushfq adc (bad) (bad) or callq (bad) es rex.WB sub fwait mov cld enterq cs pop fs cmp sub jge xchg movabs (bad) adcb sbb (bad) push cmc jrcxz cmp cmp adc in jmpq xchg or mov pop jo push mov rex.W rex.XB rex.RB movabs xor in (bad) and rcrl (bad) rex.WRX pop test mov (bad) pop not cmpsb pushq sbb std cmp (bad) and rex.RB rex.WRB sbb cli mov and mov lret rex.WB (bad) (bad) push (bad) adc fldl xor movsl rex.WB mov (bad) mull mov pop (bad) imul (bad) in adc addr32 jl int (bad) in bnd sbb and add pop xor push xchg callq test pushfq imul shlb pushq add (bad) rex.WXB xchg mov and jg (bad) push lock push fsubl mov out rex.WB scas (bad) and mov rcr rex.WB sub repz cs pushq stos movsl or cli rex.WX shrb xor and movabs mov (bad) mov test mov push sbb rex.WB fstps insl rex.WB rex.X adcl insb mov (bad) rex.WRB (bad) jl imul lret fmull test idiv mov test (bad) fnstenv rex.R fwait (bad) fstpl mov and insb psrld rex.WR pop retq mov add lods shrb movslq add hlt (bad) and jbe rex.XB fs in rex.RB int3 jp (bad) sub or add mov rex.RB mov stos icebp mov loope adc xor pushfq mov xor xchg adc sub sbb push adc cltd out (bad) mov cwtl jmpq movabs rex.WX fbstp (bad) loop (bad) (bad) rex.WB xor (bad) rex.WB pushq fwait jle callq sarb rex.XB mov retq add sub jmpq or adc fdivs mov sbb (bad) mov fbstp sub popfq loope mov adc rex.WB sbb add jo mov callq mov jle rex.WRX (bad) push int3 callq (bad) cmp stc stos add pop lret hlt jo xor mulb rex.WXB add pop push mov int cwtl lock test movabs pop out jne gs push cli or rolb (bad) retq (bad) (bad) xchg or out and pop sub cmpsl rex.WX hlt mov and mov rex.WRXB and xchg pop mov jmpq popfq callq jmp sub rex (bad) or cmpsb callq sbb (bad) jg mov add cwtl icebp rex rex.W rex.WX iret pushfq or pop xor movsb sbb push retq lock loopne sub cmp and rex.WRX (bad) mov out callq jl rex.WB rex.RB rex.WB rex xchg (bad) xchg mov callq movabs insl (bad) rex.WRX mov (bad) rex.WXB or loope pop add decl xchg movabs in adc pop cmpsl pop jae mov callq push push mov (bad) mov out rorb rex.WB rex.RX (bad) adc adc and xchg sub callq adc gs decb cwtl jl pop (bad) callq xlat mov cmpl rex.RX rex.R or loope (bad) imul in mov rex.WB rex.WR push rcrb rex.WB (bad) mov lods (bad) std push shl sbb pop lret jp movsl pushq (bad) shrl cmp pop mov xor jno pop rex.WRB mov jmp rorb sbb sti rex.WB (bad) cli test clc jbe (bad) push or (bad) sub rex.WRXB stos (bad) out push movslq jb rex.XB (bad) rex.WRX rex.WRX mov mov jmpq out (bad) adc push jo rex.RX rex.RB rex.WB rex.XB and rex.WXB (bad) rex.WB rex.RB pushfq jns fisttp rex.WB adc jbe xor (bad) xchg insl xor or fstpt callq jrcxz push and jnp (bad) int movabs xchg (bad) std mov je (bad) rex.XB (bad) pop sbb outsl jns rex.WRB sub and rex.WR mov pop rex.WRB rex.WRXB test mov out sti rex.B (bad) insb push negl int test push ja mov mov movabs scas in scas mov mov test jmp not (bad) mov in movabs in mov rcr xor test add mov enterq adc add hlt (bad) (bad) psrlq pushq (bad) retq or (bad) rex.WB (bad) adc pop add jno scas mov rex.WB (bad) xchg sti rcrq mov scas and (bad) pop (bad) cmp in rex.W rex.WRB (bad) test pop cmp mov mov fwait vcvttss2si and iret insl rorb nop (bad) sti and mov imul pop lret mov xlat pushq retq push stos (bad) cld addl jle sub mov rex.RX rex.WX faddl rex.WB pushfq mov test and rex.X xor int cmp lea hlt rex.WB (bad) loopne repz mulb movabs js push xchg rex.WB (bad) movabs and push jbe test (bad) (bad) xor cwtl loope rex.B (bad) clc test out (bad) es (bad) pop fcmovnb mov rex.WX add stos mov jge add lods movsl mov (bad) out gs jnp cmpsl rex.WRXB or mov imul mov rex.RB sub xchg rex.B xor test push (bad) xchg rcrl cwtl in jg sbb retq pop rex.WRB rex.WXB pop movabs sti lea xchg adc fbstp or movslq fsub mov adc push movl (bad) mov jmpq (bad) pop sub rex.XB loopne cmp pop (bad) xor scas pop xchg rex.B rex.RB enterq push test (bad) xor push xchg test fdivr (bad) (bad) adc je mov mov sub outsb jle fdiv rex.WB nop (bad) int pushq xchg loop rex.WRXB xchg mov rex.WB data16 push sub jae out cmpsb movabs pop cmp sti (bad) retq xor pushq xchg adc rex.WB jo pushq cltd (bad) cmc rex.WB stos movslq je int sahf loope out pushfq outsl jrcxz push sub sub adc push xchg (bad) push in jp add lret xor add sbb fcoml mov add and cmp loope rex.RB cs jnp rex.RXB rex.WRB (bad) jge pop out sahf xchg insl sub push xor pop sub test jns imull xchg (bad) sub cld (bad) (bad) adc test jb or gs leaveq mov (bad) movabs loopne cmp push imul add rex.WRXB jmpq (bad) or (bad) mov jo retq rex.RB addr32 rex.WRXB mov negb in retq fs rex.W pop cmp (bad) (bad) movsb or cmp xlat jge push (bad) (bad) xchg rex.RX int3 cmc outsl movabs add xor or sbb jle pushq insl out imul push scas or (bad) cmpl rex.WXB mov test cmp or stos in mov (bad) out jmp ficoml mov xchg rex.WR (bad) xchg retq mov mov pushq or xchg repz movsb (bad) (bad) cld lahf adcl je and add cwtl js sbb stos lods sub mov rex.WB jle movabs gs cmp and xor jo and (bad) jge push stc or fistpl (bad) test enterq sub pop lret sub xor add sahf jg (bad) pushfq ds scas rex.WXB test fildl sti in iret fs add rex.WB sub in or or jne push stos mov and cld rex.RX lods rex.WB repnz cmp jp pop rex.WB cmpsb callq in jle loopne cld sbb jp cmp callq js push jne sbb rex.WX notl movabs rex.RXB shrq (bad) cmp or rex.WB lret in mov iret and jne and xor (bad) xchg rex.B pop sub out (bad) pop movabs (bad) cmp (bad) stc sub mov (bad) add mov (bad) scas pop rex.RX rol cltd in jle outsb (bad) pop and jle scas rex.WRB callq rex.WB jae jrcxz movabs mov and rex.WB callq mov sub sub cmpl (bad) jle rex.RB (bad) ja add mov movabs and pop push mov xor xor repz cmc fwait push movsb cmp fsubrl mov and out rex.WB jns adc retq lret jge (bad) adc loopne (bad) mov add cmp sub data16 pop add pop rex.WX adc cmpsl and (bad) and rex.W rex.WRXB sbb rex.WB scas rex.WX mov rex.WB imul mov rex.RX sbb cmp (bad) insb imul push pop icebp rex.RX adc and (bad) movsb (bad) sarl push retq lods and mov push (bad) shrb shr or fsubl push cmp push sbb jp rex.RX rex.WB rex.WR (bad) movabs idivl rex.WXB cmpsb stc rex.RX xor cs (bad) ficompl (bad) repz xor rex.RXB (bad) movabs cmpsl cmp mov add repnz mov xchg or rex.WB rex.WRX (bad) jg adc (bad) (bad) pop sbb or sub int xchg (bad) jnp rex.WR mov (bad) rex.WB jo push xor test rex.WB (bad) je mov sbb (bad) xchg pushfq imul (bad) rex.WRB rex.WB add lods lret jge pop cmp callq adc rex.WB scas rex.WB addr32 jb xchg rex.RXB pushq mov sbb push mov out stos iret push movabs scas mov xchg rclb outsb rex.WB push sbb in subb jle lods fwait scas xchg rex.XB mov xchg xchg mov out loop rex.XB rex.WB fdivrl fsqrt cltd addr32 jbe jo rex.WB add rex.B mov (bad) sub imul mov hlt pushq (bad) jge adc mov (bad) or test hlt pop fisttpl int3 (bad) (bad) (bad) lahf test mov outsb xchg es movabs or pushq mov add adc sbb rex.WB jge enterq outsb callq nop pop push mov outsb rex.WB xchg jge sbb pop add (bad) rex.WB fisubrl jl rex.RXB lods (bad) (bad) lock adc rex.WXB rex.WB mov loope,pt or sbb movabs rcll rex.XB mov mov push sub or xchg negl rex.WB (bad) loopne push or rex.WB (bad) and (bad) jl jmp push rex.WXB rex.X scas rex.WB jg xor pushq xor lret mov (bad) push fisttpll orl sbb in outsl pushfq jno pop sbb lock add sbb (bad) shlb test leaveq cmp fidivl je in rex.WR jmpq rex.WB (bad) and mov rex.WB icebp mov fisttpll mov adc rex.WRX data16 fwait lods sbb or (bad) sbb (bad) andl xor repnz movabs pushfq sub cmp pop (bad) and jno (bad) pushfq rex.WB xchg (bad) rex.X andl lret rex.WB jb pop pop cmc repnz enterq rex.RXB jge stos rex.WB xor and xchg (bad) xor jb add or push cmp sbb nop ja fiaddl add pop int or push sub hlt stc (bad) rex.WB addr32 cmpb (bad) mov jne lahf add add pushq fnstcw rex.WB addr32 insl icebp pop (bad) (bad) rex.WB rex.RB movsl mov push push jg rex.R rex.WB jno mov ss jp stos scas (bad) callq xchg rex.WX rex.WR rex.WB cmp add mov xchg stos pop sahf cmp and outsb (bad) push test (bad) (bad) nop pop movsb pushq xchg movabs xor xchg (bad) fwait adc xchg sub int rex.WB rex.WX out (bad) rex.WRXB rex.WB lahf rex.R rex.WB cvtdq2ps push or jb jg loope lcallw push sbb rex.WR lret pop rex.WB pop rex.RB xor andb (bad) xchg imul rex.RB rex (bad) rex.WRX sti sub (bad) imul and leaveq pushq (bad) (bad) xchg test push pop mov insb (bad) rol and mov sub rex.RXB rex.RB rex.W cmpsl or cld xchg data16 es pop jmp xchg test fcoms xor adc pop sub ss (bad) movsb pop movabs push or out mov sar rex.WXB test (bad) and sub cltd rex.XB idiv push rex.B mov sub loope pop fild test (bad) test cmpsl rex.B rex.W push bnd pushq rex.WXB add sbb rex.WB ds std xchg cmc fwait xchg in movabs sub rex.WB rex.WRXB ror movsb loopne (bad) sub rex.R xor rex.WB adc rex.X push fwait movsb hlt (bad) cmpsb xchg jle repz callq (bad) and (bad) (bad) movsl cmpsl fild rex.WXB jo cmp push cmp (bad) xorl (bad) movabs leaveq adc scas rex.WB mov cmc xchg (bad) cmovge test (bad) mov pushq (bad) stc rex.RB rex.B rex.WX cmp sarb rex.WB (bad) xchg mov lret or idivl rcll callq out mov and (bad) jno fmuls rex.RB cmpl rex.WB out xchg or xor sbb data16 and or (bad) mov mov rex.RXB xchg stos jge jae leaveq mov pop (bad) sbb pop xchg jmpq imul sub retq movabs ss mov jno rex.R repz enterq retq fdivrl (bad) push movabs jrcxz rex.WB scas movabs lock pushq (bad) pop addb mov lods movsl or iret xchg lea push cmc (bad) pop mov lods sub sbb (bad) rex.WX sahf rcr movsl enterq fnstcw and out sub push lahf sub fbstp rcrl rex.WB adc xchg std xlat push andq in mov (bad) rex.WRB rex.WB (bad) (bad) cmp movsb movabs in rex.RX es sub mov sub lret jnp rex.WB cmp xlat rex.WB add jb lret sahf shl fwait or add (bad) rex.WR rex.WB fstp insb loope adc (bad) and fisttp (bad) lret jne js or sub rex.RXB test icebp int3 (bad) pushq pop fldcw xchg (bad) mov (bad) loope rex.WB pushq jl ficompl add push idivl fwait or pop jbe js mov subl jg pushfq cmpsl test (bad) cmp cmpsb pop cld rex.WXB out rex.WB lea pop (bad) (bad) pop xchg sub movsl pop fnop pushq sub (bad) repz sub rex.RB ds out insb or (bad) sbb movslq imul imul rex.WB std ja (bad) xchg outsl or adc mov (bad) or (bad) out sbb movslq cmp xor or and mov (bad) std push rex.WB (bad) cmp rorb mov sbb sbb in rex.XB rex.R rex.W incb mov rex.WB xchg movslq rex.WRX rex.R add vmptrst out pushq fist callq fiadd cs loopl rex.WB mov movslq push cmc popq in add jmp gs repnz or js rex.WB mov or (bad) pop (bad) mov (bad) xor jbe pop pop in decl subb (bad) in mov jle rex.WB gs (bad) cmp out mov rex.WB mov adc and imul addb pop loopne cli rex.XB rex.WB adc out jmpq xchg shr rcrb (bad) out xchg mov out adc jb in xor int3 (bad) mov stos stos sbb jp cmpsl rolb adc imul mov lret lahf rex.WX xor rex.WX jge rex.RB scas pop (bad) cmp rex.XB adc and pushq in pop xor fsubrs jrcxz rex.WRX mov push movsb jbe add mov nop mov scas (bad) (bad) rex.WR pop or imul fmul or scas and jae mov test movabs pop sbb in and mov test or cwtl test jmpq and cmp pop es std movabs jmpq fmuls leaveq sub sbb outsb andl popfq mov add lea movsl out and xchg push retq add rex.WXB (bad) ja (bad) addr32 rex.WR rcrl cmp adc sub fcompl lea fbstp out (bad) push (bad) xchg or rex.RX and pushq sbb scas cmc xchg in (bad) rex.WB iret fbld mov lcall jle insl sub imul movabs rex.RX jge or jo (bad) repz adc sbb movabs and jne cld test leaveq sahf jbe push (bad) imul rex.WB pop rex.XB test lods xchg xchg stos punpcklwd sub fwait and mov or mov pop adc (bad) pop test sub xor xor add subl mov (bad) pop and cli xor xchg rex.WRX sbb rex.WB movabs xchg in pminub jle fcompl (bad) jbe pushfq movl or int out je rex.RX pop xor pushq (bad) rex.RB rex.WXB add jbe xchg in cmp mov shrb js rex.WRB (bad) stos push rex.RX movabs xor mov fisttpl sarb (bad) and (bad) imul (bad) lock adc jns rex.WB repz retq (bad) and rex.XB pop decl movsl loope mov leaveq mov rex.WB (bad) insb (bad) xchg push sub xor (bad) rex.WRXB rex rex.WR mov pushq (bad) lea cltd rex.WB fstl outsl enterq movabs lods sbb (bad) test jmp rex.WR lret outsb stos push rex.RX rex.WB xchg xor and lea cmpsl sti rex.WXB repnz stos rex.WX rex.WB movabs and xor rex.XB out (bad) stos push pushq mov and rex.WX lods mov out leaveq rex.W retq pop (bad) mov test xchg or jge (bad) rex.XB fcomp or movabs or addr32 lahf rex.WRXB rex.WXB sbb leaveq movslq (bad) xchg add mov adc xor add callq loop out mov xor mov adc xchg push rex.WB (bad) repz add sbb (bad) mov movslq jne (bad) rex.WB push pop add xchg sbb xor iret lahf jnp or xchg outsb cmpsl xor sbb sbb test cmp (bad) (bad) jp rex.WRB (bad) data16 callq rex.WRB rex.WB fwait xor hlt rex.WB movsb jmp lea movabs imul rex.WB gs rclb adc addl pop rex.WXB movabs mov cld jns push mov outsl adc adc (bad) int3 and sbb sbb mov sub or sub data16 in mov stos rex.XB xchg movabs rex.X (bad) rex.RB rex pushq push ja sbb (bad) cwtl (bad) sub or (bad) lret out in (bad) fdivl and cmpsl (bad) (bad) in out callq adc add (bad) test rex.WRB pop jg rex.RB cmpsl (bad) rex.WX or push cmpl rex.WB cmp sti xor mov mov lahf data16 std lret add cmp repz push movsb sub movabs xchg cmp scas cmp (bad) (bad) cmp jns mov leaveq pop callq xlat rex.RXB sub mov movabs cs out outsl rex.WB rex.WRB cmp pop sbb (bad) cmp cmpsb (bad) movups (bad) lret xor lods lret pop mov sub rex.XB clc es stos mov mov and jne add std xor pop pop xchg jmpq jmp lret rex.WB rex.WRX rex.B (bad) push sub (bad) movsl adc rex.WRX or xor fisttp (bad) sarb (bad) mov outsl and cmpsl (bad) rex.WXB xchg fimul int3 sahf roll sub lods or (bad) cmp std rex.WB rex.R jne jl out push imul adc xor or pop imul (bad) (bad) (bad) movabs loop pop hlt loopne push clc sub shlb (bad) lods rex.WB push mov sbb (bad) mov test out rex.WRXB (bad) outsb jno mov sbb jb and sub jmpq enterq lret stos (bad) pop xlat or mov rex.X movabs xorl adc xchg pop int3 and shrl (bad) mov cwtl mov xchg xor int3 or jo retq movabs mov jmpq vmovntps adc pushfq jno rolb loopne mov test ss movsb movslq rex.WRXB fisubr pop push (bad) pop xchg jae mov in (bad) callq rex.WRX (bad) (bad) js insl rex.RX xor sub jrcxz movabs ljmp xchg add jae push pop and xchg retq icebp sub mov callq test movabs xchg out xor or jl push loope test jp push (bad) (bad) xchg loopne out cmp callq leaveq fisttpll rorb out pop xchg push movabs sub (bad) stos xor lahf and fimul sub mov cmp and (bad) (bad) callq jo rex.WB js (bad) mov rex.WB sbb rcrl and (bad) pushfq mov mov callq imulb (bad) ja mov sbb cli cmp rex.RXB sahf and rex.WB add fs cli pushq xchg rex.WRXB rex adc push ja or repnz sarb and (bad) movabs add movb mov fadds (bad) and pushq push mov cld or xchg fsubl rcrb mov movabs add push roll rex.RXB cmp xchg cmpsl rex.WB in shrl out sub xchg xchg (bad) xchg pop pop add iret (bad) or (bad) rex.WB ja cmp fwait callq (bad) pushq sub xchg int add fsubrp mov es inc sub and insb (bad) jns sub xlat loope and (bad) scas jg jl rex.WB pcmpeqw cmp rex.X rex.WRXB pop (bad) hlt leaveq loope repz sub lret pop jmp mov jle (bad) (bad) repz xor mov (bad) push mov xchg add rex.WRXB adc cmp sub (bad) loopne outsb sub jno movslq leaveq jb rex.WB test push adc in (bad) fbld pop cli or xor xor lahf movabs sbb (bad) lock rex.WRXB jnp callq sub rex.WRX rex.B lret or movsl mov sub jl xchg (bad) rex.XB add sub mov mov imul pop rex.W int3 rex.WRB (bad) jae add mov pop outsb xchg jmpq adc not push sub stos rex.RXB jg sub insl pushq xor lea cli mov mov (bad) sub mov callq lods xor sub sub add mov jmpq push xor cmpsl pop test sub scas (bad) ja cwtl rex.RXB pushfq test xlat (bad) popfq mov pushq sbb mull mov nop insb ja cmp xchg push (bad) mov or (bad) movabs fcomi xchg jmpq sub pop scas xor xchg rex.WB rex.RX add jmp xor decl sub pushq sbb je rex.WRXB cmp rex.XB movsb pop pop out loopne mov cmp sub fsubs pushq mov fistpl rex.WR add (bad) clc xchg sysenter rex.B or rex.B imul cli adcb add lret flds mov fmuls lea imul rex.RX lret sbb loope stos pop (bad) fidivrl mov sbb jp xchg insb xchg and add lret (bad) rex.WRXB hlt pop callq lods and or rex.WB fldl and (bad) (bad) outsl addr32 pop sub fnsave rex.WB cmp int mov lods and jo (bad) rcrl ja jle rex.WB flds movabs push (bad) push fildll fsubs cmp rex.WB adc pushq push imul xor stc insl out rex.WX pop pop cmp or (bad) xchg rex.WRXB lods pop rex.WB xlat rex.X mov jnp (bad) lret orb addr32 mov push adcb pushq mov push int3 (bad) pop mov mov adc repnz rex.WXB and fs cwtl movabs imul or (bad) (bad) adc sbb mov xor cmp (bad) push (bad) xor adc (bad) (bad) xorq int3 mov fstpt jmp mov rolb pop mov mov rex.WRB not jb ja jbe mov rex.WRXB push rex.XB test rex.WB mov jb callq (bad) xchg push xchg xchg xchg cmp rex.WRXB sub or xor mov pushq imul lret (bad) cmpsb or out rex.WB (bad) fcoml rex.WB (bad) out rex (bad) icebp sbb push roll stos rex.R cmpsl fs (bad) icebp test (bad) (bad) pushq and rex.WRB rex.WB rex.WRX (bad) stc bnd fstpl rex.WB pop add paddb loopne mov (bad) (bad) rex.WB and sahf sbb pop iret cmp clc rex.WB fildll rex.WRXB repnz and pop mov sub out mov pushq xchg mov fadd pop in xchg shl (bad) mov add fnstenv (bad) icebp jmp rex.W rex.XB or and lock lret (bad) jne push (bad) xor sub cmpl rex.WB sahf fucom jrcxz mov (bad) fdiv xchg test adc mov test test repnz rex.WRX xlat (bad) or mov (bad) rex.RX rex.WXB lock repz lea push icebp retq rex.WB loope imul in xchg (bad) mov nop rex.WB imul jle rex.WB cli psubsb push int add addr32 push sahf out mov rex.XB ds stos rex.WRB (bad) std shrb xchg rex.WX rex.WB montmul cmpsb rex mov pushq and in clc (bad) xchg or push pushq adc cli rex.X xchg (bad) (bad) pushq lahf jns or pop outsl mov outsl xlat cmp xchg out movabs loope rex.WRXB or mov int3 pop xor rcrb pushq push sub push cli rex.RXB cmpsb xchg mov movabs mov lahf rcrb rex.WB sbb rex.WB rex.WX rex.X (bad) add movsl xor cwtl push pop sahf loopne jne fistp es mov sarl (bad) popfq fwait mov adc xchg out addr32 mov (bad) rex.WX movabs rex.R rex.RX data16 retq push jrcxz lods pop (bad) stos mov sub cli pop xchg cmp or (bad) push rex.RB jl rex.WB iret rex.WRB fs movabs jl rol lods (bad) cwtl fnsave test sub xchg sub xor or je imul rex.WB rex.WR pushq pop sub xchg jl (bad) (bad) or (bad) (bad) (bad) iret ja and adc adc rex.WRX orl fwait push es rex.WB jmp frstor jne mov test rex.WB mov lods push mov mov mov mov jns rcrl rex.B or mov pop sbb icebp (bad) (bad) (bad) sub leaveq in fcmove ficom addr32 (bad) mov rex.WB (bad) fildl cmpsl imul or pop lock rex.RXB add mov js insb fistl and rex.WB rex pop (bad) adc mov movsl sub cmc jl push push shrl (bad) cmpsb movslq rex.W push out pop pop mov xchg (bad) jae sbb cltd je imul out and rex.RB xchg mov xor rex.WB test pop in adc mov setne in xchg enterq pushq rex.WRXB mov or insl rex rex.RX movabs gs push pop push xor xchg jp gs jo and rex.XB push xchg rex.WB mov adc jp loop push fidiv movabs repnz adc cmpsb and xchg stos xor cltd rex.WRXB cwtl rex.XB (bad) rex.WB mov sub int3 (bad) movabs jg mov test ficompl fsubs fcompp rex.WB or xor rol add out rex.RXB jmpq insl sub mov xor loope shrb or loopne js loop sbb cmp xchg imul and sti (bad) (bad) sub stc sbb movsl rex.WB adc imul fistp popfq sahf test test mov sub push movslq pushfq rex.WB movsl xor adc sub out stc out scas lods imul push sub mov (bad) lahf xor mov sbb or (bad) xor scas pop push cltd out xchg sub jne notl pop decb pop xchg test push mov jo or rex sbb (bad) xchg rex.XB in gs (bad) pop rex.XB rex.WX xchg mov movsb jp sarb fucomip adc in (bad) fstl sub pop out stos jle rex.WB mov movslq data16 fnstsw push or test iret adc push (bad) int3 push mov lods enterq rex rex.WXB jl cmpsl jge fmuls pop sub adc loopne callq pop fstpl rex.X xchg test insb rex.RB rex.WB stos (bad) enterq xchg pop adc and (bad) in (bad) (bad) loopl test movabs ja insl (bad) rex.RX data16 rex.WB rex.WB (bad) cltd (bad) addr32 test sbb loope je rex.W rex.WB rcr mov xlat js mov movsl (bad) add (bad) pop and rex.WB ds xor packuswb fwait rex.RXB pop mov out jbe test (bad) cmp jne movabs clc lret sub mov callq sbb cmpsl add xor loopne pop repnz test movabs movabs ja cmp xchg rex.RXB iret sbb cmc fsub movabs flds out xchg (bad) (bad) clc push rex.WRX mov iret or (bad) scas fwait rex.WB (bad) mov addr32 rex rex.WB movabs pushq rex.WB rex.X (bad) xchg cmpsb adc outsb out adc sub movabs or movabs fcmovb int leaveq mov jmpq sbb cmc enterq cmp xchg hlt (bad) sub test xorl add and fwait and mov sub in jrcxz push mov xor xchg jo or (bad) sub test (bad) jae sti push pushq shrb rex.X rex.WB je (bad) hlt mov sub std xchg lods rex.WB cld sub pop rorb mov mov push fsubrl js xchg or or (bad) jbe fcos callq mov cli adc (bad) mov (bad) (bad) sbb cmp insl mov clc sub xchg stc or mov jo pop cmp sub mov jb rex.R xchg iret xor (bad) (bad) jg mov lods es rex.WR rex.WXB adc fild (bad) and mov xchg (bad) or (bad) (bad) push outsb xchg push pushfq xchg mov sub sub adc (bad) mov mov jno roll push (bad) xchg sbb cli clc push mov test (bad) sbb mov hlt add cmp mov sub xor mov mov movsbl (bad) lahf retq mov adc sbb fisttpll cli pop jb rex.RX mov in out data16 vmovups rex.WRX cs or (bad) scas push cld and pop stos rex.WB mov lock pop jg (bad) cmp mov negl pop out jb cmp cmp jne clc mov rex.WX callq or mov pop xchg push xchg std rex.RXB mov cmp fldcw (bad) cld mov rex.R mov (bad) sub add ja rex.X rex.WRX rex.WXB mov sub pop out retq push movabs cmc movabs jbe rex.X mov jmp rex.WB outsb xchg push mov callq (bad) ficompl test out movq es mov movabs jnp stos rex.WB mov mov mov mov rex.WB rex mov push xchg repnz cld outsl in jle mov rex.WB cltd in movsl rex.WB (bad) rex.X lods rex.RX lods xchg push push je jmp pop mov (bad) rex.WXB xchg rex.XB stos (bad) cmp (bad) (bad) xchg jno push rex.WB rex.XB xor xchg int movslq and (bad) pop roll and and rex.WB test rex.WB adc (bad) loope jl xor and popfq pushq (bad) movslq or sub cmp pop movsb mov rex.WXB or (bad) stos push fwait push in in mov rex.XB pop rex.WB jmpq mov sbb lret lret shl (bad) fisttp test xor shrl nop fsubrl cmp sub mov imul div (bad) xor ror mov callq rex.WB (bad) and leaveq add cmp mov (bad) xor xor jp gs je rex.WB rex.WX cli rolb mov pop subl rex.WRXB test (bad) push pop enterq sub push and adc rclq out mov imul rex.X rex.WB or and pop (bad) (bad) or cld enterq xor xchg or jns and ja xchg or rex.WB rex.W (bad) mov incq fcomp add adc rex.WB jno fs rex.WRXB xor (bad) mov push rorl movabs sbb mov rex.WB xor xor xor (bad) movslq pop mov xor cmc or jbe add rex.RX loop xchg repz pushq jp or rorl and xor mov out cld rex.RB (bad) gs xchg (bad) (bad) jno pop rex.RX movsb mov fwait (bad) rex.XB adc jno mov sub movsl mov movsl cmp mov (bad) adc rorb or or (bad) jae and xor rex.WRX cltq out enterq callq mov pushq movslq lods cmp loop (bad) addr32 rcrb jp callq mov outsb adc (bad) jb cmp notl sbb xlat sub callq (bad) ss cmp xchg sbb add pushq (bad) or hlt push jne (bad) rex.WX rex.RB cmc push or lret out push shll xor hlt fisub test (bad) (bad) test movabs xchg cmp (bad) pop sbb (bad) and adc xchg callq rex.R pop sub mov add out lods fistp ja jl rex pop stos rcll rex.WB add xchg rex.WB sub lock stos or add mov rex.WB adc mov (bad) sub push rex.RB rex.WB (bad) nop (bad) jae cmpsb stc rex.WB rex.WRB mov clc leaveq rex.WR imul rex.WRXB movslq add mov movabs addb xor ds sub add in js pop enterq pop sbb rex.WRX outsl rex.X lret in (bad) mov movsb test bndldx jge repnz sbb insl push gs rorb leaveq lahf rex.XB repnz jmpq rex.WB fidivr jb xchg rex.RXB jae mov movabs sbb out push or sub mov pop mov cmp (bad) (bad) xor jns addl jp sub xchg icebp cmpsl movsl and mov fldcw sbb (bad) out mov pop movabs jrcxz test hlt movsb (bad) fidivrl add rex.RB gs out rex.RXB pop (bad) rex.WR (bad) rex.WR in lods fsubrl lods (bad) and or test xor scas sub jns sarb mov sub rex.XB xor fs xor fiaddl xchg rorb (bad) adc mov rex.WB pop mov mov sarb add (bad) callq jp es enterq sub lock rex.RB gs push mov int and xor rcrb mov mov movabs sub xor cmpsl adc adc sub rex.WRB xchg rcrb rex.WB sarb xchg rex.XB lods pushq cmp push pop (bad) (bad) adc (bad) out je xor (bad) lret and (bad) rex.WB sarb xchg push pop xchg fstpt cmp xchg (bad) js,pn cli callq or je icebp rex.RB rex.RB jns movabs int3 fcomip xlat jge push xchg rex.WB mov pop xchg movsb fstpl rex.B sub xchg insl pop and leaveq outsl xor add fwait jrcxz sbb push adc rex.RXB mov outsb cli vptest movslq stos and sbb pop in mov imul (bad) movabs (bad) sub out jns stos push int shrb sub lods icebp pop (bad) push and rex.WB loopne int3 and sub icebp lods rex.WRXB rex.RX iret xchg loope jrcxz insb pop (bad) push or insl cltd stc push rcll and rex.WR adc rex.XB lock rex.R rex.WB (bad) shrb add (bad) cmp test movabs ja cmp rex.WB add vpsrld push lret add stos (bad) xchg rex.WB movsl mov xor js rex.WB xor imulb add sbb out fsubrs orl and adc rex.WB rex.WR (bad) rex.XB rex.WB clc (bad) and je rex.WB sbb sbbl rex.WRB mov (bad) sahf cmc rex.WB (bad) pop pop adc cs sub out rex.WRX cld cmp rex.WB rex.WRB callq rex.XB xchg movsb jne sti sbb lahf adc xor adc rex.WX (bad) adc push cmc xorl lock push stos hlt rex.WRXB out movabs ja mov jae cmpl pop rex.WB iret cld mov (bad) hlt cmc mov insb (bad) cwtl movabs sub jp and rex.WRB lods mov xlat jno cld nop cmpl scas movl xchg xchg pop ss rex.WB mov jb xchg test (bad) movabs insb (bad) loopne xor and sbb adc enterq fsubrs leavew leaveq enterq nop adcl mov outsl pop rex.WRX sbb std rex.WB test or rex.WXB stc xchg cmp cmp jg cwtl lahf rex.WRB rex.WB cmp callq xchg and mov push outsl rex.WX xor jmp mov imul lret pushq and lea rex.WRXB shl repz je ja rex.R sti push loop stos rex.WB fisub rex.WR rex.RX lods movsl addb (bad) push (bad) decb out rex.RX (bad) (bad) rex.WB fwait (bad) fmuls and int rex.B mov (bad) or out (bad) mov sarb (bad) clc retq xchg xchg (bad) mov rex.WB retq jne sub scas cld xor pop callq and pop mov (bad) in fcmove sbb rex.XB mov pushfq mov jle lods movl pop push stc mov cmp subl std jl leaveq xorl mov mov lret repnz loop stos (bad) clc rex.WB (bad) jmpq cli cmp pop (bad) sub mov push lea add fdivr imul stc sub shrl add xchg (bad) jb int3 sbb mov scas push cld scas fisttp (bad) xchg (bad) xchg sbb cld lret decl push int3 jbe jb rex.WRB fsubl imul cmp jbe mov add sbb stos push sub imul pop ja (bad) xor push (bad) cs push (bad) movslq loope sbb test or (bad) mov leaveq loopne fadds popfq rex.XB movsb cmp fisub mov cmpsl add movabs xchg sub fdivrl iret lret rex.RX retq movsb hlt mov lret lahf test sub int je pop rex.XB and (bad) xchg xor outsl cmp fwait (bad) out rex.X xchg iret (bad) movsb pushq repz mov add cmp jbe cmpsb (bad) adc push and xor mov xor xchg push mov testb (bad) rex.WXB jrcxz (bad) rex.RXB fcomps cmp int jo lret movsl loopne adc popfq fistp mov (bad) cltd fwait mov add fmull sbb or lock rex.WXB mov (bad) rolb sbb out push rex.WXB push adc push xor cmp (bad) addr32 and mov push notb xor jmpq movb xchg movabs loope cmp test jo adc rex mov xchg rex.WX fstps mov ja mov mov fsub rex.X (bad) pop in and cmp mov jle jmp pop hlt fimul mov (bad) adc rex.WRXB and pushq fld rex.XB frstor push movabs movabs (bad) nop sub sbb out sbb rex.WB ficompl cli sub in jge xchg jg jge out int lret cmp movabs test test xchg mov loop sahf imul xor movsb xchg imul shll gs rex.WB lock insl std add pop lock jrcxz movsb rex.WB jbe pushfq icebp pop xor add jo in mov push rex.B mov test or cmp add movsl mov and add notl insl jo mov loopne or lret movsb lret (bad) clc add cltd mov and callq (bad) or jno ds rex.RXB adc div push adc lret jnp rex.RB (bad) mov pushq jle cmp xchg jge push adc leaveq jp pop mov (bad) sub je leaveq outsb adc sbb rolb rex.WRX mull mov mov lock xlat pop push (bad) mov mov out pop (bad) sub loope mov rex.WR sbb cmpb mov scas ja (bad) xchg push rex.WX and lods movabs cmpsb rex.WB subb fwait add sarl pop addr32 rex.RXB rex.WXB pop cmc mov rcl sub sub lret fbld or rex.WB and (bad) mov pushq cmpl (bad) rex.W rex.WB es mov outsb addr32 and fcoms je push add sti (bad) icebp out stos jl (bad) outsl fdivl or cmp test rex.RXB xchg and in rex.WB fildll jl outsl rex.R (bad) sbb rex.WB cmp pushfq (bad) in movabs rex.W movabs std (bad) sbb jae cwtl (bad) pop roll movabs lods (bad) or and pushq jl pop lock pushfq repnz mov stc sub (bad) xchg (bad) movsl clc mov xor loopne pushq cmp mov cltd push addr32 mov ja data16 push xor movabs (bad) rol rex.RX and icebp and (bad) pop mov xchg rex.WB add push (bad) (bad) outsb xlat int stc xchg or repnz fildll fstpl push push rex.WB mov cmp sub xchg (bad) push scas rex.WXB movabs and xor test rex.R mov push lret (bad) (bad) int or mov jbe pop in sbb rex.RXB scas rex.WRXB (bad) lret sbb cs xor icebp sub loopne fdiv push rcrl adc jo and enterq lret fsubs and cmp ffreep cmc mov rex.WRXB mov and or (bad) (bad) xlat hlt std nop pop fwait stos sbb jne pop fbld mull retq push pop adc jle xor rex.RXB movsb hlt rex.WB rex.RB js mov or mov pushq std rex.WRB rex and in (bad) lods rex.XB rex.RX rex.WRXB xchg stos outsl fisubrl jb (bad) jle cs rex.WR mov xchg cmpsb push fdivs (bad) xchg sub mov rex.WXB rex.WR rex.WB stc in (bad) xchg mov repz and fs insl or push mov add mov rex.WX rex.WB ds movslq (bad) ss rex.WB icebp or jrcxz in enterq (bad) pshufw rex.RB pop ja sub adc mov cmp outsb idivl rex (bad) int push rex.WXB xchg (bad) push xchg cwtl cmp in cld test imul add rex.WB pop icebp (bad) xor addr32 ds pop (bad) mov jmpq push xlat ja (bad) js cwtl fs (bad) and sbb rex.WB rex.R pop sub pop sub movslq mov rcl push or or cltd xchg cltd fisubr (bad) pop xchg out push cs test pushq jne or sub (bad) sub movabs imul add jmpq push enterq (bad) pop pushq adc (bad) mov xor es cmp test or rex.WRX pop xchg stos or test cmpsb rex.WB outsb je rex.B callq (bad) cwtl rex.WRB test imul ds or xor adcl rex.RB sub mov orl loopne sbb cmp pop xchg popq jo push fcmovnb std cmpsl xor (bad) (bad) (bad) retq out scas xchg imul cmp xchg jge sub jbe retq pop sti dec sbb mov and (bad) mov (bad) adc fisttp imul rorb leaveq ds mov jle push leaveq xchg (bad) movsl nop (bad) (bad) push test (bad) sub sbb sbb xor rex.WB sarb insl (bad) sub addr32 pushfq ds fs (bad) push (bad) jrcxz xchg rex.WR rex.W rex.WB lretw xor pushq pop rex.WRX xorl movabs sarb jp cmp xchg jbe push xchg pop sbb (bad) in in cmp loope lods cmc enterq loope sub (bad) (bad) cmp xor (bad) in lret rex.W lock mov fnstcw jb push (bad) lods (bad) test mov rex.XB mov add rex.WB mov sbb rex.WB (bad) cltd mov fcompl lock (bad) sbb push mov movabs jrcxz adc xchg sub callq hlt xor (bad) rex.WB roll iret (bad) cmp scas sub mov (bad) xchg sub repz nop movslq mov iret jrcxz retq pop rex.WB insl jrcxz and stos adc mov sbb fisttpll test or rex.B mov callq sbb ss test xchg rex.WB mov cmp fildl out rex.RX imul rex.WB jle pop pop jne or pushq sbb cmpsl and repz stc enterq jae xor add in xor (bad) add out rex.WB jmp mov jb or repnz jrcxz,pt and rex.R rex.WB rex.RB adc rex.WR rex.WXB (bad) icebp cld movabs mov xor cmp sub rex.RX add sbb mov movsb fildll jns rex.WB sub (bad) or xchg (bad) (bad) and sbb pop (bad) pop rex.WB lret lahf mov mov xorl psubd out cmpsl loop mov iret and or sbb mov sub movabs pop and sub push or jne test (bad) mov (bad) lret pop rex.WB rex.RB frstor cs xchg rex.WB lret jnp pop push jmp or orl jnp pop jl cmp pushq push ds insl (bad) incb sub adc rex.WXB hlt cld mov jbe stc rex.WB fwait sbb test jne cmpsl lret jle addl xor iret (bad) jp rex.RB push sub jne and movl jo movabs add scas sub (bad) push mov movslq outsb outsl xchg or rex.RX (bad) adc cmp (bad) cltd (bad) pop scas in rex.WB mov popfq xor frstor rex.WB (bad) mov mov (bad) rex.WXB (bad) rex.WRX or cmp add sub or rex.R (bad) mov rex.WB rex.WX jno imul xchg je (bad) rex.WB movsl xor cmp xchg rex.WB cli cmp rex.WB (bad) negb jl pop (bad) cs cmp pushq cmc icebp rex.WB sbb jae (bad) rex.WRXB mov push pushq lods cmpsl and test movsb rex.WB cltd out movslq rex.X mov xchg rex.WRX data16 jae cli (bad) xor rex.WB pop push fwait and cltd xchg xchg cmpsl push mov movslq adc xor movsl jo fs sarb loopne xchg movabs out (bad) sub rex.WB sub xchg rex.WRXB jno addr32 jbe (bad) xlat jge movabs jmpq push (bad) rcll rex.W add fisubl insl or movabs cmpl rex.RB jmpq rex.WB rex.WB push (bad) movabs ja outsb mov es mov movl rex.WB test lahf ljmp out fmuls (bad) xor repnz rex.RX stc repz (bad) rex (bad) addr32 jl out (bad) jp out mov add pop (bad) (bad) movabs (bad) adc mov mov xchg loopne enterq stos mov xchg cwtl rex.W orl test sbb ror cmc rex.WRXB sub cmp shrb rex.WB repz fcompl add movslq fwait adc sbb fisub mov cmp cmpsb (bad) push imul callq incl xchg cltd clc rex.WRB rex.XB mov data16 cmc movsl or sub sub pop jg out (bad) rex.WB mov xchg outsb mov rex.WRB cli xlat lret scas push int ds es (bad) shrl xchg push cli sahf jge jg fs and xchg (bad) adc movabs sbb rex.WRB rex.WB lock mov add sub rex.X push rex.XB (bad) or jb icebp xor push test xchg xor rex.WB cs lahf or mov xor iret jne sbb and adc movabs xor lahf mov rex.WRXB pop rex.WXB and sub (bad) rex.WB test movsl insb push outsl lret sub (bad) rex.WR sub rex jrcxz (bad) movsl lock rex.WB stos movsb imulb or sbb test loope stc in xlat sbb add add (bad) cmp repz movabs leaveq lods cld xchg enterq pushq (bad) push xchg mov (bad) jg mov mov pop sub rex.X push mov xor movabs add mov rex.WB fwait cwtl adc pop callq (bad) xor or jrcxz sub ja jns ja xchg rex.WB enterq cmc mov pushfq rex.WXB movsl (bad) int3 callq pop push mov cmc or add icebp callq callq cwtl movslq fsub mov sub sbb cmpsl push add gs xchg out pushq movsl jae jne and jle fisub rex.RX rex.WB jge push mov and stos cmp jno sub ljmp sub adcb rex.B pop mov cld iret rcll cmc cmp or ds sarb jno pop lahf sub repz sub outsb imul adc decl roll xor (bad) out rex.WB sub sub int lea lock outsb push out jg (bad) rex.WX imul in out movabs pushq iret sub ss repnz (bad) scas xchg jge mov mov out (bad) and outsb (bad) push cmp shlb (bad) mov (bad) (bad) add adc or ds rex.WX icebp pushq jge xlat mov pop addr32 leaveq mov (bad) rex.B xorl pop jns cld ss sub notl ror and sub pmullw jle in nop (bad) xor (bad) adc fdiv sbb sub xor js (bad) sbb pushq movabs mov push shrl addr32 es enterq push sub (bad) or rcl jne sbb int3 hlt (bad) movabs movabs jno retq enterq (bad) mov lret cmp fwait cmp jrcxz movabs or xchg cwtl fmul or xor loop int3 (bad) enterq popfq imul sbb out (bad) divl lret mov idivl (bad) mov scas sub sub cmpsb movsl (bad) mov loop vprotb jg ss pop movups pushfq cmp jp movabs or rex.WR push rex.RB mov ffreep cmp rex and or scas fildll adc sub rex.WB push rex.B rex.XB pop xor (bad) jo cs loopne xor rex.WRXB (bad) (bad) xor ffreep pop jl rex.WRXB sub mov rex.WRB sub mov jnp mov movabs rex.WRX popfq rex.WRX rex.WR xchg xchg sbb jo cli loope mov sbb add lods outsl (bad) addr32 add sbb movabs jbe jno push rex.W (bad) out (bad) rex.WR rex.RXB rex.X mov test push jmpq out movabs (bad) jnp rex.WXB sbb ja movabs sarl sbb pushq and jno rex.RB rex.RXB lret or movsb adc jmp and cmp sti rex.WRX cmp enterq (bad) fcoms lret (bad) adc mov shrl pushq pop xchg jmp fcom sbb imul sti jg pop fisub rex.WRB mov rex.WXB rex.WB (bad) mov stos xchg sub int (bad) loope (bad) out push insb cld jmp adc mov rex.WRXB movabs jno retq xchg xchg cmpb xchg stos xlat sub rex.WB lret movslq (bad) jbe ss (bad) mov callq (bad) cmp lock leavew mov and out mov rex.WR xchg jmpq jns and or rex.WB xor adc or cli sub movabs rex.XB rex.WB jp cmp in add mov or pushq (bad) (bad) jnp loope gs pop mov (bad) (bad) pop pop mov mov fwait (bad) rex.WB es cwtl repz (bad) idiv mov pop icebp jmpq (bad) in ss or add rex.WB rcll movabs jmp xlat rex.X rex.WB ss in add out callq in sbb and test jnp and push or test sub and (bad) ja lret rex.WB (bad) (bad) (bad) rex.WB xchg lods jns rex.WB rex.RXB adc je retq pop xchg nop movabs imul (bad) rex.X addr32 xor retq rex.RB addb (bad) (bad) (bad) and test adc jge (bad) in jge rex.WRX sbb sub xchg pop push mov and (bad) test or lahf jno shlq int3 sub rex.X mov (bad) mov mov pushq jg (bad) nop test sbb adc rex.X fs imul enterq jbe mov xchg mov jle mov pop (bad) imulb imul sti rex.WRXB cld mov (bad) pop mov mov (bad) xchg movabs or push callq rex.W (bad) or mov push pop insl imul pushfq sti rex.WXB rex.XB and jno pop and std rex.WRX rex.WRXB (bad) or scas mov (bad) cmp retq rex.WRXB rex.RXB push loopne (bad) add test mov test andb (bad) mov cmp (bad) mov and mov callq int rex.WB jae sub jo and pushq movabs test adc int jb movabs xor fwait push jrcxz rex.WB repnz mov adc jle loope hlt rex.WRB retq rex.WB popfq sbb lea rex.WRX rex.XB movsl sbb loope test in cmp or movabs xchg and push cmc callq addr32 retq cld (bad) rex.RB rex.WB mov adc loop popfq outsb lret rex.WB enterq je or mov jo andb cmp or movl or mov (bad) or adc mov fnstenv rex.XB pop loopne and rex.WB and movabs js push jg (bad) lea (bad) mov cmc mov rex.X pushq sub push rex.WRB rex.WB rex mov movabs (bad) movslq pop mov decb (bad) adc shrl rex.RB push cmc rol clc sahf test and rex.WB rex.WRB jno movabs or xchg (bad) jno pop loope pop pop adc sub cmp fwait test cmp loopne sub pop rex.R ja xchg rex.WRB rex.WB pop pop rex.XB or or rex.W in imul xchg callq mov pop (bad) or div movsl insl ja,pt fwait sbb rex.WB pop lock cmpsl movsl adc cltd xchg ss rex.WB movabs (bad) out push lret sbb or mov rex.WB cmc mov (bad) (bad) cmp outsl pop (bad) int3 cmp rex.WXB xchg add xchg sub pop mov retq (bad) jmpq push clc ja and adc callq adc sub rex.WRB rex.WB (bad) adc cltd rex.WXB rex.WB in mov rex.WB sbb rex.B sbb movabs fstl pushq popfq rex.RXB fwait sub mov es data16 and (bad) sub rex.WR rex.WX divl out jb or jrcxz jns (bad) (bad) rex.WRB rex.RB imul mov or (bad) rex.XB test setne fsubl loop in adc rex.WR rex.R rex.WRXB in pop movabs (bad) (bad) retq (bad) stos sbbb (bad) mov (bad) sub jp rex.XB xchg (bad) lods push sbb cmp out (bad) xor mov xor mulb (bad) repz lods mov jrcxz xor xor (bad) rex.WB push loope sti callq sub jne (bad) rex.WX sbb (bad) pop jns jp cmp (bad) cltd int sub cmp adc push (bad) insb (bad) lahf xchg mov scas (bad) mov rex.WX rex.WB rex.WRXB pop int3 cmp rex.WB outsl (bad) (bad) (bad) scas cwtl sub push push rex.WXB jo jmpq jge faddl pushq (bad) rex.WB test fmuls callq push rex.WR jmp jo add mov pushq pushfq rex.WX pushq sub (bad) int push lret rex.WB (bad) rex.WXB maskmovq notl rcrb rex.WB sbbl (bad) retq rex.WB jno push mov rex.WB sub push mov cmpb and hlt callq jo rex.WX rex.X push push jle (bad) adc (bad) jbe andb mov pop add sub cli pop ror adc mov cmpsl cmp movsb fidivr mov in (bad) outsb rex.WXB pmuludq rex.RB add and rex.WRXB mov jmpq jle mov fmuls sub nop (bad) fild fxch cmp callq and jbe (bad) mov rex sub mov movsl pop leaveq mov out movabs insl pop callq test sub pop and rex.WB sarl xor adc xchg mov pop lea rcl mov rex.WXB (bad) rex.RXB rex.WRX (bad) rex.WXB add sbb add adc vmread stos mov int rex.WB sub lret fildl (bad) sbb xchg je movabs and fcmovnb push cmp rex.WB js fmuls jne rcl cmpsb rex.B test pop xchg push add mov (bad) pop push (bad) pop or rex.WB sub rex.WB lods fnsave (bad) cltd xchg out addr32 (bad) and cmp pop jae pushq (bad) pop xor outsl callq mov in (bad) and push or sar retq sbb rex.WB ss rex.RB in cmp fbld jb cmpsb mov addr32 mov push test retq sbb rex.WB imulb rex.WB (bad) imull or pop jns adc sub rex.X fst pop xor cli mov sub mov rex.WB sub in shrb adc pop and (bad) mov xchg lock pop lods rex.B shll cmpsb and popfq movabs jle (bad) enterq retq (bad) push imul cmp rex.WXB rex.WB rex.R mov movabs pop (bad) rex.WRB xor jnp js rex.RXB in lret mov pushq nop pop and xchg fnop test scas push mov pushfq jge pushq mov and loop loope (bad) rclb add (bad) (bad) rex.RB adc xor out movslq or cmp cld (bad) mov lahf imul rex.WRXB xchg faddl xchg or out jmp push add or addr32 add sahf (bad) jmpq add adc imull icebp (bad) mov mov movsl rex.WRXB stos callq nop jl (bad) jmpq fisubrl rex.WRX cmp push push repnz movabs mov or and xchg out data16 icebp jmpq sti sub out rex.RXB in jno rex.XB rep push enterq rex.WB test sbbb pushfq (bad) jns out (bad) push push movabs jbe cmc cwtl outsl jle jbe xchg jno mov jae adc (bad) movsb dec test fbld mov pushfq add sub (bad) std or cmc mov jne sbb pop cmp rex.XB loope addr32 mov test mov rex.W pushq cmp and xchg rex.WRB rex.XB (bad) rex.WX hlt lods or jno enterq rex.WR mov fcomps adc fimull sarb cs (bad) mov or adc push push rex.B sbb fadds notb loope (bad) data16 idivb popq and mov (bad) xchg (bad) jae mov add enterq rex.W mov (bad) testl push rex.WX (bad) nop rex.RX out mov test xor rex.WR mov sub sub repnz (bad) xchg movabs mov push add and push test in fcoms loop rex.RXB fmuls mov xchg rex.RB or mov mov xlat and idivl lahf fisubl cmc (bad) cmp mov cmpsl stc cld adc out data16 add sbb popfq rex.WX (bad) mov (bad) insl es rex.WXB rex.WR nop sbb jg (bad) or mov ss jle int out adc repz nop (bad) shrb (bad) retq sub xor and pushq shll in movabs fs rex.WB (bad) and rex.WB rex.WR push xchg imul int3 rex.WB xchg fmul jns rex.RB rex.WB cmpsb jmpq rex.XB rex.WB xchg xchg int rex.WRX rex.WB mov flds (bad) cmp sub rex.X cwtl xchg in xlat mov adc add hlt nop cltd or int pop mov fmuls (bad) std movabs stos jne sub icebp pop rorb rex.WRX lods (bad) subb rex.WB rex.WRB mov add cmpsl scas pop (bad) in xchg test and (bad) push push pop mov (bad) enterq jb (bad) push rclb addr32 ss (bad) rcrl cmpsb add retq mov cld rex.WRX and cmc rex.WXB movsb cmp stos pushfq sbb (bad) scas rex.RXB mov rex.R jbe sub enterq pop push addr32 sbb mov or pop mov jle sub cwtl and adc cmp mov pop cmp ljmp jle pop add fsubrp notb mov sahf cltd xor (bad) gs test sub mov (bad) push rex.WRX rex.B addr32 retq sub sub negl fs (bad) rex.B insb adc sub mov (bad) test (bad) adc test xchg roll add movl push mov mov sbb movsl lret jmpq mov mov jmpq fimull insl xor sub test std mov and cmp jp sbb xchg movabs mov in jo (bad) outsb (bad) rex.W mov in pop cs fistl pop int and lret xlat (bad) mov retq out in fdivs mov sarb addr32 sbb lret sbb mov pop callq popfq or jne mov push (bad) fnstenv mov cmp cld rex.RB jmpq sbb rex.WX rex.WB xor jno loopne retq test pushq movsl scas add sub sbb movabs out stos loope rex.WR adc idiv pop pop and (bad) push adc testb int3 cmp add js popfq pop iret (bad) jo shr sub sahf xchg lret sub ss mov mov push retq jb jmp adc sbb mov jno sub pushq pop shll movslq int3 push iret mov movabs cltd leaveq or add adcl rex.WRX pop sub (bad) faddl (bad) callq (bad) push jge cli xchg movsb add mov rex.WB rex.WR jne clc (bad) adc mov pop cmp (bad) fs mov rex.WB (bad) mov shll rex.WB mov test and sarb or or insl adc rex.WB (bad) mov push rex.WX xchg xlat movsl add mov enterq fdivl callq icebp rex.WB sbb mov out ds xor fdivr mov adc movabs (bad) gs mov add mov movsl (bad) (bad) sbb push xor movabs repz jle outsl jae (bad) std jmp je and rex.WB cmp shl add mov cli push es mov adc gs (bad) pop rex.WB jmpq loopne xchg lods (bad) es add rex.R packuswb in test push loopne mov outsl add push rex.WB movsl push rex.R and xlat cltd (bad) push movsl cmp jle pop jno rolb callq rex.WB add sub test sarl nop lret pushfq rex.WB rex.R mov (bad) mov adc and (bad) iret (bad) xor movabs rex.R sub (bad) and (bad) movabs mov add xchg rex.WB mov mov xchg push xchg (bad) rorb mov mov test sub (bad) (bad) (bad) push rorb cmpsl rex.WB movabs (bad) rex.WX callq mov cmp or stos fbstp rex.RX sbb rex.WB test or enterq in hlt rex.RB add (bad) rex.WB gs (bad) cld xchg sub and std rex.WB jle (bad) sbb cmp faddp mov insb jae push sti int pop in xor (bad) mov (bad) fistl std callq movsl and (bad) rex and (bad) outsl pop mov rorl xchg loope addr32 xchg cmp sub sub gs xchg fildl or rex.WRX rcr jo out callq cmp cmp rex.WRX mov push add jp push out rex.WB rex.B cmp pop rex.WB popfq push rex.X adc leaveq sub rex.WRXB mov rex.RB rex.WB (bad) sbb mov jo in movabs repz pushq rex.WRXB xor (bad) adc and addb jno jl mov lea (bad) mov xchg test jmpq gs (bad) pop mov rolb rex.RB jo rex.WXB rex.X xchg sub rex.WB (bad) jp rex.WB callq adc in sbb rex.WB ja or lahf (bad) xor adc mov and (bad) push push decq pop add jl mov jle jge rorb (bad) int3 (bad) jns jae popfq jbe or (bad) xchg (bad) mov (bad) xor xor sub loope movsl leaveq jrcxz pop rex.WX sbb stos iret rex.WRB imul pop rex.WRB movsb out rex.WB (bad) (bad) mov xor in movslq and int or insb adcl ja xor sti rex.WRXB jb rorl (bad) cmp nop fiaddl rex.RXB rex.WRX fwait sbb movabs jns xchg fs sahf mov iret add mov sti callq fs push std scas mov movslq hlt push and xor (bad) popfq sbb imul or cltd sbb or fucom rex.X rex.WR or loopne movabs mov jbe mov jge jae xor sbb rex.WB and imul (bad) in rex.RX rex mov (bad) (bad) lods rex.WB rex.X shrb enterq rex.WRX sub pop loop retq decl cmp insl rex.RXB (bad) xchg jne mov leaveq (bad) cmp sub jae sahf and sub and sub fcoml mov sub cmc mov rex.WXB cmovns out stos js rex.X lods ja movsb pop loopne sub push lret (bad) add pop rex.XB movsb lock mov clc hlt sub scas outsb ficomp rex.RB xor (bad) add fs and sub movabs xchg mov or push mov pop or pop jne cmp cmp (bad) mov jge sti xor and mov out outsl cltd sub cmp insl sbb sub adc cs jns mov pushq jnp test fs clc (bad) or ja movsl (bad) rex.WR out mov stos (bad) insb mov in sub sbb sbb pushq jp (bad) rex.RXB leaveq jbe xchg (bad) (bad) cltd loopne jle (bad) sbb rex.X mov ds in insl notb or adc rorb movsb xor (bad) addr32 movabs rex.R cld xor pushq stos test out mov negl (bad) jns xchg cmp imul add movabs rex sbb push rorl fdivr int mov (bad) mov cmpsl in adc add push nop pop rex.WB (bad) and rex jp outsl imul jl or push jmp out rex.R pop lods mov icebp xor mov jge repnz push mov jg jo xor cmpl std out data16 faddl scas cmp leaveq sbb in insb jge rex.RX (bad) stos add mov (bad) (bad) in add out push rex.WXB rex.RX fmull js rex.WXB mov sub pop stc xor hlt jne mov (bad) push sbb int3 (bad) rex.R sbb mov xchg xchg mov fs (bad) sub sti fldenv out (bad) rex.WB and xor (bad) mov jne addr32 (bad) add jrcxz sub lret cmp fsubl adc rex.B in (bad) jo in rex.WB vmovsldup icebp rex.WB rex.WX ds shlb jo loope sub jnp cmp adc xchg outsb or (bad) sub cmpsl or scas loopne rex.WRX and sub (bad) jns or (bad) test adc pop (bad) cmp jmpq rex.WRXB sub repz (bad) stc outsl sub stos and (bad) movabs out cs shll add insl test pop insb imul movabs adc out lods rex.WB and xchg rex.XB push sbb movabs (bad) jle fwait stos je pop outsl movl mov mov (bad) pushq or xchg xchg rex.WB rex.X stos push je fild insb sbb sub jle cs pop (bad) in mov pop rex.RX (bad) cmp cmp rex.RX ja xchg (bad) movabs sub xor xchg fisub decb rex.X rex.WB xchg jno push loope or push rex.RX fcomip sahf rex.WB jo stos or sub add fmull lret xchg or rex.WXB add int3 add (bad) (bad) xchg pushq mov sahf (bad) or sub fsubl retq insl or (bad) roll push cmp imul jns push loope sub add xor rex.WR retq fmull or (bad) xlat xor movslq xor fldenv mov addr32 sub addl (bad) lret (bad) xchg scas pop ss xchg mov stos pop movabs pop movslq (bad) (bad) (bad) movabs lret mov (bad) push movsb in (bad) rex.WR (bad) or and xor add (bad) jge rex.WX loope or rex.WB fwait movslq sub and jmp cli (bad) add sbb cwtl and adc (bad) rex.WB rex.WRB mov xchg andb movabs rex.WB pop rex.RB movsl js jle rclq test or data16 movabs test adc cltd pushq (bad) jle sub test (bad) (bad) sbb or or insb xchg jne enterq rex.RX add (bad) ja cmp (bad) mov retq mov mov or sub pop cmp mov xchg lret xlat sub (bad) sub cltd cwtl xchg push xor movhps sahf test push push enterq mov sbb movabs (bad) cmpsl scas add mov mov sahf jnp lea cmp fmulp cmp (bad) rex.B rex.WB add sbb test incl push jnp in jno pop mov lods test repnz pop data16 sahf and imul rex.RB stos movsb sub xor enterq int3 rex.R int3 callq sbb or out in sub (bad) je insb cwtl mov test rex.WRX jbe sub rex.WB (bad) push xchg out loopne jge fdivs rex.RB rex.WB ds shr out rex.WB sub pop push (bad) pop xchg callq movsb xchg rex.WRX push fimull rex.WXB rex.XB (bad) pop rex.W rex.X rex.X rex.WB rex.RXB (bad) lret pushq cmp rex.WB rex.WXB rex.RXB cmpsl xor test rcll jb jmp decl insb (bad) movabs push (bad) mov mov sub or int3 and adc jge retq retq rex.X js mov push rex.WB (bad) xlat lret fxch lods mov and sub jmpq sub cwtl cmp test (bad) (bad) rex.WB js imul retq add jno fwait pop mov add cmpsl cmp sbb cmp rex.WRB rex.WB loopne packuswb jns (bad) hlt xor pop and sub cli (bad) sahf (bad) stc rex.XB xchg jo lahf add je nop cmp scas rex.WB test sbb (bad) movabs xchg mov (bad) bnd lods popfq loop ss retq rex mov xchg and out cmpsb sub (bad) jg rcrl lods rex.WRB sahf sub in pushq movabs xor test xchg mov or rex.RXB rex.WB rex.RX rex.WXB cmp cmp xor and js flds mov fsubrl test and (bad) (bad) rex.WRXB sbbl rex.WR test and (bad) (bad) sub jae xor jno iret add pop (bad) movabs rex.WB lahf sbb rex.WXB pop movsb rex.WB repnz orb xor pop rex.XB test (bad) rex.WB loop rcrb adc pushfq lahf hlt lods cmp rex.WB scas roll jg mov pop or (bad) adc lea mov (bad) cmp in sub xchg fstl mov rex.WXB pushfq loope mov out fild fbstp sub and rex.WB cs sbb rex.R sbb sahf rex.WRX (bad) movabs imul cmpsb (bad) in rex.WB outsl push mov lea jne imul cmp jne xchg sub rex.R rex.WRXB pop out enterq push (bad) cwtl movsl es xchg xchg addr32 rex.XB (bad) mov cld repnz sbb rex.WX rex.WB adc xchg jbe fwait (bad) sub pop movabs (bad) pop movabs lods xacquire add test rclb pop and sbb stc push mov movsb iret test sub push xchg xchg cmp imul jmpq rex.XB xchg or xchg movabs shr add enterq insb (bad) pop or xchg loope cwtl pop sahf test mov je fsub (bad) jmpq (bad) movsb repz (bad) gs imul jmpq adc outsb or pushfq rex.B sub (bad) negl int3 es test and pushq xchg addl sarl icebp sbb sub jnp pushq jle cmp in movabs (bad) repnz rex.WB rex.WRX (bad) sub (bad) imul pop ss out adc lret mov int add adc sub stc cwtl pop movabs or rex.WRX and sub adc xchg lods sbb rex.WB cmpsb rex.X pop stos fisttpll rex.R rex.RXB mov cmp loop add xchg test rex.WB mov int add mov fwait sub (bad) (bad) add (bad) loope rorb rex.RXB adc (bad) jmp jno xchg fsubrs cmp jae mov xchg (bad) jle xchg test repz movslq repnz mul scas out enterq add movsl fs fldcw rcrl in decl ss and je jnp (bad) jb movslq mov or leaveq jg enterq pushq jrcxz mov movabs cmp xlat mov and or (bad) cmpl icebp cli jno (bad) mov rex.WXB enterq (bad) cld mov rex.RX data16 xlat mov int3 xchg rex.RXB enterq or movabs mov (bad) add jno in sub (bad) cmp cmp jle rex.WX retq callq test movslq rex.WRXB pushfq and insb mov jle adc callq pop stos mov fsts pop lret or out sbb and mov rex.RB rol movabs rex ds sbbl rcr sub xor clc lods int3 shrl mov sti fidiv movabs mov pop rep fnsave fiadd addr32 and (bad) cmpsl fwait jno out outsl cwtl outsb fsubrs adc or cli ds pop jb loope jb push cltd scas clc lret test push jne (bad) sub test or js pop xchg je ja push xor scas mov js cli scas mov rex.WRB addr32 sub jp negw mov int push and cvtdq2ps (bad) movsl out rex.WB insl (bad) js cmp icebp iret rex rex.WB mov fildl loope sub xchg push rex.X or psubsb and lea and sub mov add mov pop and in sub rex.WB add out callq cwtl loope xchg pop xor pushq jo and in roll mov pushq add mov rex.WXB (bad) push rex.WX callq and addr32 rex.XB in add rex.WB ss adc mov (bad) xchg test movabs mov cltd lahf (bad) jp rex.WB cmpsb rex.WX (bad) mov ds mov icebp rex.WRX rex.WB sahf rex.B rex.WB xchg sarb loope push sbb addl add (bad) (bad) fnstenv jl (bad) movsl xor (bad) mov rex.WRB shr nop (bad) mov or push jo out rex.WB push icebp mov shr fisttpll pop mov std cld out pop movsl xchg fadds rex.WXB mov cmpsb fbstp (bad) mov sub out (bad) int sub rex.WB movabs xchg push movabs rex.WRXB repz jno rex.WRB cmp lahf jle sti sbb shr mov fisttpll rex.WXB mov pop test test sub xchg movabs adc mov (bad) iret or mov xchg add fmuls jbe adc and rcll mov hlt mov (bad) rex.WB test xchg movabs loopne js xchg push pop mov (bad) movabs push and not movabs mov push or jo incl xor nop stos movabs sub or jg mov push push (bad) push rex.RB fwait mov xchg (bad) jle addl (bad) mov sbb cmpl jo push lods insl (bad) int stc (bad) (bad) xor xchg imul lock shlq in cli pop (bad) xchg rex.WB and stos lea pushq sbb cmp mov sub jo mov test xchg mov xor rex.WXB rex.X callq rex.WRX in cmc rex.XB jns mov (bad) xchg retq push cmc jo enterq sarl add pushq mov scas callq push and rex.WRX imul divl xor rclb gs mov shrl xchg shrb rex.W enterq std fisttpl xchg stc mov popfq sub lods fimul rex.XB jge push mov mov mov push fwait rex.WX lahf scas cmpsb pop jrcxz push data16 rex.XB in (bad) sbb int3 out sub mov pushfq adc outsb mov addr32 sbb push rcl sub (bad) (bad) mov sub jo outsb sbb (bad) lock xor pop in nop insl shlb sub pushfq popfq rex.XB pop (bad) insl callq fcmovnb pop movsl insb rex.RB (bad) sbb movabs jo enterq cli rex.RXB jns and push xchg rex.WB pop or rex.WB mov and rex.WB and push scas push mov mov xor rex.WB push imul sub xlat rex.WXB rex.WRB (bad) jo std gs (bad) int3 jnp,pt mov xchg rex.WX mov sub adc sub rex.WR icebp xor (bad) addr32 ja and rex.WB ss sub pop (bad) sbb fs fnsave rex.WB movsl rex.WXB pop or (bad) test pop mov xchg pop push insb smsw or pop cmp xchg sub mov addr32 sbb icebp (bad) rex.WX cmp (bad) rcll outsb cwtl je ror test sbb rex.RX pop xchg (bad) fcmovu pushq imul fidivr and rex.RB rex.WR or sar rex.WB movabs rex.WRX in rorl rolb cwtl mov mov sbbl cmp idivb rex.WB add xchg mov popfq adc (bad) (bad) je xchg scas mov jmpq push rex.B out jns movsl iret cmp stos rex.B pop pushq outsb xor movabs cmc (bad) sub sub (bad) and jnp pop rex.WB lea stos (bad) mov (bad) mov (bad) push rex.WB ja mov sbb stos movsb cmp sbb fs adc lret insb xor rex.X cmp lcall fst push jmpq movabs fisubr mov jne mov jne addl clc (bad) adc mov sbb or or (bad) push and xchg sbb fisub mov orl (bad) xor in in ja cmc data16 xor testq test sub (bad) rex.WB imul gs cmp push xchg retq rcll nop (bad) in callq loop data16 fnstsw test xor movsl callq fcmovnbe out cli fst rex.WB xorl insb jne retq (bad) popfq rex.WB mov xor rex.WB rex.W rex.XB (bad) jle adc rex.WB (bad) mov jno jp jmpq rex.WRX fistl and mov rex.WB (bad) test pushq and notl rolb callq fwait mov cltd xor xchg lgs (bad) add (bad) push movabs lret sub rex.WRXB or push mov lret cmpsl xchg and cmp xchg sub movsl mov xor lret (bad) rex.WXB vpunpcklqdq rex.RX addr32 (bad) rex.WX stos mov xchg movslq jp pushq push (bad) pop (bad) jns movabs ss flds xchg xor mov jbe (bad) movsb movabs outsb pushq (bad) rex.WXB pop (bad) fcomp clc scas jo in loope lret lret push rcl rex.B or popfq roll mov or and enterq pop pop (bad) rex.RX or (bad) pop jns mov (bad) movslq movabs jo (bad) js cli cmp (bad) int pushq xchg rex.WB movsb (bad) and jp (bad) outsb test push fwait push rex.WB fs adc jb lret (bad) mov push and xchg pop out (bad) (bad) out rex.WB shl bnd std sub cwtl rex.WXB add mov xchg clc (bad) rex.WRXB cmpsl rex.WB lock pushq pushq movabs rorl sbbl push (bad) mov sbb movabs cmp rex.WB jmpq subl add pop rex.WB mov jnp (bad) mov pop (bad) or rex.W (bad) or in stos rex.WRB rex.WB adc sbb addr32 retq xchg and rex.WXB cld adc out sub (bad) (bad) (bad) (bad) mov out and sbb clc retq cmp and adcl je cli in and xchg push and rex.X (bad) pop jbe cltd sbb (bad) repnz cmovno es outsb (bad) ja rex.WB (bad) retq cltd shrl rex.WB rex.W repz rex.R callq movabs mov mov add fmuls sub (bad) insb add or stc pop and fstps add jg fwait (bad) fs xchg sahf add mov xor rex.WB mov imul mov rex.WB (bad) or xchg cmp cmpl add (bad) test jo stos lea test mov hlt rex.WRX in sbb pushq jrcxz rex.WB (bad) push sbb rex.WB addr32 sub add (bad) jae xor test push cwtl push xchg (bad) add mov and pushq jp rex.WRB fwait sbb sbb test pop add or jns cld fimull xchg leaveq ljmp data16 mov callq sub pushfq (bad) push mov rex.WB addr32 (bad) pushq mov in mov rorb xor (bad) ficom cltd scas (bad) pop rex.RB test pop insl (bad) rex.WR adc mov movslq jmpq rex.WRB xchg retq sbb and out repz int3 jge mov jp stos (bad) rex.WRB sub adc lods sub out mov imul rclb (bad) sub jne (bad) (bad) sbb fldt jmpq lods jp mov movabs stos or pushfq rex.R sti rex.W shrb ds fadd jo out rex.WR xchg xor pushfq jbe xor or sub out callq out mov ja jp mov hlt movabs leaveq (bad) sub xchg cmovns pushq rex.WR sub cmp rex.WX pop sarb out push out lret scas rex.W sbb cmc icebp repnz cmp insl std rex.X addr32 roll clc and fildl sub movsb notl or add (bad) rex.X outsb (bad) mov mov mov int3 outsb rex.WRXB imul icebp push rex.WB and outsb cmp pop jno sbb jge xor sub sahf in xor rex.WRB rcll js pop sar sahf ja lret scas and es (bad) mov sbb xchg jns out shll or mov (bad) loope pop sub mov cmc add stos pop push sbb fiadd lahf rex.RXB jnp cmc pop (bad) cmp rex.WB mov rex.WR imul rex.WX mov sti in pop rex.WRB mov xor (bad) xor pop je (bad) jl pslld lods sub int3 imulb retq int test test and lret xor xchg in scas fsubr test and xor xchg out orl (bad) in out sub sbb add (bad) rex addr32 rex.XB push sbb sti jp,pn xchg mov nop jg rex.WB out retq fldt rex.WRX rex.WB rex.RB rex.WXB rex.WB movslq or (bad) jmpq rex.WB rex.WR rolb orl cmp mov cmp rex.WXB notl mov jp rex.WB and clc sbb pushq roll mov fs mov pop xchg test sbb lea adc cwtl push pop fwait (bad) cmp outsl mov lret pop rex.WRB rex.RXB rex.WB rex.B rex.R rex.WR xlat loopne sub lock (bad) lods sbb movslq jl jmpq rex.WB (bad) test jne (bad) int push hlt (bad) cmp rorb adc pop out xchg rex.XB mov pushq (bad) test sbb out sbb test sbb rorl pushq or test xor idiv int3 (bad) or mov mov andb out notb fxrstor mov pushq mov fdiv adc out add lods mov fldt (bad) adc cmp lods jno rex.WRX ja mov cmp mov lret test test xlat mov sub out mov push jle xchg pop cld out sarb cli mov mov jnp xchg mov cmpsl mov sub cmpsb mov clc mov push leaveq stos mov outsb fiadd movsl sub (bad) push pop sub cli cmp jnp or xor xchg fcomps std (bad) sub mov stos sub mov sti lods mov mov (bad) rex rex.RX rex.R rcrl imul or sub movslq sub rex.RX adc rex.X rex.WR cltd or xchg mov rex.RX lahf mov fcoms in retq jmp jbe rex rex.WX imul shrb icebp adc inc rex.WB rex.WRXB pushfq callq (bad) lock fsubr mov jno movsl (bad) jnp jno lahf (bad) push hlt cmp add fcmovnbe jrcxz mov cs (bad) es push pop imul lret rex.WB rex.RXB iret (bad) rex.WB fcomip (bad) or push rex.WR or add rex.XB sub sbb rex.WRXB rex.WB rex.RB add movabs (bad) std add stos add push scas (bad) (bad) rex.WRXB lods orb mov sbb or cmpsl icebp lret cli jo (bad) sbb nop (bad) lea sarb xchg xor rex.WB stos loop push adc rex.RX jrcxz mov jno notl xchg sbb fmull xchg fisttpll nop cmpsb retq sahf ficompl retq outsb sub xorl sub xchg jbe addr32 mov push (bad) loop rcl rex cwtl callq adc ja stc and rex.WXB sub rex.WXB in and fsubs (bad) test rex.WB andb sub adc out adc orl callq test shr test cmpsl or callq sub and out jns mov mov (bad) mov or loope add fildl rclb adc shll sti sub addr32 cld rorb jp (bad) lret sub js jae xchg sbb (bad) shrl xchg or mov sub loop pop xor rex.WX xchg sbb push mov (bad) jnp mov cmp sub mov rex.WB jno push movabs and iret sub ss out rex.WRX adc xor add (bad) or lret push shr mov rex.WB cmp (bad) pop rex.RX and (bad) std roll rex.WR mov pop rex.WB adc fisttpll (bad) fcoms (bad) sub sqrtps jle rex.WRB fild rex push mov or cltd in rex test callq mov push (bad) or retq scas cmpsl fcmovb jo leaveq cmc pushq js rex.XB rex.WXB jmp xchg sub pop rex.WB jg out push jp pop repnz rex.WXB xchg rex.R sbb shlq in (bad) xor jnp loope mov sub es adc (bad) cli lret pushq pop rex.WB addl sub lret retq xorb (bad) xchg mov mov and cmp std retq push loop rex.WB mov rex.X rex.WB jnp sahf (bad) jbe rex.WB xor (bad) lcall sub divb rex.WXB pop xor mov (bad) xor callq je mov insl jp rex.WRB rex.WRX wbinvd cmp push rex.B rex.X sbb addl (bad) fadd push jl pop shrq (bad) scas leaveq (bad) int sub fs rex.RXB int3 int3 roll rorl movabs adc rex.WX xchg sub add callq pop fiadd imul mov sub cs iret xchg jb pop mov xchg pop and mov and cltd (bad) push cmp (bad) sbb test or (bad) int3 jle pop shrb and sub mov push test rex.WRX in (bad) (bad) test out and int3 sbb rcrl push (bad) cmp (bad) xchg rex.WXB rex.WRB icebp std callq rex.WB test jb (bad) movsl pop in (bad) shrb sbb jrcxz mov sub rex.WR jg sbb repnz je sbb popfq test mov add cli mov or movabs (bad) rex.WB fmul sbb mov mov test pop pop enterq adc rex.WRX push push (bad) sbb out test incb (bad) es lea lret rex.RB rex.WX rex.R cmpsb adc add jmpq jo xchg ss lret rex.WRXB sub adc add push movsb adc jns push push xchg add or sbb pop and (bad) mov (bad) insl rex rex.WRB and (bad) test sub sub rex.RX pop sti or sub xchg adc outsl in rex.WR lods loope gs icebp rex.B mov cmc mov rex.R jne cmp mov fucomp push sbb rex.WXB (bad) fwait (bad) pushq (bad) rcrb (bad) scas (bad) mov retq cltd out leaveq out fs mov jrcxz and add fistp lret adc rex int3 rex.WB callq jmp and (bad) cmp movsl cmp rex.WB ss rex.WRX outsb jmpq ja sbb fwait sahf rex.RB rex pop movabs rcrb rex.WB or cld add loop neg push sub cli mov push imul mov sub lret flds (bad) cwtl adcl xchg sub cmp sbb (bad) lss adc jno cli std (bad) push push rex.WB or mov rex.RB psubsb sbb (bad) sbbl mov ss (bad) (bad) test (bad) push rex.XB gs sub fldl or rex.WB mov enterq xchg push in jge push (bad) or movsl pop rex.WRX or xor mov push cmp fisub sbbl and in add (bad) (bad) xchg hlt sahf cwtl pop cmpsl test shr (bad) sub push pop cmp xchg rex.R xchg fisttpll lahf mov rex.WB repz sub cli sbb xchg rex.RB adc int (bad) sbbl shlb cli rex.WRX jb popfq (bad) add jno fucom add pop stos gs add and test sahf (bad) mov mov mov mov mov mov (bad) push sub movsb sbb sub imul mov pop mov xlat lahf lea int xor xchg callq stos or cwtl sbb out (bad) or push xchg popfq rcr outsl xchg or jnp xchg rex.WRXB outsl out add (bad) mov lea lods je andl in xor (bad) cmpb mov xchg rex.RXB or rex.XB (bad) out rex.WXB lret xchg gs sub enterq sarb iret clc adc lret or jne adc jbe adc test (bad) rex.WB add cld mov and adc shrb sub xor fcoms xchg (bad) sbb or flds rex.WB rex.XB loope fisub or (bad) rex.WB pop rex.WX pushq rex.XB stc (bad) in cmp movslq mov rex.X out mov rex.WB push (bad) jne (bad) mov jl sbb mov mov fucomp test icebp push push mov push rex.WB and and rex.WX insl xchg mov mov cmpsb fldl xchg test sub xchg sarb (bad) mov addr32 add push jne adc cmp (bad) (bad) lret jge (bad) jl sub or ss mov jno (bad) (bad) cmp lret std or cltd rex.WRB stc sub (bad) jne mov int3 jmpq mov adc xlat or add cwtl lock notb mov push cmp sti out fisubrl movsl pop xchg (bad) rex.WRX add test imulb rex.WR adc iret jle outsb leaveq fcmovnu ss cmp cltd jg int3 orb (bad) retq and mov rex.RX sti sbb mov xchg andl rex.W movabs out movslq mov callq push insb cmp (bad) rolb add adc rcpps leaveq mov sbb movabs fisub push jrcxz lods (bad) fadd push callq lret (bad) mov pop add xchg test jne mov cmc sub callq xor loopne adc out (bad) stos or cmpsl sahf mov cwtl sub mov loope insl (bad) fisttp sbb pop xor cmp cmpsb adc fsubrl jle (bad) leaveq fldenv nop sbb movabs xchg (bad) xor add test movslq orb (bad) xor fwait push (bad) pop and out push (bad) incl data16 stos movsl mov stos mov popfq push xchg jmp jbe cmp (bad) (bad) mov xor fcomps xchg push xchg mov sub rex.WRB rex.RXB push rex.XB cmpsl nop rex.WR rex.RB mov test adc sbb rex.WX sbb sub cmpsb mov or out lret rex.WRB rex.RX rex.B rex and cwtl stos pushq je pop jge mov jbe push pop hlt mov pushq add je rex.RB rex.XB add (bad) mov (bad) xchg or or and jmpq rex.RX mov std paddw idivl and fdivl nop rorb sub mov sub or jl sbb loope int (bad) in (bad) (bad) mov and addr32 lods (bad) or cmpsl rex.W lret rex.WXB (bad) mov test stos test adc rex.WRX mov sub int push movsb lahf mov cmp and or sbb (bad) add (bad) push add in cltd xchg insl or int3 xor and jne and stc (bad) cmp leaveq pushfq jb shll adc mov pushq (bad) push mov callq rex.XB and (bad) pop fdivrs push mov (bad) xor fs in enterq cmc cmp je rex.RB cmp movsl push jle enterq xchg add sbb mov mov and mov mov (bad) ja lret xchg mov sub xchg jmpq sub movb adc mov shl push movabs rcll cli cmpsb enterq adc sbb out mov movabs pop or (bad) icebp and add repnz sub test sub mov mov adc ficompl rex.RXB push (bad) jno movabs (bad) sti stos movabs cmpsl addr32 add scas jrcxz movsl int3 pop out xor jg hlt xchg (bad) leaveq and rex.R rex.RX out loopne rex.WX lock adc lock leaveq (bad) (bad) add movabs jno (bad) rex.WRB rex.RB enterq (bad) movabs sbb pop cmp rex.XB insb xor movabs jmp adc int xor push pushq ja xor xchg xor pushq jo stos mov add mov adc sub or rex.WRB fs div (bad) cmp pop movsb rex.RB retq rex.XB rep adc sub rex.WX or xor mov fmul rex.X rex.WRB pushfq (bad) out or icebp rex.WX pop mov nop (bad) pushq cmpsl sarl lods pushfq int adc movabs rex.XB cli nop movabs (bad) scas sbb hlt imul fld rex.X loop jb ss push or jbe test or and jle mov jne rcrb xchg rex.RB pop sar orl rcl add xchg callq es (bad) je lods stos rex.WB sbb push rex.WB (bad) in enterq out loop adc outsb fs jrcxz (bad) rex.WB pop push or jae outsb or sbb movslq rex.WB fs insl mov int3 rex.WB mov jne rex.RX movslq pop repz (bad) adc scas fs or jnp pushq in mov sub pop rex lods scas int3 lock rex.WB (bad) gs ss jns xchg sbb enterq pop lret rex.WXB ss xor jg movabs lods and xchg (bad) cmp outsl push test pushfq scas rex.WXB push mov loopne (bad) (bad) rex.WB rex.WRB movslq pushq adcl rex.R xchg push mov pop movabs cmp push stos test mov (bad) and and rex.B retq jne jb int movb shr (bad) xor rex.WB enterq retq cmc jbe mov xchg popfq imul in rorb nop sbb test movabs int rex.WRX sub (bad) jmpq and sbb rex.WB jge outsl jbe test cs mov (bad) lret rex.WB rex.WXB rex.RB pop mov (bad) add rex.XB jns rex.WRXB sub xor mov (bad) jle (bad) push jrcxz,pt (bad) fldl fdivrp (bad) (bad) rex.WB mov enterq movabs or hlt xchg pop sub std mov rex.RXB mov popfq mov ffree shlb rex.WB mov mov (bad) rex.WRXB rex.WX repz scas in or rex.W jmp and xchg and mov fs push movsl rex.WB (bad) jno cmpsb sti rol pop jl xor (bad) rex.X scas and pop push movabs sbb sub mov (bad) popfq fistpl (bad) cld pop xor (bad) rex.WB push jns xlat movabs es cmp movabs mov pushfq loope add jg cmp adc lods cld jp movabs jmpq ficom xor adc rex.WB cltd rex.WR movsl js push pushq jo mov jmpq (bad) out (bad) (bad) pop rex.RXB gs jnp pushq and xchg fnstsw (bad) rex.WB fcompl or xchg push (bad) fmuls fwait jle (bad) test cmp (bad) (bad) sti rcl rex.WB mov sbb (bad) scas test lock pop lods cmp imul clc rex.WB mov jns loopne rex.W rex.RX and je sub pop sahf movabs nop jl (bad) add (bad) sub xchg addl xor imul outsb loopne push adcl rex.WRB in gs pushq xor rex (bad) and test mov (bad) lret push mov test in roll (bad) (bad) rex.WR nop rex.WB movabs mov (bad) sti rex.WB ds or mov (bad) rex.WB or jl xor (bad) test sbb xchg callq pop addr32 (bad) and lret cmp adc enterq jno pop xchg addr32 mov mov pop (bad) nop rex.RXB callq sbb pop sbb jnp cli movsb outsl mov or adc rex.WRX rex.RXB mov cmp loope sub sub mov push (bad) add push int3 test or push fmuls mov movabs lods (bad) cwtl fdiv rex.RX push stos rex.XB or (bad) cmp push push sti mov (bad) xchg (bad) popfq pop insl pop test mov data16 sub leaveq xchg rex.WB pop sbb pushq pop jge clc clc xor jae rex.WRXB sbb test or jnp rex.WX rex.WB (bad) mov or xchg push movsb fnstcw test pushfq (bad) nop pop add (bad) (bad) sbbb and jnp sub enterq xor rex.WRB mov xor imul fstps es rex.WB rex.WX add pushq push pop adc (bad) xor (bad) lret xchg and addr32 pushq leaveq int3 out xchg fwait rex.WB pop (bad) push mov frstor add rorb loope xchg pushq movabs add mov repnz nop push cmc movsb rex.R mov stc mov (bad) push mov (bad) mov sbb retq sub or jg movsl movabs mov (bad) or cli rex.WB mov fisttpl (bad) (bad) (bad) mov push pop movabs popfq jb testq cltd or ror pop data16 sub mov sub add (bad) and jnp xor sub in rex.WR movsb pushq pop outsl rex.WB scas in retq movsl xchg or or add retq xorb je in pop mov mov sub cmp rex.WB jne mov cld fldenv mov rex.WRXB pop mov sub shr rex.WB sub xor lods test idivb jl mov cmp and movsl fsubr lahf lret sub test rex.WB (bad) (bad) xor rex.WB sbb or push cmc rex.RX jmpq repnz mov callq cld cmp push xor hlt (bad) shr jge pushq mov adc int cli out or rex.WRXB rex.RX rex.WB adcl sub gs callq (bad) (bad) fcmove imul movsb bndldx retq cmp lahf sub ror sub mov andl rex.WB add jns jae push rex.RX (bad) and push sbb iret (bad) enterq (bad) cwtl fisub push (bad) fdivs and cmpsb test rex.WXB rorl (bad) pop and test mov xchg rex.WRB cwtl scas movabs cmpsb add rex.WRB callq cmp or outsl mov rex.WX cmpsl test in push jno mov movabs push cmc jne push ja cmp mov jge mov test mul rex.RX pop movabs xchg movb or repz mov push rex.RXB xor or cmp stos repz mov imul (bad) enterq (bad) (bad) in stos pushq rex.X rex.RX jge shl mov imul (bad) fwait lea (bad) in rex.WXB fistpl (bad) rex.WR cmp xor mov mov movabs xorl movslq ja or pop cmpsl mov xchg jp pop xlat (bad) or clc mov xchg push sbb es jbe rex orl pushq hlt xchg and mov out movsb loopne mov enterq test mov loopne (bad) pop cltd (bad) xchg jnp and push mov xchg or stos std or iret cmpsl stos sti add or jmpq xor mov push (bad) es jnp (bad) cwtl (bad) pop xchg jb sub (bad) std popfq mov xlat test mov (bad) int icebp stc pushq mov hlt test mov xor xor rolb rex.WR and fs data16 loop pushq mov imul (bad) adc pminsw mov rex.WXB stos test add sar xchg (bad) or movabs cmp shrb imul out fldcw (bad) xor sbb imul lods jg adc mul mov rex.WR (bad) sbb (bad) rex.WR or rex.WRB test jmp jge cld jne sbb mov stos push (bad) (bad) mov enterq mov rcrl pop sahf sub sbb (bad) out sbb add pushq xor pop imul rex.WXB lea cltd push xchg leaveq fstps cwtl test fs cmpsb sub test rex.W iret adc push scas fs test mov add rex.WR (bad) shlb repz fucomi rex.RXB (bad) int pushq repnz and repz out or add (bad) pop push lods scas callq repz pop cmp and scas sub in xor rex.WX sarb or rex.WRXB insb xchg insl movabs fsubrl int3 xchg lea outsb imul rex.WB int xchg rex.RXB sbb loope addr32 rex.WB ds rex (bad) mov xchg mov incl out xlat rex.WB pushfq mov push fwait cmp rex.WX xchg retw callq and xchg stos stos (bad) hlt out mov mov pop subb add dec insb movabs xchg xchg xchg pop add pop or sub push lods push jmp mov rcr pushq sahf rex.WX cmp pop adc andl sub movsb (bad) fwait or jae add rclb (bad) (bad) and adc movslq or pop mov stos ds and (bad) (bad) cmp out movabs repnz fidivrl push (bad) adc fisttpll movabs jo (bad) adc or xchg or mov callq iret mov rex.WB xor (bad) outsl (bad) repz pop pop in (bad) xchg jrcxz push cmp mov or ds mov movslq loope sbb sti sbb push push shlb sti xchg (bad) test cs mov jae jne mov (bad) push and jno shrl mov sbb rex.WR fs cmp movabs rex.WRXB hlt rex.R (bad) sbb (bad) fcomps (bad) lret sbb sbb jo add mov sub xchg sbb (bad) movabs (bad) repz rex.XB sbb (bad) jp mov xchg cmp and or shrl add rex.WRXB imul rex.WB (bad) notl or rex.WB icebp mov sete (bad) int mov rex.WB (bad) lock mov jge rex.WB (bad) mov mov rex.WB xchg (bad) je cmp loop repz (bad) push cmp add (bad) (bad) lods add sbb retq jbe jle movabs sub cmpsb js rex.RXB (bad) mov sub pushfq rex.WX (bad) icebp subl mov in insl sub (bad) sbb cmp pop out fisttpll hlt idivb rcrb add jle outsl pop rex.WXB (bad) (bad) jns fsubs rcll sub callq rex.WB loop rex.RX push rcrl mov push (bad) jns rex.WB int3 push (bad) push rex.WX pushfq test jp,pt rex.WB rex.WRB mov in scas push and mull idiv lock mov je mov xor repnz push jge cmpsb mov push loope movabs out (bad) rex.R mov add in xlat xchg movslq (bad) (bad) insb rex.XB shr in (bad) nop xlat sbb leaveq test rex.WR rex.XB rex.WB (bad) jno in mov lret lock rex.RB rex.WRX rex.RX clc sub mov (bad) jns xor or stc ss xor loop jl (bad) mov (bad) and incl lret (bad) pop out insl rex.WB fist lret fwait (bad) mov mov scas fnstcw rex.RX pop add retq cmpsl fcompl adc xchg outsl movsl shl and scas and movabs ss jge xchg fwait mov callq add movslq in or subl push loop mov mov lods lret sbb mov (bad) stos testb rex.WB std (bad) jge cmpb shrl rex.WX add add mov xchg jne scas jo rex.B mov fldcw rex.R js mov scas insl movabs (bad) test rolb movsl pop retq incl rex.WB pop pop sub sub push (bad) in xor xchg outsb push jae cmpl insl xchg (bad) rex.XB rolb jns callq sbb (bad) add rex.WB lret xchg mov rex.B rex.WRB (bad) test out cmp movabs push stos sbb (bad) fstpt fisubrl frstor pushfq stos lea rex.WB out (bad) (bad) rex.WRB rex.WB (bad) icebp xchg ss rcrl pop mov shrl test cmp pop pop add xchg movsb rex.WRX and push movabs movabs out sbb outsl xchg pushq mov or jbe (bad) lods es add shrb sub pop pop ja pop push xlat (bad) (bad) pop clc fdivr pop sahf (bad) push (bad) mov rex.WB callq rex.WR icebp sub pushq lods pushq push xchg pop (bad) out loope fwait rex.WXB cmp mov cmp fsubrl pop rex.WRB lret (bad) rex.WB sub adc loope hlt mov (bad) push mov rex jp callq loop push xor xchg out shrb or leaveq (bad) loopne push decb out fnstsw movabs push (bad) fdivr pop lock pop movabs and out or mov rex.WB cmp sub xchg add jo test in callq cs jnp cwtl jb rex.WB sbb (bad) (bad) popfq cmpsl movabs je (bad) mov cmovns int fcompl retq out pushq rex.WRX rex.XB and sahf decb rex.RXB int fstl xlat mov (bad) in mov rex.WB mov in or adc or sbb pop and pop rex.RXB clc rex.WB sbb adc jge xor icebp cmp callq mov push out sbb adc adc out movabs (bad) iret (bad) (bad) pop outsb mov callq (bad) and jo push add loope mov rex.RX (bad) mov mov rex.WRX and (bad) rex.WB jrcxz rex.WXB rex.WRXB ss lret cmpb push fcoms (bad) xor (bad) sbb rex.RX (bad) sub sub adcl (bad) pop loop callq rex.WRB rex.WXB (bad) rex.RB enterq imul stos xchg (bad) movslq mov (bad) pop int3 rex.B sbb (bad) sbb and std (bad) popfq and mov adcl push add rex.WRX movslq (bad) (bad) nop adc push sbb int cs rex.WRB sub push rex.WB sub mov sbbl rex.X (bad) (bad) rex.WB xor callq sub retq cs add mov loopne out rex.XB cmp insl (bad) sbbl xlat hlt rex.WB rex.W rclb pop mov jmpq fdivl rex.WRB rex.RXB sub outsb stc (bad) pop push gs movabs (bad) (bad) pop pop sub pop push sbb (bad) movabs (bad) (bad) vpsrlq and or mov mov scas cmp cmpsb mov rex.WB rex.WRB xlat (bad) push (bad) int3 es sub rex.WB sub or mov int push rex.WB retq ljmp addr32 sbb movsb rex.WB jmp xor stos pushfq rex.W rex.WB add (bad) xor lods cmc (bad) (bad) rex.WRXB rex.WB cmp push jmp outsl rex.WRX rex.WB mov ficom (bad) adc loopne rex.WB rex.RX mov test out and push callq mov scas test pushq movsl push fs add (bad) mov sub xor out cmp mov rex.XB movabs movabs (bad) adc rex.X rex.WRXB test (bad) mov jns pop (bad) loopne outsb jb fnstsw movsl xchg movslq iret mov mov mov sbb pop (bad) xchg mov cli test test rex.WB cmpsl sbb rex.WB fsubrs rex.RX add rex.WXB xor test pop xchg int3 out enterq xchg lock shl sub (bad) mov jns cmc nop ss movslq cmp rex.WB fist rex.WR movsb xor popfq fisttpl sub add add fadd push (bad) mov (bad) out addr32 jg sub adc repnz (bad) push xchg sub movsb sbb rex.RXB (bad) rorl and mov push and in rex.X lods mov lahf rex.XB nop push (bad) fisubl outsb rex.WB jae cli pop movsb (bad) sub lahf pop rex.WB or scas (bad) add cmp loope xchg pop retq add stc rex.WB push scas mov sbb pop jmpq pushq stos jl push fucom fwait pop rex.XB loop cmp rex.WRB rex hlt push xor int sbbl or orb rex.R pushq in cmp lret mov jns push xor rex.WRB cmp sbb (bad) pop rex.WRXB lock push rex.RB (bad) vcvttsd2si gs sbb and sub adc push roll mov sbb (bad) cmpsb movabs je gs adc in rex sub mov addr32 cli mov imul xchg (bad) jge push pushfq xchg xor mov pop adc (bad) fisttpl jmpq xor push adc rex.WR mov nop rorb test pop fisttpll pop icebp mov xchg jmp rex.RX pushq test adc sahf jo sahf cmc enterq iret in icebp sbb xchg sbb pop add jmpq jge add movabs movsb sarl icebp rex.WX rex.B (bad) mov mov or pop (bad) test outsb cmp sbb (bad) (bad) (bad) pop movb rex.WB mov sub (bad) out (bad) rex.WB je cmp cli fs rex.WB adc mov rex.WB test (bad) mov and mov cmp (bad) leaveq or rex.WRXB pushq std rex.RXB xchg (bad) xchg lret push rex.WRXB xor negl adc sbb cs jp push xchg mov push lock test mov pushfq lahf and scas rex.WB lock xchg jb mov test pop cmp rex.WB sub test outsb icebp rex.WB lahf movabs push adc sbb pushfq in pop push (bad) mov push shrb test add or int3 sub test and jns or callq lahf leaveq push (bad) retq int fdivrl sub rex.WB (bad) and ss xor (bad) (bad) in (bad) rex.WXB rex.WB rex.WX scas or adc pushq cs je lret rex.WB icebp rex.RXB jno rorb add xlat (bad) mov mov and adc stc movsl mov (bad) add push idivb jl xorl rclq push in stc (bad) mov xor and or cwtl push lea lret (bad) jo orb lods sub sbb adc out jp (bad) int test cli (bad) sbb (bad) pushq (bad) rex.WRX rex.WB (bad) jp jae rex.WB push xchg movsl repnz rex.WB (bad) cmp mov clc and stc mov leaveq mov cmpsl or xchg jmp cli sti rex.WB movslq (bad) rex.WB rex.X (bad) js callq mov loope push (bad) xchg ds popfq ror adc lods fcmovnbe mov push adc mov loop jrcxz es rex.WRB callq in rex.WB jmpq (bad) mov cmp fildll addr32 rcll or jne cwtl xchg jge mov rex.WB mov sbb and rex.WB rex.WRXB mov xchg add rex.X rex.R loopne in mov (bad) addr32 jp lods mov sub xchg insb lretw cli push cwtl retq rex.WB add jge mov xchg rex.WX rex.WB cmp stc data16 xlat rex.WRXB movsb (bad) mov ss (bad) int mov rex.X rex.WB sub (bad) push rex.XB fs rex.WB (bad) cs out imul (bad) rex.WB fs xor rex.WB cmp jmp or mov lock shrl movslq sub in jp or data16 rex.WB insl rex.R add and push (bad) jns rex.X idivb (bad) cmp shlb or mov vmovd xor and sti push push pop rex.XB rex.WB adc (bad) add out (bad) loope movabs (bad) lret cwtl outsl pop or sbb ja pop jg movabs rorb mov lods enterq rex.WB rex.XB (bad) js sbb push xchg (bad) icebp pop es add addps nop push fwait out add push (bad) callq fisubr mov movabs and cmp sbb and rex.WB adc (bad) popfq mov add push add in rcr rex.WB adc (bad) std mov loope test adc in (bad) or cmpsl xchg sub rex.WB (bad) sbb callq fs and out fisttp (bad) cmp (bad) jmpq pcmpgtb test (bad) mov xor mov (bad) loope in rex.RB rex.WRXB xchg rex.WRX rex.WXB hlt pop pop or rex.XB (bad) lods xor callq mov xor xchg mov cltd rex.B rex.RXB pop fstps rex.WB jp xor out mov movabs jmp adc push jrcxz jns (bad) pop stos insb jl pop out mov test stc (bad) or rcll callq mov sbb rex.WB add rex rex.R rex.WR shrl clc iret retq pop gs cltd push push xor pop movslq and je or rex.WB lock xchg test pop pop stc mov rex.WB rex.WRB fwait out (bad) sub movsb (bad) mov fldenv (bad) insb negl cmpsl jnp (bad) pop sbb pop rex.WB in mov pushq retq in test (bad) mov sub (bad) imul ficom (bad) (bad) sbb rex.WB sti (bad) pop rex.RB adc mov xor fisttp cmp ja out retq retq or jg (bad) (bad) mov in lock (bad) push movsl and in adc rex.WRB repz xor lret loop lea mov mov (bad) fisttp adc (bad) rex.WB or (bad) ja addr32 (bad) stos enterq (bad) adc repnz mov cmpsb cmp adc movslq ss pop cmp pushq lock ror loop push loop push push icebp je xor mov xor rex.X cmp (bad) movslq rex.WB movsb xor (bad) pushq test leaveq push clc sti movabs pop loopne loopne movabs mov roll out out out xor (bad) ss fwait (bad) loop adc xchg (bad) rex.WR rex.WB ss pushq pop pop jb data16 mov mov in jo rex.WRX rex.WB adc push jmpq mov xchg rex.WX and popfq lea jbe sub rex.XB cmc rex.WB xchg mov pop adc push cld enterq (bad) or retq fmul mov test xor sub rex.RX cmp notl movsb test (bad) hlt iret pop pop pushq stc sbb (bad) (bad) fsubrl rex.X mov (bad) cld movabs callq (bad) rex.RX xor jmp es fs mov sub andl sbb and rclb mov sbb mov sti nop clc (bad) addr32 lods or pushfq repnz enterq scas sbb mov lahf loope add push pop rex.WB sub rex.RXB (bad) rex.WB (bad) repnz jmpq (bad) and add rex.WB por sub outsl lock xchg mov loope pop in sti rex.WB xchg hlt vpunpckhbw movabs adc in (bad) rex.WB in (bad) rolb sahf pop lea push mov cmp std lock nop jp rex.WB lea cmc orl rcl sbb (bad) jge cmp jae sbb or pushq popfq pop movsl adc pushq mov mov int cmp push sub (bad) rex.WRX in jrcxz pop faddl adc rex.B mov movabs xchg rex.B mov rex.RX je outsb rex.B mov out (bad) adc xor cmp mov callq (bad) cmc (bad) push insb je rex.WB rex.WR rex.WXB or test (bad) ds jne (bad) mov mov rex.WX movslq imul pushfq sarl push or retq pop sbb jrcxz cmpsl jl push sub mov mov (bad) or mov test push js and jno xor xchg rex.WB sub push nop rex.WX rex.RX pop test (bad) pop cmpsl (bad) xor jrcxz jge rex.WRXB and jae in rex.WB add rex.WXB test rex.WB push pop mov and movsb (bad) or or (bad) xor es jmpq icebp sub pushq mov fs fcoml or (bad) (bad) leaveq imul test loopne rcl es (bad) rex.RX rex.WRX lock mov (bad) adc pushq xlat in sub sahf stos jnp cmpsl (bad) and pop or cmp test mov xlat pop rcrl rex.WRB rex.WB rex.XB adc mov cmp sub (bad) in test cmpl add pop rcl mov pushq xor fs jo rex.WRB gs fbstp sub rex.WB push xor sub in adc pushq rex.WB (bad) out rex.WB scas mov push pop (bad) rex.WB lods mov rex.RX nop stos (bad) repz sub outsl mov rex.WB jae sbb rex.X rex.WB punpckldq jno cld (bad) mov and or mov fidivl or cmpsl in push hlt rex.XB sbb (bad) rex.WB test xor imul callq movabs lods rex.WB cmc cmp rorb (bad) repz and (bad) rex.WB push pop jae cld (bad) add (bad) sbb lret and pop xchg sar mov sahf rex.WB (bad) (bad) (bad) rex.WB cwtl pop (bad) mov outsb xorb xlat pop fsubl push movabs mov rex.WRB pop icebp sub (bad) mov jno addr32 pop cwtl xor imul insl push pushq jmpq ja xchg je and (bad) add sbb rex.WB push push rex.RX adc or sub insb divl rex.WB in sub mov push repnz outsb (bad) adc cltd cs jge or cmpsl and movabs popfq rex.WB add nop shr gs icebp xor pop (bad) sub (bad) scas loop (bad) fidivrl add jb xchg rex.B or vshufps xchg push scas (bad) cli sbb in rex.WB fisttpll (bad) (bad) (bad) mov mov repz (bad) data16 rex.WB lock in cltd outsl add (bad) movabs jne loopne or rex.WB rex.WR scas rex movabs adc adc test mov movabs cld (bad) fnstsw rex.WB push sbb imul cmpq fdivs (bad) rex mov jmp xchg rex.R rex.RX rex.WRB rex.WR push xor sub movabs mov sub cwtl and movsb pop lahf test mov clc scas div stos movsl pop movabs rex.WB (bad) rex.RXB lret cwtl or popfq addr32 insb ja xchg sub iret mov and or fisttpll xchg xchg pop mov or test je (bad) imul cmpsb rex.WXB (bad) and rex.B sbb rex.WB fs clc int3 jge mov (bad) adc add and mov add sbb add sahf cmp jbe (bad) cmp test add mov rex.RB pop push ljmp movsl mov mov and mov callq push rex.WB adc rorl rex.RX out cmp xchg and mov fisttpll (bad) lods mov cmp pop js test mov sbb xchg push fdivrs je imull ror gs lock retq adc or sbb test xchg (bad) in sbb (bad) rex.B out hlt lret rex.WB shll xor icebp xchg iret pop rex.WB movsb ja movabs add add rex.WB clts xchg jnp cmp adc fstpt lods sbb rex.W rex.WB (bad) and rex rex.R mov (bad) jbe adcq (bad) adc rex.B lret test sub adc (bad) mov mov imul cltd or (bad) jne stos push mov adc fwait insl rex.RX rex.WB jnp cmpsb adc shrb int rex.RX lea rex.WRB push xor rex.RXB fwait vmulpd mov mov out adc retq xor movsb rex.WX callq cmp and xchg pop sbb movabs test rex.WB pop adc rex.WRXB rex.WB pushfq test nop or pop push (bad) mov jg ljmp xchg mov rex.WB (bad) jnp cmc xchg (bad) adc frstor adc adc push and cmp and rex.X sbb xor loope jno mul cmc or (bad) xor or jb rol pop cld xor stos movabs jne adc retq (bad) stos mul iret rex rex.WRB test rex.WB mov (bad) imul hlt out adc rclb out rex.WB and rex.WB push xchg xor rex.WB movabs rex.WR rex.WXB fwait rex.RXB sbb lock or rorb add xchg xchg rex.WB gs out fwait movabs test or rex.WB loop sub (bad) test pop mov mov rorb pop movsl and and cmp (bad) (bad) (bad) sub in pop and stos rex.WB rex.WRX xchg and sub movabs cmp rex.RB (bad) mov push stos push outsb lods (bad) rex.WRXB sahf movl movabs xchg iret mov sub xor sub (bad) (bad) mov sub cmp loopne stos rolb roll rex.WRXB (bad) and fmuls cmp xchg test mov pop pushq push xchg or sti cmpsb xor in add int3 pop mov sub lods push int sub xor out in jmpq stc (bad) fst mov xchg loope mov rex.W movslq pop rol repz mov jg rex.WRXB test fistpll rex.WXB cld rex.WX in stos rex.RX cli stos (bad) mov (bad) mov clc (bad) xor (bad) lret std cltd jmpq sbb cmp out mov movsl mov adc xchg pop sub adc icebp (bad) push rex.W xor callq mov mov (bad) int3 mull mov cmp scas pop mov and (bad) xlat jp xchg pop rex.WR add jmp mov sbb rcl jl xchg (bad) push xor jle (bad) jb jrcxz lcall add sub and out clc xchg and adc sub mov mov cmc jbe test or pushq and fmul rcrb mov nop rex.WXB stos jmpq push data16 (bad) sub (bad) or mov xchg or pushfq cmp outsl fxch and (bad) out or rex.B (bad) decb jnp cmp xor jae cmpsb stc add jp and movabs or and out sahf (bad) (bad) (bad) rex rex.R in movabs in loope data16 ss sbb test push cmc std int push xor jmpq imul and movabs pop add cmp stc (bad) mov and and mov (bad) push std adc (bad) jp cs leaveq rex.WB rex.WRXB in jbe or ss mov xchg scas sub rex.WR rex.WB shl sub pushfq movabs jno cmp sub or mov rex.RB xor or addl lock jbe (bad) lret and (bad) xchg out loop mov or jge (bad) retq loopne (bad) adc add (bad) sahf ds xor cmc xchg fdivp repnz cmpsl cltd xchg lods sub pop movabs jno pushq push rex fs rex.WX mov pop adc cs fisubr xchg rex.WRB repz (bad) rex.WB cmp subl push mov mov xchg rex.WB fstps lods mov mov rex.WB pop jrcxz sub mov in sbb xchg sub mov pushq movslq fnstenv sub add cld rex.WRXB loop movabs in rorb mov push add pop mov sub mov roll and nop pop incl addl pop push jns (bad) test xchg push cwtl (bad) outsb pop add movabs add imul out pushq mov mov mov and retq sbb imulb out xchg callq xor mov callq sub (bad) xor add pop repnz rex.RXB retq pop loope neg (bad) pushq sub jrcxz adc cld jl ja (bad) jns ficompl pop xor test sub frstor mov rex.WB ss in cld rex.X jns rex.WB and xor (bad) mov rex.WB push imul (bad) cmp mov es add pop xor (bad) mov push movabs (bad) xchg jae clc scas iret mov (bad) movslq push test jmpq fimul retq mov (bad) int3 nop and mov rex.WX std insb push jbe push pushq (bad) mov es mov prefetcht2 mov add (bad) mov mov test mov rex.B cmp test test xchg (bad) mov (bad) xchg ss xlat pop xchg mov out mov or rex.WB xor cmp jne adc and (bad) sub xchg mov movsl or pushq (bad) pop fwait adc stos (bad) and rex.WB and repz or stos (bad) lret rex.RXB sahf or adc out rex.WRXB popfq xchg rex.WB cs jle jbe (bad) (bad) (bad) xchg sahf mov iret out loope or (bad) (bad) outsb (bad) fmull adc jns rex.WB fucomp and rex.WRXB fiaddl stos rex.WRX rex.WB pushfq jno movabs rex.RXB rex.WRX subq roll rex.WB (bad) (bad) in sahf push repnz jo sub sbb lods outsl sti notl loope (bad) or and jne jno mov pop rex.RB jbe out rex.RX icebp rex.WB cs insb lahf sub fsts iret imul rex.WB xor rclb or xchg (bad) mov cmp pushq (bad) pop imul pop mov rex.WB jmp callq rex.RXB std fisttpl rcl int3 rex.WX (bad) cmp jmpq (bad) rex.WB push pop ja jp sub rex.WRX ds or int test sbb pop lods rex.R addr32 jle (bad) push in rex.WRX data16 rex.WB adc (bad) (bad) pop cwtl fldcw jno adc stc mov rex.WB leaveq jbe test rex.WB xchg or and lods rex.WRX btc sub movsl sahf leaveq xlat je pop jmp rex.WB test push push outsb rex.WB (bad) loope fnop mov repz test (bad) pop or mov lods incl leaveq (bad) sbb ja mov (bad) jge pop std cmp or out (bad) add (bad) imul rex.WB lock push in rex.RXB xchg outsl jno imul popfq pop (bad) je in rorb or (bad) pushq mov mov push rex.WB mov decl mov popfq sbb rcll gs repz xchg mov movabs sub sahf xor and add pop lret sbb rex.WX xor rex.WRXB nop push retq or fs mov jne imul rex.WB mov rex.WRXB addr32 (bad) and push (bad) movsb push mov fisttpll jge rcl cmp andb push xor rex.R rex.XB or rex.WRB jne shll rcll (bad) and xchg repz xchg (bad) (bad) push jne stc pop push (bad) and or scas and rex.WRX cwtl fwait pop test mov (bad) adc roll jo jno test scas sub add leaveq (bad) notb outsl sbb jge cwtl movabs cli jno pushq rolb rex.RXB push pop mov movsb lock (bad) rex.RX rex.WRB mov movabs sti (bad) (bad) std mov jnp movslq lret jbe sub rex.WRXB xchg in mov or rex.WX xor fcmovu cmp mov lods sbb and pushfq outsb rcrl repz mov rex.WX lods xchg cmp callq fisubr pop xchg lret mov enterq xor cmp or sti iret rex.WX add pop jmp mov or rex.WB lahf sub add mov xorl (bad) mov lods jle adc xchg callq xchg icebp loope sahf sbb lods rex.WRB (bad) cmp test (bad) add rex.X outsb push jg repnz sub (bad) xchg jne add enterq fld sbb cmp sbb rex.RX in loop cli (bad) andl sub fs cmc jp cmp clc (bad) sahf movslq xchg xchg cmp mov mov std (bad) orl jl jno pop pop cmp mov lret insb or mov mov mov jns cmp movabs xor cwtl rex.WX or or mov mov pushfq and adc mov out mov (bad) xor mov test mul cmp xor pushq jo iret in repnz sbb jge xor rex.WB rex.B jb test (bad) mov and mov or xchg push loopne sbb (bad) adc jo sub jle rex.WR movsl jrcxz stos rex.WB imul jns rex.WXB orl test out gs data16 and pop xchg sub stc leaveq (bad) sbb movsl out xchg (bad) (bad) jrcxz in push retq insl or sub fs imul movsb outsb repz mov rex.WXB push movslq pop outsl mov jne lret (bad) rorb rex.WB (bad) rex.XB xchg jb lods movb insl mov mov push movabs mov xchg loopne jmpq mov or pop adc or (bad) cmp pop jmpq movabs pop outsb lret in xchg mov callq push movabs (bad) rex.WB cmp pop retq (bad) jmp xchg movsl movabs insb (bad) pop (bad) rex rex.XB sti decl loop in xchg pushfq mov pushq (bad) pop fcmovb cwtl ja rex.B rex.W mov (bad) and cmp and pop (bad) rex.WB rex.WXB (bad) fwait jo rex.WRX rex.WB sahf sub test (bad) rex.R gs imul mov push mov callq lret sub icebp out push popfq sti rex.W insb push rex.RX (bad) and je out (bad) (bad) rex.WB lock repz pushq (bad) out int push push and mov jno jrcxz cwtl insl jbe test incl sub enterq xchg rex.WRXB callq pushfq movabs (bad) rex.WRXB push in (bad) xor (bad) xchg loop lret clc jo rex.WX test out pop decb xor xchg jmp rex.WB repz test fs cli rex.RB orq jl (bad) gs sub (bad) mov pushq lahf pop mov push mov ds push test enterq rex.WB nop ss in rex.R sbb jno jbe scas (bad) sub lahf and fistpl mov movsl and sahf sub xchg pop (bad) push jae fxch pop jg pop insl pop (bad) out movslq xchg (bad) lahf rex.XB jrcxz jmp xchg or pop cmpsl test mov (bad) insb mov nop icebp retq mov hlt stc rex.B mov rex.WR rex.WB rex.RX rex.XB cmpsb movabs jp push xor lock fs push movsb jns sbb xchg push jmpq imul (bad) (bad) out cmp adc test adc (bad) pop sub sti sub out xchg push sub add (bad) and adc or cwtl (bad) fsubl xor (bad) xchg xor callq (bad) cmp movabs out mov sbb imul (bad) xor (bad) fcoms add cltd rex.RXB stc rex.XB cld xorl cmp xor je insl clc lock mov sub adc mov mov out outsb rex.WRB rex.WRX mov pushq (bad) notl (bad) rex.XB cmpsb retq sbb jmpq rorb mov add adc mov add mov pushq idiv xchg push mov rolb cmp outsb rex.RXB lahf leaveq rex.WB adc jle fisubl data16 rcll repz movabs lahf push movabs pop fs adc sbb insl (bad) leaveq rex.WB scas jb sbb jmpq jmp pop rex.WX pop rcr add (bad) insb stos stos rex.WX add (bad) ds rex.XB or movsb pop mov nop (bad) stos cli add (bad) mov mov pop adc rex.XB cwtl mov (bad) (bad) (bad) callq out (bad) retq loope mov insb (bad) xor xor and mov (bad) loopne lret (bad) adc rcr cmpq xor jmpq xor push (bad) xor frstor callq or push jne sbb movabs retq movabs (bad) jae sbb pop or (bad) (bad) xor cmp rex.WB rcr (bad) or rex.B rex.RX add sub test mov loope or push adc (bad) rex.WB in mov movabs lret lock cs rex.WRX sbb inc int hlt loopel popfq addr32 and movabs xchg mov decb int3 push loop sbb add repnz pushfq sub rex.WB es (bad) rex.WB cmp pop rcrl push leaveq xchg (bad) push rex.WB (bad) add outsb mull sub adc xchg mov sbb mov cmp out ss iret testb (bad) pop (bad) sbb enterq out test jae (bad) mov rex.B imull cmpsl callq hlt out rex.XB (bad) jb mov lret sbb rex.WB xchg cmpsb (bad) in lcall sub or iret stc lahf (bad) addr32 xchg nop and pushq (bad) xor ja iret mov rex.WR rex.WRX (bad) rex.WR (bad) or jg (bad) xor (bad) sbb (bad) repz pushq clc rex.WB loopne stos pop rex.WXB or xchg insl movabs and pop rex.WR ss rex.WB repz adc pushfq rex.W xchg rex.WB addr32 mov jne out adc or push fsubrp imul jg lret mov out movabs add ror mov rex.WB sbb rex.B retq fstpl or add punpckhbw movsb (bad) (bad) icebp cld (bad) mov pop subl test pushq loopne leaveq lock xchg enterq xchg movabs je fldcw xchg stc lods push (bad) mov outsb jb jg mov addr32 lret push iret rex.WRB out mov rex.WB loopne mov jnp shrl rex.WR cltd rex.WX and mov iret mov and callq sub cmp jae push xchg jle cmc rex.WB rex.WX rex.WB loopne cmp rex.WB adc add or rex.RXB sahf mov pushq xor (bad) pushfq adc sub stos sub xchg clc test jle add jne sbb jp adc cmp (bad) fstps xor rex.WB add (bad) jg sub stc mov rex.WRXB rex.WXB pop sarb mov jo or movabs in lods scas jrcxz xchg lock lret xor test and cmp pushq retq addr32 cmp mov fnstsw movsl cltd cmp pop mov (bad) xor add push rex.WB mov cmpsb cmpsl jae push imul rex.WB mov xchg rex.WB rex.W gs lret cwtl cltd or or movabs rex.WB movabs rex.W (bad) xchg (bad) fimull rex.WB scas lock pop or push or fsubrs rex.WB rcll sub sbb jp cmc loop or imul (bad) (bad) mov callq adc sub callq mov rex.WX or cmp pop cmp push and (bad) ds rex.WB cs pushq vmovupd loope fcoml js jbe mov (bad) and mov imul imul int pop (bad) rex.WRXB outsl (bad) sbb subb push jb movsl and (bad) stos enterq sub scas rex.WB testb jae mov stos fisttp ja cmp fwait rex.WRB mov cwtl rolq (bad) sub and push frstor rex.WB xor and xchg xchg loop mov or rex.X outsl add rclb (bad) rex xor test sbb pop (bad) sbb pushq (bad) rex.WRB bnd or out adc mov and icebp iret scas push (bad) cmp addr32 cmp icebp rex.WB xor jns mov (bad) (bad) xor int3 sub push xchg (bad) mov loop xchg adc mov rex.WB repnz xlat rex.WX test jbe cmp pushq mov lea callq out (bad) rex.WB jp cmpsl mov lock and fwait mov movabs loope stos rex.B mov xlat mov add rex.RXB shrl movsl (bad) push mov jne (bad) sub sti xchg in mov sbb or sbb mov xor mov sub movabs inc imul fsubrs clc (bad) leaveq jbe incb std mov push rcr push rex.WB movslq (bad) push scas jo je rclb add (bad) leaveq or (bad) xchg test adc mov pop (bad) adc pushfq push repz rex.WB rclb cmc rex.R rex.WB (bad) and and mov sub clc rex.WB scas xor callq mov and shrl rex.WB push fildl enterq (bad) jnp mull out (bad) (bad) rex.WB cltd sub pushq (bad) pop outsb (bad) rex.RXB rex.RB addr32 cli mov icebp rex.WB cwtl ss stc sti callq sub sahf jo test shrb nop fdivrs test rex.RB adc rex.X rex.WB iret (bad) xchg (bad) clc rex.RX (bad) add pop mov xchg (bad) (bad) sbb movabs mov adc xor pop and pop xchg movsb retq int3 rex.WB rex.WRX rex.B or in push pushq mov adc mov out jmpq movabs icebp data16 xchg test mov (bad) cmp fdiv repz sarl (bad) clc or jge (bad) adc rex.WB out lods mov (bad) pushq or mov rex.RX sbb sbb lods shr cmp (bad) rdtsc sub movabs in pushq xchg jns jp or push jl push (bad) orl enterq pop fstps jne rex.R jl lret rex.XB movabs pop outsl mov rex.WB (bad) xor cld repz pushq and add rex.WB push out ds rex.WB fs decb sbb rex.RX lahf (bad) idivl int3 pop mov loop pop rex.X fcmovbe rex.WB jae mov rcrq outsl fsub mov rorb test cmp (bad) jns loope sub cmp cmc push push (bad) addr32 cmp pop iret push and jnp fildll rex.WB xchg (bad) sbb lods jrcxz rex rclb sub fiaddl xor sbb (bad) stos mov out jnp mov movabs movsl rex.RB data16 (bad) rex.WB popfq jge je (bad) mov mov orl (bad) int3 xor sarq xchg movabs adc (bad) (bad) movslq (bad) (bad) out rex.WB pop xor rex xchg pop jbe es xchg rex.WXB (bad) cmp (bad) jnp rex.WB rex.X movabs out mov (bad) test (bad) jp rex.WB (bad) pop (bad) mov test (bad) rolb stc fidivrl out jae negl lret mov pop rex.RXB jnp mov pushq movabs stos pop (bad) (bad) jo mov adc mov shl popfq sub add int3 mov mov (bad) fldcw repnz callq cmpsl (bad) sub (bad) (bad) scas jrcxz (bad) test xchg (bad) rex.XB rex.R test jne (bad) negb movsl rex.RB lret rex.WRXB (bad) js pop or std iret (bad) mov movabs pushq sub pushq fdivs stos in sub shll cmp sub popq leaveq (bad) jmpq pop xchg xor mov out mov in jge movabs rex.R (bad) jae xchg cmpl (bad) sub (bad) push mov fwait cmp or (bad) pushq imul (bad) pop jmpq add mov push movslq (bad) (bad) lock callq xchg cs lret test (bad) movsl nop cwtl rex.WRB cmp fisubrl adc push jmp sbb rex jb fwait enterq idivq rex.WR or rex.WRXB and (bad) jno xor sbb rex.WX pop scas movabs movabs cmp rex.RXB addr32 jbe jle clc sub rex.WX (bad) movsb stc movabs pop data16 push scas adc or xchg xchg hlt jmpq xchg sbb (bad) mov adc (bad) sbb push mov (bad) lods sbb fsubl or movslq callq and xchg movabs rex.R hlt sub sub or or cld mov in sbb pop (bad) or (bad) sub xchg or adc mov (bad) rex.RB sub (bad) (bad) adc loope mov sub or jmpq xorb rex.WB lret insb int3 std xchg adc xor movabs movslq je gs pushq mov pushfq rex.WB jmpq vpmulhw stos add or adc add test cmc fnstsw rex.R adc outsl test push sti cmpsl sub cmp (bad) adc ds (bad) lock mov (bad) imul mov (bad) mov cwtl orl xor gs movl xor push imul rex.WRB rex.WB (bad) jbe sti mov (bad) outsb (bad) subb sub mov cld mov rex.WB jne mov ja rex.WB rex.WRB stos pushq fldl movsl out jno imul add xor int3 push sub add (bad) (bad) rex.WR adc jp addl in movabs sub out sub int stos out (bad) jl pop xor test jno pop xorl out mov mov rex.WR xor rex.WB je flds xchg int3 cmpsl or rcll mov callq stc mov (bad) push or fisttpll sub stos (bad) movabs jle xor (bad) rex.RX out or cmc out add fs adc (bad) cwtl jae cmpsl (bad) (bad) mov jrcxz push sti xor rex.RXB imul movabs xor add rex.WB in pushfq icebp in pop rorl push rex.WB rex.WRB adc and addr32 or pop lods jo (bad) adc outsb or adc jbe (bad) sti and rex.WXB pop rex.WB gs icebp loope adc (bad) mov (bad) out xchg retq and jno movabs test in movabs int3 je cmp sbb lods rex.WB push cmp pushq icebp gs cmc sub gs imul push rex.WB (bad) mov addl (bad) jae xor xchg stc iret leaveq mov shrb loope cli rex.RX rex.RXB pop imul add mov mov (bad) pop int3 mov std rex.WB lock adcb addr32 lret (bad) cwtl addr32 rex.WR and (bad) xchg loopne adc lods rex.RXB rex.WB es add notl clc (bad) lods outsb and sahf rex.WB cwtl xor sub pushq (bad) rex.XB fs cltd jbe push mov and loop sub insb rex.B rex.WX or iret jg fwait rex.W xor xchg rex.R mov gs mov loopne int3 lahf add sub and add rex.XB or or (bad) rex.WRB xchg adc cltd dec mov in add fisubr fcoml mov rex.WB (bad) jrcxz dec or movabs rorb sub fs rex.WRB rex.X mov shll cltd idivb fdivrp lock test lret pop (bad) (bad) jae pop (bad) movsb cmp andb out mov rex.WB rex.W enterq lods fild rex.WXB lea cmp (bad) mov retq pushq jae sub iret movsb rclb and cli jle sbb rex.WR divl rex.WRB jl rex.WB in sbbl movsb jp rex.WRB jns js xor lea add pop es add cld rex.WX (bad) push pop (bad) sbb or (bad) (bad) jae (bad) rex.WB xchg (bad) icebp rex.RX rex.WXB shr cmc callq lock out fildll imul (bad) insl callq and repz adc pushfq xor js lods jg mov adc rex.WB mov (bad) xchg jmp (bad) mov gs mov pop js movabs (bad) out fmull rex.WB (bad) adc xor clc out cmp mov ja out pop push jg faddl movabs mov adc cmc movabs sub (bad) rex.WB clc loope movslq (bad) jne and in xchg out cld shrb sub rex.WB xor sbbl cwtl repnz callq add pop movb in xchg xor repz fwait callq insb push rex.WB lret (bad) (bad) movabs jnp rclb push sub sbb (bad) mov xchg (bad) mov sbb push xorb rex.WB rex.WRX and (bad) adc rcr movsb push (bad) rex.WXB addl (bad) mov pop or rex.WB int xlat mov fwait xchg rex.WB push retq xchg rex.W pushq lods rex.WRXB rex.WRXB int lret movsl adc xlat rex.WB mov add stc sbb movsl and fbld out add pushq (bad) jne rex.WB gs repnz add (bad) fcoml test jge (bad) rex.WR lea int3 mov adc (bad) jmp rex.WB data16 cwtl test push (bad) pushq fnstenv mov int in addl mov jl sub (bad) xchg mov icebp out sbb or (bad) fisttp loop cmp shlb push rex.WB je sbb fxch fiaddl push gs jl std shrl mov push sbb rex or (bad) test (bad) vucomisd js test add cmp xchg int3 mov shlb addl adc mov insl rex.X movabs ss test sub jmp je cmp push in rex.WRB movabs int3 adc out rex.WB push mov mov movabs add mov mov cmpsl and mov icebp add mov out jo pop pushfq sub movsb jle scas fsubl xchg adc movabs (bad) (bad) fsts mov jge add repnz cli loope scas add or roll sub (bad) sub and mov rex.WX ja imul adc fist loop pushq fdivs (bad) iret fsubr rex.B rex.WRXB cs stos mov cmp imul mov in xchg cld out ja push (bad) (bad) or rex.B (bad) callq add fimul jmpq movsl jmpq mov sub mov add xor rex.WR rex.WX mov rex.WB rcrb cli mov in (bad) ficom push lock adc add (bad) rex.WR callq cmp push mov pop sub adc add cli (bad) insl rex mov shr jl rcrl cmp insl sub sbb (bad) mov scas stc rex.WB mov rol rex.WB add std out sbb jae rex.WX pop rex.WX rex.WB add std jl and repnz rex.WR cmp xlat int3 rex.XB rex.RX gs push pop jmp out stos cmp mov mov jmpq xchg xchg cmp pop cmp movabs cmc sub sbb loop mov addl rex.WB test fcompl cmpsb and repnz outsl (bad) adc sbb in xor cmp pop fstpt (bad) cwtl (bad) adc rex.X push jnp jge mov in or movabs push outsb mov sbbb stos movsb pop pop rorb xchg pop (bad) jns jbe push mov and mov or rex.WRB and add movabs adc mov repnz add and mov sub cmc (bad) pop out (bad) scas mov rex.WB lods mov pop jo xchg pop push movsl sbb movsb pop push and movabs out addr32 push sbb cmp loopne or add fwait movl pop and mov xor (bad) iret lret xor jbe (bad) loope and adc stc xor callq push loopne shr rex.RX rex.WB movabs xchg push cmp push push jg push xor (bad) cmpsb in cmp out repz ja xor add pop movabs rex.WR rex.WB rex.WRX rex.RX addr32 jp xchg rex.WB sub mov xlat movslq outsb cmpsb or lahf fsubs fisubrl loop mov fmull xchg movabs test push adc push cmp mov mov lahf rex.B rcrb (bad) cmpsb sub rex.X jae enterq test jmp xchg xchg insl or imul pushq roll fadds rorl rex.X jle sti jo,pt cmc in add pop out or or insb movslq rex.X rex.WB callq jne rex.WB (bad) iret ss out rex.WB mov shrl push movabs fwait jns jmp rex.XB xor rorb mov and lret outsl (bad) xor movabs sbb insb rex.WRX push push (bad) (bad) mov mov insb sub cs xchg lock out (bad) jmp movsb rex.WRX and xor sub leaveq cld callq cli xchg push (bad) ss retq rex.WB int fmuls (bad) and sbb (bad) imul (bad) push sub (bad) nop cmpsl pop lret nop gs (bad) add mov add sahf movsb pop cmp idivl pop jne (bad) testl or imul adc fisttpl or callq or fs adc retq mov sahf out (bad) cmp jp or or xor xchg jg add retq (bad) (bad) sar xchg movslq rex rex pushq or push testl (bad) lods mov xor jns outsl push rex.WXB lahf scas push sub rorl cmp je push cmc jne adc out cmp test (bad) imul mov or lods mov mov je movabs (bad) mov rex.WRXB pushq xor and lock push (bad) lret xlat mov and rclb xchg mov mov jl mov sub jmp gs xor stos or add retq movsl je jns and pop jge rex.WB cltd icebp in loop pushq (bad) cmp adc jb rex.W adc leaveq test (bad) sub lock sub mov jge rex.WB test out mov jp pop xchg lods push cmpsb fs fistpll pop or or mov (bad) fldcw jnp xor pushq add sub push mov rex.WXB sub and test mov xchg scas pop lea xor std icebp nop mov rex.WB sbb pop and jno ja rex.WX and (bad) insl imul std jl (bad) leaveq es ss (bad) outsl pop movabs mov rex.WB mov loope es add pushq cmp sub lahf (bad) or fdiv lock push addr32 push repz in lods xchg mov retq scas lods xor callq sub pushq adcb and test xchg fisubl adc push jmp rex.B rex.RXB mov retq lods and add fwait out adc xlat (bad) pop loop jnp mov rolb imul add cwtl outsl jl out cmp jae add (bad) icebp rex.WX sub (bad) callq jns add mov xor nop push gs mov fld out (bad) in xchg movsb je lods fwait cwtl fs mov mov cmp sub (bad) pop imul or test fbld rex.WRXB jmpq (bad) data16 repnz (bad) cli insl adc (bad) mov add mov sti sbb pushq add adc rex rex.RB pop or (bad) xor rex.WRB mov insl adc enterq movabs scas fmuls cwtl rcll mov pop (bad) (bad) rcrl enterq loop jae and xchg adc lea fsubrl fstpt jmpq push or mov xor stos sbb or (bad) stc js cmp lahf shl rcr data16 or pop mov ja vminps lea cmp cmp add jmpq fidiv pushq (bad) rex.WX fcmovne enterq xor mov cmp or mov (bad) pushq xorl in adc retq cmpb ffreep lods mov rex.WR adc mov or test fmuls rex.WRB cmpsl or jb test sbb add cmp lods imul int3 out outsb fldenv mov sarb add sub pop push pop mov and imul mov adc xchg xlat mov rex.X (bad) and int3 (bad) lret adc movsb jns push fisubrl or sti rex.WXB fwait imul cmp sbb icebp or mov rex.RB or xor xlat stos mov addr32 rex.WRX sti popfq cmpsb (bad) xchg rex.WRX in test (bad) clc rex.RX (bad) (bad) adc mov push callq jmp out iret jne xchg mov sbb movabs and (bad) sbb enterq fsubrs rex.WRB in leaveq sub cmpsl xchg xor (bad) rex.R cwtl fcomps add retq cmc mov sub push push rex.B in push mov add sub insl cmc (bad) rex.WB (bad) (bad) add jl sarl adc xor test sub adc movabs sbb pushq sub pop (bad) and std jno (bad) (bad) rex.WRX rex.RXB movabs jrcxz test mov rex.B pop add push add or push std and movabs sbb sub (bad) jns xlat push notl cmp out rex.RB add cmp cld jg movslq (bad) mov sub (bad) xor cmp add add jp stos (bad) cmp pop in adc jb xorl mov outsl rex.WXB jae clc enterq adc and rex.WX push (bad) or lods iret mov movabs mov dec or mull xor add rex.WX movsb fdivr sub rex.W fdivs icebp lods loop xchg sbb (bad) hlt jnp pop adc mov (bad) (bad) movabs (bad) mov jl push frstor scas pushq ds rex.WX repz rex.WB rex.WXB in xor rorb push rex.WB add int nop sub rex.WB movsl mov addr32 cmp in cmp cmpsb cli jge fbld sub jnp enterq clc out orb movsb jp jle test mov loop cmc rex.WB jo rex.X adc sub stc adc (bad) (bad) cmp (bad) (bad) xchg rex.WB mov or mov mov test icebp test jo sub movsl imul cmc (bad) scas push iret shrl fisubrl movabs std mov mov je push and (bad) sub outsl fildl sub rex.WB jg std fwait (bad) sub cmc xchg adc andb xchg sub (bad) (bad) (bad) imul lret jp or movabs rex.WR xor (bad) repnz mov out ss (bad) movsb loopne mov and mov (bad) (bad) mov adc xchg icebp cwtl cmpsb lock (bad) push rex rex.WRXB (bad) clc add fisttp sbb mov push xchg mov mov loop add rex.RX out lods push rol leaveq jne fimull xlat out xor rex.RXB adc pop jmp rex.XB fwait sarb outsl mov and sahf out stos rex.RX imul sub mov adc (bad) add xchg jp leaveq lods (bad) mov (bad) cmpsb cmp pop in movsb push jns leaveq jno adc pushq hlt sar pop (bad) or cmp sub fistp ja fs sub jg retq rex.W lret (bad) std sbb (bad) or cmp (bad) int3 push lock movabs lock jp (bad) mov jmp scas adc sbb rex.WR (bad) push or scas rex.RXB mov (bad) test pop test js shrb mov push rex.WX fidivl or mov push pop nop rex.XB or lods test (bad) andl xlat in out add leaveq (bad) jmpq insl mov rex.RXB out pushq sbb add jle decl mov (bad) rex.WX rex add retq (bad) push js jl jle cmp pushq movabs subps test js decb mov sub sub clc enterq bswap lahf (bad) rex.WRB xchg mov movslq in callq rex (bad) jrcxz scas jne adc cli enterq unpckhps pop push (bad) lcall jg rclb xchg hlt nop adc sub adc sub mov and sub add jge add jae add (bad) loop iret movslq imul sub hlt mov (bad) stc fsubs push stos (bad) insb or push push xchg and lods rex.B pop hlt push jnp out adc jge or js (bad) test xlat (bad) fwait pop sbb retq adc (bad) or vpmullw test add rex.WRXB adc mov xchg movabs or push callq or pop sub div (bad) sub std (bad) mov pop mov rex.B mov lea jb mov idivl cmpsl xorb sar rex.R negl movabs jrcxz lahf push cmpl mov callq adc cmpsb iret xchg lret rex.WB rex.RX (bad) (bad) cmp test fcoml fnop (bad) lock sub or sbb mov ds leaveq lods (bad) movslq pop fimul add pushq adc jae retq divl and loop sub rex.RXB rex.WB sbb (bad) movabs xchg push callq cld sbb (bad) jo xor imul outsb sbb addr32 mov pop mov callq decl mov test (bad) jno sub ror add rex.WX sbb pushq jnp and pop and pop sub jg repz data16 mov cwtl xor in (bad) rex.RB pop lock sbb xor mov sub callq and xchg rex.WB hlt pop fmuls pop and callq (bad) data16 or sbb pop mov sub cmp jrcxz rex.X test rex.WB xchg jne xchg insl insb mov mov sti mov (bad) mov inc push xlat addr32 (bad) xchg imul lods ficom movabs (bad) ss jnp mov sahf callq mov push rex.RX rex.WR cli sbb push test or repnz cmp mov add rex.RXB ds rex.WXB cmp push jo xchg pop mov (bad) or (bad) roll andb stc (bad) cmp (bad) and mov sub bnd pushq enterq (bad) out mov or mov and hlt jo rex.RX rex.WR or rclb std movabs xchg jb lods sub insb fistpll pop enterq (bad) push and push jle adc fs lods cs sahf jle mov (bad) je sub mov ds (bad) test divl lods sub outsb pop sarb rex.XB (bad) (bad) push (bad) mov lret rex.WXB retq sbb rex.RXB rep rex.B rex.RXB cmp mov add or fstpt rex.W sub ficom (bad) (bad) lea xchg sbb xor and add int rex.WRXB (bad) fistpl (bad) shll shrb repz xchg push mov (bad) cwtl (bad) or (bad) scas iret js pushfq out rex.WRX roll pop test xor sub jns sub xor sbb jle leaveq sub jae (bad) xor rex.WR jne push jno push leaveq and movslq enterq or sub and cli mov sti (bad) stc xor and sbb loop cmp icebp lods nop cltd (bad) or fidivl add out push callq pop (bad) out jle loope rex rex.R rex.RXB mov in mov cmpsl rex.X fs (bad) fwait imul cmpsb out fwait (bad) stos out or jmpq pop mov xchg push sbb mov roll shr rex.WRB jmpq (bad) out cs sub mov rex.WX movsb in lods pop jno lret rex.XB in fnstenv push rex.WRB sub xchg mov cmp stos sub sbb std mov mov sub stc pop int3 decb rex.W sahf repz ds js add jmpq (bad) pop sub xor push sbb callq mov mov or jb pop (bad) out lock mov xchg imul rex.RB sub pop popfq pop fstps rex.WB rex.WXB std (bad) in jl (bad) adc or cmp sbb shrb xchg es ds rex.WB std jle pushq cmp (bad) (bad) jne (bad) rex.WB sbb (bad) orq mov rex.WX sti std movabs (bad) and es repnz clc outsl movabs lea cmp adc in pushq pop fs push cltd imull pushq scas test decl jo loopne sub std out rex.X rex.R rex.WB ds in test jb mov pop (bad) xor xchg rex.WXB loope jge mov rex.WR scas sbb cli and sub imul adc in add int (bad) rex.WB (bad) retq (bad) push mov lret adc rorl sbb callq xchg rex.WRX rex.WB fs (bad) add movabs cmp add xchg (bad) rex.WB retq fsubrp push stos stos cmp xorl ror popq and ficomp mov push retq nop cs adc (bad) pop xchg sbb insb (bad) sub jmpq int (bad) push movabs test (bad) jno and mov repnz fisttpl out or mov (bad) negb and lret cli (bad) sub or lods jb mov mov push or pop rex.WB rex.WRX (bad) retq out rex.WB jnp,pn (bad) jb out push insl pushq rex.WB es ja movabs test pop movslq movabs push sub push in add xchg out xor adc in scas rex.WRXB jge sub xchg cwtl xchg cli sbb jae lret xchg fistl test rex.XB test (bad) (bad) mov jge push jle fsubr int3 (bad) std mov pushq mov xor fdivs cltd rex.XB mov and out pop sub sahf pushfq pop jge (bad) (bad) jae (bad) nop mov adc lret xchg mov pop test (bad) (bad) xor callq (bad) enterq sub push xchg adc pop rex.WR movabs adc pop xchg sub mov xchg callq sub cwtl lret rex.WB (bad) (bad) loopel mov pop (bad) callq scas (bad) pushq (bad) push or jmpq out repz (bad) sub pushq pushq imul pop lret fwait or loop clc mov rex.WXB rex.WB out retq mov or or rex.WB sti ss xor out (bad) test (bad) rex.RB int3 gs rex.R lret mov or sub (bad) stos xchg sbb cmpsl in sub movabs out decb mov sbb loope cmp jns push rex.WRB mov pop rex.XB rex.WB mov out cmp (bad) mov imul or xlat out xchg jne jns cld fcomip movslq push cmp es xor (bad) and sub lahf cmp movabs pop stos sbb cltd jl rex.RX add (bad) pop mov cmp stos jae enterq (bad) mov lret mov and sti mov rex.WR (bad) sub (bad) xor xchg movslq push jnp and mov xor xor or pushq (bad) fisubr jmpq js lods jge fcoms (bad) rex.RB cs pop jl jg mov add rorl stc loop repz jne or jnp (bad) rex.WB adc rex.WRB rex.WB nop fcomp sbb (bad) sub mov faddp cmpsb xor push push (bad) mov rex rex.WB add movabs pushq rex.WX pop loop jge mov loopne rex.WRXB mov xorl cli mov xor sub cmc movabs cli rorl mov mov jmpq (bad) (bad) rex.RX cmp scas rex.WB rex.WR repz push (bad) add sbb pop fs clc pop rex.XB jnp sti sar pop cwtl out (bad) lahf (bad) cmp fisubr mov xchg cld sub cmp fnstcw mov mov (bad) rex.WRB insb add stc (bad) ss push and push add rex.WRX cmp cwtl rex.RX jae mov rex.WRB scas cmp movabs fimull ds mov pushq jnp xchg ficoml (bad) sti rex.WB sub rex mov and adc mov negb (bad) xchg push and outsl adc mov pop rex.WXB mov (bad) jrcxz adc sahf xchg (bad) pop mov imul je (bad) rex.WB rex.WX scas push jbe lea gs (bad) cmp js pop cmp int rex.WX adc sbb add rex.WXB nop sub fwait callq cwtl (bad) adc (bad) xchg sti rex.WRXB pop push orb jns repz notl sub adc jmp movslq (bad) pop mov iret sub callq rex.WRXB sarq mov cmp addr32 test rex.WXB rex.WB mov iret jrcxz push (bad) enterq sar pop mov rex.WRX rex.WX mov or scas in push xchg rex.WB movsl xchg mov (bad) sbb rolb jl (bad) cmp out and (bad) rex sub (bad) sbb mov pop jo rex mov push rex.W mov rex.R pop fidivrl sub int mov rcrl sbb nop rex.WX rex.W jge scas test rcrb mov cltd xlat and (bad) imul movabs xchg (bad) outsb push imul and sub (bad) lea in jne xlat addl jnp (bad) rex.WRX orb jo (bad) mov sub or leaveq and mov movabs mov rex sub in je fist sub mov subl rex.WX jae sbb or pop mov xor vmovupd rex.X movabs mov js cmp cltd and pop stos cmpsl (bad) sub rex.WB pushq (bad) orl push cwtl or mov xchg xchg sub mov sbb nop pop push test orl insl stos addr32 pop es rex.WB mov mov or sbb pop je adc mov pop divb and leaveq pop in (bad) pop mov loop cwtl (bad) rex.WB mov (bad) push lods stos xchg cmp (bad) movslq cmp test sbbl int js rex.WB jp mov jb outsl lret xchg sbb pushq add (bad) in xor (bad) jo (bad) sbb mov mov (bad) pop pop (bad) (bad) (bad) rex.X addr32 adc or ja sbb movsb movslq iret lret scas sbb adc cld movabs xor (bad) movsb xor rex.WR cli mov sub xchg or fs stc imul cld pop jp add js rex.WB cmp mov scas loop callq rex.WB mov rex.WX fwait je and cmp xor add rex.WB cmc idivl test stos jno rex.WB mov (bad) push pop test mov sub enterq popfq imul cmpsl cs retq xor (bad) sub rex.WB xchg adc add mov mov fs pop callq sbb pop xchg addr32 insl jns xor lahf or mov rex.XB sub out mov rex.X mov out ds cmp mov mov (bad) or insb fistpl lret stos mov rex.WB pushq sub rex.WRX jl jle rex.XB movslq or adc rex.WB add or push dec mov fwait add push leaveq repz lods lret rex.WB test (bad) xchg popfq fistp add notl (bad) xchg jl outsl (bad) sub rex.R outsl callq and sub (bad) fmuls jrcxz pop rex.WB add (bad) cmp stos mov mov movslq (bad) repz mov divq in out push sbb xchg mov pop movabs (bad) jnp mov fdivs callq callq pop fild rex.WB xor icebp lea fdivrs pop callq add (bad) jne rorl sahf mov (bad) xchg mov rex.RXB pushq (bad) stos xchg rex.WXB imul or out fadds (bad) sub movabs xchg (bad) cmpsl xchg xor leaveq test add push rex.WRXB rex.WB sub ss xchg js out pop add adc mov addr32 sti rex.RB (bad) out stos or xchg test pop add (bad) (bad) xor (bad) sbb sub cmpsb rex.WRX rex.WR (bad) pushq rex.XB jmp shrl (bad) and cmp push rex.WRX fwait push xchg cld xlat rex.WB mull jge cltd xchg jp callq (bad) mov jno (bad) sub in xchg xchg rex.WX cmpsl xlat movslq idivl rex.WRXB jg mov sbb icebp jo movslq (bad) rex.RX movslq jno pop pop push nop add mov mov rex.WX test rex.R cltd fsqrt rex.WB rex.WRX fildll fcoml pop (bad) ror xchg test rex.RX fwait and (bad) rex.RB sub (bad) pop test ss push out xlat (bad) movslq cs lock clc push xchg scas (bad) pop jne icebp rex.RX in (bad) rex.RB rex.RX sbb or rex.B jo movl enterq add mov cli cmp mov (bad) jne jmpq rex.W rex.WX out test xchg or cli movsl rcrb movabs jg fwait sub push push rex repnz jbe out sub (bad) sahf (bad) rex.WRB fucomi rex.WB lods std rex.XB adc rex.WRXB cs (bad) repz mov jle pop push pushq xchg lods sbb pop rol pop add or fcoms movabs push sub mov int pop push jge jl xchg lods out jns push (bad) pop fisubl rorb loopne callq out push gs xchg outsb lods (bad) (bad) rex.WB cmp jmpq fldl xor fimul sahf rex.WB rex.WX add fs rex.WB adc (bad) imul (bad) loopne sti rolb iret movslq adc xor (bad) out add int mov jrcxz rex.WB push ficom sub xchg and mov movabs rex.WR pop loopne pop leaveq cmp idivb rex.RX sub jb pop and (bad) ss rex.WRB rex.RB adc jbe mov sub jg xor jnp rex.WB clc enterq test (bad) imul ds (bad) jle stc pushq jge (bad) fimul mov std jbe mov out pop sbbb mov sub jns rex.RX adc push mov repnz int3 push sub xchg (bad) lahf addl lret retq (bad) sub cmp and mov lret hlt push jae movabs pop in mov (bad) cltd pop push jns int3 rex.WB cs mulb test stc add rex.X (bad) adc pop fs fdiv push lret loopne movsl insb rex.WB rex.X cltd ja (bad) pushq adc add adc movabs popfq xchg pop rex.WR jb pop rex.R or mov test insb div xor js je push adc mov pop enterq cli rex.R jnp push cmp rex.WB (bad) (bad) fsubrl movsb mov movabs popfq cmp sbb loop rex.WRX rex.WX loope adc fxch sbb popfq push pop mov rex.WB mov or retq out xchg xor add loopne rex.WB movabs rol insb ror cmp mov rclb lahf imul test out movabs std cltd rex.XB cli (bad) test xor xlat push push or sub icebp mov sub movsl out pop (bad) callq pop rex.WB retq sub (bad) push (bad) pushq or xchg enterq rex.XB pop orl jno lock (bad) rex.RX rex.WRB sbb out adc int3 or sbb fwait imul or rex.WXB xchg (bad) adc (bad) rex rex.WB jne rex.WB loopne pushq rex.WX xchg lret jno stc loop adc push adc popfq and movsb sbbl js jge (bad) (bad) pmullw or popfq callq mov retq pop (bad) push lret movsb xchg stc insl (bad) enterq (bad) clc rex.WB cmc scas jl mov push xchg andb xchg jmpq callq xchg add sbb rex.WX fsubrl out add cs lods jo push rex.B movsl pop mov pop vunpckhps adc xchg nop rex.WR sub rex.RXB addb add retq mov (bad) xlat rex.WB rex.XB mov rex.WB mov (bad) mov js or sbb xchg rex.X or (bad) jae cmp and pop push jb in movabs sti loop push movabs push jo (bad) xor movslq add je or leaveq and rex.WX fs pushq xchg repnz jns xchg or rcrb pop outsb jmp jnp cltd cmpsl push (bad) rex.WB imul xchg or push xchg rex.WB (bad) pop and cmc (bad) rex.R rex.WXB scas rex.WRXB xor and nop xor imul fstpt popfq callq rex.WRB (bad) test xor std adc pushq (bad) (bad) mov pop movabs fstpt adc xchg mov mov (bad) pop pop or pshufw pushq add or callq sbb pop in rex.WB sbb stc sub in fldcw mov lock xchg retq xchg sub retq rex.R xchg insl and mov in mov movabs pushq xor sub pop rex.WB mov rol fisttpl sti cmpsl sbb cmp pop pop lods imul insl jae cmp or (bad) test (bad) mov movslq or push and sub (bad) rex.WRX pushq mov rex.WB add out nop jns test rex.WB in repnz rex.WRX addr32 outsl adc movslq es jrcxz mov lods cmp in cmp rex.XB addl sbb pushq loopne add fs addb cmp sub std fisttpl jrcxz in xchg mov test jno rex.W hlt push sub fist (bad) pushfq cmp rex.RB sbbb mov fcompl fcom movsb jp sub mov mov (bad) fdivs in lahf rex.WRXB cltd movabs pop mov test xchg xor movabs rex.X pop fdivs lods callq (bad) mov loopne mov jbe cmp and (bad) jns xchg cli (bad) (bad) (bad) sub pop mov retq adc outsl rex.RX rex.RXB icebp (bad) jb push sbb movabs mov xchg leaveq and (bad) (bad) rex.RB callq sub (bad) fwait adc and sub and mov mov imul movabs rex.RX jne push (bad) data16 push (bad) add cmpsl test pop outsb ficoml movabs addr32 jo (bad) (bad) rex.WRXB xchg sub xchg repz sahf pop imul xor test (bad) xor pushq (bad) xchg rex.WX cltd mov idivl (bad) rex.WB rex.WXB es and and (bad) sti xor lods sbb test pop xchg (bad) rex jnp outsb shrb jbe lods push jnp and sti leaveq mov sub jge sbb in cwtl fidiv rex.RXB xchg jmpq add adc (bad) pushq jg icebp mov in adc mov pop jb imul notl rex.RXB rex.RB sub (bad) sub (bad) lods push int scas pop sbb pop enterq jno pop mov (bad) cltd (bad) lret sahf cmp fmuls test rex.WX int3 repz lods clc push (bad) cmp imul stos sti (bad) add push sub lret jbe jae retq or jo fs (bad) pushq pop (bad) repz faddl xor or add xor (bad) sub mov or (bad) pop rex.WRB rex.WB lods mov insl cmp cmp movslq hlt imul fldl scas adc pop clc rex.WB xchg (bad) nop rex.RXB mov cli es mov jle sbb adc sbb icebp insl stos movabs idiv cmp out push rex.R pop rex.X mov mov leaveq sub jg mov rex.WB lods and xchg rex.RXB callq add stos and pop std negl push (bad) pop jnp lret cmc pop stc adc rex.WB rex.RB sar movslq cmp addr32 and in lods mulb (bad) push es cmp xor sbb rex.WB (bad) pushfq rex.X rex.WB (bad) jns mov mov xchg pop cmp rex.WB cmp fcmovnb rex.WB movabs xor cmp mov loopne vpsadbw pushfq xchg insl sbb sub xchg movsl lock retq (bad) lods xchg cmpsl mov xchg sub push or rex.WB xchg pop movabs rex.RXB rex.WX rex.WB and rex.WB es fsub (bad) insl loopne sub sub callq sub or sub ja (bad) callq lahf (bad) rex.WXB mov rolb xchg mov push or (bad) rex.WRX stos jmpq in (bad) fmuls test mov fmull sti add cli mov rex.WB rex.WRB lock mov lret adc (bad) cmp loope rex.WRB callq movabs cld (bad) mov mov int (bad) mov push rex.WRB fwait (bad) (bad) rex.RXB rex.WB cmpsl out out int3 imulb movabs out mov loopne rex.WR (bad) mov retq mov popq (bad) in add clc (bad) (bad) out cmp xor repz mov pop (bad) xchg push sub (bad) fild jg cmp sub lods cli pop stc rex.X cwtl (bad) xchg movslq fwait rex.B movsl (bad) jl push xor ror adc leaveq (bad) jl lret lods fnstcw clc jo,pt outsb scas push add hlt (bad) rex.WB and mov (bad) sub fstpl shlb je ud2 push vxorps (bad) mov lahf and mov iret (bad) rex.WRB cmc mov enterq (bad) xchg (bad) mov sub jle cmp xchg out rex.WR sbb (bad) negb rex.WRB cs jae and cli sbb pop leaveq jg xor (bad) cmp in (bad) or mov push (bad) rex.B fdivr cmp pop jae jo or rex.WB sub addr32 mov in fmul pop mov and or rex.WB cmpsl cmp pop push jae sbb add cwtl sub sbb xchg int3 (bad) scas icebp iret andl nop jge xor cmpsl fisubrl cmpsl sbb ja faddl pop movslq or cmc pop jl (bad) mov icebp rex.W data16 push sub mov xlat in rol xchg adc rex.RB and sub je lods push sbb cli mul pop (bad) scas mov movabs xchg (bad) fstpl adc clc sbb xor xlat push push rex.RB rex.WRXB insb cmc adc (bad) int mov cmp (bad) cs rex.WB (bad) sub pop rex.RB rex.WRX lock mov lahf or mov jb,pn jle (bad) movslq movabs push and int3 push push pop sarl (bad) mov xchg mov push push lea jbe gs jmpq pop (bad) cmpsl in push jl icebp or mov sub jne pop scas or fidivr sbb push add or push pop rex.WRB add mov mov scas js rex rex.X sub xchg hlt (bad) sub pop push rex.WXB rolb (bad) and pop xchg nop nop (bad) jrcxz jae sub pop in or outsb movslq sahf pop jo xchg rex.WXB idivl jl or addr32 movabs (bad) cli lahf (bad) mov imul and lahf pop or mov mov ficompl movabs (bad) mov ficom (bad) jno jno or pop mov outsb shrb and rex.WR mov jno fcompl lahf jmp (bad) (bad) callq pop test push pop xchg push divb callq sub mov popfq data16 hlt mov add out lods (bad) jns add insb rex.WXB add rex.WB flds and movl (bad) cltd cmp cld mov callq out mov mov leaveq callq (bad) pushfq jge adc cmp imul (bad) lahf movabs clc jg cli mov jge cmp xor (bad) (bad) xchg cli (bad) xor movslq adc movsb xchg stos lret incb rorb cmpsb adc fwait int lea or cmp rex.B cmp cmc cmp xchg movsl insb or adc rex.RX leaveq mov mov (bad) jmp xchg (bad) mov add cltd add add andl (bad) and cwtl out sub jnp adc cmp or (bad) mov fld rex.XB (bad) scas mov (bad) mov mov pop pushq pop jbe push sub fistl jge rex and movabs rex.WRX movabs mov cmp pushq or jns leaveq xchg lret xor out jno out cmp stc jrcxz xchg (bad) jp pop and movabs rex.XB outsb sub insb rex.WXB sub mov adc mov sub leaveq (bad) popfq cmp nop fdivs out (bad) push jnp retq pop pop jne loopne movabs mov test or rex.WR rex.WB sbbb ficom hlt pop xor push sbb cmc and popfq pop (bad) sti (bad) cltd insb int rex.WB xor cmp and rex.X sbb (bad) (bad) (bad) movsl pushq popq test sti mov pop sbb test retq adc push pop push imul rex.RB cmp repnz (bad) movsl movabs test shlb movabs out rex.RB lret sub (bad) adc rex.WRXB xchg rex.RB outsl retq fdivp data16 (bad) (bad) adc jne movsb sets mov rex.WR (bad) incb sbb xchg mov lods rex.WB mov cmc and loop mov (bad) rcll pop (bad) (bad) movabs movabs mov (bad) mov xor pop adc iret rex.WB xchg mov and (bad) rex.WRB and cli rex.WB cmp xor sbb rex.WB hlt xor jnp rex.RXB loop cmp cltd add pushq sbb idivl mov repz enterq insb clc test out add out xchg loop test fisubl cmc mov sub push leaveq rex.WB or fxtract mov push rex.RX in out xorb (bad) jne loope fdivs jno sbb and mov (bad) push (bad) pop out sub outsb xor sti retq xchg std (bad) mov shr fdivr add fwait or scas adcq shrl rex.WB insl jb inc fimull stos (bad) jbe lret rex.WB repnz cmp rcl jl sub (bad) jnp xor callq sub push mov (bad) sbb jp jg cs rex.WB (bad) jbe rex.RX test (bad) loop sub rolb mov cmp out in rex.WR rex.R lahf sub xchg jae addr32 test mov rex.WB or fcmovnbe (bad) xor adc rex.WX push mov push add stc pop jo adc in outsl callq mov rex.WR or repz (bad) push jae rex.WRX fs ficompl mov cmp callq insb or push fdivrs xor rex.WB mov lfs xchg mov rex.WB sbb xlat int fiadd mov jbe lret pushq mov pushq mov repz jmp pop xchg add and xchg jnp (bad) xchg or mov sbb adc or adc fcoms xor jnp pop rex.WB rex.RX int divq (bad) and sub adc push sarb lret (bad) rex.WXB out or rex.WB pop adc rex.WB pop sbb rex.WRX js push rcr xor incb insl (bad) pop xor xchg movb int sbb adc and rex.WXB movabs sub pop (bad) sub sbb push movabs lods mov (bad) rex.WRB jae push push mov (bad) lea or data16 xchg xchg cwtl mov loopne xchg decb rex.RX sub pop icebp test (bad) callq jbe jno cwtl cmp rex.W stos adc cs push es loopne retq and lods jmp jns out sub shrl and jae pop int3 jmpq (bad) mov sbb push rex.XB xchg xchg sbb add cmp fadd pop xchg sti (bad) mov jno adc rex.WRB lahf scas icebp cmp movabs sub or (bad) out gs rex.WXB rex.WB cltd rex.RB stos (bad) fbld nop popq lahf adc xchg rex.WB int3 test rex.RX out (bad) jae outsb in (bad) push rex.WB and cmp rex.R movabs (bad) clc mov fisubrl pushq loope cmpsl adc retq xor fcomi cmp and fldl rex.WXB es lods movslq fs leaveq or not adc (bad) mov loop movabs movabs and jno clc test mov adcl rcrl xor in (bad) rex.W movabs adc callq mov rex.WB cmpl jno add jbe cmp mov rex.WR ds test movabs (bad) sub mov stc fs xor rex.WB sbb xor ja jb push movabs rex.R rex.WRXB rex rex.W mov rorb sub fidivr rex.WR xor (bad) cmpsb in xchg gs cmp jae pop test adc sub div pop mov mov callq jae jge lahf sbb pushfq ds jmp push rex.WXB retq test fmull xlat iret mov movabs pop sbb jbe jns mov xor mov mov jmpq rex.WX rex.X popfq enterq sbb (bad) xchg retq test test (bad) ja lea rex.WRX outsl shl jmp ja push test rex.X callq rex.RX pushq mov mov jne fdivs adc mov rex.RXB rex.X mov fisubl mov out pop test stc jae and jl (bad) or and jo (bad) add cmp or (bad) (bad) out adc cs cld mov or push rex.RB testb dec std and (bad) mov pop (bad) sbbb leaveq add jbe (bad) pop push je (bad) mov mov add jns and clc pushq xor sub adc add movsl jbe jle movabs sbb in (bad) add pop imul mov mov retq lahf cmp cmc mov hlt mov (bad) (bad) add jbe fsubrs mov (bad) iret outsb jno mov lock xchg sub (bad) rex.WRB test xchg and stos add iret jle pop jbe sub (bad) jb mov (bad) (bad) (bad) (bad) lea test jae sub sub push repz (bad) rclb je adc sbb es jle lods out and (bad) xlat xchg push and movabs pushfq (bad) repnz or pop jns sbb and notb (bad) mov lods jnp iret adc or sub int3 cmp movabs cmpsb rex gs xor xor xchg sarb rex.WRX data16 mov push push es jmp andl stc lock sub movsl imul iret stos mov (bad) (bad) shrl pop pop popfq mov enterq cmp clc push lret lret (bad) adc mov rex.XB negb rex.RXB and push jnp movups mov mov movabs cmp out push (bad) enterq cmp (bad) movabs mov rex.RX rex.W xchg retq loope pop push adcb rex.WRX and and or push sahf fadds pop sbb cmp mov add or (bad) loopne mov loope int sub and (bad) push sub and (bad) xchg pushq pop or out popfq imul js mov and stc (bad) gs mov pop in mov push and mov jno scas shlb scas int3 lods cmp nop lea and rex.XB rex.WRB sub push shll (bad) ja imul mov rex.R mov sbb sbb pop rcrb sub sar imul sbb cmpsl sub pop insb or jbe adc es outsl sbb icebp rex.WB sti jbe clc add pop pushq (bad) pop sbb rex.WB insb idiv rex.W js (bad) movsl callq nop mov rex.WXB push sub xor popfq (bad) fnstcw xchg mov lret xchg insl rex.WX sbb sbb (bad) mov and ss movabs rorl out scas fnstsw rex.W movabs or sub mov clc and mov test xor ds test cltd fild rex.WB fwait callq or test fcompl cltd xchg jno or push icebp movslq ficom rex.RX test xchg or out sbb (bad) (bad) and jno rex.WB rex.RXB rex.RX rex.WB mov mov sbb rex.W rex.WXB (bad) (bad) or xlat cwtl push ds sbbl xchg lret (bad) sub (bad) lods rex.WRX cmp mov push loope rex.WB adc clc push movabs rex.WRB rcll rex.WB out pop rex or (bad) movabs xorl outsb fcmovnu notl or cmp rex.WXB xchg (bad) sbb scas and mov pop in or sub test rex.WX cmc movabs lods cmpsl rcl (bad) pop and (bad) adc adcl icebp rex.WB sbb push rex.WXB test nop pop mov pop lret xchg mov stc test rcr (bad) iret add rex.WB cmp sbbb (bad) scas jo (bad) or pop pop cmc loope icebp rex.WB xchg (bad) fbstp shr test xchg fldt or xchg or rclb movsb rex.XB repnz rex.WB imul movsb (bad) push or movsb adc rex.WXB and (bad) cmpsl rex.WB or jns add out in sub addr32 cmc imul icebp and lahf xor cmp (bad) loope movsb and adc mov (bad) cmp imul rex.R xor lahf mov (bad) rex.WB rex.X sub jne rex.RB rex.WB sub (bad) rex.WB cwtl rex.WRX rex.WB out jb (bad) adc mov (bad) rex.WRXB (bad) addr32 popfq movsb pop leaveq fdivrs or rex.X lods push clc sahf add rex.RB test adc or lock or push add mov stos mov lock movslq movabs xor jns (bad) xchg and test pop (bad) pushq sbb or mov std pop (bad) pop js stos sub enterq fs rex.XB loop cmp adc (bad) fwait (bad) jb rex.WRX (bad) rex.WXB rex.XB mov enterq leaveq xchg push fldl or xchg push (bad) push cmp rex.WX and sbb add or (bad) rorb cli negl cmp adc (bad) (bad) movabs lods pushfq out (bad) ficom xchg (bad) jmpq out icebp push rex.WRX sub cltd scas adc pop repnz cmc test insb fild cld test rex.WB mov mov jns mov scas (bad) sbb test fbstp out and xorl rex.X push cmpsl movsb pushq cwtl sbb xchg mov jns xchg rex.XB rex.RB or notb sub mov jno cmp leaveq sbb add sub (bad) out insb (bad) sbb stos popfq imul mov cld cwtl (bad) pop pop cltd out subl push fnop ljmp movabs jb mov in gs mov (bad) lret rex.XB cmp push movl (bad) js cmp sbb rex pop mov jae fcoms add clc pop mov popfq js pushq hlt mov xchg cmp xchg or xor mov rex.RX repnz cmp std and movabs pop mov cld (bad) jle movabs mov movl mov (bad) (bad) or mov jne xchg rclb pop movsl shlb pushq stos (bad) or sbb mov cltd add adc and mov xchg loope lahf icebp mov mov pop lods cmpsl rex.X nop adc ss add addr32 out icebp repnz movabs fs mov (bad) cmp adc or sub cmp jge fxch scas or jge push mov fsubr (bad) pushfq cld cld roll test push jo rex.WRXB rorb (bad) xchg xor mov mov (bad) or repz (bad) fcompl cmpsb (bad) sub rex.WXB (bad) test mov flds (bad) in out cmp movabs fdivs push (bad) leaveq fbstp (bad) loop sbb enterq push jnp sub cmpsl enterq jp rclb fsubrs or orl cltd pop add jge jp (bad) lret and jle adc test movabs outsb mov mov enterq (bad) mov mov (bad) jo test (bad) mov pushq pop (bad) out lods rex.RX movsl cmp (bad) cmpsl out mov push or jge (bad) cmp xor test add rex.RXB (bad) jmp mov xor pop xchg enterq sub jmp mov in (bad) pop mov rex.WRXB mov xor hlt jb xor pop sub (bad) add and nop (bad) std mov test jle jo sbb push (bad) or adc (bad) sub rex.RX sbb pushq rex.RB mov sbb pop add (bad) jge mov adc xor pop insb test gs cmp iret in mov (bad) and rex.WR callq or xchg jmpq cmp rex.WRXB jno sub xchg mov jl movabs cs xchg loope leaveq rcrb out repz xor orb rex.WRB fcmove rcl leaveq rex.RB sub (bad) mov (bad) (bad) pop adc xor callq mov ss push mov subl movslq je mov rex.WB (bad) ss mov callq leaveq gs rex.WR sbb rex.X pop (bad) rex.WX rex.WB xchg push scas or mov adc movsb rex.RB cld pushq pop pop push (bad) rex.RX sbb rex.WRXB lods mov (bad) (bad) xchg and sbb pop mov movabs push stos push rex.RX pop (bad) rex.WB in add nop loop rex.WRXB lret rex.WXB rex.WR xchg rex cmp (bad) movsl sbb push movslq push mov lret jno and (bad) xor rex.WXB push jns push insl rex.WB addr32 (bad) data16 xor icebp mov add rex.WB (bad) enterq mov outsl rex.RX push mov jnp push rex.W es sub push rex.WRX movsb (bad) mov test (bad) repnz (bad) xchg rex.R callq clc mov sub push sub or (bad) lahf ds rex.WB stc int insb fdivr mov cld in rex.WB jle lods es (bad) pushq lea jl nop sbb subb or adc sarl rex.WB cli lods cmp push jbe push rex.WRXB cs xchg rex.WB movabs push movabs js ficom jge rex.WB (bad) (bad) xor add rex.WB sub xchg fadds cmpsl (bad) mov rex.WXB rex jg cmp (bad) rclb movsb push sub js adc pushq pop movabs test jo nop cmp (bad) sub jae lret fs or jmp movabs (bad) mov push adc (bad) cmp mov pushq out jle push jge rex.W or outsb jrcxz imul fnsave (bad) cmp nop jg addr32 (bad) xor rex.RXB sbb pushq outsl rex fwait mov cmpsb sub jbe cwtl (bad) movabs or cmp sub jo mov rex.WRXB push cmc rex.WX sub mov gs cs jae je add ja jbe sbbb subl add push movabs xchg and jrcxz (bad) ja cmc pop adc adc push movslq lock jne rcrl insb xor mov rcrb add (bad) add pop jnp cmc xchg cmpsb fsubrs nop sbb notl rex.WRB push rex.X rex.RXB push rex.RXB xor jmpq cmpsb xor cmp repz sub mov lea outsl xchg sbb sub leaveq mov pop rcr (bad) adc pop (bad) rclb jbe and mov movabs cmp (bad) in sub add rex.R rex.W stc mov mov in outsl cld (bad) jb lret cmp sub (bad) or jno retq pop and jge movsb cwtl cmp add xchg (bad) pop (bad) loope rex.WX ficomp adc xlat jle (bad) (bad) loop push add sbb test outsl xchg (bad) and cs std imul sub rcrb or xchg movslq ror out cmp fisub (bad) and test mov test cs pop cmp std shlb (bad) sbb mov rclb (bad) mov (bad) adc in enterq pushq xchg rex.RX mov xchg cmp (bad) cmpsb rex.WRX in and std mov and pop ja (bad) (bad) cmp cmp jge jae (bad) popfq in loope test addr32 jo adc jbe sbb xor cwtl and mov outsl adc (bad) rex loop (bad) fcoms in sub mov (bad) sbb jg mov add jmpq pop (bad) xchg callq xor push cmp cmp mov or push popq rex.RB lret (bad) and stc cmp add lea sub ds loop cs adc sub pop sub lahf loope rex.XB add mov outsl add data16 and mov movabs rex.WX rex.WR sahf pop cmc (bad) je xchg inc (bad) sti out pop rex.WR rex.RB rex.WRX xchg pop push movslq (bad) mov lods and push movabs or push out xchg mov hlt enterq cli (bad) jmpq popfq jmpq pop in (bad) popfq cmpl or and mov mov out (bad) loop cwtl fwait (bad) pop rex.RXB (bad) cmp (bad) lcall or and cmp xorb push mov shlq sub mov (bad) rex.WRB sbb or ja jnp mov icebp mov movsb mov fsub addr32 (bad) (bad) jae repz mov rex.WB jo movsl in je sub int3 cmp or add mov imul es ficomp mov sub callq cwtl jnp jne pop rex.WB mov jg mov jmpq cmp movslq pushq mov pop bnd scas rex.WB jrcxz add sub sub rex.RXB data16 addq (bad) (bad) mov (bad) sarb adc adc xchg pushq fimul movabs push (bad) push (bad) jb mov lahf and out xchg adc mov xchg adc mov jno popfq nop fadd (bad) jmpq movsl pop mov (bad) sub cmp xor xlat sbb sahf lahf jl shr rex.WRXB add jmpq fidivr insl fcoms rex.B pop leaveq and (bad) adc sub rex je rex.RXB (bad) or adc movabs sub mul jl cmp retq mov in (bad) jge movabs in enterq imul mov (bad) (bad) pushq xchg outsl out push mov add cli and lahf (bad) int jnp rex.X rex.RXB jmpq sbb (bad) imul stos (bad) jne pushq popfq fcompl pop cltd iret sub sbb sub xor mov rex.RB mov jmp (bad) (bad) mov xor cmc xchg test sti add lret (bad) js movabs jno (bad) cmp mov sbb test push and mov pop rcr js jge cmp and mov imul hlt js in add in rex.B movsb mov rex.XB test loop pop adc pop lret in (bad) lret fsubl xchg movsb adc std fcmovnbe jae gs jno retq fistpl pop (bad) sub jmpq mov rex.RXB cmpsb enterq or out movabs imul adc push (bad) rex.WB cmp test scas rex.WB rex.WXB add jbe (bad) xchg jge xor rex.WB pushq and clc scas fisttp stos (bad) rolb cmp rex.WB sarb cmp (bad) rex.WB rex.WRB rclb cmp or (bad) cs stos sahf movl (bad) out popfq and add fst pop icebp cmp push cmp rex.WXB jp sbb movsl lods xchg iret fwait movabs out mov gs in pop mov rorl mov fstl mov loop popfq insb xlat rex.WB sbb (bad) int3 retq enterq mov cmp xchg mov movsl cld or jbe rex.WXB test clc jmp and mov mov test xor sub or cld sub decl sbb movabs cmp out add sbb cltd rex.B xchg (bad) flds rex.WB rex.WRXB lock jl ja movabs out or rex.WRX pop rorl push sub mov addr32 mov jnp (bad) (bad) jge leaveq out stc sbb je and jno scas lret fcmovu leaveq jle mov add fcoml pop mov jmp cli gs rex.WB rorb leaveq callq imul test lods jrcxz rex.B imul sub movabs mov mov xor jle jp cs mov pop fsubrl (bad) int rex.RXB push scas mov loop popfq iret jp rex.RX movabs sbb decb ds lret (bad) push in jbe test ja rex.WB rex.WRXB addr32 mov rex.RXB insl or notb loope mov out pushq xor xchg iret jne sub loop jns imul adc rex.X mov mov rex.WXB or idivb rex.WR icebp ja cmp rex.RB mov ss mov sbb fcompl fstpl js fcmovnb cmpsl movslq scas movsb sub jb (bad) movsb enterq sbb add (bad) mov and jno gs xchg test xlat sub xchg popfq (bad) jp pop xor xchg (bad) cmp (bad) jbe mov test popfq (bad) fs cli cmp rex.WX int3 push sti xor sub in jp repnz (bad) xor jbe hlt cmc pop loop xor callq (bad) rex.WRXB (bad) (bad) fmull mov and enterq movslq cmp rex.WX rex.X movsl clc xor in adc out push rex.WX rex.WRXB add (bad) or lea rex.WX mov xor (bad) rolb std push or xlat jno lahf or mov callq (bad) (bad) rex.WR cltd pushfq adc (bad) sub pop adc mov ds (bad) jp test adc (bad) movsl (bad) mov xlat xor pop and rex.RB cs sbb sub and push jg push mov in rex.WRX mov rex.WXB test (bad) movslq sub (bad) mov ja fcmovne push rex.WXB jle out cmpsl jno jge rex.RXB mov out mov or pop (bad) shll (bad) cmp mov movsb nop (bad) sub std mov mov cmpsb pop sbb loopne rorb xor rex.WRXB sti (bad) jno in test (bad) lahf xor add js stos mov mov adcl rex.WB rcrl mov and (bad) rex.WB xor movabs ds jl cli mov pushq (bad) rex.WB xchg imul rex.WB outsl sub or jge nop sub pushq imulb add sub mov ds jge movabs rex.WRXB fmuls mov sbbl out data16 add sbb cmp rex.WB lea xor fisubl out imul movabs (bad) sbb rex.WB sbb sbb fild mov adc jge scas xchg (bad) sar loop xchg mov shl cmp (bad) xchg or orb sub cli (bad) in in sbb movslq pop (bad) out xor pushq fs (bad) frstor fiadd (bad) roll cmc jle jae rex.RXB rex.WRX mov pop adc push rex.WB ss orl lret add nop rex.WB jne mov jb rex.WB (bad) mov jle mov (bad) movabs addl icebp push and sbb cmpsb pushq sub (bad) retq lret movsb xchg pop movsl retq cmp jp test int3 (bad) movslq rex.X rex.WRXB rex.WB addr32 (bad) test rex.WB movsb leaveq mov movabs (bad) pushfq (bad) rex.WB rex.WRXB rex.RB int3 xlat rex sub push mov rex.WB cmp (bad) retq loopne test push in callq pop mov add stc xchg xchg sub mov pop (bad) mulb pop pushq (bad) push add (bad) push outsb (bad) rex.WB out mov lret add rcrb out rex.WB adc (bad) mov jbe test mov adc cltd sub sbb mov push (bad) loopne cmpsb retq test (bad) cli lock mov and rclb (bad) scas rorl xchg int3 (bad) rex.RX sbb (bad) repnz cmp mov outsl xchg (bad) mov sbb and (bad) mov test rex.WXB adc push lods rex.WB mov sbb rex.WB lahf or or add cmp (bad) mov rex.WRB enterq jrcxz or retq (bad) retq iret mov xchg movabs rex.WRX rex.B lods enterq xor lahf test mov (bad) adc nop addl mov in orps nop (bad) mov movsb cmp (bad) xor fsubrs test pop scas rex.XB adc cvttps2pi lahf (bad) xor jnp sbb (bad) jl (bad) rex.WRB mov mov (bad) rex.WXB (bad) lea cmpsl in mov data16 lahf imul retq sub or test sbb rex.RXB xchg sbb pop (bad) jp pushq or (bad) scas pop repnz rex.WXB xor cmp (bad) jb rex.B (bad) fstp rex.WRXB mov sbbl rex.WB icebp sahf fcomps sub pushfq xchg mov test addr32 cwtl pop jrcxz mov pop xchg xchg jmpq sub sub mov lret imul xchg rex.WXB cmp out adc xor retq (bad) mov mov sub enterq scas push movslq mov sbb pop cwtl mov rex.RXB xchg (bad) and cmpb jne pop imul xchg fs push xchg xchg jb jle lret add adc (bad) nop movsb or push xor sub (bad) adc fstp (bad) (bad) jo (bad) in push pop out jnp (bad) (bad) stos rex.X test and rex.WXB xchg and fcmovnu sbb jno ss ficomp rex.WRXB or sar pop pop push mov movabs (bad) int jge movabs leaveq mov pop movabs and je jne sub mov adc pushq pushq fs iret push sar xchg movslq xchg push data16 movsb pop movabs xchg je xchg rorl loope fisttpl cli pop rex.WB fs scas mov ds rex.WB adc (bad) out rex.WRB rex.WB rex.WRXB lods cltd in fwait jno xor sbbb sbb sub movabs pop decl and scas push pop or push (bad) pushq lods rex.RB or jns rex.W or lret xchg xor (bad) sbb push je cwtl pushq insl shl or jge (bad) or pop or lea mov jmpq movabs cmpsl (bad) mov xchg mov rex.X rex.WB (bad) pop lret jae insl xor xchg fldl (bad) int test out cltd (bad) movabs jno cmp mov rex.WRB sub pop (bad) iret xchg push mov rex.WB movslq mov pop mov test jno leaveq rex.WB out sahf rex.W popfq jb icebp xchg xor rex.WB (bad) add mov pop push rcrb cmc pop jp rex.WB (bad) pop and xor rex.WB (bad) rex.WX rex.R test mov mov shlb (bad) xor rex.WB sbb int out test xchg rex.WR (bad) iret and rex.WB (bad) iret xor (bad) cltd jnp ds rex.RB out pop rex.WB xchg nop xchg rex.XB (bad) leaveq rex.RX xchg movabs insl mov mov xchg or and jne roll rex.WB lea mov insb lret cltd cmpsl cld mov cmp fwait sbb (bad) js (bad) rex.RXB rex.W rex.WB mov mov insl (bad) js adc rex.WB fxch mov rex.RB or sub jge jge retq rex.WB rex.WXB pop rex.XB or imul (bad) callq iret (bad) push ds mov cwtl insb pushq rex.RB push out iret fnsave mov icebp jge enterq clc rex.WB and out (bad) mov sub sub fisttpll stos and movsl imul (bad) retq rex.WB cmpsl and jg insl vsqrtps jnp fwait and callq icebp fucomp (bad) enterq movabs sub outsl (bad) mov xchg add (bad) in or (bad) xor adc adc fild out test ja cmp jle mov rex.WB fs (bad) and in repz fsubs movabs push js cmp popfq adcl cs pop rex.WRX fnstsw (bad) out int3 hlt (bad) xchg sbb add and and rex retq (bad) mov (bad) pop mov movabs rex orl lahf push gs rex.WB rex.WRX push enterq (bad) add movabs out in fistl jmpq rex.WRXB rol out mov loopne rex.WB (bad) push stos cmp (bad) test (bad) jmp addr32 or push push xor pushq and and rol int outsl rex.XB mov ljmp rex.WB fdivrs lea lcall cmp sub test rcrb fldt (bad) rex.WB movb add rex.WB mov sub (bad) fwait rex.WB cwtl mov sub (bad) (bad) movabs xor sbb or or callq (bad) jmp (bad) xor (bad) jg sub fwait shufps out xor sbb (bad) iret xor ss cmc and (bad) pop data16 rex.WRB xchg (bad) ja (bad) xchg pushq sbb and jbe add xchg pushq rex mov rex.X addr32 xor mov rex.WB jge pop xor movabs mov loop sbb cs adc xchg push xor add rex.WX fwait mov (bad) rex.RX rex.WXB int3 loopne pop rex.WX push adc rex.WR fsubp rex.WX addr32 divl or add out out cmpl scas sub (bad) data16 (bad) or or pop mov lock (bad) mov std pop faddp push sahf test stc jmpq retq push cwtl xchg stos push push rex.RX cltd mov mov or adc fadds add pushq int3 and cltd loope jge rex.WB xchg sahf neg ss jo mov rex.WB mov mov mov and xchg js mov or subl test push jrcxz xchg ja rex.WB cli (bad) and pop pop push fidivr jnp loope iret outsb rex.WB in jge mov incl rex.WB and pop rex.WB sbb add mov out xor (bad) adc movabs rex.X push in retq rex.WB pushq mov mov rex.XB es xchg loope mov in (bad) mov lea sbb mov push out movsb sti roll mov (bad) rolb rex.WB (bad) mov flds callq pushq rex.WRXB (bad) sub lock rex.B es rex.WB repnz movsb sbb inc push rex.WB adc in rex.WB shll rex.WB adcl rex.WB rex.WXB sub or rolb sub mov pushq push or pushfq (bad) mov fistpl mov rex.WB (bad) add mov (bad) sbb (bad) (bad) insl jnp xor adc mov pushq lret sbb or out (bad) rex.RXB (bad) cld (bad) cmp test out sub fwait sbb rex.WRXB rex.XB cmpsl add pushq rex.RXB stc lahf sbb movslq push pop mov loopne (bad) rex.WB pop mov or pushq (bad) push and mov or retq stos es pop and imul rex.RXB sarb test icebp xor rex.WB data16 rex.WB mov cmovnp rex.B xchg rcl push fstpl rex.WB jo mov nop or cmp cs cltd rex.WRB sub pushq callq rclb mov mov test loopne adc xor pushq (bad) rex.WXB adcl pop mov gs mov fiadd int3 rex.WX lock loope retq pop (bad) sbb rex.WRXB adcl cmp test outsb movabs (bad) fstpt mov cmp jbe jmpq push pushq test (bad) cld adc pop xor cmp in push rex.WB ds movslq jbe or (bad) rex.WRB mov adc jo rex.WX sub movabs icebp rex.B push jae movsb jmp cmpsb and ss loope add (bad) mov (bad) add rex.WB clc rex.RX or loop mov add enterq cmp push nop rex.WB xor out sbb rex.WB jrcxz jno jne (bad) pushq fnstcw loope sub es jg and pop add clc jne adcb callq outsl out sub rex.WX mov rex.WR mov movsb ds or andl and mov sti and pop int3 or mov jb rex.WRXB sbb sbb mov in rcrl mov add jl test (bad) out xchg ficomp (bad) callq test adc scas movabs mov jg jge and test xchg rex.WR sub rex.WXB cvttps2pi (bad) pushq pushq lret (bad) cmp sub xchg rex.WRB rex.XB rol adc mov push jle or imul scas test neg insb pushq cmp mov pushq sub mov cli loop addr32 rex.WX es negl fildl xor (bad) (bad) adc sub mov cs repnz stos and rex.X lahf roll popfq adc jmp out jo callq add or sbb xor push leaveq add pop xchg outsb sub sbb add outsl int out rex.WB sbb (bad) rorb insl and jo or fildl mov rex.WR mov mov out rex.X mov pushq cli (bad) cld icebp rex hlt (bad) or (bad) or pushq adc pop mov sbb fwait test enterq (bad) out (bad) xor and xchg (bad) orb xor or (bad) cmp rclb rex.WR popfq add sbb mov sub shl xorb rex.WXB cs popfq adc rex.R jp jmp rcll pop cmp and pop sub or lods push test rex.B (bad) adc xor (bad) loopne mov jrcxz push pop pop push in callq sub xchg int3 fwait push rorb adc out int3 data16 mov pop (bad) imul mov jno mov sub pop push jb cmc or addr32 rex.B test jle iret pop xchg decl rex.R rex.RB rex.WXB fimull sbb and sti xor or jb or movsb js mov and out pop (bad) xchg popfq and (bad) cmp sbb sbbl flds mov subl pop (bad) (bad) jle outsb cmp (bad) scas push (bad) xor adc enterq test mov jae push ss rex.WR out and scas loope pop pushfq mov movsl add imul adc mov imul lret movsl (bad) loope rol movsb rex.XB (bad) or sbb pop enterq jmpq ds pop notl (bad) mov jo paddq pop or adc mov add fsts test xchg mov (bad) mov jae sub mov xchg test movabs rcrl (bad) data16 stos sarb leaveq in (bad) xchg or mov (bad) (bad) stos adc movabs (bad) pushq orl pop (bad) ja gs cltd ds lods xor dec mov rex.RB sub imulb push icebp jne jp add push retq jmp (bad) adc rex.WX mov (bad) jns jmpq (bad) div (bad) adc and jge push and (bad) xchg sbb iret add mov rex.WX out rex.XB or pushq jbe addr32 fwait jbe decb mov mov movabs cli jne rex.W rex.XB test mov jb adc sbb xor jg rcll test xor imul (bad) jle mov std rex.WRX rex.WXB mov or fiaddl jnp rex.B ds mov rex movslq cs roll (bad) rex.RX stc push sbb and lock popfq push xor jg rex.WR rolb (bad) out pop and mov scas rex.B rex.WXB ljmp hlt mov movabs mov repz cmp push adc stos mov or rex.WRX (bad) sbb mov or sti outsb movsb mov rex.WRXB retq rex.RB or pop rex.B movsb movabs and pop (bad) adc and (bad) mov divl cmp add test (bad) (bad) scas mov xor test mov rex.WR xchg pushfq movsl and lods rex.WB mov rex cmpsl (bad) sub imul and xlat mov mov and retq mov mov fs retq jb rex.RX fwait xchg out (bad) popfq test lock or (bad) cmc lahf mov cmpsb and lret or (bad) mov (bad) jno (bad) std stc je rex.RX fild jle jp (bad) outsl cltd cltd in lret or and rex.WXB jns rex.WB xchg mov cwtl loopne rex.WB data16 rex.WRB jrcxz xchg jae cmp mov (bad) cwtl sub or (bad) lods lock lods sub movsb add subb test int or mov hlt movsl mov mov cmp rex.WB lret and out retq test push repz mov (bad) (bad) insl movabs roll pop and (bad) insl rex.WB rex.RXB xchg xor insb (bad) push add cmp push (bad) test mov xor add sbb push (bad) jp rex.R nop shr iret insb lret mov rex.WB push push sbb or push and movsl addr32 add clc xchg je xor push add repz (bad) out outsb rex.WB js push retq cs pushq test repz movabs push (bad) rex.WB jae xchg (bad) (bad) cmp xchg lock xor out cmp sub pop sub cmp (bad) mov and (bad) push cltd ja ficompl (bad) rex.WB test (bad) rorl adc or or xor rex.WB ja and jnp stos movslq mov ds ror pop rcrl pop jge cmc mov loopne xor adc rex.WB stos loope mov iret movsl int3 jne jmpq idivb xchg sub int std sbb sub sub repz mov stos faddl pushq push pop xor sahf movabs fldl subl movabs test pop mov leaveq or (bad) rcrb (bad) xor rex.W or test jns neg rex.WR rex.WX rex.RX mov pop (bad) jmp (bad) push stos out jmp rex.WRB jmp in jnp test mov jle sti es sbb sbb xlat ss adc xchg icebp cmpb (bad) fadds cmp repz or or (bad) or mov (bad) (bad) test rex.WRXB mov pop rex.RB fs mov cmp out insl vunpckhpd and sti (bad) rex.WXB gs fcoml (bad) pop clc or rex.WX xor (bad) rcll cltd jb jns or std (bad) mov jbe xchg rex.R in push jle leaveq jne pop sub (bad) (bad) rorb fnop and sub fldcw cltd pop fadds mov (bad) (bad) shlb movabs pop xchg rorb repnz mov adc cs movabs pop rex.WR jmpq adc cmpsw cld imul sbb movabs adc movslq in rex.WXB jne mov outsb add rex.WR pop and or roll pop mov pop nop pushq insb movabs lret or lea rex.RB jp out cmp jne rex.R add rex.WR xor (bad) xchg insl push (bad) (bad) xchg pushq rex.RX or and xchg je fiadd rex.WRXB sbb rex.RXB and mov add jns lods movabs enterq mov rcr adc movslq data16 in stos popfq out pop stos sub sub cmp test sub cmpsb loopne push movabs sbb adc (bad) rex.RB sbb test xor and out push sub (bad) cmp sbb mov rex.WXB push and mov or push jle ja lret cmp fwait repnz mov rex.WXB mov fldt (bad) mov enterq movslq xchg (bad) add pop addl mov nop adc and add pop sbb jae or mov mov int (bad) and rex.WRXB rex.WR repnz sub in push sub insb or in sub cwtl rcl rex.WXB rex.WB lock (bad) push movabs gs and push sub mov push mov and (bad) jo rex.WB or mov vpunpcklqdq add or pushq rex.WB jge cld and outsb xor sahf and xor push push movabs (bad) movabs mov mov add imul out rex.WB stos xchg in mov rex.WRXB rex.WB or adc mov sbb push mov scas lock push jle hlt loop in imul cli pop loopne xor push rex.WRXB sub mov mulb xchg rex.WB xorps test cwtl ja shlb rex.WB addr32 mov nop fwait adcl or add jp addr32 movslq (bad) and mov (bad) cmpsb mov callq xchg negb (bad) pushq fcomp cmc push sarl jmpq rex.WRX in adc xchg sbb gs clc push rex.RXB adc nop je xchg mov sbb (bad) movsl push push pushq rex.R (bad) sub and and rex.X rex.WRB rex.RXB rex.WRB rex.WB int or int3 pop push xchg pushq (bad) sub cmp lods rex.WB ss lods jp int xchg jno jg cmp addr32 movslq adc add fsubrs movsb (bad) fisttpll ja push xor rex.WB (bad) repz hlt (bad) rex.WB stc jmpq mov sti mov xchg mov pushq scas sub (bad) rex.XB rex.WB (bad) jle mov imul sub movabs jne sub loope or adc popfq mov adc mov rex.RB pop (bad) cmp cwtl adc (bad) fsub mov sbb rex.WRXB mov jrcxz pop add cld test sub int rex.RXB xchg (bad) mov push pop lods stos rex.WRX lock jo rclb cltd pop rex.R loope rex.WB push cli rex.WB retq xchg imul add jns and push xchg movabs cmp pmulhw repnz mov rex.WB push pop movabs pop ja subl (bad) imul sbb movabs (bad) sub pop in cli sub repz (bad) callq (bad) (bad) pop in adc fnstsw es jbe rex.WB rex.WRB rex.WRX xchg sub (bad) push rex.WXB rex.WRB ds cmpsb jmp rex.RXB push rex.WB (bad) rorl jmp in (bad) nop sub xchg pop add xchg jge rex.WB xchg sub test lahf pop icebp rex.RX xchg add pushq clc rex.WXB or mov jrcxz repz pop rex.WB rcr jge sub cmc shl icebp (bad) xchg frstor jbe or sub add pop retq fnstcw lock jnp rex popfq loope sti nop or test clc fimull je fisub and imul mov cld add rcrl or lret stc rex.WB insb mov movsl mov cmp push sub and mov pop adc pushq rex.WRXB cmp push or ja (bad) sbb sub (bad) push scas repnz rex.WB rex.XB leaveq loopne adc fxam testb add push movsb outsl movabs fisubl gs scas sub enterq mov cmp jp (bad) (bad) mov mov rex.RX pop rex.XB and rex.WB movabs (bad) jg rex.WB rex.WRXB mov mov (bad) add (bad) jns pop movabs (bad) (bad) push lar in jge rex.WRXB (bad) xor (bad) fildl rex.W cmp sbb fwait xor adc jmpq callq cltd movslq rex.WB rex.WXB cs sbb rex.RXB cli rex.WRXB and xchg test (bad) or xlat pushq add pop fisub sbb test lret data16 mov sub add pop cmp jrcxz mov and rex.B out insl mov lock rex.RXB xor scas gs pop add imul adc (bad) in pop (bad) or mov (bad) mov sti rex.W (bad) test (bad) mov lret mov jge addr32 xchg es repnz sub fbld (bad) imul (bad) callq adc movabs xchg sbb mov xor xchg xlat (bad) test cmpsb lret (bad) mov mov movsl mov (bad) outsb rex.RX rex.WB std and xchg andl and mov fdivrs push jge imul and jge rex.WR xchg jb push (bad) int3 push rex.WB jnp cltd outsb rex.XB xor mov insl pushq jge movslq xor mov sub pop rex.XB cli rex.WB xor push mov (bad) lahf movabs xchg lods (bad) sbb rcll punpckhbw movsb test (bad) rex.WB lock insb fbld (bad) sti (bad) movsl add addr32 gs iret pushfq or out cli in adc or or cmp jp fsts ja xchg stc movslq stos add jg rex.WB add mov push rex.WB or ds xchg (bad) rex.WB jp outsl adc in out (bad) jne pop ror rex.RB and stc jl xor (bad) cld sub fdivrl fildll push and sti sub jl rex.WB rex.RX (bad) rex.WRB fs rorl add rex.WX addr32 rorb leaveq fnstsw vmovhps cmp movabs scas je pop insl (bad) popfq gs cmp imul test and stos mov cmp rex.WB imul sahf xor shrl rex.B movabs add pop push fs (bad) callq lods je data16 test push cmp pop rex.WRXB jns jg and cld jrcxz ja sub adc scas fwait (bad) rex.RXB or rex.R add xlat and rex.XB pushfq mov movsb in mov sub test adc jne rex.WRXB xchg xor addr32 mov push rex.WRXB fadds (bad) stc sub pop js add adcl push js movsl decl (bad) pushq pop add out lods (bad) and xor int jns adc (bad) scas sbb rex.WR scas jo and jle,pn push fs cmc xor mov roll out lret pop rcrl idiv xchg (bad) mov (bad) rcrb outsl int3 cmc mov pop rex.WRB add push popfq (bad) scas fs add test mov add callq jno rex.WR rolb sbb addr32 rex.WX es out adc repz jno lret fdivrp sbb pop rex.WX rex.WB rex.WXB (bad) xor rex.WX pop mov rex.WB repz fnstsw or outsl push rex.WRXB imul add jne (bad) loope rex.RX xchg lea and jg (bad) imul mov fsts test mov fldl mov sbbl pushq sub js cmp rex.RB lods ja jno int rcr (bad) xchg jl (bad) rex.RXB push sub (bad) rex.WB cmp or cmp sub or (bad) jle mov rex.WRB icebp callq rex.WX movsl sub in (bad) rex.X (bad) js sbb out cmc add rex.RX shll scas popq jbe cli xchg test rex.WB rex.W sbb (bad) adc andb repz rex.WXB rex.WB (bad) pop shll movabs movabs and rex mov (bad) xor push rclb rex.WR addr32 rex.RXB imul add mov adc (bad) cmp (bad) (bad) scas jne movabs or loop (bad) cmp out or clc pop push lret rex.WB mov loope rex.XB movabs shll (bad) sbbl xor pop and imul iret mov or sbb and (bad) pop xor push (bad) cltd jns fild pop rex.W imul (bad) pop mov retq data16 adc movsl push pop sbb adc imul mov pop outsl and callq sbb sar push adc pushq push pop out (bad) movabs pop movabs loopne sub (bad) cmp repnz movabs out rex.WB lock xor xchg add pop in cwtl leaveq (bad) fmul mov fsubs in sbb (bad) adc pushfq (bad) orl rex.RXB cmp (bad) or data16 lods xchg cmp sahf fsubs leaveq or adc (bad) ror sbb in cmpsb mov incl mov jb or sub mov clc je popfq lock xlat enterq push lods sub movsl pop int loopne mov xor xchg mov mov or rex.WB pop cmp insl sub cmpsb leaveq xor rorl fldcw repnz and push xor fst stos rex.WRXB mov sub jge or rolb icebp scas or sbb jrcxz and (bad) cltd xchg rcl cmc inc add add mov popfq movabs cmp adc fdiv lea (bad) and out (bad) add push mov rex.WRX jle movabs xchg (bad) sub adc scas xor adc rex.B rclb cmp imul jns (bad) rex.WX lock stos (bad) test rex.WB iret (bad) decl pop loopne cmp shrb sub sub mov rex.B movsb sbb xor adc sbb push movabs rex.WRX cmp rex.R rex.WRX test (bad) (bad) je rex.RXB (bad) stc lahf sti stos clc mov sti mov sbb or jbe rex.X add test push (bad) ficom lahf and jnp cli test out mov pop mov and jb xchg and jge rex.WB or (bad) rex.WXB adcl fldenv stc imull (bad) sbb out stc int3 mov (bad) jmp xchg mul (bad) cmpsb mov out xchg repnz or int3 xchg jae jmpq stos fwait (bad) es jbe pop mov jp retq es add xor imul fcomps (bad) (bad) test xchg xlat (bad) push shll xchg rolb mov xchg (bad) rex.WX (bad) (bad) icebp mov (bad) addr32 and (bad) (bad) jl test (bad) rex.RB cmp ficoml mov int3 sarb or jo pop and or xchg insb rex.W loopne add rex.RX stos sbb mov movabs test cmp jbe cmp mov mov jno mov movabs mov repnz (bad) rex.R jns int3 (bad) xor cs loope mov add xor or mov sbbb and push cld jns or jge lret cmp adc imul rex.R cmp rex.WB jbe add fsubs and testl xchg push cli sub jg pop adc fmuls test (bad) scas repnz pop push test xor (bad) movslq popfq (bad) addr32 jp rex.WB cmp out xchg cmpsl or shrb rex.RXB and rex.WB repz test rex.WB lock mov mov iret mov jae xchg loope (bad) enterq rex.RX out rex rex.WB jns mov hlt insb cmpsl movsl push outsb lret pop rex.RX mov cmpsb fs (bad) pushq mov (bad) rcrl xchg mov rex.WB cmp jp mov mov pop jae mov jle push and xchg rex.WB pop adc stos push out push callq jmpq sbb (bad) (bad) (bad) push xchg xor pop mov and rex.WB rex callw jns cmp (bad) shl out rex.WB push jno jb es (bad) addr32 (bad) repz sbb (bad) jbe rex.RB mov jp callq mov pushq ja test movsl rex.B xor loope (bad) xchg (bad) rcrb mov xchg sub adc pop cmp out mov rex.WB (bad) fwait mov rex.W (bad) and mov idivl rex.RX cmpsl retq rex.WB xor mov rex.WB mov test clc loopne idivb (bad) rex.WB cmp rex.X test shrb rex.RB rex.WB (bad) cmp rex.WB std or out test loopne and mov rex.X fstps (bad) sbb movabs and test or and (bad) add insl sbb push push enterq imul add push movabs sbb rex.R cmpsl rex.RX jg retq rex.WB jmp and sbb rex.RX loop movabs ja and rex.WB and fimul insb mov movsl jo movslq mov rorl int scas mov pop and xchg push cltd jbe lea or rex.XB jp js in xchg movsb (bad) test mov (bad) rex.WB fcompl decb in cmp sbb cmp xchg stos xchg fs rex.XB (bad) rex.RX mov lret leaveq movabs mov xor rex.WRX rex.WRXB rex.WRX mov mov scas sub (bad) rex.WB mov cmc out stos cwtl (bad) movabs jbe rex.WRXB xchg xor (bad) (bad) xchg ja rex.WB rex.XB stos sub je loopel xchg pop and mov or incb outsl xchg jnp movabs mov or mov jmpq sub (bad) xchg movsl mov sub or pop adc clc (bad) mov mov ror rex.WB retq cmpsl ja rex.WB outsl sub loope fwait push push xor push rex.X adc sti clc (bad) push in pushq fs jle rorb xchg and jrcxz rex.WB nop incb movabs stos and (bad) xlat cmc push sar (bad) shrl outsl hlt out addr32 push lock push mov xor (bad) push mov fnstenv in callq adc push lahf pop mulb (bad) rex.W rex.WB cmp in mov pushq (bad) in (bad) sbb sbb js sub xorl leaveq push rex.RXB (bad) and rclb (bad) outsb out (bad) (bad) rex.WXB xchg push mov retq in rex.WB mov shrb rex.RXB movabs es loopne or mov int xchg movabs jne shrl test mov rex.RXB sbb popfq xchg or data16 xchg movabs mov enterq cmp retq mov add push stos jbe jmpq sbb negl imul (bad) or je cmp mov movslq movsb mov in orl xchg and sbb xchg adc jne add push or addr32 rclb xor (bad) sub add data16 je sbb rex.RXB sub adc je add pop clc cmpsb adc (bad) mov mov pop sub retq (bad) mov rex.WB hlt (bad) out pop rex.RB rex.WX in jle pushfq imul rex.B sub mov sub popfq lods mov icebp rex.WB and cmp scas and addr32 mov mov or std divl cld jle jo xorl or cmp lock or pop xlat fwait in cmpsb data16 (bad) adc enterq rex.WR rex jne nop jp (bad) sbb mov and (bad) rcll and rex.RXB rex.WB and pushq mov rex.XB rex.WB pushfq int3 enterq callq (bad) sub sbb cwtl mov stos mov and and imulb jmpq (bad) insl (bad) pushq mov rex.R rex.WXB and repnz sub in rex.WXB (bad) pop and fldcw (bad) adc sbb rex.WB addr32 mov (bad) and jmp (bad) (bad) or (bad) fldl push xchg xorb (bad) (bad) sbb lret data16 pop xrelease rex.RX cmpsl sti rex.WB jg jns (bad) movabs mov (bad) test mov xchg rex.WB xor retq add gs rex.WB mov paddsb pushfq jg rex.RB mov mov pop decb test xchg out sbb (bad) (bad) add clc push sub xchg test (bad) xor repz retq cmpsl movsl jge xor popfq jg repnz push xchg retq fcmove (bad) rex.WB mov out es fidivr xchg (bad) retq push syscall (bad) push ja enterq adc lock and shr jrcxz (bad) mov insb (bad) xchg movl xchg rex.WB fildl fs and retq insb shrb cmp loopne sarb rex.RX mov adc imul (bad) test roll mov or rex.XB mov lret or rol mov data16 rex.WB fbld sbb in xchg (bad) sub mov rorl stos rorl push lret push xchg push xchg leaveq rex.WB (bad) (bad) imul (bad) fs fucom rex.WB enterq xchg rcll lret jb cmp add jns jnp (bad) je xchg jle cmp fstl xchg (bad) pop in scas ja adc rex.R mov movabs leaveq addr32 rex.WB rex.RB movsl sbb icebp jo imul and ss lret mov rorl rex.WX jrcxz fstl adc cmp (bad) jle jl (bad) cli push pop retq rex.WX lock rcl push cwtl fdivr xchg fimull xchg xchg xchg jae pop xchg mov fiaddl xchg rex.WB mov rex.R fmuls fldenv rex.RXB xor ds mov clc pushq mov cmpsl (bad) (bad) fwait (bad) rex.RB lea jl and xchg stos imul rex.R xchg (bad) xchg xor pop cld (bad) sub out pop icebp sbb callq shrl adc jbe adc enterq sarb rex.WXB mov xlat adc pushq rex.X enterq xlat imull rex.R xor mov leaveq (bad) int jne xor sub rex.W xrelease adc pushq pop vcvtdq2ps push repz mov rex.WX xchg (bad) or or (bad) jns (bad) pushfq adc adc rex.WRXB and leaveq stc sub xor xchg jno (bad) cmp jno fdivs rex.WXB icebp (bad) movsl movslq test xchg xor xchg (bad) rex.RX retq sub mov (bad) addr32 and sbb mov mov icebp adc push mov (bad) sub or rex.XB fisttpl add add leaveq (bad) or rex.RX addr32 jo je cmp jl js out idivb (bad) and (bad) push out xchg adc rex.RXB sbb stos loope mov not or imul rorb cmp cld adc hlt imul xor xchg rex.WRXB movsb fsts mov lret out gs fdivrs pop jrcxz (bad) in adc insl xor xchg mov rex.WRXB xchg adc rex.B rex.W (bad) clc lret rex.WX cmp cmpsl imul test insl or (bad) rex.RXB (bad) (bad) rex.WB rex.XB mov (bad) testb jo mov push shll jb shr lret jne and rex.RB (bad) pop insl mov jnp add rex.W scas rex.WB adc cmpsl and mov cld xor rex.WB xchg rex.WXB sub xchg push push mov (bad) movsl rex.RX rex.WB hlt add (bad) test or outsl rex.B or rex.WRB cltd pop or cmpsl add mov sbb rex.WB rex.RX and sub (bad) retq sarb jbe pushq loopne jg rex.WRX cmc mov (bad) jns stos mov push or (bad) lods rex.RXB test imul or pop or stos push jne lods (bad) (bad) movslq add add (bad) and pop (bad) data16 rex.WX rex.WB rex.R cs js mov rex.W (bad) mov in lock jmp in scas mov or (bad) xor mov jp leaveq nop and sub (bad) mov pushq or sti mov outsb jb loopne retq add stc push imul jge shl mov shrb cltd add or sbb movabs (bad) loopne test imul je and mov jb hlt sub jg and rex.RB lods or xchg jge rex.WXB sub adc and xchg (bad) rex.WB outsl out stos (bad) (bad) (bad) or out cs mov xchg repnz sub pop push shll pop clc sub out loopne xchg fsubp jge pop out (bad) sbb pushq rex.WB jmpq mov andl push (bad) addr32 jnp out xchg and mov (bad) push rex.WB gs or rex insb rex.WB test adc (bad) (bad) cmp xchg cmp cli xor pop (bad) xchg pushq (bad) or shll jp rex.WB xor add or mov subl push fstp rex.B movabs repnz add (bad) adc xchg add (bad) rex.WB in in xchg (bad) test jne adc lock pop fs ds out jrcxz int rex.RXB rex.WB insb sbb stos cmp int3 and repnz rex.WB and jl,pt jrcxz sbb xchg (bad) rorl (bad) outsb xor insl push sub mov cltd enterq out popfq rex.WX push sbb rex.WB (bad) (bad) clc add ficomp imul or mov mov or xor and lret xchg test (bad) je mov movabs jrcxz fs rex.X js add mov rex.WRXB rex.WB test lods jb jae (bad) test mov ja gs xchg rex.WB ds mov pop test lods sbb (bad) and movabs loopne ds clc retq fbstp fsubl (bad) movabs addr32 movabs (bad) xor (bad) jnp out iret mov enterq nop and movsl test mov outsb jrcxz rolb popfq or cltd pushfq pop pushq mov and adc adc orl fstps (bad) xor rol xchg lret (bad) mov lret fdivs mov stc cmp cmp add rex.WX or (bad) mov lock xor rex.WR push push (bad) jmpq push (bad) jne sub insl mov rex.WR rex.W movabs (bad) callq rex.WRXB rex.WB (bad) ja jrcxz stos (bad) negl rex.WB sbb pop rcrl int3 fimull rex.XB jb xorl rcll pop mov rex.WB xlat mov rex.XB or sbb test lahf leaveq rex.WB rex.WXB sub xchg jnp push bswap jle push movabs sbb (bad) or insl pop mov xor rex.WB add mov and pop xor pushfq int push xchg fisub rex.RB movsl xchg ss adc sbb rex.WB es out fld1 outsb mov rex.WRB rex.WB sbb rex.WX stos stos in rex.WB or mov insb fimull (bad) rex.WXB rcr rex.WXB sub sbbl sub test cli push lret mov cltd xchg lods test xchg rex.R sub clc cs push (bad) and test xchg (bad) rex.WRB test test mov rex outsb int mov test mov outsb lret adc std popfq and ds movabs out rex.WB jns mov imul rex.WRB sub (bad) sbb (bad) lods push rex.WB mov push rex.WB jle mov sub fldenv sub (bad) stos loope pop (bad) mov nop rex.WB es mov decb test (bad) cmp popfq rex.XB jb (bad) int and icebp rex.RX sarb mov test movabs pushfq cltd std mov (bad) repz (bad) scas rex.WB cmp enterq pushq mov (bad) add and push (bad) jo mov fnstcw xchg rex.WB pushq pushq lods rex.WB jns lahf rex.WB data16 and rex.XB rex.WRXB repnz callq mov clc loopne cmc icebp rex.WX int3 rex.WB (bad) add sahf (bad) pop out add negb xchg rex.WR insb pushq loop retq icebp test xor callq jns push gs scas rex.WB fs out sbb pop pop ror mov xor or jp pop negl ss insb and rcrb lock lahf lret loop adc add cmp cmp rex.WB lods push rex.WRXB fildl xchg (bad) (bad) mulb addr32 adc clc pop pop mov or imul (bad) rex.WB adc outsl out rex.X rex.WB cmp jb add rcr mov add loopne adc shr mov pop movabs lods xchg mov push add cmp (bad) movabs rex.WR rex mov pushq mov sbb mov (bad) movabs sbb push push mov retq icebp and (bad) out sub mov fs imul rex.WRB mov rex.WB xchg xchg insl je rex.WB mov std xor rex.WB rex.B push loopne (bad) push stos retq rex.WB rolb mov pop rex.WRXB jge fwait xchg pushfq insl rex.W (bad) (bad) rex.WB (bad) xor rcll callq add loopne rex.WRXB cmpsw shll jle xchg (bad) popfq pop pop (bad) clc insb stos rex.WRX test mov cmp pop (bad) jmp mov sub rex.WB rex.B and outsb and sbb enterq or and push pop (bad) stos jge insb mov callq (bad) xor (bad) xor mov sbb hlt xor push iret pushq retq ja fidivl es imul outsb mov (bad) adc icebp or jrcxz std jmp repz jo xchg fisttp adc (bad) xor or or sbb out add neg jle movsl push rex.WRB cwtl mov int int3 retq jno (bad) mov lods cmpsb scas xchg lret jo cli xchg rex.W sub rex.B int pop fist mov lods mov jbe mov xchg movsq int push rex.WB callq rex.WB ds out movsb es sub in jnp (bad) (bad) rex.RXB sahf rex.WB pop lods lea (bad) shlb jp jrcxz enterq (bad) sbb rex.WB outsl fdivrl fldenv decl cmp orl add (bad) jns insb fldenv rex.WB xchg outsb shr mov lret push divq adc cmp sub rex.XB xor out ficoml loope movabs mov (bad) rex.X mov (bad) (bad) mov rex mov loop mul mov cmp pop xor (bad) js rex.WB pushq movb pushfq outsl jne push scas retq repz nop jmpq xchg (bad) (bad) pop (bad) pop out xor sub icebp (bad) rex.RXB callq adc rex.WRX mov jno fwait sbb int fidivl stos mov movabs rex.RXB test sbb mov sbb scas fstpl imul xchg xor rex.WRX push add jmpq pop (bad) test push rex.RX jae callq popfq or push rex.WB gs (bad) pop jge test pushq sbb pushfq sbb ds jrcxz (bad) (bad) stos or test es out cmp ror or insl andl pop mov lea jrcxz rex.RXB cmpsb rex.XB insb lahf movslq (bad) mov mov mov lods (bad) insb xchg adc or leaveq outsb sub movabs and movabs pop mov (bad) fildll pop cld jge lret (bad) sub xchg (bad) callq (bad) push out adc rex.RXB rex.WB fiaddl (bad) movabs loop sbb pushfq (bad) pop jne push fildl ss and in or (bad) (bad) in ja jns cmp sbb jge pop jo jae and test mov rex.WB sbb out mov cmp rex.WRX and jp push sbb sahf mov rex.WB mov mov movsl cld pop push xchg retq cltd rex.WB (bad) repz or or jp pop mov pop std rex.R lea movl mov js and mov mul cmp add sub cld (bad) rex.WB movabs mov (bad) (bad) movabs jae (bad) and imul pop push rex.WB ficompl (bad) adc jmp (bad) (bad) fdivrl lret rex.WRX rex.WB or fmuls push rex.B rex.B add xchg int3 adc jae mov adc mov pushfq adcl rex.WRXB in mov mov in xor movsl lods mulb pushq and repz lret (bad) pop mov adcb outsl movsl mull out xchg (bad) subl pop lahf in lret rex.XB (bad) cmc (bad) in sub stos mov (bad) (bad) sbb push repz xor push jb mov iret rex.WXB xchg retq xchg mov (bad) jge andb rex.WRB xchg rex.WB idivl addr32 pop test mov sti cmp bnd cmc fwait outsb sbb xchg rorb test loope jns cmp clc (bad) loop popfq in out rex.WB lock (bad) lea gs (bad) push fcomp mov mov jne movabs (bad) cmp xchg (bad) pop xlat test push hlt xor pushq or in (bad) sbb shrl rex.WR (bad) rex.WB lahf (bad) retq xchg fistp rex.WB cmpl xchg js mov (bad) mov pop jb in rex.RXB adc or mov sbb rex.WX pop (bad) mov rex.WB rex.B jrcxz rex.RXB sti syscall cmp int test add lret cmp rex.B or sub mov xchg add mov add movabs cmc ficoml subb rex.WB mov jmpq je push cli pop (bad) jnp rex.B jbe rex.WB mov and fildl movabs push mov and mov sub mov clc in pop rex.WB add (bad) (bad) push or rex.WB stc callq xor mov lret lea cmp (bad) (bad) mov shll (bad) fdivl and jae adc sti rex.R add fisttpll cmp stos (bad) xor sar mov cmp out stc movabs rex.XB rex.WB mov rex.WB stos (bad) (bad) and int3 cmp xchg (bad) fwait enterq addr32 addr32 xor xchg mov (bad) cld mov pop fisttpll (bad) mov push (bad) sub shrl movhps insl rorb pop mov or (bad) iret (bad) mov xchg rex.WB rex.RXB pushq andl test enterq rex.B rex.WRB mov rex.WB push sub rex.X nop rex.WB rex.WX rex.WXB in cwtl jmpq jle cmp rorl xor adc fmull and rex.WB popfq frstor sub jrcxz (bad) jno rex.R rex.XB (bad) lret cmp add fdivrs rex.WRXB sbb (bad) mov js jne adc and xor jns push push enterq cmp (bad) retq (bad) sub cltd xor pop push loope movabs int3 add callq jne push repz xchg fild pushq pop (bad) fcompl sub cmc mov jno push cmc sbb test movl sub shr mov mov (bad) lods (bad) pop or xchg pop or rex.WX movsl hlt (bad) leaveq rex.WB movabs jg sub pushfq sbb and xchg adc popfq sti rex.WB (bad) (bad) stos ds adc cmp enterq (bad) jae scas movsb mov pop loopne cs (bad) lock (bad) push cmpsl push out nop jo jno sbb sub lret pop mov fldcw rex.RXB cmp pop rex.RB push mov sub mov loopne sbb jne fstpl icebp sahf mov stc sbb mov add sub xchg rex.W (bad) mov rex.WB jb icebp sub mov xor pop ss insl push rex.RX repnz rex.B xchg or (bad) and addr32 js jb mov retq add (bad) lret pushq sbb sub movslq test rex.WR mov (bad) rex.R xchg cmp mov jb xchg mov fisttp mov cwtl nop (bad) fistpll sbb adc lret (bad) rex.WB (bad) repz pushq push lea clc pop sti gs nop xor sbb (bad) push mov jg mov cmpsl sbb and add rex.WRX xchg mov sbb test imul or rex.WB jno cmpsl pushq repnz pushq push pop lahf leaveq or mov pop xchg push push pop push cmp (bad) mov adc pop shrb movabs jrcxz (bad) sbb push fisub js rorl (bad) (bad) pushq test jp and and loope popfq rex.X sub rex.W sub or mov cli sub (bad) subl bswap scas hlt rex.WB rex.WRX mov rex.WR lock movsb xchg rex.WX (bad) xor addr32 xchg rex.WRB rex.W sbb xor sub cmp cmpsl jrcxz push push rex.WXB (bad) popfq and rex.WB add jbe pop (bad) jl rex.RB gs (bad) pop (bad) sbb pop test in (bad) sbb rex.XB fwait (bad) faddl xchg pop or cmpsl rex.WB xor xchg (bad) testl rex.WB cltd ja addr32 sub (bad) sarb callq addr32 sub pop pop rex.WX ds data16 push adc fmuls sub je rex.RX (bad) mov sub add (bad) rex.WB ds xchg popfq jp movsl not mov push push stc mov xchg movabs rex.WB out popfq rex.WX pushq leaveq cwtl or gs test ds andb and (bad) xchg pop and mov cmp mov sub (bad) rex.RB int xor icebp callq jge vaddps rex.XB xchg xor int (bad) xchg (bad) std callq xor andl sub pushq (bad) jb pop sub (bad) pushq rex.RXB imull cmp sub fcoml jmpq stos movsl (bad) xlat and jns jo (bad) outsb xor test fnop js pand sbb jl adc cltd sbb pop rex.WB xlat (bad) mov jo movabs test es stc or stos repz rex.RX cltd jmp (bad) ja out (bad) pushq callq push (bad) rex.WB xor and hlt (bad) out sbb ficom mov imul pop cwtl cwtl add mov (bad) cmp lock sbb rex.B xor mov mov callq subl movsb ss jp sti rex.WB rex.RX add cmpsl test xchg (bad) movabs pop test (bad) rex sub (bad) xor or test js (bad) outsl pushq rex.R ss popfq push push test xor push loop jns cld nop pop rex.WXB nopl push je add rex.WB (bad) xor push mov rex.WB fisttp add jp es addr32 callq cltd pushq pop (bad) sub and movsl rex.WRXB mov or mov rex.WRB (bad) lods out pushq adc lret xor push mov pop jg cmp (bad) (bad) (bad) rex rolb cmp pop nop or push loopne sarb adc (bad) movslq (bad) scas add rex.WB imul rcrl test rex.WB movabs (bad) mov scas sub cmp pop ds lret (bad) push pop int xchg (bad) rex.WB push sbb mov rex rex.WB pushq jns rex.WB lods mov sbb pushq fisubrl sbb fwait (bad) rex.WB mov or or (bad) (bad) cli data16 movabs jge push or insl fbld data16 sub rex.RXB mov rex.WRB or js in cli lahf enterq mov int xor mov jbe xor xchg rorl (bad) rex.RXB (bad) rex.WXB faddp or xchg fdivs jge adc sbb divl push push fbld xor repnz mov cmp rex.RXB movl add cmc fdivrl xchg and jo lret pushfq jno ja jb cwtl (bad) cwtl orb rex.WXB and rclb add (bad) leaveq callq hlt leaveq int ja (bad) xchg mov outsl push negl jb movslq cld (bad) sti incl loop rorb test add xlat xor or (bad) rex.WX adc movabs mov (bad) xchg sbb rex.WRB sub test cmpsb add cmp repz jnp (bad) rex.W xor mov pop rex.R rex.RB jge pop neg xor in push loop je jg (bad) sbb xchg push ja adc pop mov add fdivrs (bad) adc add (bad) rex.RXB sbb rex.WB retq callq sbb rex.WB pop test in sub sub jrcxz in rex.XB (bad) sub mov rex.WB int3 lahf mov rex.WRX in mov (bad) lret in scas sub lea fwait mov shlb imul (bad) mov fidiv (bad) add leaveq mov or rex.WRXB movabs rex.WRXB addr32 xor pop xchg cmpsb iret movabs mov add movabs xchg movabs popfq enterq out std cmp shrb popfw xor mov push jmp and rex.WRB add add test jp movsl movslq and (bad) xchg cmp sub xchg pop mov rex.WRXB int3 (bad) sub (bad) rex.WRXB rex.WB cmp sahf (bad) jge add test loop jp or fsubr (bad) jae std add sub pushq int3 callq fldcw rex.WR jg rex.WB rex.RXB imul xchg (bad) addr32 cmp cmp lea sbb (bad) rex.WRX adc movslq pop lahf and jp rex sti rex.WX sbb or rex.WB xchg sub mov (bad) or out rex.B xchg repnz adc loopne mov jno rex.WR sub (bad) retq pop rex.W cwtl xchg push mov sub (bad) rex (bad) (bad) (bad) cmp adc xchg jl jg iret adc jge fmuls (bad) test loop lret xchg adc loope insb cmp xchg std push in mov pushq iret rex.WX movabs pushq stos jno sub cmp pop or mov rex.X mov or adc mov xchg jp or fsub mov js mov cmp movsl (bad) popfq mov and mov callq clc mov add jmp adc mov mov addr32 movabs int3 insb pop vpandn imul (bad) mov or rex.WXB push flds movabs gs push sub sub xor rex.R and adc fcoms or (bad) rolb cmp cmpsb nop cwtl rex.WB outsb xor rex.WB ds pop (bad) icebp rex.WB rex.WRXB loopne add shlb lea callq (bad) stc rex.WRXB (bad) (bad) rex.WB lods rex.RX cmp es movslq stos sbb movsl faddl rex.WB data16 movabs jns mov (bad) test movabs adc cmpsl jno xor rex.WRXB sarl out mov cmp (bad) xor rex.RB pushq retq adc add icebp ja cmp test mov mov pop pop jae xchg movslq cmp or rex.WXB fs lods (bad) rex.WRXB test stos (bad) ljmp pop add vmovhps lock movabs (bad) (bad) outsl rex.B rex.WXB sub movsb retq sti adc (bad) outsl adcb out jg add jmpq movsb mov pushq and movabs fstl sub pop cmpsb mov jnp movslq xchg (bad) rex.RB mov sub sub rex outsl pop enterq push or lret cmpsb subl stos iret neg (bad) nop pushq push xorps lea and fldenv loope (bad) rcl sub rex.WRXB out and mov cmp mov (bad) jmpq insb (bad) popq mov mov xor fisttpl lock int3 out sub push int loope or pop in mov lret sbb movb (bad) (bad) or lods rex.RB jmpq mov adc (bad) mov callq jns rex sub mov orb addr32 addl iret stos mov push adc mov (bad) add rex.WRXB adc mov (bad) rex.B lret insl js jrcxz (bad) lsl jge (bad) (bad) mov mov stc pop cltd mov or outsl or xlat insb sub mov jbe adc callq sarl fmulp cmpsl cmp ficompl (bad) hlt (bad) cmpsb mov callq rex jnp mov out xchg add mov add mov out (bad) adc pop sub xor mov stos push repnz (bad) sub loopne mov adc rex.WRB callq xchg push push sub rex.WB mov insl gs leaveq jmp movsb fld jl cmp std mov mov xor stc jmpq je pop mov jbe sahf scas xchg jo pop movsb (bad) xor (bad) fidivl vpandn (bad) rex.WB (bad) lods ds lock add xlat sub and lret jno int3 scas mov rex.WB movabs mov fiadd pushq xchg rex.B xor outsb data16 sub add push pop (bad) cwtl fdiv cltd mov rex.WB adc lods mov (bad) ja fxch rex.WB fmuls (bad) push xchg iret leaveq pushq add mov out rcr rex.WX mov je movabs jns ficoml popfq sub mov push xor (bad) lahf movsb insl (bad) (bad) cmp pop (bad) rex.RXB rex.RB or callq pop repz stc sub cltd rex.WB loop adc out sub jne rex.W and outsl test ds data16 movsl (bad) cld rex.WB xor adc xchg cmp or cmpsl out and (bad) xadd pop rex.WB jnp out cli (bad) push push lods fisttpll xchg jns (bad) xchg cmpsb int or rex.WX rex.WB mov mov (bad) pop xlat loop sbb xchg sbbl (bad) fsts mov rex xor push sbb mov repnz shll (bad) mov decl (bad) imul pop data16 ja sbb xchg mov (bad) (bad) std mov mov adc idiv jmpq test push (bad) xchg loop out flds rex.WB movabs add push mov (bad) scas rex.WB out xor insb callq std (bad) in or sub sub rex.WB adc imul cmp rex.WX sub rex.WB enterq repnz mov mov rorb jae movabs adc (bad) (bad) mov jns (bad) lock pop push push popfq frstor rex.X rex.WB (bad) repz (bad) cmp cwtl xchg fld1 fadds js jmp mov pushq jg popfq (bad) mov xchg add stos mov xchg loope (bad) xchg sbb adc test or lret mov out push out mov push pop pushq pop jno (bad) jmp sub shll std rex.WB xor rex.WB and in rex.WB scas rex.WRB rex.WX ficompl rex.WB push and (bad) add movsb movabs add movsl rex.RXB leaveq cmp rex.WRXB movsl out repz mov in push (bad) mov loop mov add imul or sub xchg cmp adc adc sbb callq rex.WR rex.WB lret sub (bad) orl (bad) sahf and movabs mov pop movabs retq pop mov test cli in or (bad) (bad) sbb pop in stc lret (bad) xor movsl cmp int3 mov ss push movsl je adc (bad) in pop stos imul icebp rex.WB nop adc push sub (bad) xlat and add mov jl (bad) stos out rex.RX cmp jo push push imul sti popfq mov movabs fwait (bad) outsl push rex.WR mov xchg mov fcmovu rex.WB rex.WXB xor rex.XB rex.WB add mov rex.RXB jb push cs jg cmc (bad) or mov push rex.WRXB rex.RB sub imul fcmovu in enterq sub mov hlt sub mov cmp xor (bad) rex retq mov jge ds mov (bad) rex.WB and jbe (bad) lret test sub (bad) addr32 mov movabs jno adc rex.WXB sub icebp insb lea jne cmc push loope scas pop push rex.W push xor mov test and mov repnz sub ja loopne add mov xchg push cmp sahf jmpq movslq pop rex.XB sub xchg ja rex.RB or push (bad) andb sub es (bad) fdivrs pushfq jbe mov orl scas (bad) mov mov int jge std (bad) loope bts (bad) push nop jmpq jb mov xor stc jnp (bad) rex mov fdivrl jo pop mov incl in cmp rex.WX adc movabs jle add cmp push mov xchg lret in adc pop and scas cmpsl pushq sub jo mov mov adcl fistpll and rex.B lock out jnp rex.RB repz nop movsl (bad) push cmp ss xorl rex and insb in cmc rex.WB imul jl pop rex.RX (bad) scas sub retq add (bad) rex.WRB sub mov sub or rex.WX push jns lods imul hlt jg sub (bad) cltd mov (bad) incl in nop rcll rex.WB (bad) scas (bad) insl pop mov cwtl xor rcr push sahf test sub jl adc xchg pop sub mov movabs xlat lea xchg in cmp xor sti sub cmp sub xchg mov pop (bad) xlat sub mov outsb or xchg mov jge movabs scas jae jne mov (bad) sbb or test out cmp jrcxz sub fiaddl cmp (bad) neg jle (bad) jp adc pop rex.W mov pop in (bad) mov or int3 mov rex rex.WRB jae (bad) stos out adc shll (bad) mov ljmp rex.B adc iret rex.WX out cmp rex.RB xchg pop pop (bad) rex.WB xchg rcr shl lock rex.WB movsb (bad) pushq xor rex.WB cwtl loop in lea adc lahf push rex.WB flds push rex.WX pushq movabs mov (bad) (bad) (bad) stc imul repnz (bad) lea fldenv out addr32 (bad) rex.WB (bad) mov mov iret rex.WB rex.WX or cmp mov outsb callq enterq jmp push pop lea xor xchg cmc adc or loop jge sub fimull or data16 rex.WB push insl (bad) addr32 (bad) adc cmp lret rex xlat xchg or loopne sbb xchg sbb mov movabs roll (bad) rclb rex.WRX movsl rex.RXB xor loop je (bad) and lea xchg rex.WB push and ds sub fs mov callq rex.WB lods (bad) out (bad) mov sbb sbb rex.WB je fidivrl or mov sbb js cmpsb movslq in jge push rex.RB (bad) fnstsw pushq sub in loop popfq xchg adc test xchg mov ficompl scas movabs xchg sbb rcrb int3 sub roll pop icebp add (bad) jb jnp clc rex.RXB rex.WXB xor rex.RX and nop xlat rex.X push rex.WB out rex.WB pop (bad) out xor ds rex.WB (bad) (bad) or or (bad) rex.WB notl mov sbb vdivps retq jrcxz fldcw movabs mov cmp mov andb pushq jno mov rorl addl repnz fcomps push (bad) lret jle rex.W lretw clc sbbl rex.WR subl rex.WB xchg in rex.W fs rex.XB fldt lods scas xor or jbe (bad) xchg xchg movsl (bad) rex.WB cmp (bad) pop callq (bad) callq int rex.WX rex.W mov (bad) fs mov jns in jno rex.WRX adcl cmp lret jge (bad) movslq xor mov movsl or sti out xor test mov cltd (bad) xchg sub psubd in push test test out mov mov pop jrcxz rex.WB cmp push lods rex.WB add add pop rex.WB mov lahf cli (bad) jge enterq mov push cmpsl stos pop sub (bad) shr xchg adc addr32 stos imul (bad) enterq (bad) callq jle leaveq lea ja int fisttpll (bad) rex out jo pop push xchg adc retq mov rex.WXB lock cmp sub outsl add icebp stos sbb test jo sbb jb jbe rex.WRXB rex.RB mov sub cmp or (bad) rex.X test or or jg adc mov adc (bad) lea imul repz cmp jne mov rex.WB fwait adcl adc lahf jno callq or (bad) insb rex.WB ds scas adc movabs push mov xor push cmp cmp jnp clc adc cmp jg (bad) add rex.B ja xchg rex.WRX mov sub out xchg data16 jbe pop rex.WB adc add fstl jno je insl pop rex.R (bad) jne enterq pop (bad) cmp push add movl (bad) shrl imul mov (bad) xor sbb icebp or movabs (bad) xor cmp test or rex.WX ds lret cmp mov test in fnstsw xchg sub (bad) lods pop or (bad) cmp pop out xchg leaveq cmp rex.WB pop stc sbb mov or sub clc int3 xchg (bad) jp cli sbb (bad) rex.WB scas pushq cld callq jns push jno in callq sbb xor rex.WXB jo mov (bad) movabs push movsb push jo rex.WRB sub or and sbb int rex.WB pushfq fiaddl xchg (bad) push cmp jb retq repz (bad) leaveq pushq xor lock (bad) int sub insl or clc jmpq nop in rorb movabs add jrcxz or (bad) mov rex.WR out repnz pushfq in rex.WB je jbe rex.R xchg (bad) (bad) (bad) movabs pushq xlat icebp (bad) rcll repnz shrb (bad) int sbb push rex.RB rex.WB and xchg leaveq add rex.WR push sub sub fstpl es rex.B pop scas test cmp rex.WX mov mov or mov sub rex.WXB mov pop rex.WXB fwait mov (bad) push rex.XB pop shrl xchg xchg jae push (bad) data16 xrelease retq int3 jno enterq pop test jmp jg iret (bad) adc repz addr32 (bad) pushq adc ror jo push (bad) mov jb jmpq rex.WX rex.WRX rex.WRB and rex.WRB rex.WRX jbe or (bad) xor (bad) (bad) sbb push sub pop jbe (bad) pushfq in rex.RXB cmp adc cwtl jmpq (bad) xor gs cmp movsl jmp imul xor repz xlat movabs and cli fcompl pop add push push (bad) out (bad) (bad) cmp (bad) movabs (bad) (bad) fs and (bad) cmp pop mov mov movsb int rex push jae xor mov sub test pop sub mov sub rex.RXB rex.WR lahf sub es (bad) pushq int cmc fs pop mov cmp adc and pop mov loope or shlb mov std mov loope pop pop movslq add add sbb hlt insl sub lods rex.X rex.B mov xor retq rex.B adc push rex.XB lock xchg rex.XB mov sub test sahf adcl or enterq pop (bad) adc push mov cmc stc in sub push sahf fdivs imul mov xchg imul add test or cmp rex.W outsb rcrb cmpsl rex fwait addr32 sbb jbe cltd cltd sub movabs cmc sti pop rex.RX out cli or ds push sbb (bad) pop rex.WB cmp pop out sbb adc sub (bad) movabs rcrl stos pop scas nop rex.WB jrcxz test enterq scas mov push repnz rex.WB data16 (bad) sub (bad) roll addl sti sub mov (bad) movsb fistpll movabs lahf (bad) pushfq rex sbb xlat rex.WB rex.XB (bad) and cmp ja pushq lahf cmp rex.RX out or fimul andb lret (bad) rex.RB data16 mov hlt cmp jno xchg (bad) push mov retq rex.WB (bad) xor (bad) loope negq mov rex.WB movabs add std or movabs cmp fiadd imul add jg lods test not stc leaveq (bad) fsubrs or mov mov sub sarl jno or pop (bad) mov addr32 pop lods rex.RB pop xchg xchg test add cwtl sbb mov push cmovns (bad) rex.WB jg xlat in fstpl callq xor (bad) cltd leaveq sbb (bad) adc mov sub rex.WB lods (bad) mov retq (bad) loop stc int imul adc test rex.B rex.R mov xchg loopne push fs push sub add sti cmp (bad) cmp movabs (bad) (bad) push movsl (bad) lods xchg test lock push (bad) pushq insl push jnp cmp rex.WB lods cld xchg rex.RXB rex.W rex.WB jge (bad) xor enterq fwait (bad) pop in jb jno rcrb sbb rex.B rcll insl sub mov lea (bad) mov cmp fimull rex.X (bad) adc retq and shll mov sub jb mov mov push (bad) sub mov mov insb rolb push mov sbb mov mov stc jmp (bad) pop or cmp rorb (bad) rex.WB out mov in add fcmovb out or insl movabs mov push and (bad) mov (bad) (bad) (bad) jg fs pushq jge (bad) pop out cmp push cmpsl sub leaveq xor xchg sbb add lahf out sbb mov pop sub xchg int3 rex.WR sbb rex.RXB repnz rex.RX xchg lods gs sub sub xchg retq std lahf pop (bad) (bad) shlb xchg rex.RXB pop xchg jno mov lods fistpll and and pushq mov shrb push xor cmp (bad) (bad) movslq cli rex.WXB rcl sub sub pandn js out and imul adc mov imul leaveq jrcxz push out sub (bad) cmp ja divl icebp (bad) jle jmp mov push xchg push repnz data16 outsb scas in mov (bad) adc cmpsb (bad) ss push fldl mov rcrb jo sub std cmp mov or (bad) jne xchg push gs fldt xchg out jbe insl pop jmp pop mov rorl movsl shl adc and jrcxz test enterq outsb imulb mov paddb repz mov sub rex.B rex.WRX jl lahf cli xchg rex.XB sub movsl add (bad) rcrb data16 icebp (bad) cmpsl jmpq cmpsb mov leaveq shll xor (bad) gs xchg push jbe imul jg mov movslq xlat push movsl push (bad) mov xor jl mov or divl addr32 fs xor xchg push (bad) sbb sti mov outsb retq cmp cmc push cmc shrb or jno and movslq rex es std adc out rex.RB rex.X lods pop (bad) add mov pop cmp rorl roll sub rex.WXB out push xchg push cmp sbb and frstor imul push cmp std pop pop cmc rex.WRX ds add xlat mov js mov leaveq mov shrl (bad) jrcxz mov mov jge cmpsb cmp fldl (bad) pushfq outsb and retq sub test imul push shr and orl mov leaveq cmp rex.WR imul fcmovb pop outsl cwtl push pop rex.WX jmpq xchg mov or xchg jnp mov xchg mov cmc (bad) (bad) je rcrb xor lret cmp fdivrs push mov pushq out push adc xchg retq ss (bad) cmp sahf push movabs testb leaveq callq push sbb or (bad) sub adc cld push push (bad) push (bad) (bad) adc movsl stos mov xor (bad) add rex.WXB (bad) fwait mov add sbb cmp cmp je xor (bad) (bad) (bad) mov dec add enterq mov icebp clc xchg rex.WRB mov rex.B mov jrcxz mov (bad) testb jmpq sar push movslq sub (bad) adc movabs or rex.WRXB cs (bad) lahf pushfq or push test vandnpd je and rex.WXB (bad) xor cmp sbb sub mov sub sub (bad) repz cmc mov cmp adc push and mov rex.RXB jbe xor pushfq callq fidivr pop sti (bad) iret (bad) sahf add mov push gs mov outsl sbb mov (bad) roll lea (bad) rex.WXB (bad) rex.B rex.RX pushfq xchg (bad) repz jo movabs push rex.WR loope xor repz jbe pop callq ss rex.WXB mov sub or test in rex.WB rex.RXB rex or je cmp ja pop mov test mov sub rex.WB push (bad) (bad) cmp (bad) or out int3 add gs mov or stos lret adc cwtl fmull jmpq (bad) (bad) stos movabs cmpl rex.WR pop pop xchg fnstcw movabs add lret iret (bad) movsl rex.WXB (bad) push sub (bad) adc leaveq mov fist fs lea add mov fwait movslq jrcxz cmp lods mov xchg shrb xorb adc rex.WB test out jnp mov test jne rex.WB mov in fldl (bad) mov js and xor pop mov gs rex.X add or (bad) out rex.WRB div jno sub retq adc rex.WX out insb push (bad) fsubp retq nop rex.WRB lea scas rex.WB sub (bad) pushq lods adc movsl (bad) movabs (bad) loopne sub jne or int rex.WB lods stos xchg rex.WB sarl rex.WB xchg out movslq jmpq movsb adc test mov jns movslq enterq lods sbb insb jnp (bad) movabs test ja scas retq jae mov callq lock jp pop push adc or sub movabs rex.RXB jmpq (bad) hlt fsubr or clc repz fdivrs insb adc adc lahf push or jp in movabs cmp xor lock rex.XB mov cmp (bad) movabs adc cmp xchg cwtl stc (bad) (bad) sarb rex.W rex.WXB add rex.WRX add (bad) xchg mov jne sbb (bad) xor jmpq shll fistpll mov jns imul fcom cwtl add (bad) enterq (bad) in push rex.RX (bad) cmp ficom movabs lods sub cmp (bad) sub pop insl fistl mov imul imul rolb (bad) icebp rex.RB leaveq add or fs mov jno,pt fstpt jnp jl imul scas mov rex.WRX sub (bad) (bad) pop xchg mov and adc pop fnstsw out mov jnp cmc add stc test add jno or (bad) mov pop jb (bad) mov mov and add add (bad) (bad) imul repz (bad) jge cmp xchg (bad) test cmc or sbb outsw lods (bad) (bad) (bad) in mov add lods cwtl add adc xchg mov and mov rolb xor jp rex.RXB add ds lahf adc leaveq sub rex.WB push scas xchg ds and (bad) push mov mov mov cltd test xchg sbb rex xor rex.WRX (bad) cmp cltd imul rex.R xchg addr32 es (bad) mov and xor pop addr32 repnz xor (bad) rex.RB (bad) cmp leaveq int3 jle (bad) lock mov mov cwtl fs pop mov (bad) lock pop xchg lods rex.W fnstcw or jns rex test add push movsl xchg or cmp push cmp lahf sub hlt rcr or rcrl (bad) or pushq rcrb movsb jge or sbb xchg callq lea adc sub mov push jbe push or (bad) cmp cmpsl (bad) jns ficom mov rex.RXB out xor rex.X fnstsw andl sahf pushq pop insl pop pop xchg xlat repnz sbb mov jp (bad) test add xchg mov or sbb mov (bad) mov cmp retq mov (bad) lods rex.B rex.RXB rex.WB (bad) push pushq sbb (bad) rex (bad) add std rex.WB rex.WR rex.RX sbb xchg rex.WB fwait (bad) (bad) push movabs xor loop rex.WB (bad) rex.XB (bad) stc rex.WB rex.X xchg rex.WB retq (bad) rex.WRB add add cmpsb or enterq jl (bad) outsl sbb cmc rex.WB rex sub (bad) (bad) enterq adc (bad) loope xchg rex.WB xor rex.X pop xchg pop xchg mov mov (bad) sub in pop xchg shlb sbb lods hlt and in (bad) int xchg sub fldl movabs mov (bad) mov imul xor jl cld push (bad) mov (bad) mov mov outsb (bad) cmc mov hlt push js cmc mov jne jno pop in and xor loope (bad) (bad) in (bad) xchg lock ja mov jo xor mov jmpq sub cwtl (bad) jns test xor pop pop mov mov mov shlb sbb add mov movabs movslq divl sub xchg divl jl mov jmpq cmp (bad) xor pop jge cld jae (bad) sbb movabs movabs enterq sbb (bad) cli cmp mov hlt addr32 movabs sbb sub jae (bad) out xchg cmp gs rex.RB loopne sbb iret pop adc jo pushq jg sub cli add pushq retq mov mov xchg (bad) rex.WRB addr32 addl mov cmp jmpq fcomp js mov xor (bad) rex.B and fucom (bad) push sub or jle rex.X repz rex.WRX out cmpl push imul jnp mov lahf rex.RB rex.WB sbb movb xor stos xorl shrl es (bad) pushq rex.WB and xchg cmovns mov (bad) loopne sti rex.WB rex.RB xor and xor out sub (bad) (bad) push movabs testl sub test lahf rex.B jns mov sti lret jmp rex.WB jmpq mov test (bad) (bad) (bad) cs (bad) stos rex.WB cltd cld jno cli je out fisttpl mov imul mov imul add out mov in sub (bad) fistl (bad) sbb rex.X or xor sti fwait mov (bad) stos (bad) mov sbb rorb adc fsubrl out xor adcl (bad) push xor (bad) add and je and push (bad) rex.WB cmp (bad) (bad) mov sub repnz xor movabs sbb std jp pushq addl rex.XB rex.RX add or xor imul negb xchg rex.WB jns stos mov push rex.WR pop rex.WB (bad) jp xchg int3 sbb mov jmpq mov xor add and imul sub rex.WR sar xor repnz rex.WRB pushfq cwtl loope rex.WB or leaveq cmp xchg xchg (bad) mov fisub or out test add callq pop push or rex.WRB cmp repz rex.WB hlt js adc int3 decb (bad) loopne in out sbb es rolb mov cwtl and rex.WX rex (bad) add movabs insl jnp incl mov (bad) movsl shll mov cmp movslq addr32 stc sub mov movabs decb movabs pop and divb cmp movabs lods jb sub fisubrl (bad) mov mov scas ds orl lahf mov movabs repnz jae fs popfq pop jne (bad) xchg sub (bad) movabs jmpq pushfq pop mov jne insb rex.WB rex pop retq cmp fimull pop adc pop divb jp rex.WB rex.X xchg mov mov jge jne add push movabs rex.WB mov movabs pushfq xor mov fimull movabs (bad) hlt (bad) movabs mov jl and callq jle and (bad) sbb push mov sbb sbb loope rex.WRXB fldl pop rex.X sub cmpsb xchg (bad) rex.WX mov icebp ja xchg lods jle test push push rex.WB rex.RB cld fucomp fimull jo data16 je sub sbb rex.WX fiadd lret rex.WB lock loop jl (bad) mov repz ss mov add xchg jge xor mov rex.WRB (bad) or movabs (bad) (bad) (bad) push add outsl rex.WB in add and sub scas xchg sub (bad) (bad) jp (bad) lret rex.RX (bad) pop stos test pop push int cmp (bad) rex.WB repnz (bad) (bad) cli (bad) jl sarb cmpsb lret mov xor pushq sub cmc push rex.XB lods cwtl rex.RB pop sbb rex.WB lock movsl (bad) and cmpsl mov callq add or out rex.WB fs pop movabs imul movabs rex.XB push jg mov mov fisub out (bad) sbb loop callq (bad) insb sub (bad) incb (bad) (bad) in stos add (bad) mov pop add js movsl adc movsl sub mov and jrcxz sub adc push rex.WRB and cld je (bad) adc pop (bad) sbbl mov (bad) repnz cmpsl jle add sbb xchg sub std stc popfq mov mov neg movslq adc ja mov ds sti xchg (bad) (bad) shrl mov (bad) pop pushq cmpsl mov retq pop rorb movabs cmp xchg jno and xchg or (bad) js sub out mov rex.W rex.WB cs (bad) movsl orl rex repnz cmp add faddp fcmovbe jl (bad) jmpq xchg xchg pop rex lock je movslq insb fmuls adc sbb jrcxz xor mov add cmp insl (bad) sub (bad) mov movabs jp adc in lret sub rex.X sub adc clc pop mov movsb loop (bad) rex.WRX rex.WB (bad) xor (bad) adcl mov callq jbe jnp rex.W gs (bad) negb rex.WB mov imul mov sbb (bad) mov test rex.X rex.XB (bad) int3 (bad) or add andl jle loop sub xchg pushq lea push movsl sub xchg std mov icebp rex.WB mov cmovl enterq test (bad) movsl (bad) jno mov jge or pop xor data16 out repnz sbb pop mov hlt xchg rex.WB test mov insb jg and movabs std repz in mov cmp movabs lock cmc adc and add (bad) movsl jbe repnz repz sbb (bad) jo or ja rex.WB test sbb cmovns in insb out cmp callq cli sbb mov rex.WB jge jp mov pop pop add (bad) add mov ficoml enterq jnp xchg push cmp xor fild jg imul test leaveq xor out mov (bad) cli enterq test repz lods rex.RB (bad) (bad) (bad) (bad) cmp (bad) sbb or (bad) add out jge push addr32 movabs xchg (bad) hlt (bad) jno in out cltd shlb rex.RB mov jl fwait (bad) adc adc iret in out xchg out lret pop cmp pop cmp (bad) scas mov lods pop nopl xor jne outsb pop sbb xor jbe fldcw fs fldcw pop lods movabs pop (bad) cwtl jae pushq rex.X stc mov notb (bad) push pushfq rex.RB (bad) and insb adc movslq out insl and cmc xchg cmpsl outsl adc xchg iret cmp jno pop addr32 test icebp pushq (bad) rex.WR rolb push sbb fisttpll test (bad) add fwait movabs negl rex.W rcrb (bad) push pushfq adc jno clc jae gs leaveq sbb out ja cmpl sbb (bad) cmpsl sbb adc jbe push mov repz fisttp mov cwtl out rex.WX fs scas int3 out mov out movsl add (bad) push mov rolb (bad) lret xchg repz (bad) pop sub rex.WX (bad) pop adcl rex.WR jge imul cmp stos (bad) idiv (bad) push enterq test add rex.WR popfq (bad) sub or cmpsb rcrb pushq rclb add popfq mov rclb rex.WR fcmovbe shl (bad) and or (bad) (bad) test rex.WRXB xchg (bad) jns pop xchg in xor sub rex.WXB push (bad) imul (bad) or sbb xchg or movabs (bad) xchg mov mov xor rex.XB rex.WB (bad) ds ja pushq (bad) adc lret jp repnz test rex.WB insb divl movslq cmp (bad) fs sub mov test cmc outsb (bad) or mov or sub add ficomp or rex.B rex.WXB (bad) jno out shll pop pop or (bad) sahf cld pushq (bad) popfq adc or sbbl outsl mov add push iret shll jns cmp addr32 mov mov sbb imul sub (bad) sbb pop push (bad) out movsb shrl cmp test xor rex.X (bad) ja (bad) callq leaveq pushq rex.WR pushfq sti out push rex.RX (bad) xor mov retq (bad) jmpq out sbb mov pop xor mov add cltd pushq push (bad) insl cs (bad) and cltd wbinvd or shrb mov push and (bad) test shrl xchg rex.RX (bad) (bad) (bad) popfq rex.WRXB mov xchg lea jmp out mov push insl or xchg cmpsl mov mov pushq sub out push and mov incq mov jnp rex.RXB rex.WB cmp jbe or pushq mov imul xchg ds rex.WR pushq retq test pop movsl hlt fistl mov (bad) rex.XB (bad) rex.WRX rex.RX orq callq cltd jl or push movsb mov fstpl (bad) stc and mov cmpsb fs add and cwtl mov sub mov rex.WX rex.WB ficom testl adc or icebp jne rex.WRX rex.WB pop insl and stos (bad) add push movabs mov mov std (bad) callq shr push in xchg rex.WB scas loopne test ss sub fiaddl cmp pop hlt push add jb rex.B lea sbb (bad) fisub outsb xchg cmp in fsubl mov cmc mov pop cmp nop mov (bad) mov add cmp and (bad) mov jrcxz rex.RB rex.XB rex.RXB gs sub cmp or rex.RX or repnz jge sub mov mov mov add rex.X jns add (bad) gs mov rex.WXB (bad) (bad) rex.WB andb iret rex.WB jge ds xchg pop fld (bad) rex.WB push mov js rex.WB push rex.RB (bad) sub push pushq mov decl fistp insb rex.RX mov rex.WB cltd xlat adc sub (bad) and imul repz rex.WB rolb rex.WB push (bad) pop loop and (bad) (bad) std outsl cmc movsl xchg or roll (bad) in stc jbe movabs pop rex.WB jns (bad) and jl jmp xlat adc imul rex.WB sbb mov shrl adc repz sahf rex.W rex.WB xchg and mov (bad) (bad) xchg mov rex.WRXB (bad) rex.WB rcrl rex.XB es movabs retw pop push sub loope mov (bad) int3 mov push and movsl cmpl (bad) outsl jl fstl rcl lahf rcrl push (bad) movsl lea adcl mov ss mov sub mov fiaddl ss cmp stc in rex.RX (bad) add (bad) pop (bad) and jo rex.XB lea lret and (bad) icebp push pushfq data16 or lret (bad) rex.WX push lea outsb (bad) mov pop mov and xchg jg retq (bad) pop push rex.WB jae rol retq or xor push rex rex.WB rex.X in out xchg std (bad) rex.WB adc movslq pop push sbb jae mov push cmp mov (bad) mov (bad) cmp lea adcl popfq lret ffreep in iret pushfq fmuls mov push cmp ds imul sbb sub (bad) push and or mov hlt sti sbb outsl jae icebp sbb rex.WB rex (bad) push mov pushfq and movslq sub (bad) pop fwait xchg mov cld outsb rex.RB mov (bad) (bad) mov rex.WB fs add retq pop in (bad) test push movabs cwtl (bad) pushq fstl pushq push xchg push loopne adc movabs sub xor sbb rcll (bad) mov movabs and cmp insb mov mov adc (bad) test rex.WRB push xor rex.B rex.WRXB sub and xchg (bad) gs icebp rex.WB ss lret fs rex.WRB movabs cwtl or jmpq xchg pop adc (bad) movslq lret loope xlat rex.B addr32 out rex.WXB (bad) fild rex.WRXB rex.RB rex.WB lahf mov ficomp or mov mov sub rex.WB ss cwtl (bad) mov push push stos (bad) cmp jbe hlt imulb (bad) jns rex.WB addr32 std iret (bad) rex.WB loopne imul cltd enterq or pushfq rex.XB cmp sbb cs adc rex.X in movsb and (bad) sub sbb push (bad) cmp xor test fisttpll rex.WRX mov rex.W out mov rex.WB (bad) movabs sub sub pop (bad) or fwait clc sti test loope and push rex.WR (bad) mov enterq nop jno mov rex.WB lret sub rex.WB rorl pushq cs in jae test mov add rex.WXB rex.WB ja pushfq push mov rex.WB int3 test lock fisttp fs je rolb rex.WXB movabs rex.WB ss int rex.X addr32 (bad) xchg xchg rex.W mov xorl and mov or mov push jp movabs (bad) rex.WR pushq (bad) pushq pop xor (bad) cli stc hlt sub cmc movabs sub push xchg (bad) (bad) mov xchg push fndisi(8087 (bad) lods fimull insl sbb rex.WB fcoms mov mov cmp callq rex.WB jno rolb scas rex.WB and rcr test movabs rex.WB or (bad) push adc adc xor sqrtps stc and pop sti popfq pop lret lret rex.WB cltd (bad) pop xchg (bad) in rex.WB add sahf sbb cmpl and movabs rex.WB icebp sub (bad) xchg (bad) xchg popq insb sub rex.RXB add (bad) mov (bad) shl sbbl (bad) shrb mov pop pop sbb (bad) out mov pop rex.WRB (bad) sbb movabs (bad) adc (bad) rex.WB jl insl stos std scas sbb (bad) cmpsl jmpq shll (bad) or (bad) rex.WB outsb out test (bad) rex.B (bad) test jo jnp and sahf rcll hlt xlat jge callq jg in jne jmpq add rex.WB mov out push (bad) sti rex.WB shlb sub add cltd xor and rex.WRXB rex.WB addr32 rex.WR xchg mov andl and (bad) rex.WX rex.WXB lret rex.XB fwait pop add mov shl rorl (bad) mov out cmp add test sub pop lock movabs xor push jmpq add cmp and popfq sbb in (bad) rex (bad) fmull xchg mov add cld jmp in mov and cmp pop sbb enterq and xor cmp push mov push rex.WRB rex.X lods stos adcl ja or (bad) mov push sub je rex.XB pushq cli callq (bad) adc nop sbb rex.WB enterq fidivrl jae mov loopne addr32 in rex.WB cli add (bad) rex.WR out xchg xor mov movsb outsl or callq xchg rex.WRX jnp pop rex.RXB or or int js (bad) cmpsb or std repz rex.WX insb mov sub xlat rex.WXB xchg cmpsl rex.B rex.RX mov out stc pop mov pushq push adc or push sbb iret rex.WR sahf iret mov xor mov (bad) jno sub push rex.X xor xchg jp add push je mov push (bad) movabs cmpsl movslq shrb adc icebp (bad) lea xor flds mov divl sahf test (bad) (bad) (bad) xor rex.WRB mov pop (bad) adc rex.WRX (bad) xor or add outsb xchg scas rex.WR cmp movsb xchg (bad) scas adc pop sub or pushq lret pop pushq jb pop push fildll imul (bad) rex.WXB jno mov sub sti sbb and adc imul sub jl (bad) xchg cmpsl pop (bad) test popfq rex.WX rex.R repnz or rex.WX rex.WB xorl jp fwait js or xchg xchg add jg movabs fnop sbbl pop sub rex.WB out ja (bad) push (bad) retq rex.WB stos (bad) in mov cs (bad) jns mov jbe sub leaveq or (bad) mov rex.WRB add movabs mov rex.WB cmp jne adc fmuls mov and std rex.WB test mov sbb or and rex.WXB lock movabs fldl (bad) pushq mov loope rex.WB sti std (bad) or mov outsb jp push rex.WRXB rex.WB sub shrl adc ror (bad) mov stc mov test adc cmpl lea push add mov and pop addr32 fsubl rex.WB (bad) out rex.WXB and xor ss callq rex.WXB (bad) and jg cltd pop pushfw inc mov or (bad) sti in (bad) movslq mov xchg data16 (bad) nop movsl test and pop jge cmp cmpsb in rclb or (bad) rex.WB out jmp xchg xchg rex.X int3 jp add fwait adc pushq out xchg clc stos pop test callq push pop movabs sub mov fs fnsave and add fnsave mov adc movabs xchg push and sub mov cmp rex.RX fs xor add rex.WRXB jge es push pop hlt movabs or callq fcomi pop push adc cmp (bad) js push (bad) rex.WB rex.XB (bad) or and add sub std mov es movsl jl (bad) insl movsb clc fcmovnbe (bad) cmpsl rex.WB sbb shl test xchg (bad) sbb pop loope add callq jle rex.WXB xchg or movabs pop and stos sub adc rex.WRX pushq mov clc xor lret lret (bad) push push mov leaveq enterq xchg and or movsb in rex.WR loopne and and pop lock test xor enterq repz movabs subl (bad) cmp jp enterq loope pop jno xlat orb stos frstor ficoml test push movabs mov rex.WX cltd pushfq fwait adc movsl mov xor mov rex.WB ds notb (bad) outsb rclb test rex.B lock fwait in rex.WB (bad) icebp stos lods mov test jp (bad) xor xchg add movabs (bad) pop enterq rex rex.WRB imul cmp mov jb adc (bad) rex.RB sub rex.WRB (bad) in mov xor cltd (bad) out adc cwtl fisubl rex.RX (bad) sub sbb add rolb lock push (bad) (bad) (bad) xchg jle hlt mov jge sub popfq loope rex.WRB mull imul sub mov in mov mov rex.WXB push lea pop (bad) (bad) loop xor xchg cmp rex.WB rex enterq pop push or sbb jge (bad) rex.RB add sbb ja iret mov xchg pop push rex.WB sub (bad) fidivl jle insb fidiv loopne lods lods or jmpq jo push add sbb push movabs push cmp add rex.WB test (bad) icebp rex.WRB push nop test push xchg repz int (bad) rex.WB (bad) sarl data16 sbb or mov ja push cmpsb leaveq cmpsl movsl xor test movabs sbb sub repnz lods mov movabs xchg (bad) movabs mov sbb mov cltd movslq xchg cmc sub rex.WXB hlt mov adc pop loop retq (bad) adc (bad) and cwtl push fisubl (bad) movabs in (bad) xor push fistpll xor loope loopne test jl sbb in scas pushq mov loope rex.WB jo xchg fsubrl mov testq pop fisttpll cltd test loope jne rex.WB rex.WXB pushq push push rex.B imul addr32 mov (bad) lret and pop rex.RB xchg rex.WB rex.WX pop std cli pop xchg or push cmp rcl xor jno shl add test mov fcmovnb (bad) and mov mov cmpsb adc rex.WB cmp sti insb cmp rex.XB adc push cmp flds xchg ss (bad) jle rex.WB xchg orl (bad) iret mov nop pushq jae push popfq (bad) jl movabs scas out clc sub rcrb add xchg (bad) sub in loopne int (bad) (bad) (bad) cmp out outsl fdivrl pop (bad) xor rex.WRB sub repz lret loopne mov sbb or jmp or enterq data16 rex.B pushq ja (bad) add cmp jo out (bad) pushq push test rex.WRX xchg callq sbb rex.WX rex.WRX xchg cmpsw cmc push rex.WB xlat pushq xor (bad) jns fistpll push jmp cli rex.WB sbb xor loopne sub imul adc negl insl xor pop sbb jnp movabs int3 fldt jbe mov rex.B mov xor movabs js mov xlat out sub incl icebp pushfq rex.WB and sbb test adc rex.WB jg or test and mov mov in push pop mov and cmp push mov jle and cmp jmpq mov (bad) orl rex.W (bad) pop int movabs and rex.RXB cmp lret pop (bad) push pop fiaddl sti jge fstpl xchg rolb push sub xchg pop rex.RB xchg push pop xchg imul xchg test adc rex.WB out cmpsl mov pop adc mov rex.WB xor jmp (bad) (bad) xor sahf faddl stos data16 lock cmp add out jp mov insl cmp pop mov cmpsl or mov rex.X movabs cmp sbb ds adc test pushq (bad) and mov mov rex.RB out fisubr xchg testl xor and shlb xor rex.WB mov sub sbb and callq or or stos scas or retq xchg xchg jno movabs scas rex.WB sbb jns xchg jp rex.WR movslq jl jmp sub adc retq push lea nop rex.WB rex.RXB adcl sar mov or lea cmp mov fucomip rex.WRB sbb (bad) rex.WB std mov movabs (bad) rex.WB addr32 xchg jmpq sbb push lret adcl push movabs cmp rex.WB add rex.XB cltd ja xchg (bad) cmp (bad) xor rex.B rorl (bad) pop lret fisttp or push or add jae sbb cmp (bad) mov mov or pop repz adc xchg mov rex.WB xchg (bad) cwtl jmpq and imul movabs cmp fdiv imul js fs imul (bad) (bad) adc mov std repz popfq xor sub jg and rex.X es jno test and retq je rex.WRX (bad) addr32 jp xchg sub repz pop rcll (bad) xor xchg adc rex.X test jno add sub cmc mov loopne xchg (bad) pop mov push mov lock stos addr32 jl leaveq outsb sbb jg push sbb movabs jp mov add out rex or enterq (bad) xlat mov sub and (bad) lock and nop (bad) movabs mov (bad) insb (bad) shlb mov pop or jb out outsb leaveq out cmp (bad) gs rex.WXB mov add push orl gs (bad) outsl lock (bad) loopne xchg incl mov rex and push rex.RX rex.WRB rex.WB jns sub stc (bad) movsl je in or (bad) insl push cmp cmp test push movabs in retq paddusw mov rex.WB (bad) mov andw pushq stc push movsb gs mov divl rex.WR jnp iret lret loope fwait (bad) in and rorl rcl out (bad) (bad) insl rex.WB (bad) (bad) (bad) loop jae movabs fldt loope or nop fildl sub sbb push or sbb (bad) xor cs (bad) cmpsl adcl rex.WB sub pushq push mov outsl addr32 jae mov rex.WRX shll in in mov mov insb mov (bad) outsb pushq scas adc insl xchg cmc pop mov rex.WB (bad) xchg (bad) out mov xor insl push fdivp pushq rex.WB popq addr32 mov rex.RXB mov rex.WXB mov rex.WRXB (bad) cmp std sub cwtl and movabs jo fistpl adc sub cli pop pop mov (bad) (bad) movabs imul pop xchg xchg mov rex.B rex.R add sbb rcll xchg insl mov jns or addr32 subb stc cmp xchg leaveq callq js imul sbb mov scas push jnp xlat rex.WXB push sub rex.WB ss fs mov pop jmp rex.WB retq jmpq test imul mov nop (bad) xor movabs xor fstpt andl and pop loope fiadd clc rex.WB pushq jnp rex.WB movsb addr32 rex.WR rex.XB or es rex.WB repnz js jrcxz andl xor scas roll rclb rex.WB fs pop mov test or data16 (bad) push iret cmp lret (bad) mov out movl movsl (bad) rex.WB jge (bad) jbe fdivr rex.WB jb sub popfq fisttp add (bad) fnstcw rclb or (bad) movsb insl scas (bad) mov jrcxz orb xchg out push xchg rex.WB rcr cmc sarl icebp (bad) pop rex.WRXB rex.WXB rex.WRB rex.WB xchg mov outsb adc jg (bad) sub fdiv mov mov mov in fmulp imul hlt add sbb sbb (bad) jns cmp mov and rex.R rex stos rex.WRB mov rex.WX jge test (bad) (bad) roll loop sub jle xor mov test xchg mov je mov lahf sub fcompl add pushq xor lods icebp lea data16 mov es enterq lldt mov rex.WB (bad) roll xor rex.WXB pop fcomps loop jp rex.WB sbb (bad) (bad) xchg xchg jnp incl adc cmp insl rex movsl loop and fldcw (bad) mov pushfq mov rex.WRB rex sbb addr32 movsb and xor movabs jno in rex.WB enterq add rex.WB mov in fsubl rex.WB rex.WRXB stc rex.RB decl frstor add adc pop push sub js pop sti iret and rex.WB pushq movsl push test rcl scas rex.WB jge movabs rex.WXB jns pushq rex.WB fdivs ss test fiadd mov push rex.WX fcompl stos stos (bad) retq scas pop (bad) sub xor push rex.B rclb lods (bad) jo addl cmp pushfq lock sub hlt out in (bad) xor std notl (bad) movsl rex.WX retq sub movsl mov (bad) loopne rclb adc jmp mov movabs imul (bad) in data16 push sub stc rex.WB callq sub out fstpt (bad) and lock pop jnp or jae (bad) ficompl rex.WB test sbb mov mov pushq rorl (bad) mov movslq xchg jge cmp jnp hlt rex.WB jle,pt loopne movabs push (bad) adc rex.W or push jnp xor rex.R std sarl jrcxz push movabs cltd rex.WB (bad) sub movabs (bad) repz callq rex.WRX add rex.WB xchg pop adc adc rex.WB leaveq ja stos xchg int3 (bad) mov push movabs mov fiaddl rex.WRB lock mov fiadd and pushq mov rcr cmp (bad) (bad) pushq jno or xor stos xor sub movabs popq jbe jp and sbb xchg pop mov (bad) (bad) sub mov rex.WB rorl out or or rex.WB mov mov pop push jp cmp fcmove sahf rclq movslq rex.RX xor push hlt lret mov mov jne ss rex.WRXB (bad) movabs (bad) mov (bad) rex.RX cltd mov callq stos rex.WB (bad) pop (bad) js adc orl adc (bad) push callq scas mov pop and or jge rex.WRX movabs pop sbb mov imul rex.WB rorl insb mov and int3 pushq movabs jno rex.WRB fs pop (bad) adc adc rex.WB and mov or outsb out cmp sbb rex.WB (bad) jmpq mov push rex.WRX (bad) insb and sbb lock cli (bad) jp jl jno adc mov and rcr sub xchg leaveq rcrb xchg mov (bad) shld sti sbb cli test movabs iret (bad) pushq xlat jae pop jl jmp rex.WB (bad) ja (bad) rex.WB jb cmp insb (bad) pop rex.WB lret pop rex.WB jmpq movsl movsl idivb adc (bad) test fisttp jmpq mov sub xchg rex.WRB retq sub in leaveq test rex.R cltd mov or pop xchg rclb movabs movabs xchg sahf rex.WRX adc movslq ficoml pop imul pop (bad) (bad) (bad) xchg mov xor push movabs add rex.WB pushfq mov rex.WRXB (bad) (bad) lret (bad) movslq xor and in rex.RX rex.WB rex.WXB cmp stos xchg sbb sub rex adc pushq data16 push xchg pop pop mov or jp,pt js mov cmc loopne cwtl test nop or movabs rex.WB cmp pushq sahf rex.RB rex jno rex.RX icebp pop movslq pushq rex.WB add mull movabs (bad) int3 (bad) loope (bad) rex.RB xchg sub xor movslq mov (bad) sub repz rex.WB rex.XB mov movabs xchg (bad) sbb cld pop (bad) movabs retq sbb adc add rex.B rex.WB out and fistp pop loope in sub (bad) cmp (bad) jae stos or jmpq mov (bad) movabs rex.RX xchg push pop xchg mov es jno retq repz mov adc out ror lock (bad) sub jmpq cltd sbb cmp out xor fiaddl fnop movabs add (bad) testl cmc xor addr32 test mulb clc jb and rex.WXB in rex.RXB adc sub sub pushq cmp (bad) insb int outsb xchg (bad) (bad) iret fnstcw sbb rex.WB rex.WXB (bad) lret adc jae shr rex.WB (bad) fisubl or enterq in rcl rex.WB ss sbb retq add ror pop nop (bad) mov movl lods xorl mov (bad) cltd out (bad) mov pop ds (bad) rex.WX mov xor loopne repnz movabs pop mov rex.RB rex.RB (bad) hlt enterq data16 (bad) repz or (bad) (bad) (bad) xchg repnz (bad) in fs sbb sar int fwait sbb pop movsl rex.WB sbb (bad) rex.WB data16 mov sub movabs cmp add cltd and mov je pop cmp mov and push pop rex.XB rex.WX ds sub xchg rex.R movabs sti and or pop rex.RB rex.WB fmul jae add cs sbb iret test mov cltd mov pop push sbb rdmsr rex.WB retq cmp cmp cld rex.XB (bad) movabs lea cmpsb rex.WB movabs (bad) loop or (bad) sbb cltd jnp movslq jbe or mov (bad) and mov rex.WB sub imul rex.RX movsb callq jb cmc pop xchg jl ja callq xchg lods rex.WB cwtl sub (bad) movabs enterq rex.RXB push xchg rex.WRB adc loop sub rex.WR push movabs scas mov out movb lret push adc (bad) and jp push cmp repz loope mov loopne lret pushq rex.RB rex.WB idivl rex.WRX or fsubl add fcmovbe callq pop mov (bad) imul xor repnz sti (bad) (bad) pop (bad) out movabs jl cmc rex (bad) lret rex.W movsl pop js int pop (bad) and adc pop mov je retq fldcw pushq and and rex.XB pushq sub out sbb loope mov (bad) mov movabs repnz rex.WRB subl jne rex.R sbb loope xchg pushq cmpsl gs add sbb (bad) or movsb mov in rex.WB xchg jnp cmpsl gs mov stos xlat sub (bad) xchg (bad) sbb jle movsb sub pop test add loope callq movabs mov adc lods out in rex.WRB js rex.WX rex.B sub pop or cmp rex.WB repnz rex.WRX rex.WX mov notb test out int3 add test and adc test cmc mov fbstp callq cs (bad) rclb fs rex.WR outsb rex.WB or scas and lret fs movabs mov (bad) mov mov imul pop stos or jns,pn jb jae out (bad) push lret pop (bad) xor rorb fnsave iret callq std (bad) retq subl rex.WB rex.WB mov shll rex.RB ss mov gs rex.WXB or xchg loopne sbb popfq mov rex.B shrl mov movsl lods out movsl mov imul rex.WB clc and jge and loopne jns adcl adc (bad) js cmp xorl sarb mov cmp (bad) sub rex.WB lock push pop hlt icebp rex.WB rex.WRB or push adc jne sbb mov pop and movslq or pop or xchg nop pushq mov hlt loop add sub orb (bad) enterq mov push sti iret rcll out movabs (bad) retq mov jg jbe rex.WR cmp add pushq mov adc rex.WB rex.W pop data16 push sub jge rex.WXB data16 (bad) sub cltd rex.WR push xchg xchg (bad) subb xchg fs fcompl push (bad) callq in rex.WRXB mov (bad) int3 sarb xor lret xchg (bad) xor fsts jge xchg jge repz jae mov adc (bad) enterq pop shr rex.RB fwait mov or mov adc xchg rex.WRXB rex.RB (bad) (bad) (bad) pushq mov pop and lret (bad) clc out mov callq and (bad) xchg sub (bad) sub adc fldenv sub mov data16 test rex.RB neg (bad) cmp fildll lea rcrb sarb jge loopne movabs rex.W rex.RXB sub push rex.RX callq add sub sub (bad) (bad) rex.XB rex.WXB cwtl and cltd outsl mov stos mov adc pop cltd cmpsb xchg or in in (bad) fst mov sub pop (bad) mov (bad) cwtl mov pop or jnp add pop mov push add and push stos cmp xorb cmp pushq rex.RB xchg cmovle jrcxz mov movabs xor callq flds push insb cltd retq rex.WB push out jno and push test pushq rex.WXB cmp xchg xor sub rex.RB addr32 rex.WR orl out cmpsl ror incb in decl jae sub and sub fdivrs pop sbb and imul mov push cmpsl lahf sbb (bad) rol jg out in add (bad) callq fmull (bad) movabs rex.WX add sbb fldl2t pop jp callq repz rex.WB rex.WRX rex.WXB shrb add lods stos movslq icebp jnp cmp rex push movabs mov sti mov es outsb pop mov testl push rex.WB mov pop pop fimul push jns lods xor shr mov rex.XB out orb xor pushq pop push xor rex.RX test cmpsb (bad) rex.WB movabs rex.RX rex.WRXB rex rex.WR add fisttpll or (bad) lods (bad) (bad) jnp and data16 add push sti adc rex.WB rex.WRB movabs mov (bad) retq je xor pushq rex.RXB mov pop (bad) movabs pop or cmp add in rex.WB mov adc rex.WB rex.RX rex.RXB rex.RX xchg cmp scas jae xor push jge cmpsb (bad) sub rex.WB jg (bad) rorl cmp push int js xchg insl movabs retq (bad) fcomi xchg jns jae mov repz rex.X rex.WRXB stos (bad) mov icebp and movsb xchg jge jno mov cs out notb fwait mov es or cmp and pop (bad) rex.WB insl fstl (bad) and rex.WB cmpsl (bad) flds jae movabs rex.XB rex.X sub (bad) imul shrb loope rex.WB jmp mov rex rex.WB mov callq (bad) shlb rex.WR rex.WB scas sbb repz rex.WXB rex.WB out rex.R push jo xchg (bad) mov mov pushq xor jbe push cmp mov movslq sub sub rex.WRX and push rex.B xchg xor insl jns pushq fimull movabs (bad) mov add mov rex.WX rex.WB xchg loope jae stc enterq jno cwtl xchg and repz gs (bad) pop orl movabs and jl rex.WB stc mov sbb jae rorb and sti cmp rex.WB fucomp movabs pushq (bad) mov rex.WR andl rex.XB (bad) and in repnz or xchg sub cmp jrcxz pop and push rex.WB rex.WR rex.WRX rex.WRXB ds insl or or jge mov xchg rex.WB movabs rex.WRXB imul sub mov sub jbe or or jmp mov lahf outsl callq jne scas rex.RB mov or scas xor enterq jmp movabs and cmp adc (bad) mov rex.WR or and rex.RX mov pop stos rex.B rex.WX cld jb jno callq mov sub fnop int (bad) test movslq mov push (bad) mov jne pop out and pop sub pop adc mov cmp popfq push (bad) sbb rex.WX sub fs xchg movslq stos (bad) jp or jbe mov xor test add or add rex.WR ja add adc add xchg add lods (bad) loop rex.WRB fs xlat mov jle xor adc xchg mov or fistpl mov xchg subl cmp icebp add sbb (bad) int cwtl push pop stos addr32 movabs rex.WXB (bad) sbb adc leaveq callq cmpsl rex.WRXB (bad) in testb sbb push adc push cwtl outsb lods cmp (bad) or cmp shrl (bad) xor rex.WB jb rex.B fwait sbbl insl pop mov gs adcl push (bad) push movabs adc jp adc mov jrcxz and rorb sahf or int3 cmp pop rex.WRB xchg rex.R rex.WB andb (bad) (bad) jnp sub sub cmp rex.WB lock in in stos mov sub sub xor dec cmp out repz iret enterq (bad) test in mov cmp sbb rex.XB rex cmp and sub callq es rex.RX rex.R rex.RXB out cwtl adc test (bad) imul push or cwtl fisttp test iret pop sub je push rex.X (bad) xor adc mov (bad) rex.XB sub rex.WB pushq scas push jrcxz jno sub stos mov rex.WRB addr32 mov mov pushfq or sub rcll faddl mov rex.WX gs sbb movabs mov (bad) mov mov adc mov test (bad) callq jae in push movslq (bad) xchg (bad) sub jge callq (bad) (bad) sahf rex.WRX mov xchg cmp mov test rex.WB jrcxz push lahf rex.WB push xchg rex.WRX rex.W (bad) add jrcxz jae leaveq (bad) movabs adc adc rex.WXB rex.WX stos pushq mov sbb cltd (bad) pop (bad) cmp mov xchg sbb xchg pop cmc (bad) pop scas push rex.WB xchg rex.XB lods jrcxz (bad) adc xchg int (bad) mov or add xor (bad) jrcxz pop loope (bad) rex.WB xchg sub (bad) jns fdivs pop xlat xchg or jl (bad) fdivrl rex.WB mov cmp insb rex.WRX rorl ja sub and pop movabs shl (bad) fmul xchg rex.WB xchg in rex.WB data16 leaveq outsl or add rex.W orb loopne loopne cld rex.WXB rex.RX movslq push (bad) pop (bad) and rex.WRB repnz rex.WRXB callq fnstenv popfq (bad) pop and cli int3 xlat (bad) ficomp or adcb (bad) (bad) (bad) (bad) sub pop sub mov jrcxz,pn (bad) rex.WB mul and pop mov rex.WB lret (bad) mov jp lock out push pushq cmc xchg mov loopne cli popfq test and cmp pushfq movabs (bad) rex.WB rex.WRB cmpsl jb fdivs pop jrcxz mov cli sub int3 retq or rex.WRB stc mov jrcxz pop (bad) pop add leaveq mov sahf enterq jle fwait (bad) jp rex.R adc or and test (bad) (bad) int rex.WX ds (bad) xchg je out sub pop pop mov mov ds fucomip test add fisttpll jge je cmp (bad) (bad) adc js pop ficompl xor cmp rex.WB rex.RB fstpl (bad) fmull clc movabs (bad) fisttpll mov movabs mov sub cli jmpq cmp rex.WB roll pop rex.WXB rex.WB sahf in (bad) in ds nop push sub jo stos scas (bad) rex.WB in clc cmp xchg out ja sub out jl pop push popfq enterq pushq sbb rex.WXB sub (bad) rex.B lods add pop stc mov cmp rex.WB cmp enterq loope scas rex.WB rex.WXB popfq fstpl add out cmpq push mov xchg (bad) push pop sub add xor jno test adc xor movsb scas je or lods pop stos out clc callq adc sub enterq fxch sbb or xchg (bad) gs out jrcxz jns imul scas sub stc rex.B callq hlt or sarl out loope jle xor cmp cltd adc jg push movslq imul insl sub jne rex.B mov iret rcrb mov jmp or add movabs lahf mov movb ja jge cwtl pushq fwait xor pushfq xor xchg adc cmc (bad) cld cmp (bad) (bad) lea cwtl pop lahf pop pop pop test (bad) pop xlat adc addr32 or xor or cmpsb clc rclb mov out cmp sub (bad) (bad) mov add (bad) mov cli add push (bad) jb (bad) or and jp jle (bad) jnp movslq (bad) notb and jno mov and mov (bad) cli in fwait rex.R pop (bad) out mov pushq fdivl sbb cmp xchg rex.WXB movsb sub (bad) adc xchg (bad) xchg rex.WRXB xor xchg rex.B faddp jno clc imul or rex.WX pop lret adc jbe gs and cmp add popq scas out mov gs and jo rex.WB fs mov rcll lods lea mov pop or int3 mov jno cmpsb cmp jb rex.X push (bad) rcrb out cmp pop add rex.XB rex.WR pop mov rex.WB std pop xor repnz rex.WB mov movslq sub push in xor mov rex.WB push (bad) mov pushfq xchg fist cmp (bad) (bad) rex.W (bad) (bad) enterq xchg sbb retq or setne pop (bad) push fs movsl cmp mov (bad) push mov add adc mov mov xchg and rex.WB retq cmpsl scas xchg or jbe lods ficomp xor (bad) iret jmpq retq lea movabs icebp (bad) (bad) sub cmp sub rex.XB push imul cmp fidivr mov enterq xchg xor (bad) and sbb lods rex.R pop lahf insb testl mov (bad) sbb xchg test or pop mov sub adc stos mov callq push (bad) mov scas pop mov (bad) out pop (bad) rex.WR sahf stos jg lret jne cmp int3 jge mov out faddl push (bad) pushfq add (bad) xchg (bad) in fiaddl rex.WX pop cs cmp icebp sarb or rcrb push xchg pop (bad) mov pop push jge pop push pop push rex.WB xorl mov rex.RX cltd mov jnp ficomp movabs jl rex.B out xlat and (bad) jge mov movsb mov movsb (bad) sub maxps sbb rclb or fs sbb and jle pop mov movsl je rex.RXB add rex.XB rex.WXB loop xchg cmp cmp pushq je fdivl and pop xchg adc sbb gs adc out jp nop or fs sbb mov mov js add (bad) out push jmpq mov movabs pushq test and testl push imul insl (bad) mov movabs lods jmpq rex.WRB rex.WRXB jb push outsb mov jmpq shrl mov or jge jmpq (bad) xchg (bad) mov int xchg xor outsl (bad) jg scas (bad) hlt cmc (bad) cmpsl adc int fwait jmpq xchg rex.WX (bad) mov (bad) jae push (bad) movabs fnstenv fucomp imul adc pop andl (bad) clc jnp sbb rex.WRXB jns sub in (bad) sub sbb leaveq xchg fimull lods in pop mov icebp add rex.W jae cwtl fsubrl and pop movabs jmpq xchg fistpll xchg sub ficomp sbb rex.RB sub loope movabs sub fs scas (bad) callq push rex.XB rex.WR (bad) jb mov rex.WX rex.WB (bad) mov pop (bad) jbe loope adc and pop rex.RB int3 addr32 loop fisubrl xchg cmp cmp rex.WRX pushq repnz jp cmpsb xor xchg (bad) out or movsl xor int push sub pop fwait (bad) sbb xchg jae movabs xor scas lret rex.WB addr32 pushq pop rex.RB int3 sub mov lcall std jl pop adc ss rex.XB rex.RXB rex.WB (bad) rex.WB (bad) stc (bad) rcll callq loope rex.WB scas lea fwait sbb jmpq jnp sub push stos retq pushq (bad) sbb sbb (bad) adc ffree imul sub outsb imul mov out cs (bad) sbb shl callq mov rex.RB rex.WR jns rex.WX popfq callq nop sub (bad) clc pushfq (bad) add xor xchg pop or int3 lods jrcxz cmp fs add movsb rex.RB or icebp in xor mov iret jl rex.X rex.WRB mov (bad) sti (bad) cmp pop out (bad) fcompl rex.WB ds pop lret sbb rex.WR push adc repz pop test or sub sbb sub es rex.WB pop enterq out mov (bad) mov icebp cwtl sub sahf lods test int xor (bad) rex.WB rex.RB mov adc xor out data16 and rex.WB repnz lods enterq rex.WB divb jnp add in pop cmp jmpq fimull (bad) cli iret ja shrl (bad) sbb (bad) cmp repnz mov icebp (bad) add popfq scas fsubl (bad) out xlat mov movslq rex.R rex.RX jae (bad) movabs pop sbb xor mov stc movhps mov (bad) xchg xchg ror movabs scas sbb stos xchg hlt hlt and bnd cmp xchg test lret lea (bad) pop loopne fcompp (bad) in or rex.WRB lret adc rex.WB repnz push xor adc movabs (bad) pop cltd push (bad) rex.WXB (bad) jae movabs (bad) mov fwait or gs rex.XB fisub pushfq rex.WB push insl sti sbb (bad) repz rex.X rex.RX or insl mov popfq cld pop pop stos js shll andl pop (bad) sti test fst mov (bad) lret sbb cmc cmp sahf pop lahf rex.WRXB and callq xor (bad) adc rex.WB rex.WR je (bad) sub and loop (bad) bnd cli jge pop adc test (bad) je addr32 add rex.RXB (bad) enterq rorl mov mov callq rex.WB (bad) out xchg (bad) adc stc xor (bad) mov push rex.WB int test and (bad) rex.WB mov test add jae repnz pop xchg lea sbb subl push rex.RX jb jmp jp rex.X data16 mov and (bad) rex.WB and loopne sub retq repz rex.RB mov sbb (bad) xor xchg movabs push fnstenv and lret pop scas rex.RX (bad) and outsb mov rex.WB mov pop out (bad) rex.WB xchg (bad) rex.RX xor stos (bad) loopne rex.WB cmc cmpsb lcall or rex.WXB and mov callq (bad) mov rex.RB gs rex.WB pushfq subb cmp sbb fildl sub (bad) test cmp mov sub fneni(8087 add out rex.XB (bad) rcll sti (bad) adc xchg (bad) or pop (bad) fisubrl adc in or out and andb xchg mov jmp jae rex.WRXB fstpl xchg lea jp gs js imul movabs (bad) rex.WXB xor push popfq sarl jb adc je movb mov fstps (bad) xchg jrcxz adc (bad) rex.WB movabs jne (bad) rex.WB in stos sbb rex.WB mov (bad) out (bad) (bad) xchg in clc (bad) decb test int3 jp,pn rex.WRB rex.WB lods dec lahf loope jge (bad) (bad) rex.WB mov (bad) inc pop iret rex.WB jnp pop (bad) xchg mov mov rex.WB rex.WX adc (bad) sbb movabs (bad) pushq and xchg scas incb leaveq mov sub neg or lahf rex.RXB push (bad) in cmp push push nop mov sbb rolb sub in push cmova faddl movabs fs and adc rex.RX rex.B rex.WX jno movabs lret jno leaveq pop rex.WRB movabs es orl sub lret (bad) and (bad) sub sar mov movslq cmp xchg enterq movabs (bad) mov pushq callq push subl (bad) push push rex.WRB out fsts retq jb rex (bad) mov jmpq sub xor nop movzwl loop xlat mov cmp cmc push xlat push xor pop adc pop cltd (bad) or stos rex.R (bad) rex.WR pop mov push rcll mov in rex.WR jno rex.RB (bad) ficom out adc rex.X jbe push test cmp or xchg mov movabs rex.WR fnsave shr rex.WXB rex.WRX jmpq or jno jns mov push cmpsb repz imul and rex.WXB rex.WB xor iret or (bad) rclb and rorb (bad) rex.WRXB jne (bad) mov fimul adc (bad) jno rclb sbb add adc jp (bad) jae jp js lahf sahf add (bad) pop rex.WRXB xchg xchg gs rex.WRB je (bad) cs (bad) push std xchg rcr int3 rex.RB ds mov push (bad) jg xchg add movabs mov add stc rex.XB rex.RX xchg (bad) test rex.RX mov xchg add mov jl rex.RXB rex.WB outsl fwait enterq sub cmpsb mov movslq cmp cwtl retq sub xchg (bad) cmp incl rex.WRX rex.WB rex rorb xchg cmc or movabs test leaveq mov callq pop rex.WB jge fxch cmp (bad) stos imul pushq mov es add jbe push sahf in rex push rorb xchg cld mov leaveq stos rex.WB mov jae movabs pushq rex.WB loopne (bad) jl mov mov (bad) in pop shll mov rex.WR (bad) loop pushfq (bad) data16 mov cmpsb rex.WX xchg sub jno mov fcomip cmp xchg shlb (bad) cwtl out cmpsl jno pop out pop and rex.WRX or (bad) mov jrcxz (bad) mov nop xchg add xor push (bad) ja and and movslq cltd rex.XB addb in push out out pop sub in rex.WB imul ss std mov (bad) pop rex.WB lahf xlat sbb xchg rex.WXB rex.WB rex.RB mov (bad) test add es xlat cmpsb xor pushq cmp int3 fbld push fcoms test movslq rex.WB mov xchg pop test rex.WXB (bad) retq testl (bad) xor jmp sbb adc add jo cmc jl (bad) je jge mov cmp or pop loope push push out je nop mov jg fcoms adcb scas outsl xchg repnz movabs jno sbb rcr pop and rex.B data16 retq rex.WRX stc or push hlt pop (bad) pop clc and cmp cs leaveq xor xchg sub and (bad) enterq (bad) (bad) pop rolw rorb or or sub leaveq add jmp and xchg rex.WX addr32 in xor rex.WB rex.R add sub (bad) and callq (bad) jbe mov rex.WX (bad) scas jnp rolb add add mov cmp cld mov es pushq ja xor rex.WRX add jns mov add sbb or sbb callq adc xchg adc lret clc mov in sub data16 (bad) out sbb jmpq xchg jmp fsts rex.WB cmp movabs push adc fs rex.WB mov out subb rex.RX xchg (bad) (bad) jne notl rex.WB cmp test sub cmp (bad) addr32 rex.WRB rex.WR pop sub rex.XB stos rex.B leaveq je mov mov (bad) cwtl ja (bad) or loopne sbb or and lods jbe pop add xchg mov adc add (bad) jo rex.WX pop rex.X (bad) (bad) xor mov lods jns jno scas sbb push int fsubs movsl pushq mov push rex.WX retq rcll mov out (bad) rex.WB repz loope insl sub nop (bad) mov rex.WR rex.RX rex.WB (bad) iret jno fwait adc sahf leaveq and rex.WRX xchg xor mov mov repnz lret sbb sahf xlat movabs test faddp (bad) (bad) lahf and (bad) jae mov clc jne callq test addr32 rex.WB cmp and lret cmp mov test repnz out rex.WB (bad) rex.RX mov mov scas mov cwtl rex.WR movabs (bad) mov xor movabs (bad) adcl and cmp sbb rex.X lret xchg rcrb gs repnz movabs fs rex.XB push rex.WB in (bad) stos add mov rex.W ds movabs rex.RXB rex.X mov repnz imul enterq rex.X test pushq or iret mov xchg stos mov rex.XB (bad) cli rex.WB or xchg movabs sub fs lods add rex.R jb mov retq or mov cli callq cltd (bad) rex.WB add rdrand sahf xchg mov cmc movslq lea cmp pop in lods rex.RB movslq (bad) rex.WB sahf jg mov outsl test jo xor adc (bad) and push push lock iret sub rex.RX cmpsl movsb mov jo rex.WB cmp stc lea push add push cmc pop enterq pushfq push (bad) (bad) cmp rex pop jp or xor jbe fwait mov xor mov xchg cmp sub add pop jmpq and not iret pop rex.WB loope (bad) mov test mov or out or push or push movabs addl add movabs scas push pop out sub fidivl (bad) rex.WR adcl (bad) mov add or fimul xchg sti adc jne in lret callq nop and (bad) test rex.WR xchg push test push pushfq mov or fsubs or pop stos pushq insl pop cmp sub push mov fs fcmovbe cmpsl xor add test mov pushq fwait cmp out push (bad) mov adc xor movslq and push pop popfq sbb insl rex.WB leaveq pop loopne add and (bad) callq addb (bad) nop callq rex.RX sub and adc lock and int int3 rex.W add adc lock pop xchg xlat sti sub (bad) cmp leaveq movsl ja sub lea pushq movsb mov enterq mov lahf mov test pop xchg jmp push and imul (bad) icebp test rex.WB jb rcrl rex.WB adc (bad) (bad) jne rex.WB (bad) repz mov lret pop lret icebp sbb or xlat rex.WB (bad) push mov rclb je (bad) xor rex.WB fiaddl mov rex.WRX lods lahf sbb sbb rcll jno movslq sti and retq mov add mov jle vpacksswb or (bad) xor sahf movabs shlb xchg rex.WX sub clc int3 rex.WR sbb (bad) sti adc add je (bad) (bad) cmp cmp mov repnz xor (bad) jrcxz notl loopne movabs pop ss out es jge callq jg xchg cmp xor xlat adc test push pop mov test (bad) movb rex.R subb test sub ja jae mov xchg rex.WXB ds jo movabs rex.WB pop (bad) xchg rex.WRB retq mov mov test mov and (bad) sbb adc or mov jnp (bad) mov sti rex.WB xor decb lea sbb or andb push adc (bad) popfq sub sub mov rex.WX rex.WB (bad) mov rex.W mov lret push cmp stc callq jge popfq jbe callq xchg rex.WXB cld movabs movabs xchg sarb or pushfq test fstl rex.WR jne xlat and (bad) mov (bad) pushq add mov shlb xchg sbb sti and (bad) jne cwtl rorl pop cmpb xchg stc adc mov mov cmp movabs push hlt in mulb (bad) rorl pop and mov imul icebp scas lock lret addl orl xchg in rex.WB add (bad) (bad) fisubrl rex.WB test xlat adc xor and xchg jns (bad) mov loop gs rcrb rex.X jge push pop add add rex.RX es rex.RXB lret rex.WB (bad) adc mov pushq adc sarb pop xchg jge fs lahf scas imul (bad) and test loop rex.WB addr32 stos adc xchg jbe (bad) negl test mov rcr and rex.WR sub fwait (bad) (bad) pop mov add int3 cmp cmp (bad) mov xchg clc or int loope sbb rex.WRB lahf xchg xor jrcxz mov (bad) retq sbb jno sub sti and adc (bad) pop xchg es pushq xchg cmp pop lret jno movabs (bad) imul or push (bad) sub imul cmp rex.WB test pop pop je imul (bad) sti xchg xchg xlat mov roll add xor sbb (bad) sub pushfq jb mov sbb push cmp adc je (bad) (bad) and test mov outsb xor scas sbb sub ror mov jge (bad) xchg xchg fcoml (bad) repz jge movsb mov add (bad) (bad) popfq pop (bad) (bad) mov cmp adc rex.WB fwait std pop (bad) (bad) (bad) sbb xor jne cmp add add (bad) ss (bad) test fsubr push rex.R (bad) pop jmpq rex.WB (bad) cmpsb std rcr xor movsb pop enterq movsq inc sub lods jno mov rex.WR xchg mov pop sbb xchg rex.WB (bad) (bad) rex.W rex.XB mov hlt cmpsb callq mov push clc add sbb rex.WX rex.WB rex.X nop incb popfq sbb movsb addr32 rex.WB rex.RB (bad) lock mov loop pushq (bad) repnz sub (bad) outsb push int rex.WB push sub add repnz insl rex.WXB cmp (bad) add pop sub test rex.R addr32 pushq test mov jae ror pop (bad) xchg hlt cwtl xchg rex.WB or (bad) mov mov (bad) (bad) (bad) callq sbb push adc rex.XB repnz jle sub rex.RXB popfq rex.WB add or (bad) cwtl push jo mov (bad) hlt xor (bad) (bad) (bad) out out rex.WB pushq jno xor mov fisubl adc xorl loope jo loop pushq addr32 mov callq cs jp jne pop lret in leaveq iret (bad) xchg rex.WB (bad) imul mov int fcompl (bad) psrlw add push stos xchg pop sub rex.WB pop vmovaps callq (bad) (bad) xor mov repnz pushq gs xor mov xor rex.WB rex.WB rex.WRB rex.WB rex.RXB adc cmc lret rex.RX rex.WB movsl mov test movabs (bad) mov sub add repz popfq push jmp std cmp jae jno fldenv stos (bad) push mov addr32 sub push jne rex.WB cs pop add rex.WB (bad) lret mov (bad) rex.B add cwtl stc xchg movabs fmull mov hlt sub int3 stos cld push sbb mov (bad) rex.WXB addr32 or loope and pop rex.WXB jp mov pop movabs mov mov jge in mov cwtl movabs jl xchg stos mov or cltd and or adc (bad) jae insl lods mov scas rex.WB jmpq pushfq mov sti movabs sub sahf mov (bad) test sbb (bad) xchg (bad) add rex.B movabs pop rex.WRXB xor jb xchg ja rex.WB cmp fcmovnu mov cltd stos jmp (bad) jne rex.WXB sahf (bad) fwait cmp outsb pop imul sbb mov orl xor rcr movabs cmp pop mov out mov and mov xchg push xor sbb sbb rex.WRXB rex.XB je out movslq icebp rex.WRB nop mov rcrb adc xchg (bad) mov (bad) mov add ficomp rex.WR adc pop (bad) test callq (bad) lea pushq jle or (bad) xor jne iret test (bad) sbbb (bad) (bad) mov scas rex.W ljmp mov out fwait fs cli stos scas (bad) sarl rex.RX adc push sub xchg pushq cmp and mov mov adc mov jb leaveq movabs imul sti add clc mov enterq jl jae xlat pop addr32 sub stos imul push addr32 (bad) cmp jmp clc jo (bad) (bad) (bad) out push pop cmpsb xor jne xchg xchg rex.WXB rex.R rex.WR cltd rex.WRB jo mov and or je (bad) push sbb rex.WRB addr32 nop rolb mov mov fisttpll push adc and test pushq sti rorl cmp mov rex.WXB lods mov (bad) repnz cltd (bad) xlat fldenv push mov repz rex.B rex.RX movabs stos pop push adc mov (bad) ja sub xor mov sbb std (bad) pop cwtl loopne jbe and rex.WB mov push push callq and (bad) rex.WX rex.X jnp mulb pushq xor sub rex.B and outsb mull add (bad) or cmc xor sub push (bad) or fs out pushq rex.WX (bad) mov popfq rex.WB lahf sbb movb stos xchg jge xchg cmp stos int repnz rex.B loope and rex.WB imul sbb push rex.XB rex.WB push rex.RB in cltd mov int rex.RXB rex.WRXB jo rex.WB mov add pushq sbb movabs rex.WRXB movabs nop mov fldl (bad) movslq pushq lret xchg or jns cmpsl sbb retq lahf movslq rex.WRX rex.WB mov xor mov rex.WX (bad) sub mov pop (bad) jl fisubr sbb (bad) stos rex.RXB scas push (bad) mov std mov (bad) xor rex.RXB jg xor jo stc (bad) rex or mov rex.WRXB test or rex.W rex.XB repnz jb (bad) sub sbb idivl mov rex.WR pop rcrl xchg jnp jmpq pop and xor outsl mov (bad) pop or push xchg mov rex.WXB movsb push adc (bad) scas rex.W mov sbb adc jmp or xlat xor sahf (bad) adc fisttp or sarb rex.WX sar sub sbb (bad) test retq out jbe divb test in nop mov rol and enterq fcomps mov (bad) add lods test mov (bad) imul pop leaveq push mov jbe pop hlt fldl (bad) leaveq (bad) pop lret sub and or cmp fisub sub out rorb (bad) jp push int rex.WB rex.WRX sbb jle xchg push (bad) rex.WB lock loop cld mov (bad) retq (bad) xor mov push rex.WRX rcll imul insl push out rex.WB es loope xor mov (bad) rex.WB rex.WRX out xchg rex.WB rex.WR subl test movabs mov fs or (bad) callq xchg cltd and mov jge pushq xor cmpsl adc movabs loope (bad) je mov xchg rex.XB adc loope out outsl vpsubsw lret cli sbb fldl movabs loope test xor popfq pushfq cmp pop fisttpll pop (bad) and nop test movsl jo notl lods mov adc retq (bad) pop or sbb rex.WB sbb cltd pop in cmpsl data16 callq cli rex.W rex.WB mov outsb and cmc loop js rex add rex.WRXB in int3 cmp retq movslq add test mov mov lret data16 mov pop std and lock or jmpq rorl or movabs movabs enterq pop mov push or test jne lahf (bad) jp (bad) cmp pop (bad) mov or jge adc sbb rex.WB mov out rex.W test pop or or mov rex.WB lods xor pop hlt (bad) fldt add sub rex.RXB rolb sti movabs jnp push out (bad) xor (bad) ja (bad) movabs (bad) insb xor paddd add or stc in add loopne mov xchg addr32 retq rex.WR rex.B jmp pop movabs rex.WB loope adc fdecstp mov shll adc sub callq (bad) je rex.WB cli (bad) lock fwait (bad) movabs sub clc jae rex.WB sarb cltd test movabs pop mov rex.WB leaveq jmpq repz cmp (bad) (bad) imul cmp (bad) (bad) (bad) roll sub mov lock mov rex.WXB pop mov adc (bad) leaveq xor mov jo sbb (bad) ss scas ficomp ror and stos jge push cwtl adcb scas xor pop (bad) addr32 and adc (bad) cmpsb xor rex.WB movabs add rex.WB (bad) jo add jae and lahf rex.X rex.RB pop (bad) mov sbb rex.W fisttp rex.RB imul jns rex.RXB test sub scas mov add rex.WB cmp hlt (bad) jb rex.WB callq lahf add cmpsl jmp and cmp movabs stos pop insl add rex.WB xchg stos (bad) (bad) pop xchg rex.WB cltd fisttp fsubs callq (bad) adc addb or (bad) cmp mov adc rex.WB lahf xchg jrcxz rex.WRXB nop lret andl sub push je (bad) rex.WRB ss lret imul push rex.W mov and push movabs rorb xchg pop pop xor mov lods jno jns xor xchg lods lock jnp xor rex.WB fisub (bad) rex.WX rex.RB cmp pop jne pop rex.WB fwait cmp lret (bad) decq rex.WX sbb loope out cld pop (bad) xor lods jbe rex.WR xchg rex.WB add jno movsl fisubl sub test rex.WXB rex.WB add test or xchg retq xor (bad) rex.WB add mov outsl mov sbb in cmp rex.XB (bad) (bad) movabs sub lahf int add iret push (bad) rex.WB xor out insb xchg imul (bad) je out sbb (bad) cmp (bad) (bad) sbb rcrl mov (bad) jmpq insl sub rex.RB cwtl xor rex.WRX rex.WR rex.WB fildll fsubrp int and xor adcl rex.WB push out jmpq xor pushq cmp xchg and mov jle lods sub cmp or pop (bad) lret xor rex.WB cmp add jae gs out push and (bad) outsl mov rex.RXB fsubrl cmc int3 jmpq hlt in in repz rorb rex out push or adc rex.WB movslq push sub std or (bad) xor and pushq scas pop mov rex.WRXB movslq ror out (bad) xchg movabs (bad) mov add loopne cmp (bad) stos cmp pop (bad) scas rex sarl lahf out hlt rex.B testl movabs pop sti popfq rex.WB pushq rorl xchg gs rex imul push pop lahf test mov or rex.WB xor out pop or mov pop ja mov xchg push lret sbb repnz callq mov fs cli (bad) movabs add (bad) jge (bad) incb (bad) shrl int rex.B nop xchg rex.X rex.WB fisub or cmp movabs fimull mov and scas (bad) jno leaveq xor add cmp popq add rex.WXB fisubrl rex.WR rex.WB in mov popfq xchg out and pushq test and mov callq rex.WB test (bad) (bad) imul cli or add sub cli repz xchg (bad) add cli push rex.WB rex.RX imul popfq rex.WXB rex.WB mov movsb adc push loopne xor mov push xchg clc adc loop es mov (bad) movabs imul mov (bad) sti pop mov jno sbb lcall cwtl callq hlt (bad) rex.WXB scas jne insl fsubr lret push mov (bad) (bad) (bad) jbe rorl and rex.WXB add sub lods in movabs out loopne cmpsb jno mov stc in movsb xor cmovae (bad) adc (bad) ja in callq sbb mov rex.X cld cwtl loopne jbe push push lahf xchg in (bad) test (bad) mov rcrq data16 mov jl jmpq mov sub push lods mov fstpt and stc cmovb rex.WB lahf repz mov jp std (bad) sub jne (bad) fild rex.X cld adc mov fsubrs roll (bad) xor pop and push mov (bad) rex.WRX mov adc lods xchg test (bad) pop mov clc rex.X and jns mov fcmovbe int3 movaps and rex.WB fs stos xchg out outsb rex.XB cmp rex.WB (bad) (bad) (bad) rex.WB sub adc flds and test jg (bad) xor rorl xchg clc rex.RXB ja (bad) loopne sbb pop stc (bad) add test pop (bad) in pop outsl movsb andb sbb pushfq rclb iret rex.WB rex.WX subb rex.WRB test rex.WRXB add cmp rex.WB jle rex.B rex.XB jno test fisttpl stos clc lahf cmp rex.WB cmp adc sbb mov sbb addr32 (bad) (bad) cmp jmp add js rex.X fsubs and cld movslq (bad) and (bad) iret rex.WXB rex.WB rex.WRX pushq rex.X (bad) ja roll and push mov (bad) xor or (bad) lret rex.WB rex.B leaveq movsl jl rex.WB (bad) push jle or add addr32 push fist or jb jrcxz jno stos sbb enterq popfq movsl repz ds mov add fimull fimul xchg pop sub or fucomp gs callq rex.RX xchg jrcxz rex.X movsb xchg int rex.WXB nop mov iret jbe or mov es movabs mov loopne mov push out or in cs mov rex.WRX mov fnstenv out std push cmp sbb out sub jrcxz rcll xchg xchg (bad) jmpq mov cmpsb xor movsb std pop and mov addr32 lahf enterq testb lret jne jbe pop xchg orl (bad) xor adcl mull imul enterq popfq int pop (bad) mov mov cmp (bad) adc sbb ja stc jns pop std rex.WB (bad) pop mov loope adc jmpq sarl rex.WB sub (bad) rex.WB jmpq or in xlat sbb and cmc xchg shl rex.WB out jmpq rex.RX ds sub data16 or cs cld test mov rex.WX js rex.WB and fadds mov loope,pn lock rex.RB mov sub pop int and pushq rex.XB sub test xor cltd add in mov mov push movabs mov rex.B hlt loope rex.R add loope pop add (bad) (bad) int cmp xchg stos sbb sub xchg pop pop and fwait sbb or pushq and (bad) mov jl xlat cli mov rex.X cmp (bad) repz rex.WRX movabs adc pop adc push addb rex.XB and lods out scas imul add rex.X sub out rex.WRB (bad) jl loope cmpsb rex.XB mov xorl mov popfq push movsl xchg test loopne es push cmp rex.WR movabs lods (bad) xchg cltd fcmovnbe push sub movabs sti (bad) push hlt xor pop popfq movabs push popfq hlt movsl addb jmpq sub push sbb sub in pushfq fs (bad) lret (bad) or push jp xchg pop push movl jmpq in (bad) mov xor pop adc mov sbb rex.RXB xor es sbb jae cmp xchg std jbe or and mov adc callq xchg enterq (bad) pop lret pop scas and roll jge lret jp cmp rex.XB pop sub fcomps (bad) pushq rex.WX stos rex.WB mov xchg sub je (bad) rex.WB es rex.WRX mov ss xchg xchg add mov and callq loop loope rex.WXB mov movabs jno push clc imul jae rex.WRB rex.RXB test rex.WB mov (bad) es insb outsl (bad) adc push (bad) (bad) mov or fwait mov mov rex.WX lods mov mov xchg loop rex.XB add scas (bad) outsb js rex.WB (bad) mov (bad) rex.WB jb (bad) pushq add rorl (bad) pop adc jle mov rex.WRB cmpsl cld fistpll rex.WB (bad) jbe ja xor xor insb lretw shrb (bad) cmpsl (bad) push or sub test rex.WRXB out pop xlat rex.WB add xchg pop push movabs mov rex.WX fwait cmpsb sti cmpsl rex.WB test rex.WRX mov push mov divb std rex.B add icebp xor loope jp sub loop pop ja jnp adc pop sbb jp rex.WB pushfq test fs repnz rex.WB (bad) (bad) add out in std pushq rex.B popfq mov and imul adc sub retq idivl (bad) jno fwait rex.WX movabs lods stos rclb ficomp test rex.WB jnp ja rex.WB rex.WRB callq (bad) fildll repz pop pushq push movsb xchg jrcxz cmc movabs push lock subl rex.WB rex.WR rex.WX vmovlpd (bad) test xor jmp rex.WRXB jnp cld (bad) lret jbe rex.WB xchg (bad) stos pop (bad) movsl shl rex.B rex.R lock jb pop add cmpsl rex.WB rex.WXB repz int3 jo rex.WB in (bad) adc jp ficoml sub mov add pushq and pop movl rex.WB mov lret mov cwtl orb outsl (bad) fwait mov loopne and rex.RXB iret rex.WB cmpsl sbb and (bad) rex.WB cmp cmovl icebp test rex js jmp or push mov jo rex.X cltd leaveq cld or rex.RX fldl movsb ja push test add xchg lret callq rex.WB jge (bad) rorb (bad) xor (bad) imull mov out xchg retq add (bad) (bad) xchg cld cmovns jo xor js outsb push rex.RB mov out (bad) hlt repnz lret rex.WXB rex.WRB push (bad) rex.WB (bad) and stos or (bad) (bad) out (bad) movabs test stos rex.WX rex.WR or outsb rex.WB xchg mov mov fiadd rex.WRXB ds gs push push cmp idivl add adc lahf xchg lret sbb scas fwait pop addr32 rex.WRX outsb cmp jnp (bad) xchg sub sbb jne xchg cmc movabs jae mov rex.WB rex pop cmp jp (bad) test cltd sub iret mov fstps sbb movsl pop mov lret (bad) sub out lahf jae rex.RXB jo push (bad) std or (bad) mov xchg or movsl movsb loope pop rcr rex.WB fwait xor (bad) rex.B rex.WB insb fisttpll rex.WB mov rorl callq and rex.WB pushq add outsb lods rex.WR xchg (bad) add mov cmpsl cmp callq rex.WXB push shrl push loope dec ficompl rex.WB std or pop xchg rex.B rex.WB jrcxz (bad) movabs (bad) xchg sbb testb push mov mov addr32 jbe and sbb callq push rex.WRXB loop fwait xchg (bad) rex.RB cmp xlat or mov pop sub ja or pop jge xchg callq js insl (bad) cld out iret cmpsb addl fcmovnb (bad) rex.B jmpq sub rex.WRB cmp rcl lea adc jrcxz (bad) jae nop or rex.RXB pushq rex.W movabs rex.WXB rex.B xor rex.RB loope rex.WX mov jnp mov sarb or loop scas lret rex.WRB mov bnd sub jp rex.WR sbb xchg stos lock (bad) int movsb (bad) cmpsl lods rex.X sub movsb xchg jg xchg adc (bad) pop push jbe ror (bad) and rex int3 cs pop insb pop sub and sbb (bad) addr32 loopne icebp rex.B fbstp (bad) rcll or test or push callq ljmp rex.WB subl (bad) (bad) mov rex retq enterq movabs in add adc fdivl adc outsb sbb push xchg (bad) fcoms and rex.WB mov (bad) retq (bad) std js add roll rex.R mov jb rex.X sbb (bad) rclb mov push (bad) pop stos test push and rex.B cwtl pop add ds (bad) pushq movsb mov xor addr32 and cld jle js je movsl clc (bad) jp (bad) fidiv (bad) lods mov rex.WRB pop cli loope (bad) sbb (bad) adc cltd (bad) incq mov jo and fmull int3 test lods rex.WB rex.WB (bad) rex.RXB lock (bad) rex.WB jo rex.WX rex.RX xchg addr32 rex.X rex.WXB (bad) xchg mov cmpq pushfq jg retq imul movabs (bad) int3 rex.WB in push mov sbb scas fbld fistpl mov cmc in addr32 and push rex.RB mov in adc (bad) adc rex.WRB enterq mov movsl addr32 out sbb (bad) xchg shlb rex.WB or test rex.WRB test (bad) mov lock fildll cmpl sub sarl adc mov rex.WB and pushq rorl jle sub stos rex.WB jrcxz jno lret pop mov pop or or gs sbb rex.B jb es sbb (bad) incl mov ficom cmpsb test xor (bad) mov (bad) (bad) push xor sub gs add leaveq cmp and and out rex.WB rex.WR xchg stos mov or jmp cltd jmpq rex.WB mov push rex.WB or pushq es jmp mov mov sub xchg rex.RB mov mov loop (bad) outsb mov pushq retq rex.B sbb (bad) rex.RX add mov subb (bad) and (bad) and callq sbb and (bad) (bad) rex.XB es add mov sub (bad) (bad) nop movslq imul add popfq rex.WB pop adc push jne cmp sbb movabs or rex.WRXB addr32 pop enterq mov retq adc add popfq sub lea add and xchg idiv fadd (bad) jb push lret (bad) rex.WRB addr32 (bad) jp mov int loope add sbb mov movsb mov rex.WB popfq mov cmp js xchg rex.WB insl divl movslq adc add test out rex.WRB xchg rex.WB sbb jmpq push test in add loope rex.XB stc enterq movsb loopne push mov std loopne (bad) (bad) sub js add hlt rex.WRXB ds movb loop (bad) (bad) imul mov fsubrs (bad) out fimull xchg cmp jmp pop and mov adc movabs sub add insl adc sub add test mov xor rclb jmp sub vmulsd (bad) rex.WR callq mov jbe out jmpq (bad) rcr insb loop,pn sub rex.RXB xor (bad) xor rex.WB hlt or sbb jmp fsubl (bad) cmp ffree rex.WB mov outsl sbb sub lahf adc rex.WB retq mov xchg testb mov loop out xor jp adc sub xor and mov pop push jmp rex.WRB (bad) cmp ja js xchg lea mov mov add xchg xorl push sbbl pop je es (bad) fmuls rex.WB jge clc int lea (bad) out mov and mov rex.WB add (bad) (bad) sub in int3 movabs lods sub jbe cltd adc cmp fst pushq rorb jg adc jp (bad) mov movsb (bad) mov leaveq mov rex.WB rex.RX mov mov xlat xchg mov cmp in cld mov mov cld test movslq pop rcll rex.WX subl (bad) xchg test jb in (bad) insb pop jrcxz cli mov mov sub lods push adc lahf or ja and rex.WRX and nop loopne int stos leaveq sub sahf jno lahf fadds and mov mov movsb jmpq movslq rex.WB jnp mov maxps fmull cli rex.WB sbb sub cmpl xchg addr32 cmp fstpl xor (bad) cmp mov (bad) rex.WB lock outsb sbb in gs jmp rex.WB sbb repz sbbl add rex.WB (bad) repz fcmovnb sbb jno xlat out sub fs or push shr insl movsb mov fdivl stos (bad) sbb rex.WB rex.WX rex.X and xor xor shr mov pop sahf and rex.X fwait rex.R rex.WR sub push lret sti mov hlt rex.WRX sbb (bad) mov in test mov jp fisub mov rolb rex.WR rex.XB and mov leaveq rex.WB (bad) imul shr movabs push mov rex.WB movsb loop rex.WRX push notb rex.WX adc rex.WB imul or gs xor (bad) xlat js add mov cwtl and sahf jne movl cmp icebp std (bad) repz jne cli mov sahf and gs jmpq lahf jns out push add pop or rex.W lock gs outsl pop jo (bad) pushq pop cs xchg mov fs mov cmpsl add pop sbb repnz xor (bad) sub cmp pop add callq add rex.WXB sub jno imul rex.WB (bad) imul cmpsl movabs leaveq jbe (bad) movsb or jp sub sahf sub fs push imul jle faddl jo push rex.WB mov clc xchg enterq sub adc pushq sub repz rex.WRX sub lods xor adc (bad) jle sub popfq and adc shll add (bad) sub movslq out adc rex.RXB xchg ja jae (bad) hlt xchg jnp xchg jge test roll leaveq shll xor in pop rex.RB addr32 (bad) repz sbb xor add rex.XB jne enterq mov enterq orb mov rex.WB lods adc xor movabs rex.RB rex.WB sbb int3 rex.WRX mov rex mov (bad) callq (bad) sbb rex.WB divb xchg rex.WB (bad) xlat notl rex pop and rex.WRXB rex.RX mov popfq js add rex.WB mov leaveq movsb pop (bad) adc nop std rex.WB xchg mov push rex.RB test pop mov mov rex.WB loopne iret mov movabs push ds out adc push (bad) cmp push movabs add movslq cmp (bad) mov and mov bnd imul lahf (bad) rex.WRB bswap popfq cmpsl lock adc in adc pushq xchg imull sti rex.WRX rex.WB pop mov adc sbbl and sbbb jmp mov (bad) in mov push rcrb rorb pop sarl lahf je rex.WB and rex.WXB xlat stc pop rex.WB fxch jle rex.WB loop addr32 mov insb push rex.WRXB ds pop jns sbb or rex.B xchg xchg sub leaveq sub (bad) mov sub sar jo rex.XB gs sahf sub nop mov xor (bad) sub rex.RB mov lods push rex rex.WB mov rorb orl jo (bad) (bad) rex.WB rex.RXB cmp fldt mov cmc (bad) add lea loope push enterq callq pushq push mov xor (bad) cli test rorl or rex.WB loop je movabs movsb cmp rex.WB push imul (bad) mov xchg movabs adc int3 movslq cmpsb sub xor rex.X outsl xchg pop push movabs es rcrb (bad) rex.B jl mov rex.RX int3 ja xor cmp jrcxz movabs mov push (bad) gs add enterq movsl rex.RX or js sub or sbb and xchg nop rolb jrcxz out lods pop push (bad) sbb fcompl callq movsl fsts data16 rex.W test xchg pop mov movabs jmp lock (bad) adc xchg int rex.WB movabs lahf sbb jle out pop scas cltd gs sbb rex.B shrb xchg sub adc jle stos sti push fbstp pushq test es and rex.WB (bad) rex.WRB sub (bad) movsl fisub pop rex.WX rex.B rex.WB rex.RX lahf lods cmc rex.WXB fisubr mov (bad) add and and pop ja mov xchg pushfq lahf (bad) ja xchg sub (bad) rex.WB data16 in ljmp out add mov mov shr out cmp test add stos rex.WB rex.B mov adc xchg adcb rex.WB clc gs nop or stos add rex.WXB (bad) or and adc mov movabs pop lock pop shrb movsb rex.WB adc retq mov lea stos rex.R push xor and (bad) iret rex.XB sbb callq adc push enterq mov mov jge and pop sbb or xchg movslq test xchg (bad) ficom jl pushq push (bad) callq rex.WRB (bad) popfq (bad) rex.WB repnz xchg in rex.RXB movabs or movslq cmpsb rex.WB or rex.B sub sbb mov outsl sbb lret sbb callq or lock pop pop or ds add or pop int3 leaveq sahf rex.WB rex.RXB es mov jmp cltd cli adc mov xor es sbb xchg adc mov rex.RB stc cmp (bad) ja int (bad) pushq cmc lret in sub mov (bad) nop (bad) pop jb rex.RXB mov lret push sub rex.RB jnp mov pop movabs rex.RXB callq adc je (bad) sub sbb (bad) icebp jne rex.XB push xor lods callq shr rex.WRX (bad) addr32 mov and pop mov or lea mov test mov imul rex.RB gs mov add rex.X div movsb pop mov jmp or add push (bad) rcrb out xchg pop mov int3 xchg or pop or sub rex.WRX push rex.WRX xlat cltd nop pop xchg adc jb jle jns (bad) jns (bad) ss (bad) psubsb (bad) add fcoms xchg pop and test sub (bad) repnz rex fwait adc add rex.RX cs adc or or (bad) rex.WXB pushfq lock cmpsl sarb sub fstpl imulb test adc (bad) in jmpq cwtl adc cmpsl (bad) mov lods cmp pushq faddl cmpsl in xor jne andl mov pushq rorl or rex.RX xor (bad) imul mov scas lock rex.WRXB rex.RXB nop pop rorb pushq rex enterq and jnp rex.WRXB enterq sub rex std jp pop xor lods sub test loop jnp outsb jge push xor jo rex.WXB lods pop clc pop mov mov rorb insb cmpsb (bad) enterq mov rex.RX (bad) rex.R out int3 test push sub std out pop push rex.WR rex push fisttp cmp test sub enterq imul and rex.WX rex.WXB adc xor sbb and jbe pushq sub cmp cli rex.RX repz pop jae stos rex.WB outsb lret je rex.WB mov loopne jo (bad) rex mov test loop outsb fbld adc (bad) pushfq (bad) insl rex.RX (bad) hlt loopne pushq push pushq flds (bad) lods lret icebp add cmc (bad) test insb clc fwait rex.RB (bad) jns (bad) add xchg (bad) js shll sbb (bad) push or rex.RX pop out (bad) (bad) rorb jnp pop mov pushfq mov push push (bad) xor jp rex.WB (bad) callq push rex.WB rex.W rex.RX (bad) fs nop adc movsl pop in pop add in cld scas adc nop adc movsb add xchg rex.RXB jl gs (bad) sub sbb jge outsb jbe (bad) fadds push rex.WXB add movabs retq xchg rex.WB sbb mov (bad) fsubs enterq rex.WRX xor pushq add jbe xlat data16 jno bswap rex.WX sub addr32 and cld mov mov ds fcmovnb xchg mov fwait (bad) mov jbe mov fistpll mov cmpsl imul imul mov mov cmp xor jbe pushfq or rex.RX rex.RXB mov imul xchg adc cmp nop add push xchg mov xchg mov rex.RXB enterq pop (bad) jrcxz or and rex.WX stos adc push rclb push test fnstsw rex.WX rex.R test addr32 ja rex.XB jb (bad) xor idivl (bad) lods (bad) xor fcmovnb callq test mov stos push jle out rex.RXB push popfq sahf push clc rex.WRXB jnp,pt imul rex.WRXB mov jp es push cmp xchg jmp xchg nop xor jge enterq mov sbb mov or stc rex.B icebp mov orl cmp rex.RX jne in xlat out mov or sub (bad) lods add mov xchg icebp add in push jmpq fisubl rclb (bad) movsl mov sub mov or jnp lahf mov xchg scas mov test rorb test movabs movabs add movslq mov fldl2t lahf mov jo repnz and rex.WRX cmp mov (bad) mov shl mov mov cmp test xchg adc pop xchg rex.RX rex.B and (bad) (bad) rex.WXB rex.WX std int and cmpsb pop mov rex.W push pushfq outsl out shr (bad) (bad) in retq and rex.RB out out rex.WXB rex.W rex.RX imul add fsubl xchg or (bad) xor rex.WXB jle test movsl or pushq rex.WR (bad) test imul rex.WRXB cli lret scas pop xchg outsb add test lret movsb imul mov movsl sub and insl rex.RX rex.RX or (bad) add lea in or pop jo enterq fmuls adc pop (bad) adc push sbb es mov fstl mov add test jnp cltd lea mov adc js push xor retq cld (bad) rcrl mov rorl mov adc xchg imul jmpq xor negb mov or pushfq xchg xchg (bad) sbb sub shl xchg rex.WXB movabs adc jge push (bad) mov mov (bad) xchg lods mov adc or ds xchg int int xchg jbe cmp popfq or (bad) fldenv jp jns rex.WRB rex.RB jmpq sbb cld rex.RXB data16 xchg data16 cmp xchg xchg mov es mov fildll or or mov pop cmp movabs xchg cli xchg pop loop movabs pushq andb movslq out xor iret shlb adc (bad) ljmp rex.XB push and cltd rcll adc push xlat push in (bad) adc mov stos cmp pop add cs jmpq pop cwtl mov sbb hlt loop int3 or pop int pop add decl icebp (bad) fdivs (bad) rex.WB stos insl adc fs or push (bad) pop (bad) or out sub lods or pushq out or popfq (bad) (bad) xor jb sub cmp mov jp,pn imul adc (bad) divb or rex.WB (bad) popfq (bad) adc rex.WB sub fisttp repz insb addr32 xor (bad) rex.WB mov cmp lret out mov fistl xchg jrcxz push test cmp mov rex.WRX mov mov (bad) xchg jge adc rex.WX addr32 mov movabs lret mov rex.RXB retq rcrb out fistpll callq add movabs rex.WB cmp adc pop test clc repnz and rex.X rex.WRB lods shl sbb xchg rex.WXB imul data16 insl rex.WB jns jg xchg sbb popfq mov jns mov rex.WB (bad) out rorl pop (bad) mov and rex.WB jle outsb jl (bad) callq shrb rex.WB sbb pop insb jge jle mov cmp cmp and movabs rex.WB (bad) lods fs or (bad) xchg pop movsl and xchg or (bad) mov push (bad) in negb xor stc insb push (bad) (bad) rex rex.XB (bad) or (bad) lods cmp movsb jg push xorl adc ja pop movabs jle insb rex.XB push (bad) pop movabs movabs rex.WB cld divb callq push sti (bad) mov mov jno sbb add fnstcw decb lods mov or test xchg push rex.WB (bad) out (bad) retq (bad) fisubl xor adc jno mov mov out mov repz (bad) jae rex.WX nop movabs sbb cld stos pop cmpsb jle rex.B xor roll sbbl xorl rex.X and jrcxz pushq mov loope subl pop jbe add scas xchg movabs pop mov sub nop scas rex.WRXB mov (bad) xor push nop (bad) jge jl clc rex.WXB xchg (bad) (bad) retq (bad) pop mov rex.WRB jns (bad) and mov and cmpb or rex.WR (bad) push xor movabs jmpq decb (bad) (bad) lock sub repz scas outsb pop sub fild pushq mov addr32 pop mov mov lods stos jne cmp (bad) insb or fldl cmp pop mov or loop (bad) push jmpq rex.WB (bad) sti (bad) add int3 jb mov rex.WRXB movslq jp,pt jrcxz cmc fwait sti data16 pushq incl jmpq push rex.WB mov scas (bad) imul pop xchg (bad) or pop (bad) hlt int3 rex.WB rex.WRX (bad) xchg xchg sub rex.WB (bad) (bad) addr32 pop xchg cmp fimul div rex.WRX mov cmpsb rex.RXB xchg jrcxz enterq icebp push mov (bad) mov push sbb rex.RB or insl rcrl sbb nop cmp mov test ss (bad) sbb pop (bad) fbstp sub mov lret fnstenv in jl (bad) sub movabs jrcxz xchg cmp movabs jp cli (bad) outsl jns,pt push mov sbb or rolb jmp shlq or rex.XB cli incl mov repnz popfq stc and push (bad) cmp rex.RB rex.WB pop pop es rex.WB jp sbb mov mov xor xlat addr32 (bad) std or jo mov mov fstpl rcrb mov (bad) pop xchg (bad) jbe decl mov stc decb or int3 insl sub movsl mov pushq cmpsl imul cmc loopne sti rex.RX sub jb sub mov cmpsl adc movsl (bad) int rex.WB (bad) rex.X ficompl add jg lret xchg lods pop (bad) cmp pushq adc (bad) test rorl rex.WXB xor mov sub outsb or movabs (bad) movabs popfq rex.WB (bad) rex.X rex.WR add repnz retq (bad) xorb outsl lret rex.WB movabs lock rex.WB mov rex and xchg or pop sub sub mov stos cld pop cmc andb adc jp sahf jg enterq xor sub lea pop adcl shrl mov test jmp sub test (bad) imul or rex.RB cmc retq rex.R jg adc rex.WRB sub movabs add rex.WB sbb callq adc push repz (bad) rex.WB mov rex.WRXB add gs cmpsl sbb pushq xchg rex.RB imul out rex.RX rcr outsb test rex test out xchg std xchg pop in push pushq adcl fwait adc rex.WB cmp xchg mov push lock gs insb rex.B imul loope int3 movsl add xor cmp fisttp icebp fsubs std rex.WX rex.WB cli movsl mov callq push in cmp xchg and cmp and xor popfq or mov rex.WB cmova mov sbbl repnz jno rex.B xchg sti (bad) cmc xchg rcrb lock cmp sub add adc int3 mulb mov (bad) stos (bad) pop cmc (bad) push stc jo rex.XB data16 lret rex.RXB push xchg pushq push rcl and mov sub mov sub add sbb imulb stc addl out rex.RB mov ja jae mov movsl rex.B callq insb adc add pushq rex.WR (bad) lock push (bad) shl notl lret rex.XB (bad) shufps xchg ficom or enterq rex.XB push fidivr outsb cmp rex.WB movslq (bad) shrl rex.XB movabs xchg jbe sub sub mov cmp cmc (bad) leaveq or rex.WB ss sbb fisttp xor shll iret (bad) rex.WXB sbb rex.WRXB rex.RX mov add jb rex.WB es iret pushfq callq out enterq (bad) rex.WB fwait xor (bad) out push movabs mov (bad) pop movabs (bad) xchg lods add mov sub movabs cmp xchg adc jge rcl rex.WRX fcmovne int3 adc mov jbe out (bad) iret jrcxz add out test vpcmpgtd loopne and xchg test xor xor (bad) push mov sbb cmp add lcall test scas hlt rex.WRX loopne pop mov in xor pushq out cltd callq lods mov xor cmpsl fimull addl rex.W rex.RXB scas out lahf enterq (bad) ss or xor (bad) jnp ds pop sahf xchg and rex.WX rex.WXB xlat movsb test fdivp pop pop cmp sub mov sti mov xchg cmpsb xchg icebp xor mov notl decl cmp sbb lods loope rex.RX mov jb callq rolb (bad) movabs (bad) hlt cs mov pop fmuls pop rex.RB rex.B rex.R sbb rex.WX lods sub push rex.WRXB imull pop scas rex.WRB (bad) sub lock pushfq xchg mov add xor or jge adc packuswb insl add pop mov imul xor enterq (bad) scas imul cmp (bad) enterq mov shr out or (bad) pop outsb imul test mov stos (bad) xor scas sub test clc test icebp push rex.RXB add rex.WB fwait xor rex.X push mov rex.XB (bad) rex.WRB sbb (bad) or mov stc jl and cmp popfq cmp and pop mov imul lcall (bad) cmp callq rep rex.WRB rex.WR or jb xchg pop pop adc in add (bad) adc mov pushq (bad) (bad) or mov fdivs (bad) nop jl mov jae sub idivb cmp orl repz jmpq or sbb pushq cmp sub sbbl movsl or shl and int rex.B pop out pushq stc out js rex.WRB int lods adc push sbb loopne rex.B imulb pushfq js rex.XB or movabs push movabs pop fbstp outsb pop lods movabs hlt rolb sub ja cmp adc sub add (bad) (bad) insl rex.X rex.WB jnp sub rex.WB xchg clc rex.RX mov retq push cmp (bad) jmp (bad) (bad) mov callw fldcw pop rex.WB rex.B jle (bad) fs add sarq (bad) xchg lock vmovapd (bad) cli jp gs add push adc jrcxz rex.WB jns mov push rorb rex.XB xorb in cld mov xchg and pushq jne lret (bad) pushq sbbl adc test and cwtl negb rex.RB lods lock (bad) (bad) pushq fs ss loopne sarl adc rex.WX rex.WB lret push stos mov (bad) mov movb rex.WRB sbb out insl rex.WB push jge xor cmpsl pop rex.WX addr32 fiaddl mov sahf mov enterq mov and icebp push sub jne pushq (bad) rex.WX shrl in fildl cmp sbb imul pop fidivl lock xor fist cld cltd adc movb ja xor loopne push loop or retq bnd (bad) addr32 mov enterq outsb js (bad) (bad) mov rex.WB xor mov (bad) push test and pop fbld out cld (bad) (bad) xchg icebp xchg iret pop movabs xor (bad) (bad) in sbb cmc pop sub rorl addr32 cwtl rorl movabs rex.WRXB int3 adc mov movabs or add rex.WB rex.X popfq sub xor push movabs mov gs adc rolb out sub loop (bad) push movsb retq sbb (bad) jns mov jl ja push loope lcall xchg push pop sbb in adc and insl (bad) popfq movb push cmp fild rex.R rex.WB cs jmpq pushq mov ds pop jmp xor mov cwtl rex.WR fiadd (bad) rex.WB rex.WB jne pop lods (bad) mov add (bad) rex.WB (bad) (bad) xchg lret jg add (bad) test xchg out out lret pushq movsl add rorb jno sub fsubrs pushq int movslq rex.WR rex.XB sub sub or lahf adc pop (bad) (bad) (bad) jbe sub (bad) leaveq rex.WB cs movabs insb fiadd (bad) addr32 pushq rex.WB (bad) cmp xchg (bad) lret (bad) mov ds subl lret jmpq pushfq adc push xchg rex.WR rex.WB test rorb ja jp movabs pushq pop rex.RB callq or (bad) stos div xor fnstcw or xor or shr adc add xor sub scas sub popfq pop movabs imul (bad) rex.WB mov or insl adc icebp push fiaddl callq cltd add data16 jmpq callq je (bad) int3 outsb xchg pop mov cmp movsl rex.WRX test out rex.W pushq addr32 (bad) fsts movsl push pushq fcoml (bad) pushq rex.WB mov add xor rex.B mov pushq jp movslq rex.WRXB mov cmpsl (bad) mov lock pop jg lock push loopne leaveq sbb movsb clc push sahf jle or fstps mov (bad) test sarb pushfq std jne pop rex.WB mov mov mov and mov int3 je push adc addr32 insl xor repnz rex.XB rex.R pop xor rex.RB rex.WX mov xchg test rex.WRB xchg int3 mov pop (bad) movabs cwtl fs movsl cmp and rcll adc adc stos jrcxz addr32 testl (bad) mov mov mov lret push loopne jrcxz rex.WXB xchg mov sub xchg sbb jne mov push xchg mov sub in xchg mov pushq enterq adc xor push xchg and outsb mov or ja xchg mov xor fs jl movsl mov ss sarl out rex.R rex.B xchg rex.X mulb ds rex.WRX cs sub rex.WRB rex.R shrb mov adc rex.WB jge xor rex.WRB repnz leaveq mov outsb fs fidivrl (bad) (bad) in and sbb or mov sahf mul cmp jo movabs cmc callq pop out (bad) (bad) test sbb rex.WR retq sub jns (bad) (bad) fidivr jmpq rex.R sbb out pushq (bad) loopne pushq rex.RXB loopne add xchg rorb rcl shlb mov push imul test out int (bad) (bad) jo mov test (bad) mov fs movabs xlat fstps and push movslq sti (bad) loop rex.WB leaveq stos sub movsb cmc js pop mov add loop or (bad) lahf rex.B jmp adc (bad) sbb mov movsb rex.RX rex.WR iret loop rorb loope rex.B data16 xlat fstl cmp pop mov pushq (bad) push (bad) jp sbb test xchg jbe rex.RXB ss outsl rex.WRXB jns (bad) push rex.B lock mov rex.WB test out (bad) sub and or sbb loop in std testb test andb jge sbb callq sbb popq xchg imul outsl sub (bad) mov rex rex.WRXB cwtl or (bad) (bad) (bad) (bad) fisubr sub rex.WX xchg (bad) pushq xchg int incl or js adc xchg xor or bswap jl fwait xor jb jle (bad) enterq ficoml addr32 mov pop loopne jns rex.WR rex.X jae (bad) (bad) mov and jno push jmpq out js imul sbb scas push fdivrs andb xchg push rex.WX std mov movabs callq pop pop lret leaveq scas pushq mov jg pop mov mov jno or (bad) rex.WX cmc xchg sub push xchg add (bad) out lret pop movsb rex.WR (bad) sbb notb rex.WRB lea rex.WXB orb mov rolb (bad) (bad) fcmovu addl cmp sbbl rex.WB and std stos incl and rex.W pop and cwtl (bad) xor pushq retq xchg orb xor callq and and rex.WB stmxcsr icebp (bad) (bad) lret pop sbb ja (bad) rex.WB rex.WRXB fnsave rex.WB cmpb cmp rex.B rex.WR sub jmpq or pop in rex.WB push scas pop std jmpq fcompl mov pop sub rex.W rex.WB rex.R and stos jo fiadd (bad) rex.WB (bad) repnz mov pop iret sub enterq jl mov rex.RX mov cmpsb xor push (bad) cmp rex.WR rex.R rex.WB (bad) cmp push in test adc rex.WB callq fbld in rex.R cmp rex.WRB cmpsb mov mov jb xlat xchg out xchg adc movsl addr32 (bad) rex.XB push rex.WRB rex.WB (bad) gs jg pop adc es hlt fisttpll test xlat rex.WR rex.WXB add rex.R (bad) retq mov mov rcll jrcxz pop cmp (bad) or and (bad) rex.WRXB rex.WRXB (bad) iretw rex.WB mov mov mov push rex.WB cmp xchg ficoml movabs pushq out retq stc and sub add rex.WRX add xlat pushfq xchg rex.WX lock clc iret add or nop cwtl lret outsb sbb jb mov rex.WB rex.WB lods or rex.WB js and scas jno xlat callq (bad) rex.WXB sub and adc and (bad) mov sub out imul cld rex.WR mov hlt leaveq retq jge (bad) adc ja adc rex.WRXB imul push jbe or incb test rex.WB mov cld (bad) jle cmp incb xlat roll (bad) (bad) xor out push fcmove jl sbb out cli popfq rolb rex cmpl jae (bad) pop outsb rex.WRX sarb ror fs rex.WB xor xchg rex.WRB (bad) mov rex.WRB stos sbb mov rorl xchg in jne (bad) rex.X pop pop rex.XB rex.W and roll fsubl data16 adc fcompl lret outsb pushfq sbb cmp int rex.WRX jmpq pop andl mov jo sub jrcxz sbb (bad) (bad) fnop and (bad) cmpsl movabs ss jne xchg cltd rex.RB out jae and clc pop rcr (bad) rex.WB push stc xchg mov (bad) or add cmp push lods int3 add pushq enterq test (bad) movabs movslq cmp pop rex.X (bad) loope xchg rcl mov lea jmpq rex.WB cmp mov xchg mov rex.WB mov pop rclb (bad) jo in rex.WB or push cmpsb retq sbb rex.XB or rex.WRB gs add rex.WB insl lock xchg jmpq (bad) sub xchg (bad) mov pop rex.WB jae test (bad) test addr32 jne movabs push push or and icebp jmp stc adc movsb int3 rex.WR or lods sbb or mov sbb je rex.WRB (bad) int cld rex.WB scas or (bad) (bad) mov xor orl addr32 scas jns loopne imul add cmp shrb sub test retq jne add rex.RX rex.X cmp cli xor rex.RX rcr (bad) rex.WR and xor or mov add iret pop lahf hlt push (bad) rex.WB cmpsb adc or (bad) stc rorl shrb cmp imul cltd (bad) jmpq pop mov jmp loop push fldenv movabs (bad) lock rex.WB cmp movabs mov loope or movsb imul mov xchg mov rex.RB (bad) (bad) test pop xor pop cmp ffreep xor rex.WB xor fcos in divl mulb jno rex.WXB adc xchg mov rex.X stos imul je fsubl rex.WRXB lock in and jrcxz push rex.WRB cmp testb loopne (bad) fcomps xchg jns push pop movslq mov adc rcll add jno movabs (bad) retq xlat (bad) rex.WR add (bad) (bad) xchg incb push rcll pop test xchg (bad) (bad) and sub sub and cmp (bad) pop movabs rex.R mov push mov add movsb adc pushfq loop rex.WB rex.WX mov loope outsl adc mov and mov test sub rex js rex.WB fstpt cmp mov mov std sar or xchg rex.W push imul jno rex.RX rex.R test stos rex.B pop subl movslq movsb (bad) cmp fsts callq movslq jns movsb pop rex.WR xchg mov sub shll mov cmp push insl jns pop outsl (bad) mov pushfq (bad) insb jns xchg xchg movabs callq imul pop fs out mov pushq xchg pcmpeqd rex mov lahf popfq mov (bad) xor icebp (bad) rex.WXB or rex.WX out xor rex.WR lock std sub callq pushq or jrcxz enterq cwtl jge mov rex.RX rex.RB jmpq sub sbb movsb jo imul sbb clc stc cmp cmp cmc fistpll mov lea adc (bad) pop addr32 push enterq fbld sub xchg in jne xchg push or xchg lea movsl fistpll nop rex.RB adc (bad) cmp mov pop scas lods or cmpsl rex.RX movabs rex.R ja xchg or xor xchg (bad) shrb test adc pushq gs xor shrl rex.WB jb or sub or mov lods (bad) pop (bad) cmp out outsl rex.WB mov xchg rex.W (bad) (bad) loope (bad) rex.WB sub jp pushfq movslq cwtl pop rex.XB je jo and (bad) callq sub rex.WB rex.R mov add fidivrl mov rex.WB mov xchg fimul out pop rex.WXB or adc movabs cltd test movslq mul (bad) rex.WB rex.RXB movsl (bad) out rex.WB pop int3 rex.WB add rex.WB mov (bad) in rex.WB rex.WR shrl adc sub rex.WX lret callq adc test outsl enterq cmpsb rex.WRX sub insl faddl or out enterq fwait push stos xchg rex.WB mov fdivp xchg sahf push ja loopne xor fmuls es xchg mov xlat or and movsb pop mov add push lahf (bad) sbb ja rex.RB mov push push add movslq cmp or rex.WB fidivrl enterq jle pop stos rorb loope rex.WB sahf xor jo (bad) rex.WB loopne mov jns xor shl rex.WB icebp movabs mov jbe int jmpq add jge out xchg xor nop pop cmpl push hlt movsb rorb in retq adc lahf in addr32 jle xor iret pop sahf ror xor adc fldl rex.XB xor subb and adc cwtl outsl shlb and mov rex.X in rex.WB push lahf and movsb jne pop movsl push (bad) push cli enterq sub rex.WX lods sbb insl pop iret add sub movabs (bad) sbb mov jle lods leaveq jne insb jle sub mov fdivrl xchg mov repz adc sub add sub sahf (bad) test outsl jle cmc (bad) fsubrl jge xchg cmp mov in (bad) mov int repnz out test jle insb data16 leaveq lea add rcrl add fxch cmc cmovno cmp pushq sbb lods (bad) cld ja rex.WRXB out stos lock xor repnz out mov and (bad) adc sub out jo leaveq push ds mov pop faddl jns rex.RX stos rex.R sbb pop or xor cmp fisttpll nop rcrb (bad) test outsb imul fdivr cmp lock cmp (bad) enterq imul pushq lods pop sub (bad) lods push (bad) sbb sbb pop or rex.WX jg push xor movaps rex.WX rex.W mov mov es mov sub pop (bad) cmp xchg (bad) enterq enterq (bad) je and vcomisd mov (bad) (bad) jg (bad) xchg adc sbb cwtl (bad) (bad) ds imul pop jge add (bad) mov jmpq sub adc cmp rex.B fcomps mov decb rex.WX nop jo mov je or or adc lahf xchg push and (bad) loop (bad) movsb mov mov (bad) stos (bad) mov add or or clc sub fmuls pop addr32 int3 or fistp adc mov (bad) or enterq enterq adc mov or out jge sub (bad) mov push testl clc mov rex.WXB test cmp out cmpsb mov jge (bad) popfq xchg xchg jg cld out xor stos in mov xchg xlat retq insl and fiadd rex.WRX rex.WB push pushq add cli add jbe lods (bad) jge pushfq mov push rex.WRXB in sub rex.WB xor xor popfq fsubrs (bad) cmp and in int3 cmp retq sub in mov rex.RX ss cmp rex.WB cltd outsb std jmp rex.WB sbb xor movsl (bad) fimull mov jl mov xchg outsb (bad) mov (bad) pop mov data16 mov xchg mov jns add pop lret movabs pop mov rex.WB rex.WRXB pop scas add xchg or mov sbb rex.RX mov out cmp shlb push jno adc push int scas je pop and sbb rcrb rex.XB fnstenv rex.WR mov in add xchg pop (bad) xor sahf fstpl rex.WB xor (bad) addr32 jnp xor (bad) jrcxz iret and cli cmp std enterq scas imul pop mov movsl add add leaveq repz mov add movabs shr cli test leaveq fdivs vandnpd mov adc pop (bad) rex.WB js lods out (bad) cmovns xchg xor rex.W jbe int mov (bad) sub mov insl (bad) rex.WB (bad) mov rex.B add outsb stc or enterq sub rex.XB xchg push jmpq pushq imul mov repnz mov mov xor mov cmpsb or (bad) mov mov (bad) push adc xor fwait xchg (bad) jge pmaddwd ja sub fldcw push pop pushfq adc rex.B pop cs je (bad) or adc xor scas rex.B (bad) sub insl cmp adc rex.WB retq and mul (bad) cmpsl cmp shrl mov rex.WB rex.RB rex.WB mov mov iret xor mov jrcxz xchg test jle mov popfq (bad) scas sub add stc movslq pop rex.RB or mov xchg pushfq (bad) sub movabs mov fimul (bad) xor and lock rex.WB adc xchg mov mov fbstp out pushq pop movsl fstl callq jae jmp push andl rex.WB outsb rex.B add lea fnstsw push gs mov xor and rex.WX (bad) retq cmpsl int int movabs sahf push stos jne movsl and xchg rex.X loop jno orl xchg mov fwait out jle pop pop (bad) sbb movabs stc or mov nop rex.WB mov sub cld mov xor jle pushq or sub sub adc (bad) lods sub mov sub (bad) test rex.WB push (bad) xchg pop mov enterq add cltd imulb shr retq pushq mov xlat in es jmp sub loopne rex.WB (bad) retq or xlat push sub (bad) ds leaveq lret (bad) mov fwait out sbb ss out rex.RB xchg sbb scas sti test nop push rex.WRX xchg (bad) rex.WRXB sbb or sub fldcw and pop lret (bad) rex.WRX rex.WXB (bad) mull mov rex.WXB (bad) jmpq pop andb xchg and lods sub rex.WRXB rex.WXB mov (bad) mov sub rex.WB adc xor scas rex.WB retq push pushq pop and jrcxz cmp pushq addr32 add jae outsl mov (bad) roll (bad) outsl rex.WRX rex.WX rex.X out cli rex.R sub rex.WR rex.WB (bad) sbb pushq push lret lahf (bad) leaveq test rex.B xchg mov hlt rex.WB (bad) jb xchg push rex rex rex.X push pop shrl mov lahf or and sbb addb rex.X rex.WB ljmp rex.WB sub sub orl (bad) cmp lods pushq and loop jge test test ja rex.R rex.XB or rex.B test or or cmpsb cmp (bad) pushq retq and push mov (bad) movsl add push jo sbb mov test pop fsubl cmp pop rex.WB imul fwait xchg (bad) jg movsl xchg pop (bad) or rex.WB cmp or sbb pop (bad) addr32 pop rex.WB mov (bad) push jmp add rex.R rex.WXB sub jno (bad) or rex.WB mov movsl mov (bad) ss mov (bad) cmpsl (bad) rex.WB in rex.WB xor retq adc movabs push cmpsb callq je xor pop int sbb rex.RB (bad) mov add cmp jle rex.WB ss rorb or es jae rex.RB rex.WRXB mov xchg and repnz mov cmp (bad) movslq lret jae adc rolb (bad) test pop rex.WB sahf in mov xor repz fidivl (bad) rex.WRB add loope sbb mov lods imul popq scas cmp stc fisttp jb cmp loope movslq or rex.WB adc es push or xchg (bad) xchg (bad) rex.WXB jb pop neg jmp mov jns cmp loope pop (bad) hlt jp jb negl fstl rex.X movabs rex.WRX pop push mov jbe xor jb fimull add (bad) mov adc lods push rex.WRXB add callq adc or repz orl mov test ss rex.WX lea pop mull gs mov jmpq or mov fisubrl jp rcrb movabs movabs out cld mov (bad) callq orb rex.RB rex.WR (bad) lods sub ja test movb mov push rex.R loop jrcxz or sahf xchg sub outsb and xlat mov sub (bad) add (bad) jae pop sbb (bad) rex.WX (bad) test (bad) test mov mov out rex.WB sub cmp loop push (bad) mov and movsb rex.WB imul in ja mov rex.RX rex.WB ds (bad) jg insl pop cmovns xor (bad) (bad) movabs loopne push xchg sub cltd pushfq mov (bad) mov and (bad) cmc sub roll test lret add adcl lock ss jg push mov gs (bad) int or jrcxz and test divb rex.W rex.WRX mov callq rex.WR cwtl add data16 in sub rcrb jo lock cwtl orl (bad) mov cmpsb fidiv stos out add xlat (bad) adc (bad) shl rex.WX rex.WB repnz lahf movsl or loop rex.WB repz or movabs (bad) rex.WB (bad) in movabs in sub xchg test mov xchg stos ss and (bad) sub rex.WB mulb sbb push sub xchg pop andb rorl cld mov jg rex.WB sub pushq fimull mov test callq movabs and rex.WXB (bad) push rex.WRX popfq movsl rex.WX stos pop and jle rex.WB mov xlat test mov sub add loopne sub xor sbb cmp xchg (bad) (bad) addr32 movabs rorl pop mov mov mov fcomps cwtl icebp and int callq loope hlt pop iret jns and (bad) push (bad) xor fist xor cmpsl cmp mov push xor loop enterq xchg sub (bad) movabs or pop jrcxz leaveq (bad) iret jle and and adc push and push or movabs sbb rcrl callq mov out sub (bad) (bad) rex.WRXB rex.B mov (bad) xchg pop stos xchg rex.RXB retq jnp jb sub or mov (bad) callq sbb rex.RB out mov out and and lods (bad) mov insb mov popfq or cmpsb fwait mov cmpsb rex.WR rex.R jb stos or pop mov add pop sub (bad) sbb loope xor rex.XB (bad) xor mov xchg mov xchg fisubrl iret retq and adc sub repnz sub (bad) pop pushfq xor shrb jbe (bad) fld rex.WB sbb cmp (bad) mov mov movsb sbb and xchg push rex.WR (bad) mov jmpq rex.WX sbb sub rex.WB rex.RX fs movslq rex.WB xchg rex.WB loope enterq pushfq rex.W lea xchg xchg rex.R mov or xchg fisttpl rex.WB (bad) sbb (bad) int3 pushq leaveq pop int mov movl rex.WB scas sbb fmulp mov sbb push mov fsubr mov fildll push out xchg push (bad) xchg sbb imul out sbb or mov out shlb xchg and rex.RX rex.X ja pop pop scas cmp rex.WR or nop rex.RX insl ss ss cmp loop cwtl hlt pushq sub movabs sbb sub cld jo fisttpl xorl cmp rex.WRB rex.RXB (bad) xlat fcomps retq xchg sbb or xlat pop mov push push add int3 rex.WB jrcxz callq test jno (bad) mov std imul rex.WB (bad) sub pop mov cld (bad) hlt jg rex rorl xchg xor test outsb cmp jno rex.WB fsubr sub stos sbb roll (bad) lahf xchg adc cmp in mov (bad) rex.WB or cwtl push movsb callq xor add movabs (bad) movslq imul ja (bad) rex.X sub xchg cvtpi2ps fisubl (bad) push adc jbe rex.WB (bad) xchg shll (bad) or rex.RX movsb xor or rex.X mov movslq cmc fildll adc ds add rex.WRX and sbb (bad) rex.WB xor push or insb (bad) rex.RX jne movabs movabs sti out test rex.RB rex.WXB sub and (bad) scas or jmpq out movabs xor (bad) repz jnp cwtl rex.WRXB jns outsb add rex.RX mov xlat sbb int3 scas loopne test mov shr jrcxz sub jb adc (bad) mov pop xlat (bad) int3 mov cmp pop movslq or rex.WB sub jl add (bad) jb xchg nop or stc shr mov mov rex.WRXB rex.WRXB pop adc callq data16 mov sub in ror or push movabs (bad) insl out lahf rex.WRXB xchg adc std pop mull rex.WB rex.WRXB pop push and rex.WB jmp adc js mov xchg loope cld sarb movabs (bad) js add mul stc sbb push cmp out xchg pop jmp xor xchg or (bad) lods pushq mov sbb rex.XB rex.WB repz cltd rex.RB retw (bad) callq (bad) test jge sbb loop movl pushq std (bad) (bad) and or push (bad) loope rex.WB fwait pop leaveq pop movabs (bad) mov test rcrb rex.WXB (bad) fcmovbe jp mov (bad) repz cltd (bad) (bad) (bad) (bad) or rcrq rex.WX cmpsb rex.XB test rex.WRXB rex.WB fwait (bad) imul or (bad) hlt xor (bad) xchg (bad) and jmpq adc or fiaddl test fisubr scas rex.WB lock (bad) nop std insl in test je mov xor pop push callq mov decb xchg sbb and loopne xchg mov rex.B hlt jle loope insb clc jns out sbb or rex.WB add cmp loop (bad) fsubl jnp addl movslq mov js movabs cmpsl test xchg jo sbb imul in stos imul iret ja leaveq cmp loop xlat pop sbb or (bad) push pop (bad) xchg mov out test xchg rex.WX (bad) jrcxz andb outsb jl (bad) je add sahf test rorb scas xchg mov push sbb xor fs rex.W and jmpq int pop cmp add loope mov push cli roll insl xchg rex.RX (bad) stos jns or push in (bad) loope adc loope rex.WB and jle test mov (bad) xchg fisubl add sti movb mov jge rex.RXB rex.WR sub mov cs (bad) jg mov sbbl rex.WB add sub sti (bad) test and xchg cmp add cltd (bad) gs (bad) mov mov xor (bad) jmp mov (bad) pop movabs test imull rex.WB sub pop loop movabs sbb push (bad) outsb enterq cld movabs add xchg movabs or cmpsb test sub jg sbb cmp out rex.WB movsl popfq and push shr (bad) repz notl (bad) mov jbe sub movabs movsl or mov pop jo xchg rex.WB rex.WRB xchg cli and or cld (bad) stc rex.WB lock sub add movabs add sbb push xor movl sub (bad) je jmp rex.WB fwait cmp fcmovb add loop (bad) es sub leaveq lret pop jle rex (bad) movabs pushq out stos rex.WRXB jle ds pop rex.R (bad) andl (bad) (bad) jge ds or or and (bad) fmuls (bad) rex mov callq pop (bad) packssdw (bad) rex.WB mov pushq incb fbld cmp or in mov sub mov xchg repnz xchg shrb mov rex.WRXB notb sbb popfq lret xchg mov fs xlat movabs ds clc repnz rex.RXB adc and pushfq cmp mov es fwait orl jp push (bad) sub push fwait (bad) cwtl leaveq xchg lahf rex.RX lret sub outsl (bad) cmp pop push pop and mov rex.WB ficomp push rcll and adc rex.WB hlt mov add push jp xor rex.WB fldt pop adc or (bad) mov mov mov rex.WB pushq test and mov add (bad) jp xor popfq loope addr32 sub rex.B imul out imul jle cmc rorl or xor rex.WB stos fnsave in mov adc gs sahf and push loop (bad) mov test outsl add (bad) adc and rex.WB sbb xchg enterq (bad) cli mov fcomps push movabs fcomi stos pushfq mov (bad) rex.WR mov rex.X lahf add adc mov stos movabs jno sub rex.WB (bad) stos test cmpsb loope nop fcomp callq (bad) add movsl movslq pop outsl (bad) and mov rex.WB xor rex.WRB rex.WB cmp mov mov (bad) xor sbb sub (bad) xchg ffreep sbb add rex.WB (bad) xor retq cltd lods loop mov pavgb mov mov sub and test jne or pushq rex.XB pop xchg movsb (bad) jbe mov (bad) xor jb in xchg cltd xchg and push rex.WRB pop (bad) cmp jno,pt movabs in xlat push xbeginq (bad) add adc subl movslq fwait rex.WRX cmp in sbb sbb (bad) nop or sbb xchg lret stc cs cmp push mov or cld pop xlat (bad) sbb pop xor rex.WB ss clc (bad) sub roll cmp and (bad) rex.WB xchg fisttp mov (bad) or loop xchg sub xchg jae or mov rorl jge (bad) test (bad) push or (bad) rex.B std sub imul (bad) fucom rex.WRB adc push rex.WB pop mov rex.WB in subl rex.WB fwait add rex.WB adc in mov adc adc sbb rex.WB and fisubrl sbb xchg or (bad) adc ficomp rex.RX rex.RXB (bad) rex.WB test movsl rcr data16 loopne imul rcr outsb (bad) sub cmp (bad) int3 jb rex.WB mov (bad) xchg or jp xchg je sbb rex.WB pushq push sbb (bad) jne out pop push xchg lods iret or jb cwtl xchg cmp cmc cmp jge enterq (bad) or push fidivrl mov (bad) add rex.RB outsl xor jrcxz pop or movabs rex.RXB (bad) xor cmp rol movabs cmp and rex.WXB nop adc mov rex.W jb rex.WB cmpsl jbe out sub lock (bad) or scas rex.RB rex.XB lods pop xor pushfq (bad) addr32 rex.RX xchg adc push sahf pop cmp pushq jmpq and (bad) js rex.RXB jl addr32 or fstl rex.WB jle push jp rex.WB xchg ss jae rex.WRX rex.WB gs xchg (bad) rex.WB rex.XB push nop in sbb movabs pop (bad) js rex.XB js or wbinvd mov sbb (bad) xchg rex.RXB mov adc pop (bad) cmp cwtl out jmpq lret std mov jnp (bad) push rex.XB mov mov fdivl leaveq stos imul push xchg pop (bad) pushfq mov movslq xchg mov addr32 pop mov jnp (bad) sahf movabs divb sub sbb out jge adc xor (bad) push add pop ds repz movsl lock test enterq mov (bad) add js jmp clc stc rex.WB rex.X retq push xchg pushq repnz and stc pop or in rex.WRX jne rex.WB (bad) rex.WX clc insb jg out movsl push fnstsw xor retq sub test loope adc addr32 pop sbb push rex.RX addr32 (bad) push cli ljmp callq cmp mov fldenv lret (bad) cltd out pop mov xchg lret movabs repz push rex.WB test mov (bad) fisttp (bad) mov adc cmp mov mov jg mov push (bad) mov lock sbb or gs jne xor (bad) push add pushq js push mov xor jbe sub out sahf imul rex.WB mov movabs cmpl mov rex.WX loopne icebp mov loope insb rex.WB adc test push rex.WB rex.W (bad) ja pop mov push rex.WB incb hlt jno retq (bad) fcmovnbe iret sub clc push sub addl fcomps lret cmp outsb cmp (bad) pushq sub rex.WXB rex.RB rex.WX shll rex.WR xor lahf sbb ss insb xor rex.WB fidivrl push add add pushq xchg jrcxz cmovns out callq movabs pop mov mov push xchg scas mov repz xchg (bad) (bad) popfq push push adc or xor callq sar jns movabs push pop mov (bad) mov movsl push and xor (bad) sub jp rex.WB in rex.WRX test rex.RX (bad) mov rex.WB mov in or mov and sub and rex.RB or rex.WB rex.RX sbb rex.WB hlt addr32 std loopne mov in jmp shlb mov loop or (bad) rex out callq in rcrl rex.W push mov cmc (bad) jae mov and (bad) jne cmp movabs (bad) cmp (bad) or (bad) jrcxz fs cmp movabs je (bad) sub rex.WB fcmovnbe (bad) (bad) (bad) fildll rex.XB rex.WRB and mov out (bad) rex.WB stos cmp (bad) hlt rex.WR rex.WB lods int mov add jns in ss rex.WB mov and adc mov and xchg or rex.WR mov mov lods rex.WB add pop push fistpll rex.WRB ja cmp xchg rex.WB loopne or rex.WB sbb rex.XB pop fs int xchg xchg rex.WB in fisubl cs loope (bad) mov lahf jl jg jo icebp jmp or mov repnz cwtl sbb test jrcxz cmp stos sbb shll rex.WB fwait and sbb iret mov sti pop jne rex.WB (bad) cmc (bad) mov mov (bad) mov pushq adc cmp pop popq addr32 lea imul (bad) sbb ror mov jmp push mov rex.WR pop movsl movslq (bad) xlat rex.RX rex.WB (bad) sbb hlt rex.WB rex.X or nop push lret (bad) stos sub out sahf mov jge rex.WB rex.RXB out (bad) imul (bad) fcompp ss rex.XB mov jns (bad) (bad) (bad) pop push movabs mov out (bad) cmp stc xchg icebp insb andb test addl jrcxz mov rex.WX rex.WB jno subl xchg add testl push (bad) out rex.XB (bad) ficomp jge ss xor jl (bad) leaveq rol cmp pushfq (bad) callq rex.WR (bad) rex.WXB xchg lahf pop mov or dec and mov pop rex.WRB lahf sub add (bad) mov addr32 enterq jne lahf loop and rex.WB movsb or push lods cmpsl xor mov rex.WB or xor stos mov test adc out (bad) or rex.WB sbb adc add movabs sub jmpq adc sbb rex.WRXB push mov rex.WX and lods xor fstl out (bad) fisttp sub (bad) or or xor imul rex.XB (bad) insb iret out xchg callq in gs rex.RX pop mov fsubl jmpq cmp paddsw std rex.WRXB mov xor test jbe fs fsts frstor movabs mov ds push sub out add rex.B out jbe out test rex.WB jb shrb std jmpq nop pop (bad) test pop fstpt or std leaveq pushq rex.WXB pop (bad) xor psubsb (bad) imul rex.WB (bad) ds outsb and (bad) rex.RB (bad) (bad) scas enterq rex.WXB sbb callq lret movsl or mov int3 loope divl (bad) cmpsb jl mov mov lret and out imul adc in out (bad) (bad) cmpsb callq push rex.WB lods or sub (bad) rex.WRB movsl mov pushq rex.WB add sub push es movslq (bad) cmp fnop xor (bad) sub test (bad) (bad) xor sub std jmp jge cmp mov mov sub (bad) pushq (bad) pop jmp ja test cmp (bad) jle loopne (bad) rorl pop add push add rex.RX mov mov popfq in add or rex.WX rex.X push rex.RXB add shlb pop callq push out (bad) sbb jo sti or movb loopne test (bad) stos divl (bad) leaveq rex.WRB push push and or rex.R adc cld xor adc rex rex.WB xchg (bad) nop mov rex.WRXB addr32 xchg jns xchg notl jle mov xchg mov push rex.WX gs sub imul adcb data16 or rex.WR (bad) sub movabs sub rex.WX sub or (bad) sub enterq ficomp sub or mov sbb mov xchg and movsb cmc mov scas (bad) ffreep and iret (bad) lret rex.RXB jmpq jp (bad) clc rolb and idivl push sub fwait int xchg (bad) movabs fwait stos nop pop sbb mov xor fsubp nop pop (bad) repz test sti cmp lods stos clc sub and in rex.WXB fs imul test or imul icebp mov rex.R adc cmpsl (bad) add cmp mov rex.WB sub rex.WX sahf rex.WB imul decl or cmp enterq std rex.X rex.WB rex.RB cmc and cld mov xchg add cmp rex pushq add enterq sar test (bad) repz rex.WB sub cmc fwait xchg mov js outsb mov jl adc lods mov (bad) shr (bad) mov out rex.WR loop callq lea stos xchg in push rex.WRXB or notl out test sbb jno sti add loopne scas retq std rex.WB rex.WX (bad) pop out mov push repnz rex.B sub pop test xor out rex.WXB rex.WB pushq sbb xchg rex.WRB sub and adc stc mov movabs xor (bad) mov cmp jge rex.WB mov push clc (bad) and fild out sub in mov xchg rex.WB rex.RB scas retq and loopne add icebp jge and rcr pushq fistpl cmc xor and popfq xchg push mov and add test push rcr xchg movabs or adc ss or retq lea mov rex.WB mov gs cli mov movabs lock jb ja test insl xorl rex.RX (bad) (bad) (bad) rex.WB incl out stos test jnp enterw or insl lods xlat rex.WRX push enterq (bad) mov or imul and movabs popfq (bad) (bad) push mov mov pushq (bad) (bad) mov add rex.WRX rex.RX sbb cmc mov cld movsb rex.W int3 leaveq movslq retq (bad) stc sub (bad) jle jmpq sub cmp movabs repnz xlat push (bad) cmp mov test pop fstps rex.WB bswap jae mov sti mov rex.WB and int3 cmp (bad) cli test sbbl (bad) es xchg (bad) mov movabs xor push in sub or in decl cltd out sub adc pop (bad) and enterq mov movabs cmp mov rex.XB adc adc enterq paddusb (bad) rex.RXB (bad) xlat sbb xchg rex.WRXB sub addr32 popfq (bad) mov out mov paddusb div add test movabs xchg rex.WB clc (bad) test pushq loope mov shrb out popfq rex.WRXB add (bad) adcl cmpsl movabs push mov test rex.RX and jae pushfq jnp rcrb pop adc iret pop cltd out nop mov js lret xor xchg subl ja rex.W fsubr rex.WRX sbb xchg xor movslq out bts cs sub adc and rex.WX cmp pop (bad) pushfq pushq stos addl push lods enterq push rex.RB leaveq mov rex.RX sub rex.WRXB pop xchg fmul subl imul mov rex.WRXB mov std std mov sbb movsl xorl and or add pop (bad) (bad) fsubs (bad) push xor (bad) lret int3 cmpsl and fstp (bad) (bad) cltd mov sti sub rex.X mov movabs callq cmpsl (bad) pushq rex xchg rex.RXB rex.WX (bad) jnp xchg cmp sub rex.W sbb mov nop test in out or push or stos jge in or jno push rex.WB sub (bad) movsb sahf test or cmpsl notl pop sub mov pushq hlt jl fs mov or push fs (bad) pop test imul out icebp or iret adc jo cli test sbb xor sub in (bad) imul xor rex.RB clc mov imul stos jp mov sub int mov rex.WRXB mov (bad) (bad) imul rex.X stc fsub nop repz clc rex.RB push (bad) rex.X fs (bad) jge leaveq addr32 mov rex.WB rorb (bad) cmp or rex.WB (bad) mov jnp lods lret mov jmp gs (bad) rex.RB rex.WXB mov push stos lahf stos cmp (bad) rex.WB out or xchg push fisttpll enterq push (bad) push mov test ja or mov mov int data16 mov outsl add sti test cmp outsb adc (bad) decb pushfq (bad) mov xchg jg or pop mov loope hlt out callq rex.WB and fcmovnu add pop jle xchg stos rex.WB bnd mov lret fs adc sar xor mov push mov mov pushq lock jne cmpsb iret lods leaveq pushq xor cmp push xchg nop mov rex.WB rex.WXB in enterq sahf rcrb pop addr32 or callq lock rex.WB fidivrl (bad) imul outsb rex.WB insl hlt cltd xchg (bad) movslq (bad) sbb (bad) mov xchg sahf andb rex.R je (bad) pop rex.WRX jrcxz pop fs (bad) test andl movabs mov push cltd and cmp or movabs lods xchg lock (bad) movabs fldcw nop xor xchg jmp adc rex.WB movabs nop int3 (bad) pushq mov (bad) rex.B jp xchg retq stc pop pushfq sub rex.W cli sub movsl and xchg lret xor jge out xor adc add ds xchg mov push (bad) fsubs je mov lods xchg and rex.WX repz rex.WB sbb or callq loop push enterq movl cwtl xchg xor leaveq jle jbe sbb retq cmpsl movabs pop adc rcr mov mov je cld jo (bad) xor sub cmp jbe mov rex.WB popfq jge rex.WX and add and rex.WR icebp (bad) mov sub rex.WX xchg repz movabs rcll (bad) icebp jrcxz adc callq jl and sar movslq xchg repz rex.RXB (bad) rex.WRB cs hlt shlb (bad) roll scas lods test (bad) enterq iret jg (bad) movslq cmpsb cmp fmul icebp mov rex.WB rex.WRXB or or push movsl negq int3 jns add (bad) rex.WRB divb xchg fist jae mov movslq adc rex.WRX cmp imul mov or jb pushq cmp rex xchg xchg clc pushq jp pushq mov push mov adc pushq jbe and xchg divl adc mov push je sub rex.B (bad) (bad) jp je mov movabs (bad) rex.XB add add jrcxz lret (bad) sbb (bad) push xchg imul (bad) int mov test nop stos pop outsl push cmp mov pop movslq gs rex.B jae add rex.WB rex.RXB (bad) xor jg in outsl push rolb lods push or sbb pushfq pop (bad) xchg lret xchg int mov mov cwtl jo in xor mov lods rex.WB imul rex.WB enterq movabs negl adc rex.WRB xor pop jrcxz sbbb (bad) mov or test rex.WB rex.RB mov adc xchg jmpq mov and mov addr32 (bad) out retq (bad) callq sbbl cmp add (bad) fnsave rex.WB (bad) addl cmp lock cmc rex.WB rex.WRXB mov addr32 cmpsl gs insb sbb clc pop or mov mov enterq rex.RXB pop jbe lahf movabs xlat clc outsb pop xor rex.WRB rex or out (bad) mov cmp jp,pt rex.WB cltd (bad) xchg cmpsb jmp (bad) pop pushq mov rex.X rex.WB rex.WRX mov test fldl add add adc movsl or or (bad) in mov adc sbb mov rex cmp sub cli xchg pop or mov (bad) sub xchg push (bad) lcall jae lret pop (bad) pop gs imul es rex.WR or sbb pushq xchg mov stos sub cmp mov jo (bad) fstpt mov mov rex.RB (bad) std and pop xchg mov fdiv push xchg push push fnop xchg rex.WB rex.WXB rex.WRB cmp sbb mov jp rcrb add fwait rex.WRB xor movsb loop insl cli push push or cmp rex.R rex.WB rex.WRB rex addr32 je jo xchg pop (bad) sar in push jmpq orl or cmp rex.WB (bad) jle mul scas loope nop jge xchg jno (bad) callq mov jrcxz mov rex.WB sbb cmp mov (bad) ss int3 (bad) stos adc rex.WB fdivrl xchg in jmpq ds mull jge rex.WB fiadd pushq movsl rex.WB (bad) pop rex.X retq frstor (bad) pop cmp lea or rex.RB (bad) adc (bad) scas callq jmpq rex.R movabs idiv xor mov sbb push andl addr32 rex.WB (bad) out jne mov rex.WXB pushq (bad) scas fcomps mov mov outsl xchg out imul rex.WB lret data16 xor fxch insl and scas rex.WB mov cmp (bad) jo push jno push push movabs cs lahf rex.WXB fidivr (bad) push cmp cmp (bad) jg jrcxz xor push rex.WB (bad) addr32 retq adc cmp cmpsb (bad) (bad) mov pushq rex.WRXB shll in icebp (bad) xchg push sahf sbb test (bad) adc js sub lock insb adc mov movabs rcll add rex.W or outsl xor mov js or scas lret sub (bad) fcoms scas push cmpsb sbb add (bad) cmpsb movabs mov stos sti rex.XB and repz push scas rex.WB rorb sub clc test rex.WR in jb cmp push rex.WRB outsl rex.WB xchg sub sub movl mov (bad) add jns pop mov pop je mov loop mov lahf pop popfq leaveq rex.WB pop pop or clc out rex.RX imul or xchg movabs mov fs or insb decl movslq cltd movabs stos stc jnp cmp rex.WRX (bad) insl add test pop adc (bad) pop push loope movslq rex.WRX cs mov mov stos mov int3 movabs fadds callq int rex.WRXB rex.RB and mov and (bad) (bad) rex.WB cmpsl sub (bad) pop (bad) cld (bad) addr32 int3 lret in add push jge jmpq gs rep lret jg shrb sar pop ror ficoml enterq (bad) mov and jne adc stc in loop mov iret movabs (bad) vpcmpeqw mov (bad) rex (bad) outsb mov rex.WB enterq add outsl rex.WB imul rex.WXB sbb xchg nop push (bad) (bad) hlt cmpsl pop pop and scas mov jmp pop loopne mov or xchg pop push pop out cmp rex.WB cmpsb jl jne popfq lea mov jns subl adc ror rex.WXB sub jge mov clc repnz rex.WRB frstor rex.W pushq je rex.W rex.WX rex.W movabs rex.XB out movabs (bad) in mov pushq cmp fsubs sbbl rex.WX sbb pushq add jne (bad) mov repz push pop lock fstps enterq adcl mul rex.WRB test lret xchg (bad) rex.WRB and push and sub in pop loop mov xchg push sub ja cmpsl adc xchg pushq adc icebp (bad) and mov stos (bad) ja jo pushq rex.X rex.WRXB jnp mov rex.RB int3 loopne sbbb es or add ficoml callq stos xor data16 xor (bad) xor rex.WB xchg (bad) addr32 add (bad) mov test rex.WRB in (bad) jmp mov add (bad) or loopne adc shrl sbb (bad) int iret rex.RB xchg nop or cwtl (bad) loop push rex.WXB jb fisubl jmp and jmp (bad) rorl sub loop imul (bad) lcall lret and push xor retq cld push pop xor xchg cli (bad) mov xchg mov rex.WB or lret callq loope repz jnp fmuls sbb rex.RX and sub rex.X int3 add (bad) iret push jl xchg mov movsb fisttpll jl rex.WRXB xchg add mov fimull (bad) retq rex.XB loope repnz rex.WB mov enterq lods mov push sbb add (bad) xlat rol mov (bad) idiv out cltd (bad) callq addr32 ss stos and sub sub out fcompl push mov or addr32 (bad) cli movsb pop loopne cmp xor (bad) movabs (bad) cmpsl mov sbb hlt vmulsd mov int3 orq and xchg rex.RXB lahf (bad) rex.WB pushq (bad) callq jge sub movsb adcl and (bad) (bad) xchg imulb cli or and adc mov push out add jmp mov je scas fs xchg xor mov sbb pushq lret in rex.WRXB leaveq (bad) adc repnz movabs sbb xchg cmpsb (bad) test rex.WB repz out or sub add xor clc rex.WRXB and retq cmp movabs lret (bad) add and retq fwait mov pop mov rex.WX (bad) callq mov ja pushq mov mov push test (bad) jo fdivrl sub rex.WR rex.R sbb push cmp movabs rex.W fs test (bad) sbb cli xor (bad) out lea (bad) pop testl or fiaddl je movsl adc push movsb callq (bad) loopne pop xor rex movabs repnz hlt (bad) leaveq or pop xchg pop pop (bad) mov pop (bad) or rex (bad) xchg stc lret xor icebp mov push rex.WR xor loop int cmc mov movabs xor push pop movsl jrcxz (bad) mov xchg adc rex.WB pop pop rclb (bad) (bad) (bad) pop (bad) icebp or push fistpl retq push push lret jno callq shll mov xor pop xor cmp xchg rex.WB rex.WRB rex.RXB add mov (bad) jle lahf rex.WB sbb (bad) std pop (bad) pop shrl (bad) rex.WB fdivrs fldt rex.WB mov mov adc rex.RX sub xchg mov rex.WB and rex.WRX js lods push insl (bad) (bad) mov retq rex.WB data16 fldenv insb repnz mov rex.WX sbb push jnp push jmp cwtl rex.WB repz xchg loop mov fwait lods cmpb or loope and cmp cwtl data16 or mov add fnstcw jmpq rex.RB xchg rolb in mov packuswb adc mov stos movslq sub mov rex.WRX shlb mov out adc add pop adc push pushfq push pop push lret out ja rex.WB jg pushq (bad) xchg rex.WB mov lods sbb mov and rex.WR lock xchg movslq sub retq movabs jrcxz cli jp test cmc in rex.WB rex.RXB push std fs movabs xor outsb or or rex.WB rex.RX mov rex.W rex.X loopne callq loop sbb test xchg lods rex.WB adc mov pop rex.WX jg rex.WRXB rex.WRXB sub fnstsw (bad) iret rex.WB rex.WXB int3 xor (bad) (bad) orl movabs push (bad) rex.W rex.WB mov push out xor jae mov (bad) mov sub scas insl fbstp fs iret cs callq sub in push push cmp push test data16 (bad) mov lret (bad) (bad) mull fisub in xor jae rex.RX rex.RXB jl sub insb cwtl scas cli orl rex.WX cltd pinsrw and (bad) (bad) mov or lahf (bad) repz (bad) fstps mov out (bad) jo mov adc sub clc cwtl pop or jnp add ds and addr32 out minps faddl clc test cmc jmpq rex.WR mov out (bad) (bad) (bad) rcrb (bad) stc xchg out adc hlt adc pop rex sarb rex.WRB shll addr32 fisttp or xchg rex.RXB lock xchg movslq xchg push jmp pop rex.B (bad) and fs es test mov push add jmp sbb xor rex.B xlat mov (bad) mov pop sbb pop mov xchg lret add addr32 (bad) (bad) (bad) xor or and int xchg xchg (bad) mov pop sub ja pop (bad) or pushq rex.RX pop mov cmc jbe mov pop in pop xchg xchg jbe add repz ja clc (bad) rex.XB retq sbb decl cmpsb (bad) (bad) sub add mov and push out (bad) (bad) jrcxz rcrb xchg (bad) stc push loop lahf xchg movabs (bad) xor mov xchg sbb sub lock jae sbb xlat icebp (bad) repz ja stos cmp jmpq test push push rex.WB (bad) imul xchg or (bad) jo outsb mov sub push stos (bad) rex.WX rex.WR pop (bad) add test (bad) icebp and out cmpsl mov push cwtl jmpq movabs pushfq (bad) movabs test or rex.R cmpsb movsl push mov movb sub cmc pushq jbe mov leaveq mov xor addr32 jle lods shll rex.B cs popfq test subb (bad) ror xchg or cmp push jmpq add mov jrcxz mov xchg pop and ja (bad) (bad) (bad) in adc int jne sbb push adcl (bad) (bad) mov pop lret or notl fs test out sub mov imul jno pop lret push cli shlw rex.WRX movsb pop (bad) push jne sbb roll rex.WR and movabs (bad) scas add rex.R mov add jmp (bad) imul loope mov rex.WRXB and fiadd out movsb push neg ds pop movabs sub cs enterq jae mov or mov rex.RX (bad) mov lret (bad) icebp insb (bad) addr32 movsl vfmsub213pd jg mov rex.R lea rclb test adcq add rolq rex pushq (bad) popfq (bad) iret rex.WB rex.WR rex.WB (bad) addr32 imulb cmpsl bnd mov sbb cmpsb and cmp cli (bad) (bad) rolb sbb stos out add rex.WB data16 loop jge sub enterq mov push scas (bad) and jmpq lahf push rex.WX mov sub out cmp movslq (bad) sbb mov imul ljmp (bad) or lea xchg add enterq rcrl and rex.XB rex.WRXB jrcxz or rex.WB xchg retq test sub movslq adc push enterq mov cmp pop fsubr push movabs rex.W repnz cmpsb lock rex.XB jne fisubrl (bad) callq or mov mov jmpq std rex.XB scas (bad) adc subl lahf mov xchg cmpb std (bad) (bad) sbb sarl sti pop rex.B (bad) jno sub loop orl lods (bad) cmp ds rex.RB mov out sub pop cli sbb rex.W rex.RX xor adc enterq (bad) sub popfq and (bad) xchg xchg fdivrl cmp (bad) cmp imul (bad) repz add pop pushfq addr32 enterq movabs leaveq nop jns mov push add out and fisubrl rex.RX and or repnz negb rex.XB pushq or add mov movsb mov (bad) push cmp lods cmpsl sub (bad) xchg pushq sbb ss adc test stos fcoms rex.WX rolb (bad) and jg fstpl es sub or pushq or cmp push jb movsl jmp loop lea (bad) adc or leaveq lods add test rorl rex.RX xor mov movsl sub jp mov add movabs adc lret sub push je jle pop xorl mov jbe ss (bad) sub cs sbb and (bad) (bad) jno rex.WX rex.R rex.WXB mov mov outsb mov add jb xor cmp addr32 test xor pop (bad) (bad) and push rex.RX loope jge mov or xchg scas cwtl mov movslq sti (bad) pop rex.RX insl repnz jge (bad) out (bad) pop fwait (bad) mov pop lret cmpsl pushfq xor js push (bad) fidivrl imul scas pop test fnstcw mov push (bad) sub je repnz rex.RB outsl pop or in mov cmp lock rex.WXB cmpsb jp rex.WRX mov xchg sahf mov adc insl jae (bad) and jp xor (bad) (bad) stos mov (bad) jo or mov rex.RXB rex.B out jge mov pushq xchg lock cmpsl add insl mov mov rex.W rex.WB adc loope pop xor (bad) sub mov decb pushfq lret mov mov or sbb cwtl jmp rex.RXB rex.WB data16 ficom (bad) sub cmp out jo xor test stos jmpq rex.WB sbb rex.RXB and sub jmpq lods sub lods and xor rex.RB gs sbb push sbb nop cmp (bad) jo sti lahf rorb pop xchg add add jno xchg rex.WRB or mov movsl sbb xlat pop mov xchg js sbb mov add or gs (bad) ss enterq rex.WB pop jno retq rex.WB int3 stos pop loope jae rex.WB incl xchg push test scas (bad) imul rex.WXB in rex.RX xor mov out mov (bad) outsl (bad) jp (bad) xor rex.WRX int3 xchg rex.RX shrb push stos (bad) test (bad) jne clc cmp (bad) loope test rex.WRXB xchg mov stos rex.XB sbb rcrl ss pop push pop cwtl sub in movabs movabs pop jmp push test repnz movabs rorb popfq and mov cltd in insl (bad) fadd jle push cmp xor sub lret gs (bad) xor adc mov add imul fwait enterq (bad) rex.WB repz test movslq sub loop test rcrb (bad) sub xor push enterq fnstcw adc pop loop cmp xor add rex.WRB rex.WB shll stos mov sbb rex.WR rex.WRB sbb decq rex.XB (bad) adc push js gs xchg (bad) lock jnp add sub xchg in (bad) in rex.WB add (bad) rorl cmp sbb mov cmp (bad) rex.WB sub add rex.WB scas push shr movabs mov rex.WRX retq xchg mov (bad) insb pop rex.WB ss repz (bad) imul jb pop push rex.RX (bad) xchg movabs movabs adc and rex.WX movabs outsb clc rex.RB movabs sub sub (bad) and icebp mov add rex.WB pop adc rex.WB rex.WRXB idivl jnp sbb rex.R or sub cwtl mov lock add insb rex.WRX sub jb and mov cmovns fstpl or sbb (bad) int3 pop (bad) in and (bad) (bad) pop and sahf and mov jo imul movabs rex.XB and xor push jb rex.WB (bad) out sbb callq xchg loop movabs push std adc cmpl lret shlb mov data16 (bad) fimul movsl rex.WB cmp sub je mov jo (bad) xor cmp sub rex.RX enterq pop adc push fstpl test jp and push rclb movabs jb add jbe rex.W fcompl enterq pop sbb (bad) jge incl jb adc retq sbb rex.RB xor rex.RXB rex.WR cmpsl test mov leaveq (bad) mov mov mov (bad) (bad) xor xchg hlt mov jae shll push push rol mov scas data16 adc adc fisttp fimull jmpq add (bad) rex.RB repnz imul lock jo (bad) vcmpps rex.WB rex.RXB mov rex.WB rex sahf or rex.RX rex.WB xchg movabs pop out xchg fs (bad) fidivr pushfq pop rex.WX rex.RX and rex.WXB out (bad) shrb cmp add insl fistpl out jnp jns fnsave test movabs pop rex.WB out pushq (bad) jae test or xchg test mov sub rex.X fmuls addl sbb stos rex.WB mov leaveq mov div rex.X push rex.WB rex.WX rex.WB rex.WRX (bad) callq (bad) push push retq xchg jrcxz lods not in cmp mov cmp stos (bad) test sub xlat (bad) pushq stos rex.RB rex.XB (bad) xor and mov rex.WB or mov outsb or icebp cmp fbstp pushq jb rex.WB scas ds mov int3 cmp movabs push scas xchg (bad) jno ficomp gs rex.B sbb add adc pop (bad) mov sub loop fidivr addr32 mov cmp (bad) clc mov lods sub sbb jrcxz lret push add cmp (bad) (bad) rex.WB pushq and (bad) xchg adc sbb jo (bad) fsqrt rex.WB and cmp xchg sbb pop (bad) pop (bad) retq out sub cli cmpsb lods clc (bad) mov rex.WR mov rex.WB mov xchg rex.WXB sub jle cmp fcmovne fsubrs jne or push (bad) ss sbb (bad) mov rex.WRXB sbb mov pop sbb lods rex.WB jge rex.WRX retq pop xorl lret mov sbb fadds mov sub sbb (bad) movabs ficomp (bad) rex.X xchg stc sub jb pop (bad) (bad) sbb adc int rex.WB nop rex.WR lret mov sbb movabs rex.WRX lods es sbb enterq rex.WB and cmp jbe (bad) retq int3 sub out (bad) and or xor movsb enterq or or orl fcompl rex.WB xchg ja data16 fadds fisttpl fcmove mov rex.WB enterq cld mov rex.WB rex.B rex sub lret adc jbe rol pop movabs movabs adc shll (bad) retq sbb scas jp (bad) and leaveq rex.WB and xchg jnp (bad) sub (bad) pop mov cltd jp sbb sbb jo,pt mov jnp out jmp movabs popfq push push adc add push mov rex.RX (bad) pushq push rex.WB lock sub add pushq add fstps or ds mov jne push test jrcxz (bad) cwtl sub rex.WB mov and (bad) lock in push icebp sbb sub mov retq push (bad) adc lahf adc sbb cmp movslq ss rex.B data16 sub retq addr32 rex.WB (bad) xor std test cltd mov (bad) cmp mov cmc insl (bad) rex.WRXB data16 jmp mull and and sbb mov adc movabs scas jnp out or cmp mov jrcxz insl shll (bad) rex mov rex.WXB jae rex.WB pop push repz fisubr (bad) fsubrl jge mov mov cmc xor in rex.WB rex.RB rex.WB lock xchg add lret sbb ss xchg (bad) push subl xchg add rex.WB (bad) je mov repnz jge rex.WB adc jp mov sbb ficompl add mov sub loope jp adc (bad) xor cs rex.WB rex.WRXB jb rex.WX sub rex.W sbb rex.WRX callq sarb sub pop insl (bad) movabs sub rex.WB rorb sub cli and cld xlat int mov or sub sbb jp rex.WX addr32 (bad) mov mov add clc or mov xchg imul xchg rex.WRXB mov cli sti movabs rex.WRB in je rex.RX (bad) add out retq leaveq mov xchg xchg jns cmp sub sub ss pop ja rex.WB test mov pushq jae pop pop jb outsl (bad) push addl cltd rex.WB (bad) rex.WX sub icebp out pushq xchg rex.XB es mov xor movsb rex.WB movsl in rex.WB test hlt (bad) (bad) nop fimull push adc (bad) cmp (bad) jmp sub data16 (bad) cmp sub minps stc xchg cli sub gs rex.WRB rex.WB adc mov rex.WB jl (bad) jns loopne adc rex.WB lret sub xor or rex.WXB rex.WR rex.WRX fwait rex.RX or adcl adc (bad) add rex.WXB ds (bad) mov test test sbb enterq sbb rex.WB push jb jmpq xchg test (bad) push loope cltd rex.WB fadds xchg (bad) (bad) rex mov mov mov scas mov out movabs mov rex.RX cwtl pushq je (bad) loope repz pop rex.RXB rex.WRX rorl test push xchg sub loopne jnp adc (bad) push jno jb jmpq xchg mov push xchg cmp rex.WB or (bad) jmpq sub or rex.WB jno je fist (bad) (bad) rclb jae mov adc rex.WB or (bad) xchg jp mov imul rex.WRB rex.WXB (bad) leaveq (bad) (bad) (bad) mov movabs es add pop rex.WXB mov jne (bad) stos jrcxz pop rorb movsb or pop fwait push loop (bad) xor push loope icebp rex.RXB gs cwtl fwait xor xor (bad) sbb (bad) mov push (bad) mov rex.WB iret rex.XB or or xor xchg (bad) mov cmpsb and idivb xchg or enterq rcl mov out xchg sub jmpq xor (bad) jne mov adc fs int and cltd stos fildll cmp (bad) ficoml mov out mov sub (bad) lahf (bad) or callq icebp in and imul loop (bad) sub rex.WB add fldenv loopne (bad) (bad) cmp imulb adcl out imull lods je leaveq mov fs ja (bad) test (bad) out jl,pn outsl rex.W leaveq test fstpl xchg and add fcoml pushq lods shl mov pop xor jbe fidivl rex.XB add (bad) xor popfq mov xchg pop xor (bad) (bad) pop xor pushq and cmp popfq jbe xchg cld pop fadds add rex.WB xor rex.WB add adc jns sub pop sti jl jo push push push rex.WB data16 mov sub leaveq sub movabs (bad) push sbb or and rex.WB rex.WRXB (bad) xchg jmp rex.WB (bad) jno (bad) rex.RB rex.WB add test pushq or cwtl lods cmp int3 rex.WXB mov (bad) jo (bad) lock shl (bad) mov pop int3 mov jg or (bad) sbb mul mov push xor and sbb rex.RXB stos mov xchg push clc adc (bad) (bad) and jle rex gs pop (bad) rex.RB push and rex.RXB jns push rex.WXB mov callq pushq push cmp in rex.WB lock ljmp pop and jae movsb mov popfq iret pushq mov rex.WRB (bad) (bad) mov insl jns rex.WB cld xor jnp rorb mov int3 test scas out and rex.WB push imul decl test jne sbb stos lret lea mov insb or sub jbe movabs sbb xorl pushq rex.B ss jns jae out rex.WXB mov rex.WB movabs (bad) fidivr pop adc andl pushfq push retq sbb and xor ficoml jle or (bad) (bad) jb add idivb (bad) rex.WRB rex.XB pop cmpsl jbe rex.W movabs (bad) je push lods add pushfq cmp sub rex.WR lahf cli movabs xchg cmp xor pop test in imul and rex movabs (bad) rcl and stos push loop int mov callq (bad) rex.WB pushq rorb cwtl cltd push push fild rex.WXB in xor movabs cmp add xchg sbb cmp (bad) adc (bad) loope jl and sub jae pmaxub hlt callq mov push fptan xchg rex.XB cmp (bad) loop addr32 rex.WRB (bad) sub rex.WB stos callq rex.WB retq adc setnp (bad) je rex.R cmp movslq cli pop movsl mov (bad) add mov (bad) sub movabs sub cmpq retq fstpt out and rex.RB rorl jmp lock rex.X in lods (bad) push rolb rex.B imul adc out lret cmp scas pop retq (bad) lods (bad) out pop (bad) shr rex.WB mov rex.RX push sub movabs pop sbb (bad) rex.WB pop addl scas mov fisttpl movabs adc pushq rex.WB push (bad) (bad) ds cmp add mov xchg mov cs test xor or movabs or loop test mov leaveq sub cwtl rex.RX pop rex.WB sar jbe xchg movsb rex.WB rorb sub (bad) cli mov xchg (bad) push xor (bad) rex.WXB movabs push ss rex.WB xchg (bad) hlt xor in movabs rex.X gs out callq icebp mov and pop adc popfq test xchg cmp pop fs popfq (bad) adc (bad) rex.WXB cmp loope rex.WB and or jl movabs loop enterq cmp int3 add out je in jge ds rex.WB cmp or rex.WB cmpsb sbb mov (bad) jge lahf (bad) sub (bad) out push cmp adc xor faddl lods pop movabs xchg and lods hlt rex.RX rex.WB and sti std in mov int3 pushq xchg push pushq sub jmp mov std rex.RB sub lods xchg stos rex.WRXB or jp adc cmpsl out lock rex.WRB iret rex.WB rex.WXB fiaddl pop push lods decb rex.WX xchg (bad) lods jno rex.WB xor in rex.WB rex.WRB cwtl pop iret sub je outsl imul xchg push rex.RXB rex.RX in lods mov cmp rex.WB xor stc rex.WB out clc xor out rex.WB gs add (bad) insb rex.RXB movabs and adc or fwait (bad) lret (bad) int pushq xchg lods jnp clc pushq enterq pop mov sbb movslq cmpsb or sbb jne test sbb js stc lods push jmp cs stos cmp mov notb rex.X mov fstl rex.WB or (bad) rex.RXB xchg sbb fidivrl sbb mov out cwtl scas test data16 (bad) mov xchg jmp rex.RB add callq or loopne xchg enterq lret sahf adc outsb cmp jmp lret and rex.WXB sub rex.WX repz rex.WB rex.B or pop (bad) orb add sub or xor mov mov adc mov stos (bad) (bad) cmp test mov gs and pop movabs loopne pushq lret retq push enterq mov pop push callq xlat cmp jo rex.WB stos rex.WRB rex.XB cmp in addr32 fs std mov (bad) (bad) mov rex.WB mov push rex.WB jle cs cmp scas push loop (bad) mov (bad) sbb xchg rex.WRX push sbb callq test add rex.WR xlat lret mov xor or pushq jl callq movsl jnp (bad) (bad) (bad) sbb cmp (bad) es push or jnp pop xchg rex.X (bad) or (bad) (bad) popfq sub (bad) movsb cltd sbb cwtl enterq cmp repnz outsl hlt mov std rex.WXB jg and (bad) xlat sbb or movabs xchg (bad) out sub (bad) out fcomp int3 jge jo (bad) rex.WX repnz and pushq mov pop rex.W sub pop or shll sub movsl push jge xchg enterq imul and std push (bad) mov rex.B mov sub ds xor xchg insb mov mov sub ja jns rex.RXB rex.RX rex.WRB jno lods rex sbb movabs rex.RB jbe mov push or movsb test cmp sub movabs or out rex.WRXB xor test clc (bad) sbb rex.WR divl or outsb (bad) push jbe shlb mov mov jo push sahf rex.RX nop pushq mov jo stos cwtl pop rex.WR (bad) jg sub fcmovu mov (bad) insl rex cmp pop jne adc jnp mov pop (bad) xor or int3 cmpsl pop mov (bad) not or lahf adc test (bad) adc retq add and xchg (bad) pop rolb rex.X cld faddp test iret mov (bad) test push enterq sub movl (bad) imul pushfq adc jp in test icebp rcrl pop fldt movsb in sub in adc sub test fdivs out repz cmp sub rex.RXB fwait xchg mov out cld mov rex.WX xor (bad) mov pushfq add rex.WXB rex.XB repnz int3 mov push movabs or rex.W rex.RX sbb ficompl jmp sbb int3 (bad) je pop cltd in lret sub test je callq mov js es popfq fidivl xlat cmp mov lret stos jb imul (bad) rex.WX or addl test stos sub rex.RXB rex.WR cltd (bad) mov rcrb sbb pop jmpq (bad) rex.WRB (bad) movabs (bad) or imul or cld retq mov cmp fsubrs xchg or rex rex.WR movsl xchg (bad) sub adcl mov fs iret cs rex.WX add rex.WB cmp jns pushq (bad) js fimull outsb adc shrl xchg sbb xor stos push test fwait sbb or (bad) xor jrcxz nop sub xchg icebp jbe sahf adc jge es (bad) add insb pushq or mull stos jbe (bad) mov pushq (bad) jbe ss (bad) sbb sub movsl jrcxz mov movsl sahf sbb pop adc (bad) popfq lcall sbb rex.WB xor sbb sbb xor rex.WXB pop push push sub sbb pop sbb test xchg callq lods sub fwait jl cmp rex.WB rex.RX pop es rclb imul pushq xor lret mov xchg and cld ja fcoms xchg popfq mov jle (bad) add sub cwtl (bad) add jge mov sbb rex.WX jne (bad) jne (bad) pop cmp mov mov and pushfq cmp rex.B idivb or outsb enterq xlat (bad) pop or push add in shrl xchg pop leaveq (bad) cmc pop add rcrb scas test test sbb (bad) and jae (bad) (bad) es jmpq pop mov rex.R (bad) std (bad) outsl (bad) mov sbb pop gs test (bad) cmp std pop movsl cld mov mov (bad) faddl pop sbb (bad) pushq pushfq mov mov stos add loope jo jmpq movabs add mov (bad) lea rex.WR gs popfq (bad) xchg cmc rex.WB cmp pushq xchg mov cmp mull rex.XB xchg xor (bad) movslq or int3 (bad) xor jae int fldl cli rex.WB rex.WXB ds loopne and rex.WRB cltd gs jl ficom xchg (bad) mov and shrb cs adcl mov sub xchg xchg adc jmpq sar fdivr out pushq cltd xor pop xor rex.B rex.RX lods test cmp fidivr (bad) jno xchg movsb mov adc rex.WX lods mov mov mov inc stc movabs rex.WXB rol (bad) rex.WB in or add (bad) jg (bad) orb jl popfq addr32 (bad) cmp rex.R xchg sub sub xor rclb mov (bad) popfq rex.WB xchg rex.WRX push rex.WB rex.XB cmp test jb sbb (bad) jnp (bad) jne sbb sahf popfq (bad) rex.WB rex.RB (bad) rex.WRXB adc xchg test jns test sbb rex.RX addr32 pop or xchg (bad) xchg pushq mov rex.RX mov rex.WB outsb jne sub pushfq sub xchg rex pushq rex.X push and mov pop rex.WB rex.WRXB rex.RXB jmp popfq rorb (bad) jp stos pop (bad) and rex.WXB push sub rex.R rex.WRB ja mov rex.X testb retq pop (bad) loopne or mov (bad) (bad) xchg fcoml rex.WB pushfq or pushq pop (bad) xor (bad) mov or xor (bad) and movabs clc (bad) rex.WXB enterq rol rex.WB mov sbb xchg sbb in (bad) xor test xorl int3 rex.WB in mov cli ss mov pop retq jmpq cmp movsb movabs xor test loopne (bad) fdivrs or rex.WB push (bad) (bad) ss faddl int3 (bad) std push (bad) jno pop sahf dec pushfq sub (bad) movabs sub (bad) rex.WRXB or mov jl (bad) sub negl mov stos callq pop mov pushq outsb mov rex.WB lea mov push movslq es (bad) movsl (bad) callq and retq lret sbb xchg (bad) rex.WB xor fsub (bad) push repz ss or sbb cmc jle callq movsb push (bad) mov stc pop pop pop movabs hlt test mul add jle rex.WB rex.WR rex rex.XB (bad) loopne ss (bad) push adc and rex.XB gs rex.WB sbb in stos pop push (bad) movb enterq (bad) pop jbe add fbstp sahf xorl cwtl or mov xchg pushq outsb retq or loopne sub fidiv pop jae sbb cmp and rex.RX je (bad) jb sbb jbe sub (bad) ror mov movsb ds lret retq and xor mov rex.WB (bad) jae lods (bad) test mov nop mov int out callq push test (bad) jno cmp xor rex.WX (bad) leaveq xchg insl (bad) mov addr32 rex.WB xor rcl leaveq fisub (bad) (bad) pushq rex.WB (bad) mull and int js push lret clc mov test rex.WRXB jge pop mov xchg jl xlat sub adc (bad) stos fsin or repz rex.WRX not adc enterq push lret fiadd fsubrl and fnstenv mov cmp xchg test sbb add xor mov push sub sbb jl enterq fisubrl ja cmp mov stos outsb cmpsb comiss outsb fwait pop rex.W jmp cmpsl jg ror (bad) mov sbb mov xchg sbb xchg (bad) out mov (bad) pop out cs push rex.WRXB (bad) rex.RX and mov sbb (bad) mov pcmpgtd xchg cmpsl idivb (bad) jo or movabs add sub test int3 rex.WXB movsb jne sub lods xchg xchg outsb push data16 lmsw out je (bad) movabs push fs (bad) add fisttp addr32 sbb test sub (bad) mov mov (bad) out cmpsl mov (bad) mov popfq pop loope mov jno sub leaveq repz sbb sub out rex.R xchg out (bad) xor or outsb (bad) adc (bad) ds pop (bad) callq hlt sbb mov pushq pop xor (bad) push xor mov fstps rolb rex.B cmp imul rclb rex.WB xchg mov rex.WB sub rex.WRB rex.WB rex.RB in push (bad) rex.WB fs cli scas sbb movabs orl lret sbb rolb stc and out decl ja mov lock cmp je rex.WB adc cwtl addl cmp cld rex.WX pop movabs rex.WB fs stos and rorb test (bad) push cmpsl in scas cmp mov fs dec (bad) (bad) frstor rex.WB cmpl (bad) push pushq add jo test jns je (bad) sti push (bad) movabs retq rex.WRX add loopne add fisubl pop sub xchg rex ss test mov mov sub sub push mov push rex.WB retq movslq lods fsubrp js repz fdivl lea adc pop (bad) iret or sub mov stos rex.WB xchg (bad) std (bad) xor js jrcxz xchg xchg movabs mov in rex.WRB hlt (bad) callq mov sar scas cmp xorl or jnp rex.R gs hlt retq sub sub (bad) cmp fstps and int3 lret test (bad) jmpq or out mov sub pop add add add int sahf movsl (bad) (bad) jp rorl rex.WRX mov sbb jp test shrl lret jno rex.WRXB (bad) rex.WB jb (bad) (bad) and sub (bad) pop test imul pop mov push movabs (bad) gs jo xchg xchg movsl lods lods cwtl sub movsl adc fildl sub cmp sahf rex.B rex.WRXB movsl test test pushfq loope (bad) xchg fmuls mov movslq movabs and xchg adc pop (bad) rex.WB rex.WX repz mov xchg sub rex.W lret (bad) push (bad) jo push int sub (bad) adc mov rex.WRB rex.WB and (bad) lods push es push xchg lods push fcmovnbe ror cs loope rex.RX nop pushq pop out sbb add push (bad) lods xchg adc jo add (bad) incb rex.RB rex.WB lock fldenv and in movabs fiaddl sbbl ja lods push loope push insb imul rex.B ja or sbbl xchg movabs mulb cmp push enterq push movsl test push xor fnstenv rex.WR or xchg icebp and jbe cwtl ss jg pushq rex lret in and sub fistp (bad) pop add sbb mov addr32 push sub nop outsb xchg rex.WB in (bad) cwtl rex.WB rex.X or fwait pushq rex.RXB sbb adc cmp test cltd xor movb loopne xchg jnp imul (bad) fcmovu pop or iret (bad) fwait rex.WB sbbl pushq movsb mov popfq mov sub pushq addr32 mov pop (bad) loope sub cltd (bad) mov sbb cmp roll adc mov loop rex.WRB or cmp rclb rex.WX repz cltd sub rex.WRX popfq adc jbe adc repz leaveq rex.RX push (bad) jno (bad) adc push mov in pop rex.WB add jle cmp xor mov scas pushq mov enterq push (bad) rex.WB repnz divb fdivrl push rex.WB loop sarl frstor cmp mov push retq callq (bad) xlat rex.WR rex.R rex.WB rex.WRX fnop scas rex.RB int3 sbb (bad) shr repz sbb stc (bad) xor imul movabs cmc jae leaveq rcll loopne and rorl xlat and mov pushfq (bad) (bad) rex.WB int xor pop and mov cli mov and fstps rex callq (bad) (bad) or enterq test push int3 divl mov imul shr sub mov jmpq test (bad) rex.WX (bad) movabs pop loopne pop xor xor fldenv addr32 repz xchg or mov pushq add es mov es (bad) (bad) mov rex.WR pop addr32 pop rex.X mov xor xchg rex.WX adc (bad) movabs add movb rex.WB (bad) or (bad) insl xor xchg fdivrs add (bad) cmpsb jg pushq cs fs es xchg scas xor hlt ror push xchg add (bad) imul rex.WRB push fwait mov sahf jmp (bad) and test add (bad) pop fistpl rex.WB cmp lea movaps (bad) xor xchg jg (bad) (bad) rex.RB (bad) sbb rex.WB test (bad) rex.WB (bad) xor mov rex.R rex.WRXB rex.WB mov add cmpsb gs repnz and movabs ds cmc movslq out pop callq std cli rex.WRXB lahf or lahf cmpsl xlat (bad) sbb callq or rex.WRXB fildl mov jno outsl pop movsl movabs xor rex.WB rex.WR mov rex.WX nop push loope push rex.XB repnz rex.WRB (bad) (bad) mov rcll rex.WRX mov and rex.R rex.X fcmovnb add mov sbb pushq loopne sar stos push rex.WB jrcxz (bad) rex.WRB and test jbe sahf test mov not adc mov pop push outsb mov out ja add movabs outsl mov pop ss rex.WR sbb mov rex.WR (bad) sbb leaveq addr32 cmp loopne and xchg pop (bad) vmread mull pop sbb mulb pop rex.WB or jg rex.X sti pop mov sbb test rex.RB rex.WB int3 jrcxz jp add imul jl and callq je sub fwait rex.WB js ja xchg xchg (bad) pop adc fild or int3 gs ss (bad) movabs (bad) (bad) (bad) in push or pushq mov pop (bad) fisubrl lods fsts addr32 and mov in xlat jp and iret (bad) rex.WB rex.RX jb pushfq pop mov xor (bad) push or mov sbb or adc (bad) cmpsb scas adc shlb adc imul cwtl jg (bad) movabs pop pop mov and sub sub fidivrl sbb sbb movabs (bad) and fiaddl testl clc (bad) fcomps (bad) addr32 nop pushfq jle rorl cmp mov add mov stc or mov out movabs movsl cmp sbb in data16 loopne cmpsb fbld adc (bad) (bad) sub lret fstl adc rex.X rex.WB or xchg enterq in stos push jge jg adc xchg xor mov out (bad) mov jb sub rex.WRX rex.RX (bad) xchg js movslq gs loopne enterq sbb (bad) leaveq (bad) cmpsb movslq movzwl (bad) add jle cmp cmp out mov fs adc rex.RX mov sahf ds repnz jp mov stos mov cmp (bad) insl (bad) mov lret rex.WB rex.W pop (bad) lods test vandnps and movabs mov stc (bad) mov callq xchg rex.WRXB data16 dec rex rex.WB es pop (bad) shrl rex.X dec fisubr rex.WRXB int3 jle xor rex.R xchg ss imul (bad) ror fsubl pushq xchg and movsl rex.WRX lahf movslq sahf (bad) sti sub gs (bad) jb test xor loop (bad) mov enterq push movslq decb and sbb mov je retq rorb iret imul (bad) imulb sbb jne sbb rex.WB push adc callq lods nop rex.WRX xlat loop mov fiadd xor (bad) mov rex.RX in jae rex.WB es jno shrl add sbb test jae movabs mov js cmp add mov fldl pop add movabs xor movabs fisttp sahf fadd movabs xlat (bad) test div repz mov rex.WRB stc fwait callq and pushq xchg push cmp lret sbb (bad) jbe jle movsl cmp jrcxz xchg rex.WXB pop test callq imul (bad) (bad) ja and sbb test outsb jo (bad) rex.WR rex.WB (bad) loope adc xlat xchg mov cli in (bad) (bad) rex.WB rex (bad) lret movslq rex.WB sti (bad) (bad) xor rex.WB rex.RX rex.RX fisub (bad) sub or jo and fild sbb cmp or test (bad) push and adc or sbbb fs imul fidivrl cs pop xchg or and push rex.WB rex rex.WB clc push xchg fbld rex.WXB in jae imul sub sti cmc js (bad) pop xchg gs sub es nop rex.B callq and mov sbb jp sub xchg in ds xor (bad) cwtl rex.XB movsb or sub (bad) nop (bad) pushq insl push je callq and rex.WB lahf or sub (bad) sub and add pushfq rex.WRXB xchg and lahf (bad) fcoms lret xchg rex.XB (bad) sbb rex.RX push (bad) insb and adc clc sub test (bad) (bad) rex.WXB pop pop movabs jmp cmp jb rex.R pushq rex.RB (bad) scas test rex.RXB or and add xor xor test sub stc icebp rclb mov (bad) movabs movabs pop movabs ss xor movsb xchg loopne xchg sbb rex.WRXB rcll fsubs movabs enterq adc icebp rex.XB xor sarl lahf outsb pop xchg rex.X xchg jnp jno pop and jae adc or mul rex.WB (bad) rex.WRX rex.WR cs cmp retq lods push (bad) (bad) data16 and cmp adc out rex.WB (bad) out int jno jl divb xchg sbbb leaveq push fist (bad) repnz (bad) jg mov roll lea xchg jbe retq jb leaveq rex.XB (bad) cmc xchg cmp mov fs jg push pop adc xlat and jge push fldl2t pop rex.WB pop rex.WRXB mov fcmovbe push movabs and callq fistl fwait (bad) pop cwtl sub repnz mov add (bad) mov and mov (bad) lret (bad) test out test cmp (bad) test add jnp add push or (bad) cmpsb rex.WB scas pop js int3 rex sbb cld rex.XB movabs (bad) mov sub test (bad) mov ror sahf cwtl jo test xchg clc int rex.B addr32 movabs push (bad) cmp jp rex.WRXB lock xor adc cld (bad) (bad) notl js and movsl sub push add (bad) movabs subl rolq rex.WRXB jl ja movabs jmp imul insb repz mov (bad) jp mov mov callq test lret retq cmpsl and leaveq (bad) fiaddl test iret xchg test push sbb rex.WXB sub mov repz sub js sbb push gs or xchg pop xchg cmp lret pop rex.WB int (bad) push (bad) (bad) rclb pop jp rex.WB mov test pop retq xchg loopne sbb negb (bad) or sub out push rex.WX rex.WRXB imul (bad) and movsb sub cwtl pop test rorl je xor js fildll jns cmp add pop rcrb cltd data16 rex.WR sub cld (bad) xchg xchg movsb in fs sub movabs rex.WB out sbb movabs out xchg movabs rol (bad) es rex.WX hlt lods pop enterq out stc jrcxz xchg cmp pop xor fcoms jrcxz sub pop adc and xchg movabs (bad) rex.WB sub xor fdivs test rex.WXB mov rolb rex.WB rex.RB test rex.RX mov rex.WB jno xchg rex.WB (bad) and (bad) outsb rex.W rex.WB ficom mov fs callq cmp push add or sbb pushfq and rorl je rex.X pushq (bad) rex.WXB mov (bad) popfq lret test pop lcall xchg cwtl pushq pushq movslq mov mov push xor sub imul rex pop (bad) popfq pop push sub adc (bad) mov pop rex.WR scas lea sub or stos push xor rex.X cmp rex.RX sub jge xchg outsl cmp out pushq imul movabs or icebp jb movabs push (bad) rex andl je std loop (bad) rex.WB fwait movabs in lahf imul in insl push add neg not mov fwait mov sub (bad) pop pop loopne popfq fnstcw vpunpcklqdq lock sub pushq fcoms and sub (bad) mov (bad) (bad) rex.B push int fucomi mov cmpsl or rex.WB jo cmp outsb cmp (bad) movslq cld jns (bad) sub or pop cmc rex.WB fisubl sub xlat xchg push sti push (bad) js fsubrl pop lods int3 jg sub scas in rex.WRB mov std jmpq loope jns lods movabs lahf push out sbb sub jp imulb sbb movabs (bad) jl push or add ror cltd sub xchg push rex.WB lods cmp sbb mov pop out callq rex.WR rex.WRXB rex.WRXB rex.WX cltd rex.WB mov and rex.WRXB cltd jmpq fist push sbb cld mov movabs (bad) pop movsl mov and test mov xchg xor xchg or movabs rorb adcl clc sti hlt mov (bad) fimull (bad) pop (bad) adc decl rex.R rclb repz nop rorl out and rex.WB mov test (bad) pop adc push rex.WB adc sbb rex.WB cwtl pop xchg in mov and mov icebp push fidivrl rex.RX rex.WB insl sub and adc mov xchg push rex.W fwait callq sbb jbe jo ja sub mov mov push sub sub leaveq stc rex.X rex.WB xor fmuls movsb (bad) movabs ja rex.RX data16 cmp leaveq sub (bad) out rex.WRXB xchg and xor jno pop (bad) jmpq (bad) leaveq lods rex.WRXB cmp cmp (bad) rex.WRXB adc cmp callq gs out mov pop std rorb jnp rex (bad) mov stc addr32 clc xor imul icebp xchg sbb jae sub (bad) mov retq test clc (bad) (bad) or fs sbb adc fisubrl pop add push hlt pop fbstp xchg out cmc jo rex.B sbb outsl xor push cmpsb pop cltd push scas stos xor fs lahf cmp jae shrb (bad) or retq lods pushq push or jmp (bad) mov andl xchg sti jmpq cmpsb loopne jns (bad) clc outsl test cmpsb sbb in jno xchg movabs push outsl mov (bad) pushq pushq sub psubsb (bad) in or pop cmc cmpsb rex.WRB out fsubrp mov outsl (bad) sarl rex.RXB lock divl or sbb roll outsb movsl mov and js rex.WRX jno lods test sub movabs rex.WRX sub and mov mov push outsb jne (bad) or cmp repnz sahf xor or mov (bad) mov push and in pop and sbb (bad) retq (bad) adc subb (bad) (bad) rex (bad) imul (bad) fsubs insl sbb sbb (bad) shrl cs xchg (bad) mov xor imul mov lret rex.RB or je insl jmp (bad) mov xor cmpsb fucomip jle jmpq lods leaveq pop sub lahf pop rex.WRXB fldenv cmp ss mov stc push cmp cmp out fbld (bad) movabs mov xlat (bad) movsb out test (bad) xchg addr32 imul pop sub jo or pushq cmp sub cli mov and xor out stos and js or xor pop xchg (bad) retq xlat cmp fs mov test push xor rorb in icebp (bad) test cmp or and jno push popfq xchg rex.R mov or mov mulb stc adc (bad) (bad) mov mov movslq lea stos out cltd (bad) pop movabs xlat push sbb xor sub pushq sub outsb or push addr32 fs jle pushq push rex.XB (bad) cs imul ja hlt pushfq mov in out clc rex.WX insl mov andl jb add (bad) (bad) rex.X iret (bad) sbbl pushq pushq cli rex.X add xor pushq mov xchg sub out mov (bad) pushfq icebp sarl (bad) or movsb shrd jp jbe mov clc or add adc adc sub mov cltd imul movslq rex.WB cmp adcl add test mov adc and rex.WB scas iret imul sub xor test jns pushfq leaveq rex.XB cmp cmp fcomps mov xlat rex.WXB or mov push ss rex outsl adc rex.WB ss rex.R (bad) rex.WRXB xchg jbe pop rex.WB adc rex.WB push mov testb (bad) xor sti (bad) loope push rex.WB (bad) addr32 (bad) push test scas jge out mov jae and xchg rex.W ds rex.WRB or nop test js out movabs cli scas and sub xor xor (bad) rex.WB (bad) (bad) pop sbb insl (bad) enterq out rex.B repz cmpsb nop pushq add rex.WRB rex.WB andl (bad) and jle mov test (bad) stc pop adc mov (bad) mov rex.WB stos or or jge (bad) mov movabs rex.WXB mov mov and push sub jo rex.WB sbb (bad) addr32 pushfq and push mov out rorb andb pop enterq or (bad) or fsubp and and (bad) divb (bad) jne sub xchg int and jl shlb (bad) pushq test cmc fwait (bad) xchg pushfq rex.WB scas imul mov rex.WB fadds cmp stc cld fmull or (bad) push outsl sub pushq movabs sub ds and pop out sub (bad) fcoml push rex.X lods cmpsl rex.WB fs push (bad) mov cltd adc sbb sub mov enterq cli test test hlt movabs or test mov mov scas pop mov pop movslq mov and rex.WX fidivl rex.R icebp cmp or rex.WR (bad) xchg mov rex.RXB testb xorb push callq pop idiv movslq ds cmpsl test cmp sbbb leaveq pop loope out adc or or lock jle rex.X rex.WRX mov test lret push sti rorl lea (bad) movslq (bad) jge cmp and mov and rex.WB movabs out cwtl pushq mov lods push push jne pop rex.WB (bad) test rex.WB movsl (bad) cmp data16 lret adc rex.WXB rex.W movsb mov push popfq rex.WB ds adc nop lret and jg (bad) mov stos xchg rex.WXB fist movsl jmpq xchg rex.WB adc mov flds and add pop (bad) rex.WB leaveq pop xchg out cld and push stos imul xchg rex.W rcll jns lods lcall (bad) outsl rex.RX cs mov rex.WB lret scas jmpq adc mov xchg sub es xchg rex.RX ror (bad) callq add jns cwtl fsubrs (bad) rex.WRXB rex.WB rcrl rex.RX lock jrcxz (bad) int sbb (bad) (bad) movabs loope rex.XB pop xlat mov iret rex.WB callq push loopne pushq sbb (bad) mov imul adc sbb xchg shl sub (bad) shlb rex.WRXB push (bad) xor xchg adc pop push push jno rex.WRX test xor rex.WB xchg rex.WRXB and movslq movsb lock adc movslq and sbb popfq movabs xor stos sub pop scas sub ficomp or gs or (bad) or jb fneni(8087 push mov rex.WB movsl repz (bad) (bad) rex.WB rex.XB add rex.WB add jb (bad) sbb push mov and rex.WRX sbb rex.WB rcl jp rex.WR rex.WB (bad) popfq pop add loopne rex.WRXB in mov rcrl xor rex.WB cli out jp sarl data16 pushq mov jge out rex.XB push movabs and (bad) scas jge test xchg xchg sub movabs jns test rex.B pushfq test (bad) lods sbb movabs cmp in testl rex.WB decl (bad) pop adc movsl es sbb sahf (bad) std rorl leaveq (bad) xchg and fimul mulb test cmp sbb xchg (bad) rex.WB (bad) adc rex.WB xlat jb jns jl callq push loope loopne es movabs mov xor add enterq (bad) (bad) outsl and xchg rex.WRXB xchg push in or xorb (bad) test adc repnz cmp (bad) int (bad) jmpq xchg movabs cmp callq rex.XB rex.WB es jae fbstp test (bad) rex.WRX cmp rex.WB fstpt movsl enterq test mov rex.WRX rex.XB gs (bad) loopne push push (bad) js xchg rex.WRXB fs xchg cmp and rex.WB rex.WX fs rex.WB rorl mov rex.RXB mov rex.WX cmp cmp add pop (bad) fisttpl (bad) movslq pop movabs mov jnp shrl insl push or rex.WB lods (bad) cli fwait (bad) (bad) sub sub jge rorb mov jp,pn mov rex.WB rorb cltd push (bad) enterq in adc push or mov incl sub fwait mov in push cmp sub push idivl adc adc push (bad) (bad) lahf xchg icebp cmp add (bad) mov (bad) rex.WX jmpq push or out pop insl mov stc pop subl js cmpsb shrb loop enterq gs mov movabs jmp (bad) pop xchg iret sbb rex.RX rex.WRXB mov cwtl test xor rex.WXB rex.WRXB fcmovnb (bad) (bad) or std pop fwait je std mov sub sbb addr32 rex.WRX (bad) mov stos (bad) mov (bad) pop (bad) cmp fisubrl push xchg (bad) cli and xchg out movsl rex.XB xchg in adcl and pop fimull push cmc (bad) (bad) lods jno (bad) adc callq (bad) pop rol (bad) loope in (bad) lods test mov add (bad) push mov js (bad) mov outsl push push pushq adc pop push rex.WB (bad) rex.R mov fwait add sub and or (bad) lret pop ds stc iret sub (bad) rex.WB rex.RB rex.W insl push test sbb sahf ror pop movsl push sub (bad) loop and imul and cmpsb xchg push testl (bad) movabs leaveq scas mov hlt rex.WB loopne mov (bad) xchg jns and ja or sbb mov and sub and in (bad) mov sub stc sub mov sub movabs lods mov pop lea jmpq (bad) (bad) (bad) fnstsw out cmp or rex.WRB rex.XB ja mov mov and repnz adc cmp callq jmpq or push mov insb or rex.RXB iret hlt xchg (bad) (bad) movslq rex.WX in add movabs (bad) jns xor sbb jrcxz mov hlt (bad) enterq rex.WR rex.RXB (bad) jle addr32 fimull lret rex.WB in and (bad) rex.WB push rex.WRXB adc cmp rex.RX sub jo js cmp lret ja cltd pop pop mov rex.WB xor (bad) jbe add xchg rex.WRB sub testb jbe test int sbb cwtl in ds callq sbb (bad) jnp push cmp out mov test (bad) jbe mov add test adc sbb (bad) mov rex.WB sub sahf or pop mov sbb rex.RXB cmpsq addr32 jae mov (bad) lea cltd pop (bad) sub mov rex.WB (bad) movabs scas rex.WRX std mov (bad) mov repz (bad) (bad) movabs rex.WB addr32 jb leaveq jmpq push cmpl jge jbe (bad) (bad) (bad) rex.RB rex.WXB (bad) jg stos push stos pop (bad) movabs imul rclb out (bad) cs or mov lods fwait popfq retq (bad) movsb lret pop fwait adc xchg iret (bad) sub rex.XB ss rex.WX rex.WB add data16 movabs test adc cmp sub add subl or movabs cmp sbb testl data16 xor stos callq ror mov lea mov test movabs mov rex.WRXB rex orl mov push rex.WB rex.WRXB data16 fwait rex.RXB xchg (bad) push popfq out (bad) lea sbb cmpsb fidivrl rex.X xor js mov movsb jbe pushq clc pop rex.WRX add push xlat (bad) mov rcll sub retq mov test icebp pop rex.RX addr32 in pop je xchg mov repnz (bad) xchg sbb ds sub xor cld sbb rex.RB jrcxz pop (bad) test sub cli fnstsw (bad) (bad) jle rex.WXB sti mov rex.WB (bad) adc add mov (bad) enterq xor rex.WRXB rex.WRX rex.WB mov imul (bad) (bad) fcoml test jp sbb mov loope fildl push adc out push nop sub jns fs lret mov movabs and int3 clc stos fisttpll insb (bad) push rex.WR mov (bad) cmp (bad) imul jl (bad) (bad) in push jp rex.X orb rex.WRX rex.WRB movabs adc (bad) cmc ror addr32 cmp sbbl add (bad) mov push (bad) jns int3 rex.WXB callq iret leaveq rex.WRB ja adc rex.WB cmp mov popfq cmp (bad) fbld cmp mov adc rex.WB rex.B xor rex.RXB (bad) cli int cmp rex.WB rcrl (bad) icebp or js or jno movsl mov and rex.WB ds mov and pushfq (bad) data16 (bad) mov addq sti rex.WB mov or hlt xlat jge lret sub lods xchg pop add repnz fsubrl test mov rex.R jrcxz jbe add fcomps icebp or push sbb lock jno sub push vmovd iret roll subl sub sub jae xor leaveq jnp rex.WB mov rex.RX rex.WB mov sbb mov push jle mov sub clc sub (bad) add (bad) icebp xor sub xchg cmp fldcw (bad) cs fld rex.WRB or pop (bad) xchg pushfq add jp movslq jg pop pop xlat (bad) lret pop pop cmp in mov cltd stos sub fiaddl rex.XB or (bad) incl sbb test jns fimul test sbb (bad) addl out sub movsb lea (bad) fisttpll xor mov movabs pushfq pop push mov sub xchg xor (bad) jne xchg jrcxz (bad) cmp stc jbe adc or stos sub mov lret xchg popfq cmpl rex.R xor (bad) pushq iret adc and or rex.WB rex.WRX (bad) movabs (bad) or es leaveq sub (bad) rorl xchg mov (bad) movabs retq out scas jo rex.RX (bad) (bad) fidivl jg mov xchg mov fldenv jb jg xchg pop loop xchg pop movl add xchg hlt add mov outsb movslq sub sub (bad) in or or rorl fistpl (bad) iret mov rex.XB fwait xchg mov or cmpsl mov mov jae or test out and xchg jmp (bad) rex.WX ja outsl es mov push movabs cmpsl xorl imull jp pushq cmp (bad) rex.WRB movslq callq rclb sbb lahf retq xchg movabs fisttp mov rex.W mov pop subb mov mov fiaddl rex.B rex.RXB adc faddl ljmp (bad) nop rex pop retq push lea (bad) pop add (bad) xchg jb (bad) decb in jmpq sub (bad) mov cmpsb movsl rex lea out rex.R leaveq cmp addr32 repnz jo push xor sub jg push (bad) movl add mov xchg (bad) mov mov hlt test (bad) cmp jno pop or adc cmp fmulp (bad) and fcom and pop jle mov pop adc in (bad) movabs rex.B xor xchg in pop cltd movsl pop fwait jle or nop (bad) sbb sti pop js in jle mov xchg mov add rex.WB (bad) loope jo (bad) pushfq and outsb fimull rex push test (bad) xchg repz pop loope adc (bad) jb (bad) pop imul out fbstp repnz (bad) or or movsb int sbb rex.WB (bad) std push and cmp mov or jbe cmc scas cmpsl mov push xlat add movabs test mov xchg pop xor sub jbe rex.RXB (bad) (bad) stos js int3 decl mov (bad) mov (bad) fcmove test xchg movabs or add shr in pop out nop cmp pop stc mov fcmovne jrcxz rex.WB and (bad) xlat movabs mov cmovs retq (bad) jg or adcl rex.WB xchg es or rex.X xchg rex.WB mov cld rex.X xor fstpt (bad) iret jae and pop shr sbb mov rex.WX rcrl pop loop (bad) pop xor adc stos add jo iret outsl fdivl mov stos xlat (bad) callq add rex.WRXB xchg rex.X ja sbb fwait cmpsl rex.WB sbbl callq mov (bad) (bad) lahf rex.WRXB rex.WB rcrl jne outsb cmp in callq sub repnz and jns (bad) sub (bad) stos add rex.WB rex.R ja fcmovb xchg addr32 sub sbb cld jo ds in (bad) sbb (bad) sub fidivl pop test sbb rex.B (bad) (bad) xor rcr sbb sbb pop mov sbb or xchg cmp or outsl pushq mov jp (bad) sub loope (bad) lret add mov sbb xchg in lods lods jbe clc movabs scas pop cli rex.WB mov xchg mov mov rex.WB xchg pop (bad) lea mov data16 mov rex.RB rex.WB ss xor sub in (bad) addl stc mov fistpll mov adc nop stos (bad) or rex.B orb rex.WB rex.WB xchg jae mulb xchg (bad) movabs lea xchg rcrl scas rex.WB push adc rex.W fs mov iret mov (bad) std fstl in stc rex.WB test (bad) and pushfq add movsb ss lret xor (bad) pop rcl xchg test cli (bad) data16 or xlat or sub (bad) std shrb mov cmpl add xchg movslq xchg sbbq sbb rex and xchg (bad) (bad) jb roll (bad) ss rex.WX movl int cli rex.WB pop mov incb sub or adc sbb rex.WB repz rex.XB jge loope xor fimull (bad) rex.B push data16 pop mov xchg stos (bad) rex.WB sti movslq pop fsts rex.WB xchg rex.RX sub nop rex.WRX loopne fsts rex.WB rex.X (bad) mov sub jne rex.XB cwtl rex.RB rex.WB xlat (bad) and pop and cld shlb (bad) xchg nop mov iret sub (bad) clc rex.WB (bad) (bad) rex movsl in imul punpcklwd push xor rex.W pop adc rex.R imul lret loopne outsl and pop add testl rex.WRB adc rex.XB or lahf retq push pop and push mov (bad) mov sub movsl rex.WB mov and xor and fidivr mov sub push push imul rex.WB data16 (bad) rcrb pop (bad) icebp rex.WB ss sub insl rclb lahf ds addr32 fistpll xchg sbb rex.X (bad) or rex.RB fucomp repnz push (bad) lret addl fimull (bad) rex.WX scas (bad) jmpq cmp (bad) (bad) rex.XB movsl mov push xor movabs callq (bad) fld test sub or xor clc xchg rex.WX (bad) mov fdivrl cmp sub (bad) rex.WXB push mov (bad) (bad) push movabs or and add or stc and add in rex.WX cmpsl or adc mov rex.WXB addr32 stos ss mov push stos int3 (bad) rex.WB cld rex.WXB rex.WX lea xchg stc cmpsb callq mov out pushq xor shll push pop (bad) test out pop sub pop lods sub addr32 lock enterq mov mov and sti push rex.WB (bad) xchg (bad) xchg (bad) cmc test push mov test sahf xor (bad) push loope mov rorb pop and xor loope movsl mov lahf add in cmovns movsb (bad) cli in mov (bad) mov rex.WRB loope xchg sub rex.WB mov (bad) xchg rex.WRXB jge in out (bad) loopne clc (bad) (bad) push xchg and lea movslq rex.X test rex.WRB rex.WB (bad) out rorb fidivr xchg gs (bad) (bad) outsl mov in rex.XB (bad) hlt pushq mov test and movabs (bad) pushq and nop sar pop cmp rep movslq xor cmp vmread (bad) icebp or lods sub stos sub or nop xchg cmp adc outsb add clc sub movabs adc sub repz callq rex.WRB rex.WB (bad) (bad) icebp jge sbb lods or (bad) out push adc pushq int xor stc jle rex.RB int mov nop push push fcomi add mov (bad) jns mov pushq movabs sbb callq fistpll rex.WRX (bad) rex.WB test or xchg movb in in xchg pop (bad) lret mov push leaveq sub mov sub rex.WXB mov gs test rex.WRXB leaveq push test mov mov mov xchg out rex.WB insb xchg rex.WRB test push and lock fwait (bad) xchg ror (bad) imul fs jae or pop fsub cli mov lret movabs (bad) add ja rex.WB scas add movabs in movsb sub pop mov mov rex.WB popfq sbb sub jmpq jle sbb cld and lret jno scas xor jbe jnp (bad) hlt rcrb pushq rolb sbb jne rex.RX add fwait test (bad) out sub (bad) cmp sub insb sbb (bad) mov out rex.WB (bad) rex.R (bad) (bad) (bad) (bad) jnp lret or test mov hlt rex.WXB rex.XB (bad) and sbb (bad) loop lahf iret je (bad) sbb jo out xchg rex.WB xchg pop add rcrl mov gs (bad) (bad) pop xchg (bad) push pushfq pop mov mov fisubrl movsb pop mov adc cmpsb leaveq cwtl xchg rex.WB or add xor sub xchg in in rex.WB test out pushq mov int3 iret mov jns addr32 and rex.B add pushq insb test jo push (bad) clc scas callq (bad) rex.WX rex rex.RB repnz (bad) cwtl jae fcoms jl rex.X add adc retq frstor iret mov rex.WRX add fdivp movsl (bad) rex.WB shrb adc stos scas jmpq rex.WB ficompl (bad) sbb adc jmp out pushq decl cmpsb sbb out rex.WB movabs rex.X je and mov cmp shr faddp out or lea (bad) pop int add rex.WB test mov jno retq (bad) decl fsubs cmc ds int3 (bad) test add rex.WRX imul (bad) jns movabs loope rex.WRX mov (bad) scas pop cmp (bad) shlb cmovno jrcxz mov sub rex.X data16 js cmc movsl lods rex.WB lret mov sub cmp movsb xor cmpsb cltd rex ja (bad) hlt xchg jno pop movabs rex.WB jge push pushq scas push movabs pop int xchg pop cwtl rex.WB subl imul mov rex.WX std push rex.WXB mov insb rex.WRB xchg movsl or ficom imul test sti sub cltd adc pop push rex.WB (bad) jb and movabs movabs insb sar and mov adc hlt pop push retq (bad) (bad) cwtl push andl or (bad) (bad) icebp rex.WXB and push sub rex.WB (bad) cmc mov rex.R (bad) cmp testb rex.X in rex.RXB (bad) gs rex.WXB xor xor iret xchg (bad) rex.WB fwait pop xor cmpsb stos rex.X push jle adc je insl rex.WRXB rex.RX mov sub xor pop std mov jg out lea pushq pop imul (bad) rex.WB adc xchg push rex.RX rex.RB ds xchg cmp rex.WB push adc cmp imul xchg mov (bad) lea loop (bad) or mov pop movsb loope mov callq movb adc xchg pop loopne retq cs std pop scas movsl lods sub rex.WRXB rorl rex.B in (bad) jmpq rex.WB movabs fmuls cmp orl mov rorb jmp insl mov (bad) in rex.WB frstor loop jne (bad) rex.W xchg nop adc int pmaxub push adc or pop mov (bad) pushq stc (bad) rex.WB (bad) cmp sbb loope stos rex.RX cmpsl loopne lret retq rolb test rex.W pop pop movabs (bad) pushq xchg xchg retq cmc imul cs in jo test imul rex.WB xor jmp rex.WB (bad) cmp mov out cwtl push lahf loopne rex.WXB repz mov loope rex.RB jp jo push (bad) jbe cmp sub xchg mov sbb mov xchg rex.WXB rex.WRB rex.WB fwait (bad) nop rolb jnp scas rolb (bad) rcrl sbb repnz and (bad) (bad) fwait rex.RB pop push leaveq idivb stos rcrl xchg int3 ds xchg out (bad) rex.WB and test cwtl pushq movsb out (bad) fwait cmp int addr32 and movabs fistpll mov test rex.WB enterq rex.WRXB rex.WB divb sub pop or leaveq clc gs rorb jmpq xchg scas sub or rex (bad) and rex.WB cwtl (bad) lret movabs lods rex.WB push (bad) outsb fnstcw es shrl cmp xor xor fldl rex.WB rex orb insb int3 mov insl (bad) retq mov testl lahf fist sub in adc rex.WB rex.X rex.W jo jns rex.XB (bad) movabs rex.WB mov xor rex.WB sbbb rex.WX shrl popfq add (bad) mov adc adc nop adc mov mov es sub add and retq and pop sbb and scas sub ss pop fistp push ds mov xchg loope mov (bad) repz sbb (bad) xchg mov popfq jp rex.WB movsb notl jp out pop sub pushq or mov jno cmpsl lods movabs add callq rex.RB push adc movslq callq js sub pop (bad) icebp mov pushfq mov cmp jb sbb mov sbb push sub sub and pushq (bad) (bad) rex.WB test movsb sbb pop mov ja repz jl int adc sahf movabs fdivr insb rex.RB stos pop mov rex sub in shrb and rex.B push or (bad) xor and gs movsb or (bad) mov jge pushq mov rex.RB rex.B rex.WXB lock mov sub enterq push sub (bad) (bad) out rex.WX push pop mov sbbl (bad) or enterq jno jae adc (bad) pop (bad) xchg repnz out imul test bnd push rex.WRX cmp and xor fadds (bad) test and (bad) jp rex.WRB rex.WB mov add cmc sub pop loop and push xlat test iret (bad) sub pop cmp sbb pop add mov rex.WB idiv (bad) mov jge mov (bad) rex.WRX rex.WB xor retq test sti pop movabs (bad) rex.RXB gs retq loopne (bad) xchg rex.WB movabs or (bad) (bad) push pop movsb lahf sbb add shlq or (bad) fs rex.WB mov ds rex rex.WB pop loopne sub xchg pop lods loopel cmc xchg pop movslq imul (bad) rcrq sbb adc stc rex.RX mov fldcw pop xlat add cmpsb jae pop mov movslq icebp xor fldt add and or or outsb (bad) (bad) insl or test and out jbe adc rex.X sub mov rcrl stos fwait jmp and retq xor rex.RXB xor push or jmpq lods shrl (bad) adc xchg mov mul insl rex.W mov (bad) test rex.WR movabs movsl rex.RX rex.WX or fs retq mov sbb add xchg push and add icebp push (bad) (bad) cli callq mov pop fbld pop mov negl mov out add stos or outsl flds pop jo std mov jnp and test push add xchg rex.WB test push enterq gs sub repnz rex.WB jne fnstsw (bad) (bad) movsl fdivrl fwait rex.WB in adc jno adc mov and shrl jge rex.WXB cltd out rorl mov mov rex.WB imul enterq adc jno jne xchg loope test rex.WXB stos lcall rex.WB rex.RB (bad) fmulp pop mov sub (bad) in jrcxz push rex.WB xchg and fucomip out rex.WB xlat cmpsb test rex.WB mov pop rex.RB in mov cmp jnp lret pushq sbb decl je jp xchg cwtl rex.WB rcll rex.RB adc mov sbb fdivs (bad) movabs mov push movsb imul cmp sbb (bad) lret loopne test rex.W sbbb mov leaveq xchg js outsl mov loope adc (bad) cmpsb popfq (bad) stos add rex.WB and lods xchg pushq movabs cmpsl add js jno rex.WB add fyl2x push xchg (bad) rex.WX imul jrcxz cmp loop andps xchg pushq pop push ffreep add (bad) rex.X mov rex.RB rex.WRB jno out cmpsl fmull addr32 (bad) add mov pause pop rex.WXB js lods jge mov sub cmp (bad) xchg rex.XB rorb (bad) mov pop (bad) stos callq (bad) rex.WB or push callq pushq sub outsl rex.WB cs jge xchg movabs cmp add test movsl (bad) cwtl mov callq push xor add incb sbb pop push pushq rex.WB retq xor mov (bad) push and xchg lret movabs rex.WB and cmp mov rex.RB movslq mov movabs cmpsb out (bad) cld sbb mov out cmp rex.WB sbb cmp or rex.WB movabs (bad) xchg jle xchg movabs or (bad) stos xchg nop out push jrcxz test movslq mov or rex.W push and movslq mov (bad) fs rex out xchg mov (bad) andl out mov push sub cmp rex.WB (bad) iret cld nop rex.WB sub out and sbbl loope rex.RX rex.WB mov mov xor or jge (bad) xor stos push cmpsl mov jo mov je enterq rex.WB jnp (bad) mov rex.X adcl sub (bad) shlb stos jmp test jnp jne jl leaveq callq or pop jg mov sub xchg push sarb (bad) fildl nop movsb andl cmpsb jns lret rex.XB rex.WRB rex.WB xlat mov push lahf jno test mov rorb in pop (bad) xor or sbb shlb (bad) pop pop loop loope mov in sub add push sub sbb rex.WX xlat and cmp ja sub add leaveq (bad) jmp rex.WB (bad) icebp rex.W (bad) cs stos jno movsb or cmp rex.RB cmp test mov jae movabs scas (bad) lods andl in pop iret rex.WXB rex.WXB pop fwait and mov sbb sbb hlt add or (bad) pop mov cmc mov pushfq loope jne rex.XB movsb (bad) cmp jbe push jo pushfq cmp adc adc xlat shll jbe (bad) (bad) movntps or add push or rorb mov sub rex.WXB adc sub mov out mov mov mov or shrl (bad) push ss sahf and mov jo mov mov jmpq and rex.R (bad) callq mov pop (bad) js xor jmpq stos (bad) cmc hlt cmp out mov popfq (bad) sarb test es sub fmuls mov mov and rex.WRB rex.RX mov mov mov jrcxz pushq rex rex.WR test retq (bad) rorl mov inc push data16 (bad) mov rex.WRX push maskmovq idivl rex.WX lahf (bad) rex.RB lret pop jmp (bad) pop sahf nop sbb sub mov (bad) pop mov lret sub rex.B movabs mov out out int3 rex.XB fs shrb adc outsb incb mov rex.WRB gs pcmpeqw xor pop adc xor (bad) push mov push sbb push or xor data16 or (bad) sarb pop jmpq mov or in mov pushfq pop ds sub rex.WR rex.R (bad) rex.WXB or pushq movabs mull rex.RX adc xor mov xchg or and and cmp or rex.RXB rex.XB sub push sbb xchg (bad) adc rex.WR lods jp sahf adc adc mov callq cmp repz xchg callq and pushfq outsl stos jno xchg out mov addb jmpq cmpsb mov mov or subb cmp enterq sarb (bad) loop (bad) (bad) push sub sub scas (bad) sub xchg out callq sbb rex.RX rex.WRXB jo jns stos xor sbb cmp jp mov mov fmul leaveq mov movabs rex.WR add callq (bad) (bad) mov pop xor push or test sub jb shl mov callq (bad) (bad) mov adc xor mov xchg and iret mov loope or clc out rex.RB stos pushq and (bad) and push lods adc mov lret jge (bad) push movslq pop lret (bad) cld jno or lahf push cmp stos jo out push or (bad) (bad) negb xor leaveq mov rex.RX movsq rex.WRB sbb outsl add cmp ss cmc add out repnz push addr32 clc add rex.WRX cwtl mov (bad) (bad) mov jo xor jbe cmc rex.R rex (bad) js pop icebp xchg scas (bad) (bad) not cmpsl ja rex.WR rex.XB (bad) imul rex.WR retq mov sub mov (bad) (bad) xor jg xor push pop rex.WRX rex.XB imul mov movabs adc mov push divl sahf or test xchg xor lahf (bad) mov rex.RXB push or adc pushq cmp add ss mov and jmpq clc shrl fisubrl (bad) repnz movabs pop jp xchg pop imul mov test mov and xchg out fwait test or cmp lods and xor or rex.WB outsb jl repnz sub mov and test cmp (bad) rex.RXB rex.B rex.WRX push pushq test xchg cmp mov pop movsb sbb rex.WR xor mov (bad) mov and add mov mov rex.RX xchg xchg (bad) xor pushq mov rex.WRXB mov xor mov repz mov (bad) (bad) adc hlt test int and add (bad) rex.WRX push or lock sar xchg stos rex.B lret cmp mov es add fxtract retq push xchg rex.WRX rex.RB imul xlat (bad) or mov mov sub sub push sti rex.WB sub and (bad) js mov sub (bad) lret xor sti je (bad) (bad) sti adc imul pop xchg int sub adcl (bad) rcrb nop imul (bad) or jnp xor flds push int3 mov pop enterq rex.XB ja pop cmp adc cmc (bad) or frstor rex.WRXB pop push sub (bad) mov iret cwtl out fstpt out rcr sub (bad) sub jae rex rex.WRB movabs xor xchg mov (bad) mov cmpsl xlat or adc push clc fstpt cld out icebp callq rex.WB rex.WR fstpl fwait rolb cmpsl pop mov rex.WRB cmp addr32 rcrb sbb out pushfq cmpl rol mov movsb sbb cli mov movabs (bad) (bad) fidivrl ss fisttp lock cmp (bad) (bad) movabs mov rex.WB jmpq nop js rex.WXB rex.WB (bad) imul rex.W stc jrcxz xchg or jg sbb xchg sarb rex.WB lahf (bad) or rex.WB rex.W (bad) int3 in rex.X rex.WB (bad) push rex.WB and loope cld rex.RXB rex.WX in ljmp rex.RX loope stos or pop mov pop (bad) xchg mov imul test add sub rex.W rex.RXB rex.WB lret imul mov (bad) push rex.WXB rex.WB rex adc jrcxz rex.WB fcmovu and movsl (bad) mov scas mov rex.WB pop jmp je out pop push jg (bad) cmp mov leaveq mov (bad) es push adc stos fdivl mov rex.X or in movabs leaveq (bad) (bad) (bad) xchg xchg cmp rex.RX (bad) rex.WB (bad) mov (bad) (bad) and cmp rex.RB movabs test cltd js test mov icebp callq pushq (bad) lea (bad) sub movabs rex.R callw rcrb cltd xor pop xor jns (bad) rex.WRX sub wbinvd rex.RB (bad) pop mov mov ss movabs out test sarb xor insl (bad) or fs (bad) or rex.WRXB (bad) xor rex.WX stos rex.WB sub rcll push push xchg jnp test out xchg imul rex.WB rex.WRXB mov (bad) jp icebp rex.WB es adc movsl mov (bad) xor fsubs rex.WB mov sbb mov (bad) rex.WB pushq roll fisttpll int3 (bad) in fist callq push pop sahf rex pop data16 cmpsb push rex.WB pushq add cmp (bad) movabs and mov jrcxz seto ds xchg (bad) adc push scas sub cmp sub xchg lods in rex.WRB (bad) andl decb (bad) int xchg mov mov xlat rex.B movslq icebp movsl jns rex.WRX idivb loop stc mov enterq adc or sub lea xchg fsubrs sub outsl mov jg test pop push divb cmpsb (bad) mov sub mov adc rex.WB repnz xchg mov fldt lea pop callq (bad) push push adc out or callq test mov rorb (bad) xchg sahf mov jo scas sub rex.WB (bad) mov lret cmpsb sbb xchg push movabs (bad) mov in jbe (bad) cld rex.XB cmpsl in adc in lods scas xchg enterq fbld sub lret (bad) clc rex.RX repnz addr32 rex.WB cmp fs divb rex.WB js int3 (bad) (bad) rex.WB scas repz cmp movabs mov rex.WB test xlat add (bad) sbb add rex.WRB addr32 pop movabs xchg (bad) xor cs hlt scas fnstcw xor or and je mov (bad) or pushq cmp rex.RB sbb adc insl cmp (bad) decl out fisttpll sbb lods lock jnp mov movabs add add lret callq xchg nop pop fst mov xor movabs add pushq out (bad) (bad) nop mov int3 xchg iret cmc rex.B sbb pop cmp push (bad) movsl xor xlat rex.WRB pop adc loopne rex.X cmp out add fs fadd out sbb lret mov add rex.R (bad) sub div fwait push (bad) xchg test cmp fisubrl pushq repnz mov jno rex.WB clc je leaveq (bad) sti cwtl retq jl sub sbb xchg and xor xor xchg orl (bad) xlat push mov out mov xchg add sbb rex.WRXB rex.WB lods stos in mov xchg mov loopne cmp rex.XB xchg xor pop (bad) push (bad) mov (bad) xor ja fstpl pushq pop (bad) mov sub xchg lret push sbb movabs and movslq movabs xchg movabs retq sti rorb lahf sub movsl fstl rex.WRXB add mov ss mov or pop fistpl fstps (bad) cmp xor add rex.WB sbb pushq rex.WB sbb add je sahf push rex.RXB pushq enterq test mov push gs callq (bad) outsl rex.WRXB jmp rex.WB add mov xchg cmp sbb mov and push mov mov loop and fcompl mov sub cmp cmc jrcxz rex.RB (bad) rex.WB repnz lahf imul adc pop xor mov js cmp int3 push mov mov roll xchg push loop orb sub add or pushq movslq callq add rex.WB addr32 xlat (bad) popfq mov cmp cld push rex.XB or fimull cltd idivb cwtl mov rex.R (bad) loop pop insb jrcxz out rex.RX rex.WB rex (bad) shll movabs xor lret and push pop rex.RB rex.X rex.WX rex.WB mov loope (bad) sbb jmpq xchg rex.WB jle adc rex.WXB xor (bad) adc push insl enterq or pop (bad) lea rex.W and sub pop imul stos (bad) movsb push rex.WB lock cmpsl (bad) data16 faddl jae adc loopne addr32 xchg jnp (bad) and xor mov (bad) sub lock rcrl cltd mov (bad) rex.B mov (bad) or add (bad) jne cmpsb enterq xor push adc xchg mov addr32 retq mov fbld movabs mov add mov mov or jbe jrcxz fstl push neg mov movabs clc cmpsb std (bad) sub rex.WR rex.WX ss popfq fsubrs lret shr rex.WXB rex.R stos rex.W sub clc addr32 stos adc (bad) rex rex.R jnp adc or mov scas cmp popfq mov pop rex.RXB (bad) and push sbb data16 adc sbbl std xor loopne sub mov loope data16 add jae test rex.WB fwait push mov mov (bad) es mov add int3 push (bad) cmpsl or sub sub (bad) test rex.WX lahf movslq int sub rex mov imull or or xchg std (bad) sub xor loopne mov or (bad) fcmove clc sub icebp rex.R lock rorl and ja (bad) scas (bad) xchg sbb test adc sub cwtl push (bad) je add add lods jmpq repz push add adc gs fwait adc in adc ds xor rex rex rex.WX pop mov cs rex.WR xchg push pop ficom xchg pushq push rex.RXB lret data16 jno and movabs (bad) (bad) jg in or or jo pop (bad) and icebp loopne loope adc jb (bad) sarb sub push mov and test test or insl (bad) stc add adc pop jne xchg cmp out sti (bad) add adc mov jbe lret addr32 jo add xchg sbb rex.RX rex.WXB rex jmp stos sub icebp add adc and jno retq cmpsb jg or loope (bad) loope jge (bad) loope in xlat sbb jmpq mov jns repz sti (bad) cmpl cmp fsubs jae es pop or leaveq adc stc rex.WB mov xor rex.X fwait sbb rex.RB pop (bad) rex.WB stos (bad) (bad) repz xchg imul out js sub and xchg psllq rex.WX rex.WB xor sub mov and jae stos push cmpsl pop pop cmp xor sbb scas xor leaveq rex.WB insl push fistpll (bad) (bad) mov xchg stc fisubr movsb test xchg movb in jle jnp and scas icebp mov (bad) xchg cmp or subb add mov rol cmp fldt (bad) andl rex.X popfq loop xchg rex.WX andl pushq pop rex.RB test sub mov push mov rex.WB and rex.WB (bad) xor rex.RXB xchg mov loope sub rex.WRB mov rex.WB ss nop mov addr32 ficom mov ss or (bad) mov loopne rex.WX int mov sarl sub cmp mov es mov jp movsl stc (bad) or or rex.RX mov ficom mov outsl push xchg and mov and mov clc icebp idiv mov (bad) stos fnsave loopne scas xchg sbb rol movslq rex.WB or outsl (bad) lock out sbb jp,pt ss push rex.WB pop push rex.X rex.RXB movabs rex.WB lock test je mov fadd mov sub xor add mov int xchg rex.WRB fwait pop lahf mov jnp mov fstps imul push rex.WB (bad) pop (bad) xlat sub ds mov adc je xchg fadds mov jmpq mov mov clc cmp mov jb int3 mov (bad) rex.WB faddp and outsl rex.WRX imul mov push out mov mov jl cmp sub sub mov callq and xchg rex.WB shrl jb adc rex.WXB scas (bad) rex.WX enterq adc adc cwtl (bad) rex.W insb rex.B sbb fwait rex.WB xchg callq scas sub test xchg rex.WB push jge push scas pop mov rex.WRXB gs rex.WXB loope xlat (bad) fstpt fucom pop cmp xor add xchg push (bad) mov and mov mov rex.WB push or scas cmpl ja and sub lret sub addr32 cli nop mov and add or fildl xchg mov or cmpsb rex.RXB rex.WR (bad) sub (bad) xchg mov (bad) shrl fcoms sbb (bad) addps xchg (bad) xchg and xchg (bad) enterq (bad) mulb movsb xor add lods imul or mov nop jl mov (bad) fdivl mov lcall sti rclb push pushq rex rex.W callq cmp jg or movabs (bad) movslq xor test out pop sahf mov push xor xchg test cmp out rex.WB cmp (bad) rex.WB and nop imul rex.WR movq cli sti pop (bad) adc scas rex.WRB enterq sub jp push in mov xor adc leaveq mov (bad) sbb rex.X rex.WB pushq rorw or rex.WB and and movabs xor add rex.B fs cli fnsetpm(287 mov out push cmpsl jne rex.WB (bad) stos mov pop retq pop insl mov sub lock push pushfq pushq divl jbe cmp (bad) lock rex.RX and add stos test icebp xlat cmpsl movabs rex.WB (bad) sbb (bad) shrl pop pushfq fs or and neg loope jp or push (bad) jrcxz test (bad) fsubrl and pop pushq out fnclex mov or cmp js outsb mov out mov adc (bad) (bad) cmp add gs fsubr push sub movabs fsincos xor cmpsl (bad) adc addr32 in (bad) rex.RB (bad) mov mov rcrb pushfq roll cmpsb mov jns xchg cmp push rex.WXB pop pop shlq lock cld sbb movabs popfq rex.WX (bad) movabs andl callq (bad) negb pop fnstenv mov (bad) mov pop cld sub add (bad) (bad) push vmovdqu notb stos push addr32 (bad) fmull jae or test rex.XB repnz jmp jbe loop push (bad) cmp out add callq sbb test repz xlat pop mov (bad) out leaveq clc and in xlat lret sub pushq mov movslq rex.WR mov sub xchg cmp or and rex.WX mov pushfq mov enterq leaveq out push or xchg fwait pop ficomp (bad) out int outsb cmp xchg rex.B rex.RX rex.WR es sbb rex.WXB stc std pushq rex.WRXB repnz in gs pushq int3 jo scas (bad) je pop adc loope pop std repnz push xchg or rex.WB rex.WRXB cli push rex.WB rex.X decb (bad) pop int3 mov push pop xchg rorb xorl xor (bad) lods (bad) rex.WB pop or movslq rex.WB ds cmp cwtl int or sbb rex.WB mov (bad) sub lea mov in jnp cmp leaveq mov icebp mov orb sbb rex.WB add (bad) pop vpmaxub addr32 movslq rex.WRB repnz xor (bad) (bad) loopne xchg rex.RB rex.WB mov (bad) rex.WB mov mov pop movabs sub or ds adc rex.WRB fcoml push mov rex.WRB jns pop sbb rex.WB cld vpshld fmuls sub rex.WB cwtl rex.WR out in mov loop jns sub shr in mov pop repz mov int3 rcrb push (bad) rex.W cmp stc out pop add and jnp xlat rorl or sarl push pop rolb lret loopne pop rex.WB pop addl out cli and rex.WB mov popfq pushq fldl xor mov retq mov jg mov imul test push cmp ror mov callq rex.WB mov in (bad) (bad) test sbbl cli sbb (bad) push push xchg add mov repz (bad) out jbe sub (bad) push mul or mov xchg stc rex.RX jae and sub cltd (bad) push xchg add pop scas rex.RXB ss xchg fnstcw cmp test ja jno or gs mov add int3 jns outsb lret sub sub rcr pushq rex.RXB test lock push cld mov mov push rex.WR rex.WB push and mov xchg movslq mov enterq iret pushfq cmp lods rex.WRB adc jnp (bad) jmp (bad) cmp cmp sub (bad) (bad) (bad) xchg insl cld out sbb movabs shr sbb (bad) and (bad) out pop fwait ss rex.WB pop stos xor xchg pushq (bad) int push (bad) rex.WXB add (bad) rorb pop xor mov xchg rex.W sub mov mov rex.WB cli cmp (bad) adc jmp in add mov in loopel out push repz push fisubrl pop cmc movslq rex.RXB jle pop repz outsb test (bad) sti rex.WB insb enterq adc movabs callq negl mov sub and sahf add sub pushq (bad) (bad) add rex.WR idivq (bad) fisubrl fldenv movslq push leaveq imul rex.X push sbb jmpq rex.R fbld sbb (bad) ja sbb movslq mov incb (bad) cs rex.WXB fchs rex.R rex.WRXB fildl mov imul ja mov sbb sub or pushq movabs popfq (bad) callq mov repz (bad) leaveq jbe rex.WRB push jrcxz out lods fdivrp imul (bad) push xor cmpsl (bad) mov (bad) mov mov mov add (bad) or rcll (bad) rex.X rex.RX (bad) sbb imul nop jo icebp and pop (bad) (bad) mov rex add mov and int3 and rex.XB rex.WX sarl mov or testl rex.RXB mov (bad) lahf jmp pop callq (bad) (bad) mov pushq lea imul scas sub icebp cmp cmp mov cmpsb ss (bad) rex.WB push (bad) pop sbb add cmc stos (bad) cmp sub cmp cwtl xchg or je lods mov imul outsb mov xor xor jbe xor rex.WRB mov xlat jp rex.WB mov jno mov or adc adc jbe (bad) xor rex.WR rex.WRB pop lret movsl fistpl and fs rorl clc (bad) rex.WB orl rex.WB mov rex.WRXB movsl xchg out adc mov jrcxz add push scas add rex.WB mov cmp mov pop loopne fisubl (bad) pop in jns rex.WXB cs rex.WB push (bad) pop in loopne (bad) repnz rex.WB mov rex.WX push (bad) insb in adc repnz sub (bad) jge lock (bad) rclb in rex.RB sub out (bad) lods pop sti mov rex.RX mov xchg movsb out pop shlb popfq pop xlat (bad) mov fiaddl pushq mov rex.XB or int3 sub or mov test (bad) push cmp cmpb out rex.RX retq push js (bad) (bad) movabs ja retq pop scas adc cmpsb cmpsl jbe xlat (bad) cmp mov push mov rex.XB andl add repnz pop mov rcl insl mov int3 movslq lret cmpsl xchg adc jae out mov jg push (bad) rex.WXB or jae xchg lret mov add out mov mov adc adc add sub and callq jnp movabs jl or pop lret (bad) adc rex.WB imul (bad) in add jno jbe (bad) je leaveq stc adc xchg or repnz adc hlt or leaveq cmpsb rex.WX lahf out (bad) push iret incb (bad) cbtw fsubrp jmpq mov mov insb out add cmp adc or rex.RXB (bad) cwtl rex.WB cs pop test jae sbb add (bad) pop rex.WB rex.WRX jno rex.X cmovns mov (bad) rex.WX xchg jbe xchg test orl (bad) xchg jmpq test or movslq mov cld mov int3 pop adc push sbb pushq xchg rex.B movabs int3 mov or stos rex.RB rex.WB movsl mov xchg rex.WB andl ffree mov mov (bad) out out rex.WB and sub mov lods in rex.WR pushq mov enterq cmp movsl push (bad) pushq addr32 pushq pushq scas rex.WXB or (bad) (bad) and and push rex.R rex.RB rex.WB mov fistl cmp rex.WRX fs (bad) jnp out sbb (bad) flds (bad) sbbb pop movabs (bad) mov add rex.RX icebp out fsubrl and xor rex.WRB push (bad) addr32 rex.WB pushfq jno xchg pushq loope test rex.X popfq icebp add loop jne push cmc jb fsubs (bad) js (bad) repz xchg cmp movabs rex.WX or callq gs (bad) out mov frstor je (bad) (bad) fiadd mov ja,pn rex.WB or cmp lret add std sbbl xchg test fidivl cld (bad) leaveq sub sarb movabs imul mov jae (bad) jnp jrcxz cmpsb (bad) (bad) pop rcll push rex.RB xchg rex.WB scas stos (bad) add xchg ficomp rex.B rex.RB (bad) rex.WRB addr32 rex.W push rex.WRXB (bad) movslq in xor rex.WXB xor or rex.WB mov in rex.WRXB addr32 (bad) xchg pop rex.RB cwtl xor rex.WB rex and data16 test (bad) (bad) mov or callq subl out negl rex.WB cmp pop add shll sbb xchg mov xor rex.WB movabs jns push clc retq (bad) shll cmc loopne rex.WB movsb and pop fstpt or loope cmp rex.RX push clc fs sbb adc lret movslq movabs and rex.WB out int (bad) (bad) (bad) xor icebp and retq movabs popfq int mov (bad) sbb fldenv mov rex.WRX adc in rex.WRB rex.WB adc (bad) xor cmp xchg add in test in rex.WXB btc jno fstpt mov out rex.WB ds cli pop js cwtl lret (bad) jno xchg jne sub xor jrcxz (bad) mov add pushq sub xchg add and jle movabs test icebp (bad) in adc insb add pop xchg cmpsb xor mov pop rex.WB rclb rex.RB rex.XB rex.WRB rex.WR rex.RXB (bad) rex.WB movabs push cmp pop xchg rex.WB xchg insl sub pop rex.WRXB xor pop cmpl pushfq rex.WB rex.WXB rex.R add sbb jrcxz imul cltd pop outsl sbb (bad) (bad) add adc shlb sub mov loopne and (bad) push in pop cmp push fstps int retq rex.B stc and cmovge loopne cwtl xchg in and iret cmp sbb cld add es stos jp pushq pop (bad) add rex.RX movabs (bad) (bad) mov insb (bad) int3 cld std (bad) mov cmpsl pop rex.WRB (bad) rex.WB es rex.WX and rex.WB rex.RB rex.X test xchg jbe rex.R fiaddl (bad) rex.WRXB mov pop or pop sub lret jnp xchg cmp push sub cwtl gs and fnop cmp pop (bad) out ficom callq add cli rex.WRX push sub stos jmp or fxch fdivs fidivrl movabs sub imul pop pop jg movabs xor (bad) rex.WRB (bad) xchg pushfq jbe icebp push popfq pop jns mov (bad) xor rex.B lahf lods push fbld or mov or sub pop pushq mov (bad) stos cmovnp nop cmpsl fild (bad) rex.X rex.B rex.WXB (bad) push leaveq callq and pop rex.WR ja in (bad) sub xor jle jnp rorb movsb pop xor pop pushw (bad) push rex.X xor out rex.R rex.WRXB movsl (bad) and imul mov jmpq push movabs (bad) hlt cmp pop add adc add mov xchg (bad) (bad) jle mov rex.WB mov imul adc add mov ficompl sbb hlt rex.RB xchg insb rex.WB nop insl xor adc bnd (bad) sbb addr32 cmc mov rex.WRX fabs rex.WXB adc (bad) xlat rex.WB sbb imull pushq setnp xchg lods pop or rex.WB fmulp (bad) rex.RX or (bad) data16 pop movabs scas fmull (bad) push rex.B movabs ss lret shl mov ljmp cmp and pop cmp in mov je rex.WB gs out insl sbbl sarl xchg in rex.WB ficoml rex.RX pop movabs push (bad) pop sbb mov hlt jae (bad) sbb cltd xor (bad) (bad) jb movsb mov sbb push lahf add movsl pushq mov (bad) and or pop sub rex.WB repz rex.WRX rcrl stos movsb rex.WB pushq pop callq mov mov push insl pop ja or rex.WB fcmovb fs mov movabs je push add fisttpll cli ds sbb stc sbb cld (bad) and add sub movabs xor rex.WB stos rex.WRX (bad) push movsb mov jmp frstor (bad) stos (bad) imul rex.WB cwtl fild int3 (bad) mov sarl int stc add (bad) lea fs test fistp (bad) mov xchg push mov out lods adc outsb ds rex.WX pop cmp (bad) pop push (bad) hlt pushq xchg retq outsb jbe stos std cmp sub jae push adc push sbb retq rex.WB insb jnp or rolb addr32 rex.WXB cltd (bad) mov (bad) (bad) (bad) mov adc fbstp pop adc and push pushq xchg stc imul jno cmp sbb sub pop sarb sarb shr jmp add sarb sub repz cmp rex.W pop callq jno movb mov insb fwait rex.WRB outsb sbb pop (bad) adc xor push imull movsb jge xor repz lret (bad) pop rex.WXB movabs or movabs std sbb fldcw retq cs icebp iret gs cld lock fcoms adc sbb sub stos or pushq or adc sub rex.WR fistpl mov lock test and or sub cld mov mov loopne xchg cmp (bad) or (bad) test in xor (bad) loop and rex.WX out in or xor mov mov shl movabs fistpll int movabs shrl movslq (bad) sbb popq mov rex.RB rex.WXB push rcrl movsl add pop ljmp cmp callq cmp xchg data16 jl,pn icebp rex.WRX push rex.WX lret (bad) jns push fdivrs rex.XB jge pop rex.WR loop lret push (bad) cmp mov out sbb movabs jge fwait jnp (bad) test in enterq adc xchg and and (bad) pop or push decb xchg or pop mov mov ja push lock push enterq callq mov fsub rex.W cmpsl rorb jmp sub fadds jmpq xchg pop sti sbb fs repz xchg adc mov pop ss rcrl sbb loopne ja sub or stc pushq in and sbb cltd ficoml mov nop mov adc adc mov cmc in test jge divl mov cmc data16 and rorb fdivs scas (bad) add sub lret movslq (bad) (bad) movsb sbb cwtl mov rex.WR rex.R rex.RX xchg lock rex.W or out rex gs or retq xor out add pushfq xor repnz iret pop (bad) (bad) js (bad) gs adc movsl fs in mov scas lods (bad) imul (bad) retq mov loopne movsl cmpsb in sub lods rex.RX outsl cs push adc popfq sbb (bad) loope add add cmp in stos add pop enterq mov xchg rorl lock fchs (bad) outsl sub or pushfq rex.WXB pushq stos callq (bad) mov loope sub (bad) lods (bad) xor cmp (bad) ds sub (bad) (bad) cmpsl push add mov jo pushq mov shll int3 mov or xchg adc (bad) adc hlt (bad) sub rex.WRX int mov sub jns pop loop cmc in rex.R (bad) rex.WB sub (bad) sub mov sbb lock mov rex.WRX (bad) pop push mov callq mov movabs std sub hlt mov (bad) and push xor jae jmp fs movsl rex.WRB (bad) sub xchg adc pop int rex.WB add lock (bad) hlt jo (bad) adc (bad) movsl (bad) rex.WX test sub fsts (bad) gs imul je push jae jrcxz test (bad) sub mov (bad) (bad) add xchg (bad) jbe movabs cmp enterq mov mov jge adc in mov cwtl imul cmpsb xchg retq scas (bad) sub add sub lret jle xchg sbb movsl fildl or jae cmp pop rex.WX out xor stos adc (bad) (bad) out xchg jge nop or mov gs shr lret pop mov insl or in jo jg (bad) loopne rex.WR jrcxz (bad) (bad) rex.WB (bad) stos xchg fdivrl outsl stos sub loope gs enterq rex.R rex.WB sahf fistp sbb (bad) jg fcom test (bad) jb stc rex.WX (bad) lret out cs xlat addr32 mov (bad) sbb outsb adc rex.X fcomps pop out repz rex.WRXB stc movabs fwait rex.WB jp (bad) rex.RXB adc add rex.WB pop mov sub fadds xchg pop out roll out repnz rex.WRB xchg rcl xchg pop jl cmpsl fildl push (bad) ja pop mov scas push jbe ds rex.WRXB cmp or (bad) ficompl fsqrt fs cmp sahf clc pop pop push sar (bad) fiadd (bad) mov jle mov or retq (bad) pop mov mov movabs rex.WX rex.WB xchg (bad) and and xchg push out in out rex.RXB push fmuls stos callq mov push (bad) add (bad) mov icebp pop movsl sbb pop outsl pop fsubs and (bad) mov rex.W rex.XB stos loope outsb rex.WB push push idivl rex.WRB rex.WB mov add (bad) mov adc movsl js jae rex.WB xchg jge mov mov out rex.WB adc cmp sbbl mov mov rex.WB or adcl rex.WB or es rex.RB pushq rex and xchg adc fsubr xlat (bad) pushq add icebp (bad) mov mov mov ja cmp pop or mov push push and (bad) frstor rex.WXB and xor cmp andl rex.WB mov sbb mov stos test cld rex.WRX rex.WB or (bad) std mov cmp xor cmp rex.WB jmp mov rex.XB fldt (bad) movsl lret repz (bad) ss (bad) jo (bad) and mov rex.WR rol fcompl negl icebp out adcb mov movabs imul mov (bad) jae pop xor leaveq mov cmp (bad) lods sbb or mov (bad) test push pop mov movsl rex.XB repnz movabs vmovq retq sub (bad) lret pushq data16 cmpsl mov (bad) (bad) (bad) and stos rex.WX rex.RB adc (bad) (bad) jnp stc pop lahf (bad) scas rex.RXB leaveq rex.WB rex.WRXB (bad) callq mov and sub jle lods pop cmp sub xchg xchg cmp pop rex.XB fwait mov rex.WB jnp jg movabs mov movabs (bad) rex.B add adc (bad) movslq jno mov subl imul xchg (bad) sub movslq cs jmpq and test enterq xor (bad) fs rex.WR (bad) (bad) test outsb sbb rex.WRXB rex.WB and sti rex.WB (bad) sub (bad) sub (bad) sub lock jns push movslq push mov sbb movabs pop xlat rex.WB add addr32 add sub (bad) jmpq sbb (bad) fcoms or sub rex.WB lret rex.RX gs xchg jl retq jmpq rex.WRB mov xchg pushfq mov mov imul movabs mov fldcw jno cltd (bad) or mov and vpshuflw jp adc jrcxz or lock sti callq pop movabs rorb and and clc out stos add (bad) in rex.RB rex.XB adc outsl mov cwtl (bad) push cmc xchg rex.WRXB (bad) rex.WB mov xchg rex.WB lock push shrb mov lret (bad) pop cmpsl add jp rex.WB pop outsl cli mov mov mov adc xor jrcxz sbb cmp popfq xchg out xor mov pushq jns or rex.WB enterq leaveq lock mov push xor rex.WRXB rex.WB mov mov lret add mov sub (bad) (bad) movabs mov leaveq (bad) rex.WB mov (bad) (bad) outsb lea cli rex.W xor retq sub je or jae mov sub (bad) cmp insb nop xor rex.WB (bad) mov mov retq imul push cmp rex.R mov jmp notb sbb jne loopne out sub or loope jo (bad) lea test cmp sahf mov insb cmpsb mov (bad) pushq adc sbb mov or cwtl or (bad) rex.WRX movsl (bad) test rex addr32 adc or jge flds mov leaveq jmpq test cmp rex.X movsb vmulps jno (bad) js rex.RB fwait rcrb push rex.WB rex.WRX fwait sbb xrelease es clc rex.RB rex.WXB stos movabs xchg mov fwait and (bad) sbb insb cmp sbb and pop clc movsb (bad) xor (bad) sbb sbb xchg rex.WXB movabs cmp and pop add jb repnz or xchg and (bad) je pushq rex.WXB (bad) rex.WRB rex.WB rex.WXB pushq ja xor rex.WB xchg pushq (bad) rex.WB cmp mov push and cmp test xchg add loopne rex.X callq mov data16 push rclb lods (bad) and mov rex.WB (bad) jae rex.WRX (bad) sbb repnz test xor rex.WB jmpq orb xor mov adc stos rex and cmp movabs pop movslq or sbb fiaddl (bad) (bad) movabs out int3 rex.RXB shll pushq je rex.WR lock xchg jb movsl cltd xchg jno push movabs or rorl rorl cmpsb loope rex.W fwait leaveq outsl add cmp xor add adc xlat (bad) data16 repz (bad) rex.RXB fucomp and (bad) rex.WB (bad) mov sub test (bad) cmp mov sbb (bad) sub xor mov mov movabs iret jl (bad) xchg (bad) fadds mov adc pop movabs rex.B (bad) rex.X test push sbb rex.WR rex.WB imul add push rex.WX cmp rex.W add lret movsb (bad) movabs cmp leaveq or xchg jrcxz mov xor stc lahf gs cmp movabs pop sbb mov movabs ficoml sub rex.WRX test pop and rex.WRXB mov cmpsl jnp loopne cld icebp push and (bad) pop jne fnsave push push callq rolb jbe or mov or push xchg (bad) push rex.B pop rex.WB (bad) mov fbld rex.WB adc jne rex.RB hlt xchg (bad) loope mov shrl in (bad) or xchg outsl push rex.WRB rex.RX and in movabs ja rex.WB movsl mov out (bad) (bad) jp rclb sbb push (bad) addr32 mov push (bad) rex.WB (bad) lods sbb out xchg mov pop (bad) callq retq xor sbb jg gs (bad) (bad) (bad) jmp sub or rex.RB enterq pushfq movabs int3 mov jb pop sub hlt sbb sub jo and rex.R rex.X mov (bad) rex.WB decl mov or int mov and xor pop nop mov rex.WB imul out or stos (bad) rcrb xchg movslq (bad) fstps lods rex.RXB sub jp rex.XB jrcxz jg addr32 addr32 jns jb movabs rex.XB lret ja (bad) rex.WB fs xor mov push xchg test cwtl (bad) cmp rex.WB cmp mov xchg (bad) sub cld addr32 sti mov rex.XB rex.B mov cltd jae ror mov jo rex.XB (bad) jl lret mov stos rex.XB or fistpll rcrb (bad) (bad) rex.WB jg js out push rex.WB rex.RX or shr sub (bad) movsl movabs pop rex.WB push movabs (bad) adc push or sub sarb (bad) jns (bad) and movabs (bad) lods rex.XB xchg xchg adc data16 jge jo jp sbb (bad) rex.XB movabs (bad) std callq cmp cli lahf rex.WRB add push (bad) xchg gs xchg mov mov (bad) (bad) rex.WRX (bad) cltd add sub (bad) iret adc rex.RXB or clc (bad) lea cmc rex.WR cbtw adc fcomps test imul jmp jbe xor jb in (bad) sbb data16 mov xor adc mov fidiv sub jmpq rex.WB rex.WRB (bad) jae data16 popfq push rex.WR mov loopne data16 fwait addr32 lret sar sub xchg (bad) rex.WB rex.R jmpq mov rex.WB adc sbb rex.WB sbb repz data16 add and push pop push in rex.WB rex.R callq lods rex.RXB sti cmc (bad) (bad) mov pushq test push sub rex.WRB sub xchg cld fsubrl rex.WB pop scas rex.RB stos jg add in adc sbb mov or rorl retq rex.W rex.R (bad) or movabs retq (bad) xchg (bad) enterq rex.WXB fadd rex.WB ds imull sbb rol mov and fwait (bad) out rex.WR stc pushq sbb rex.WB rex.WRXB bnd fst push rex.WB pushq adc rex.B outsl rex.WB mov mov movabs not pushfq jmpq addr32 sbb xchg lea (bad) int out out xchg negl movslq retq cmp rex.WB lock leaveq rex.WB xchg rex.WB rex.WX jl (bad) jns movslq mov adc mov mov pop jnp (bad) fisubrl jp int (bad) rex.WRXB pop leaveq mov callq xlat ss outsl lret (bad) jge mov (bad) push data16 int3 mov movslq or lock sub cmpsb rex xchg rex.R rex.WB lret sub mov lret rex.RX lea stc xchg rex.WRB add xchg imul mov or out rex.WB mov mov imul out jmpq or int (bad) test adc (bad) stos xchg xor rex.WB rex.WRB movsb (bad) data16 fisub (bad) jno mov rex.WB sahf pop rex.RXB xchg xor rex.WB jbe xchg rex.WB out js cmpsb (bad) fld movabs (bad) rex.WB scas rex.R fldt pop loope lret jns insl rex.RX adc fmulp rex.WB rex add es mov push push loop rex.WB (bad) callq add clc pushq rex.RXB and mov push movsl loope sub fcoms push (bad) stc (bad) (bad) fs adcl mov sti jo rex.XB add rorb jle (bad) fildl jrcxz and (bad) sbb cmp and xlat subb or rex.WRXB fcomip jne (bad) xchg (bad) add rex.WB rex.R xchg rex.WXB rex.WB lods mov in loopne xchg movsl jle loope mov es pop je adc nop rex.W xchg jmpq roll pop sub (bad) addr32 rex.WX (bad) cmp (bad) imul mov or cmp mov jl jrcxz stos popfq (bad) test and lock jle sub rex.XB outsb je xchg xchg std (bad) jp mov or xor divl in rex.W (bad) lahf rex.WB cs xlat fisub mov out fldenv add mov je loop push cwtl adc xor loope sbb (bad) andl (bad) jle sub xchg sub cmp enterq pop add or pushfq pushq rcrb lods rclb rex.RB sbb retq rex.X sub test callq xor or mov rex.WRXB cld fucompp out (bad) jb pushq mov out retq lods xor mov add mov movabs rex.W jrcxz (bad) push (bad) movsl fs cmpl (bad) mov sub rex.RXB mov (bad) iret test pop imul icebp adc in adc fs pushfq mov mov add insl add gs add add jno ficomp lods pop xlat xchg (bad) jne movabs pop repz mov pop jl loope sub cmpsb xor data16 scas icebp rcrb retq or (bad) nop xchg cmpsl imul mov test gs rex.B sub xorl (bad) and rex.WB stos movsb (bad) sub pushq sub rex.RB rex.WX add out jge pop movabs movabs insb adc insl shrq adc cwtl mov mov sbb push xor cld adc (bad) rex.WB fwait adc pop loope mov (bad) xor adc (bad) pushq fcoml (bad) (bad) out xchg mov rex.WRXB rex.RX enterq jnp rex.WB xchg loopne (bad) cmc (bad) out fwait pop xor pop cltd (bad) lock rex.WB adc jmp add xchg shll leaveq push mov or rex.WRB or mov (bad) push hlt jg callq mov xchg xor push pop cmp jg shrl pushfq imul pushq jbe lods jnp push jno rex.RXB (bad) mov adc and int3 (bad) mov rex.WR (bad) xlat and es or mov movabs fdiv cmp pop (bad) and (bad) fxch rex.B rex.B cmp mov rex.WB data16 pushfq mov mov test rex.RX sub mov (bad) pop (bad) pushfq rex.RB lods loope retq pop cmp and jmpq fs fnstsw mov add ljmp out xor and push xchg rex add and incl outsl callq push adc rex.W movabs or push lahf rex.WB xabort add movabs xor hlt (bad) outsb callq adc sub xchg orl pop loope (bad) xor test rex.WB rex.WXB rex.WB rcr xor cli cmp retq add cmpsb sub xchg test mov or mov mul cmp popfq loope mov (bad) pop xchg xchg imulb mov mov rex.WB (bad) jmpq pop jae push and mov rex.WB rex.WX rex.WRX add (bad) xor or (bad) divb sarb xchg decb fld1 mov adc rex.WRX rex.RB rex.X rex.RXB cli sti fisubl movabs (bad) adc adc rex.R movabs cmpsl add xor adc mov or rex.WRB sub loopne mov and test jmpq callq xlat addr32 out pop (bad) cmpsb notl push push (bad) jp rex.WB scas popfq mov leaveq scas jne mov out push push mov pop neg lea (bad) xchg jg mov sahf (bad) adc scas pop adc add and test (bad) xchg push (bad) mov movabs jle push jg sti mov mov sbb mov in jne rex.WB repnz or hlt lods rex.WB mov out pop fisub test repnz in push shl enterq rex.WX push fs (bad) callq scas jo (bad) adc rex.XB data16 stos push jae retq rex.W cmc movsl callq je pushq or mov stos pop or (bad) rex.WRX fsub hlt movabs out callq sub and xchg xchg mov rex.XB rex.RB cs pop push and movabs (bad) mov and jne out rex.WX xor add lret (bad) fldcw data16 jmp rex.RB fs cmpsl mov jle shrl addl pop shll lods jb rex.WB mov push (bad) rex.WB rex.RXB mov fidivrl (bad) cmpsb clc rex.R in rex.WB (bad) mov sbb cmc lret mov (bad) cltd imulb mov or or pushq pushq pop mov sbb loope lea rex.X movsl pushq in rex.WRX rex.WB (bad) (bad) sbb cmpsl hlt xchg movabs rex.WRB mov rolb xchg add push fisub cmp rex.R (bad) out rex.WB in mov rex.WB mov push mull rorl (bad) insl pushfq movabs or xchg xchg pushq rcrb or rex.WB movabs xor add rex.B rex.RXB (bad) std (bad) callq push mov adc jae mov or adc and and xor (bad) (bad) push push cmp (bad) leaveq cwtl and add mov flds push fmull test or rex.WB add jns (bad) rex.WB cmpsb rex.WRXB ja jno push icebp rex.WX jo outsl gs jle repnz out insl push movsl xor loope clc sub adc (bad) rex.WB add jb popfq rex.WRX (bad) cmp push retq cmpsl (bad) in sub pop fbstp cmc adc outsb rex.WB imul adc nop in jae in mov rclb (bad) data16 (bad) and cmp xor ja or clc jmp cmp rcrl or decb xchg je int3 cs xor ss callq xchg shrl add (bad) in shl cmpsl callq stc (bad) push xchg (bad) stos jns retq movsl lahf lock mov (bad) int jmp test movslq jle movslq pushfq vorpd mov movsl (bad) xchg rex.WB outsb (bad) fxrstor sbb cltd jp popq mov retq or mov imul callq cmp movslq (bad) xor jge lock push xor insl pop sbb rcrl ss fiadd xor xor (bad) addr32 lods shlb rex.WX add and jno fstps movabs je (bad) out sbb (bad) pushq xchg mov gs jne sub pop pop pop jl push lret jb rex.WRXB sub add and xchg stc (bad) (bad) push cmc mov (bad) jle addr32 mov add rex xor xchg (bad) xor cmp stos (bad) mov out push repnz jbe sbb jo xchg pop jp rex.RB xchg lret shll push (bad) test es rex.WB rex.W rex.WRXB addr32 rex.WB mov or fucomp insl fnop and rex.X jb,pn (bad) lods mov jp (bad) mov sbb rclb out pop loope and xchg (bad) pop pop fs jbe add ljmp rex.WB (bad) mov rex lahf mov mov enterq xlat adc add and (bad) xor (bad) je loop pop imul imul rex.WB (bad) jns insl jnp callq test callq repnz (bad) lahf pop rex.W mov pushq movsb xor push mov test and lret xor jns rex.WR or std mov movsb rex.WX xchg jle sub xchg xchg rex.B (bad) gs cmp popfq icebp rex.WB (bad) xor jmp test rcrl or imulb subl adc rex.WXB pop (bad) xor test loope je loop callq push ja mov rex.WR (bad) fs pop jl and cmp xchg push xorb rex.WB gs jae cmpsl data16 pop (bad) pop pop cld xchg (bad) adc orl add roll imul (bad) or rclb or mov movabs lea in or xor mov fadd int3 add rex.R rex.WX and mov cmp xor insl adc xchg cmp add cmp mov rex.WXB insb (bad) xor rex.RX lods fstpt jo movsl fdivrl rex.W cwtl mov retq xor mov mov test out mov out rex.XB xor sbb es jno sub std (bad) je lret addr32 in jae movabs in rex.X rex.RB (bad) lock (bad) or retq sub and push lret adc sbb retq jns (bad) incl outsl pop or and repnz jg out test int mov adc (bad) pop leaveq fucomp fsts movabs notl and and (bad) in sub (bad) mov out enterq mov fistp add add mov negl movabs jmpq loopne pushq add fcompl rex.RX lret pushq (bad) (bad) cmc xchg add sbb decb mov out jle pop push jl rex.RB lahf retq (bad) fs rex.XB idiv adc sub lods mov jrcxz (bad) fildl popfq movabs and sbb xor xlat or (bad) lea int add rex.RX cmp push sub xchg fldt xchg mov jp rex.W rex.RB stos movsb jrcxz mov int iret adc and lahf stos jmpq or je push rex.WX imul cs mov jrcxz and xor rorb rex.WX cs rex.WXB cmpsb mov movabs retq (bad) (bad) callq sbb insb mov pop stc jmpq sbb (bad) or cltd (bad) rex mov rex.WB in jmpq pop jb mov xor rex.WB or popfq imul movabs jns cld pop sub movabs sub adc (bad) mov scas mov sub int xchg jno sub hlt rex.X xchg int3 sbb xchg rex.WB lea pop or pop or ja icebp mov pop rex.W rex.WRB xchg retq cmp jns sub push rex.WX sub xor clc (bad) mov push movabs pop jp stos out callq rex.WB jle cmp (bad) in push movabs sti out cmp out rex mov and xor lret (bad) (bad) jae movsb sbb mov movabs stos stc xchg pushq sbb je jmp lcall scas cwtl xchg callq negb shl (bad) rex.WB adc rex.WB lods fisubr cmpsl rex.XB movabs (bad) xchg rex.X (bad) scas add xor outsb imul rex.WR rex.WRB sub (bad) rex.WB sbb movabs mov (bad) pop nop or fbstp xor out cmp hlt leaveq pushq mov push rex.WR push nop data16 loope callq rex.WB adc (bad) and rex.WB (bad) not in outsb (bad) push cmp or rex.WXB pop ja out sub loope pushfq fmuls in add or rex.WB sahf (bad) icebp movsl sub (bad) rex.WB insb test and loopne out fldenv rex.WRB addr32 mov (bad) leaveq sub add leaveq jl or xchg and xor outsb cmp xchg xchg cli push cmp pushq subb fcmove (bad) stos (bad) push sbb xchg rex lock rex.WB lret jae lret es movslq push test (bad) (bad) cmp pushfq lahf rex.WB (bad) xor sub pop and out and sub pushq mov adc pop push repnz rex.W leaveq in cwtl xchg pushq (bad) (bad) lods cmp rex.WB addr32 not mov sbb rex.W cmpsb (bad) pop (bad) mov fcomp in pop lahf xor test sbb sub (bad) xor (bad) cwtl rex.WB xor pop pushfq (bad) rex.WRXB rorl stc rex.WB jle cmp xchg insl cmpsl rex.WB nop push loope addb rex mov xchg cmpsb mov (bad) scas mov je or adc push sub jb insb retq add push (bad) adc jbe es and mov xchg (bad) cmpsb clc icebp cs pushq imul out fwait out adc iret rex.WB pop es sahf jmpq fwait scas rex.WXB nop rex.WB (bad) lea mov sub xchg clc lods or cmp mov adc jae rex.WRX or test pop (bad) outsb movsl xchg rex.WRB jp (bad) rex.WR cmp sub cmp movsb mov mov lods fnstsw push rex.B sti push jae int jno pushfq addr32 xor sub jmpq test rex.WX rex.WRB (bad) adc fwait (bad) sbb jnp pop xchg (bad) mov (bad) fisubl popfq iret lods or cmp fadds (bad) (bad) (bad) mov push rex.RXB (bad) test icebp loop jle adc rex.WB and (bad) sbbl popfq mov (bad) cmc cld sub mov rex.W movabs cmp jne cmp outsb xchg (bad) and pushq sub adcl pop push xchg xchg out in fwait movslq push stc fwait rex.XB pop test enterq in sub cmc cmp mov movsl pop iret rorb (bad) rex.X (bad) and movabs rex.RXB xchg xor xchg cmp fdivl (bad) pop mov mov loop movsl lret (bad) sub push add cmc mov jns js jge mov out movabs add jp sbb test rex.WB adc xchg xchg (bad) pushq xor scas rex.WRXB mov jnp rex.WB outsl callq xor popfq adc xor cltd cmp push cmpsl sbb rorb cmp jbe rex.RX scas in enterq popfq js cli imul mov (bad) cltd gs nop rex.RX (bad) xchg mov push (bad) cs rex.B rex.WX (bad) sbb pushq lock jnp (bad) out xchg pushq (bad) jae iret xchg jg stos (bad) out jne xlat repz sbb sub adc rex.RXB mov cmp add addr32 sub mov or rex.X xor mov (bad) cmpsl fidivr mov jmpq rex.X mov cmp (bad) (bad) pop stos icebp sbb rex.WX pop pop or addr32 movsb pop add outsl (bad) xor fcompl (bad) or mov lahf (bad) shrl cmp (bad) stos loope out rex.WX (bad) xchg ror repnz callq movsb movslq mov or rex.WRXB scas mov shr and sbb sub lret xlat in xor xchg rclb xchg rex.WRB fcomps negl sbb sti fs and mov in xor cmp rex.WB or adc fcomps rex.WB cmp add fbstp and (bad) adc enterq in rex.RX cmpsl (bad) divl rex.X movabs mov xor sbb jno int3 (bad) jrcxz sbb rex.WX (bad) push rcrb jle orl cmp (bad) rex.WRB rex.B rex.WB ficoml rex.WB loop andl adc xchg retq sub add mov pop scas (bad) insl (bad) xchg adc fmuls jge loop xor cmpsl pushq jb fs sub jle lret retq (bad) callq jp in xor jae jle jb pop pushq and mov cmp mov rex.WB xchg shrb fs cmp adc mov (bad) (bad) in cmpsl repz (bad) fistp xor mov shrl mov subl iret pop jnp rex.WB int test movslq rex fldenv (bad) jns fnsave (bad) movsl movabs rex.RB std mov push jmp pop rex.RB out push in sbb ds cmc xor movslq xor adc lods scas (bad) jg es movsb (bad) jmpq add rex.WRX jno and cmp decl leaveq jnp stos loope imul mov ror enterq jbe cmp xchg sub stc cmpsb leaveq and mov out (bad) stos mov (bad) sub xor addr32 xor sarb imul rex.WX adc cwtl ror mov sub or movsl addr32 jmpq pop sub rcl xor repz out lret pop and pushq mov sbb jg test xor sub insl (bad) mov jne xor or sub imul and sub lea cmpsl cvtpi2ps hlt mov mov cltd data16 fsubs test or adc xchg cmp rex.RXB gs push push mov sbb lods pop xlat (bad) xchg pushq rex.RB (bad) push cs rex.WRXB rex.WRX (bad) test or adc (bad) ds push loop cmp (bad) cs loop push or push add xor mov rex.WB rex.WB fs cmp callq (bad) or (bad) add js jrcxz xlat rex.WRXB fmul cmp rex.WB mov movabs rex.WX and rex.WB rex.WRB mov retq pop rex.WRB (bad) insb pushq rolb mov rex.WRB in rex.WB rex.W in rex.RX mov int jb jo (bad) push in rex.WB mov add or rex.WRX mov scas rex.WXB add movabs (bad) (bad) rex.WB push andps or outsb rex xchg xchg and lods jp (bad) sarb (bad) gs (bad) in rex.WB sbbb fbld push cld cmp (bad) sub lods sarb cmp and lret rex.RX push rorb xchg cmp and mov xor jae movabs rex.WB int3 rex.RX jno ds mov rex.W rorb add subl mov mov rol fisttp (bad) sub xor in sub test rex.WB in out callq cmp gs (bad) cli adc or rex.RX xchg in mov int3 xchg add nop rex.WRB rex.WB adc decb cmp mov rex.RX or sub adc test and scas push in clc jp add xor cli xchg (bad) mov retq sbb movabs pop insb (bad) outsl pop add jmpq movabs cmpsb xor xor imul js data16 and loopne rex.RX rex.RX rex.WB push fldpi adc cli outsb (bad) jge (bad) movsl xor push test or push (bad) add cld rex.WRXB or leaveq jne (bad) mov and xor push and rex.B leaveq std mov rex.WB outsl jge rex.WX rex.B rex.XB jb mov jbe mov xchg push sbb xor rex.RXB pop cwtl test insl rex.WB sbb out je lods rex.XB and push and mov adc jp rex.WB xor cmp xchg sub jg xor mov push mov popfq and push sub jb rex.X (bad) test (bad) test cwtl xchg movabs outsb pushq loop or adc sbb mov test mov lret stc sub jg std add (bad) (bad) jo xor pop adc loopne push negl or rex cmp xor rex.W movabs out stos rex.WRB push sbb add pop mov mov pop or testl adc (bad) movsb cmp shlb es js or rex.WB adc rex.WB (bad) icebp pop add test je pop push pushq fs rex.X idivl rex.WB hlt (bad) mov mov xor mov sub (bad) pushq rex.WB (bad) rex.WRXB (bad) stc rex.WXB rex.WRX rex.WB (bad) clc subb (bad) rex.WB pop sbb push (bad) jl add cmp rex.WB repz rex.RXB rex.WRX mov (bad) mov stos (bad) cmp xchg and rex.WB movabs cmp xchg sub add xor outsl callq add (bad) xorl rex ss rex.WRX in pop sbb jg push test mov jp movabs (bad) pop fiaddl (bad) rex.WB cmp sbb lods xchg jno nop sbbb cmp int3 or pop sti out (bad) movslq orl scas fiaddl in jrcxz jae cltd adc out jp rex.WB stc sub jo int3 jbe adc rex.B es nop lret addr32 rex rex.RXB rex.X push (bad) push movsb rex.XB callq cmpsl movabs (bad) rex.WB add add rex.WB fwait sahf movabs mov rex.WB gs jp (bad) shlb fwait scas movabs mov scas (bad) test sahf test rex.WR movabs (bad) adc or fnstenv xor pushq iret divb cld (bad) cmp lret cmp movabs shlb callq shrb push sbb sub jbe mov add jg stos stos jle sti insb rex.B xchg add insl rex.WXB fimul xchg bnd cmp cmc popfq gs in rex.WRXB (bad) mov or mov in lret mov jb mov rex.X sbb sahf (bad) loope rcrl pop sbb stos cwtl rex.X pop add rex.WB hlt ror adc cmp rex.WR mov out out sub rex.WX sub sbb xor in xor sub rex.RB xorl movabs rex.RX xchg loope rex.B insw xchg push popfq push int3 callq (bad) cmp es mov xlat xor (bad) fimull test mov shrb sub (bad) rex.WB (bad) rex.WB mov mov shlb repz and (bad) movabs rex.W xor adc fwait pop data16 (bad) push jno (bad) (bad) pop sbb loopne cld rex.WB cmp cmp push lock mov rex.WRB test (bad) rex.W out out repnz outsl movabs cmp pushq mov cli sbb push movsl sub or sti rex.WB push test and rex.WRB subl scas push mov pop rex.X shl xchg xchg sbb sbb pushq push mov orl stos jp and or test (bad) cmp in jg mov xchg nop xchg sbb cmp stos js pop adc sbb xor cmp repnz and idivl rex.RX retq xchg cmp jge push out sbb (bad) mov pop xor jno or (bad) adc mov xor fs mov and (bad) scas or rex.R pushq ficoml out adc mov mov insb fdivs or in stos mov sub in sub pop rex.XB sbb rex.WB ja jmp mov imul hlt push stos cmpsb leaveq cmp mov addr32 cmpl stc (bad) add add xor lods xchg mov ja mov (bad) push rex.WB (bad) mov cmp sub (bad) rex.WB mov stos rex.WB mov outsl rex.WB cli jp movsb cltd adc fwait movslq rex.WRXB jbe push rex.WB mov lret xchg (bad) clc jns fistpl movabs jnp (bad) mov mov cwtd mov and cmpb gs fistp rex.WB shrl xchg rex.WB (bad) adc fldenv loopne enterq (bad) xchg adc fimull and sbb movabs mov cld in fsub rorl pop rorb and adc imul or shrb pop push and sarb jnp cmp pop push mov rex.WB sub jrcxz rex.WB in (bad) sub loopne movabs imul sub callq xchg hlt repnz add or xchg mov (bad) rex.WRB rex.RXB int test xor rex.RB sbb mov mov mov imul sahf cmpsb sub (bad) add sub adc push movabs lock movb movsl rex.WX rex.RB rex.WB rex.W or movslq int push (bad) add iret adc movl fsubrl xchg (bad) sbb mov (bad) movabs fildll (bad) rex.WRXB lahf jle or (bad) (bad) insb out shlb jae push (bad) adc jmp cs movabs adc (bad) and jno jne add (bad) shr (bad) add and ja cld cmpsl fmull out jmp retq callq mov callq add push and insb rex.WB movsb roll mov xchg callq out push enterq cwtl mulq rex.WXB insb (bad) pop push mov and xor lahf sahf xchg push (bad) or (bad) xor xor rex.WB rex.WXB shr mov sbb mov and xchg cmp push cmp mov movsl add and rex.WB xor fadds mov jb cmp and stc rex.WRB adc retq (bad) xchg rex.WB mov repnz (bad) cmp push out xchg xor mov pop rex.RXB (bad) lahf rex.WB mov cmp pop add int3 in mov movabs pop push sbb imul (bad) scas push mov sub (bad) jbe pop rex.WRB push mov xchg jne xor data16 jge xchg (bad) sub lret add mov push mov test mov add (bad) rex rex.WB rex.X adc add (bad) xor outsl (bad) fsubrl rex.RX rex.WB rex.RB rex.WRB and (bad) rex.WB paddq push cmc sbb stos push mov push pop jae rcr xchg cmp mov fucomip fs or sub adc lret (bad) mov gs pop sub subl and jne pop (bad) or (bad) mov (bad) rex.W fisttpll (bad) add sbb jrcxz xchg mov pop mov rex.RX out cld pop sbb jrcxz (bad) and loope or add mov pushq and rex.WB int3 es insl rex.WRXB add sbb mov xor xlat rex.WX adc xchg xchg push cltd sub rex.WB fwait mov (bad) pop (bad) cmp je test pop or rex.WB cmpsb and scas jae rex.WB jl mov addr32 leaveq and or sub mov pop push mov (bad) mov popfq fsubrl rcl sbb rex.WB push rex.WX lahf mov imul sub sub (bad) movabs or test xchg xchg push (bad) lret push sub jae mov test repz rex.WRB mov out (bad) stc pushfq (bad) prefetcht1 lahf loope and (bad) rex.WRB mov (bad) add sub push pop out icebp clc add test (bad) xlat rex.WB (bad) sahf rclb lahf cmc rex.WB movsb loop scas ss cmp fldl adc mov movabs decb rex.WB ja movabs rex mov pop mov sub (bad) push clc callq pop sar (bad) and xor and push lret fstpl outsl loop sub xchg (bad) sarb imul in cmp mov movsl (bad) rcrb repnz sub xor rcll nop icebp stc cmpsl or (bad) stos jle sti jrcxz fldl out sbb mov fcomi xchg iret (bad) and movslq rex.WX add cmp mov sub adc out movabs pop pop mov rex.WRX mov jp and callq test lret int3 jns mov adc pop mov push adc pushfq rex.WR sbb mov or push insb movslq callq test (bad) and cmp xchg rex.RX rex.WXB (bad) in test mov sbb (bad) adcb clc fcomps rex.RX (bad) mov mov data16 jae mov movabs adc adc and cmpsl rex sbb test outsb ds sub imul rex.XB xor es movabs cmp imul movsb and pop cmp mov and rex.WX addr32 (bad) sub clc movl leaveq fadds rex.WRB pop jle shlb sbb push xor rex.WX cmp (bad) out and xchg rex.X cmpsb (bad) push callq mov je (bad) cmp sbb jno sub rex.RX adc scas outsl fistpll (bad) sub popfq fdivrs sub fwait sub sbb (bad) sub or jmpq mov retq cmpsl sub movslq je cmc xor popfq adc cwtl jg adc (bad) mov adc rex.WRX push movabs out rex.RXB out sub cmpsb xor xchg mov xor pushfq (bad) enterq jmp cmc mov test mov flds test orl sub loopne cmc jo cmp and (bad) in scas jae insb rex.WXB or test xor add pop mov rex.WR outsb testl lret pop (bad) (bad) and xchg cmp sub test stos rex.RB mov (bad) xor cmp xor sub rex.WX mov jb or push iret (bad) imul outsb retq int3 mov jne add (bad) leaveq (bad) pop je lahf or out lods loope xor mov stos rex.X rex.RB rex.WB repnz sub (bad) js (bad) xchg xor rex.WR fldcw addr32 and adc adc and sbb jmp mov add (bad) in adc rex.WB lret shrl xchg movabs adc sbb sub mov rex.WRB rex.WB (bad) repz (bad) rex.WB sub (bad) mov mov push out sub fucomi sub jo movabs xlat sub cmp push rex.WR sub in data16 (bad) adc rex.WR rex.WB add out lea mov mov mov fimul es sti pop sbb subl sub mov (bad) (bad) xor mov xchg and (bad) sub adc xchg push xlat rex.WR rex.RX gs cli js callq rex.RB and (bad) lret fstpl (bad) hlt rex.XB stos adc pop icebp in mov cmpsl scas and jmpq and mov xchg xor out add add adc sbb retq cmp jo push std rex.WB or mov fisubl cmp repz push rex.WRB movabs xor jmpq rex.WB and out or movsl add (bad) enterq adc pop cmp rex.RB xchg (bad) sbb icebp rex.WB sbb jp jle rex.WB xor callq (bad) cmp mov rex.WB ds (bad) sbb rex.WB cmpsl movslq jb movabs (bad) pop rex.WX gs push (bad) mov mov jns jrcxz,pn push add jnp pop xchg cltd loop addr32 (bad) lea rex.WB stos sbb callq fdiv pop jnp loope ds clc (bad) mov jge insb xor rex.WB fldenvs (bad) movabs movabs rex.WRB callq mov (bad) rex.B repnz lods or mov mov sahf rex cmp jge mov jae stc (bad) mov imul push sbb mov push pop lret sarb rex.WXB rex.WB movsl fisttp leaveq rorl mov adc mov addl fsubl (bad) jrcxz lahf jbe loop and and or lods movabs ja movabs add movsl add mov and (bad) jne rex.RX xchg sub jns sub adc cmp xor push (bad) rex.WB mov push rex.R mov push test icebp xor add rex.X out and nop mov (bad) adc cmp rex.WX mov addr32 sbb out or mov jbe stos xchg and pushq add jne (bad) mov cli sarl mov movsb js fnstsw loopne (bad) leaveq out mov lahf leaveq stos cmp orb scas retq sbb xchg mov xchg or cs rex.RB rex.WB test jge movabs idiv movabs andb or sub push (bad) mov movsb rex.WX fcoms decl stos xchg or push mov (bad) icebp fwait rex.RB push jbe or fild out lods lock pop (bad) retq rex.RB (bad) xchg callq push roll rex.RX mov rex.XB rex.X jae rex.WB xor rex.XB and or pop icebp int test retq lods jp test orb sub repnz rex.WB (bad) sahf movabs (bad) lret andb and xrstors pop jmpq mov rex.WB cmpsb sbb sub loopne xchg icebp add retq in xchg rex.WR and xor pop and ja rex.WB insl rex.WRXB adc out icebp xchg (bad) lods xchg cmp xchg pop pop and rex.WRB cmp sub rex.WXB lahf jrcxz cmp subb (bad) xchg rex.XB stos lods (bad) rex.WB and shrb or (bad) enterq xchg rex.WB cmpl pushfq (bad) movslq movabs pop rorb push retq jmp shr mov mov cmp movabs push decb jge fidivr (bad) iret retq repz roll adc mov callq xor push push jae rex.WB out adc xchg cmp in (bad) cmp and rex.WB rex.W xlat fimul (bad) rex.WB addr32 data16 rex.WX test rex.RX push cmpsl addl mov pop (bad) imul (bad) pushq fwait push pop push rex.WB rex.WRXB (bad) adc jno xor mov xor ss adc jno adc loopne and rex.WB mov fwait mov iret xor rex.WB mov (bad) scas callq callq cmp rex.WB mov jg sbb cmpsl cmp imul sub sub rex.WX nop rcr jg (bad) or xchg lea pop and cmp jo movabs rex.WR (bad) outsb push push stos mov and jl and shrl retq movabs mov movabs pushfq rex.XB (bad) rex.WB loop rex.RXB loope or shr lahf and (bad) (bad) cli stc (bad) fwait mov out out sub (bad) mov rex.XB push sub xchg mov fmuls movsb (bad) adc movslq and shr popfq fisub scas rex.WX movsb jg and push lods movsl rex.WB push pop jne nop jl in loopne rex.WRX mov jp outsl stos push out addr32 repz rex.WB addr32 stos mov and cmp rex.WXB repz jo rex.X pop rex.WB rex.W push cmp xor mov sbb cmp jb rex.WB test jmpq out (bad) push lea out sahf (bad) rex.RX (bad) pushq rex.B rex.WB rex.RB xor fidivrl pop fmull movabs rex.WB movslq faddp add (bad) mov sub scas push push ss pushfq rex.WB (bad) (bad) rex.X fwait cmp jb jge xor adc (bad) add icebp xchg gs sub sub cli sub jno or rex.WXB int3 pop (bad) (bad) test mov xchg fdivrs adc (bad) pop addr32 xchg lret (bad) adc rex.R (bad) jl (bad) and push (bad) rex.WX (bad) push cs lahf loope mov callq mov mov mov (bad) xchg (bad) rex.WRX je fstpl retq loopne sti (bad) cmp adc xchg rex.WXB addr32 retq test mov addr32 sub rex.WRB sbb lahf mov rcrl out ficompl mov sbb addr32 in lods sbb xor push sahf jle outsb retq fnsave cmc mov je sbbl (bad) movsb mov (bad) xchg paddsb pushfq retq mov popfq add and and rclb (bad) mov xchg cmp or int3 cmp (bad) sbb mov mov add in and add fsub rex.WB rex xchg (bad) cli (bad) stos (bad) or out mov push movabs cmp lods sub stc fidivrl fcomip (bad) in or rex.WB cmp movabs (bad) cmp sub (bad) push scas mov movsl rex.WB mov push and sti or rex.WB cmp movslq pushfq xchg sub and test add addr32 int3 and psrlq and and roll gs mov rex.WRX fs (bad) push and rex.WRB mov sbb loope (bad) xor and rex.WB pop add (bad) stc add imul pop rex.WB rcll and add or rex.WR loop mov rex.WB frstor loopne or test sbb pop sysret mov lret lods shll sbb repnz mov mov pop jno jmpq rex.W cmpsl scas out xchg rex rex.WB icebp sub ss enterq fiadd cmpsl xchg cwtl cli fs fmuls add (bad) pop mov and mov (bad) sbb pushq sbb (bad) mov mov (bad) gs mov (bad) shr mov mov rex.B test (bad) pushq xchg rex.WB test cmp (bad) xchg xor push (bad) cmpsl cltd sub rex.RXB (bad) sbb (bad) sub (bad) cmp or test ss cmp cmpsb sub test stos enterq adc add out xchg enterq adc rex.X rex.WXB rol and enterq sub xor rex.WB addr32 pushfq out rex.WX movsb ror lea test adc sub insb sub popfq xor jae rex.RB or in iret rex.XB sub and mov test xor shll lret rex.WXB xor pop xor (bad) in sub cmp stos rex.WB repz cmp or (bad) rex.WB rex.RB std jb sbb rex.WB lock fisubl (bad) sti test rex.WB mov pop (bad) in jne movabs push test movabs movslq sub sub sbb xor vpsraw sub and es or rex.WB ss rex.WB sbb sub in int outsl js addr32 add in nop (bad) out repnz or lret subl retq sti cltd and int3 sub mov sub xor sub rex.RB in rex cmp rex.WB rex.B push sub shr rex.RB js sbb jae xchg orl in outsb stos sub jno mov rex.WRXB imul pop outsb cmp xchg adc ss xchg (bad) (bad) cmp (bad) stos add sbb sub sysenter or fidivr rex.RXB rex.WB (bad) movabs loopne rex.WX jmp jb or data16 lock adc rex.WB pop fst shrl pop pop ficom shlb repz jb stos rex.WRB cs rex.WB rex.R data16 es mov movsb rex.WX test cmp xchg (bad) rex.WB sbb push rex.WB loop sub sub lcall callq mov mov mov rex.WB mov rex.WB mov rex.WB retq add fcmove pop cmpsl pushq ss adc ds mov rex.R rex.WXB rex.WB and cmp rex.WB fsubr add jnp rex.WX out lea fisttpll test xchg push stos rex.WB (bad) imul rclb sbb rex.RXB pushfq mov addr32 fwait movsl rex.RX pop scas (bad) mov test xor imul and or testb adc xchg (bad) sahf rex.WXB shll shl imul movsw pushq cltd push xchg rex.WB sub jge xchg (bad) (bad) add rex.WB insl (bad) rcr stc rex.WRX cli test mov cmp xchg push cs push repz lock insb (bad) xchg xor int3 jb lret rex.WB cmp movsl or rex.B mov sbb cld stos xchg rex.WX adc (bad) mov lock jrcxz rex.WB adc push fisubl mov push and jle push insl (bad) cwtl xchg movabs enterq repnz retq imul pop sbbl callq rex.WRX (bad) lea sub out mov sbb rex.WX sub lods rex.WRXB rex.WRB adc orb (bad) xrelease fstps rex.WB test (bad) sub mov iret adc callq (bad) sub (bad) mov lret cmp push imul jae decl (bad) (bad) fsubrl sbb adc xlat movabs (bad) rex.WB jae mov xchg icebp mov iret (bad) movsb movabs and mov fwait or fldcw iret sub adc jb in shll (bad) rex.WRX (bad) rex.WB (bad) push (bad) push fadd scas rex.WB repnz outsl cltd (bad) data16 movslq dec push test mov in xchg rex.WB xlat rex.RB or (bad) adc test lea xchg lock fscale pop imul stc xchg mov fisttpl (bad) or rex.WB insb mov cmp adc xor mov fstpl test pop pop and rex.XB and repnz xchg (bad) sbb sbb and cmp or movabs rex.WB mov iret cltd (bad) fadd and push cmp (bad) mov (bad) jo pop sub push pushfq lret mov out cs rex.WB addr32 ss jns add movabs mov pop mov jmpq mov pushq cmp add imul movabs mov lock rex.WB sarb sub pop shlb xor notb pop sub adc cmp jne pop movsl imul outsb sbb xor mov js pop sbb xchg xchg sub shrl xor xchg nop jns (bad) rex.RXB in sub mov imul in or (bad) pop or cmp adc mov ljmp and jle idiv fmull lock adc rex.WRX es add rex.XB ja xchg push stc out cwtl and sti rex.RX movabs mov or pop (bad) test or xchg mov xchg leaveq fcompl jmp (bad) jrcxz fwait add sub pop fcmove mov (bad) sarb in (bad) rex.WXB addr32 (bad) cli fwait pop jnp adcb stc leaveq xor loope in add (bad) sbb xchg (bad) callq ss push push (bad) movabs rex.WXB rex.WB jge add outsb imul or xchg movslq push rex.WB rex.W insl sub xor cmp mov hlt push loopne jmp fcompl jle push mov rex.W imul movsb (bad) movsl fldenv or movslq sbb sbbl rex.WB (bad) sti and sbb jrcxz rolb or movabs (bad) cld ds mov (bad) pop adc cmpsl leaveq xchg rcrb nop retq movabs outsb mov movabs lret data16 sub or pop int3 repz sarq and test push pop mov divl rex.WB sahf sbb rex.WX or fs out popfq lods sub rex.XB add add (bad) in pop movabs push int3 imul mov (bad) mul rex.X add pop jb in ss xchg mov mov xchg cmp test push (bad) rex.WB gs push mov mov mov test (bad) movabs rex.WX pop (bad) add jne retq rex.WR callq repz mov fnsave sahf rolb mov rex.B (bad) test movslq (bad) movsl rex.RB rex.R lret sbb cmp (bad) rex.WRB fbstp xchg outsl (bad) rex.WRB and std pop rex.B xor enterq loope sub or rex repnz fadd mov add in ss rex.WR xchg clc fs sahf jmp cmp mov or pop mov jae (bad) (bad) cld fstpl sub jge jo pop popfq rorl (bad) sahf sub xor (bad) lock movsl hlt out sub pop or push shlq pop (bad) iret (bad) sub movl (bad) pop cmp and rex.WX xchg jae pop xchg enterq (bad) (bad) and loope,pt out sahf pushfq adc jle rex.X (bad) adc pop rex.WB shlb cli orb ficompl rex.WB jno es xor js sbb xor mov retq xor xor lret and (bad) cmp shl xchg out enterq outsl pop (bad) out fdivl pushfq callq (bad) add sub jrcxz adc (bad) (bad) pop rex.RXB sub rex.WB pop cmp jp out pop rex.X imul add pop or (bad) shrb rex.RX pop pushq movabs mov movsb add sub js and movsl or (bad) mov movsl rex.WB rex.RXB leaveq scas fsubl data16 push sub rex.WB outsl roll pop gs rex.WB test loop or or leaveq js loope out pop add (bad) pushq callq mov (bad) push rol cmp rex.RX stos sbb shrw fwait jl cmp stos (bad) (bad) mov and js rex.W or ficompl xor jbe mov loop sub xchg fsts cmp std rorb ds lods movsb adc rex.WB cmp (bad) and and xor pushq sti rex.XB or adc push (bad) adc test xor jp add (bad) in (bad) mov or test mov rex.WXB jno loope rex.WX rex rex.W or mov rex.B rex.WR xor cmp cli (bad) sbb jb rex.WR repnz stos cmp in cmpsb adc (bad) imul mov rex.XB rex.X divb or pushfq movabs (bad) imul lahf ja (bad) lret xchg or rex.B (bad) pushq (bad) in (bad) pop stos insl xchg sub lahf sahf pop sti leaveq int3 jnp sub (bad) cmc rex.WB fcomps jno cmp adc jmpq jbe jrcxz adc std rex.WB lock rex.B out loopne rex.WRXB ss (bad) push rex.WR sti scas xchg push fisttpll rorb (bad) (bad) (bad) mov sub js cmpl rex.WB scas out rclb (bad) mov mov fidiv in cli (bad) and mov (bad) jne gs lods push jae mov shlb ja push pushq lock adc sub mov in jbe push adc leaveq push sbb push rex.WB adc movabs repnz fistl vpsubusw push add xchg callq adc sub adc sub pop (bad) test xchg lods push adc sbb jne sub rex.RB sbb (bad) rex.WRX and ffreep add rex.WB (bad) lret add callq or rex.WB sbb cmp or rex.WR xchg rex.WRB add rex.XB test addr32 sbb push out shrb mov sub mov sub sub sahf pushq (bad) push rolb xlat xchg (bad) add int3 (bad) xchg in fs push lahf outsb (bad) rex.WB sahf sbbl or cmpsb mov sub xorl je (bad) (bad) xlat insl cmp jmp mov mov rex.WXB icebp xchg loopne jle adcl test rex.WX (bad) mov pushfq jne rex.WXB (bad) xor shl repnz lea movsl cltd movabs jnp (bad) fistp popfq jo (bad) adc xchg test enterq sarl rex.WB mov (bad) ds rex.WR mov xchg cmp pushfq sti pause iret (bad) sub mov sbb imul jmpq jp mov push and scas sbb mov rex.WRX lods clc enterq cmp xor rex.RB jmp fimul (bad) retq rex.WRX pop fcoml rex.WB test repnz sbb push xor mov (bad) sbb movsb push popfq rex.WB rex.B cltd ja (bad) (bad) sub rex.WRB fwait adc callq out cmp add and adc in mov (bad) sub adc xor mov jns rex.XB loop mov shlq (bad) pushq sahf data16 callq sbb rex.WB (bad) (bad) int3 xchg add sub mov ja cli (bad) pop in cltd sub rex.WB sbb mov retq test pop rex.WXB cltd rex.RB outsl sbb and xor or (bad) adc or xchg rex.WB cmp jrcxz rex.WX rex.WB test rex.WB xor push mov cmp in xchg (bad) rex.WB sub retq mov push enterq jo pop or rex.WB jrcxz mov imul and pop pop pop (bad) (bad) mov (bad) (bad) out mov cmp rorb (bad) andl (bad) rex.WRXB add mov (bad) rex.WRXB test mov fisttp lret lods jmp mov pushq int3 rex.WRB cs xchg ja (bad) xchg (bad) jae rex.WRX rex.WB pop sbb lock lods int mov clc js iret leaveq out xchg rex.WB sbb ss (bad) rex.WB hlt push sub mov (bad) xchg rex.WB sbb es (bad) fwait push jbe xor test pop mov sub in cmpsl rcll and rex.WB jg (bad) rex.X cmp and pop je ds pushq jp push and sbb (bad) retq pushq xchg push push pop mov jo roll loop rex.WRB stos cltd repz (bad) sbb callq mov in mov or lock loopel movabs pushq mov leaveq rex.WB testb out cmpsb subl repz sub jl mov mov sub and mov sbb sub pop (bad) cmp incl gs xor mov push out mov rex xchg pop popfq out pushq mov fidivl mov rex.WB js in scas (bad) pushq fsubrl rex.WRX rex fbld or sti mov fmulp stos movabs rex.RXB rex.WB repnz (bad) nop rex.WB push (bad) and (bad) cmp add and adc movsl rolb repnz icebp loop jrcxz sbb (bad) lods adc sub sbb cmp mov lret je gs rex.R rex.W rex.WB movb or add (bad) xlat fwait sub movsl enterq or rex.WB gs mov jl outsb lock pop rcrb (bad) (bad) mov (bad) xlat int3 or test cmpsl xchg gs outsl or ds (bad) sti mov in (bad) cwtl or rex.WRX ss rex.B sbb xor cmp mov fwait rex.RX (bad) (bad) mov out std (bad) mov shlb (bad) cmp mov rex.WB push lahf (bad) push callq sub mov (bad) pop xor mov rex.X repnz (bad) in mov sti rcr lods add iret (bad) int sub cltd popfq in icebp imull (bad) sub movsb adc mov retq ja sub sub fdivrs rex.WB sbb test jb xchg rex.WB out cmp xchg lock xor mov stc (bad) mov (bad) xchg pushq or or adc sub movabs cltd pop rex.WRXB rex.WRX and sbb or mov out sub adc rcrb (bad) (bad) mov rex.WRX rex.WRXB jmpq adcl (bad) pushq pushq int cmp rex.RX jle jl cli xchg and sub or cmpsl and (bad) movsb rex.WR rex.B add jrcxz add mov pop data16 adc sub cwtl cmp xchg mov (bad) rex.XB (bad) movslq loope jns pop adc xor popfq test pop nop xchg push or int adc movsl (bad) lea pop ja adc rex.XB out lock pushq loop fstl leaveq data16 callq xchg mov pop add add lods fwait (bad) xor (bad) (bad) sub push fbld (bad) jmp rex.R repnz (bad) loopne fldenv imul jo movslq ficoml imulb sarl and loope scas xchg cld jb cmp ror push fs rcll mov (bad) mov callq stos mov addr32 push rex.WB cmp push xchg adc cmp imul enterq push scas mov js loope mov and mov (bad) out scas movsb (bad) pop iret cld pop add pop (bad) test test outsl xor retq loopne xor imul push movabs in callq and repz flds je push (bad) ja fs mov stos cmpsb clc mov rex.WB rex.WRX cmp (bad) pop mov (bad) popfq pop (bad) xchg sub loope jrcxz nop push rex.WB and cmp loopne scas fwait push add cltd je hlt sub lret pushq out jno mov fs loope fwait icebp loopne add imul jns xchg push jle test sbb cs pop loopne je adc popfq popq repz or xchg movsl adc push xchg (bad) xor sbb sti adc rex.RXB pop push pop (bad) movsb (bad) xchg xchg in jge add rex.WB or rex.WB rex.W fwait test sbb push fstpt (bad) callq out jb lret cwtl fwait (bad) lock and pushq outsl push pop jb cmpsb rex.WB lock pop rex.RB rex.WR (bad) insl lods jnp rex.WXB and jo xor rex.WB retq std retq (bad) push sub (bad) fdivl adc andb (bad) (bad) loope sub rex.WB pop rex.RXB jmp jp xor lret rex.RXB movsl (bad) rex int3 (bad) rcrb or adc rex.RX push movabs sti rex.WRX rex.RX rex.WB fnop pop cli test push (bad) add rex.WB xchg outsb push add mov vpsubsb shll cmpsb push xchg xchg rcll in testl lret in push mov sbb push insl ja cmp ja mov xchg gs jns stos hlt and lret (bad) out jno mov scas jp movabs ds (bad) jo rex.WX flds callq xchg jle xor insl mov mov callq roll cli sbb rex.WB cmp fisubr (bad) pushq shll (bad) cmpsb movabs xor sub out orb push xchg cmc jge imul ja cmp leaveq push rex.RB rex.WB repnz in lret xchg movsb (bad) sarb push lods decl (bad) xchg adc callq mov (bad) repnz pop notl or hlt (bad) rex.RX rex.RX add mov cwtl testb imul (bad) pop movsb pushfq movabs jge jp ljmp xor xchg jno imul hlt (bad) vpmuludq (bad) out int3 xchg rcrb pop xor (bad) rex.RXB mov rex.WRB rex.RX (bad) fstp lock shr push xlat outsb mov push (bad) lret cltd outsl xchg in (bad) stos cmp mov mov mov (bad) jo cmp adc int xor outsl xchg pop sub mov sub rex.WB pop pop xchg rex.RXB loope imul or outsb rex.WR addr32 scas (bad) sti rex.RB pop xchg add rex.WRXB push and rex.WRXB rex.XB sub or xchg movabs std rorb movsl in repz in (bad) pushq cmp jae adc push insb stos mov addr32 xor std (bad) adc cmpsl test (bad) sub out js sub mov cs mov (bad) or out push (bad) or lock mov out jp (bad) xchg (bad) pop push mov idivl adc add sarl push or xchg rex.WXB mov je adc or pushq movups pop pushq cmp sub pop mov nop xchg push (bad) retq mov jg mov movsl movabs (bad) adc fdivrs and scas sub (bad) mov imul (bad) adc cmp mov sub xor jno pushq xchg jns and push sbb rex.WXB sub cmp out fist sarb scas callq stos pop and and (bad) mov scas cmc outsb or (bad) adc loopne (bad) sub jo fucomip lahf pushfq jno or loopne fcoms stc or mov pop push clc roll sbb (bad) lahf xchg mov cmp leaveq sub add mov sti cwtl gs xchg (bad) jnp addr32 rcll sub pause lods mov pop push xor rex.WRB iret adc adc mov cwtl popfq push or (bad) movabs add cmp rex.WRB jg jae mov jg rex.WRXB js rex.X xchg mov rex.B jmpq mov cmp stc xor in fistpl shlb ficom jbe jl sbb rex.RXB movsl rorl cmp out mov mov leaveq fisub scas rex.WRB jbe cmpl push jle (bad) xchg rex.WB std jno rex.R pushfq (bad) add (bad) mov xor out (bad) rex.WB rex.XB xor xor popq (bad) rcll mov movabs lret sti (bad) pushq fsub rclb fildll (bad) cli pop cli rex.WB (bad) rorb or jb and rex.B xchg rex adc and movabs sub (bad) and movslq pop imul lock scas mov sahf or in es sbb rex.WRB rex.RXB cmp sbb stc retq stos lock rex.B rex.WB pushq pushfq hlt and loop movabs mov fwait js jo lahf rex.WRB push scas mov adcl mov rex.R jno xchg rex.WRB rex.WB rex.RXB jg fldcw in pop sarb std jne (bad) fidivr rcrb outsb or testl lods leaveq sbb rex.WXB (bad) rex.WB xchg lret nop xorl (bad) push movabs pop push cwtl movabs (bad) sbb mov test mov xchg xorl pop jb (bad) hlt xor (bad) mov mov enterq fstl rex.WRXB (bad) loop push movabs roll mov adc sbb out loopne pushq pop mov scas sbb out xor or or or pop (bad) adc callq out push rcrl xor sarl jmpq (bad) pop lea (bad) pop (bad) movsb data16 and rex.WB (bad) mov loopne sbb rex.WB fwait out in pushq xchg jne shll cmp fild rex.WB xchg and add (bad) (bad) rex.RXB rex.WB (bad) jb (bad) adc (bad) rex.B push cmpsb rcll (bad) cli movslq push rex.WB rorb rex.WB ficomp (bad) sub ds fmull loopne movslq (bad) adc mov rex.XB pop sub mov insl cli cmpsb loope shrl (bad) retq xor mov (bad) push enterq jl mov or xchg loopne insl std lea sub mov sbb xor cs rex.RX fnstsw and (bad) mov push rex.R (bad) adc sbb push or out nop rex.WB xchg cld jno ffree push xchg rex.XB sub sub push int3 pop xchg es sub rex.WR sub sub fist add lods rex.WB pushq mov jmpq subl jle cmp add fwait rex.X rex.RB rex.WXB rex.WB repz mov imul cltd cwtl lret movabs and rex.WXB rex.WB rex.X test leaveq enterq (bad) cmp jae jo dec rex.WB jb sbb scas push pop and sbb jne mov (bad) insb mov int rcrb sti fstpl mov leaveq negl test (bad) insb mov xor rex.WB sti push adc cli cltd xchg jo stos and (bad) jmpq mov jne adc rorl sub jnp subb out sbb xchg (bad) test pushq sub rex.W adc cmpsb (bad) out add push shr (bad) and adc cmc or stos rex.X cmpsl lods in (bad) fsubr (bad) sbb movb pop mov and jnp data16 pop icebp leaveq cltd pop (bad) fnsave sbb jmpq mov and cmp (bad) fildl fisttp hlt pop push incl (bad) sub (bad) mov mov xor sub out repz jno fisubrl jg jae mov lret mov test mov divl test (bad) enterq outsb cmp nop lahf shll adc fisttp leaveq jp ja (bad) testb cmp (bad) out mov pushq (bad) jge rex.WX pop retq fistl shrb pushfq jle add cmp rex.WXB (bad) and cmp pushq xlat (bad) or sbb jno (bad) xchg rex.RXB rex.RX (bad) in icebp leaveq pop mov (bad) add (bad) and mov cltd adc sub pop adc cmc xor xor mov adc ds callq xor sarl stos pushq and mov rex.WRX xor rex.RX sub cmpsb xchg jmp outsb fsubrs retq rex.RXB out pushfq sub pushq int3 pushq addr32 clc or mov and rex.WRXB imul test stos outsl hlt or and mov or (bad) lret and popfq outsb push mov mov jno mov rex.WB cltd andl adc mov mov rex.WRXB jo repnz (bad) fiaddl jns lahf insl cmp jo jns push lret movslq lret pushq sub movsl add repz jb movlps jns or cmp (bad) out mov cmc jle (bad) jbe (bad) adc (bad) pop xchg rex.WR adc imul adc sub std sub imul xlat (bad) callq movabs (bad) je loop mov (bad) lret sub sbb push jp cmp rex.WR repz imul pop (bad) sub sarl (bad) sarb imul mov or mov (bad) rex.WB shrl add sbbl (bad) adc out (bad) data16 mov or cmp sub lret xor lea out rex.WXB rex.WRXB fxsave rorl (bad) test cmp xor or scas hlt fldcw fnop mov (bad) or mov pop retq pop jnp (bad) in rex.WB out repz rex.WRX outsb lret movsb (bad) sub loop rex.WRX or (bad) and loope rex.WR repz loop jbe sbb and je mov sub movabs (bad) mov mov rex.WRB sub sbb sub (bad) enterq out movsl sub jae xor pop xor sbb xlat jl adcl movabs xchg out testl outsb add or (bad) jg or pushfq pop jno push rex.WB adc sub mov xchg sbb fadd (bad) adc jbe outsl rex.WXB rex.W rex.WB addr32 sub in or lods pop or jne cmpl sar data16 movslq retq and rex.WB movabs jbe iret loop rex.WRB rex.WB and outsl retq sbb (bad) (bad) and icebp test (bad) (bad) cltd pop rex.WB jbe sub pushfq callq pop cwtl gs test push int3 mov ds jb scas (bad) sbb mov jbe stos mov ss fimull (bad) insb and sub cltd movsbl in xchg xchg or imul (bad) rex.WRB pop and mov data16 cli (bad) adc popfq add rex.WXB adc fidivrl cltd in rex.WB repz enterq (bad) stos sub lea or adc (bad) cli mov adc xchg mov sarl ss enterq sub movabs mov (bad) pop fadds lea test leaveq je rex.WR rex.WR rex.WXB and add std mov pop pop movabs xor rex.X int3 mov (bad) and add sub shrl fldcw cltd clc enterq (bad) sub xchg jbe xor mov fildl lods pop jge push jne outsl pop test jb popfq mov sub xor fisubr (bad) rol loopne movabs in add sub sub rex imul and enterq or cmp sub mov insl (bad) push adc adc rex.W and imul sub pmaxsw xor fdivl ror movslq faddl cwtl or repz rex.WRX out rex.XB (bad) movabs rex.RX (bad) addr32 iret lahf (bad) rex.RB rex.WXB fs in xor rex.WRB pop and rex.WX sti mov ds sbb rex.RB pop pop movslq imul (bad) xchg outsb jae fimull rex.RX loop adc jmpq leaveq sub (bad) rex.WRX (bad) rex.B es in mov rex.XB rclb and cmp loope pop xorl fiadd jns (bad) (bad) rex.WR push jmp (bad) mov stos gs sahf jb (bad) and mov sub rex.WRXB jbe mov mov test in rex.W clc bt rex.X clc enterq imul rex.WRXB lret cmp mov movslq adc xchg (bad) cmp rex.RXB rex.RB gs mov rex.WRXB hlt (bad) push loopne lea sub pop sbb push lahf adc (bad) jbe (bad) adc in lock cmc fsubrs leaveq rex.W rex.RB or or xor jo xchg fisttp pushfq jg imul (bad) and xor movabs xlat rolb stos ud2 mov (bad) lret popfq mov adc rex.RXB xor sub movabs rex.WXB rex.WB adc movsb loop and rex.WB rex.W stos lret rex.WR data16 rcrb adcl push push rex.WX (bad) sub imulb mov adc int frstor rex.B lock fild (bad) jmp iret hlt movabs (bad) add (bad) sub pop lahf push jl rex.WB jo mov insl rex.WB cli add add lret rex.WRX cmp fimul mov leaveq repnz add std jg callq (bad) retq mov and movabs cmpsb rcrl int3 add rex.W shrb xchg rex.WB lock (bad) and adc rex.WB mov rex.RXB (bad) add rex.RX repz cmp xor mov and cmc ja insb cmp lods outsl and mov xchg (bad) push mov (bad) sarl cmpsl repz jge lret movabs jrcxz sub es data16 jb xor (bad) fwait mov pop adc rex.WXB and movsb pop out add cmpsl cmpsb movsl scas sbb push (bad) pop push movabs xchg leaveq add (bad) sub xchg (bad) in cmp int (bad) xor mov fs movsl rex.WB repnz adc jno mov xlat mov rex.WB (bad) in (bad) pop adc lock (bad) add xchg (bad) rex.WB mov (bad) rex.RB (bad) rex.WXB movabs fildl std hlt push push repnz movslq pop stos push movabs xor cld (bad) xchg rex.WRB rex.WB retq imul pop rex (bad) rex.WB pop stos and xchg mov (bad) xor (bad) push rex.XB movabs insl mov cld push add sub movabs fwait adc or test fiadd rex.RB pop nop movsl (bad) sbb mov lret pushq or fcom mov xchg mov int push outsl jp rex.WRXB rex.WXB gs xchg (bad) mov mov rex.WB add (bad) sti insb cltd rex.XB mov fwait jg xchg cld pushq sub (bad) movabs (bad) pop clc (bad) add sub rex.WB or push sbb sbb pop xor xchg jmp xchg push pop (bad) jrcxz or cmp sub pop pushq lret lods cwtl rex or xlat rex.W std js pop stos mov movabs cmp sub mov rex.WB and rex.XB (bad) outsb (bad) mov pop jle jl rex.RX loop cli callq xor rex.WRXB out (bad) push enterq mov movabs xor jmp mulq scas callq sbb jbe iret lahf rex.R rex.WB popq scas jg push fdivr lea (bad) in adc push mov stos js xchg (bad) (bad) xor leaveq (bad) (bad) pushq (bad) (bad) rex.WRXB mov mov enterq rex.WXB xchg xor retq push mov xor fdiv (bad) jnp addr32 rex.RX fldcw xchg imul enterq or adc callq fidivrl out pop or (bad) imul xlat rex.WRX rex.WB jo xchg rex int3 retq js sarl pop test cltd sub rex.RXB rex.RX rex.W mov push (bad) fcomps or rex.RXB je,pt movabs iret addr32 imul add fcoms enterq je (bad) icebp retq or xor sub push add rex.R rex.WRX fs or retq mov in callq push (bad) push cmp add imul fidivrl (bad) rex add rex.XB rex.XB movslq jo (bad) add and movabs mov cmp (bad) (bad) pop movsl cmpsl rex.WRX rex.B fldl rorl sbb or callq out (bad) rex.RB rex.WR rex.WB int (bad) sbb cmp retq mov out test push cwtl gs jae push xorb mov sbb retq adc adc stc rex xor or lret or rex.WB sbb sbb or push xchg callq movsl jl (bad) imul retq or callq imul repz pop xchg cmp (bad) rex.WRXB negq (bad) movsb (bad) callq rex.RB push int adc (bad) (bad) jg pop cmc push cwtl cli gs loop pop mov retq cmc jl rex.WB fwait rorl rex.WB movabs or fisubrl (bad) pop mov mov or xchg mov (bad) pop mov rex.WB xchg cmp push rex.WB pop rex.WRB or (bad) out rex.B adcl and mov iret mov rcrq clc (bad) movabs add add lods sub (bad) ficomp out or addr32 cmpsl or ficompl push fdivs rex.WRB xchg xchg mov rex.WB rex.RB adc or stos xchg rorb rex.WB outsl jnp ja jae sub fwait test push test rex.WB add in fiadd xchg lods jmpq and mov xor lods cmpl mov add (bad) (bad) add jne rex.W and insl (bad) test xchg rex.WRX setp xchg leaveq mov xchg idivl leaveq jo loop out test movabs fimull cmp rex.X outsb (bad) repz adc sarb popfq movsl rex.R fsts sub xchg jnp loop popfq outsb (bad) ds push in xor out jnp push jg xor mov xchg xor cmp fwait adc xchg rex.RX fldl int pop adc mov and movabs push cmp xchg stos addr32 rex.WRXB rex.WB sbb rex.WB jnp xor (bad) and mov repnz rex.WB sarl icebp int3 test (bad) pop cs sub jmpq mov imul mov mov rex.X lea cltd or scas rex.R cwtl cmpsl rex.RX or (bad) (bad) callq add int3 scas add lods repnz pop movabs test mov ds sbb rex.WX rex.W rex rex (bad) fstps push rex.WRX lret cmp and lret or repnz retq rex.XB insb loopne movabs jmp out stos imul pop rex.RX (bad) adc jg mov mov add sub popfq testl cmp push xchg scas (bad) fisttp stc rex mov rex.WR mov movsl movabs leaveq pop sub adc cmp xchg rex.W sub data16 rex.RX (bad) pop mov sub movb (bad) cmp lret pop pushfq addr32 hlt add mov mov movsl addr32 xor nop mov push cmp adc lret shr xor (bad) cmp fnstsw loop iret cmp (bad) mov cmpsb popfq stos retq sub adc (bad) nop sub outsb out sbb jb jne (bad) movabs mov clc (bad) jmpq xor in xchg cwtl (bad) (bad) mov movsl callq lods xchg stos pop mov retq xlat (bad) (bad) lret outsl adc xor movabs scas cmp adc sbbb (bad) stos int3 sbb (bad) push jmpq ja and lock and sbb rex.WB rex.XB pushfq xchg (bad) out rex.WB mov rex.WB rex.WXB adc repz rclb sbb int3 cmpsl jge cmp js in mov pushfq ss pushq or or movabs pop mov mov sbb pop (bad) jns push mov test sarb jle lods mov lret rex.XB and callq rex.WB fs retq push pop (bad) rex.XB rex.WB or sub mov and push fadd adc lahf sbb mov test sti (bad) pushq xchg (bad) xchg movabs clc rex.WX adc imul xor in stos sub rex.XB sbb leaveq (bad) retq xchg add movabs mov int3 rex.RX rex.WB pop rex.WR sub scas jnp mov sub pushfq cmp out (bad) push leaveq pop outsb pushq adcb gs jns or rex.B rex.WB callq test mov jge retq rex.RXB clc movabs xchg sbb cmp add sbb rex.WB (bad) sub push loope movabs movabs je mov movsb jp rex.WB repnz iret jge sbb adc add jnp (bad) rex.WB in sbb and std sub (bad) imul mov (bad) (bad) in (bad) jns push lret insb vphadduwd pop lahf in sti rex.WB popfq (bad) icebp leaveq jo decl push (bad) mov mov (bad) addr32 push xchg fcmovnu sbb adc retq insb div leaveq xchg rex.X movabs mov int3 cmp rex.XB pop add (bad) adc int3 movabs and xor and popfq xlat lret mov roll movslq lret adc rex.B or loop xor cltd movsb enterq push jp rex.WXB in callq rex.R cs pushq in add rex.WB jne xorb pop or or mov rex.WB in iret and rex.X vpaddb cmp (bad) rex.WXB jge mov adc (bad) (bad) (bad) (bad) outsb xchg pop leaveq rex.WXB jno xchg xor vcmpss fs rex.WX jge and callq xchg jle mov or add rex.WRXB push (bad) pop mov rex.R mov mov pop data16 xchg mov pop rex.WB cli mov cmp movabs push or xlat add cmp pushq in or sbb iret hlt sbb movsb sub (bad) or add stos ds (bad) (bad) loop fdivrs rcll push add xor rex.WB mov sbb or out cwtl (bad) jbe (bad) addr32 jl cmc pop fs (bad) icebp in xchg je xchg enterq fs stos pushq push pop clc mov scas sub rex.WR fmull fcomps jl and rex.WB sbbl sub cltd mov and mov or pop fisub rex.WB or rex.WB stos sbb mov xor nop push mov or sahf pop xchg cwtl xor xchg rex (bad) sub and out jno retq pushq xlat xor cmpsb pop pop add test stc test repz popfq enterq xchg rex.WRB (bad) pop imul loope add cmp out pushq pop lret out jmp js and je adcl or push scas rex.RB lods test sub add push out xchg or in (bad) ss jmp sbb enterq jrcxz rex.WB rex.WXB rex.WB cltd or push (bad) rex.WB and out jge cli mov sti lret cli int3 movsl (bad) fiadd cwtl sub (bad) jne gs xor jo xchg push out add icebp rex.WRB rex.WB push movabs (bad) push xor rex.WB xchg (bad) and test pop lret push out in rex.B rex.WB outsl repnz (bad) hlt mov sbb pop (bad) sbb mov xchg lea test rex.WRX and fstl rex.B movslq cmp lea rex.WB cmp rex.XB ds sbb push xchg and rex.WB jle mov movslq mov insl add movabs lahf mov sub mov jns pushq rex.RX rex.W test rex.WRX gs rex.WR mov cmpsb addr32 xchg jno (bad) jge outsl sub (bad) cs addr32 (bad) enterq std pop nop (bad) movabs (bad) lret (bad) pushq sub or lock rex.RX xchg rex.XB adc sbb and push or cmc mov and ljmp (bad) sahf cmp push xor jno rex.WRB fwait jbe rex.W push wbinvd mov jae movsb addr32 xor xchg cmpsl mov cmp hlt scas js,pn nop ss stos mov jge rex.RXB rex.XB or mov fmull jnp jmp movabs mov (bad) leaveq (bad) fisubrl xor jge movsb and popfq adc mov or add loop callq (bad) fs push jmp pushq cmp ss (bad) rex.WB and xor mov push movsl rex.X loop rex.WB rex.RB rex.WRXB rex.WRB sub (bad) (bad) (bad) and sub (bad) mov sti jo loop test (bad) push mov xlat adc (bad) xor cmp jl cltd rex.WB (bad) loope mov and imul repnz (bad) (bad) movsl (bad) (bad) (bad) (bad) callq cmp (bad) (bad) and lea rex.WB and pop repz movsl testl callq (bad) fimull jp xchg movabs xor pushfq jo rex fimul movabs (bad) movabs mov and rex.WXB es add jmp rex.WB rep jne pushq jns frstor loopne add (bad) adc mov retq leaveq jg,pt mov ja cmp je (bad) movabs lods pop mov (bad) addr32 icebp dec lret cmc and retq sbb ds pop (bad) scas push popq cmp rex.WRX rex.RX loope rol in popfq fcoms rex.WB out pushfq (bad) push mov callq xchg or decl sub outsb mov sarl and out rex.WB xchg sbb cmp mov sbb lret mov mov iret cli add cmpsb rex.WRB and xor sbb in mov sub cwtl xor sub (bad) sbb ja or rex.XB mov mov mov xchg insl pop add test ja test (bad) rex.WRXB movsb data16 test cmp (bad) pop mov pushq (bad) (bad) xchg mov repz mov (bad) jb sti pop cmp (bad) es mov movabs gs rex.WB rex.RXB adc mov xchg mov mov sbbl movabs mulb (bad) jmp sub (bad) sbb jl,pt loopne test xchg pop mov ficoml jge cmp repz (bad) callq jl mov js push repz pop push rex.WB jne sbb fmul mov rex.WRXB rex.WB (bad) or or (bad) imul rex.WB jg movsb addr32 enterq cltd movabs mov pushq incb leaveq mov mov mov and (bad) rex.WB push rex.X adc lret sub rex.WB cmc in sub je fmulp (bad) fbld fcomi rex.WB pop xchg (bad) movabs xchg rex.RX sti popfq jno loopne push sub and cmp push xor cmc imul jge leaveq sub sub jmp add mov loop cmp jno jge cmpl rex.RXB gs push rex.WX cmc or test mov cld lods rex.RB mov mov (bad) rex.RB repnz movabs out jl enterq rex.WB cmp cltd add outsb test packsswb mov rex.RX mov popfq sub shrb stc pop (bad) sub mov cmp scas (bad) adc pop retq jmpq stos movslq rex.X jne outsb ficoml sub xchg je (bad) or mov jns pop sbb insl iret mov add std pop callq (bad) xchg rex.WB or (bad) repz fwait xorl pop jns rex.WB mov fnstcw pushfq outsl jbe test xor adc test fimull xchg cwtl gs cmpsb (bad) or stos rex.WXB enterq imul sbb retq (bad) and mov xchg adc movabs (bad) jno cmp rex.X cwtl sub cmc xchg mov add stos mov push movabs rorl adc or (bad) (bad) lock jbe rex.WXB rex.WB adc cmp jp sbb xchg lret decb push or pop mov rex.XB and loop rex.WB test xchg stos jp imul sub adc rex.RB movabs lock pop (bad) out movabs movabs sbb jbe adc mov push or xor xchg and rcrl rex.WB es data16 adc int3 addr32 sbb xor rex.WB es callq sahf xor rex.WB rex.R rex.W test or incb and ss rex.WB (bad) pushq (bad) rex.WB movabs sub xchg jbe adc sbb pushq push fisubl xchg and xchg pop fwait push insb rex.X movabs (bad) and test rex.WB in int3 repnz rex.WB out rex.W mov cmpsl adc loopne xchg (bad) pushq imul adc fcoml xlat rex.WB mov rcr jne mov (bad) pop (bad) rex.WXB movsb outsb test std or insb cmpsb movabs (bad) rex mov sub out (bad) rex.WRXB movabs in (bad) (bad) push xrelease jo sbb fildl lods xor mov sarl mov (bad) mov and (bad) sub cli (bad) imul mov (bad) jg movabs std cmp lods data16 rex.WB and test scas and mov sti std rex.WB decl cli pop cmp lea outsb rex.WB rex.RX lahf adc cwtl movabs (bad) xor (bad) xor iret cld cmp cmp and lret lods mov (bad) (bad) int3 notq cld add (bad) rex.WB lret hlt rorb (bad) movabs rex.RXB and sub push jmp and push int3 out (bad) (bad) lock xor push xchg cmp xchg notb pushq shrl mov xor retq rex.WB pop (bad) fdivl cltd outsl rex.R outsb or rex.WX ss mov testl gs (bad) movabs (bad) adc mov fidivr jb mov mov leaveq (bad) movsb pushq loope pop retq and jae adc callq pop (bad) pop xor (bad) mov rex.R addr32 rex.WRB rex.WB rex.WB jrcxz loope orb imul adc callq cmp (bad) icebp out (bad) sub mov sub sbb rex.WR jg adc xor shrl sub imul imul cmp rex.RB (bad) rcrl mov movsb sar xchg rex.WXB pop fdivrl notl sub (bad) sbb sub and movslq mov cmpsb pushq divl adc (bad) sbb (bad) rex push pushq adc (bad) popfq lret (bad) add pop xor mov adc push shrb (bad) sbb adc js add fcoml add adc pop test sub xchg push sub movabs and xor sbb (bad) rex.RX (bad) push rex.R sbb jge outsl xor iret test mov jp ss cmpsb mov rex.WRXB enterq or (bad) jp movabs mov fs jns add (bad) fiadd cmp add cwtl iret sub outsl jnp xor rex.B data16 pop pop cs rex.WX (bad) pop cltd gs test outsl sub rex (bad) movslq rex.WRB sbb sub xor push sub (bad) cs sbb (bad) psubsb mov imul out mov rex.RXB rex.RXB cmp rex.R (bad) mov rex.WR pop jnp subl and fcoml pop cmp (bad) loopne rex.X sti pop rex ficomp scas callq xchg xchg imul cmc movsl lahf mov enterq jmp mov cltd sub xchg fildll jne rex.WX cltd rex.RX test adc leaveq (bad) ja mov test retq fisttp rex.WXB scas or lock insl and jl sub rex.XB pop icebp outsb ja lret divl rex.RX sub xchg rex.WX (bad) jp pand xchg (bad) rex.RX rcll jo adc outsl xchg mov xor sbb jg int3 (bad) xchg movsb stos lret sub mov ficoml negl mov or sti leaveq mov and mov rex.XB jge popfq sub orl xor ud2 jge (bad) ja mov or cwtl and (bad) push rex.WB lret pop and popfq xor rex.WXB jmp xchg fsubrl or push (bad) (bad) ds (bad) sub and jmpq pop or hlt ja mov rex.WRB (bad) mov cwtl sti or mov or add rex.RB jae lock lret add sub adc int (bad) sbb adc jp out sbb mov jge roll jno je sbb cld rcrb (bad) nop pop mov loopne neg adc (bad) rex.RX js adc or lock rex.WR (bad) push push std push leaveq pop fcomps jmp leaveq rorl rex.RXB xchg imul outsb mov mov retq rex.WB xor mov mov ss jb loope sbb repz mov and jmp mov cwtl jp cltd adc pushq sub addr32 (bad) push or jmp or movsb rex.R push out test push out int3 enterq jrcxz,pn cmp nop popfq imul cwtl pop ds xchg int add and rex.WB mov (bad) test repz pop mov stc jae xor std rex.WR (bad) pop sub (bad) (bad) push fcmove push in jp mov rex.WRB sbb or rex.WB mov movabs (bad) js mov rex.WB sub pop mov callq mov loope adc jle xor sbb pop (bad) fistp scas fdiv or xlat (bad) jnp fs (bad) lret sub rex.WR or rex.WRX rex.B mov adc stos jl fdivl pop out sbb jp fisttpll outsl rex.WB mov negb add pushq sub mov cmp mov sbb rex.WRB repnz rex.R rex.WB cld and sbb and test mov xor (bad) fisttpll lods out jg movslq rex.WB clc fwait mov cmp mov xlat sarb xchg xchg (bad) (bad) mov rcrb xchg in mov pop (bad) mov mov push (bad) out push xchg xlat xchg movsl (bad) in jmp data16 xor imul and sarl rclb lea out xchg pop lret movslq sub rex.X (bad) loop rex.WB cltd lock shrl xchg (bad) icebp imulb addr32 push sarb (bad) sub fwait sub test rex.WR (bad) sbb scas xor or and je xchg ds or loope leaveq (bad) test mov jo (bad) cmp lret (bad) int3 and rex.WXB negl (bad) xchg (bad) loope mov addr32 or or mov and test adc stc xor pop popfq icebp jbe (bad) test rex.WB (bad) data16 push ss push mov rex.WRX gs push clc repz rex.WB (bad) fisubr iret je mov insl mov jne (bad) sub jrcxz sbb sub jge jo (bad) ror test test sub sbb rex.B jbe rex.WB xchg xlat xchg stos pop lret movslq test (bad) test icebp pop jae rex.WR sub pop test xlat add mov adcl push cmc movabs fwait pop rex.RXB cltd sub and pop (bad) clc xor lcall (bad) sbb jo mov rex.XB mov (bad) sub out rcr jnp mov cmpsb rex.WB ds std pop movsb push cmc fiadd (bad) mov rex.RX rex.W cmp cmp mov cmc (bad) rex.WRB or (bad) (bad) rex.WB cmp adc pushq mov ds jl scas mov lret mov pop jp in (bad) adc pop fisub add rex.WX sbb pushq sbb add pop movsl std rex.WRB sbb cs sbb fcompl and push (bad) (bad) (bad) (bad) adc (bad) sub jb enterq or (bad) jg cmp mov or add and sub pop xor pop rex.X mov cmp mov add roll fmuls outsl sub rex.RX jmp mov callq in add (bad) cmp push idiv popfq pushq and rex.WR rex.W ds add mov mov (bad) clc adc rex.RB mov pop pop cmpsl subl sub cmpsl jnp rolb lret mov addr32 mov out pop ror mov xchg pop xchg mov pop sub cli rclq je and rex.X ds rex.R pop iret or movslq mov loop rcr jge cmp retq rex.WB mov pop sub pushfq insb cmc in and (bad) callq lods cmpsb xchg jns rorl movsb (bad) or pop or jnp rex.WRB mov shl out push fsubr cld lret and jl mov jmp jg rex.WRXB or pop movabs rex.WRX movabs scas mov rex.WX adc rex.WB add mov ss sbb retq rex.WR adc (bad) jl icebp mov fwait or andb imul mov sbb stos jae xor rex.WB push rex.WB pop cmp push lods xchg adc xchg rex.WB rex.R es (bad) outsl adc mov (bad) test (bad) lahf loopne push sarl jl rex.WB cmc out cmpsb mov mov xor (bad) sbb fsubs xchg lret or test insb js fstpl rclb jp cli mov cmp rex.X out shrl lods fidivrl adc negb sub (bad) sub repz cli jl rex.WB hlt mov test js,pt sub in lea cmpsb rex.WRXB scas (bad) mov outsb movlhps pushq insl sub leaveq xchg mov or mov pop lods rex.B mov retq (bad) imul mov rex test enterq rcll rex.WRXB out xor insl pop sbb (bad) xchg mov cld out jle movsb mov mov lret pop push rex.B rex.WRXB push lret sub scas cmp mov jae cmpsl rex.WB out rex.WX ss lret rex.WB mov xchg movslq sbb (bad) or sub scas cmp pop (bad) jl (bad) orb pop (bad) in cltd retq je and rol (bad) xor add data16 push and fcoml test xchg enterq rex.WXB rex.WB push lea xor xchg (bad) repnz (bad) ds lahf push pinsrw sub pop pop add pop cmpsl enterq xchg iret and xchg rex.WB cltd out rex.WR rex.WB (bad) callq test nop (bad) rex.WB jmp sub pop (bad) cmp rex.R add xchg (bad) cli (bad) mov mov (bad) lods mov (bad) in xchg out pop mov (bad) rex.WXB sar rex.WB retq (bad) lock fcmovu and imulb and imul rex.WRB (bad) rex.RXB setb int push rex.WR rex.XB loope or pop push (bad) adc push pop test cmc rex.WB and (bad) icebp movslq (bad) (bad) (bad) adc pop rex.WB (bad) push xchg (bad) cmp lret (bad) jg pushq and ss cmp pop xchg or rex.RX cld shl or push loop rex or or cs rex.WRB (bad) mov rex.WRXB rex.WR rex.WR xor push or rex.RX mov fmull addr32 sub sub mov rcrb xor xchg rex.X leaveq push (bad) adc retq xor rex.X xor repz lods stos loopne hlt add (bad) (bad) xchg out pushfq adc (bad) pushq loopne clc (bad) rex.WX addr32 pop push and test (bad) test leaveq pop sbb rex.RX rex.WX insl cld and rex jp mov pushq fs sub addr32 and and mov (bad) notl rex.R mov push rex.RX (bad) out rcll xlat cmp mov and xor subl pushq shrb mov pop sti sbb (bad) rex.W (bad) xlat sub sarl xchg rex.RX lock pop or rex.B xorl cmp lods (bad) cmpsl fcomps imul rcrl jle xchg mov callq (bad) xor std (bad) (bad) mov mov rex.W rorb ds test ja push jrcxz rex.WX jnp pop sbb pushfq jp fwait (bad) in sub (bad) xlat add negl push rex.B add and rex.RB repnz mov cmp jl enterq add jno xchg rex.RXB or mov sub int adc mov cmp ja rex.RB mov cmp push and outsb clc sub mull imul or xor rex.WXB hlt out xchg push out push cmp int popfq (bad) movabs or movsl hlt imul shlb fsubl enterq imul (bad) in (bad) fisttp fxch cmp imul (bad) (bad) mov (bad) shlb rcr push rex.B and pushq rex.RX loope and cmp jns jbe jle (bad) movsl xchg or loope scas (bad) sti mulb clc xchg jmpq (bad) lods icebp rex.RB lods (bad) (bad) xchg mov pop lea cmp hlt or add rex.RXB pop mov pop and (bad) stos hlt xchg fcomip or (bad) cwtl sbb pop out and out push cmp (bad) mov rex.WXB rex.WX fiaddl stc pushq pop rex.B (bad) lods rex.WB add and rex.W or jmpq int3 jo cmp jno push imulb xchg pop adc pushfq lahf mov js vmovaps lock add (bad) jo rex.B nop loopne (bad) sub sub jle std pop cmc (bad) jbe xor xor mov rex.RX movsb (bad) lahf stos rex.B pop lods es rex.WXB (bad) pop rex.WXB mov (bad) mov movabs sub (bad) (bad) jno xchg gs and sbb jo fmuls or (bad) rex.WXB test mov out mov in (bad) jge pop add scas mov fucomi icebp rex.WX pop cld rcll mov lret imul (bad) xor mov insl xchg data16 add in (bad) lods adc push rex.WR (bad) rex.WX movsb mov std or (bad) mov rex.RXB xchg xor or sub lahf jae (bad) mov jb sub cmpsb fist scas jmp sbb pop rex.WXB mov (bad) and iret xchg faddl ja,pt test rex.R (bad) xor sbb clc rex.WRX rex.WXB (bad) xchg xchg rex.XB adc sti es pop pushfq sbb pushq xor icebp rex.WB lods out jmpq mov fistp (bad) (bad) test (bad) cmp add rex.WB xchg callq ja pop add subl pop vcvtsd2si scas push movslq add data16 xchg cwtl (bad) rex.WB cli cmc fmuls push enterq rex.WRB fwait add xchg rex.B mov rex.WXB rex.WB mov repnz xor sub add rex.WX xor mov (bad) (bad) fbld cmp cmp lret jmpq pop sti rex.WXB lock (bad) loope push mov add (bad) int stos outsb (bad) callq or rex.WXB jbe and xchg scas lea callq pop pop push (bad) (bad) rcrb mov loop adcl iret push rorb or lods mov and movabs mov test lock cmp pop and (bad) adc fbld rex.WB cmp push jle mov fidivrl pop mov sahf xchg (bad) or (bad) jp rorb sbb iret (bad) scas sub and loop icebp fildl pop movabs mov lahf or test sub movabs lods fs rex.X rex.R rex.WB cmp adc mov rex.WRX rex.WB (bad) push test (bad) and add pushq cmp mov (bad) cmp repnz mov callq in rex.WRX fwait repnz xor repnz cmpsl rex retq in (bad) (bad) xor sub scas rex.WB cmp jrcxz loopne mov imul xor rex.WRX sub mov jge js (bad) (bad) je push test adc pop rex.WRXB (bad) or retq rex.WRB (bad) in (bad) rex.WB push lret vfnmsub231ss cmpsb (bad) (bad) pop retq test push (bad) (bad) (bad) jb je movabs (bad) callq pop push pushq sub shrb jl and xchg in push (bad) sbb pop icebp divl (bad) incl loopne (bad) mov bnd push enterq mov xor mov jns (bad) add xor movslq (bad) cli pushq pop mov fmull rex.WB fnstsw inc or adcb push int3 enterq outsl sbb xchg sbb retq pushq callq int (bad) enterq rex.WX mov rex.WB retq lret test push (bad) rex.B rolb ss (bad) rex.RX (bad) xor and ljmp popfq pop mov ss (bad) or mov (bad) jae insb mov adc add adc (bad) add rex.WRX lret (bad) loop add xchg (bad) pop lahf xor or icebp xor sbb lods mov xor insl callq rex.WR mov rex.WB imul scas adc add jae (bad) lahf pushq jle ja xor rex.WB pushq fcompl rorb adc or cmp icebp in jno mov xchg sub pop pop cmp xchg rex.WRB rex.RXB (bad) movabs xlat callq lahf mov movabs add (bad) add (bad) std sbb and in xacquire insb lods pop rex.WRXB push fwait cltd xor mov jmpq loopne incl mov (bad) jno mov (bad) insb fidivr out xchg xor (bad) fsts mov cmp ficom (bad) mov xor cmc add sahf (bad) stos jb mov lods rex.RXB rex.WX jmp (bad) pop mov rex.XB (bad) movq xor jbe (bad) movabs push mov xchg sarb repz loope or imul out cli rex.RB xchg xchg int3 push (bad) xor rex.RB rex.WB test mov sub pop rdtsc xchg push sar movabs add in test ja (bad) or int pop push fucomi dec mov jae jb lods and and or mov nop roll (bad) (bad) movabs adc movsl rex.RB rex.W data16 rex.WB rex pop or mov adc movabs pop push adc xchg sbb rex.WB jg (bad) jmpq sub rex.WB xchg xor xor movabs or xchg mov je andb xlat cmp push add rex.WXB test callq (bad) (bad) lods xchg or movabs sub rex.RX movslq push rex.WB js mov xlat (bad) scas rex.XB rex.WB movsl rex.WXB lods mov xchg hlt pop xchg cwtl cmp (bad) mov sub fstpt loope (bad) or rex.WR mov mov or rex.WRXB movslq jmp mov add (bad) clc push rex.X jl mov rex.WB cs (bad) pop xchg and shl sbb sarl or stos (bad) mov (bad) movsl rex.WB (bad) cld movsb sub std ffree fisttpll test loope mov push rex.WRX (bad) xor xor mov add rex.WB (bad) int jnp push or push cmpsl mov xor movsb or movslq rex.WRB (bad) sub push scas cltd push sbb push sub cwtl hlt (bad) in (bad) rcrl repnz mov mov sbb xor xchg movabs mov sub pop push rex.WXB (bad) ss add fidivl rex.RXB mov mov pop (bad) popfq rex.WB or rex.WB jl xchg cli cs sub insl (bad) int3 fwait xchg sbb push and or gs push (bad) jrcxz sub pop (bad) gs gs (bad) push movsb (bad) cmp xor adc movabs ds rex.WR orl icebp test sub fist stc rex.WXB pushq mov movabs pop test xchg sbb sbb mov (bad) cmp or cs push and test cmp rex.WX rex.WB gs retq lahf xlat (bad) mov xchg (bad) cmp popfq callq out rex.WRXB stc rex.WB stos fnsave (bad) je jrcxz and movabs mov rex.WRX rex.X sbb rex.WB test xor adc adc in (bad) rex.RX fwait and (bad) push leaveq callq (bad) rex.WR mov jmp adc cmpsb (bad) jg rex.WRXB (bad) enterq shll mov lret pop cmp ljmp lock adc mov sub mov rex.WR cli sub jg repz mov rorb scas sub clc add sub mov repz mov addr32 stos fidiv fisubrl cmp rex mov gs loopne stos rex.WX js clc xor clc and rex.XB (bad) (bad) rex.RB mov insb push mov (bad) cmp (bad) test push movabs rex.RX mov cmp mov cmp sub cmp data16 stos rcr add enterq rex.X xor jbe retq sbb rex.XB add pop xchg or mov (bad) (bad) rex.WX movabs fildll movsl rex.WX cs rex.WRX popfq push fsubs retq rex.WR cs add (bad) rex.WX rex.WRXB xlat lock adc sub jmp rex.WRXB rex.RB mov leaveq push fstl adc and sub stc jbe push mov rex.B data16 outsl xchg mov insb rex.WXB ffreep add lret and pop scas mov movsb adc pop push rex.WX jmpq cs or rex.WR jnp callq push (bad) rex.W rex.WRXB add mov push push popq xor lahf and imul xlat (bad) jmpq adc and (bad) pushq stos adc movabs (bad) jmp (bad) insl rex.RB rex.WR or (bad) jne cld shrb rcl cmp cli and cltd and lret ror sbb mov callq jb movabs jno jmp xchg xor clc pop mov pop sub jle (bad) data16 (bad) test sbb (bad) scas push pop pop rex.WX mov sbb jge (bad) sub mov repz cmp clc rex.WX lods pop enterq movabs cltd cmpsb imul rex.W or xchg clc outsb mov sub pop adc out and adc xor add mov pop in rex.B rex.WXB sbb adc pushq (bad) test xor cwtl lods jrcxz rex.XB jne pop popfq xchg pop xchg rol inc movsl xchg (bad) pop sbb (bad) rex.WR rex.RB (bad) xchg test iret push retq jnp adcl je ds add adc shll packuswb rex.WB mov cmp xchg and test adc push xchg cmpsb xchg xchg jo jne retq rex.RB movslq or outsl sbb (bad) addl or pushq sti jge lahf xchg cs mov movl in mov cmp pop mov lret gs movabs data16 outsl movabs cmp rex.B sub lret mov icebp (bad) rex.WB rol stos pushq (bad) sbb lea (bad) test (bad) rex.B rex.WR cmp xor jae sub pop and sbb outsb mov rex.WRB rex.WB rex.RXB or (bad) mov jne lret cmp rex.WB bnd and lods rex.W push mov int (bad) (bad) rex.RB movabs pushq rex.WR pop mov test xlat cwtl in movsb rex.WB in int3 fistp cmp test clc jl rex.RB fnstcw outsl movabs adc rex.WB rex.RB hlt sub rex.WRXB rex.WB rex.R jae jne movslq lret sbb movabs lcall mov xchg pop push test fimul cmc callq loope rex.WB jb clc sub rex.X or movsl callq (bad) pop or mov mov leaveq (bad) rorb jns cmove enterq neg xchg (bad) and popfq rex.WB out out pop rex.X sub xchg sub xlat pushq push (bad) test xchg cmc xlat pop xchg adc movabs rex.WRXB cmp jle xchg nop rex.WB pop pushfq cmp enterq callq and cmp scas jmpq movabs fdivs movsl rex.RX in xchg (bad) rex.XB cmp lea loopne mov mov jrcxz sub js imul (bad) mov out lahf mov sub callq int3 mov loopne ja xchg pop movabs cmp rex.WB outsl push xchg add rex.WB and (bad) je push and (bad) movslq or push xchg rex.WB ds cs xchg (bad) fbstp mov adc adcb sahf (bad) and rex.XB in addr32 (bad) jnp cmp movabs adc jb in pop or or xlat rolb rex.WRB repz jmp (bad) jl mov xchg lret rex.WX rex.WB (bad) rex.W rex.X rex.WRB rex.XB mov rex.WB movslq add add sub rolb adc jnp jns (bad) fs rex.WXB rex.WB xchg rex.WR rex.B and and (bad) repnz jp mov or mov rex.RXB cmpsl movsb callq xchg mov (bad) or adc js mov adc add rex.W rex.RXB retq xorl pushq and xchg rex.WB ficomp pop (bad) rex.WRB fisubrl retq repz (bad) negl sbb sar (bad) adc lret insb imul pop push sbb scas stos cmpl add scas pop xor movsb xchg (bad) jnp (bad) pop fisttpl fild (bad) std xchg jle cmp rex.R rex.WB test scas sbb xor xchg push or xchg rex.WB (bad) insl push (bad) in jmpq (bad) mov pushq (bad) rex.WB mov cmpb mov (bad) (bad) jmp pushq rex.XB fildll cmp or hlt (bad) cmc jmpq insl mov add int mov jne add cmpsb fs sub pushq stos mov rcrl rex.WB mov adc and (bad) fldenv callq and out or outsl lret enterq test (bad) jl rex.X movabs movslq rex.RB xchg je xor (bad) (bad) xor ja loop xchg popq (bad) and xchg pop mov pop movabs jg and clc out mov sub popfq xchg cmp int3 rex.WB sub xchg push movabs cmp (bad) addl mov rex.WB lock jrcxz icebp movabs movsl rex.RXB rex.WB jrcxz callq movabs mov iret test push int3 push rex.RXB xchg rex.WB (bad) sbb xlat mov sub movabs rex.RXB fs rex.R test push outsb or sub push (bad) sub sub pop rex.RB repnz movabs movabs mov cmp mov or (bad) push cltd test xor notb and adc callq (bad) int3 addr32 sub int3 or cmp pushq xor rex.WXB push sbb (bad) or (bad) loop push (bad) movsb rex.XB fsubl cltd rex.B movabs adc jrcxz idivb sbb jne xchg andb mov pop loopne pop imul add movabs pop or movsb (bad) or pop sub mov push pop rex.WB pop movsl xor imulb cmp orl addr32 rex.WX addr32 movabs xor rex.WX mov repnz push rex.WB or adc rex.WB push lahf (bad) movabs mov rex.WRXB xchg rex.WB shll test sub rex.WRXB pop sbb retq adc rex.WB xchg movabs sbb repz frstor (bad) adc rex.WB rex.XB leaveq addr32 fstl loop jb (bad) (bad) pop data16 add stc mov sbb xchg cli lea push push adcq nop (bad) jo test cs popfq pop vpaddd js cmpsb fisttp movabs movb (bad) mov int3 out jns pushq jne fcoml fwait (bad) push lcall mov stos sbb add pushfq xchg (bad) fbld movabs fiadd rorb rolb xchg cmp adcb sub xlat fisub add push callq rol push rex.RXB rex.WB and sbb lret rex.B rex.WB icebp repz addr32 (bad) jl outsl push rex.WR js xchg rex.W jg pop clc (bad) sbb mov fsubr rex.WRXB rex.WRXB cmp rcr xlat (bad) cmc lret paddw (bad) (bad) lods repz jrcxz lods rex.X mov or pushq je xchg mov sbb cmpsb sub xlat (bad) xchg mov and adc xchg rex.WR loop or and push (bad) xor movslq stos rex.R test (bad) xor and push pop sub (bad) fnstcw xor hlt rex.WRXB and sbb or or mov nop sub jle ja adc cld mov outsb (bad) cmp (bad) xor adc popfq hlt outsl xorl and stos sub jns rex.WRB test jnp sbb pop sysexit xchg cs or insl mov inc push rex.X cs gs (bad) pop cli xchg loop (bad) jmpq (bad) cmp rex sbb xor (bad) mov add rex.WB rex.WB (bad) notb rex.WB jns,pt (bad) mov add movabs mov rex.WB icebp rex.WXB movabs mov test cmpsb rex.WX pushfq pushq cmpsl rex.WRXB push imul adc add movabs fstps iret jmp fcomi es cmp sbb sbb (bad) cmp retq loop and insl (bad) int xor fstpl imul int adcl insl ja mov pushq movabs rex.RX subq iret sar (bad) jne (bad) movsb rex.WB (bad) (bad) decb jo xor sbb fidivrl (bad) mov and (bad) rorb rex.WRB rex.WR cli push mov mov and rex.R pop stos (bad) add pop out mov fdivrl add fidivr pop jns xchg lret movabs add sub (bad) movabs mov rex.WB rcrl sub xchg xchg rex.WRX (bad) out sub jmp xor mov leaveq cltd (bad) mov rex.WB stc push xorl rex.B or rex.WB xor outsl ds cmp pop push ja pop jbe add jg or mov adc cmp and repnz sbb adc rex.WB (bad) rex.WX rex.R es rex.W test rex.WB fucom hlt xor pop in cmp sub rex.RB rex.WXB sbb (bad) rex.X fbstp in push sbb insb (bad) xlat sbb jbe xor or minps mov in rex.RB push out sub or jrcxz pushq sub sbb sbb loope sub mov rex.WR rex.WB movabs in rex add cmp andl jle mov rcr (bad) int3 sub add rcl je (bad) xlat ja xchg mov sub xor cmpsl adc add cltd movabs jns lret rex.WB adc scas shrl movslq rex.X cmp jo loop sbb int3 push mov shr sub cmp xchg jnp (bad) pushq (bad) or sub xlat xor jp xchg jge rex.WB fcmovne stos rex.WB rex.WRX adc cmpsl cmp or stc cwtl data16 xlat data16 jo and push and xor (bad) callq in mov orl fstl rex.RB or test rex.WB test xchg in mov (bad) andb (bad) rex.WB mov rex.WB add mov fdivr pushq rex.W jbe push and sbb push adc xchg (bad) rex.WB or rex.RX movabs lods sub callq rex.RX fimull pushq lcall mov xchg cwtl scas mov (bad) pop rex.WRXB fucom rex.WB or mov jo out js mov mov mov cmp xchg pop lahf fnstenv (bad) je sub and rex.WRXB loope rex.WRB rex.WB rex.XB shrl cmp mov and (bad) (bad) fisttp in xchg mov (bad) xchg cmp rex.W rex.WB rex.RXB add or sbb loope add jp lret pop push rex.WB movabs pop retq fbstp and mov xchg shrq (bad) mov or sti pushq xchg movabs rcrb loop testl jle xchg jp rex.WB lahf orl pushfq rex.WB fwait lret mov rex.RX sbb loop rex.WB hlt test and or mov xchg (bad) mov enterq jne push add rex.WR and lahf and cmp jmpq rex.WRX xchg movabs rex.WB adc push stc retq (bad) mov jae loop or xchg testl xor rex.WB fdivrs (bad) divb rex.WB insb (bad) popfq or (bad) (bad) cmp and rex.R ror icebp rex.WB sarb mov mov or leaveq mov or push shrb int mov (bad) rex.WB es testl jg add rex.WB jo add loopne and or neg mov sbb mov (bad) lods or vandps jns jle fimul leaveq rex.WB add rex.WB sarb push outsl test (bad) rex.WB retq jge (bad) rex.WR loope bnd in rex.WB jo cmp cmp cmp cmp rex.WRXB callq subl jmpq jl test xlat (bad) popfq lock rex.RX shlq sub stc rex.WB xor mov sbb icebp fwait pop subb sub add mov jae pop (bad) mov xlat sbb (bad) mov in ja movsl lahf cltd jmp xor adc callq jns or rex.B mov jb lock sahf retq fs rex.XB and int pushq sti mov rcrb shr out retq movslq push insl rorb int3 and jne jbe repnz xor xchg cmp sub mov rex.B incl jrcxz mov sub rex.WB rex.WX xlat (bad) push rex.WB (bad) rex.WB jno js (bad) sarb mov add and sti push pop (bad) xchg loope rex.WRB push mov push rex.WB mov callq (bad) xor xor rex.WRX (bad) (bad) sub (bad) add imul (bad) rex.WB push clc xchg lret adc jmpq (bad) in adc cs fwait rex.WXB imul (bad) movsl fpatan int adc imul xchg push mov sbb jl idivb xor test xor (bad) rex.WXB enterq stos hlt push scas jno fiaddl (bad) xchg fbstp xchg xchg rex.WB (bad) (bad) jmpq out mov and leaveq add rex.RXB popfq mov movsb jne sub in rex.B cltd stc and or std clc mov cltd xlat faddl enterq xchg mov movabs or jmp (bad) and sub test adc repz fldenv cmpl out gs rex.WRXB rex.X sub fisubrl cmpsl movabs rex.WR (bad) adc lret addr32 mov pop addr32 push xor add sbb sub loop gs pop push movsl rex.WB out cmp rex sahf cld add test xlat rex.WRX cltd and rex.WXB add rex.WB rex.WRB xchg sub or callq mov rex.WB xchg rex.WB rex.RXB jae loope jmpq xor rex.X sub cltd xor adc int pushfq (bad) lods or ficoml and add push rex.WB (bad) insl xchg (bad) pop decb rex.WX test push fwait cmp retq ja mov comiss fild test adc jle pop mov push hlt mov xchg data16 rex.WB cmp jrcxz cwtl enterq gs lock lret rex.X push (bad) rex.WB rorl sbbl pop retq push je in mov rex.WB (bad) xor fsubl rex.WRB pop movabs or xchg rex.WB rex.WXB and sti and push repz mov (bad) or in pop mov jb imul rex.XB jmpq adc xchg addr32 test out rorb push (bad) pushfq add movsl add movsb xorl loopne xchg scas push xchg insb and test loope lock nop sbb js cs in (bad) jrcxz (bad) insb rex.WB rex.WX or xchg push fstpl (bad) fwait leaveq std (bad) insl and faddp jge rex.WB xor add or or (bad) push in or sbbl movb loopne cs rex.WB (bad) test mov (bad) (bad) jne lret rex.WB rcl push out mov or mov or test mov notl or (bad) sub mov (bad) stos mov gs in pushfq mov test push rex.WX jmpq (bad) lods jo fdiv (bad) cmp sbbl iret (bad) mov xor add (bad) sub ds add push jns (bad) (bad) push js (bad) in push jp cmp jmpq rex.WB and or mull (bad) lock lret rex.WRXB cmp rex.XB mov rex.WB popfq mov xchg mov hlt rex rex.WRB lahf retq fadds pop add retq pop cmp pushq (bad) rex.WX rex.WB loopne outsl callq lea mov stc (bad) mov subl (bad) loop push rex.WX fidiv sbb sbb insl jb pop movslq movabs test popfq or (bad) loop rex.WRXB rex.WB mov pop jp and int push mov roll pop xchg (bad) add rex.XB stc and scas retq (bad) mov (bad) movslq es movabs sbb rex.WB mov std sar in or (bad) sahf sbb xchg lock and and pop cmp incb enterq sahf pop in mov movslq (bad) in xchg sub rex.X jae sub (bad) ja addr32 pop cmp add and cmp f2xm1 mov out or (bad) data16 movabs add rex.WXB jnp fisubl subb in mov out mov rex.RX sti icebp push pop xor cmpsl movabs out mov insl (bad) iret cwtl movabs addl xchg lret rex rex.WB sub sahf (bad) cmp sub jge xchg (bad) xor mov push fdivs adc rex.W cld fsubs mov mov (bad) xor (bad) cmpsl rex.RXB movabs rex lock leaveq mov rex.WXB (bad) cmp cmp push rex.WX rex.WB rex.R stos or cmp or mov in test mov pushq ds mov (bad) cmp sbb movabs xor add xchg rcl js rcrl push adc ficoml insl xchg mov cmpsb out sub cld pavgw xor mov and shrl push add rex.WRXB add pop adc and in jae push rolb (bad) stos jbe (bad) xor mov mov or jb loop callq rex.WR mov stos adc notb add rex.X sub add out subl or sub jne repz add jo (bad) pop xor and cmp mov jrcxz lret test popfq shr data16 repnz (bad) jo (bad) outsb shrb rcrb fcomps and icebp (bad) xchg cmpsb jno lods cmp sbb rex.WX sub adc imul rex.WB and callq xor lret rex.WB gs icebp and imul test sub xor cmp callq hlt jae sets or (bad) (bad) icebp pop jns mov ds mov (bad) xchg (bad) pop rex.WRXB rex.WB (bad) (bad) imul and push pushfq hlt rex.B mov (bad) cmp mov (bad) cltd rex.RX rex.X test and rex.WRB js jae jb mov rex.WX repnz std xor cmp mov mov rex xchg mov loop cltd loopne repz div addr32 or mov xchg rex.WB test rex.WRB cmp push and jmpq or adc retq lea cmp sub or rcll rex.B in sbb ror rex.X sbb scas mov fs rorb (bad) hlt xchg repz or cmp pop in cmp fimull mov imul cltd enterq or pushfq lret and mov push xchg rex.WB pop jmp pop push pop rex.WB xchg add (bad) cli in movabs callq jne push add xor movslq rex.WRXB rex.WRX test jmp rex.XB lock imul sti xchg rex.WB mov scas scas cmp je in retq insl callq (bad) xchg mov fcmovnu sub pop sti jmp push movabs cltd fcompl xchg rcr xchg (bad) jnp (bad) cld (bad) imul xor jmpq mov (bad) (bad) gs scas mov pop (bad) mov rex.WRX (bad) outsb mov fsubrs rex.WX and retq (bad) fcmovnu rex.XB enterq movabs rex.WB cmp movabs js mov rex.XB sub and cmp scas cmp loop (bad) rex.B test sub sti sub cmc rex.WB mov loopne jg fwait mov lahf xor stc cmp (bad) mov rex.WRX jne rclb retq imul fdiv rex.WB adc pushq (bad) and lret rex.WB callq rex.WXB addr32 std rex.R loopne cmpsb nop add stos xchg or enterq callq xor movabs insb rex.WB rex.W xchg sti cmp fmul callq sub addr32 fldl rex.WB (bad) mov (bad) icebp ds and lret scas orl insb pop sub callq in and sbb mov test jg ds or jne (bad) push rex.XB sbb pop icebp movabs lods sti mov pop sub retq pop fnstenv (bad) lock rex.WRXB icebp ss fild lret and insb lahf test push rex.WB repnz stos orb rex.XB or or sahf insb imul jno mov cmc adc enterq mov xor movsl (bad) shll adc out cmp sub out rex.WXB pop hlt sub (bad) out jp xchg mov insl (bad) rex.WXB jl rex pop pop test adc fsts ds pop or or lret jne movsb mov (bad) and xchg outsb jl (bad) movsb pop mov idiv add fs movabs (bad) lods rex.WXB js jb cs add ds rex.WB movsl or add (bad) ss jmp movabs ds xchg fcomp jle decl movslq ja cmp mov stos add xor rex.XB add cmp sub addr32 xchg adc mov xchg rex.RX mov adc stos out mov pop lahf mov adc insl callq (bad) cmp stos fadd xchg push mov cmp out fcoms push xor test leaveq or out cwtl (bad) cmove (bad) lods loop mov test (bad) insl jno rex.WB cltd (bad) rex.XB xchg cld sub mov or and hlt pushq sti rex.WB (bad) rex.WRXB fbstp (bad) loope push mov mov sub insb rex.WRX sbb stc (bad) int jrcxz mov adc sub mov icebp fwait and sub rex.RX rorb pop sub outsb rcrb or sbb (bad) out in add cld (bad) int adc rex.RB rex.WXB fnstsw stc jge popfq add xchg mov mov (bad) rorl sahf xor nop gs cmp xlat mov movabs fs cmp rex.WXB rex.B sub clc jrcxz rex.XB and or lods mov mov adc mov (bad) je out rex.WB add shrl jno incb rex.WB push adc je stos lahf and adc fucomip sbb ja mov jge fsubrl frstor in (bad) (bad) cmpsb rex.WB (bad) (bad) rex.WB (bad) rex.RB add adc and (bad) cmp adc movabs int3 imul (bad) jle rex.WB mov (bad) movslq repnz rex.RXB sbb stos xchg adcb (bad) mov pop stc (bad) and sub roll (bad) mov xor rex.WX add sub out cmp cmc callq xchg pop (bad) sarb retq jle scas rex.WB fwait stc mov cld lahf lods rex.WB (bad) rex.WRB sbb rex mov movsb jns sbb or sbb rex.WRB insb jrcxz mov xor adc jae rex.WXB rex.WB mov rclb rex.WB out xchg jb rex.WR push rex.WB cs (bad) xchg push jae rex.WB int es cmp xchg ds push xchg (bad) loope sub mov or sbbl fwait xchg jno loope push add or scas andps rex.WRX (bad) rex.WB rex.RXB rex.R (bad) (bad) add sbb loop jg lret (bad) retq out enterq pop or lea jge (bad) cmpsl pop movabs xlat and cmp in jno mov pop and callq movsb pop rex.WXB add mov mov mov outsl pushq xorl pop popfq rex.X ss out sub and (bad) enterq mov rex.WXB rex jae pushfq (bad) lock rol rex.WB js xlat add sub jb jmp scas lret out push xchg sarl pop xchg pushfq jg (bad) rex.WB (bad) jge push movslq outsl adc mov cmp movabs (bad) mov and rex.WB ss movslq (bad) nop jmpq jns adc repnz rex.W (bad) mov movabs adc loope (bad) pop sti or mov mov pop jbe pop (bad) xchg pop (bad) icebp xchg imul pushq xchg add movabs sub (bad) mov rex.RB test mov pop rex.X lret add sub insb pop mov rex.B rex.WR rex.WRXB mov xor lods cltd out cli xor repnz data16 test adc retq mov pop jrcxz jnp rex.WR rex.WX push push (bad) jbe movsb mov lea jle rex.WX jbe rex.XB cmp jbe adc popfq rex.WXB mov std (bad) cmc or in mov lret insb pop rex.RB xchg shrl jg jnp popfq add sbb rex.XB jg addr32 jge in ja pop rex.XB jge jge or rex.W retq stos (bad) push (bad) mov add push or sar (bad) sub jmpq adc ds rex.R idivb test xchg xor movsb jg scas rex.XB adc (bad) out loopne or cmp (bad) std vmaxpd and sub addr32 (bad) cmc add fs push nop imulb (bad) cmpsb sbb adc out vmovsldup add sub (bad) rex.RXB (bad) mov addr32 (bad) rex.R mov addr32 js popfq rex.WRXB movabs xchg fiadd mov mov mov mov (bad) rex.RX mov pop cltd test imul sub imul rex.WRX add or leaveq insb rex.WB sbb add hlt rex.WB pushq jnp xchg sub in push jl loopne fdivr (bad) fcmovnb xor rex.WB cmpb sub scas xor pop mov push rex.WX rex.WB pop add (bad) mov gs or sub sub cmp push cmc rorl scas mov push rex.WXB rex.WR mov int3 callq mov rex.WRXB push and pop fldenv (bad) mov fimul jns incb push icebp gs jmpq and std int3 and loope jrcxz or lret rex.RB sub rex pushq jne (bad) (bad) push es fstenv xchg stc pop rex.XB repz jmp push mov test test callq sbb test pushq sarl pop rex.WRX or hlt mov rex sub sbb popfq rex.WB (bad) pop mov movabs rex.XB or out (bad) (bad) sbb shl cmp lock pop fucom xchg xor pop repnz in jp imul fsubrs in addb and rex.WB cmp xlat mov (bad) rex.WB xchg cmpsb pushq cmp vpaddq xchg mov leaveq shlb xor fisub int mov rex.XB jge jne mov movsb shrl cmpsl xor rex.XB (bad) cld (bad) jbe xchg movabs rex.X rex.R incb int xor roll stc rex.WB cmc cwtl (bad) cmp xorb neg jle rex.WRB sub (bad) negl mov add push rex.R addr32 lock rex.WXB imul jne (bad) mov add (bad) cli fnsave mov pop clc fiadd int3 data16 xor rex.WB retq pop scas or outsb xor xchg (bad) mov je sbb (bad) rex.WB rex.WXB scas cltd add repnz rex.WRXB sahf imul stos sti sub rex.RX pop (bad) sub rex.WB rex.WRB mov jle or sbb jno push pop (bad) or or pop mov enterq sub adc lret movabs rex.WRXB (bad) lret sbb (bad) scas cld rex.WRB jge or out movabs pushfq (bad) cwtl rex.WB in (bad) (bad) jno and adc popfq (bad) fwait pushq mov jle mov outsb (bad) (bad) (bad) rex.RXB sub insb divb (bad) cmpsb and jmp jle push sub fimull push mov loopne movsb mov fimull insl test stc imul sbb fild rex.WB stc sbb cmp rex.WRXB movabs test mov (bad) clc and pop rex.WB sbb leaveq mov sbbl es add lret mulb sub out adc push lret (bad) fstpt (bad) (bad) outsb test and pushfq cld pop (bad) push rex.WB cmp push fmuls rex.WB (bad) sub sbb ss insb add orb icebp sbb jne pushq (bad) imul adc and rex.WB xchg out in cmp xchg rcrl scas sbb test retq sbb push mov (bad) in lea data16 (bad) loopne (bad) scas outsw xor xlat xor callq add lret xchg incl notb loop lods fdivs pushq and jl adc xchg and xchg imul imul pop (bad) xor lods loopne ss sub (bad) sbb rcrb sub out cmpsb pop flds mov xor fadds or subl mov mov rcrl pushq mov es xor hlt xor test mov movhlps (bad) mov xchg nop jae cmp xor (bad) cltd pop sbb sti xchg rex or out movabs (bad) sar (bad) fdivs or movabs cli enterq pop push or icebp xor adc (bad) rex.RXB rex.R out lahf pushq int iret fsubrp lods cs pushq or (bad) pop jno (bad) cmp add adc mov mov test jo lods (bad) adc push rex.WRX mov lock rex.WR (bad) xchg hlt sbb adcl adc (bad) lea (bad) clc pushq movsb rex.RB mov sbb neg mov sub scas fwait cld (bad) outsl rex.WR push adc and jno enterq retq or jo pop mov xor out test (bad) movsl adc icebp and (bad) rex.WRB rex.R (bad) (bad) jb sub pop jl (bad) jno sub mov shrl fst and push cltd rex.X cmp rex.B pushq add mov xchg shrl pop out and xchg push outsb push (bad) and jp or sub je xchg pop mov (bad) sub jg rex.XB or push mov rex.WB mov (bad) or push rex.WB rex.X and xchg cmpsb rex.WB push (bad) mov fldt (bad) (bad) lea rex.WRX rex.WB rex.WR fisub lock ficoml jp mov jrcxz push sub sbb cmp fdivs push cmp or test (bad) lret iret adc mov mov adc (bad) jno cmp (bad) test push imul pop fs lods scas rex.WB mov xor jg adc mov shrb mov xor ds movabs rex.WRB scas fnstcw retq xlat mov scas fisttpll rex.WXB sub mov out cmp movsb (bad) and imul push ds iret add mov rex.XB (bad) outsl and cmpsl rex.RX adc push or mov (bad) (bad) ja mov lret roll mov cmpsb cmp rex.WX stc or mov je cli rex.WB rex.WR mov cld rex.WB adc imul xor decb or adc sub sbb (bad) mov outsl rex.WX es loopne cli mov jae (bad) sub (bad) addr32 mov sbbl jno rex.X cmp cmp out push mov (bad) in lock sahf or jl adc (bad) rex.WB rex.W rex.WXB adc nop test insb rex.B in jmpq xchg lret xchg int vdivpd (bad) adc gs imul jns and sub clc cmp mov xchg mov lea fst gs sarl shl push rex.WB rex.RXB jnp or icebp rex.WB sbb insl pop rex.RB rex.WB (bad) rcr cwtl pop imul (bad) xor sbb (bad) enterq or (bad) imul add cmp adc (bad) rex.RXB rex.WX jbe ljmp movabs pop fistpl jo jmpq rex.WB (bad) (bad) cmp adc fimul sar xchg movsl movsb (bad) xor sbb cmp (bad) jbe sub adc enterq mov rex.WB sub rex.RX push rex.WRX or xlat (bad) cmp movabs adc and sub subl xorl push (bad) mov addr32 push callq pop stos sbb insl rex.WB mov stc (bad) rex.WB repz icebp xchg xlat loop and (bad) imul mov pushq lahf (bad) mov (bad) xchg rex.XB pop mov rex.XB (bad) sahf pop sub pop adc mov (bad) jle sbb (bad) (bad) iret rex.WRX shr out retq or or leaveq rex.WB fist out mov rex.RXB and lret clc adc jmpq mov shr callq push jnp (bad) cmp push movabs (bad) sub lods pop rex.X xchg and rol rex.XB rclb sahf (bad) test pushq ja add cltd push loope rolb rex.WB movabs leaveq in (bad) mov (bad) jge add rolb fstl roll xchg cli (bad) xchg (bad) sub or mov mov (bad) movsb jp loopne jmpq (bad) cmp rex.WB pop or or add loope xchg sub rex.W lret clc and sar es sub cs lock (bad) push insl mov cmp rex rex.WRX mov std test pop add adc add and push rex.RX rex.WRXB sbb push (bad) adc ja imul cld rex.WRB rex.B movabs mov rex.RXB rex.WRX rex.WB clc mov rex.WXB lock or xchg rex.WX mov scas int3 shrd enterq add jrcxz sub ds test retq pushfq (bad) rex.WXB xchg pop (bad) fild rex.WB lret addr32 outsl xchg cmp sbb rex.RB movb rex.WR rex.WRXB jle mov movsb pop mov cli lret cmp mov jae sub rex.XB int3 retq xchg test sub xor stos out sbb out movabs outsb sbb movsb add rex.WR fisub pushq pushq sub sbb (bad) (bad) xor xor retq jns xchg lret jl lahf pop movsb mov (bad) movslq mov cwtl shrb test rex.WB adc mov iret mov ds outsb jne lret test sub jb popfq cmp shrb js cltd (bad) fiadd popfq cli pop mov adc icebp cmpsl movabs rex.WXB test jne pop or rex.WB loope (bad) add xchg lods in cmp (bad) lahf add rex.WB adc rex.WB in out cld gs rex.WB mov sbb loope push sbb push mov xchg mov leaveq imul mov xchg mov xchg xchg push test (bad) mov xlat fsubs jp rex.X lret push rex.RB rex.RXB repnz mov rex.WB xor rex.RXB rex.WRXB jbe cltd cmp jmp (bad) (bad) xor rex.WRXB (bad) sahf test push test scas or (bad) jp rorl rex.RB callq (bad) mov (bad) hlt movslq xor jg rex.WB movabs cltd lods rex.WB or cmpsb addr32 add sbbq cmp icebp repz rcr es rex.X cli fiaddl add push add mov mov push push jb fiaddl movabs cmpsb (bad) lock (bad) outsb (bad) rex.WB test add sarb cwtl sbb or and add cmpl in rex.WRB loopne pushfq rex.WB rex.X (bad) lods xchg and hlt movabs out out sub push xchg add fisub insl callq (bad) mov movsl mov je test adc sti lahf and xor rex.WRXB outsb sub mov callq callq (bad) test je fldl (bad) or rex.WB (bad) push cmc ficom jle xchg mov movabs out pop pop rex jmpq pop xor jbe pop jns in lods incl rclb or sbb fildll mov adc xchg mov sbb rex.WB stos jo std popfq callq mov loope fistp lahf lahf xor push rorl xchg retq fs (bad) mov adc out (bad) imul mov callq sub imul lret xor mov and sahf sbb xchg or pop rex.WRX rex.WB repz mov mov movslq stc sub fwait cs and rex.WR (bad) push outsl pop stc movabs adc sbb sub sub out cmc jrcxz test stc push jle push push cld movl jle lahf or sahf gs push and sub (bad) in mov rex.RXB (bad) (bad) jbe outsl sub in xchg pop (bad) pushq in rex.WXB and (bad) (bad) out (bad) jno mov (bad) (bad) (bad) sti cmc push (bad) rex.WB (bad) mov xchg fildl retq stos cld (bad) lcall (bad) rex.WB cmpsb cmp jle lret (bad) fidivl mov (bad) xor loop sub in or add rex.WB rolb sbb pushq rex.XB rex.WXB rex.RX rex.WB repnz (bad) mov sar sub (bad) (bad) pop mov (bad) callq push mov fadds add xchg jnp xor (bad) (bad) fs sti (bad) or rex.WB lods icebp (bad) push movabs push and cmp nop (bad) rex lods orb sub xchg adc rex.WRXB or (bad) roll add rcrl (bad) mov push jae xlat cmp or (bad) cmp stc push in rex.WB pushq xchg push rex rex.WB (bad) mov pushfq lret pop imul and jmp rcl (bad) (bad) sbb xor rex.WRX movabs insb add jns push push rex.WB cli adc callq fdivp jbe mov mov (bad) rex.WXB push cmp pushq jmpq nop pushq stos push leaveq fwait repz andl cli lock ds rex.B rex.WB jnp fistl mov sbbl ja scas (bad) lods (bad) rex.WB lock lcall pop xchg stos jbe movsl adc movsb xchg es push sub repnz mov pushq or lock and mov out mov jo notb rex.WRX pop jns vmovups fistpl rex.WXB rex.WX test insl gs loope push xchg (bad) cmpsl (bad) rex.RX (bad) sbb jg cmp (bad) cwtl enterq stc xor imul (bad) mov in out rcl rex.WB ss insl movabs rcrl rolb mov loopne mov xor out xchg or sbb icebp rex.B rex.WRX xlat movslq rex.XB pop jp rex.WXB je mov movabs xor in adc movslq std rex.WX mov pop fs rex.RB nop xchg push (bad) rex.WR push iret cmp or cmp jo fildl rex.WRX repz sar (bad) mov rorl (bad) push gs (bad) es test and (bad) in shrb (bad) (bad) out (bad) add (bad) (bad) push xchg js jnp rex.WB xor sti xor add int3 jb sub (bad) rex.WX xchg repnz rex.WB mov (bad) in rex.WXB (bad) pop pop jle roll sub (bad) callq pushfq sarb rol fsubrl loope pop (bad) outsl loop xchg push and rex.WXB jno fild rex.WB xor xor push imul pop xor (bad) or or in adc ss lock (bad) loop rex.WB pop rex.WRX jae rex.WXB stc sbb push and movslq sub (bad) (bad) rex.WB adc test pop pop orl (bad) xor hlt jmpq and rex.WB rex.RX rex.WX rex.WB ja mov mov rex.WB cmp rex.W mov pop xchg pop cmp dec or callq sbb cmpsl push gs (bad) out out lret push mov sahf add data16 cmp pop sub or movsb jne mov rex.B addr32 rex.RB test adc insb sbb (bad) mov jg (bad) jp cltq retq out in stos jrcxz in nop rex.WRX popfq jno mov or fwait and hlt (bad) popfq xchg sahf jge and scas ja retq cmc insb movsb pop xor jmp xchg cmp or (bad) (bad) sub enterq ficoml mov mov xchg jae rex.WB nopl sub (bad) mov pop movabs vmovddup movabs mov (bad) or std stos pop outsl rex.WRB jle mov retq xchg in xor movabs sub lods rex.RB (bad) movabs rex.WR rex.WRXB enterq (bad) pushq jo pop sub (bad) out sahf nop popfq lret xlat or cmc nop (bad) sbb rex.WR fsubrs mov rex.R xor retq xchg adc and fwait shrl rex.WX pop (bad) push push rex.WB jmpq out rex.WB int3 (bad) lret out adc test xchg push (bad) or mov fsubl (bad) testl xor rex.X clc (bad) or pushq rex.RXB mov loop cld xor (bad) loope movsl iret int3 insb rex.WB jmp cwtl xchg movntq mov mov (bad) rorb xchg (bad) (bad) mov clc jbe cli rex.RXB rex.WB leaveq fistp rex.WB push gs cltd adc (bad) or rex.WB or mul insl xor mov ja cmp xchg mov movabs repz jle xorl and or xlat xor push clc adc sub xor (bad) xchg sbb push xor sbb and movabs test sbb cmp mov movabs es cmp (bad) clc rex.WB push lods add nop rex.W pop cmp sbb enterq fnstenv cld in cmc pand rcrl mov push (bad) (bad) pushq push rex.RXB out and ror fwait jo callq lods xlat rex.WB rex.WRB xacquire cli cld add pushq xchg pop cmc (bad) decb sarl (bad) rex.WB rex.RXB fildll test xchg movslq rex.RB jb xchg or adc rex.WB cmp mov (bad) fmull lahf jnp xchg subl and rex.RB rex.XB xchg and xchg nop rex.WB mov shlb sbbb add mov rol cmp adc jo rex.R loopne xchg mov jne out (bad) js cld js adc push jmp push pushfq jns xchg in imul adc adc (bad) in rex.RB (bad) (bad) sbb jne sahf or and pop xchg int (bad) loopne movsb rex.WB cmpsb test loop lods (bad) cmp movabs (bad) mov and (bad) rex.WB mov (bad) and mov leaveq jmpq rex.WR or cwtl adc (bad) (bad) mov scas (bad) (bad) rex.WB pop or std fcoms test repnz fcoml outsb xor movabs insb rex.WB callq rex.WB (bad) jg insb mov cmp xor cmp cmp out or lret and cmp jl enterq mov mov stos (bad) imul jp cmp and mov (bad) std jae rex.WB repnz xorl insl sub jmp rex.WRB rex.WB rex.WR (bad) mov rcr test xor (bad) insl push lret rex.X lods mov incb (bad) pop insl movslq popfq xchg iret rex.RX decb enterq faddl (bad) jb (bad) (bad) loope sub lods mov lret rex.WXB repz mov (bad) sub (bad) rex.WB rex.XB (bad) rex.WRB imul or clc fmul fstpt jo mov movslq push jae rex.WB mov jp fldl pop (bad) and rex.WB push sbb (bad) adc jge rex.WRXB cs xchg insl rorb hlt (bad) lret fldl pop rex.WB (bad) fucomp mull rex.WX enterq push xchg test mov imul pop xor addr32 sbb sub mov jb sahf rex.W rex.RX loope sub outsl andl scas mov adc out jne sub add jge mov insb sub scas fldcw leaveq xor sub jge (bad) mov push rex.WX scas cmp mov (bad) rex.X push sbb outsb xor leaveq (bad) pushfq out pop mov mov add addr32 movabs add rex.XB (bad) jg xchg cmpsl sub rex.WR jne out or and (bad) push pop sbb (bad) lock loope mov jno mov or (bad) repz loope (bad) scas out mov pushq sub cmc rex.RB mov jmpq (bad) insb (bad) mov jge mov rex.WB mov clc (bad) outsl stc gs out xchg mov add cltd lea xchg sub rex.WB fiadd rcr rex.WB (bad) push (bad) jb mov xor rex.WR lret rex.X imul xlat fs sub int lods testl push push pop jge mov and cli sarl sbb (bad) out (bad) xor int cmp rex.WB xor movabs rex.W loopne divl adc mov rex.WB cmpsb rex.WR jmpq push sbb ds xlat pushq (bad) mov mov loop and sarb rex.WB add loope negb push addr32 rex.R rex.WB add hlt push rex.WX pop rex.WB mov pushfq cltd js rex.WB movabs test (bad) data16 cmp rex.RXB fwait (bad) mov decl pushq (bad) rex.WRXB sar sub and sub (bad) rex.WB pop nop fmull rcll andb movabs insl jb movabs ja and rex.XB and jb rex.WB movabs movsw imul rex.B rex.XB stos sbb (bad) rex.B push mov int3 jge (bad) adc addr32 pop cmc adc orl test pop insb notl (bad) insl or rex.WXB rex rex.WR movabs movsb mov fildl (bad) add sub and (bad) rex.RB out sbb data16 rex.XB rex.WR mov adc mov add es jb (bad) xor and and std (bad) jne rex.WX lret callq add rex.WB (bad) (bad) push (bad) ss mov jns sbb (bad) outsl rex.WB push addr32 jge pushq fcompl mov mov scas xor fimull loope ds mov sti push addl rex.WB rex.WB rex.R andb rcrb repnz jae rex.WB mov test in out rex.RB rex.WB rex.B js rex.WB jle fxch (bad) rex.RX test pop rex.R pushq ss imul jnp mov pushq movsb push loope mov rex.WX pop loopne int3 pushq rex.R repnz fwait andb sub or cmp rex.WRX pop (bad) mov notl (bad) xor (bad) fildll nop callq mov jmpq mov pushq (bad) add fwait roll and fwait mov rex.WB rex.RB xlat pop icebp callq push cmp pop lret rex.X xchg rex.WR in rex.WX sub lods adc out test lods rex.RXB js out cld (bad) pop and jne mov (bad) je sub (bad) or cwtl pop movabs push or rex.RB rex.WB addr32 (bad) enterq (bad) shlb jo push sub in callq mov xchg push shl stc rex.WB movabs adc and pop insl mov (bad) push sbb hlt mov push mov jns insl rex.WB fnstenv and rex.WB cs xchg (bad) in leaveq or sub cmp data16 sbb pop stc pop and sarq stos jg (bad) xchg loope rex.RB addr32 loopne jle xor jo sub iret mov xchg callq or (bad) (bad) ds fs push (bad) (bad) rex.WB out notb or sub movabs add jb push (bad) rex.WX (bad) sub push push rex.WRX rex.B pop lods movabs cmp (bad) mov (bad) xchg mov add callq rex.WRX lahf mov or fadds fstps sub sub lret add rex mov rex.WB mov rex.WB fsubrl and fisubl add or rex.WB mov rex.WB jle jp pushq (bad) js (bad) shrq cmpsb (bad) rex.WB and movslq (bad) and mov sbb add (bad) lea rex.R hlt out push pushq repnz movsb (bad) rcrl rex.W rex.WRX rex.RB (bad) repnz xchg (bad) movsl loop sub mov or movabs fdivs rex.X rex.RX mov rex.B mov xchg movabs mov adc loope mov sub cmp (bad) stos push cltd leaveq mov mov imul rex.X sub sbb fdivrs sub fldenv ja (bad) push cld scas cli cmc cmpsl adc leaveq mov xchg fwait out movsl or mov fwait (bad) push jae (bad) rex.WRXB jno out retq rex.B rex.RX out in mov mov shr out pop stos ds xchg mov xor fsubrs sub or sub out rex.R pop adc jo sbb rex.XB cmp adc mov bnd sub rex.WXB mov jmp (bad) cmc mov rex.WRB pop (bad) cmp movabs xor xor mov (bad) cmpsb xor rex.WRX stos outsb (bad) jmp in mov cli or xor (bad) adc mov lods pop or int rex.R or pop xor cmc rex.RXB mov stos sub (bad) mov scas movslq rex.X jns (bad) sbb fsubrl adc gs jmpq rex.RXB jae callq push (bad) rex.WX enterq xlat test jg (bad) movsl xchg rex.WRB fdivrl retq mov outsb imul sbb shll (bad) in movsl lahf cmp adc nop lock sub cmpl jmpq andb lahf mov or jmp icebp out insb and rex.WB cmp rex.WR rex.WX (bad) adc fiaddl rex.WB sbb sub leaveq in and (bad) (bad) loopne mov xchg cmovns xor rex.WB (bad) xchg sbb xchg xor enterq jl,pn (bad) push adc sub adc lret fiaddl (bad) loopne rex.WB scas cmpsl xchg cmp pushfq and orb sahf and adc push or movabs jg cmp cmp sub leaveq rex.RX rex.WRXB sbb (bad) movslq hlt fs rex.WRX out sub sti loopne xor and push xchg adc rsqrtps cwtl rex.RXB lret sbb in (bad) add xchg sbb addl je xchg icebp pop add and jbe nop test or cmp orb imul rex.WX rex.WB sahf scas testl cwtl jp jae int movsb xor cli out sub rex.RB ss rex.WX cmp (bad) cmp and cmp (bad) sbb retq rex.WRXB and mov test mov callq leaveq js cmc pop hlt jle rex.WRXB rex.RB and (bad) movabs sahf rex.WX retq sbb sub (bad) rex.WB pop mov cmpsl and mov repnz xor add sub (bad) push sbb movsb adc jmpq (bad) xor data16 rex.WXB (bad) xor (bad) or rex.WB js or or cmpsb xchg in rex.WRX rcr add push jno rex.R hlt jns addr32 rex.WR rex.W rex.X or push sbb rex.RXB rex.WB rex.XB je shll mov pop repz cltd sub test rex.WB loopne jl testb (bad) cwtl fcoms rex.RX clc rex sub jns vphadddq rex.WX test push movabs jo cmp mov xor cmp and retq retq cmp scas push movabs (bad) jmpq jne cwtl xchg (bad) retq orb out jmpq push push sub mov rex.RX movabs shlb (bad) iret movabs out rex.WX pop leaveq cmp pushq mov or jp orl movabs rex.WR add in rex.WX rex.X or or fstpl pop adc data16 rex.B lods mov or rex.XB mov stos insb rex.WXB push jle je (bad) cmp pushq push movabs icebp or enterq cmp gs lods imul out push xor pop stos (bad) rex.RX (bad) pop jo rex.WRXB cmp xchg (bad) add rex.W data16 test (bad) push add cmp mov rex jle in out sti je or sub mov mov jnp jp (bad) mov fwait repz xlat mov pop cmpsb rex.R rex.XB pop notl lahf in jp (bad) cmp cwtl enterq cs in sbb push pop add lahf rex.WX xor jge fcoms mov rex.R clc rex.RXB and xor loop (bad) pop rclb or adc sbb xor sahf movabs (bad) orb rex.RXB movabs adc data16 add jbe (bad) shrb rex.WX or jno pop jns (bad) xchg je stos (bad) lret sub add (bad) mov (bad) movabs out (bad) movabs test outsb rex.WB push sub add push clc (bad) mov data16 rex.WB repz fstpl callq vrcpss xlat rex sti gs rex.WXB add rcrb xchg and mov jle lahf sub rorl rex.X and mov leaveq rep (bad) sub mov pop and add xchg test rex.WB sbb (bad) orb rex.WX push jae movabs or lahf mov cmp xchg (bad) loope popfq (bad) rcrb movabs int3 pop cs loope sub scas sub xor sub jne rex.WB retq idivb (bad) scas xchg stos out adc loope jne (bad) or mov mov (bad) mov scas insb rex.WB cs insl xor push loope xchg xlat jge (bad) int3 (bad) cmp callq fcmovnbe outsl xchg or lea mov sub rex.WB xchg (bad) mov (bad) out cmp xor insb and in sti es adc sub rex.R mov (bad) (bad) test mov mov mov xchg jle or jmpq cmp sub sbb pop (bad) pop and gs loop rex.WB fidivrl mov test es imul (bad) jl cmp pop rex.RX xchg and add or rex.WB xlat cmpsl sbb sub loope mov mov movsl or xchg cmp cmp or repz rorl rex.WX (bad) rex.WB mov int shrl add (bad) rex.WX fisub stc and pop xor repnz xchg (bad) sub (bad) (bad) cmp (bad) loopne in jno xchg sub mov add pop cld rex rex.WRB or fucomi out cltd xchg xchg mov iret callq hlt sahf push push xchg xchg callq sbb and sub icebp push rex push mov cli (bad) hlt in mov nop push add fcomp (bad) mov icebp lret pop sub (bad) and or mov (bad) ja addl (bad) std test add xlat lods cmp rex.B rex.WB nop mov mov fnstcw (bad) xor mov push insl movabs ror jns jae rex.WB rex.R push add loopne (bad) rex.WXB cmpsb test rex.WRX es rex.WB cltd fwait sti test xchg push fcomps xchg xor pushq (bad) rex.XB rex.RB rex.WRX rex.WB xchg and nop mov xor in rex.WXB pushq mov (bad) movsb out sahf (bad) mov and scas rex.XB gs and lea rex.WRB push rex.WB xchg mov std cmc pop adc xor mov rex.B jmp std sbb jns pop cmp fildl retq mov fbld out (bad) cmp add test icebp cltd scas and movabs lahf (bad) rex.WR rex.X rex.WB jnp (bad) testl push push cmp loope rex rex.WB sbb pushq add jg adc retq mov pushq cmp popfq push pop out mov leaveq xchg (bad) pop xchg cmp (bad) mov callq (bad) pushq (bad) pop loopne clc vsubpd push fidivr adc addr32 (bad) test rex.RB movsb mov xchg out and rex.WB sbb movabs xchg pushq xchg mov sub adc xor cmpsl jnp adc or pop cs rex.WRB and gs rex.XB sbb jo stos nop adc test gs rex.WXB (bad) movslq mov loop (bad) frstor jg jl jnp push rex.RX mov adc mov rex.WB mov popfq rex.RXB rex.B in movabs pop callq scas and int3 (bad) jle cmp loop sbb jno jg xor pop (bad) rex.X rex.WRX cmp rex.WB out xchg rex.WRXB rex.RXB jle or push movsb insl sub sub movabs mov pushq stc rex.RX movb rex.WB cmp scas cmp xchg pop mov callq fdivrs add punpckhbw push jns iret adc int3 popfq rex.WXB jo lret and int push test rex.WB rcl test xchg cli in rex.X movabs jle rex.WB rex.WRB sub outsl rex.WRXB icebp mov sbb pop and or repz shrl push sbb xchg pop js and (bad) pop (bad) mov sub and lret cmp cmp out (bad) mulb and sbb repnz sbb in enterq cli pushq mov loop push pop jne adc rex.WX (bad) movabs jo shrl icebp jl (bad) push (bad) (bad) push (bad) rex.WB push cli repnz rex.RXB mov int add pop xor or icebp xchg rex.WR gs outsb jmpq jp and rex.WB sbb retq add scas sbb xor loop leaveq (bad) mov popfq mov in loope jp fisttp and stos xor mov out icebp movsb es imul or callq (bad) sahf rex.WRB test sar scas rex.WR movabs mull xor rex.WB (bad) push imul gs and (bad) rex.WRB pop fdivrs rex.WB mov cld xchg sub pshufw pushfq rex.RB insl rex.WB adc mov (bad) mov rex.XB or movabs subb lret sub orl movabs lock rex.X rex sbb (bad) lods adc sarb push jb pushfq movsl (bad) cmp sbb lahf (bad) loope xor movslq insb push xchg adc xchg cli rex.WRXB mov sub (bad) test stc xor pop or pop push in movslq fist (bad) (bad) (bad) sub in cmpsb (bad) rex.WB add (bad) rex.WB mov sti and xchg pushq mov repnz cwtl xchg (bad) add jmp xchg mov pushq xor push scas jp (bad) test ror cmp movabs lret callq sbbb scas rex.RB lret push push iret rex.WRB fadds rex.B rex.WRX xchg bnd push mov sbb (bad) xchg loope fcomps (bad) jne pop fwait (bad) fcompl rex.WB sub ficom or (bad) in (bad) adc out add test callq decb cmp callq mov or mov in add cmp (bad) testb in push test add jb (bad) push (bad) mov fildl add rex.RX loope xchg rex.WB movsl xchg movabs sbb retq cld pop add add iret or addr32 or mov (bad) in rex cmp mov push rex.WB xchg adc jg (bad) mov callq pop (bad) (bad) test adc pushfq lods xlat rorl jbe (bad) leaveq mov pushq rex.WB addr32 outsb out xor js mov negl mov rex.WRX xchg push lods mov rex.WRXB mov rex.WRB mov repz rex.WB (bad) mov (bad) sub cld pop retq ds cli pushfq jne mov push pop (bad) jge rex.WR cs or mov pushfq (bad) cmp rex.WB mov cwtl lods iret mov rex.WB stos mov rex.WB repz (bad) jnp rex.RXB rex.WB rex.WR push ss out in loopne adc imul mull jrcxz (bad) mov jnp stos lods cltd push es xor fs (bad) xor (bad) mov lahf rex.XB jle rcrb xchg pop pushq mulb xchg out adc out stc xchg sbb xchg sbb mov movabs adc pushfq mov (bad) jrcxz fdiv sbb sub lods cwtl cmpb jmpq std repz lock sub mov (bad) jmpq mov or leaveq cmp (bad) ds add sbb flds retq out lahf xchg rex.WXB rex.WB (bad) movabs adc rex.WRB int3 lock rex jmpq lock jb mov xor adc psubsb mov mov fsts ds pushfq push test rex.RX xchg push addr32 imul insb fs jle sub rex.WB and xchg (bad) rolb add callq mov push (bad) jle rex.WB fwait (bad) rex.WR fimull loop mov cmp adc xor sbb movabs psrlw rex.X (bad) push jbe flds clc pop hlt and mov addr32 scas mov pop push je sub lods sti adc rex.WB and hlt ficomp andl shll ss mov fdiv subl and or mov movsb test sahf add and sub xchg and xchg (bad) in pop loope rex.WB and rex.WB cs sbb xor subq jne mov push cmpsb push rorl add jno imul (bad) (bad) mov rex.WXB test movabs pop xchg rex.WXB movabs mov push (bad) jns pop cmp sbb movabs (bad) mov (bad) add adc scas test rex.X testq stos in adcl test icebp jno incl pop rclb out js jb insl add adc cmp stc pushq mov movsl rex.WB rex.WXB cmp sbbb jp pop cmpsl rex.W rex.WRB push sbb (bad) fsubrp fldl rex.RB push push rex.WXB fimull rorb add fwait iret rex.WB cs lea rex.WB pop add add (bad) (bad) jge scas in rex.WB push js in js rex.XB andl mov cwtl and mov jp xor (bad) add js (bad) (bad) in rex.WXB movabs jg ja xor jae or test lret fs rex.WB addr32 movsb movabs loopne mov jp cld leaveq out xchg clc adc (bad) rex.WB mov repz loope (bad) xchg rex callq sub or mov (bad) (bad) pop rex.WRB and jle pop fs adc mov pop rex.WB cmp (bad) mov xor pop cwtl (bad) xor sub or fs jl movslq movabs (bad) cmp loopne test pop gs enterq (bad) mov movslq mov int fcompl stc sbb xchg roll orb retq test in sub (bad) (bad) cmp fisttp cld rclb (bad) mov rex.WRX (bad) lret out lods sbb fcoml cmp test je fildll rex.RXB orl mov iret adc and mov adc test jp rex.WX outsb xchg add fs movabs pop push sbb movabs test pop rex.B iret repz jnp cmpsb adc jb or std cmp movabs (bad) pushq mov ficom add pop sbb test xchg test (bad) xchg lret add jmpq or push sahf addr32 cmpb xor cmp loope lahf movabs invd jno rex.WRXB rex.RXB sub pop cld xchg rex.WR jmpq (bad) (bad) sub (bad) sbb or cwtl movabs cmp movsl ja mov or mov mov std add (bad) shr add nop (bad) subb incl or add out movabs sbb and mov cmp (bad) rex.WB out rex.RXB fimul in add push hlt (bad) sub (bad) and (bad) add rex.WB jmpq movsl sub mov outsb (bad) xor sti pop (bad) jae (bad) sub mov lcall xchg cmpsb fsubl xchg cmp rex.RX sub clc in int3 xchg or push or and xchg sub push pop jmp push lahf rex.RB sarb xor xor or punpckhdq cwtl pop pop jns jmpq sbb push cwtl rex.WRB icebp rex.XB rex.WX (bad) div cmpsb (bad) int test jb ss (bad) retq in rex.WR push clc callq mov fmuls push and push out pop movabs xchg or popq and pop mov mov (bad) jp xchg mov pushq add mov and pop rex.RXB (bad) out adc rex.W std or rex.RB mov add xor sahf sub (bad) imul movabs rex.XB jns add loop (bad) jp jns retq adc inc sti faddl cmp loop (bad) (bad) rex.WB and (bad) stos jle (bad) xor cmp es (bad) mov (bad) mov mov (bad) leaveq pop clc mov test and rsm jb rex.RXB mov test test hlt imul add xor or ss fwait push and adc cmpsb sub cmp testl (bad) mov cld xor pop rex.X rex.WRXB or movslq sbb mov rex.WB jrcxz mov jb stos adc nop cld (bad) xor xor fadds mov vunpcklps (bad) mov rex.WB movsb pop lret and movabs rex.WRXB cli mov xchg repnz movslq rex.WXB adc imul pop jge hlt jrcxz add or adc sbb movsl scas hlt (bad) pop adc loope (bad) mov int3 and or (bad) loope jg rex.WB rex.WRXB rex.WRX and (bad) pop andl push rclq pop rex.WB rex.XB rex.WXB jrcxz or (bad) or in mov lods jbe jnp rex.WRXB stos int (bad) pop xlat in (bad) (bad) rex.WB (bad) cmpsl fisttpl jae add int addr32 (bad) in lods adc xor cmp add or andb jg xchg insl or stc xchg push pushfq out flds pop callq mov repz mov mov cmp sar movabs movabs addr32 jo xorl sub mov insl (bad) rex.WRX jmpq add jae repz ja cmp gs (bad) sub fdivrp addb rex.WB xchg cmp push xchg jo jl jbe sbb sub jrcxz rex.RXB and loope (bad) mov fadds data16 repz fsubrp retq (bad) pop push jo mov lret add in pop mov rex.RXB test xchg mov (bad) xor or push fistl sbb (bad) sbb or mov pop test cmpsb rex.WB sbb pushfq rex.RXB add push cmp xchg adc (bad) in jo xor cmp ror out movslq xchg lret movabs mov fs lods icebp (bad) pushq jo and (bad) ss jecxz (bad) loope push (bad) movslq rex.WB (bad) pop retq cmpsb cltd rex.WB mov pop test pop xor outsl hlt adc cwtl lret movslq rolb sub xor jns rex.WB ss (bad) (bad) callq xchg clc repnz rex.B (bad) xchg ficom fisubrl mov rex.R es movslq push xchg adc jo rex.WX rex.WB cmp (bad) (bad) and mov in rex.WR (bad) jae jmpq rex.WX (bad) push pop and test (bad) (bad) rex.RXB xor pop sub leaveq rex.R jno jp (bad) adc sub pushq callq pop insb push cmpsl adc push fstpt rex.WB rex.B cmp rex.WXB mov mov test (bad) (bad) xchg (bad) rex.WR ss pop jl,pn out repz rex.WB callq popfq or cltd add fidivr xchg jp movabs mov sub and rex.WB callq xchg in cmp push loope mov std addr32 gs xor cltd and (bad) (bad) (bad) rex.W divb adc or mov jmpq sbb rcr rex.WB jns test mov pushq mov cmpsl (bad) int (bad) mov ficompl (bad) divb and add icebp test leaveq addr32 pushq sbb (bad) mov lock mov push rex.WB add push lahf movabs sbb and mov vandnps rex.R or ljmp pushq mov or and decb imul xchg xor push movabs in rex.WB adc outsb addq cmp in sbb movabs sub rex.WB loope rex.RX cmpsl repz (bad) jge movsl (bad) cli mov or jp enterq loop pop rex.RX mov rex.WB lods in imul test mov jp rex.WB xchg sbb (bad) (bad) mov mov (bad) enterq (bad) mov add add icebp mov (bad) xchg jns adc stos imul mov or bnd cmp adc incb pop callq mov rex.WB cs loope pop loopne sti callq (bad) pop rex.WB rex.W mulb movabs iret mov sub xor (bad) fistl stc rex.WB outsl xchg lea (bad) jmp mov lret rex.RX fwait push movabs popfq rex.R rex.WB imul rex.WRXB rex.X pop (bad) xor (bad) and std leaveq pop rex.WRXB and and jle outsb rex.WRB data16 imul int3 scas adc movabs sub adc cmp movsb rcr (bad) pop pop adc rex.WXB rex.RX adc mov adc xor mov xchg lret rex.WB xchg jp retq cmpsl mov sub xor test stc pop xchg mov fcmove jle (bad) xor pop retq jp adc and and mov fdivrl xchg cpuid or lods cwtl movslq (bad) (bad) push mov hlt and push out jo mov adc (bad) pop ss cli rex.WB retq (bad) push imul rex.WRB xchg pop xchg (bad) add decl sub movsb callq rex shr fsubr nop sbb cmp cmp xchg in shl mov sub (bad) mov rex.WR jp retq movhps movslq jo mov callq sbb rex.B lahf sub add leaveq insb push xchg rex.RX fdivs out and loop xor in rex.WB pushfq jmpq hlt push sbb rex.WX (bad) sbb rex.WRX sub sub outsl push pop pushfq movabs lea sarl pop rex.X rex.WB fisttp rcr (bad) mov lock movabs xchg sbb xor xor rex.XB sbb xchg rex.R fs sub add stc enterq test out (bad) (bad) jmpq outsb callq stos (bad) pop rex.X xchg and mov jo in rex.RXB (bad) int3 (bad) rex.WB decb jbe sarl adc movabs in mov mov pushq rex.WB sti (bad) adc pop xchg test rex.W rex.WB mov leaveq subl fmuls lea loopne jb rex.WB xchg xchg mov adc rex.WB (bad) fiaddl loopne xchg rex.WB add insb loope xchg (bad) sbb sub leaveq xor test cmp jae mov ds movabs push out es sub rex.RXB (bad) test rex.WX out (bad) mov jmp cmp and jnp and pop sbb test xchg sahf rorb (bad) xor (bad) out (bad) movabs loop lret clc mov add data16 rex.WB fs sub or fcomps jle mov cmp (bad) jrcxz push enterq data16 lods mov rex.RB (bad) push rex.WB jno sti mov (bad) rex.WRXB (bad) xchg test fisttpll push cmpsb enterq push rex.WB cld (bad) fldcw cmp loop push push movabs jns rex.WB (bad) cmp xor (bad) (bad) add test out pop fldt movabs out pop (bad) mov test pop lea pushq mov xchg ss xor sub movabs add ss fnop jne pop jp fcomip scas sub xor push jns rcll rex.WB pop sarb push pushq flds sub jmpq stos mov test xchg sbb sub lahf stc jmpq roll rex.WB xlat jp xor rex.W rex.WB in rex.WB hlt xlat rex.WB jnp lock in rex.WB cli int3 sbb rex.WB and retq cmp sub mov int mov (bad) or and mov ficoml ror xchg (bad) (bad) pushfq (bad) mov cld cltd mov mov xchg ror adc test jmp rex.WB repnz wbinvd add rex.WB cmp (bad) pop pop fwait movabs mov rex.WB pop leaveq mov pushq push iret mov jle cmc mov test sahf sub or (bad) (bad) xor sti adc pushq adc leaveq xchg scas sub sahf cltd rex.WRXB mov cmp loop sbb fstl lret xchg (bad) js repnz push jmpq pop push retq callq push add loopne pop jne (bad) pop testl jo je callq std orl popfq mov sub stos movabs sbb and mov rex.WB mov in outsb rex.WB in and movsl imul sbb loop push movslq push fisttp leaveq fdiv sbb loope popfq imul xchg jb and mov cltd outsl mov out callq js push sub sbb sbbl adc lahf fstpl rex.B push adc retq xor mov or pushq in pop (bad) shrb subl pop mov out movabs lret fildll cwtl pop xor cmpl rex.WRXB push cmp rex.XB xor (bad) push movabs rex.WXB rex.RX jbe (bad) (bad) movabs jg callq cmp je loop or mov stos rex.XB or xchg push lret test fbld adc mov rclb fwait and shlb adcq rex nop sub xor iret rex.R rex.WB rex.WXB (bad) jle fs cmp loopne mov cs fimull xchg (bad) (bad) (bad) and sub jge or mov rex jl movabs cmp rex.W fs add movabs cmp testl and cld xchg xor add mov push (bad) loope (bad) lret and jmp or pop xor pop icebp push mov or jg roll push xchg rex.WB (bad) test mov retq or and mov xchg rex.X mov in pop sub fstl mov mov ds (bad) xchg rex.WB jge (bad) jns adc mov scas (bad) (bad) imul mov sbb or add (bad) out int sub cltd je xchg mov callq pop and (bad) (bad) std (bad) callq mov rex.WB repnz mov add push imul rex.WB (bad) xchg ja xchg (bad) nop rex.WB jae jg rex.XB mov sbb (bad) xor lret sbb or mov and xchg xchg push sbb rex.WB cld (bad) (bad) rex.WB adc movabs xor (bad) mov stos jno cli in pushq cmp adc nop rex.RX (bad) rex.RX sbb pop or test mov rex.WB (bad) xor pop cwtl add jb or xchg (bad) jl xor movslq pop jno rex.WB fimul jb adc out mov sub jnp movabs retq (bad) xor cmp loopne imul not jmpq pop push adc xor jp rex.WB mov mov cmp jg mov sub (bad) pop pop push movabs (bad) sub sub movsl rex.RB jrcxz addl clc rex.WB rcrl rex.X pop pop sbb fucomi fsubl rex.WB cmp rcrb xlat adc rex.WRB mov icebp pop mov fcomps sub (bad) jne sti push mov (bad) pop adc and callq outsb push or vmovdqu pop jmpq xor rex es xchg data16 rex.WB movabs in popfq xchg xlat rex.RB mov adc or (bad) pop cmc sbb mov int sub cmp loopne mov mov iret pushq fwait (bad) rex.RXB pushq std sub mov mov rex.RXB mov fiaddl and sub (bad) sahf jno (bad) std unpckhps rex.W std imul mov push jnp xchg sub pop stc pop in rcll push mov rex.B addr32 jmp sbb mov jnp iret cmp rex.WB sar or sub push pop xchg mov retq jne jns mov rex.WR addr32 (bad) push std lods clc jrcxz xchg mov or movslq imul leaveq sub rex.WXB pop insb add mov leaveq retq jle mov rex.RX sbb jge (bad) lahf rex.X lret (bad) testb cmpsb roll jnp pushq loopne rex.WRB (bad) rex.WB pop (bad) jp test mov lret mov rex.RB cmpsl cmpsb pop sub lahf rex.RXB rex.WRXB rex.WXB movabs push pop repz jmp sub out sub and jmp int3 add jnp cmp pop adc sahf enterq or or push nop (bad) shlb cmp loop ja adc fmull pop cld js jrcxz sbb and cmp cmpsl pop loop mov adc adc cmpl mov mov jnp rex.WB cmc (bad) scas cmp fs (bad) (bad) xor or repnz sarl mov (bad) out es out cmp (bad) cmp (bad) jo pop movsb rex.WR xchg jne (bad) xor sub (bad) fs (bad) mov (bad) push callq ds bnd rex.WB (bad) (bad) fistp out or and or cld mov data16 (bad) mov pushq xchg and add pop cltd mov rex.R mov rex.WR movslq out xchg (bad) rex.WB xor out movsb pop or xchg mov jle imulb out jge and jle jns std rex.RX or mov mov add jns int fsubs sbb and jmpq movslq cmp mov rex.W scas lret enterq mov jb mov sbbb xor jmp pushq push outsl (bad) rorb andl push mov movabs jae jge leaveq lods rex.WB jo jle (bad) (bad) popfq addr32 lea insl xchg cmpsl sub ficompl lret rex.WB xchg lods (bad) clc lods mov pushq push pop out add push rex.WB rex.WRXB rex.RXB jbe sbb mov or fsts jp mov (bad) or (bad) out sbb retq add adc adc jae hlt test sbb (bad) jmp (bad) (bad) cmp rex.WB insl mov jb (bad) sbb rex.WRB add shl xor cltd cmp rex.WXB callq (bad) (bad) (bad) xor xor scas add add cmp sbb or std cltd or sub pop rex.WRB push fs fstpl adc imul adc mov jge adc xor sub test (bad) fwait (bad) test or (bad) adc mov leaveq sarb adc rex.WRXB sub test adc cmp sbb leaveq rex.R jle rex.WRX sub loop out mov adc iret adc movabs out (bad) xchg rex.WB insl in jae xor push adc or lods add rex.RX rex.WB push rcr rorb retq rex.WRXB pop jns test (bad) xchg jle rex.W fwait rex.WB movsl test movabs jrcxz fwait (bad) sub (bad) rex.WB (bad) mull rex.WB fisttpl (bad) pushq rex.R rex.WB cmp (bad) or enterq cmc rex.XB lretw (bad) iret mov sbb js scas ffree sub je sbb or and popfq rex.WB mov out xchg je mov (bad) mov or xchg jne sub xchg adc mov mov mov add sahf rex.WB (bad) je jns rex.RX rex.WB rex.WRX (bad) (bad) jp xlat fisttpl cwtl mov xor insl push ds jrcxz rex.WB pop repz fmuls jb cmp or mov or push and out xchg rex.WRB rex.WB mov fidivr sbb xchg data16 sbb rex.RX and jmp xchg mov sub shrb rex.WB scas imul in loopne rex.WB addr32 rex.X xchg push pushfq movsl mov and mov and (bad) jmpq lahf hlt (bad) movsb decl lock retq cmpsl mov (bad) sub out cmc (bad) int (bad) rex.WB mov test mov (bad) sub (bad) or (bad) jo lret mov (bad) rex.WRX out xor (bad) rex.WRB xchg and mov ds pop sub retq mov xorb rex.R jge in pop sub fiadd sub push push retq xor lret jnp jge mov sub jle mov and ds outsb cmp cmp mov mov out (bad) jmpq (bad) subb ss test (bad) (bad) cmp rex.XB rex.B or add push mov cltd repz adc lea nop gs sbb in push sbb jns mov sub (bad) scas adc (bad) and lock cli and xchg (bad) std pop rex.WB adc iret pushq sub jmp jnp mov cltd (bad) mov (bad) cmp rex.RX leaveq mov pop add fmull rex.RXB test mov enterq decl jp sub movsl push xor mov xchg ficompl rex.WRXB stc shrb lea mul test push lods xchg cmp jnp cwtl pop loop (bad) leaveq add movslq lahf in rex.WRB mov adc imul pushq cmp subb mov cmpsb (bad) xchg (bad) pop (bad) cld int3 sbb sbb pop pop movsb (bad) jg shrb (bad) jmpq adc push adc fldcw fcom xchg js and pushq rex.RX (bad) xchg xchg rcrl mov mov (bad) cld (bad) pushq rcrl imull es mov mov sti popfq movabs rex.WX rex.WR sub (bad) xor xor lock adc rex.WX movabs lods pop rex.WX pushq xchg stc mov sbb imul fnstcw rex.RB enterq mov pushq shll movsb test pushq fmull pop jg stos push and mov xor movabs xchg xchg mov and pop (bad) (bad) lahf rex.WR mov rex (bad) notb pop mov enterq adc or mov orl stc enterq pop imul cmp jnp rex.WRB add or je push pop or sub imull rex.RB fisubr jno jbe add mov loope lret (bad) rex.W cs cmc pop (bad) jnp sti loopne push push test movabs push or xor ss push insb insl rex.WRXB out (bad) sub lret lea pop mov icebp ror fdivs sub add movabs push and fwait xchg add sahf mov sbb jns lret mov lea sbb repz cmp mov mov out lea sarb retq (bad) rex.RB jge cltd jns xor (bad) in mov sub enterq jle addr32 xchg push push cmp sbb push movslq movsb and pop sub subl fcomp out jae movabs xchg sbb (bad) test scas retq mov fcoms pushfq rex.B or leaveq mov rex or jle jl lret pop mov test test sbb sub stos (bad) mov (bad) incl jns loopne rex.W lret (bad) mov (bad) or (bad) sub push scas mov rex.B or pushq scas mov fdivs pop xchg lahf lret cmp adc rex.R sub jp leaveq loop cmp push out pop xchg mov xor cwtl rex.RB fdivrp sub jmp test xchg pop (bad) rex.RB rex.WX (bad) mov cmp fisttpl cs rex.WB fld retq sub popfq sub push mov out fmul rcrb rex.WRXB xor or jg test lock rex.WRX (bad) (bad) lret sar out movsl rex.WRB jnp jbe push out stos hlt sub mov xor push enterq jle pop mov pop sbb (bad) cmpps repnz rex.WRXB or loopne out and rex.RB (bad) sub outsb mov test jno or xchg pop (bad) mov cmpsl rex.WRX sub jbe nop pop in xchg (bad) fwait mov jne es add adc sub (bad) push mov retq rex.XB jmpq (bad) repz icebp xor retq (bad) cld in repz (bad) rex rex.XB push mov rex.WRXB rex (bad) nop lods (bad) mov rex.RB rex.R adc (bad) (bad) or adc stc (bad) jmpq push retq sub scas lret (bad) rex.WRX xchg rex.WB and pop add andl pop rex.XB add fisubl testl sbbl (bad) mov fucom mov imul jne stc hlt rex.WB cmp movabs (bad) jbe jg (bad) cmpsq cmp scas or rclq movslq int3 jmp add mov repnz or rex.WB (bad) pop rex.WXB lock fstl (bad) (bad) jmpq fist sbb pop mov insl (bad) rex.WX rex.WB rex.B rex.WRB or (bad) lret scas retq cmpsb movsl add adc sbb pushq callq xchg leaveq rex.WRX push je pop rex.WX rex.WR mov sub and std cmpsb lock (bad) mov (bad) push (bad) adc (bad) pushq xor shrb pop adc rex.WB test or jno cmc rex.XB js setle mov cmp cmp and mov add or fwait rex.WB jg jbe addr32 addr32 sub jo push (bad) rcrl (bad) mov sti mov xor lock imul rex.RXB scas rex.WB cmpsb mov repz rorl and xchg lods sar rex.XB es cmp rex.WB pop cmp cmpsb (bad) stos mov xlat rex.WB pushq push and lock callq xor mov lret sub pop or cmp cmp out movsb pushq ficoml loop rex.XB ds (bad) (bad) pop (bad) jmpq (bad) popfq repnz rex.WX mov push cltd rex.WB addb rex.WB mov mov movabs std pushq and sub (bad) push stos mov pop and lahf sub add fdivrl push out pop or (bad) (bad) setns rex.RX rex.XB sub iret rex.WB xchg cli (bad) insb rex.WX imul callq xchg (bad) rex.WB ss and lret xchg jne or fcmovb iret pop rex.WRX insl (bad) (bad) adc rex.WB rex.WB iret (bad) jl sti rex.RB fwait xchg adc pop movabs leaveq rex.X and vunpckhps rex.WB movsl loop push clc rex.XB (bad) xchg ja rex.WB push repz rex.WB add test mov lea sahf rex.WB (bad) xchg lock (bad) rex.WB js cltd rex.X pop ss (bad) movabs (bad) or movslq rex.WRB movabs cltd test adc xchg fsubr sub cmp fnstenv (bad) jg pop movsb test mov loop shll ds or sub mov in jns sbb rol cs pcmpeqd mov enterq stos xchg out mov jne (bad) cmp (bad) rex.WB rex.WRX cwtl sub (bad) pushq sahf and leaveq mov pushq test jg rex.WRB xchg sub cltd bts rex.WRB lret fidivr loop jne xchg sbb push or xor addb rex.RXB fs rex.WRB mov (bad) out (bad) loopne (bad) and lods std pop adc or sbb add rex.RB pop lods rcll outsb rex.WRX pop rex.X xchg add int3 cmp mov fdivrl movsl add mov (bad) pop cmp test clc add insb mov and sti (bad) xor push xor outsl out pushq js pushfq cld add jb notq clc (bad) xor leaveq (bad) rex.WB or sarb gs (bad) cld xor rorb movabs stos (bad) push rex.WB jmpq negb rex.WB icebp adc mov mov out pop mov or xor rex.X cmp rex.WB add and nop cmp push push mov rex.WB fisttpl rex.WB (bad) lahf loopne push pushfq sub add fs retq out mov mov int3 mov pop mov stos jns mov (bad) rex.WB fldcw rex.WX pop cmpsl rex.WRXB push sub lods in pushq sti xchg (bad) adc xchg cmp rex.WB rcl and rex.WB jno jns add addr32 sub shrb movsl jnp jle push rex.X test xchg sub sub xor or mov adc mov jle lahf xchg add xchg sbb jp xchg rex.WR lahf sub callq sbb fcompl xchg andb fdivl fistl and cs sub pushq lret pop (bad) rex.RB cmp imul pop imul lret scas mov rex.WR and rex.WRB adc (bad) or shlb lods rex.WRB out xchg mov and pop mov mov jrcxz loop imul rex.WRX xor mov sbb rex.XB add pop xor (bad) adc mov movabs ss mov fcom add loopne add popfq fimull add cwtl out and sub sbb adc test xchg sbb (bad) mov insl movabs xchg jbe jmpq rcll or fmull (bad) stc mov (bad) mov (bad) mov jle add sbbl add lret mov out sbb lea js (bad) mov xor cmpsb sub (bad) in cmpsl cmp loope xlat leaveq stos movslq sub jp cmp or jbe popfq rex.WRX data16 sahf cmp test (bad) callq shll fidivl jne pop and mov (bad) rex.WX pushq scas (bad) add or xor xchg pop cmpsb movsb or fs insb (bad) or outsb fldl sub sub rex.WRX cs xchg rorb cmp and (bad) movslq pop jp (bad) mul stc shll xchg pop fldenv scas mov gs adc ja xor pop lods rex.XB mov movsl (bad) sub out pushq stos movslq (bad) mov (bad) rex.WXB rex.WB adc jo (bad) pushq stc rex.B jno outsl rex.WB cwtl xchg (bad) jb xchg (bad) mov rex.RB rex.B jns (bad) sub xrelease insl sbb add and lea mov mov push cmc rex.WB nop (bad) mov xchg and pop pop movsl adc callq sub rex.WB mov fwait (bad) or mov adc mov (bad) pop imul sbb cmp rex cli rex.WB rex.WRXB mov jne or pop cmp xchg push xchg mov fs (bad) xchg gs jmpq stc mov add ficomp mov out mov add pop fadds add test es mov mov addr32 sbb adc push pop data16 xchg add (bad) pop mov sub leaveq jns jb pushq pop sti jbe and clc xchg xchg and or sbbl addr32 xchg leaveq or outsb (bad) cmp movsl mov vpunpckhbw rex.X data16 xor pop mov out lock or sub rex.B adc (bad) in rex.R rex.W mov rex.W rex.WB jo rex.WB rex.WXB add sub data16 fidivr or rex.W rex.WB rex.WRXB mov mov mov shll rex pop lahf lret sahf fs (bad) lea insl in fsubs and fbstp or movabs dec jl jg mov push test jge push cwtl add pop jo lods adc pop rex.WB rex.X xor cmp pushfq rex.B mov (bad) enterq mov movsb mov sub pushq mov lods rex.WB push jne mov movl mov and (bad) test out sub (bad) rex.WB sahf xlat fnstcw (bad) rex.WB movsb adc xchg sub xor rex.WB rex.XB rex.WX (bad) movslq (bad) out fst rex.WR sbb movslq pushfq test lret rex.WR xor sub sub xchg and add add movabs adc (bad) (bad) jns push mov fldcw pop stos jb rex.X xor rex.WRX pop popfq out cmpsb idiv and adc xchg test cs mov sbb jl rex.WB sub (bad) stos out mov rex.WB add nop or retq rex.WB xchg mov stos sarb sub xor mulb (bad) int retq movabs loopne rorl rex.RB adc pop or out adc je (bad) xchg rex.WB jbe jnp rex.RB rex.WB jns mov jns pushq pushq pop xchg xchg rex.RB rorl in cmp sbb (bad) lret incb cmpsb movabs jrcxz jg or and in rex.WB mov jge mov popfq jo insl stos std or pop xor sbb rex.WRX retq enterq out rex.WB adc cmp cmpsb rex.WX rex.RXB lahf retq (bad) pushq outsl add (bad) mov xor jle rex.WB pop (bad) adc jp adc mov out addr32 mov pop rex.WB rex.R (bad) sti cmp sbb jns movsl push jmp mov xor rex.WB movabs jp cli scas cmc mov ja out rex.R pushq push rex.WXB (bad) push (bad) rex.WB jne xor fnstsw test jb or stos (bad) push jle cli (bad) mov pop push xor (bad) add xchg (bad) rex.X retq imul mov sub insb rex.R (bad) (bad) mov movabs add cli sbb mov movabs pop insl rex.WXB mov cmp (bad) mov rex.WX sub decl rex.WR sub cli cmp jbe sarb xor or and xor push mov lahf push ds (bad) lahf (bad) or xchg (bad) mov xchg add test rex.WX (bad) (bad) popfq add icebp mov stos mov mov rep pop pushfq outsb nop cmp mov push rex ds fwait and sub jle repz mov xor js push js (bad) cmpsb jns out fisttpll mov jnp orl imul cmp loope (bad) push ss movslq mov push in xlat mov pushfq imul fdivl mov adc mov ds jge int xchg in xchg xchg jmp (bad) lret loopne (bad) loope cltd rex.WX xor andl xchg enterq leaveq or jno (bad) in push mov rex.B adc (bad) (bad) (bad) mov mov test jmpq loopne (bad) int3 (bad) icebp (bad) push rex.WB rex.WB movabs out cmp (bad) add movabs rex.WRX outsl xchg push push rex.RB test xchg rcll lahf mov jo xor rex.WX add rex.WRXB mov or cs lods cmp imul lahf imul cmp rex.RX add movabs pop pop out mov cmp (bad) jnp (bad) addr32 or enterq pushq (bad) test rex.W and add sub (bad) (bad) (bad) repnz jge rex.WRXB mov nop jns rex.X rex.WRB mov (bad) and xchg add sbb mov neg outsb clc (bad) xchg jmpq enterq mov rex.WRXB cld jle rex.B push (bad) rex.WB pop sub rex.WRB and lods std pushq icebp add orb rex.RXB mov sub (bad) rex.RXB mov pop jge cltd ficompl cmp jmpq punpckhwd movabs (bad) sub in cwtl and mov xchg mov rex.WB movabs movsl icebp mov loopne es (bad) fdivrs (bad) rclb (bad) xor add out loop cmp or ds imul mov add cmp jae fiaddl pop mov loopne movsb xchg mov int3 sbb rex.WRX or xchg and out subb (bad) pop (bad) outsb lahf sub xchg adc scas jg (bad) jns (bad) cmp xchg in jno cmp data16 rex.XB pushq rex.B movsl movabs push mov xor rex.WRX retq (bad) enterq xchg mov (bad) fisubrl jmp rcrb xchg jmp pop mov rex.WX jns adc rex.WRB mulb or (bad) mov nop movabs (bad) movsl callq rex.WRXB rex.W addr32 rex.WRB out movabs push scas sub (bad) and rex.R cmpsl rex stc mov xor or orl and insl movsb add sub mov sbb fcompl iret sub adc scas mov or stc test iret (bad) int scas (bad) lahf cwtl mov rex (bad) out add add mov rex.WRXB jg xor adc pop iret push mov repz std movabs add addl and (bad) fwait cmp jp mov (bad) iret (bad) sahf add int pop adc cmp add rex.WRX fwait rex.RX (bad) movslq cmp (bad) fistpll (bad) add lret add mov loope ja cmp (bad) in je cmp or leaveq cmp roll rex.RB (bad) add scas jb rex.WR jp (bad) xchg orb or pushq (bad) adc mov mov (bad) add pop stos (bad) imul addr32 jp test cmp xchg unpckhps rex.WR or jnp (bad) cmp stos in lods sub jle and ja fsubrp jmp int3 clc movabs rex.WR pop pop xchg push lret or xor jmpq lahf push cmp xor mov rex.B cmp adc and add pop (bad) enterq fucomip sub and and sub rex.W rex.WB vpunpcklbw rex.R sub or rex.WB rex.WB fwait sahf jae pop rex.WB pop mov (bad) rex.WB cmp rex.WB rex.W fs stos xchg rex.WR rex.WB test sbb (bad) nop or or push push cmp rex.B rcrl (bad) rex.WB outsl rex.WX cmp pop loopne (bad) cli ja pop loope mov xor pop (bad) repnz add jbe adc out out imul rorb or adc lods (bad) out xchg test ss (bad) mov and xor rex.WRB sub sub jmpq push stos (bad) rex.WB rex.R rex.W movabs adc xchg movabs xchg rex.WB (bad) xor rex.WR add rex.WB rex.WRX pop cltd lea and test adc mov test pop pop rex.X lock (bad) mov adc jp rex.RX adc mov (bad) sarb jl xchg movsl cld rex.X rex.B es test add jge shrl (bad) js (bad) fisttp leaveq test mov mov and xchg rex.WB stos rorl insl leaveq (bad) mov (bad) rex.WB (bad) rex.RXB enterq rex.WB jae lock enterq pop fyl2x adc rex.WB mov rorb xchg sub adc rex.WR rcll jp fbld pushq movabs scas adc callq (bad) xchg push (bad) addr32 mov fwait test (bad) mov sahf xor and push mov sti xchg (bad) imul and callq rep movabs out retq adc fstl rolb pop and sbb and pop and (bad) data16 idivl xor mov pushq shl pop (bad) sbb or sub xor fwait int rex.WR rex.XB rex.XB scas jo in in or cmp pushfq sahf icebp mov adc adc cli xchg lret xor rex.RX push sub cs sub pop nop retq or in (bad) js shll imul add subl and cli rolb out rex.WB jb pop (bad) and sbb add (bad) mov (bad) xchg mov lods test rolb jrcxz stos and jae movsl nop mov xor test pushq (bad) rex.WXB (bad) stc adc test lahf rex.B (bad) rex.WB out mov sub enterq jmp xor clc xor rex.WRX cmpsl push or rex.WB mov mov jp outsb xor or (bad) movabs pop imul iret stc pushq mov xchg sbb gs test jne movabs rex.WXB (bad) pop es cmc adc loopne outsl fsubr (bad) and push sub mov (bad) flds sbb and xchg enterq sbb xchg sub stos xchg cmp orl fwait mov rex.RB lret xchg xor push rex.WRXB bswap decl jne test (bad) movabs addr32 xor rex.B lret pushq mov add loope mov rex.WB repnz loopne imul or stc mov xor rcll loope or loopne add mov fisttpll jbe fcoms pop and adc pop retq rex.WRB lahf out jle pushfq add jrcxz cmpsb sahf (bad) (bad) sub movabs rex.RX xchg lock movslq out rex.WXB rex.RXB or in stos out add push rex.WXB rex.WB (bad) sbb cwtl sub rex.WRX (bad) pop loop rex.WB movabs (bad) pop add mov or mov sahf sub mov (bad) sub cmp push outsb sub (bad) (bad) mov sbb adc or adc pop add (bad) fsubp rex.WB jne sub rex.WB adc rex loopne pop rex.W (bad) mov roll adc mov imul xchg mov rex.WB (bad) loopne scas rex.WRX and jrcxz pushq or rcll pushq mov and add sbb (bad) xor sbb push test jo push nop push (bad) js xchg addr32 pushq push push imul es testl iret loopne,pt sub xor jmp rex.W xchg jp hlt push int3 rcll rex.WB jl int3 sub stos rex.RXB lock movabs stc hlt imul sub mov in xchg fwait (bad) sti loopne rex.RXB (bad) ja xchg and movabs jrcxz or insl rex.B jae pop (bad) xchg rex.WB mov jmpq sub mov pop (bad) clc push movabs mov callq jo push subb jle rex.WRB addr32 shrl int3 cmp mov movabs test add sub jle adc cmp nop (bad) (bad) (bad) xchg xorl loope cld sbb loope pop xchg ja sub rex.R rex.WX sarl enterq cld rex.B rex.WRB retq fsubs or sahf leaveq gs and loope int rex.WRB (bad) mov rex.WRB sbb pop fistl loope,pt rex.WB sub mov xchg cltd mov (bad) mov imul (bad) jno add cmc sub cmp iret enterq push scas out (bad) rex.WR sub xor and push clc cmp add lea adc (bad) rex.WB movabs pushq or (bad) rex.WB sbb insl jg (bad) pushq fwait jns (bad) (bad) retq movabs and mov rex.WB pop lock and pop and stos mov movabs lgs or mov (bad) movslq fs orl xchg sbb int3 and (bad) test sbb (bad) mov (bad) cltd mov ror lret pop mov test fisttpl (bad) sbb push lahf and adc in test out mov stc movabs fmull insl cmp (bad) mov or mov mov rex.XB cmp test add rex.WB pop insl retq repnz clc in add mov jne (bad) repz push xor pop (bad) stos jge adc movsl mov bswap and pushq (bad) xchg or popfq fiaddl imul pop cwtl push sbb jl loopne jp (bad) fcoms mov and repz add rcll sub or sub mov pop outsb adc rex.WB rex.R fldl loop in out fs outsb callq rex.WRB addr32 (bad) pushq addl lods stc (bad) or imul rex.WB pop mov rep fldenv or (bad) pop test pop ficoml sti cmp rorl (bad) mov int mov rex.RXB cmp rex.WX rex.WB adc mov lock xchg retq cmpl mov loop sub rex rex.RB rex.WB sahf test shrb push test and mov out push sbbl lods mov pushq orl loopne sbb scas out js sbb sarl fldenv pop (bad) cltd callq mov rex.WR nop (bad) rex.X test rex.WX rex.X xchg pushq rex.WRX adc mov pushfq mov add (bad) (bad) lods orl jrcxz (bad) push sbb (bad) mov insb divb xchg push movabs pop cmp push jbe mov jmp scas rex.WRB rex.WB sub xor xlat (bad) pop rex.WB pop sub iret ja lods movslq (bad) int enterq pushq xchg (bad) rex.RX rex.WB mov cmp in scas push xchg out mov push pop cwtl push movsb out in clc rex.WX rex.RXB (bad) pop movabs (bad) mov push rex.RXB rex.XB xchg jno mov retq callq jns je add (bad) fcompl rex.RXB es jg rex.WRX ds (bad) leaveq out enterq mov xor adc or rex.XB rex.R sub jmp enterq cwtl or movsb (bad) pop cli (bad) imul cmp sub gs or xchg jle (bad) rex.WB push stos cmc ror sbb outsl callq pop retq rex.WRB test sub mov icebp pop repnz cmp in enterq jle jnp jp (bad) rolb rex.WRX jo callq (bad) out xor mov testl jnp rex.WB xor rex.RXB jmpq xchg adc notb add pushq rex.WB jl cmp xchg (bad) retq pop std rex.WB (bad) cmp movslq pop rex.WRB jb add (bad) callq rex.W (bad) lock push rex.WRXB insb and (bad) push (bad) xchg mov sub mov pushq movabs (bad) jg push fiaddl adc (bad) jae movslq movabs test sbb cmp add xorb rex.WB idivl mov jbe (bad) lahf (bad) mov lret loopne pop jo pop rex.WB pushfq push rex.WB lea callq callq (bad) (bad) andl test rex.B push movabs movabs mov add (bad) mov loop (bad) push (bad) pushq mov sub in in fs xor (bad) mov (bad) sbb (bad) xchg cld push xchg (bad) and jg xor fidivrl jne mov (bad) addr32 fisttp lock push push mov rex.RB rex.WXB adc imul loopne mov rex.WB out (bad) adc jmpq (bad) sarl ja mov out cmp cmp jge rex.RX jnp,pn movsb adc mov adc cmp out push icebp fwait adc rex.XB gs mov retq (bad) jrcxz js stos je (bad) imul outsl movabs sbb and repnz xchg xchg mov push push insl mov in (bad) (bad) hlt scas (bad) xlat lock pop out adc and movabs nop orl lret xchg mov rex.RXB xor or fwait rex.WXB out (bad) or xor rex.WB (bad) (bad) rex.WXB shll movsb cmpsl sub rex.WB add mov fadd jb fisub vcvtss2si (bad) loopne mov movsl sub rex rex.WB add rcl js xor pop or test push push lea and rex.WRX mov cmp xor je (bad) stos rex.XB movsb (bad) in pushfq jrcxz std jo (bad) jnp iret leaveq rex.WB rex.WRB pop push pop jne retq jg repnz (bad) shlb out lret in push rex.WB mov sbb imul jae sub rex.WX rex.WB add lods movabs fisttpl mov mov (bad) cmp mov mov or andb (bad) mov (bad) stos jl sub (bad) push xchg (bad) rex.WX ss cmp adc (bad) cmpl xchg jbe fisttp mov test div rex.XB cmpsb pushq jrcxz fnstcw fnsave loop and (bad) pushq insl pop push leaveq retq add shr ja (bad) rcrb (bad) sub popfq sub xchg rex fs stos (bad) clc (bad) rex.WB lock mov xor cli out bnd loop mov rex.W xchg rex.WB rep jne xchg mov or cmc out stc xchg (bad) cmpsl sar popfq loopne icebp xchg lret (bad) (bad) retq jns and xor jno int in enterq iret fisubrl or jae cmp repnz rex.WRB ja jrcxz sub lods push push cmc movsl je out mov (bad) in iret movabs pop fsubrl scas clc pop cmp (bad) stc sub sbb add cmp jmp subl rex.WRXB lcall ror sub xlat cmp xchg pop adc int3 jb mov rex.WB rex.WRX sbb sahf rex.WB (bad) adc clc pop xchg movabs push stc test pop (bad) clc imul or mov and iret cwtl rex.WB xor sbb mov stos rex xor stc add mov (bad) pushq out fisttpll enterq andl sub or mov (bad) movslq mov rex.R pushq rex.W movabs lock mov ficomp sbb mov out jmpq sub in rex.WRXB mov add clc movsb rex.RXB loopne sbb rex.XB adc gs pushq pop rex.XB jno (bad) repz and (bad) rex.WB ds ja and leaveq xchg adc add mov xor jmpq jg rex.XB rex.R rex.WB rex.WX (bad) out sub (bad) cmp mov (bad) (bad) out cmp je (bad) imul jp cmp rex.RX in lods (bad) mov je cmc lret in pop rclb add push loop pop adc ja mov fsub rex.WB xchg jns rex.X out loop pushfq cmpl icebp mov repnz clc mov imul fbld mov decb xchg adc stc scas data16 sbb fidiv stos insl xchg sbb jae sub mov rex.RXB xchg jp cltd (bad) sbb out xor push xchg rex.WRB rolb lahf imul jae (bad) mov (bad) (bad) lods xor out adc sbb rex.WRB push mov fs rex.RXB iret (bad) fsubs sub mov nop fadd cmp std mov cmp rex.XB (bad) gs fisub outsb (bad) rex.WXB nop push mov xor sbb mov subl sub (bad) pop es (bad) lret callq enterq popfq test mov rex.B pop sub (bad) imul popfq push add push and rex.RX xor (bad) adc mov xor pop loope lods js mov mov mov and rex.WB sbb jno fsubrs and rex.B rex.X xor addb shl (bad) cmpsb sbb and sub mov and push mov sub mov (bad) xlat jge add loope xchg rex.WB imul or fisttpl jae std sub fwait enterq rex.WX rex.XB rex.WB gs xchg and movsl jae test (bad) pushq (bad) rex.WRXB nop movsb xchg sub or shrl mov jno ja or rex.B xor cmp vsqrtpd adc jmp mov sbb mov add cmc push negl pop test (bad) (bad) cmp in or jle loope sub xchg and and cmp adc clc and loop mov rex.W (bad) jne xor fstl xchg callq push lods (bad) rex.RB sub (bad) add jmp jp adc pop retq (bad) mov (bad) imul adc cmp or cltd xor (bad) test push push add (bad) fdiv add sahf test mov xor pushq push sti rex and jmpq xor int3 test cmpsl int3 fwait xor lahf (bad) ds sarl (bad) xchg pop addr32 loopne pop in loop (bad) sub xchg cmp movabs movsb xchg sub rex.WRB (bad) addr32 cmp (bad) jno rex.WRB rex.B mov rex.WXB leaveq xor and int add movabs cli movabs xor jmp rex.WRB add clc lret cltd shrl rex.WX sub and adc jb cli shrb jmpq sarb cmp movslq mov mov sti negl (bad) mov data16 push data16 loope adc in fsubrs sbb andl clc (bad) addl pop hlt roll in pop sbb xlat mov test (bad) mov (bad) movabs and jge cmpb scas jbe mov or push (bad) enterq push stc mov (bad) jge cmpsb (bad) scas adc loop lret pop jmpq sub rex.WR test mov sub cmpsb callq xor lret rex.X adc loope (bad) lret and subb pop movsb and cmpsl sbb mov imul fisubl cs hlt push xchg movabs push and mov push xor (bad) movabs xor mov sbb add or rex int3 stos cmp adc (bad) pop rex.R repz out add cwtl xor lret xor cli xor cltd (bad) add scas in rorb jle mov sub sbb sbb stc rex.B icebp adc clc mov loope jle jp mov movslq (bad) xchg data16 (bad) test ja cmp retq nop out sub adc push ds retq test jrcxz pop jmpq xchg adc (bad) stos callq (bad) jb mov or ss pop pop callq lahf retq rex.X orl adc sub xchg shr (bad) (bad) loop jnp clc fcompl (bad) (bad) push pop cmp sbb xor leaveq rex.XB rex.WB enterq rex.WB pop (bad) sbb xchg out fwait rex.WB mov rex.WB and xchg cwtl rex.B rex.WRB outsl or adc sub insl cli (bad) rex.WR movabs in loopne stc xor (bad) jb lret cmpsb or hlt movabs or insb lret pop (bad) scas rex.WB rex.WXB rex.WRX int gs sub push lock sub pushq or imul rex.W cmp push (bad) jmp rcll test pushq stos (bad) (bad) jnp test xor lret std lahf callq sub and movsb cli (bad) fisttpll mov out and in sahf xor loope push pushq insb xor pop mov imul jmp (bad) retq pop mov mov adc add add cwtl and sub add xlat rex.WB xor mov mov sub pop movabs (bad) (bad) xchg (bad) lret lea rex.RX movabs xchg fisttpl gs and sbb adc loop pushfq mov and sub rex.WB rex.RB loop rex.WB adc rex.WXB rex.WRXB test rex.WX (bad) adc loope decl mov clc out lret and (bad) (bad) xor or and decb rex.WRB repnz mov in push pop loop rex.RXB cli sbbb pushq (bad) enterq rex.RX leaveq fimul out data16 (bad) cmp (bad) (bad) rex.B (bad) cmc rex.XB xor mov lea sbb mov (bad) rex.WB mov (bad) mov pop or mov push and int push pushq idiv in and (bad) (bad) int3 mov lahf movsl xchg fldl lret jb (bad) lods push out jge movsb (bad) mov pop (bad) sub test (bad) ja gs xor (bad) jmpq rex.WRB mov mov and fldl test fisttp movsl pop xchg rex.WB fimul fldcw mov (bad) rex.WB imul rex.WB xchg (bad) (bad) iret (bad) (bad) mov pop stos sub push sub (bad) clc and frstor cmpsb rex.WB shll adc test shrb rex.WRB or sub cmp and sbb (bad) vxorpd push rex.WB (bad) xchg mov loop data16 (bad) movabs lea fwait xor movsl rex.WB mov sti rex.X rex.RX shll hlt xchg lock push callq xor or mov add xchg enterq (bad) push lods rex.WB push and mov out callq stos rex rex.WX (bad) jp add icebp in scas movslq sahf xchg fsubrl jl xor add mov repnz movabs stc rex.B jno xor mov rex.WB sar adc cwtl insb adc jge rex.WRXB pop (bad) and rex push cld (bad) rex.W rex.WB (bad) and cmp pop rex.WB mov test mov push cmpsl (bad) callq pop sub inc repnz sbb int3 jnp leaveq or data16 outsb mov and (bad) sub rex.X mov test sub xor push sbb hlt mov jl pop pop adc callq scas pop movslq push fs adc pop hlt xor rolb mov stc lret rex.WB clc (bad) std add xor mov lock sahf or mov lods push adc cs mov callq jl mov xchg jns (bad) andl mov or (bad) (bad) xchg xchg loop insb rex.RX ss rex.WB cmp rex.WB rex.WRX xchg (bad) adc rex test and add cld sub (bad) (bad) js pop mov (bad) rex.WB cmp (bad) xchg push enterq mov mov or adc sub jo out rex.WB and loope stc mov fsubp ds adc test jnp rex.WB sub xchg sbb mov xchg and out jrcxz pop or adc rex.W rex.WX fwait sbb outsb (bad) add rex push sbb rorb (bad) mov push rex.WB ja rex.R or addr32 subl (bad) fimull clc (bad) movsb test rex.W cmp decl rex.R ds ja mov addr32 xchg add cwtl jrcxz xor push cmp movsb adcb mov (bad) xor jp mov xchg and rex.WRX sub adc push cmc adc jne out data16 jnp (bad) rex.WRB sub loopel (bad) cmc xor xor rex.RX rex.WXB mov rex.WR xchg or jae fdivs enterq sub popfq (bad) pop lret jg sbb rex.B cmpsl pop add shl cmp mov push push pushq fisubr js add cld cs jnp fsubp fndisi(8087 stos rex.WR (bad) fdivr pushq mov lret rcrb (bad) sub or rex (bad) xor rex.WX (bad) cmc imul push loopne mov (bad) sbb pop jrcxz addr32 rex.WRXB fwait in callq out test movabs rex.WXB lahf sub rex.WRXB jmpq ss rex.XB push jno push mov push adc imul pop scas js mov mov pop sub fs or mov or jge rex.WXB adc cmpsl add lea xor mov rex.B mov nop leaveq jg lret out push sbb int imul push sbb leaveq or xchg mov xchg (bad) js nop adc fs callq pop mov (bad) (bad) cmp and sub rex.X rex rex.XB mov in fs pushq movabs leaveq repnz and push fiadd sbb mov (bad) push movabs mov adc mov and imul cmp cmp sbb (bad) (bad) callq jae ds pop pop and rex.XB movslq scas lea mov popfq xchg pop rex.WXB lahf pushq (bad) sub jns cwtl mov je nop (bad) and insb mov (bad) mov rclb sti jge stc jns xchg push fiadd (bad) fwait pushfq mov retq adc or push (bad) jne and and pushfq jno hlt retq mov hlt pop jmpq push add movabs rcrb mov and test out movsl rex.WRXB cmp orl rex.WB int3 rex.RX xor pcmpgtw adc addr32 adc cwtl rex.RX ss (bad) divb rex.B mov loope xor sub popfq (bad) (bad) repz (bad) (bad) (bad) pop or or sub and mov push insl cmp (bad) cwtl adc sbb xchg insb cmp rex.WB rex.RXB add frstor push addr32 jmp add add add mov mov rex xchg pop divl (bad) xchg mov jmpq out add pop rex.R mov adc fisubl fidiv pushq mov mov or (bad) mov mov cmp orl mov outsb iret or mov adc or sub adc cmp sub (bad) (bad) pop (bad) in sarl in mov jmpq adc sub movq stos sahf push retq mov (bad) xchg jge xchg out adc ficomp mov rcl mov mov pop jrcxz test jg push (bad) insl rex.RB repnz mov adc pop jbe mov int cmp pop lock shll cmp rex.XB or cmp rex.WB ds (bad) (bad) std sahf pop pop or cli (bad) out rex.WB and outsl rex.WB and cmp ss vmovsd rex.WB cmp sub in rex.WRB (bad) or or xor rex.WX imul rex.X cmc sbbl (bad) push (bad) lods rex.WRX or je sub xchg xor sarb pop xchg sbb push rex.RX mov callq (bad) push (bad) rex.RB rex.WB ds outsl sub sbb cwtl mov (bad) (bad) pushq jne imul mov and sbb out adc pop fisubrl pop rex.WB mov pop jmpq mov (bad) je xchg gs test iret subb and (bad) out rorl jrcxz mov mov (bad) add nop (bad) rcll or (bad) xchg (bad) sub movabs sub cmpsl rex.WRXB push pop sbb adc or stos mov out adcl mov and mov (bad) (bad) pop scas sub pop test mov xor jo rol movsb jae pushq hlt or xor add mov fs mov rex.RB push push xor rex.WB xrelease (bad) add add xor (bad) ja (bad) jno outsl adc push push addr32 or or lret pop or and xor (bad) sbb cwtl movabs out test test fsubs and (bad) adc (bad) ja pop in cli sti sub (bad) sahf rex.WB rex.RB cmp rex.WXB rex.WB (bad) (bad) in (bad) rorl xlat sbb jle pushfq lock jmp (bad) out cwtl pop test ja add and out in jae and movabs sub scas divl xchg stos (bad) adc insl mov pushq pop push xor (bad) (bad) sti mov sbb callq sbb add jp int xchg and callq (bad) pushq (bad) pop or mov mov repz rex.RXB jb mov jbe fwait neg sub rex.WB rex.WXB cmp and mov out mov movabs sbb clc test repnz callq push jmp callq std cmovns (bad) pushfq insl int3 jbe sbb xchg fcmovb nop (bad) sahf rex.X (bad) mov movabs fwait cltd lret jne push jle push movsl imul xlat lret popfq xor cmpsl subl lock mov callq popfq cmpsl xchg pop and sub adc pop mov add mov rex.XB sub cmp insl rex.WRXB (bad) enterq roll fmuls pushq rolb rex.WB or or (bad) push jp sbb fadd mov retq sbb outsb pop je out (bad) (bad) push (bad) rex.WB adc imul mov cmp push divb fcoml mov lea cmp jp std and xchg (bad) pop rex.R pushq xchg rex.WRXB push orl add movsb sub xchg jrcxz (bad) test icebp cmpsb shrl cld lret jne (bad) std (bad) add sbb rclb (bad) cmp (bad) add ror mov (bad) and or pushfq rex.WB test rex.WB (bad) in mov rex.WRX loope sbb scas sub add (bad) xchg rex.WR (bad) icebp fisttpll rex.XB sbb sbb rex.WXB rex.WRB addr32 rex.WB loope sub mov xrelease sbb or cs mov rex.WRB movabs mov mov out (bad) out xchg and sbb or sub faddl pop pop pop (bad) hlt jns repz lea rex.RX lret cmpsl pop mov xchg scas test or pushfq and stc mov gs jnp sub (bad) mov rex.WXB sub rcrb je and sub cmp jns pop je mov rex.XB loop iret jne push rex.X out or mov movsb pop je sarl js (bad) sub jge push lret and xor rex.WB pushq pushq callq pop outsb rex.WRX sahf rex.WB cmp sub int3 callq xchg and xlat jge movhps (bad) insl je sbb add lods rex.X in divb adc imul fisttpll fdivp fsubs xchg mov (bad) stc rex.WXB jno xlat rex.XB mov rex.WRB notb mov and callq rex.WB (bad) rex.R rex.W xrelease push shrb xchg pushq (bad) push not movabs (bad) (bad) cmp andb (bad) movsl mull rex.RX sub (bad) jge sub pop je mov pushq movsl loopne jae push (bad) sub jg sub mov sub cmpsl sub rex.WB movslq pop out stos rex cmovns divb adc loop rex.RB xchg rex.WX push xchg (bad) sbb (bad) mov adc mov out xor psrad sub jp push (bad) adc pop mov (bad) sub movslq or lahf loope cmpsl sub or jne mov rex.W (bad) out (bad) iret jns movabs cmp (bad) rex.WRXB (bad) data16 adc std (bad) leaveq int3 es out xchg int and and test cmp test mov imul pop pop mov sbb xor (bad) (bad) pop repnz ljmp or rex.WB push test leaveq xchg cmp in fisubrl enterq lods movabs mov movslq mov ss push (bad) (bad) add and callq lret cwtl mov xchg pop stos loop (bad) push xor out (bad) mov divb out (bad) stc int lods or idivl sahf clc jo sarl lea xor (bad) (bad) fs mov or std rex.WX (bad) pop (bad) insb lea xchg and rex.WB pop or mov hlt pushq callq (bad) mov nop mov xlat jmpq pushfq (bad) shrb and cmp xor pop test pushq and (bad) rex.WXB adc mov mov nop rol rex.XB rex.W clc rex.WX mov jno xchg rex.WRB jbe or mov (bad) jnp (bad) lods (bad) cmp adc xor sahf addr32 xchg xor cmp movabs rex.WXB rex.WXB leaveq rex.WRX out test gs add iret std (bad) sub cmp (bad) jnp movslq lahf out movabs addr32 mov cmp jmp push sahf rex.RX data16 xchg ja cmp rex.WXB xor rex.WB addr32 or jne rcr xlat rex.B mov sub sbb jmpq sbb (bad) pop (bad) mov ss add (bad) test movabs and add (bad) mov jp xchg (bad) (bad) mov out lret sub (bad) jl (bad) (bad) and sbb rex.WX test in mov imul push xor sub mulps mov mov xor push lods movsb (bad) xor xchg mov movsb jnp push rex.WR in xchg sbb rex.WB pop (bad) negb and addl xchg movabs pop ds rex.R rex.WX rex.X pop pop cltd pop rex.B rcrl sbb sub sub and xchg sbb pushq rclb out scas mov out je adc in add or insl fadd fadds enterq (bad) retq cmp rex.X mov sbb leaveq movabs mov rex.WRXB insb std out rex.WRX (bad) xchg jmpq movabs (bad) mov cli movslq xor fdivrl mov cmpsb cs push movabs subl and push xor sub rex.RXB pop jnp push (bad) rex.WRXB sub xor (bad) shll push sub and rex.RB sarl out xchg xor or pop push mov xor (bad) enterq (bad) mov sti pushq mov mov sbb xor mov rex.WRXB rcrb pushq cs (bad) rex.WB push or pushfq mov mov jg or mov scas cmp lret and out sub sbbb pushq rex.WRXB rex.RXB rex.WB rex.B rex.WRB or ffree mov mov push mov sub (bad) (bad) mov xchg rex.WX addr32 icebp fld mov scas jne mov mov pop subb iret pushq push (bad) rex.WRX mov rex.R rex.WB (bad) xchg sarl mov rex.WB or lret stos insb addr32 lea cmpsb cmc rex.WB in repz sub mov (bad) push or rex.WRXB mov in in rex.WB popfq mov xor mov or rex.WB ds xchg repnz mov xchg add xchg or imulb pop mov (bad) rex.WB mov faddl rex.WR rex.WB or rex.WRB imul rex rex.WB fs cmp fmuls callq fbld adc and rex.WB or int rex.WRX jl cmp or cld mov rex.W xor and rex.RB rex.WB add mov add out sub movslq mov adcl xor sub add jp in mov gs insb (bad) lret lahf addr32 sub xchg jo (bad) out adc push std insb rex.WRXB int out iret mov stc scas jae (bad) cmp movslq rex.WB test pop cmp mov jbe mov add imul and lret jp cli jno leaveq mov mov adc jmp rex.WB test adc jb out pop jrcxz pop out sub orb (bad) stos push shlb mov pushfq movsb jnp addl rex.XB and xchg rex.WB cmp fs out (bad) pushq repz and rex.X lahf pop xor int xlat add data16 stc or jg jns pop mov sub sub out testl mov fistp rex.WB clc or mov callq insl xchg mov rex.WB cmpsl cli test jrcxz rex.WB cmp sub xchg xor add jl xchg rex.WB movabs adc mov int3 mov or adc jmp and adc cmp xchg lock enterq xchg sbb hlt or rex.XB addr32 add (bad) pushq mov pop jae sbb cmp xchg icebp rex.RXB rex.B ds cli push rex.WXB clc sbb and cltd out imul xor fdivl jbe rex.B sahf mov js (bad) jne fidivrl fdivrs jl clc xor mov test mull fs lret xor (bad) add xlat imulb sbb push notl mov loopne mov out adc cwtl adc push add ficom sbb and jrcxz sti jg sub xchg fs sub pop in movabs jno jmp and or lods pop movsl sbbl pop xchg testl sub or (bad) or (bad) xor jmp movslq retq xorl iret test icebp (bad) rex.XB test je and sub rex.WR cmp not adc sbb (bad) imul sbb outsb lret pop sub addr32 jo (bad) in (bad) (bad) rex.WR sub xor push (bad) push add out (bad) adc js outsb nop (bad) mov in int3 adc shlb js rex.WXB jb outsb xchg and test xchg movsb rex.WB mov pop stos rex.WXB xchg fs rex.WRB mov push rex.WB outsl (bad) pushq rex.WRX (bad) clc (bad) lret pop pop pop ds loope (bad) in (bad) mov mov sbb out lret xlat rcl or stc sbb cmp stc leaveq mov xchg loopne cmp and movabs insb lret add movabs jge or or test (bad) out sbb push adc (bad) stos (bad) out and imul or int3 je rex.RXB (bad) mov movsb cmpsb sbb mov mov rex.WB rex.WRX rex.RXB adc ja callq (bad) pop jne mov and fwait mov xchg fidivr jg and pop scas nop or rex.WB xchg sub mov int3 sub jle int cmp (bad) sub sbb or sti sub sahf test cmc rex movslq xor (bad) paddb imul movabs pop cmp fistpl xlat nop out mov rex.RX and or jb sbb lods movabs outsl or push mov lea (bad) (bad) xchg sub or (bad) callq push mov push pop faddl and cmpl rex.B rex.WX mov rex.WB pop loop pop cmp and pop add push sub rex.WB rex.RB ss sub jbe mov cld mov rex.WB rex.XB jge mov xchg rex.WB xor rex.RXB movsl pop data16 mov mov rex.XB and out (bad) loop popfq shr rex.WB cmc and jge sub es cmp push loope rex.WB pop (bad) adc rex rex.WB rex.WX rex.RX xchg xchg and shr rolb sub rex.W insl (bad) sbb rex.WR mov callq adc (bad) push out jmp enterq movabs or leaveq fwait pop movabs jp pop xchg stos mov fld imul jo iret pushq cmp add jno rex.WXB (bad) lahf rex.WRXB clc (bad) sub adc test iret callq cmc add jae out xor xchg int3 xabort ss imul (bad) (bad) movsl jbe jg and rex.WRX rex.XB callq retq (bad) cs popfq xchg loop rex.WB jb fwait (bad) shr lret fldl (bad) and push and out or sbb movabs movabs and rex.RX rorb mov (bad) mov add fldcw sbb (bad) rex.RX rex.RX rex.WRXB fmuls mov psrad (bad) (bad) and xor (bad) (bad) cmp in push gs movabs or leaveq mov in and repnz pop out mov adc sbb movabs scas or jo hlt mov callq jle xchg (bad) pushq out adc pop in pop xchg (bad) (bad) mov xchg and enterq in jns jle rex.WRXB (bad) lock rex.RX (bad) adc pushq lods pop jl clc mov rex.WB xor add (bad) negb rex.WR add rex.XB and int3 (bad) and rolb xor rex.WR int sub or out mov or addr32 rex.WB rex.WR ja test push and movabs jne movabs rex.WRB ds xlat add push cmp jp pop pop adc xor sti add rex.X gs adc sbb mov jne cmp (bad) (bad) pushq test sub mul rex.XB (bad) test (bad) stc push (bad) sahf jns (bad) adc jnp rex.WB imul push add sbb xchg mov add scas in fstpt pop or emms xor push xor or ss rorl lahf frstor jo pop add clc pop lea cmp sub (bad) (bad) (bad) mov rex.WB (bad) movslq xchg vfrczpd lods shll pop lods or jno xchg js mov sbb sbb push (bad) and rex.WB fldenv rex.WB sub jns nop sbb icebp rex.WRX rex.XB push in xchg xor mov test xchg (bad) out scas or or mov int (bad) jmp xchg sub jle retq movabs data16 fidivr fsub out leaveq (bad) jne jno mov mov rex.W adc and ja cmp push scas std xorl insl xchg in callq ss leaveq rclb repz add in int push stos mov (bad) rex.WX rex.WB adc jae and ja (bad) fistpll cs sub adc out movabs push pop push rex.WB js idivl (bad) mov or ss repz movsl jne pushfq pop sbbl pop incl xlat in mov pushfq xor jl jrcxz cmp ja (bad) and out rex.WR rex.XB rex.WB push sub cmp cwtl (bad) xchg (bad) in setnp mov stos push and in mov sub mov lods addr32 jns add pop mov stc xchg jmpq or xchg retq cmp rex.WB mov pushfq enterq and push or sbb fwait rex.B mov sub andb pop (bad) mov fistp rex.WXB rex.WB movslq mov rex.WB nop jp scas pop xchg (bad) xchg adc in mov rex.WB nop adc (bad) and (bad) in (bad) sub or xchg fildll pop and fisubr sbb rex.RX adc retq and pushq rex.WX pop loopne mov (bad) movb rex.RXB jg jrcxz jns (bad) sbb test lock adc imul push outsb popfq add pop and rex.WB jmpq sti sub (bad) jo cmp pop xchg leaveq sub rex.WB ds push pop (bad) rex.WB pop and sbb mov rex.WRX xor and rex.WB and mov rex.WB jmpq mov imul push mov or push xchg xor jp pushq ss (bad) fs rex.WRB lea mov (bad) (bad) movabs mov add push loope adc sub sbb jno mov popfq movabs add leaveq rex.WB sub xor rol callq add lods or mov roll xchg (bad) mov fisttpll popfq ds (bad) jnp or rex.R cmp mov mov mov shlb rex.RXB fisttpll adc jge test cltd in and icebp ja callq xchg clc push pushq (bad) cmp cmp punpcklwd add rcll mov scas mov rex.W rex.WRX xrelease lock out in rex.WXB lods sub cmpsl pop std or and and rex.WX rex.WRX or icebp (bad) pushq pop mov cmp jno jae xchg out leaveq adc rex.XB test fs movslq cmp movabs imull (bad) jno adc pop add (bad) in rex.RXB push or add or rex.WRB cmc sbb rcrb nop (bad) fs test or addr32 pop out sbb in add shrl repnz stos sub cmp movsl mov adc add icebp leaveq pop notl push addr32 divl or repnz jl (bad) rex.W push fs test data16 mov insb cli cwtl rex.XB pop cltd jg test mov mov sub sbb or in test mov in movsl (bad) (bad) mov jno rex.RX rex.X rex.WXB sbb xchg or xchg pushq rex.RB jno adc xchg movsb ds rex.WB adc (bad) sbbb callq imulb (bad) fldcw fimull cltd (bad) sbb rex.WRX rex.RX rex.WRB js adc mov (bad) pop rex.RB xlat pop adc outsb shr fidivl callq and sub rex.WB fsubl (bad) hlt cmp fnstsw cmp int cmp jae sbb (bad) or and pushq retq (bad) imul vmulsd rorl mov rex.WRX rex.XB (bad) jo movhps adc pop div rex.WRXB rex.WR sub in (bad) xor test retq (bad) test jmpq repnz pushq sub (bad) stos fcoml push push add cwtl (bad) cmpsl pushq rex.WXB (bad) mov sub and (bad) rol and test movabs (bad) xor (bad) jge and mov idivb add movsl (bad) (bad) (bad) rex.XB pop js loope sub mov add data16 cmp repz and rex.RB repnz jg cwtl in (bad) test in mov clc or (bad) movabs jge (bad) jns je or jae mov sub and hlt in test test cmc jb clc out scas mov xchg add or decl cwtl cmp or sub js movabs movabs sbb (bad) mov (bad) adc cwtl rex.WB mov xchg sub adc lods mov or xor lahf xorb fsubrl jl sub jb (bad) xchg rex.WB rex.R push xor xchg mov cwtl sbb or (bad) loopne js rex.WB sub adc push xor rex.WRX xchg rex.WB xchg push orl (bad) leaveq cmpsl mov (bad) (bad) and shr pop adc adc lea xor out vorps fucomp sbb pop jge push or sbb popfq sub or in pushfq mov (bad) xor rex.B push out push lahf pop jnp imul mov push retq rex.R jrcxz rex.RB lods (bad) iret xor (bad) mov rex.B jne pop test ds js (bad) fidivl (bad) (bad) (bad) insl out sub and hlt and in sub add (bad) out mov hlt insl mov xor push movslq jne mov and or hlt adc movsl movsb sub xlat mov jb mov leaveq rex.RXB sbb movsb pushq xor (bad) (bad) iret ss rex.WB rex.WXB jne rex.WB lea data16 push stos imul cmp (bad) callq or lods adc xor cwtl (bad) pop add iret mov je ja icebp xchg (bad) (bad) (bad) add test in mov enterq (bad) enterq (bad) mov rex.WR cmp xchg (bad) mov xor movslq (bad) (bad) rcrl cmp out stos (bad) add mov sbb cmpsb out jmpq pop rcrb or cmp mov jnp mov push roll retq (bad) or or sbb jne (bad) pop sbb outsl jo test fsubrl mov or sub stos mov (bad) (bad) je pushq nop jbe rex.WXB clc and adc in insb xor or mov (bad) mov movsb cmp add sub (bad) adc cltd jno pop (bad) pop cmpsl sub ss xchg enterq test or clc (bad) fst hlt push xchg jl pop rex.WR movabs sbb (bad) int (bad) xor scas pop push fstl callq jmpq (bad) stc and cmp std in fldenv xor mov pop test or add sub rex.RXB rex.WRB fs pop (bad) mov xchg sarl xchg rex.R movabs sub xchg sahf (bad) push cmp xchg sbb adc rex.WX sbb (bad) test pop jbe gs sub fstl pop lods imul hlt stos stos (bad) (bad) mov mov fdivrs clc rex.B rex.X rex.WRXB gs mov (bad) mov outsb adc movslq xchg pop mov xor pop cwtl or rex.WB cltd movabs mov rex.RB and pushfq mov js mov (bad) ficom pushq sbb movsl jl sub fldt movabs xlat adc mov js ja mov out and sbb callq insb repnz fist (bad) ror (bad) pop jno (bad) push mov mov add pop (bad) (bad) insl mov and test rex.WB ja jo lock rex.WB enterq lea push sbbl adc in mov decb hlt shlb out (bad) cmp je pop fwait movb rex.WB out sub rex.WB outsl (bad) mov add pop and sub mov out movsl push pushq (bad) movabs (bad) pop xchg mov jae push rex.WRXB rex.WB jo jno lods and rex.X or lea add push rex.R (bad) int or add addr32 pop xor fadd cmp sti rex.WB rex.WXB rex.RB js rex.B rex.WB insb cmp push mov lret xor pop js xchg (bad) (bad) pushfq rex.WB es rex.RXB rex.WR rex.WB lahf rex.B push rex.W (bad) imul (bad) (bad) cld xchg stc push roll sub mov rex.RXB ror fbstp insl insb adc jb jge sbb (bad) sub sbb mov sub sti sub mov (bad) imul sub rex.WB (bad) cmc icebp xlat movabs add sahf mov cwtl fisttpll rex.XB mov in leaveq rex.X (bad) mov callq jle sub in je imul rex.RB (bad) bnd sub mov (bad) cmp out (bad) rex.WXB jo adc lret (bad) fsubs mov or jge or pcmpgtb movsb popfq data16 pop sub cmp int3 jmp adc cmp (bad) jo (bad) mov movabs movabs notb mov push callq gs and popfq cmp icebp fldt (bad) mov addr32 sub jp int3 rex.R adc out movsb popfq popfq scas pop retq rex.RB mov roll imul rex.WB jrcxz or jg rex.WB jl imul popfq rex.WB js pop rex.WB cmpsl jns mov callq (bad) jno cmp mov mov cmp rex.RX rex.WB jge pop fild adc mov fisubrl out rex.WB push lcall lret xchg rex.WB (bad) movabs je out jae rex.WB (bad) rex.WX rex.X adc pushq pop sti cld jns (bad) leaveq mov sahf pop jno (bad) rex.WB xchg adc sub xchg cwtl mov mov rex.WR lret xchg cmpsl pushq pop rex.WRXB data16 (bad) (bad) rex.RX (bad) xlat lret (bad) pop jne rex in incq cmpsl fnsave pop or mov movabs cmp adc in lret mov stos (bad) cmpsb movabs or sbb mov xor pop loop loope or sub add rex nop out data16 movabs out cmp or in xchg (bad) and xlat out sub gs adc rex.WX stc rcrb (bad) cmpsl and clc or adc and iret jno fistpl sahf movabs xchg cmp pop (bad) jge mov and fs jp mov imul sub add test mov cmp pop push in sub rex.B (bad) (bad) mov ja pushfq rex.WRX rex.RXB rex.WRB rex.WB popfq cli out xlat jge rex.WB xchg push scas adc mov xor cmp rex.WB push xchg test adc sbb add loop xchg enterq (bad) rex.WRB or or rex.WB test xchg cmp xlat rex.RB fs adc mov add mov rex.WR rex.WB jns cmpsl rex.RB and pop fcmovnbe mov rcll (bad) callq rex.WRXB or (bad) retq rex.RXB and loope mov inc sbb stos rex.WB repnz es gs lock jne rcll adc rex.WB jbe lock in jge (bad) cwtl mov jmp sbb (bad) xchg hlt mov sub bnd stos movsl test lods mov rex.WB es andl mov or test cld push xor (bad) push or pop (bad) mov lahf sub rex.WB pop and fcomps rcr test add rex.WXB cmpsb xchg rorb and rex.WRXB sub jmp (bad) lahf mov stos in adc cmpsl test push adc pushq (bad) pop adc (bad) fildl pop sbb rex.WB lods fldenv in ds pop xor loope jo xlat adc push cli pop (bad) jbe rex.WB cmp (bad) add es movabs and test gs jrcxz test rex.WB push stc mov (bad) rex.WB rex.X rex.XB mov push rex.WB push (bad) (bad) test xor rex.WB ljmp mov pushq pushfq sub sub sub repz mov sbbb xlat imul shrl fstpt lret icebp xor mov imul rex.X mov add rex.WRXB js mov (bad) sbb fdiv clc shrl rex.WB std stos sub iret fucom fwait xchg pop (bad) or jge rex.R rex.WB and rex.WB rex.B cmc ja mov rex.XB cmp pop and enterq movsb rex.WB xchg lea cmpsb push test (bad) lret cmp rex.WXB mov push callq (bad) mov cmpl push xchg (bad) mov rex.WB fwait push (bad) cld cmpsl sub fldcw adc xchg rex.XB sahf or repz (bad) xor push push movsb enterq sti xchg sbb rex.RXB cli movsl xor (bad) rex.WB cmp loopne and push loope mov loopne test push cld cmp pop push jo,pn mov (bad) pop out movslq or cmp (bad) pushq add mov rex.WXB (bad) loope sbb sub (bad) callq movabs xchg mov addr32 sub or hlt rex.RB cmpsl xor (bad) fdiv rex mov mov push add jge mov (bad) sbb or lods rex.WB (bad) pop retq push rex.WXB (bad) cmpsl sbb mov (bad) out mov cmp cmp addr32 or (bad) adc and push (bad) cmp xchg rex.WB mov cld rex.RX mov rex.RXB rex.WB push rex.WRX fbld rex.WB out in (bad) mov vsqrtsd (bad) jge shlb je and gs cmc rex.WB rorl sbb stos (bad) rol pushfq lahf hlt movsb rex.WB jno (bad) mov pop sub rex.WX xchg outsb retq xor mov push fucomip cmp jl and xorl cmp rex.WB lock or mov movabs enterq (bad) fsubr int3 cli or rex.WB pushq mov callq (bad) (bad) rex.WRXB js cmp rex.WXB lret movabs (bad) push pushq rex.WB imul jo jns mov rex.RXB jns mov test movabs rex.B (bad) jne loop outsb jrcxz nop mov retq rex.WRB rex.WX xor fdivl (bad) sub fwait and mov scas mov sub lock sub rex.WXB mov add rex mov push fstl mov jns jae push pop push rex.XB icebp shrb lods cmp and retq pop pop xlat push rex.WR mov sub (bad) pushq pop sbb in callq xor lret pop pushfq (bad) or cmc xor cmp pop fwait scas sub mov cwtl pushfq mov cmp cmp rex.WB scas jrcxz xor movabs rex.WRB cwtl rex.WB ja mov or nop stos (bad) (bad) sti rex.WB movabs jl pop fsubs out mov test xchg push or callq insb int je add rex jbe mov lahf xor lret addr32 mov and decb rex.WB cmpsb add xchg rex icebp pushq push xor jo decl xor retq (bad) mov jl rex.WB cmp (bad) and (bad) (bad) push or push (bad) rex.RX sbb pop mov rex.WB sub rex.WB stos (bad) loope idivb (bad) adc rex.WR xchg fisubrl adc and sub push push and xchg gs scas cmp sub push callq (bad) xchg xchg jrcxz xor pop (bad) movabs push adc pop rex.X pop (bad) lret or sub adc leaveq stos mov nop jae (bad) test movslq frstor rex.RXB push clc xor decl lret in sbb in xor xchg retq jge rex.RB sbb scas fsts xor jmpq out rex.WRXB or not out fsts mov lock leaveq ss (bad) mov add fsubrs lret stos rex and rex.B movsb test xchg (bad) push sbb (bad) jnp (bad) fs int3 nop mov push jae rex.W (bad) ds sbb sub pushq mov pop mov xor lods and pop popfq out (bad) jrcxz mov enterq xchg mov rex.RB fwait push jmp sub adc gs not sbb and (bad) adc js (bad) or retq sbbb cli leaveq jnp jle shrb jg jmp cmp mov push adc rex.WRX push push xchg push out rex.WRB shll decl adc jge xchg cmp jmpq (bad) (bad) ja jo pop mov rex.X cmpsb (bad) jbe adc and mov cmpsl enterq and hlt adc xlat subb sbbl gs rex.B lret mov (bad) (bad) (bad) pop cmpsb (bad) xchg jae rex.RXB (bad) ja jbe jbe rex.R fstpl cmp (bad) int3 sbb popfq cmpl mov int3 add movabs retq mov imul mov lahf pop xchg sub mulb and mov rclb adc movabs repnz rorb adc (bad) xchg rex.WB fs cmp xor xchg xor rex.WB sbb adc cmp pop movslq cmpsb (bad) and psubusb adc loopne (bad) rex.WX rex.WB xchg (bad) fwait ror lock cmp sbb rex.RX rex.WXB jp insl mov in sbb rcll rex.WB mulb adc push mov movabs (bad) rex.RB rex.WB js cmc lahf movsl jb iret jne xor ja jg jnp mov icebp ds sub jbe out leaveq xchg imul push pop pop int mov (bad) xchg leaveq movsb mov mov movl (bad) mov (bad) jmpq stos pushfq mov cmpb movl xchg cmpb int3 cmpsb jmp xor (bad) and ds stc loop outsl enterq (bad) addr32 out fsubl (bad) xlat fbstp (bad) rex.WB and xor pop stos movabs jl cmp mov in (bad) (bad) lcall sub xor xor push xor (bad) cmp popq leaveq mov xchg (bad) ss (bad) and cs pop fistpll rex.WB sbb stos (bad) xor rex.WX scas and (bad) and and std rex.X lret jp (bad) lods jmp rex.WB out pop loopne adc insl std (bad) pop lods (bad) cmp rex.WB lock rex.X sub add sbb inc rcll push push movabs (bad) (bad) or xor rex.WRXB popfq adc movabs enterq rex.X sub movabs push cwtl lahf sbb (bad) rex.W rex.WB (bad) cmp (bad) loopne roll fsts repnz pop rex.RX enterq mov adc fsubs mov lret (bad) mov (bad) xor push ja (bad) cmpsb sub mov sbb (bad) pop add pop add fs rex.WB jge xchg push rex.WX rex.WB or mov rex.W rex.WB add popfq rex.XB push adc rex.RXB mov cmp xor (bad) pop cmp jle sub pop rex.WB repnz jne (bad) rex.WRX rex.WR xchg rex.RB insb xor pop rex.WB xchg cs fdivs sub mov rcll sahf fs loopne fstps pop (bad) pop xchg outsb sbb sbb int3 cmp rex.WB rex.RB pop popfq rex.X xor rex.B mov mov xor stos hlt (bad) xchg rex.WR fdiv pop add mov rex.WX jmp rex.WB push adc (bad) rex.WB imul rex.WB jl mov jbe xchg lea and xor sbb (bad) mov movsl out out std rex.WXB (bad) mov enterq lret adc xor shll scas in xchg in xlat xchg push add cwtl rex.WB rex.WR addr32 clc xchg xor insb fnstenv shlb or fsubl out mov jb mov mov or sbb (bad) movabs movabs fincstp adc xchg pop push or or sub std sar rex.WXB test cli outsl push callq cmpsb out movabs push jmpq rex.B mov ja pushfq frstor xlat rolb mov and (bad) jae mov rex.WB pop (bad) and rcrl lahf fidivl or and add mov sar sbbb push and cmp cltd rex.WB lretq movabs loope fistpll pop jae rex.WRB orq mov movabs (bad) pushfq ja jge mov jl jbe rex.WB xlat cs xchg sar popfq and adc rex.WB mov fmull or add movabs rex.WX ss rex.WB xor loopne and xchg add cs (bad) divl xor pop add rex.XB rex.WR in icebp jnp,pn rex.WB scas or fisttp movabs (bad) mov push add movabs cmp mov leaveq xor mov rex.WRB rcrb movabs or sbb mov rex.WB mov jno out rex.XB (bad) pop or pop rex.WB push sub pop pop rex.WB loopnel test in es movabs test movabs pop xchg adc rex.WB (bad) fwait jge (bad) in clc movabs or lods xchg cmp (bad) jrcxz pop lret mov or sub pop and and js (bad) rex.WB adc sbb pop cmpsl jae xor jrcxz xlat pop rex.WR movsl in movsb jle rex.WR mov push sub scas jne add push xchg cmpsb (bad) (bad) sbb lods js (bad) std lahf in pop pop movsb and movb sub adc cwtl rex.WB loope (bad) fisub iret hlt out and pop push cmpb (bad) rex.WB sbb add (bad) and pop cwtl movabs movabs mov sbb jb movslq rex.WRXB xchg rex.X lret setns callq out sbb orl or repz js pushq (bad) add pop (bad) sar cmp xchg rclb rex.WB and xor repz push in (bad) sbb jae icebp xor cmpsl rex sbb jmp xor outsl ja adc vorps movsl or jle lock cltd jae pop (bad) orl rex.RX or cs mov or (bad) cmp sarb cmp mov (bad) nop movabs clc stos and adc rex.X mov mov rex.WRB or stc jbe add movsb loope out rorl rex.WB (bad) fsubl (bad) add or data16 pop xor subl xchg (bad) push int3 jg lret (bad) xchg (bad) sub (bad) mov add and push test enterq rex.RX in jle or sub xor (bad) imul pop out je (bad) sub mov pop add push rex.XB mov gs mov mov adc mov sub rex.W scas mov push cmp loopne movabs jl cli rex.WB out movsb rex.WB (bad) icebp (bad) retq pushq lea jg sub sahf out push xchg cmp mov repz jne xor (bad) cmp rex.WR rex.WX fdiv movsl rex.XB (bad) jne rex.WB mov rex.WB xchg cld sub add rex.WB jg addr32 jo pushq jle adc ds push push mov leaveq cmp rex.WB add push mov retq fs callq test adc xchg mov xchg shr addl pop mov rex.WB or stc xchg jp movabs mov je imulb pop mov add orl cmc rex.WR push imulb fisubr sbb mov (bad) movsb jmpq repnz adc jmp rex.WB push rex.RB lods xor adc lret push movabs rex.RXB jmp repnz cmp imul cmp adc pop ss mov mov rex.WB rex.RB xor in rex.WX sub pop loopne and (bad) jne or (bad) xchg push pushq (bad) pushq rex.WB (bad) (bad) fcomps mov sub lods pushq push mov push and jbe xchg outsl sbb lods shr add lahf test cltd xor pushq jns cltd (bad) xchg rex.R ja cmp out or cs rex.RXB xchg in rex.B xlat jge movsl (bad) pop jno stos xor cmp rex.WRX pop (bad) retq (bad) loope or ss fnstsw in js xchg (bad) retq rex.XB cmp fwait sbb in or xor (bad) xlat cmp sub cmpsl (bad) jl rex.RX insl mov cmp mov cmp pop (bad) (bad) movsb cwtl scas (bad) adc adc in (bad) pop icebp lret addr32 rex pop clc fld rex.RB rex.RXB mov cmc push fcoml lock mov add rex.RX (bad) sub cli (bad) cmp (bad) (bad) cmp sub es enterq loopne test test sub xor insb xchg imul movsb push or insb xchg repz (bad) nop (bad) jmpq cmpsb (bad) jns (bad) cmp push sub sbb (bad) ficom sub stos mov pop jmpq (bad) pushq mov jmpq sbb jge push pushq push pushfq or mov xlat outsb or push out mov xchg (bad) movslq (bad) jb fnstsw xor xchg cmp (bad) rex.R (bad) shrb add jg rcl iret sbb test enterq rex.X pushfq mov push rex.X retq scas mov sarb xchg sub pop stos pop push xlat sti jg mov (bad) in pop lods insb outsb add and shll mov test push or (bad) and (bad) mov pushq mov lods int movl (bad) rex.WB mov cmp lods or xchg rex.WB lock cld testb jmp pop (bad) ja hlt add scas loope adc (bad) fldenv rex.WRXB cmp rex.WB xorl mov (bad) xor (bad) cs out pop push (bad) mov push lock rex mov add (bad) (bad) int mov iret retq or push (bad) sbb rex.WB rex.WX std add (bad) (bad) xor sub fsubl (bad) xchg push rex.WRX callq rex.WR mov and in pop (bad) movabs push push xchg out (bad) movabs pushfq (bad) mov cwtl xchg decl sti (bad) rcrl (bad) pop sub and lock push sbb (bad) (bad) (bad) pop lahf push data16 (bad) int3 shlb rex.WB callq sub rex.WRB xor mov (bad) insl jae push mov repz movsb (bad) (bad) pop mov lret insl jrcxz fdivrs jmpq rex.WRXB out xor addl pop (bad) fistpl (bad) jbe repnz mov (bad) jno mov rex.WB cmp cmp (bad) fildll push pushq es cmp jle mov imul mov test sub test jmpq jmp push cmpsb mov (bad) js xlat ror push rex.WB fcomps ficoml andl rex.WB jp rex lret jo movabs cmp nop movslq xchg rex.XB movsl and cmc imul cmp repz pushfq fisttp mov rex.WX mov sbb add rex.WB (bad) or rex.XB test (bad) leaveq cmp loopne test fisttpll (bad) (bad) or rex.WB mov xor adc rex.XB (bad) mov (bad) rex.RX add mov rex.WB in mov pop mov rex.WB lock push mov fild movabs ja retq rex.X xchg (bad) negb loop movabs loopne int (bad) cld andl stc jmp sub (bad) rex.WRX movabs sub out jle test (bad) outsb movabs sbb pop pushq jbe (bad) popfq push (bad) mov adc lret xor add insb (bad) ja push pop rex.RXB loopne add (bad) (bad) cmpsb mov mov (bad) outsl rex.WR push or cwtl push cli pushfq xlat rex.WB divl (bad) lods or rex.RX (bad) pop test enterq (bad) cmpsb jmp in lods ja outsb (bad) sbb xchg repnz nop insl rex.WB retq pop jmp rex.WB lods lahf (bad) js mov rex.WRX sahf clc sbb mov cmp cwtl (bad) xor pop jle add or mov pop out and push adc cli int3 jp sub mov adc jg and callq insl add sbb movabs (bad) rex.WB xchg (bad) xor movabs jge xchg flds scas pop faddp xchg pop lods rex.WB mov sub cmp or (bad) (bad) (bad) (bad) cmpsb jl je test and vmovhpd sbb rex or jp outsl push jno rex.WB xor (bad) mov gs lods push pushq xchg pop xchg ds (bad) rex.WR add mov nop cmp fldcw sub sbb and je xchg adc (bad) rex.RX rex.WX adc movabs cmp retq test std cmpl ds (bad) fldt jno mov repz es jo rex mov rex.X mov mov sub sbbl rex.WB cs movabs sbb add fxch (bad) sub (bad) pop fbld clc outsb rolb rex.RX enterq rex gs rex.WX rex.WXB rex.W insl jmpq or or adc adc vmovddup push sbb cmp lods insb xchg iret adc ss adc cmpsb lret cmp (bad) mov (bad) iret outsl (bad) jnp cmp rex.XB cmpsb test jg mov insb icebp mov (bad) cwtl mov (bad) (bad) push xchg in mov push clc pop addr32 repz sub out pop sti retq xchg sbb jne iret xchg rex.WB rex.WRXB pushq adc jbe and es cmp jrcxz or loope insb fs (bad) data16 (bad) rex.WB js (bad) add enterq scas test jnp jae add cmp mov and loope sbb addb push adc cmp rex.WB ss adc es lods jge cmp push or sub mov (bad) mov lret rex.X rex.WB mov xchg sub out pop adc pushq fimul stos pop loopne pushq rex.RB xor rex.RX out pop jle test jmp cld mov rex.WB mov pop xchg pop movsl hlt jo rex.B (bad) xor outsb in mov lock jno adc sbb out mov rex.WB sbb xor jb movsl pop callq (bad) fdecstp imul rex.WRB rex.WRXB movslq repnz stos jno fdivrs popfq push movabs (bad) xchg movabs or rex.WB xor pop sub rex.WB (bad) xchg add rolb jg pop (bad) (bad) movsb mov repz rex.WB xchg rex.RXB pushfq shrb mov stos rex.WB rex.WRB (bad) pop rex.WB scas in rex.WR rex.R add addr32 loope (bad) mov sbb sti lret rex.WB jmpq add push add fldenv (bad) jae cwtl push out xchg rex.WR std insl push mov adc (bad) mov rex.WB cmp pop gs out stos jns rex.WB rex.WB xchg mov sbb cmp ds loopne idivl pop lahf and movabs rcrb mov movabs movhps rex.WX or (bad) pop rex.B (bad) outsb (bad) (bad) push cmp rex.WB sub cmp lret in fmull sbb outsl cs movsb lret fisttp jns js fsubrs (bad) movsl jp cmpsl sti cmc or lret cs cmp xchg rex.X rex.WB test out fucomi sub shrb mov jl jb sub lahf fcmovb rex.WRX fwait rex.WB (bad) or cs jle rex.B cltd mov movabs in nop pop std movabs subl cmp ror sub fstpt pop mov xor rex.WX add jae pop not mov mov loope sbb rclb xchg ds retq loopne sub hlt mov rex.B insb adc pushq or pushq (bad) in fmul lret pop stos (bad) pop outsl rex.WB imul loope and rex.WB rex.X add (bad) sub pushq movabs mov adc (bad) lock push lret sarb (bad) movabs sbb add mov sahf xor data16 pop pop sbb adc es xchg stos push rex.WB ss setno push (bad) rex movsb movslq mov sub jrcxz rex.RB sar stos or sub roll push xor rex.WB cmpsl cmc ja (bad) movsb pushq scas clc enterq (bad) and adc test gs (bad) cmc mov jrcxz xchg push xor leaveq rex.WRB rex.WRX rex.XB jle rex.WB int add mov fbld rex.WB fmull xchg mov xchg cmp vsubsd addr32 in lods and loop (bad) callq sbb (bad) out fnstcw add mov adc (bad) sbb cltd xlat pop in rex.RB mov (bad) lock mov (bad) fiadd movl push rex.WRX mov sti jg rex.WB rex.WR lock hlt jp (bad) js (bad) or addr32 rex.RB shlb in or rex.WB xchg pop (bad) movsb mov pop (bad) loopne or mov ficomp std lret pop (bad) pop mov cmp leaveq test (bad) rex.WB mov popfq jb xor cmc insl xchg shrb sbb icebp movabs (bad) incl int xchg sarl mov add movsb enterq rex.WB (bad) jo movabs sbb rorb push test (bad) push (bad) add retq (bad) mov fadd sub loope outsb xor sub push rex.WB cs sbb leaveq scas jge fs jmpq cmp (bad) or mov fisttp fild test (bad) sbb jg rex.WXB push mov jl data16 test movsl movabs and xchg nop push (bad) jge cwtl or cmpsb movabs pop mul pushfq divl pop (bad) movabs pop loop jb sub jne clc (bad) xchg or outsb and (bad) pop (bad) jp jrcxz sub (bad) je enterq cmp movabs test roll add retq callq imul fmull pop test scas ss xchg movslq (bad) jnp (bad) cs pushfq push cmp or enterq in lret xchg decl rclb (bad) adc insb or rex.WRXB out and add pop (bad) icebp sub rex.WB sbb sar (bad) sti sub movl or fdivr jno mov pop pop rex.RB enterq xchg out mov cmpsl leaveq iret add sub fldenv jbe adc jmp cmp and (bad) sub xor in incl and icebp retq out sbb movabs movabs (bad) nop (bad) jbe cltd scas adc and sub (bad) push lock rex.WB lea jg sbb fimull xchg retq fimull scas rex.WB (bad) scas mov sub outsb rex.WB movslq outsl (bad) (bad) cmp in mov rex.RX nop xchg imul jl (bad) rex.WXB pushq cmp scas in test add rex.WX test push add pop push loop mov rex.WX xor (bad) or and pop mov jle iret xchg xchg cs xlat int push jne mov cwtl adc pop movabs sub (bad) add rex.X xchg push subb rex.RX mov loopne and iret callq mov rex.WR mov (bad) mov or (bad) or pop and cli xor sahf pushq rex.RXB test callq mov rolb (bad) xor ja (bad) rex.WB cmpsb sub callq rex.WB rex.WRB lret sbb test pushq push sarb and xchg (bad) notl xchg fstps (bad) fsubrs rex.WB mov sti sbbl callq or push rex.WXB enterq pop xor cmpsl jns mov mov clc sbb or xor xor fisub ss rcll pop xor xor (bad) adc and addr32 xchg rex.X rex.RB insb in cmc lret ds lea callq mov pop jg jns jno push test (bad) out callq jo in out sub (bad) adc ss rex.XB out addr32 mov (bad) stos (bad) ficoml and and rex.WRB cmpsl test movsl or orl xchg sahf adc xchg mov sub rorl jae pop lods rex.RX lea (bad) idivb adc and or pop rex.WRXB movabs sbb xchg sbb es push or xchg mov sub mov and jns cmp and pushfq (bad) movabs pop int3 mov rex.WR imul jmpq rex.WB stc rex.WB and jnp xchg sub outsl add pop (bad) out (bad) xorb xchg sbb clc pop vxorpd addl rex.RB push xchg (bad) rex.RX rex.WXB rex.WRX rex.XB push loopne (bad) sbb rex.B fbld sbb out leaveq mov jmp sub xor rex.WB mov mov adc movslq jmpq jnp sub (bad) (bad) fwait push enterq cltd ja adc in sub cmpsl xchg clc xchg cmp rex.WRB pushfq mov and out xchg movabs test fcomps (bad) mov cmpb pushq pop jne cli shl pop jmpq (bad) ja lret rex.WRXB cmp jbe mov (bad) subl or out outsb mov pop sbb adc jl mov rcrl adc in add or rex.WB add sub mov mov rex.WRB and rorl movabs (bad) sub mov rex.WRXB sub lahf push or xor fimull xchg icebp rex.WRX xchg pop pop addr32 insb xlat sub add repz mov movslq pushq outsb adc test (bad) pop std and jrcxz lock push icebp loopne pushq cmp pop sub fild sub or xchg (bad) repz pushq jb int3 push xor mov mov and (bad) ja xor cli insl rex.WB jno pop (bad) enterq punpckhbw gs xchg mov lahf or loope cmpb (bad) sbb cmp out lock fs fs lret cmp rex.WB cmp mov (bad) clc sub jbe jnp (bad) test outsl push (bad) add xchg (bad) sub jle xor (bad) xchg adc mov add out push je rex.WRB mov xor jo f2xm1 pop push rex.RXB xchg (bad) addr32 out (bad) sbb (bad) cld ds sub retq cmp sub add (bad) or or push repz stos cmp imul sub sbb sub (bad) xor sbb sub decl mov (bad) pop imul xor fcomps mov or rex.WR rex.WRX adc add sub adc mov rex.WXB or push out cld fisubr xchg insl cmp sbb or mov mov loop (bad) (bad) rex.R mov repz pop cmp and pop test in clc lods out data16 gs test or mov rex.XB sub xor mov adc jo xor or scas push out push push rex.X rex.XB (bad) mov sahf lods jb rex.WB ja or mov xchg or callq (bad) pop pop rex.B (bad) addr32 lods rex.WB rex.WRB rex.RXB mov push cmp sub sub sbb sysexit test (bad) jmp sarl pop and (bad) push xchg fisttpll cmp outsb in movabs jno rex.WX jge xlat or adc xor jmp jnp callq cli rex.W rex.WB jae fnstenv (bad) jne jbe and adc xchg mov stos callq push sbb (bad) xor retq out lock (bad) xor mov or rex.WX mov pop rex.WB stc xor imul repnz movabs push xor pop jbe loopne mov rex.RX rex.X insl loopne es lods fisttpll je xor cmp sbb (bad) adc sub movabs leaveq mov (bad) es jle lret jne mov retq rex.WXB xor je xchg callq jge rex.WRXB (bad) mov push movabs (bad) rorb iret sub cmp xchg lret pop (bad) mov std push cmp test int lret mov xlat cltd movsb (bad) movabs enterq out test push mov jbe xchg loopne rex.X andl mov cmp repnz xchg pushq (bad) movabs movabs lret xor rex.WB ds retq mov xor loopne and sub xchg out rex rex.B rex.WB jle (bad) (bad) cli hlt repz movsb outsb (bad) rex.WB sahf adc jbe movabs ds rex.WB ja or (bad) test mov std (bad) cld add rex.WB fcoml (bad) callq lock xlat popfq and callq (bad) fnop mov lret (bad) mov push insb rex.B fs rex.R xor sbb xlat add nop ss or shlb rex.WB insl jmp (bad) mov rclb xchg fisttpll (bad) jb sub int3 rex.WB (bad) loope test pushq (bad) (bad) jne scas (bad) mov leaveq (bad) cli cmp (bad) mov cmp callq clc mov or rex.WB stos incb movsl movsb xchg or outsl or loopne rex.WB rex.X int3 (bad) lret je ss pop (bad) mov (bad) lret cs cmp pop pushfq sahf xchg mov jge jns callq out rex.WX ss rex.WB rex.WRX rex sbb imulb adc add and leaveq int out rclb pop sub sbbl movabs xor jo out add mov (bad) rex.RXB movslq out ror push or (bad) movabs sti (bad) mov or (bad) sbb jge and push sbb push (bad) rex.WB xor rex.WB js retq add jmp rex.RXB pop push mov cltd or test cli rex (bad) rex.WB cmpsb xor sub pop or pop mov xchg movsl or cmp cld (bad) (bad) mov stos xchg add (bad) (bad) (bad) rex.WRB test rex.WB nop repz (bad) add popfq (bad) lret mov mov cwtl jle push rex.RX movabs jmpq adc cmpb icebp mov popfq push pushq (bad) rex.WB (bad) lret lea cmp (bad) rclb rex.WB xchg xchg rex.R iret (bad) loope movabs push (bad) data16 cs movabs repz pop int3 sbbl loope movabs test pushq or rorl lods (bad) cmp in adc mov add callq rex.WR rex.WB divb pop jrcxz sbb (bad) or repnz rex.XB and (bad) and and sarl rex.WRXB shr and orb cld movsb loop sahf inc stos fwait rex.WB lock je push pop movsl sbb mov leaveq pop rex.WRX rex.WB jb push movabs push xor out or mull pop lret or lods mov and rex.WRX imul leaveq jns pop rex.RXB sub outsl xlat out mov or ffree fisubl push mov mov (bad) mov (bad) mov add sub jne mov xlat sub (bad) or callq or cmpsb (bad) or and mov mov push decl out int3 xor rex.WB and movabs mov (bad) pushq pushq mov jmpq sbb (bad) sub jmp enterq out mov hlt sbb sub rex.WXB sbbl rex.WB push xor lods test rcr (bad) scas pop gs pushq jl movabs sbb add push sbb movabs adc rex.WB jno xchg cltd mov mov lock sub and mov rex.B xor mov and loop imul and (bad) pop mov (bad) mov sbb xchg pushq add and rex.RX test loopne outsb mov rex.WB std rex.WXB jnp adc in mov clc jne enterq notl (bad) mov mov pushq xor (bad) cs lret (bad) or xchg mov (bad) rex.B sub divl fs test cmp in data16 addr32 test xor outsb shlb rex.WB lret xchg or icebp sbb repnz fnstenv callq out rex.WXB and mov (bad) rex.WR fisttpl (bad) pushq xor fwait test mov out mov mov rex.WX (bad) stos push or es push iret cmpsb loope retq add in gs sub nop pop adc mov in movslq test rex.WB loopne cld lea rex.WB (bad) mov pop mov es mov (bad) (bad) int lret callq mov rex.WB in mov pop movabs jg lods icebp pop cmp mov rex.RX push push lock enterq push cmp jns negb jns adc popfq lods lea stos div rex.WB sbb mov jb movabs add (bad) mov stos push push xchg lea cld mov rex.B rex.RX jnp push adc retq (bad) push xor movslq rorl add fisubl movabs push push xor sbbl add (bad) in (bad) lock jge movslq loop xchg rex.WXB out push pop (bad) jmp movslq fcoml xchg lret movsb insl (bad) xchg cmp rex.R nop scas (bad) jmpq icebp sub mov add rex gs xor push (bad) clc in int xchg rex push (bad) rex.B rex.WB (bad) sti sbb rex.WB sbb pop adc add adc mov rex.WRXB (bad) xor pushq jns (bad) sub stos push or pop scas sbb retq shrq sbb imul mov pop rex.B data16 scas sti cmp cwtl xchg jb rol ja rorl cltd or test add add gs xchg icebp (bad) rex.WB jl mov (bad) sbb xchg adc pushq enterq scas shlb decb push pop xchg mov in jb cld mov addr32 (bad) (bad) rex.B ss mov mov ds and jg jmp ss cld xchg rex movslq rex.WB je mov cmc (bad) xchg rex.WB and out cld (bad) cmpsl rex.WB mov or callq cmp rex.WRXB rex.WB rex.X js lahf (bad) rex.WB mov jl pop movl enterq rex.WRB (bad) je xchg and (bad) fwait pop adc (bad) rex.WX rex.WB jns and xchg mov rex.WB xchg pushfq sbb (bad) jl add iret push callq leaveq (bad) rex.WR rex.RX sti (bad) idiv rex.B cld mov cli movabs mov sub and jmpq rex.R ficom cli rex.WRX gs rcll or lods rex.WB fcoms jo (bad) (bad) int3 nop and callq cwtl jle jns sub push sahf push mov add rex.RXB pop (bad) jl push pop add push popfq pop rex.WRB rex.WB push add mov (bad) test jne xor hlt (bad) cmpxchg movslq and add cmp es sub rex shlb fisttp in mov callq ss test mov push sub cwtl or jno (bad) mov rex.B rex.WRB rex.WB rex.XB cmp pop lret pop retq xor xor xchg jne sub cmp mov mov cmp in loope sbbl stos cmp jp pop scas or push lret in (bad) pop mov or ja push (bad) rex.WB sub mov (bad) mov pushq sarl rex.X in js mov add push rcrl movslq xchg scas mov insl sub negl (bad) mov rex.XB iretq (bad) push cwtl icebp movabs rex.WRB addr32 add xchg loop rex.WB cmp xor xor mov xchg adc fdivs (bad) nop xlat fwait and sub rex.WB fnstcw fsubs adc sub mov pop add lret rex.X clc xchg callq pop test mov jmp jrcxz add pop imul add mov (bad) sub rex.WB in movsl adc and punpckhbw movabs fistp callq add mov jne push mov ficomp hlt or push iret leaveq loope rcrq adc mov rex.WB jb clc imul (bad) sbb rex.WX xor rex.WB lock lods mov ss xchg push pop (bad) xlat xor icebp (bad) xor popq cmp data16 outsl mov in scas mov pop jo fst lock and rex.WB sbb and sarb sbb xor sti xor cli xlat (bad) rex.WB sbb pop add (bad) fisttpll sub notl out sbb outsb push (bad) jno and sub rclb (bad) loope repnz (bad) cmp stc callq ficom insl fstpt and (bad) adc ror outsb js faddl ja fdiv leaveq (bad) rex.WX movsb mov mov fimull (bad) pop (bad) vpmovm2w pushfq fdivl fbstp lea cltd repz ds (bad) rex.W std lret jl sub ja pop jrcxz mov lret test mov xchg divb rex.WB xchg xor rex.WRX rex.X repz movabs pushq mov fisub callq mov push lea rex.XB jmpq xor in (bad) test stc and add fadds rex.WRB rex.WB rex.RB sub xlat rex.WXB rcrl rex.XB (bad) jge adc cwtl sub sub jp xor es test dec mov adc (bad) imul rex.WRX mov rcr rex.WB test rex.WB mov (bad) push rex.WRX jno mov (bad) xchg movabs gs (bad) push rex.WB mov imul sbb adcl push or rex.WB jb (bad) bswap retq mov (bad) (bad) push push (bad) imul sub pushq rex.WB in (bad) nop sbb lods movabs faddl sub lret adc mov sub fs sbb mov (bad) cwtl jmpq lahf xor callq and xor mulb stos test push xor movabs mov (bad) (bad) and jl jns xchg movslq stos mov icebp js repnz mov int3 xchg push push jle insb imul pushq outsb add out cmp xor fstl sub fdivrl rex.X rex.WRB add mov pushfq sti (bad) pushq (bad) rex fistl cmp mov pushfq pushq adc rex.WX adc sub rex.WRB mov imul cmp lret (bad) loopne jmpq xchg pushfq shr push add mov pop jo retq lods sbb stos pop data16 lods rex.RB vpaddsb (bad) fstpt test nop mov fiaddl (bad) movsl stos subb or mov pushfq movabs jne movabs movslq clc rcll cmc rex.WR add or lock xchg sbb outsb xchg subb movsb mov sub jp pushq xchg sbb (bad) cmp add enterq (bad) cwtl mov stc insb lretw (bad) xor std ja pushfq callq (bad) mov (bad) leaveq fsubl sbb add xchg rcl scas sbb cmp loopne mov (bad) (bad) pop pop movabs imull pop addr32 jnp (bad) cmpsl and in rex.WB add pop add movsl push sub mov rex.WB xor callq jp repz xor (bad) lock stos rex.WRB (bad) sub sub rex.WR in lret repnz rex.RXB test (bad) rex.WB jmpq imul movabs lea jne mov cmc (bad) mov and js retq rex.WB movabs imul cmp jrcxz mov scas or (bad) test adc lods testl cli test fimull pop jle xchg rclb loopne cmpsl or rex.RB (bad) retq shll pop lea sbb lahf rex push cmp add movabs (bad) jmp rex.WX callq xchg jmpq (bad) ss ja push pushq enterq pushfq (bad) pop sbb pop movabs push mov jp mov loop (bad) mov rex.WB xchg enterq add rex.WB in fwait xchg out int callq rorb mov mov rex.WB jbe fldenv pop (bad) and addr32 jp callq xchg adc mov lahf (bad) adc push cmpsl rex.WB retq mov pushq mov (bad) push idivl and xchg cs or adc (bad) mov callq mov mov rex.WRB movabs push pop (bad) gs sbb and (bad) pop or lods jb mov lea stos ds mov rex.WX test push jno out movsl stos xor jp (bad) mov cmp or (bad) cwtl xchg popfq rex.XB rex.WRX rex.WRB rex.WB rex.RX jl js (bad) (bad) leaveq rex.RXB imul (bad) fistl (bad) and (bad) or xchg sti xor jae std out rex rex.WB or jne jmp sub or cmp jae rex.WB clc iret repz rex.B rex.R movabs xchg stos xor sbb cmpsl shll rex.WB mov sub xchg sbb in rex.RX mov and fisttpll int jg je sub in adc jno in orl (bad) sbb (bad) test pushq cltd mov nop movabs add (bad) adc rex.RXB cs (bad) xchg out outsb pushq mov cmp jg jg cmpsb (bad) xor rex.WX (bad) pushq jae jmpq (bad) sbb fiadd pushq mov (bad) (bad) int3 rex.XB pop rex.WRB fwait cmc leaveq or sar sub lahf (bad) rex.X mov xor cmp jno sbb icebp cwtl (bad) mov mov test adc mov mov or rex.X lock callq rorl rex.XB out lea imull mov insl stos shr cltd (bad) rex.WR (bad) fadds rex.WX jno or jns pushq lret repz and sub cmp (bad) (bad) leaveq sarb cs pop pop sbb scas sbb rex.XB test leaveq sbb mov sbb cmpsb mov stos js sbb stos fstl mov faddl (bad) es lods or lret rex.RB cmpsl movsl jrcxz mov (bad) (bad) jo sbb gs pop cmpsl or cltd test cmpsb retq imul or nop and rex.X (bad) cmc push mov shlb adc int xchg push mov mov xchg pop in add popfq repz and divl out movslq xchg jmp sub lods ja lods leaveq cmp pop rex.WRXB pushq scas sub out pushq or movabs xor sbb ja push (bad) mov xchg (bad) cmp (bad) es rex.B rex.WX (bad) push movabs or jno std jp test cmpsl in mov rorb and lret and cwtl xor out fsubs (bad) mov in out and (bad) ljmp cbtw int push jno sub mov rex.XB rex.XB adcb in rex.WXB in add es mov mov jl pushfq andnps (bad) (bad) mov adc jns test insb push test rex.WX (bad) xchg stos insl rex.RXB mov in test cmpsb push (bad) mov pop rex.WB push nop fwait jno rex.WXB rex.WX or jle adc data16 rex.WB (bad) mov lods jmpq pop cmc rclb lret sub rex.WB retq jg push imul movabs callq cmp js mov int3 (bad) rex.WB repnz fwait push mov or lods (bad) (bad) jnp scas push outsl xor imul (bad) movabs fsubrs rex.WB negb adc mov sbb pop divl vphaddbw test (bad) (bad) lods (bad) test fsubs lret xchg xor insb rex.B add shlb or jp out jg iret cli rex.X rex.WB in push std add rex.WB pop pop lods movsb sub (bad) pushq mov (bad) rex.WB subb out mov lret xorl mov lods rex.B push rex.WRB sbb xchg (bad) rex.WX lock je sub (bad) mov pop mov fildll adc test push (bad) sbb lret (bad) rex.RB repz and xchg sub insl (bad) (bad) rorb xchg rex.WRX jge movabs pop movabs xchg sub cli movslq lret (bad) es lods jo retq enterq lods rex.WB (bad) push sbb in test pop mov test imul (bad) sub pop jo mov cmp (bad) in pop test (bad) or rcrl add (bad) mov mov sbb movslq adc pop rex.WRX or enterq or and and rex.WRXB (bad) mov jg mov xchg divl pop pop xchg (bad) (bad) and add stc and jge jbe sub xchg xor mov loope enterq jp ss adc ss sbb mov test adcl movabs testl int3 xchg add or (bad) xchg repz (bad) rex.RX data16 xchg movabs (bad) movabs movabs mov pop add xor ficompl cmp fsubrp fsubs rex.WRB rex.WR fmull xchg xlat and fisttp (bad) or rex.WX mov rex.XB adc xchg and je (bad) jl (bad) sbb rex.WB cltd hlt in and test faddl frstor push mov js rex.RXB (bad) cmp in in rex rex.WB imul or mov in or sbb rex.RX test and movabs jrcxz or xchg (bad) jns cwtl (bad) pop movabs cmp pop lods fwait xor lret pushq add jae shll rex.WB xrelease (bad) rex.WB or xchg mov fcmovnb or mov push and sub jmp clc data16 rex.R jae fild rex.WB xlat sub fstpl xor (bad) rex.WB rex.R sbb mul fs and rex.WRXB mov jmp rex.WB outsl cmp pushq divl cmpsl movabs leaveq adc and xor (bad) sub cs (bad) out jo (bad) lahf (bad) fsubs decl cld retq and mov push add xchg rex sbb rex.B rex.RB stc rorl cmp rex.WRB rex.RXB es sub pop pop mov out shll pop out fnstsw and mov cmp (bad) and (bad) sub lods adc rex.WRX push xor pushfq rex.WB push rex.X or andw rex.WB insb sbb rex.WB sti (bad) adc xchg ficompl outsl (bad) jle xchg (bad) add jl cmp sub rex.XB mov icebp add fadds rex.WRXB jbe cld out push sbb movabs and xor or leaveq rex.WB movabs insl fucom cltd fmulp adc pop sbb cmp sub rex.WB rex.XB rex.WB (bad) xchg rex.WB or pop rex.WB scas sbb retq int3 out pop (bad) in int push mov (bad) fwait pop iret stc (bad) rex.WB mov rex.X xchg orl (bad) push sub sub cmpsb jb mov jo cltd mov test (bad) (bad) xchg adc rex.WB addr32 movabs popfq cmp lea mov rex.WXB sub xchg mov jbe hlt (bad) push out pop sbb test addr32 jle push push push xchg icebp xchg movabs push rex.WB rex.RXB rex.WXB jl sbb mov rorl movabs jo rex.RB fwait cmp movabs data16 callq loop movabs loopne outsl and cld xor (bad) sbb clc push sub or jb xor and rex.WB fadds rcr (bad) rex.WB imul insl (bad) mov stos pop out retq sub pop std pop (bad) lret rex or lret jmpq (bad) and fs pop xor (bad) add pop fldt callq (bad) xchg push mov fcom mov ficompl negl xchg int3 (bad) enterq fcoml rex.WB rex.WX fcomps jrcxz rex.W ja (bad) mov pushq imul movabs jbe fnstenv retq jge jo rolb jg mov mov push std add mov pop out (bad) (bad) mov cmovns lret out sub (bad) out jo rex.WXB mov (bad) rex.WB vunpcklps push shrb int3 retq outsl jle rex.WB rex.WRX jne (bad) rex.WB mov movl ja or (bad) sub pop ficompl rex.WB callq jp movabs add movabs cmpsl sahf adc repz mov lods callq in push add pop (bad) xchg mov (bad) mov pop push push and ss enterq mov xchg rcrb rex.RX jmpq test pop xchg cmc mov (bad) rex.WB movabs pop loope movabs mov out lea jrcxz gs jmp rex.WRX andl rex.WRX fwait rex.WB mov or retq sub add rex.XB shrl rex.WB (bad) adc mov callq push adc xchg xchg xchg mov xchg sbb sub jmpq (bad) mov std (bad) (bad) fdivrl xchg outsl repnz cltd movslq fdiv push movabs jle rex.WR (bad) rex.WB sub xchg xlat add int3 cmc adcb rex.RXB jno pop sub mov test add mov mov pop stos (bad) rex.WB imul addr32 jo mov mov mov ja or (bad) fdivrl pop ror jmp sbb (bad) test (bad) cmp and fdivp jmpq rex.WRB lock rex.R rcrl (bad) gs cmp pop sahf pop jrcxz hlt rex.RX (bad) movslq stc rex.RXB sub iret test cmp cmpsb sub or jp cltd cmp enterq lret xor test shl pushq leaveq (bad) (bad) jnp and jl sub mov rex.WR rex.WB mov sbb imull or cmovg mov mov clc lods cmpsb fild mov rex.WRB movabs push jp scas icebp pop rorl sub callq or imul loope rex.RB test add rex.WB adc retq jno xor lods cmc mov rex.WB loop xlat mov int3 rex.WRX xor (bad) pushfq mov and sbbb adc sarb nop lret int cli insl out int (bad) sarl and push mov cld cmp data16 jmp fisttp fstpt outsl sub and insl (bad) shrb mov (bad) pop gs fs fisttpl (bad) mov outsb callq rcll rex.WB mov pop rex.WB xchg or jmpq lret push mov scas xor stc movabs iret cld (bad) repnz (bad) mov callq movabs movabs pop out movsl sub icebp sub pop pushq adc out repnz idivb orl pop scas pop sub pop jno (bad) push lahf int mov jp sbb lahf pop fs jmpq test mov sub adc and push insl push cli (bad) loope rex.RXB and addr32 es rex.WRX andl xchg jnp jp rex.RX lods sub lahf in insl sub or rex.RB fs scas (bad) jnp mov or loope (bad) test jnp (bad) rcll and lret sti enterq pop push nop rcr add rex.RB subq rex mov (bad) leaveq fistl sub js pushq mov loop jrcxz rex.WB rol loopne pop rex.WB rex.W (bad) push (bad) int xchg hlt xor pop shlb mov loopne push movsb xchg xor or mov icebp rex.RB xchg (bad) add out icebp pushq and mov or mov stos outsl mov out mov push pushq lods mov add xchg mov rex.WB (bad) mov clc xor addr32 rex.X pop pop rex.WB sti loopne cmp rex.WB clc pop sbb insb rex.XB mov pop cltq rex.WRXB add rex.WB pushfq xchg mov movabs mov mov (bad) (bad) xchg sub xchg lea fs cmpb sub (bad) dec rex.WR test pushq (bad) pop and scas rex.WB cmp rex.WB add jle out cltd cmp xchg push rorl or lahf mov (bad) xor jae mov and rex.WB jle (bad) xchg (bad) je rex.WB sbb xchg vmovdqa (bad) retq xchg (bad) in push jle mov movabs add sub adc pop push xchg in cmc xlat jg cmp or mov sahf rex.WB pop fiaddl (bad) cmp retq (bad) xor hlt or (bad) js (bad) mov lock enterq rex.WRXB cs mov sub and or pop adc xor js xor clc fwait mov callq out out cli lret mov retq rex.WX mov jae lret mov jg rex.WRXB and lea addr32 imul rorl or mov or xchg mov (bad) sahf or js adc rex.RB (bad) (bad) pop movsb jge (bad) adc (bad) (bad) rcrb ja push push sbb sbb rex.WRX shrb scas fdivrl (bad) push mov shlb sub test data16 js mov xor pop rcrb xor cmpsb fdivs leaveq mov sbb push outsl xor (bad) mov enterq callq and jne (bad) sub out insl stos (bad) or sbb test jle (bad) lea cltd and fs or xor sub mov pushfq jns divb and rex.WRX mov (bad) (bad) lods ds add movabs lea sahf xlat and leaveq clc repz fwait or add lahf mov or cmp cmp pop rex.X adc js fcom callq pop repz xor cmp in pop cli sub or jg out adc xlat rex.RXB add or jns rex.WR sub rex.WRX xor or mov cmp (bad) push pop push mov out push sub jle cmp jo rex.B lock or sub (bad) adc push cmpsb pushq rex.RXB pop (bad) mov or loop fsubl out sbb mov addr32 fnstcw rex.WRXB pop jmpq movabs rex.X test mov imul push callq pop and sbb movabs adc mov movslq out or (bad) es or fwait iret rex.WB ds (bad) pop movslq jge sbb movabs loope mov (bad) adc repz rex.X rex.WB movabs mov cmp out mov divl xchg xor test sbb (bad) rorb fsubrl insb inc xchg addr32 es and mov cmpsl pop imul rex.WX rex.WB rex.RB icebp jns jp sub xorl and xor and iret shll sbb callq rex.WX test xchg and movabs movsl sub adc movabs xchg scas sub std fs jl leaveq testq pop xchg (bad) clc fwait and stc scas xor stos mov cmc jg cmp imul out lret jl mov (bad) pop nop fs lahf lock leaveq push cmp stc in out xor ja push adcl mov cltd lahf cmp (bad) int3 sbb rex fcoms cmp (bad) decl xchg je rex.WRXB mov movabs repnz shll repnz clc sub ficoml out cmc insl lods cmp and pop pushq jrcxz (bad) push and in (bad) sbb sub jo lock popfq iret jb fs es sbb nop movb and fdivrs out mov negl cmp and xchg adc add (bad) push addr32 shlb rex.WRX mov pop lods retq pop sub and push adc sub or add mov cltd sbb stos (bad) rex.WX retq rex.WRXB xor or (bad) push rex.WX cmpsl ja rex.WR sub adc (bad) lret lods add push shrb push enterq and jns mov pop leaveq pop cmpsb sub or xchg (bad) fstps sub xor xor fidivr (bad) (bad) cwtl fidiv rex.RXB sub or jmpq rex.WB adcl sbb outsl rex.RXB rcll (bad) or xchg mov (bad) xchg (bad) mov fimull xchg xchg rex.R cs adc or xor sub sub fist pop rcll mov add push and scas rex.WRB xchg shll (bad) (bad) test rex.WB repnz jp rex.WR cmp rep imul nop rex.WB jns sub xchg (bad) add pushq icebp orl rex.WB fistp fcomps rex.WB xchg adc and fiaddl (bad) adc and ljmp sub stos rex.WB jge movslq sbb rex.WB rex.WXB rex.RXB out pushq rex.RXB (bad) out mov rex.WB (bad) fmuls (bad) callq and jmpq sub push mov test jmpq movsl pushfq pushq mov pop movabs jmp (bad) push test rex.WRXB std test cld leaveq cmp or xlat rex.WB rex.WX xor (bad) xchg mov xchg push sbb rolb leaveq iret rex.WB test xor lods jno cmp push hlt push (bad) insb loope fs push movabs xchg rex.WB cmp stos cwtl xor subb fnstenv mov lods js loop xchg repz rex.WB lock pop loope xlat add movslq sub ja jns lods in movsl xor rex.RXB add pushq cmp jmpq fmuls shll (bad) pop out rex.WB lretq (bad) (bad) insl hlt pop jne decb (bad) sbb sahf (bad) pop sbb xchg xchg cmp and jmp ja and rex.B jns callq (bad) (bad) push sub rex.WB lahf cld shrl stc mov xchg decq xor rex rex.WB xchg jae outsl pushq adc leaveq ffreep mov push mov test rex.WB popfq cltd fcmovnbe mov (bad) pop jo jb and stos enterq xor xchg rex.WRX sbb rex.WB shlb cmp xor push and mov jns (bad) pop rex.R rex.WX sub mov orl loopne ds cbtw xor (bad) mov icebp xchg cmp and rex.WB add stos push mov nop (bad) or pop rex.WRB out test xchg pop (bad) pop outsl rex.W movabs scas or push rex.WB fisttpl (bad) adc fisubr (bad) rex.WB and divl vmwrite rex.WXB nop pop sub pop mov add roll movsb (bad) flds (bad) mov add (bad) fsubrs rex.RXB (bad) out fwait pushq movslq rex.WX push xchg rex.B ss sub mov insl sbb mov out sbb mov (bad) fldl xor in mov sub xor jae pop cmp (bad) sub loope icebp (bad) cmp cmp int (bad) add movsb fistl lret (bad) out pop or out add rorb rex.WRX imul js icebp scas negb loopne push (bad) sarl (bad) fld rex.XB out sub movsb sbb (bad) cmp or (bad) rex.WRX loop jnp insb add jmpq out mov cmp jmpq xchg (bad) enterq xchg out cwtl loop push (bad) clc add scas callq push sub in pushq cmpsb push movabs (bad) fisubl pop in sbb xor (bad) sbb (bad) mov out (bad) rex.WRB sub or repnz cmp rex.WRX repz repnz pop rex.WRXB sub (bad) adc xor mov (bad) (bad) sub sub push (bad) (bad) rex.WB fsubrp std cmp shrb (bad) cmp lahf sub and mov (bad) (bad) sub sbb fldenv iret outsb rex.WB enterq scas mul enterq (bad) cltd xchg outsb (bad) xor jns cmp adc mov mov test movabs or (bad) mov or push subl in sub pop pop movabs ja pop (bad) rex.WRB mov push or pop mov rex.W adc rex.B rex.WB push movabs mov rex.WB rex.WXB int3 jb rorl push outsb (bad) leaveq push in imull mov nop rex.WR mov push pop jno test pop std jmp adc lods pop es rex.WRB cmp pop sarl rex.WB rex.R xchg test je cmp jo lods int decl rcrb cmpsl out xor jge rex.WB rex.WR sbb fnstsw xchg (bad) xor ficom jae out rex.WB cmpsb rolb data16 fisttpl xor jnp sbb lods (bad) (bad) push mov or push leaveq lret addr32 mov int fisubl stos jbe add test (bad) ficomp xorq sub rex.WB add out leaveq hlt xor add sub loope test add xlat mov mov pushq cmp rolb movslq cmp (bad) in pushq repnz iret pop push mov (bad) hlt adc sti or push (bad) push or lock or in loopne gs rex.WRXB pushq and andl xchg rex.WB mov repnz mov rex.WB jge sub pop mov push mov pop xchg callq mov mov and push mov rex.B or push jp (bad) pop sub decl in rex.RXB subl test xchg cmp movabs (bad) sub lock cld (bad) movsb scas stos pushq mov in mov pop sbb (bad) mov sarb mov mov xchg mov movabs (bad) rex.WB rex.WRB (bad) rex.B rex.WB rex.WRXB xchg fildll lea or (bad) add push mov add fsubrl rex.WB mov stos (bad) (bad) sbb rex.WB rex.RB repz (bad) (bad) xchg push rex.WB rex.R stos jns imull and and loope ja mov (bad) xchg movsl test rclb pop jle rex.RXB cltd lea (bad) rex.WR or jle sbb rex.B scas outsl sbb (bad) retq adc rex.R fisubrl jle xor or cld jg lret mov rex.WB callq sbb fadd cli test jrcxz rex.WB cs (bad) (bad) cltd and pop rorl outsb lret rex.WB in adc (bad) jl addr32 rex.WRXB subl jg push stos jmp rex.WB (bad) adc (bad) xchg lret lret iret frstor jl movsl cmp rex.WB xchg mov add addr32 hlt movl loop int sahf cmpsl movabs insl xor and pop movabs rex.XB pushfq adc xchg hlt pop movabs and leaveq rex.WB (bad) mov rex.WB mov loope jp scas rex.WB rex.WR in rex.WXB leaveq callq ficoml fiaddl rex.WB loope pop sbb sarl cmp popfq rex.WB mov movsb int sub mov rex.WRB mov and push sub in adc int pushq adc sub pop and rex.WB pushfq jno rex.WRXB adc rex.RXB rex.WB movslq and rex.WB leaveq xor (bad) (bad) pushq sub (bad) mov sub mov rex.WB (bad) lret add lods add rex test (bad) sbb sub cmp jl xor sbb jnp (bad) cwtl adc sub cltd cmp (bad) mov loope insb rex.WB lea pop cmp mov rex.RB rex.W sbb cltd pushq sub repnz outsl (bad) sbb or (bad) jle push (bad) push add callq or (bad) jmpq movsl lahf rex.WB (bad) cmp fbld sub mov xor (bad) xchg mov divb stos sub xor (bad) in add adcl mov or movslq cmp sbb sub outsb xchg mov pop in cld out mov sub enterq callq es mov addr32 xchg (bad) rex.WR jle mov xchg ja pop rex.RX or movabs (bad) outsb push imul (bad) rex.XB sahf adc pushq insl or jle pushfq rex.WR xchg mov jmp sbb cmp sub movabs adc sahf rex.RXB jmp lock (bad) cwtl movabs and std fstpt mov je (bad) adc adc (bad) mov add and add jb xchg mov mov pop jne lahf mov movsl (bad) pop jnp push (bad) rex.WB mov jge pushq rex.RX rex data16 xchg (bad) xor pop mov sub pop in cli (bad) cltd (bad) cmpsb loopne push out rex.WB mov jge add cwtl (bad) imul rex.WB stos addl rex.WB mov sub rex.WX test mov mov push iret addr32 xor sbb mov rex.WB jg movabs xchg jle outsb rex.WB or out push (bad) lock xor jg rex.RB mov ss adc sub cs mov rorb jrcxz (bad) retq mov (bad) sbb xor callq jae repnz rex.WRB cld rex.WXB xchg fildl in jns xchg test pushq push movabs and mov or xchg sbb cmp jnp pop cmp adc rex.RXB rolb fisubl (bad) xor stc fneni(8087 lods rex.WB rex.WR sub mov rex.XB lret xor fidivr adc xlat (bad) mov rex.XB rex.WX jae rex.B adc (bad) sub test movsb sub lods add (bad) mov movabs (bad) rex.WB retq adc jl sub or pop (bad) mov sub (bad) xor push js std pushq cltd rex.XB jp pop xor adc or icebp (bad) leaveq xchg test pop push jb and add fistpl sti rex.WB (bad) and jb ja (bad) add in jnp cltd (bad) push rex.RX (bad) jg sbb fcmovbe and (bad) ja (bad) out and xchg (bad) repnz pushq adc imul mov sahf loope fmul in sarb rex.WRB imul rex.WB cmp adc fnstenv fdivp popfq rex.WB jno int3 subb movabs xchg cltd mov fimull jnp mov rex.WB mov (bad) es icebp fndisi(8087 in (bad) xchg (bad) rex.WB push out (bad) mov (bad) out sbb pop jno (bad) (bad) pop (bad) and lret nop (bad) test sub mov jmp xchg rex.WB (bad) rex.WX fimull (bad) fisttpl (bad) and and fsub mov movsl and adc mov and pushq push (bad) mov or and callq sbb push movabs punpckhbw jmpq (bad) lret outsb and add lret callq (bad) jl movabs xor sub movabs fwait rex.WB outsl jle rex.RB or adc pop xor (bad) rex.WB lods idivl fild in movslq movabs rorl fs mov repz vmovdqa jmpq push sub out xor stos push (bad) rex.WB fwait (bad) xlat push sti xchg mov add and sahf rex.WXB callq mov rex.WRB scas callq xchg iret push lahf imul rex.RX fsub (bad) mov (bad) jae rex.WB in push fs mov (bad) movsb adc test (bad) jbe rex.WB mov out jmpq sub pop int (bad) xchg retq cmpsl adc cmp pop (bad) mov jb pop pushq sahf push push rex.WRXB rex.WB std mov loop stos out rex.WB sbb rex.WB test movabs mov sub push leaveq rex.WB rex.R push (bad) add (bad) sarq (bad) lock mov fldl jbe (bad) sbb pop xlat idivb or (bad) rex.WB andl rclb cmp hlt cwtl imull data16 lret mov imul (bad) mov add mov (bad) mov cli add rex.WXB adc cwtl lods mov sbb or loop or mov mov xchg scas xchg (bad) lea (bad) fwait addr32 flds (bad) rex.WRXB xor rex.WB mov cld jbe pop xor and jle iret mov cmp (bad) sbb pushfq cmp pop in (bad) mov out (bad) push scas pop data16 xchg pop fsubs adc mov (bad) (bad) mov pop sbb jmp insb mov sbb sahf jno imul or rex.B es mov imul xor jne loope (bad) jp or xchg sbb rex.XB rex.WR sti mov repnz test (bad) mov (bad) xchg pop (bad) add (bad) sbb movabs sub rex.WR rex.WXB rex push jg sub (bad) repnz sub xor stos mov shrl xchg sbb mov xchg xchg sbb and cs rcr mov sbb sub push bnd lret sbb andl cltd lea rex.WX rex.WB retq mov cmp test retq (bad) lret sar mov fadd lret mov ja out and sti loopne pushq push sub mov and rex.RX lock (bad) (bad) jne mov lret add negl mov in sti xor adc scas mov pop iret pop es jge in mov or or cmpsb push pushq out rex.WB ss (bad) sub rex.WX addr32 enterq xchg hlt (bad) mov lods rex.WB scas sub or rex.RB add rex.WB xor outsl mov retq jnp (bad) insl cmp adc loopne std stc mov imul cmp (bad) (bad) jp lret (bad) icebp (bad) rex.WXB adc cmp loopne jnp callq add mov rex.X rex.W addr32 mov push pushq and xor (bad) pop (bad) cmp notb sti scas rex.WRB and cmp jmpq pop and out popfq pop mov stos lret jb sub clc pop rex.WX test cwtl movabs cltd pop add or rex.WB fldt sarb callq add rex.WB (bad) (bad) or (bad) rol rex.WB (bad) out movabs js or sub loope jnp cld lahf pop pushq callq mov mov rex.WB rex.R lea pop cs cmp mov movabs ss retq (bad) in sahf sub (bad) and jl pop jmpq sub jo xchg and rex.WRXB movsl add jrcxz pushq gs and adc sub lahf sahf js and pushq cmpl mov (bad) pushq add or enterq xchg (bad) jp out xchg (bad) (bad) movsl rex.WX jae rex.XB stc pop mov and leaveq loope xchg callq js push imul rcr rex.WR ss rex.WB insl stos xor imul (bad) add jmpq adc push (bad) xchg add jbe addr32 fsubrp (bad) (bad) mov outsb (bad) rex.WB pop rex.WRXB pushq popfq movabs (bad) (bad) sarl jno (bad) rex.WB rex mov pop xchg mov jae and jo pop xor retq sub xchg fwait iret lahf in stc or insb idivb (bad) (bad) mov jbe lods (bad) sub sub add add lret cwtl ss xchg (bad) sub (bad) stos or and mov adc rcrb fsubrl mov sub movabs jbe jge addr32 xor (bad) (bad) loop (bad) xlat cld adc rex.WX add insb push sub (bad) repnz sti and mull cmc lock (bad) mov and icebp jmpq leaveq pop push out sub fstpt (bad) xchg mov rex.WRXB xor cmp movsl imul movslq testl rex.X sbb and (bad) sub rex adc fisubl pop adc cmc fdivs xchg (bad) pop rex rex.WRXB imul (bad) repnz xchg push xchg testl sub enterq shrl mov and callq mov lret rex.RX xor sbb add notb mov push lahf mov movabs rex.X imul movabs jl repz cs ja es rex.WB scas rex.WRB rex.WX repnz sub cmp pushq jmpq fldcw (bad) sub sahf test lahf or push sbb (bad) (bad) test cmp notl pop cwtl xchg xor mov rex.WXB popq rex.WRB xchg and pop rolq (bad) retq sub cltd rex.WB (bad) pop jne pop (bad) repnz (bad) mov leaveq (bad) callq jae (bad) (bad) cmp and rex.RXB lea pushq fmull rex.WXB movabs mov pop (bad) std mov adc cs out and pushq sub cli int rex.RXB rex.RX pop mov mov adc sub fldcw xchg mov pushq pop mov popfq push scas lods test insb not jp mov imul (bad) pop lret fstl mov rex.WB int3 movabs fs sbb stos add xchg and rex.WR rex.WB mov mov sub mov jo cld jmp (bad) xchg adc scas push cld sub jo std stos mov test loope sti pop gs jbe (bad) out pushfq and data16 fs loopne (bad) pushfq jmp (bad) mov mov mov out mov mov jl,pt rex.XB pop sti rorb mov (bad) mov out pop xchg and jmp rorb push leaveq stos (bad) cwtl sbb popfq rorb (bad) repnz imul jnp rex.WR pop frstor fdivl mov sub (bad) roll retq or repz (bad) in rorl (bad) callq adc and sbb (bad) rex.WB sahf sub push (bad) rex.WB lods data16 fs mov movabs pop jmp in movabs rex.WB push push xor out jae imul sbb xor pushq loopne lret rex.WB faddp rex.WB rex.WRXB lock (bad) sub cltd jo stc fisttpl xchg or fsubs rex.WR add xchg (bad) mov cld iret test pop and cwtl xor fxch add add or in mov sub rex.RB rex.RX in movabs rex.XB push push (bad) stos push data16 push cmp movslq cmp (bad) gs mov movabs sti (bad) fistl rex.B (bad) (bad) mov ja pop orb movb xor es pushq cmp jo or lea jne cmp pop iret imul (bad) (bad) rex.WB push cmpsb out push jg jne (bad) and (bad) sbb in sub movabs shrl rex.WB movsb (bad) (bad) cmp jne (bad) imul cli rex.WB mov cmpsb movabs (bad) rclb (bad) repz rex.XB insb pop rex.WX (bad) sub rex.RX jmpq (bad) and addr32 callq mov mov rex.WB and (bad) negb mov mov xor cmp mull mov pop (bad) in xchg xchg pop mov adc hlt ja movsl push pop adc and (bad) imul xchg rex.WRB retq retq je sub xchg fistp stc insb movabs data16 outsl cmp cmpsb test or clc addr32 xchg jmpq push fisubrl idivl or rex.XB push rex.WB mov sub pushq rex.RX (bad) test movabs enterq rex jns adc sarb fbld rex.WB ja (bad) iret sahf lret (bad) and xor test fwait xchg cltd push movabs xchg jae or (bad) movabs cmpsb mov (bad) pop (bad) xor mov int3 adc (bad) retq movabs (bad) movabs add roll rex.X movabs or movslq test and sbb (bad) sbb rex.WRB rex.WB cld (bad) rex.WB push add (bad) mov (bad) and cld (bad) gs jbe (bad) push mov and out (bad) (bad) notb jno pop mov rcrb cwtl mov pushq fild jl rex sbb xor cltd add rolb rex.WRXB (bad) rex.XB movabs (bad) (bad) (bad) js scas rex.WRB shll out icebp jrcxz jl fistpll (bad) lahf (bad) cwtl rex.WRX or fdivs rex.WB retq or sub pushq push stos mov mov lahf rex.WRB mov fimull sub es sbb callq cmpsl in (bad) pop pop sub test sub jb fs cmpsb movsb sarb mov out pop (bad) push (bad) mov mov movabs (bad) imul adc push sbb jrcxz pop lods (bad) cmp movsl rex.W push and mov and xchg (bad) iret xchg enterq sbbl pop jno imul adc out rex.WB jo or sub lods (bad) sbb movabs pop movsl jne cld pop and loop (bad) lods out movabs movsl or nop andl sbbl (bad) (bad) fnstsw (bad) jbe test nop jge fadds lahf sub rex.RB out out movslq rex.WB mov rex.WB fidivrl pop adc in jnp (bad) imull sbb rex.WB xchg (bad) adc xor or sbb xchg test mov sti rex.WB popq (bad) stos mov notw sbb and rex.WB clc add jnp loop mov pop mov hlt out stos pop movslq mov es in mov sbb rex rex.WXB pop sti rex.WB stos pop sbb mov xlat fbld pop rex.WB movabs callq rex.WB add vphsubdq clc pushq sbb stc jmpq add adc cmp fldcw adcb enterq (bad) (bad) fldenv leaveq clc mov gs (bad) adc cmp cmp sub rex.WRB lret out xor (bad) mov mov mov js (bad) pop movabs sbb leaveq repnz jbe fs roll gs rex.W fcomps xchg and int or cmp xlat mov jb pushq lret xchg xor fisubrl and push or cmc (bad) or out rex.WR xchg cmp pushq sub in cltd std pop loopne ss mov movslq cmp xchg (bad) sbb loop rex.WR rex.RXB fwait lretq or jle jne mov (bad) cltd std (bad) push sub cs xlat add (bad) (bad) rex.WRX rex.RXB negb int3 sbb xchg vdivpd movsb mov cmpl rex.WRB rex.WB iret hlt dec outsl rex.WB rex.RX test int3 push push testl pop shll xchg xlat lret out push fwait (bad) sahf or push mov (bad) (bad) rex.WB repnz mov jo and pop lahf (bad) out cltd mov (bad) rex.WB cmp adc jno imul sub push pavgb and (bad) imull movsb hlt rex.WB ja adc jno rex.WB shll pop (bad) rex.WXB rex.WB pop cld (bad) rex.RB out js jb subl imul sbb xchg es (bad) (bad) xor or push (bad) pop xlat loop pop rex.R cmpsb mov in cld and adc sub add or (bad) (bad) rex.WB shrl push psubb xor xchg outsl pushfq (bad) (bad) test jno loope xchg loopne out (bad) (bad) mov leaveq jae xor insb push xchg sub mov mov pushq (bad) or adc xchg outsb out push pop xor sub mov mov cmp push pop cltd jno sub sub sbb fs cwtl xorl rex.RB rex.RXB rex.RXB std or jne cmp push cs out lea mov test jmpq pop pop rex.RXB iret mov rex.WXB rex.RB and mov rcrb rorb fwait enterq jo add outsb (bad) mov pushq (bad) imul and (bad) int3 xchg adc rex.WXB (bad) cmp andl shl rex.RX rex.XB sbb mov sub test jg leaveq cltd xor xlat lret loopne movabs or and callq pop stos ja rcl fcomps iret jmp add cmc push sub int3 add xchg xor sarl sub push and cmp addr32 mov adc imul mov cmp rex.W stos gs movsl sbb xor xor pop pop cltd or rex.RX xchg sbb mov movabs rex xchg frstor adc cmpsl and int3 add sarb sub rex.RXB test (bad) rcrl mov mov enterq iret jne rex.WB fwait add jo callq jg pop repz rex.WB movsl rex.WRB andl sbb (bad) pop addl cld rex.W rex.WXB pop jrcxz sub clc lret mov cmp shrb cmp jl pop adc (bad) rex.WB test or (bad) pop xor xor fldenv push hlt imul or mov stos mov pop push and outsl (bad) adc mov lods nop pop not clc icebp pop pop and jl push mov callq mov and imul rex.WB test rex.WB rex.WXB mov pushq rex.WRB sub jbe fsubl or mov rex.RB (bad) rorb imul mov (bad) (bad) pop rex.WRXB lock nop push sbb js ds rex.XB rex.X rex.WB fs jb movslq mov and pop or add xor (bad) rex.WB out (bad) scas xchg xor rex.WB or mov sub rex.WB movabs push stc (bad) push rex.WXB cmp rex ds add pushq mov pop jae pop adc rex.WRX rex.WXB iret loop pop add (bad) and and push fldenv xchg xor rex.WRXB rex.RB ss xor callq (bad) jge loopne mov jle xlat sbb jno xor sbb movabs mov push nop push jp rex.WB pop jg adc jmp rex.R push or movsb rex.WB rex.WR scas and rex.WRXB sarl out jl rex.XB leaveq sbb (bad) jnp and xor rex.WXB adc imul movsl fst rex.WRB lock movabs addr32 jle xchg rex.RXB in ficom repnz xor lret xor rex.WRX (bad) (bad) jns adc callq loopne rex.WB sbb adc mov test (bad) sbb incl sub imul cmp cmp mov push pop rex.B rex.WRXB shrl rex.WB iret pop jrcxz xchg jae movabs cmp rex.WXB loop sbb pop out imul xlat rex.RX (bad) jnp rex.WB mov add callq lock repz rex.WB jmpq scas add fs (bad) and mov callq cltd cs leaveq cmp and stos callq nop rex.XB and in push xchg lret (bad) fldcw sub and in scas int movabs jmpq (bad) and mov imul xor mov (bad) jmp stc pushq mov mov test jns test movslq rex.WB lock lods jl push test cld rex.WR movsb loop push scas rex.WB out sub push movslq jae (bad) mov jns (bad) add loope pop pop xchg rex shr rex.WB adc fwait (bad) mov cltd lock mov xor (bad) ja (bad) xchg repz jl icebp xchg sub rex.WRX xor rex.WRXB movabs test push icebp mov out rex.RX xchg stos rex.WB movabs cmp test in ja jg (bad) hlt adc cwtl rex.RX rex.WB add rex.R jle enterq add out sbb in cmp cmp sbb jb cmp cmp mov push ja xchg sbb rex.X sub mov rex.WB cs js cltd or rex.RXB rex.WB sti andb and sub jle xchg sbb (bad) callq retq fcom (bad) pushq jo test rex.WRB lods mov clc pop sarl sub and data16 pop int leaveq rex.WB pop xor sub pop es or rex.WB imul rex.WB ss jp enterq insl mov sbb lods push jnp incl (bad) rex.WB mov (bad) mov mov loope cmpsb or or xchg lods push xchg sbb rex.RX or pushq fildl sbb movabs repnz rex.WX retq jmpq movabs out xor rex.WRX rex.WRB callq (bad) in mov sub imul xchg rex.B mov pushq loopne (bad) repz in test movslq jg insl and rex.WB mov int3 lahf and ljmp (bad) pushq outsl rex.WRXB fild push imul sub jae pop xor insb roll cwtl jg lahf and enterq lret sub callq fdivs pop leaveq rex.RB add (bad) test outsb pop add cwtl or rex.WX movslq jo (bad) mov mov add faddl std rex.WB callq sub jno outsl mov or rex.WB adc (bad) cmpsb adc rex.WB pop loope rex.WB (bad) add rex.WB repnz mov loop (bad) (bad) scas sbb rorb rolb test or insb add sbb loopne sbb xchg (bad) retq nop jle cmc rex.WRX push jo lea and enterq (bad) mov and jmpq stc shlb (bad) pop (bad) movabs js (bad) xor sbb sub xor (bad) or jo leaveq flds push mov addr32 fldcw stos movsl rex.RX push ffreep mov (bad) mov fs adc std rex in mov imul pushfq and push sub rex.WRB rex.WX callq xlat push mov or rcll and (bad) mov rex.WRX movabs add test adc (bad) fabs pop add push (bad) jb rex.WB (bad) pop add fldl rex.WB fidivrl loopne sbb rex.WB gs or sub sub jmp in pop or jle rex.WRXB rex.WRB retq imul (bad) iret (bad) rex.WXB andl (bad) xlat push (bad) or cld callq or push ss and movabs (bad) rex.WB ds (bad) rex.WB movslq mov rex.WB rex.RXB movabs mov mov pushfq and sti jae lret sub cli add and push jmpq mov cli adc rclb pushq test (bad) popfq mov retq std jle cld rex.RX (bad) test rex.B sbb imul sbb mov sub (bad) mov sub rex.WRX pushq adc xor xor mov mov xchg cwtl sub cli in (bad) mov jmp (bad) loopne push add or movabs cmp rex.WB (bad) (bad) (bad) add jno jnp pop (bad) and addr32 cmp add (bad) loop mov rex.XB sbb sbb retq rex.XB loope push in in mov lret cmpsb orl (bad) sub jg mov test jae pop clc adc mov fdivs cmpsb mov sub stos xchg mov push btl pop mov or jmpq test mov ficompl pop (bad) xor mov sub movsb gs cmp std adc (bad) rex.WB icebp mov (bad) cmp push rex.WR xor xchg nop loope mov sbb test (bad) loopne jl and cmp or pushq and (bad) adc push and sub jae rex.WB rorl xchg cmp and (bad) xchg js insl stc adc push pop rex.RX (bad) cmp jle sbb incb je mov and pop rex.WRXB scas sub retq mov cmp retq xchg loopne movsb mov cmp rex.X (bad) cmpsl adc sarb mov rex.WB int3 shlb (bad) push xchg (bad) (bad) loopne rex.WB shrl in xchg or and retq js pop (bad) (bad) (bad) int3 callq (bad) callq pop sub (bad) stc cmp test cmp test mov pop jno and fwait xor out adc jb cwtl pop push movabs mov imul xor (bad) adc jge rex.WB adc test mov push sub push je (bad) adc rex.WRB rex.X mov retq leaveq or cltd loopne rex.RB and js out lahf sub movabs pop sbb subl (bad) pop pop cs pushq flds lock lret (bad) lods sbb (bad) xor or mov jmpq int3 cmp scas xchg lock push lea (bad) leaveq or push push cmp and imul ds nop pop sub mov (bad) rex.RB sbb stos jae (bad) movb mov add add sub jge lea lret pop (bad) out xchg jno rex.WRB int retq lods mov or mov (bad) (bad) insl movabs or iret test or cmp (bad) enterq enterq pop mov test pop mov addb imul (bad) sar addr32 xchg iret lret mov test adc pop rex.RB cmp movabs mov or pop jp flds (bad) rex.WR addr32 cmp jnp lods jmp mov push pop mov (bad) add rex.RXB fisttp pushfq jno lods push insl add test xlat mov movsb popfq or and xor orl rex.W cmpsl add rex.WX rex.R xchg push mov hlt and (bad) rex.XB cmp adc nop sub int3 or or sbb adc cmp ja rex.WB in mov jae addr32 lea sbb sarb mov jge push rex.RB mov and (bad) jb addl cmp (bad) int ss rex.WB outsl je retq rex.XB pop (bad) rex.WRB callq loope pop xchg mov sti test and div rex.WB jbe out (bad) pop rex.B and je loope or pop icebp lahf rex.XB rex.WB (bad) frstor movsl push mov push (bad) jmpq sbb insb cmp sbb xor lods sahf stos or pop movabs imul jp mov sti imul mov pushq jle push stc movsl cmpl movslq cmpb lret fisubr stc rex.WRB addr32 xchg jne mov pop mov cli push push retq js (bad) cmp adc pop mov rex.W lret sub lock xor or jp movsb cwtl lods add (bad) xchg fcmovne fs jns,pn stc imul mov test loopne or cmp rex.RX xor (bad) sbb movslq jmpq rex.WB pop (bad) pop (bad) repz mov (bad) rex.WR (bad) lods (bad) xchg adc jge negb add cmp sbb pop (bad) test fdiv (bad) sub pushq out icebp adc cmpsb cltd (bad) (bad) cmp xor pop xchg retq add jge movslq incl retq std test lods scas rcrb cmp (bad) (bad) rex.RB mov sub cmp rex.WX movabs push push and (bad) sub xchg test rorl xor fnop push lret js out (bad) roll icebp cs or jg (bad) jae popq sub in rex.WRXB mov cmpsb movabs and add retq sub pushfq mov movabs cmpsl mov movabs fwait movsl lret scas negl jp cltd sti orl xchg loopne xchg add fnstcw shlb xor jp (bad) js fs pop (bad) cmp (bad) idivb sub stc (bad) rex.X (bad) push scas in or jns (bad) ficomp jge movabs data16 or (bad) rex.W pop iret (bad) jno (bad) xchg rex.WB je cmpsb adc (bad) fcompl mov add rex.WB mov cmp gs movabs test sahf shr xor sub xlat rex.RX and rex.WRX xchg out callq rex.WB (bad) vpshuflw rex.WB and mov rex.WRXB callq cwtl (bad) pop (bad) fisubl jmpq xchg movabs js sbb movsl test mov xchg xor fcomp movslq addb rex.WB push in sub adc xchg (bad) loopne jrcxz pop mov rex.R or jmpq (bad) rex.WX cmp cld negl pop test mov (bad) pop movabs sub fmuls iret (bad) fisttpl (bad) sbb and mov mov lret rex.XB xor callq and or and loope std rorb rex.WB mov or xor loope add (bad) movsl popfq rex.X rex.WRXB rex.B in std test (bad) fsubrp (bad) push and pop cmp push or cmpsl xor callq add rex.RX mov jno ror icebp movsl pop jge jb rex.WB rex.X rex.WX (bad) ss data16 mov retq add mov sbb mov mov scas xchg mov (bad) push stos rex.WB add mov or mov rex.WXB gs pop outsl or add movsl sub adc jp (bad) sub (bad) outsb jl (bad) cmc retq pop push push movsb rcll addb xchg xor test in cmp cmpsl jns retq mov rex.WB sti out (bad) jbe lods xchg (bad) xchg (bad) xchg mov std ss xchg test (bad) cmp test adc (bad) push in pushq pop jbe iret (bad) mov enterq (bad) rex.WB mov mov (bad) lock data16 leaveq pushq mov xchg rex.WB fs sub rex.WR rex.WB rex.RX (bad) insl xchg shrl cmp sbb pop fildll pop mov (bad) out data16 (bad) stos movsb in loop rex.WB and loope rex.XB mov xchg (bad) sub rex.WB rex.WX movabs test pop jle fdivrs fcoml adcl addb js lea adc xchg rex.WB mov rex.WB mov xchg add add decl xor (bad) or clc cwtl es out push sbb out or cld (bad) movslq (bad) fcoms fstpl and sbb ja cmp loope pop sub xor clc cmpb lret mov lea insl xchg rex.WB pop cmp adc xchg repnz cmpsb (bad) push (bad) add subl (bad) adc pop xor cmp xchg test and pushq stc rex.WB (bad) test (bad) sub fwait leaveq rex.WB faddp je (bad) jbe rex.WB pop movabs pop lods and callq (bad) xor and sub rex.WRB adc mov repz es push js movabs mov pop in mov adc (bad) push rex.RX mov mov cli rex.RX sub cmp rex.RB scas mov (bad) sub (bad) mov xbeginq xor or mov mov adc lods imul cmpl movsl (bad) retq sarl cld subl cmp pop and rex.X pop addr32 movsb pop or (bad) xchg cmp rol stos out in movsb mov retq add out jno test stos add xchg xchg leaveq jno rex.RX mov enterq xchg outsb rex.WX cltd pop scas add popfq loopne or movsb sbb movslq jp (bad) cmp (bad) or ficomp scas gs sub in or rcrb xchg adc movabs jmpq xchg icebp nop xchg (bad) add mov int idiv xlat (bad) insl pop mov rex.RXB jns sub pushfq mov rex.XB repz stos sub sub jl mov (bad) or rcrb sub jmp (bad) insl xchg in callq (bad) jns xchg push and not in (bad) movabs sub lods push xor sub (bad) cmc ja outsl insl popfq cmp push adc jmpq mov push out cmp xor jnp cmpsl or xchg pop shlb push test rex.WRB sahf out jae cltd ss adc push sub sbb (bad) outsl enterq jo scas xor (bad) jae adc ja mov movabs rex.WB add add (bad) mov mov lea pop (bad) test adc xor rex.WB or pop lock sbb mov adc stos push (bad) or mov roll (bad) out (bad) (bad) out or movabs adc rex.WRB mov (bad) push rex.WB rex.WXB add in fdivl and pop xchg rex.RXB fpatan cwtl xor shl rex.WB xor pop push scas movabs movabs cmp adc add sbb xchg pop shll adc in jnp or push jle pop jmp rex.WB stc fwait rclb xchg cmpsb rex.WXB add mov sbb rex.WB repz (bad) sbb lahf pop and adc xor rex.R cmp icebp clc out add and rex.WB imul sbb xchg in stos insb mov test (bad) fwait mov out rex.WB or test (bad) rex.WB xor jl leaveq sub cwtl jne scas pop stos mull or pushq cmp mov pop and rex.WR rex.WXB imul repz mov jp test xor (bad) js push subb outsb cmp lods xor pushfq test push ss sti pushq leaveq pop es (bad) rex.WB outsb decb mov jmpw push xchg sbb imul (bad) pop leaveq stos sbb and jo mov movabs in and xor mov xchg stos movabs icebp push in cmp es add movsl rex.RX retq orl pop jb rex.X or rex.WB push mov jbe js lret and add out out iret rex.WRB loope (bad) movsl xchg retq xchg rex.XB and lock sub fwait xor mov lea outsb pop js add clc or loope loopne mov cmp loope (bad) cmp (bad) ja rex.W rcrb sbb rex.WRB push sbb rorb movsb jmp pop in or je scas sub pop loopne loopne scas data16 adc pop mov insl xor rex.WRXB push pop in frstor (bad) mov jp mov mov and rex.WB fxch out jnp (bad) (bad) mov (bad) fcomps mov and fimul repz jp scas hlt (bad) jmp xor (bad) sbb pop imul iret cmp mov (bad) (bad) adc mov icebp jmp movabs in pop (bad) rep pop jrcxz mov xor add (bad) out (bad) rex.WB rex.B in xor rex.B divb rex.X or and ss cmp push jl lods sbb lahf (bad) or loopne or lods sub (bad) rex.XB (bad) gs rex.X rex.WRXB pushfq test retq (bad) xchg movl jbe movabs (bad) mov (bad) (bad) mov and ja mov adc pop adc mov mov xchg test cmp shrb rex.WR rex.W fldenv fsubs mov callq (bad) mov adc mov in cmp or pushq mov pop shrb fincstp rex.WB rex (bad) js (bad) popfq xchg fmuls sbb test and (bad) lock pop (bad) or add loopne pushq mov rex.WXB addr32 mov fucom rex.B sbb mov xor (bad) rex.R adc in xchg movslq xchg rex.WB popfq mov stos rex.RX xchg fnop sub mov pop (bad) adc jno jne sbb xchg (bad) mov imul rex.WB lret mov scas jo rex.WB je adc or rcrl and lahf rex.WX sbb mov loopne jo mov imul imul sbb mov sub and lods pop adc fimull (bad) fnstenv retq callq lods (bad) push (bad) adc loope js pop (bad) enterq fld rex.WB and sbb sbb push jo xchg scas rex.RXB loopne sub pop out rex.XB callq xchg push movabs xor rex.WB fmulp and adc and (bad) (bad) rclb mov or stos pop cmp ljmp rex.WB fdivrl xor rex.WB loop fsubr rex.WB and pushq movabs loope cmp mov or rex.WRXB jge rex.WRB lock scas lret stos and rex.WXB pop std rex.WX (bad) mov testb jae (bad) (bad) push (bad) sub (bad) scas xchg (bad) xor jg enterq adc jo gs sub rex.B rex.XB sbb cmp and data16 cli xchg jg hlt mov (bad) add mov sub or jno loopne pushq insl rex.WB push (bad) (bad) imul sub callq rex.B xchg fbld (bad) rex.WB nop and outsl adc movsb movabs sbb sub sub or rex.WR ss push clc and lahf xlat mov (bad) mov (bad) retq and (bad) (bad) (bad) mov lret sti rex.WB sub (bad) stc retq data16 jrcxz in mov (bad) xor gs rcrb sub movsl rex.WB and rex.XB rex.RX shrq shr rex.WB mov fnstenv clc insl scas jb mov xchg rex.RX (bad) loopne lahf (bad) fucom mov ja jbe lods rcll ss repz fildl mov leaveq add ja fwait lahf lock rex.WB push clc (bad) xchg (bad) cli rorl rex.X movabs mov fisttpl fnstenv js mov cmc mov (bad) xor (bad) and or in or and xchg movabs test fstps enterq loope lea and rex.WB fcomi iretw jge cmp and xchg popq (bad) jnp rex.WB sbb cld xor pop jns int3 add cmp pop xchg ror (bad) (bad) push lods icebp xor movsl (bad) lahf or out cld mov cli sub cmp jno mov callq (bad) rex.WR pop addr32 rclb ja (bad) rex.X adc lock fwait test es (bad) icebp gs xor and rex.WB rex.WRX adc rex.WB sbb add fs int3 scas test (bad) femms (bad) fdivrl loopne xchg jle repz lahf cmp pop or cs rex.WR rex.B rex.WX imul pushfq sub lret js sbb push mov test icebp (bad) mov rex.RB rex.RB fs test ljmp ficomp xor jae mov nop or pop (bad) push pushfq cmp jg add sbb or mov sbb mov rol rex.WB rex.R rex.X and xor xor stc sbb mov testl add jmpq and data16 mov adc jge jno loop jo stos jmpq mov pop and mov push sub out rex.WXB mull imul pop xchg shll rcll (bad) pop sub movabs sbb imul and rex.RB mov movabs mov rex.B pop push (bad) rex.WR scas stc (bad) rex.WB or jle ja rex.WB insl (bad) imul in (bad) rex.XB leaveq jnp addr32 data16 (bad) mov jbe cs and rex.WRXB adc or movabs cmp cmpsl ds xchg sub cltd js jbe (bad) cmp mov pop rex.WRXB rex.RXB pop mov (bad) or jmp rcrl mov lea rex.WX pop out cmp (bad) sub fwait pop rex.W mov mov (bad) sub sbb jp jl clc sub movsl lret movabs retq rex.WB cmp nop sbb mov add mov rex.WB fsubrs loopne jp pop jbe (bad) or xchg jmpq jo pushq nop jns sub add adc std ja callq rex.WX fwait rex.WRXB jns (bad) mov mov rorb imul jle add xchg rex.W rex.RX mov rex.WB cmp rex.WB and rex.WRXB pop decb mov adc xor and cmp rex.WB xor fnstcw sbb sahf or jae enterq fdivp pop add rex.WB xor pop test xor test rex.WRXB (bad) movabs fnstcw mov int (bad) mov add (bad) rex.WX mov mov xchg or rex.WRXB push (bad) pop xchg (bad) and fs test jns cvtdq2ps adc or ss xor imul rex.WB xchg (bad) fstpt (bad) callq xor sub push adc and int3 sub xchg push xor pushq (bad) push xchg fdivrs cwtl rex.WXB push in or mov popfq (bad) push jrcxz sub adc mov pop orl cmpsb pushq (bad) js jbe xchg mov fiaddl rex.B xchg cmp mov xor adc cld rex.WXB imul mov sbb or (bad) cmp loopne sbb fidivr addr32 xor sbb add xchg jno adc in jnp movabs scas retq cmp push (bad) cmpsb jae jrcxz imul pushq (bad) movabs callq xor rex.WB or rex.W xchg lahf push jl (bad) int adcl push fstps lea mov jnp push (bad) rex.WR movabs movsb movabs rex.WB mov or add mov pop frstor (bad) and movsb movabs adc sbb movsb movabs (bad) mul (bad) rex.RB xacquire rex.WB pop nop out movslq mov pop sbb popfq and neg sbb movabs jo enterq movslq iret pop movabs xor (bad) jl mov addr32 rex.WB mov sbb (bad) sarb (bad) rcrb mov rex.RX add imul xchg (bad) push leaveq cmp outsb imul test (bad) int push sub jge jg rex.WB sbb pushq movabs rex.RB std sbb rex.XB or rex.X push cwtl int out imul add retq or out mov test insb stos in insl (bad) rex.WB jg rex loopne rex.WB cmpl (bad) loope rex.WRB cwtl pop add callq mov js callq (bad) cmc cmp rex.RXB (bad) js mov cmpl sbb pop xchg int3 add in addr32 push out xor pop mov repnz rex.WB movabs adc out je cmp mov mov xchg pushfq (bad) fldl rex.WB scas or pop push rex.RB rex.R pop xchg mov jge (bad) jo add rex.WB repnz fs js pop test rex.WB mov cmpsl lock int3 xchg (bad) cmc fwait in out es (bad) rex.WR mov ja jae pop mov stc and mov xor cmp push xorl movabs rex.WRX xchg je mov rex.WXB cmp callq in rex.WRX rex.WRXB rex.WRXB and repnz (bad) mov jo insb push mov mov (bad) push xor xchg cli rex jno gs sbb movsb jge es rex.WRB gs push nop xorb mov jnp and mov (bad) add xchg add sub xor (bad) sub sbb rcrl test data16 jmpq fldenv mov jno or cli popfq gs adc rex.B rex.XB rex.R adc movslq xorl movslq data16 push lods sub and push loopne xchg xor paddw ss push rorb sbb jno cmp (bad) movabs sub xchg sub jne (bad) in xlat rex.WB (bad) int3 add rex stos sub (bad) addr32 repz shrd (bad) sub cmp jmpq pop and cmpsl mov xchg xchg pop push in xchg or jbe (bad) pushfq rex.WXB rex.RX ds (bad) and rex.WB rex.WX rcrb cltd imul adc out sub addl movabs callq movabs test sub and fucom jge rex rex.WB mov lock test cmp or repnz callq incl out shlb cli xchg repnz repz loopne rex.WRX pop xchg (bad) rex.WB rex.R xor std xchg jle (bad) rorb movabs leaveq push mov lret test rex.XB movabs orl jrcxz rex.WRX xchg cltd shll or push mov (bad) rex.WB pop rol mov xchg jnp cld xchg jg sti (bad) lahf mov out imul jb lods cmpsb rex.X pop and jnp mov fs pop out xor add data16 mov callq sbb jbe and mov in rex.W and js (bad) sbb test rex.WB movabs (bad) push mov cmpsl xor rex.WXB add mov rclb addr32 mov test movabs sbb add callq loopne pushq mov push pop rex.WR rex.RX ficomp push pop sbb sahf mov (bad) clc cmp loope test rclb rex.RX rex.WB (bad) cmc (bad) (bad) rex.R rex.WXB mov rcrb push (bad) iret (bad) sub subb mov rex.WB sahf (bad) (bad) (bad) lods movabs sbb and int3 outsb out rcll out fsin rex.WB rex.RX mov movsl movabs movabs cmp movabs pushfq jns in pop rex.WB shll pushq rex.WB punpckhwd je popfq or pop sub or stos pop and rex.WB gs add sbb jp movabs xor push (bad) add or and add callq stos test pop (bad) mov lea std and xchg pop sbb fiaddl xor (bad) sub (bad) rex.XB movabs (bad) adc and rex.WX rex.WRXB rex.B pushfq pop adc adc mov loope retq mov cli clc (bad) lahf jb jge movsb rex.WB rex.X fisttp sbb mov push fdivrl (bad) rex.WB add ds sti xor (bad) loopne or hlt stos rex.WX data16 adc in (bad) and jo,pt (bad) rex.WB xlat sub (bad) (bad) mov and sbb (bad) out clc (bad) mov push xchg and adc pop xchg popfq xor and mov rex.WRX ss ficom (bad) xor rex.WB test repnz (bad) or xchg cmp test xchg movabs pop jns jb (bad) mov (bad) (bad) movslq and in js scas rorl lods subb sub int adc rcrb rex.WR fsubs (bad) mov mov insl push jg cwtl adc addr32 adc ss cwtl hlt adc test sub movabs or mov rex.RXB rex.W mov testb mov rex.WRXB rex.WRX or (bad) clc cwtl movabs sbb (bad) mov in or sub adc rex.WX lods rex.WRB jmpq mov enterq jl (bad) sbb incl mov rex.RXB movabs movsb clc rex.WRX lahf movsl add pop cmp sub lock jno jns imul or (bad) in sub jae (bad) rex cs pop xor repnz rex.RB imul lret and (bad) or add xchg stos rex.RXB cmp (bad) xchg incl movabs cmp sahf rex.WX mov mov (bad) cld lea lret sub mov int3 pushq cmp leaveq xor fidivrl es jmp sar xchg rex.XB cmp pop add xchg rex.WRXB addr32 rcrb repnz (bad) pop jnp rex.B rex.RB movabs jg (bad) rex.WXB imul test std (bad) push cmpsb (bad) sbb fimul rorb imul (bad) xor fidivrl pop rex.WR adc fnsave div mov imul sbb cltd rex.R movabs callq fnstcw pop fs (bad) jmpq sub mov movabs (bad) (bad) (bad) movabs rex.B rex.RX push push mov pop sub mov (bad) out add xchg (bad) (bad) imul repnz push movabs push sub mov (bad) rclb sub (bad) jbe mov pushfq out nop rorb jge std or repz push or xchg or lods rex.WRX insb scas fldcw (bad) scas cmp mov mov test fdivrs lods and (bad) out push rex.XB repnz xor xlat in sbb and rex.WRXB xchg xor cmp mov or or repnz (bad) push xchg int andl pop mov and (bad) or cmp xchg xlat repnz insb outsb (bad) xor pushq movzwl outsb or cltd rex.RXB and pushq xor enterq in mov leaveq pop add push fildll pop rex.XB sub (bad) mov (bad) lea rex.RXB repz rex.RB rex.RXB pop pushq push xchg psrad (bad) lahf (bad) neg out adc lods repz rex.WR mov stos orl mov jmp sub adc loope cld addl push xor or rex.WR (bad) and (bad) or scas mov fiaddl hlt (bad) (bad) test sbb adc mov xchg (bad) xor mov insb fisubr icebp push jb and fisttpll xchg mov callq mov cmp add mov rex.W rex.WB rex adc sbb rex.R jo rex.WRB loope pushq cmp retq sub (bad) out mov addr32 mov push jb mov jrcxz and rex.WXB fistl mov cltd pop and mov jge sbb callq cmp cmp rex.WB sub sbb fcmovb xchg cmc out (bad) rex.WB (bad) pop sbb nop (bad) cs (bad) fildll mov mov rex.WB cmpsl rex.WXB pop stos xor movl rex.WB fsubs cmp pop addb mov mov sub (bad) movl push rcr out sub lret sbb test leaveq mov stc mov jp fnsave out rex.WR sub jne mov ss mov cmpsl cmp lods stc mov cmp icebp rex.WB mov rex rex.WB ss retq mov cmp (bad) callq rex.WR rex.R test xchg jl lock (bad) sub mov jb je push mov rex.WR movsl in sti push mov sbb int (bad) callq sub out loop flds int3 sub xchg (bad) or jmpq rex.RB rex.RB imul lcall mov cmp cmpsb callq (bad) movsb push clc push mov rex.WR in movabs jl,pn cmp pop movabs sub stos mov rex.WB mov pop loope imul add pop (bad) cli add (bad) jns or push shrb sbb rcr movsb (bad) lock (bad) fsts scas rex.WXB adc and adc (bad) rex.WRB cmp jmpq mov rex.WB mov sbb adc push movabs rex.R rex.WRB rex.RXB mov (bad) xchg sub push or pushq mov cmpsl int3 (bad) std jno movabs addl es (bad) mov or jge push add imul test fs rex.WRX lret sbbb and sbb insl es jo pop add movabs mov repnz pushq (bad) add sub retq ja movslq pushq pushfq mov jrcxz jb int mov cmp int3 (bad) retq or pushfq insl (bad) fnsave pushq (bad) xlat outsb (bad) xchg sub rex.WRXB clc pop jo (bad) pop mov cmc pushq jae or (bad) jge jno xchg cli push rex.W and iret jmp cmpsb sbb rex.WRX jg jns pop (bad) mov (bad) cmp fs mov push push stc retq jbe rex.RB jrcxz or jg sub fidivr repnz (bad) fwait push push rex.XB fs movabs (bad) rex.XB xor jae pop add cs adcl and push or hlt (bad) out stos rex (bad) sbb mov ror cmp stc fwait int3 cmp mov adc mov and pop rex.W adc fcmove mov test sbb add jge outsl sub loope sub xor movslq pop (bad) or stos je jge pop repz icebp rex.X mov sbb mov adc xor add adc mov (bad) (bad) rex.WXB repnz adc mov rex.B mov (bad) jbe rex.WX fcomip fcmovnb rex rex.W jg mov (bad) pop (bad) push jnp cmp jb callq mov rex.RXB fs jl,pt xor sub xor adc or gs adc jmp jnp sahf or mov out outsl or adc mov cmp out iret pop (bad) rex.B lock (bad) rex.RX loopne gs fidivl sub rex.X and cmp cmc (bad) lock lods sub clc sub callq mov (bad) xor sbbl gs rex.WXB out rex.RB sub in mov test pop pop scas sub movslq insb jne test or js test mov int jbe movabs lret rex.B cwtl cmp loope sbb outsb add rex.RB pop pop pop adc pushq sub fwait mov mov fcoms (bad) mov pop sbb icebp xchg int pop movsb sub adc jmpq sub outsl mov push rex.R retq adc mov sub sbb stos rex.WR rex.WX sbb (bad) sbb lret xor movabs hlt rex.RB rex.WXB retq test lods test (bad) mov (bad) sub cmp sbb (bad) mov mov adc (bad) movabs out sahf mov xor clc mov sahf jl xor (bad) mov rex.RX rex.RB rex.WX add (bad) out and sbb (bad) out (bad) fbstp movsl or in jg mov rcrb mov adc repnz jl in jmp pushfq mov mov xor (bad) mov push or mov out mov sub nop (bad) adc adc cltd repz rex.WRB rex.B fmuls movslq mov xor (bad) lods int3 clc rex.WXB rex.W rex.WB cmp cmp pop rex.WB pushq movabs sub rex.RX (bad) (bad) and jno adc xchg rex.WB (bad) pop fwait ja mov iret and pop rex.RXB in pushfq xor (bad) movabs cmp (bad) lods jmpq (bad) (bad) rex.RX (bad) orb cli rex.WRB sub outsb push imull rex.WB cs cmpsl mov not mov data16 addr32 fs lret mulb pushq gs (bad) stos xor sbb fwait cld mov mov test add rex.X cmp int3 outsb faddl std sbbl outsl jmp rex fwait in movabs rex.XB xor cmc (bad) movslq rex.WR (bad) retq mov stc sub jo adc mov es or jp add lret cmp add or orl movslq jge mov push (bad) repnz lods cs movsl mov in adc neg mov (bad) out loope pushq rolb stos rex.RX movabs cltd and insb sub movslq mov rex.WR (bad) rex.WB rex.XB sub stos mov and movslq mov test or movsb (bad) push xor jns (bad) (bad) (bad) rcrl mov pushw cltd rex.WX leaveq pop sub pop xchg (bad) cwtl fcoms jae xchg lret lret enterq lock imul jnp rcrb xor addr32 push pop rcrb lret repnz pushq clc and retq mov push cli (bad) (bad) (bad) push movabs push jp lock xchg retq jne jno retq (bad) and mov (bad) movabs mov add mov mov sahf notl and cmp mov sub lret jrcxz retq rex.WXB adc (bad) rex.WRXB jg test mov mov mov sub in pop sub fcoms imul subb and jbe std jae repnz lods (bad) xor mov rex.WRXB movsb cltd push imul sub add mov test push lahf add rex.R (bad) popfq jns out mov rex.WB jbe mov orb (bad) xchg sbb sbb movabs mov mov jno test rex.WB rex.WX rex.RX pop fwait push (bad) (bad) sub ffreep rex.WB repnz loopne xor cld jmp insb movabs (bad) xchg jmpq cli sub (bad) mov cli movsb (bad) rex.WB rex.WR rex.WB mov rex.WB rex.WR rex.WXB add rex.WB movsb outsl outsb cli mov rex.WB push and stos rex.WB ja cmpsb cmc sti fiaddl mov icebp rex.WB (bad) push in sbb movabs rex.WRB xchg or jnp pop lods int vmulpd test cmp cs rex.RXB movb leaveq lret rex.WB and sub rex.WX sub xchg mov pushq sahf jb adc stos add cld cmp cld pop xor cmp (bad) fbstp jg enterq push idivl pop rcrb hlt out addr32 add test (bad) out jno pushq jge mov (bad) mov idivl fcomip xchg movslq sbb (bad) rex.WRX pop jbe rex.WR int3 (bad) add cmp rex.R fs sub mov xchg cmp xchg faddl rex.X stos out jo xchg sti xor out (bad) out cmc cmp (bad) add sub rex.R test sahf movsb enterq sub (bad) adc cmc out in pop and adc xlat jno rex.WX mov cmc ss push mov rex.WRXB (bad) xchg sbb mov imul enterq adc rex.WRB add xchg rex.WB ds cmp mov mov loope rex.X jno and out mov xchg loopne (bad) (bad) ja (bad) mov movabs adc imul jmp (bad) rex.WRB repz (bad) (bad) mulq adc (bad) jo adc sti xor fs fstpl rex.RXB retq mov rcrb mov rolb rex.WB rex.WR xor and mov sar pop sub sbb xchg rex.WB rex.RB in (bad) pop cmp gs (bad) ficom insb rex.WB xchg xchg jae insl or rex.R adc rex.WB movabs rex.W xor xor fsubp jp push rcrl pop in add jns test leaveq je rorl pop rex.WRXB jrcxz orl loope cmp jbe movslq pop mov sub adc mov push test out lods pop mov and xor xor fnsave rex.WB mov mov pop (bad) ss or movsb sub push sub lret sbb sti push rex.RXB rex.WB rex.R adc add push push adc ss (bad) fistpl xchg sub callq rex.WB (bad) and fwait mov fstps test sub add rex.WB (bad) pop (bad) (bad) rex.WB adc xchg stos push (bad) add xchg mov jmpq test mov rcll loopne push sub in rex.WB cmpsb (bad) adc rex.WRB rex.WR mov xchg xchg pushq jmpq jmp stc mov int lahf lret lods (bad) mov pop sub and xchg (bad) (bad) (bad) loopne shrl and es loopne mov (bad) loopne sub shrb es insb sub loope push (bad) data16 sahf sub mov loope and or mov loop or rex.WRB jno xchg mov push sarb ds cld sub jp es jmpq mov sub clc out outsl mov (bad) fidiv pushq pop pop or pop adc ss nop sub movabs lods (bad) xchg cltd push (bad) (bad) movabs stos movb adc stos retq and movsb or je lock adc cwtl rex.X pop movslq (bad) xchg movabs push cmp rex.WB rex.X rex.WXB xor and (bad) sbb and pop fisttpll insl (bad) (bad) in mov xchg insb xchg pop fld shr jno jrcxz jb loopne lods and xchg testl rex.WB xor retq fdivs push (bad) pushq lret addr32 loopne fistl in jnp vmovntpd fimull test (bad) and add callq movsb repz (bad) pop movabs rex.RXB (bad) (bad) xorb gs adc (bad) mov rex.WXB test std sbb mov xchg mov (bad) jle ss in lret adc pop js (bad) rex.WRB mov mov (bad) rex.WB rol test test repnz (bad) sbb xor (bad) or pop idivl retq push rex.WX test scas insl push hlt sti (bad) mov push cmc jg push xchg cltd pop leaveq in pop mov repnz (bad) pop jg jae or vminps (bad) jns pushq mov mov pop xchg addl imul and rex.XB mov iret movabs divl jp mov scas cmp test rex.X loop scas rex.WB jae (bad) rcr rex.WB addr32 cmp rex.WR (bad) rex.WB testb jnp jg out xchg test movsb rex.WB push shrl (bad) xchg loopne andl sub fmulp mov push rex.WRX sbb movabs xchg xchg rex.WX rex.WB adc rex.WB insb imul (bad) (bad) (bad) mov sbb or (bad) rex.WX mov pop popfq repz or or mov or (bad) (bad) push loopne ss (bad) mov sub rex.X fucom cmpsb (bad) pushfq callq adc pop mov sub rex.B sbb shrb jg rex.RB xchg data16 mov out pushfq xchg xchg (bad) mov add movabs out pop mov movslq jbe rex.WXB mov sbb cmp sarb int (bad) mov xor std pop retq or rex.XB repz outsb lahf sub in leaveq (bad) xchg push mov (bad) es (bad) mov (bad) stos sbb callq ds cld (bad) xor or test sbb push jmpq leaveq out push rex.WRX gs xor movsl add pop mov cmp push sbb rex.B (bad) pop xchg rex.RX rex.WR adc test idiv mov jmpq and js jns out stos (bad) jno sub cmc jbe data16 hlt xlat sub movabs movb out mov cmpsl xor js out (bad) mov jp mov (bad) xchg sub mov rex.XB rex.WRXB jp mov callq mov xchg out test cmp fs rex.WB int3 clc jae cmp adc mov ds pushfq fmuls add xor xchg loopne sbbl and xor push pop (bad) lret pushq rex.WR rex.WB cmpsb rex.WB int sti or cmp or jns fidivrl mov rex.RX mull movsb pop cmp rcrl rex.WB rex.RX fdiv in mov clc jle rex.R repz xchg (bad) mov out (bad) hlt rex.WB push adc pop rex.XB rex.RXB and int fildll cmp rex.WB fsubrs adc sti or (bad) mov rex.XB add in cmp xor lret xlat scas rex.WB add adc iret (bad) adc (bad) andb rorl rex.WX xchg adc loope cmp rex.RXB movsl or jp mov rex.XB cli sbb lret (bad) jmp rex.WB repnz cmp or movabs (bad) imul push mov rex.WRB rex.WB push es movabs add movsl rex.WR test bswap and xchg adc pop sub add loope cmp and rex.X mov (bad) rex.WB add sub sbb addr32 ds pop sub and testl (bad) jle mov cltd sti (bad) cmc or or jl loopne mov pop test mov loope xor cmp lret or lods rex.WRB or gs out rex.WB push sbb sub (bad) in int3 (bad) xlat shrl in push rex.XB or adc (bad) fild xchg rex.WB (bad) push lret cwtl rorl (bad) (bad) (bad) (bad) xor sub hlt add rex.RB rex.WB retq stc (bad) mov xor (bad) loope scas adc jne test js adc shll sahf or movabs add mov pop or fs out callq movabs (bad) rex.WRXB int sub lods (bad) pop nop ss pop (bad) xchg mov add movslq pushq (bad) rex.WB jle retq lea jp push mov test (bad) mov fbld push in or mov mov mov jo mov rolb pslld sbb push callq enterq lret rex.WB sub xor xor rex.WB rex.WRB imul hlt mov jns (bad) stos pop rex.WX xchg fcomi rex.WB jge test movsl pop rex.WB jae clc hlt out addb sbb adc mov pushq rex.WB mov callq in clc push rex.WX (bad) (bad) (bad) test test jbe jns xor movsb movsl in jae rex jo sub (bad) and (bad) retq rex.WB jnp cmp mov roll adc mov cmp ss test jae xchg iret outsl jb rex.WRXB repnz (bad) in movsb fnstcw fistpl loope jg push movabs push pop add mov loop or mov test insb repnz (bad) rex loopne rex.B negb push in rcr movslq rex.WB mov xorl int sub rex.WRB es scas rex.WB rex.WXB outsl add scas rex.WB rex.WRB cmp in (bad) push sbb outsl rex.WB (bad) xchg cltd pushq movabs xchg mov and (bad) xor pop mov rex.WR or add rex.R lea test cmpsb xchg cld (bad) jg in cltd (bad) pop sti adc sub repz lret (bad) add sbb movsb push sub repnz rex.WRB fbld imul (bad) insb loopne (bad) out xchg mov jle enterq std sbb sub jge test cld sub int ds in pop or (bad) movslq addr32 imulb (bad) pop rex.RB outsl (bad) sub mov push push or out bnd jo jnp xor sbb enterq pop addr32 and outsl and sbb jmpq cmpsl jmpq sti stos add pop insl adc sub out sbb fidivr xchg fwait or es adc mov in movabs out icebp xor cmp movslq jge (bad) mov loopne rex.RX (bad) pop rex.XB pop pop xor cld (bad) out repnz loop xchg rex.WRXB mov fsubp (bad) mov iretw ud1 xor push push div fldcw rex.RX lock (bad) sbb mov rex.R outsl pushq (bad) (bad) ffreep (bad) add adc mov jge pop cmpsb shrl rex.WR (bad) stos sbb and mov fucomp (bad) out nop stos iret imul js mov repnz rex.WRX mov retq js and xchg jl sbb mov mov fnstsw jae sub popfq imul (bad) mov movabs add out cmpsb or adc xchg (bad) pushq sbb mov mov pop xchg rex.WR iret imul lods xchg mov mov rex.RXB ds cmp jge cmp mov cmp movsb jnp out (bad) (bad) repz cmc sub sbb pushq sub (bad) adc repnz (bad) and test rorl and xchg jne rex.RX and add orps sub movabs rex.R rex.W (bad) scas jb add cmpxchg test int3 ja pop mov clc rex.WB rex.WRB jl adc sbb sbb pop outsb in fs retq and push out or rcrb retq (bad) mov (bad) adc enterq mov or cwtl rex.WRX pushfq retq (bad) pushq (bad) testl popq xchg (bad) addr32 leaveq std (bad) rex.WB xchg mov rex.WB ss adc (bad) (bad) xor rex.WXB pop fs rex.XB ja add (bad) rex.WB xor mov rex.WB xor jbe mov (bad) loop addr32 mov (bad) push test cmpsl movslq (bad) in rex.WB (bad) (bad) jmpq retq cmpsl in xchg jne sbb gs addr32 lods rex.WB jg (bad) and sub in cli cmp ja negl (bad) cmp repnz mulb or (bad) (bad) cmpsb rex.WB mov pop (bad) mov je push int rex.WX hlt rex.WB leaveq (bad) rex.WB sub cwtl gs lahf repnz pop movabs mov adc rex.WX adc xor mov add jno jae adc mov fwait push popq rex.WRX movb (bad) (bad) pop popfq rex.WB shrl (bad) rex.WB mov pop rex.WB jo cmc out jnp push rex.WB rex.WRX rex.RX (bad) add jns pop std (bad) xor xor out mov jae or mov (bad) in pop (bad) sub rex.WXB es sub adc callq vrcpss jmp rcll pushfq pop nop xchg push add cwtl roll out es loop neg (bad) scas rex.WB (bad) xchg or jne mov or movabs scas test jne sbb and xchg leaveq fistl push and movabs fmul test subb rex.WXB out int3 scas xor or xchg pop rex.WB rorb out rex.RB rex.WB jno movslq pop pop xor and pop (bad) add xor pop mov rex.WRB jne (bad) mov pop ficompl jns (bad) push (bad) xchg (bad) xor retq add push xlat (bad) rcrl jnp xchg cmc xchg (bad) xor fdivs fcmovnu (bad) jnp (bad) cli xchg insb sarb rex.X rex.WX pop lods negl mov (bad) (bad) sub xor mov or (bad) lods scas mov and add (bad) test rcrb add rex.RX outsb out pop (bad) push add rex.WRX rex.WB (bad) je ja (bad) div es jrcxz pop addr32 mov fimul (bad) loopne out xchg callq test jo imul pop js jp rex.WB mov movabs js rclb adcl out jb scas in je jno mov (bad) sbb pushq rcrb (bad) cmc movabs lret (bad) rol test jge jnp fwait xchg iret push sub and in rex.RX movsb enterq mov and xchg cmp outsb gs mov xor add loop out push nop loope sbb jbe int xor mov pop loopne movsl clc movabs mov movabs jmpq (bad) mov cmp mov add and push add xchg adc pop or repz retq rex.B (bad) movabs movabs or adc outsb rcrl js pop xchg stos push in pop (bad) movabs mov callq pop pop xchg movabs xchg fidivrl mov loope rex.W rex.RX or movabs sbb mov (bad) (bad) movsb fucom icebp adc mov movslq xlat xor rorb push add pop rex.B fsubrs rex.WB scas ss push xor mov pop push push cmp jae cmc (bad) xchg rex.WXB idivl rex.X or (bad) ror mov rex.WR and push loopne test jg lods (bad) rclb adc xchg sub movsl jl movabs scas rcrb test cmp add outsl fwait and lahf xor int3 or (bad) rex.RB mov ss (bad) (bad) cmp jb xor and jns test rex.WB jle (bad) (bad) rex.WX rex.R callq insl rex.WB ror push incb (bad) (bad) retq scas (bad) rex.WB rex.RXB xor scas outsl or mov mov in and pushq mov test rex.B movabs xchg fwait and fldt mov fisttp rex.RX leaveq mov jb insb xlat sub fwait or divq out sub pushq rex.WRXB push out pushq rex.RX add callq cld (bad) xor sahf sub enterq or (bad) mov test jns mov in pushq sbb movslq addr32 lock mov and xor cmp orl xor out mov (bad) mov lods rex.WB fidiv xchg insl or rex.WB sub fcomip and es or je jne out rolb cmp icebp xchg cmp (bad) xlat rex.WB retq jb (bad) jp imul outsb rex.WB fs rolb lahf sbb out icebp sub or sub xchg push cli xchg rex.X rex.WB (bad) loope jo mov rex.RB rex.WB lss lea iret xor xchg push mov xor lahf (bad) callq push rex.WRXB rex.WXB out outsl roll mov rex.WR (bad) add pop retq callq lahf addr32 jp repnz mov rex.WB push mov in lea sub and add popfq mov imul jg movsb xchg sub jae jns lock stos rcrl test ja jmp rex.RXB (bad) push (bad) cwtl cmp rex.RXB mov xchg in stos adc or adc (bad) lock pop (bad) (bad) or rex.R out cmp mov xor (bad) sbb cmp sahf and (bad) test or fs mov in cmp (bad) callq sub adc (bad) (bad) in insl gs rex.WRX jno adc rex.WRX out retq jno outsb cmp cmp fsubrl rex.WXB rex.WRXB jns add cmp divb sti push je mov mov ja imul xor jg pop js idivl mov (bad) sbb cmp nop mov sub sub loope sbb (bad) (bad) or cmc jns outsb or addr32 int3 imul stos nop je sahf jmp fiaddl cmc test sub add gs fisubrl insl (bad) push rex.RXB rex.WRB rex.WR adc out sub xchg lret (bad) and adc movabs cmp or or rex.WX fdivrl xchg stos repz int pop movabs xchg js rex.WRXB rcll insl out (bad) out xchg push out fadds pop rex.RB (bad) (bad) or psubb addr32 fdivrs jae (bad) mov rex.XB (bad) mov test sarb movabs insb fisttp mov adcl sub sub loopne rex.WB insb int callq sbb leaveq (bad) xchg subq (bad) pushfq loope rex cltd jge cmp and mov movsl sti (bad) jno xor cmpsb (bad) pop rex.WB rex.WR cmp (bad) (bad) xchg rex.WRX rex.WB add rex.WB jae (bad) (bad) jge pop sub mov out xchg push push (bad) (bad) loope sbb sub insb mov subb sub (bad) rex.WB out sbb mov mov out mov (bad) xchg (bad) (bad) pop decb mov out in (bad) lahf add pushq mov movabs (bad) cmp mov jge jg and cmp mov mov movabs cwtl lret test rex.RB gs hlt mov out sbb retq rex.RX (bad) jge movabs enterq test jle (bad) and sub retq (bad) or pop stc add lea or sbb mov scas stos insb rex.RX push imul callq (bad) rex.RXB addr32 cmc xor (bad) shlb pop jg stos loopne push rex.WB rex.RX rex.WRX rcrl fidivl (bad) es fstpl addr32 (bad) rex.WXB rex.B and movabs fdivrp in nop jl es (bad) adc retq test sahf xchg pop (bad) (bad) (bad) rex.X sbb sub jno fiaddl rex.WB xchg cmc xchg (bad) pushq hlt and sub add clc push lea pop cmp out movl rex.WB sbb test add add in mov fldcw mov (bad) xor add cmp movabs cmp rex.RXB enterq sub (bad) (bad) fimul add adc movsl test rex.RXB sahf je xlat cmp (bad) test mov sbbl jne (bad) outsl xchg rex enterq in rex.RB iret cld (bad) retq push movabs (bad) mov adc xchg sbb xchg lret mov stos retq (bad) rex.W addq jmp jrcxz movabs rex.WRXB xchg loopne (bad) (bad) pop mov icebp retq sti mov or in push xchg ds rex.WB cmp jns rclb sub or cmp jo jle rex.WB (bad) (bad) (bad) pop (bad) test in (bad) pop jg mov sub push int3 fnop rex.WXB (bad) jo sub push lods pop test mov cld fisttp out movabs in sub (bad) retq add movabs rex mov clc rex.WB push sub mov mov imul jne or mov rex.WRXB sub (bad) adc or rol pop jno jmpq (bad) imul add movb cmc (bad) (bad) ds (bad) sbb pop (bad) popfw (bad) cmc ja rex.R rex.WX mov je pop fwait jle rex.WB rex out je sbb rex.WB fs in in test sub or test rex.WB rex.WX ss insl fiaddl pop fstpl (bad) lret sub pop (bad) or rex.WB mov in jno jbe movabs sbb xor mov movabs popfq hlt cmp rex.WB jbe movabs sti adc movsl jo fwait jmpq mov jns pop (bad) adcb and rex.WRXB imul add retq clc or out and pop xchg mov (bad) divb xchg int3 rex.WB xchg data16 lods imul fsubs test repz sub and cmp retq mov lret rex.WB mov cmp sub push cld pop mov pop jg sbb adc rex.WB rex.X rex.RXB rex.WB decb popfq adc jrcxz (bad) pop loope mov rex.RXB gs jmp xchg or rex.WX imul rex.WRX ja mov (bad) retq adc rcr (bad) jrcxz jbe jp enterq sbb fildl out mov rex.WB pop xchg rex.RXB out mov nop push rex.WRB pop mov xor rex.WXB adcl retq add (bad) insb (bad) fldcw (bad) (bad) out outsl rex.WXB movsl (bad) retq cmp lods (bad) sub xor pop rex.WB fs mov xchg rex.WB mov cmp jns cmp pushfq jg (bad) xchg adc mov cltd imul sub retq or rex.WB pushfq scas rex.WB xchg mov sub ja or and adc or sbb rex.XB pushq push xchg jo retq mov mov rex.RX rex.WXB xor addb mov pop shll or roll lahf mov xchg (bad) int sbb jmpq stos sbb (bad) rex.WB or (bad) sbb pushq cmp rex.XB notb callq rex.WRXB and add rex.RX sbb cmp stos mov rex.WRB rex.WB jge mov push push xor test and jl negb (bad) pop push mov rex.WB rex.XB movabs nop callq push mov insl rex.WB js sub stos (bad) repz and movabs jno pop sub rex.WR mov cmp ja sbb rex.WB stc jno push (bad) fiaddl mov mov stos movabs ss gs enterq movabs sub rex.WXB rex.WB cmp (bad) rol rex.RXB fcoms lods (bad) sub out xor rex.WB rex.X orb repnz pop ds fstpt sbb rex.XB movabs in pop cld ja (bad) rex.WB fs or sub sub mov outsl (bad) movsl icebp rex.WB sub mov addr32 (bad) and pop mov callq (bad) enterq rorb pop std xor cmpsl stos out pop (bad) (bad) int imulq (bad) pop jp rex.X rex.WRXB hlt fwait sub mov jge add xchg adc leaveq loop retq xchg mov cmp (bad) out sahf pushfq imul or adc (bad) mov cmc js movl sbb mov callq (bad) xor push (bad) rex.WB rex.RB adc rex.WB rex.WX rex.R imul int jrcxz (bad) pop (bad) pop insb (bad) rex.WB addr32 rex.R (bad) in movabs add sub movabs pop movsb (bad) sbb insl sub (bad) xor sub or jne outsb jns pop mov jno xchg fwait and leaveq rex.X fstps cmp pop pop mov and jae adc rex.WB cmpsb repnz (bad) movabs xchg push rex.WX rex.WB repnz lahf rex.RB pop lret or jb push fidivr rex.WB in jne fildll pop lea sarb sbb jrcxz adc pushfq rex.WRB hlt sti mov add repz lea stos mov sti mov jae mov xchg adc jbe leaveq in mov sub jp adc add (bad) insl pushq scas push enterq xchg gs cwtl or mov sarl callq mov push (bad) movabs cmp adc sbbl pop sbb adc rex.WB outsb push movsl rex.W gs mov mov setg subl movabs cwtl add mov pop adc (bad) or cltd (bad) pushq push rex std or jnp clc callq rorl or xchg int3 (bad) fildll push int mov mov jbe jnp (bad) clc rex.WB mov jge cmp (bad) (bad) movabs std rex.RB mov mov (bad) jne retq sub fnsave mov xchg mov push and retq sti rex.WX movabs or pushq movsb out and xor sbb mov stos xchg lret jo loope es flds scas js or rex.R or and fimul not xchg sbb stos adc rex.WB rex.WRB loopne test push pop rex.WB cmp rex.W in jbe or mov sub test pushq rorb mov rex.WB cs cmp loopne popfq or mov imul callq adc and rex.WB cs (bad) mov stc or sbb es lea jbe (bad) enterq in push loopne lret or push mov test rex.WB mov in insl imul xor (bad) iret mov cs and xor rex.XB rex.WB scas movabs outsb xchg mov sbb rcrb stc movabs sub jb sbb and xchg rex.WB (bad) testl (bad) and subl or rex.WB rex.W rex.WXB (bad) jmpq sbb cmpsb add mov xchg (bad) (bad) rex.WR jge xchg jns cmp xchg test rex.XB frstor add or enterq lods mov gs and loopne (bad) movslq icebp jge add pop rex.WB adc add rex.WX test or rex.WB rex.WXB jns pop lret leaveq cld iret sub (bad) nop hlt pop xor icebp sbb (bad) fldenv sbb insl vorpd and mov (bad) rex.WX rex.WB mulb xor addr32 movabs scas hlt sub int movabs xchg test enterq rex.B retq fcoml xor pushq pop push or and push movabs xchg repnz ficoml or in rex.X mov movabs (bad) adc rex.WB push (bad) rcll xchg shr (bad) (bad) rorb or jae rex.WB cli mov xor cmpsb div loopne pop rex.WRB xchg test test mov movabs push xchg callq lret sbb mov int3 adc movabs (bad) jnp cld stc pop lock orb pop stos push pop rex.WRB add shrl cmpsb mov (bad) insl ds rex.WB or (bad) mov and scas or xchg jns xchg and addr32 in push rex.WB or rex.R adc in mov rex.RX rex.WB add fstps test mov nop cmpsb pop rex.XB (bad) lahf pushq pop add (bad) cmp rex.WB (bad) (bad) mov (bad) (bad) rex.RX mov movabs test xor sub or cld lods mov add lods loopne stc cmpl pop xchg jmpq lahf cltd sub rex.WB out xor xchg rex.WRXB sbb fucomip jg xchg divl hlt rex.WB rex rex.WX jbe or rex.WB repnz jrcxz and (bad) xchg pop mov jo push movb (bad) and leaveq mov push xor pushq mov jns movabs jne rex.R loop xchg push stc mov jl cmc (bad) cmpsb cmp push js cmp jbe and cmp xchg leaveq push adc (bad) mov (bad) hlt int3 push sbb subl rex.X lods cmp decl movabs movabs push ss adc out add mov retq out lret movabs pop mov (bad) xchg (bad) (bad) imul and insb (bad) int3 mov mov sub and repz data16 rex.B adc or mov movabs fldcw rorl xor mov push jrcxz sub rex.WRXB repnz mov rex.RX jle rex.R (bad) loop addr32 (bad) pop leaveq (bad) jae mov sub (bad) mov jo rex.WB mov insb test pop adc jle jne push mov out std sub insl jmpq (bad) (bad) (bad) rorl pop hlt addr32 cmp (bad) (bad) pushfq rex.RB jge xchg rex.R and (bad) adc lahf ror insl (bad) pop (bad) pop cwtl flds jmp rex.WB leaveq rex.R cltd movsb xchg test or gs mov int3 insb outsb or out cmp (bad) repnz mov mov jbe mov (bad) shll pop mov (bad) test in pop xchg vcmpsd sub xchg sbb retq (bad) sbb cmp pop push repz cmc jno mov movslq movabs jbe vpscatterqd rex.X rex.RB rex.WX xchg rex.WX mov (bad) cmc and mov pop xor rex.WB add repz adc push add sbb and rex.R sbb rolb std jns sub rex.WB jrcxz push jae mov rex.WB sar mov (bad) and pop adc orb rex.W (bad) and (bad) out cmp insl addb iret gs or fimull sub (bad) test push xor ss in (bad) pop addr32 repz rex.XB jmp int xchg stos (bad) mov mov repnz movabs sub (bad) rex fucomp ja fsubl popfq lret jge rex.B jb,pn (bad) movsl jle mov add out pop movsl fstl sub (bad) mov sbb xor (bad) add sub mov hlt (bad) jrcxz rex.RXB rex.WB (bad) jo sti rorb (bad) push and shrb jle lret (bad) pop (bad) icebp rex.WB sub mov push rex.WRXB rex.RXB callq xchg adc mov in movsb cli sbb xor cmp sahf sub and loope rex.WB mov cltd rex.WB mov or lahf pop adc movslq rex.WB fs sub movabs xor fwait pop gs test xchg rex.B cmp sbb clc js imul xchg addr32 mov jns fwait (bad) psraw pop pop rex ds cli cmp cmp (bad) movabs jb (bad) scas int3 icebp mov ss cs or rex.WX leaveq sbb scas decl rex.WXB addr32 (bad) or push jmp rex.R mov mov mov test mov jno jg rex.WRB repnz or lret sub movabs js cmpsb leaveq xchg xor sbb sbb (bad) imul callq std fmuls fst rex.WB rex.W (bad) out sub cmp in rex.WB (bad) iret in int3 (bad) mov sub mull adc retq and xor xchg (bad) mov jmpq cwtl rex.WB (bad) (bad) xchg jbe rex.WB sub int3 cmp rex.WX lea xor sbb hlt sbb mov sahf pushq rex.R movslq fdiv ror sub push add mov xchg fsubp (bad) rex.WB (bad) lahf stc mov or pushq int3 rex.RXB xchg outsl rcl (bad) xchg add push (bad) adc jno leaveq rex.WRB pop rclb stos repz rex.WB lock adc lret test addr32 xchg push sub jnp jo stos xchg loop insb or and jrcxz jmp rex.WB mov callq jo iret or adc (bad) add (bad) sbb rex.W pop sbb int3 pop rol iret rex.WB es lahf (bad) xor insl jb pop in push adc rorb rex.B mov rex.WB jp ja int rex.WB rex.R (bad) (bad) (bad) and rex.WXB mov pop gs insl rex.WB sbb push lret mov mov sbb sub lahf mov js imul pop jge cli scas rex.WX test rex.RX rex.RXB mov (bad) xchg rex.WRB sub xor rex.WRXB push insl cmp rex.WB movabs (bad) add stos rex.X rex.RXB sub insb or outsb push adc rex.WB cmp mov lret rex.WR pop rex.WB pushq adc rex.WB and pop sbb gs jl rex.XB sub test pop or jmp lret mov retq fcmovb rex.WB movabs rex.WB mov retq stos fisttpll popfq or rex.WB rex.RX rex.WR rex (bad) cmp stc test shll lret (bad) lret lods movslq lock in push mov fs sub (bad) cmp pop rex.WRXB ss (bad) add sub (bad) jnp mov jbe and jge (bad) cmp add (bad) js rex.WB stos iret jae rex.WB ja add xchg lock adc sbb and insb movabs cmc or (bad) (bad) sub xchg movsl fisubl lods int3 rex.WB mov pop lret (bad) scas (bad) insl pushq pushfq add addr32 std (bad) enterq imul or (bad) (bad) (bad) rex.WB or adc and mov mov (bad) (bad) rex.WRB rex.WXB sub sub mov push fldl sub jns sarb cli subl mov xor callq sub (bad) pop mov pop sbb addr32 scas (bad) pop (bad) sub hlt push sub cwtl pop incl or sub xor pop lret mov add jle mov imul (bad) out xchg rex.WRX insb fwait ljmp (bad) push mov jle pushq cmp pop xchg mov rex.WB rex.WX test retq or rex.R jp cmp in mov jbe cwtl js xchg enterq mov sub movabs cli adcl sub pop (bad) mov fdivrs xchg sub xchg clc movsl loop and (bad) sub pop add nop add (bad) lods inc jp rcll stos cmc movabs test movb or incb and push pop cmpsb retq xor and adc and adc fldt gs out fmuls sbb sub rex.WB callw fisubl pop mov mov retq (bad) loopne rex.XB rex.RX and (bad) mov cmpsl cmp sti insb (bad) loopne jnp and sub in in or (bad) (bad) xor movsb xorw rex.WB jge pushq (bad) movabs rex.WB sub push pop jmp movsl stos (bad) enterq (bad) mov test pop xchg lods movabs and test rex.WB jne ror and rex.WB rex.RXB lcall es fsubs cmp rex.WB adc or and enterq in pop rex.RX add jb mov and (bad) callq mov rex.RB sub mov scas test cmc pushq (bad) sub jl movsb addr32 adc and xor cmpsl fmull rex.WXB stos push loopne out xor sbb (bad) rex.WRX rex.WR data16 andb rex.W (bad) jge rex.WR faddp rex.WB (bad) sbb push mov movsb movabs pop rex.WB mov (bad) in (bad) sub xchg cltd jmp or cmpl and rex.WB rex.X je scas in sbb adc rex.WRXB (bad) jmp movabs push shrb add sbb pop loope jb jmpq movabs mov pop movabs rex.RB rex.X push retq rex.WB lahf callq rex.WB sub sub subl nop pushq jrcxz cmp push or test rex.XB cmp pop (bad) js pop jg push test mov imul add (bad) jmpq (bad) in in xor fs rex.WXB test rex.RB rex.WB xor rex.XB addl pushq sbb lea callq and mov pop rex.WB sti imul jrcxz mov rex.WB xor mov cld mov ss cmp imul sbb stos pmaddwd and pushq mov sub test cmp adc rex.WRX pushq (bad) movabs frstor mov adc mov push jae sub insb rex.R rex.WRXB rex.WB ss pop test cltd lret add movslq callq jle (bad) sub (bad) outsl pop cmp mov rex.WRXB push leaveq xor data16 adc rex.WX pop out sub gs rex.RXB (bad) movslq loopne mov or es sub mov rex.W jmpq leaveq lods (bad) or mov movsl add pop jmpq cmpsb mov sbb imul rex.B rex.WRX data16 (bad) cltd push (bad) out fsubr pop outsb push lea (bad) rex.WX movabs and rex.WRB rex.RX mov mov sti (bad) fistl sub push mov stc sub adc pop xchg rex rex.RXB rex.WB mov pushq rcrl adc sbbl and jae scas pop add negl fistl movabs mov adc rex.RB rex.WB cmp and retq rcrl imul adc test cmp (bad) mov inc xchg movsl imul pop loop adc stos jge pop mov and out mov rex.WB (bad) movabs cmp (bad) jae jne xchg rex.WB int3 cs push stos repz rex.WB cmp orq callq outsl (bad) push (bad) xor rex.B adc jmpq mov out lahf in (bad) loopne movslq push sbb push cwtl movabs sbb jl rex.WB fnstcw rex.B rex.W xchg mov mov cmp cmp xchg (bad) stos jmp rex.X mov jp sub (bad) xchg lea and jmpq fistpl popfq fbstp loope clc stos xlat cmp mov retq stos rex.RXB callq jmpq mov (bad) callq and (bad) mov xchg and enterq out rex.WX jne adc outsl sub push jmp (bad) adc stos mov or (bad) or mov add cmc and xchg mov xchg jo roll mov sub addr32 out cmc cmc xor sub (bad) mov ror cmpsl enterq mov jmpq stos pop jrcxz push rex.WXB es mov and add jb add push data16 jp icebp cmpsl mov clc (bad) stc mov outsb mov push (bad) lahf xchg rex.XB push rex.RXB shll push retq sub cmp leaveq sub xchg pop out jno sbb sbb or hlt ja outsb es iret (bad) movabs loopne gs xchg rex.WB (bad) pop mov and cmp xlat rex.WB xor mov fwait (bad) xchg or sbb rex.W jnp sti mov mov sbb pop mov sbb jg pop in fsubl int3 jrcxz cmp xchg std movsl (bad) or rex.WB loope sub jp xorl sbb ficom pop addr32 adc ja add sub rex adc push xor (bad) loopne lret mov loopne rex.B rex.WRXB xchg outsb fildll rex.WB gs decl (bad) ficomp (bad) movslq sub stc or xor sub pop test jno cmp gs test xchg (bad) (bad) (bad) movabs movabs cwtl shrb cmc rex.WX mov (bad) xor jb rex.RXB rep movslq (bad) rex.RXB hlt mov jp jle in (bad) lods jns jg (bad) xchg clc test push clc callq fxtract rex.RXB test xor push jrcxz rex.R push cmp (bad) jge rex.B mov int3 rex.W (bad) (bad) (bad) (bad) jb pop cmp int3 roll clc or rex.WX xchg mov or stc popfq xor (bad) movabs decl mov add stos clc maskmovq imull rex.WB rex.R mov rex.WRXB rex.WRB mov push (bad) (bad) xchg fwait mov inc (bad) cmp test rex.WB rex.W xor sub repz std rex.WX jne add mov in rex.WB enterq sub cld (bad) add jge jns in or mov in (bad) xchg roll cmc mov (bad) jb xchg vmovdqu or (bad) rex.WB ja rex.XB test xor stos cmp iret (bad) cmc std sbb rex push rex.R adc retq outsb callq push push or stc outsl rex.WB cmp lock and movsl rex.WRX mov rex.WB scas (bad) mov pushq fldl test xchg rex.WB rex.WRB rex.XB data16 sti loope xor repz mov lret and jb test xchg cmc sub (bad) mov jmpq xchg sbb rex.WRB rex.WRXB fisttpll push push outsl mov adc addr32 adc xchg mov icebp rex.WB movsb jg xor and sbb mov rex.WB jp movabs mov popfq mov sub jnp popfq faddp (bad) jrcxz xchg in movslq in pop push lea (bad) push sti mov rex.WB and repz movsb mov es retq rex.WRB out out (bad) sub push adc (bad) mov test rex.WRXB rex.WB or cmpsb movsl fisttpll test (bad) imul add fisttpll movabs lret movsl stos es sub pushfq and rex.RX and rex.WB rorl (bad) mov mov sub fnstsw pop sub sub rex.RB rex.WX and mov cmp or jp cwtl cs cmp and and adc in retq and pushq outsb leaveq push or rex.WB mov jle rex.WB mov mov lock rex.WB rex.RXB sbb rex.WB stos add std mov rex.WB and or add ss stos rex.B rex.W jne cmp callq movabs xlat loop out pushq xchg push retq push push rex.W add xchg (bad) in (bad) test rex.X mov rex.WB xor xor pop sahf adc cmpsb push add rex.RXB retq (bad) sub lahf mov sub rex.RX rex rex.WB xchg repnz rex.WB lock sub and scas fucomi xlat imul jae (bad) pushq rex.WB rex.WRX mov lea sbbb xor jno (bad) icebp or and (bad) (bad) mov sbb outsb (bad) mov mov adc scas (bad) or (bad) (bad) mov (bad) jmpq test pushfq es rex.WRXB outsl test (bad) mov mov pop rex.WB jno test mov sub mov leaveq pushq lret scas xchg rex.WB cmp cs sub xchg jg push loop (bad) add adc adc rcrq or pop add sahf pop callq (bad) xchg (bad) addl mov rex.WB rex.W or (bad) (bad) (bad) fsubrs rex.WB out mov mov idivb repz mov mov rex.WX hlt cmp pop xor test lods enterq movsb pop (bad) mov insl sub rex.B rex.WRXB jg jno sahf rex.XB leaveq loope adc push bnd rclb pop sub cli addr32 (bad) mov retq pop push and (bad) sbb mov shlb lock pushfq xchg mov sbb movabs mov rex.WXB es rcrl or scas lahf (bad) rex.WXB addl (bad) hlt rex.WB jo idiv mov callq add mov pop in push mov pop or rex.WB data16 imulb cmp (bad) push test rex.X fcoml lock es rex.WRX pop sub mov rorl (bad) cmpsb cmp callq rex.WB pop and test hlt (bad) sub xchg pop jmp ljmp (bad) jae rex.WB xbeginq jnp xchg cmp or out rex.WB (bad) rex.RXB sbb rex.WB fisubl push sub cmp rcrb and insb sti movsl and stc rex.R imul xchg jne or imul gs jne js callq (bad) test fwait push cmp jns pop rex.WB rex.WXB cld (bad) rex.WB rex.WRXB pop jae sub pushq sbb (bad) (bad) retq imul and cmpl adc rex.WX cld (bad) pop mov and pop fisttpl jo xchg loope adc jge rex.WB rex.WRXB ja mov roll stc sar push jb pushq and xchg mov flds rex.WRXB fild (bad) lods mov xor fidivl xchg fistpl fisubr lret rex.WB add mov cmp pop movsb push shlb js sub jb jne jmpq adc jle (bad) pop pop (bad) add jg mov movabs (bad) sub xlat add pushq mov sub lods cmpsb pop rex.RX movabs clc lea shrl movabs adc (bad) xchg (bad) xor stos jbe (bad) pop enterq add xchg rex.WRB (bad) jmp add xchg callq hlt rex.WRXB outsl out adc and pushfq (bad) mov xor int3 leaveq (bad) pop rorl (bad) mov and movabs (bad) rex.RXB mov mov cli enterq or jno push rex.RXB xor mov xchg (bad) test push nop es movnti and sti hlt ljmp fimul pop add push xchg jmpq cmp ror callq mov xor movsl xchg rolb cmp pushfq loopne (bad) xor (bad) mov or jns add retq loope xor cmp xlat cmp movsb pushq mov or xchg loope rex.XB mov lahf or mov (bad) or gs or adc adc and pop imul mov pop and (bad) or stos xor jl xchg cmp mov movabs adc jae outsb fcomp and (bad) add (bad) test mov sbb xchg pop cmpsl (bad) sbb callq rex.X push (bad) fldl2e callq adc (bad) jmpq faddl fnstcw rex.WRB or mov cmp rex.WB pop orl ss (bad) cmc fcoml addr32 rex.WRX retq (bad) cmp rex.RX rex.WB (bad) cld push jge pushq (bad) repz jns (bad) rex.WB cmp mov (bad) (bad) fidivrl out mov sub int3 sbb pop xchg int3 xchg sub test sub rex.WRX sub cmpsb rex.RXB sub and rex.WB and adc mov test fcompp out pop mov in (bad) cmp rex.W mov mov es testl rex.WB repz rex.WB (bad) (bad) jle jns rex sub mov repz (bad) (bad) leaveq pop mov rex.RB cli cmp enterq jno push outsb rex.WRX es sbb jbe lods (bad) (bad) jle pop push mov loop xor and test or xor sub mov rex.XB mov sbb orb and rcrl fdivl data16 sub and sbb sub sub rex.RX imul mov loopne scas sub imul iret (bad) test pop sbb es or pop sahf shll rex.XB add xchg movabs lret mov cmovo lods cmpsb (bad) test xchg insb je outsb (bad) repz rex.RXB movabs jle jae xor (bad) enterq and data16 popfq cmp sub sbb cmc sbb rex.W test scas mov cld mov rex.WX rex.WB (bad) or add popq rex.WRXB adc data16 mov (bad) movabs sbbl rex.WB fwait int3 movabs lods mov lahf cltd sub (bad) (bad) repnz xchg mulb repz xlat fimull pop outsb ror (bad) scas rorl int3 cwtl (bad) xchg cmp rex.RX jmpq or (bad) jns movsl loop cli and push mov jo add mov fildll cli (bad) sub lods retq sbb rex.WB xchg test pop push mov movabs (bad) push cs rex.WB (bad) gs mov rex.X sti jns adc out rex.WRX push pop xchg push jbe add (bad) push jne ds cmovbe movabs sub pop repnz int enterq push incl fstps push add rex.RB fidivr cli adc pop outsb fistl and xchg jae out stos rol push sub pushq callq outsb jb fwait mov lret (bad) rex.WB jno stc xchg sub stos mov lret xchg (bad) rex.WX rex.R cmp addr32 (bad) (bad) mov pop push movslq rorb push adc fwait out sti addl andb rex.RXB test cmp idivq mov fs (bad) jmpq xchg pushfq push jno sbb (bad) mov and movslq rex.WXB int in cmpsb loope test movsl fiadd push sti xchg cmp (bad) repnz std pushq in push shrb add rex.WB (bad) and jno (bad) addl jmp xchg fimull in rex.WB (bad) enterq and and lret sub incl add (bad) rex.WB es pop imul rex.RX adc xor xchg pop cmp outsl mov jne pushq hlt rcrl pop adc or xchg mov fpatan rex.WB es lahf test shrl rcr movabs retq push gs divb rex.WB rex.WRXB mov cli add mov and mov adc push xor (bad) sahf fild jno sub loopne mov mov jns roll push push movabs mov cmp sbb pop and cld adc loope or fisttpl rex.WRX rex imul std xchg rex.WR cmp push test js or rex.WB stos sub cld xor cltd scas sub or and rex.WX rex.WB rex.WX loop stos rol jb (bad) clc fisub scas (bad) push adc pop or rex.WB cmp sub rex.WR (bad) int rex.WB adc xorq or rex.WB adc pop pop mov sub xchg sub xchg fnsave and addr32 stc rex.RX mov stos jno (bad) (bad) (bad) push in fsubrp rex.WB rex.WR popfq jp jns rorb rex.WRXB (bad) (bad) cmp (bad) jl rex.R and (bad) imul pop (bad) xchg (bad) (bad) imul mov jne js sti mov and sub (bad) rex.WB es test push cltd xchg pop sbb (bad) (bad) cwtl in gs (bad) (bad) pop pop and sub js pop jns (bad) ss pushq lahf fxam add rex.WB and xchg push cwtl movabs cmp rex.WB xor rex.WB mov (bad) in je pop xor xchg pop mov addr32 loop pushfq jmpq fstps jno sub sbb icebp roll int3 push (bad) cmp rex.WB (bad) add or rex.WB mov mov in mov hlt lret cmpsb mov sbb sbb imul shrl rex.WB xor rex.WB es imul jnp incl out sub leaveq xor and repnz fwait xor pop xchg stos loop out lcall cmpsb push mov sub roll pop rex.WB push xlat or xchg and callq sub test cmpsb (bad) outsb mov jb sub or jle int3 (bad) (bad) push lahf ror (bad) rex.RX (bad) mov rex.B mov xchg cmp xor cmp (bad) pop jno cli sub adc mov fmul mov cmp rex.WB xchg (bad) xor xchg rex.XB lods adc pop fnsave or sbb fidivrl pop ja rex.WR and xchg (bad) rex.RX test xchg cmp pushq rex.R sbb mov (bad) (bad) mov outsl loope or hlt (bad) scas rex xchg pushq test cmpsl xchg in mov insb pop cmp rex.WB rex shrl mov (bad) cmp (bad) rex.WB fwait sbb (bad) movabs rex sub rex.WB sub enterq imul (bad) hlt pop (bad) add adc mov rex.WB pushq (bad) jrcxz jg rex.WB rex.WXB rcl sbb mov xchg rol cmp mov cli rex.WB push icebp and xor cmp enterq xchg push push jrcxz test sbb rex.WB pushq push retq rex.WB xor add sbb and shl loopne out int jmpq add jg rolb mov jbe callq icebp mov shlb pop mov mov test (bad) xor (bad) lods mov (bad) movabs rex.WRX mov rex.WRXB cltd jmp jg stos cli callq or or sbb lea rex.WRB insb mov rcrb lret (bad) outsb xchg sbb jmp callq xlat rorl ja pop cmc mov ficoml lret rex.WXB add pop sub (bad) movabs rex.WRB mov xor fisubr jns (bad) cmp adc mov rex.RXB and enterq leaveq movslq sbb xchg xchg fisttpl (bad) insb pop xchg pop jae (bad) fisubrl cmp rex.WX rex.RXB lods movl fnop pop int mov fs int cmp mov stos mov push rex.WB out mov pop (bad) mov pop addr32 rex.WB jne (bad) mov cmp inc cli fiaddl int push cmp rex.WB movabs sub shlb jge rex.WB (bad) (bad) rorl movb (bad) mov (bad) shlb rex.WB jmpq lret sub (bad) stc loope mov orb rex.WB rclb mov add sbb out pushfq cltd rex.XB loop,pt and pop loope popfq (bad) data16 cmpsb push mov callq hlt xor xchg movabs retq jbe cmc cmp jno (bad) idivl fsubrs mov and rex.XB cmp repz jle xchg cmp andl gs add sbb (bad) rex.WB jb sub (bad) jnp (bad) (bad) xchg (bad) mov mov stos sbb fdivp rex.WB or mov jo loope (bad) xchg movabs sub mov loopne (bad) mov test mov movabs or lods ja subl sub adc sbb sub enterq int cmp fmul mov imul (bad) rex jl bndldx rex fldcw add add mov movabs fadds test bnd rex.WRX xor xchg jne xchg movsl cmovb (bad) icebp rorb add pushq push xor lret fbstp cmp xchg movsb mov movabs std leaveq (bad) imulb lret sti jge (bad) sub and lock pop add rex.WX rex.R rex.WRXB (bad) sbb rex.WB xor mov push adc addr32 cmpsb xchg mov rex.WRXB repz leaveq lods es enterq outsl xchg movabs xor pop (bad) iret xor addb movabs jae mov push rex.WB or rex.WB imul xchg icebp mov rex.WB lock stos or ss negl in mov fcompl (bad) in or mov pop rex.WX rex.B (bad) hlt mov movabs jae leaveq jg (bad) xchg cmpsl (bad) xchg pop fcompl sbb xchg pushq jle rex.WRX mov jb xorl iretw jg rex.WB lahf add (bad) mov in mov xchg repz imul rex.WB sar movabs (bad) (bad) repz (bad) out or jmpq adc gs je in rex.WRXB data16 iret and mov rex.W sub sti xchg rex.WB xlat sub orl (bad) sbb fdivrp mov cmp rex.R (bad) rex.WXB xchg je retq push rcl cwtl ja or (bad) lock (bad) sub or pop mov jg movabs push pop in in mov pop rex.WRXB (bad) lock adc movabs xor test sub adc mov ja shr push test mov pop jg xor xorl sbbl in (bad) jg rcl enterq sti mov jo mov jmp (bad) fistpl (bad) rex.WR mov and rex.WB rex.RXB (bad) neg (bad) fidivrl sub iret out adc addr32 rex.RX mov leaveq mov (bad) rex.WRX jns int3 fist (bad) rex.WRB rex.WXB in je mov rex.X xchg mov movsb push stos mov hlt jmp xor rex.WRXB add jle and xchg xchg mov lods push sub add pop add rex.WXB rex.R out push cld mov (bad) (bad) sbb (bad) xchg fldt stos push jb cmp or pop loope adc cs xchg rorb in mov rex.B pop xor movabs sbb rex.WXB add cwtl add (bad) pop movsb repz mov jge add pop (bad) sbb rex.XB cwtl xchg (bad) rex.WXB movslq nop adc pop in out push mov adc jp pop (bad) (bad) rex.WRXB or or mull rex.WX rex.R test out movabs sahf sub fdivrl cmp rex.B (bad) pop or mov pop outsl rex.RXB rex.WXB rex.WR push rex.WB and (bad) (bad) mov gs jge and std imulb xor or rex.XB sbb rex.WB pop je (bad) mov (bad) fucom cmpsl rex.WB xchg rep rex.X popfq adc movabs icebp rex.WB js jl mov scas or rex.WB or rex.RXB rex.R lods pop jg pop pop jne stos imul sub (bad) lret clc rex.B enterq (bad) (bad) mov pop fwait sbb sbb push clc mov xchg rex.RX sub andl (bad) cmp movsb push add adc xchg in sub pop movabs and and (bad) leaveq pushfq (bad) (bad) (bad) orl repz rex.B stos xlat fidivr sbb mov rol lret movabs sahf sbb fbstp or xchg callq jmpq hlt or test sub and sbb hlt fbld sbb or fisub lret jrcxz callq hlt rex.X sbb mov (bad) cld pop and (bad) jae add jmp and adc xor pop sub leaveq fidivr cli mov (bad) cmp rex.WR nop mov incl roll or mov adc cmp xchg push cmp fimul xchg int rex jrcxz mov jo cmp jmpq rex pushq rex.WRXB rex.WRB testl cmp sub add mov pushq rex.R repnz jo sbb (bad) sub mov fadds (bad) (bad) rex.WRXB cmc rex.RXB jge adc pop movabs faddl pop nop js jb (bad) ds mov mov mov cmp mov jae rclb insl sub lahf mov cmp and jrcxz jnp mov mov and lock rex.WX fs (bad) and add or sub retq mov test (bad) fadds movabs (bad) adc xor sbb pushfq sub push sub shrl cmp rex (bad) lret xor retq rex.WRX movl callq pushq sbb sbb or mov ss rex.X rex.RB or rex.RX rex.RB rex.XB xchg rex.B rex.WRXB adc (bad) or pop shll mov rcrl or stos pushq std (bad) (bad) mov xor stos xchg or jle mov (bad) (bad) popfq push movabs jge lods mov rex.RX adc retq (bad) rep rex.X js iret sub rex.RXB (bad) (bad) lock lods movabs rex.R lock insb pop sub cmp sub or (bad) xchg or sub or rorb out jmp add movabs decb rex.RB cmp rex.W (bad) xchg and jno fdivr sub jg rex.WRB test fcomps fnstsw out and adc jo repnz movslq adc out lahf pushfq push cmpsb test cmc (bad) mov addr32 callq mov test rex.WB enterq pop cmp in lret (bad) push cmp (bad) (bad) fwait pop repz gs lahf insb xchg adc add pop fsubl mov sub (bad) enterq scas rex.WRX push mov jle or push (bad) rcrl or (bad) hlt lret or lock adc cmp add js (bad) fs lret fild cld rex.X xor (bad) jo add mov jge iret mov lahf xchg push test (bad) out mov push or sub repz imul xchg sub rex.B push add mov pushfq (bad) lea rex.XB rex.RB mov (bad) cld xchg repz js mov fistpl jbe data16 jae jrcxz jno pushq pop rex.WRB push jns retq callq pop out rex.WX pop fs add (bad) mov popq sub test ds (bad) enterq or pop rex.B rex.R xor mov push mov xchg mov pop cmp and (bad) insb cmp rex.WX loope xchg rex.WR data16 (bad) repz or (bad) (bad) movsb mov fs rex.WX mov mov push mov or mov test jmpq mov lahf sub movslq push (bad) mov jmp jmpq rex.X rolb xor je sub lret insl (bad) mov (bad) loopne adc pop movabs in jo fld and or sbb cwtl sub xor xor xchg sub xor movslq jbe (bad) sub add div cmp stc nop (bad) jg imulb push movslq sbb (bad) test cltd sub xchg xor (bad) sub pushfq mov in pop fdivr nop mov (bad) (bad) (bad) (bad) in outsl int3 lahf or pop sbb add sti jmpq out push jbe xor loopne cmp or sub hlt leaveq lods mov (bad) imul (bad) (bad) je cmpsl or add and jg in fnstsw mov or jmp rex.WRX (bad) out in rex.XB cmp pop outsb adc loopne sub rex.WRXB rex.RB addr32 (bad) jp mov cld rex.B jo jg jno pop hlt mov callq loope lret retq or rex.WX (bad) (bad) sub xchg or test adc push sub repz rex.WXB (bad) rex.WB pop push cmp sub jg rex.WR cmp sahf mov test lret gs mov (bad) pop add cmp pop adc pop add rex.WB xchg push mov push sbb gs (bad) cmpsl mov movsl mov xchg test mov mov add and jnp adc mov movabs fadd fldt sub sub insb mov cmp jmp loope vmovaps rex.WB je outsl xor (bad) or mov adc jrcxz cmpsl mov rex.WB jne mov lock rex.WB nop push jo js rex.WX (bad) (bad) mov or insb jg (bad) cmp out movabs cmp xchg mov lahf xor fadd rex.WRX (bad) xchg out or test rex.XB rex.R jne add fstps imul test mov (bad) or pushq lock push rex.RX pop jge pop (bad) in (bad) out pop add jp retq rex.X mov and jns pop (bad) shrb cli (bad) rex.WB sub scas shrb mov or pop mov and jbe lock xor rolb jg testl mov mov jmpq rex.R stos (bad) sub mov mov out (bad) or mov push xor mov pushfq xor push out pop mov fcomps and and es rex.X stos jne add std addl rex.WRX pop (bad) addr32 (bad) test movl mov adc movabs sub jb sbb test push cmp (bad) xchg imul je out mov loopne test adc movsb mov (bad) jg pop test callq or and jmpq rex.WR es rex.WX rex.WXB mov mov retq and movabs (bad) jp or (bad) rex.B outsl sahf adc rex.B mov movabs mov lods mov rex.B gs insb gs gs adc lahf mov add push rex.RB rex.RB addr32 outsb cld xchg xor jge xchg jg pushq (bad) sbb notl sub test lea lock rex.WRX addr32 pop mov xchg rex.R fadds pop (bad) mov idiv jge push int rex.WR cmp imul mov and cmp imul (bad) andl (bad) mov or rex.WR xchg xor idiv imul add sub enterq or and fstpt mov xor (bad) addb (bad) sbb sub xlat add mov jns clc (bad) adc pop xchg (bad) jo subl mul (bad) fnstsw fisttp push pushq imul cmp rex.WRXB callq cmc in int3 sbb int and mov std xor cmp add hlt stos cli int cmp rex.WB and lret rex.WB int3 sub or movslq add outsb rex.WRX (bad) mov jmpq xlat (bad) addr32 (bad) rex.WB push mov callq push mov stc mov pop jnp sbb (bad) xchg cmpsb cwtl mov xor adc rex.WXB (bad) (bad) faddl (bad) mov pushfq data16 push cmp pop movsl (bad) push (bad) enterq xlat cmp or stos xchg and mov adc xor rex lea (bad) (bad) or ja je fsubs (bad) rex.WRXB jno (bad) js xchg push out (bad) je pop movabs loopnel in and (bad) (bad) jnp pop pop rex.WB sub sbb (bad) in andl fwait push mov int push xchg rex.R push mov callq fstpt movabs adc xchg movsl rex.RX or movabs fldenv (bad) out rorl (bad) pop (bad) mov fadds and mov retq rex.RX rex.WRX mov pop mov rex.WB rex.R and movsl mov test mov movabs pushq pop and push mov (bad) mull movabs xchg pop sarb pop incb xor (bad) adc cmp mov (bad) stos and retq rex.WXB add pop sbb add mov movabs in mov movabs cmp (bad) xchg lods sub std fsubrs stc nop add movabs insb rex.WB cmp stos rex.XB fwait movabs xor data16 cmp nop rex.WB scas idiv push (bad) movslq (bad) icebp xchg stos movabs ds pop rolb xchg mov addr32 ss rex.B and push (bad) rex.WB (bad) mov mov (bad) xchg addr32 sub imul rex.WB test pop xchg xlat jnp stc mov rex.WRB xchg pop movabs mov xor cs pushq sub repz adc sub mov hlt lret rex.WR cmp in (bad) shll rex.WRXB xor rex.RB and sti xchg sub (bad) xlat ja pop fwait pop and rex.WRB rcll mov loope rex.R rex.R sub sbb (bad) iret jmpq mov mov rex.WR adc in rex.WB fldl cmp pop add (bad) scas rex.W sub sub sbb rex.WXB lret (bad) jbe pushq cmp js and sbb xchg retq movabs stos test xchg xchg js push rex.WX enterq je std push loope fscale sub (bad) push xchg jg cmp and repz mov (bad) mov push sbb add lods (bad) out adc xor lea out sub gs enterq imul pop cmpsb (bad) (bad) or sub sub popfq pushq int rorl pop jrcxz push add rex.WB push andb rex.WB mov test jnp (bad) enterq movabs or push jns pop scas pop xor pushq pop mull (bad) pushfq movabs jp int3 (bad) rex.WB xor jnp xor sub (bad) xor scas cwtl sahf out add rex.WX sub and mov insl rex.WB mov sbb jg sarl loope gs rex.WRB push (bad) fimull cmp xor insb push rex.WB jnp sub push movabs (bad) push pushfq ds loope (bad) data16 lret sbb add outsl push loopne outsb xor (bad) pop push rex.WB adc sbb xchg xchg and shll gs pop sub in or rex.B and push cld xchg movabs mov (bad) in and sub hlt movabs movsb stos rex.RX in mov addr32 cmc test add rol (bad) or fnstsw rex.XB rex.WB rex.W push cld (bad) fiadd (bad) lock sbb mov movsl sbb iret push scas (bad) (bad) sub xchg and shrb jp,pt pop (bad) and fsubr push test rex.RXB rex.W rex.R gs ss pop movsl movsb pop imul xchg mov (bad) callq (bad) in fildll outsb sub sub outsl add rex.WB fmuls callq xlat test lret push enterq rex.WB vcvttpd2dq icebp pop jp xor (bad) fnop jmp (bad) xlat pop repnz sub (bad) (bad) mov mulb mov in cmc je sub mov movabs xchg push jrcxz (bad) retq or adc scas test and mov loop pop es in rorl test (bad) push pop lock movabs and rex.RB callq add movabs out clc (bad) lret jl (bad) out rex.WB test stos xchg pop and cmp mov fstl rex.WB sub in rex.B jnp pop loope push addr32 movl add sbb insb mov push cltd rcl pop or (bad) movsl (bad) sbb rex.WB je movsb mov mov or (bad) xor rex.RX (bad) rex.XB lea cwtl add rcrb frstor rex.WB mov (bad) fs push rex.WB rex.X pop or test lret rex.WB push xchg xor lahf sub jb movabs mov (bad) rex.WB push out mov outsl gs pop pop push fbstp cmp std movabs decb adc in (bad) test (bad) and cmc rex.W bnd pop xor rex fcoml jno sub imull callq rex.WB push clc mov movabs rex.WX (bad) xchg rclb test outsb cli movsl mov insb vmovaps jb fwait rex.WB movabs test xchg (bad) pushq mov mov mov jo pushq (bad) rex.WB (bad) int3 shlb and mov add (bad) pop lods rex.WB cltd rex.XB mov fsubl or movabs sub lret shlb add out rex.WX or push cmp addr32 push jne shrl xchg (bad) leaveq jmp callq out js or rex.XB and xor adcl adcl (bad) jge pop mov jb movslq adc xor popfq and (bad) xchg sub push subb test ja mov push jle add or clc gs icebp loopne stos in data16 rex.RX and mov loope lock mov (bad) movsl jrcxz mov adc cmpsb push cmp imul sbb pushfq callq in (bad) pop sbb pop pushq (bad) sub (bad) pop add rex.WB lods shlb rex.WXB std pushq jns or push pop push xchg xlat mov test xchg cs rex.RB xchg adc jg test rex sub adc hlt test rex.RB fcmove rex.WRB (bad) mov outsl mov push xor or (bad) jb cmp enterq jae rex.B sub adc jge mov adc stos lock rex.XB (bad) fidivl rex.WB pop icebp xcrypt-ctr cmpsl (bad) jns xchg lods push sbb retq jge adc (bad) leaveq rex.WXB (bad) (bad) cmp mov pushfq (bad) mov mov rex.WRXB pushq scas cmp rolb rol push mov loope xchg rex.WX sti adc sbb mov pop int3 (bad) vpcmpgtw (bad) mov mov jb or rex.WRXB and int rex.WB in cmp enterq or in rex.WB std rex.X gs sub and mov jl mov (bad) or and xchg fldcw (bad) (bad) data16 or mov cmp (bad) sbb (bad) rex.WB (bad) test mov and mov sub push mov (bad) jl retq clc pop cli sub adc mulps pushfq rex.WB lretw movabs (bad) or pop sbb adc int (bad) push pop movabs rex.WRX rex.WXB test lret pushq (bad) mov loopne rex.W rex.X mov adc (bad) stos sbb add mov lcall retq int push retq (bad) out mov rex.WB incl callq cmp movabs (bad) mov push (bad) mov push (bad) or sahf and cwtl rex.RB jnp rorl (bad) cli rcrb hlt pushq rex.WX rex.RB sub cli mov (bad) mov int3 (bad) movsl adc rex.WB (bad) rex.XB xchg and xchg jns jno rex.WR and fcoms cmpsl add callq ja sub xchg push repnz movabs sarl insb ss and rex.RX or (bad) (bad) fmuls lahf push jp mov out (bad) enterq xchg adc movsb ja sti repz rex.RX rex.RXB (bad) (bad) js sarb push in mov and push data16 rex.WB (bad) rex.RXB fwait js rex.WB push xor add mov cmp xlat adcl rex.RX rex mov push jo loop mov cmp sub (bad) mull movslq movabs sub mov jae cltd sbb enterq std rex.RXB add rex jbe nop in wbinvd and rex.RX adc xchg in xchg add mov and mov loop xchg shll jp jge rex.WB jmpq rex.WB out or pop add sbb callq movsl push negb xchg mov lock (bad) ja rex.WB push cmp (bad) xchg push rex.WB jg mov loope rex.WB in xlat rex.WRB xor movabs jb movabs add rclq stos cmp clc push xchg rex rex.RXB xchg in insb mov pop (bad) push cs push scas test rcl rex.WB iret hlt xchg add sub movabs in imul cmp iret shrb adc rex.WB jrcxz rex.WX ss lret sahf push rex.RB negq (bad) insb addr32 callq js xor (bad) pop movabs mov nop mov rcrb jns test rex.WX pop push movsl callq (bad) xchg rex.WRB jmp pop (bad) callq pop (bad) rex.WRX movabs rex.WB and cmp lret jbe scas test rex.R (bad) (bad) or in add xchg in cmpsl outsb enterq (bad) fs (bad) rex.XB rex.WB adc adc cmp in js rex.WB in clc ror or repnz jns mov test rex.WB lods adc add pushq (bad) rex.WRXB jmpq or push sahf lods push sub in mov test rex.WR xor xchg rex.WB xor retq mov sub xorw mov movsl (bad) sbb rex.WB jb popfq push and jae rex.WB (bad) pushfq cltd (bad) gs rex.WB outsl std sbb lock mov gs scas stos cmpsl rex.WB xchg out mov ss (bad) pop mov push rex.W lret or loop insb (bad) or enterq xor popq jl jbe (bad) out jnp (bad) add cmpsl movabs callq sbb jmpq retq (bad) push mov add movabs (bad) retq jno (bad) adc sub shr pop rex.R (bad) (bad) out rex.WX repnz stc push int3 jne rex.WR (bad) adc pop xor or xchg cmp sub or nop rex.WX jb popfq gs add rol (bad) jle push and addr32 sti cmp cmp movabs rex.WXB scas cmc out mov imul out mov stos shlb (bad) lahf repnz push jmpq gs sub cltd cmp jg push rex.X sti imul jmpq pushfq xor idivb movabs pop push sbb sub js rex.WB (bad) xchg stos lret jae rex.WRXB adc idivb rex.RB rex.WB jg ss jnp rex.WB (bad) mov repz mov xchg stos test in push incl (bad) pop in test lahf loopne sub mov sub add movsb js xchg lret scas or mov int and rex.RXB rex.WB rex.R pop (bad) rolb rex.WB outsl mov sbb and (bad) movslq sbb fcompl sub lods cwtl rex.WB sub xlat pop pushq pushfq rex.WRXB cmp xchg pop rex.X rex.WB xchg rcrb mov (bad) cmovns in (bad) rex.WB sti shr cmp rex.XB xchg pushfq xor loop sub add (bad) mov nop rex.WR sub (bad) jb pop (bad) adc ss add sub rex.WX adc pop sub pop xchg movabs xor xchg std movabs mov push pop cmpsl pop rex.X enterq xor jae push (bad) repz (bad) ja (bad) rex.WR rex.WR pushq pushfq rex.RXB (bad) jle jno (bad) rex.WB fstl xor loop jbe xchg rex.WB in jmpq rex.WR adc push sub mov xchg adc pop (bad) out popfq (bad) test cmp adc jrcxz shlb enterq mov (bad) add push rex.WRXB jae rex.WR mov int imul (bad) lock rex.XB shll mov cmpl sub jmpq xchg sub push (bad) fldl bswap add rex.W (bad) fsubrs adc mov rex.B (bad) rex rex.RXB scas adc jb rex.WB cmp retq add push repz cmpsl fs (bad) fildll sub sbb mov rolb cwtl nop push movslq rex.WB (bad) jl loope incb enterq cmp (bad) and (bad) callq repz clc and mov (bad) push and fsubrl (bad) pop hlt push addr32 rorb js cmp (bad) rex.WB (bad) sbb callq cmp mov popfq rex.WB mov andl cs lret pushq test stc mov (bad) (bad) sub push rcrb xor out mov pop mov (bad) mov push (bad) mov mov movslq push cmp jae cmp (bad) adc out rex scas sbb fisubr lret rex.W (bad) or cmp adc mov enterq (bad) xchg sub pop mov cwtl (bad) sahf (bad) cwtl xlat (bad) rex.RB mov (bad) popq pop (bad) pushq rex.XB addr32 imul rex.RX enterq rorb test stc insl popfq pop xor (bad) or adc xchg rex.WX jnp (bad) pop (bad) xor jmpq cmp sub cmp rex.WXB test add mov cmpsl lods pop pop or fstpt (bad) testb out sub pushfq adc scas (bad) push jns (bad) divl test (bad) stos sub rex.WB cmp rorb in jb adc push data16 lahf jbe sub or lods (bad) and pop rorl ja movabs movsb out xor jle movslq imul movsl and rex.WB fwait sbb iret imul (bad) rex.WB mov ds fadds pop rorb add jnp movabs push jle jbe scas pop cmp cld rex.WB (bad) mov negl sbb mov mov mov retq xchg add jne rex.WB and (bad) stc (bad) (bad) scas sub jbe outsl insb (bad) (bad) jno callq sub or mov movsb loopne (bad) fbld xchg fisubl pop xor add xor (bad) sub xlat and shrl mov jns in movabs or rex.WB fidivrl jae pop (bad) int lods (bad) jmp loope jnp cmp rex.WB mov xchg xor pop rex.WB mov loope outsl ds (bad) jo mov callq push sbb sbb mov sahf test in push std in lret mov pop mov (bad) adc rorl rex.W rex.WB fs sbb loopne rex.WB lret fcoms and jg rex.B add iret cmp xchg rex.WB and pop outsb cmc int3 rex.WB add test adc imul lock lret sub test sub fwait xor rex.XB hlt adc and pushq (bad) xor out sbb and and movabs clc xchg jmp movsb xchg enterq push insb pop flds push sub sbb sub iret test or jo or xlat mov and (bad) mov xchg mov (bad) or (bad) cmp pushq test rex.RX rex.WB (bad) decl movb rex.WB (bad) lea mov sub cmpsl cs sbb xchg sbb rex.XB (bad) imul xchg outsl movabs push pop movabs mov sub add cmp lret lock (bad) xor rex.B stos cwtl and or test lret push rex.W rex.WB (bad) pop movabs ja retq out mov rex.WB sub add rorl mov or mov (bad) outsl rex.WRXB addr32 push rex.XB rex.WB orb mov fwait pop test adc repz nop out push retq rex.WB test cli and or and ss and js movabs rex.B repz jp sbb fwait rex.WB movabs lret mov pushq mov push movabs mov fcmovnu (bad) in xchg (bad) rex.WB (bad) mov (bad) outsl or test mov adc mov xor mov xchg (bad) pop (bad) adc rex.RX push callq push cmp rex.WB rex.RXB add xor xor (bad) notl sbb pushq je cld (bad) mov and pop sbbb mov movabs xor movsb ja or pop fisub movslq loopne test push out sub sub and cmp mov xchg or (bad) callq sbb retq jno push (bad) rex.R repnz mov loop out stos push stos subl sub rex.XB mov and cmp rex.WB lods rex.W adc fistpll imul (bad) fidivl rex.WB xchg jne movslq (bad) rex.WB sahf nop pop cld sub mov pushfq rex.WB mov pop sbb fistp cltd cltd movslq mov rex.WB mov adc xchg in sti cmp movsb xchg out push (bad) inc in pop lret mov cmp push fs pop sub (bad) sbb and cmp pushq (bad) rex.WB (bad) rex.R gs pop sahf rolb incl callq insb mov (bad) out loope test rex.WXB xor fs sti addr32 push outsb (bad) or movsl loope xchg xchg rex.WB or std shrl xor cmp rex.WRX sub (bad) (bad) rex.WB out lea cwtl or ds rcrb (bad) adc pop cmp addr32 xor pop movabs pop rex.WX sbb rex.XB sub mov movslq fmull add mov pushq lods out adc push loop clc stos in sub std mov adc xchg xchg rex.B mov lret adc sbb div movsl movabs leaveq imul adc rex.RX stc cmpsb (bad) popfq ss (bad) pop (bad) mov pop rex.WRXB icebp movsb and and push test and sub mov cwtl out rex.WXB xchg push or test pop loope (bad) cmp or rex.WRX repz sbbb xchg andl pushq or sbb (bad) cmp loopne adcl mov gs cwtl movabs cmp test jno loop out xor enterq stos addr32 stos xchg push pop sbb fnstenv rclb lods (bad) rex.WXB rex.WB movslq jg nop and scas and lea cmp add sub addl (bad) (bad) jp lea insb pop stos enterq callq xor pop or or (bad) in sub add rex.WB decl push lret mov enterq cmpsb movabs jb out and mov rcr popfq cmp sub rex.RX xorl pop sbb (bad) fsub pushq and movl scas stc (bad) (bad) movabs lods pop jl retq mov insl fstpt mov sub int rex jp rex.WB mov repnz push sub mov cmp gs jl adc or pushfq pop push or out sbb sub scas pushq iret rex.RXB addr32 (bad) sbb (bad) sub subl pop retq cmp and insl push adc in cmp mov xchg jg push sbb push pop adc sub (bad) mov and (bad) cmp (bad) xchg jno (bad) adc push insl or (bad) pop movslq jmp add (bad) cs and jp rex.WR xchg je rex.WB pushq rex.WXB in stos rex.XB rex.WXB mov mov xchg rex.WB (bad) (bad) shrq lret gs mov lahf add faddl (bad) cmc int3 mov lods stc mov imul in stos (bad) and mov clc imul (bad) in (bad) retq push jno mov (bad) pop (bad) (bad) jp or pop rex.WX retq pop leaveq int fcoml pushq xchg fwait pop cmp jmp out loopne insb data16 cwtl outsb pushq rex.WB pop loop mov or or mov add enterq outsl jo jb imul add rex.B xor (bad) xorl push xor jle lret adc (bad) in and rex.WB lahf cmp add std xchg repnz mov rex.WB xchg stos (bad) mov rex.WB (bad) mov mov jge xchg loope and out xchg jmp (bad) push sti xor fcoms push (bad) fnsave rex.RX pushq (bad) and lea fcmovb rex.WB cs rex.RXB fstps movabs in rcl xor sbb in adc jmpq loop cmpsl fcmovbe shrl movslq xchg divl rex.WB repnz pop movabs std sbb push bnd rex.WB cld jg addr32 in sbb or pushq (bad) rex.WB (bad) std and test xor negl jno rex.WB ss (bad) cmp rex.WB xchg scas test or pop cmp lahf cld rex.WRB cwtl adc (bad) imul xor (bad) sub pop xchg test clc out or xchg xchg add (bad) iret jne movsl scas sub mov jl fsubrs cmp (bad) and sub pop fsubrs rex.WR movabs loope cmp jne mov xor popfq sub adc rex.WB cmp sub ja xor lret mov loopne fs clc push (bad) rex.WB pop (bad) xor sbb xchg jnp (bad) rex.WRXB gs andl jmpq insb fsub (bad) cmp movabs rol or sbb sub (bad) push jno (bad) lea movabs sub rex.WX ss add lods rex in rex.WB rex.B in pop mov push outsl mov push fnsave adc and rex.WRX fsub (bad) enterq insl jrcxz ds push and callq mov rex.WB lods add mov xor (bad) add xor jnp jle movslq (bad) rex.RX rex.WB (bad) jmp sbb sub sub rex.WRB mov xor jb and and lock cmpsl sub mov cmp xchg int lret xor outsb (bad) (bad) movabs jge cmp pushfq cmpsl in (bad) jae std pop cmp mov loope jge jne mov pop (bad) and sbb mov movabs pushq (bad) cld (bad) sbb roll (bad) out (bad) (bad) mov (bad) rorb (bad) jl pop outsb (bad) jnp gs fdivrl mov callq cmp pop (bad) cld or rex.WB pop push lret divb sahf pushq enterq rex.B mov rex.WXB rex.RB jmpq rex.W pop jae and movabs cs rex.R sub mov rex.WR (bad) imul pop pop and or xor mov sub (bad) icebp xchg loop rex.WXB xchg mov push (bad) (bad) fidivl cwtl sub movslq cld pushq xchg rex.WXB (bad) lret cli push and out rex pushq and pop rex.WB rex.WRXB rex.WRX hlt (bad) jnp cmp xor or rex.WRX rex.WR enterq mov jno loope ja adc xchg mov sbb rex.WXB cmp (bad) cld xchg outsl xor sub sbb sarb enterq movabs xor jrcxz sub mov mov leaveq sbb sbb rex.X mov ss mov jrcxz rex.W adc not (bad) psrld fistpl and fimull rex.XB jmpq movslq (bad) jmpq outsb cwtl callq (bad) sbb mov sbb rex.WB sub stos jrcxz (bad) ficoml rex.WB jno rex.X mov rex.RX fiadd sub xor rex.WB adc mov mov je push sub sub jge shl (bad) rex.W stos lahf jmpq jmp popfq (bad) imul push sub or clc pushq leaveq xchg adc jbe movabs icebp xchg fldenv rex.RX repz cmpsb incl jb sbb jle push sub and mov cld cmp lods subb sbb push cvtpi2ps test xchg out fs xchg (bad) stos xor cmpsl or je iret hlt push rex.R cmp or retq jl jp (bad) mov sbb sbb jmpq add fild pushq mov mov cmpl cmp lahf cmp (bad) jae mov pushfq cmp fisubl movsb push stos jp cmp retq mov rex.R es scas mov movabs (bad) lret xchg jmpq jmp rex.WR rex.X out in add sub cmp fistl xor (bad) push int3 out shll movsb cmpsb imul mov or test (bad) lret xchg jae stc imul jno or xlat outsb rex.WRXB fwait int jbe mov mov rex.X xchg (bad) data16 (bad) mov mov mov rex.W add sbb pop rex.RB test pushq pop test popfq pushq rex.RXB xor push or (bad) mov rol mov lret sub (bad) and and add xchg or ror (bad) xchg xchg andw jle pop rex.R rex.R xor pop jns mov add xchg test sub rex.R (bad) movl scas (bad) and sub pushq push iret add retq mov sub mov std xor repnz push fldt and leaveq xchg or add rex.WRX (bad) pop retq sbb mov sub or mov out std lahf jno int ss (bad) (bad) sub movabs sbb add je rex.WX movl clc (bad) lea cmp cmpsl cmpsl and (bad) leaveq stos jmp insb cs xchg rex.RXB rex.B lock out adc jne in push hlt jmp mov sub fcmovnbe rex.X xchg xchg test test rex.X gs (bad) jnp fsub (bad) (bad) cli mov lret cmp test sub (bad) rex.WR flds outsb iret and sbb (bad) imul pushq mov (bad) lahf xor ss rex.XB mov negl xchg mov jrcxz stc in push fisttpll mov (bad) pop stc pop orl (bad) fdivrl (bad) hlt es ja es jrcxz cmp fimul mov xchg hlt outsb imul add adc lods adc xchg (bad) jne fistpll pop shrb adc cs mov ss clc sbb or lock rex.WRX xadd sahf mov movabs cmpsl loope push mov movslq and je ss retq rex.WR retq push xchg cwtl xchg and cmp (bad) stc jmpq rolb movabs insb sahf and sub rex.WX fs sub nop pushq push xchg add rex xchg (bad) (bad) lret rex.WRXB sub mov shll jmpq rex.WRXB (bad) rex.WRB fsts movabs rolb sarl xor (bad) add (bad) outsl mov rex.R negb xor rex.RB hlt movsl mov push rex.WB cs (bad) xor pop mov retq and (bad) clc rex.WB add sbb jg (bad) push pushq push mov pop and rex.WB (bad) (bad) (bad) lfs adc cmpsl rex.B mov or mov cmp popfq (bad) or adc sub rex.WRB rex.WXB mov pushq jp pop out mov js (bad) cs rex.WB pushq sbb adc push cwtl rex.WXB push add sub adcb xor fmuls push out fwait scas jo adc mov ja rex.R xor out cmc test pushq stos repnz xor callq popfq outsb rex.WB rex.WRXB (bad) movslq xchg flds mov movabs movabs push int rex.RXB add sub xchg loopne pushq test sbb scas (bad) lock (bad) jge rex.WRX rex.WB lods mov mov jp test rex.X (bad) (bad) sbb and pushq cmp rex.WXB movabs mov cmp rex.WB addr32 ss rex.XB pushq in xlat in rex.WB scas pushfq mov pop movabs push and cmp rex.RX sbb and xchg and movabs movabs gs add outsl pop rex.WRXB pop leaveq sub mov pop repz std (bad) rex.RX jg add fistl mov push int3 (bad) rcrb or xchg xor rex.WRXB testl jmpq mov (bad) xchg mov fcoml (bad) sub movsb xchg test pop jae cmc leaveq iret rex.XB es add xor push rex.XB mov movabs pop int3 sub loope (bad) mov mov (bad) enterq ds rex.WX rex.RX sub xchg pop and cltd add leaveq or scas rex.RXB push (bad) movsl rex.WRX rex.WB jb (bad) (bad) sbb (bad) movsl mov cmp sbbl xchg push xchg push sbb cld jg retq mov cmpsl rex.WXB callq gs xchg mov jg add pop (bad) (bad) out sub loope out pop (bad) (bad) (bad) rex.WRB rex.WB add pop rex.WB or lock scas ja (bad) (bad) out cli mov pop sub hlt sub rex.RB xchg (bad) imul rex.X or iret pushfq subl rex.WB pushfq (bad) es fsubs cmc js rex.WB fwait pushq push enterq xchg hlt push or rex.WB (bad) ss out movabs xchg jmpq divb (bad) rex.WB loop repz (bad) rex.WX cli fstl fist add xor push andl sub rex.WRXB xchg jns xchg in test addr32 jg pop pop and testl outsl xor cmp fadds pop rex.W (bad) (bad) mov (bad) subl pop mov adc mov rex.WRB rex.X push lret add mov sarl gs push xor mov jge fsubrl in (bad) rex.B mov (bad) movsl dec imul and idivl jge (bad) push addr32 callq imul sub lock rex.RB lahf xchg push je js mov jle rex.RXB callq mov fidivrl mov or leaveq int3 jae (bad) jg (bad) rex.RX sbb ja mov (bad) pushfq add (bad) (bad) rex.RXB adc mov loop lret (bad) repnz add jns pop sbb stos adc xor movsb push loope lods cld imul scas jb sahf pop cmp mov in cmp jg or cmp push in (bad) jge psubw push push (bad) mov mov rex.RX pop rex.B incl pushq xchg testl rex.B repnz ss mov mov and pop (bad) fsubs (bad) rol movabs xchg sbbb cmp add xchg (bad) rex.WXB fwait pop sbb push cmp sub sub lock in sub movabs xor outsl push ja jmpq (bad) gs (bad) fiadd in rex.WRX out jb int mov rex.XB xor subl pushq add sbb pushq sahf mov xchg jle mov push mov jno and (bad) stos xchg test jmp or sbb and or add pushq jns fildl mov rex.WR xchg jo lret mov (bad) sub adc (bad) (bad) or (bad) cmp ds push push or imul jno out out sub int mov lods movsl sbb jg cmpl (bad) or movabs pop jmp mov (bad) hlt cmp mov lahf cmp pop pop (bad) mov ljmp jbe imul movabs sub (bad) (bad) repnz (bad) movsb rex.X insb (bad) mov and lret sub mov push adc or (bad) mov out (bad) rex.WRX fs je mov pop xchg mov mulb callq push movabs sub icebp pop pop (bad) rex.WX lahf pop movsl adc push icebp movsl (bad) (bad) subl test rex.WB (bad) and movabs out rex.WB xchg push adc xchg retq (bad) rcrb sub addr32 rcrb loop xor cmp pushq movabs add sub movabs icebp mov (bad) sets push (bad) jg rex.WRX cs sub (bad) push rex.WB or cmp add (bad) mov lret add sbb scas lock xchg es rex.X iret movsl ds rex.WB rex.B or rex.WB clc retq adc hlt sub imul or addr32 ja movabs xchg mov int3 scas rex.X push sbbl rex.XB pop testl out jae sbb sub xor stos insb push nop cmp cmpsb jmp fwait and sbb jrcxz lea rex.WB rex.WRXB xor scas (bad) mov fwait push bnd mul lods rex sbb movsl jmp cli rex.WB lret mov adc and movsl jmpq test add sub adc in push (bad) je sub push sbb jne pop and test jp add notb adc adcl xchg leaveq and cmp movabs add cmp int3 xchg xchg out mov (bad) push sbb fimull adc (bad) mov cli je sarb stc std jns and (bad) xor mov mov test retq rex.WRB mov (bad) rex.WB (bad) push clc adc xchg cwtl rex.WB jmp lcall rex.WB push and pop xchg in addr32 in or sbb repnz mov mov pushq rex.RX gs iret adc (bad) sahf rex.WB insb enterq mov mov repz mov mov jnp jp add js rex.WB sbb (bad) or push hlt in es rcll and movslq jb add negl adc rex.RXB rex.RB js or rex.WX fsub (bad) xchg data16 stos rex.WB rex.XB clc (bad) loop jne es lahf rex.WB testb push xchg and adc lock (bad) xchg push xchg addr32 sbb rex.WRXB (bad) push rex.WX faddl or pop rex.R out mov rex.WRB sbb xor enterq rex.RX adc rex.WB rex.WX (bad) jrcxz repz fbstp (bad) rex.WB fdivp mov enterq idiv mov (bad) (bad) jne in mov rex.WB xor pop sahf add rcl retq callq or callq ljmp sarb pop rex.WRXB mov cmp rex.WB push rex.WXB rex.WB (bad) sub add shll mov xchg push movabs (bad) cmp mov mov pop add fcompl lods lea scas rex.WB and jnp movsl push callq insb int3 rex.WRXB pushfq rclb retq stc fimull (bad) rex.RB rex.WRB and orb xor jp rex.WB repz cld jge xor sub xlat shll movslq mov out (bad) xchg push imul sub ds (bad) or jle iret ja xchg cmp sbb mov and scas ficoml test out mov sub add xchg movabs movabs mov fisub mov adc (bad) or and rcrl rex.WB pop rex.B data16 rex.WB jg xor rex.RXB rex.WXB jae cmp (bad) (bad) mov sbb add cs rex.XB popfq in fimull xchg stos retq (bad) and adc and pushq (bad) xor movabs cwtl cs push jp (bad) ds xor (bad) (bad) jns rex.WXB push adc addr32 mov mov sub cld xchg and scas pop xchg or callq movabs js hlt push rex rex.WB cli mov mov lods rex.B sbb add test cs movabs stos nop rex.WB rex.WRX mov rex.R rex.WB and lret rorb ss adc cmp gs push (bad) sub rex.WB shrl sbb rex.WRB lock mov or jae mov rorb lret retq popfq mov movabs in rex.WB mov add pushfq or cwtl rex.WXB rex.WRXB rex.WB sbb rex.XB rex.WRX (bad) pushq (bad) rex.WRB rex (bad) sub rex.R cmpsb rex.WRB mov fwait js test movsb rex.RX (bad) mov test cmp adc xor rex.WB rex.B rex jo push rex.WXB retq in xchg sti test jbe mov pop repnz or cmp rorl and out jp or add add sbb scas or (bad) mov mov fistp callq sbb rex.WRB clc cmc int3 or movabs sbb adc jno jmpq mov enterq cmp add cltd in stos (bad) adc cwtl add jrcxz fwait (bad) sbb (bad) outsb flds (bad) (bad) shr popfq pop out jmpq (bad) mov jo test pop cmpsb or insb jbe cwtl cmp lret rex.RB rex.RX rex jp,pt (bad) rex.WB loopne (bad) popfq (bad) jge push xor cmovo ds jp retq rex.WB xchg sub sbb outsl rex.WB loopne iret pop rex.B rex.WB mov sbb add repz rex push mov fucom fsubr out int3 mov (bad) mov xchg xchg imul pushq mov pop scas pop cmpsl test (bad) rorl jns rex.WB pop sarb sub clc in fisub loop rex.WB mov sub pop and stos insb rex.WRB addr32 sbbb sarl xchg cmp jno or lock add mov movsb retq sub pop loop mov rex.WRB or fadds rcl movabs fs int mov rex.WX adc xor rcr rex.WB lahf jp (bad) xlat imul (bad) movabs or pop in leaveq push pop insb (bad) cmp xchg jrcxz jbe scas push and rex.RB rex.WB rex.WXB add jb jle cli fwait xchg sbb (bad) push fimull lret rex.WB cld cmp movabs psubw retq sub (bad) movabs pop movabs pop test (bad) push mov pop jge gs iret adc mov (bad) fucomi sub movabs mov jno movabs pushq sub add movslq rex.WB lods leaveq insb clc add xchg out lods mov xor sub popfq movabs push movsb rex.WRB insl jae out cmc out pop rex rex.WR pushfq imul or addr32 adc rex.WX xchg rex.RX je cmp and push sub rex.WRXB xor sbb push rex.WR rex.W jno push fldenv enterq test add pop (bad) mov fs jmp icebp pushq mov cli jno or cmp push movsl adc xor mov clc mov adc pop stos stc jmp je rex.WXB adc scas mov (bad) adc mov mov (bad) jne movsb (bad) and es pop (bad) (bad) stc (bad) rex.RB rex.WXB push xor repz rex.WRX leaveq rex.WB (bad) mov rex.WB sbb adc pop (bad) icebp cld jns int mov shr movsb loopne adc (bad) jae cmpsb lock retq jg movsb push mov sub hlt (bad) sub xchg pop rex.X rorl (bad) scas test rex.RXB idivb rex.WB (bad) sub (bad) add or rcrl leaveq addb jbe cmp xor mov and je rex.RXB jrcxz sub pop movabs sbb ja (bad) sbb (bad) callq rorb and cli loopne xchg stc testq shlb notb or rex.WRX jg pop push sbbb mov (bad) mov (bad) fstpl pushq pushq cmc callq pop fidivr xchg mov jnp adc xchg imul or (bad) callq scas icebp insb pop rcrb sub lret jge rcll rex.R xchg pop add movabs push xor rex.WB in mov iret or leaveq pop rex.WB rex.WXB (bad) cli mov movabs jne cmpsb pop or jl rex.X rex.RB jrcxz rex.XB fdivr (bad) mov xchg xchg sahf std rex.WRB cmp or rex.WB and xor mov (bad) out test (bad) imul stc and test or scas push insb test jrcxz rex.RXB and ss movsl movb movl (bad) fistpl cmp and mov rex.WX mov outsl leaveq cmp rex.WB xchg rex.R insb jp or and (bad) shl jmp rex.RX pop pushfq rex.WB xor out test fldenv adcl sub out movl (bad) movsb rex.W rex.WB lods leaveq popfq sub pop sub cmp jae pop cwtl (bad) or or (bad) jb rex.RX adc jbe orl lret out add cmpsl or rex.WRB jb (bad) rex.WRB cmp rex.WB mov rex.WB jl add test insb push (bad) loop ja (bad) rex.WB rex.WRXB rex.WRX pushq roll (bad) pushq cmc fildll sbb or cwtl or (bad) (bad) movabs rex.WB mov data16 fmuls or test (bad) pushq fwait movslq rex.R or mov push jno retq push pop pop mov test lret rex.X adc (bad) mov hlt mov rex.WB xchg repnz lock fmuls lea rex.W pop (bad) rex.WB addr32 jne cmp and stos (bad) test push rex.WB sbb enterq (bad) lods outsl add mov pop (bad) jb fild rex.WB jnp movslq cmp mov andl mov sbb sub ds iret imul stos (bad) push stc add (bad) jb callq in fimul cmp addl movabs repz cmp movabs pop int mov mov cmp sub rcrl and adc sub mov js and (bad) out rex.WRB rex.XB cld ss retq (bad) retq retq (bad) (bad) hlt test push fs frstor in rex.WB xchg jb pop (bad) mov (bad) popfq movabs jp jl loope mov stos rex.WB mov enterq mov (bad) sarb push or pop leaveq jnp rex.RB rex.RXB adc rcll loope popfq lock sub rcr pushq imul jp fstpt (bad) or (bad) lea push leaveq jne (bad) in (bad) rex scas add add cmpsb adc rex.WRXB lahf rex.WB rex.WRXB push std rex.WB mov lret adc test gs lahf sbb outsl fidivrl shll sbb popfq rex.XB xor or mov repnz xchg sub (bad) push mov insl jae rex.WB repz pushq and pop jo push (bad) sub rex.WB mov lods rex.WB xchg (bad) sbb or xor rex.WRXB sbb rex.XB rex.WB (bad) (bad) pushq scas cli push cli rex.WB lock retq cld add cwtl mov imul (bad) cmc or rex.WR callq cmp callq fnop jbe vpcmpeqw mov enterq iret cmp leaveq repz mov rex.WR js (bad) mov jns (bad) leaveq mov (bad) xor adc jl pop push stos (bad) rex.WB retq jge lret fildll stos add sbb faddp (bad) rorb int xchg cmp cli outsl adc pop xchg rex.X sub add in lea add test or cmp rex.RX or mov adc rex.WB (bad) in repnz rex.WB rex.WR xor rex.WB jns rex.RXB add rex.WB movsl sbb rex.WB cmp retq fsubrl hlt movntq rex.WB shrl mov fild sbb push clc adc cmpsb out retq or mov rex.WB jg movabs rex.X rex.WX (bad) rex.XB sub (bad) push jno incl test (bad) (bad) push (bad) xchg adc lahf mov or push scas or jb scas pushq push mov enterq (bad) jno rex.RXB rex.W rex.RX sahf adc rex.WB sub (bad) sarb add rex.X rex.X sub mov sub mov push fldl rex.WB fwait (bad) add jns or scas xchg sbbl (bad) xchg lods mov sub addr32 imul callq xchg xorl sbb (bad) mov rex.WB out fwait loope jnp fist insl rcrb subl test or xor mov movabs pop movabs jrcxz xor lret mov popq leaveq es fwait mov test pop (bad) movabs jmpq (bad) movsl rex.WRXB xchg jb (bad) rex.X sahf and pop mov xchg or and xor xor rex.B add jp rex.XB pop test flds pop sub movsl es mov mov lock add xchg sbb mov sbb xchg (bad) (bad) sub jmpq or (bad) retq hlt rex.WB pop vmovapd mov rex.WB xchg pop add (bad) mov lret xlat movabs popfq push int fisubl pop pushfq (bad) push rex.WRXB rex.WB cmp loop xchg (bad) psubsb int3 cmp iret ja sub sub cmpsb pop scas cwtl rex.WX and (bad) mov rex.WB jne stos xchg test lods (bad) rex.RX rex.WB mov and outsl stc test iret rex.RX (bad) or push movabs leaveq mov sub (bad) pop out adc add xor or (bad) and xchg or cli or outsb sub clc push and push pop je pushfq rex.WX leaveq sti movslq push adc fwait xchg and sbb mov mov jg and mov (bad) cltd out test and sbb (bad) pushq push rex.WXB in mov orl in scas jae push and sbb or rex.WB or pushfq stos (bad) and mov xchg rex.WB (bad) lock imul (bad) mov fcomp xchg fs cmc sub cmp (bad) rex.WB js rex.WRX jg push movabs mov sahf (bad) mov mov cltd (bad) rex.WXB adc xor (bad) rex.WB or add sahf mov rex.WB int or outsb mov jge (bad) sub jno js push mov (bad) mov rex.WB imul rex.WRB sbb fldcw (bad) movabs jge (bad) pop (bad) ds rex.WB (bad) addr32 clc stos jg std mov cmpsl sbb repz or jo mov lea int3 xchg xor hlt test mov adc in jne imul and out fstl callq mov pushq lahf push push out stos and xchg shlb jo movabs and sbb push fcmovnb mov iret rex.X movabs retq rex.WB jo enterq in cwtl sub push in or rex.WB rex.RXB js (bad) mov (bad) pop push xchg sbb movabs in or cmp push cmp sbb pop pop rex.WB and imul jno adc fdivs rex.W or fimull fsubrp decl lret jle mov rex.WX rex.WRB pop sub add leaveq push loope enterq cmp jge rex.RXB outsb and insb mov push stos jmp movsb push sub rex.RXB (bad) jns adc xor lods or callq push stos (bad) xor add xchg addr32 push xor rex.RX and data16 movslq rorb push mov or push cmp cwtl add jle sub or pop push adc pop xor cmp adc xorb pop push movabs popfq retq rex.X (bad) lods push (bad) sti xchg rex.B out add jge jp sub xor (bad) out (bad) out and fidivl callq out mov out popfq xchg jge (bad) (bad) cmp movsl (bad) cmp and push (bad) rex.WX stos cmp int and jno in sbb rex.XB rex.RX out mov rex.WB push (bad) rorl pop pop (bad) sbb push rex.RXB (bad) pushq mov mov xor or mov sbb mov cmp outsb add iret int3 rex.RB rex.WB (bad) jno xorl callq xchg jnp cli sbb pop mov rex.WB xor rex.WB rex.RX je cwtl in rex.WB xor pushq sub or repnz rex.RX mov mov xchg (bad) loopne rex.WXB rex.WRB movabs mov push fwait test mov mov xlat rex.RX adc rex.WB (bad) loope repz add scas cwtl rex.WB outsb or mov (bad) rex int lret (bad) fmuls mov xchg pushq or pushfq hlt loop xor jmpq lods divl fwait (bad) mulb test sbb mov movabs xor mov xchg lods xchg pop rex.WRB addr32 fist rex.X mov movsl rex.W and rex.WB js iret lock (bad) movsl movslq mov push add int es jmp (bad) out (bad) fldl xchg push cwtl jne xor sbb (bad) and xchg hlt (bad) and (bad) sbbb rclb (bad) xor rex.XB add (bad) cli mov jnp sbb enterq in cwtl mov and rex.WB (bad) popfq mov rex.WB mov and test xchg lea insb mov or test and enterq and rex.XB rcll movabs mov rex.WB adc push and xor movabs repz mov xor (bad) mov sub pop out pop cmp rorb (bad) add movabs leaveq push movabs add fcmovnb add jg (bad) movabs movabs adc insl jno mov movabs pop shll push rex.RB test or or jmpq push es sbb jp rex.WX addr32 xlat lock xchg (bad) movabs pushfq and retq mov rex.WB mov or (bad) rex.WB movabs (bad) out pop (bad) sbb mov xchg in cwtl pop stc fstpt push xor cmp mov xchg je test movabs xor xor or jo cmp lods rex.WB fldenv sub in rex loop rex.WB jrcxz rex.WRXB rex.WB imul mov insb adc lock (bad) xor rex.WR pushq jo ds shlb mov outsb adc je rex.WB out fldl rex.RXB (bad) pop (bad) and pop mov rex.WB repnz pop mov movabs fnstenv rex.WB or movsl jb mov sub fisttp mov rex.B mov test int (bad) (bad) rex.WR cmp js mov lret rex.RB rex.RB mov rex.XB mov mov sbb clc and cmp pop (bad) sbb mov rex.WB rex.RXB or (bad) jbe (bad) or cld pop add ffreep cli rex.WB (bad) (bad) cmp rex.W out notb rex.WR cwtl sub push xchg shl sub or cmp movabs insb movl rex.RXB js loop rex.WB (bad) rex.R pand rex.WB lock movabs flds rex.X rex.RX cmp rex.XB jmp rex.WR sub js jae cwtl jnp cmc rex.RB pushq rcrl out (bad) leaveq push cmp nop sti adc push scas cld fxch in rex.W and or int3 rex.WRB insb leaveq fucomp (bad) xchg xchg xchg loop movabs and clc (bad) mov movsb sbb and cld (bad) mov shll rex.WB adc (bad) (bad) (bad) (bad) jns leaveq (bad) fidiv or hlt gs (bad) cld stc (bad) xor xchg sub lods lods jrcxz movsb movabs icebp and rex.RX xchg rorl jle and pushq insl sub stc sub fs sti iret fisttpll movsl rex.RX jne xchg rorb add (bad) jrcxz scas add (bad) sub rex.WB insb jb cmpsb or (bad) xor push pop shll and scas iret callq rex.WB mov lret mov jg push movabs rex.WB xor sbb (bad) (bad) int or loopne push popq scas rorb cltd in jne lea lret mov rex.WR fwait jge rex.RXB (bad) addr32 test clc hlt xor and mov movsb mov pop jne rex.WB rex.W ss lret popfq xchg mov test fimul repnz lods or jle loopne (bad) movlps or xor pushq stos clc xchg rex.WRX out loopne sub movabs (bad) cmc xor jbe mov insb xor test xchg rex.WRB sahf rex.WB pushq popfq pop and xlat movabs pop int3 rex.RB rex.WB jb test leaveq jrcxz add sub pushq rex.B xor sub adc (bad) jmpq std rex.WB mov rex.WRB rex.RXB cmp mov cli sub cmp (bad) rex.WRB nop rex.WB data16 (bad) lods cs pop mov mov (bad) sub mov lret scas rex.B imul cltd or movabs lret int3 mov jnp clc rex.WB jb retq fstl (bad) rex.WB test push mov movsb and fiaddl xchg ja loopne pop out retq sbb test xor sub xchg imul stos repz rex.WB sub loopne add repnz int3 sbb rex.RB cltd jmp or add pop mov outsb mov push cmp adc hlt mov int3 stc and sub loope movsl push int3 cmpsl lahf mov imul movsb mov jg and enterq xor push loop sub (bad) mov xchg mov or cltd xchg (bad) pop or data16 lods mov mov test idiv rex.WB ror mov jle rex.XB adc add mov lret jnp mov neg push lock sub mov jmpq or fcompl lock repz xorl fidivrl xor (bad) enterq (bad) jne or pop xchg insb cvtpi2ps mov sti or xchg adc mov jno jmp xor rex.WB push or xchg pushq rcrb imull rex.WB scas and lahf test test fisttp lret addr32 iret rex.RX (bad) pushq jrcxz (bad) lret push rex.X rex.WB test (bad) repnz int popfq mov xchg sahf enterq lahf stc rex.WB sub jb movabs mov and (bad) or mov add jne fsts cmpsb stos callq sbb push (bad) pop out test rex.WR lock mov cmp loope bnd in rex.XB movabs (bad) sarb cmp pop add sbb lret or (bad) movabs xchg rex.WXB stc out sub pop mov pop push cmp movabs or lods rex.WB iret ja test push callq fisttpll test rex.WRX rorl rex.W pushq sbb outsl add (bad) jb data16 retq callq rex.WB fisttpl (bad) mov (bad) mov out retq movabs rex.WB jl (bad) cmpl cli movabs pop sbbl mov or rex.WRB clc xchg (bad) rex.WX sbb fs rorb (bad) scas popfq sub jmp imul fild rex.WB data16 xchg movabs repz or enterq push (bad) mov je jp retq fdiv test movabs and rex.WB pushq (bad) rex.WB mov retq xchg xchg movabs cmc sub jo rex.WX enterq stos jbe jrcxz sbb movabs (bad) and rex.W rex rex.WRXB hlt movabs jge push in xchg or mov rex.WB adc and rex.WB xchg cmpsb repnz rex.WRX rex.WB test (bad) shrb rex.R pop rex.XB jo ror movsl cmpsl push lahf fistp decl cli or movsb and cmc xlat mov jg rorl loope fcomi movslq pop mov mov andl mov hlt out push loopne (bad) jmp shll pop inc mov xorl (bad) mov xor mov rex.WR rex.RB cltd rex.WRXB xor movabs cmpl (bad) loop test loopne stc movabs movsb mov sbb jle rorl (bad) rex.WR sbb fs or (bad) rex.WRXB add push and imul and incb cltd and jmpq mov cmpsb adc scas jmpq lock test ja enterq sbb (bad) sub mov mov (bad) lods (bad) mov test (bad) nop (bad) mov retq (bad) test xchg add (bad) and or pop cmp clc or outsb (bad) and (bad) cltd scas rex.WB mov and (bad) jne rex.XB test (bad) mov shlw loopne out cmp pushfq iret mov mov lea push and and nop pushfq sahf jns sbb pop sbb (bad) add (bad) clc xchg imul cmc rex.RB rex.RX ss add push sub out mov insb rex.WRB xchg xchg push lods clc sbb (bad) kmovw pop (bad) sub testb mov rex.X cmp adc cmp sub fwait or popq callq fidivr test sbb push (bad) lea shll sbb jo (bad) jae or imul jmpq add mov iret loope rex.WB jge idivl rex.WXB add mov (bad) cmp loop xchg cmp mov push sbb (bad) rex.WB (bad) sub rex.XB insb and and test push in (bad) cmc or cmp mov out (bad) jns (bad) rex.WB xor (bad) rcll mov insl jo (bad) (bad) jl fsts cmp repnz decl or adc xchg cmpsb sub add clc pop sbb pop outsl gs xor scas mov (bad) rex.RXB sub insl mov jge or cmp add jnp sbb cmovns rex.WRB sbb mov test mov and rex.X pop push rex loope lahf sbb or mov nop insl movabs sbb shr imul (bad) es out out rex.WB and outsl repz pushq je icebp mov mov jae mov adcl cmc mov nop jno cmp rex.XB or and (bad) and cwtl pop cmp rex.WB add xor pop fcoml adc cmp and mov xchg fstp sub sub rex.WB rex.RXB iret cmp (bad) mov (bad) callq mov rex.WRXB xor retq cmp (bad) clc rex.WB test sti push mov (bad) rex.W rex.WB and or mov loopne jle callq adc movabs xchg pop test sti jno cmp repz fist rex.X cmp jl rex.WB xor fdivrp movabs sub rex.WB adc test xchg mov movabs jno rex.WB rex.XB int cld fcmovbe pushq mov test or movsl (bad) sub lock pushq scas pop (bad) jge (bad) rex.WB std and gs cmp fmuls sub mov movabs (bad) sub rex.WRX rex.B rex.WB ja xor (bad) callq rex.RB retq (bad) xchg jne outsl ficompl cld (bad) cld sub scas (bad) add xchg rex.X jno imul rex.WB callq (bad) (bad) sbb movslq or inc mov idivq sbb frstor (bad) cmc test hlt pop imul (bad) jmpq punpckhbw sub rex.RB movabs data16 pushfq or (bad) movsl or mov rex.WRXB or rex.WRX rex.RX jrcxz xlat out rex.X push cmp mov jno add or pop frstor rex.WB (bad) cltd push int3 jns sbb callq jae (bad) push scas rcrb rex.RB mov rex.WRX rex.WR (bad) rex.WX sub movabs (bad) cmp sbb xor jp scas xchg mov mov xchg stos psubsw xchg xlat cmpsb (bad) mov (bad) pushq pushq outsl cmp pop callq (bad) js push (bad) rorl sub sbb rex.WRX (bad) xor fdivp rex.WRB add insl lods rex.W pushq xor and adc rex.W rex.WB jbe mov and (bad) je andb sbb ja cmp subl std or in stos mov test sub cmpsb or or and ds sbb mov stos ds (bad) and add mov addr32 xlat rex.XB sub addr32 pushq mov adc test out (bad) (bad) and rex.X sbb enterq pop push push test pop subb or rex.B cs rex.WB rex.RB jae rcr or (bad) sbb push or sbb push sbb fnsave add xor ja jne je sub fstpt (bad) in mov jmp adc outsl rex.WB in (bad) (bad) cmpsb rex.WB pop loop or sbb (bad) pop mov (bad) shrl hlt adc (bad) jns rex.WX out movabs out retq (bad) clc lret (bad) xchg jbe rex.WX retq sar rex.WRB rex.WB jle (bad) sbb sbb and rex.WRXB int3 fs or jae mov fmulp sub xchg insl in (bad) adc test (bad) and sub addr32 or cmp add jo int3 (bad) lahf mov int nop and xchg pop jp rex.X cmp push mov jp mov (bad) jne cmp (bad) lods rex.RX lods jle mov mov pop xchg and std (bad) movups test out sbb and xor rex.WB cmp lock pop fyl2x test xlat hlt (bad) addr32 scas xchg out rex.WB callq rex callq and push movabs pushfq ficoml fsubr movabs cltd callq add mov rex.R js xchg (bad) push callq jno sub add retq rex.WB or pop movl cmpsb xor and cs movabs sub jle mov jge rex.WB (bad) push gs jp rex.WB adc push callq cmp loope repz sti popfq adc cltd fisubl pushq pushfq cmc rex.WB xor and mov callq rex.WB imul xchg sub jrcxz mov or and add orl inc movabs adc rcr movabs movl xchg rex.RXB add push (bad) lea (bad) movabs retq xorb rex.WB imulb icebp pop mov (bad) jns rex push and rex.WB jne outsl xchg fisttp rex.WRX rex.R pop (bad) test sbb and rex.WR lods (bad) pop (bad) movslq in sub in push xchg ja rex.RX gs (bad) and es jp adc sbb adc (bad) iret pushq or js rclb out icebp cmp (bad) mov and xchg cmp (bad) int insb (bad) jns addr32 in xor xchg lea jo jbe fmuls jb in mov rex.WB leaveq xor add scas je rex.WR cmp and adc mull int repz (bad) pop (bad) sub movabs or rex sbb cli sub rex.RB out (bad) pop xchg xor rex.WB (bad) rex.X mov cmp or fcmovb clc test and rex.WB imul mulb sub test cmpsl sbb mull jne rolb fisub xor in cmp out and gs rex.R loop,pt rex.WB xor (bad) cmpsl rex.WB fwait xor mov fs xor cli adc rex.WX lret jnp fiadd fsubrl rex.W cmpl ficompl rex.WRB sub fwait pop (bad) xlat xor and popq xchg cli rex.WB sub pushq xchg loope pop lret rex.WXB hlt jnp push enterq cli popfq xchg out jge mov repnz lret jae lods mov add ja (bad) adc jbe outsl rex.X fcoms push in add push (bad) mov pop cld pop movabs jb sub mov icebp rex.RX rex.WR lret pushq retq pop jmpq cs and gs xchg rex test retq fs vmovq rex.WB xlat jg test rcrl or add (bad) and lret jno rex.WB rex.RX je stos cmp lea xor jrcxz rorb xchg movb mov rex.RX xchg cmp pushq (bad) rex.XB rol add fistpll xchg lret pop loop xchg (bad) push test jo addl (bad) repnz mov or sar jrcxz jnp pushfq sub lret loopne xchg pushq (bad) imul or (bad) in jle or jo rex.WB icebp loop rex.R rex.WB cmp add rex.WB std negl rex.WB add pop movslq movsl xchg or lods rex.WXB movabs or mov cmp xor stos rex.WX (bad) retq cltd sbb callq outsb (bad) pushq sub jge xchg rex.W add fisttpl pushq (bad) jp push mov (bad) fbld rex.WB flds add lahf mov lret adc mov sbb sarb mov jmp pop fisubrl pushq retq test testl rex.WB vmovapd sub xlat sub imul in jl cmp in cmp (bad) in decl movabs rex.WB pop mov callq jmpq (bad) rex.WB mov jb in xor rex.XB jmpq cmp cwtl addr32 js addr32 xor stos repz mov sub (bad) rex.WB (bad) mov scas rex.WB (bad) xchg rex.B sbb (bad) rex.WB pushfq out jae rex.WB rex.RB and sahf push cmp xchg rex.WB sbb test jae cmp cmp rex.WX mov and (bad) push (bad) sub pop push sbb and lock pop cmpsl rex.WRB (bad) rex.WRXB rex.WB rex.B mov sbb popfq int outsl lret pop stos (bad) ror sub rex.XB rex.WB xchg cmp (bad) stc sub adc test scas mov rex.WB push fisttp (bad) test add rex.RB cmc rex.WB sbb (bad) rex.WB data16 repnz and push rex.WB push sbb push (bad) (bad) cmpsb cwtl ror movsl retq (bad) jg int jmp add rolq out or stc add and adcq insb (bad) mov lahf pop (bad) cmpl jno (bad) adc xchg (bad) fs sub push pop and and (bad) jns or mov or rex.R sbb cmc rex.WX rex.WB adc lods in pop callq lret (bad) mov pop (bad) shlb sub (bad) rex.RXB and pop pop movsb cli jb rol push mov rex.WRX rcr add mov mulb js adc jle or sub fildll jno jrcxz xlat out stos or fcompl (bad) rex.RX (bad) sarl pushq scas rex.WB lock data16 (bad) insb outsl xchg xor pop mov inc movsl pushq or stos jle sbb sar xchg cli rex.RXB rex.RXB rex.R cmpsl js cmp movabs xchg and (bad) (bad) es jno mov push adc push addr32 rex.WRB popfq cmp mov jno sub addr32 out adc push outsb mov push outsb sub lret cmp stos xor pop lea jns pop (bad) xchg adc sarl in rex.RB pop mov or sti fsubs push movabs sub rex.WR addr32 in ja jns (bad) in enterq (bad) pop or adc (bad) mov or movabs mov (bad) (bad) fimull cwtl cmp cmp xchg mov rex.WRB cmp mov jp pushq mov xchg (bad) adc faddl jno xchg repnz (bad) cld xor (bad) push jmpq or sub add (bad) (bad) jae iret loopne cwtl popfq or sub adc add sub and rex.XB cs xor je test (bad) pop leaveq pushq sbb (bad) imul rex.X jp frstor ja (bad) sub xlat (bad) jae or pop and jbe movabs push cmp test movsl pushq lret mov sub add js adc sub rex.RXB in je (bad) rex.W rex.RX movsl imul pushq cmc and lea (bad) mov (bad) iret imul jbe pushq nop clc leaveq movabs push (bad) jns sbb pushq pop retq int3 (bad) enterq stos rex.WB add scas and rex.XB ss rex.B rex.W pushfq jp (bad) rorq adc cmp adc test or (bad) jmp movl pop addr32 (bad) test test xor ja and xchg (bad) std cmp lods icebp rex.R movabs mov (bad) rex.WXB movsl mov mov je sarb rex.RXB jns (bad) test fmull pop sbb mov xchg sub jo mov (bad) callq cmovnp sub rex.X notb cltd pushfq sub (bad) lret (bad) imul adc jle sbb and lods shr jno rex.WX rex.RX rex.W push ds push rex.RX or sbb mov js movsl stos mov std mov punpckhbw cld lods in fldenv sbb in cmp jmpq out mov add (bad) (bad) stc mov (bad) jl sbbl xchg sti insb mov xchg shll rex.R xor pop callq add rex.RXB xor jae hlt imul sbb shrd leaveq test (bad) mov and (bad) or xlat push xchg stos mov rex.RB test rex.WRX adc (bad) cmpsb popfq mov es rex.RXB sub and and iret pop fdivs xorl add ja jg rex.WXB or jmp pop test hlt rex.WB jo shld (bad) rex.WB lea leaveq sbb xlat int insl rex.X sub hlt fisttpl stos mov jp (bad) lahf mov mov outsl xchg (bad) icebp xchg callq iret imul (bad) popfq shl enterq clc (bad) jg push rolb movabs ja test sbb rorb mov xchg (bad) rcrb rex.WRB fdivl push and or mov cmpb movabs shr xchg (bad) jo (bad) jno mov mov push movabs rex.R leaveq adc xlat fist rex.WB cmp push (bad) jns mov lahf decl (bad) std rex.W rex.WX lret movabs rex fidivr callq cmp add rex.WB retq mov (bad) loopne (bad) movabs push rex.WB subb out insl adc rex.RXB rex.WB xchg (bad) mov orl mov loope mov (bad) out (bad) movabs lret mov xchg rex.WRXB rex.B or js rex.B rex.WR movabs rex.WRXB rex.XB movabs adc rex.WB incb rex.RXB es out loope rex.WXB (bad) pushq (bad) pop add adc mov or rex.W xchg in (bad) rex.R sar sub (bad) enterq jbe hlt or (bad) retq fsubs mov test shrd (bad) or rex.RX jns (bad) pop push loopne mov js outsl fdiv sbb in (bad) xor and lock pushq rex.WB fnstcw fisttp rex.WB rex.X ss rex.XB and leaveq xchg sub std loopne in and lods cmp push sub repz jbe mov pushq sbb repz and rex.WB enterq stos mov (bad) data16 clc pop sbb sbb xorl jo (bad) sbb rex.WB vrcpss xchg loope (bad) pop orl adc and (bad) rex.WB rex.RX (bad) sub std adc mov rex.WB (bad) mov mov scas loopne rex.WB rex.RX out test test mov stos (bad) outsb jno (bad) (bad) sub icebp rex.XB movabs mov lret pushq cmp movsb testl rex.WB jp adc lea sti rex.WB jp movabs rex.WRXB cmp movsl and out or clc or (bad) or pop test (bad) (bad) pop adc jg ds rex.WB gs xor rex.WB mov sbb retq mov pushq stos idiv movabs sbb rex.WB and cmp rex.XB and jb adc sub (bad) iret sub out sub in movsl fldcw jbe int or sub rex.WRX (bad) mov cmpsl adc es push lahf addr32 cmc enterq or xchg mov rex.WB rex.XB adc rorb push icebp pop mov pop pushq xchg push movsl mov pop ror adc lret fmulp push leaveq add jmpq fcompl add loop jle insl faddp and mov pop push jne,pt test scas mov jnp mov loop stos mov jns movsb or fwait or sbb cmp rex.WRXB stos callq mov movabs rex.WX or shr xor rex.RX push push mov xchg fldenv xor stos jo mov (bad) es test rex and push xchg lret pop adc out insb cmp and lret pop xor xchg movslq mov push cwtl (bad) (bad) jno cmp or fisubl mov xchg xor mov repnz xchg (bad) cld mov popfq (bad) (bad) jns movabs xchg movabs xchg and add jg rcrl jg (bad) sbb lret shrb ftst lret lods and lret add (bad) (bad) mov mov jnp adc mov pop lret rorb mov pop (bad) js xchg rex.WRX or clc rclb rex.WR pushq mov jno sub add stos (bad) sarb cli outsb retq rex.B out lods mov jnp (bad) rex.RXB add out ficom je loop cmpsl cwtl sub xchg adc mov push fdivrp (bad) cmpsb xor cmp and rol sub xchg mov loopne and pop push add jrcxz ss xor (bad) enterq mov push rex.WXB (bad) adc decl xor mov mov leaveq enterq xlat xor jrcxz pushq mov push imul (bad) (bad) fmuls (bad) rex.WRXB movsl pop add jrcxz (bad) adc pushfq mov mov orl push xchg movsb jns mov sbb or jg jp mov (bad) int cmp lret mov lahf xchg retq rorl mov push push pop rex.WRB mov sub movslq pop stos mov pop retq lret stos mov sbb clc (bad) push sbb (bad) callq vmulpd or xchg pushq js rex.X (bad) xchg (bad) sub icebp pop cmp gs and xchg pop adc adc addr32 (bad) (bad) fcoml jae iret lods out (bad) out mov (bad) outsb sbb cmpsl xchg cmp or sub (bad) (bad) (bad) mov test or rex.WR rex.WX xchg jmp adc outsb jge pop (bad) xor icebp outsl retq lods jmpq push sub pop mov xchg add sbb cmp pop icebp xor adc stos fstpt add push mov rex.WB xchg and sub in sub je xor jg rex.WB mov (bad) xor xchg movsb (bad) callq and adc or sbb xchg fcoml fcomp push rex.WB or rex.WB (bad) (bad) mov lock or rex.WB or fistpl jo xor lret rex.WB mov (bad) cmp gs jns jl sub fistl int3 int cmp rex.WRXB lahf test rex.WRB bnd mov in scas je fisubr push sub xchg (bad) pop movabs add sahf or popq pushfq rex.WB rex.WR add jns (bad) rex.WB xlat xchg loope (bad) push (bad) rex.WB sbb es retq movslq insb rex.WRXB rex.XB lock jns test push mov jb cmc cltd xor in xchg xor or js psubsw add mov test fnstsw or lods sbb (bad) adc sub lock sbb repnz data16 (bad) rex.WB fadds rex.WB rex.WRB rex.WR cmp rex cmp (bad) push jae std xchg cmpsb hlt (bad) mov xor cli (bad) movsl add xchg mov lahf lods adc jrcxz insb adc out fsubl negl sub mov mov cwtl pushq roll pop (bad) scas sbb movabs jne (bad) xor rex.WB rex.WRXB addl or es mov test imul mov in (bad) lods mov mov enterq mov xchg lret fildl mov sbb mov push mov or pop mov (bad) fist callq or movsl stos or (bad) (bad) (bad) or jbe mov fs and xorl push sub or or stc rex.WRB rex.WB retq (bad) push rex.WB stc push cmpsl (bad) jae or test adc mov and sbb and rex.WB sti (bad) fisub pop xchg push mov (bad) enterq sub pop (bad) int out cmp addr32 pushfq pushq jp mov sbb pushq in jo sub enterq enterq (bad) xor int sub (bad) rex.W rex.WRXB xchg mov (bad) in pushfq out (bad) push insl callq (bad) jle xor rex.WX rex rex.RX lret pop movsl int3 cmpsl or leaveq (bad) out iret and or push sbb xchg push jno adc jno pop (bad) or cmc (bad) cmp leaveq xor frstor jns rex.RX add mov stos outsl rorb in fsubl xchg rex.RX push mov addr32 rex.WB xor mov jbe fdivs in imul test (bad) pop mov pushq in stos movabs enterq rex.WX xchg and sub rex.WB orl js clc rex.WXB movb cli cmp sbb or test rex.WB movabs fiaddl (bad) ja sub js mov (bad) rex.WRB rorb (bad) rex.WRXB (bad) add movabs adc rex.RXB lods retq or retq nop mov rex.WRXB scas movabs add push rex.WRX xor test insb mov xor mov rex.WB (bad) xor jae std rex.WB rex.WRB (bad) out loopne xchg addr32 pop hlt rcrb imul or mov outsl sub sbb sub sub rorb and out test sub (bad) push fwait callq rex.WB callq sbb pop xorb add subl rex.WR jmpq adc rex.WB pushq xor or rex.RX mov and sbb jle cld xchg int3 (bad) stos addr32 or rclb cmp push fistp mov cs data16 movslq hlt (bad) rex.WB lea int push sbb lock insl and adc pushq loopne add pop sub retq sub pop xor loopne loope rex.X rex.WB callq rex.WX sub movsl xchg rex.WB xchg jl (bad) xor adc jmp in iret or pop rex.RB pop or rex.WB xor adc xchg pop sub std leaveq mov decl movabs sbb cmp rex.XB rex.W sub xor sbb push cwtl or (bad) loope xchg movabs lock ds adc rex.WB fwait mov mov test in stc rex.RX rex cmp xlat rex.WB test pop out enterq jae (bad) mov jo cmpsl callq outsb int loopne lock and std jrcxz and outsb push adc xchg push (bad) gs push roll mov rex.WRXB jnp jg rex.WB adc ror std out (bad) scas loope cwtl push push and pop or addr32 lret pushq pop mov (bad) (bad) and ds (bad) xchg mov and jp insb xor xchg fist jrcxz (bad) rex.WXB sbb sub rcll orl movabs sbb sub sbbl adc cmpsl int xchg hlt rcl pushq (bad) rex.WXB mov sbb loopne add push sti jbe jmp (bad) rex.WB mov pop (bad) cmpsb cmpl rex.WB mov sub rcl push mov movslq (bad) leaveq rex.WB sub pushq lcall add (bad) push (bad) sub stos or cmc vcvttpd2dqy pop mov (bad) incl push jns or fs insl sbb movb add rex.B rex.R pop scas je pop or clc repnz repz imul cmp cs mov (bad) rep vpor cmp and icebp fisttpl rex.WB callq lret es out rex.X insb rex.WRX mov add xlat xor pop shrb mov rex.WB fs mov enterq pop lods int3 (bad) and idivb (bad) lret rex.WB and or fisubrl outsl sahf cmp sbb xchg rex.WB cwtl xor xchg mov rex.RB pushq xchg rex.B movl stc xchg jae stos sar lea mov (bad) in jle sarl mov icebp sbb rex.WB test push xor mulb movsl rex.B jmp rex.WB loopne lret in xor insb sub fnop mov vpminub divps (bad) rex.X repz cmpsl addr32 jle rex.WB ror pop jl adc xchg movsb rex.WXB sub rex.WRB xchg or sub out stos stc push (bad) (bad) rex.WB rex.X pop mov outsb lret (bad) retq sub push or repz xor mov mov adc ficoml nop repnz sub (bad) fdivl rex.WRXB pushfq mov movabs ss (bad) xor fistpll jmp or add mov sub (bad) movsb stos insb sbb imul rex.WX rex.WRB ss lods mov add mov rorl or outsb fs fistpl movabs rex.WRX rex.WRB push addr32 sub (bad) in popfq xor mov rex.XB rex.WX mul movabs rex.RX test sub rex.R rcl jg test sbb orl (bad) sub fisub out fisubrl pop (bad) testl cmp or jno pushq fsub or push or or mov fs mov movsl mul popfq addr32 push and pushq (bad) rex.WRXB sub popfq jns es cmc rex.WB iret (bad) or outsb adc rex.WRX (bad) rolb movabs and subl pop rex.WXB imul es test rex.WR add icebp cmp xchg xor rex.WRB rex.WB in rex.WRX repnz rex.WB cmpsb (bad) jno (bad) rex.WRXB xchg rex.WX pop je movabs xor enterq in push jp out rex.WB add rex.WB in xchg lods mov ja (bad) and jbe rex.WB rex.WRX in sub in out rex.WB movsb xchg sub scas int3 rex.WB mov push (bad) cwtl stos movsl (bad) rex.WB sbb faddl mov (bad) mov andl mov sbb ss jo pop pop cmpsb jrcxz (bad) (bad) (bad) rex.WB ds jns or fstpt mov rex.WXB mov rex.WXB xor loopne sub rcl adc mov test int3 fdivl iret (bad) fidivrl or outsb adc mov add jl rex.WB movsl outsb (bad) xchg mov movslq mov xchg hlt movslq cli mov pop (bad) push rex.WR hlt mov cwtl rex.XB mov fs rex.WRX rex.WB jp mov (bad) (bad) loop push int iret mov stos mov pop std cltd in lea fwait mov or pushq (bad) rex.RB adc test add cli rolb rex.WB xlat jo sbb xchg jb push in rex.WB insb rex.R sbb mov mull popfq xor pop jno rex.B imul outsl test rex.WB rex.WR (bad) pop pushq movabs jl rex.WB and rex.WB cltd outsl shr and xchg or fimul rex.X (bad) jmp fmuls adc mov rex.RB rex.WRX sbb xchg callq sub movsb mov jrcxz cmp mov movslq mov push movsl xor push stc rex.WB cld out sbb sub mov movabs lahf js or leaveq loopne insb test (bad) rol loop (bad) (bad) fistpll loope rex.WRB rex.WB ss hlt mov (bad) int3 (bad) xchg fcoms out imul movslq push jae test mov pushq fwait pop jns add mov loop fisubl pop int push sbb in lods and roll xchg rex.WB (bad) sub push out (bad) jmpq (bad) cmp jge push cwtl (bad) cli cs or jmpq xor or xor retq and mov movabs (bad) lods fs adc jmpq es pop ds or (bad) out jle fmull sub and jae,pt xchg and nop xchg jb mov cmp xchg jmp rex.XB (bad) (bad) lret push rcr pop movabs test rex.W sub icebp xchg pop (bad) or mov in rex.RX xor rcrl jl (bad) xchg rex.WRX movsl add rex.RX mov mov adc cli test mov sbb and movabs movabs adc jns out rex.RXB jno (bad) repz jge cmpsb xchg stc enterq enterq adc mov (bad) xor (bad) or (bad) sub mull pushq insl pop (bad) fsubs add mov cwtl (bad) and pop or adc fsubs outsl test mov (bad) mov hlt rex.RXB or (bad) rex.W cmp add rex.RXB fwait rex.WXB rex.B fs jns pop fadds movabs rex.XB or (bad) lret xchg adc enterq xchg mov jbe push fsubs insb andl (bad) sub mov rex.RXB cmc nop mov pop xor pushq or push rex.WX loop lods pushq mov (bad) rex.W sbb (bad) stos test sub test pushfq (bad) (bad) (bad) addl outsl lock cwtl gs sub rex.WRXB test sbb clc push add rex.WX rex.RXB xchg (bad) (bad) fldcw add xor (bad) rex.XB data16 push adc adc idivb callq and test mov movsb mov push subl cmp in pushq mov sub push xchg imul jnp xor mov jp jnp mov adc rex.WRXB sbb out fxch or hlt movslq mov insl lahf pop pop xor push fadds rex.WR (bad) xchg enterq mov imul sub cmp rex.WR jno sub mov frstor rex.RX pop cs es mulb or movslq rex.WR testb rex.WR mov pop jge mov mov sub xlat xchg stos cmp cmp notb xchg xor fwait cmp mov jno sub and cwtl (bad) xor mov mov rex.WB stc adc rex.WX rex.WB je pushq rex.WB (bad) sbb add sbb shrb rex.WB addr32 pushq cmpsl or push mov out xchg mov jrcxz out (bad) fisubl sahf xor out (bad) lock iret jo and adc fsts rex.WB rex.WRXB (bad) cs push xor imul push rorb rex.WB fwait sbb retq (bad) jl test int3 jne sarl leaveq (bad) or rex.XB rex.X (bad) xor and fwait clc jae cmpsb xor mov rex.WB cmp sbb pushq ljmp (bad) cmp pop movabs (bad) sbb movabs loopne (bad) (bad) and xor movslq cmp fildll xor (bad) push and clc lret jne callq sub xchg add rex.XB jb rex.RXB test out (bad) xchg fiadd jge xchg fiaddl movabs rex.WB (bad) in push mov rex.WRX push mov pop or imul mov sub mov rex.W enterq stc rex.WB cltd out jne sub xor adc outsb jl (bad) sti cmp jrcxz int rex.WRXB add test (bad) repnz pop (bad) rclb movsb movsl rex.WB in jo mov pop and xchg xchg add or mov mov or xchg jne sbb mov cmp add and xor cmpsl xchg rex.WB and scas sub (bad) jbe jmpq movsb rex.W movabs mov jg outsl rex.WB scas in add sub outsb sbb insl pop add (bad) sbb out pop test movabs (bad) cld cmp movabs xchg sub mov andq jge outsl pop pushq test fs mov rex.XB fsub sub rex.WB rex.WX (bad) insb cld cli mov cmp rex.WB (bad) (bad) jmpq rex.WB fnsave fisttp (bad) jge xor jae stos test xchg int (bad) adc sub rex.WRX sbb maskmovq (bad) rex.WRXB mov rex.W rolq clc rex.WB sbb icebp and js je nop lods leaveq insl sub or (bad) sub ss (bad) stos mov push cmpl xchg mov rex.WR (bad) movsl or int3 rex.WX rex.WB mov lahf cltd mov xchg pop (bad) sbb lret (bad) mov adc addr32 push mov cwtl scas (bad) sbb in rex.RB push std rex.WB mov cmp stos (bad) pop xchg rcr sbb jge (bad) rcr (bad) loopne movabs cmp sub jns mov rex.WX rex.WB adc rex.RXB jne (bad) in adc pop and rex.WB or jne jrcxz xor sub pop lock out pushfq outsl or rex.WX (bad) or cmp (bad) fs sub out cwtl sub out pushfq mov pushfq add cmp pushq jrcxz rolb or jo jp pop (bad) jae mov rex.WB jnp mov cmpsb cmp imul mov pushfq rex.RXB rex.WB adc cmpsb rex.XB rex.WB adc roll ljmp movabs pop mov sbb jg cmp movabs or lret jno adc xor xor pop (bad) mov push jb rex.RB scas mov (bad) sub push adc add or push movsb mov out mov ss xchg fidivl sarb cmp mov movabs cmp (bad) loop xchg stc xor xchg notb movabs cmc retq stos jle outsl sub cmp outsb pop xor mov cld push movabs jns stos imul pop retq mov (bad) nop lahf xor jns outsl add jp push xlat (bad) pop rcrb xor sbbl add push pushq (bad) or movl pop jnp push (bad) jne rex.WB in xchg lret jno out (bad) loopne rex.WB idivb sti rex.RXB rex.WB xchg or leaveq sub (bad) sub add ror gs xchg test out cmp loopne retq sbb jmpq or mov mov xchg cmp (bad) pop loope jrcxz shrb sub pop lahf mov (bad) rex.R (bad) xchg pop movsl adc or (bad) rol shrb push leaveq cmpsl xor mov cmpsb push jl sbb (bad) rex.RX rex.WB xor icebp rex.WB scas sbb pop sub cmp push (bad) iret pushq popfq outsl cwtl or lret mov (bad) out jnp out (bad) (bad) rex.WB ss lods jmp jbe and js mov cmpsl rex.WB js add es ds rex.RX (bad) rex.XB rex.WB and (bad) jp rex.WB and rex.X gs pop and lock pop add (bad) loop pushfq mov sarb mov rex.WB sub mov rex.WB pushfq sub or gs mov mov (bad) fcmovnu xchg mov std out xor cmp rex.WB sbb mov retq push sbb push jmp sahf push jno cs rex.R rex.RB or cmp cmp in int3 decb pushq xor rolb int3 loope popfq stos adc mov (bad) jns mov test rex.RXB ss (bad) leaveq jns and rex.RX cmpsb rex.B rex.WX xchg jmpq (bad) cmp and sub rex.RX fstps or es out frstor adc add fidiv pop rex.WXB test sbb or mov imul mov push cmp retq fstpl rex.RXB rex.RB out and ja rex.WR mov movsb adc outsb movslq stos lret sub mov or addr32 callq (bad) js int3 cli sub rex.RB xchg not rex.RX rex.WRX pushq (bad) adc mov insl add or stos cltd mov test orl xor loope xchg pop insb (bad) mov (bad) and int3 pop mov xor and outsb mov jmp pop sub repnz movabs jnp fs loope jno (bad) or mov push adc callq push adc adc rex.WB (bad) movd movabs cmp (bad) callq rex.XB rorb in movabs pushfq (bad) (bad) push mov fldt sub imul icebp mov cltd pop xchg (bad) mov stc mov pop xchg sub cmp jge sbb sahf jmp and jnp pop pushfq mov rcrb push rex.WRB sub push pop out xor rex.XB add inc pop or (bad) rex.WB or rex.WB rex.RXB rex.WRXB (bad) test (bad) rex.WRB ja sub es orb rex.WRXB mov (bad) out mov sub and jb (bad) movsb mov xor xchg mov and imul and push mov loopne rex.RXB sub rex.RXB es xchg add or push cmc stos add pushfq fwait (bad) add xor rex.B and mov callq add rex.WXB adc lret adc adc jle or sub lods outsb xor push rex.B setl xchg xor push or rex.WXB data16 lods (bad) (bad) jle rex.WRXB adc rex.RXB rex.WXB or adc fcomp popq rex.RX sub (bad) (bad) (bad) or rcrb jg xchg jnp andl mov mov mov fs or jl notb xor sahf mov cmp mov push rex.RB repnz sbb popfq sub shrb fsubs xlat (bad) rex.X pop rex.WXB or push (bad) int3 pushfq mov or outsl add (bad) sub fisubl mov or (bad) pushq rex.XB outsl mov ja cmp (bad) sub pushq pop (bad) pop out enterq pop icebp nop cmp jrcxz cwtl xchg notl cmp rex.XB add jbe (bad) jmp (bad) rex.XB or mov xchg mov cmp sub data16 addr32 push mov and sub (bad) movabs mov fistpll ss and pop rex.RX (bad) rex.WRXB add mov jmpq iret data16 icebp and subb (bad) add rcrl out pop rcrb push rclb rex.WX jb cltd (bad) jbe add movabs movabs push push mov sub (bad) addr32 sbb jle sub xor (bad) in xchg rex.WX sbb mov out (bad) test sub xor jns mov mov sub adc loope push movabs cmp xor movsl mov je loope lahf sub sbb (bad) pop push jl mov test mov adc cwtl add and (bad) jnp movsb mov xchg (bad) (bad) xchg jo cmp (bad) shr add adc pop add and sbb mov (bad) jb sub (bad) (bad) or (bad) fnop pop cmpsb movsb cmpsl sub (bad) out shrl sahf mov xchg es movabs pop vcvtpd2dqx repnz xchg hlt pop (bad) mov notl popfq jo pop insl jne lods mov cmpsb or cmp (bad) lret clc pop lret movabs (bad) or movsl pushfq jg rex.WB and pop rex.B rex.WRB mov jo fldl (bad) cmpsb adc rex.WRB leaveq cmp sub and mov mov (bad) fcoms add (bad) movslq jns fimull out incl addr32 pop movsl rex.WXB sub imul push fldl (bad) adc rex.WB addr32 xchg iret sbb lahf es popfq (bad) and add test insb rex.WB xchg mov clc scas jb push divb mov test rex.RX or nop sbb mov rex.XB xchg rex.WX (bad) fcmovnb push mov pushq push and (bad) (bad) repz and or adc rex.R mov popfq pop movabs xchg movslq jae test lods add and js rex.R xlat lahf or mov push add pushfq rex.WB sbb addr32 jrcxz (bad) cmp iret lea rex.WB gs mov xchg (bad) fistl cmpsl push (bad) cmp mov cli push movabs or sbb lock cmp sub (bad) rorb cmp or test nop jne int pop test rex.WXB sbb pop pushfq test cltd cmp rex.WRXB and xchg fmull pop adc xchg (bad) sub or addr32 out jmpq sub scas push adc in rcrl sahf (bad) clc rex.B icebp (bad) (bad) stos jrcxz or cmp jns fidiv rex.WB sti out mov lea imul pop sub shrl rex.WB ja stc pop push movabs (bad) mov pop sub (bad) ffree lahf ss rex.RX pushq pop mov lret (bad) add rorl push retq lods ja (bad) xchg rex.WB lea test (bad) loope (bad) pavgb xor rex.WXB fwait out (bad) and out fisubl rex.WB adc movq cmp (bad) retq (bad) sbb movabs int xor lret mov pop xchg push sub rex.WB pop (bad) fidivr adc jle mov test loopne fs push mov scas (bad) out rex.RX sahf mov callq lret cmp pop subq rex.X add sub movabs and frstor (bad) xor fcoms rex.WB sub pop xchg jge loope (bad) or pushq mov out insb movabs sbb pop (bad) repz (bad) mov pushq cs cmp xlat movsl add and fnstcw rex.WB repz movabs pop sbb rex.WB mov rex.RX xor jbe jp xor cld pushq clc sub mov movsl mov stc popfq idivb (bad) icebp outsb rex.WB add cmp fcomps rex.WX add es xlat and lods adc push sub hlt jge push sub pushq movabs mov push rex.WR repz imul rex.WB rex.WXB cmpsl rex.WRXB (bad) xchg sbb nop out add movaps mov adc insl or lods js movabs mov (bad) outsb fisubrl sbb sbb sub movabs sub (bad) mov imul rex.WB rex.WB cmpsb xchg push bswap rex.WRXB mov adc rex.RB sub push (bad) rex.R lea fimull push (bad) cmpsl (bad) rex.RX rex.WXB adc ja rex.WRB mov or out frstor (bad) and jp and jrcxz adc rex.X push cld fdivs rex.WRX pop (bad) push (bad) mov lahf sbb stos sub rex.WX rex.WB fxam (bad) xor rex.WRB xchg xchg xrelease pop add (bad) rex.WRXB (bad) (bad) xchg (bad) or pushq (bad) pop sbb mov movsb xor scas adc sbb push stos xor xchg (bad) rex.W mov cwtl jg (bad) lret or movabs push mov imull fmuls sub (bad) and jns xchg enterq imul rex.X fild push jnp callq cmp add iret xchg push fcoms test fistp mov or maxps ss shlb (bad) out js jmpq stos cmp mov push push or adc imul movsl (bad) addr32 fbstp jnp cmp int3 adc cli jmpq sbb movsb (bad) or sub push test adc and mov sub leaveq nop sbb xor mov sbb sub jno rex.WXB (bad) enterq ss adc jb,pn xor rex.RX cmpsb gs scas jno shlb (bad) rex.WRB jnp mull pop sbb and rex (bad) push mov rcrb fdivs pop add rex.RXB sbb es movabs rex.RX insb rex.X xchg sub cmp (bad) (bad) mov movabs (bad) mov fisttpl outsb lret rex.WB movabs add lea (bad) rex xchg mov (bad) leaveq rex.XB and ja imul rcrb adc pop (bad) in cmp (bad) (bad) (bad) rex.WB imulb or callq fcmovnb (bad) (bad) outsb rex.WRB rex.WRX xor xchg rex.WB and (bad) callq mov rex.WRXB rex.WB out mov mov pushq cmp (bad) int push (bad) (bad) and rex.WRB cmp (bad) sub rex.WRX rex.WB movzwl adc rex.B (bad) out movabs pop xor addr32 push mov test add mov and or clc mov and test rex.WXB pop pop rex.WB pushq adc (bad) mov imul xchg xchg (bad) (bad) stc rcrl iret test sbb xchg gs sub int je insb (bad) rex.WB xchg or pop int3 mov jge push xor mov popfq rex.WB and xchg and rex.WB rex.WRXB (bad) pushfq sbb mov cmc fimul pop clc movabs jp xor ja jl (bad) test cmp rex.XB outsl lahf ror hlt shrb jns mov (bad) rex.WRXB cld sub rex.RX jg and iret adc cmp sub jnp jb popfq (bad) and rcrq cs andl adc imul cmp rex.WB fstps imull xchg cmpb pop add (bad) lret rex.WB test jbe add test mov cld callq rcrl icebp push mov (bad) imul sbb insb and lods xchg (bad) rex.RB (bad) (bad) xchg movabs (bad) (bad) sti rcr rex.WRB adc xchg movb rex.WB mov rex.WB pushq jp jrcxz iret jle (bad) rex.RX test add stos pop (bad) sub pop xchg int stc sub sbb mov pop movabs jge adc rex.WR retq pop xchg in jmpq (bad) rex.WX out nop push popfq or (bad) sub clc lret and cwtl (bad) pop iret and (bad) stos mov jmpq vcvtps2pd or (bad) pushq hlt pop movabs fsubr addr32 adc gs mov cmp cli movsb mov rex.WB (bad) movabs sub pushq adc (bad) mov nop lods movsb (bad) rex.WB push (bad) xchg addr32 or add rex.B mov and imul outsl mov rex.WB scas rex.WX cmp push sub mov test pushfq sub test ja cmp fisubl sub mov adc sbb (bad) jmpq (bad) lods (bad) or scas fiaddl and rex.WB pop cmp movsb rorb adc mov sub mov jb rcrb rcrb (bad) mov lods push movsl callq push sub (bad) xchg adc insb loopne rex.WB mov sbb jmpq rcrq int out rex.WB or pushq (bad) retq (bad) ja mov and fmull rex.WB out fild rex.R rex.WB sub (bad) cmp pushq test out sbb cmp fsubrs cmp es mov cli jl movabs xchg xor jp rex.RB rex.WB rex.RX cmp cwtl fmull or pushq pop pop jne rex.X clc (bad) add cmp sbb stos rex.WB xor rorb mov sub (bad) pop loopne out cmp mov mov xor movsl addl rex.WB movsb mov cmp pop and cltd rex.WB fimull movsb movabs (bad) jns es fs in mov fdivs rex.WB (bad) (bad) jb rex.WB rcr test (bad) jl stos mov xchg outsb pop and out (bad) sub xchg loop cmpsl orb jns (bad) jo pop cmp or xchg push in loop jmp add xor mov repz rex.WB rex.WXB rex.XB movabs push clc push rex.R addr32 rex.W rolb xchg jno lret jl cmp out insl push pop mov rex.WB movabs cmpsb mov out rex.WB jp or sub stos lea (bad) sbb jmp ss je jmp jle cmp xor add jae jns movsb sahf rclb cmp (bad) (bad) retq cmp mov rep mov mov (bad) int jmp movabs out jbe add (bad) sub push flds outsl mov imul (bad) adc add mov rex.X out xchg xor rex.B (bad) pushq mov xchg ja notb or fdiv fidiv mov or mov rcrb jae sub rol ss rex.W mov rex.RXB out xchg pushq xor sahf lret pop mov (bad) test cmp mov sub scas stos (bad) test sub fsub sub addr32 (bad) loopne xchg sub test (bad) sub jle xchg enterq sub cmp or sbbb add addr32 movsl fisub fadds xchg movslq pop xor sub jns pop fwait (bad) xor xchg and push addr32 test lods scas pop mov xchg fsubs rex.WX rex.WB pop iret rex mov rex.XB sub or lods fucomp lahf jb (bad) cmp rex.WB push mov movabs mov and sub (bad) xor pop rex.X (bad) and rex.WB fadds rex.WRXB or mov (bad) rex.WRX fs cmp (bad) or rorl lret cmp rex.WRXB pushq xlat insb xchg mov leaveq push xor jge leaveq ss mov cmp fnsave mov or js or cmp sub cs sub add mov rex.WB (bad) fs sbb jge mov push pushfq jb (bad) pop mov out mov fstl (bad) rex.WB rex.X xor stc xchg rex.WB xchg lods outsb jb adc rex.WB movabs jns lods mov rex.WB fnop rex (bad) adc jo mov rex.WB imulb (bad) rex.WB adc mov mov jge or xor xchg cmp fwait cmpsb jp,pt lods pop sbb mov std out in rex.WX jmpq rex.WRX adc setnp (bad) (bad) pop retq push push rex.RB push ss pushq pushfq rex.WXB rex.WX jne outsl rcrl sbb test (bad) and or jrcxz psubb fsubrp out orl test loope adc and jno js fisubrl rex.WB cs (bad) rex.RXB imulb rex.X rex.WR and mov ja insb data16 sub push cmp (bad) rex.RB addr32 callq mov push pop or rex.WB rex.XB ss sbb pushfq fidivr add getsec sub insl and rex.WXB out pop or sub (bad) adc add pushq pop test test and xchg fdivs lret rex.WB (bad) scas rex.WR rex.WRB pushq pop xor and xchg scas (bad) loope jnp,pt xchg add jno test icebp movabs or sub (bad) rex.WX (bad) mov loopne loope adc jne xchg and cmp adcb rex.RX fdivrl mov jp sbb leaveq (bad) pop push imul sub mov jo adc (bad) xor test cli movsb (bad) lret decl rex.RXB outsb outsb rex.XB pop (bad) mov idivl add push sub int3 pop movabs movslq jns movabs rolb mov fdivr movabs jrcxz (bad) lret fdivrl in pop mov push decl lock fwait lahf cmp insl rex.WB popfq stc add mov jno mov movsl stos out retq pop adc andl sub (bad) movabs or pushq icebp pop sbb ja xchg rex.WRXB mov jrcxz push pop pop sub test jl xor ljmp (bad) movabs vmulps (bad) mov scas rex and js jmpq mov (bad) rex.WRX pop (bad) pop sahf callq movsb (bad) push adc (bad) (bad) loopne sbb (bad) pushfq sub cmp jae push pop or rex.WB mov sahf add jns in sarb mov cltd sti cmpl imul and out mov lods pushfq imul or cmp (bad) jl push (bad) fcompl enterq rex.WXB popfq add (bad) and movsb rex.W rclb pop sbb pop cmpb add clc jle mov fmuls mov (bad) push sti sub (bad) adc cmc adc mov (bad) (bad) fldenv fiadd movslq cs (bad) popfq int3 imul (bad) rex.WRB (bad) pop (bad) (bad) rex.WRX rex.WR (bad) rex.XB movsl jb or std (bad) rex.WB xlat hlt pop jmp jbe sub cmpsb sub int3 lcall adc mov mov and jmpq in cmp mov outsb rex.RB (bad) mov and or sub jle and ss sub xchg rex.R or (bad) or fildl out stos xor lret lea shrb mov repz sbb sbb mov rex.RX stc jmpq jne add fnstcw or notl syscall (bad) roll xchg (bad) in (bad) jp gs je rex.X sbb scas scas adc stos mov jns data16 (bad) std jge lret add loopne stos jb mov jmp jne sub rex rex.WRXB notl cltd push out test cmp sub (bad) adc mov outsl (bad) ds pop push rex.XB gs push roll repz pushfq xchg movabs lret jo in lock shlb rex.WXB mov stos pushq push and insl scas or add mov fimull xchg mov mov out imul test jp movabs pop rex.X rex.WB xchg xchg cmp cltd std sub leaveq gs fiaddl fwait scas (bad) pop loop rex.WB (bad) pop rex.WB xchg and lods rex.WRB jmpq (bad) outsl fmull (bad) (bad) and cli addr32 movsl sub jl rex.WB shrb jb rex.WRXB pop fldt movabs push adc lods cmp callq jmp andl mov xorl shlb callq out push pushfq pop sbb (bad) rex.WB lahf pop rex.WRX rex.W jg sbb cli imul sub mov fs (bad) ficompl pop (bad) fstpl (bad) (bad) xlat xchg int3 cmp rex.WXB mov jno lods xchg mov jle hlt rex.W rex.WB pushfq sbb (bad) jae (bad) movsl (bad) movsb sub mov pop or lret adc xlat rex.R rcrl jmp rex.WB enterq movslq fiaddl and rex.WRXB adc adc enterq ja mov (bad) rex.W xor adc xchg mov push rex.RXB shlb mov enterq scas fs insb xlat mov adc lss scas and pop xor add pop cli xchg adc rex.WB in sarl (bad) xchg push (bad) rex.WB sub imul xchg rex.WRB jp mov data16 test gs adc push add rex.R rex.RB adc cmp (bad) sub pop sbb xchg mov mov rex.WB cwtl pop out pop (bad) rex.WR add or and jnp cltd cmc mov andl pop lret push adc pop out sub (bad) mov rorq or insl fstpl loop mov movslq pop push outsb xor (bad) (bad) rex.WB or sbb movabs xchg pop stos out imul fucom cli pop sbb xchg prefetcht1 (bad) push (bad) callq loope pop retq mov fbld rex.WB jnp scas rex.WXB or mov test retq out mov lcall mov xchg and or mov pushq jge mov rex.WX or cld xor (bad) jge cltd or scas leaveq (bad) xchg (bad) sub clc xor pop fiaddl rex.R (bad) rex.RXB repnz (bad) rcr push mov rex.WB rex.WRB mov pop (bad) mov pop rex.WB xchg mul gs repz pop rex.WB pop rex.WXB movl fcomps sub push enterq push shrl jmpq rcrb or jo mov xchg rex.WRB imul (bad) push rex.RXB data16 and popfq xor or add adc gs test pop (bad) (bad) (bad) rex.RX (bad) push loope mov or std mov or addr32 jle jrcxz adcb (bad) mov icebp sub stc xchg orb adc cmp adc cli in cld fdivrl or cmc sbb (bad) (bad) or cmp (bad) adc pop (bad) fdivs notl xchg add mov sub clc std xor adc (bad) mov mov adc or rex.W or lcall jae (bad) movabs pop rex.XB int3 cmp repnz (bad) jrcxz retq movsl rex.WB jno adcb fisubrl pushfq movabs sbb (bad) cmp movslq jp sub movslq (bad) or loope callq (bad) mov outsl push jmpq or sbb out sub movabs mov enterq cmp (bad) or fisub imul xor jle jno fnsetpm(287 repz rex mov sbb adc or mov rex.WX add cwtl outsb xchg leaveq xchg loop (bad) rex.WB push loopne cmp std (bad) xor rex.R sbb mov pop rex.WB pushq movsl lret mov add rclq stos jns cmp rex.WB mov movslq test or xor fwait pushq jl (bad) movabs sub outsb callq rex.W adc iret lods xchg and (bad) mov rex mov mov (bad) push rex.RB mov loope jne,pn (bad) pushq or gs stc sub ds rex.WX cmp test loope movslq adc stos sbb or xchg xor fcom push pop leaveq cmp (bad) shlb jl sub in push (bad) jle jmpq mov jno mov lods rex.RXB imul adc add jl xlat hlt (bad) test es add add scas or mov popfq mov rex.WB rex.WRXB pop test lahf pop sub rex.WRB ja sbb (bad) cltd rex.WB lock and repz jmpq push or (bad) rex.WB mov (bad) popfq rex.WXB lock pop loop mov sub jmpq cmp jo sti divb imul int and add (bad) (bad) cmp (bad) repnz cltd (bad) nop add rex.WB rex.RXB rex.WXB mov movabs (bad) xchg push ss adc jle or sti pop lock (bad) cwtl pop and sub (bad) mov (bad) sbb rex.R cmc cmpsl cmp pushfq adc sub mov (bad) std movabs sbbb push and out sub std stc rex.WB (bad) out add movabs mov rex.WB rex.X rex.RX xchg movabs jmpq pushq mov (bad) add lret jge movabs mov xor rex.WB and mov mov (bad) cmp push or add rex.WB xlat rex.WR rex.WX movsl add xchg rex.WB sub (bad) rex.WB (bad) or mov xchg and in cmp outsb imul (bad) fisub iret callq adc fdiv loop cmp pop cmp retq out rorl decq or insb mov rex.WB es out repz fs pushq add sub jl movsb rex.WB or xchg callq stos (bad) mov mov or (bad) mov lods rex.WXB rcrl pop rex.XB or pushq mull cltd test shlb cmp outsb add hlt movabs rex.WB movslq cmp add xchg adc sbbl or push mov movsl (bad) mov out xor mov rex.WRB or jb shr lods and pop jo and rex.WB std xchg test xchg cmp rex.RXB or jmpq push push outsb mov ficompl sbb in or (bad) adc push jmp fxch rex.WB rex.RX frstor rex.WB or (bad) push xchg lcall cmpb rex.WX (bad) rex.X test add push add (bad) (bad) rex.WB cmc jne fdivl out ja cmp (bad) rex.WB lods in movabs pushfq pop jo rex.WB imul mov insl push pop (bad) (bad) out shl xchg callq rex.WB xchg (bad) cmp rex.WB cwtl leaveq push movabs fimull cmp movslq (bad) nop ss movabs rex.W rex.WB rex.XB nop rex.WB movabs (bad) pop jbe cmc (bad) xchg and js (bad) pop mov and loope rex.W movabs rex.WB in push mov push ds jbe imul sbb pop clc nop mov mov (bad) mov pushw xchg (bad) or adc xchg out jle cltd enterq (bad) mov (bad) cmp adc xor sbb (bad) int xchg pop and sub shlb cmp pop and insb cwtl in addr32 mov and cmovl add (bad) retq jb roll or stc repnz cmp rex.XB or cmpsb movslq mov cmp test rex.R outsb callq mov push (bad) rex.X fldl rex.WB rex.WRX rex.B rex.WB rex.WXB sbb adc pushfq rex imulb rex.WB and movsl pop jnp rex.W out leaveq xor mov callq enterq cmp data16 pop (bad) push sbb push sti js sub jrcxz pop sub test decb push jle es in stc and rex.WB stos jb out cmp sarl xchg loope cmp int or rex.WX push add push (bad) pop cltd adc movabs fwait cmp sub nop rex.WX fwait out stos xor movabs hlt pop imul rex.WXB xor xchg insb or and out movabs pushq mov nop rex rex.RXB rex.WB pushfq movslq imul push push xor push (bad) je (bad) lods testb pop lods push sbb jno test rex.WB rex.X mov (bad) jl test mov mov ja in mov addr32 adc cmp or scas shrl insl adc (bad) mov (bad) stc rex.WB pop andl sub cmp push mov push imulb (bad) rex.WRB decb mov shlb addr32 imul pop jg xchg jo mov push xor and movslq mov pop xchg and mov sub xchg test movabs rex.WXB cltd (bad) cltd rex.WX rex.WB shll and mov movsb test in and xor cmpsl rex.RXB rex.X movabs pop xlat lods mulb rex.RX adc stos pop rex.WR rex.RB pop std (bad) movslq and rex.WB rex.XB xlat sub leaveq (bad) rex.WB jp loop in iret rex.WB faddl xor jns lods outsb fdivs rcll adc test lods leaveq rcll xor movsl lods sub xchg mov xor data16 rex.WX loop movlps push mov icebp rex sbbq lret mov sbb adc rex.WB mov pop mov xchg test fmull rcrl (bad) rex.RX mov push adc rex.RB and jg rex.WRX mov loop js popfq and addr32 fs movsb lods cmp jne xchg push rex.WB repnz sub rex.WRXB or push jno (bad) orl and lret mov adc push xor sub xor push insb in or stos notb loopne pop xchg xor push add cmp xlat stos retq test rex.WB mov mov sub cmp test rex.WB push cmp (bad) movabs (bad) in callq rex.WRX (bad) fmuls fcom fsubrs xchg add fcomps mov pop xor mov int3 pushq mov sarb adc scas sub rex.WX cmp jo pop (bad) imul and rex.R retq and sbb fcompl mov sub rex.WB adc scas fwait sbb addl test gs (bad) lret mov outsb sub (bad) movabs retq jno fldl div cmpsb loope enterq sub add or (bad) or add mov enterq or retq ja push retq (bad) push fisttp cmpsl imul pop rex.WR sub xor movabs leaveq callq sbb rex.WB xor sbb rex.WRXB mov or callq rex.WRB xor mov cmc mov xor (bad) rex.WB pop mov sbb cmp (bad) xchg addr32 rex.WRB mov (bad) jp xchg xchg push pop mov sub cmpsl shlb cmp fcomps rex.RXB push pop pop mov repz retq mov jge rex.WB rex.RB rex.WB cmp add lock rex.WB rex.RXB jns sub xchg (bad) fstpt push rex.WB out and (bad) out rex.RX mov and add jge pushq xchg shlb std rcrb outsb cmp (bad) mov push sub sbb stos xchg rex.WB rcr jne xor jl and test addr32 pop pop test lret pop cmpsl insb (bad) (bad) adc repz rcrl ds and xchg pop jg add iret and cmp mov ds rex.WXB rex.WB jb jg popfq mov pop adc movabs lea hlt jrcxz out gs imul cmp xor xchg rex.X addr32 xlat shll (bad) push hlt (bad) push out xchg xor out rex.WR jnp pop int3 and addr32 lret (bad) fisubr movabs (bad) rex.WB rex.R cmpsl mov cld imul test sub mov xchg gs xchg rex.WB out cmp adc mov retq cmpsl (bad) sti sahf lock sbb movslq jg loop fmuls fs stos (bad) loopne stc out sti rclb rex.WB pop sbb (bad) rex.XB rex.WB xchg jmp jb mov callq mov repnz rex.WB rex.WR insb mov rex.RX pushfq mov mov in or jge mov fmul or xchg (bad) mov push pop sub retq fimull stc cmpsl fild orb sti or pop ficomp jns jb int (bad) jno mov cli movabs rex.W sbb xchg in shr shl xchg jo int3 sbb mov rex.R xchg movslq jmpq xchg sub sahf add cmp fdivrl jbe or rex.RB pop rex.RXB pop push add test fisub sahf movabs cli rex.WB clc jns pop (bad) hlt (bad) out cmp sahf pop pop adcl jne push (bad) data16 and sahf adc add lahf (bad) push push rex.WB jle insb out ja rex.WB rex.WRXB callq rex.WB popfq js hlt jle rex.WB rolb rex.WB rex.WR (bad) xchg leaveq ss cltd pop rcl shrb push outsl outsb pop lret mov cmp icebp xor js rex.WR rex.WRXB sbb pushfq outsb pop (bad) (bad) sbb cmc movsl sub fmul rex.WR sbb leaveq lret (bad) and adc callq pop in jmpq insb jo js rex.WB rex.WXB sub and jmp ficoml stos mov rex.WB shlb add pop in int int3 cs or jno (bad) xor mov movabs mov movsl jb pop xchg addr32 mov adcl mov movabs loope stc rex.B test rex.WB mov mov rex.WXB mov jnp mov rex.WRB insb (bad) add sub rex.RX lret rex.WR (bad) mov movabs mov xor mov or adc js jmp rex.WRB fcmove stos sbb pushq test js fldl rex.WB mov (bad) nop jle (bad) sub sub test stos sub xlat cltd add cmp lret scas rex.WRB mov xor xor push push js movabs jno mov add sar mov (bad) rex.W in cltd andl xor xchg add callq mov push xchg rex.WB int cld retq mov movsb loop rex.WB and pushq xchg mov (bad) rex.WB xchg jbe movslq notb lods (bad) mov pop mov mov add (bad) cmpsb popfq fisubl xor mov rex.WRB fdivs pop lahf jle lea rex.W cmovns rex.WRB rex.WB pop (bad) mov mov outsl lods sbb (bad) cmpsl pushq rex.WB movabs (bad) js jrcxz out (bad) mov sbb mov (bad) (bad) rex.XB xchg (bad) jg rex.WB rex.X rex fcmovu rex.WB in rex.RB adc rex.XB popq and enterq fisub (bad) int3 push mov xchg (bad) gs add in mov jb add mov popfq (bad) shll cltd rolb add loop pop lea xlat mov sbb sub (bad) std movsl fxch loope sahf xchg nop int leaveq (bad) rex.WB sub sbb cmp (bad) xchg movsb xchg scas adc out stos xchg addr32 sbb adc mov rcrb out (bad) sub cs push lret pushq or pop (bad) (bad) rex.WB jp adc or rex.RX xor mov rex.WB cmpsb fmuls rex.WRXB movabs xlat mov or (bad) addr32 gs orl mov sub add test pop imul jge mov loopne outsl mov push xchg (bad) pop rex.RX rex.XB jge rex.WRB outsl pop mov es (bad) rex.WB movabs in scas hlt sbb rex.RX mov rex.WB rex.WX and (bad) outsb (bad) int pop movabs mov (bad) sub xchg or rex.WB test sub (bad) test (bad) (bad) icebp cmp callq lea sbb lock pop pushq sbb rex.WRB mov add xchg int pushq jp (bad) clc and pushq cmp testb shrq or adc (bad) jo jb rex.WB outsb mov (bad) mov cmp leaveq jle jo jp rex.WRB sub cld or cwtl jno mov std (bad) imul jrcxz addl rex.RB adc jge and sub idivb mov out jp data16 clc jo rex.WRB rex.RXB rex.WR (bad) cmpsl rex.XB ss ds xchg ja rorl cs rex.WRXB and mov mov pop rex.WB enterq test rex.WB sbb add xchg sub (bad) jg sbb cltd out rex.WRB rex.B push mov sarl rex.RB jnp adc sahf enterq (bad) fild (bad) push test and pushq in mov rex.RXB push xor stos xor insb in sub push int adc es and rex.WB xor (bad) rcrq lret je mov callq rex.WXB jp (bad) rcrl imul (bad) jo fisubr (bad) ja stos pop rex.WR callq movsb ficoml jmpq push in rex.WB in mov cltd (bad) cmp fwait rex.XB ficom insb movabs add xchg rex.RXB je sub jle cltd mov jo cmp mov (bad) movsb fnsave mov xor add (bad) adc xor jo cwtl xor faddl adc (bad) (bad) rex.R sbb lods (bad) jno lahf push xchg and or add cmp mov pop and or mov shr (bad) push rex.WXB jns xchg sub jne sbb add fdivs (bad) lock repz (bad) popfq sbb cmpsl imul xor pop push xchg xor cwtl and test mov movabs xchg add fldl movabs adc (bad) xchg or fs shrb cwtl jno test jmp movabs stc (bad) addr32 leaveq xchg je mov sub (bad) jne sti fisttpll vfrczps stos scas add jrcxz int3 fistp cld rex.WB sti cwtl pushq (bad) rex.WB in mov mov rex.WB rex.B rex.WRB mov (bad) in sbb movsl callq pop cmpsb rex.WRX cmpsl cs (bad) pop rex.WB or jmp add (bad) (bad) movsq pushfq (bad) insb rex.WB sub jns std rcrb pop rex data16 cmp movabs push xor rex.WX rex.WRB rorb push (bad) lea mov adc or (bad) shrl rex.R and mov fisubrl movabs ficomp pop push pop addr32 or jle incb mov movabs push cmp out cmp rex.B jo cmpsl clc push mov mov fsubs fidivr mov jrcxz jge dec movabs cmp push lock leaveq push add cli mov xchg mov pushq jne (bad) xlat repnz xor imul and rex.WRXB mov fstpt rex.XB sbb jmp xor sub pop xor pop mov and out mov rex.WXB mov or roll stc xchg mov int rex.B xor movabs (bad) (bad) cld cmp lea (bad) or nop xor jo (bad) cmp (bad) movslq je xchg pop (bad) jae scas out movsb stos lret adc rex pop loope (bad) adc and mov pushq in sub jnp loopne lea icebp ja (bad) rex.WB jrcxz sub sti andb adcl icebp stc je movabs pop enterq pushq adcl sbb mov test cmp (bad) add rex.RXB pop rex.RXB push stos cmp xor adc and test or rex.W rex.WX shl xor insl sbb mov js test rex.R ja xchg scas mov insl (bad) rex.XB jl rex.RX out rex.WB lret cmp (bad) fisubrl cmp fsubrs cmc push mov mov or out cmpsb pushfq push mov mov cmp sbb iret addr32 cs vpaddq enterq xor jmp xor decl and cwtl cs xor pop rex.WXB movsb lea mov push cmp scas vsqrtsd xor sub data16 mov fwait rex.WR nop pop or mov sub movabs xchg enterq stos cmovns nop (bad) sub fidivl es xchg jae rex.WRXB fist loope (bad) lahf and enterq xor rex.RB rex.WR rex.RX (bad) js (bad) cs int3 test cmpsb adc movabs mov sbb test out test sbb rex.RXB sbb or pop outsl enterq (bad) push add mov push rex.RX xchg icebp jmpq mov mov imul je or jp rex.RB mov (bad) (bad) lret out cmc mov (bad) rex.R rex.WB cltd mov lea sub in (bad) sub cmpsl push mov (bad) stos rex.WB mov add test iret rex.WB xchg mov fstpl rcrb rex.WB ds rclb (bad) pop (bad) test mov and add pushfq movsb jg mov (bad) and mov gs out xchg lods cli rex.WRXB or rex.RB cwtl and rex.WB rex.W ficoml btc mov leaveq mov fbstp mov jmpq movsb (bad) je test pop (bad) test rex.WB iret clc pop pop push (bad) mov adc xchg addl xor lret (bad) movsb orl adc rex.WB (bad) (bad) in jae cwtl xor (bad) rex.WB pushfq ss push movabs and mov sub or rex.RB rex.WXB sub fbld (bad) rex.WB (bad) nop cli sbb cmp xor leaveq andl jge lods mov rex.WB shrl rex.WB js cmpsl sti mov mov fwait mov sbb leaveq push xchg jle or test out rex.RXB push rex.R fmuls sbb pop insl (bad) test jl xchg (bad) es mov rcll lods sub stos jne mov rex.RX jl loopne (bad) xchg mov (bad) (bad) rex.WB xchg rcrl sub pop xchg retq push jl in sbb js rex.WB rex.WXB pushfq xchg push icebp rex.WB imul pushq sbb rex.X mov mov pop (bad) adc std (bad) mov pushfq lret add rex.WB pop mov test bndldx or mov rex.RX jmpq jl outsl repnz add sub or sub mov (bad) rex.WB (bad) and sbb xchg rex.WB xor mov mov repnz mov add mov mov jmp rex.WRXB test mov and rex.X pop rex.RB je rol jb and std (bad) mov mov sbb (bad) jrcxz test (bad) rex.WRB js xlat rex.WRB jmpq out frstor cmp cmc fwait js (bad) cmp push test xchg pushq rex.W rex.B and push pop ja (bad) fdivrl lock fstp cmp rex.WXB rex.WB es movslq add sbb (bad) rex.WB rex.X (bad) cltd callq addr32 rex.B loope sbb (bad) or jmpq movabs pop (bad) rex.XB jbe imul (bad) fistpll test mov gs (bad) sbb and (bad) adc mov es movabs rex.WB sbb mov inc in jbe rex.XB or and callq (bad) push mov sbb sbb (bad) movabs (bad) add sbb rex.RX xor rex.XB iret jmp mov xchg (bad) (bad) mov push in mov rcrl loope add loopne xchg rex.WRXB rex.WB ss adc leaveq pop cmp xchg lods lret sbb rex.WR rex.WB (bad) retq mov fisub xchg rex.WB data16 fldenv stos add (bad) nop sbb imull rex.WB cmc xchg add movsl cli sarl sbb jns hlt mov push lret movabs loopne cmp rex.W (bad) (bad) add add mov jmpq sub out mov rex.WRB push rex.RX cltd xor testl (bad) (bad) or xor sbb rex.WX rex.WB ds in andl (bad) and rex.WB loop (bad) sub pop imul std movabs lods sub mov test rex.WB add rex.XB callq stc rex.R rex.WB (bad) lret mov enterq jge (bad) cmp cmpsl pop and xchg xor xchg (bad) std fsts cmpsl (bad) rex.WRX (bad) (bad) rex rex.WXB (bad) (bad) (bad) (bad) fimul imul pushq add lock rex.WR rex.XB sub loop movsl or mov xchg rex.WB sti insb enterq cmc loope movsl decl xor outsb out lahf test add (bad) pop mov outsl jl mov ror and rex.WB popfq stos jb mov rex.WB gs rex.WRX (bad) xlat (bad) pop rex.RXB callq rex rex.WB outsb rex.R rex.WR rex.WB sub rex.XB adc cmp leaveq jge movabs test xchg cmp (bad) and rex.WB insb stc movabs ds rex.XB repz rex.WB out pop rex.WRX rex.WR stc ss movsl rex.R jne (bad) mov add rex.WB rex.WRX lret push (bad) stos (bad) push pop add push (bad) cwtl or add callq mov pop (bad) or mov retq and (bad) lea in xchg fmull jae cmp push pop push (bad) jmp rex.WB retq and lock fld movabs mov rex.WRXB leaveq mov fisubrl movabs out stc xor mov xchg cmpl cmp jle xor adc adc lahf (bad) div rex.RB loope stos mov repnz mov int3 pop cmpsb fldenv lret jrcxz lea (bad) xlat fs rex.RX test subb test jle jno xor mov push adc sbb movabs or int lea mov jnp test or test popfq pushfq test sbb fcompl rex.WB fistl rex.XB lret scas mov pop loopne and cmp xor gs xchg jbe (bad) retq mov (bad) adc xchg lret callq pop jns rex.WB rex.X pushq lahf and rex.WB imul mov sub repnz jmpq and and (bad) rex.WB adc mov rex.WXB movabs rex.W xchg (bad) rex.XB iret sub or jns sub add out mov xchg scas push cmp cmpsl xor (bad) (bad) data16 (bad) sub mov rex.WX rex.WB insb (bad) pushq add (bad) xor scas lea sbb jo enterq mov in adc xchg or cmpl and outsl and jnp cmp rex.WB (bad) xchg (bad) fs sbb pushq ss mov pop (bad) loopne scas outsb fldenv jbe (bad) stc mov test js rex.WRB hlt push rex.WXB repz mov movabs cwtl mov (bad) adc scas add pop push adc jmpq mov (bad) lea cmp (bad) pushq and test jg loope rex.X rex (bad) jb push push xlat in pushq mov iret (bad) adc rex.WRXB or jns or rex.WRB mov xor (bad) cmpsb or rex.B (bad) pop push (bad) sub (bad) movabs rex.WRXB (bad) rex.WB lods sbb and hlt jae decl lock pushq popfq and pop iret mov (bad) push push movabs or cltd out repnz (bad) (bad) rex.WRX mov (bad) cmp rex.RX movabs movabs pop mov push push push movabs (bad) cmp rex.RX (bad) mov (bad) mov pop (bad) rex.RXB js retq movabs movabs (bad) lret lcall fwait (bad) rex.WRB insl mov rex.WRB ss movabs (bad) out (bad) loop mov sub lock sbb in (bad) movsl int3 adc xchg xor js push mov movsb rex.WB adc xor fwait xchg rex.WB insl add mov sub cmp sub and mov fiadd adc cmp clc (bad) rex.WB rcrb adc test movabs movabs fnsave sbb callq pop loope movabs jp sub (bad) (bad) mov (bad) jo callq (bad) jl or leaveq (bad) (bad) imul rex.RXB rex.WXB pop sub fldl rex.WXB adc lahf fistpll pop pushq rex.XB insl xor push mov jge xor rex.WB mov adc jmpq loopne rex.WB and adc xlat push jne mov in rex.WB ljmp (bad) xor sub rorl orb shll jns notl cmpsb push jrcxz or jmpq push and and jrcxz rex.WX out rex.WR (bad) rex.WB outsb pushq sub (bad) or rex.WB and xchg mov xchg sub rex.WXB and lods rex.WRX rex.WX rex adc subl sub rclb mov jl mov movabs ds out int (bad) cmc (bad) cli adc cltd jg mov pop push and cld cs push add rex.WB rex.WXB push fwait std test mulb out (bad) repnz jp int3 insl or cli mov and out rex.WB fs adc push xor mov in fldt rex.WXB or outsl rex.WRXB mov (bad) out cmp adc data16 lret rex.WB cmp gs and mov callq or pushq outsb sbb ss pop rex.WB stos sub cltd and jge jbe pushq (bad) pop rex sahf lret jns xchg rex.WB push imul (bad) lea (bad) sub jns and adc repz add (bad) (bad) sahf addl pop sub lahf mov add rclb (bad) rex.B mov or rol cmp pushq and sar add rex.R addr32 (bad) rcl lods popfq mov rex.R (bad) rex.WR repnz jbe adc xor rex.WR sub pop mov movsl mov rex.WX movsb jle insl mov mov jno xor jne shrl pushq adc movabs jl cld movabs (bad) scas adc mov mov xor (bad) lret fild sbb sub rex.WRB xchg movabs add (bad) rex.RXB push addr32 (bad) xchg lcall xor sbb pop pop and cmp imul pop rex.X lods rex.RX rex.R test sti sub lret rex.WB add mov or and cli sub sub xor (bad) frstor lahf test stos cmp fldcw pop std stos adc shr (bad) sbb rex.WXB pop mov pop out movabs outsb or movabs test xor or popfq adc unpckhps mov (bad) (bad) jno out cmp callq mov int (bad) mov divl fisubrl or pop rex.RB cmp mov sub pop (bad) movabs fadds add fxch mov rex.WB lock xchg xorl xchg cmp sbb sub in pop add nop and repz (bad) sbb mov (bad) cmpsb callq cltd fisttpl jg or pop (bad) jp and rex.WB mov (bad) ja rex.WB cmp movslq test stos pop jo (bad) pop mov add rex.X repnz scas (bad) mov mov (bad) jl jmp and sti jns ffreep rex.WB fwait xchg xchg jmpq mov gs pop shl and (bad) and pop mov sub repnz pop imulb push xchg jp pop and jrcxz xor or cmp movslq jae cs and jmp (bad) or sub retq jle pushq rex.R (bad) push and push and int3 mov and std pop adc pop iret rex.WB sub sub mov movabs lea pushq push callq fldt xor and lret push mov fimul pop fdiv lea and xlat or sbb rex.WB (bad) jne (bad) subb pop or or sbb stos rex.WB retq xchg fsubrl pushq mov (bad) xor imul mov (bad) lret sub adc push sub and cli in pop and add clc mov (bad) (bad) (bad) (bad) clc in cli and xor leaveq sbb (bad) (bad) mov lret retq cmc cwtl rex.WB sbb push fnstcw (bad) mov rex.WRXB jg rex.W rex.WB cmp movabs (bad) and push sbb jmpq es mov push test and mov sub xchg mov pop and clc movabs xchg or stos rex.X rex.RX sbb mov add out rex.WX rex.WB (bad) jo rex.WRXB cmpsl and int3 mov push loopne (bad) mov movabs cmpsl stos add cltd cld iret movabs orl pop or movslq jmpq clc movabs cmpsl jo push jns fwait rex.WB xchg (bad) addr32 test sbb loopne insl adc lods push (bad) insb movabs sub stos rex.RXB in rex.WRB rex nop or rex.X rex.WB repnz test mov lods mov rex.WB sarb rex.WRB lret mov (bad) sbb movabs rex.WR or push ds sub in (bad) xchg xchg cmp and pushfq xchg cmp scas xchg mov mov outsb pop pop mov xchg sbb cmp xorb cmpl rex.WB rex.WRXB mov fdivrs jno add out movsl (bad) pop or and int cmc pushq or push ss sub movabs pop int cmp rex.WRXB rex.R rex.XB mov xchg notb jmp out shlb ja pushq rex.RXB movsl clc bswap addr32 popfq (bad) test cmp mov fmuls (bad) mov push jecxz out xchg rex.WB rex.WRB rex.WB repz mov imul rex.WB rex.W lret and rex.WB ja lock lods rex.WX adc rex.WB (bad) roll mov mov add int3 lahf (bad) rcl pop (bad) (bad) mov out es (bad) sub stos (bad) pop mov and sub pushq sbb vmovaps leaveq movslq jp rorb or outsl push mov push rclb cli jrcxz rex.RB pop sub fnstsw faddl pop (bad) xchg idivl cmpsl (bad) pop lret rcrb jle or mov (bad) sbb push rex.RX hlt xor pop imul rex.RXB (bad) negl imul (bad) lods movabs mov mov mov sub or (bad) jg cmpsb jge cmc xchg fcmovnbe cltd mov imul mov sbb movsb addr32 mov rex.WRXB or adc movabs xlat movsb xchg push insl fbstp (bad) (bad) addr32 and movabs jnp rex.WRB lock push outsl movabs orb or std popfq (bad) (bad) sub addl (bad) cmp divps rex.RX lock pop xor sub mov js sub mov out mov movabs mov mov fwait (bad) subl xchg jp out mov (bad) js xor mov or xchg mov callq popfq sub sti push jbe mov and cmp (bad) (bad) rex.RX orl sarb (bad) cmc rex.RXB insl cmpsb (bad) and adcl (bad) sbb test xchg jmpq push cs (bad) dec pop (bad) cwtl and jno mov push and rex.WB movabs jg mov sbb rex.X rex.WX rex.WRB (bad) (bad) (bad) stos rorl rex.RX fstps xlat xor cmovl rex.WB ds push mov xor jne rex.WRXB rex.XB rex.WB mov rex.W addq push mov pop (bad) movabs adc xor roll outsb rex.WB vpmaxsw (bad) repnz (bad) rex.WR (bad) rex.WB sbbl pop (bad) xchg rorl nop rex.WB roll retq adc callq sahf mov pop (bad) rex.WB rex.RXB or cmp xor fstps lods loopne,pt mov ss loop jo repz bnd ficoml rex.WB jae (bad) scas gs addr32 fldl jne mov jno sahf (bad) adc push repnz xor (bad) cwtl shll movabs int or pushfq rex.WB mov repz sbb jb (bad) pop pushfq rex.WB add out rcrb lahf rex.WB sbb xor (bad) out int3 rcrl mov pushq jmpq push jbe adc (bad) nop xchg sub jp callq jnp rex.WXB leaveq shrl xor or pushfq mov rex.WB insb or xchg (bad) imul int3 clc and icebp xchg sbb jnp mov mov insl add cmp retq rex.WB ss fs mov rex.WR sub pushq mov js movabs push fwait (bad) push or loope adcl sbb rex.RX mov ficom mov xchg jmpq ds fisubrl add rex.WB (bad) (bad) lods rex.WB jno jmpq retq cmp callq xchg cmc pop cmp or jmp es ds pop rorl scas mov out rex.WB int rex.WB rex.RXB mov rex.WB jb sbb xor mov and cmp push mov or mov adc jo scas push insl rcl xchg fist callq push rex.WB clc repz loop ja rex.WB fcmove xor and sti rex.WB sub and rex.WB gs (bad) fild xchg or callq (bad) in add enterq test imul mov pop outsb addr32 adc add (bad) test adc (bad) push movsb xlat xchg lret in add js imul rex.X clc (bad) sub xor rex.X xor xchg (bad) callq pop mov cmc cli in push xchg (bad) std (bad) mov lret nop sub (bad) jae leaveq xlat in stos int3 lods (bad) sub mov rex.X jge (bad) outsl mov adc rex.WX jge (bad) sbb cmpsl callq fiadd mov xchg int mov fwait add fs pop push lods out mov jae leaveq or push sub jns ffree (bad) add stos jle xor mov rex.B hlt fsubr fs mov xor mov mov rcrl fdivrp test rorb int insb imul mov sub mov (bad) rex.XB xchg (bad) testl jl sub fcoms rex.RXB es mov int3 jne (bad) jns xchg adcl stos out adc loopne mov cmpsb fidivl rex.B and rex cwtl ss xchg mov sub fwait xor or jns frstor mov (bad) std jmp movabs cmpsb movabs mov xor pushq rex.WR rex.WRB jno int3 or icebp (bad) nop sarb mov sbb lret rex.WRB repz cmp pop rcrb pop gs and cwtl (bad) movsb (bad) rex.RB jmp mov rex.RB rex.RB scas mov rex.WR popq out out scas (bad) out or gs callq cld mov (bad) cmc loopne stc mov ds (bad) (bad) (bad) xchg (bad) jbe rex.WRXB mov add je mov (bad) jmpq jnp mov mov jnp and in (bad) mov mov in xor hlt clc (bad) cld (bad) (bad) gs divl stos rex.WB xchg addr32 rex.RB push rex.WB pushq mov xchg (bad) rex.WB rex.X (bad) jp push sbb movsl add xchg lods rex.WX pushq (bad) push jns adc out (bad) (bad) jo rex.WX rex.WB rex.WRXB sbb or xchg test cmc out loope xchg (bad) mov mov sbb jns rex.WB add std fst je roll leaveq rex.WB rex.RX mov and stos xor loope movsl insl int3 or cltd pop or mov rex.RXB out sub (bad) xchg rex.WRX xor pop enterq fidiv (bad) rex.XB (bad) je imul xchg lret sub cli vmovupd or rex.WB repnz mov je rex.WB movsb (bad) iret xchg push or jle and (bad) sar (bad) rex.WB xor callq mov add push (bad) pushq mov sub xchg rex.WB or (bad) (bad) jmp xor (bad) pushq fcomip sti nop (bad) rex.WXB rex.W shrl pushq stos rex.WB jns mov rex.WB jp sub pop and (bad) adc in outsl xchg cmp adc jnp mov add jge insl rex.X addr32 xchg xchg or rex.B xchg sti (bad) addr32 adc adcl (bad) rex rex.WB cs insl mov (bad) xchg rex.WB test movsb fwait outsb lea icebp in sahf jge xor (bad) (bad) lret std rex.WB gs cmp (bad) pop rex.WRB rex.WB fisubr jns add xchg xchg rex.WR rex.RX and xchg push int3 (bad) clc addr32 mov mov clc movsb fisub mov pushq incl mov xchg rex.WRXB mov rex.WB mov pop or sbb cmpsl push rclb (bad) (bad) add clc loopne ja or sbbl test movsb sub and rex.RB mov (bad) mov sub rex.R rex.WB rex (bad) int3 add mov adc pushq enterq and sub mov fcmovnb pop outsl (bad) ja out es cmp test int3 popfq push mov movabs mov sub rex.XB or adc jg mov js mov pop and rex.XB rex.WX shl stos (bad) xor jmp scas shrb xchg retq sub rolb push out (bad) xor imul in mov (bad) add mov xor sar mov sub push (bad) cli std callq and pop flds data16 cmp movslq lods push pop mov rex.RB or jmpq movabs xor sub pop shrb enterq xor mov (bad) sti (bad) rex.W rex.RB fs (bad) rex.B (bad) stos vmovdqa rex.RXB fwait mov xchg repz pop (bad) movabs xor adc cltd and sbb lret sbb addr32 (bad) out pop in repnz (bad) scas rolb rex.RXB rex.RXB rex.XB add rex.WB data16 popfq fistpl mov lea movslq cld and movabs addl out cmpsb rex.WXB xor (bad) rex.XB rex.WB mov icebp push sbb pushq in clc int push lods repz mov rex.WB std jmpq or outsl imul (bad) nop sub mov int3 fwait mov (bad) (bad) mov cli pop rex.X (bad) push adc test (bad) xor (bad) rex.WB add xor test (bad) add rex.R (bad) std and xchg rex.WR (bad) lret addr32 bt clc out sub icebp sbb jne test rex.WB int (bad) pop ja xorl rex.WB jmp xchg rex.WB rex.W rex.X push jle retq add mov jge pop xchg imul shrb mov cltd lret mov xor jle sub rex.WXB rex.WB or sbb rex.WB rex.WR cwtl nop movsb mov (bad) sarl and cmp int retq and idivl in and cld pop rex.WB rex.WRX rex.W cvtpi2ps movabs or mov movabs jg push xchg rex.WB repnz in sub or rex.WRB rex.WB cmp data16 mov (bad) jae int rorb adc test mov and rex.WB jmp cmpsb hlt xlat sti movsl pushq mov and pushfq callq icebp shrl rex.R xor mov out lods xlat fildl retq callq (bad) rex.WRXB pop out lret lock adcb icebp mov or or loop pop jg pop xor push adc clc sbb and xchg mov push data16 and mov jle sarl rex.XB out sub sub out rex.X mov fstpt pushq jle push add sbb rex.W fs callq (bad) cmpsb (bad) sahf sub and rex.WXB xlat (bad) rorl jp movsb xchg (bad) cmp mov (bad) popfq xchg sar addr32 jnp xorps callq pushfq push in xchg rex.WXB mov in flds out (bad) jge sahf fs test pushq test xchg lahf sub sti rex.WR push mov (bad) out movsb repz lret (bad) in (bad) insl jge fs xchg cmp movsl mov jl mov movabs or loop setle pop (bad) cmpsb flds rex.RX mov mov mov imul or insb out or addr32 xchg xchg js (bad) jle in (bad) rex.W enterq pop pop xchg nop mul shrl cmp je movsl rclb lods fildll pop imul movslq rex.R int3 sbb sarb cmp or mov or mov rex.R jge sbb out and fs out mov or lret rex.XB and xchg callq adc pushq xor cmp (bad) sbb rex.XB push mov jb fidivr pop push rex.XB add rex.R mov adc jmp movslq (bad) xchg mov add add jmpq ljmp and jno cwtl retq mov sahf movabs fs jge jmpq icebp roll sbb cmpsb lock (bad) sbb and in out test xchg adc stos fcompl xlat mov and jno fstps (bad) (bad) mov jl jnp cmp and movabs cmp xchg popfq rex.W xbeginq in je rex.B stc mov lods or jnp rcr iret mov (bad) mov mov jmp adcl add jmp imul jmpq lret rex.B mov cmp in (bad) imul sbb jge rex.WXB (bad) sub sub mov out xor cmp add rex.XB rex.RB out loop es insb sub sbb cltd insb and xchg xor pop movabs test flds mov add cmp cld rex.WB stc jl and retq push cmpsb push rex.WB rex.WB cmp rex.WB sub rex.WX lret lret sub addr32 sbbl or rex rex.WB xchg (bad) xchg jnp mov movabs and stos rex.X pop jmpq (bad) data16 mov xchg mov ja (bad) mov jne rex.WB clc or adc rex.WRX or rex.WXB rex.WB lock mov jnp mov pop and jb (bad) (bad) rex.WB movabs (bad) mov cs cld and xchg mov rex.WB movabs cmc adc cld (bad) movabs notl (bad) jmp rex.RB adc jge imul jo and (bad) rex.WB push mov rex.X mov cs jo movsb (bad) rex movabs mov loopne (bad) push jrcxz (bad) in hlt and sti (bad) pop (bad) (bad) sub rcll mov cmc (bad) popfq rex.XB xchg rex.W pop mov lret rex.WB adc pop push push movabs rex.B rex.WB rex.WR rex.WRXB (bad) rex.RX nop rex.WB rex.WRB pop (bad) or rex.WB jnp rex.WB xchg sub push push mov test (bad) xchg rex.X rex.WXB rex.WR push and test adc sub lods or js (bad) mov jno movabs loopne cmc mov out fmuls (bad) and (bad) jns push xchg int3 cld xchg rex.WB fcomi push sbb ss pop (bad) (bad) (bad) in fnstenv and loope sub sahf mov rex.WB rex adc icebp xchg outsb sub hlt roll mov jnp lods ds cmp xchg mov movabs jp mov add in loop sub sti xor rex.XB (bad) sbb lret push sub jns in rex.WB lock (bad) adc jae cmp rex.RX (bad) and loope callq mov rex.WB data16 enterq callq sub push shrb mov rex.WB add pop and cmp sbb xchg mov push and or rex.WB jnp mov and lea negl out rex.WB fisub out (bad) (bad) or (bad) xor movabs xor loopne jrcxz pop movabs movsb pushq lret push and insb nopl rex.WB movsb nop xor add movabs and (bad) mov xor (bad) fmull rex.B es rex.RXB and rex.WX test (bad) mov rex.X orl add xchg repz sub (bad) fsubrs repnz rex.WB xchg and push xlat add mov push out adc and in add mov lock lea mov nop je in rex.WB (bad) or pop xchg stc out insl push sub pushq fldt (bad) sub rex.XB rex.RB adc mov rex.WRB (bad) rex.WXB mov adc or rex.WB adc scas sub rex.WRB sbb movabs (bad) cmc jmpq int3 (bad) xchg sub in loop rex.WRX adc mov jmpq stc test mov sub push (bad) mov imul or xchg insb add popfq xor jae mov adc (bad) cs pushq xchg mov (bad) mov (bad) rex.W rex.WB or and jae rex.RX pop and xchg add (bad) pop cltd enterq movslq adc (bad) sub ficomp pop loopne test ja (bad) (bad) (bad) xor out xchg fisttpll scas mov sbb mov rex.RB rex.WB jmp in (bad) (bad) fwait sub scas sbb rex.WB cbtw (bad) movabs retq sub movabs movsb movabs rex.XB es rex.WXB mov jle js sub or (bad) mov (bad) repz (bad) rex.XB xchg lret fs or loop rex.WB jp scas (bad) jmp and mov rex.XB movabs add stos sub leaveq jg sahf cmp int jge pop callq (bad) ror fistp (bad) test mov and mov add (bad) cwtl ds xchg push mov out (bad) rex.WB mov jnp roll loope (bad) rex.WRB rex.R stc rex.RXB rex.WB rex.WRB orl cltd rex.WRXB imul callq rex.WB or sub (bad) stos push push mov adc xchg (bad) or rex.WB icebp (bad) mov sub je xchg adc xchg addr32 (bad) xchg cmp test and sbb enterq xor pop out rex.B or rex.WB (bad) loope setge (bad) data16 (bad) int cmp (bad) and scas movabs sbb or (bad) lock leaveq mov test int imul (bad) fild cmp ja (bad) rex.WB mov sti loop test mov push rex.WXB xor rex.WB or (bad) and or cmp pop cltd lock fiadd add pop mov callq (bad) insl rex.WB push lret or mov rex.WB rex.WRXB xchg jmpq sahf and (bad) rex.R and (bad) movl (bad) mov mov movabs jl mov mov or (bad) stos jl int3 rex.WB js xor xor rex.W rex.WB sbb jrcxz (bad) jp rex.RX (bad) or xchg pushfq pop rex.W jbe sub rex.WB (bad) sub addr32 (bad) icebp ja or cmc jno add or out (bad) outsb shrd adc fnstcw (bad) loop adc sbb mov push and shl rcl movabs rex.WRX int3 pop cli test rex.WRB push addr32 (bad) mov jmpq hlt cmpsl movabs out (bad) xchg rex.RX rex.B (bad) int cmp sahf imul xor pop mov insl rex.WB js cld mov (bad) rex.WB mov sbb enterq jmp jge out mov push xor (bad) sbb es stos rex.WX xchg rex.RX jmp popfq (bad) enterq rex.WXB jl add retq (bad) pop push es or mov mov rorb iret (bad) rex.X cmp movabs mov outsl insb loopne,pt mov test ss rex.RX mov cmpsb adc cli cmp mov jmpq cmpsl or fadds adc rex.RX mov xlat data16 rex.X rex.WB pushq adcl je rex.WB ds pushq mov movsl mov loope cmp imul add jnp jne callq (bad) rex.WX push in rex.WB adc jno or mov rex.X out movaps or leaveq sarl fiaddl jne rex.WB rex.WRXB in push jl sub cmpsb cmp stc mov int3 pushq cltd rex.WB mov (bad) xrelease lahf rex.RX rex.WR rex.RX fstps imul in xor jno callq loopne rex.WRXB rex.WRXB callq push (bad) rex.WB (bad) mov movabs pop pop rex.W xor rex.WR mov rex.WB movabs rorl jne rex.XB rex.WB push jmpq rex.WRXB stos mov movabs (bad) rex.WRB rex.WB jge test (bad) mov jg and xchg (bad) adc cmp add cs xor (bad) cmpsl popfq sub pop fisubl (bad) pop jno mov or xor mov pushq rex.W fidivl (bad) fs rex.X rex.WB rex.R in ja (bad) loopne rex.RX sub je rex.WB data16 shrb (bad) leaveq movslq iret push mov sahf xlat rex.WB jle cld and lock (bad) (bad) rex.RB jg xchg pop cmpsl push push mov movsb pop (bad) retq rex.WB repnz and (bad) sub (bad) rex.WR mov sub xchg adc adc (bad) (bad) outsb (bad) (bad) and rex.WX push pop add push hlt data16 movabs jno leaveq in or test ss orb movabs andb (bad) sarq mov sub insl rcr push cmp mov sbb sub cmova push (bad) pop and pop rex.WB movabs (bad) pushq (bad) mov leaveq add jp rex.W xchg movslq rolb xor sub rex.XB movabs fsubrs rex.WRB cmpsl sub rex.WB (bad) (bad) or rorl rex.WB (bad) pop push sarb cmpsl (bad) jrcxz lods outsb retq in and add test (bad) int data16 mov and rex.WB mov in pushq cmp int3 rex.WB cmp lahf jbe or jb rex.WB lcall (bad) shll cmp jo outsl cld (bad) (bad) rex.WB add loopne jle int3 mov and enterq pop rex.WB mov in mov rex.X or xchg mov adc cmp (bad) sbb (bad) xor sahf xchg rorb mov cmp retq std (bad) imul stos fisubr add fs (bad) rex.B rex.WB sub (bad) movabs and movsb sbb pop rex.WRB shl (bad) cmp sbbl mov jmp movl shrb loop jnp or jno fiadd frstor sbb rex.RB (bad) mov (bad) out fisubrl orl in xchg movsb retq iret in (bad) movabs mov pop in mov adc imul (bad) rex.WB out imul mov xchg sbb lods rex.WB fnsave xchg rex.WB ja in (bad) mov movb sub rex.WB stos pushq je pop xchg and fisub rex.WB push mov out sub cmp sbb xchg stc scas sbb xchg add rex rex.WRX fbld sahf enterq rex.WB xchg int3 (bad) push (bad) and push rex.WB rex.WRXB push test xchg cmp callq or adc sub jl pushq lock jb mov jg mov rex.B pop lods test rex.WB push mov mov (bad) (bad) sbb data16 cld sub int xor sub rex.RX out pop (bad) and (bad) mov out movabs sbb adc and (bad) cli jg loopne sbb (bad) notl push cmp rex.RX rex subl movsb jrcxz or cld lret bswap test addr32 (bad) rex.WRB rex.RX or jne pop mov rex.WRX jp sub scas push rex.XB rex.WB push ds jne in std add lock rex.W rex.WB clc in lahf rex.R or rex.WB mov xchg (bad) pop repz movabs rex.WXB (bad) hlt mov (bad) cld pop repz jnp and rex.RX adc fildll or rex.B cmpsl stos clc rex.WB xor or movabs jg fs mov mov loop (bad) xor rcrl test int movabs or rex.WB (bad) lods icebp sbb push jno retq mov xchg xchg sahf movabs in in es nop shl rex.WRXB lock cmp loopne rcl shlb insl idivl xchg cmp rex.WB fnop xor gs add xor nop (bad) sbb js push cwtl adc fisttpl add xchg lea (bad) xchg rex.WB cmp rex pushq jns (bad) int3 add mov fcomi rex.WB movslq cmpsl pushq retq xorl rex.WX gs xchg lret mov mov sub add sbb rex.WB leaveq (bad) fcmove jnp adc jns data16 imul loop sub pop xor xchg (bad) enterq nop cmpq rex.WB and repz cwtl jns or mov test add adc lods xchg test or mov nop fimul int rex.WB (bad) mov pop imul pop scas fldl sub or rex.RXB adcl mov and cltd jle or movslq pop or or mov xchg lods sub jno (bad) rorb (bad) and and mov imul leaveq pushfq rex.WRB stos cmp add fwait div je sbb sbb xchg mov and or (bad) (bad) push push push loope jne movsl (bad) jle jno clc jo cmp stc (bad) and test pushq or sub xchg (bad) push out fcmovne jo,pn pop mov mov sbb rex.WX cmp and rex.WXB data16 mov std (bad) rex mov rex.RX or rex.WRX rex.WR mov repnz es jle xchg cmp shl sub test rex.WX addr32 ja mov mov jmp mov or lods popfq pop mov cvttps2pi (bad) jge push in in rep (bad) movabs sbb mov or xchg push cli insl (bad) (bad) and test sub push ss outsb enterq leaveq push xchg cmp (bad) loope,pt sub rex.WB or cmp rex.WRX test in (bad) outsl rex.WB add cmp add orb or roll lahf sarb cld add rex.WRXB (bad) outsl xchg mov pop cmp loop add push rex.WX xchg adc fldpi outsb mov stos andl jns rex.WRX mov xchg (bad) push lret pop xchg lahf stos lock and pop movsb sbb es lea jo addr32 add test rex.WRB jp xor mov (bad) xor jrcxz movabs and popfq or jp rorl mov rex.WB lods sbb and pop jmp (bad) rex.WB sub jge ss out loop cmp test (bad) mov or int3 mov stos movslq (bad) pop push rorb movslq jrcxz js movabs mov enterq (bad) pop or out push (bad) movabs or add movabs (bad) loopne rex.WX or (bad) lret (bad) mov (bad) push rex.WX xchg sub xchg leaveq pop pushq rex.WX stos enterq mov mov or nop and and test add imul cltd loop mov retq (bad) (bad) in pop (bad) (bad) mov cs out mov movl lret jne mov push test addr32 sub test js mov pop add xor addb mov (bad) xchg mov (bad) movabs mov (bad) addr32 push mov testb pop lods sbb vshufps mov (bad) fistpll cmpsb add and movabs repnz test mov xor (bad) mov insl xor sbb jle mov mov loope and (bad) movabs rex.W ss movabs or mov retq push pop int jmpq fadds ja out movslq mov orl out jmpq xchg jne fsubrs adc pushfq xchg ss iret jbe xor out test out or hlt add jbe incl xchg icebp jbe sub cli rex.WRB iret lods stc jge sti (bad) pushq enterq sbb gs sbb iret jmpq mov icebp int3 stc mulb (bad) gs mov cmp sub pop lcall jo cs jrcxz nop out and gs mov scas pop (bad) or mov add (bad) mov fstpt xor hlt xchg mov es movabs fldenv xchg sub xlat in xchg je add mov add xchg jno jle sub push notb nop sub (bad) hlt (bad) sarl jae xor push (bad) pop int js mov rex.WX (bad) and push cmp (bad) out jns movsl data16 lret jno adc mov pop in js rex.WXB rex.X leaveq xchg mov sub add out adc sti sbb and loope mov cmpsb adc (bad) imul mov (bad) add mov jae sub adc xchg je cmp sub rex.XB jmpq sti xor movabs sub lods int3 out ss test jno sub xchg pop or out rolb leaveq jmp movslq mov xor out loopne sub adc (bad) and fidiv adc xor (bad) int sub xchg rex.WRX pop rcl fbstp test callq jle addb mov adc clc mov xchg mov (bad) add (bad) xor cmpsb addr32 cltd rex.RB or movslq pop cs (bad) sub rex.WXB out xor jg mov cmp fwait mov movabs lea (bad) and movsl rex.WXB shlb or xchg lock pop movabs pop sahf test cmp sub rex.WB push pushq or imul rex.WB add rclb jnp scas lods stos (bad) xchg rex.WB sbb and gs out rex.W xchg xor rcll addr32 rex.RB rex.W movabs jl out imul loop data16 mov out and (bad) sub jo rex.WRB (bad) rex.WB mov pop adc (bad) (bad) out js stc rex.WB (bad) mov data16 callq mov jns movsl jp iret pop sbbl test (bad) cltd movslq rex.RXB rex.WB sbb xor xchg outsl mov xor jo lret (bad) leaveq adc cmpsl in int nop xchg push cmp imul std callq fimull mov pop sbb rex.RB push mov stos rex.X add jne movsb out pushq fs jrcxz popfq loop xor mov stos rex.WB mov rex.RB retq leaveq mov fcomip add rex.WB jbe (bad) (bad) je,pt loope (bad) cmp sub (bad) add cmp (bad) cmpsb enterq rex.WRXB shll shr and push int rorb cmp jns add fmull xor (bad) (bad) fnstenv pop int3 scas in jbe (bad) fstps fimul fisttpll lock sbb movsl (bad) out repnz pop push jne (bad) adc pop je scas cld rex.WB mov pop js (bad) rex.WB rex.B rex.WB pushq fwait nop sub sbb cld mov rex.WB test rex.WB pushq enterq xor movabs (bad) lret rex.R pushq (bad) idivb retq test scas (bad) rex.WRB mov pop movb mov mov (bad) fisttpll cmp rex.WRX lods test push rcll rex.WB rex.B cmp sbb imul jg mov sub in (bad) sub cld movabs mov leaveq sbb jo rex.RX pop sub movslq mov xor cmp outsl rex.RX out jo rex.RXB movabs sbb repnz jno (bad) test std repz (bad) int3 push rorb cmp sub jmp push out frstor xor movsl (bad) push jne lahf lret imul (bad) or rex.WB (bad) pushq xchg imul xchg pop xchg adc adc stos jrcxz loopne insb or es (bad) or movabs add xchg and pushfq adc movsb cmpsb stos cmp cs lock (bad) movsb pop (bad) push (bad) (bad) rex.W mov mov cwtl insb test enterq cmp movabs add pop in or leaveq or xchg shr push xor sub subl xchg jg xchg test jle (bad) xlat (bad) (bad) je (bad) nop xchg or add cmc cmpb xchg callq add rclb (bad) addl xor movabs data16 fimul and cvtps2pd fwait je pop sbb pop mov gs and xor mov xorb rex.WR (bad) jns rex.RB jno fidivl (bad) rex.WRXB pop lea test movsb mov xor or push loope pop sub in ficomp int3 jl adc (bad) xor pop (bad) rol jns ror mov hlt data16 pop repnz adc rex.XB imul adc or mov test notb mov addr32 (bad) jge jp rex.WX rex.WB lock rex.RB clc rex.WB xor push and stos push imul pushq xor loop jl mov cli repnz icebp rex xchg rex.WB xchg addr32 cmp fstpl ja pop or xchg lods (bad) rex.WB adc (bad) push add mov push sbbl int adc add jb sbb adc add mov shrl and lock xor test rex.WB movslq mov ss rex.WRXB stos cmp and cli push sub pop imulb push jg cmpsb and test sbb sub mov lods pop mov mov or (bad) sahf lods (bad) cmovle jmp adc std fwait enterq jbe adc and out callq retq jmpq mov pop pop shrb fsubs mov (bad) or and (bad) (bad) pushq xchg retq adc jns add adc (bad) jns lret (bad) xchg or or sub insl shll cmp or rex.WRXB add imul mov out mov sub cmp or sbb sti adc out retq push imul rex.W ss jmp in test lea mov pop cmp lea (bad) lret lea enterq (bad) xor adc mov mov (bad) sub clc insl test mov fbstp (bad) mull sbb cmp scas movsl mov (bad) mov test pop int (bad) retq testb in pushq (bad) sbb jmpq roll xchg rex.WR cld add mov or retq or cmp rex.XB xor adc fnsetpm(287 out xchg fsub pop xor mov (bad) rex.WB in push adc loopne callq ja push jmp sbb fwait pop (bad) (bad) mov rex.WRX ficoml (bad) cmp imull es (bad) rex.WRB push adc lret gs mov rol mov push jrcxz insb (bad) push pop rex.WR or xchg (bad) leaveq cs repnz (bad) (bad) adc (bad) xor adc ja pop or mov (bad) rex.WRX push movabs repz xor rex.WB mov adc clc rcr lahf cmc adcb mov or push scas fwait jbe movabs add sbb rex.WB rex.R mov xchg mov (bad) xor (bad) mov jp jrcxz cmpsb rex.WB imul roll pushq scas jae push and (bad) (bad) insb in mov sub (bad) rex.WB insl pushq rex.RX mov and movsb shrl xor loopne cmp in stos sahf or mov xor mov rex.WB jb stos stos and sub mov rex.B mov rex.WB out rcr (bad) mov movsl cmpsb movabs adc xor mov add or hlt pop xchg jp (bad) rex.WB jo sbb notl jb rex.WB std (bad) sub fs (bad) callq hlt push rex.WRB (bad) insb rex.WB ss xchg (bad) iret (bad) xchg rex.WB adc orl mov clc mov pop xchg in callq sbb insl cmp jnp mov pushq jge icebp mov (bad) mov xchg jae fstl fdivr xchg (bad) incl shlb or jbe fadd mov jrcxz mov lods and jl mov xchg add shrl cwtl sub lods imul shrl ja (bad) test xlat xchg (bad) repnz add cmp (bad) push data16 pop rex.W jbe xchg outsl movl xor sub cmp jp jb xchg adc test xor (bad) sbb xchg paddq scas cld cmp add xchg sbb hlt xchg (bad) and movabs sub fnstsw leaveq (bad) xchg add movslq rex.WRB movq std movabs mov data16 xchg jmp rex.WXB fbstp sub xchg rex.WB sbb xchg xchg rorb mov vpunpckhbw rex.WX rex.WB (bad) jae andb pushq je pop (bad) xchg addr32 (bad) int mov mov add rex.B rex.B xchg and movabs mov movabs lock iret rex.WR rex.WB fwait pop movabs repz notb or or mov rex.WB out sub rex.RX rex.WB fwait jo (bad) and rex.RX (bad) mov popfq xchg rex.WB movabs ficom jbe mov lea cld sub mov test (bad) jne (bad) stc sub xor (bad) mov jp and int3 add rex.WX push int sub scas mov or sbb in or lea jp add sti (bad) rex.X jo leaveq mov shll jne xlat and nop xchg in cmp rex.WB mov mov lret rex.WB rex.WRXB xchg (bad) ror sub or out push mov and rex.WRXB adcb cmp rex.WX rex.WB popfq xchg jmpq pop iret (bad) jno rex.RX cwtl xchg movsb test sbb add cld xchg rex push jmp adc fcomps rex.WB mov sti xor callq cli sahf (bad) push rex.WRXB in rex.WB imul rex.WB rex.XB movabs xchg push (bad) jnp fbld callq xchg popfq push and out cmp mov lret rex.X rex.WB sti icebp retq movabs out rex.WB xchg shrl adc movsl push (bad) fldl push cli rex.XB push out loope xchg (bad) sbb insb mov and rex.WB rex.WRXB movabs clc or xchg cmc pushq add in movsl pop movabs push (bad) (bad) (bad) xchg pushq push mov lret callq add mov pop loopne shlb rex.WR sub pop mov icebp rex.WB push fdiv int (bad) sub popfq mov or adc sbb movabs popfq cmp rex.WRXB repnz fwait sbb cmp out scas and or js and lret (bad) mov movslq (bad) adc mov xchg (bad) movabs sub pushq rex.WB icebp mov fidivrl shll (bad) sub xor pushq iret rex.WRX insl rex.X cld xchg pop and stos sub cmc xor gs mov popfq (bad) pushq lods jg,pn and (bad) and mov mov cmp movd lahf sahf adc addr32 ss loope mov jge in shll sbb push (bad) rolb mov repz fistpll jl xchg shll xchg icebp xlat lret push retq test rex.WRB lahf add sub push mov jne rex.WX rex.WB iret cmp in rex.R sarl rex.RX mov mov pushq outsl xchg out sub test rex.WB rex.WB jbe jge lods loopne push push fs (bad) jno sub jmpq ds (bad) mov or push out pop (bad) movsb sub (bad) (bad) rex.WR rex.WB clc adc shlb out sub loope callq rex.WB jmp rex.R (bad) sub or sti rex.B mov sub pop rex.RXB repnz or (bad) jg loopne (bad) jb pushq (bad) rex.RB xor adc xchg mov pushq int test sbb shll cmc rex.WRB lock retq and (bad) (bad) icebp cmpsb jg rex.WRXB repnz flds shl imul mov sub push movsl rex.WRB (bad) sub rex.WB movabs (bad) or or pop jg sub push xchg xchg iret leaveq pop cmp (bad) rex.WB mov jp rcr xchg shlb and es (bad) jae adc insb jp and pushq and rex.WXB mov sub pop shrl stos xor and (bad) rcr rex.WB jp fwait xchg cld pop loope ficompl pop mov and mov popfq pop cmp push add pushq or test rex.WB out sbb rex.B clc rex.WR icebp rex.RB rex rex.WB movsb mov add fst rex.WB xor lahf xchg test mov loop (bad) mov fs or jg xor movslq pushq fs (bad) hlt movabs fsts mov rex.RX (bad) test fisttp cld push rex.WB movabs movslq rex.RXB loop rex.B es rex.WXB cwtl mov sub hlt rex.WRB (bad) cli sbb rex.XB sub rex.RB add sub (bad) (bad) mov gs cmp xchg jne push movslq movsb enterq rorq in (bad) mov rex.WB movabs mov or jo stos jle jo sbbb (bad) mov (bad) enterq or ss push xchg (bad) sub rcrl jno rex.WRXB movslq repnz cmp fsts fs stos sbb sub pop leaveq and es (bad) pop cltd sub popfq adc jnp rex.RXB (bad) fldenv or or mov retq mov cmp xlat (bad) (bad) adc push leaveq (bad) xor sub test pop rex.RXB mov rex.WRB (bad) mov outsb sahf adc xchg (bad) xchg xchg rex.WX movslq rex.WRX addr32 mov push int3 pushq adc imul (bad) (bad) test loop inc cmp mov out mov vminss pushq push ss leaveq in lret mov in retq idivb adc (bad) (bad) mov push jae xchg test jmp xor fs mov scas test sbb movsb xchg lret rex.WR and add push pop bswap push push add rex.WB cmp movsb divb (bad) rex.WB (bad) ror (bad) icebp loope rex.WB sbb movabs in rex.WRX lret cmp fucomp rex.XB and cltd mov push jo push rex.WB xchg rex.RXB xor negb adc (bad) rex.WB rex.X mov lret rex.XB rex.WB fs or adc (bad) adc xchg callq xchg in push mov sbb stc (bad) rex.XB (bad) lea lea pop test mov pop xor mov and add sub mov popfq add jb mov or xor mov pushq outsb rex.RB xchg jne push rex.RB xor and rex.WB (bad) cwtl (bad) imul (bad) rex.WB scas push sbb jb (bad) sub fs pushfq in xchg push jns rex.RB mov sub cmpsb cmp and sbb lret leaveq enterq push pop sar (bad) fwait pop (bad) or jmp (bad) adc pop rex.WB jns sub clc out callq js pop movsb loope callq xor js movabs movabs rex.WX add and jbe push imul rex.W cli out rex.B adcl jnp mov xor retq mov cmp movabs mov xchg stos rex.WB jb rex.WRB (bad) cs and jo and movslq add (bad) (bad) and sub mov rex.WX fildll xor (bad) scas js sub cmc rcll mov cwtl push mov cltd rex.WB jbe sub (bad) jae cmp mov add ss mov test lock movsb js push (bad) rex.WB (bad) sbb sti loope out pop outsb mov je or nop adc in fistpl movabs mov sbb sbb loop and rex.WRB cli pushq fimul xor and pushq stc rex.XB pop insl rex.WB test mov mov sti jbe (bad) jae movl pop sbb add rex.RXB cmp (bad) push (bad) cmpsl sbb in pop push (bad) rex.WR mov ja rex.WB jle cmp leaveq jns (bad) jl icebp xchg jne and pop vpsadbw and sub sbb push ror jb rex.WB fdivs xchg shlb (bad) subb es rex.X shrl mov pop adc mov adc (bad) movabs jno rex.B insb rex.WX orb (bad) cmp (bad) and cmp std rex.WB (bad) sahf (bad) or mov neg pop push insl or xlat int adc jns xchg (bad) int3 adc icebp push mov (bad) movb retq mov rex.RB mov add (bad) enterq cmp bnd fild rex.WB mov rex.WR or mov and rex.RB lods decl adc xchg xchg scas cmp sub loopne mov jmpq test cmpsl sahf test cwtl sub mov rex.WB ds cmp test xchg mov xchg xchg (bad) xchg fwait push (bad) (bad) lods sub testb outsb in test lea sbb adc rex.WRXB retq (bad) rex.WRXB sub mov shrb nop and lret xor (bad) iret sub push mov sub rex.B (bad) sub imul movabs int3 sti mov (bad) sub loopne rex.WX movsl lods enterq stos sbb sub insl fcomip lret (bad) leaveq cmp in cmp (bad) ss xor cmpsb xchg and in and rex.XB test or jmp movslq out cmp jle (bad) or movslq xchg mov (bad) cmp rex.X (bad) movsb negl xchg (bad) mov out jbe rex.RXB adc add cmp or mov mov add mov xchg fiadd (bad) stos sbb rex.WB hlt jl pop movabs lods xor rex.RB or xor rolb fsubl push nop mov rex.RX (bad) pop pop out or rorb insl cmp rex.WB rex.WXB pushq and rolq (bad) rex.WR mov or pushq sub repnz callq sbb rex.X xchg (bad) push out jge cmp loopne lahf mov rex retq std xchg push (bad) (bad) cld outsb and lahf and mov rex.R rex.WB imul pop jrcxz cltd sbb or jmp fnstsw rex.WB sbb (bad) push pop adc pop sub rex.WB data16 xor cmp or mov sti gs scas (bad) lea test or jb sbb int3 movsl idivl adc (bad) mov jnp (bad) sub xor mov (bad) rex.WB adc scas lahf sahf push cmp mov sbb rex.WB or cmpsb rex.WB test js or rex.R rex.XB rclq scas xchg push (bad) jno stos cmc addr32 rex.WR fsubrs xchg int3 (bad) rex.WB cmp jbe mov rex.WB ficoml mov rex.WB (bad) (bad) scas movabs lods (bad) add (bad) mov addr32 icebp or push (bad) leaveq mov rex.WB clc repz cltd (bad) rex.WB push pop rex.WB ds hlt lahf movsl mov imul mov movslq cmc (bad) jg jns and in rex.WRXB rex.WB lahf in sbb callq out jmp mov stos pushq rex.RB jae imul outsl (bad) rex.WRXB rex.WB xor cmpsb subb movslq stos addr32 insb rex.WRXB rex.WB rex.RXB add and lret mulb fbld callq loopne je pushq in movslq (bad) rex.WRB decb or adc jo mov rex.WB pop data16 iret sub rex.WB sub pop rcrl std shlb imul push movabs cmp adc sub rex.WB mov test (bad) std sub fnsave rex.RXB rex.WB rex.WRB cmp xchg add (bad) divb rex.WB sub xchg rex.WB mov (bad) xor pop lret sbb (bad) pushq rex.WXB callq loopne rex.WRB pop rex.WR rex.WB stc (bad) scas mov out mov and pop movabs jmpq push rex.WB add jae rcrb in fucomi mov jg scas xchg insb add lret addr32 fs (bad) xor xchg jbe rex.RX sbb rex.WB int3 lock jo mov rex.X int (bad) xor (bad) jp clc imul lock pop repnz andl cmpsb mov jo fisubrl rex.WB jge in std add cmc sub pop xchg (bad) sbb mov rex.WR pushq push rex.WB enterq insb mov rex.WB ja out cltd xchg lods (bad) (bad) add mov (bad) mov rex.WB or stos ds shr sqrtps movabs mov cmc pop mov movabs rex.WB lock mov (bad) (bad) pop fs or callq rex.B pushq movabs mov mov sbb push stos xchg rex rex.WB mov sub loope add sub cmp mov cltd jle jno,pn fildl vsqrtss jbe lret (bad) (bad) stos sub xchg pop (bad) (bad) jg pop fidivrl jle jbe rex.X (bad) (bad) (bad) jno (bad) rex.WR push xlat (bad) rolb mull pop or sar or icebp adc rex.RX (bad) int add and xchg movabs callq push mov and vcvttps2dq and scas adc mov xchg add add mov or addr32 movsb mov cli cmp (bad) push outsl sub push loop cmp push xor cwtl mov sbb pop int pop (bad) mov xchg test xchg stc rex.WRB rex.WB rex.WRB imul adc repnz sbb (bad) (bad) enterq adc mov adc (bad) pop (bad) cwtl in xchg adc mov negl imul iret xor rex.WRB mov rex.RX mov out jmpq adc lret mov out mov sti add adc sub sarl jmpq fiadd (bad) sti rex.B fs cmpsb jnp iret xchg outsl or fwait je outsb sub fidivr movabs (bad) xchg jbe cmp push (bad) andb js mov lcall mov scas nop or jbe jbe cmp jge (bad) sub push rex.WR movabs jns jnp lods enterq or (bad) pop sbb subl retq fsub lods (bad) xchg rcrl jo movsl push pop ss add pop (bad) fs xchg insl repz cmp jns out and jno rex.RB out pop mov cmp lret fnstsw rex.RX or loopne out (bad) pop cmc (bad) es out mov jge cmpsb xchg cld hlt cmp sbb stos xchg xor xchg ja push add lahf outsb (bad) (bad) jp jno sub retq (bad) decb loopne xor sub int (bad) adc ficom sub (bad) rex sub nop mov xchg mov insb popfq movabs out movabs add rorl add int fiaddl xor jb retq out and pop add or push rex.WXB rex.RXB sub (bad) pop addr32 lret clc jmp (bad) nop lods sbb rex jae rex.WXB lock out xchg or fsubs cmp cmp (bad) or or push (bad) cld add mov add sbb rex.RXB rex.B cmc lret test (bad) movabs movb mov pushq es sub (bad) pop mov adc pop mov rex.WXB in (bad) and rex.W jmpq push stos pop scas insb nop (bad) mov jmp leaveq push xchg mov pop pop push rex.WX movabs adc sub out sub hlt (bad) rex.RX clc rex.WRXB cmpl gs rex.WB fimul add scas xchg xchg rex.WRB rex.WB fnsave xchg shlb fdivs xor rorl jno enterq xor callq pop adc rex.WB rex.RXB fs minps (bad) callq pushq adc rcll movabs (bad) sub rex.WB (bad) mov (bad) (bad) out adc popfq movabs and imul iret icebp cltd and jge xchg (bad) mov mov fmull xor mov xchg out loop cmp and movabs imul push lea sub pop leaveq (bad) rex.WB jo and popfq push push (bad) int lods add (bad) adc callq imulb rex.X sub xchg rex.RX movabs push push cmp cld (bad) sarl mov sbb mov xor cld and rex.WXB rex.WRB mov rex.WB movsb (bad) rcrl xchg adc jp movabs sbb (bad) sbbq (bad) (bad) pushq in pop mov int rex.WR mov xchg retq mov lahf cmpsl fcmovbe mov and movsl retq push sbb mov jbe rex.WB fnop jl push rex xchg (bad) imul add cmp psadbw rex.WX rex.RXB xor scas movslq mov jo rex.W (bad) pop (bad) push jnp fxch push movsb jbe (bad) adc (bad) pop pop xor or jne fdivrl cmp or es and rex.B pushq ja add nop rex.XB mov and pop (bad) in rex.WB rex.WRXB loopne rex.WRX jrcxz enterq or sub (bad) add (bad) jg movabs sbb mov out (bad) lret and adc imul xor test jmpq cmp adc rcrl xchg (bad) jge rex.WB lods adc jae test fisubrl lock clc (bad) mov js and jns and fsts add cmp xchg fcoml (bad) mov (bad) mulps push je push cmp rex.WB or rex.WRXB rex.WB rex.WX iret pushq xchg fcoml sbb xchg rex.WB lea insb adc push prefetcht1 pop (bad) movslq push callq movabs (bad) rex.WRXB in (bad) xchg in (bad) jp push mov mov cmp cmpsl scas subl rex.WXB jg (bad) cmpsb (bad) cmp xor mov mov or out ficomp pop jae or rex.WB adc std add adc (bad) rex.RB rex.WRXB mov push mov pop (bad) xchg rex.B hlt fdivrs push mov rex.W (bad) xchg cmp out mov adc movd int3 (bad) rex.RXB and sub addr32 mov mov (bad) clc (bad) out movabs in cli (bad) sub movslq or insl (bad) sub rex.WB sub or loopne rex.W pop divb (bad) xchg lret in xor fcomps or or sbb sub in sub (bad) repz pop jmpq jno rclb outsb and xchg and ds xchg rex.WXB (bad) jno sahf leaveq hlt or (bad) lock sbb test jbe (bad) stos push (bad) or outsl fstpl test cmp loope (bad) xchg add cmp stos pushq lret push lods sbb retq pushq (bad) rcr and data16 iret leaveq movslq adc and (bad) std mov pop cmp xchg mov shufps mov mov pushfq jp xchg (bad) lods (bad) jbe jbe cmp out data16 pop sbb sub jl push gs mov movl rex.RXB fdivrl cmp rex.WRXB and push and cmp xrelease push sarl rcll jmp mov rolb (bad) and (bad) jmpq stos sub sahf loope stos (bad) rex rex.WXB mov mov jmp jge (bad) xor mov rex.WB sahf rex.WX rex.WB movslq jp rex.RB rex.RB rex.WB mov insb or add sub add pop fwait fs insb fcmovu sub mov rex.WB mov (bad) or rex.XB xor lods sub sbb mov mov stos rex.B gs rex.RXB mov adc int sub cmpsb repz je rex.B rex.WRXB (bad) shrl lret repnz cmpsl mov jb sbb in mov rex.X out mov mov cltd pop (bad) mov insb pushfq ss sbb orl ja or rex.WB loope mov adc int popfq xchg rex.WB fs adc (bad) sbb pop cmp cld out cmpb pop js xor (bad) rex.RB pushq rex.XB test fs push sub lahf fdivs rex.WX gs pop add cmc shr callq (bad) insl mov mov rex.XB jbe rex.X sub xor int3 data16 jb sbb mov mov in fstpl mov sub mov (bad) fs ds (bad) cmovle mov (bad) (bad) imul pop (bad) test adc pushq cmpsb in or rex.WXB mov pop in sub adc lods (bad) mov pop jnp fsubr fmul nopl push rex push lea sub (bad) xor std pushq movabs push movsl xchg cltd sub test sub and sahf (bad) enterq cmpsl repz and movsl cmp mov xor sub rex.WRX divb xchg sbb repnz jmpq jno pop sbb cmp movabs xchg pop jge (bad) adc movsb shr mov (bad) movabs lcall gs xchg out mov movabs (bad) jno rex.RB cmpsl cmp mov test add or pop movslq (bad) xrelease rex.RXB mov out scas negl cmp (bad) (bad) sbb mov shlb pop scas movb jb rex.R push mov es mov sub fidivl ja mov rex.WX push stos push sub mov test ror ja or pop test add cmc xchg fimul sub iret ds rex.WXB push cmp or add xchg insl (bad) and rex.RB mov fsubrs cmovg cs rex.B (bad) xchg rex.RB or sbb nop sarb outsb rorb xlat cmp pop xlat rex.W cmp rex.WX sbb push scas add (bad) mov (bad) ds rex.RXB pushq jne (bad) mov rex.WB ss lods outsb je jns sti pop movabs mov rex.WB je in int3 (bad) rex.WB sub rex.WB cmp addr32 int3 rcll cmp loopne imul mov nop push mov sbb xchg xchg rex.WXB rex.RB rex.WB scas in je add (bad) fimull bnd rex.XB decl jrcxz pop jmp sub (bad) fxch pop leaveq outsl movabs rex.WB rex.X rex.WRX cmp test ss insl pop and imulb xchg iret jmp mov adc loope mov sub push repz (bad) push cmp imul sbb (bad) mov rex.WRXB rex.R (bad) lret shl mov loopne and outsl repz movabs mov jl or jg mov xor rex.WB jno mov add rcrl mov rex.WB xor imul mov and out (bad) cld movabs outsl (bad) mov rcrl (bad) mov xor sub add rex.WX pushq cmp fs push cmc int3 repnz rex.WB sbb add cmpsl add mov movabs fisttp mov (bad) pop rex.WB (bad) gs cmp int3 int (bad) add (bad) xchg and mov mov rex.WB negb rex.XB rex.RB rex.WB leaveq (bad) sub mov rex.WB lock vmaxss movsb jrcxz push mov xchg rex.WRX rex.WRB (bad) scas rex.WB mov (bad) push mov xchg pop rex.XB loopne add mov fcoms xchg lahf rex.WR cltd adc mov int scas jnp adc xor push (bad) out rex.WB cmp loope fmul rex.RX mov (bad) callq outsb pop push sti in xor rex.WRB rex.XB (bad) callq cmpsb push (bad) rex.W adc push (bad) and test pushfq adc ja and rex.XB rex.RB movabs pop out cld mov xchg xchg jbe test lret rex.RX test or pushq (bad) pop iret lea mov mov pop xor jo mov addr32 push imul pushfq (bad) pop and mov xchg push jb pop sbb mov cmpsb (bad) rex.RXB roll mov (bad) rex.WB std and movslq pushq rex.WB jg leaveq retq jge (bad) int or and enterq (bad) mov cld and lock jno mov enterq int ss movabs and lods adc rex.RXB (bad) lret sub pop rcrl rex.XB rex.RB mov (bad) rex.WB out pop jrcxz (bad) je leaveq insb js adc cmp add jmp out in ds and mov xchg (bad) sub pop (bad) jne cmp sub push xchg in and rex.WXB cltd rex.WB cmp scas sub popq test rex.X rcrl loopne mov adc cmpsb callq xchg and xor mov clc rex.WR test push divl rex.WB pop xor xchg jno rex.R sub lods (bad) pushq and int3 (bad) (bad) jp roll mov adc or rex.RX push adc add cmp (bad) (bad) pushq push sub out fdivs pushq callq and stos mov rex.RX push cmp lea lahf (bad) leaveq icebp js xor cs iret pop mov sub add mov adc mov rex.RX rex.RXB in stos sub movabs imul jb (bad) push adc dec pop (bad) roll add sub fadds out imul push movsb xor jbe (bad) jno (bad) mov sbb fist xlat orb sti and cmpsl js stos mov movsl sbb (bad) lods rex.W addr32 cmp out (bad) lret (bad) mov push (bad) in xor (bad) jp jmp and pop fsubs flds movsl callq rex.RB mov mov out jg pushq rex.RX iret iret xchg decb xchg movabs (bad) out or (bad) pop mov add je (bad) sarb je sbb sub sub (bad) xor outsb xchg movabs movabs mov test int3 (bad) cwtl div (bad) ss int3 sarb rex.WXB mov (bad) mov adc fistpl in or rex.W sub push or rex.WRXB (bad) and fs test xor rex.XB retq sti stos adc (bad) jmpq mov insl cmp (bad) sub (bad) xor test adc insb andl sub test jne mov fwait int3 movabs rex.WX movsb or adc adc (bad) jbe rex.WRB rex.WRX rex.WB (bad) (bad) in sub mov pushq sub jrcxz (bad) push add rorl rex.WX loopne,pt decl rex.WRB (bad) adc (bad) xchg rex.WRX pop rcll rex.WB (bad) mov leaveq xlat std rex.WX ficoml roll cmpsl jae fldcw rex.WB pop adc rorl mov test jbe iret xchg mov rex.WB adc movslq xchg xor sbb (bad) adc rol std rex.WRX lock ss hlt outsl xchg mov mov jne (bad) add nop callq push rex.X rex.WB jb rex.WB push outsl fs lods shrl jbe or nop pop xchg (bad) (bad) leaveq stos rex.WB (bad) icebp movslq insl (bad) popfq sub adc add jo rex.WB cmpsb jb lret cmc int iret xchg rex.WB pop leaveq mov outsl jne (bad) movabs neg push sbb adc jle gs lea xchg pop pop retq (bad) sub fstp adc (bad) mov out mov (bad) pushfq rex.XB es sub orb jrcxz jmpq add stos repz rex.XB (bad) mov pop (bad) int3 push push and fldcw test mov and sub sbbb adc loopne leaveq addr32 mov rorl mov mov mov test fwait jmpq push iret jge sub rex.B mov jmp mov add mov (bad) mov rex.WB lret xorl (bad) fld jp rex.XB mov fildll cmovns push or or xchg sbb (bad) pop je mov and (bad) push push lahf rex.WB lea or insb pop movl js rex.RB sub push shlq sbb adc push int3 pop pop push movabs adc (bad) cmp vpackuswb data16 mov (bad) (bad) sub je stc adc (bad) sub add fldl repz not (bad) push mov test mov mov jrcxz sub sub lock cmp adc in scas mov rex.WB mov test jp mov jl nop or movabs and mov lods jge mov xchg mov stos mov js cmpsl fbld and sbb cmp mov std cwtl jg hlt or mov jrcxz cmp and adc rex.WB andl cmp outsl cmp pushq jae movabs loop insl rex.WB or movslq (bad) rex.WB (bad) ds mov or xchg imul (bad) rex.RX push (bad) outsb cmp rex.WR and fnstsw add sbb jo repz movsb lret lahf rorl movslq mov pop test data16 (bad) cmp or mov add and jns xlat shl jns jb retq adc or rex.X pushq pushfq rex.B es mov mov popfq test mov push cltd and cmp mov push mov rex.WRB mov adc gs stos orl (bad) pushq ss (bad) rex.X movabs jno push and pop testl jl pop fmuls push jb jrcxz sub sub (bad) fidiv jo push rex.W nop (bad) (bad) (bad) stos fisub stos rex.WR addr32 ror vsqrtsd rex.WX imul lock cmp fs xlat and add and leaveq test jbe mov pushfq and incl (bad) pushq loop (bad) rcr sbb rex.XB test insl and rex.WX div shll pop rex.B stos fwait pop mov fidivr and repz sub sti pop xchg iret xchg (bad) mov adc add (bad) jno add mov jle cmp sahf mov xchg stos jp retq fcomps xchg mov hlt xor shrb insb jno rex.XB cmp (bad) rolb sarb sub jge out pushq or mull sub imul (bad) nop xchg pop mov lret (bad) rex.XB xchg and fwait cmp movslq loop or (bad) cwtl sahf cs pop test (bad) mov movl pop int3 lock rex.WB rex.R jl xchg add add ja mov mov sub in lahf rex movslq adc or fs add (bad) orb in lret jo movsb stos lock pop movb outsb and ja mov callq lret adc sbb shrb sub push pop mov jno mov rex.WB nop ss rcrb (bad) sub je gs mov cmc rex.WXB addr32 mov xor loopne rex.WB mov movslq (bad) or test cmpsl ja sub sbb (bad) rex.XB rex.WXB nop adc icebp sub imul outsb mov out stos pop int test and jg push add repnz xor cmc callq sbb movabs jmpq adc mov push cwtl enterq xchg rex.WB movabs xchg data16 (bad) movslq add pop pop push xchg rex.WB (bad) rex.WR mov jl (bad) leaveq orl xlat xchg cwtl outsb and rex.WB rex.RB xor push push test (bad) movabs push mov rex.WRB rclb sub (bad) ds mov jrcxz fist loopne fstps cmc rorb ds data16 add rex.RXB sbb out movabs nop (bad) clc (bad) mov mov insb rex.RB rex.RX push retq popfq cs mov mull push movabs mov nop outsb sbb cli jne sbb mov xchg jle or mov imul rex.WX rex.B gs clc xchg mov lret test pop mov mov pop fnstcw rex.RX fdivrl xchg test (bad) adc (bad) movslq frstor rex.B adc insb out lahf xchg xchg lret (bad) lcall and (bad) rex.XB adc fisttp test cltd xchg retq pop cs rex.RXB cmp pushq retq rex.RB in jmpq clc rex.WB adc or adc movaps stc scas or push (bad) pop test pushfq imul rcrb mov sbb rex.WB jae jmpq sbb xchg xor je mov mov mov adc hlt jo sub lret sub cld lret adc sub movsb enterq data16 rex.WB (bad) push clc adc rex.WB xchg or mov punpckhbw movabs rex.WB or cmpsb rex.WB cli cltd pop (bad) sbb jl nop (bad) xchg insb or in cmp sub add and je (bad) rorl stos rex.W cmp pop (bad) mov rex.R imul sub or or sbb cmc je rex.WB (bad) jl leaveq adc rex.WB (bad) pop sub int3 sbb movabs or (bad) xchg rex.WB pushq repnz or jp js (bad) cld add push shrl sbb mov (bad) lods nop cmp pushq push movslq imul loopne pop add jl leaveq cs movabs xor lahf (bad) jmp (bad) test sub cmp xor mov orb lock adc rex.RX data16 movabs add rex.WB repz (bad) (bad) pushq rex.WB lahf and and sti pop (bad) or movabs test loop callq rex.WRB (bad) cmpsl rex.WB cmp stos cmp rex.WRB pop mov imul xchg pop rex.WB lret sbb xchg cmp mov pop stos push or xor scas mov (bad) movabs pushq je rex.WXB stos fist movsb push stos sbb rex.RX movabs mov (bad) and adc shlb outsb sbb rex.XB rex.WRXB nop rex.RB (bad) mov jno lret push add cli (bad) (bad) test rex.WX in outsl lret xor rex fidiv or rex.WX mov pop jge xor mov mov imul rex.RXB or or jrcxz repz mov out mov cmp rex.WR and jb int3 out adc adc rex.R movsb and mov pop rex.XB rex.WRB not sahf pushfq xchg push jge sarb adc xchg xor push mov idivb popfq fmuls pop and pop add (bad) lret mov pop xor sub cwtl mov scas ja pop jmpq jp rex.WB je sahf mov add sub sbb out fild rex.WB sub mov xor fstpl mov rcr callq xor push (bad) sub add (bad) iret xchg cltd mov rex.WB es test (bad) in callq jo push (bad) push out xor sub loope sbb (bad) fstps and pop sahf jp,pt lret sub movsb xchg test (bad) xor jbe rex.XB fs rex.WRXB (bad) (bad) pop lods rex.R and jne jae push mov pop rex.X rex.XB sbb (bad) jl add loope test xchg shrl push mov adc (bad) rclb loopne out xor mov (bad) mov pop rex.WB fs scas callq sbb xchg (bad) xchg rex.RXB xchg rex.WB cmp hlt mov popfq movabs and pop sub sbb movsl rex.RB rex.WRXB pop (bad) rex.XB es scas out sub cs int shrb rex.WX movslq pop js rex.X push xorl sub test rex.WRB mov push mov rcr callq lods jmp loop sbb (bad) pop faddl rex.WB rex.WRXB (bad) adc out divl xlat retq movabs sti jo (bad) lea cmp callq jp movsl sbb test jo rex.WB or pop sbb xor jno xor rex.X movabs test (bad) fnstenv (bad) mov add es cmpsl rex.W rex.XB rex.WRX xchg xor push jge (bad) xchg enterq sbb or adc sub movabs (bad) movsb jp std callq fsubl push (bad) push add rex.WB push fcmovne push outsl mov (bad) movsl mov mov mov out push pop in int jo addr32 cmp fsubp out and int3 and nop lods lock sbb repnz callq pushq (bad) rex.WRB nop xchg pop pop (bad) xchg push and pushq out ja rex.B loop imul scas and sarb add push pop (bad) mov (bad) cmp retq je addr32 or mov and xchg movsb fcmovnb jmpq jo popq pop popfq sbb (bad) adc leaveq hlt dec es (bad) pushfq and loope,pn fisttpll (bad) cmc xor (bad) rex.WB shrl iret fstpl rex.RXB xchg (bad) rex.WB mov mov fstl rex.WB add pushq mov rex.WXB (bad) pushq (bad) rex.WB rex.R data16 rex.WB (bad) (bad) sbb retq or add fsubrs rex.WRX mov (bad) pop pop add lea lret pop pop rex.WB sub rex.R addr32 mov shrb pop retq lret callq mov push in cmp mov (bad) rorb jo lock push lahf rex fs stos hlt or or mov testb jno or and icebp cmpsl rex.WXB sbb lods sub rep jo (bad) rex.XB (bad) cmp sbb cs sahf mov lock mov clc xor mov rex.WRXB xlat jle and sbb cmpsl sub rclb and out movabs sbb lret sub mov or or pop (bad) push cmp (bad) (bad) adc movabs rex.WX xchg addr32 mov jmpq mov fwait sub (bad) xchg fcomps stos test ror (bad) test and int js retq sbb xchg out movsb xor rex.WR stos cltd mov insl pop xlat test xchg out rex.WB rcl rorb ss retq pushq pop push xor xchg rex.WB and cmp adc jge mov xor add (bad) ds or jnp rex.WB fs in fidivl and xchg add xchg rex.WB or push nop or cld out clc or rex.WR movabs rcl mov stc sbb and mov mov jge xor sbb cmpsb rex.RB divb rex.WXB adc mov rex.WRX sub rex.B mov rex (bad) cwtl jmp xor rex.WB cs jns rex.WRXB (bad) (bad) mov mov lods rex.WB stos xor or or sub jno or xchg or cli sbb (bad) (bad) mov (bad) sub adc (bad) test cmc out pop lret pop sbb pop push or sbb rex.WB movabs sub ds movslq out rex.W mov jrcxz add rex.WB (bad) rex.WR test cmpsb rex.WB xchg and sbb (bad) cmp negq cld mov adc sbb (bad) (bad) (bad) pop xchg sub rex.WXB int mov push push cwtl ds (bad) cli addb fdivrs adc out mov (bad) rex.WX (bad) rex.WB fxtract or rex.WR icebp rex.WB mov pop pop mov and cmp xchg jo cmp rex.WXB xchg (bad) divb and rcll add (bad) cmp mov rex.WB frstor fldln2 rex.RX xchg sarb rex.WB popfq pop (bad) mov cmpsb and push mov (bad) lret (bad) cmp pushfq xchg rex.WB rex.WRXB rex.WRX rex.RX push orb out popfq rorb (bad) or stos (bad) retq sahf push fbld add pop (bad) gs sub mov xchg je pop pop jnp lret addr32 scas rex.WRX rex.WB es sti mov test leaveq rorl icebp (bad) sub in sarl fcomps outsb mov rex.WB jrcxz push pushfq int (bad) sub cmp rex.B pop and (bad) (bad) retq (bad) cmp addr32 (bad) data16 push (bad) (bad) jne popfq (bad) mov xor subb leaveq shlb pop xchg mov out mov add xor add vcvtdq2ps callq cmpb rorl adc xlat (bad) lock iret leaveq loopne rex.WB xchg add xchg imul gs movsl adc lock (bad) nop mov (bad) loopne mov cltd idivl push (bad) enterq pushfq pop push rex.WB cs sub xor lret rex.WB jo jns (bad) (bad) rex.WB push jnp and sub rex.WRB xchg or jnp and rex add sub rex.W rex.WB or imul (bad) gs scas movabs (bad) mov rex.XB (bad) or rex.RXB xchg (bad) jbe (bad) mov add mov addb notl lret xchg and sub mov movabs rex.WXB rex.RB repz and stos xchg test (bad) mov mov in (bad) rex.WXB rex.X movsb rex.WB outsb mov rex.XB addr32 mov imul imul mov mov icebp cmp pop jae cmc adc addr32 rex.WB int pop sbb cs rcl gs jge fild clc movabs xchg adc (bad) retq jg (bad) adc insb sahf pop and lea cmp rex.R xor rex.WB cmp test adc in jg rex.WRXB loope or xchg cli notb mov rex.R cmp retq movslq stos xor pop pop mov (bad) pop fsubrs lret rex.WR sarb sub fwait (bad) or and xor insl cmp iret xchg rex.B rex.WXB in rex.WB pop mov popq sbb rex.WB in xor rex.WB out stos xchg fstps rex.WB and lahf (bad) or xchg (bad) nop xor std mov movabs xor icebp pop mov int loope xchg add push rex.WB gs (bad) movabs outsb (bad) cmp imul fwait test add sub shll pop (bad) add mov cmp cmpl sub mov sub shll cmp sub (bad) (bad) rex.WB iret cmpsl icebp jne sti jg xchg clc retq insl push adcl es sbb ja rex.WB test rex.WB (bad) cmp cmpsb (bad) xchg mov int3 jo rex.WRXB cltd popfq (bad) or jp xchg (bad) cmp cmp adc xchg nop adc rex.WB rex.X movabs test clc rex.WRX rex rex.WRXB or jecxz cwtl mov (bad) and enterq (bad) loope xchg mov (bad) loop in fisttpll lret (bad) cli test hlt test cmp lea xchg fimull or cmp rex.R cmp lods ja and movsb pop jb sub mov (bad) pushq pop (bad) jo rex.WB jbe (bad) mov pushq test js pop sbb iret enterq sbb hlt or fs rex.WB movabs jno mov adc imul jge xchg xchg repz out pop test adc push sub and (bad) int3 jle jp sub int3 and lret pop rex.WX adc rorl in rex.WXB fnstsw lret rex.WRXB loope xor sti (bad) jae mov cltd add cmp xchg and (bad) fcomip movabs leaveq fildll jb mov pop mov stc lret mov loope cmp (bad) fistpll (bad) outsb rex.WB sub movabs cmp xor jge xor (bad) jbe movabs rex.X callq popfq iret (bad) pushq mov xchg out stos mov cmp mov ds rex.WXB repnz stc rex.WB mov sbb push rex.WX (bad) (bad) pop callq sub (bad) (bad) scas xchg in movsl cmp rex.W mov shr fcmove cmp movabs imul ds test callq (bad) insb rex.WB push rex.WB sbb (bad) (bad) sub test loope leaveq imul add pop lea or iret rex.WRB rex.WB sbb sbb push lea (bad) in cmp cmp sbb add or retq rex.WB testl pop fwait loopne faddl jo rcll adc callq xor jns cld (bad) mov (bad) movabs and loopne (bad) out xchg lock mov mov rex.W xor (bad) jne jno out (bad) push movabs (bad) mov out scas callq jne push pop add and lods rorl imul imul rex rex.WB repz cmp jns movl test (bad) add (bad) mov (bad) pop xchg out mov or in and lods iret (bad) rex.RX xor and cmp xchg xchg loop mov (bad) xchg insb xchg push faddp rex.WB and out lods push or xchg xchg xor xchg je shlb test (bad) (bad) rex.WR add imul rex.WB repnz in rex.WB test cli pop and adc callq pushfq pop out jrcxz fild and push (bad) testb rex.WB xor mov rex.XB and sbb incb mov xchg xor pop cmp out mov jrcxz xchg andl mov xchg lret and (bad) add insb rex.X repnz push scas (bad) cwtl xchg mov cmp test movsl iret scas (bad) cmpsl rex.WB mov and sbb mov fild or rex.WR sub ja movabs pushq nop out popfq decb imul jae xor mov sbb sub repnz clc add movsb pop adc cmpl rolb popfq ds or push std (bad) adcq mov repz fidivrl (bad) movsl rex.XB sub cmp fisubl xor push xchg cli adc pushq mov cmp in lret cmp clc (bad) pushq fcoml sub or rex.WR mov push sahf setnp mov ja (bad) or xor jmp push cld mov rex.WXB cmp js in add and lods add sarb stos pop gs rex.R gs jbe jo (bad) movsl (bad) mov addr32 stc adc loope cmp cmc (bad) adc ss rex.WB rex.X cld adc or out fwait js movabs cmc imul std movslq sub in js rex.X fisubr xor retq (bad) imul pop addr32 sub pushq enterq adc add (bad) out leaveq and xor xchg (bad) gs fstps pushq lods adc jno pushq mov add adc out cmp (bad) rex.WB xchg sub xor (bad) loope (bad) rex.XB cli jl callq jg add fsub sub out cmp (bad) xchg rex.WB cld insb retq jo lock rex.WB ss stos mov fwait in data16 sub (bad) pushfq pop sbbb or jo and jno rex.WB sub roll sub lret retq (bad) callq (bad) and cmp cmp rex.X adc sbb (bad) sti xlat or rcrb movabs and rex.XB (bad) (bad) jne mov or cmp test and imul rex.WRX xchg jge rex.R scas pop loopne push rex.WR mov (bad) jne sub and push mov mov and pop fstpl add (bad) pop fucomip cld cs (bad) push xchg cmc mov out add cmp or xchg cltd pop xor clc sub frstor (bad) push push lret mov xchg add leaveq mov add std rex.WRXB rex.WB (bad) movsb ficomp mov pop loopne rex.B dec repz pop mov cmp jl,pt jmpq stos rex.WB mov adc jo (bad) rex.WB rcll callq cmp (bad) (bad) repz rex.X (bad) mov or xchg xchg outsl imul (bad) sub pop sub pushq jl fisub jnp sbb sub movabs movsb (bad) xchg (bad) push cmp mov rex.WRX nop rex.R rex.WR rex.WB cmp xor rex.WB pop adc xlat rex.WB stos int3 (bad) xchg pop int (bad) rex.W (bad) lea xor xchg rex.WRB rex.WB (bad) xchg addr32 and mov pushfq jge outsb cmp lret or (bad) rex.WRB int jle ficompl (bad) lret rex.WRB rex.WRXB rex xlat jle fs (bad) and int3 mov jae jmpq rex.WRB sub bswap jle fdivrs js icebp xor push (bad) je lret loop jl movabs mov ja fldt adc repnz (bad) (bad) cltd jo mov (bad) xor pop (bad) xchg rex.XB loop test mov shrb (bad) pop pushq rex.WRX rex.WB decl lahf lret jno (bad) rex.WB push rex.WR test cmp movslq movabs callq mov test sarb add cmp mov or sbb jge or je test test mov in outsb out movsb data16 scas rex.WB (bad) fsubl rex.WB push or rcll add jmp in out rex.WB mov lods xchg callq out push (bad) jp pushq cmp (bad) mov push enterq mov cltd rex.WB mov xlat xchg jrcxz stos pushq int3 cmp jne sbb mov mov mov outsb sub add rex.WRB clc repnz cli rex.WB mov or or pushq out jl cmc fs mov movslq xchg add in adc movabs cmpsl cmp jp (bad) cli mov ror jrcxz roll movabs (bad) xor rex.B (bad) divl iret shlb repz sahf sbb and enterq popfq icebp (bad) add rex.WB lock jg cmp (bad) (bad) ficompl jb cmpsl pop movabs testb sub rex.B lret (bad) mov push icebp cltd xchg lahf jecxz retq jnp rex.WRB adc (bad) mov rex.WR xor jb rorl loop shrb and xchg adc lods rex.WB andl fdivrl sarl xor jge ja sub mov (bad) rex.WRX xchg mov sub loope (bad) pop repz retq movsl sub rex.WB cmpsl imul (bad) (bad) (bad) rcrb pop andb (bad) rex.WB mov push lock add in icebp cmc rex.WB mov shr or (bad) mov push xchg (bad) adc jle pop rex.WRXB callq iret shlb or rex.WX (bad) cmp sub je (bad) sbbb andl movabs jge push leaveq mov add mov addr32 cmp rorl lret rcrl (bad) (bad) xchg rex.WB rclb or clc pop mov rex.WXB lock insb xor xor movsl rcrb cmp (bad) xor xor sbb stos pop out rex.WB rex.XB or rex.RXB push cmp jns sub rex.WB xchg shll rex.XB shrb rex.WRX (bad) rex.WRXB push add push push jb or mov outsb movabs pop in xor (bad) fcomp mov (bad) sub or or jns lahf rex.WX retq pop (bad) sbb cltd ja sysenter jns cwtl mulb rex.WXB jb movabs mov mov rex.RXB sub pop fiadd or mov (bad) lea rex.WRXB lahf adc (bad) (bad) sub adc sbb jp mov fwait xchg fist jns mov and xchg (bad) mov rex.WRX rcll (bad) xor or add incl mov pop rex.B mov (bad) rorl or shrb jo jmp retq lret pop mov jb cmp stos cli add test or push push retq movsb or mov jp cmpsl fistpll adc jg add mov leaveq xchg (bad) sub (bad) iret or gs or rex.WB cmpsl (bad) fisubrl add xor jp cwtl pop rex.WRXB sub sub and add rorl mov xchg retq movsb xchg jnp (bad) rex.WB repnz (bad) stc out push cmc gs nop fcoml rex.WRX addr32 cld loop or cmpsb adc push push pop lock in pushq lods pop (bad) (bad) mov sub stos rex.WXB gs adc (bad) jmp push rex.WB xchg push mov xchg add cmpsb mulps repnz xor test cld push rex.WB movsl fnstcw fiadd mov frstor adc movslq pushw mov or xchg mov iret (bad) loopne rex.RXB (bad) xor mov rex.WRX cld imul ds (bad) sub push mov out movabs (bad) lahf fldenv nop repz jl rol int (bad) int3 loopne cmc add rex.RXB rex.X mov jne cmpl rex.WRXB fild (bad) loopne and rex.WRXB imul (bad) jrcxz adc or rex.WB js hlt xchg xchg mov rex.WB xchg (bad) mov (bad) sub (bad) xchg rex.WRXB xor lret in cmc callq xchg hlt sub jnp js mov test jrcxz (bad) or jg lret rex.R and cmp pop pop mov movabs out sbb jrcxz and retq rex.RB retq xchg mov sub xor (bad) jae cmp jmp rex.WRXB mov cmp jbe rex.W (bad) sub rex.WRX cmp push fwait ds cli sub lret (bad) cmp fiaddl sbb sub jp stc fmul lea (bad) pushfq (bad) rclb mov cmpsl rex.RXB rex.XB sub jne (bad) mov xor lea ja mov xor int cld addr32 sub clc mov divb imul fisub push lret sbb sub mov adc pop sub add jns mov stos rex.WRX rex.WXB rex.WX rex.WB cmp mov jns movabs rex.RB rex.RB sbbb rex.WB (bad) scas rcrl loope push insl xor or rex.WB incb mov repz sub adc ja xchg movabs out ss sbb mov pushq cmp sahf fcmovbe retq or std div test rex.RB sbb test rex.WRXB out mov lret and rex.R nop lahf rex.WB fidivl xchg stos insl cmp test (bad) rorb hlt rex.WB mov and rex.WRXB rex.X mov pop add (bad) jb,pt (bad) xchg retq push and xchg xchg shrb ja,pn mov mov loope jge fs pop sbb (bad) rex.WRB lea rex.WR rex.B cs add outsb jge sub mov sbbl mov andl and retq mov movabs rex.WB insb lods callq cltd sbb adc rex.WRX sub xor mov psubd addb push fistp add push xor lahf and sub sub out sub rex.XB rex.WRB jrcxz xor rex.WRXB hlt mov sahf push iret (bad) rclb subl movsb mov rex.XB imul cmp retq sbb stos movabs sub gs imul fsubr (bad) fwait pushq adc data16 test (bad) mov adc push stos (bad) movabs in xlat (bad) sub push adc lret ss (bad) pop jle fcmovne out fsubrs mov test jrcxz jmp adc (bad) sub or movabs out mov adc pop clc rorb rex.W rex.XB gs addr32 jrcxz mov mov cmp mov int3 adc cmpsb (bad) mov xor xchg sbb (bad) rex.WRX ss test lods mov pushq adc mov sub sbb sub notq cli (bad) sbb cmpsb sub adc jg (bad) pop pop sub leaveq adc mov pop xchg (bad) cli ja jle negl rex.WB rex.XB cmp mov movsb ss jp pop sub ja or sub rex.WB (bad) mov (bad) cltd lret sbb jge jmp insb cmpsl (bad) loop pushq outsb add rex.WRXB cs jo pushq sarb pushq xchg out (bad) cs sub pop repz rex.WB (bad) fmull rex.WB xchg (bad) insl nop rex.WR retq int (bad) fidivrl repnz rex.B rex.RXB add out push leaveq push pop cmp and jmp mov rex.RX nop xchg and retq mov rex.RB enterq jle mov cmp or lahf pushq lret (bad) popfq or jae xor jnp leaveq cli leaveq pop and jmp enterq retq add retq xor mov fnstcw xchg loopne sbb mov shlb lods add xchg out push xor push xchg clc xchg addr32 add mov mov push jbe rex.WRXB cmp (bad) rex.RB and pushq rol test rex.RXB rex pushq int3 (bad) sub nop gs movabs stos or push mov insl popfq cmp pop mov mov or cmp pushfq mov sub sarl lods (bad) pop xchg mov ss mov test sub pop rex.RB rcrb add sub add add jl test int decl xchg test cwtl lret pop mov mov mov fdivrl es lods rorl jp sub pushfq fadds rex.WB rex.XB fwait mov mov jge pop movsl int insl negb cmpsb (bad) jb rex.WX ror callq mov stc rex.WB je cli (bad) orl outsl push rorl jl rex.WRB es sbbl int pop rex.WB pushq sahf sub rex.RXB rex.WRXB xor push and add rex.XB cmp rex.RB loopel js int3 or and mov (bad) scas sbb and shl sub mov fidivrl rex.WB pop mov jg lret sbb movabs or sti xor pop cmpsb gs movslq or cmp insl push and sub rex.R rex.W rex.WB stos (bad) lock fucomp jle (bad) (bad) mov push cmc movabs shrl outsb out sarb or shl pop push xchg mov pop and mov mov cmpb add rex.WX cmp xor shrl loope mov rex.WXB add rex.WR (bad) lahf xor int3 sahf mov movslq add icebp cltd (bad) xchg adc push iret fimul rex.WB or enterq (bad) je scas (bad) insl jmpq pushq rex.WX rex mov xor xor clc adc loopne (bad) sbb iret lahf ja jmpq mov jge rex.W (bad) sbb cmp rex.WB pop rex.RX pop rex.W and movsb fucomi js xchg sub cli (bad) push movl adc in rex.R test hlt js pop and xchg mov out xor ss push xor and cwtl xchg (bad) push (bad) xor pop test adc xor (bad) int (bad) xchg callq movsl push loopne mov rex.RB iret pushq rex.WB movabs imul rex.WB mov push sarq add fcoms je and loopne mov or sbb xchg cmp (bad) rex.XB jae mov or ja xchg (bad) xchg (bad) rex.XB mov in (bad) jns pop (bad) pushfq sub jmpq mov mov adc xor movsb xchg mov and cmp sbb ds outsl loop rex rex.WRB jp (bad) movabs rex.WB jmp in rex.B int or and sub rclb lahf rex.WB jge cmp fwait jo enterq mov jbe movabs add imul pop (bad) jg jl sbb imul push rex.WB movabs sbb add pop mov adc (bad) xchg jp sub (bad) mov nop xlat rex.WB sti jo push xchg (bad) push adc or movabs add andl scas mov insl (bad) stc mov cmp sti (bad) cmp mov jge push mov rex.WR lods (bad) jl jp sub add (bad) pushq adc fwait xor mov rex.WX (bad) icebp jno ds jrcxz or jmp rex.WX jl cmpsl movslq sub push push mov rex.WB loope jle rex mov add push int push movabs callq (bad) test or je (bad) mov shrb and loope (bad) test xor rex.WB in mov push lret hlt rex.WB lahf sub adc push mov or pop sub rex.WB movabs fs jl (bad) (bad) ja pop mov cmp jne or fs int rex.WB mov pop pop lock jl jo (bad) push xchg ja imul test (bad) movabs ja (bad) (bad) pop cwtl mov or mov cmp sahf popfq fildll pop and sub fsubs rex.WRXB cmp rex.WRB cmp pushq rex.WB rex.X addr32 adc rorl (bad) mov xor and jge rex.WB rex.WRXB push enterq jle jae xchg ja rex.WB out movslq lahf callq pushq cmc rex.WB rorl rex.XB lock jp rex.WB sbb rex.WR pop enterq callq (bad) sarl jbe cs sbb addr32 imul cmp (bad) cli jb rex.WB test mov subl pop rex.WB adc jo (bad) sbb mov pop jp int rex.WB push (bad) test rex.WB ss and in xor mov mov rex.WB repz xchg rex.WB xchg nopl jb sub mov push (bad) sbb rex.WB mov and pop xchg scas and rex.XB xor sbb out scas mov movb push imul fdiv and rex.WB and scas (bad) (bad) rex.WB js add leaveq adc (bad) sub sti loope jae test stos rex.WX and insb pop cmpsb leaveq rex.WRB movsb jp jnp (bad) and movsl jl rex.WX pop jo push mov rex.WB mov rex.WXB cmp xor (bad) icebp (bad) rex.WB rcrb rex rex.WB test sbb lret mov xchg rex.WB or (bad) xchg add out sbb rex.RXB adc cmp rex.WB jg mov jno sha256msg2 rex.WB lock orl rex.X rorl out imul cmp rex.WB setno outsb mov rex.WRXB (bad) (bad) hlt jae (bad) lret rex.XB (bad) sub or (bad) push stc rex.RX jb pop add rcl es fmull (bad) adc rex.RB (bad) rex.WB ss rex.WB (bad) xchg xor nop rex.WX rex sub add mov jno movabs fiadd fildll mov fisubr rex.XB lret andb fs loop rex.WX rex.WB rex.RXB xor pushq rex.WR rex.WB jmp scas sub (bad) cs push adc sub movabs mov movsb rex.W rex.WRXB sub mov (bad) push addr32 popfq jl (bad) (bad) cmp mov rex.W insb jp or xor rcl jle rex.WRXB (bad) cmp (bad) rex.WB mov push xor imul cwtl ds pop std jle pushq mov mov pop (bad) popfq (bad) push push pushq cltd jo rex.WB fs jb repz xor rex.WB rex.W rex.WR cwtl cs jno lret rex.WB je cmp (bad) rex.WB in test mov and mov nop repz sub push (bad) cmp movslq adc mov cmpsb xchg stos xchg jmp (bad) add mov test sbb fcomp (bad) sub pushfq stc push rex.WRB rex pop in mov repz mov movabs cwtl gs mov rex.X xchg int addr32 fsts (bad) rex.RX rex.WX push and sub rex.WX pushfq mov movl test and mov jne ja flds xchg or es enterq or or mov shr xor cld or (bad) jae mov enterq or jmp sbb (bad) sahf insl jmp sbb fadd pop or push mov cmp sarl test mov cltd pushfq movabs cmpsl jns (bad) rex.RB rex.WX mov (bad) rex.WX cmp (bad) xchg rex.RXB mov rex.WRXB rex.RX leaveq xchg sar push xor insl out sub push adc (bad) jmp add fdiv jmpq push movslq adc out jno or faddp ja sbb push test (bad) sub mov mov mov push loope sub jl push decb divb movabs (bad) rex.WX pop mov icebp loopne retq and test (bad) sub enterq (bad) rex.WXB jne cli xchg js xchg icebp fistpl enterq mul sub add stc rex.WXB fwait imul (bad) sti jg loop sbb pop jnp or or fdivr lods adc lahf cld (bad) adc ds mov cmp addr32 nop mov clc push (bad) push out xchg iret or rex.WRB outsl (bad) xor rex.W mov cmpq test incb rex.W or jl mov insb fisubl rex.WRXB rex.WX (bad) jbe xchg (bad) and cltd addr32 shrl ja rex.WRB adc (bad) xor outsb xor xchg rex.WR mov cli rex.XB notb test (bad) popq sahf rex.WB fnop push ja (bad) rex.WB insb in popfq xor loopne jnp and xor rex.XB rex.WB sub shll and sbb add rex.WB (bad) mov and iret xor sbb or fnsave fs movslq mov jmp (bad) mov test rex.WB push rex.X fisubl in fisttpll clc (bad) fistp jno gs adc rcl adc movabs mov std ror cmp addr32 pushq sbb movabs insl and mov fdivs mov mov xor lret add movabs rex.WB mov cmp or retq lahf push (bad) push xchg int pushfq roll xchg jae cwtl sub mov pop mov (bad) xchg rex.WXB imul mov push rdmsr stos sbb fs mov pop cmpsb rex.RB and mov push (bad) (bad) out rex.WR rex.RX cli mov push pushq (bad) stc es (bad) rex.WB add pop cmp or adc shl cltd mov movsl imul sbb xor icebp sub movabs cmp and lock lret sbb ds stos out jno cmp rex.RXB cmp and xchg (bad) xchg push rex.WB adc (bad) rex.RB rorb mov xchg test (bad) (bad) (bad) rex.WB adc callq fdivl rex.WB lret jle lods or retq and adc je test jb jno sub pop sbb lret retq mov cmpsl xchg mov and (bad) adc lea lret rex.WRX (bad) xor cltd cmp movabs shrl outsl xchg pop es leaveq retq mov jno test mov rex.R cmp add iret sti add rex.WR (bad) rex.WB (bad) out mov retq and xchg rex.WXB rex.R sahf rex.WB (bad) xchg rex lret (bad) xor cwtl rex.WB mov or mov mov xor and scas xchg lock callq pop push rex.WXB movabs rex.X in xor mov cmp test out push sahf sub xchg shrb sbb jns jp jge retq rex.WB and push mov (bad) mov pop sbb pop clc test fldenv sub out rex.XB sbb add rclb sub jmp (bad) cmpsl (bad) bnd rex.WRXB jp rex.WB (bad) rex.R push (bad) rex.WB push mull rex.WXB or adc (bad) rex.B sti (bad) cwtl rex.WB (bad) stos out sbb lea push rex.WB adc fucom xor lods rcl imul in cmovns pop (bad) add lret rex.WB (bad) jns add xchg rex.XB rex.WRXB (bad) movabs sub rex.WXB rex.WRX (bad) push ss mov or cmp (bad) pop gs rex.WRX (bad) test sti mov rex.R add rex.WXB (bad) push (bad) rex.WB pop and (bad) sub movabs gs addr32 jo icebp movsb out rex.WB adc sub pop popfq cmpb retq (bad) movsb mov xchg rex.RXB cmpsb or sub add pushq cmp rex.WB xchg (bad) jo or (bad) push rex.WB imul cli and mov mov shrq (bad) (bad) rex.WB callq stos out loope pop rex.WB or mov hlt xchg cli loope rex.WB shll out test data16 rex.WB rex.WRXB or sub adc (bad) stos sti rorb stc retq adc push out pushq rex.XB rex.WRX rex.WB sbb xorl rex.XB (bad) rex.WB (bad) sbb jns sub cld scas jmp stos cmp pop andl (bad) cmp (bad) ror lret data16 adc mov mov sbb rex.WB stos sahf jae adc rorl es insl rorb movabs (bad) movslq (bad) push lahf or mov subl adc int and pop jns icebp cmc mov mov mov mov fcomp mov stos jge push cmp (bad) rex.WB repz icebp xor pop and movsl cmpsb movabs xlat sub rex.WB fisub fmul stos rex.WB (bad) pop in pop sub movabs jns sahf loope cmp pop fnop out rex.WB imul pushq and rex.WRX rex.WX rex.WRB or scas push (bad) hlt rorb cmc adc sbb (bad) sbb jbe (bad) xchg xor (bad) (bad) sti cmpsl rex.WXB rex.WX pushq push push or rcl enterq (bad) pop cs and jp sub lods (bad) rex.WX xlat cltd rex.WB mov lfs adc and mov imul and cmp pop in (bad) stos cmp xchg (bad) (bad) sub sahf rex.WB add mov fiaddl rex.WRXB movslq cmc jns callq sub push and vpsubd push insb adc movabs xlat sbb clc rex.XB (bad) mov jg cmp mov cmpsb push (bad) add mov movsb out rex.RX fwait jbe pop (bad) jg rex.X mov mov or cmc mov rex.B fs mov (bad) pushq cld (bad) rex.WB xchg iret fimull add mov outsl sub pop push jge pushq gs (bad) sbb callq or addl rex.WB lock (bad) cmp adcb jmpq out es popfq and pushq (bad) (bad) xchg (bad) mov sub (bad) std fist cs cmp rex.WB (bad) mov rorb cmp sub roll insb xor insl (bad) pushq add (bad) rex rex.WB es movabs in xchg xchg cmp rex.RB adc adc mov in test addb pop std movabs sub mov push loopne retq movsl adc rex.R cmc xchg (bad) mov pop and fistpll add add rex.RX rex.WB outsl pushfq and xchg or sub sub push cmp (bad) push lret idiv or fs test outsb push rex.WB or (bad) pushq popfq pop add xor movsl xchg and rex.RB leaveq or pop xchg (bad) xor pushq rex.WB rex.RB fwait mov js rex.WB repnz movsl jb push mov test std adc sbb jle and and movabs push sbb or shrl fimul jrcxz (bad) cmp (bad) movabs adc rex.WRXB rex.RXB or cmp xor sbb movsl scas leaveq rorb push hlt add and je cwtl push retq out (bad) iret fwait callq adc sbb (bad) rex.WB jne mov (bad) enterq cmp (bad) movsb cmp cmovns imul jp test pop insl mov jns test sbb test lret rex.WR xor pop rex.XB cmp (bad) lods int test es pop fldt xor mov xchg (bad) pop or sub lock sub add pop in and rex.WB repz rex.WB loope jnp mov pushq cltd push rex.WB jae (bad) (bad) cld loope (bad) adc pop imul movabs xchg xor int fisttp rex.WRX rex.WB out xor (bad) sub rex.WB movabs lahf rex.WB in scas (bad) ds fisttpl jbe mov xchg pop adc out cs gs xchg cmp fwait mov (bad) fmuls out (bad) mov rex.WRXB mov (bad) cli hlt push pop test xchg push push pop rex.WB sbb fdivs mov idivb (bad) retq rex.RXB rex.WX loopne cmpsb out (bad) or and (bad) mov (bad) xor (bad) rex.WB and mov rex.XB pop sub jns fsubr adc cs rex.WB (bad) (bad) rex.WX (bad) data16 rex.WB movsb jo rex.RXB fxch cmp fwait ds cmc pop insl sbb rex.R popfq es push rex.WXB rex.WB cmpsl (bad) push rex.WRXB xchg je cmp pop jnp rex.WB rex adc scas icebp mov movabs retq sub cmp rex.WB sbb icebp jg push cmp mov rex.RX rex.WB xchg in callq mov push add clc pushq jrcxz adc lret fisttpl insb retq sbb loope (bad) lock movabs vpunpckldq rclb pushq rex.WB ss mov sub pop (bad) pop add or push js (bad) (bad) xchg sub jns add fisttp jo mov sub negl pop divl (bad) sbb xor stos (bad) mov push xchg pop fcmovne and callq cmpsl imul mov (bad) icebp jno or push or mov xchg loopne mov xchg fs outsb sahf adc movabs in (bad) icebp rex.WB pop in (bad) insl mov jb shrl (bad) jp lahf mov fwait nop sub int mov mov rex.RB jns repz rex.WB xchg movsb rex.WX loope in out std imul leaveq rex.WB test ja lods fildl je xchg stos add sub pop icebp mov jne (bad) rex.WB rex.R and or pop movabs scas fisttp rex.WB fimul push flds sbb mov fdivrs leaveq jrcxz or (bad) divl pop rex.XB enterq cs cmp xor cmovns add sbb jge rex.RXB mov test repnz pop js rex.WRX adc rex.WB xchg (bad) rolb repz (bad) fimull data16 pop rex.WB mov gs sub movslq jrcxz adc (bad) lods (bad) (bad) cmp in sub ds (bad) sbb stos (bad) mov fs mov pop and rex.WRXB adc rex.WB sbb fisttp (bad) pushq loope adc fmul out xchg mov rex.W (bad) test negq retq rorl mov push callq sub (bad) callq insl addr32 pop and mov push cmp cmp jp xlat push cmpsl nop (bad) insb xchg pop rex.WB js (bad) (bad) mov pushq cmp (bad) sahf rex.WRB fcomps jmpq popfq jnp sbb lods outsb cmpsl mov or or int cmp imul rex.WRX or (bad) push cltd xchg rorq sbb je sbb xor xchg (bad) pop xchg rex in jno jg andl rex.RB loopne or pop imul (bad) sub cmp (bad) sub movsl and and cmp out loop and movsb push mov pop or callq or mov and mov (bad) (bad) js cmpsl sbb mov rex.R pop rex.WB rex.R mov rex.XB jmpq cmc (bad) fwait mov mov xor jmp adc sub jrcxz rex.WRXB (bad) pushfq xchg fyl2xp1 loopne rex.WB retq movabs rex.W rex.WB push pop movsb cmp addr32 fisttp add callq or (bad) gs cmp rex.WB adc xor (bad) nop lret rex.WB mov data16 out pop std (bad) rex.WB xchg sti rex.WRB (bad) or sarl rex (bad) (bad) add pop (bad) mov cli (bad) rex.WB rex.RXB sbb fcmove sbb cwtl mov rex.WB rex.WXB mov std cmovle jns and jnp jge rex.WB retq rex.XB or or pop pushq pop push (bad) loopne and movabs add jae push jnp rorl cmp dec cmp mov (bad) cltd int3 int (bad) rex.WB or sahf xchg rex.WB or mov int3 push loopne pop jo mov rex.WRX out jrcxz adc outsb lahf jbe jrcxz nop icebp mov pushq int repz in stc push rex.WXB push pop rex.WRB leaveq cmpsb sub (bad) test mov cmpsb bnd add clc mov fsubrl jmp rex.WX jbe jp (bad) push stc (bad) push loop cmpsb (bad) sbb rex.W or (bad) xchg test rex.WB (bad) repz repnz and ficompl or xor sti (bad) mov (bad) jo out mov scas mov out rex.WX rex.W (bad) xor pop movabs rex.XB jbe xlat push (bad) fsub int rclb rex.WR xchg rex.WB mov imul lret fcompl js xor sub movabs pop mov scas pop (bad) lcall rex.B rclb ss and xchg fucom (bad) xchg rorb push scas andb (bad) (bad) stos (bad) sub leaveq (bad) in xor fadds cmp nop ja (bad) faddl repnz callq cmp iret (bad) and push sub mov leaveq roll jge sbb jns mov clc shlb rex incl enterq pushfq movabs xchg fwait mov (bad) xchg cmpl cmpsb jrcxz adc sub imul xor lret sub lods jmpq cmpsl roll rex.X push mov repnz mov in mov leaveq rorb (bad) cmpsl cld cltd nop (bad) mov push pushq fdivl sub jl divl int3 (bad) test xchg (bad) add rex.RB (bad) fdivrp test sbb pushfq dec add lret subb (bad) popq jns rex.X xchg xor (bad) cltd fdivs cmp (bad) test mov rex.WR shrb lcall xor cmp add pop mov cmp (bad) jns retq or cmc lahf (bad) rex.XB nop repz adc (bad) pop pushq (bad) jmp fcoml sub callq clc (bad) rex.B adc fs jmp (bad) push sbb rorl rex.RXB or fs movabs rex.R pop mov mov xchg mov out push push (bad) fstps or sub in sub push data16 fld rex.R mov (bad) movsl in mov rcrb movsb rcr mov mov mov mov movslq cli out xchg mov pushq vcomisd jbe fcompl mov xchg ja adc cmp rex.R push addl movabs xchg pop pop jmpq (bad) (bad) cmp rex.R jbe popfq xor (bad) xor pop xchg jno pushq add adc (bad) xchg jg repnz stos (bad) and gs jnp cmpsb lods rex.WRX rex.RB movabs imul in jb (bad) rex.WB test sub sub pop sbb jp rex.WB (bad) movabs sarb mov jmpq rex.B push scas (bad) or out movsl stos mov int3 retq push (bad) xchg add (bad) shrl movsl and (bad) jrcxz push mov test push push loop rex.WXB repnz mov xor test pop cltd mov jle faddl test out andl test sub cmp leaveq rex.RXB rex.WB cs rex.WX lret insl adc sub negl pop sub lods jo imul rex.WB or sbb xchg jmp rex.WXB movabs sbb mov add decl test sbb xor orl mov xchg rcrq mov adc rex.RB addr32 scas (bad) jne (bad) rex.WB (bad) out sbb (bad) sub xor out xor rex.WRX xor fs sahf (bad) retq push rex.WB rex.R rex.XB mov addr32 rex.RB mov cmpsl rex.WB lods jb movslq (bad) mov cmp jp sub stc movsb push imul rex.WB jp jnp rex.RXB fs rex.WB sub adc pop rex.WB xchg (bad) rcll hlt cmpsb and and mov mov (bad) sbb sub rex.WX clc loope and pop xor rex.WRB rex cmpsb ds rex.X movabs orl xchg xor and pushq xchg rex.WRB (bad) rex.WB sub (bad) mov rex.WB jrcxz callq callq and (bad) mov xchg jp gs adc out or jns rex.W fiaddl jmpq iret out rex.WB rex.XB out (bad) callq loope pop std in xor test rex.WB (bad) adc sbb sahf rcrl mov movabs std movabs and stos (bad) and pop push mov (bad) jp test loop or (bad) (bad) pop lret jge mov adc retq pop rex.X outsl stos stos hlt push mov rclb mov add jnp pushq and pushq mov rex.R rex.WRXB movl rex.XB (bad) (bad) mov fs imul pop adc xchg rex.WX adcl or jo rex.B mov sub (bad) add loop mov jmpq rex.WB mov add gs or adc xor pinsrw add (bad) ja pop pop insl mov mov sub mov add add push pop js mov outsb fisubr push xchg xchg or or fsts fldenv movsb shld cmp cmp insb adc rex.RB rex.WR (bad) jno (bad) pop push or cmp enterq roll or jns lahf lea fsubrl test mov js lret mov mov sub js in cmp or cs pushfq push (bad) addr32 movabs (bad) enterq insb movabs cmp add push sbb rex.WRB addr32 (bad) mov (bad) lock movslq adc retq fimull mov xchg push sbb mov xlat out and xor out jne xchg mov test movslq jmpq mov add (bad) xlat mov (bad) cmp cmpsl movabs rex.WX xor mov pop rex.W mov std (bad) mov sbb adc (bad) ffreep mov (bad) mov add xchg stos (bad) pop xchg sub (bad) jrcxz retq (bad) mov and (bad) imul lahf leaveq pop enterq mov (bad) mov (bad) jnp rorb jo callq (bad) xor (bad) xor sti callq (bad) xor int3 rex.WX addr32 test (bad) jnp cmpsb sahf add leaveq jne js fcomp (bad) sbb sbb cmp adc rex.RB rex.WRXB add adc cmc xchg push xchg xchg mov or and sub (bad) adc adc cmpsl or sti xor and icebp xor repnz jmpq mov and push roll jnp sub add sub ficomp pop adc pop ror xorl or shrb movabs or and retq (bad) mov cmp push jo jle loop (bad) repnz push and adc add cmpb pushfq sarb addr32 movabs mov retq push nop in outsl js xchg retq mov pop pop rep rex.R xchg outsl test idivl pop push (bad) mov jae adc stos xchg mov push (bad) sub mov mov push sub movabs rex.RX insb (bad) out (bad) repz pop fisttpl sbb or mov sub cmpsb leaveq jmpq stos mov lock sti sbb (bad) ja xchg rex.XB xchg sub outsb outsb mov movsl rex.WX gs xor (bad) xor (bad) leaveq rex.X (bad) (bad) sbb (bad) sub mov shl rex.WX out shl scas jrcxz fcomi (bad) (bad) out push divb mov movsl fist scas mov sub lahf sub xor rex.WX repz jne mov cmp (bad) clc fidivrl test (bad) rex.RXB repz mov sbb cld mov pushq data16 rex.R (bad) cld cmp mov (bad) in fisttpl push xchg mov mov (bad) rex.WR test cli sub pop cmp (bad) mov pushq out lods (bad) icebp rex.RXB lret out add mov sub pushq outsl xor fadds movsb (bad) rclb fistl rex.RB ss repnz stos mov sbb xor (bad) mov sub pop sub rex repz cld mov (bad) movabs loope fdivrs iret hlt (bad) xchg cmp subl or push sbb outsl xchg push xchg rex.W pop lods imul push movslq xor adc mov pop cwtl sbb repnz lods xor ss xor pushq jmp (bad) movsb or rex.WB stc (bad) int jnp mov rex.RXB cltd rex.R addl loop int3 fistpl mov rex.B stos mov mov jae adc jbe sarl fstpt adc add movabs pop pop cmp (bad) jp (bad) mov pushq pushfq retq imul and sub xorps and stc fsts std or jl data16 pop xor jno mov cmp rex.R iret xchg pop (bad) rex.WX cs sbb xchg and jmpq mov fs std scas push cmc int3 jns stos adc add and push rex.WR pop jae and jmp fbld rex.WRX lock sub (bad) lret (bad) push enterq or sub pop test (bad) testl rex.RB test lods sub lret jo fsts sub jns rex.XB cli and add push cwtl sub jne (bad) rex.WX repz je xlat lods adc andl in jb xchg retq pop in faddp enterq fmuls loopne jmpq sub jno mov or (bad) and adc add (bad) sbb cs (bad) lret rorb rex.RB sub (bad) push int stc jb fnsave jge iret fisubrl rex.R sub xor mov jrcxz divl movabs (bad) (bad) fs mov xchg or (bad) mov rex.WX int mov jns loope imul jno fcomps or adc cmpsb push jno rex.W lret lret decl fldenv xchg jne and or add adc push pushfq mov gs and outsl pop fs rex.XB pushq insl xlat repnz gs (bad) jmp sub cmp jae sbb sub insb (bad) (bad) leaveq pushq adc or (bad) rex.WRB mov test pop rex.XB rex.X mov (bad) xchg in jp and mov testb sbb stos rex movabs cltd cmc push movsb (bad) outsl movsl je fwait pop and (bad) jge movslq out xchg fidivr cmp rex.RX xchg test pop jnp callq (bad) in push movabs (bad) and (bad) (bad) adc (bad) test jne movabs lret mov js mov mov icebp xor add rex.WB xor imul rex.WB xchg sar divl rex.WB push imul push rex.WR rex.WB (bad) sbb addr32 test mov cmc jbe rex.WXB rex.RX mov sub mov rex.WRXB sbb (bad) cli and sub and push xor xchg cmpsl rex.WRX int pushq mov ficom xorb pop iret pop stos movabs and fiadd retq and (bad) fsts xor js adc stos movslq jne scas jne movabs popfq (bad) fistpll rex.WB add (bad) (bad) xchg rex.WB in push add push rex.WRB rex.RXB rex.XB loopne or fstpt callq test (bad) (bad) push jbe rex.R rex.XB or and cltd rex.WXB rex.RX rex.RXB mov add popfq mov sub sub and pop (bad) jl adc rex.WRXB rex.WB je sbb (bad) rex.XB adc xlat rex.WXB xchg xor sub or rex.RB push movsb fidivl or stos or ds movsl callq rex.B fs fcmovnbe pop movabs (bad) pop out (bad) (bad) cmp xlat rex.XB rex.WRB pop rcrq (bad) rex.WB fcomi mov je cmp jl push rex jbe push (bad) (bad) (bad) (bad) add leaveq cltd rex.WXB (bad) cmpsl (bad) (bad) int rcll sar rex.WX insl test mov mov jbe rex.RX add sub sub pop add lret sti sub cmp rex.RX xor sub (bad) sbb rex.WB cli xchg nop xchg lods mov (bad) xor jp or or (bad) sahf adc sbb ja mov cmp or xchg rex.WB roll xchg mov push (bad) movsl fildll stc (bad) sbb rex.RX xor pop (bad) sub (bad) rex.WXB rex.WB rex.WRX lahf je lock (bad) xor movabs or divb push rex.WB ds xor shrb push sub push outsb push xchg (bad) (bad) (bad) loopne rex.RX xchg pop mov fmuls ja mov sub (bad) jmp pop and pop movabs mov movabs adc jl lahf jbe lock xor (bad) xchg clc pop sahf mov mov jnp movsb outsl icebp rex.WB xchg out rex.WRXB mov mov cmp rex.WRB xlat or rex.R movsl (bad) (bad) and push adc insb mov push rex.WB icebp (bad) in lret add rex.WB rex.RB jb loopne ror mov rex.WB repnz sti xchg push or f2xm1 xchg sbb (bad) push scas rex.WXB mov out nop xor and fistpl adc cmpsb (bad) in sub fprem1 addr32 test mov rex.WR rcrb (bad) adc push testl flds rex.RX mov ds push adc loopne fldenv enterq rclb sub adc test lods rex.RXB or cmovns out mov js jbe out lods adc xchg push xchg sbb icebp sub imul and jg rex.WX mov sbb imul (bad) xchg sahf sub mov gs add lret out rex.WRB imul mov (bad) (bad) pop pop and and loopne xchg rex.WX int (bad) sub rex.XB mov xor adc (bad) movabs sub (bad) push ror gs fwait lods cmp rex.WB scas je hlt notl rex.XB mov callq and loopne jmpq outsl repz bnd in jl mov (bad) movabs rex.WR out pop mov int3 (bad) mov and jo add int3 stc add mov stos imul pop pop cmp mov rex.WB lods loop sub pop (bad) rex.RB xchg rex.WB sub adc xchg pushq or jl xchg lods iret mov out adcl fcmovne add lea (bad) and movl and (bad) mov rex mov add pop (bad) xchg test jae rex.WB sub adc pushq jbe leaveq jb loopne push sbb and cmpsl pop fildll and or mov fsts adc add (bad) pop rex.W mov movsb and lea cmpsb in test loopne sub mov xchg insb add adc jnp rex.WRXB xor callq retq (bad) (bad) (bad) orl jrcxz xchg push xor int3 es adc movsb mov pop sbb mov jne add mov mov cmp add out jrcxz xchg movsl out iret and rex.WB pushfq rorb cmpsb ss jbe xchg movb pop and sub jge rex or rorl rex.RXB callq psubb adc cmp rex.RB rex.B fcoml movabs repz rex.WR addr32 es test movslq nop sarb leaveq jmpq pushq adc rex.RX (bad) mov (bad) sarb (bad) (bad) mov (bad) rex.WB repnz sub es (bad) mov (bad) sub push sbb rex.WX (bad) adc in rex.WB scas cltd and xchg mov mov rex.RX pop add pop and mov rex.WB jmp mov (bad) pcmpgtd test stos gs (bad) (bad) enterq sbb retq (bad) je (bad) enterq mov pop rex.B loopne pop (bad) xchg rex.B rex.WRXB (bad) cmp movsl fadds loop and add pushq sbb test lret stos push and rex.WB pushfq sbb jmpq out out pop loope xlat lea loopne (bad) lods out jp push leaveq adc rex.WB sub pop mov mov sub addr32 (bad) cmp mov rex.WB mov push rex.WB and scas jnp out jle rex.RX rorb pushfq xchg mov repnz sahf xlat lret jge lods or rcr fwait cmpsl adc rex.RB jae adc rex.WRB pop je or fsubs and jb rex.WB test rex.R out fs loop and shlq std (bad) rex.WR mov repnz sub jl xchg cmp push cmpb cld lock int3 test callq leaveq pop and jge (bad) stos pop shlb mov (bad) push movslq rex.WR (bad) movabs cmp in lret pop movsl movabs and sbb (bad) sub jne xchg cmp addr32 xor pop xor jnp and jo cmp jb sub add xchg test fs loopne test xchg jmp nop push imul shll test cmpsb stos gs insl cmp xchg jnp retq sub sub imul add hlt rex.WX rex.RXB rex.R rcl test pushq icebp gs mov movabs movabs iret rex.WB stos stos outsl mulq cli jnp jp decl mov sub rex.WB cmp movabs and cltd cmp cmp enterq sub and rex.WB (bad) cld sub xor push add cmp loop rex.WB sarl rex.B fisttpl pushq xor xchg jne mov mov mov cmc or rex.WRXB movabs push sub (bad) cmp movslq pushfq and xchg int3 fbld jne xlat fdivrs (bad) stc push push cwtl rex.WB rex.RX lahf rex.WRX and out pop xchg or imul (bad) sbbb addr32 (bad) rol and sti mov popfq cmpl mov insb sahf mov (bad) icebp scas or fild sbb add xchg pop rex.WRB lods je push cmp popfq fcompl (bad) in scas js cmp xchg or jns shlb pushq out rex.RXB retq pop (bad) add fsub and je iret mov rex.WB divl jg stc mov xchg rex.WX fldcw rex.X rex.RX mov rex.WRXB adc sub int or push adc cmp or jmpq adc rex.B data16 cltd (bad) (bad) rex.RX jrcxz stc rex.WB pop ja,pt and xchg movsl sbb add mov sub (bad) rex.WB rex ss xlat cmp xor test sbb rex.WR jmp push or fidivr lret jno xor or in push (bad) xor adc mov xchg pushq xchg fstpl (bad) push adc jbe adc cmp (bad) (bad) (bad) jrcxz rex.WRXB rex.WB jg (bad) rex.B pminsw outsl push rex.WB rex.RX adc pushq (bad) push xchg cwtl (bad) (bad) or rex.WB mov test rex.WB rex.R adc xchg sti movslq mov sub fisttp cmc (bad) test insb adc pop sbb (bad) pushq mov in and xor adc shrl rex.WB nop mov test jbe rex.WB loopne cmc xor fucomp lock addr32 ds add rex.RB pop jg insl cmp rex.WB rex.RX sbb cmpsl or rex.WB out pop movsl cwtl (bad) mov rcrl out rex.R jp lods rex.WB jno adc insl push rex.WB rex.WRB rex.B pop push rex.RX ljmp and rex.WR pop rex (bad) sbb gs icebp mov xor (bad) ds in xchg (bad) and loope jmpq fdivrl rex.XB xchg movsl mov out sub rcrl or and (bad) xor jmpq jo repnz or (bad) jl callq out rex.WB mov gs leaveq adc push mov (bad) rex.WB sbb push mov movabs jnp (bad) xchg cmp int jae or jl xchg insb rex.WB push jge rex.WRX xor xchg js movsl rex rex.WB cmp or fildll rex.WB rex.XB in in mov rex.WRXB retq stos rex.WB jae rex.WB sub (bad) (bad) imul addr32 or loop cld and pushq rex.WB test pcmpeqb movsl jrcxz repnz cmp rex.WB push or (bad) cmp cmp sbb and mov fstl test (bad) sbb mov popfq add rex.WRX scas xchg bswap push loope ficom lret cltd (bad) leaveq cmpl mov (bad) sbb adc xor jno pop add rex.WB (bad) (bad) cmp jae mov clc rex.WB mov enterq xor xchg rex.R sub rex.WRXB mov (bad) icebp rex.RB (bad) mov xor hlt push mull jno gs repz lods rex.WXB adc mov imul (bad) leaveq xor retq fimull jne js sbb rex.X (bad) cmp rex.XB sbb xor fisubrl callq callq or sub pop pop gs flds shrl push lock shl rex.WR rex.WXB callq sub adc roll rex.WRXB sbb std shll cmp rex sub lret outsl mov pop adc cld movslq int cmp clc hlt (bad) rex.WB lock ss rex.WXB or retq sbb sub pop sbb imul (bad) lret ja ss push push iret leaveq (bad) orb jge jp sbb jmpq sub jnp rex.RXB lock jns js repnz std rex.WR rex.W sahf movabs jmp push callq xchg rex.WB (bad) rex.XB rex.WB shlb enterq push imul rex.RX mov jge mov cmpb xor mov (bad) adc rex.WRX rex.X (bad) xor orl pop jmpq sub pushq vminps and mov flds and mov sbb push xchg (bad) (bad) xchg pop (bad) rex rorl insl rex.X out push loopne ror enterq adc scas (bad) rex.WB leaveq (bad) cmp pop mov sbb movl add cmp and rex.WRB sub xor mov add pushfq pop gs and adc rex.B rex.WB popfq cmpsl mov out cld (bad) cmp adc add fdivrl fbld mov movabs mov add stos jnp xor add (bad) or cld bt add xor push add cltd (bad) pop xchg hlt xor rex.WB rex.WR xor (bad) xlat adc movsl mov sbb fisttpl pushq cmp sbb push xchg xor insl rex.WB adc adc mov repnz test xchg sbb xor rex.WB cmpsl imulb rex.WB rex.W test rex.RX xchg rex.XB movabs xor xchg adc cltd (bad) enterq lock ror gs movabs (bad) (bad) or enterq (bad) (bad) sub loopne lahf (bad) (bad) sub sub push (bad) mov (bad) or (bad) and pop mov data16 retq sub mov hlt in icebp sbb or mov adc rex.WB loopne cld mov out rex.WB ja add adc rex.WRX stos lahf rex.WB or ffree mov push and fldcw rex.WB cld xor xchg scas rex.WB repnz in rex.WRB rex.WX sub pop jne push notl callq (bad) cltd push add jns jl out rex sub mov rex.WB mov callq rex.WB loopne cwtl jae (bad) scas clc push nop pop push rex.WRB int jp cmp jrcxz rex.WB cmp callq and outsb (bad) imul (bad) cmp xchg mov or mov rex.RX and xchg rex.WRXB xchg push lret js out mov push push test loop add sub pop add scas or out fldcw pop retq jl pop rex.RX rex.WB jge cltd push je sahf xchg stc mov imul std fs (bad) fistl xchg xor mov mov (bad) fs fucomp sub rex.WX sub jae cmc push xchg rex.XB jmpq sbb pop out ljmp rorl rex.WB or fisubrl push cmp callq fcmovnb test outsl lea mov imul loope xchg mov test shrl fadd jmpq stc sbb repnz mov je pushq rex.RB rex.WXB (bad) sbb adc imul sub mov (bad) xchg repz push rcrl es sub (bad) mov pushq lock (bad) cltd push xchg rex.WB mov mov or repz mov pop or rex.B add sub stc retq rex.WRB pop imul xchg xchg jp sub scas sub clc movabs jae data16 (bad) imul xor rex.WB rorl cmp clc sub std addr32 mov xor xchg mov rex.X bnd popfq imul mov rex.RX rclb pop jp push rex.X ds jl pop stos mov adc outsl or push rex.X test rex.W and clc movslq (bad) movsl sub rex.B in or leaveq (bad) rex.WB rex.WXB retq movabs (bad) cld test (bad) clc jge mov rex.WB xor movabs sub rclb rex.WXB mov addr32 test sbb push rex.WRX (bad) fldt ja (bad) (bad) addr32 test sbb je pop push push rex.WB lock notl push jmpq jno stos or cmc jrcxz pop mov lret insb clc movabs rex.WX (bad) mov scas push (bad) retq xlat (bad) mov add or mov loope ss (bad) xchg cmp nop (bad) rex.WXB (bad) pushq rex.WR rex.X movabs std jne cmc outsb (bad) sub rex.WB out test int pushq sub jno gs lock mov stos roll fiaddl fcoms (bad) mov (bad) retq mov stos jle mov enterq jno pop js sbb stc (bad) mov push sbb or (bad) pop std cmp out fsubrs mov or (bad) and jge fcomps callq mov mov rex.B clc movslq out outsl pop outsb data16 rex.WXB rex.RXB pushq (bad) scas (bad) mov fisttpl lods pop jl sub clc test (bad) pushq mov imul (bad) (bad) push mov pop jno pop test loop icebp leaveq rex.RB pushq or rol mov movslq (bad) pushfq cmp imul rex lret enterq rep xor stos (bad) and (bad) adc mov xlat mov jbe outsb (bad) rex.RX pop sbb jo (bad) lock rex.WRXB lahf or mov out push stos mov clc jmp and bnd xchg lock sub jl (bad) add fnstenv test (bad) jns rex.RXB mov (bad) add lahf js in sub or cmp mov or and xlat es out decb xor imul jmp rex.WX add sub lea pushq and (bad) test xlat rex.X sbb sbb rol pop test test push fwait ds cmp mov xorl loopne rcrl push or (bad) cmc rex.R and shld stos (bad) rex.WRB leaveq push (bad) insb rex.WB int mov rex.WB jnp jmpq test movsl pop (bad) rex.WRX rex.WX cli or jp pop rsm addr32 mov rex.B and and cmp pop jo out xor (bad) add movabs mov push movabs mov dec repnz xchg out stc callq or cmpsl jge or (bad) and fs fsts ja rex.X push loop jns rex.WX add test (bad) cli in in xor movabs andl cltd and test pop rex.W rex.WB mov xor (bad) rex.WB xor (bad) or xchg out add mov (bad) fcomps xchg jl rex.WRB fstl rex.WB (bad) mov cmc jmpq xchg retq jno (bad) or stos sub pop in sarl hlt mov add sbb xchg (bad) cmpsl xchg rex.B rex.WB (bad) cmc pushq xor retq mov (bad) xchg (bad) (bad) (bad) rol sbb fisttpl push push (bad) sbbl (bad) rex.WR data16 cmp push or pushq lods or mov adc test orl xchg cmp push movsl rcll sti push loopne sbb jg xchg rex.WB cmp adc sub adc push pop sub push (bad) xor and xchg cmc (bad) sbb (bad) enterq add sub push (bad) and pushq rex.WRX nop (bad) rex.WB (bad) (bad) pop cmp add push movabs add rex.RB (bad) enterq test rex.WB js stos or or stos rex.WR sub (bad) pop xchg mov loope btcl xchg (bad) (bad) rex.WB adc add sub rex.RX mov movabs movabs (bad) addr32 or rorl psubusb mov xor addr32 ror jnp and pop ss loopne rex.WB mov adc mov leaveq leaveq sbb rex.WB rex.WRB cs xchg fimul stos in imul jg (bad) mov rex.WX andl in (bad) insb xor test fimull mov adc (bad) pop (bad) in (bad) and jl xchg (bad) cltd mov xchg mov (bad) out (bad) xchg rex.WB rex xchg (bad) mov je rex.R fwait rex.RB cs pushq adc jl popfq rex.RB imul adc cmpl cs jbe ja clc push mov add rex.XB mov rex.WB int xchg fsubrs scas icebp jmp mov xchg fwait xor lods push (bad) rex.WR add rex.X xchg or jae push pushq vprotw rex.RX shlb rex.WB xchg mov pop rex.WB cltd test fwait insb sti sub ds popfq sub movabs or rex.WB test (bad) or xchg loopne adc (bad) fcompl rex.WB mov rex (bad) rex.WB sbb cmpsb sub or xchg and cmp (bad) sahf or add es je test add movsl sbb mov out sub (bad) cmp (bad) sub sbbl push in lretw xchg mov fisubr push lret cmpsb (bad) fisttpll pushq and add xchg xchg repnz jns rex.WB rcr stos out mov (bad) rex.WXB (bad) divb pop (bad) add shl (bad) clc iret xchg rex.WB rex.X mov pop jbe adc cmp sbb leaveq sbb lock (bad) cmp rex.WR cs lahf scas sub imulb and lods movslq xor sbb movabs mov adc mov mov xchg pushq imul (bad) add int3 rex.RX rex.RX cmp sub jo or mov cmpsb outsl out sahf jno cmp rex.R rex.RXB leaveq (bad) fstpl rex.RX test div clc lods (bad) mov cmpsb sub enterq mov cmpsb rex.XB rex.R fcmovbe mov (bad) orl movsl rex.W rex.WRB rex.RX data16 xor (bad) ds cmpsl out sbb cli xor xchg (bad) pop mov push popfq (bad) scas cwtl and mov repz gs out callq pop rex.W mov add shr pop mov push jno ror sbb rex.RX rex.WRXB (bad) jbe rex.RX fsts cltd cmp xchg sub sub or (bad) xchg (bad) rex.B cs jrcxz xor sub (bad) in add adc rex.WX lret loope pushq int in out mov pop retq xchg jmpq pushfq and scas in add outsb add popfq shl int3 leaveq mov pop rex.WXB gs (bad) pop rex.WB adc (bad) loopne rclb jnp sti rex.WB (bad) fs callq outsb rex.RB addr32 mov cmp lods sub rex.RXB jle rex.WB sahf mov xor mov pushq mov and xchg cmc callq sbbb test ss rcrl (bad) sub jmp rex.RXB fistp (bad) rcrb adc rex.WB rex.WRXB sub mov addr32 scas and xor out insb add (bad) push clc ja rex.WB mov rex.W cmp jle jo int lea rex.WB (bad) adc addl subb pop nop xchg (bad) cmpsb jns push cmp (bad) or shll pushq fsub (bad) mov adc int3 lock jae mov cmp insb rex.WB (bad) jnp movabs fbstp (bad) and movsb cmpsb rex.W gs mov xor popfq std and add rex.RXB ror callq sbb push rex.WR fs fild pop sbb cld rex.WB rolb mov out ja movslq rex.B add addr32 mov lods cmp (bad) test (bad) fnop (bad) (bad) out movslq rex.WB cwtl pushq rep mov xchg sub pushq cwtl pushfq (bad) mov movsb pushq pushq push xor lods es lahf and rex.RB rorl (bad) adc rex.WRB cmpb mov fstpt rex.W in pop movabs rex.WR (bad) (bad) sub (bad) pop mov rex.WRX cmpsb ss pushq sub cmp mov hlt rex.RXB adc lahf not xchg xor adc insl (bad) pop divl sbb rorb adc cltd sub sub jno movsb sbb add insl rex.WB pop imul and (bad) (bad) (bad) mov insl sbbl lret pop jnp (bad) and callq rex.W (bad) pop pushfq mov mov ficom rex.X (bad) (bad) int int pop jl mov rex.WB rex.WRXB add push callq jnp pushq movabs push (bad) sbb pop (bad) int add pop rex.XB jle fdivs rex.B push add (bad) (bad) clc rex.B repz nop rex.WRX adc rex.WRXB movsl scas loopne mov iret rorb testb add cmp sub and add or cld jne pop (bad) mov rex (bad) out (bad) sahf ror jge rex.WB rex.WB mov or xchg test cs rex.W movabs or test (bad) sub pushq cltd pop addl lea push rex.WRX xor sbb cwtl loop rex.B movabs (bad) movabs out imul insb test (bad) sbb cli rex xchg ja fmuls cmp callq je movabs mov and mov mov clc jge clc loopne push and rex.RB rex.WXB sbb retq xor cmpsl cli stos or xchg xchg (bad) jae and mov lods imul test mov movabs scas push rex.WB rex.XB leaveq mov rex.WB lock (bad) push mov rex.WB (bad) jnp mov and sub mov movzbl cmp or (bad) fmull iret mov add mov (bad) jb xchg or rex.WB rex.R int cmp xchg and scas rex.WRXB xchg adc pop insb jns sub rex.WB shr rex push rex.WB sbb rex.WRB rex.WRXB mov cli pop adc ja xchg jrcxz rex.B rex.XB ss (bad) stc in mov pop add (bad) sub rex.WB lea push movabs and add stos sbb jnp or mov push pop xchg rex.WB cmpsb (bad) mov or xor cmp movabs loope xor (bad) rex.WB pushq nop pop lret lods cmpsb (bad) rex.W repnz movslq in in add iret mov sahf rex xchg icebp rex.RXB xor test mov adc rex.RXB lock rex.RB xchg rex.WB mov and lods push push rex.X pop rex.WB in retq and icebp xchg in rex.WX rex.WRX mov sbb loope jno (bad) or (bad) mov insb or xchg sub mov rex.XB mov loop (bad) or movsb sub pop mov or test (bad) sbb cmp (bad) sbb sub sub insb sub data16 rorb (bad) shrb mov add insb rex.WXB rex.WRB gs sbb mov scas mov cmc rex.RXB loopne push (bad) jno cld lahf and jp rex.RB out xchg jmpq fildl ror mov rex.WB rex movabs mov cli mov sub and cmp shlb ss rex.WRXB rex.WRB mov insb jns rex.RXB pop rex.WRB (bad) mov in rex.WB rex.WX sub cmp rex.RB rex.RB pop add loopne rex.X mov mov (bad) rex.R xchg out and (bad) es or outsb fimull (bad) (bad) shlb (bad) jmpq fstpl mov pop (bad) insb (bad) shlb (bad) add push and rdtsc mov (bad) sti scas rex data16 xchg (bad) rex.WRXB cmp or push sub rex.RXB cli push insb leaveq pushfq rex.WB adc fstl rex.W and cmpsl rex data16 mov mov rex.RXB jge rex.W rex.WXB pop and rex.WB fs repnz or sbb insb pop and sub add rex.WB lods or rex.WR sub sub shrb repnz rex.RXB test add out jl test insb (bad) rorb xor rex.RXB (bad) rex.WB rex.WRX (bad) push sub loope (bad) (bad) mov rex.XB fisubr insb rex.B rex.WRB (bad) lods and rex.B in adc (bad) fnstcw orl insb xor (bad) enterq cmp shrb (bad) mov ss sbb add jmpq rex.WX cmc in data16 or mov pop or adc addr32 insl ficompl mov (bad) sub sub fistpl sbb pushq sub (bad) callq lahf sub sbb jge test mov loope mov mov (bad) sub or sub enterq and stos sub icebp add add rcr imul movabs fs (bad) scas sub xor sbb add rex.WB sbb (bad) jmpq rorl rex.WB rex.W movabs lods rex.RB rex.RXB (bad) pushfq rex.WB xchg adc (bad) shrb rex.WB stc pop or mov push movabs insb xchg shlb pop (bad) outsl xor fimull leaveq adc jge fnstenv (bad) mov insb sahf sbb clc and sbb mov insb rex.WB rex.R rex.WX xchg pop push insb clc in adc (bad) pop rex.RB (bad) int rex.XB scas mov rex.RXB addr32 es and xor mov stc fbld or jbe add (bad) icebp rex.WB rex.XB movabs mov (bad) add (bad) jp jmp (bad) or pop pushfq jne (bad) movsb mov orl (bad) xor xchg insb (bad) imul adc rex.WB (bad) rex.WB or stc or add loope (bad) enterq rex.B lods test rex.WB ss int adc rex.RB cmp insb out cltd out mov icebp mov rex.RXB add rex.W enterq enterq pop rex.WB std movabs sbb xchg subb (bad) (bad) push orl xor sub xor (bad) sbb mov stos outsb (bad) xor rex.RB rex.RXB scas rex.WB add sub outsl test idiv stos add sbb push rex.WB callq rcr add neg xor cmc movzbq mov clc jmpq je pushq jmpq (bad) leaveq sti rex.WRB mov mov lahf cmpsb rex.WX mov push xor retq rolb sbb add or add repz pop sub jl nop rex.B mov scas rex.X cmpsl insb cmpsb adc xchg or cmp and sub (bad) fadd data16 sti stos out sub (bad) (bad) (bad) std mov sahf xor sub push and or mov sub lret (bad) (bad) (bad) fbld (bad) mov rex.RX (bad) xchg clc sub (bad) lret or fmull add fidivr test sbbl xor lods andl retq (bad) xor (bad) (bad) mov mov pop (bad) jne test out decl in leaveq jmpq bt cmc cmp jmpq pushq jmpq jmpq je bt stc stc sub clc jmpq add add jo js subb test mov mov test loopne callq test and rex.W subb stos mov mov stos callq stos or add add add and cmp push movabs js andb stos sbb rex.W pop stos pushq stos cwtl stos test mov stos callq stos sbb stos add add add int3 add add stos mov stos shrb callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs add add jo andb shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb stos shrb stos loopne callq stos add sbb xor push stos pop stos (bad) stos pushq stos subb stos mov mov stos fsubrs lock clc stos add lods pushq lock or add rex rex.W push movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb jo js nop stos add add add test pop test jo js subb test mov mov test loopne callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos nop stos cwtl stos movabs stos enterq fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs add add pop lods pushq lods cwtl lods test mov lods add add mov push scas add add add jo cwtl movabs shlb movabs or and push movabs mov mov cmpsl shlb callq cmpsl add sbb xor rex.W test test test test test test test test test test test test test test test test test test test test test test and cmp push test pushq test nop test test mov mov test loopne callq test adc sub stos rex.W push stos pop stos enterq or mov mov mov stos shrb add add movabs js andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add add lock add add add sbb enterq and xor callq movabs add add add mov (bad) (bad) add add ss add add add add stc stos add add add add movabs add movsb and stos add add or int3 add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add or pop add add movabs or and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add add movabs mov mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb inc push or cmp or push shr btc bt push not test push bt test shrd mov bts shld neg cmc mov ror rcl sbb xadd mov ror sar xor jge not seta lods rcr ror not stc xor neg cmp adc shr ror sub mov neg clc not rol rol test neg mov setns not mov stos jmpq jmpq pop retq jne jmpq rex.WRX gs sub mov imul movsl adc gs movabs add rex.WB adc (bad) enterq pushfq mov loope xchg adc movsb movsl (bad) mov pushq in cli and cmpsl std pop push hlt pop or ss pop or lret sarl fcoms loop (bad) test clc pop pushq test xchg (bad) or mov and lret (bad) adc jrcxz test fidivl xchg lret iret rex.RXB sub movabs add ficoml add xchg add push jb (bad) (bad) std cmc jge pushfq sbb add add jns nop insl jnp mov (bad) xor loopne stos cwtl (bad) (bad) sub rex.WRXB sub and lret gs jae mov lgs cmc cmp cmp setge lea lea bswap lea pop jmpq jge adc sti insl cmp sub comiss cmp rex.WB mov pop pop jle xchg cmp jo subb rex.XB sbb lock hlt out jp rcrb or retq or xor fwait add lcall jl xchg insl jno or loopne (bad) and push std rcrb mulb incl hlt movabs cmp hlt nop rex.WX mov callq std cmc jge add or shl cwtl test in enterq or adc jne cwtl mov xchg adcl in rex.W rex.XB jns adc callq (bad) out (bad) clc bt stc jmpq jne add setp movsbw sub btc sar shr mov inc add cmc mov stc test test jmpq adc jmpq bt movb bt bt cmp test jno je shld dec sbb push sbb movzbl stc mov setg bswap bts sub lea movsbw lea jmpq pushq lock jle rex.WRXB rex.WRB mov jg test decl (bad) retq cmp push rex.WRXB sbb mov pushq rex.WX addr32 (bad) subb jo and scas bts or xor mov add testb insb and sbb stos and fnstsw out retq (bad) mov (bad) jmpq (bad) callq jge (bad) (bad) callq insb (bad) mov lret scas je hlt rex.WR rex.XB mov xchg jmpq iret (bad) sbb mov clc push fwait mov (bad) (bad) pop jge cmp push fcmove movabs (bad) jo xchg pop cmpsb rex.WRXB repnz out (bad) (bad) (bad) in xchg lods cmpsb and imul (bad) fisttpll jg mov jrcxz int3 movslq je out (bad) rex.W xor (bad) (bad) out (bad) outsl or imull movabs in mov ja rex.WX hlt pushq (bad) adc (bad) rex.WRXB and stos sbb mov icebp (bad) movsl or jmpq xchg (bad) cmp pop fs popfq sbb and adc lock xchg rex.RXB (bad) rex.RXB (bad) (bad) push xchg push mov (bad) lock gs mov push or sahf rorl (bad) (bad) push (bad) in lock shrl (bad) clc mov fsub push cmp test ss cltd rex.WRXB (bad) (bad) test (bad) (bad) (bad) sti mov and rex.RXB repz mov (bad) nop cmp and (bad) (bad) (bad) std or clc pop or loopne jle mov rex.WR (bad) (bad) (bad) decb mov in rex.WB push add add or (bad) rex.WR rex.WX iret out cmp ds int3 pushfq mov loope roll out cmp mov jno or pop cli out rcl xchg rex.X rex.WXB pop js (bad) (bad) jb push xor movabs (bad) cmc bt jmpq jmpq jmpq jmpq jmpq cmpb jmpq jmpq xchg leaveq lods add loopne fnsetpm(287 xor mov std testl fstl mov mov (bad) out ljmp (bad) sti out xor popfq cli mov int (bad) lods xchg push jnp (bad) (bad) cmpsl mov movsl movabs fnop (bad) cmp fidivr cwtl and nop (bad) (bad) jo,pt sahf rex.RB (bad) (bad) cld out js imul (bad) addr32 out (bad) cmp (bad) movabs add (bad) cltd stos movslq fs (bad) (bad) cld test (bad) (bad) (bad) decl push or mov pushq hlt adc and jbe movabs ss add add jae cltd xor loope push insl mov cmc add shlb stos mov (bad) pushq mov (bad) (bad) sbb retq mov pop icebp push ss jae mov cmp je outsb add push push (bad) movslq xchg fcmovu rex movabs add in mov pop int sbb pop pop (bad) xchg movabs rex.WRX (bad) mov cmp adc rex.RX test xchg jmp (bad) es push cmp loop cmp (bad) scas add fbstp pop movsb (bad) (bad) (bad) (bad) cld test (bad) (bad) (bad) (bad) mov pop imul cli cmc and xchg jae push or rex.RX xchg fldenv lret rex.WX jb test outsb sub icebp repz add jnp lods test rex.R ss jo (bad) movsl mov rex.WB std or sbb and sub gs (bad) or movabs loope xor jns (bad) int mov retq test out (bad) jmpq jmpq enterq js movsb cmp psrlq stos jo cmp xlat (bad) rex.B rex.WRXB lahf enterq add cwtl pop jg or flds rcll adc insl xchg xor cs (bad) fnstcw cmc loope lods (bad) rex.RX cld cltd cmpsl (bad) fucom lock repz (bad) int mov (bad) jo (bad) (bad) (bad) decb (bad) (bad) (bad) callq or in or xchg cmp pushq es xchg lods movb ficompl mov and or and pop pop decb jg pushq data16 add add jbe cmpsb (bad) adc xor xchg lock lea mov or shll adc mov retq callq iret bswap mov jmpq jbe movsbw mov sub stc shld data16 (bad) mov btc shld sar movabs mov clc add bsf rcl or shr not mov sar add movzbw movzbl mov jmpq jne cmp inc or mov bt clc bt test or jmpq cmp test cmp jmpq pand movabs (bad) stos push push and jnp jp (bad) cmpsb retq fmul add xchg rcl movl iret decb cmp jmp mov add (bad) xor or rex.WB mulb push std xchg lea xchg (bad) (bad) sti idivb sub in imul hlt mov outsb mov xchg (bad) xor (bad) fldenv pop mov rex.W cmp or add imul (bad) (bad) (bad) sti out xchg outsb (bad) (bad) (bad) decb add adc add add or retq stos pop test js cmpsb cltd add (bad) mov in (bad) (bad) mov mov mov push pushq jmp je fdivrs add jle movabs mov mov (bad) (bad) adc xchg insl pop adc cmpsb or add mov outsb push pop subl out (bad) cwtl mov sti out sbb loop shll (bad) jge and mov sub decl fwait lods adc retq lea cltd rex.RXB lahf int rclb (bad) xor rex.WRX sti (bad) xlat int3 andl rex.WB adc fwait iret rex.XB xchg xchg pop jge (bad) (bad) (bad) cld mov (bad) (bad) repz (bad) (bad) (bad) popfq repz and add jle jmpq cmp xchg sbb add add sbb clc (bad) cmpsl (bad) movsl xchg scas loope cld and mov jg (bad) xacquire int3 mov adc hlt mov pop fsts pop xor jae push cld iret mov (bad) loope rex.WRB (bad) xchg adc shld retq mov mov sbb sarl roll (bad) fisubr (bad) mov push add (bad) jmpq or mov xor rcrl in mov stos (bad) ds rex.WRXB cld cmp mov (bad) xlat (bad) (bad) mov jnp,pn mov data16 adc movabs stos ror mov jnp js sbb mov (bad) std adc xor (bad) (bad) (bad) jmpq repnz (bad) sti jae rex.WX lock fcoml outsb (bad) mov add add imul sub jb test push (bad) fistpll xor movabs in addb sub add xchg callq (bad) insb add sarb mov (bad) (bad) gs lret stc stc rol jmpq jmpq pop pushq lahf int rex.R lret cmc mov jmp sub in mov mov (bad) ss jnp mov (bad) iret rorl cmp add fiadd add sti and mov rex (bad) scas cmpsl mov push rex.WRB mov in lahf cmp mov and (bad) mov add and (bad) mull movabs (bad) (bad) (bad) decb (bad) (bad) (bad) decl sub out sub ja ror cmpsb clc sti outsb imul sub mov xchg rex.RX jle and cmp jo retq xchg mov (bad) mov push lock sbb rex.R and fwait mov rex.WB and and mov bswap jmpq add jmpq stos mov jbe adc negl and imul lock scas rex.RX mov rclb xchg rex.WX sbb insl (bad) mov mov xor xchg lahf jae mov in (bad) xor movabs jmpq mov cmpsb std movabs lret lret mov decb adc (bad) sub rex.WR jns (bad) (bad) (bad) pushq mov (bad) pop push repnz movabs (bad) (bad) adc (bad) push div lahf cmp leaveq insl xor leaveq mov pop movabs (bad) fadd out sub mov (bad) jbe lock mov pop mov and jb xor fs insb add shr insb fucomip (bad) callq jmpq jae lea not setge mov movzbw jmpq cmp ds outsl push push xchg pop rex.R push callq (bad) xchg (bad) rex.WRXB mov jmp pop test adc rex.WRXB or pushfq add clc stos shrb or out xchg (bad) (bad) int3 cmp jb push movsb rex.WB or scas add (bad) js sbb std shll add add add (bad) in (bad) (bad) cmp pushq rex.B pop pushq fsubrl cwtl add idivl xchg outsb (bad) xchg add jnp cmp test imul out (bad) cmp addr32 imul (bad) lret popfq cli cmp (bad) fistl jo (bad) out test ja (bad) fs fwait sahf rex.WB mov int (bad) jp nop cmpsl insb rorl nop mov (bad) (bad) mov nop jge int3 rex.WX jno jns nop (bad) repz pushq mov xchg and out fstl cmpsb outsb rex.RXB jp xchg (bad) (bad) xor cli sti imul repz shrb sahf rex.RXB pop lmsw jns add cli scas rex.WXB xchg imul scas ja and xchg int (bad) (bad) addr32 out (bad) mov pop sti (bad) xor movabs es sarb xchg mov rex.WR rex.RXB (bad) roll xchg and nop sbb movabs mov cli scas add or (bad) mov cltd mov lahf xchg push mov cwtl and rex.WRXB lock xchg (bad) and cwtl rex.RXB mov (bad) (bad) add test xorb rex.WXB addr32 stos (bad) js xchg ss cltd xor xchg xchg (bad) push movsb rex.X xchg stc sub out loopne jp or cmpsl js adcb addl push cltd mov addr32 test (bad) sti enterq xchg lea stos mov xlat movslq add (bad) xor xlat push in xchg (bad) pop push (bad) clc and cwtl (bad) incl cwtl (bad) (bad) (bad) mov test data16 jbe rolb xchg fwait jmpq adcl sti xor or (bad) mov callq js test test jnp adcl clc (bad) push sbb movabs repz cld fcoms data16 xchg (bad) (bad) adc (bad) mov mov xchg jmp (bad) lgs (bad) (bad) rex.WXB leaveq mov mov lret imul loop clc test jmpq pop cmc fisubr lret (bad) sub scas (bad) cmc cmpsb add xor jo xor add rex.WX es mov imul and sahf jp and rex.RXB (bad) mov popfq test jns jg lahf sti cmc rex.RXB (bad) pushfq sbb push rex.WXB shll (bad) (bad) (bad) std mov rex.RX sahf adc pop (bad) fisttp mov leaveq rex.R xor ja sbb jae or fbstp xchg (bad) adc nop rex.W andl callq (bad) (bad) jge std or int3 test and (bad) jp sub sub jno mov rex.XB int3 pop and insb not bswap pop jmpq jmpq jmpq add rex.WR rex.RXB gs outsl outsl outsb push gs imul add shll jmp xchg callq test cmp (bad) (bad) cmp lock cld or mov movabs adc retq mov cmp js rex.RB mov xchg sbb jl cld xor outsb test (bad) push cmp (bad) (bad) (bad) std adc (bad) (bad) jmpq xchg movabs loop scas and or push xchg jbe push (bad) and out sarl jmpq movslq (bad) push nop mov and add add rex jns add mov movabs sub iret addr32 push vcvtpd2dq cmp mov fidiv insb rex.WX mov (bad) test sub mov (bad) adc in ss (bad) adc shr sbb bt mov clc cmp or jmpq jae not lea mov jmpq cli in movsb (bad) adc movabs nop push test (bad) sub jrcxz retq cli add mov mov rex.WRXB mov xor shrb push and add pushq cmp (bad) movabs (bad) (bad) (bad) cli rex.WRXB popfq mov (bad) imul jmp por add cwtl mov idivl sbb and pushq fsts rex.RX mov (bad) mov fdiv xchg mov mov mov xor rex.RXB adc in pop fcmovne (bad) pop fstpt jg cmp (bad) (bad) (bad) cld cmpl xchg cmc xor lock (bad) add xchg or add (bad) (bad) xor and sbb data16 std pop cld (bad) (bad) xor rex.B (bad) xor rex.WB rex.WX mov mov and (bad) imul jrcxz shrb movl clc out push (bad) loope outsl and out mov negl or rcll lahf scas or lock push push mov in jl mov jne xchg add add retq gs mov lret lods adc gs (bad) sahf xchg add jns lret pushq test fidivr sub mov pop cmp cmc pop rex.WRX rex.WX movsl test movabs fs test bswap bt xor adc sbb add bt mov bt add stc sar inc mov cmp cmp test jmpq add jmpq add or decl xchg (bad) jmpq jmpq callq shl adc btc shrd add adc stc bswap sar mov clc cmpb jmpq jmpq movzbw movsbl movzbl pop bswap pop jmpq mov movsbw movzbw movsbl lea jmpq or lret mov jne jmpq out mov (bad) lahf push or cmc leaveq je adc stc push in cmp pop jae lods sbb nop (bad) jp xor (bad) scas negl adc xor mov popfq movabs xor frstor je mov (bad) repz sub fwait movsl adc data16 add (bad) jno (bad) int addr32 (bad) scas leaveq stos add imul je mov (bad) or mov test cmp movabs retq sub out (bad) (bad) (bad) (bad) (bad) and pop (bad) mov add mov rex.XB and xchg pop xor sbb sbb (bad) add sbb (bad) (bad) movabs xchg cli (bad) add movabs mov (bad) rex.WR lods movsb lret fnstenv cltd mov sub out decl (bad) push cmpsl lock jmpq and xchg jnp or lock addr32 test fcmovb cmp pop jl mov jle sahf xchg icebp sbb rex.X rex.W (bad) push sub mov add out (bad) imul cmp popfq jno fs xor sbb icebp rex.XB pushq mov add int3 (bad) (bad) (bad) std (bad) loopne xor movabs cs (bad) (bad) adc setge je push xchg and jl cmp add (bad) ss (bad) js movabs and mov (bad) (bad) (bad) inc retq lret (bad) and rex.WRX ss popfq mov adc sub (bad) stos retq imul idiv lods sub xor pushq sub mov cmpsl mov outsl or (bad) pushq mov shlb xchg jae cmp test cmp jmpq insl push mov sub pushfq add add (bad) mov repnz adc lock lods int3 jp mov repnz cmpsl sbb mov in or mov int3 mov mov movsb mov addr32 pushq lret enterq sbb and sahf cmp out fwait test (bad) (bad) cld out rex.WR cli jae iret loope add or (bad) rex.WR loop sbb addr32 add mov hlt sbb add add jns js xchg pop mov es (bad) andl xchg enterq (bad) repnz adc sub fdiv rex.WRXB cmp imul movabs mov mov rcl data16 imul int (bad) (bad) mov imul mov pop xchg adc mov (bad) sahf rex.RXB rex rex.WRXB lahf sarl mov sub mov cmp xchg pop data16 xor popq jno xchg sahf (bad) repnz nop popfq or sti (bad) in in faddl sbb push leaveq cli insl mov outsl (bad) (bad) (bad) (bad) (bad) cld mov xor dec rex.RXB loopne or or (bad) add add and cmc (bad) mov es jmpq jo cmp retq gs scas (bad) lods test gs xchg (bad) test mov jmp mov jp push (bad) pop mov (bad) adc (bad) jne adc movzbl mov test cmp add test jmpq ja cmc dec sub cmp ror (bad) lock add movsbq mov sar mov cmc cmp cmc stc repnz jmpq jmpq insb (bad) mov jmp push xchg gs mov push pop (bad) (bad) in mov xchg jbe and lret scas js rex.X cs xor insl (bad) (bad) and fdivs jbe int ds cmp in outsb sarb push sub mov popfq (bad) rex.WB and (bad) (bad) (bad) stos fist sub jp and stos xchg rex.RXB mov (bad) movabs scas (bad) cmp mov cmpl outsl or sarl sbbl stc mov (bad) sub lea mov loope and mov (bad) pop stos rex.RXB jmpq je clc bt cmp sub stc cmp jmpq jmpq ja stc cmc clc sub sar shl movzbw bswap add bswap bswap jmpq jmpq mov push jg jmp (bad) divl cmc (bad) mov mov jg in sbb mov (bad) cmpsb adc fmull shr (bad) fildl pop mov cwtl retq and in fidiv mov fstl (bad) and and push lock jl xor test (bad) (bad) scas push jge pavgb (bad) push adc movsb sbb xlat out sarb push test (bad) insl rcrl icebp lahf jbe (bad) (bad) (bad) cld and in (bad) (bad) (bad) (bad) xor sub (bad) (bad) adc or rex.W in faddp push (bad) pushfq xchg cmc mov (bad) (bad) callq xchg callq loop xor fadds push je insl or adc lods add add push (bad) int scas (bad) mov sbb xchg (bad) or cmc test (bad) mov xlat (bad) cmpsl popfq mov jno cmp adc sar (bad) cmpsl xlat lea pop xchg (bad) cli add callq xor addl sbb rex.WXB lret pushq retq iret test lods (bad) sub add mov jo insl mov rex.WRB lcall (bad) (bad) cld sub adc rex.XB (bad) (bad) (bad) cmp rex.WRX xor jp movabs and movabs movabs sub mov out (bad) fldl jge fmull jnp test push sub (bad) (bad) clc xor (bad) cmp scas rol lock mov (bad) pop pop int3 ja test icebp stos jmpq subb icebp sbb rex.X pop (bad) cmpl je mov fsubrs rex.X pop jmpq es imul (bad) in pop pop adc rex.WR mov sahf sub sub or xor ljmpw lret (bad) (bad) rex.WR (bad) out mov je xchg xor sub rex.WB fcomip loope subl je jge jne rex.X lods mov (bad) neg cmp (bad) (bad) (bad) sti jno xchg mov (bad) (bad) (bad) std test (bad) mov loope (bad) rex.WXB push and outsb rex.XB rex.RX push int idivl fimull roll (bad) rex.W repnz retq in shrb mov and (bad) lcall push jle pushq fnsave xor jno stos int3 iret fs adc repz mov negb adc (bad) mov in xor push mov (bad) pushfq sbb xchg pop push mov (bad) sar imul adc out jmpq popfq rex.WXB fldl add sti hlt stc and (bad) rex.RX rex.B repnz jbe push (bad) (bad) (bad) std (bad) and push xor mov cmp and push jno or movabs push movsb mov or hlt (bad) (bad) (bad) std nop push cld jae (bad) (bad) (bad) (bad) out (bad) movsl mov pop rex.B pop fdivrl rex.WRB xchg testl clc sbb (bad) push mov sub scas orb mov xchg and f2xm1 add out jmpq cmp xor adc rex.R rex xor loop (bad) fsub mov mov in (bad) (bad) mov imul adc or rex.XB idiv rex.WR rex.RXB jnp jle shrl mov xor (bad) xchg imul sub (bad) (bad) (bad) jmpq and lea vpcomd int js in push rex.WRX movslq jg movsl rex.WRX xchg (bad) je ss rex.WX (bad) rex.XB mov jp imul rorl movabs add cwtl movabs (bad) (bad) mov (bad) mov outsl int3 jle notl pop sbb and mov or jns (bad) adc negl and jp pop int3 mov or outsb jge mov enterq cmp push sbbb mov fisttpll rex.RB pop rex.WB adc cmovp es xor loope movsl adc xchg subl mov mov adc testb (bad) (bad) fs (bad) testl mov mov mov movsl callq andl cld sub push jmpq (bad) (bad) (bad) hlt (bad) rex.RX in add mov nop push sub (bad) (bad) (bad) (bad) mov (bad) (bad) rex.RX fs sbb cli idiv lock xchg (bad) rex.WB cmp ljmp bnd pop negb movabs or (bad) sarl (bad) icebp push callq jmpq rex.B rex.XB xor rex.WRB loopne mov movabs (bad) fsubrs sub jo retq cmpsl fiadd inc mov stos out pop test pop rorb int3 movabs callq rex.RXB ffreep and mov cmp push scas rex.XB (bad) rex.WR (bad) rex.R xor sub fbstp cmpsl fdivs in pop decb es cmpb movsl push test movslq nop clc and test pushfq xor rex.WX rex.WR (bad) pop xchg movabs and (bad) rex.WRXB rex.RX xchg rex.WRX mov or (bad) push leaveq pop clc rolb (bad) lock rex.W sub lret and callq rex.XB loop rex.WXB mov xlat in and jp psrlq ss nop retq add pop or data16 and rex.WR movslq cmpsl jb stos enterq nop (bad) xor mov or and mov pop lahf sub div rex.WR movslq retq push jg scas cli or cmp mov jl repnz xlat xchg or iret rex.WR sbb rex.R rex.WRX rex rex.W rex.RX mov push or or pop lea subl mov insb in (bad) pop in pushq rex.WR (bad) ficom in mov push mov sub rex.RX push cmpsb cld stos lret mov fisttpll test rex.WX and sbb mov sub rex.RXB clc sbb fbld add fwait rex.WB jo sbb pop pop adc xor callq (bad) adc ds repnz (bad) repz xor jrcxz mov es rex.WRX lock (bad) or rex.X add movslq add sbb or mov rex.RB (bad) push adc sub mov pop orl push cwtl and sarb pop fstpl adc jmp (bad) sahf test pushq movabs cmp or xor fmull cmpsb sub adc pop mov pop (bad) out callq xchg loope out push fist rex.WX gs fld pop rex (bad) or and xchg rex.R (bad) vmovd movaps pop rex.WR pop pop sub ss xchg (bad) sbbl jo rex.WRXB repz adc pop jno sahf rex.WR xchg mov fisubrl addr32 insl movabs out cmp fcoms rex.RXB and push push out pop sub test add scas imul adc rex.WR (bad) sbb or pop pop int3 pop or adc sbb lret jmp (bad) adc and leaveq imulb (bad) jge ds jne sub enterq (bad) mov test (bad) fwait (bad) rex.RXB retq cli mov (bad) popfq (bad) sub sbb or rex.RX pushfq rex pop pop in rex.R pop test pop test jo shl sbb rex.WRB rex.WR mov loop cmp mov sbb mov sub pop mov adc xor repnz movslq adc retq push retq test cmpsb rcl mov movsl sbb mov add lret pop jp cmpsl jl or (bad) rex.X loop push rex.R add pop (bad) mov xchg lods pop and adc cmpsb cmp lcall (bad) rex.RXB add out hlt pop testb enterq jl mov (bad) rex.RXB rex.B pop sbb out movsb push (bad) sbb test and mov pop loopne rex.RXB add pop sub push loope retq rex.WR sbb insb test insl sub and test lods pop or add sbb sbb and cmp rex.XB push sbb (bad) and rex.RXB rex.B push es gs rex.RX (bad) and adc addr32 rex.RX movsl push je callq sbb mov loopne fsubrl rex.WR cmpsb test rex.W mov lret fnstcw cmpsb pop rex.WR rex.B movabs push sarb (bad) stos (bad) pop mov in add lock push (bad) rorl push cld rex.WRB lods rex.X rex.WRX mov or in cmpsb movabs and rex.WRB rex.WR rex.W fs cmpb cmp enterq imul enterq scas int3 (bad) in sub pop add rex.RXB rex.XB adc roll int3 adc callq xor pop nop mov (bad) scas in sbb decl rex.WRXB rex.WRXB rex.RXB cld add rex.XB (bad) retq mov enterq jnp movsb fisubl lea movabs es cltd rex.RXB (bad) or push sbb jl or pop mov and rex.WR mov (bad) add mov add stc pop or fdivrs rcl mov movslq mov sub rex.WR pushq (bad) retq test cmpsb sub mov push (bad) (bad) push cmp mov xor mov or movl and enterq rex.XB rex.WXB cwtl cltd cmp mov fmull (bad) mov fistp gs movabs loope enterq sbb (bad) push and rex.RX rex.RXB fs rex.RXB mov rex.RB jo mov xchg xchg movabs int3 fsub sbb (bad) icebp sub sarb in xchg lahf roll fcmove jle mov movl ja add (bad) je (bad) sbb rex.WB add and rex.WR sub xchg jge cwtl test mov rcl mov xor xchg mov sub adc mov sub rex.W (bad) cmp cwtl jl pop jl rex.WR in scas xorb retq fsubs (bad) sbb jl pop add xor shlb enterq push notl faddl rex rex.WB movslq fisttp xlat jne (bad) add test popfq fisubl lret jnp lcall sahf jge (bad) fldenv rclb sub xchg jmp (bad) (bad) or mov rex.WRB sub sub (bad) icebp sarb enterq xchg or mov pop (bad) xchg jg rex.W xchg cmp mov movsl or jmpq pop mov (bad) movabs fisttpl sbb rex.WX mov or jrcxz push (bad) rex.RXB xchg pop loopne cltd add sub rex.RX and rex.RX rex.WR xor out pop sub outsl (bad) jmp loop lret lods addl outsl cltd loope sbb rex.R (bad) rol rex.WR (bad) or data16 rex.WR pop retq insl xchg (bad) out xchg pop and rex.XB and xchg lea pop lods fiadd clc cmp imul cltd pushfq enterq icebp jb fist push pushfq rcrl rex and mov rex.X callq (bad) cltd rex.W rex.WRX lods int3 sub cmp xchg rex.WB and rex.RX subb and rep push and enterq sbb lret mov xor fcoml cmp xor and push insl push (bad) sbb push push (bad) addr32 jl gs mov in xchg mov mov (bad) mov jg shlb pop adc adc data16 (bad) mov sbb nop and mov sub rex.RB es rol and (bad) mov mov sub movabs int adc mov mov (bad) cmpsl test int3 mov enterq and cmpsl jne cltd rex.RB es xor cltd (bad) (bad) jnp pop pop vmulps insb in (bad) xchg insb pop lea test lods enterq adc mov rex.WR fnsave rex.W cmp xchg jg add rex.R sahf pushfq sub loopne sbb lahf (bad) jne sub mov xlat pushq pushq fldl cwtl loopne shrb out scas rex.RXB add jrcxz xchg loope (bad) pushq and jle mov rex.WRXB (bad) rex.W cmp rex.RX jns xor xchg (bad) cmp (bad) adc addl rex.WRB vpavgb and sub movsl pushq rex.WRX imul and mov pop lahf (bad) pop lods sub adc (bad) (bad) adc sub and addr32 rex.RXB (bad) mov xchg in xchg (bad) and rex.WRXB rex.WRXB cmp xor mov pop cmpsl add (bad) or (bad) int or fadd cmp rex.RXB rex.RXB movabs mov jne mov je adc rex.WX rex.RXB jne,pt (bad) rex.WX retq push ficoml movabs insb (bad) cs stos sar rex.WRX xor and mov int3 xchg fistpl (bad) jmp movabs je pop in xchg fsubs (bad) (bad) mov push cmpl mov mov sahf add mov out test flds in (bad) sbb adc mull rex.R rex.WRXB and mov sub jmpq (bad) rex.WR addr32 and mov mov lea pop sbb (bad) loopne in gs rex.WX fcmove (bad) fnop sub xor mov retq rex.RB rex.XB rex.XB jo or mov subl push (bad) rex.XB rex.X (bad) rex.RXB in lods and rclb leaveq (bad) test fmuls imul mov or mov lock jno (bad) or sbb cld (bad) nop pop mov (bad) mov rex.RXB rex.WXB mov data16 mov shrl mov rex.WR and fmuls push rex.RX rex.WR fldl xchg (bad) add sarl movabs pop pop jg mov rex.RXB repnz rex.RX (bad) scas sar or sbb andb sahf iret cmp (bad) fsubr mov (bad) fildl rolb (bad) roll mov xor out loop imul pop loope xor (bad) insb pop retq cmp movabs cld rex.WXB mov (bad) and rex.RB iret int3 mov test out pop xor rex.XB movsb sub xchg push cmp movabs (bad) mov movabs movabs ja scas scas push sbb rex.WRXB pop movabs and (bad) jrcxz movabs rex.XB push and sub sub std xor test movslq (bad) jae loope lock xor je mov lret rex.RXB mov xorl push lret or add callq mov (bad) and test ds push pop xchg lret pushq cmpsb adc xor (bad) lock rex.WXB rex.RXB test rex.W push cmp jmp rex.RXB ss rclb (bad) loopne test cmpsl neg data16 (bad) sub (bad) jmpq stc icebp in mov rex.WX and std rex.RXB cli rex.WRXB jge mov rex.RXB cwtl and pop rex.WRB adc decl in or sub testl mov movabs lret (bad) (bad) sbb push (bad) cmp mov rex.RXB fsubrs (bad) xor add and mov nop rolb pop rex.B fsubs cmp fdivrl (bad) addr32 mov clc movabs rex.XB (bad) jg (bad) frstor callq cmp pop rex.WRXB (bad) jbe sbb sub rex.RB rex (bad) sub push andl xchg in xchg movabs xchg xchg fdivs xchg pushfq pop insl in sbb retq and mov pop ficom push negb (bad) pop rex.WR or popfq fcom jno rex.WR (bad) andl xchg mov (bad) cli jrcxz rex.WX mov testb mov sarb mov mov xlat (bad) sahf or pushq fstpt mov jo pop mov pop sub rex.WR negl fdivrp rex.B rolb (bad) jge rex.WRXB loope sbb fstl adc shrb push and cmpsb pushq movabs (bad) xchg mov popfq and loop frstor rex.RXB xlat cmpsb lods (bad) (bad) std and (bad) (bad) (bad) mov lods pop enterq or add jne (bad) rex.WRXB rex.WRB mov push xchg out movl (bad) and loop adc fbstp pop mov (bad) xchg xor pop clc jno pushq in in jrcxz (bad) push or pop fbstp rex.RXB jae scas pop xchg cltd (bad) callq (bad) (bad) test nop es rex.RX divl es cli rex.RXB pop mov push out rex.W and jnp add rex.WR movslq fsts and rex.X and (bad) pushfq jb fldenv (bad) add sub push sbb rex.X add rex.X rex.WX pop adc lea fwait movabs adc out (bad) rex.WRX rex.B (bad) fmull jnp cmpsl (bad) fcmovnu fcmovb pop xor sub andb rex.R pop rex.B in mov and (bad) add rex.WX push (bad) adc incb rex.WR (bad) in rex.RB movslq loope pop sub roll lret mov fsub xchg retq lods rex.WXB mov add and data16 adc rcrb (bad) lock in rex.RXB rex.RXB and (bad) mov ss push fistp push pop (bad) add pop cmc mull in lret pop pop adc out rex.RXB add (bad) xchg mov pop outsl sub xchg loop out sub add lods and and std scas sbb mov out rclb rex.X pushfq mov stos (bad) loop enterq lahf hlt (bad) and mov sbb cmpsb mov fisub cmp flds (bad) faddl mov in (bad) (bad) fiaddl callq sbb jle stc lret push fiaddl sarb jmp movsl add add mov test xor rex.X mov pop (bad) rex.R (bad) and mov pop jb xchg ja mov fiaddl lret rex.X rex.X scas cmp rex.WRXB mov sbb pop or clc mov jo (bad) mov movabs mov (bad) (bad) fdivl adc rex cs xchg jbe in adc and and jge xchg and push add and pushq ja retq adc stc fcoml sub test jmpq push rex.RXB push rex.WR insb rolb lret rclb rolb (bad) fs (bad) and jp sbb test (bad) incl add movslq (bad) and cmpsb (bad) xor xchg ja pop adc rex.WRXB and xor cmp cmc outsb movsb add rex.B sbb (bad) sbb rex.WR in enterq decl xchg xor insb test (bad) (bad) jmp test mov sbb js out adc (bad) sarb shrb test loopne push (bad) lahf iret out rex lret movabs rex.XB movabs test jns rex.X mov and mov mov xchg rex xchg xchg sub (bad) push (bad) cmpsl callq and pop loopne (bad) mov (bad) out enterq push xlat rex.X mov (bad) (bad) in push rex.X mov and mov add (bad) xchg (bad) sub int3 icebp mov push add loope icebp pushfq cmp (bad) cld (bad) jmp cmpsl (bad) xchg rex.WR xchg fnstenv xchg push pop mov adc std mov lea xchg (bad) mov (bad) sub (bad) fwait rex.W out and xlat fistl or insl sbb rex.RX jmp callq pop fwait pushfq or (bad) (bad) rorb fstps and (bad) xorl fistl movabs jbe (bad) rorb pop or (bad) xlat and imul fcmovu es pop (bad) add int rex rex.W rex.WRB sbb or fiadd push callq push callq xlat xchg pop (bad) incl adc cmp movsb jae,pn fwait jo cmp and int3 rex.W push enterq push add loopne xchg mov or fidivrl shrb rex.B jl (bad) insl mulb add xchg rex.WRB sub sbbb sbb rex.WR sbb push (bad) (bad) rex.WRXB and pop sbb sub (bad) in sub mov pushq add out sbb jle stos mov (bad) js mov lahf jmp (bad) insb movsb ss push clc jmp and mov iret jmpq movabs fadd or cmpsb movsb fdivs scas cld rex.WR and jno in pop in rex.WRX sbb std xor cltd sahf std or pushq rex.WRXB fstpt mov (bad) outsb and pop shrl out and rex.WR add out adc cmp (bad) mov es out callq addr32 add push test push idivb callq adc out push (bad) or xchg movsb movabs movslq (bad) pop out out mov movsb rcrl (bad) test (bad) jle mov pushq (bad) movabs and cmp cmp retq ds cmp fisttp iret xchg add rex.XB rex.RXB rex.WRX rex.WR (bad) cmp movabs adc jne rex.WR rex.X icebp or insb (bad) cmp cs (bad) psubsb cwtl rex.WRB and pushq out (bad) and sub push (bad) (bad) cmpsl sbb rex.W rex.RX cmp mov fdivs (bad) adc (bad) (bad) mov and add mov rex.XB add jg or rex.RXB add fs rex.XB rex.WX mov (bad) cmp add jo shlb out xor push (bad) xchg movabs lods mov lret mov rcl (bad) cmpsl fcomps lock add (bad) movsb (bad) (bad) (bad) mov retq std sub (bad) (bad) (bad) testb and or and jle sub (bad) sbb xor or (bad) and (bad) (bad) mov and add sbb jns (bad) movabs rex.RXB sub lods jl std mov sti rex.WXB out rclb pop sbb mov adc in test jae rex.WRXB pop loop pop xlat (bad) (bad) and rex.XB rex.X mov or rex.WR rex.WX add sbb xor push scas push rex.WR push pop popfq rex.RX (bad) (bad) (bad) out push add add (bad) push loopne jg (bad) cmp cmpsb lret test jp and lahf push pop mov (bad) loop rex.WRB hlt mov popfq orl mov invd pop retq cld rex.WR test (bad) bnd mov push push pop cmp mov stos and std rex.RB sub test stos push xor cltd mov rex.RXB rex.X xchg leaveq sub rcr pushfq add jbe push sti loop fsubrs fadd xchg mov (bad) add add movb rex.R cs addr32 rex.WR (bad) rex mov rcrl sbb orps mov pop stos cmpsb and jnp (bad) (bad) sub shll mov xchg mov movabs rex.WXB pushq pop or in sbb (bad) lret lock pop (bad) (bad) mov (bad) (bad) hlt pop fcomps (bad) jp xchg popfq rex.XB outsb enterq cltd sbb cmp sub pop jb add out cmp retq ja (bad) lods pop rex.XB fiaddl add test (bad) (bad) mov sahf rex.WR xchg mov imul (bad) and fnstsw pop fcompl (bad) push movb xchg pop rex.XB pop movsb cwtl add add and add (bad) lea test retq mov and sbb rex.WXB xchg or sbb and rex.RX mov adc sub jl (bad) rex.RXB rex.W pop rex.RX (bad) stos in fadd push enterq ds cmp and rex.X sub rex.XB rex.WR clc mov out test mov pushq mov rex.WXB cmpsb lret jno xchg mov pop push (bad) sub sub push (bad) add (bad) push stos movabs push push jno rex.WX fcoms sbb rex.XB callq or (bad) (bad) mov orl xorl rcrb sbb rcrb outsl cmp rex.R rex.X xor sub cwtl rclb rex.B rex.WR rex.WX mov clc (bad) push cld and out cld idivl rex.WR xorl rex.R fwait mov flds jmpq out or fisttp scas or rex.WR sbb or jl test fs xchg add sub rex.R in enterq mov push enterq out mov rex.XB rex.RB rex.W clc lret cmp test imul xchg mov je rex.WRB pushfq mov xor xchg add rex.WR rolb and repz (bad) scas roll outsb mov xchg adc out and retq (bad) xchg (bad) pop xchg xchg test add (bad) fcompl rex.WR rex.B rex.WRX popfq fcompl pop add lret rex.XB adc sahf sub add cmp mov cmpsl xchg and nop in rex.R es xor fbld cmp insl jns negl addl pop popfq xchg fcoms imul out jb hlt rex.RX cltd pop movabs (bad) jno (bad) mov (bad) cmpsb mov (bad) rex.WRB xchg fistp adc sarl cmpsl xor jbe xchg mov (bad) rex.WRXB or pop enterq imull fs cli loopne mov jle (bad) mov frstor fisubr sub cld sub pop rex.WR push add rex.WRXB and rex.R movabs scas outsl mov loopne rex.RX add movabs push rex.XB outsb sub rex.B movabs pop popfq rol rex.RB mov xchg sub mov movslq cmpsb rex.WR push or sub add out lret (bad) cmpsl xchg sbb jb (bad) mov movsb rex.WRX lahf addr32 push jp enterq and movabs and and test pushq sbb rex.WR movabs (bad) pop scas (bad) mov rex.RXB push lock rex.WXB (bad) leaveq (bad) push mov (bad) rex.WXB fmuls add cwtl orl test addr32 xor or fiadd mov enterq icebp mov push data16 sub rex.RX (bad) add adc and (bad) and cmpsb (bad) leaveq push xor adcl push push rex.RXB cmp jo or push addr32 rex.WRB rorl cmp cmp cmp cmp cmp pushfq movabs test rex.W fdivrl sub push pop mov sub pop sub mov movabs rex.WR (bad) or pop mov pop stos (bad) mov fnstcw outsl add (bad) rex.RX in lock xchg insb xchg cmpsb fist adc mov fist (bad) xor flds or incb testb rex.R jle (bad) cmp cld pop or cmp mov rex.RXB callq xor (bad) pop js out sbb outsl add cmp rex.RB (bad) imul callq mov xor cmp mov push add pop sarb movsb pop test push mov int3 (bad) adc xchg lret (bad) mov jo (bad) xchg cmpsb js adc mov rex.WRXB rex.WRXB pop pop (bad) xor jmp mov sub int3 mov push xchg out mov mov cld mov xchg mov addr32 (bad) jb fcoms add rex xor lret push xor push (bad) mov lret nop out test rex.WX rex.WRB leaveq movabs cmpsl addr32 je and and addr32 (bad) mov test add imul ja data16 push (bad) std sahf cmpsl (bad) loopne rex.RX fdivrs negl push and rex.RX rex.RX fistpll sub push in imul rex.X rex.RX sub sub ds add addr32 out rex.RXB rolb (bad) (bad) sbb xchg or rex.WR rex.WR (bad) or (bad) rex.WR rex.X sub test add (bad) stos rex rex.X xchg (bad) xor xchg (bad) (bad) out push xchg sub sub cltd and rex (bad) ja (bad) js sub subb andb jg rex.X cltd repnz rex.R jb xchg cmp adc adc movsb mull movabs push pushq js (bad) fcmove adc movabs lock mov mov sbb in push sbb clc test (bad) push add mov imul data16 rex.WRX pop add (bad) movabs pop ficoml rex.WRB pop pushq sbb insb rex.WR mov mov or retq shr adc sbb jl rex.WR (bad) movl xchg and jne mov rex.X (bad) mov sub sub loopne pushfq and outsl (bad) rex.WR cmpsb mov push rex.WR jle jnp xchg or or movl rex.X sub xor test sub or rex.WX mov push jg sbb jmp sub mov fcompl sbb push movabs (bad) (bad) movsl rex.RXB rex.R cwtl rcrb pushq push push rex.RXB jp mov cwtl (bad) mov pop mov fadds flds add pop (bad) adc pop adc fbld pop movsb adcl and add push sub rex.RB rex.WRX rex.R sub cld and pop fsubs movsl ficom movabs pop fcompl jb rex pop btr rclb enterq sbb (bad) sbb pushfq push and xor xlat out ficomp and xor rex.WRX jbe xchg cld (bad) movabs (bad) fdivs lods rex.RXB mov jns int ja (bad) std rex.X (bad) fs push sub movsb xchg xchg shlb sub (bad) (bad) mov test rex.R push (bad) (bad) xchg jmp adc xor cmp sarl cltd subl adc (bad) cmp pop mov jae stos pushfq icebp pop movb cltd cmpsb test rolb pushq jmp outsb jg pop imul imul icebp add xchg ficom or flds or (bad) movsl sti mov (bad) xchg xchg cmp (bad) jmp jmpq iret cmpsl (bad) movabs sub test add or rex.WRX mov out fwait (bad) sti movsb cli sbb rex.X lock add xor push (bad) pop movabs lret sub mov mov fnstcw add adc xor pushq scas insb xlat (bad) imul rex.XB (bad) rex.WR (bad) cmpsl add movslq fbld sti popfq test or rex.RX rex.W (bad) test mov (bad) movsl in out cmp rex.WX adc xlat pop rex.W data16 neg jnp roll loopne cmpsb xor rex.RX addr32 xor pop rex.R rex.X test sti rex.WX cs (bad) sbb (bad) ds cwtl add and add fs sbb push mov in bswap mov jne (bad) loopne rex.RX fbstp icebp push rex.RB addr32 xor push retq (bad) push pop rex.WR in add lea (bad) push pop xorb movsb xor or sbb ficomp (bad) (bad) int3 pop mov sub pop enterq add scas retq xor movsl pop fisttp mov or fstpl (bad) hlt in pop mov mov ss pop or pushq movl rex.WR fild add push add outsb or (bad) stc add shrl loope or (bad) pop (bad) (bad) xor rcll (bad) adc rcrl push retq roll push mov lahf (bad) or mov cmp movslq adc movabs adc xor sbb mov loop jo or pushq xor cltd (bad) xchg cmp clc gs (bad) imul movabs mov fldcw ds push jbe icebp pop (bad) jrcxz cmp mov retq cld out clc jmpq adc cld (bad) xchg movabs movsb add (bad) (bad) and shrl or fstps in and repz in callq jg mov mov or (bad) sub xchg callq icebp push nop mov sbb incl sub push cmp (bad) test adc xchg vpsubq (bad) callq xchg (bad) mov or cmp jae (bad) sub test nop push lret jrcxz enterq adc cli mov clc pop flds out or iret retq (bad) (bad) (bad) addr32 (bad) push push movabs sahf or callq (bad) rex.R mov out mov rex.WB fdiv shlb xchg sub adc movsl xchg pop (bad) imull sub xchg mov cwtl and jns add (bad) cmpsl mov sub jmpq and adc loop (bad) callq mov (bad) cmp lea xor and mov lret lea (bad) (bad) rex.WRXB mov and sub rex.RB movabs cmpsl data16 clc push sbb push rex.W scas rex.WR mov xchg mull pushq cmp cmpsl adc pushq mov add test sub out rex.RXB movabs add imul rex.B rcrb fidivl (bad) xor movslq pop (bad) xchg pop pop addr32 rex.W mov sub cld stos sub sub or xchg out mov sub rex.B test jnp rex out or and rex.WX pop xchg imul xchg push jmpq push shll or pop (bad) (bad) pop popfq in rex.RX rex.RB gs lret pop push rex.X mov out fwait xor rex.R rex.WRB pop rex.XB jbe sbb (bad) sarb mov push xchg adcb repz jg sub pop cmp pop or or loope cltd jge (bad) lock push xchg (bad) (bad) clc callq enterq rex.B pop and (bad) xor add xor rex.W mov outsl fmuls rex.WX test mov (bad) rex pop rex.RX ss loope add (bad) cld (bad) push pop or or xchg loopne rex.W mov sbb mov jnp (bad) (bad) adc jmp clc movabs push rex.RXB cmp fs mov (bad) and stos leaveq outsl push xchg loope mov rcrb cmp loopne rex.RB rex.R rex.RB rex.XB cli (bad) cli mov imul test add imulb (bad) sub (bad) pop ds movabs cwtl jg fisttp (bad) imull out sbb scas rex.RXB mov pop add fs rex.R rex.RX rex fadds rex.WR pop cwtl or (bad) int3 rex.WXB (bad) rex.RX pushfq je insl loope (bad) fsubs xchg fldcw adc lea lock loope in mov loop jrcxz pushfq fwait pop mov push (bad) roll popfq rex.WRB sub (bad) sbb (bad) or sub insl movabs stc (bad) mov mov stc add jmp cld sbb (bad) (bad) scas movabs negb rex.B rex.R movsl and rorb xlat int rex.B lods scas callq xchg movabs data16 lret insl insl cwtl adc mov jrcxz cmpsb rex.RX callq mov rex.WR stos mov fwait stc lock fidivr pop (bad) cs lret clc xchg xchg (bad) sub pop popfq movabs cmp (bad) jb jmp retq movabs and andb cmp xor jl and loop shrb jrcxz xorl callq test push sbb cs imul sahf cmp (bad) (bad) fisubl jrcxz (bad) mov popfq xor sub rex rex gs cmpsb popfq rex.RXB (bad) clc add nop (bad) push jl jo sbb rex.RX mov push jge sbb imul pop lods js (bad) retq sbb pop cmp in scas add mov (bad) xchg movb fild test (bad) cmp je pop xlat movsl hlt cwtl and je and rex.WR cmpsl xor decl (bad) (bad) cmpsl jb (bad) (bad) xlat ds pushfq imul adc hlt sbb or paddw sbb jo xor pop cmp sub or mov rex.WRX rex.R sub xchg loop int (bad) rex.WRB (bad) or sbb in (bad) pop jo xor ds rex.XB adc sti stc pushq (bad) fwait out divps int3 (bad) cmpsb rex.RX mov xchg rex.R out add rex.XB rex.B movabs (bad) movsb shlb xor add fild jbe xchg pushq mov es pushq rex.WR rex.WRXB (bad) rex.WR jae (bad) movsb ficoml movsb adc sbb add xor xor out callq movsb out jp xchg mov (bad) (bad) enterq rex.WRB adc push out (bad) mov shrb movabs pop (bad) mov outsb add movabs and movabs rex.W rex mov xchg (bad) fnstenv (bad) rex.WRXB callq (bad) (bad) or lock fsubs pop (bad) in sub mov or imul rex.WRX je rex.RB rex.RX movsb adc fnop and adc mov (bad) cltd fs addl fs hlt rex.WRXB push or mulb fiadd or and adc movabs imul fnstcw clc mov sub (bad) rex.RXB rcr add lods (bad) scas and adc adc mov sub test sbb rex.WR rex jbe int jle sti mov callq sub (bad) pushfq pushq (bad) scas enterq cmpsl out out and (bad) (bad) out or cmova leaveq sbbb hlt (bad) mov rex.RXB and and ds ss mov sub (bad) jge out xor add hlt loop jrcxz leaveq add pushfq jbe rex.RX jne jnp (bad) jg (bad) (bad) cmp mov mov scas mov rex.W movsl and adc cmp sbb loope,pt and jmp rex.W rex.XB in sub rex.WXB push rex.B out pushfq xor or mov add rex.WRXB mov (bad) mov cmp sbb ficom fcmovnb ljmp xchg rex.RXB insl cmp lock (bad) xchg sub sub jno lret pushq movabs jmpq outsw sub insl rex.WR jns je or faddp cmp mov in rex.RB (bad) rex.RXB cwtl rex.XB in lock loop pop mov (bad) es pop (bad) mov out outsl jl rex jmpq cltd callq xchg clc out rex.WX add (bad) lock ja adc sub out add fs iret stc rex.RB fsubr push out gs sbb cld mov push sub adc mov jrcxz rclb (bad) int (bad) and test jbe (bad) movsb pushfq push mov add fidivrl and and stc (bad) xor push sbb ljmp int (bad) (bad) push repz rex.WRB push push sub leaveq rex.WB xchg sbb mov fadds enterq add andl in outsl or subl xor fmuls rex.RX jmp cmp cmpsl fistp (bad) adc (bad) test (bad) movsl pop cmpsb lock test cli rex.RXB jnp std rex.W or xor out jmp mov rex.RX (bad) jle and cmpsb (bad) mov sbbb push rex.WR cmp (bad) test sbb and sbb fwait inc xor xlat and mov and add ror (bad) pop push rex.R pushq jbe sub movabs sbbl mov nop movabs (bad) (bad) (bad) mov fmull out cmp imul rex.WR ja shrb jg (bad) mov movsb xor add cmpsl movabs cmp (bad) sub xchg (bad) (bad) pop add (bad) sbb xchg and (bad) xchg loop mov sbb mov test negl push popq (bad) cvtps2pd out or jo mov push cmp lahf adc (bad) jbe push out or sbb pop jl outsl mov fidivl jl hlt jrcxz mov cmp retq jmp sub mov addr32 (bad) xchg nop push or rex.W ljmp pushq rol cvtps2pd jrcxz adc push or rex.RXB (bad) rex.WR popfq (bad) int3 movslq movups pop cmpsl cmp out addr32 pushq jbe bnd (bad) xchg movsl (bad) mov (bad) imul xchg lock out rex.RX (bad) mov mov jge mov rex.WX rex.WR rex.X test in xor xchg sub push sub rex.WRXB pushq push cmp xchg (bad) sub sub leaveq rex.RX callq pushq add rex.RB sbb or and push xlat (bad) pop rex.RXB psllw rex.W (bad) fmul in (bad) cmpsl xchg xor pop mov leaveq sbb sub test (bad) xchg loopne maskmovq imull (bad) rolb mov ds (bad) ja mov pop mov rex.WRX sbb mov sbb rex.W pushfq cmp xlat push pop neg mov (bad) (bad) xchg adc rex.RB rex.WRXB sub movsl gs and out or xor cmp test stos sub pop add sub js cmp xor scas (bad) jmpq sub (bad) rex (bad) push repz mov and (bad) rex rcll (bad) rex.X jg and and (bad) or xor int3 pushq adc out imul sub iret out or mov scas adc xchg xchg rex.WR icebp sub popfq loopne jge (bad) push sarl sub movsb out (bad) and hlt push adc xor movsl lahf rex.WB or or test (bad) or pushq xlat repnz and and and (bad) adc out mov lea js and stos sub fmul imul sub cmp adc jmpq movabs stos or movabs mov insb rex.WX sub fbld (bad) lock push push test repz or loope mov adc clc rex.RX out or xchg (bad) rex.XB clc icebp adc (bad) mov (bad) movabs jbe retq or (bad) test rex.RXB ss and xchg cmp (bad) (bad) in ss lods rex.R movabs sub or pushq fisttpll pop repnz sbb nop rcrb (bad) pop rex.WR retq rex.WXB sbb adc test and mov int3 rex.B pop rol rex.XB scas and rex sbb cwtl lret callq xor ror (bad) mov rex.W test sub add fnstenv pop mov (bad) mov pushfq jo jg pop mov mov gs lret hlt (bad) rex.WX pop enterq adc (bad) cmp or js pushq adc mov add jrcxz callq pushq out and pop xor xchg cmp test hlt cwtl mov out or sub loop mov adc sbb sbb popfq (bad) out rex.WR pushfq cmpsl movsb out push outsl push or pop (bad) out rex.WRB rex.B (bad) (bad) jrcxz gs adc pop (bad) loope enterq and (bad) (bad) mov test rex.WR add xor xchg (bad) xlat ficompl xor int3 xchg (bad) movaps sub testb rex.W rex.RXB mov mov loope xor sub and fistpll or mov imul mov add (bad) adc push imul cli (bad) cmpsb out cmp jne rex.WRXB add and xchg rex.WR rorl rex.R sti fstpl pop or outsb (bad) mov in sub add dec xor pop sub flds movabs pop loope cmp scas fs add push jmpq mov fiadd or mov leaveq jns jbe pop push test rolb stos mov mov movabs test movslq (bad) addr32 subq mov (bad) enterq (bad) rex.RXB in (bad) or insl lahf push (bad) mov and mov push adc rex.WR push shl movabs callq lahf fsts or jle (bad) sub lods in out test and movsl pop mov xchg cmp (bad) mov xchg test jbe mov test fildl outsl xor (bad) outsb shl std callq pop sub jge push faddl mov (bad) pushq test stos or or and pop sub rex.RX outsl outsl (bad) in (bad) mov push (bad) out mov xor repz mov pop mov pushq lock es movslq (bad) in fadd roll xor mov rex.RX cwtl leaveq out lret jns rex.WR (bad) cmp nop mull and addr32 (bad) jo cmpb jne pop fld retq mov push rex.RXB and add lahf sub clc sbb (bad) (bad) movsb cld mov xchg pop sbb sarb leaveq lret lock and lea fucomip pop fsubrl rex.WB xlat movsb xchg mov stc fst out mov rex.RB rex.WR popfq callq push mov jo rex.WXB mov push or insb pop jno (bad) nop adc out cmp idivq or je rex.RB mov and popfq stos out xchg clc lock rex.WR out fcompl xor nop (bad) xchg lret test (bad) push (bad) testl movabs (bad) (bad) (bad) push movsb rex.X addr32 shrb (bad) idivl add movabs jrcxz ds (bad) jno jb fxam sbb rex.WR enterq lods xchg insl idiv nop lcall test insl (bad) (bad) and jmp clc (bad) int (bad) test jo fidivrl mov xchg jne test cmpsb (bad) rex.WRXB pop xlat (bad) or sbbb pushq in jno std (bad) jns loope xor jo bswap mov push addr32 (bad) fdivrl rex.RXB rex.WR lret mov ss jg rex.WRB push es xchg mov pop scas out retq sti jno pop movsb jle xchg jl rex.X rex.R cwtl (bad) mov retq mov or rex.RXB rex.WXB fildll callq in or push rex.X mov shl pop adc adc add and sub mov mov and pop mov xor cmp cmp push jb adc retq sub test mov mov pushfq push rex.X stc int3 add mov test xchg sub xchg xchg movslq lock (bad) lahf pop add (bad) nop loope xchg and rex adc xor rex.X lock ja rex.R xchg mov xor pop cmp mov mov jnp adc out xchg callq (bad) (bad) add fld xchg mov rex.B rex.XB rex.WRX pushq pop pushfq and scas (bad) sbb lahf sbb adc fild cmp xchg (bad) pop in rex.WR push (bad) mov (bad) xchg rex.WRX push jbe jae mov (bad) adc (bad) lret rex.WR hlt (bad) leaveq jmp mov movabs lret (bad) out jae imul or scas rex.WR (bad) sub rcll rex.WRXB rex.RX cmp add (bad) xchg cmp scas mov (bad) adc (bad) imulb rex.XB jo fidivrl rex.WXB push (bad) sub xchg pop in (bad) jnp (bad) rex.WXB rex.WXB cmp idivb lret cs cs out and (bad) movntq (bad) cld sar (bad) movabs pop jns and add adc cmp vhsubps and in cmp stos fsubr add or (bad) sub ss pop jo push ss rex.WR jmpq rex.RX xor rex.RXB rex.WR rex.RXB movsl mov sbb in cmpsb sub movabs xchg ss ror xchg sbb roll sub add rex (bad) or mov xor sub movsb rex.B jo rex.RXB rex.X add xchg mov (bad) lods (bad) (bad) jno and (bad) (bad) cmc sub xor rex.WRXB jo and or add mov pushq cmp rex.W ss addr32 sub rex.X rex.WR mov pop rex.W rex.RX fs cli gs (bad) cli imul test rex.X rex.WXB callq clc sub pop stos (bad) or (bad) (bad) fnsave hlt faddl movabs cmp jbe add rex.RB gs loopne callq jl,pn (bad) (bad) adc adc pop pop sub (bad) movabs js xchg or (bad) (bad) addr32 sub cmp sbb and cli or rex.R out rex.RXB cmp rex.WXB fs rex.WX (bad) bsf and rex movslq or (bad) nop stc cmp rex.RXB and rex.RB rex.WXB fcmovnbe mov and pop sub retq nop clc movb sbb mov scas addr32 xchg adc xchg (bad) jrcxz xchg mov sarl mov (bad) jle mov adc enterq (bad) rolb repnz retq pop outsb or sub pop (bad) jne fsubrl xor sbb cmp pushq or (bad) mov and movabs sub lods rex.WX lock rex.WB (bad) (bad) jp jg popfq rex.WR add outsb ss mov and adc imul (bad) mov rex.RX push mov lea (bad) (bad) push lret hlt divl mov or mov sub rex.WR pop mov sbb (bad) pushq callq rex.R pushfq sub retq mov rex mov jb adc js mov andl rex.WX lock rex.RX jl rcl mov rex.RB add push enterq retq (bad) push rex.WB in rex.XB rex.WRXB rex.XB movabs rex.WRB movslq fist mov cmp (bad) (bad) enterq mov rex.RXB lret xlat mov and fwait add fisttpll shrl mov ds (bad) fbld mov idivl or add out and scas retq mov cmpsb add pop movslq mov or (bad) mov insb jmp mov jge or mov js jbe icebp imul (bad) movslq (bad) and (bad) cld rex.R (bad) (bad) (bad) pop (bad) fmuls cmp movl rex.RXB (bad) sub rex.XB rex.WR mov iret test (bad) js mov mov shll cmp cmp lea rex.XB data16 and (bad) pop mov (bad) shrb (bad) xchg (bad) jrcxz rex.XB data16 rex.WXB mov out cmp icebp rex.XB loope sbb (bad) and add sbb ja (bad) movabs jo push std roll xchg mov imul push roll (bad) adc rex.W rex.WR mov rex.XB and pop fbld xlat movabs cmp movsl cltd sar jp sbbl test test mov mov (bad) je rex.XB (bad) popfq and xor mov or rex.RX pop add fadds jae lods jg sbb (bad) add jns cmc xchg add outsl shll cmc or mov (bad) sbb test adc je add popfq loope cltd lldt and sub (bad) sub ds pop mov sbb hlt (bad) mov rex.WR (bad) xor out mov out (bad) xor add insl out cmp lret outsb movabs rex.WRXB cmp pop and (bad) adc xchg outsl sbb stos negl jmp mov addb sub jno rex.WX fs std (bad) rex.RB xchg rex.XB rex.XB cmpsl movsl mulb addr32 lahf or mov fisttp (bad) and jo xor sub imul and cmp mov mov push movabs xchg xor add imul jmpq xor pop or decl sahf add es mov mov mov adc rex test push clc rex.WRX fisubrl out adc js xchg mov xchg mov test pop or cld mov movabs callq rex.W and (bad) rol rex.X movsl rex.R xchg stc cmp push jrcxz cmpsl xchg sub (bad) (bad) and xchg add cmc add fst (bad) cmpsl (bad) cmpsb movabs retq rex.W rex.WRB movabs cwtl adc scas adc sub and test or xchg and add (bad) jmp fistpll or mov and and loope rex.RXB mov (bad) idivl lret adc (bad) jl add sti movabs test rcrb rex.X sub cmpl jg,pn fmull pop cwtl mov (bad) movabs mov add rex.W rex.B cs xchg rex.RXB in mov mul cs rex.WR mov or rex.WRXB and cmp mov pop adc (bad) or jp ja rex.WXB xor pop push test std (bad) pop xchg sub (bad) rex.W rex.WR pushq sub adc (bad) cmc or sbb xor and or mov pop (bad) hlt xchg cmpsl cmpsl test xchg rcrb mov (bad) mov negl andl or repnz rex.WRX adc nop movslq and (bad) rex.WXB jle movl mov sub cmp mov pop rcrl (bad) test mov mov xor sub mov outsb xchg xlat sbb retq (bad) loop cmp xchg ds rex.R xlat mov pushfq jge (bad) adc fmull mov outsb sub pop rex jmp rex.WR (bad) sub pop rex.WR rex.R shlb sub sub popq and xchg (bad) pop pop add mov mov loope (bad) add addr32 sub scas add (bad) test add addr32 mov or mov sub clc movabs sbb cmp (bad) xor add repz add or sbbl rcl pushq es adc xor imul or loop test pop lock lods adc mov movsl (bad) loopne (bad) push (bad) and rex.W mov jnp insb rex.WRB fwait callq jb pop cmpsl rex.WR sub (bad) jmpq push pop and mov mov (bad) (bad) (bad) xor enterq adc (bad) rex.B mov push cmp (bad) movabs xlat retq mov (bad) sbb sarb push test add rex.RXB and mov cmp mov xchg callq (bad) cld outsb fmuls jp sub and and push add adc movsb clc jae and (bad) rex.WRB mov push push test add or add movabs fild rex.RXB add (bad) test (bad) or mov pop fs jne imul (bad) jle (bad) or rex.RB jg outsl mov xchg jecxz imul cmpsl jmpq (bad) rex.WR push add jl push fcmovne sbb lods test addr32 rex.WRX fs cmpsb push cwtl mov test jb pop fsubs jmp rolb jb scas sub xorl mov lock lret push xor xor sub std cmpsl sbb jo (bad) (bad) rcll (bad) (bad) add and mov (bad) rex.WRB rex.B rex.RB xlat and adc insb and imul jmp xor outsb jp insb or out int fisubl rex.WX rex.XB movabs addr32 (bad) and push rex.WRX (bad) (bad) (bad) cltd loop rex.WXB es xor rex.WRXB rex.WR jno or cld fiadd rex.XB test add xor jns sub in loopne test sahf rex.WX mov (bad) jge mov fnstsw mov jge jl mov sbb pop xor mov mov mov jnp rex.R vmovdqu rex.RXB fiaddl lret and and pushfq add fimull adc cwtl rex.B movsl clc jmpq push sub rex.XB push pop sbb add rex.WXB push jo mov adc xchg rex.X movabs sbb or imul rcrb push and data16 or shr fldenv push rex.XB jb sbb (bad) push cwtl mov jno mov sti rex.RXB jns pop movsl adc addr32 (bad) insb sub js sub jbe xor add (bad) mov movsb in mov pop and mov scas clc stc movl push rex.RB movsb pop push stc enterq pop xchg mov jnp mov retq stc mov rex.X rex.WR sub xchg rex.WXB callq jb sub mull mov push xchg std and mov xlat rol cwtl add loopne adc xchg pop lock outsb rex.X cmp sbb out add (bad) cmpsl xchg leaveq adc int3 fiaddl insb rolb clc loope or sub callq rex.WX movsl adc mov (bad) or loope callq fiaddl (bad) repz mov rex.WRX repz rex.RB rex.W rex.WR movb jo mov std notl movsb (bad) frstor shlb (bad) (bad) roll insl (bad) jbe insl rcrb push and fmuls loope xchg in fcompl orl (bad) rex.WR enterq sub (bad) iret (bad) gs rex.WXB sti popfq add rex.W addb jne pop (bad) or rex.WRXB mov mov pop sahf cmpsl xlat xor (bad) and es adc (bad) ja js out cmp adc insb in (bad) add (bad) cmp in or callq data16 adc addr32 pop rex.RB xchg (bad) rex.RXB movabs movabs pop enterq adc jns sub mov and and test mov adc (bad) ljmp (bad) mov lahf push (bad) mov rex.RB popfq push (bad) rex.XB addb fildll mov movabs (bad) (bad) in pop (bad) es cmpsl rex.WR xor jne movb mov xchg js out mov rclb lretw xlat mov or stc xor popfq or rdmsr pop xor sbb lret lods movsb and pop mov adc (bad) rex.WX push (bad) and adc rex.WR add sahf leaveq movsb leaveq pop (bad) jge add or loop stos xlat or lret sub cmp rex.WRX retq sbb sarl (bad) (bad) decb sbb mov or pop test xor movsb sbb retq (bad) stos faddl xchg pop push pminub sarb mov (bad) xor cmp pushq mov fst add adc lock cmp jrcxz cmp in (bad) and rex.W xchg cwtl (bad) enterq jbe test push pushq loop adcl jns mov sub ja or xchg cmp rcrl xor rcrb push (bad) loope (bad) shrl add out rex.RX adc (bad) mov (bad) mov rex.WRX rex.WR enterq incb in mov rex.XB rex.WR jb sbb fs clc (bad) adc cwtl pop push pop pushq adc fistpll lea jrcxz fcmovnb adc and pop or loopne or mov int3 mov push repz (bad) fbld jl pop rex.W rex.RB rex.X mov in (bad) mov outsl rex.WR xchg push (bad) add fdivl xor rorb cld lahf add mov int3 movabs movabs repz and movabs (bad) rex.WXB mov lcall iret xchg jp mov mov xchg mov xor pop mov xchg xlat movabs loopne lods xacquire std jno nop in pushq movsl in adc testl (bad) movslq loop loopne and addr32 mov push rex.W rex.RXB push fst loopne test rex.RX cmp xor lods shrl adc mov cmpsl mov retq cmpsl movslq (bad) sub cmpsl stos cli ljmp and (bad) or rex.WR out adc pop rex.WR cmp jg (bad) in mov lock rex.XB in cmpsb adc in (bad) add (bad) jne callq rex.WR fdivrl sub js ja test enterq rex.RXB repz adc rex.RXB stos faddl rol cmova xor insl movsl and xor test add (bad) xchg lods sbb enterq or ds mov shl and mov adc cmc (bad) sahf xlat fimul cmp rorb or and (bad) leaveq enterq addr32 push data16 subl sub scas movsb movslq push or mov (bad) cmc or lods push xor fcmovne (bad) sub cld movsl jmp cmp push sbb jmpq sub jae mov test sbb fadds hlt (bad) sub fdivrl rex.WR jle movslq in js or nop rex.R stos imull popfq rex rex.XB xchg jle jmpq (bad) rex.WX add sub pop fs cltd sbb rex.B iret mov (bad) push fisubr cmp (bad) repnz adc gs push or xchg and jne rex.XB cs adc loopne mov sbb push mov sti jp adc xchg adc orl push repnz (bad) (bad) and test divb lahf rex.W (bad) movslq sbb xor out cwtl test rex.B mov and callq repz loopne scas int out sub mov rol mov or rex.WXB rex.RXB rex.RX rex.RXB rex.W rex.WR rex.X rex.RX fnstenv js callq cmp sbb sub sub fidivl jne rex.WRXB imul and sub cmp or jne rex.RXB sbb int mov test lods (bad) or cmp rex.RB pop ja mov push int rex.RB fcomps sub ds push imul es rcr pop mov mov mov loope sbb mov sbb sub out push xchg rex.XB rex.WR shlb rex.XB cwtl (bad) fmuls jne decl lret rex.W fadds stos mov pop pushq and mov lret cli shlb adcl fbstp sub rex.WX and scas rcrl pop cmp and std mov jo sub or pop rex.WB and rex.X push idivb pop movabs mov (bad) (bad) mov movsl (bad) imul rex.RX (bad) outsb fmuls xchg add ds fs add adc mov mov xchg stos nop jrcxz es insb pop out lret rex.WXB rex.WR xor push lods jne stos (bad) mov pop mov sbbl lods sbb pushq (bad) adc mov fiaddl cltd cmpsb imul callq or mov jmp insl cmp outsb ss rex.RX rex.WX push mov push adc jae adc (bad) xor (bad) add (bad) in and or rex.WR in rcr mov adc ss and mov ficoml pop sub (bad) in rex.B mov mov pop (bad) xchg add rex.WX cmp int cltd (bad) push and sub rex.WRX (bad) fmuls sbb sbb (bad) jns jns fildl add adc stos sbb imul or movabs rorb rex.WX rex.RB jbe (bad) mov pop hlt rex.X xor jp out std and mov (bad) fistp rex.XB rex.WXB repz lods push adc loopne pop movabs fcoml (bad) clc sbb fs or add je cmp rex rcrl xchg callq mov fucom popfq scas addr32 outsb loope (bad) lock fbld imul rex.XB subl cmp pop rcll and adc shrl pop (bad) jrcxz or or enterq xor pushfq shl fiaddl cmp je pop pop (bad) outsl rex (bad) movsb mov jrcxz cmp ss hlt (bad) sub push rex.RB rex.WRB and sub mov (bad) scas rex.WR or rex.WRB insl fsubrl mov (bad) fdivrs fucomip jmp lods rex.RB fmul rex.W add sbb mov rex.RXB sub mov lea xchg nop pop mov push xor movabs pop adc rex.RB ds repnz test rex.RX or or jg and callq push sub jrcxz rex.WR (bad) (bad) mov cmp add sub rex.WRXB mov shll and retq adc sub jrcxz mov xchg (bad) iret lret rex.WR fs outsb (bad) fcmovnbe sub (bad) push and xor xchg data16 (bad) jbe sbb stc imul test rex.WR rcr and sti rex.RXB jg mov mov mov jbe (bad) xor (bad) (bad) lahf incl rex.WR out addr32 hlt rex.XB (bad) out ficompl cmp cwtl mov ficompl fcmovb jp fcmovu test iret (bad) loopne insl movabs mov or pushq lcall cld pop mov mov lret sub insl push xor fidiv out ss rex.W xor (bad) jmpq (bad) fldl fsubl pop mov scas cli (bad) xchg add gs rex.W or lea (bad) xchg rorb adc (bad) rex.WRX sbb fldl rex.RX mov test sar repz xor (bad) loop cld cwtl fdiv rex.WRX cli (bad) test fwait xor notb add add loopne es (bad) movslq in mov xor (bad) xchg rex.X addr32 callq (bad) out loop jo (bad) pop movabs jmp (bad) push cmp add cld pop rex add (bad) (bad) mov test nop (bad) sbb rex.WRB out xchg rcr cltd sub and or (bad) enterq rcrb cmp rex.XB cli pop push movl xor (bad) mov (bad) xchg adc rex rex.B (bad) retq rex.R iret rex sub adc jno shll pop and or adc loopne rex.R fnsave shll popfq xchg jrcxz sbb rex.RXB callq cmp fisubl mov es test (bad) shlb mov rex.WRXB pop jnp xchg add movsl or mov int3 xor int3 add imul out pop clc callq mov mov pop in rex.B adc jns movsb sbb movsb (bad) je adc jnp xchg sub xor jb rex.WRXB (bad) push test add adc cmp push insb xchg outsb enterq cmp ds mov out (bad) or (bad) rex.RXB push add retq cld out push add psubd mov and mov jo sub mov and in imul enterq (bad) loopne (bad) callq push loopne (bad) add (bad) fcomps xlat mov gs in fidivrl add sahf sub movsl mov (bad) lahf push mov sub imul add mov sub (bad) (bad) in rex.W (bad) fucomip loopne movsb cmpsl loop mov nop and movsl jg movabs and (bad) (bad) (bad) rex.W add rex.WRXB gs rex.XB cmp movabs rdtsc and rex.WXB jae mov sub sub fdivl pop (bad) cmc sub mov cmp xor rex.WRXB cwtl (bad) pushq rex.RX gs (bad) (bad) es adc adc addr32 rex.WRXB pushfq fdivrs test imul xchg cld adc jmp sub push mov (bad) enterq sbb sbb sbb jmp rex.WB movsq mov adc cmp negl and adc hlt sub (bad) mov lock (bad) pop (bad) mov jo stos addr32 imul add or jbe movabs fidivrl out (bad) std movsb mov sub sarl out js jmp enterq repnz loope (bad) (bad) sahf mov adc xchg sahf lods (bad) and adc (bad) xorl cmp pushq rcrl shrb (bad) add loopne sarb (bad) add adc jno jns fildl push cmp (bad) (bad) push (bad) mov mov retq (bad) lret mov loopne (bad) icebp rolb (bad) and mov rex.WRXB and mov pop or cs or int rcl js cli rex.RB jns incl repnz xchg shrb rex.WR scas mov and jns stos (bad) (bad) shlb sub jp rex.RX and sbb xchg rex.XB cmpsb push imul std sbb (bad) rex.XB loope mov or xchg xor cmp retq mov sub test jle (bad) (bad) mov sbb fwait xchg adc cli (bad) pop gs or and rex.RXB or cli push rolb popfq cmp rex.XB rex.WXB outsb sub mov (bad) mov rex.WR cmpsb xor (bad) icebp loop cli (bad) in pop (bad) xchg cmp push fistp movabs jl push or (bad) or mov jmp mov (bad) enterq js mov mov jns jge stos (bad) xor or test (bad) rex.WR cmpsb rex.WR mov jge retq and gs rex.W rex.WX or es test push stc jmpq add mov push rex.B xchg rex.WR (bad) repz cwtl leaveq pop mov popfq adc mov sbb mov mov pop cld (bad) rex.WX shlb mov movslq xor push pushq jno or xchg xchg push (bad) sbb mov (bad) lods (bad) (bad) (bad) cmp mov mov push or cs pop mov fmul cmpsl lahf enterq fsubrs lea jg rex.RXB (bad) mov fs or (bad) mov or mov andb push clc loope fisubl fsubrl pop repz cmpsl idivl jbe shll or and data16 out adc pushfq xchg mov sbb cwtl lahf jmp mov cmp or sbb jns jbe sub out pop enterq rex.RB and rex.XB and out pop and movsl incb lods or mov rex.WR sub jno pop pushq imul fsubrl imul rex test out sahf ja int3 retq xchg push sbb and mov stc cs (bad) icebp addr32 std scas fdivrl push pop stc shll jbe sbb mov (bad) rex.R cmp (bad) loope movslq cmpb or cld rex.WX rex rcrl mov mov rex.WR mov jl sub (bad) repnz movsb (bad) xor (bad) mov addr32 and cltd (bad) shlb mov imul (bad) cwtl out enterq and mov push (bad) rolb mov mov rorl and mov shlb rex.WRXB mov imul jge in add pushfq out pop cmp sbbb rex.WR xor lods movabs fmuls (bad) fnstenv (bad) neg (bad) sbb xor pushq fmul sub (bad) insl add (bad) cwtl mov callq pushq mov jae fildll (bad) pop mov (bad) rex.WR and push jae lock mov rex.WR (bad) push (bad) cli and mov (bad) test rex.RXB or jae cs in test idivb fwait lret pop rex.RXB jmp rex.WR rex.RB mov xlat rex.W rex.WR rex.R cltd cmpsl sarb loope mov (bad) xchg data16 stos nop pop stc rex.B ficompl (bad) hlt sarb shrb pop data16 push and (bad) add mov test scas jne pop rex.RX add sub add sbb sbb adc enterq or enterq pop cmc out cmpsb add jl pushfq movabs rolb mov jrcxz cmp and adc lock (bad) (bad) hlt sbb nop (bad) mov cmp icebp fs cmp (bad) xchg xchg sahf stc retq jbe callq adc lock jb pop icebp fs cmp sbb test xchg (bad) adc scas rex.W fiaddl sub test stos fs movsb movsb mov rex.RB rex.WRB push rex.RB fimull fs jrcxz (bad) or loopne sub imul fstpt or lahf or add cmpsb add roll rex.WRB (bad) fs rorb and sub or (bad) pop adc rex.WR xchg cli rex.WRXB pop (bad) nop adc (bad) mov std stc retq jmpq sbb data16 mov xchg rclb mov in rex.WB int3 mov push rex.RX rclb pop leaveq icebp (bad) (bad) and in sarb mov in jne (bad) test (bad) add pushfq jo movabs xor dec push rex.W sub rex.RB (bad) pop fisttp (bad) rex and xchg jge pop mov push xchg pop adc (bad) or and bnd mov xchg insl sub xchg imul or ds es or out addr32 out rex.RB test cld mov idivl push rex.RB sub rex.WRX mov out data16 push (bad) cld push xchg mov mov clc (bad) movabs xor test or enterq sbb rex.RX in xor movslq (bad) add and mov movabs sbb icebp mov pop cli xchg add hlt data16 sub cmpsl out (bad) push or (bad) or add add xor in fsubrl (bad) rol fcmovu jo cmp and insl add or jnp leaveq add and imul xlat test rex.RXB imul addl and lods sub and cmp fdivrl rex.X mov es xor insl repnz jno pop (bad) fsubs movl callq pop enterq mov sub pop sub test xchg rex.WB (bad) (bad) rex.WR rclb rex.WRB rex.R rex.WB cwtl movabs (bad) rex.RXB ds mov rex sub jmp ja and (bad) xor rcrb leaveq int3 retq (bad) mov (bad) rex.WB cmp (bad) fildll or gs enterq imul xchg stos rex.WRX rex.RXB xlat and (bad) (bad) add mov add movzwl sbb out callq outsl rex.RB add push rex.WRB rex.WX (bad) rex.RXB pop push or out lods rex.WXB rex.WR gs adc ficoml xor (bad) lret int3 repz rex.WX rex.RXB cltd lock and fistp (bad) and fsubrs rex.RX mov mov lret lcall repnz or jo int shrl rex.WR adc loopne out and (bad) add mov mov (bad) mov add sahf add jge mov pop cmp loope cwtl push rex.WRXB xchg rex.WXB enterq loope popfq rex.WX rex.WB mov rex.RXB (bad) jmp pop cmp mov pushq add cmpsb mov and push fsubrs stos es adc cmp push ja insl and adc movsb stc (bad) rcl (bad) pop sub cltd add rex.RX (bad) ror cmp out sub sub and xor test int3 xchg (bad) push jnp (bad) cld and movl (bad) jl in mov test sub rcrb jmp repnz (bad) es (bad) psubw mov and cmc pop xor sub xor adc xor mov jne mov rex.RX decl (bad) rex.RB idiv add (bad) repz (bad) and mov jle cmpsl push sbb xor sub stos sbb and add punpckhdq jrcxz mov (bad) (bad) (bad) int or lods pop mov push fiaddl movslq rex.XB add pop (bad) pop rex rex.WX nop es (bad) jno xor movsb sub cmp cmp sti ficoml repz cmp (bad) rex.WR mov movsb rex.WX (bad) add out (bad) (bad) rex.RXB cmp sub and fcmove and fnsave test xchg rex.W add rex.WR sbbb insl shl rex.WX sbb push add rex.RB fimul mov sbb movabs rex.WXB out pushq mov loope (bad) jo sub jp rex.WRX rex.WXB push repz notb sbb and mov adc sub pop fdivl rex.WR outsb (bad) int3 lret push jle faddl movabs mov (bad) movabs callq (bad) movsl xchg push fs rcrb pop fbstp pop rcr (bad) je mov mov mov out jg jo out cmpsb or sbb fdivrs (bad) mov xchg sti rex.RXB sbbl loop mov or mov (bad) mov ss callq (bad) or lahf cli rex.WX std rex.W xchg sbb scas mov lock xchg (bad) (bad) lret mov lock rex.X rcl out (bad) addr32 xchg sbb (bad) mov pop test shl movsb mov push pushfq xchg divb (bad) out mov test mov push rex.RX cwtl movabs leaveq in sarb scas rcl (bad) gs (bad) ficomp fmul jg,pt xlat pop add mov or push lret add pushq test stos test rex.B rex.WXB movslq (bad) push (bad) pop movabs mov rex.WRB addr32 rex.WRX ficompl push outsb mov pop sub (bad) je mov cltd mov xchg outsb pop add (bad) sub jmp test (bad) xchg in pop jmpq cmpsl movabs cld pushq (bad) add pushfq add mov adc (bad) or cwtl rex.WX addr32 (bad) lods push and loopne std lret mov mov xchg rex.WXB rex.R rex.W loope jns fadds rex.WXB cwtl adc rex.X std xchg rcl and or pop stc sbb incl add sub jmp movabs fstl jrcxz sub xor jge push movsb loop mov cmpsl (bad) rex.WR xchg mov retq sahf cld int (bad) sub jge pop push rex.WRXB inc fs nop hlt push (bad) sbb mov sub mov rex.W (bad) cmpsb xchg jle rex.WR nop lret xchg mov rex.WRB movabs adc cwtl int (bad) nop fstl mov add xchg clc rex.W out or rcrb (bad) iret mov (bad) loop sub (bad) lret pop gs fcomps lock (bad) (bad) mov (bad) and rex.RX test rex.RB rex.WRX movabs add sbb (bad) push (bad) (bad) or mull rex.WR add cmp push mov (bad) xor (bad) and adc xor retq rex.RX mov fiadd jg rex.WX or test add add sbb cmpsb push movabs rex.WR (bad) rex.WXB push movabs enterq xorb xor jg out int3 leaveq rex.WXB sub and jmpq and out xchg push out callq fidivrl repnz xchg add jo outsb mov sub clc je mov xchg fildll fnsave fsubs fidivl icebp repnz out mov rcr xchg adc pop rex.WR or cmp scas stos sarb (bad) shrb pushq (bad) push lea mov and pushq pop pop outsl sub test mov movsb outsl jg push sub jo iret rex.X rex.WR sti popfq insl mov push imul fistp pop mov mov test jbe pop xchg xor (bad) repnz push pop rex.R (bad) rex.WR retq (bad) xor movsb imul cwtl push (bad) mov pop fidivl (bad) (bad) fs ds rex.W (bad) rolb rolb rex.WX loope lods rex.WRXB mov rcl mov (bad) insb (bad) add rex.XB or stos movabs out sbb test push jnp cmp movslq jnp pushfq fidivl pop movsl mov rex.WRX lahf lods movsb pop out lods lods (bad) mov pop xchg adc xor push mov (bad) xor jmp imul pop rex.RXB lret fisubrl clc cmpsl movabs sub add loop jno rex.RXB cmp test scas (bad) shrb fisttp movabs push mov rex.RX pop stos (bad) int mov (bad) lock rex.W pop adc xor movabs and (bad) jnp (bad) xchg loope (bad) (bad) mov jb push (bad) pop (bad) (bad) movabs xor movsl xlat rex.W pop and xchg jo pop lods (bad) xchg and rex cmp mov fcoms (bad) (bad) push rex.RB (bad) (bad) xchg retq rex.R (bad) cmpsl loopne jns flds cwtl shll push add (bad) cmp xchg push pushfq out rex.WRB rex.RXB imul nop xchg rclb (bad) pop and sub add (bad) clc (bad) xchg pop jmp rolb jrcxz mov adc sub rex.RXB rex.RX js rex.XB jne iret mov jnp rex.W xor rex.WRX xor jne adc movabs mov mov (bad) sub mov (bad) xchg pushq or jb mulb pop and rex.RB mov or enterq rex.W mov cmp callq cld lret pop adc and sub shrb pop rex.X jp fisubl sbb pushfq mov add rex.XB mov (bad) lahf fcoms add add mov (bad) imul int imul add callq adc sbb or movabs mov jno push mov (bad) or cmp jg xor xor mov rex.WX fwait pop cmp xchg adc test (bad) (bad) mov test addr32 (bad) sub add sbb mov movsl cmp and xchg adc (bad) mov out stos (bad) mov rex.XB repnz sub (bad) sahf jge movabs rcrb mov fwait je add loope pop and xor pop addr32 (bad) add lahf add fnsave adc enterq lock mov xor push outsl sub xor push add (bad) mov lods jae jg iret rex.RB rex.R rex.RX pop rex.WRX jg icebp add jg push outsl (bad) jbe and movslq rex.XB or xor movsb jge rep rex.WR leaveq lahf or int3 cmp (bad) xchg pushfq stos (bad) jp or jnp iret popfq ja rex.RXB mov cmp rex.W rex.RX test rex.X sub shll rex.RXB cld (bad) jg adc xchg or jae sbb jg repnz leaveq push adc (bad) and mov sub rclb fwait out sub popfq popfq rex.RX rex.X mov mov and movabs rex.R pop (bad) cmp (bad) fsub sbb add jmp rorl (bad) (bad) and (bad) lock jbe sti (bad) adc fucom (bad) scas mov je mov mov loopne loope cs cmc (bad) out xlat add enterq mov cmp movabs jp (bad) pop add or jmp rex.WR in push out (bad) or es mov movsb mov pop je (bad) cmp lahf fidiv fistp fistpll (bad) loope (bad) (bad) add add movabs (bad) jge rex repz jge fsub sub sub push and fs (bad) subb ficompl pushfq icebp fild cmp cmp movabs rex.WRB jo fwait push imul sbb (bad) jmpq mov icebp pop (bad) pop out movsl xor mov and or adc jge fidiv mov insl fs pop es rex.XB movabs or movabs mov rex.RB cmp movabs add rex.WRXB (bad) xchg (bad) movabs pushfq rclb rex.B pop jne jmp (bad) mov and xor and test (bad) lock insb and out fild (bad) mov stos (bad) iret out addr32 mov push mov fs jg push movabs movslq mov and rcrb mov lods scas loope sub sarl rorl xor cltd test mov int3 fwait test pushfq push mov jmpq add rex.WRXB lahf lret mov cmp rex.RXB ss lret add outsl cld insb and rex.RXB outsb (bad) (bad) movslq add rex.WRX rex.XB mov (bad) pop rex.RX mov xor or fild rex.R popfq push mov and cltd mov rex.W fwait pop or out sub rex.XB add xchg callq pushq push add add fs movabs rex.WRX imul jae (bad) add and rex and stos imul rex.WRXB fisttpll rex.WRB push (bad) rolb mov int3 mov or and movabs xchg mov outsl fucom out fadd sub sbb test pushq xor sbbl movabs (bad) sub fwait movslq xor or sub leaveq mov movsb add test movabs movslq sbbb push js jo scas xchg or enterq pop cmp mov xor add divb ds rcrl mov loopne rex.RXB sub xor rex.RXB rex.WR fiaddl (bad) xor out out int3 jbe (bad) rex.WR add push sahf rex.W std sar add rex.W insl rex.WRXB pminub xchg repz xchg adc adc pop mov jbe repz and rex.B stos lods sub outsb cmp mov adc rex.WXB rex.WR repz retq (bad) and or cmpsl movabs pop rex.WR negw push cmp pushq (bad) subl fnop movsl (bad) xchg push adc cmp cli out and in cli movabs pop hlt out jle nop cld loope fistpll or test test (bad) jmp xchg or (bad) xchg ljmp rex.WX lahf jno fwait jbe and fsubrs sub movsl ror enterq rclb add in jg cmp out sub mulb (bad) adc cli sbb outsl mov fnstsw pop mov rex.WRB cli push (bad) push mov push xchg or pop and nop (bad) rcll in (bad) outsl movabs xchg movslq cmp (bad) shlb lahf sbb test mov jp out mov movabs je movsl xchg pop sbb ds movabs xor (bad) (bad) mov add (bad) (bad) mov movabs rex.R mov jo jbe and outsl rex.X movabs push movabs xor add je in movabs cli jge shl jae (bad) pop (bad) jnp add jbe in sub insb in mov outsl sub out nop cld push jle cmp jbe mov add je add sub or not loope and cs sub xorb jbe and (bad) rolb jbe fisttpll in rex.W rex.WX cmpsb rex.RXB sarb sbb loope cmp pop mov or xor mov jmp (bad) and pushq in mov scas mov and mov or in pop icebp add pop push (bad) rol rex.RX rex.RXB rex.WR mov xor test rex.WR xchg lahf or insb stc adc or scas pop setae cmp retq (bad) pop rolb sbb rex.XB cmp xchg mov popfq pop lret xor rex.RB rol rex.W pop rex.XB rex.WR add push push int3 and xchg pop (bad) push movsl cmp pushfq push xchg (bad) and mulb (bad) push test (bad) push (bad) add sub or (bad) out rex.X jge xchg sub in add rex.XB mov (bad) xchg sub xchg mov rex.WRB cmpsb cwtl cmp rcll movabs icebp sub shr mov and stos (bad) rex.RXB (bad) pop or mov sub rex.WRXB cld std jg jmpq gs loopne lods (bad) add movsl movsb rex.RXB test (bad) movsb push push mov mov stc repnz sbb retq push (bad) mov fs xchg mov pop mov mov xlat loop ds fadd addr32 mov rex.WRXB rex.XB xor sbb rex.W cmpsl ja (bad) movabs sbb cmp adc and fildl fcomps fsubrl retq adc std retq pop std cmp loope pop lea pop jmp outsl jo rex.WXB jl movsl scas cs insl xchg stc sub movabs pop addr32 pop (bad) mov rex.X lock outsl repnz rex.WX fcmovne nop mov sahf (bad) stos mov add test pop fimul shll (bad) cmp shll push ffreep pop rex.WXB and pop add or push fs rex.R callq loopne imul rex.WR rex.XB and (bad) (bad) or pop and (bad) in movabs pop mov fld1 or cmpsb sbb rex.WRXB adc sbb push shl xor cmpsb mov movsb mov (bad) cmc addr32 in ja lock jb or hlt test lock and pop rex.RB adc xchg roll rex.WRXB rex.WRB js mov fidivrl out sti loopne movsb pushfq rex.X jne test shrb (bad) cmpsl rex.RB pushq rex (bad) mov in adc fstpt rex.WXB pop cvttps2pi icebp jp clc mov (bad) adc ds pop out pushfq addr32 push adc in jp (bad) adc (bad) rex.RB rex.WRX pushq leaveq cltd retq fiaddl cmp push outsl out rex.WRX jo rex.RX rex.RXB sub cmpsb rex.B sub sub stc mov cmp mov xlat xchg callq movabs rex.WR mov test sub and rex.XB test rex.WRXB pushq sub repnz sbb loope movabs (bad) add insb adc xchg (bad) rex.R imul and rex.RX jo (bad) hlt std pushfq insb (bad) adc and movsb xchg rex.RB add cmp cmpsl sbb push (bad) movabs push orl sbb sbb cmpsl fnop leaveq jmp rex.RXB fdivs mov cli lahf cmp add lock fsts addr32 repz cltd insb (bad) mov adc rex.RX push or or cmp lods rex.RB pop je push iret rex.WR lea push idivb mov rex.RXB sarb rex.WRB stc push repnz insb xchg and (bad) fdiv movsl rex.WRXB shrb add out scas icebp subb pop lods sub rex.W (bad) test je xor mov pushq mov out lea insb movsb and and cmp movabs movsb rex.B jo popfq rcll pushq mov xor lret rex.B xor sbb out pop movslq rex.RX mov push in fist add lahf or jg scas (bad) (bad) cltd insl ss adc movabs or (bad) mov push push pushq fistl push (bad) negl ja out rex.RXB (bad) leaveq imul (bad) loopne add or cmp pop mov lret sbb sahf setp sbb rex.W rex.W mov movabs loop (bad) sub rex.WRXB and adc rex.WRXB rex.WRX (bad) (bad) negl insb cmp cwtl (bad) xor xchg imul push mov in pushq cltd xchg lock lock xchg (bad) mov test retq mov xor jg lret retq (bad) sarl sub shlb (bad) rex add (bad) cltq loopne and mov loop adc movabs cwtl fcomip jle rex.RB enterq loope out jns out xchg pop leaveq imul mov pop (bad) (bad) shll and out xor addb in sahf scas or test xchg jge (bad) out xchg (bad) xchg faddl jbe rex.RX add jno add rex pmaxub out adc test pushq adc xchg callq xchg sbb push enterq outsl or (bad) out std lock (bad) sub pop (bad) rex.WR xchg or cli (bad) (bad) cmp mov and rex.WRX push sub retq and movabs jp loope cmpsl pop stos cmp scas xchg out jno scas imul mov mov sarl movabs sub movsb mov stos cmp test mov mov (bad) cmpsb or (bad) insb (bad) mov rex.WRXB rex.WX cmp (bad) test jno mov add pop cli rex.B (bad) in pop push test retq addr32 (bad) add test mov cli mov (bad) fimul xchg retq loopne leaveq (bad) (bad) ss or push pop rex.X outsl lahf xchg push jns mov rex.RXB (bad) jp fnstcw xchg jmp cli mov sbbl rex.RB jp rcrl jne std icebp jp jb rex.X stos imul pop fild movsb (bad) rex.WR hlt (bad) lret rex.RX fcoms rex.WR jno nop loop pushfq movabs sub out or or add out pop cmp (bad) sub lods sub jne fimull (bad) jb (bad) jne mov mov lahf insl (bad) adc (bad) loope movsl mov pop jns adc insb sbb jp (bad) jns movslq rex.RX addr32 lods imull jb gs (bad) pop rex.WRXB (bad) (bad) and movabs mov sub sbb imul addr32 rex.WRX xor jno rex.WR lock rex.WRB push (bad) and fmuls (bad) rex.RXB out mov adcb rex.RXB rex.R rex.B pop fdivrs movb lods (bad) sub mov iret js movabs out pop in stc flds mov mov (bad) mov mov jae xor jns (bad) int enterq lret xchg fiaddl clc adc xchg (bad) add cmc sbb rex.WXB (bad) stc repz and outsl jle and mov (bad) mov pop push xor or cmc add jae (bad) lcall xor pop fstpt (bad) pop (bad) rex.W rex.WRB (bad) jg retq mov xchg subl mov cmp or mov pop imul fcmovnu jle (bad) (bad) mov out movabs mov movabs lret (bad) fistp data16 jmp imul js push push lahf adc push and (bad) mul (bad) cmp mov and rex.WR rex.X mov sub leaveq lea dec mov pop adc add (bad) adc add movabs pop js cli cmc mov rex.B xor loope or loopne mov rcrb jg fcoml movsl and or rex.B (bad) (bad) xchg cmp mov pop mov push data16 add push stc test and cmp (bad) xchg sub mov adc jg repnz hlt pop ss jmpq out rol rex.R fs xchg rex.WB imul rex.WB (bad) js clc movabs pop pop fiaddl rex.WX mov add fs sbb rorl mov mov cmp (bad) sbb rex.RXB pop push in add mov scas fimull mov push imul or rolb cld push cmc movabs notb jmpq movsb mov push mov negb adc sbb repz push outsb movsb mov insl jns divl shrb rex.XB jne cmpsl rex.R fmulp sahf adc push sbb xchg rex.W stos add fsubr rol add ja rex.B cmp data16 or (bad) mov sbb ja add (bad) repnz clc movabs fisub push test repnz cmp rex.RX movabs mov (bad) lret and (bad) (bad) movabs cwtl out jp add (bad) mov iret and scas imul add jrcxz adc es push add pushq (bad) jge rex.WR sarb push cmp fs rex.WR (bad) xchg fs (bad) je xchg and mov pop or (bad) movabs (bad) or jnp (bad) mov fisttpll rex.RXB pop add push pop xchg rcll cmp push xchg and int3 addb (bad) lods adc cs and sub rex.W (bad) adc rex.WRXB addr32 sbb push cmp adc cmp pop sub or lea in rex.WRXB data16 sbb loop movabs (bad) pop mov movsb stc adc (bad) rex.WXB rex.WR icebp stos sbb push lods (bad) pop rex.RB xchg psubusb ss push adc push faddl jnp rex.B adc pop in jbe xor add and xor sbb movsb rex.XB (bad) cwtl sub iret add mov or rex.WRXB jg xchg mov pushq sub loopne std addb and lods jno add movslq (bad) mov xchg enterq imul rex.RB retq jmp add add sub fs int rex.B sbb shll pop rex.RX rex.WRXB (bad) cmpsl add push push pop rex.RXB and data16 cmp outsb pop jg test jle (bad) rex.RXB fldt rcrb jns stc movabs (bad) push mov clc and lock movabs (bad) rex.WRX rex shlb mov fsubp and jns movabs movsb rex.WR retq in lret or xor xchg jbe jp mov rex.XB scas sti cwtl cmp (bad) mov lock sub sub rex.WXB leaveq rex.RXB sbb je sub lahf and mov (bad) or in xor jbe push mov rex.XB add rex.WXB incl rcr nop cmp and out lahf rex.WX pushq mov adc fwait std mov cld repz jmp rex.RX rex.B rex.RXB mov mov (bad) jo xchg rcrb (bad) xchg nop sti (bad) xlat jno push xor mov iret mov stc jle rex.WR rex.WR rex.X rex.RX loope insb fildll pushfq rex.W rex.R shl test fbstp cwtl divb add mov popfq rex es mov retq cmpsb imul mov push imul outsl mov out sub mov (bad) push cmp adc cmp jg or movabs mov rolb sub enterq xor mov (bad) scas leaveq push xor nop add cmp jl push jae repnz pop (bad) jne shrb jnp ror (bad) stc rex.RXB xchg add pop sti (bad) push xor xchg pop rex.R repz sub stos rex.XB rex.RB cmp sub xchg xlat paddsb xchg out (bad) (bad) (bad) mov adc (bad) incl xorl rex.WR add mov cmc pushq (bad) mov lret pop cmpsl mov mov std push fcoms (bad) mov test ja cmp icebp (bad) rex.X (bad) ja adc mov sub lret jmpq (bad) es add adc xor rorl (bad) mul je testb pop negl or add mov sub push sub setnp pop rex.RB mov xchg add mov pushq (bad) fsubrs pop cmp xchg loop in cmp xlat push add (bad) gs mov lret rex.RB loopne out movabs pop mov xor jns mov cmp rex.WR mov out or adc pushq in xchg push cli rex.X leaveq fcompl xorb cmp and cwtl adc rex.XB shl mov (bad) (bad) fist (bad) (bad) pushfq xor rolb mull xchg lahf cmp xchg rex scas in cmp sbb movabs cld rex.W fdivrl outsb jbe (bad) pop insl rex.W (bad) and pushfq rex.X rex.RXB or xor jae rex.RB (bad) xor pop cltd mov sysexit rex.R and cmpsl rorl pushq (bad) mov mov movabs jne sbb sub sahf (bad) jrcxz andl (bad) std xchg enterq movabs rex.RXB rcl mov retq and insb or gs movabs sub (bad) mov xchg movslq lahf sbb (bad) jle xchg cmp mov out adc pop and stos rex.WXB rex.WR xor (bad) rex.WRB rex.W rex.X rex.WR and (bad) xchg mov fsubr xchg and or (bad) mov rex mov lods cld pop jno sub (bad) add sub rex.XB and pushq or (bad) mov xor movsl mov data16 rex.R pop fdivs rex.W (bad) rex test pop mov jge cmpsb jl rex.RB rex.RX loopne fsubrs (bad) add add outsl and or loop xor mov add fbld icebp and idivl add sub rex.RX jge out es nop (bad) push push lahf add push xor jrcxz (bad) sbb adc jnp fdiv jge lahf lods add sarb mov stc and xor sbb jne xlat push in loopne jno addr32 sbb rex.RX sbb (bad) or (bad) sbb ficomp std (bad) popfq xchg (bad) movsb sarb pop outsb (bad) jno sub adc cld (bad) movabs jg fsubrl (bad) rex.B add scas stos movslq in (bad) movabs rex.XB or (bad) rex.RB add xchg add xor lods or (bad) data16 sbb rex.RX test pushfw cmp add ja sub mov fistpl xchg fcompl xor rorb (bad) push rex.RX shrl flds sbb enterq mov mov adc ds rolb rex.WR jmp or rorb fdivl mov rex.W callq push adc fsub jge fs sub (bad) xchg cld lock fadds rclb mov jge sub pop enterq movabs push add jge in rex.WRB and jb pop imul sub sbb test pop insl (bad) rex.RXB stc xlat fsubrl js xchg mov mov pop enterq and movabs popfq (bad) cmc add cmpsb (bad) mov sbb test (bad) xchg (bad) rex.RXB push repz rex.RX or rcrl movsb rex.WR fcomip out rex.WR and rex.XB adc movb cltd stc adc rex.XB or (bad) (bad) or jrcxz testl cli xchg iret (bad) shlb loopne xchg or enterq mov jno loop stc rex.X rex.RXB jmp (bad) loope fmul jne int3 iret add stos (bad) xor (bad) fdivr rex.WR rorl cmpsl movsb lret addr32 sti (bad) jl push andb lods in (bad) mov (bad) fs push cs rex.RB rex.WXB jbe,pn pushq or jge sub stos imul and movsb movsl jns (bad) test sahf mov ror push divl cwtl sub push push retq (bad) add outsl sbb sti rex.RXB out sbb mov pop jne out xchg or add in mov fwait pop and pop pop mov (bad) ror cmp mov icebp (bad) pop movabs hlt out sub pop push (bad) std shrb fild clc rex (bad) rex.WXB data16 jge repz jle int3 stc out rclb (bad) js mov mov js lods and xor and (bad) icebp or loope addr32 mov (bad) rex.WR add rclb xor jge in adc cmpl pushq (bad) movsb mov pop rex.WR test sub movabs adc xlat add (bad) fimull clc cmc rex.X ficom mov out and sub push out pop or in sub pop addr32 imul (bad) pop sub rex.W rex.RXB lock out loopne add je push cmp retq adc (bad) mov nop (bad) add cmp (bad) cmp ds stos jnp (bad) (bad) mov fbstp rorb sahf rex.WR xchg add shll push rcrb ds (bad) mov pop pop xlat mov movsb test sub (bad) mov out test addb push push rex.WR leaveq out (bad) sub insb or pop mov push movsl mov add fildll pop lahf in (bad) cltd (bad) enterq adc ss xchg retq test jno stos mov rex.RB (bad) pop or rex.RXB xor sub divb cs out (bad) es or (bad) cmp pop in (bad) pop jp xchg xchg adc (bad) rex.B out pop popfq (bad) lea rol xlat retq retq imul xor rex.W rex.WR jae in scas sub or (bad) rex.WX test jl iret jmp jle in (bad) (bad) and xlat in (bad) (bad) in pop rex.WXB out add sbb jmpq push shrb lods (bad) jno add mov sbb and fistp or jmp and pop movabs mov movsl rex.RB stos push loop (bad) adc add adc jmp jle fsubr pushfq mov xor sahf cmp idiv jo pop pop pop (bad) sbb movsb cmp add jrcxz mov mov jno loop pop rex.B and add jmpq out rex.R rex.WB rex.X in (bad) flds in retq out enterq (bad) (bad) ds fstpt mov or (bad) xchg fisubr loop jge xchg out mov (bad) mov (bad) jnp divl adc mov rex.RXB cmp (bad) movabs jle sub xor (bad) jmp ljmp (bad) sub rex.R data16 sar pushq (bad) in pop jne (bad) rex.RB in ror (bad) sub mov mov mov movabs (bad) iret push pop js lock push push fcompl cs xchg loopne (bad) incl xor out out mov rex.X sub push pop (bad) sbbb (bad) pop pop rex.WR sbb cltd xor cmp pop (bad) mov rex.X popfq (bad) mov sbb imul stos add mov sub sbb xlat imul sbb fcompl movabs sbb mov xchg sbb sub out sahf decb pop addr32 mov xchg vaddss (bad) ror sub in jo pop jmp add cs movsb mov adcb fs fist rol (bad) and rex.WR addr32 cmp sbb je fnsave mov or movabs rex.WR and sub fist xchg movsb fistpl test ss xor loope movsl (bad) mov sub xchg sub sub rex.WR cmpsl clc mul rex rex.W ficoml (bad) movlps jg push mov lock sub (bad) jge iret pop add xor (bad) or jb (bad) jmp rclb mov jle or outsl sbb pop sahf and lahf sbb push push push pop loopne jp test cmp ds (bad) cmp cwtl rex.WR test retq outsl add frstor out addr32 cltd jp mov add sub and addb xchg cmp or movslq hlt in movsb sti jle push loop mov mov adc popfq rex.X pop (bad) or (bad) pop js sbb insb fmuls rex.X (bad) xor push sbb decl add mov (bad) mov movabs out sub (bad) hlt rex.WX (bad) je shrl imulb (bad) fnstcw add data16 xchg and imul jae mov (bad) pop ja mov or rex.W and jmpq cmp retq (bad) jbe sbb rex.XB fmull fdivrl or push (bad) jmpq fwait rex.X movabs imul (bad) jno movabs add mov or (bad) mov cs fistpll xchg (bad) pop pop pop sub push popfq cmp rex.RX movabs insl adc xchg (bad) subb repz (bad) and mov notb movabs test push xchg xor rex.WX or lret mov pop lods rex.WR rex.B stos xchg std (bad) icebp pop cmp cmp sub sarl jnp insb (bad) mov shl loope add cmp lahf jnp rex pushq out xchg movabs and xor add xor rex.XB xchg xchg popfq rclb rex.WR sub xor rex.WRB sbb pop and loope pop jge,pn sub mov rex.RXB fnstcw rex.WXB js pop addr32 jnp mov xor mov popfq xlat (bad) (bad) (bad) lret std cmp xadd (bad) (bad) push xor (bad) pop push and (bad) mov movabs pop (bad) rex.WRX jge and rex.RB (bad) rex.X xchg (bad) pop xor mov pop fistpll sbb movslq rex.RXB and mov add je sub movabs rex.WR rex.WXB ja pop or rex.XB (bad) cld mov or jno push adc push enterq xchg out lods and out icebp shlb fdivp mov adc adc outsl cmp (bad) std jns movsb add cld data16 adc lea callq push mov imul cmpsl stc movabs stos (bad) xlat clc out xchg or rex.RB cmp (bad) cwtl cli callq loop xchg mov out and xor rex.WR xchg or and sbb ss pop movabs pop cmp sbb lret and int ss and sbb leaveq and and sub (bad) (bad) icebp movabs push movabs pop rex.RXB push rex.WXB (bad) xchg out push lods fdivrs lock lahf rorb jge adc vmovapd adc (bad) (bad) repnz shlb fdivrs (bad) sbb ss orl pop (bad) pop out (bad) (bad) and out insl ficom test leaveq test jp (bad) mov (bad) iret (bad) xor push es rex.RB stc rex.WRX and add rex.WXB and outsl and (bad) add rex.R cs es and xchg pop push xlat movsb xchg andb rex.WRXB push adc rex.WXB mov (bad) rcr movsb adc pop sbb push (bad) sub gs rex.WRX add (bad) add mov add mov xchg popfq je pop or rex.WRXB sti sub or movabs fcomps xlat add mov out rex.WR data16 add adc ffreep or rex.WR rclb mov xor idiv xchg int3 test xor test rorb add add jle dec rex.WRX ss add (bad) mov push (bad) pop adc (bad) rex.WRX xchg add adc nop movabs jge xchg push jrcxz pop (bad) (bad) add cmc rex.R jl jo test pushfq movb rex.WX mov mov mov rex.WRXB and mov xor (bad) xor cwtl sbb test (bad) lock in adc sub lahf (bad) cs adc movabs rex.RXB pop callq and push pop fcompl pop rex.WR push pop rex.RXB mov fcomp mov rex.WR (bad) stos movabs (bad) clc fcmovb clc scas enterq and sbb (bad) cltd movabs pushq mov rex.WXB retq fldcw or cmp retq enterq fs std sub and stos (bad) rex.RXB pop add sub stos mov rex.X mov mov test (bad) push add (bad) jne pop xchg xor mov adc jrcxz addr32 add rex.WRB pushq rex.R cmp sbb je add xlat callq rex.WR (bad) (bad) retq jl cmp and or (bad) mov rex push rex.WR mov and loopne add pop and xchg mov in popfq pop mov rex.W rex.RXB jne (bad) xor rclb test jrcxz sbb rex.B xchg mov icebp jns (bad) rex.WR rex.W (bad) jne jbe fsub xchg int out add xor add flds loopne and mov mov cmp fdivp pop rex.RXB mov testl leaveq rex.RB pop and mov in enterq lods or rex.RXB cmpsl sbb add xor adc rex.RB pop push rex.WRB imul cmp rex.RB rex.W shll and retq rex.WX cli jne xor in clc retq imul test loop add adc sbb popfq pop mov push rex.XB rex.WX loopne icebp (bad) mov out addr32 repnz (bad) imul int jle rex.WX add xchg add sub sub fidivrl xor and movabs sub sub add mov fdivp notb mov mov and (bad) (bad) pop jmp xchg xchg loope add (bad) rex.XB rex loopne add cmp fdivrs sahf rex.RXB mov mov retq (bad) sbb xor rex.WR loope mov pop and int mov (bad) mov (bad) (bad) xor xchg xchg rex.B rex.WRX int3 callq (bad) mov add pop loop (bad) cmpsb movabs in or orl (bad) add push mov mov adc rex.RXB enterq xchg cmp fcomp shl jo xchg add (bad) (bad) or (bad) sbb rcr (bad) and (bad) xchg pop xchg adc insb rex.WB or pop fldcw lahf or add mov pop rex.WR es test (bad) rex.W rex.XB loop push add roll sub adc mov sarl scas (bad) cmpsb rex.WRB fwait (bad) jb retq icebp (bad) adc lret sahf rex.WR jrcxz rcl pop (bad) rex.WR pushfq push rex.B in or sub and pop movabs test leaveq fldt (bad) pushq sub sub cli rex.XB rex.RXB cmpxchg movslq cmp js jge out stos cmp rex.WX rex.WRX sub fcmovu jge add mov jle rex.WRX mov pop fdivs cmpsb adc sbb cmpsl xchg rex.RB inc std xlat cmp add pop push loop callq sbb xchg jo pop movabs or loope sbb (bad) (bad) (bad) flds rex.RB lret jo push and enterq sub fnstcw fdivs (bad) cwtl cmp sbb and repnz test cmp add jb xchg xor xchg push cmp or rex.WR repnz mov lret add movabs adc jo insl shll add jle and rex.WRX and rex.WRB mov scas jae cwtl add (bad) jp push cmp add rex.X rex.WR rex.RX mov mov movabs pop cltd xchg cwtl xor mov rex.X rex.X jae iret xchg sub push sbb sub fsubs xchg sahf out enterq mov mov add movabs jrcxz rcrb fsubrl cli pushq faddl and xor mov shl mov mov repz in loope mov mov add (bad) pop pop ds rcrl jge (bad) xor push insb xor enterq adc pop out fmuls cmp cwtl mov iret sub mov xor adc (bad) or rex.WR push jrcxz andl testb (bad) fldl int xchg rex.RB (bad) jo push add sbb rex.WB pop rol mov xchg gs rex.WR popfq std add pop cltd out (bad) push xor mov movabs add pop stc rex.WX cmp add mov push out push movabs test movabs push pop iret loope (bad) (bad) movabs rex.X data16 rex.B pop iret pop (bad) rex.RX add (bad) sarl negb jo cld in pushw rex.WXB fiaddl (bad) fsubs pop xor (bad) pop test push pop cmpsl pop mov (bad) mov mov rex.RXB xor (bad) popfq (bad) rex.WRB (bad) rex.WB or jrcxz cmpsl movabs (bad) jp (bad) je rex.W rex.WX fnstcw sub sbb rex.WRXB rex.XB rex.R fistpl (bad) fscale idivl movabs in adc push mov js (bad) xchg mov fisttpl in movabs callq fdiv xor cmp retq rex rex.WRB rex.WR sub xor (bad) test (bad) xor jb add mov rex.RX rex.RB enterq xchg sbb rex.X std loop push fsubs mov pop mov push lods pop mov sti roll (bad) rex.R and add mov mov out std jp sub and jg rex.WR fisubl push pop sub (bad) sarl mov sbb movslq lods jge xchg adc test psllw rorb mov add add push jle js mov lret out (bad) sub xchg fadds pop add push callq fcomip (bad) test adc mov clc test lret sbb fldt (bad) retq jl and and sub push rex.X rex.WR (bad) cmp jp fistl (bad) or adc mov jrcxz in (bad) pop pop (bad) ds xlat add push jrcxz mov movabs sub addr32 jns jbe cmp (bad) (bad) and add jmp andb (bad) xor sub (bad) callq mov in add out cmp icebp add mov xorb fsubl cld pop lret shr retq sub (bad) outsb sbb repnz fnsave (bad) movslq rex.RXB rex.WR rex.W lods cmp rex.WR cmpsl sbb pushfq iret (bad) jp rex.R rex.WR ja fs (bad) pop or push mov shlb push mov sub push (bad) and pop icebp (bad) mov movl sarb (bad) jne jb rex.RX add hlt and fstpl and push fsts in add sarb mov out push hlt (bad) (bad) jno or loopne add pop rex.WXB mov (bad) mov (bad) data16 (bad) mov jmp (bad) mov rcrl push rex.RB enterq popfq in fsub in data16 fcomp adc (bad) fs adc (bad) sub jnp sub (bad) mov retq cmp and mov movabs in loopne enterq rex lods rex.RX clc (bad) jo mov mov (bad) and sub jg jle loopne (bad) addr32 mov movsb cmpsl jno push rex.B rex.WRXB rex.WR mov (bad) mov mov rex.RX rex.WR rex.W mov (bad) (bad) ss and nop fildll mov (bad) or push mov jne jp rex.WXB mov push fwait cmp std imul rex.RXB cmp push cmp adc movb adc sub loopne retq rex.R cmp mov rclb fs (bad) jne rex.WR lods lret jae (bad) xchg (bad) (bad) movabs rex.WRX callq (bad) movabs mov and mov push push xor lahf and ss (bad) sub imul rorb mov fisubl cltd stos cltd (bad) fiaddl sbb jge test rex.RB rex.RB movsb adc (bad) in mov sub mov icebp test loope mov (bad) imul (bad) iret (bad) (bad) jo retq shl xor or pop pop xlat movsb ror stc jmpq sub rex.RX (bad) outsl (bad) mov (bad) in sbb jle imul (bad) mov (bad) mov out adc rex.WX ss rex.WRB rex.WR push or mov xchg rex.RX pop cmc test test imul jle mov sub jbe jb ds pop rorb retq sbb sbb rex.WXB mov jno mov push (bad) nop clc decl sbb mov xlat cmpsl (bad) sbbl pop sbb sub pop enterq (bad) movabs pop or rex.RXB rex.WR movabs outsl rex.WR fdivrl (bad) mov add (bad) rex.R (bad) sbb mov (bad) jle cmp jns rex.RXB rex.XB mov (bad) rex.WX mov cwtl test pushq std (bad) adc mov callq popfq jbe rex.XB retq or (bad) mov enterq cld mov scas subb (bad) rex.WR jo rcrb (bad) retq (bad) (bad) movabs rorb enterq sahf rex.WR (bad) pop mov std cmc out sub stos gs movabs and mov gs cmp rex.RB pop sbb subl rex.X lock lods xchg movabs sbb cmc cmp pop movabs out pop (bad) xchg or and nop insl in xor pop pop jbe mov (bad) scas sub rex.WRB rex.WRB pop rex.WXB clc movabs sub sbb jrcxz sbb lock add pop rex.WR mov mov jbe lods stos mov lret jl add fwait test (bad) mov push andl rex.XB (bad) in sub add jne mov nopl add out repnz mov adc cmpsl (bad) movabs notl cmpb lods push mov movabs movsl xlat and leaveq cmp js (bad) sub pop (bad) movabs mov ds (bad) xchg popfq test jl lods xor and xlat xchg rex.WXB mulb rex.RXB mov outsb lret rex.WXB pushfq jne movsl sub xor sbb movabs rolb pop je movsb (bad) enterq cmpsl idiv pop jg nop jne mov or adc (bad) fs movslq xor movslq (bad) mov adc leaveq rol lea lock sti add (bad) pop mov hlt (bad) sub push rex.R xchg stc rex.RB lret add movsl rex.RXB movabs rex.RB movabs cli mov mull jae and rex repnz cltd test xor rex.WRB in movabs jp,pn jo rex.WR movsl pop out xor push rex.X imul scas nop data16 xchg rex.WRB (bad) std xchg cmp ss rorl pop (bad) rex.B fildll rex.W (bad) xor pop out xchg (bad) out fdivr test movabs fstpl movabs pop adc (bad) scas add fcomp leaveq icebp shll nop and rex.XB movsb push xchg mov add cmp jno clc cli callq icebp jge rcll (bad) pop (bad) add xchg sbb std icebp mov mov rcl cmp (bad) rex.WXB xchg mov lock sahf jne (bad) sbbl rex.XB rex.RXB pop rex.RB rex.WXB rex.XB cmp sbb rex.WRB jg ja sbb movsb movsb ror cmp (bad) xor push rex.WX cmp push pop fsubs movslq enterq (bad) stc jno ds retq sub out xchg loop lret jge adc rex.XB pop mov lods jge movb and adc or (bad) (bad) (bad) (bad) in popfq movabs mov fild push sub jae (bad) stos shll add (bad) push rex.RB rcl cmp jno jg pop jmpq pop rep xor cltd clc (bad) sub fnstsw add fdivrs or fidiv sbb xchg sbbl add push mov jne andb int3 jo xchg callq rex.RXB (bad) adc cmp loope movsb (bad) imul add rclb sarb movslq rex.RB mov sub (bad) mov fcompl mov rex.B repnz pop add vminps rex.RB faddl sbb xor movabs fdivrp mov rcrb add jae cmp mov xorl sub mov jae add jmpq cmpsb push (bad) jne xor mov jge fiaddl add sahf mov mov rex.RB rex.XB repz jmp (bad) or sub fstpt movabs rex.RXB retq cmp add (bad) jne jmp lea (bad) rex.R push xchg and rcrl rex.WRXB rex.XB rolb rex.RXB xchg add (bad) xor imul btcl mov rex.WR add (bad) xchg (bad) mov xchg fs ss (bad) or pop sahf imul scas movabs addr32 lock sbb sub rex.WRXB cmp rex.WR mov retq (bad) mov addr32 mov xchg mov cmp out (bad) rex.WB or jp xchg cld (bad) shrb pop jo (bad) (bad) hlt rex.WRX rex jg cwtl xor ds mov nop rex.WRXB test rex pop or callq movabs callq xchg jo lods roll rex.WX or add ds jge cwtl pop and xchg cmp jb sbb cmp (bad) xorb iret mov (bad) rex.WR sbb push sbb ficoml scas mov shrb and (bad) rex.B in mov mov (bad) (bad) (bad) cmp mov mov or add mov fsubrs stos (bad) add movabs mov sti xchg mov and rex.B pop sub xchg in adc mov out or rex.WR rex.W jb lret int3 in and andl rex.RX rex.XB rex.X mov mov (bad) jrcxz sbb rex.R rex.RXB jne in test movsb movslq sahf fwait sub (bad) and (bad) pop enterq adc mov adc xchg mov jle clc or imul add loope mov lret push and add sub push rcrl fsubr pushq (bad) jp pop fisttpll rex.RXB jnp push rex.XB adc movsl movslq (bad) rex.RXB sub imul xlat (bad) sbb fstl (bad) add lahf pop jo cmp shll stc xor movl in movabs mov loop movabs imul rex.X (bad) cltd in push stos js pop pop and mov (bad) rex.WRX sarb and push and adc jrcxz (bad) icebp movsb xor fcoms cld rex.WRXB nopl repz out jp movabs movabs rex.WRXB addr32 xchg rex.RB insb (bad) rex.R jae mov mov (bad) cmp out (bad) andl mov (bad) lods (bad) rex.WXB stos jbe out or or and loope addr32 mov sub rex.XB or int3 lahf imul rex.X sti imul fdivs fidivrl push push incl pop clc xor xchg rex.RB repnz push vmovq add (bad) std (bad) add incb fldl int3 ja sub sub (bad) out mov rex.RB rex.WRXB rex.B (bad) push mov packssdw or movabs or callq (bad) jl or in insl push icebp pop xchg rex.B and xor push negb icebp rex.R adc rex.X (bad) rcrb rcrl add pop push and out repz test sbb movsl push addr32 rex.WRB rcrb jg sbb (bad) std xchg xlat add pop cld test rex.RXB (bad) outsb sbb rcrl and pop mov add (bad) mulb adc add lret adc jae (bad) pop fs sub lahf or sti fwait sarb adc xchg mov (bad) loope jl xor gs sbb iret jmpq (bad) xor rex.WR mov cmp (bad) add enterq cmp movsb or sahf rex.W jb (bad) or js mov add xor pushq test js sbb fldt stos add imul or insl sbb rex.RXB insb add loope insb xor pop rex.RXB push lahf cli rex.WX ficompl jp mov push adc (bad) movabs movsl (bad) movabs vcvttsd2si fcomps jl int adc or add pushq stos mov cmp and add xchg adc jbe (bad) jo adc (bad) and (bad) rex.WR insb or xchg rex.WXB or xchg rex.WX add callq rex.WX xor jmpq (bad) cmc jp pop scas outsb (bad) adc xchg add rex.WRB (bad) stc push ja mov fwait callq loopne decl cmc xchg (bad) rex.W (bad) rex.W sbb sbb push mov cmp rex.XB pop loopne (bad) lock mov fsubr jmp pop sub pop pop xchg rex.XB pop lret pop jp rex.RXB sub data16 xorl rex.B rex.XB pop sahf rex.WB rex.WR callq (bad) or fdiv and fidiv int3 jmp mov in xor movslq (bad) jmpq psubsw or enterq add sub test rex.W push xchg jo (bad) xlat rex.W cld push sbb out (bad) xchg (bad) sub iret lret rex.X fcoml add push cmp (bad) es or lock rex.WR out (bad) mov (bad) cmc xchg rex.WX adc mov in cmp (bad) leaveq lret out push sbb mov (bad) ficompl (bad) insl rex.RXB cmpsb movsb mov mov popfq enterw jo je rex.RB rex.RXB cli jb (bad) loop leaveq pop stos stc rcrb xchg mov jl enterq fidivl sahf out rex.WRXB and mov loope pop jns lcall cltd movabs fcoms sub mov jge push lock rorb rex.RB (bad) ss (bad) xchg adc cmpsl movabs push shr (bad) xchg cmp (bad) (bad) jge pop rcrl or push sub adc (bad) movabs cmp fsts icebp mov out (bad) (bad) loope push (bad) callq jbe push je rolb cmpsb out lods callq movsb mov pop or rex.X jrcxz scas movslq (bad) mov rex.RB leaveq mov pop rex.RX mov movabs rex.WR retq and sbb lock movsb movabs push (bad) stos lods (bad) and rex.WX xchg adc xchg mov jg test (bad) rex.RXB jo sti leaveq adc mov scas je jno rex.WRB rex.WR mov or mov mov roll (bad) pop pop insl (bad) (bad) rex.W rex.WR rex.WR xchg (bad) cmpsb sahf push retq movabs rex.W rex.W sub push (bad) out fimull rcrl (bad) sahf sub loop rex.X rex.WX rex.RXB sub in fbstp rex.WRXB rex.R rex.WXB out cmp (bad) mov imul insb sbb rex.WR enterq mov rex.XB addr32 rex.WRXB (bad) hlt add out jmp ss imul sub fidiv stos rex.X rex cmp (bad) rex.WRB (bad) or pop xor shll cld jae mov mov mov add lock xor lods (bad) in movabs jae xchg add (bad) (bad) movslq sbb rcl xlat add movsb movabs rex.WR in cmp data16 mov ja (bad) mov clc lods movabs icebp movsbl sahf loop int3 leaveq sbb and (bad) rex.WR js cmpsb data16 jge mov or lret rex.W jo xchg int out mov (bad) outsl outsb pop jp pop (bad) (bad) (bad) xor add cli jbe outsl mov decl fmull sahf cmp mov out jo rcrb insl xchg xchg add fwait lret out in xchg (bad) cld cs movsl sub jmp xor (bad) (bad) es mov (bad) test jmp movabs jno sbb xor (bad) test jne fdivrl mov ds rex.W pop std mov sbb fsubrl je mov pop rex.RX pushfq fdivl jb pop rex movslq xor jo movslq sub sti int3 (bad) fsub rolb jae out mov popfq pop xchg adc lret movabs (bad) pushq (bad) xchg mov cli or pop mov (bad) mov out popfq pop repz test and js test outsl xchg sbb js gs xchg (bad) jb rex.WXB (bad) (bad) (bad) xor fsubs js sub xor rex.RXB sti jns in out (bad) push (bad) js rex.WR rex.RXB out cmp cmpsb mov loop lretw adc (bad) cli int3 outsl mov (bad) mov rex.WRX nop rex mov xchg loop ja,pn movl mov jmp in (bad) xor (bad) jmp xchg pop adc (bad) add je sub fldenv andb add sub movabs jg sbb iret (bad) orl rex.W lahf sub vpmullw sub nop loopne (bad) fidivr push fadds ja xor lock pop in xlat test fcoms fbld icebp xchg out rex.WR fadds or cmpsl jp ds rcrb push add movsb mov fsubl pushq xor sbb (bad) xchg movabs or jg je cli pop (bad) (bad) (bad) (bad) not sbb add add pushfq sbb gs ja movabs rex.RXB (bad) (bad) pop in push pop mov mov jge std push push pop (bad) rex.RXB rex.WRB xlat (bad) sub lea (bad) pop xchg mov xchg (bad) rex.RB (bad) mov (bad) decb rex.B rex.RX lret (bad) and sahf enterq add clc xor fisubl sub sti xor nop add jb xchg cli (bad) (bad) pop in scas pop adc test cmp (bad) (bad) jmpq sub (bad) (bad) and jae push retq push addb adc (bad) rex.RXB pop test movsl movabs rex pop jne (bad) fist sbb mov iret icebp jb adc jbe sbb mov cwtl and xor xchg push adc (bad) out (bad) push (bad) add test cmp jl rex.W addr32 rex.B rex.XB addr32 or movabs rex.WR rex.WX (bad) ss xor sub (bad) jmp xor sbb cmpb not (bad) mov test rex.W repnz xor cmp rex.WRX and lret xor rex.WB (bad) sub enterq xchg addb movsb movsb jmp movabs test (bad) int3 cmpsl sbb (bad) (bad) (bad) outsb add popfq jo adc push and (bad) loope sub iret (bad) (bad) adc rex.WRX data16 out or iret loope clc (bad) (bad) cvttpd2pi mov rex.RB xchg and mov mov mov mov pop sbb push (bad) test pop rex.WR sahf rex.XB (bad) stos or rex.X rex.X sbb xor add pushq sbb out enterq sub pop cmp roll or rex.X (bad) sub push sub out rex (bad) jo cmp loopne mov scas cmpsl test imul and jge cmc fadds pop jle pushq jno std add sub adc rex.WB rcrb in adc mov push bnd rorb add and mov rex.W rex.WX rex.WX data16 loope callq jg pop mov rex.RXB (bad) pop test enterq pop (bad) pop loopne movsb sbb (bad) (bad) enterq pop imul (bad) mov roll mov lods rorb and (bad) xlat add and fwait sub cmp rex.WR (bad) jno outsl pop imul enterq sub and (bad) jae ror add rex.WXB push lahf mov (bad) gs add pushq (bad) jmpq (bad) rex.WR insb pop rex.W mov shr push add jno push retq pop or and cmpsl jp repz in add int lock mov cmp scas fisub cmp scas shlb (bad) mov (bad) rcll add faddl or add cmp jle (bad) xchg cld xor movntq pop jbe mov mov rex.W (bad) push or stc jno and fbstp cmpsb rex.RB pushfq mov jmp sbb mov xchg pop (bad) pushq or movabs rex.WRXB pop adc cmp push lock pushfq mov rex jg cmp cmpsl rex.WX rex.WRXB pop loope sub mov push lock ja (bad) sbb cs sub pop out push cmp pop loopne cmp pushq (bad) repnz mov rex.RB sub pop push or (bad) repnz (bad) mov fs and mov (bad) cmp icebp add sub push xor adc jne (bad) sub rex.WRX jae (bad) add pop movabs xlat (bad) out insl in sbb jl jmp xor or (bad) fcmovb add pop cmp xlat addr32 xlat fisub sbbb xchg cmpsb leaveq adc mov cmp repnz mov adc mov repz loop xchg jnp movsl mov xor js mov xchg (bad) sarb xchg rex.WRXB rex.RXB enterq adc test test adc xchg std addr32 jne mov sbb cwtl mov xor xchg sub and fisub mov jb mov js mov ffree jg xchg clc sub out pushq (bad) sub jb decb stos xchg mov outsl sbb adc jp pushfq rex.B shr (bad) cli je lret sbb movsb movslq es in rex.WR and loope movabs or (bad) jge rex.RXB movsl lret test mov rex.WX xor sbb addb test jmp jnp jno rex.WRXB rex.WXB add movabs or mov rex.WR cmpsb or sub (bad) xor and (bad) xor rex.WRB (bad) lods test movabs (bad) pop retq mov (bad) jae cmp in (bad) and jb and add add sbb adc mov mov mov insl lea jns push imul xchg xor and rex.WR push (bad) cmpsb pushfq adc shl (bad) rex.WX lea sahf sub mov push or (bad) lahf (bad) rex.WX pop push rex.W retq jnp stc imul movsb rex.B sbb (bad) jle sbb adc rcrb movslq and xor mov rclb ja lods movabs fdivs movabs pop popq (bad) rex.RXB lahf jmpq scas fldenv lahf xor fadds xchg sbb push rex.B jbe out rcl cmp clc rex.WR lahf mov add sbb in in iret (bad) pop (bad) icebp add sbb add (bad) outsb and test adc adc fmull add mov adc cmp test stos cmp ja rex.RB push sbb movslq sub (bad) mov js out loop in (bad) vpunpckhbw adc cwtl ds gs or xchg out mov pop jmp sbb jg push xor and and repnz (bad) pushfq or (bad) (bad) pop mov cmp sub test xchg jrcxz lahf mov pop mov popfq retq rex (bad) xchg rex.RXB fnstenv add jle pop xor or (bad) (bad) movslq add loop add xlat (bad) xlat (bad) movabs retq gs enterq pop fwait mov insb and fsubl sbb ja (bad) (bad) rol (bad) jbe mov out xchg and fiaddl rex.WX rex.B fsubp out lret sub imul movabs lods sahf out xchg (bad) mov push mov xlat and sti rex.WX cli mov push push clc sub or cmc subl jmp rex.WR iret (bad) mov mov movabs sti push movsl mov rex.WRX je (bad) scas add movl (bad) cmp jmpq add sub rex.RB cmpsl iret lock jmp (bad) pop mov sti add xchg pushq adcl add out mov xor sbb pushq rex.WB shl lret rex.X add (bad) mov cmc or rex.WRX (bad) xlat nop (bad) fist fs test adc pop cmpsl pushq jno sbb jmp rex.RB or rex.WRXB rex.WR es stc (bad) or mov decl jrcxz add (bad) rex.WR rex.WRXB pop (bad) test mov cmpsl mov sahf repz add mov mov lahf and out loopne add gs pop rex.WX lea cmpsb (bad) jns push sbb jb adc movsl rex.R lea pop ffree push test push sub insb mov fadd rex.XB sbb icebp faddl fnop xchg cmpsl rex.WRB push cli movabs out lahf cmpsb push adc mov pop or add xchg mov gs flds add (bad) xchg (bad) ja (bad) rex.RX xor rex.WRXB movslq pop rex.RB rex.RXB jb pop fs adc jrcxz cmp mov rex.WRXB rcpps ds push cmpsl (bad) (bad) (bad) xchg movabs rex.RX rex.RX push stos jnp add jb adc push (bad) pop clc pushq (bad) rex.WB ds sub pushq mov pop cli fnstenv (bad) push adc pop (bad) movslq mov movabs lock cmp rex.W rex.WRX ds fimull push movabs add rex.RB imul stos pop jge (bad) movabs test rex.X rex.WRXB add in rex.RB mov rex.RXB callq (bad) mov (bad) test movslq out rex.X (bad) (bad) pop (bad) jne xchg or push sbbb out rex.X callq sub retq sahf (bad) fdivrl or pop adc movsl ficomp rex.XB in imul retq rex.B rex.B test pushq adc (bad) retq js fsubrs es imul (bad) or pop pop pushq retq flds je and (bad) or js leaveq jbe cmpsb jae and sub mov (bad) or rex.X lock or lock cmp mov mov shrb cmp mov cwtl and out xor sub mov pushq in fild stos or rex.X test xchg fsub test xor (bad) xchg pop fsub or icebp mov xchg movabs cwtl (bad) fdivrs add mov xchg fiaddl movsl icebp cmp mov adc fadd xor (bad) loopne js (bad) jg jge or out pop rex.WX (bad) push jl test jns (bad) sarl movabs jg mov (bad) out rex.R stc add data16 fistpll rex.WR pop xor sbb mov mov enterq leaveq rex.R repz mov rex.WXB rex.WRX negl imul loopne ss (bad) push (bad) jmpq jno rex.WXB ja fdivrl rex.RB (bad) rex.WRB fs rex.WRXB cmpsb (bad) lret (bad) or (bad) pop loop push (bad) callq push rolb (bad) out rcll mov pushq rolb imul nop fsubs mov mov rex.XB add sub mov xor (bad) adc test (bad) rex.RX add mov fdivrl jl and in add lock (bad) shlb sti out rex.RB outsl add add cmp rex.RB lret shrl xlat mull rex.RXB cmp cli xchg fbstp (bad) (bad) rcr or (bad) sbb rex.XB icebp in (bad) sarl (bad) (bad) mov pop xor and out xor (bad) sbbb adc cltd sub adc jmpq ss (bad) sub std xor mov cld and and out (bad) push push (bad) pop loope sub stc sahf mov movabs (bad) adc or xchg or loope rex rex.WR shlb or fcmovb (bad) cmpsb rex.WB callq insb cmp or outsb out pop rex.WXB or rex.WRX movabs loopne and mov rex.X (bad) sbb imul lret (bad) pop (bad) sub enterq jle nop movabs adcl std cmp pop (bad) in rex.XB pushq gs popfq push fnstenv pushq sub movsl and out cltd (bad) push movabs push add sub out (bad) fistp jl rex.W rex.W sub xor or jle pushq cmp sbb push rex.WX mov push xor mov subb fbstp mov imul push push rex.XB ds (bad) rex.X (bad) mov mov sub fisubrl xor sub mov (bad) xor test rex.WR push adcl nop (bad) (bad) push fisttpl icebp rex.WRXB rex.R mov test add js (bad) rex faddl cmp rex.WR rex.W rex.B adc add js fmull sub adc mov adc rex.R rex.X gs xchg enterq adc add jne repz rex.RX rex.WR leaveq add xchg jrcxz rex.XB pop test (bad) (bad) sbb adc jge mov jl rex.WRX xchg rex.WRB testl (bad) gs callq mov lods (bad) adc add (bad) gs (bad) sub movabs mov popfq (bad) rex.RXB add in pop and pushq (bad) pop add stos (bad) xchg mov cmp lock xchg fist idivl insb imul mov pop xchg int3 (bad) push jmp sbb adc lods cmpb or rcll push rex.W outsb addr32 mov cwtl movabs js ficoml (bad) mov pop or retq (bad) jno (bad) cmp gs rex.WXB retq and (bad) xchg fsub incl sbb shll rex.WB xchg (bad) jp rex.RXB mov mov retq fistp movabs cld rex.WX cs enterq adc (bad) or jmp pop add stos xchg movsb xor xchg shl retq imul mov mov (bad) mov out xchg push cmpsb out jrcxz stos add pop nop sbb (bad) mov and sbbl push sbb xor (bad) icebp pop (bad) addr32 xchg fdiv sbb movabs js (bad) js (bad) rex.B mov or (bad) clc (bad) rex.RB sar cmpsb addr32 pop (bad) test (bad) movslq mov sub mov sbb jp xlat sub push in ja mov xchg xchg pop (bad) mov sbb jno rex.XB (bad) mov (bad) xor rex.RX push push or (bad) push mov sub vdivss test cltd add rex.RXB retq scas jnp (bad) repz faddl add mov rex.RX rex.WR rex enterq xor cmpl mov or xor fcomip rex.RB (bad) lret adc mov test and mov mov mov mov pushfq insl in sub gs movslq (bad) pushq imul imul xchg orb jg and mov (bad) xor shl stos nop mov xchg rex.WRB rcrb (bad) incb sub stos mov loope mov mov jmp jnp jo rolb rex.WRX mov scas cmc (bad) loope xchg pop or xchg adcb rex.X out rex.WRX movabs (bad) loope mov cmp (bad) adc (bad) std rex.WR retq (bad) lahf jg movabs (bad) out in retq (bad) pop mov movb adc callq retq insb cmp es in (bad) add and rex.WR xor pop xchg iret sbb hlt mov rex.WRXB xor retq insb insl rex.W scas shlb xchg in loope mov out push or ud1 (bad) mov out or jle stc jb or mov sbb (bad) repnz movabs outsb adc push xlat js (bad) (bad) cmpsb sub push fstpt repz ficompl testb adc stos movabs movabs int add (bad) xor xor pop cltd mov rex.WX (bad) addr32 stc pop rex.W ja and loopne mov (bad) (bad) leaveq mov mov (bad) popfq mov push (bad) (bad) rex.WRX lret adc loope (bad) and out imul movsl xchg movabs int3 in push (bad) (bad) push data16 in ds (bad) icebp mov in cmpsl movsb flds adc (bad) rex.RX rex.WRXB cmp (bad) pop cltd xchg push sti fisub cmp mov cmp sbb int3 mov add lret adc in rex fdivr sub test cli addr32 movabs (bad) (bad) mov adc cmpsl add addb movabs sbb movabs sbb mov push pushfq (bad) mov cs rex.B rorb pop adc mov test jg cmovge mov out mov pop and (bad) xchg int3 and sub lods fwait pop jne ss jno cmp lret pop (bad) callq sbb sbb mov jrcxz cmp roll lahf cld push rex.B imul rex.XB fisub add std add jmpq mov je jle pop mov outsl (bad) out imul rex.W mov pop sub (bad) (bad) and iret cltd add lret (bad) mov add out fildll rex.XB fisubr xor (bad) movsb xchg add cmp rex.W and adc retq add rex.WRB xchg std cmp rex.R xor jb mov jo imul sub test retq rex.X rex.WR and lret cmp jno mov nop stc in (bad) (bad) (bad) movabs rex.RB popfq add xor (bad) rex.R vmovupd jne test pop rex push rex.RB mov fistp mov nopl mov pop jle jp callq mov insb rex.W addr32 movabs cmp fidiv add in pushq pop es or jrcxz scas icebp sahf sub (bad) movabs repz push rex.XB rex.X rex.W shr fwait mov fcomps cmpsb sti movabs cld push enterq (bad) mov rex.XB rex.WR fdivrp std adc rex.B imul enterq sub jns xchg out lods (bad) lret xor mul lock rex.RXB rex.W movb add test xchg jae (bad) (bad) ss (bad) pop int rex.W rex.WX (bad) mov pop std (bad) sub test pop (bad) sub rex.X rex.WX mov push lret cltd add movsb mov pushq pop loopne cmp pushq cmpsl mov (bad) jmp scas lfs sub jae (bad) mov pop xor movb movslq (bad) cmp rex.XB jno sub enterq sbb cmp rex.W jl insb jno (bad) out sahf int jno rex.WRX fs out cmpsb fwait and movabs pop or add or cmpsb movabs and and add ds (bad) push lret rcrl (bad) rex.WX movabs rex.R (bad) rex.W enterq push sahf add or (bad) and stc (bad) callq movabs pop (bad) out cmp cmpsl hlt sti clc enterq (bad) enterq mov fbld xor (bad) clc push or pop xlat out mov xchg jns pop and adc imul add xchg (bad) xor out vcvttsd2si jb (bad) hlt jmp push and pop (bad) jmpq pop xchg iret or push (bad) movslq jb imul gs movabs in adc mov (bad) rorl rex.X cmp fcoms and repz sub and movsb mov rclb rex.R (bad) jne ror xor (bad) mov (bad) lahf loop jrcxz jp cs test rex.RXB rex.B mov lahf jmpq cmp xor rex.WR data16 (bad) rex.RXB mov adc iret jge push sub gs xor sub jns movslq jrcxz mov push adc lods in xchg add clc push or xchg (bad) rex.WX test out bnd and xchg sub add pop movslq sub or retq std xchg pop xor ficompl rex.RX and jo enterq fsub xor lods cmc lret shl rex.WR mov sti add pushq fwait mov enterq jae lock pushfq repz negb (bad) xchg fldenv rex.RXB add (bad) loop xor mov enterq sub xchg mov sub (bad) cmpsl (bad) (bad) retq rex.RX mov (bad) jne bnd adc sbb sbb addr32 xor adc lods mov (bad) xor (bad) rex.WR pop cmp jl mul mov push enterq cltd cmp and jne (bad) stos xor adc fxch jrcxz retq pushq and (bad) in (bad) data16 sub cltd or in (bad) jmp fs add mov push jns rex.WXB movabs (bad) (bad) out jb jne jo adc (bad) push sar xchg sub callq and cltd movabs jo rex.B rex.RX movabs insl (bad) out jle rex.WB loop rex.WRX mov mov test adc adc cs rex.WR jne rex.XB sahf adc add lods pop rex.WRX enterq stc fild and jno rcpps callq imul sub sbb (bad) or sarb fbld jge adc mov sbbb push sub es orl fldl (bad) insb pushfq ds fisttpl fdivs nop add (bad) loope pop (bad) (bad) (bad) adc stc cmp sub rex.RXB or iret xchg enterq movsb jrcxz in test sti rclb sub movsb mov xchg (bad) cmpsl xchg or xchg xchg rex.RB rex.WR lret cli fs push jae imul loope loop in push pop jbe imul fcoms or js lods adc xlat mov jmpq rex.RB cmpsb mov (bad) jmpq (bad) ffreep mov lods adc rex.X data16 add push lock rex.WR mov (bad) sbb xor movsb mov xor cli andq inc std (bad) (bad) jp push fild mov rex.B mov rex.WX rex.RXB stos mov retq enterq sbb retq out fcomps add leaveq jrcxz (bad) clc mov mov icebp test in mov (bad) shlb pop stos xor rex.WXB sub mov push adc test push ds rex.XB cmpsb jmpq and gs sbb add sub cmp sbb rex.RB rex.W iret retq es or cmp js rex.X sub xor cwtl shrl cld rex.RB and outsb insb rex.RXB (bad) lahf retq insl ficompl cltd (bad) lret (bad) rex.B in jb xchg rex mov repnz out in repz xchg ficomp jae movsb rol in outsl pop or push retq fimul movsq xor movabs movabs jge xor outsb fcoms cmp mov test imul adc fsubs sbb (bad) (bad) pop gs (bad) fs sub rex.B jrcxz loop cmp and (bad) test (bad) fsubl int3 and rex.WRX out rex.WXB xchg fstpt enterq jns xlat xchg cs fdivs orb sub rex.XB rex.W rex.WRX rex.B (bad) and adc add pushfq cmp andb add add (bad) movabs rex.WR pushq andl push imul sub mov xlat and gs add lock mov add mov mov outsb or outsb (bad) icebp ja (bad) in rex.WRXB or mov fwait enterq enterq add rex.R lret sub movabs cmovl repnz insb and mov jb movsl cmp pop and outsb in adc jae (bad) jbe rex.WRB (bad) rcrb xor outsl mov xchg xlat outsl adc fmul in lock test (bad) push xlat enterq jrcxz test rex.RXB add clc jmpq lahf mov (bad) jrcxz fadds pop iret retq mov mov pushfq cwtl es mov loope jo jns orl mov push adc loopne mov or xchg push jne test (bad) test pop mov movabs jmpq xchg xor and mov (bad) movabs rex.X sarl rcrl jno rex.W rcrl xlat (bad) (bad) jb (bad) xor sub mov rex.RB rex.XB loopne sub sub mov in (bad) (bad) mov xchg cmp clc stc pop push mov rex.WB lfs pushq and stos mov mov sahf (bad) (bad) and jmpq jg jge xor adc xchg adc rex.WB (bad) (bad) mov test (bad) rorl xchg clc rex cs push gs movabs or (bad) xchg andl or stos addr32 rex.WR (bad) shll (bad) add mov mov fcomp rorl xchg cs and xchg (bad) pop mov divb movabs rex.R (bad) movabs rex rex.RX rex.RXB data16 pop out repnz outsl mov mov addr32 (bad) notb retq xchg sub and xor pop jne outsb jle push or sub (bad) jl in or jae (bad) movabs decl jge add (bad) mov xchg (bad) loop sbbl pop pop xor mov and jl sahf rex.RXB add jmpq rex.WX sub xor (bad) jmp (bad) cmpsl (bad) test push fsubrl jno rex.RXB sub jge pop shlb or sub movabs callq fs cld es fcomps or (bad) repnz divps js int3 mov push sub (bad) jmp lock rex.XB and xorl nop loopne enterq xbeginq (bad) (bad) xchg xor cmp (bad) movabs leaveq xor movslq orl movabs (bad) test or or (bad) out movsl pop (bad) sarb movsb movabs sahf jbe push (bad) scas (bad) out loop fnop mov (bad) or adc or mov cmc push sahf mov (bad) push pushq sub adc (bad) imul int3 pop rex.W rex.RXB sbb enterq (bad) rex.WR fwait std cmpsl rex.WRX and movabs add cmpsb push push out mov mov jae (bad) (bad) lret add mov (bad) (bad) rex.X test push js push and rex.WRB push mov xchg sub (bad) or adc mov roll pop mov callq lock gs sbb rex.W or add lea fs movb rorb int3 sub rex.WRXB mov adc sub sar andb idivl (bad) rcrl rex.WRB rex.W enterq xor rex.RXB movb out (bad) pop rcrl cmp mov add leaveq or outsb hlt movabs (bad) movsb adc or sub rex.WB or xor push rolb (bad) rex.WB rol (bad) (bad) or xor xor mov rex.WRXB scas pop sub sti sbb (bad) (bad) int3 mov rex es out (bad) mov mov leaveq push mov pop sbb sbb (bad) std cmp loopne mov enterq (bad) rex.WX lret jmpq xchg idiv rex sub xor rex.RB rex xchg data16 rex.WRXB es push loope loope and sbb push nop int3 add rclb or adc in rex.RB rex.RXB cmpsb mov lods push xchg imul mov out or mov push pop movabs fwait stc movsl push rex.RB loop (bad) mov xchg pushq imul scas (bad) (bad) xlat ljmp (bad) idivl pushq sub sub out jmpq cmp pop pop je sub test (bad) (bad) (bad) data16 sub mov pushq fldl rex.RXB jle (bad) shrl pop rorl (bad) (bad) or xor mov sub (bad) sub (bad) sbb or out (bad) or cmp or movsl idivl adc push or adc movabs jno jmp fcompl push test test cli or gs lods movsl lret push push ss rex.W fwait push data16 push or mov (bad) loope rex.WXB cmp (bad) orb sub callq (bad) enterq test clc (bad) pop mov pushq cwtl cmpsb jg rex.W rex.RXB jp and js rex.RXB pop mov add add jl sbb mov rex.W jae jg enterq pop or addr32 (bad) xchg test rex.RX and sbb retq pop push (bad) and rex.RXB rex.RXB test cmp mov iret mov es or decl rex.WRX or in rex.W fmull mov jp out sub sub icebp (bad) rex.WRXB rex.WR (bad) mov or lret ja rex.RX (bad) (bad) jrcxz rex.RB or retq vandnpd add cmp cmpsl cmp rex.WX test and mov jge pop lret push jne rex.RX fstpt xor rex.WXB xchg rex.WRB sbb movslq jnp sbb iret cmp clc fistp retq or lea cmp rex.X jne (bad) cmp rex.B rex.WR nop rex.RX cmp rex.R insl jbe (bad) repnz sub and rex.WR popfq mov lock rex xchg (bad) (bad) pop lret sub in cmp cmp xlat or pop loopne cltd xor mov (bad) rex.WRB xor or (bad) (bad) (bad) (bad) test and rclb sub (bad) and push sarb rcrl nop rex (bad) push sub movsb (bad) cwtl nop rclb (bad) mov xchg pushq jnp sub jmp retq jbe rol (bad) je (bad) sub add adc ja lahf addr32 add xchg jbe jrcxz (bad) movsb syscall out adc rex.WRB push vsubsd rex.R repz scas ss sahf pop xchg sub (bad) push xchg andb pop (bad) fisttp xchg (bad) (bad) sbb addr32 cmp adc rex.WRXB or rex.RX scas movabs out push iret lods jg test mov rex.WR repz mov je shll mov mov mov jno fwait jae push rex.RXB rex.WRX rex.WR sbb mov mov xchg sub loope in adc fwait pop imul rex.W (bad) rex.WR (bad) rex int rex.RXB add add pop out push add (bad) cmpsb rex.WRB cltd adc fmuls mov rex.RB out push jmpq and jmpq or testl cmp and (bad) (bad) rex.RXB xor rex.WRXB or sub or fsub movabs xchg sbb and movl rex.RXB rsm jge stos callq (bad) xor mov or js push rex.RB (bad) mov sbb enterq xlat cmp repz add pop rorb sbb sbb mov sub adc clc (bad) rex.W mov jg xchg (bad) rex.WRB xchg je jge sbb jrcxz enterq sbb (bad) ficompl pop fisubl mov sub add mov and out cmp xor rex.WRX (bad) mov cmp push sbb retq cmp (bad) movsb rex.R (bad) push stos enterq fistp fadds rex.WRXB rex.RB xchg (bad) cmp sahf push add adc fs sub add mov fcompl jg sub rex.WR movsb movl rex.WRB cmp and (bad) rex.WRX std enterq sbb jno movabs (bad) mov lahf mov (bad) mov or (bad) and (bad) mov (bad) roll sbbl pop cltd pop movabs (bad) rex.B fcmove (bad) and ja rex.WXB stos popq sub rex.WXB fimull add out jmp add rex.WB imul fisubrl sub imul (bad) mov mov cmc outsb mov callq imul jno sbb and cli push sti leaveq pop and movsl (bad) cmc in (bad) (bad) rex.WXB or or cwtl xchg retq (bad) scas movslq xchg outsb (bad) xchg rex.WRXB roll and rex.RB pop xchg fdivrp mov leaveq push xchg cmpsl retq sbb (bad) pushq mov add (bad) repz or jmp cli test and push (bad) mov add sbb popfq xchg idiv leaveq (bad) std icebp pop xchg std lret lock rex.WRXB mov sub xchg push lret imul lahf push addr32 rcl gs rex.WR adc pushq sub (bad) mov cmovbe jrcxz movabs test lock xor movslq rex.WRXB pushw retq rex.WB out jns gs xchg and cs data16 ja movslq rolb popfq xor xchg (bad) sbb jmpq xchg xchg repnz int scas callq insl repz or pop shlb add mov popfq negl and mov (bad) cmpsb sub in movabs movabs xor xchg out (bad) xor push cmpsb sub lods (bad) (bad) mov pushfq pushq (bad) or rex.RXB jns out sub fiadd pushfq jmpq shrb (bad) out cwtl stos mov sub and mov mov (bad) push pop ss xor pop xchg rclb insl (bad) cwtl rex.XB enterq incb rex.RXB (bad) cmpsb (bad) jns jae or movabs imul pop lods (bad) (bad) xor out (bad) mov rcr pushq jb (bad) (bad) push icebp (bad) rex.XB ja lahf or sub addl cmp verr mov (bad) repnz mov cld add xchg jmp add push adc cmpsb cmpsb in or xor add retq (bad) (bad) int out sub and xchg or rex.W ss sbb (bad) xchg xchg pop shrl callq xchg (bad) popfq mov rex.B jp rex.WXB add mov pushq add jrcxz rex.WB or out fs movabs lods rex.XB data16 shl push (bad) jo in fildll xchg test jg pop (bad) loop mov callq rex.WX rex.R es sub and test adc (bad) push test imul scas clc loope push add adc xchg loopne mov cwtl popfq jbe out movsl xor lock mov lea addl or ja rcrb pop push test fildll sub (bad) rex.R rex.WRXB mov jl cmp or fidiv loope (bad) (bad) sub pop fisttpll or mov mov ror iret pop pop xor add adc push jrcxz ss (bad) ficom xor fs out icebp retq cmp out add mov enterq (bad) loopne clc out rex.R rep or lock add mov lods rolb mov loope mov adc pop loope movabs rex.R push rex.B imul cmpsb outsb (bad) rex.RXB add (bad) pushfq imul rex.WXB (bad) push popq mov out loope mov push data16 fiadd (bad) push (bad) loopne loop rex.RB cmpsl pop clc (bad) (bad) sbb subb add pushq mov or movabs mov mov xor add adcb push scas icebp or movabs cwtl sub fildl scas (bad) mov pop sub nop add mov xor test rex.B jbe jae retq mov (bad) or pop mov lea lods sbb sub imul cmp (bad) push xchg mov inc push rex.RXB xor xorb mov jp,pt mov rclb or (bad) or adc fcmovnu (bad) or xchg and jrcxz loop mov rex.WR lret adc rex.W jne movsb push insb (bad) jne sub rex.WB movsl (bad) rex.WX clc push jnp mov adc outsb and xor stos sub insb sbb fldt (bad) pop fdivrl and test rex.WR (bad) (bad) xchg in (bad) sub addr32 (bad) sub psubusw sbb rex.WR fiaddl xchg fldenv rex.WRB rex.W out movabs shlb enterq icebp sub xor xchg js loop cmp test mov in sbb (bad) rex.WR imul std pop movabs pushq insb mov mov pop roll fs test xor (bad) rolb movl (bad) adc movsb out or jmpq xor nop retq vpackssdw std or movsb pushq xchg es clc push imul sbb std fisubl and cmpsb and mov movabs and rex.W out (bad) clc je xchg cwtl retq orl or adc nop jmpq mov idivb (bad) jrcxz js push cmp in rex.X pop repnz cld and notl int3 sub jmp sbb fcoml sar fidiv rorl mulb cmpsb data16 out (bad) ss adc (bad) pop (bad) adc push ss sbb add sbb scas rorb sbb rcrl mov popfq stos fsubs jo pop (bad) jns (bad) movsb (bad) xor xchg rex.WX mov stc or callq scas push cs sbbl divl mov scas (bad) pushq fcompl xchg jbe mov ja add xchg adc mov sub jrcxz,pt (bad) imul cld or jg rex.WRXB cs fs xorl cld pushfq jrcxz cltd rex.WR test retq movnti sbb mov sbb pop pop (bad) mov ss jno rorb stos rex.B out (bad) ficoml and imul (bad) add xor pop (bad) rex.WRB fadd (bad) shll (bad) ds mov (bad) mov cmp fldenv cltd (bad) in (bad) jae adc (bad) rolb sub rex.RXB xchg jmpq outsl cmp insl jb and cmp shlb xor leaveq callq cli loope data16 mov (bad) imul jmp add cwtl jne rex.RX xor add (bad) callq mov rorb callq (bad) outsl retq imul pop imul or icebp test mov callq sbb mov push lea push rex.RB vfmsubadd213pd xchg mov jmp rex adc or add movabs rex.RXB rex.B cs repz (bad) leaveq pop retq mulb xor repnz (bad) sbb (bad) mov pop cmp rex.RXB (bad) push test rex.X mov add adcl fiadd (bad) jne pop retq imul xor decb and rex.XB rex.RB cmpsl push rex.WRX jmpq mov adc jp (bad) cmp jmp (bad) cmp mov jmp (bad) imul pop fbld shl jne jle rex.XB rex.RX lahf xchg mov cmpsb imul add test pop sub rcrb xor outsb cmp jmp cmp jle vpunpcklbw (bad) sbb loop (bad) lea add imul (bad) jge (bad) xchg or cmc (bad) rex.RXB rex.R cli es movsl push cmp add (bad) ss (bad) add (bad) rex.WRXB (bad) mov nop xor (bad) (bad) leaveq cld rex.WRX jrcxz pushq enterq in push fildl (bad) sub loop (bad) rex.RXB sub js retq jrcxz (bad) loop orl jg adc in jns mov (bad) adc cmp rex.RX scas sbb and rcrb sub movabs xor push jnp mov (bad) rex.WX (bad) mov test (bad) jge insb movabs movsw sub jmpq rex.WR gs push and jbe out jns fdivrl pushq cmp mov shr push jbe mov mov adc mov mov (bad) xor sti cwtl adc jb ss sbb (bad) (bad) pop jge in jb lock (bad) jns sbb jne jecxz callq roll lret cld and pop callq stos gs outsb sbb (bad) push rcrb xlat pop xchg xchg rex rex.WRXB rex.RB and xor enterq iret icebp xchg mov lahf movabs pop movabs pop xor movabs movnti push (bad) loopne mov mov xor add mov jbe fs not mov pop rex.W rcll loop imul or mov clc mov in pushq pop mov ja mov ds rex.B and rex.R fsts insl add or add shufps add sbb fs and cs data16 push add (bad) xor callq add stos test insb fcompl (bad) or rex.R addr32 (bad) pop pop rex.RXB rex.RB cmp push adc adc ja pop rex.XB xchg sub cltd in hlt callq test and in cmpsl (bad) push (bad) in rex.WRB jns jmp jrcxz mov xchg jmpq sub sbb cmp fiaddl sub sub lock cmp test std lret sub mov mov mov scas jge (bad) movabs rex.W mov test (bad) and test xchg fldl rex.XB callq adc rex.XB rex.WX rex.WRXB rex.W add pop mov xchg rex.W cmp imul movd (bad) rex.WRB cmpsl out mov lret sahf and movsb lahf rex.WRB jbe rex.RB gs pop movsb incb movabs rex.RXB subl sub (bad) add rex.W lods jae push pushq cmp xchg jmp movsb push or sub lea sub fsubrl add rorl mov jle add jge std shrb rex.B jge (bad) in mov rex.RX rex.WR cmpsl and fidivl jnp sbb cmp jbe (bad) (bad) and add ja out test rex.WR fadd enterq and rex.RB in callq rorb rex.RXB pop cmp mov adc (bad) xchg repnz sahf mov flds sbb jns or fisubr leaveq (bad) mov xor mov fwait (bad) (bad) divl in mov xor (bad) insl jo mov push fnsetpm(287 out xchg (bad) and rex.WR cmpsb sub hlt imul rex.WRXB mov rex.WRB imulb fiaddl (bad) adc xor (bad) mov data16 mov mov int pop add jbe (bad) cmpsl shlb jl sbb add rex rolb sbb hlt mov rex.W sub rex.B rex.RX cs add mov callq fwait out clc sub xor or jo retq jbe or jl add test movabs roll scas cwtl cmp sub (bad) addr32 sub or cwtl (bad) fimul int3 pop test imull pop (bad) mov push rex.RB rex hlt mov fildl mov pop sbb (bad) cltd xchg rcr (bad) jb es mov data16 mov sbb cmp rex.XB sub (bad) sub pushfq sbbb lods pop ror (bad) push pushq (bad) ja jae push rex.RXB nop/reserved push (bad) clc sbb lahf mov (bad) pop pop mov movsl mov adc lea mov sub scas rex.R sbbl (bad) rex.WR rex.WRXB cs rex.WR adc sbb cs test jp andl movslq add push jp pop rex.RXB rex.W in retq lea leaveq push lahf rex.RXB in jnp rex.WR and rex.WXB (bad) jb fisubr ficompl rex.XB je push xor adc add xor icebp (bad) (bad) jrcxz rex.WRX (bad) js fiadd pop add or xor (bad) outsb mov (bad) rex.WR (bad) jnp movabs cmp in pop (bad) (bad) pop sbb out js shlb sbb (bad) in xor icebp insb rex.WRXB jbe fbstp mov lahf fist jae bnd shld ja and pop rex.X negl or add cmp out jp pop cs xchg jno nop and pop retq push fcoml movsl (bad) imull jbe sub (bad) cmp add (bad) mov in ss shll int3 fisubrl and (bad) push clc push rex.X loopne and rex.RX mov add (bad) (bad) test negl movslq jnp pop rex.RB callq imul sahf (bad) xchg and cwtl mov mov mov (bad) sub adc movabs push adc rorb jbe mov jb in sarb jge mov fmuls push and movabs outsl mov imul vunpckhps lods ss lock jge fcom (bad) mov fiaddl repz and add in mov mov jno pop std adc icebp xor rorb iret add int3 jnp orl movsb rol jrcxz mov movsl jmp jno movabs sub and jle and mov lods mov outsl xchg rex.B xchg rex.RB push rex.RXB sub xor fwait push sbb push pop (bad) jo stos or or (bad) in cmp out push xabort sbb (bad) mov push sub (bad) (bad) (bad) fwait movsb (bad) enterq lea enterq push movsl (bad) add lods rorb cs pushfq or jmpq (bad) fmull rex.B imul (bad) (bad) (bad) jrcxz (bad) push xchg retq divl xchg sbb out ja rex.RXB rex.WRB push sub sub cmp mov mov mov sbb xchg std mov andl rcrb mov pop int3 push rclb xor cmp lret fs add add fninit (bad) (bad) movl movsb out mov push (bad) imul outsb fmuls adc mov (bad) fcoms push and (bad) loopne (bad) pop ja jo mov add rex std jne test mov jmp and rex.W rex.X movabs pushfq xchg push (bad) mov and or fdivs clc (bad) mov (bad) rex.B test or rex.RXB add hlt (bad) fidivrl rex.RXB pop addb cmp or pop add (bad) std pushq imul push nop push rex.WRXB push (bad) cmpsb cmp (bad) jo sahf addr32 and mov hlt rex.XB rex.XB push xchg add jmp xchg rex.RB xlat test sbb lock and adc clc movsl and mov pop xor (bad) (bad) jmp add or and (bad) out callq fnstcw adc jmp fcomip cmp js jo xchg scas cmp sbb sahf rex.WR rex.X rex.WX lahf mov cmpsl sbb test xchg pop sbb mov sub pop gs vshufps jrcxz outsl xor or lret pushq (bad) rex.X rex.WRXB movb or rex.WR (bad) movabs test sub cmpsl (bad) movabs add add repnz fs es lods (bad) sbb (bad) js (bad) scas addr32 pop or es divb test rex.RX jb test cmp adc xor mov icebp jno push rex.WRB jp (bad) cmp rex.WR add sbb lods sub jmp pop enterq rex.W jrcxz rex.RB gs push rex.B movsl xchg pop cmp out orl andl rex.WR mov mov retq clc and or sarl (bad) mov or or cmp sbb int adc mov jmpq nop rex.R or repnz pop add js push adc (bad) and rex.B rex (bad) lahf add jno push sub loope in rex.WR sub pop outsw rex.XB xor pushq ja and cmpsb shlb rolb insl add or rex.WX mov pop clc rex.X xchg xchg xchg and mov rcll jo xchg mov add loopne (bad) insb pop mov incl or movslq movabs leaveq (bad) mov sahf callq and and imul movabs (bad) lods (bad) sbb (bad) lahf jo mov xor or lret icebp lock frstor push xchg hlt rex.RXB fisub rex.WRXB xchg lret or add mov mov movabs or xchg add xchg add sub mov cwtl mov out sub (bad) and jg and test sub xchg mov sub jmp sub add add in jge push or pop roll scas cwtl loopne add (bad) add mov es (bad) mov insb xor cmp movsb pop pop loop out test sub (bad) push wbinvd cltd (bad) (bad) (bad) and (bad) loopne or sub jrcxz fisttpl mov decb rex.RB push jl sbb and nop sbb (bad) outsb (bad) (bad) lods add rex.WR movsl add lret rex.B rex.X jrcxz outsb fcmovne cli pushq (bad) sahf jge test mov (bad) pushfq mov (bad) es mov mov sbb (bad) sub sbb lods sub mov fwait pop rex.WRXB xor xor mov imulb pop xchg (bad) push adc mov cmp outsl cmc clc rex.WR (bad) sbb and xlat cmp rex.RXB (bad) fwait lock out (bad) xor mov xlat or jg sarl jno adc adc (bad) (bad) add js or pushq (bad) cmp hlt fs add pop sbb je imul sbb and mov test rex.X enterq mov push (bad) (bad) (bad) pop adc add and repnz rex.X rex.B mov rex.WXB push jns stos scas lods sti enterq icebp (bad) sbb jns rex.WR (bad) movabs jb mov neg test movabs stc add (bad) adc icebp test adc rolb sets pop (bad) in loop (bad) jo rex.XB enterq jle (bad) (bad) push int3 mull or rex.R and in push neg fldt jrcxz imul fnstenv movabs scas callq (bad) push adc test stos (bad) cmp (bad) mov (bad) andb mov jmpq (bad) push pop (bad) (bad) idivb push or mov cqto js rex.X es sbb (bad) rex.WRXB jl (bad) sub push js js push add js jge movabs xchg adc sarb jbe rex.WRB sub gs icebp rol mov in xor fist adc jrcxz repz fdivp test (bad) (bad) callq fsubrs cmpsb leaveq pushq push or (bad) (bad) fsub mov sbb (bad) sarl and leaveq test cmp cmp (bad) jg (bad) fiaddl sbb sbb rex.RXB movsl jb out cmp add sub mov (bad) add cwtl (bad) sbb pop rcl fnstsw mov jge (bad) movsb pushq shlb add ja leaveq enterq (bad) rex.WR jp (bad) sahf jo test imul jno and jl mov out (bad) push (bad) notl ja xor (bad) push (bad) (bad) push (bad) mov cs cmp je cmp fs or repnz sgdt es loop mov sahf (bad) (bad) lods (bad) (bad) pcmpgtd gs pop sub cmpsl xor (bad) jo test (bad) fistl sbbl xor out cmp mov xchg xchg mov and outsl cmpsb mov rex.WB jrcxz push rex sbb mov subl and loope ffreep sahf add mov xchg std xlat repnz mov (bad) or outsb popfq test test addr32 pushfq movslq xor (bad) mov sbb rex sbb jo rex.RX rex.W mov movabs pushq imul and (bad) (bad) orl movsl mov xorps rex.WRB rex.RB adc xchg test in rex.WR std loope jne or mov lahf movabs sub sub jne push idivl lahf mov adc out insl in xchg retq movabs add notl pushq rex.WB jrcxz fisub test callq (bad) fnstsw lea loopel sub cmp add xchg xor rex.RB rex.WB rex.WX pushq push jl pop (bad) mov jno pushq xor or clc xchg xor or pop rex.WR incw jp add or js jl xchg fstpt add shrl (bad) pop xchg test addr32 pop pop xlat mov sahf cmp fs retq mov movabs rex.WRB mov xor mov out int3 push fisttpl (bad) (bad) mov (bad) and cs lock (bad) mov and xor (bad) in (bad) rex.WR out rolb push callq add or negq fcmovb cltd (bad) (bad) ficompl fbld add in incl adc sub fild add cs sbb sub sbb mov movabs (bad) sbb sahf mov repnz rorl callq mov mov xchg sub rorb mov sbb jno jg and mov enterq shl (bad) shl fs sar cltd xchg neg (bad) xor push (bad) mov sub push xor jbe jne sub and mov outsl (bad) movsb xor lock es add rex.WR cmp jmpq adc xchg add movslq (bad) rex.WRXB movslq (bad) (bad) (bad) movabs mov rex.WRB retq rex.WR movabs leaveq loope xor leaveq and mov lahf or cmpsb lret (bad) movabs fistl or jbe rex adc and loope iret adc mov xlat and sarb jbe mov or adc movslq xor xor out sub mov in sbbb imul mov (bad) jns lock jbe (bad) mov movsq xchg (bad) callq outsb shlb (bad) mov ss jo jbe fdivl setb lods rex rex.X lret lods pop data16 ficomp loop stos xchg and push rex.WRX cmpl push add pop push clc cli fsubs xchg mov mov jl out je cmp jae cmp add push pop lahf rex.RXB test movslq and icebp (bad) and rex.WRB mov (bad) jae imul cmp callq rdpmc scas insl iret rex.R data16 pushfq mov repz jg add cli rex.X div (bad) pop in test pop enterq xlat sub cmpb mov fisttp (bad) jle,pn mov rex.RXB pushfq jne (bad) mov cmpsb ss rex.W ss cmpl pop rex.WRX (bad) xor mov rex.WRXB jp and out cltd mov mov xchg and mov sbb mov rex.WX (bad) sub test stc sbb sub loop fnstsw cmp rolb rex.RXB repnz fild cmp pop xor cmp in lcall xchg add or mov and adc js xchg hlt fwait (bad) xchg out int3 (bad) pop testl movabs jge adc and mov cmp sbb imul pop movabs pop xchg jge cmp jp xor rex.WXB (bad) outsb (bad) (bad) rorb sub (bad) fisttp xchg rex.B rex.RXB stos jnp pushq cmp test or add data16 mov fdivrl stos int3 repnz cwtl test mov mov fs mov xor (bad) mov add rex.X test xor (bad) xchg pop pop pop movslq fnstsw callq xor outsb rex.WXB rex.X (bad) sub pop callq mov rex xchg or callq or rex.W rex.RB mov mov mov mov pop jnp sub mov fadds jle outsb (bad) in fs nop cmp pop sahf outsb pop decb mov js rex.RX (bad) or gs mov and ds (bad) test jne jp and rex.WX out rcll ja cs xlat (bad) movabs retq xor insb mov es sbb rex.RXB hlt cmpsb cmpsl scas repnz outsb mov xchg (bad) or mov movsb jne pop in and (bad) out addr32 mov cltd div outsb loope add mov stos andl and pop cmp fistp mov cmp fidivl and pop (bad) clc gs out push sub push test rcrb xchg or sbb sbb (bad) out (bad) (bad) jge rex.RX rorl rex.RX mov hlt outsb movsb mov stc pop and lea lock (bad) scas sbb mov in pushq out adcl (bad) mov rorb loop sarl rex.WXB outsb std out or fisttp rex.WRX cmpsb pushq jp ds hlt test xchg (bad) fnstcw (bad) sub (bad) rex.RB jge jp or xor sbb pop add outsb adc mov data16 xor rex.WRX scas movabs scas adc push cld es popfq cmpsb or jge push out mov xor (bad) pop mov (bad) xor rex.WR rex.X (bad) pop iretq rex.R rex.RX rex.RXB adc add es stos and fimul sub and xchg adc outsl xlat or rex.RXB mov sub sbb lock jb pop rex.WR xchg (bad) or jnp movabs (bad) movslq or cmp add mov mov mov (bad) push orb (bad) adc (bad) testl (bad) imul je enterq sbb xchg pop insl xor popfq xor xor cmp (bad) pop scas cmc loope movabs scas (bad) sbbl (bad) rex.RXB cmpsl jg test push nop lea mov jo rex.WRXB test cmp adc es lret fcmove jmpq ds (bad) sub xchg rex.WR and rclb pop in ljmp xchg movabs mov mov andl pushq (bad) (bad) sbb sub (bad) loop fcmovne mov (bad) test movsb out or pop rex.WX adc int3 mov (bad) mov andb xchg sub mov push retq xor rex.X xor insl xchg (bad) jb ss jle push push pop (bad) (bad) mov rorb notl adc (bad) callw (bad) movabs fbld clc mov mov ss lock int stos sbb sbb outsb (bad) sub rex.RB repnz movabs fldcw adc test pushfq mov jmp nop test xor lods and mov sub es loope jmpq movsl fadd sub jl rex.WRX sub int ljmp pushfq rex.W jo (bad) mov sub (bad) xchg or ss loope retq cltd fbld repnz mov mov cwtl or cwtl mov pop fistpll clc jns sub push jg std movsl push and (bad) rex or (bad) (bad) faddl xor (bad) rex.RX rex.RX rex.RXB gs movabs stc sbb (bad) enterq fidivl fnsave (bad) push (bad) out mov mov xchg cltd sbb (bad) mov mov xor notl cmp fldenv rex.W rex.WR sub (bad) (bad) pushq sbb insb dec mov xchg movabs lea (bad) rex.RB xchg addr32 xchg imul clc lret sub (bad) (bad) out iret (bad) mov test hlt lock (bad) add movabs cmp jnp mov rex.WR stos mov sti rex.X repz cmpsb test lahf fs rex.WR ficom cltd mov jae mov xchg and rolb xlat jrcxz cmp (bad) xor (bad) repz mov mov (bad) out (bad) mov jrcxz sti jbe fmuls pushq rex.WRB ds mov or retq int (bad) ds loopne lock cmp cmp rex.B lahf movabs divl pop fldcw (bad) or leaveq movsb icebp xor mov scas lret lea pop rex.WRB pushq jne outsl rex.WRX sub (bad) mov mov cltd outsl pushq enterq out outsb icebp retq iret mov lahf loop adc loope outsl frstor stc jo jns fisubl in pop movb (bad) rex.RX sub outsl xchg mov mov mov rol mov adc imul repz fsubp (bad) xchg loopne in (bad) jrcxz mov out and jnp (bad) (bad) fildl xchg and sbb jbe jmpq pop xor or out (bad) mov rcrb push rex.WXB nop movabs and cmp jne sbb adc int3 addr32 out push add stos adc push movsl push movslq (bad) sub jne xchg cmp cli mov callq movabs stos add incl vmovntdq (bad) push sub (bad) sub cmp adc (bad) (bad) enterq sub rclb jg stc add movsl rex.XB jg adc (bad) (bad) adc insl in movabs xor rex.WRB lods (bad) (bad) shlb mov mov rex.RXB rex.RXB or (bad) jmpq and mov pop rex.WR fsub push movabs (bad) and cmpsl and push mov adc cmp (bad) insl out movsb outsb mov rex.X rex.W mov mov jle sbb (bad) movsb lods lock add fldl sub xlat movsb mov fcompl (bad) jb rex.B (bad) xor push sub icebp in out (bad) mov xchg (bad) shll jrcxz cmp enterq cmp (bad) scas mov rcl or stos and fcomps jl (bad) jle pop enterq iret sbb (bad) mov adc cmc (bad) pop (bad) jb add out fwait push jmpq adc enterq imul rex.B rex.WR stc out pushq test add and movl (bad) retq xor cmp and jrcxz fsubrs scas (bad) jmp mov sub push sbb xchg (bad) cmp movsb mov cltd js jmp sub (bad) lea out xchg mov lret pushfq push lahf gs (bad) sbb or push mov cltd xchg fcomps rex.WRXB rex.WRX mov adc (bad) stc rex.WRB notb xchg lods (bad) mov lock callq pop hlt jmp (bad) icebp jne pop out pop ficoml add clc stos test adc mov push fucomp fs mov (bad) xor sub xorl pop int3 movsb lock adc lahf out loope pushq jrcxz scas addr32 xlat callq (bad) and cltd fsubrs pushq js sbb rex.WRXB rex.RXB add sub xor and lret stos or pop rex.WX xchg leaveq js test imul mov mov or fisubl push jnp adc jg adc pop pushq rex.W xor pop and sahf adc test retq or sub xor mov push sahf jno pop mov mov mov pop rex.RB fcomip scas outsb xor in and rex.WRB cwtl (bad) (bad) jge fcmovb icebp cmp setns loope je sub retq loopne or js mov (bad) pushq addr32 jmp rex.X lods ja stc (bad) scas push imul incb icebp pop subl jno (bad) and rex.R rex.W rex.RX pop retq jo shll xchg pop (bad) mov jns and cmpsb (bad) fistpl out sbb pop (bad) or repnz (bad) (bad) (bad) (bad) (bad) fisubl (bad) fstpt js xchg or push pop (bad) xor rex sub adc in (bad) mov test frstor pop rex.WX mov mov (bad) rex.WR clc jmpq mov loopne xor (bad) push xchg movabs decl ja add rex.B fdiv mov (bad) sbb enterq loopne iret xor cmp sbb (bad) (bad) and insl sbb popfq movabs pushq rex.XB leaveq rex.W sub and and (bad) mov xlat nop cmp mov rex.WRXB rex.WXB stc (bad) rex.R mov mov xchg xchg stc stc retq jge cwtl repz sbb repnz faddp rex.WR repz (bad) xchg cwtl xchg pop callq pop test fldt pushfq inc rex lock pop mov cld movsb cmc (bad) push sbb retq in fldl sub or clc push repnz push jrcxz (bad) mov leaveq icebp (bad) xchg rorb pop add (bad) fs bsf rex.WRX xchg (bad) sbb std int rex.WR or rex.WRX rex.R jmp sub sbb loope rex.WX addr32 mov test and (bad) jmp rex.WX rex.WR pop sub (bad) xor mov pop jbe lahf jo mov mov push movabs or sub hlt add and push or pop mov rex.RX rex.RB rex.W pushq mov jo retq outsb sbb or clc (bad) fwait (bad) xor out mov pop (bad) out rex.WRB (bad) clc push cmp push rex.WRB (bad) stos roll clc icebp xlat and enterq (bad) rex.WB incl rex.RXB rex.W retq sub jns mov cwtl sbb jne incb jnp mov rex.W and mov (bad) rex.W rex.R enterq add in (bad) lahf fsubl fistpll pop mov stos fstps outsl rex.WR (bad) sub movabs mov movsl fcmovbe (bad) pop jne shlb loopne rex.RXB jle (bad) pushq lea (bad) insl pop pop rex.X callq not test rex.WX test or fstpl movsl pop mov push (bad) jae sub and insb xchg or test jno sbb jl xchg (bad) rex lock or pop add jo (bad) callq mov push rex.RX and mov sbb outsb (bad) cs mov lock imul incb (bad) xlat faddl (bad) sbb mov rex.WB ds jg hlt pop pop xchg (bad) loopne push pop popfq test out jmp imul pop or pop (bad) mov xchg rex.XB jbe movabs xor and cs movabs repnz test and (bad) and frstor movslq cmp sub int3 idiv pushq fdivl cmpsl retq rex.WRX shl int3 mov callq xlat push pop movabs jmp test adc scas rolb pop xor lret adc xchg sub rex.RX jns cltd jne jle sbb cmp xor (bad) sub scas mov (bad) in (bad) movabs in (bad) and (bad) rex.W rex.RXB test loope sbbl xchg mov (bad) scas or mov rex.XB out sarb mov mov loope movabs (bad) jb jg rex.WB (bad) (bad) imul lahf rex.R rex.RB adc xor push mov adc add iret and movslq mov sarb sahf js (bad) in mov (bad) cmc fadds jns push pushq sbb fldenv xlat pushq sbb fdivrl (bad) and add rex.WR and mov add xlat rex.RXB rex.B rex.RXB pop add loope sbb jrcxz (bad) or mov cmp pop (bad) cmp pop (bad) rex jb test icebp add cltd (bad) rex.WR repnz mov mov addr32 rex.WR rex test jb (bad) in or fbld jge sarb rex.XB jns clc pop retq repz (bad) push rex.WRX rex.WR lret stc (bad) in mov int fstps and sub rex.W (bad) jge fdivs add callq fdivrl nop xchg enterq movabs pushq fidivrl (bad) cmp add cmpsb cli xchg repnz pop mov addl jne sbb pop xchg rex.B rex.RB adc fidivl nop mov callq out out mov nop rex.WB movslq add jp pop sub sbb jp iret shrb insl xchg jg outsl js add mov cmp in sub rex sbb jo cmp (bad) shll mov (bad) fwait rol scas push iret add rex.RXB lods (bad) add jne sbb (bad) jge pop movsb clc jmp add sbb sub xchg rex.R push jl (bad) sbb sub pop (bad) and test rex.RXB int3 add shll adc addr32 rclb xlat movabs mov xchg rcll fildl cli or pop fcmovb cmp fisttpl mov (bad) (bad) pop push jge adc rcr fcom rex repnz loope rex add fidivl cmpsl lods (bad) push mov jnp retq xchg adc test and add rex.WB and sti rex.RX retq push (bad) mov sbb xchg (bad) pop cmpsb xor push fnstenv xlat (bad) pushfq (bad) cld div movsb cltd clc adc test pop xchg std sub pop (bad) push mov test (bad) insb pop retq sub iret or movsb cmp and (bad) sub pop rex.RB pop push incl rex.WRXB in cltd fisubrl adc jg lock pop and rex.RXB jns xchg iret jg (bad) retq in enterq movslq ja (bad) (bad) push out rex.XB loope jp (bad) clc jno cmp sahf add (bad) (bad) push add sub enterq retq callq jle lret xchg rcl fisttp jrcxz sbb imul push loopne cwtl pop or add lock callq js cld (bad) adc callq (bad) test (bad) push icebp xlat and add nop cli out (bad) xlat rex.RB pop addb scas rex.XB mov mov push and cltd xchg repz enterq mov jp sbb (bad) (bad) (bad) mov insl jmp xor mov push movslq pop pushfq andb pop imul sub repnz and movabs rex.R add cmc sbb fistpl retq idivb (bad) jbe fadds (bad) and setbe add rex.WXB push and rex.WR loope rex.WR rex.WXB fldl or rex.WR cmp rex.RXB fwait cli cwtl ss sbbl adc test sbb lahf (bad) mov rex.RB (bad) hlt xchg sbb cmpsb pop mov (bad) xchg sub jrcxz rex.B (bad) test enterq jg mov (bad) (bad) xchg rex.WX pop sub out pushfq push jbe rex.RXB imul (bad) retq test imul adc nop rex.XB ja push add jl cmp loope add cli cmp adc rex.RXB stos (bad) cmp test fs iret pop jb fidivrl add mov and (bad) (bad) mov mov rex adc (bad) mov adc ds mov sub xor fisubl cmp sbb movsl lods sbb or xor and data16 or sti rex.XB ss sub (bad) sbb test or jrcxz sub cmp or cmp imul loope jp (bad) (bad) mov (bad) imul sbb (bad) in fsubl stc add retq (bad) add push sub (bad) movabs loope (bad) mov rex.WX imul orl push pop adc (bad) push pop ja xor mov mov stos ss push sub cmp retq retq rex.X sbb sahf pop data16 rol shll sub sub frstor adc (bad) scas (bad) xor pop scas imul cmpsb pop movabs rex.RXB or sub lock push mov (bad) cmpsb rex.WXB add mov and (bad) jno mov lods cli jb rex.WXB (bad) pop pop out imul rex.RXB decb xchg in jg (bad) pop sub pop (bad) movsb mov int3 stos push lods imul rex.WRXB rex push mov adc cmp adc es mov sbb mov sbb (bad) jg mov jg push push jmp (bad) and add scas (bad) and xchg rex.WR rex.XB add fnstenv shlb jo cwtl or mov (bad) jge lret rcl lock (bad) mov push rclb and add (bad) cmp retq jmpq pop rex.WR push adc or sub adc pushq imul outsb cmpsb xor lahf jmp movsb shrl cmp addr32 or push nop mov push push push xchg xlat pop rex.XB data16 push jno movabs (bad) rex.W pop (bad) (bad) (bad) clc fsts and test lods and sub sub sub leaveq movabs callq loop xor pop or hlt hlt cmc callq in (bad) xor mov xor callq es jnp cmp and rex knotw std int3 add test or loopne mov jbe hlt cwtl rex.WR or rol xchg rex.X (bad) rex.WXB scas rex.R retq (bad) mov sahf mov or test jrcxz sub test (bad) push leaveq (bad) lea rex.RB enterq pushq imul mov mov mov fmuls (bad) (bad) mov sbb test movb (bad) pop fnsave stc fcoml std and fnop mov pop test rex.RX (bad) fwait add in pushq imul scas and mov push mov (bad) fldcw pop retq in out adc jmp in (bad) rolb out ror cmp add (bad) mov fiaddl cmp jmp pop pop (bad) mov fmuls rex.WXB stos rex.RX vpackuswb jb or ss jo enterq mov callq out jrcxz or mov and repnz pushfq adc xor sub ljmp (bad) and cwtl movabs mov (bad) and cwtl fsubrl (bad) movl lret insl adc (bad) mov xchg out test add cltd lea movsb imul and sub (bad) xchg (bad) mov rex.WX sbb mov or jl sti xor (bad) rolb (bad) test shll xchg mov add sbb xchg push or test jge out retq xor sbb lret push jmpq test (bad) rex.RXB insb cmp pop mov rex.X std loop add sbb mov cli jrcxz push (bad) loopne add enterq btc popq mov rex.RX rex.B sub in xor mov xchg cld rex.RXB repz or add and mov (bad) rex.XB mov test pop pop shl or add (bad) mov sbb std mov mov repz rclb stos rex.WRX cli test ss rex.WX lock retq mov int3 adc push rex.WRX fisubrl or loopne movb rolb out out (bad) push (bad) xchg (bad) sbb xor mov cmp or stos ja lods fdivrs sbb shll sbb sub (bad) jrcxz mov rex.XB js out xchg fscale mov (bad) sbb add jmp (bad) outsl lea (bad) mov xchg fcoms (bad) rex.WXB cmp rex.WXB mov fildll leaveq mov xlat (bad) (bad) (bad) mov sbb jp rex.X xchg xchg mov mov clc insb rex.RX adc cmp movslq push sbb out rex.WR jo rex.W or cmpsb pop loop jg idivb retq or cmp mov pushfq loop rex.R test sub (bad) (bad) or (bad) lldt mov mov jno andl mov (bad) and ss (bad) addb (bad) mov movsb pop (bad) xor sbb adc gs movabs sub sub pop jb mov sbb (bad) (bad) movabs cmp cmp cwtl testl and leaveq rex.WR in pop xchg (bad) add pop rex.R rex js rex.RX data16 jno adc pop sbb test sub (bad) fadd or (bad) rex.WRXB movslq xor loopne lods adc xlat xlat loope xor clc pop pop es rex rex.WXB rex.XB mov jne rex.RB in rex.RX rex.R mov ds in movsb adc mov sarb rcll (bad) mov push xor adcl push movsb (bad) adc (bad) add movabs and movabs adc cmpsl push cli lret retq test pushq xor adc callq adc or sub movabs rex.W cwtl (bad) (bad) movabs pop (bad) cmpsl pop sub mov rcll fs out cs sub movabs sub xor xchg (bad) (bad) and sub movsl rex.R jmpq rex.XB or jns in rol pop (bad) int3 add sbb cwtl add fstps or rex.WX rex.R (bad) xor pushq xchg jmp rex.WX fiaddl cmp push rex.WB sub in xor in movabs ja cltd lock testl rex.WR rex.B adc data16 icebp xchg pushq rex.WRXB (bad) sbb pop mov imul scas mov xchg mov push test stc fwait sub sahf push retw rex.WX fiaddl rex.RX rex.W jmpq adc jmp pop imul mov sub mov mov xlat cmp (bad) retq jno sahf sub pop leaveq and cs stos add (bad) imul outsl enterq mov clc (bad) test out data16 movslq sbb xbeginq cmp (bad) sti rex.XB rex.WXB adc (bad) out jg movsl rex.R rex.R rex.W adc add (bad) rex.W sub add flds ss mov rorl or (bad) xchg sti cmpsl xchg mov rex.WRXB loopne xor (bad) and xor rclb sub callq lods shr (bad) rex.RX xchg lret es pop (bad) mov jle loope or add jge push imull clc jo xor punpckhwd rex mov cmp divb mov lret (bad) pop outsl pop (bad) sub or sub rex.RB testl and xor rex.RXB retq rolb or cs rex.W push test (bad) rex.WRX adc jg fucomi or rex.RB add fs and in sub cmpsl lods adc callq push and jrcxz or push rex.R int3 repz and imul test add out (bad) movsl rex.W pop shrb push andb xchg test faddp sub xor sub rex.B jnp fucomip rex.WRB loope cli xchg repz sbb jns mov mov (bad) leaveq xchg (bad) (bad) ffreep cwtl push andb (bad) fisubl xor mov cmp or test lret and (bad) push and sbb (bad) fidivl mov mov imul (bad) mov mov orb mov xchg adc (bad) sarl movabs sub out ja cmpsl and mov push rex.WXB pop sub pop (bad) mov xchg mov mov setae jg (bad) je clc sub rex.RXB (bad) jo outsb jnp (bad) cmp xchg adc (bad) ficoml add (bad) pushq lods nop rex.XB scas (bad) or stos loopl and in cmp scas (bad) push (bad) insl rex.R mov lahf insl (bad) pushfq stc xor es xor rcrl mov cmp (bad) rex.W test xor xchg push (bad) sbb mov stos add out pop movabs jbe mov out xchg pop stos sub movsl or movl movabs js outsl cs or cmp add push rex.XB movsb cli in xchg pop jge movabs pop lock rex.WRX sbb push xchg loop out push sub mov rol jmp movabs out pop mov jne jp mov rex.RXB gs movsl sbb loope test pop jp rex.WRXB (bad) jg loope cmp cli cwtl jo or rorb pop rex.X in xor rex.RXB movsl adc addr32 mov cmpsb sbb insl xchg mov jbe retq fcoml ds vpaddw gs lea sub or (bad) rex.WRXB movabs adc loope fimull loope cli gs push push push fstl sbb adc (bad) data16 cmpsl jne jns rex.RX callq cmp push fs fcom mov adc cmp mov add sti ja push xor imul mov pop sysret rex.RB xor mov cmp and outsl lret fs test pop rex.RX cmpl cs add cmp (bad) or push cs retq sub jge xor int push movabs and rcll loope rex.WRXB test mov stos test mov xchg icebp mov push lods cmp callq xchg push adc xor (bad) jnp cwtl jmp mov (bad) loop mov mov and rclb mov rex.WRXB mov (bad) (bad) sub in in loopne mov mov xor (bad) fiaddl cmpsb jne clc int3 std rex.RX callq sbb or loop movslq retq cltd (bad) sti jnp scas (bad) sub (bad) xor push cmp loop jrcxz jmpq rex.WRXB rex.X sub add adc sbb xor sub sub cld and iret mov mov test jle (bad) gs fwait mov sti jmp rex.WXB and (bad) rex.RX (bad) pop rex.RX mov callq std and (bad) rex.X mov out mov (bad) xchg and cmc adc sub adc mov cltd mov rex.RXB sub std sbb add (bad) callq jo and sub int3 insl jbe test movslq nop jno cs in cmpsl addr32 and test xchg jp xchg and (bad) mov cwtl (bad) or (bad) out (bad) (bad) mov cld rex push xor jp jb sbb and insl cmp push loopne callq pop sub sub mov jb enterq movl (bad) loop xchg and mov rex.RXB in fstpl pop loopne sub fs and lea sbb xor lret (bad) xchg (bad) mov sbb cli rex.W add fiaddl pushq (bad) enterq (bad) (bad) (bad) movabs mov and cmpsl mull or loope (bad) out fistpl pop or (bad) add cmp push push insb icebp out adc fidivr rex.W gs rex.B sti pop or xor and push cs cmp loop (bad) xor orb (bad) (bad) pushq in fcompl (bad) mov cltd and sub (bad) stc and cmpsl rex.R fdivs jg in scas loop (bad) sub es jo or mov cwtl ss vfnmsub231pd cli jo callq movabs sbb ficompl loopne and adc popfq mov add mov xlat adc rcrb and rex.W sbb rex.RB push (bad) (bad) enterq push or jne callq retq (bad) or or iret out jmp mov in lods adc pushfq push pop pushfq movsb or sub fs jo pop and (bad) test xlat (bad) jno or movsb and (bad) push jrcxz rex.XB negb out or imull cs add mov int3 cltd std mov adcl cmp movabs add jns fmull movslq test add rex.WXB rex rex.WX rorb (bad) rex.RX rex.RXB in sar rex.WRB mov movabs mov xor adc jno scas iret lret push or sbb fnstcw clc sub rex.WXB push js adc jp mov push movabs rex.XB loope movslq cld cld (bad) movabs out rex.WRB (bad) xchg jrcxz rex.RB rex.RX rolb jmpq cmp es (bad) add xor (bad) (bad) mov or pushq outsl pop repnz fiaddl repz callq push xchg mov (bad) fs mov mov (bad) enterq jnp rex.WRX (bad) js int xor out sbb insl add pop repnz iret lret rex.WXB movabs mov jrcxz hlt outsl pop mov mov addr32 or rex.WRB (bad) cld mov test (bad) cmp (bad) sbb test rorl in and and outsl insl shrl xchg nop pushq xor pushfq fbld imul callq leaveq scas add and jrcxz out or movabs jo rex.WXB cli movabs rex.B callq shl jrcxz sub movabs add or lahf out js sub adc rex.B rex.RXB sbb sbb pop mov add pop xor (bad) add sub (bad) cmp push movabs fidivr (bad) je stos cmp mov jno popfq (bad) jbe xchg cs movl fidivr stos xlat sub mov add pop add (bad) sti loop cmp push popfq push (bad) sbb jrcxz mov sarl xor movsb test nop pop data16 fcomps rex.WRXB rex.X out ja stos mov pop sub mov add or cli rex.RXB repnz (bad) adc nop push sarl add (bad) loop (bad) cmp (bad) mov rex.RXB out lock loop gs cmpsl push outsl loopne lahf add mov enterq scas mov adcl sbbl movsb xchg (bad) (bad) test out pushfq sub xor rex.XB xchg or xchg roll mov xchg nop cltd rex.WRB rex.WXB out add rex.WRB sub js and test test callq xor and (bad) (bad) adc or or scas or jnp xchg sbb fcomps (bad) (bad) ljmp xor callq rex.X insl adc mov stos rex.WRXB adcb sub sbb (bad) rex.WRB enterq add (bad) or lock (bad) scas xor movabs vlddqu shr and sti pop (bad) retq and test movabs (bad) jno movsl sub (bad) fildll mov pushq jae mov insl jge cmp pushfq (bad) leaveq pop mov (bad) jg mov (bad) mov jne pop out push test push mov sbb jmpq or (bad) cmp enterq xor rex.X pop sbb jrcxz ja pop lods adc (bad) pop pop mov pop cmp xlat xorb pop es pushfq (bad) adc xchg lock lret adc push add sub push (bad) mov cmpsl jp add rex.WB or stc rex.W (bad) sbb (bad) cmp outsb (bad) cltd cmpsb clc rclb enterq jrcxz mov cmp rex.WX mov (bad) add andl (bad) adc (bad) ja (bad) idivl retq outsl rex.RXB jae xor js (bad) jne jnp out mov fsub (bad) mov rex.X rex.W xor xor add cld jne fbld in (bad) nop (bad) pop adc jge rex.WXB cmp loop cmc fdivrs retq xchg jp sbb cmp fdivs stos (bad) lock out mov lret insl (bad) xor jb jg (bad) mov pop rex.RX sbb xor mov loop rex.R rex.XB movabs lock push cmp or (bad) repz pop push ds xchg or rex.B or scas push add rex.XB mov rex.XB cmp jrcxz mov (bad) mov and lods (bad) pop incl push push sbb rex.RB sub rex.WRX (bad) fnop stos movabs adc loope jns mov cmp fadds shl popfq xor fld outsl add sub shl test sub (bad) mov pop add jg adc out std loop callq movsb and movsl lret enterq mov lret xor mov jmpq add (bad) rex.W xlat fdivr roll pop adc push imul cld fisubrl gs sarl retq test cmp xlat sarb fucomip jl rex.RXB push (bad) mov mov rex.B rex.RB fidivrl push (bad) (bad) (bad) (bad) leaveq outsl out rex.B rex.WXB loope jns xor rolb (bad) add jrcxz loopne (bad) pop rex.WX xlat test mov jbe incl rex.RX lods push movsb imul xchg mov (bad) cs es out loope fistpll push pushq mov rorl adcb (bad) cltd int3 pop out push cmp mov jmp push add mov nop imul hlt xchg (bad) movslq mov cmp push push stos cmp stos stos sub out add divl movabs jns fnstenv or add pop (bad) push out clc scas adc sub pop stos retq cmp (bad) retq (bad) (bad) adc rex.R add fiaddl (bad) cmp cmp fdivs stc shl (bad) and jmp adc or sub fsts out repz cmpb pushq mov (bad) xor (bad) sub xlat fidivr rex.RB push retq fadds sub (bad) hlt cmp or (bad) (bad) rex.XB fsts testl rex.WRX mov add (bad) rex.WXB lock nop fistpll fild rorl rex.B jbe xorl stos (bad) xlat jbe lcall adc cmp mov outsl push sbb cmp push and rex xchg mov popfq retq and mov xchg (bad) push (bad) xor loope pop rex.RXB and add (bad) (bad) push cli sub mov outsl and (bad) adc (bad) fcoml mov mov add ficomp xchg callq mov (bad) fistp sti sbb add mov (bad) imul repnz (bad) sub mov jge rex.RXB lock movslq out add (bad) mov loopne mov imul push sbb std jg callq stos iret or mov (bad) pop push (bad) addr32 sub rex.RXB rex.R and and enterq sti rcll pop out sub movslq cmpsb loope out jg sub xchg rex.RXB cmp es xchg (bad) jns and out (bad) pop (bad) push sarb cwtl adc callq mov rex out notl (bad) push mov (bad) popfq fmuls rex.RB jne sbb jmp rex.WXB rex.RB cmp mov lahf callq retq rcr insl sub sub rex.WXB mov mov sbb pop sbb mov (bad) cmpsb (bad) xor cmp pop jrcxz loope cltd cmp (bad) xchg movabs rex.XB rex.WX push rex.W enterq adc test test sbb data16 (bad) mov add jb rex.WXB xchg sbb rex.WR stos pushfq jl xlat std nop (bad) enterq cmp push sbb (bad) mov sbb loope xchg rex jns xchg push push adc (bad) cs cmpb stos adc notl clc rex.WX and mov in jrcxz or rex.X or mov xor xor xchg frstor (bad) sub rex rex.RB sahf (bad) adc rex.RXB jb xor and mov pop int3 scas fmul stc rex.W or (bad) jmp pushq movabs rex.WRB testl pop jmp push mov mov fcomps clc add rex.WX js (bad) mov popfq lock pop rcl adc (bad) add rcr adc fucomp sbb pop xchg push mov fs out cmpsb pushq and popfq (bad) iret sub or scas out mov (bad) sub int3 (bad) rex.WRB or mov (bad) (bad) pop lock sub cs rex.R repnz out rcrb leaveq or sub cltd mov imul nop add or sub rolb int3 pop sub rex.W add sub jrcxz testb (bad) (bad) fneni(8087 stos fs (bad) imulb xchg notl rex.R jrcxz cwtl mov (bad) add ds fldcw rex.WXB cltd leaveq rorb (bad) or imul rex cmpsb loopne pop imul jle cmp in es ds divl sub retq out jge (bad) fmul cmp sub or adc (bad) adc or lret rcll lods cltd sti sbb rex.RB div rorl out rex.WR pushq or out push sub outsb roll cmp mov fnsave xor (bad) jb cld outsb and and rcrb add (bad) rex.RX xchg outsb sbb fisttp movabs rex.W adc jno pop std lret scas cmp mov mov push pushq xor (bad) pop cmp test test push mov test out adc (bad) rclb pop xchg add mov xor cli or adc pop push movabs rex.W rex.XB gs (bad) test (bad) jle lea fadds mov scas rex.WR xchg sub cltd (bad) iret (bad) (bad) xor jbe test ficomp (bad) rex.RXB repz fbstp mov or push (bad) mov (bad) cmpsb push pop or movsl (bad) enterq or rex.R pop (bad) shrb adcl rcll push out es sub testl (bad) stos test adc pop mov jle negb js mov (bad) sub out mov (bad) mov hlt pop jmpq mov xor (bad) or or mov rex.RXB xor (bad) test callw outsb rex.RXB (bad) (bad) and (bad) (bad) or test cwtl sbb lret scas or out or mov imul lret cmp sub cld out testl pop add xor rex.WR es in mov js adc js popfq movsb fmuls sub or mov (bad) lahf imul and sbb (bad) (bad) cmpsb rex.XB rex.WRXB fidivrl push adc jge mov (bad) add rex.WR and (bad) neg out rex.RB or movsl mov out (bad) jrcxz je rex add ficom std xchg jbe add (bad) jmp (bad) sub movsl in (bad) (bad) mov movsl xchg subl out fnstsw (bad) xchg (bad) cmp repz (bad) ss xchg sar (bad) imul gs out adc jne rex.WXB jne push (bad) xor rex.RXB (bad) sbb pop lret icebp push push lahf scas rex.WR movsb jne lea rex rex.XB (bad) mov (bad) rex.RXB rex.WR imul rex.WRXB (bad) rex.WXB out jno xchg mov (bad) mov cwtl (bad) lods (bad) (bad) outsl std loope rex.WRXB rolb and (bad) ss fwait scas or jrcxz mov push pop mull cmpsl (bad) sar rorl cmpsl and roll or movabs callq rex.XB mov mov push or rex.WRX jge sbb rcl repnz rex.WRXB rex.B cs push andb push pop xor xor (bad) movabs rex.XB repnz rex.WRXB cmp cmp imul cld (bad) cmp sub test rex.RXB xor pushq pop imul sub loopne lahf ljmp addr32 mov imul inc in rex.RB rex.RXB sub jns sbb rex.WRXB add retq mov out fcmovb jno rex.WRB incl (bad) rex.WRXB mov loope jp out mov add lahf (bad) push and sub movabs mov jmpq and out mov test cmp imul and push adc xchg push int3 or pop (bad) xor rex.XB insb and lret (bad) test popq stos (bad) sbb pop rex.RX ficomp sub out rex.WX rex.X rex.W scas (bad) rex.WXB js xchg rex.RXB lahf popfq push nop (bad) sahf rex.WR pop orb int3 jb cmp movslq subl xchg je rex jbe lret sub lret mov std mov or adc cld mov adc rex.W push mov sbb movabs mov pop or fsubrs jge rorl or cmp cs xchg add lret (bad) repnz (bad) mov xlat lods in (bad) (bad) adc or and sub rex.R rex.WR cmp leaveq cltd rcrb adc pop (bad) cltd test imul xchg jno addr32 rex.WRXB push or shl xlat outsb or or je jp (bad) rex.WR jnp fidivr sbb add mov imul rcll lahf sti or in rex.WR popfq xlat jbe add rex.WB rex.WR rex.WXB jg push adc (bad) and xor jne rex.X loopne add rex.WRB movabs (bad) add movabs push and (bad) mov jle outsl loopne (bad) jnp mov mov fbstp movslq mov xor rex.W rex.WX push fiadd fildll lea pop fs insl push js stos xchg repnz sbb movslq clc sub loopne and cmpb sub xchg and stc or nop lods popq (bad) rex.X out imul or (bad) rex.WXB rex.XB cmp fdivl incb jrcxz mov stos sub (bad) and mov cmpsb pop (bad) (bad) xor movabs and rex.WR movabs (bad) jge (bad) xchg pop sbb fisubl mov mov jne and test (bad) pop cwtl mov sbb mov movsb (bad) (bad) fldcw mov (bad) (bad) xchg leaveq mov movabs stos pop (bad) loope (bad) mov jb add movl mov (bad) jno add adc sbb lret mov xchg or jns jno (bad) xor lock (bad) rex.WRX xchg sti retq sahf lret repnz and repnz pop (bad) pushfq movabs pop outsb pop rex.WB rex.RXB (bad) clc lret pop shlb retq pop mov int jnp icebp or (bad) or (bad) je iret incl pushfq mov faddl movsb (bad) out xor and xchg loope sub pushfq out add (bad) sbb iret jmpq (bad) (bad) sub fcoms std lahf (bad) add rex in mov (bad) pop addl (bad) and retq cmp mov fwait adc pushq (bad) lock sarl pop sbb lods xchg pop loop xor push stos jne (bad) (bad) sub (bad) je mov cmp mov jp or movb adc sarl or rcrl sbb (bad) xor scas and (bad) (bad) outsb (bad) rclb lret cmp jrcxz callq xor sbb (bad) sbb mov in mov mov push add ds mov rex.W ds push movabs stos cmp pop (bad) (bad) mov add jne or sbb movabs mov imul push add sub push in or (bad) xor cli (bad) rex.RXB movabs in int (bad) and rex.WR mov mov (bad) push push rex.XB loopne mov (bad) (bad) movl jrcxz add rex.WR pop cmp rex.W mov add data16 cmpsb mov mov (bad) xchg cmpb adc loopne (bad) push jge rcr jge rex.WX xor add xlat movslq rex.RX scas popfq mov adc pop rex.XB push sub rex.RXB push jge data16 cs (bad) add pop rex.X loop add je bndstx sub (bad) (bad) xchg je xchg pushq pop sbb mov add pushq lret jae rex.WB sti lret (bad) popfq test vmovss adc pushfq mov push sub rex.RX or (bad) (bad) cmp jo movabs movabs andb movabs pushq enterq fadds stos xchg xor rex.RXB (bad) add jmpq and outsl pop (bad) popfq cwtl callq stc add xlat test stos xchg (bad) rex xchg decl and add (bad) clc push sbb xchg lahf jmp mov xchg adcl (bad) sbb (bad) jae js movsl rex.B (bad) xor pop loop (bad) test mov or adc (bad) xchg or rex.R adc pushq (bad) push (bad) outsb stos mov pop sbb test push lret mov cld (bad) lahf lods mov mov repz out cmpsb movabs add pushq in pop std mov xor or je or and add pop or callq fldl xor (bad) (bad) lods jo cmp push jb data16 (bad) callq fs cmp (bad) jg mov mov mov sbb negb scas or xchg stos ficoml (bad) rex.WRXB sub xor xchg in rex.B fild rex.WRX test add in rcrb rex.X add adc jmp gs je cld rex.X xlat cmp in (bad) (bad) pop (bad) mov and insl jl push pop out addr32 in and adc (bad) or xor nop cmp mov mov jmp jle mov add imul xchg xlat movsb add fsubs jno xchg push adcl fldcw push push sub add push mov jne xchg pop (bad) and fnstsw (bad) (bad) in cmc sbb (bad) rex.WRX clc sub or jbe movsl fildll or and leaveq cmpsl pop fcom retq repz fiaddl fldl rex.RX rex.WRB nop (bad) movabs xor sbb sub iret sub sbb mov jl adc (bad) movslq and rex.R fwait sbb rex.W (bad) (bad) rex.XB add xchg loope setp lea cwtl in (bad) push (bad) mulb xchg in rex.W sbb cmp (bad) rex.R (bad) mov clc sub push mov nop (bad) sub out int sub out add movslq rcrb adc pop in (bad) jo xchg retq scas (bad) adc add push pop sub lahf sub outsb and (bad) rex.WXB rex.WRXB rex.WR ffreep loope retq rex.WRX rex.RB iret adc data16 rex.WX mov test out cltd imulb (bad) mov pop push rex.RXB data16 mov (bad) add jbe sbb or xlat mov movsb enterq movsb in mov in rex.RB data16 cmp shrb mov addl adc xor push sbb add pop mov sub (bad) movabs rorb scas lock movslq (bad) push rex.WRXB shll (bad) (bad) rex.WRX rex.RB rex.WRXB out sub adc leaveq movl cmp and movabs push fisubr sahf mov (bad) rex.WR sbb adc repnz retq jge out or rex.RXB rex.R negl movsb mov add insb rex.WRX pop jrcxz outsb push loope movb scas (bad) or pop rex.XB cmp mov and fiadd fimull data16 add pushq ud2 add mov cwtl rex.XB (bad) fdivrs jae fs movabs pop mov insl add out rex.WRX adc xor movabs jnp xchg (bad) cld int3 insb sub movabs jo pop cltd rex.WR mov xchg retq lahf sub mov push mov mov rex.WR imul sti sbb (bad) rex.WXB out callq pushq and rex.W rex.RB popfq mov outsl retq (bad) rex.WR rclb movabs rex.XB rex.WR imulb jrcxz and push fild retq or (bad) push mov out add sub shlb es mov (bad) (bad) (bad) and nop adc jno out jns jb loopne cmp pushq insb rex.WR jbe cmp jge add scas imul add (bad) rclb retq and rex.WR rex.XB (bad) (bad) rex.B stos insb sbb jp sub cltd xor (bad) jg mov pushq push sub sub xchg xor faddl pushfq nop push mov xchg mov add and rex.W popfw callq fdivrs sbb scas repnz movabs xchg test pushfq push rex.R loopne sar add rex.W (bad) xor out enterq cmp (bad) adc sub (bad) xchg or and (bad) jmp rex.WRXB (bad) callq callq sub iret out fisttpll xchg movsb jmp shl fsubrs (bad) repnz and push movabs or loopne (bad) iret sbb adc sub rcrb mov and fiaddl push rex.RXB mov test mov (bad) fisttpll mov out mov xchg rcrb xchg xchg pmaxub fcmovu jno rex.WRB int3 int (bad) adc lret jrcxz rex.WRXB pop and mov cmp add add rex.W callq imul lret test sub push add (bad) (bad) jbe add mov movsb sbb cmpsl jp (bad) lods (bad) outsb pop mov rex.WR (bad) rex.X rex.RXB mov adc iret jae pop fucomip jge (bad) sub cltd rex.WRX mov callq out push lods jnp or ljmp lock push rex.WR cmpsb (bad) enterq add (bad) jg mov cmpl hlt ds movabs out nop flds (bad) rex.WR rex.R movabs lret mov lock icebp rex.WR mov loopne push pop sub orb rex.B leaveq jmp mov adc gs (bad) insb (bad) (bad) mov pop xor decl loope (bad) icebp pop pushfq rex.RB addr32 mov movslq add mov rex mov pop iret push lods or sbb and cmp jrcxz addb (bad) mov mov push pop jnp int3 sub cmpl rex.B rex.RB rex.R rex.RXB xor jmp mov (bad) rex.B (bad) or push add or jno out mov insl (bad) add (bad) mov sbbl and (bad) sbb jnp jns cmc lahf clc repz sbb shl insb imul or scas rex.B movabs lods rex.RB rex.WRX mov sub lahf shrb mov and and xchg movsb mov add xchg adc (bad) (bad) pop mov mov (bad) push mov xchg cmp decl repnz add (bad) mov jg push fnsave jne out lods jno adc roll rex.XB adc jno imul rex.W sub sub cs callq movsb fs decl loop addb cmc rex.WR rex.WRX mov and cli pushq (bad) sbb rex.WRXB rex.WXB loop adc rex.WRXB movabs movsl and pop mov add fidivrl int pop mov imulb (bad) add rex.WRB jle (bad) and and addb fsubp scas imul and fs unpcklps rex.WB movabs push push sub leaveq rcl leaveq cmp mull sbb rex.WR mov mov mov rex.RX mov or in add mull mov add pop data16 rex.WRXB (bad) add (bad) pop xchg sub fsts (bad) (bad) es in shr or rex.WR add lahf je (bad) (bad) lock xor cltd mov pop pop xor sub jo rex.RXB cmp rex.X rex.XB xor rex.RX or or xor or cwtl xlat (bad) fwait xor pushfq (bad) push add rex.X xor rex.B rex.X xchg fbld sub sub jp mov (bad) mov adc and (bad) mov or jo rex.RXB lock lock loopne (bad) addr32 stos mov (bad) or fsubl sub loope rex.XB mov push pop mov movabs fidivr movabs roll sub outsb (bad) or ja add (bad) cmp rex.XB and sub fmuls lods rex.WX cmpsb cmp in mov jrcxz (bad) mov hlt movsb sahf ror jns push mov test rex.X pop cmp sub retq rex.WR add imul (bad) rcrl jno es and jo cli out and (bad) js xchg rex.W clc (bad) xchg movabs lods cwtl sub mov fiaddl add mov and shrl fiaddl je lods test jmp add push (bad) xchg scas rex.WR rex.X data16 movsb fisubr (bad) loope (bad) loope stc (bad) fsts scas rex.RB (bad) popfq cwtl clc add outsl cwtl jge rex.WXB cmp rex.RX xor (bad) jo pushq jns cs rex pop rex.WRXB pop xor rex.R repz outsb and jrcxz (bad) repnz (bad) test rex.B rex.WR sub std movabs sub and xor mov rex.RXB addr32 ss and pop (bad) cmc sbb mov popfq xor rex.RX movsl rex.RXB xchg rex.RXB jle callq pop rex.WR cwtl test rex.WRB rex.WRX fisttpl sub mull retq rorb push sbb fwait push jmpq jno sbb cmp loopne xlat add cmp rex.RX cwtl rex.B out mov (bad) and mov and xchg mov roll insl rex.RX sahf rex.WR (bad) rorq rep test jmp rex.XB (bad) (bad) (bad) push jnp addr32 mov fcomip jne nop rex.WXB pop mov imul mov or hlt enterq xchg xor stos pop fnsave mov test rex.RXB repnz mov xor cltd rex.R rex.RXB idivl adc sbb outsl cmp sub gs movslq fxch push or (bad) cmpsb xchg pop jg (bad) add add loope outsb callq xor repz ds xorl lret lods mov (bad) mov loop iret and rex.R rex.WR out es xchg jo rex.R xor retq fimull rex.WRXB rex.WRX (bad) cld mov (bad) (bad) retq (bad) cld push sbb (bad) pop nop fisttpl out mov xchg fisttpl mov mov int xchg rex.X (bad) (bad) cmp leaveq rex.X and (bad) pushq mov (bad) outsl add push iret (bad) out (bad) pop push retq loope movabs push enterq pushq rex.WR rex.RB addb in (bad) add (bad) fsubrs fisubl rex.WRB sbb rex.WR mov rex.W mov jbe or clc (bad) rcll xchg jmp (bad) rex.WXB cmp ja cli rex.WR (bad) cs or rex.WRXB jbe (bad) movsl push cmp pushq (bad) cwtl scas rex.RB mov test (bad) pop and rex.W mov jrcxz es gs xor rex.WB rex.RB add enterq lea mov push cmpsl (bad) xor rex.WRXB lahf mov roll mov out jmpq jbe (bad) sub rex.RB xor (bad) jns (bad) movabs push add movsb sub stos and or inc iret (bad) shrb mov cmc fdivl pop add push xlat sub ss rex.WR jl cmp xchg xor sbb add cmp jno and mov add push mov imul lea insb (bad) nop pop and iret rclb insb sub pop and (bad) jne (bad) jle (bad) xchg cmp iret pushfq sub lea adc ds fwait or jl or jb mov roll sub mov nop and lea jmp rol add mov jo sub cmp rex.RX fadds mov out stos lods pop mov lret add push clc fisubl cmp sbb rex.RXB xor movslq loopne retq or and cmp data16 scas fbld jmp sbb pop mov cmpsl clc jg xor jg cmp mov movslq (bad) sbb outsl xor xlat fucomip addr32 je out jp rex.RB adc add (bad) sub ss (bad) (bad) fbld push pop (bad) fwait xchg movabs lret (bad) jrcxz rex.W sbb or nop test jmp sahf (bad) add and (bad) out xchg fild or enterq (bad) (bad) pushfq pop mov fs fcompl hlt and cmp mov jge (bad) xchg sbbb push xchg xchg add sahf xor pop loop (bad) icebp xchg cmp rex.RX test (bad) jne pop (bad) loop add mov xor popq and pushq repz movabs rex.WRX in mov (bad) shll xlat rolb (bad) scas mov imul rcl add and push lods nop (bad) enterq rex.WRB or lret pop jmp jmp sbb (bad) add movabs enterq rex.R stos pushq mov (bad) and std (bad) movsl xor adc out adc movabs in jg icebp sbb loopne add lret loope cmp (bad) (bad) movsl adc rex.WR out fsts pop test (bad) movabs ja iret xchg rex.RB lret out mov adc sbb jp xchg lcall adc fisubrl mov fadd lock mov or rex.RXB clc xchg (bad) test imul rex.WRXB jge loop add and cmp xchg fidivl retq add push testl int3 pop (bad) jp (bad) mov xchg test sahf add rex.X xchg add and int3 out rex.RXB movabs rex.WB sbb jbe mov sub shrb rex.WXB rex.WRXB fmull and out and cli insb fsubrp or sbb mov orl sbb cwtl (bad) jmp xor cmp scas movsb sub (bad) add test or jrcxz imul movabs jp push jge (bad) lock jbe out rex.RXB clc sub push xchg push mov pop xor adc sbb pushfq sahf mov rex.WX rex.W fs cmc enterq fisub pop rex.RB rex.RXB out loopne lahf mov (bad) rex.RXB scas (bad) out mov rex.B cmpsb movabs retq jne (bad) out mov sub push je cld add and adc sahf cwtl retq popfq stc enterq es sub mov mov sbb in popfq adc (bad) adc clc rex sub jb add cmpsl cmp mov add rex.RB test push icebp (bad) movslq lea loope addr32 xor leaveq repz jnp fldcw pop pushq pop add rex.WXB cli mov lahf adc popfq (bad) icebp (bad) sbb (bad) loop in (bad) testl rex.RB rex.X and movabs callq imul punpckhbw in mov (bad) (bad) mov int movabs lock pop lea rex.WR (bad) cwtl movslq jge movabs imul mov lahf mov cmp sbb movabs rex.RXB xchg (bad) cmp rcrb lea test fldenv out xor fdivrp sbb xlat sub int (bad) addr32 outsb sub adc jmpq xchg xchg sub rex.RB lahf rex.XB (bad) rex.RXB repnz pop pop cmp jle cld xchg enterq pop xchg loopne mov mov xlat stos cmp retq push je mov rolb jb pop xor rex.B pop jns rex.R jg rex.RX jmp cmpsb rcrb rol mov movabs jl rex.W (bad) add (bad) pop adc rex.WRXB rex std add out (bad) xchg rex.WR in outsl stos sub and jo (bad) pop lret rex.WXB (bad) or sub adc cmpsb rex.WR divl push repnz out or (bad) enterq sahf xchg cmp or out sbb or xor stos ficompl or addr32 sti mul addr32 (bad) fwait icebp stos add (bad) out jle sub and (bad) push sub ficoml lods and rex.WXB pushq xor (bad) (bad) rex.XB cmp mov rex.XB rex.XB push pushq add (bad) shlb pop mov push retq lret insb xchg out jrcxz popfq iret mov sub mov cmp rex.RB mov int cmpsl addr32 repnz rex.B xorl (bad) js lret xchg add and pop rcl lock (bad) insl (bad) mov pop rex.RXB cmp or (bad) pop pop rex.RB rex.WR rex ss push pushq (bad) adc rex.R rex.WR addr32 mov rex.WXB mov je rex.WB sub callq (bad) rex.WX (bad) (bad) xor (bad) mov xor mov xor fimull rex.RB and in mov rex.X cld (bad) push jno fisttp or mov rolb rorb jl and scas jne cli mov add add xlat pop (bad) je push and (bad) pop xchg xor fadds rex.WRB stos rex.W rex.WRX rex.RX rex.RXB sahf xor push adc sbb mov andb in sbb fs div rex.WX callq xor mull test incb movb mov lods or adc (bad) jnp rex.W rex.WR out (bad) rex.W xor fidivr rex.WRX addr32 (bad) imul mov loope (bad) cli (bad) rex.WR gs and stos pop xor fmuls (bad) push clc and cld (bad) imul sahf (bad) jne cmpsl xchg pushq add (bad) jnp in rex.B rex.X cmp sub mov (bad) in and add pushq rex.WB sbbl enterq ss pop fcoml cmpsb jo or out loope push out jmp out addb rex.RXB (bad) sub mov xlat and test (bad) retq mov jrcxz repz adc xchg (bad) or pop jbe movabs cltd ja sbb mov mov pop fs scas add (bad) push movsb rex.RX (bad) enterq mov out cwtl adc push sub adc xor xchg cmp or jmp js mov movl mov pushq push add rorl (bad) mov out push sarb mov jg nop cmp sbbb sti mov rex.X mov lods and sbb xchg mov and test (bad) rex.W rex.RXB leaveq imulb xchg int3 in mov movabs or jno sbb lret test in adc (bad) jmp imul movabs rex.WR out pushfq fmuls fisubrl or pushq jbe repz xor jge (bad) mov rex es iret (bad) xchg mov movabs adc rol (bad) mov mov xchg adc cmp add movd xor (bad) stos lret xchg rex.B pop fnstsw mull jmp roll clc pop (bad) enterq rex.RB rex.WR loope rex.RB xor (bad) loopne (bad) sub xor rex.WR shr (bad) mulb cmc enterq jrcxz ds movsl subl flds mull sbb and fmuls (bad) adc mov jb repnz cmp ror rex and (bad) jne jns (bad) cmp cmp rolb mull pop loopne rex.WRXB mov movabs fsubl test subl es gs addr32 shl pop pop adc and jmp jp sub fs (bad) in add rex (bad) rex.XB push cmp imul cmc test cmp imul jmp jmpq mov and pushfq xchg jae (bad) callq jmp cmp lock adc jle adc enterq push (bad) cli jrcxz lahf sahf and rex.W mov lahf retw imull push rex.RX fadds xor sti sub mov (bad) jno flds sbb sub rex.RB add cwtl sub callq mov or xlat retq (bad) (bad) cmp xchg jmp (bad) rex.WX xor or push in sbb hlt mov lahf add lea adc adc fiaddl mov push mov or (bad) add es xchg and sti sbb clc rex fwait and jne in (bad) xorb cmp jg sbb (bad) faddl enterq cmp rex.X sub xchg sub add mov jmp (bad) lods (bad) pop xchg (bad) enterq mov push jns (bad) mov (bad) jae rex.WR mov flds cs lods cmp nop rex cmp test fisubl adc push rolb (bad) (bad) jmp sbb jbe test (bad) movabs sub jbe sub jne in xor sbb (bad) xor lods adc jno dec cmp callq mov or (bad) retq (bad) add jmp add (bad) lods mov rex.XB gs xchg repz movabs out mov imul data16 sub cmpsl movsb push push adc jle lods sub sbb cmp fidivr jno fsub (bad) sub std lods rex.WRXB sub lea fwait cmp loopne ss (bad) (bad) mov iret xor jg (bad) sahf or mov add addr32 or cmpsb rex.XB std imul and incb rex.WRXB ss adc int stos xlat and int mov fnsave xchg rex.WRB cltd retq in jmp and xor mov mov (bad) sbb or lahf add int enterq sub mov retq and jnp out rex.WR (bad) movabs add jrcxz out rex imul sbb cmp retq idivl pop imul enterq sbb xchg and and scas add xor (bad) (bad) xchg or rex.XB vmovupd mov xor rcr lahf notl jle pop sub mov iret (bad) pop (bad) loopne rex.B ss xor mov clc sub or mov fistl mov push mov xchg and push (bad) rex.WXB rex.WXB imul in rcll or (bad) sub cmp jg adc (bad) gs xchg cmp (bad) imul add lods loopne adc movabs mov pop outsl pushfq and mov pop (bad) mov imul movabs cmc out mov adc cmp mov sbb add rex.WRX and sub retq (bad) push movabs jno loop retq rex.WR (bad) (bad) stos (bad) movslq mul mov (bad) fmul jo mov lahf push (bad) movabs fwait adc rex.W imul es sub sbb cmp fldcw pop push push xor (bad) outsl and mov pushfq cmp (bad) cld rex.WRB fisubl (bad) sbb pop faddl xor rex.RB push adc callq test test jl icebp sbb add cwtl shl sub rex.WR mov movabs pop movsb pop rex.WX movabs icebp sub add movabs rex.R sub popfq jrcxz movabs (bad) insb addr32 sbb fiaddl (bad) out out mov lret (bad) xor adc outsb push rex.R cmc movabs (bad) jp and mov xchg jmp (bad) push xchg sbb callq mov out xchg jmpq jle rex.W rex.W and jge add (bad) (bad) nop test xchg cmpsl movabs pop jge jns jb adc fimull fdivl xchg jle (bad) insb sbbl (bad) add sub and mov out sbb rex.WR adc adc std (bad) loop mov add cld pop cvttps2pi (bad) xchg xor sub adc fstps movsb rex.B (bad) sub rex rex.R enterq pop push js andl fistpl lods xchg jrcxz scas push jl rex.WR rex.XB ss jno mov fdivrs rex.XB out js push and je adc (bad) (bad) cmpsl fs rorl cmp mov xor imul lret jbe adc sub and leaveq cmp (bad) rex.RXB hlt pushfq int3 retq gs rex.WRX (bad) retq in sahf mov xor jo (bad) incl (bad) rex.X xchg rol imul pop or (bad) jbe in or movsb mov (bad) insb and and out movabs out push cs (bad) pushq rex.W rex.RXB (bad) mull jrcxz rex.RXB cltd movabs fs sub cmp pop stc cmp callq (bad) jmpq (bad) adc jmp (bad) nop or cmp (bad) (bad) fidivl push (bad) or sub retq jl jae lret rex.RB (bad) mov (bad) (bad) sub movabs fdivr (bad) vmovd sti (bad) sub push imul rex.WRXB and outsl imul out imul test (bad) mov clc rorl pop leaveq (bad) mov sbb (bad) fldl rex.RB mov push add push loop test subl rcr (bad) nop imul lock xchg movsl rex.RXB movsl movslq (bad) sbb (bad) rex.RX or imul jp jp clc sahf (bad) fisttpll sti scas out mov imul or rex lret lods sub out sub je fs push cmp int and pop pop pop mov std rex.RX rex.WR pushfq add mov js (bad) xor test add lahf (bad) (bad) pushq callq callq jbe adc (bad) int add sbbb (bad) rex.X movsb xor cmp xor (bad) std sub push push loope rex.X (bad) add roll mov adc insl rex retq iret (bad) lods pop test (bad) outsb ds cld pushfq push add (bad) add xor (bad) rex.RXB movabs mov xchg fcmovnb ja rex.WX or add (bad) loop pop sbb pop cwtl fistpll shr jns mov sbb lods int3 loope (bad) fimull rex.WR cmp hlt rex.RX sub mov cmp mov rex.WRXB and mull test fimull or adc cs mov mov movb faddl je insl jnp jae fucomp add icebp jge xor in in cmp (bad) push rex.WXB cmp cmpsb leaveq xor cmp pop sub mov adc in xor (bad) mov add jmp (bad) xor sbb imul pushq fldl or cmp or rex.WX rex.WRX rex.WR xchg popfq xchg pop jnp repnz pop and addr32 jmpq add in sti rcrb in jg or sbb rclb or or jle cmp (bad) push (bad) (bad) cmc add jb (bad) (bad) sub enterq repz movsl vmovd mov fiadd mov loop rcrl add rex.X mov pushfq pushfq cmp or or jp mov mov fnsave rex.WR rex.W insb (bad) es (bad) rex.R rex.WXB xchg and adc add pop or movsb clc rex.WRX push addl rex.RXB es sbb out out sub (bad) in rex.B push rorl push mov mov xchg popfq movabs (bad) loop jp fs sbb stc in int xchg (bad) push or rcr xchg rex.RB (bad) jnp rex.RXB add stc loopne pop (bad) out test cmp push iret insl mov xchg mov jnp imul pop and rex.WX (bad) popfq rex.XB rex sarq jnp outsl and cmpsb or movabs (bad) sbbl out (bad) or movabs add lret xor cmp cmp sub addr32 imul test xor decl xor mov rex.WRB jp callq mov cmpsb ror repz lahf icebp push je jbe rex.R addr32 pop push xor (bad) rex.WRXB fs stos cmp rex.RX cmpsl sbbl pushq or ja testb fiadd cmpsb rex sbb (bad) movabs shll (bad) enterq movsl scas data16 in (bad) in loop out rex.B gs xor outsb mov rex.RXB xor pop outsl rcrb vcvttsd2si jp test rex.RXB or sbb and sbb (bad) rex.XB (bad) add movslq repz sbb in loope (bad) out and out fptan sub je sti sub notb xchg mov mov test xchg js retq adc repz decl (bad) sub fsubs scas (bad) cld jb in mov push (bad) rex rex.RB insl mov mov loopne pop lret push cmp (bad) cmp or (bad) (bad) mov psrlw sub xchg sbb shrb rex.XB es xor adc jrcxz and add pushq jp in mov (bad) fsts test sbb rex.WXB cmpsl in or add (bad) or and out lret sbb adc movabs adc pushq add pushq std fidivl movabs mov lods mov mov icebp idiv retw rex.X fisubl add imul add rex.W rex.RXB rex.RXB lock mov lods loopne clc sub fwait (bad) rex.RX and imul fisubr cmp in (bad) sbb xchg pop sahf xchg stos sub add adc and (bad) xchg or lret jrcxz fdivrp adc push mov out rol mov mov mov stos mov jns push rex.WX clc xor sbb (bad) lret pop (bad) (bad) or nop negl push (bad) andb sti sbb adc pushq (bad) data16 leaveq push retq data16 pop push xchg or rex.WR adc xchg (bad) retq rex.RB mov popfq mov jle or (bad) stc jae (bad) scas mov (bad) mov rex.R mov roll mov in sub push in rex.WR fcmovb rex.WRXB pop rex.RXB (bad) sub sub jmp stos in jle fld movsb sbb imul and mov fsubrs mov scas (bad) rex xor (bad) rex.WR cli in jns retq test callq insl push jge and rex.XB (bad) and cmp rex.X out cs xor xor pop movslq rex.WRXB mov (bad) pop fcoml out addr32 cmc jrcxz sub (bad) pop fimul out xchg (bad) pop in lea push (bad) rex.WRXB retq rex.WR (bad) imul push rex.X rolb mov int3 push movsl add (bad) outsw sbb (bad) pushq sbb sbb (bad) (bad) rex.WRB push add and (bad) push (bad) dec mov mov rex.WRB gs xor movsl sti push pop out adc rex.WX shr xchg (bad) sub (bad) xor repz and (bad) es ja cmp adc adc pop fidivl push (bad) sbb and xlat sub pushq (bad) imul jo sbb or rex.X rex.B stos rex.WR mov sahf xchg or mov mov xor rex.WRX and xor and lock rcrq and rcrb rex.W rex.W rex.RXB repz (bad) rex.WX retq xchg cmp (bad) push fsubs or xor fbstp xchg add cmp imul add (bad) iret push sbb in and mov idivb add rex.X rex.WRXB mov mulb (bad) movabs (bad) fidivl or mov (bad) cmp jno cmpsl xchg sub enterq mov or cltd sahf (bad) movslq pop out or lods out cli (bad) cmp sub mov frstor cs out lret cmp push or add scas test and rex.XB insl pop rex.X stos out adc adc xor sbb clc sub xor in cmp or je sub or add cmp sub test (bad) lret adc frstor sbb movsl rex mov adc rex.RXB cmp clc scas rex.B es jo jne sarl or (bad) mov sub xlat mov callq invd pop cmp or sbb sub jbe es (bad) or (bad) (bad) or pop push xor push (bad) pop imul cld lret stos fnstsw sbb sub sub fsubs and rcrb or (bad) or sbb add lahf mov outsl fcoml xor (bad) jo stos cmp enterq add clc or (bad) movabs jae leaveq (bad) loope (bad) addl cli (bad) jg xchg ror out fdivs cmp or add sub shrb and je fisttp rex.WR cli sub addl mov adc jmp (bad) repz (bad) cwtl mov movabs rex.W mov rex.RXB push xchg sub pushq and lods pushq (bad) jmpq sbb mov lea and adc vhaddpd mov je setnp push imulb lea (bad) mov rex.XB cwtl and pop xor fdivp lret add jbe sbb retq int3 rex out mov sub rex.XB (bad) jl cmp nop callq sahf rex.B pop loope jl loopne rex and cmc callq test or add cld outsl rex.WR cmp cmp pushq (bad) rex.W rex.R (bad) xchg retq or rex.XB fs adc cmp outsb (bad) xor xchg movl fwait (bad) out xchg iret jbe test icebp callq callq push and mov pop pop rex.WR (bad) mov mov xor (bad) mov mov lahf rex.B insb (bad) sub movabs mov fs movabs fstpl (bad) sub ss and lods rex.W pushq je sub rex.RXB (bad) fucomip sbb je rex.RB rex.WR rex.W rex sbb lods repz insb (bad) (bad) mov movabs rex.RX adc std xlat mov out out movslq adc rex.RX rex.WR rex.RB mov cmpsl (bad) jg clc rex.X adcl xor out movabs mov jrcxz outsb rex.R jge lahf cwtl cmp xor loope shr rex.R mov add popfq jno jne (bad) adcl mov and (bad) rex add movabs rex.WR (bad) movabs mov rex.R rex.WRX add rex.RB lock mov mov leaveq mov add xchg xchg adc xchg rex.RXB rex.RB (bad) and fiaddl pop adc fistpl mov sbb mov cmp jmp fiaddl rex.RXB sbb cmpsl rex.RB cld or lret jbe roll sub mov mov sub loopne (bad) loop and (bad) movabs movslq jnp sarb jbe rex.W movabs xchg dec movsb ja add mov (bad) imull (bad) mov cmp adc lea imul cs (bad) jrcxz popfq xchg fsubs rex.B add pop (bad) xor lods and rex.RB shlb mov rex.WRXB adc mov jno hlt mov add rex.WRXB fidivr or xchg adc sbb mov rex.WRX (bad) cli loope adc mov mov xlat pop lea and loope in and jrcxz add push (bad) mov rex.W test sub (bad) movabs add rex.R test frstor (bad) or (bad) xchg outsb pushfq push incb pop rex.RXB jge xor or pushq loope icebp mov loopne rex.RXB rex.WXB (bad) and sti or cmp (bad) out push es mov sub xor rex.R jl adc int iret andl (bad) xor enterq sub sub adc and sub (bad) hlt mov leaveq iret rcrl stc xor cmp in xchg lods sub orl jl rex.W rex and push add pop movsb (bad) retq movabs fnstenv sbb movslq std sub adcl xchg repz retq (bad) (bad) iret push add (bad) jo (bad) movabs in scas mov mov rex.R adc pop std jg or (bad) int inc rex.WRXB sbb mov add int3 jmpq sbb rex.WRXB hlt mov (bad) out rcrb (bad) movslq pop (bad) imul js rol xchg ss and movabs (bad) cwtl or jae push mov jo jae rex.RB xor jne int3 xor xchg sub movslq test push xchg sub jrcxz push (bad) shlb or out rex.WRB rex.WX shrb fisubl jns out rex.WR stos fs or loope adc jne rex.XB (bad) (bad) imul rex.WRX cmp (bad) sub rex.WX push sub mov (bad) pop or movabs rex.WRXB xchg mov adc lret rex.WRXB jrcxz in fs imul fs mov sub (bad) mov xlat rex.RXB scas mov jp (bad) ficompl int3 outsl sub cmc movabs cmp outsb sbbl jge adc imul and imul mov or push popfq movabs (bad) cld imul sub enterq sub mov test mov lock mov (bad) mov add mov xchg fildl mov imul mov (bad) in xor out int push push cmp sbb push rex.WR iret adc out lea leaveq (bad) jbe retq (bad) jns fidivr sub sub roll out rcr xlat rex.WR movabs decl mov ficompl andl (bad) test imul negl fldl mov mov jo es sub jrcxz callq fs push repz sahf rex.WR jrcxz and jmpq add mov loope sbb and decb xchg jmp enterq or jp and rorb xor pushfq enterq cmpsl (bad) adc xchg mov movslq rcrb pushq testl fwait out add fwait push ja or cmp pop mul retq sahf (bad) loope fdiv sbb push cld (bad) ds pop lock retq mov and (bad) (bad) movabs (bad) mov sbb lahf movsl jno nop and mov rex.WXB lods add outsb or nop fsubs xlat adc rex.RB sbb in pop cmp movabs mov lock jmp fsubrs loopne fs xor rex.RB rex.W mov rex.R and rex.WRB mov adc hlt (bad) fdivs xor (bad) in (bad) rex.RX rex.RB rex.RB stc adc ds rex.WRB rex.WR out cmp rclb xchg mov out (bad) push push gs jl (bad) push shl jmp (bad) cmpsl addr32 popfq (bad) push gs push adc cmp movsl jge (bad) jl int3 sahf in rex.WXB (bad) adc jbe adcl xchg pop fildl shll sbb mov sbb xor mov push rex.RX retq sahf jmp je cmp retq push sub movsb movsb (bad) rex.WXB jmpq test or jne std xchg (bad) adc pop (bad) movabs rex.WR rex.R rex.WRB rex.XB or (bad) mov (bad) push rex.X rex.B movabs add adc je and in xchg jno jno jns imul or rex.WRB psubq ss xchg sbb sti lods in icebp (bad) lret cltd mov pop sub rex.WR rex.RX pushq jge movsb mov ds mov pushq (bad) cmpsb and sub sub cmp cltd enterq shlb stos addr32 test rex.WR mov pop mov loope sub jrcxz xor (bad) movsl (bad) (bad) pop or (bad) and shl mov stos ss rex.X rex.RX push (bad) addb mov pop rex.W push rex.X lret (bad) cmp adc adc sub xchg xor imulb jmp push cmp hlt mov or pushq out or movsb cmp rex.W (bad) (bad) fstl movslq repz fiadd mov adc mov sub fiadd mov rex.B and repnz lods add sbbl (bad) ds rex.RB and mov rex.WRXB fsubrl callq sub add movslq test in gs (bad) icebp movabs enterq push or out outsl mov sarl rex.WRXB sub xchg rex.RXB add adc imul rex.XB (bad) mov sbb stos (bad) jnp ds imul mov rex.WRXB pop sbb jnp cs jnp xchg xchg (bad) ja fcomps iret cmp imull sub enterq rex.WXB test leaveq out xchg (bad) (bad) and mov loopne (bad) fdivrs mov pop jmpq imul push ja cmpsb in sub ffreep loope out mov sbb loope std pop or xchg movsb or in add pop rex.WRXB push pop pop rex.WB scas (bad) cmp rex.WRX mov rex.B or test (bad) push sub rex.WR jmp mov hlt push rol lret test adc add (bad) or (bad) pop (bad) mov or mov leaveq movabs rex.WRXB mov jmp lahf or or in mov es imul cmpsl sub fadds fsubs (bad) retq add jmp movabs mov out sub movsl mov rcrb jmp jns repnz rex.W add or xor movabs and mov mov fbld rex.X (bad) adc (bad) and pop pop sub sub lock rex.RXB mov callq rex.RB addr32 rex.RX out and (bad) add push outsl mov movsb pop rex.WXB movabs rex.W rex.R std rex.RB (bad) test outsb enterq retq jne shrb jg add and rex.RXB rex.RX rex.XB retq or (bad) rex.WRXB or cmpsl (bad) retq push adc rolb iret xor add or xor cs mov jne std push (bad) mov (bad) cmp (bad) add mov (bad) rex.WR or hlt add scas rex.RX add cmp (bad) stos xor sub or mov cmp mov (bad) (bad) jno xchg mov pop addr32 rex.RB rex.WX (bad) (bad) movabs testl fcoms cmpsl rex.RXB gs (bad) xchg pop cmp (bad) xchg fadds (bad) cmp iret or push stos jmp adc sbb (bad) adc jo xchg fnstenv adc sub (bad) (bad) adc and shrl movslq out mov push pop rex.B and movabs test rcl fimul flds lock cmc sti mov jg cmp nop mov rex.RX rol push adc (bad) adc pushfq (bad) sbb rex.RXB push mov cmpsb lock imul pop (bad) push movsb rex.XB rex.RXB outsl (bad) rex.WRXB fdivr add sub retq push (bad) pushq pop mov xor jns jmp movslq rex.B scas jge lret cld push sub jo (bad) mov (bad) imul nop lret loopnel pushq cld (bad) ja callq sbb rex.RXB testb scas sbb rex.RX push gs xchg mov rex.WRX adc rex.WR xor lret sbbb push cmp xor (bad) mov (bad) (bad) sub or pop shrl jbe test (bad) sahf clc jrcxz (bad) js rex.RB enterq add incl retq rolb shrb nop shlb add out add fisubr loopne rex.RB rex.W xchg jns jns jo rex.RX mov rex.X fldl rolb jl rcrb and rcl pop and push (bad) pop movsl mov push add rex.X shll jno cmpsl and sbb sbb and data16 mov movabs sti sarb (bad) mov fs or cmp sub movabs mov loope push mov cmp pop mov mov sub (bad) imul adc xchg rex.WRX ss rex.WB addr32 rex.WR rex.RXB jmp lock pop add (bad) adc rex.WR sub movabs pop (bad) rex.WR pushq test pop rex.RB rex.WX add cmp fcmovu and retq rex.RX (bad) jg rex.WX xor or cwtl pop out (bad) (bad) push shll data16 leaveq stos pop mov rex.WRX push sbb scas movabs rex.RX rex.RXB mov push pushq add stos mov (bad) sub je scas out rex.WRB or int (bad) jns in sbb rex.WRB cmp test decl rex.RX xor xor loopne retq addr32 fldl out out mov jb rex.WRXB pop mov rex.W repz sbb jbe adc mull jmp push test (bad) cltd or jrcxz (bad) vmovntps fs out adc fdivrs ja push mov rex.R mov stc (bad) mov rex.X pop or insb rex.W rex.RXB mov movsb mov (bad) test cld rex.WRX jnp sub and shrb repz and sub rex.XB jbe rex.WRB cmp addl jne rorw loopne rex.RB xor scas cli (bad) xchg sbb (bad) (bad) int3 fcoml rex.B rex.W mov movabs test jne not mov cwtl dec mov movabs xor jp fildll (bad) (bad) rex.WRX je rex.B jne and (bad) (bad) or insl and leaveq in (bad) and add mov fdivs in mov rex.B rex.X or jb or mov je rex.XB add cld and or cmp (bad) sti mov (bad) cwtl mulb sbb jne add push movabs cwtl rex.WX cmp push addl rex.WRB ss (bad) jmp fidiv insl jno cmp (bad) leaveq cmpsl adc cmpsl rex.RB rex.WX rex.RB sarl jrcxz enterq mov add cmp xchg push jge loop notl pop mov adc adc adcb int3 cmp in mov movl and movabs mulb int test jbe pushq insl divb (bad) jg rex.RXB rorl movslq xlat push or adc (bad) cli mov push movsb mov (bad) (bad) cmc loopne and gs lods fs (bad) pop jae (bad) adc push xor (bad) xchg (bad) sub jge mov cmpsl push mov xor rex.W xor sbb adc rol sub mov loop pop mov mov mov pushq xchg mov add jl rex.RXB (bad) and (bad) jno or mov adc mov rex.WXB add add mov test cmp (bad) jrcxz jns pushq and fld callq mov and jle pop (bad) add xchg (bad) ds bnd lea rorb (bad) jno push out frstor fwait fs cmpsb scas movsb sub sub fwait cmp (bad) js adc cmpsl movabs cmpsl retq in rex.WR repz rex.WR lret insb pushfq movsb mov shrb pop cli xlat mov movabs (bad) icebp xor mov mov xchg sub fs rex.RB mov push callq cmp mov rex.WX mov in xor fldl rex.WRX fist rex.WX mov mov adc mull loop stos add cmp test adc (bad) jno test fmull mov leaveq mov (bad) loope xchg jmp addr32 lret jno fdivrl lahf sub lret movabs mov (bad) adc sti icebp int (bad) add stos fiadd jne retq and jmpq mov movabs adc movabs push (bad) (bad) rex.WR mov nop es (bad) lret mov (bad) data16 cmp cmp rex.RXB int3 idiv (bad) xchg mov push in rex.RX rex.WR movb sub stos mov outsl xor (bad) sub sbb pop (bad) and jae jb cmp cmp push (bad) in movabs ja (bad) enterq mov sbb cmp test or hlt jns xor enterq fbstp sarl jmpq sub (bad) jbe sti movslq sbb loopne rorb stos jae fsts mov adcq loopne rcrb sbb in or adc movabs or data16 movslq (bad) push movsb lea cli data16 add popfq fisubrl mov rex.WRX movabs jrcxz ja rex.WR data16 cltd (bad) movsb (bad) (bad) int3 fadds or cmpsl in rex.B std cltd or jmp sub retq or movabs in movabs rex.WR mov and (bad) and cmpsb lret xchg shll int fs movabs (bad) rex.WR add adc icebp loopne jo sbb rorl jge data16 xor (bad) sbb out jmp (bad) mov (bad) rex.RB pushq or cwtl movabs rex.W sub sbb sub rex.WRB or pop mov jge fwait addr32 jnp divb ss iret movsl movsl cmp out mov retq sbb cli (bad) test push and rex.WR mov mov rex.WX push fisubr rex.R fimull jmp add adc negb (bad) jb (bad) (bad) test xchg cmp and rex.B sub rex.WRX es cmpsb jmpq icebp pop rex.W push lret iret mov cmp jne push pop (bad) out fwait add sarl (bad) es sub je xor (bad) out (bad) pop fucomip pop movslq ds cmp rex.RB std rex.W rex.W rex.B rex.RX rex.B rex.RB and push mov and enterq rex.X pushq sub push pushfq push (bad) lock cmp sahf out rex.RX rex.WRXB cmp test callq movl mov adc leaveq rex.RXB (bad) notl jp ficompl or mov stc add sbb (bad) cld retq movabs and cld cli mov add add (bad) test and xor xchg (bad) movslq dec jle sub (bad) or mov (bad) out (bad) mov (bad) or add (bad) add orb addr32 js imul sub or mov push push mov stos (bad) stos movabs rex.RB (bad) data16 movabs sbb sub addr32 (bad) mov callq lods idivl rex.RX (bad) fbstp rex.R gs pop xchg (bad) rex.X mov in enterq add and test (bad) in jrcxz (bad) sub leaveq leaveq rex.R mov adcl mov and xor add rex mov insl fwait retq xchg ror mov lret cmpsl flds mov rex.RB xchg imul add callq mov sub fmuls stos adc xchg rex.WR mov xor (bad) xchg push lret (bad) xor xchg es mov push xor mov xchg sbb mov push rex.W adc iret in jb and (bad) insl mov loope movsb movslq (bad) and or mov sub mov leaveq fsubr add es rex.WX pop lahf roll imul mov rex.RB stc cmp add (bad) push shrl (bad) out jns,pt movabs data16 or mov rex.WB rex.XB mov iret rex.X add rex.RB (bad) xchg and xor retq jp,pt movsl pushq cmp (bad) and mov fistpll fiaddl data16 test (bad) adc insl mov stos and incb cltd mov push mov in and in sbb xchg fidivrl (bad) cmp rex.RXB or xchg addr32 sub dec (bad) cmp lods cmpsl jnp sub (bad) jmp idivl add fcompl pushfq adc scas adc jrcxz or sbb jnp outsl enterq hlt lret (bad) pop pop (bad) push xchg movsb jb pop rex.WR jno lret (bad) adc sbb push rclb sbb jle scas out adc movsb push pop sbb fcoms movabs lret pop sub retq push fwait sbb mov mov jo sub clc loope and rolb cmpsl mov pop jno fcmovu fstl (bad) and fidivl test fimul in rex.WRXB sbb cmp mov xor and rcr sbb out mov lahf rex push (bad) mov loopne sub push mov mov icebp out adc sbb xor push mov xchg pushq xchg and jno sarb add rex.X clc pop jb (bad) and jo sbb addr32 rex.W cld pushq add retq rex.WX (bad) sbb or sub adc out movslq xor sbb cmp repnz shlb jae cs (bad) std xchg shll add pop pop sbb cwtl sbb mov pop hlt jae,pn xchg cmpsb mov movabs cmp and mov loopne movsl rex.WX rex.B addr32 int3 or out orl mov stc push mov fimull sbb rex.RXB mull rex (bad) cmp movabs rex.WR shrl rex.WRX rex.RX cli std leaveq cmp mov mov add rex.W rex.WR (bad) (bad) mov adc add (bad) and sub rex.W pushfq sub push jmp leaveq and sbb movabs xor outsl jge loopne add cltd xchg sub mulb adc (bad) divl mov and pushfq retq add mov (bad) add xor outsb mov jge (bad) fistpl callq rex.WR rex.WRX lods fldenv outsl (bad) movsl xchg mov sub icebp (bad) loopne push roll rcrb enterq pop add out sub lods push scas lods jae pop rcl xor xlat leaveq rex.RXB rex.WRX or add movabs add and xchg negb mov negb test sbb insb scas xchg (bad) or clc mov mov xor fwait loopne loope rex.RB test loope fnstenv (bad) xor pop adc push es callq xchg mov imul loope callq notb pop sarl rex.W mov scas movabs ficomp mov rex.X sbb xlat sbb rex sbb mov cmp mov pop (bad) rex.WX rex.WRB cs sub (bad) mov pop pop and xor int3 xor push pushq mov test shrl imul movabs (bad) loopne mov xchg xor (bad) (bad) in enterq sarb iret leaveq movsl jbe nop rex.W (bad) pushfq out cld enterq callq jbe fnstenv add mov mov clc nop xchg mov rex.WR rex.WX fwait (bad) (bad) in rex.WRXB ss rex.XB add movabs mov movabs movabs push callq addr32 jb enterq cmp cli rex.RB rex.RB cmp cltd rex.WRB cmp and stc rex.WRXB movabs xchg leaveq sbb jl repz rex.XB shlb add rex.WR add test mov mov (bad) bswap add roll iret test mov jmp lea xchg jbe loop rex.WRB in vaddsubpd mov or rex.WRXB orb sbb (bad) addb (bad) xchg data16 (bad) mov addl add (bad) jge fsubrl rex.R jns (bad) retq testb sub rex.RXB jbe clc sub fadds nop bswap mov pop cld popfq out xor fsubp rex.WRB rex.WR cmc and pushq adc mov lret jns test (bad) lret (bad) jp lods ficoml fisub (bad) pop (bad) or (bad) enterq mov fdivrp sub jns test (bad) adc rex.WRXB test sbb movq adc stos movabs sub pop xor movabs jnp (bad) (bad) cwtl add push add movabs lret ds jne push xchg pop xchg (bad) or fmuls add cmpsl (bad) (bad) xlat rex.W out leaveq adc test scas jmp movabs cwtl rex.XB rex.RXB (bad) movabs fimul (bad) push xchg icebp cs adc push iret jne outsb fs jle pop add (bad) fdivrs pushfq and and (bad) mov (bad) hlt out pop push mov jrcxz idivl adc cmp test xchg rex.RXB (bad) (bad) (bad) out movslq rcrb (bad) sub mov (bad) rex.W jns (bad) cmpsb test push or (bad) popfq adc sbb (bad) (bad) sub push pushq cmp jb (bad) sub mov cmpsl (bad) mov rex.WRXB rex.WXB (bad) rex.WR loope xor sub in in pop out iret imul jno rex.X push rolb rex.WRXB jge loopne in jnp stos data16 (bad) scas sub out rex.RB rex.RXB or stos cmp shll rex.WRB rolb mov mov in pop mov rex.WXB fildll pop iret loopne (bad) xlat or jrcxz cmpsb enterq push sbb fisubl scas loop jmp rex.RX iret xlat loope jnp and adc int fcmovnb (bad) adc rex.B rex.WR xlat fs out cltd sub shrl test rex.RX test push add shrb lods movsb cmp push xor rex.R pop cmpsl lahf loope jns icebp mov test retq jg (bad) mov lods and hlt leaveq pop sarl pop je xor stos lahf lock nop push callq outsb xor lock xor movsl or (bad) retq (bad) shr sbb in outsb jl rclb adc sub and imul cmp stos sahf rex.WX jnp xlat movabs or add es jb fs js or jne test int3 jmp jb insb add cltd shrb jb rolb (bad) addr32 rex add xor xor jrcxz (bad) faddl (bad) rex.WRXB sarl pinsrw data16 and jge ficom pop or lods movl rex.RB cwtl and rex.W sbb rex.WR (bad) add xchg loope rex.XB (bad) lods jg jge (bad) or movabs clc xlat mull sbb mov and loope movabs push popfq mov (bad) sti (bad) xchg out (bad) js,pt jp cmp rex.WRXB sub mov lret xor xchg or stos sub (bad) data16 mov mov adc xchg sub xor cmp mov rex.RXB jle xlat loop sbb outsl cmp (bad) rex.WR cmovp adc rex.WRX add rex.RB es adc imul push rex.RB push cmpsl cwtl lock vrsqrtps addr32 fisubl jrcxz mul outsb xor fmuls and mov jge ffreep fsubs rcll (bad) rcrl (bad) (bad) fs cmp cmp sub add and (bad) faddl movabs addr32 fidivrl pop mov sbb rex.WR mov and (bad) movabs in mov fsubs enterq ds rex.B movabs rex js in and lock push sbb adc js clc movabs (bad) xchg rex.WRB rex ficomp (bad) jb (bad) adc cmp lret rex.R rex.WX mov loop rex.WR fisubl (bad) push (bad) rex.RXB movsl sarb (bad) rex.RX cli mov clc adc push xchg pushfq and cmp rex.R (bad) push (bad) sbb mov jns iret sbb imul fldl xor mov jrcxz jge leaveq rex.WRB xor rex.W mov iret sub xchg rex.RXB pop mov mov lods rex.B rex.WR and (bad) cmp push xor jae push rex.RXB in jae (bad) rex.RB mov cmp (bad) inc (bad) xchg callq andl pop fisubrl (bad) callq rex.W rex.WR orl cmp and (bad) xchg shll (bad) push movabs jrcxz cmpsb cmp mov rex.R pop sbb mov push movsb movslq sub jno movslq sarb adc rex.X movabs xchg xor lret push jp test pop sub or pop movsb pushq xchg pushq pop incl mov adc fidivr sbb cmpsb add rex.R or adc andl (bad) mov rex.WXB addr32 cltd popfq adc jmp rex.WRB pop and sbb movabs add out rex.WR sub out ja mov sbb test jo xchg fistpl xorl invd and lods jo (bad) clc rex.R rex.RXB sahf pop xchg jg movabs idivb pop or (bad) mov and fistpll pop (bad) movabs movslq test rex.WXB sub fisubl push pop sub and movabs fs adc pushq xchg (bad) out mov jl add mov push rex.WB rex.RXB push jp mov test fsubl rex.RX lea xchg add fs mov callq mov (bad) xchg std rex.RXB rex.X pop ficompl loopne push jg xor pushq sarl and (bad) out push cmpsl out jmp fcoml scas adc (bad) (bad) lret cmp and xorl mov add add mov mov sub cmp mov lea pop idiv or (bad) scas rex.WR mov (bad) fcoms pushq sbbl jbe push push pop rex fild (bad) add je jo mov pop pop mov mov pop fmul or imul test mov or pop adc rex.WX adc int jb and push (bad) cmp pop add mov adc data16 or mov sub incl jo fistpl rex.XB movabs imul add loope out rex.WR pop mov (bad) callq lahf sub jnp rex.R rex.W rex.R lret std mov pop mov (bad) rex.R rex.WR mov (bad) adc (bad) jge jrcxz in (bad) enterq and outsb (bad) mov mov mov cli clc pmaxub sahf sub push rex mov push popfq mov xor jp movsl sar test rex.WR orl sbb int in shrl mov test (bad) or jmpq xor and push in push enterq pop notl jbe rex.WRX movsb divb fwait adc rex.WRX (bad) jmp (bad) enterq retq mov rolb divl mov rex.XB enterq rex test adc (bad) fbld jmp pop fcoms pop rex.RB xchg enterq pop adc pop movabs mov cmp sbbb xchg movabs movsb sub or mov mov (bad) in add push pop sub (bad) xor out rex.XB rex.X mov (bad) nop (bad) fcoms (bad) fldt movsb pop (bad) addb rex.X pop add sub adc add rex.B fs sbb pop in imul fucomip or lods pop sbb (bad) lret sub mov xchg fisubr jb cmp or outsb sub in push (bad) sbb decb and pop jne cmp or xor lahf cmp pop fisub cs fldt nop in adc and sub rclb or movabs fisttpll andb faddl rex.B sub fs rex.B xor add push movsl (bad) add jg stos sahf xchg rex.W add testl mov cmp pushq enterq cmp pop and ss shrb add (bad) (bad) (bad) add cmpsb (bad) lods hlt cmp lock scas in pop in (bad) in pop or rex sub or xor rex.RX pop data16 cs push cld jno mov insb int3 mov (bad) fimull mov push callq test data16 addr32 cmp push rex.RXB fcmovu cmpsl cld add stc add out add add rex.XB rex.RXB mov callq (bad) cs (bad) rex.WRX fadds pop (bad) jae cmp fsubrl push or sahf push (bad) (bad) cmc pop mov icebp (bad) loop and add push jbe lret in (bad) jae rex.W rex.RXB mov fdivrl int and xchg and rex.RXB jl andb loopne in movabs clc and rex.WB sub jo and clc clc imul sub out movsb xchg ss mov lea xor jrcxz and out sahf rex.W sub cmpsl jl scas pavgw sub addr32 (bad) enterq (bad) and jb pop sar or (bad) jge sub adc rex.WRX hlt (bad) je lea hlt (bad) mov (bad) jne insl fdivs and iret or (bad) mov pop hlt sbb xor jnp (bad) mov int3 sbb pushq mov sub push xchg sub sbb sbb jp mov push (bad) and jbe (bad) mov (bad) push mul mov (bad) out lret lret adc insl (bad) jnp (bad) mov rex.WRX sub rex.RXB hlt (bad) xchg hlt mov mov mov or leaveq int3 rex.WRXB scas rex.WRXB mov sbb sub cmp stos pop retq mov push sub xor jg add mov in lldt xchg fisttp add sub xlat pop idivl sbb pushq callq pop rex.WRB (bad) (bad) stc mov sub cmp adc cli (bad) in fst (bad) cmp (bad) rex.X mov and (bad) jle sub (bad) mov pop imul pushq (bad) stos or rex.W rex.WX push push rex scas lret xor pop sbb mov xor push in sbb xchg sbb fldt rex.WX pop enterq add mov jrcxz sarl jg sbb addl repz cmc jmp movabs icebp lahf xchg (bad) imul (bad) and imul sbb callq adc cmpsl cli (bad) (bad) pop pop mov fs fsubs outsl (bad) mov cmp (bad) cs and outsb pop xchg es cmp mov rex.WR (bad) mov mov pop outsl push rcrl rex.WB jg fucomip or pop rol add add mov xchg hlt (bad) mov sub (bad) rex.WXB test movslq ja rex.WRB (bad) mulb rol mov pop (bad) pushq mov rolb cli test sbb jmp mov mov and scas icebp sbb out clc sub cmpsl or prefetch or rex.RX scas (bad) xor xor out jnp rex.RB or stos jmp rorb (bad) (bad) incl sarl (bad) test sbb xchg xchg bnd rex cs cmp (bad) test or dec rex.WR push (bad) xor rex.WR mov jle (bad) pop jno loopne (bad) repz (bad) push (bad) xchg cmc mov pop test or rex.RB rex.X xchg jnp cmp adc repnz (bad) callq (bad) loope cmp lods in (bad) (bad) jae mov add ja jle xor movabs or out rex.X mov rolb adc pop mov pop stos imul adc adc (bad) movsb rex.RB rex.XB data16 (bad) sbb popfq rex.WRXB jno negb add cltd frstor sub push cmc movabs cmp mov and js mov sbb sbb vpsadbw rex.R sub jmp xchg mov fist mov mov xor xlat mov mov loop fs pop out xchg rolb push push sbb (bad) mov push rex.WR cld mov fsubr sbb shlb (bad) sub sbb cmpsl xor rex.X mov (bad) xchg sub (bad) jmpq or fistpll mov push rex.WX pop (bad) or rex.X rex.XB sti (bad) (bad) movsb rex.WRB (bad) pop stc (bad) add sub fs (bad) add push mov push and shrb pop xor sub jns out (bad) jb (bad) pop stos jge js outsb rorb xor push and sub test rex.XB lock test add retq test and lods mov sub sbb and add scas cmp push jnp (bad) pop movsb add or sub js fwait add (bad) add (bad) sbb sub or jrcxz rex.B ss or mov stc es sub outsl (bad) (bad) sub and fs callq jl pushq clc (bad) cli rcrl int3 pushfq pop push mov add cli jle jo clc insb stos and pushq fsubrl mov rex.WRXB out movabs fiadd out callq (bad) adc or add (bad) or cmp or cmpsl cmp (bad) loopne (bad) movabs pop adc fisub (bad) fst lea mov pop xchg rex.XB mov xchg mov sub or or jl rex.R adc mov sbb add and sub repz mov orl dec adc rex.RX rex.XB outsl lcall add cmpsl leaveq sub jg orb rex.WRXB fs pushq lahf fsubrl (bad) mov jmp xchg push mov out mov mov jmp and pushq subl (bad) pushfq or lock mov psubusb jg fisubr sbb sub sbb add or cmpsb pop mov (bad) rex.XB (bad) xchg rex.X xlat movsb rex.XB cmp fsincos cmp cmp mov test movsb (bad) fisttpl mov fnsave sub je int3 mov paddq adc movsl sub sub (bad) retq adc rex.RXB rex.WXB sub movabs rex.WR cmp (bad) mov outsb xchg add movabs movsb mov std repz repz rorb pop xorl test sbb jp rex.WB xchg sub xchg (bad) push movabs xlat lahf adc xor add pop pushfq lahf push (bad) fmull pop (bad) mov callq repz xchg pop rex.WRXB push cmp clc movabs cmp outsb fidiv movabs push test lret enterq adc popq (bad) sub (bad) fsubs test movabs rex.X xchg (bad) add mov jle negl push mov (bad) cwtl int rex.WR pop and and push repnz pop (bad) (bad) add add xor in fildl movabs rex.WX mov add add and sbb rclb and sbb (bad) (bad) shlb movslq mov lea adc (bad) (bad) add mov sub scas in pop sub mov and sbb and pushfq sub loop (bad) imul sub cmp lret sbb (bad) rex.WRX movlps sub mov cmp push rex push rex.X (bad) movsb mov cmp rex.WX xchg add mov mov pushfq (bad) and data16 (bad) (bad) mov rclb leaveq mov jnp movabs (bad) push leaveq (bad) cmp (bad) pop mov adc cmp lock adc rex.WR or rex.WR rex.RX mov sub (bad) mov mov retq and loope push (bad) rcrb ds cmp cltd (bad) (bad) mov push movabs orb jmp cmc pop repnz vcvttss2si xchg movabs test pop (bad) clc or cwtl out mov addr32 imul xchg mov add (bad) rex.R jb int3 ds stc cmpsl fistpl (bad) and sti js mov cmpsl rex.XB repz rcrb (bad) movsb rcr rex.B rex.WRX mov push push repz add in lahf sub or (bad) or fwait adc sub (bad) push sbb sti fiaddl stc cmpsb mov rex.XB rex.WR fsubrl sub mov faddl (bad) add jle xor pushq xor add movabs cmp adc pushq (bad) jmpq pop fistl fistpll movabs xchg loope cmp mov xchg lret jmp cs push mov jbe xchg test (bad) xchg out xchg rex pop fcomps test or scas and mov sbb and ror jrcxz rex.WRB rex.RXB mov push sub cmp leaveq add insl mov add add ds (bad) sub or mov xchg rex.W sar loope cmp rex.RX pop jbe sub (bad) (bad) rcr or pop leaveq je add pushq rex.RX lret rex.WR mov mov and or jns rex.WB push push push cmp push jb movabs adc sub fcmovu mov jo loop rex.WRXB icebp stos xchg cmp fsts jle fwait in cwtl lahf leaveq cmpsl pop nop xchg out cli movabs pushfq jo lahf rex.WB cmp callq nop (bad) and retq loopne (bad) xor fcompl (bad) mov (bad) (bad) rex mov adc loop out rex.WB rex xor retq rcrb (bad) rex.RB clc rex.W (bad) sub sbb and out mov js (bad) movabs jb xchg pop rex.WXB fs fwait mov push jl pushq in fbstp xor cli and sbb xchg rex.XB lods pushq push outsl lods (bad) imul jmp mul movsl jno and mov out imul and mov pushq fcoml jne loop imul push (bad) jp adc icebp loopne clc lods xor stos mov sbb adc sbb fidivr enterq sub iret mov xor pop or (bad) (bad) imull fnop (bad) (bad) mov pop lea movabs pushq pop fist rex.W movabs cmp push mov retq in add stos rcrb out pop or fidivrl mov (bad) rex.WR xchg rex.B retq imul incb or subl push addr32 (bad) je adc fisub enterq push lock mov (bad) out jmpq insb and rex.RXB int3 pushq test mov add mov sti test push pop mov mov (bad) xchg sub pop (bad) (bad) js shr movsl clc cmp xchg in pop rex.WX inc rex.WR int3 (bad) loopne (bad) xchg rex out xor rex.WR rex.WR sbb add lock sbb push stos mov push cmpsb rex.WR mov push shr mull je (bad) pop rex.WRXB pop push rex.XB jge test and or movabs mov movslq xor pop and fstp (bad) xlat fs shr jmpq test sub and movabs sti rex lods rex.RXB and mov leaveq rex.RX sub push jne (bad) sbb shlb xchg cmpsl (bad) out rex.RX clc jp movsb push rex.RB movabs adc rex.WRB add adc (bad) pop (bad) rex.RX test mov sbb lahf rex.WB addr32 cmp xor mov std sub pop push loopne sbb xor or pop lods or imul fldt sarb out cmpsb pop sub lods push repnz and popfq notl out fldenv sub outsb jae sub pop jge cmp fistp faddl sti jmp pop wrmsr rex.WR in shr lcall rex test mov xchg xchg mov lret (bad) rex.WRB rex.WR pop xchg xchg mov sbb (bad) (bad) or and or out add rex.WR (bad) (bad) (bad) or lret lret test (bad) add (bad) insl xchg (bad) mov rex.RB test add mov pop rol (bad) lods rex.RXB bndstx pop (bad) pop movabs movl (bad) and adc pop test and test jnp add scas lret movabs ds int push in mov cwtl pop nop push rex sub push sbb test sbb and add test jb mov or cmp rclb add mov lea movabs jl cmp add leaveq and iret ss hlt loope and insb enterq jae sbb test adc movabs subb addr32 jbe imul pop lock sub mov xor jnp lret rolb rex.WRB (bad) and xor test fcomps callq out fs (bad) mov mov mov ja fs jg rex.XB gs xchg (bad) jo out or fsubl mov cmp shl fcompl (bad) pop mov movsb jrcxz ds sbb or xor mov leaveq sbb rex.R enterq outsb addr32 (bad) lods movabs pop and rex.WRXB cmp (bad) std or adc lahf xor or (bad) sub sub rex.WRB rex.WRX (bad) rex rolb sarb rex.WRX (bad) sub or xor xlat jg xor adc mov int mov fiadd rex.W add sub sub (bad) sbb rex.WRX and (bad) shrl loopne pop movslq mov ficom enterq rex.RX push sub nop repnz (bad) pop jrcxz xlat sbb push cmp xor int3 mov iret (bad) rex.WX push (bad) adc mulb mov mov add xchg (bad) (bad) rex.WRX xor (bad) sbb (bad) cmpsl addl lods push (bad) (bad) pop rex.RX vxorps enterq clc rex.RXB rex.WXB loope sub jmp rex.WR xchg add sbb or rex.W (bad) mov callq pop rex.X sbbl (bad) mov retq mov cmp push fxch movsb leaveq adc (bad) adc xchg jmp add incb rex.B nop iret add (bad) sub sbb (bad) roll (bad) cwtl rex.RX rex.R int enterq rex.B movl rex.WR cli fcomps (bad) (bad) data16 enterq and (bad) rex.RXB hlt add fadds sbb in rex.W pop in jp sub stc (bad) jg and loope sub cmp shr and pop rol (bad) stos cwtl sub out mov movabs fsubrl xor sbb pushq (bad) in pop pop callq rex.RX rex.W sub outsl add sbb xchg (bad) add mov (bad) out adc add mov cmp insl push rex.WRX lock in test rex.RXB sbb imul out xchg and push adc (bad) cmp rex.WR cmp mov (bad) addr32 pop pop (bad) (bad) shr mul mov xor in and lret jle movabs jl sbb (bad) pop add rorb (bad) add ljmp rol cmpsb mov outsb jmpq fcomps add lods sub adc (bad) rex.WRX (bad) iret and movsb rcrl iret (bad) or clc jns or xor and add lods xor fmuls sbb out xor (bad) (bad) fnstenv movslq jg data16 rex.X rex.WR rex.WRXB pop jne fwait add movsl or (bad) mov jbe es (bad) (bad) cmpsb or movabs pop rex.R fcomps fmull decl push xchg clc loope xchg mov pop pushq outsl jae mov and test xchg movabs sbb cs push mov rcll jbe add data16 lret fs out lret je (bad) sahf roll imul xchg stos test repnz (bad) (bad) fcmovu enterq cmp xchg je push pmuludq (bad) pop xchg (bad) and shr add addr32 movabs mov cmpsl and sarb xor mov xchg fmull enterq clc (bad) mov mov lods jge lock fild and add (bad) rex.WR xchg rex (bad) ljmp (bad) jb nop callq mov mov lret rex.WRX hlt rex.WRX sub rex.R or lock (bad) rex.RXB jbe and rex.WB rex.RXB rex.RB (bad) es (bad) adc (bad) (bad) pop mov flds ror fwait retq mov jne rex.X pop pop rex.RX data16 fsubrs mov sub add retq (bad) adc jno rex.WR rex.WRB cmp lea out out test pop mov jle jbe xor out jbe (bad) push jmp cltd sti (bad) out cmp mov retq movslq pop shll movslq rex.W test add sub mov lea push sbb add sbb rcl test adc cmpsl cmp cmpl cmp jg mov movslq mov (bad) int3 fs sbb insl rex.WX rex.WXB callq (bad) test jmp sub (bad) (bad) jl andl clc (bad) rex.WRX rex.WRXB adc test rex.WRB (bad) cmp xor mov rex.X and (bad) adc fldenv lret fbld jrcxz cli (bad) push test mov mull sub sti pop rex mov rolb fldt jmpq lea cmp sarb (bad) jg stc sub (bad) add mov (bad) shl (bad) rex.X cmp rex.WRXB scas rcrb mov imul rex.W pop movsb lock in mov (bad) or pop rex.RXB (bad) xor loope mov add cld push fs movsb rorl je or add xchg imul rex.WRB shlb add rex.RB fisubr leaveq adc rex.WRX rex.RXB push (bad) cmpsb rex.XB rex.B jbe xchg rex.B pop mov fild lahf and and fsubrs and ds jmpq mov sahf sub (bad) pushq (bad) (bad) sub mov sbb in (bad) ficompl cmpsb mov pop stos movl pop mov retq shlb rex.WR (bad) add callq (bad) or jg (bad) roll clc imulb lods push or sbb mov stos fnstenv es rex.WRXB js rex.WRX data16 and mov jnp mov push stos pop pop (bad) movabs xchg push cmpsl (bad) or out addr32 xchg out cld rclb mov lahf nop mov jrcxz es mov ss (bad) or cmpsb callq sarl adcb test pop data16 push cmp fwait push sub xchg xchg (bad) (bad) rex.WX jno or in jae rex.RX sbb sub push enterq clc rex.WR push (bad) mov pushfq and rex.WRX retq rex pop mov jo in (bad) cmp sub leaveq xor xor nop callq and test clc movsl add xor movabs mov (bad) pushq or out sub adc mov pop pop movabs rex.RXB rex.WRX rex.X mov jns and fmuls pop or add xchg movabs add push pop (bad) scas adc sbb fsubrs adc rex.WR mov (bad) xor sub out mov nop mov jns loopne jmp xlat loope pop (bad) rex.WRX nop or (bad) sbb (bad) (bad) mov rex.RXB callq add or rex rex.RB testb or movabs (bad) rex.WR (bad) rex.B add xchg stos and sbb hlt mov cltd rex.RX movabs lock (bad) outsb xor add mov iret callq sub xchg and rex.RB out and push mov cwtl sub jrcxz,pn loope mov push mov sbb mov mov pop add rolb push (bad) rex.RX rex.RXB cmp cmp (bad) lods out rex.WRX test (bad) xchg (bad) jns xchg ja pop (bad) jge idivb and xor rol lret sbb lea and in and test cmp shrl pop sub (bad) nop sbb sub out int out (bad) jbe (bad) jo (bad) (bad) push sub rex.WR mov rex.R xchg (bad) sbb sub add adc (bad) shl imul add (bad) pushq fimull push (bad) fs (bad) sar sub sub pop movsb test push jmpq rex.RXB out loopne and mov mov (bad) sub je js (bad) mov fsubl jbe int pop jne sarb sbb mov or (bad) es mov popfq in or cmp in sub cmp rex.R mov and (bad) ss and sub clc int3 in (bad) (bad) xor retq pushq neg rex.RB movabs (bad) addr32 adc loopne jge in enterq movslq adc loop (bad) add rex.RB (bad) scas (bad) add bsf sarl jmpq rex.RB repnz repz xchg push add adc (bad) xor fdivp sub (bad) (bad) mov fidivrl mov out adc (bad) out rex.WRB rex.WXB rex.B rex.X es loope sub mov pop jns jp mov sbb push adc fiaddl mov clc jnp push in rex.WXB and pop ds jle (bad) fs rex.WRXB movsb jo shrb add movslq (bad) cmp and jle cmp sub ds (bad) loope adc jrcxz adc mov decb lahf scas (bad) insb and (bad) (bad) sub rex.X ss jo (bad) fs outsl add add sbb and xor (bad) (bad) rex.WRB (bad) sti frstor fiaddl push and rex.RXB xchg cs mov xchg rex.RXB movabs out movsl cltd rex.RX sub jo addr32 cld (bad) xchg sub jae es mov rex.WX rep rex.WRB rex.XB sbb mov mov mov test movabs rex.RXB add (bad) adc and jmp add shr sbb sahf lret (bad) add out movabs sbb imul xchg imul lret insb xchg (bad) and rex.W sarl mov cmp rcll movsb pop loope ss pop xor and adc decb jb scas xchg cli fist and nop (bad) repnz movsb dec nop (bad) cld sub rex.RB fdivl pop pop pop in cmp sub (bad) jae movl rorl (bad) sbb adc jg sub adc rex.RX (bad) jns rex.X mov test jns,pn mov rex.B fistpll or popq push es int3 xchg (bad) fwait (bad) lret xor rex.WR sub lods movabs pop test xchg loop (bad) (bad) rex.WR xor add out movabs out rex.RB js,pt sub xor (bad) push or sub mov fs jg (bad) cmc test mov sub out mov adc rol (bad) mov pushfq (bad) jmp cltd xor pop fidivrl repnz fcoms lock mov movabs out (bad) retq movslq rex.WXB sub (bad) imul nop pushq movsb and jmp gs jg (bad) shl (bad) hlt sub cmp push insl rorb or cmp loopne (bad) insb mov lock dec sbb ja pop fcomp imul add rex.X mov adc cmp jmpq cmc cmp (bad) fnstenv nop test adc sub sbb (bad) movsl sub cwtl addr32 pop insb sbb mov (bad) movsb mov pop es fs sub mov sub fldl popfq jns fstpt (bad) (bad) adc add sbb adc push cmp rex.X and rex.WXB jg jno (bad) jl mov sub test adcl add adc mov add rex.WR in add int3 mov xor xor add mov jb jmp rex.W in mov lret cltd (bad) cmp cmp (bad) rex.WX or (bad) mov sub mov in xchg xchg rex sub or jmpq and rex.R (bad) or xchg pop enterq out adc mov sub lea nop sbb mov lea (bad) mov sbb ds lock xor idiv pop out jmp or cmp rex.X movslq add xchg or enterq xchg cli xor push xlat xor push in (bad) pop ficompl pop clc xor xchg (bad) jrcxz rex.RXB enterq (bad) (bad) cld insb (bad) ficompl pop and (bad) shlb test retq mov mov leaveq sub and (bad) jle int3 test pop repz rex.W pushq rex.W addr32 (bad) cmpsb adc rex.XB clc ficom adc shlq fstps jmpq fadd xor mov shlq add push rex.R outsw rex.WRXB xchg fdivl add jmp push rex.R or test sbb loopne push cwtl rolb add mov js mov xchg rolb and mov cmp (bad) shrb leaveq rex.XB gs cmp (bad) jmp movsb and nop lods movsb xor jg xchg xchg xor xor lea sub movabs add rex.XB adc jrcxz bnd clc cs xor mov rex.WX movabs in mov cmp js xor shll mov xor rex.X (bad) (bad) rex.WR xchg cmp retq (bad) push rex.B orb (bad) (bad) loop mov (bad) pop xlat movsl pushfq lock and add sti and loopne rcrl and push fdivrp xchg test rcrl std mov movabs mull (bad) rex.WRB (bad) rex.W rex dec (bad) notb in sub (bad) sbb int3 (bad) xchg jno mov jbe mov ss xor rex.W or sar adc (bad) loope retq (bad) xlat rcrb lock jg push (bad) adc scas push cltd rex.WRX data16 jl (bad) (bad) sbb outsl retq add (bad) (bad) or idiv sbb cmp (bad) (bad) fistp imul (bad) insb adc loopne cmpsl clc incl mov lcall enterq in int3 movsb (bad) (bad) rex.W (bad) int3 or (bad) jl rex.R sub cmpsl rex.WR mov cmp add and leaveq (bad) xor rclb add xchg and (bad) repz stos ja clc rex.WRB rex.B rex.WR data16 test jle pushq iret pop rex.W sbb jno mov gs rex.WR fnstsw (bad) push jne imul jns (bad) mov (bad) test std add and rex.XB callq and rex.WR pop or in rex.X fcompl mov sub pop or sub mov insb rex.X xchg mov mov cmpsl stos fisttp (bad) rex.WR (bad) add ficompl mov adc mov xchg scas (bad) idivb cmp mov callq jle fdivl je movabs movabs cmp mov scas add (bad) cmpsl sub and and inc jmp (bad) (bad) xchg jnp lahf mov test mov pop sbb andl movsl mov (bad) add xor lock rex.RXB lret rex.WRXB shll cmpl retq cmpsb mov push (bad) (bad) (bad) mov (bad) retq or rex.RX sub lods stos sbb xor (bad) xchg pop cmpsl cmp pop xchg addr32 leaveq rex.WRX jmp (bad) jbe std pop pop jb rex.R or jb loop sub roll sub add sbb mov mov scas imul pop (bad) iret enterq insb mov gs movsb jge pop add cltd (bad) test (bad) (bad) mov push stc cwtl sub pop in fmull leaveq in jnp imul rclb pop and loopne pop nop jge rex.RB cs sbb mov pop mov ror jo sbb movabs popfq enterq xchg adc rex.WXB jno xchg (bad) push and add sub sbb movsb rex.WXB rex.WX adc push adc xchg cld mov add (bad) retq pushq jp mov mov xchg pop pushq push add pop jle ss gs int (bad) cmp (bad) jg lret movsb jge ss (bad) or (bad) cmp addr32 in leaveq (bad) (bad) mov xchg ss (bad) xlat imul stos test movsb jge ss pushq jo rex.WR rex movsb (bad) mov jae (bad) rex.WR and xchg sub ss sub movsb jge ss xchg sbb cmp jp insb ss (bad) or sbb mov mov or cmpsb lods (bad) (bad) pop jae fdivrs mov pop mov (bad) pop outsb (bad) jno and add movabs outsb (bad) ds shlb adcb data16 mov addr32 sub (bad) sub cmp fwait sub rex.RB mov add or roll adc andb rex.RX (bad) faddl rex.WRXB repz (bad) mov mov (bad) mov add rex.XB repz retq repz and mov lods pop rcr mov js pushq (bad) rex.X sbb or (bad) mov pop sub jne rex.WR (bad) mov mov leaveq insl cmp (bad) or mov sub movabs pop lret std jmpq jns xor sub fwait adc rex.WRB and adc jmpq mov jns ss pop jmpq jns push jmpq leaveq icebp leaveq in (bad) push rex.XB xor jb mov fsubl (bad) test (bad) pop pop adc mov test fsubrl mov scas add sub pushq icebp fldl adc rex.WRB jbe or retq push jge adc in cltd rex.XB xor int3 (bad) mov (bad) and push rcrl pop and and add rex.WRB jno pop orl cmp sarl imul jle cmp jmpq rex.XB pop clc xchg jb jl pop jge add pop push sub sbb and sbb (bad) out add rex.WX cwtl and xor movabs mov scas adc scas fdivrs jg ja mov cmpsl and test rex.RX rex out sub andb rex.X out (bad) test retq (bad) mov movabs xchg rex.RB mov rex.B ficomp jge jrcxz sahf rcll test (bad) in fild (bad) (bad) test movabs adcl test movslq rex.X repz loopne pop (bad) jns pushq in sarb (bad) mov rcrb pop push movabs cmp and rex.X push or and add push mov (bad) xor pop (bad) ds gs rex.RXB push addl lahf out push int3 movsb sbb push enterq jno and rex.WRB (bad) es add mov roll shlb and movsl rex.RX mov (bad) movl and out rex.RB adc push shlb ja pop pop rex.R ds gs mov sub cmpl shlb sbb cmpsb rex.R movsb fimul movb pop in or mov rex.XB (bad) add rex.XB cmp (bad) (bad) pop shrl adc (bad) retq pop (bad) mov es xabort mull (bad) stos (bad) sbb pop gs add push push jmpq (bad) push mov sbb (bad) or lea (bad) (bad) push adc push ja (bad) pop add push gs rex.RXB push addl add rex.RX (bad) lock in mov scas sti cmpsq and test adc rex.WR add in (bad) xchg add rex.WX movabs rex.W and xchg orb mov add push sub es xchg push sti mov rex.WRX negb xchg in mov fildl and xor jnp and out pop or mov mov out pop int3 mov roll movabs pop gs rex.RXB adc andb (bad) mov sub push std add (bad) out test and fs gs rex.RXB adc (bad) sti fchs adc (bad) std mov in rex.X lock retq jrcxz outsb pop mov jb int int3 callq andb (bad) sub rex.R and jrcxz test ja rex.R es mov sbb jne sarb cld pop adc rex.RX or xlat cmp xadd xor mov sub rol rcrb and (bad) xlat add push rex.RXB pop fcom push add fcmovnbe add pop rex.RXB pop fnop push fs rorb shll rex.W rex.XB add vpmulhuw rex.WXB (bad) rorb rex.W lret rex.W rex.WRX int rex.RX rex.W rex.WRXB add rolb pop push rolb shll rex.X rex.W xlat add (bad) (bad) adc pop rex.RXB pop fnop pop fs rcrb fsubl pop rex.W xlat add fild pop rclb retq rex.W rex.R add rex.RXB pop rex.RXB enterq rex.WX and rex.WRXB (bad) (bad) rex.RX rex.WRX rcll rex.WXB rex.WX push xor (bad) xlat and pop xlat add fiaddl pop pop rolb frstor rex.R rex.W xlat add rolb cld rex.RXB pop retq outsl rex.WXB rex.RB (bad) and rex.W add leaveq and rorb (bad) int3 rex.RX fadds iret pop pop rclb (bad) rolb fadds (bad) pop push rclb (bad) fadds fadds pop lahf or pop (bad) rex.WRXB insb xorl pop (bad) movsb adc rex.X clc cmp add mov rex.XB rex.WXB mov shr sti in cld rex.XB xor rex.WRX clc pop mov lods movabs pop pop xlat (bad) mov roll or insb pop sub (bad) rex.W xchg test xchg fldl insl jp (bad) pushq (bad) stos and rex.RX cmp rex pop xlat rcrb (bad) add xorl or movabs rex.RX (bad) addr32 (bad) (bad) jrcxz (bad) lods or jno popfq mov mov sbb rex.WR sbb cmp retq rex.RB rex.R rex.RX rol enterq push movabs rex.WRXB rex.WB cmp test (bad) rex.RXB retq cmp add in xor and pushfq rclb out in rex.WR (bad) (bad) mov (bad) idivl jg mov loopne mov rex.RXB (bad) out adc rorl loopne add and (bad) lret xor fs sbb (bad) push rcrb out fcmovb push (bad) mov imul addl data16 (bad) pushq fstps retq or pushq jmp (bad) shl (bad) (bad) lret push int pop sub mov and retq mov (bad) (bad) data16 (bad) rex.RXB rex.RXB mov (bad) and pop jno test xchg rex.RXB movabs rex.RX sub and clc movabs xchg mov (bad) repz movabs cmp pop sbb (bad) (bad) gs push test lods movabs rex.R retq rex.RX cmp je rolb xorb clc and (bad) xlat cmpb pop addb jge pop in (bad) mov xchg cmp jrcxz enterq pop sbb push xlat subb rex.WXB movsl int3 mov rcl cmc jp add rex.WRB sbb mov sub callq add mov push push movabs sub adc cltd (bad) hlt data16 rol xor (bad) cltd mov (bad) andb xchg (bad) retq rex.W (bad) (bad) jnp stos lret xchg (bad) (bad) jnp add jge sub xlat xchg jo (bad) mov rex.RB rex.R push jmp out notb add cmp rex.RB incb adc (bad) add mov sub jns adc pop outsb fadds rex.B push movabs movabs movabs es (bad) cmp out (bad) (bad) (bad) repz xchg rex fs sub or sbb pop int3 jle mov push (bad) ds addr32 jle (bad) out lret std pop add sub add pop mov fcompl add mov add jge test incl jmp pop fcompl pop xlat add push std mov fmul out movsb stc jrcxz rex.R movsb (bad) lock rex.WRX pushfq and scas sub leaveq rex.R sub xor mov pushfq rex.W mov movabs cmpsb mov mov rex.RXB pop fsubr xchg jo mov sbb xorl rex.RB rolb rex.X rex.RB xchg imul pop (bad) jbe or (bad) out sub xor nop test cmp ja rex.R jmp sti add xchg or cmove (bad) jge jg jmpq sbb (bad) sti iret mov mov jns pushq mov rex.W adc jl out mov adc scas movabs sub jmp movsl rex.X adc adc mov (bad) movabs enterq rex.WRX rex.RB movsl out mov movabs and rorb movabs sbb xor rex.WRX jns (bad) pop xchg test setl movslq scas rex.WB test pop and retq and movslq fdivs fdivrl je shrb xchg lea pop cmp loope cmp out rex.RX movabs xor lret rex.WRX je fdivrl adc fiaddl adc mov cmp (bad) adc (bad) outsl rex.RB je loop xor lret (bad) (bad) movl xchg ds or pop xchg xchg scas test sub pushfq (bad) pop lahf (bad) cli mov sbb (bad) push cvtps2pi adcl rolb rex.RXB pop lret (bad) mulb (bad) incl mov (bad) mov (bad) add rex.B jmpq jo lock xor sub faddl sbbb rex.RX add rex.WR test popfq rex.W or sbb sbb rex.WX test add mov push (bad) rex.WX sub fcoml vcvtpd2ps (bad) sbb (bad) mov mov fisub imul (bad) rex.RXB and rclb movabs jb pop fadds out jne (bad) stc and xlat movb insl xchg movabs stc push movabs ss rex.WRXB push adc leaveq (bad) rex xchg in movl mov mov mov (bad) iret fwait or mov xor (bad) sbb sub hlt sbb jno cmpsl mov sbb ds movabs jae rclb ja (bad) sub add loope (bad) ficompl pop gs push addl and enterq retq xchg rex.R xchg rex.B (bad) rex.B addr32 scas loope and stc in rex.WX out lock and sub rex.WR sti (bad) jl rcrb fwait (bad) pushq (bad) test mov or fwait (bad) rex.WX jmpq cmp rex.WR (bad) cli test (bad) or xor sub test lods retq mov rex.RX pop jle sbb cmpsl mov sub movsb test leaveq scas pop add rex.WR rex.XB sbb test push (bad) rex.XB rex.RX clc jmpq or pop (bad) pushfq nop pushq jmp movb sbb xchg movl notl cwtl mov mov (bad) fimull movsl and stc xor jmp sub callq xor cld adc jmpq xor sbb (bad) jmp push push and rex.WX pop xchg xor rex.W std loope mov fistpl and scas (bad) mov addr32 fiaddl or rex.RX add cmc (bad) shr xchg add fnstsw faddl std stos cltd repnz sub mov (bad) popq sub rex.WRB mov imul test mov leaveq loope scas loopne cmp jp sbb (bad) fidiv xor jnp cmpsl (bad) (bad) (bad) movabs popfq cli adc or xor mov xor xchg push push and gs stos or push mov repz scas pop shrb mov popfq leaveq mov sahf xchg test movabs adc fsubs xchg ds push repz pop jae push repz mov movsl mov (bad) sub (bad) xchg cmp adc sbb adc cmpsb rcrb fadds mov (bad) push movslq jbe add add and adc movsl mov pushfq mov cld scas cmp jns jle sbb (bad) movabs (bad) rex.WXB rex.RXB sub callq (bad) sbb cmp rex.XB movabs movslq rex.RX or out sarl xor (bad) cmp and mov (bad) (bad) mov bndmov push fbstp (bad) rex.WRXB (bad) imul rex.WX rex.WX mov xchg rex.WRXB ss xor cmpsl sbb mov (bad) js sbb faddl xor out (bad) fs (bad) xor gs pushq and repz jns pop mov cmp (bad) cli rex.WRX or xchg mov lahf rex.WRXB mov add test imul lock jmp mov sbb outsb add rex.XB pop rex.RXB xor rep int rex.WXB pushfq cmp or shrb mov add mov jmp jge jmpq (bad) rex.XB (bad) xor rex.WR fcomps test out and xor retq sub rolb (bad) adc (bad) in enterq rex.R sbb callq out adc add mov mov (bad) lahf push rex.WX rex cli mov cli enterq and (bad) int3 and repz (bad) lahf xlat movabs and enterq imul (bad) sahf imul (bad) xor xchg xchg movabs rex.WXB rex.WR mov cmp add fldcw push int3 and sbb mov sbb jge data16 decl stos (bad) (bad) lcall es pushq pushq xchg xchg js data16 adc pop enterq movslq (bad) (bad) test jp es rex.RB addr32 (bad) out jmp lea callq enterq sbb cltd imul mov or sbb (bad) pop mov mov (bad) and rex.WR (bad) add int3 pushfq int out jle lods add sbb mov cmc repnz rex.R mov sub xlat fs stc movabs shlb xorb mov (bad) push (bad) mov pop jge rex.W xchg cmp clc ficompl rcl out mov mov rcrb pop xchg jl cmpsb shrb pop movslq mov jbe sub loopne add fcmovb cmpsb xchg mov fild shl sbb ficom in rex.X add add pop rcl shlb cmp mov and (bad) mov (bad) jp add mulb or mov cmp jne or mov loopne rex.W loope or or lock outsb mov test fwait rex.RB insb (bad) popfq ss in repnz jrcxz xlat stos rex.RX and lret (bad) (bad) std pop push xchg movsb (bad) pop xor scas jns mov (bad) data16 lods loope rcr in sbb or (bad) jno mov and add adc rex.WRXB mov in sub pop (bad) rex.W divb and and enterq (bad) std rex.X mov xlat pop mov (bad) mov rex.WB jns jo xor mov rex.RXB rex.WR sub shrb jp scas retq push movabs add and xchg outsl adc push pop xor mov lahf test mov test rex.RXB rex.B (bad) sub and (bad) rex.WR (bad) int3 (bad) shrb mov fldenv pop sub mov or rex.W adc add push sahf and jrcxz loopne enterq loop add clc push mov pop callq addr32 mov cli and or (bad) add pushq xlat rex.RB lock iret jle flds (bad) rex.WR or mov enterq (bad) repz (bad) sbb pop add movabs out lods jmpq jmp cmpl movsl callq pushq xor add add jmpq xchg (bad) xchg cmp adc push (bad) jmp mov add js test and (bad) test es adc test xor fsubs scas (bad) scas callq in push rex.XB repz movslq fcompl mov jge movabs mov rcrb pcmpeqw cmp adc rex.B rex.RXB add mov push add rex.RXB cmp cmp (bad) jnp int cmp add enterq scas rorb loope fiaddl push or sbb cmp cs pop (bad) (bad) mov out or fadds xor push pop movb mov repz (bad) rex.WXB rex.WR rex.B rex.W addr32 adc (bad) (bad) icebp push xlat (bad) cmp sub (bad) (bad) (bad) retq movabs xchg and enterq mov cmp adc in (bad) pop sbb rex.WRX adc loopne or fcomps push xlat and cmp out cmpsb mov cmp leaveq cli (bad) out add jae (bad) xor sub cmp rex.WR cmp (bad) insl movabs mov push or sub or or rex.XB add xor sbb mov rex.XB or fsubp fisubl push add jb pop outsb sbb sbb nop or rcr (bad) (bad) fist ds add enterq rex.R cwtl cmpsl cmc clc faddl (bad) fiaddl mov cltd sbb or sub (bad) (bad) xor loope lret imul (bad) (bad) (bad) jmp rep mov and rex.R rex.WX sub rex rex.WR rex.RXB xlat mov cmpsb jmp leaveq adc (bad) cmp out out (bad) add rex.WR mov pop mov sbb (bad) mov fs movabs and retq rex.WRX rex.WR xchg jp rclb mov jae pop rex.WX xchg in (bad) rex.RXB adc (bad) imul or mov mov pop sbb jns xor fistpll xor and (bad) mov test sub and (bad) pop and popfq (bad) pop leaveq test (bad) clc jno in mov fcmovu movabs rex.WR test or mov and sub fnstsw cmovns callq (bad) jne rex.WB (bad) xor loope add hlt stc rex.RX inc fcmovb or or pop rex.WR sub out loopne rex fisubl sub (bad) mov outsb mov repnz sbb out mov test push mov rex.WR mov jno or sub cmp retq mov add sbb rex.WR pop cmp data16 jno or push hlt fiadd sub imul movsb sub lret jns push xor (bad) cmp adc es (bad) sti movl mov movsl pop (bad) rex.RB xor adc rex.R lahf rex.WX fsubrl (bad) add cli mov (bad) fdivrl loopne cmpsl sarb callq rex.W ss sbb adc jno or stos cmc clc retq enterq xchg push movslq mov sbb push sahf (bad) xchg addl out jo xchg cmpsl or (bad) fsubs fildll int rex.WX sti (bad) nop pop rex.WB xor adc xchg add fs push sbbl adc sub out scas decb jbe mov je test pop rclb and jge jrcxz movb (bad) je push or mov jb (bad) and (bad) rex.WR cs mov rex.WX and jle popfq add xchg (bad) js rex.B rex.WR (bad) push (bad) cmp xor add cmpsb sbbb mov stos fcmovb pop out outsb mov cmp imul sahf repz out (bad) rex.W sbb mov jno pop xchg adc pop imul lods movabs adcb (bad) imul mov rex.B rex.RXB (bad) rex.WR movsl movslq xchg and repnz pop add mov jp lahf pop (bad) outsb cmp xor mov (bad) jns rex.WRXB rex.WB push sbb add out mov mov jae jge jmpq sbb rex.RB xlat rex.WXB (bad) rex.WRB lock rex.WRX (bad) (bad) or std jmp imul jge movabs adc jmpq loopne cmpsb (bad) cmp imul pushq enterq (bad) sub xor mov movabs rex xor and insb cmp or xor jmp insb addl pushq fadds hlt (bad) fstps jo (bad) loop scas mov mov xor sub pushq rex.WXB mov xor or jrcxz cmp rex.B movsb rex.RXB (bad) jge rex.WB xchg push (bad) mov nop callq fwait cmpb fsubrl movabs mov or pop hlt mov cwtl xchg (bad) (bad) sar push xchg jb cmp cmp in imul jbe iret sbb lahf pop rorl enterq mulb or (bad) xchg in (bad) rex int3 movsb push shr (bad) ds (bad) out in xor (bad) in test add enterq rex.R rex.W (bad) sbb rex.W (bad) (bad) (bad) enterq movsb (bad) vmovq rex.RXB (bad) test addr32 rex.WR jbe insb mov shrb popfq add stc hlt jp cld rex.WRX jmpq cmpsl mov data16 or std adc mov mov rcr fs in rex.B out fdivs movl adc jge rolb fldt lock pushfq cmpsl popfq sub movsb rex sbb (bad) repnz orl jno jbe (bad) out std outsb push xchg add data16 jae lea rex.W cld imul push mov jo mov repz xchg sbb int3 and mov sub shr and test rex.WX movslq adc mov and (bad) mov mov pushq sbb push or mov mov movabs cltd rex.XB sub jrcxz lods xchg xchg rex.RX addr32 nop jo jg mov jrcxz lcall fadds (bad) mov sbb insb cld mov jge rex.WXB test jl fiaddl retq mov or rex.RXB jns mov or mov test jle scas rex.W pop adc mov xchg js mov pushq or cwtl (bad) sub jns (bad) rex.RB mov push mov push rcrb loopne push rex.WR or jb rex.WRXB movsl hlt and and fs jp rex.WR pop sub jno jae iret (bad) or loop in push test add pop (bad) (bad) rex.WR pop sub (bad) test retq repz (bad) or add rex.WRX mov test sbb adc sbb lret mov js cmpsb (bad) xchg int adc rex.XB rex.WR fwait sbb (bad) push (bad) add rex.B (bad) mov rex.W movsl outsb jmpq (bad) sbbl cmp cmpsl mov rex.RB rex.WXB (bad) and pushfq pushq mov sarl imul loop rex.X rsm jp and (bad) pushq out sub adc xor fwait rex.WB fcmovb (bad) rex.WR (bad) xchg jb and rex.WRXB rex.X rex.B and rex fild in xchg (bad) (bad) (bad) rex.RXB and scas adc mov fdivs adc movslq shll push xchg movabs out outsb mov add jg sub mov out jmp int3 pop addr32 jb outsb sub mov rex.W rex.RXB movsb rex.WR lahf cmpsl int push jbe mov (bad) push stos pop xor imull (bad) test vorps hlt pop movabs or loopne rex.RXB adc movslq sub rex.R cltd rex.X and in lock loope sbb fdivrs and clc push fwait hlt out mov (bad) mov fadd push cwtl sbb pop sub jbe pop lcall (bad) rex.RXB rex.WB mov lret jno (bad) out adc fiaddl fcom movl adc (bad) adc fcoms pop rex.RB repnz mov rex.B xchg (bad) rex.WR (bad) adc andb vpsrad jg es add jge jb pavgb js sbb add pop sarl adc (bad) rex.RXB rex.WR fs imull movsl gs (bad) pushfq and add (bad) addb out sbb cmpsb sub lea adc pop clc and out xor pushfq cltd movsb rclb sahf xchg sti in cmp ficom rex.RB loope fs outsb int3 cmp negl xor rex.RX rex.WXB rex.RXB rex.X push rcrl or lahf adc imul int loopne (bad) adc mov cmp pop xor repz pop (bad) callq rex.WR or rex.R rex.RX std out pushq (bad) mov je test mov popfq test adc icebp (bad) (bad) and (bad) addl enterq out pop data16 popfq (bad) (bad) add loope adc pxor xchg hlt rex.RX sub leaveq outsb adc xchg mov insl (bad) loop cmpl push rex.RXB data16 popfq stos movslq mov mov sub or cmpsl in imul cltd pushq adc (bad) addr32 (bad) mov rex.XB fnstsw push (bad) movslq pop mov flds or ja xchg (bad) rex.WR leaveq pop xchg iret sub (bad) and rex.WR sub ficom cmp mov push mov rex.WR add jns mov mov (bad) sub mov hlt mov testl in mov lahf (bad) fcmovb add mov callq jge push adc or cltd (bad) rorb adc pushq sub push stos out push sub adc push push adc outsb or rex.WR (bad) or pop add repz and pop (bad) rex.WR fist (bad) pop (bad) rex.WXB sbb fstpl jle mov cltd (bad) test cmp (bad) rex.RX or or mov sahf xchg movabs and mov iret shl adc sub fbld movslq xchg xchg xchg (bad) iret xchg rcll pop jrcxz sarl rex.XB imul sbb mov adc rex.WR test rorl (bad) rex.RXB mov sbb cltd jrcxz insl mov out out testb adc inc ljmp outsl imul (bad) xchg pushq movabs stos (bad) mov mov shl iret or lret fiadd mov xor (bad) sub mov xor incb jne mov or shll movsl rolb sub movabs data16 or rex.WRXB xorb and fimul (bad) cmp (bad) (bad) pop sbb (bad) sbb mov (bad) out (bad) fsubl (bad) iret fimull ds scas stos cmpl fdivrp mov mov add (bad) scas push rex.WRB ds mov rex.WRX mov (bad) jp and mov fnstenv insl rex.RB jl or or notl shlb (bad) rex.WRXB in nop or icebp mov pushq fwait in xor rex.WRXB fistp pop jb nop enterq (bad) mov mov loope lock lret adc pushq iret sub and cld rex.R loop or or or (bad) leaveq fild and rcr push in test fcos (bad) cs xchg (bad) or mov jge jge rclb sub rex.W mov imul sbb sbb or cmp jmp mov imul sti (bad) movsl add vpcmpeqd push xchg xchg rex.RXB xor adc xchg rex lret int3 jo mov rex.RB rcrb and callq rex.RB pop or cmp mov out mov (bad) pop sbb adc sarb movsl jo (bad) (bad) (bad) popfq in movabs (bad) imull imul mov sub (bad) xor test push rorb cmp lock shlb mov fiadd test push lods rex.WX cmp cmpsl add data16 or jmp fstpl cmp cs rex.RX (bad) xchg fiadd popfq retq sbb data16 enterq callq pop cld rex.RX pmaxub int3 mov out sti insl (bad) pop pop cltq jrcxz (bad) addr32 xor movsl jmp cmp cmp and (bad) push mov jp pop xchg and fs pop (bad) out xchg add xor sub push push add pop (bad) mov rcrb mov rex.W rex.RB (bad) sysret outsl mov pushq pushq jp nop mov jnp test pushfq jo mov (bad) xorl lahf retq sti (bad) rex.X stos pop retq mov sub sarl sub mov rex.RB xor fs adc insl mov sub add rex.RX and mov or push loope sbb or adc (bad) xorb ficoml rex.RXB rex.RXB fldenv (bad) pop (bad) jl jae int3 out sti add mov imul out rex.WR jl add rex.RX addr32 rex.WRX pushq (bad) sub add jne,pt and fs cmpsb (bad) repnz xchg or adc lock xor ficomp in retq adc sbb test mov jns xlat cvtpi2ps mov orl out jmp rorb or scas es cmp lret xchg rex.RXB xchg outsl in es xchg or fild rex.XB add rex.X stos pop repz jno cmp cs cltd (bad) adc mov mov sub out and mov mov rex.RXB rex.W jmpq rex.WX jne sbb sarl (bad) mov jae xor repz cmpsl enterq cli pushq (bad) (bad) rex.RB add add cmpsl enterq and imul rex.WRX lret cmp mov add pop cmp (bad) push mov movslq (bad) cmp (bad) loopne fsub test push stc cmp rex.W fsubrl pushq rol rex.WRXB fmuls iret in repz or movsb fisttpl movabs (bad) rex.XB rex.WXB pop movabs mov mov (bad) shrb outsb rol or mov sti shl sub push xor loop ss data16 rex.WRB and mov rex.WRX jmpq pop add lahf cmp enterq mov imul mov sub xor lcall in push sbb rex.RXB (bad) mov fidivrl (bad) bswap mov (bad) fcoms stos (bad) mov mov add xchg sbb scas cs movabs fsub xor or push jo cmpq rex.WRX popfq cmp jp rex.W insb pop xchg mov pop mov test cmp in (bad) ss popfq rex.B (bad) sbb adc push test icebp rex.WRXB and jne push incb hlt enterq (bad) (bad) rex.X cld sub imul jle mov pop fsubrl fidivl push popfq push or jns rex.WX sub mov hlt push stc movsb pop stos in decl notl sbb mull (bad) adc (bad) cmp push (bad) movsl shll rex.WXB outsl jge fadds (bad) insb rex.WX cmc mov rex.RX (bad) movabs cwtl cmpsb stos (bad) pop retq stos jno (bad) (bad) (bad) (bad) rex.WX xchg rex.RB (bad) and and (bad) sbb rex.B rex.WR loop add loopne sub clc xor add in in jbe jae mov adcb stos int3 rclb imul movabs mov push rex.R jo jno pushfq ljmp movabs test in pop imul in add cmp outsb incb imul mov movabs retq movabs and ss or leaveq imul sbb (bad) jrcxz fldl in out sub (bad) pushfq movabs out js cmp xor lret icebp rcr out mov xchg clc rex.X pop (bad) gs addr32 jne loope retq rex.RB cli gs xchg (bad) repz scas (bad) rex.W rex.WR push test pop pop (bad) sarb jg xchg (bad) sbb rex.B ja sbb pop rex.WR nop or mov divl movabs cwtl andl add imul pop lock push fnstenv mov sub xor rex.WB rex.WXB and (bad) xor test sti push orl (bad) flds mov pop and jnp sub push (bad) (bad) imul in xor (bad) add jne and or mov jmpq cs rex.WXB addr32 (bad) movsb mov mov and (bad) icebp pop cmp ror fildll jmp xchg jnp rex.XB rex.WX stos leaveq js movslq shll mov decb xor push imul jns and fmull mov (bad) pop rex.R rex.WR rex.WX jno adc jmp (bad) (bad) int3 stos sub sub rex.RXB jne jae jbe (bad) shrb out (bad) lock pop (bad) jb out jmp or xchg xchg jle rorl icebp jmp push and jmpq movabs and and sbb out rex.WRXB cltd movabs mov rex.WRXB pushq mov push adc rex.WR rex.RXB js movabs pushq retq or mov rex.WRX cwtl pop cwtl rex.WR lock (bad) and outsb cmp (bad) add gs rex.B rex.W or xor xor rex.RXB sbb (bad) enterq (bad) sub (bad) fbstp pushfq btr ss insl adc lock movabs mov adc cmpsl fs mov sub loopne outsb (bad) mov jo xor clc rex.WR rex.R (bad) loop mov (bad) (bad) xor in add enterq (bad) shufps xchg push jmpq fcoms imul (bad) rex.WRX scas (bad) sti mov movabs adc and xor jmp (bad) pop pop adc sbb rex.WR or addr32 (bad) (bad) cli adc vmovlps mov pop callq (bad) sub lret rex.WX (bad) adc pushq rex.WXB xor cmp (bad) (bad) or rex.RX and rorb xlat rex.W cmpsb mov adc (bad) adc jle add rex.RXB (bad) mov ror (bad) mov jbe movabs (bad) sub stos and cmp jo rex.R jle int3 and xchg hlt cmp retq data16 rex.RXB push enterq mov out jmpq in cmp pop rex.XB fldl2t pop push std jl loope mov hlt outsl incl adc jge (bad) sti adc ficom icebp sahf rex.WRB rex.WXB scas clc xor pushq sub or callq jns movabs xchg out (bad) sub mov ficomp mov movabs (bad) xor rex.X xlat cs xchg sbb popfq leaveq enterq mov and lock and outsl lods out (bad) in jrcxz js sbb xor out mov pushq mov out loope cltd jmpq callq (bad) add stos es xor cmp mulb test adc jle rex.WXB mov leaveq lahf mov (bad) jne in mov push xchg clc iret in and or rex.W out ds sbb lods imul jmpq retq and xor xor rex.WRX cmpsb leaveq ror addr32 sub and (bad) movabs (bad) and cltd (bad) callq (bad) push rex.W jnp sub (bad) cld push (bad) rex.WR lret movsb test push fldl and sub push sbb nop jns cmpsl enterq movsb lods std rorb rex.WR stc jg notb movsl jg rex.RX and rex pop xlat and in (bad) repnz push mov and shrl (bad) movabs rex.WRX sbbb pop scas add faddl jno stos fwait (bad) scas or xchg xlat adc shrb sub sbbl jp pop loop mov sub fwait mov cmp rex.X callq xor add (bad) pop and sahf mov test pop push movsl add repz rex.WRX iret out cmp sub (bad) in lret sbb and xchg sbb pop (bad) push push (bad) callq (bad) rex.WRXB (bad) fmull sti test mov rex.WRXB (bad) (bad) pushq push ds mov (bad) mov mov or pushq rex.WRX rex.X fldcw out (bad) callq jg add (bad) cmp retq int rex.XB add mov fistp leaveq rex.WXB rcll pop mov push or (bad) rex.W pushfq lahf (bad) loopne popfq push sub xor rcr (bad) test (bad) jne pop out movslq fsincos test xor fsubrs pop add (bad) (bad) fstpl rex.WX rex.XB mov sti jp sub (bad) out pop shll or (bad) mov mov insl or pop scas shrb in addr32 sub lea (bad) mov (bad) cmc sbb outsb (bad) stos repnz (bad) (bad) (bad) pop lret add pop pop fs (bad) and callq (bad) pop mov fidivr pop rex.WR popfq sub adc cmc or pushfq push and callq test jno test or push pminub mov cmpsb cmpsl pushfq jo cmpsb addr32 addr32 rex.WRX ss (bad) rex.WX cs (bad) rex.WXB rex (bad) callq movslq enterq xor data16 add test sbb lahf add mov xlat sub cmp rex.WXB (bad) (bad) pushfq ds in or movsl cmp jmpq ss (bad) push jle insl sbb add xchg orl imul or rex.RB rex.WR cmp rex.WR rex.R sub pop add cmp push rex in (bad) push pop push rclb rex.WR sti mov sub (bad) jo mov movsl pop add test sub test cmp fwait push je mov pop movabs lock and xchg jne out divb jbe in push cmovge or mov (bad) (bad) (bad) xchg jge adc push (bad) mov mov pushfq (bad) or ss iret (bad) sub pop (bad) outsb mov jle fsubl (bad) cli addr32 rex.R and (bad) pop cmpsl xchg es adc fwait jg pop movabs (bad) xor lea adc mov std or adc xor push cmpsb (bad) xor rex.W rex.WX fldl enterq lods stos loope (bad) sbb fadds cwtl cmp clc mov rex.R cmpsb jl incb (bad) cmp and movabs mov mov (bad) pop rex.RB movsl loope mov hlt lret retq out (bad) rex.WRB fdivrl cmp jle add cmp clc rex.WRX mov mov (bad) push push (bad) xor xchg lret imul mov add movabs rex.RXB rex.RX mov scas movabs fmull sub cmp rex.WX addr32 (bad) cmc clc jns mov outsl add lret sbb stos mov jae (bad) or xor movabs pop xchg adc out sub fsubl pushq rex rex.W (bad) rex.WXB rex.WR mov int3 lock pop fucomp mull mov icebp sub movabs push xor lock mov movabs mov sub add jbe pop add (bad) pop sbb cld xchg add push jmp jrcxz push push imul cld pop push shl (bad) rex.RX (bad) in mov push test sbb push rex.B adc faddp shr add loop (bad) rex.W mov pop movsl cli faddl adc mov (bad) push (bad) rex.X fstp jnp retq rex.RX fldenv push enterq mov retq mov (bad) sub in mov (bad) roll int outsl cmp (bad) sbb scas jg adc (bad) cmp sub hlt ja (bad) fldz test test add (bad) (bad) test and movsb (bad) imul mov and mov movabs ja in pop stc rex.RB rex.RX mov out clc (bad) andl and frstor (bad) (bad) xchg in push xchg pop xchg fnstcw and add or mov movsb sbb sahf negl pop retq rex.RB rex.WRXB sub pop (bad) js adc (bad) sbb retq (bad) add rex.XB insb (bad) mov rex.X cmp (bad) jb cld (bad) ljmp pop in xor (bad) loope or mov push stos imull retq enterq push jae sub xlat push int add lcall pop packssdw lea stos xchg fucomip hlt cmp jge push test sbb clc jb ss (bad) cmp fbstp leaveq fcompl unpckhps (bad) jmp rex.WX add rex.B fs test rex.RX and callq jae xlat js add cmp mov jrcxz xchg (bad) (bad) pop mov cli (bad) cmpsl adc mov rex.RXB rex.R jrcxz jrcxz fimull hlt cmc cmp sub adc jo fstpt xchg (bad) pop xlat pushq mov enterq jns rex.W (bad) fistl (bad) clc shr outsl or cmp fidiv and sahf pop lea rex.WX vpsubsb mov cmp xchg cmp lahf lock pop and loope (bad) data16 shl out pop enterq adc xor mov rex.RB mov xlat sub fcomp lret mov (bad) mov adc jle sahf fwait fs rex.RXB rex.RX jb sahf jle movabs push rex.WRXB push int movabs cmp cwtl (bad) mov and rex.R subb mov addr32 jmpq mov test sbb lahf loop rex.WX lods lods pop lock mov pushfq lret pop push rex.B nop mov sub loopne jnp (bad) insb mov cltd jnp (bad) lea sbb test insl xor mov xchg enterq mov test xor (bad) sbb mov push mov and movsb or or sub rex.B or fbld mov scas retq leaveq add mov lret (bad) rex.WB adc (bad) jrcxz imul rex.WR test (bad) mov (bad) or lret rex.RXB rex.RB sbb xlat fidivl sub xchg pop lods mov dec push sub int3 cmp cmp out xchg jne,pt xchg outsb enterq jmpq add (bad) cmc (bad) in rex.W pop negb xlat test cmc cwtl icebp rcrb nop test ss psubw push or rorl adc js adc cltd (bad) push rclb adc lock es leaveq and rex.WB push fbld add and int rex rex.W (bad) (bad) rex.R add movabs (bad) and (bad) data16 and jp mov retq rex.WR fbstp mov vshufps jo pushq jmp ss outsl pop xor and test cli in rex.XB in cmp loopne rex.RXB out and pushq adcb jns cmp (bad) jmp rorb callq jo loopne (bad) (bad) iret and mov jmp sti test rex.R rex.WRX cwtd andl callq mov cld (bad) lods lahf out movsb rex gs mov pop ds and (bad) js and out mov or mov pop add and fimul jg in rex.XB sbb (bad) mov mov cmp lods sub rex.RX gs or rex.RX loope lock rex.RB loope addr32 pushfq movabs push retq movsb enterq xor loopne fmuls jle jmp or rex.XB rex.RX idivl loope fxtract add pop lret rex.XB adc rex.RXB test int3 pushq lret add rex.W outsb add rex.WX lahf rex.WXB retq pop mov retq rex.WR loope or add mov mov xchg pop out loope pop sbb push sub test and rex.XB or (bad) and push (bad) outsl rex.WR (bad) (bad) nop loopne loope sti (bad) pop or jno jb std enterq rcr xor movabs mov (bad) pushq sti (bad) scas shlb xor or add fild callq int3 (bad) cmpsl pushfq notl loope rex.XB (bad) jrcxz push imul jo insb callq rex.B out rex.RB and (bad) test (bad) test enterq jrcxz fdivr push (bad) mov enterq mov (bad) mov jmp negb pop jl jp loope xor adc fnop sbb pop pop xor push xor xchg xlat jo cld or push (bad) sub (bad) mov sub add ds (bad) mov movsl rolb xor shrb sbb rex.B adc nop mov rex.XB fisubr cmc rolb flds stos in (bad) add pop add add (bad) fildl lahf lock or and push (bad) and pop add lods pop mov pop pop jb stc xor (bad) mov (bad) add jmp mov sub ds fs mov nop jle cmp (bad) retq xchg mov (bad) adc fildll pop lahf or rex.WRB test rex.W rex.WR adc movsb out push jle adc (bad) rex.WX push and mov jo xor mov fwait (bad) adc and or mov jrcxz or fisub fistpl rex.RX sbb sbb or loopne add (bad) rex.RX rex.RXB pop rex.R imulb rorb add (bad) (bad) test mov div push jg cmp jp (bad) sub pop pop jb (bad) fwait or (bad) mov cmc stc (bad) rex.WX scas jl sub movslq (bad) leaveq mov rex.XB rex.WR mov cltd test mov sbb mov push jle pop mov rex.R mov push rex.RXB pop mov mov out and add mov imul sbb andb (bad) mulb rex.XB or push mov fisubl rex.RXB xor es or clc cmpsl cmp pop (bad) cwtl cmc jo retq adc in (bad) iret rex cmp sub pushfq and mov in fs outsb push callq pop mov pop addr32 (bad) cmp in adc pop rex.WR cmp (bad) sbb stos movabs addr32 push fsubrp rex.B (bad) rex.WRB mov sbb movabs or (bad) jnp (bad) rex.WXB cmp (bad) rex.WB loope (bad) popfq and and mov add fisubl ja rex.RXB add adc callq stc rolb rex.W (bad) xor scas (bad) adc test popfq rep idiv cmpsb or xchg je movabs in fsts mov mov rex.WXB shr shrl push rex.WRXB xchg shrb (bad) loopne enterq mov mov cmp rex.WR (bad) jnp jg adc (bad) rex.XB addl xchg sub cld lret fbld gs fsubp pop (bad) in cwtl push add lea mov fldt adc movabs lea (bad) rcrb rex.WXB shrb jnp rex.WXB xor stc retq fdivrl push (bad) rex.XB and (bad) jns pushfq fwait jge rcl and out nop and ffreep pop rex.RXB pop sub mov cli fistp xor (bad) icebp rex.WX fs (bad) (bad) rex.WR (bad) (bad) rex.RXB push (bad) data16 jo loope fscale outsl or insb and adc and mov mov mov (bad) cltd jge push adc cltd jnp pushq pop callq mov and cmp (bad) pop jno adc (bad) inc sub rex.RX addr32 (bad) push and int jo (bad) mov out cmp pushq xor mov push adc in (bad) add (bad) es es callq add sub or rex.WRB rex.RXB jmpq xor rorb xchg add (bad) or (bad) (bad) cmpsb rex.B mulb clc addr32 xchg shlb mov (bad) (bad) (bad) sbb jg faddl mov rex.WRB mov xchg (bad) and (bad) sub fcoml pop jnp cs mov sbb sbb xchg add rex.WX callq lret (bad) (bad) add jns jmp mov sub add mov test xchg rex.RXB adc mov jge jno xchg (bad) mov popfq jmpq rex.WRB rex.WRX ss pop adc pushq (bad) jp loopne rex.X out xchg (bad) (bad) fnstenv jo (bad) cmp add sbb jbe jb sub pop or pop xchg in (bad) rex.RXB push (bad) iret rex.WRXB (bad) hlt callq xchg sub and and mov jns fcomip incl loopne rex.B mov (bad) in and jne leaveq addr32 (bad) gs callq movsb pop lahf adc sub movslq lods movabs jmpq popfq jg loope pop rex.W fisubrl xor fwait and xchg push addr32 mov xor fistpl mov push jbe xor xor vucomisd jns sbb data16 rex.B imul xchg fdivs pop sbb clc or rex.XB (bad) rex.XB idivl jmp rex.W rcr rex.WX es mov iret sbb iret rcll fcmovne jne (bad) and loopne mov xor sub rolb fisub jb xchg or js,pn sub sbb (bad) lods sub rex.B rex mov rex.WXB insl sub or pushq push lock rex.WB or pop mov push rex.WXB sbb cmpsl lret popfq jmpq (bad) clc loope fs out cs lock decb (bad) (bad) movabs or cwtl (bad) jb add mov mov in test cmpsb mov leaveq add push andl data16 movsl leaveq movl sub pop (bad) adc cmp mov mov repz movsl and (bad) retq sahf mov cmp (bad) (bad) jnp int jmp cmpsb adc adc cmp and cmpsl rorl pushfq enterq test and and xlat mov pop and xchg push insb jrcxz and or mov and xor xchg add (bad) jb jrcxz fwait adc and rex.WX add xor (bad) sub adc int3 mov pushq scas sti (bad) leaveq (bad) xor rex.RXB push mov test movabs rex.WR iret (bad) push out xchg jns roll sub repz adc addr32 mov repz sbb loop movabs loopne out (bad) and pop cmp fs stos pop cmp (bad) rex.W shlb push and sbb rex.W xorl cmpsb and mov add rex.RB neg sub mov cwtl pop rex.RXB jno cmp rex.XB (bad) gs add fistp movabs jmp movsl (bad) callq push cmp mov cmp mov adc icebp popfq mov adc enterq insb loopne (bad) rex.W or (bad) or mov retq (bad) (bad) (bad) mov xor rex.WRB addr32 xor cmp pop mov movsl (bad) enterq and (bad) pop rex.RB rex.RB fmull pushq xor push insl xor movabs rex.RXB rex.RXB xor pop fidiv (bad) rex.RXB jo (bad) cmp (bad) lock lret and movsb or xchg sar sbb mov jne (bad) cmpsl (bad) or rex.WB fs mov (bad) xor rex.RXB (bad) rex.XB addb push jmpq (bad) mov int push in mov jg sub rex.WB (bad) imul (bad) mov (bad) test push mov jbe stos cmp (bad) mov and ja rex.RXB addr32 mov rex.X rex.RX and jmp xor fildl pop jae outsb mov es rex.X idiv retq sub pop lahf add push test loope (bad) rex test mov (bad) std (bad) push adc cli and retq hlt or mov mov mov lret jb clc test rex.W cmp rex.RX fldcw loopne sbb lods fistpll xor shlb out cmp test sub (bad) nop push pushfq test loope mov enterq cmpsl (bad) out lahf cmp adc mov rex.WX mov sahf insb adc fistpll mov callq xchg push rex.W jmpq test add sti ds lods (bad) shr push and (bad) fst and push mov lods xchg and sahf rex.RB rex.WRX sbb jo adc (bad) sbb imul xchg rex.RXB push and or jl jge cmp rex.WB push jmp jne mov (bad) mov (bad) enterq sub mov (bad) imull icebp cmp loop test rex.X mov iret rclb push jmpq push cwtl rex.RB fisubr cli movsl loop rex.RXB xor jg add mov ljmp (bad) insb negb in repnz add fidivr rex.WR scas mov (bad) in pop rex push sarl rol add addr32 sub paddb and rex.XB (bad) leaveq cmp rex.WB rex.WX push rex xor push (bad) mov (bad) and retq xchg std clc adcb sbb fbstp lods sbb out (bad) out and rex.RX callq rex.RB pop push lock and sbb mov fisttp pop pop adc fldcw and mov sbb and test and shll rex.R rex.WRB out mov mov fs (bad) and fwait or test (bad) jo loop (bad) and out (bad) movabs test fistpll sbb fsubs in and retq and movabs movabs movsl decq and lahf jmpq xor cld cmp hlt and jge and (bad) cmp jle mov jp pop mov sti rex.WRB rex.W rex.WRX mov rex.RXB rex.RX push pop (bad) cli push jb out or movsl jg rolb (bad) lahf (bad) jle pop cld (bad) pop ss push mov adc and jmp and cmpsl rex.W rex.WRXB pushq fistl mov xor jnp add sbb mov xchg (bad) (bad) and add mov fs lret pop fdivrl (bad) sar push (bad) repz mov pop mov xorb mov int3 jae mov test retq iret add (bad) sbb (bad) add (bad) xor mov rex.R sub push std (bad) rex.WRX pushq push rex.X pop pop in and es sbb jg int3 jle (bad) xor (bad) sbbl xor jmpq cmp mov pop (bad) addr32 sub (bad) (bad) movabs xor pop xchg or stos in (bad) xor mov (bad) test mov (bad) outsw mov sub mov jb pop add jbe hlt imul pop and adc pushq add adc sbb or (bad) xchg (bad) and ds fbld pop (bad) pushq (bad) in rex adc add adc sub adcl pop pop cmpsl mov xlat mov or jbe,pt and std sub adc cs ss push xlat addps mov scas fadds sub leaveq pminub and divl fs sub mov cmp and fs pop add gs sub test adc incb or mov mov rex.XB add rex.XB clc xchg (bad) push rex.WRB lret pushq rex.WX cmp cmp sbb mov subl rolb add add (bad) (bad) pop rex.W (bad) rex.WB rol rex.W (bad) mov jmpq (bad) rex.RB rex.RXB test movabs loopne sahf mov or xchg (bad) rex.XB shl (bad) fnstenv ficom fwait adc add cwtl add imul mov out out icebp and movsb and movsl fsub movabs or rex fist mov es movsl pop (bad) xor jnp not adc movabs imul sub fldcw imul mov mov jno sub (bad) jno pop cmpsb push (bad) xchg push push (bad) xor test retq retq pushfq add (bad) jmpq cltd (bad) (bad) or in mov movabs test add mov cmp sbb out out mov loop (bad) (bad) rex.WR rex.W sbb sbb rorl lock mov callq lods jo jbe sbbb push leaveq rex.B int pop mov retq xchg rex.WRX test out mov stos mov fwait rex.XB mov test (bad) rcl rex.B sub cmpsl pushq jmp or callq (bad) (bad) movsl sbb mov jmpq insl add push lock (bad) fldl rex.RXB test mov cmp fcomps pop cmp sar mov sbb (bad) push jg pop loopne sub rex.X xchg loope jns xchg lock rex.R fstpl fidivl ss (bad) and and pushq loop loopne callq xchg std (bad) push imul imul xchg and loope push add mov rex.WXB jle xor fwait (bad) push (bad) pushq xchg lods jae loop sub push cltd xor (bad) int movsb add scas sbb (bad) imul movslq rex.RXB rex.WRXB and std pop adc movslq jrcxz rex.R rex.WRB rex.RXB rex.RB sub (bad) push notl test pop (bad) fwait imul mov mov jmpq adc mov (bad) (bad) nop rex.X rex.R imul mov xor (bad) stc (bad) scas add insb mov lahf jns rorl pop rex.WR and loopne rex.RXB push (bad) scas push fisttp test jae sub (bad) or jrcxz (bad) sub enterq outsl adc mov add rex.B sub (bad) rex.WX rex.RB mov fs and adc rex.XB and clc (bad) xchg xchg sarl punpcklbw mov rex.WR (bad) in lods cltd and rex.R ds roll out imul xchg pushq stos push fs fbld hlt movabs push callq sub jb xor ds rex.RXB cs sbb (bad) jmpq rex.XB imul mov xor pushq adc test fidivr mov (bad) xchg mov (bad) (bad) (bad) xchg stos out mov mov cmp or retq xor mov add enterq or sahf int out stos mov rex.RB leaveq (bad) movabs imul pop imul rex.X loopne int and push add (bad) (bad) or rex.RX sarb movabs fldpi rcrl (bad) rex.RXB or xchg (bad) pop add (bad) cmp rex.WRB adc (bad) shrb jbe rex.XB loope rex.X cmp xchg cmc fildll retq fisubr fisubl stc cmp lock retq rex.WR cmc stc fs (bad) mov loop fildll rcrl and rex.XB mov fdivl cld retq scas data16 xlat stos add (bad) sbb (bad) icebp callq xor rex.WRX lock mov rex.X add fistpl fs enterq adc or add mov loope mov imul (bad) (bad) rex.B addr32 cmp pushq rex.R rex.B leaveq mov (bad) data16 scas xchg xchg sub jmpq enterq (bad) (bad) adc movsb int pop push pop movsb xor in (bad) rex.R stc rorb ja jp stos sti fmul add cmp lret mov (bad) xchg jnp or mov sub rex.W rex.WR popfq (bad) stc push cld sub xor jl ds cli sbb jo fisubl retq vhaddps in xchg mov xor movslq (bad) imul or sub pop rex.XB test addl sbb sbb mov xchg sbbl leaveq in enterq rex.W addr32 and push rolb test mov mov xor sub (bad) rex.WXB lock jl (bad) or and (bad) rex.WX rex.RXB (bad) (bad) or icebp xchg mov rex (bad) mov (bad) rcr xchg adc and xchg clc xlat (bad) sbb and rcll pushq pop pop and xor xorl fbstp callq rex.WRXB and test cmp scas fstps (bad) addb cmp rex.R cs adc js retq rex.XB cmp pop pushfq mov je sti cld pop xor cld vcomiss sti (bad) jle insl orl notl rex callq push ffreep (bad) pop sbb es mov callq in cmp rex.RXB loope movslq xrelease pop (bad) (bad) leaveq add (bad) push divl (bad) rcrb jae loopne (bad) sub nop (bad) mov and jle fidiv mov xchg sti es retq std (bad) xor or mov jg push rex.WB imul es rex.RXB (bad) loop pop and gs mov rex.W rex.WR rex.WX (bad) mov je rcr (bad) clc sti out rex.WXB decl pop sbb js sub or rex.WRXB lea and cmp cmc push cmp sub or loopne and (bad) or (bad) test xor rex.RB rex.WRXB cs movabs xchg (bad) pop sub jne mov push and mov shr push rex.WRXB push and or mov jo (bad) add add and icebp jge cmp movabs cld xor mov pop stos pop adc sub mov pop stos mov push cli cld gs cmc cmp adcl jno sub jo,pt pushq icebp cmp sub fld cmp (bad) and push retq enterq adc rcrb (bad) in fcmove icebp shlb (bad) mov enterq fild and out adc xchg mov (bad) outsb jns movsb (bad) (bad) test (bad) or add push test xchg (bad) rex.WRB rex.R jo xor (bad) rolb rex.W sub pop lods rex.RXB cmp pop sub and sbb (bad) xchg push jg sbb cltd jl (bad) shlb leaveq insb out mov cwtl jbe or jle mov test xor add push cmp movsb rcrl cmp add mov push xor xor (bad) sub pop rex.RX rcrl xchg shr (bad) rex.W add push shrb rex.B fildl nop sbb jge incl and sbb push js movl (bad) lods fcomps and (bad) add lret sbb fdivrl test popfq std stc lea sbb cli sub lret mov fsubrs loopne sub lahf rex.RXB mov (bad) out pushq movb retq in cmp sub (bad) add mov scas rex.WX xor adc (bad) (bad) and pop in pop (bad) push pop rex.RX insb enterq lock (bad) pop es add pop (bad) add cmp movslq add xlat adc stos cmp sbb lock rex.WR imul mov loopne int3 (bad) and jmp hlt (bad) (bad) pushq rex.WX jno and jb mov mov es rex.WRX movsb movsb (bad) xor (bad) (bad) jmpq or shl cmp and mov movabs outsb es jg or lcall mov movsl push push cmc in adc mov sbb and push sub pop jmp xchg sub rex.B fs retq xchg std pop sub sub pop cmp push and sbb (bad) je push rex.X loopne gs fildll pushq (bad) or cmp rex.XB (bad) repz (bad) cmp ficom int3 rex.X pop cmp xchg pop fs imull mov scas adc in and iret rex.XB (bad) rex.XB data16 or jl lret cmp stos callq rex.WRX rex.RXB rex.WXB rex.B imul fwait (bad) fisub cmp mov es pop mov xor mov cmp fcmovb lahf cld push lret cltd cmp sub test add stc xchg rex.RX adc (bad) xlat xor rorb imul mov rex.RX (bad) (bad) orb sub jle rex.RX add repz rolb fldenv stc (bad) mov int3 add ds (bad) idiv push adc adc rex.XB mov rex.WX fs rex.RXB pop (bad) xchg shlb jg test pop rcl mull pop and (bad) push cwtl faddl mov xchg orb and sub cltd xchg iret add xor rex.XB rolb xchg mov movabs addb (bad) sub pop fsts mov (bad) xor cmp cmp fadds (bad) repnz lret sub or jl sbb fisub rex.B xchg or sahf cmpsl rex.X movsb ss add mov jle sbb ds cmp cs orl (bad) adc fdivs add int xchg pop fsubs xchg imul lock rex.RB rex.XB movabs mov or lahf rex.WRX or add sarb movabs rex.RXB movslq lahf out cmpl mov xor fsubrp (bad) fsts leaveq pushq sub push jae mov (bad) movsb rex.XB mov test imul (bad) sub add rex.WRB (bad) rex.X jns gs sbb (bad) jg push jg stos scas lods mov (bad) pop (bad) sbb (bad) sbb cld xor add xor imul test (bad) rex.WR (bad) cmp pop loope addr32 jb adc add rex.RXB and loope rex.RXB push sbb test pushq out jmpq test jmp pop or xor (bad) and popfq leaveq pushq sub xor xor callq popfq jle lret rex.WXB insl adc rorb jb out push adc (bad) enterw lahf lea xchg cmp cmp cmp rex.WRXB sub or push cmp and xor loope (bad) cmp in test rex.R out cmp bnd or ja xchg adc scas xchg mov mov movsb and repnz fmul cmp xor data16 lahf rex.R ss (bad) xor xlat mov jbe adc repz sahf test cmp lret xorl cmp push (bad) movabs (bad) rex.RXB (bad) mov sub rol cmp add and retq imul push (bad) fistpl lret movabs (bad) add (bad) jle jge or mov in cmp (bad) rex.W (bad) pushq (bad) mov mov retq pop fnop rex.RX mov out pop pop mov jbe (bad) add or decl js sub jmpq scas rex.X xchg pop fadds rolb push pop cmp mov rol add sti sar pop and callq push push clc sub retq loope pushfq (bad) (bad) mov (bad) jp sub movabs fimul (bad) sub (bad) out add add in je rex.WRB adc in out movslq jns jne cltd rex.WRB stos movabs jmp roll rex.XB movabs test (bad) mov jo pushfq push and (bad) addr32 adc movabs lret sub rex.X sub jle movabs cmp test stc cmp sub ds xorl repz (bad) (bad) pop xor mov sbb movabs out mov mov cmp mov (bad) push pop scas (bad) jge add (bad) cs imul (bad) sbb xor icebp sbb rex clc int3 pop sub clc xchg xchg jl rex.W pop nop sub in jmp repz cwtl rex.WRB testl cmp sub lret sahf rol (bad) insl (bad) fimul add movabs mov (bad) fmuls xchg jnp (bad) test rex.XB fsts stos (bad) ja rex (bad) rex.R jmpq popfq cli (bad) ss adc push rex.WRB incb mov xchg push in cmp rex.X xlat xchg sbb (bad) add and in cmpsl and mov (bad) and fs pop movabs (bad) jnp test mov sbb add pushq notb (bad) and mov rcrb mov fs sti fsubrs movabs repnz stos sbb mov or cli pop (bad) lods fidivrl and mov pop add (bad) and and cld mov rex.RXB push fimul (bad) test rex.WX nop scas xchg (bad) lahf sub mov rex.WR or add cmp cli icebp (bad) (bad) (bad) rex.WRX movabs hlt cmp (bad) push (bad) and xor (bad) jge rex.WRXB movsb pop lahf cwtl xchg iret movslq outsb xchg shrb push (bad) shr lret adc pop xchg movabs rex.RB (bad) cs (bad) cmp or movabs movabs jo or std mov rex.RXB rex.R sub callq sub out bnd (bad) mov pushq leaveq lcall or sbb (bad) and in (bad) rex.XB pop sub pop or shlb js rorl lret repz lret pop push jb leaveq push adc adc lock xor out (bad) callq (bad) add (bad) adc pop xor add int push xlat add js push rex.WRB movabs mov stc push and mov rex.RXB rex.WRXB insb and xchg add mov lret loope enterq fidiv nop xor xchg roll sbb loop (bad) rex.W and mov push xor add roll (bad) push mov adc int push cmp sbb sub out addr32 lret lret mov rcrl add or (bad) rex.RX loope mov xchg jae pop lahf pop rex.WRXB (bad) jle xchg or pop sub je stos mov (bad) leaveq enterq fldcw (bad) bswap movabs rex.R retq jp stos xchg xlat mov scas sti jmpq mov xor or xchg out callq xlat mov adc out mov cs sahf lahf in rolb int3 (bad) mov mov fistl jbe out sub leaveq rex.WRB push rex.WRX rex.B rex.WXB mov enterq pop cmp (bad) sub add cmpsb rex.WRXB rex.W callq push rex.RXB test (bad) push mov push pushq mov add int3 (bad) push retq adc add push rex.X shrl (bad) rex.B rcr retq fistpll xchg pop push ffree xchg and or clc ss rex.WRB adc xchg rex.WXB lret movsl rex.RB adc leaveq (bad) mov mov pop lahf (bad) rol cmp idivl (bad) cmpsl mov (bad) mov sbb data16 lea pop rex.B rex.B rex.WRX loop lock addr32 (bad) mov mov std ror mov jmpq sbb je sti push sbb pop loop (bad) jo adc (bad) sub sub cmp (bad) rex mov sbb jg movslq jno rex.X mov push push js fild cwtl shrl (bad) inc iret rex.WR mov rcrl and rex.W cmp sarl (bad) (bad) xor cmpsl xchg or (bad) push ja rex.B rex mov out retq mov jbe (bad) mov jno sub mov movntps rex.RB rclb cmp sbb ds (bad) rex.WRXB rex jae movsl add std sbb and add sbb je movb and add sbb outsl enterq rorb push movsl ror (bad) and push stc (bad) movslq push pop popfq add or addb fldl pop or push pop rcr mov fidivrl pop gs rcr andl movabs movabs mov push fnstenv (bad) push sahf add (bad) rex.RXB push sarl sarb push gs mov and pop rex.WRXB (bad) or push int add int3 data16 rex.WR lret mov lret gs pop mov cmp out rex.RXB (bad) or in add and (bad) add ror rex.B rex.B fild sbb or cmp (bad) rex.WRX pop nop rex.W push loopne xchg pushfq mov loopne fsub int stos rex.WRB jmpq rex.WXB and adc and lret (bad) xchg fiadd mov rex.WXB adc and cltd or mov lahf xor and movabs cs adc int3 xor mov or mov pop loop adc pop (bad) rcr jg pop lods or cmp imul imul retq xor (bad) jbe (bad) add (bad) sti xchg jmp mov imull enterq jp movb jbe rex.RX rex.RB rolb (bad) pop jp (bad) hlt rex.WRXB push fimull addr32 (bad) jmpq out movsl mov retq pushq vsqrtps rex.RB pop movabs (bad) sbb int and (bad) mov mov pop sbb or test out rex.R push (bad) rex.WR jge lret and imul cltd or int cmp rex.RB pop mov xor rcl sbb push adc mov addr32 rex.WR cld rex rex.WRB mov outsl xlat rex.RX rex.WRX rex.W (bad) rex.WRXB push rex.RXB push sahf rex.XB nop lock pushfq nop fnstcw xchg notl retq sbb jrcxz,pn fmull mov rex.WRX (bad) adc xor enterq iret jle adc scas push adc xchg std pop pop and xchg negl and and jnp cltd jrcxz fs push ja (bad) movd adc mov lock fldcw mov andb push enterq rex.WRXB pop shrb xchg xchg jnp rex.WB sub (bad) out lea pop mov gs (bad) movsb shrb cli (bad) (bad) mov cmp jne fsubr (bad) mov (bad) pop and (bad) fstpt jns movabs push out rex.WR (bad) lock mov (bad) (bad) cmc cmpsb retq mov test outsb adc mov jnp gs hlt testl pop pop test push add mov rex.RB retq jp cmc enterq repnz lea jbe pop (bad) push xchg fs add jnp add (bad) scas sub jrcxz rex.WRXB jp xor jmp test sahf mov gs push movsb add rex.RB repnz retq loopne pushq or cmp cmp sbb imul rex xchg jp fs xor lsl sarb rex.RXB and enterq cltd bts (bad) xorl rcll fwait sub and pop jmp test lock rex.RXB stos cltd and fisttpl (bad) (bad) enterq leaveq jae test (bad) (bad) fstpt rex es loopne mov shrl ja mov roll enterq fisubrl or fs callq xlat jnp callq rex.WXB div cmp pop ficoml rex.X rex imul ss (bad) testl cmp pop (bad) mov pop (bad) sbb (bad) push testb or sub add add fistpl lock and lahf rex.WRX xchg cltd mov rex.B mov std xor and pop xor add rex.XB rex.WXB sub rex.RB (bad) rcll movups jo push loop movabs (bad) mov cmp rex.W mov jmpq rex.RXB pop mov pop jg mov icebp enterq mov es jg out cltd adc enterq popfq add and stc cli outsl (bad) scas loope rex.R lods push movabs sub pop rex.WB adc (bad) mov mov (bad) (bad) xlat add jns (bad) callq sub rex (bad) movl pop rex.R jbe or rex.WRX fcoms imull mov rex.RB fiadd repz push es repz rex.RX push (bad) rex.W sbb adc push rex.W incl pop mov in add pushfq add orl fldl stc (bad) fadd adc ficomp (bad) clc cmp mov (bad) pushq sbb mov rex.XB mov (bad) cmp cli or sub cmp sbb sbbl cmp fdivs stos loopne mov xchg outsl rorb sub push mov pop int (bad) mov or rex.WR mov pushfq (bad) insl fldlg2 push sbb insl jae (bad) fs retq ss (bad) fwait add pop outsb push js (bad) (bad) and pushq push rcrb data16 push cwtl pop (bad) ss movabs in cmp movabs rex.WXB (bad) imul add rex.W pop rex.W rex.WRXB xchg jp movsb and sbb sbb pushfq movsb ffreep push xlat cmc jne test or lahf (bad) movsb (bad) (bad) (bad) xlat xchg or mov rex.WXB insb pop cmp adc pop fs adc (bad) pop outsl xchg mov rex.WRX lock cmp ss lock rex.WX xor jp ds roll pop shll ffreep js rex.WRB mov pop xchg sahf add icebp imul xlat push fimul jb jae fidivrl imul xor andl mov mov rex.WR xor (bad) (bad) jge sahf enterq imul mov rex.WRXB (bad) pop mov data16 (bad) push test sti stos or mov insb and pushq push rex.RX rex.R movabs stc fdivl (bad) add or sahf jne sbb jg cmp mov clc (bad) mov leaveq pop mov xchg out sub rex.R mov fimul imul adc mov adc xchg (bad) (bad) sbb or mov pushq (bad) repz jnp rex.RB pop or and mov (bad) (bad) movsb rex.WR imul lahf imul fild mov loopne (bad) pop outsb jp add jle (bad) sbb clc sub (bad) (bad) std and pushq mov mov push loope fsts jmpq insl vmovsd push sbb sub ror (bad) (bad) roll in (bad) jmpq ja cltd sbb scas mov pushfq fwait data16 inc xchg cmp jp test rex.WRXB jno rex.B (bad) fsubrs push shrl nop fnstsw jae jge push rex.WRXB test add icebp movabs je insb mov repz fistp loopne sbb and mov cmp (bad) int3 cltd repnz mov int xchg xor sub in fs imul (bad) push mov callq sbb faddl (bad) jge rex.WXB (bad) mov or mov addl lods mov (bad) leaveq (bad) retq and ja iret sub pop sub sti xchg in (bad) popfq movabs jg (bad) (bad) xchg and test push (bad) pushq pop xor pushfq cmp sbb cwtl rex.RXB mov jae mov mov rex.W pop xchg hlt mov rclb xchg outsb jnp jmp pop sbb test pushq orb cmp mov (bad) rex rex.RB cmpsb out imul sahf (bad) movabs rex.W (bad) or rex.W push rex.XB es adc jg xchg mov in adc (bad) mov hlt or test adc rex.RX jmp mov outsl mov mov cmpsb jnp mov retq (bad) and ja insl lahf sbb mov setne add mov (bad) loopne add cmc cld rex.WX rex.R mov (bad) mov mov push sub idivl movabs mov clc orl (bad) out (bad) sbb sub fiadd xchg mov and sub xchg data16 iret and (bad) fildl popfq jmpq jnp (bad) leaveq (bad) movslq movb xor (bad) rex.WR mov xor rex.XB fisttpl sub pop ds sbb (bad) lcall (bad) (bad) cmp (bad) scas sbb lahf enterq sti scas mov pushq jmpq jnp add and add push or xlat insb std test fnstsw out mov mov sbb xchg stos rex.WX addr32 jl (bad) pop ja jle (bad) mov rex.WXB rex.RX rex.WR rex.WRXB rex.WRB ror hlt out pushq rex.WRXB (bad) rex.RXB jp push callq out sbb out jmp fmull add int3 sub jge sbb xchg add mov sub mov callq mov and sub and add popfq in sbb or cmp movabs and enterq mov (bad) mov test repz fcoms jae (bad) mov movabs movabs jrcxz (bad) rex.RXB fcomps jmp jp repz (bad) (bad) (bad) or cmpsl out mov jmp mov sbb (bad) (bad) rex.WX or fsts popfq leaveq jbe or or pop sub loopne rex.XB sub cmpsb fst cmp jnp add add push fmull mov jge pop sbb hlt (bad) jno jns pop xor (bad) movabs xor jno push pop cmp rorb push addr32 (bad) push mov cld leaveq pop hlt mov rex.RXB retq cmp movslq fildll or jrcxz sub fidiv (bad) jo test nop in (bad) cmp incl sub (bad) out cltd push jb out jmpq (bad) scas and add rex.XB mov sub lock cld (bad) addr32 pop ss (bad) and (bad) mov jns mov ds es sbb (bad) in or scas pop fstpt jmpq jg rex.RXB rex.WR pop mov movabs (bad) sarl vsqrtsd fdivrs stos add fisub jae (bad) mov adc mov sub addl sbb (bad) movsl vshufps rex.RX push outsl mov imull sbb rex.WRXB cmp fldl2e rex.RB rex.RX (bad) (bad) mov pop mov cmp sahf movabs xor rex.B adc out sbb lods mul mov add jae cmp or (bad) test or insl rex.RXB jmpq (bad) in rex.WRB cmp rex.RX xchg and (bad) lret mov or adc mov jl pop lret scas mov (bad) pop and rex.R cs pop (bad) push sub add fs mov fldt in mov outsb data16 callq push mov adc repz punpckhwd loop sahf fmul iret cmpsl push adc add sbb xchg clc movabs push clc mov imul shl pop xchg adc cmpsl int3 or test fbld callq rex.RXB (bad) and ja add (bad) jbe lahf mov ja or repnz xor movb (bad) sbb (bad) ficompl movabs movslq xchg (bad) jge add andl pop rex.RXB faddl fnsave (bad) fwait or jge rex.RB cmpsl jmpq rex.RB cld add adc sahf xchg (bad) cld cs sarl jnp je mov out rcr (bad) out sub (bad) leaveq jo (bad) pop sub (bad) or scas xor push (bad) mov hlt cmp xor stos mov mov lock mov pop ja sahf cli (bad) adc or jge,pt (bad) mov fcomps movsb mov push rex.RXB ffreep callq mov cmp fistl xor xchg mov jo rex sarb sahf jae lods push rex.B cs imul clc push rex.RX add mul or addr32 rex.RB xchg or stc rex.X cmpsl callq cltd (bad) pop mov mov rex.RX and jo jp fidivl or and (bad) xchg pop rex.WRX loopne rex.WB rex.W rex.X mov mov je clc std rex.RXB fnop or xchg xchg in mov (bad) pushq ficomp addr32 add nop rex.XB subb or callq jl pop pop adc mov rex.RXB test fcoml (bad) add popfq sahf sub xchg retq push pop fstpl or mov leaveq mov adc je imul retq cs (bad) (bad) rex.XB lock (bad) xbeginq rex.X fs or rex.RB mov int iret sbb int pushq cld (bad) adc mov fbstp jne jne push test jo mov out imul (bad) sbb (bad) leaveq push (bad) cmp mov data16 fdivrl cli (bad) retq jg leaveq push lahf loope stc addr32 push add add out cmp test es movabs (bad) push pop jg or jnp jo movabs rex.X and rex.XB pop retq add test rex.R rex.XB rex.WR movabs (bad) (bad) (bad) xor jg push sar cmp mov lea xor in (bad) adc jns (bad) movsb pop or sub or xor sbb push rex.B cli lods sti callq jno sbbl mov shlb (bad) loope test (bad) sub jg (bad) xor shlb adc nop clc xchg movsl fiaddl movslq fdivs in push adc (bad) repz sarl and imulb xlat fwait or stc rclb pop push mulq rex and pop sub add jae (bad) and iret test mov fcmovbe enterq out movabs sub mov loope sarl mov mov stc in mov and mov movabs clc sub (bad) mov fsubrs mov or pop mov xchg pop (bad) (bad) lea test xor callq movabs (bad) push rex.XB mov xor fsubs test xchg push sub (bad) mov rex.WRB sbb fcmove rex.B adc outsb or mov or scas jns and mov movsb test rex.WRX callq subb rex.WRB movabs jge scas (bad) movsl sahf es pop lret scas outsl rex.W fs push xchg pop sarl jmp xlat and (bad) rex.WX xor shll pop adc fistp pop ds pop in rex.X lock mov (bad) add xor (bad) icebp retq retq int3 in out add sbb mov mov (bad) sub (bad) and (bad) mov repz rex.R rex.WRX sub sub cld (bad) pop or mov jmp add loopne shlb imul mov rex.RB or icebp add adc rex.WB rex.WX adc test sar imul loopne out cmp and mov and (bad) rex.X jg fstpl enterq jbe adc rex.B rex.RXB lock rex.WX cmp rex.WX es lods (bad) shr adc xlat rex.R rex.RX push (bad) push rex.RB pop adc (bad) pop rex.RXB sub fcomip repz mov rex.XB lcall mov mov retq mov rex.WX lret xor push or (bad) pushfq (bad) cld rex.WRXB add retq push rex.X push pop push pop jg rorl or rex.X rex.B push rcrb cmpsb or rex.RX rex push xchg stos and add mov (bad) lods rex.W rex.RXB shrb data16 vmaxps scas (bad) pop retq cmpsl jb (bad) rex.R or or movsb out (bad) repnz mov add cmp add in cwtl es mov frstor repnz mov (bad) xor rex.X push or ss (bad) pushq (bad) mov scas push movabs int adcl add sub cmp shrl (bad) mov test rex.RXB (bad) push shrl or sbb rex addr32 add sub mov jno sub rex.RXB rex.WRX mov (bad) pushq loope leaveq fild or mov cltd cmpl pop push push outsl movslq rol insl rcrl pushfq in std fist rex.W rex.WR rex.XB test cltd stos and fimull lahf cs jo or es adc (bad) fild add fcmovbe push int3 cmc jg mov rex.X (bad) mov and cmpsl adc jle and sbb and (bad) lret jmpq (bad) mov movd rex.WRXB loope in (bad) xchg gs (bad) rex.WRX (bad) (bad) outsb adc rex.WRXB mov (bad) callq rex.WRXB push movabs jge cmovno (bad) imul add sub xor (bad) mov fs cmpsl nop rex.B rex.RX addr32 movsb adc scas mov iret (bad) rex.RXB (bad) jmpq sub pminub fimull mov fbld insl loope rex.RB sub and adc jns (bad) mov push fidiv mov push movslq movsb xor push rex.R mov mov stos fdivs xchg gs rex.WR (bad) out (bad) rex.WX push stos xchg (bad) scas (bad) (bad) sarl retq or jae pop hlt (bad) out addr32 xor out cmp jle mov (bad) fdivp movabs neg fmul rex.R rex.WRB push sub mov (bad) lahf sbb mov sub stos rex.X mov lahf outsl (bad) xor leaveq (bad) or mov lock (bad) (bad) mov rex.WXB test stos rex.WX addr32 xchg stc rex.RX rex.WR retq callq pop (bad) xchg pushfq loopne rex.W rex.X mov pop lahf in or ds loope cmp cltd rex.RX xchg and rex.WRX (bad) pop cmpsb push test push fmuls outsb rex.RXB jrcxz pop movabs scas (bad) ficom js loop imul nop and movsb in xchg lock ficomp pop rex.WXB out fsubs xor (bad) cmp movsb and cwtl loop (bad) mov (bad) (bad) rex.WXB fsub hlt sti rex.B lret fsubr mov (bad) lret and xchg (bad) push out addr32 rex mov pop (bad) (bad) mov or movsl faddl rex.RB incl movabs (bad) add (bad) shll sbb cmp sar adc (bad) push cmp and movabs cmp mov pop lahf rorb (bad) adc movabs (bad) (bad) (bad) xchg cmp je out fidivl mov leaveq jnp adc movsl rcr (bad) rex.XB sub int (bad) sub push (bad) es fildl (bad) stos (bad) popfq (bad) xor (bad) enterq mov mov retq (bad) xor enterq mov cwtl hlt rex.B rex.W push enterq mov sub (bad) mov xchg sbb sar (bad) loope rex.RB movabs xchg repnz (bad) and adc rex.W (bad) (bad) enterq (bad) out lahf (bad) jp rex.RXB or rex.WX insl (bad) outsb insl add mov shr add (bad) fiadd sbb in cltd loopne push (bad) (bad) (bad) in movabs js mov jle (bad) lea (bad) or rex.RXB icebp or lods sbb insb rcrb fcoml and and pop insl fmul rcl add and rex.WRX mov pop callq notb cmp fst add insl mov add rex.WRB rex.WXB repz repz lret int3 and sub mov rex.X rex.RXB add fsubs rex.B lock retq pop push (bad) lods sbb push jrcxz fistpl adc cs pop or cmc rex.RB imul cs pop mov (bad) mov jo (bad) shrb xor js fdivl mov mov nop xor xor fcom mov mov push fcoml int3 outsb (bad) sahf rex.W lock rol or (bad) pop addr32 (bad) push mov mov (bad) mov pop (bad) mov rex.RB (bad) lret (bad) lea gs (bad) jne incb scas pop out rex.WRX and roll fadd repnz and adc rcrl mov rex push adc xchg movl xor fcoms rcrb xchg lret xchg movl rex.WRX in test push jb repnz rex.RXB rex ja nop rex.R (bad) fnstsw rex.R pushfq sub rex.WRB and (bad) pop or outsl out test jno and pop pop (bad) cmpsl js cmpsl fildl ror cmp stos xlat mov (bad) and movabs xchg pop lock movsl incb pushfq shrb pushfq scas cli sub pushfq in add rclb outsl (bad) lods (bad) xchg add rex.WR rex.R mov pushq (bad) (bad) rex rex.WRXB loop (bad) movsl or (bad) rclb (bad) mov xchg fstl sub out pushq rcl or (bad) scas data16 mov out rex.RX rex xor sarl mov xor and sbb loopne fmuls rcll cmp rex.RB jrcxz (bad) out (bad) fldenv rex.R retq in pop (bad) rex.XB and xor mov retq xor ds or rex.RXB jl rex.R (bad) rex.XB adc shrb sub jrcxz xlat jp sub cmp and movsb mov xor pop lock cmp xchg xchg (bad) cmp fisub rorl fisubl mov retq and movabs and addr32 es fnstsw cmc dec adc cld (bad) rex.R rex.WX fildl pop and (bad) rolb sub rex test rex.WRXB int3 test fcoml loopne (bad) mov std callq rorb fidivl mov fildl fidiv callq fsubrs fnsave pop mov movabs rex.WXB mov pop xchg mov pop mov mov int jmpq lahf sub int xlat fidivl iret fisttpl popfq fsubr mov out xor scas retq addr32 add (bad) out out fsub and lret rex.R mov es cmpsb pop push (bad) (bad) cwtl rex.WX rex.WX rex.WRX rex.RXB rex.RXB insl and fisttpll mov jrcxz cmc add and push (bad) movabs or rex.WRXB adc (bad) callq ss in add mov cmpsb cmp rex.W jge add sub sub rex.WRX (bad) cmp rex.R js retq (bad) adc fbld cmp add faddl push sbb rcrb sbb adc (bad) cmp rex.WRB lret sub rex.RXB clc (bad) (bad) jle stc xor mov movabs sub movabs sahf and add test lea pop push fnstsw (bad) iret fistpll (bad) mov js (bad) sbb and add rex.WRX rex.RXB mov rex rex.WRXB shr rex.WRX xor (bad) scas retq add shlb hlt scas jb rcrb adc push cmp rex and scas jno movabs rcl fcomi ror sbb imul adc rex.WRX test rex.WRB movabs pop ror leaveq sbb outsl or push (bad) lret retq push (bad) rex.WXB repnz adc (bad) movabs in mulb cmp or cmpsb pop push (bad) pop fdivs cmp push jo movabs (bad) pop adc stc and shrb in rex.RXB push testb (bad) lret add imul and jno lret mov (bad) cs cli rol push (bad) in int3 testb leaveq cld js movsb mov lods fadds (bad) rex.WRXB lods rex.WR rex.W adc out sarb (bad) xor iret scas add (bad) (bad) (bad) cmp mov (bad) movslq jo rex.RX flds add (bad) and movabs and adc add movabs (bad) add rex.WXB jo rex.R cmpsl pop cmpl cmp mov insb retq movabs xchg data16 mov insb pop or fcoml pop fcomps setl imul (bad) sub mov (bad) movabs (bad) jo retq mov (bad) fadds push out mov insl ss mov movabs ds retq mov retq shl and mov pop cmp cmp sbb sub sbb mulb jnp (bad) push mov ss sbb push in (bad) ss mov cltd incb (bad) in and movabs (bad) pop retq retq icebp scas xchg sarb mov mov (bad) adc movabs mov pop push (bad) popfq test rex.WR in fisttpll mov cli (bad) xchg rex.WXB rex.R (bad) lahf xlat sbb cmp pushfq insl rcr (bad) (bad) xchg mov and rcrb (bad) movabs mov adc (bad) in cmp or and (bad) sbb sbb (bad) xor fsub lret fidivl jg xchg push cltd cmp rex.RXB jne outsl (bad) outsb (bad) (bad) rex.WRXB sbb retq clc pop sbb movabs (bad) pop (bad) jno adc adc mov fs rex.XB (bad) shlb fsubrp ss (bad) fsubrl (bad) add (bad) jrcxz shlb (bad) mov retq (bad) cmpsl jg adc (bad) pop rex.X js (bad) movslq pop (bad) push cmp fisubl add retq sbb out sbb movabs sbbl testb push push xor rcl (bad) add xor adc loop jns xor or or sbb fstps pop sti rclb movabs out rex.X pop (bad) rex.WX int (bad) rorl (bad) lods rcrl jbe imul adc pushfq imul (bad) (bad) addb pushfq jne xor rex.R cs fild mov (bad) cmp rex.WRX xor push mov (bad) push (bad) rex.WRX cld pop icebp iret iret fs add nop fs rex.WR callq cmp (bad) xor cli mov je add in lock lea sub xchg rex.WXB cmp imul jnp movsb pushq cmp in (bad) cmp mov sub (bad) mov sub push or add push pop push rex.WR mov jmp outsb jmpq (bad) ror mov (bad) or rex cld pop (bad) loope sub xchg mov adc je adc mov pop adc (bad) mov retq push lea mov xchg mov jmpq cltd cmc cmpsl sub loopne cwtl xchg (bad) testl rex.RXB adc add pop sub and jp and cltd icebp mov (bad) in sbb mov outsl (bad) fiaddl iret insb cmp (bad) adc jge in mov and (bad) or mov xchg (bad) cmp movabs (bad) rex rex.RX rex.XB mov movsl and movabs rex.XB rex.WXB rex.RB rex.B mov rex.RX (bad) jbe out mov in cld mov sbb mov push pop mov fidivr callq loope and mov rex.W (bad) jmp mov mov fwait mov jns mov sub xchg mov (bad) callq out xchg movabs rex.B rex.B sbb jbe jmp rorl cltd scas (bad) (bad) out cltd cmpsb rex.WR and incb rex rex.WRXB out rex.XB rorb rex.WR cmpl popfq cmp mov jl rex.X fs imul xor fmull pop imul in in lret (bad) or push xchg or xor xlat jrcxz ja (bad) loopne add sub lahf (bad) adc rcr imul lods or (bad) je pop (bad) or insl (bad) (bad) rex.WRB outsl leaveq cwtl jl rex.WRX in (bad) es movabs jmp mov int3 jne popfq (bad) fnstenv rex.XB jae,pn outsl dec movabs cwtl movsb fs js jb xchg imul pop jnp movabs es xchg (bad) (bad) (bad) lahf xlat cmp loopne push cltd int3 sub out leaveq es and sub retq clc sub (bad) fildll mov cmp sti cld (bad) mov retq push fcoms (bad) rex.W fidiv mov rex.RB fisttp or cmp mull jl xchg and and pushfq or jns pop divl lock adc (bad) push sub (bad) or loope sbb xchg loopne (bad) cmp enterq sbb or add clc or (bad) rex.WR loopne loope outsb xor sub and mov out rex.WR add mov mov jl (bad) and outsb adc (bad) mov cmp cmc rex.X test and mov out in cmp jmpq jbe rex.WB rex.WR repnz (bad) pop rex.WR pop fadd callq lret fsubrp rex.WRX (bad) and cmp and mov (bad) rex.RX push addr32 cld or sub jo cmpsb retq add or mov (bad) sub (bad) mov xchg pop ds movsl jae rex.XB addb stc rex.WX rex.WRXB pushfq movabs std test stc sub or test or rex.WR lret movabs adc rclb mov lock pop rex.XB jg pushq and mov out adc pop rex.X adc out jmpq xlat (bad) cld fisubl outsl jl sub pop sub rex.WR (bad) loope fldcw (bad) outsl out movabs loop sub push cltd pushq and popq lock shr movabs cmp sub movabs cld xchg sbb mov movabs cmp jne stos and sub mov mov mov (bad) callq sub and pop pop sarl xorl imul retq rex.WXB mov lods callq (bad) rex.WR ds push mov callq (bad) fisubrl jge std stos rex.WX and pop jb rex.WX rex.WR (bad) (bad) mov push or mov pushq cmp (bad) or in or orl fucomp imul xchg movsb mov insb sub std lret mov sub rex.X loopne and add (bad) sub shlb jrcxz push (bad) vandnps sarb mov sahf xchg xor cltd out push movsl rex.WR ljmp add fsts (bad) mov jle rex.RX fist out rorl lea or ficomp clc push rex.RXB movabs adc pop stc mov pop fldl2t out out nop insb adc add rex.WRB sub lea retq xabort fldcw rex.WXB rex.W rex.WR (bad) callq cmp popfq imul nop (bad) outsb mov jge shll and xchg (bad) (bad) repz and movabs (bad) adc xor or rex.WR movabs push or (bad) rex.RX je fmuls jbe mov (bad) jno rcl (bad) cmp mov sbb rex.XB (bad) mov or push xchg imul pop xor (bad) pushfq or pop flds pop rex.RX mov sub add push fildl rex.WR jns fwait sub popfq mov cmp (bad) roll pop ud2 (bad) enterq sub adc insl (bad) and and cltd jns retq rex.WRB sbb xorb push in push pop sahf out cmpsb ja mov pushq rex.RX xor shll and and push jno mov mov push (bad) out pop xorl (bad) (bad) mov pop retq jns imull or sbb cmp scas or cmp mov pop add rorb and nop (bad) pop test xchg xor xlat (bad) fdivs inc rorb xchg movabs (bad) imul pop rex.B rex.WXB rex.XB rex.W push rex.RB rex.R rex.WR es push fcoms pop (bad) push rex.WX sub push cwtl mov jg adc rolb rex.R rex.WXB out jnp test jo retq mov rex.X xor jns or and rex.W rex.WRX loope cmp (bad) sub repz mov pop cmp push movslq cld (bad) jge rex.RB rex data16 test or incl rex.WB push xchg rex.XB rex.W cmpsl push shlb js enterq movslq rex.W mov or jp (bad) stos or icebp sub (bad) rex.X gs rex.RX fs fiaddl and add fistp (bad) (bad) or cs (bad) push fsts es rorl out movsb jmpq vmovd movabs pop rex.W imul repz fsubl jge (bad) pop movabs rex cld or or (bad) movsb xchg (bad) rex.RB sub rex.RB rex.XB or hlt cmp pop (bad) and lret pop fs push fcompl jl (bad) mov rolb rex.WB rex.WRB mov out fisubl in rex.WX imul (bad) and fs iret rex.WR (bad) xor (bad) jge or fdivs leaveq cltd push and sub outsl rex.B sbb insb lods rex.W cmpsl (bad) movsb mov add rex.R rex.R rex.RX (bad) rex.W jno and (bad) mov popfq loope jmp lods popfq rex.RX rex or or test fcmovu add fwait sbb sahf (bad) mov push mov rex.WRXB movsl sub dec sbb rolb sbb sub (bad) pushq rex.WR (bad) enterq pushq callq jle enterq (bad) mov or xchg jle sahf mov jp pop sub mov pop or fimull jmpq outsb rex.XB rex.WR ds (bad) lahf leaveq test mov mov shlb (bad) jne (bad) imul rex.WRXB mov fisttp mov or outsl (bad) rex.R jrcxz (bad) enterq in lods shl xlat cwtl movabs je (bad) std rex.RX leaveq jnp mov sarl and pop (bad) sbb jrcxz imul lret rex.W rex.WX jns (bad) or add cmp outsl xchg rex xlat cmc es nop pop fisttp mov jo lock ffreep addr32 repnz push mov (bad) outsb (bad) mov (bad) (bad) std loope pop (bad) out and xor sbb movsl lahf pop jl (bad) cmp callq (bad) mov stos adc sbb pop rex.WR (bad) pop push jl sti add repz push add sub mov sarb and data16 pop sbb jg movsb add xchg mov mov pop fsubrl mov adc fildll rex.RX insb or rex.R retq out xor mov push movsb jrcxz mov jg mov pop add outsl cld rex.WB lahf (bad) sub cwtl loope pushfq or jrcxz andl movabs hlt jl emms ds sbb xchg sbb (bad) clc flds lods (bad) push leaveq mov adc popfq mov cmpsl and pop add loopne sbb rex.RXB pushfq rex.WR rolb movsl mov rex.WRX fbstp fisubr xor std adc xor add mov je test test (bad) jo xchg jrcxz sbb ds fdivl stos ljmp rex.XB rex mov push and jno add repnz movabs adc mov ficom jno insl or scas enterq lret and cltd pop jle xchg rex.WXB faddl rclb rex rex.W and or rex.R or xchg movslq rex.WXB rorb rex.W (bad) sbb decl pop jns sbb pushq cmp mov add lret xchg jl or clc test (bad) fcomps imull xor (bad) jg (bad) test add sub mov negb sub jmp adc xchg xchg or mov rex.RXB adc xchg sbb adcl mov (bad) (bad) jp (bad) rex.WRXB out cmp es (bad) lock repz movabs (bad) cltd fimul mov cltd insb jne mov xchg adc (bad) cs pop mov (bad) sahf (bad) addr32 rex.RX mov rorb sub mov xchg rex.WR pop jg ds cli fwait out jne rex.RXB imul jmp lea cld cmpsb push test enterq or push rex.R and (bad) fs (bad) rex.W stc in out loopne loop jp adc (bad) outsb jbe sub rex.R subl mov loope adc fildl movsb pop rex.RXB ja rex.WXB mov je outsl ss rex.RXB rex.WR (bad) repz imul rex.WR test xchg push rex.W js mov (bad) ficompl rex.RXB enterq cmp cmp (bad) rex.WR jge fisubr add sub fdivs xor rex.WR pop and (bad) mov rex.WX pop enterq negl xchg (bad) loopne jmp cmp popfq out sub in and rex.WX rex.WXB outsl mov add cld rex.R mov popfq and icebp (bad) (bad) rex.WRB rex rex.W rex.W adc adc cmpsl sub (bad) callq leaveq jl jp adc imul movsb gs jae rex.WX lea (bad) sahf in insl cld jbe push sbb fcoms xor xorps fucomip ss mov movabs (bad) pop repnz fmull in ja rex.WRXB rex.RB stos or fistp or rex.WR rex.R xlat xchg cmp xchg and (bad) out pop retq mov shlb (bad) push (bad) rex.X rex.RX mov jmpq callq sarl rex.WXB jb rex.XB xor mov out sahf (bad) lret xchg sub cs negl shl (bad) (bad) xchg outsb adc sahf and and pop rex.WRX mov rex.RB fiaddl andl loope addr32 mov sub in out mov enterq cmp push rex.WXB or fdivrs cmp sub enterq mov xor (bad) sti mov jg xchg mov mov fisubl (bad) mov bnd leaveq iret sbb mov rex.WRX rex.WX (bad) rex.W lahf callq (bad) (bad) rclb cmp movabs in out rex.R xorb (bad) fucomp iret adc add insb jnp (bad) negb enterq in scas add scas adc pop or (bad) fsubr (bad) add fwait lahf mov rex.RXB jo and jmpq fcompl pop rex.W (bad) rex.WR lret push sub cld rex.W scas mov addr32 jae in sbb scas (bad) xchg rex.RX mov mov out mov shr or jmp rex.R mov pop mov rex.XB (bad) pop mov notl rex.B test xchg cmp addr32 or cmpsl (bad) sub add pop cmc rcr sbb sub xchg (bad) and (bad) test in rex.W callq rolb (bad) cmp sub mov cli (bad) movabs mov mov and jge ja retq xor sahf (bad) fnop xor add add (bad) shl sub cltd rex.R rex.WR (bad) rex.RX lret shll movabs sbb xor jmp jns (bad) cmp jnp rex.RXB pop in movabs or movabs sbb sub movabs xor fs mov roll rex.WRX xchg and movsl rex.WX test movabs movl and rex.W movslq lcall mov imul test (bad) rex.WX add jmp jo mov add push insl rex.B or jbe xor stos and or (bad) repz enterq jl sub in repz xchg retq or adc add pop pop (bad) rolb rex.X out sbb rex.WR (bad) (bad) gs xchg cltd popfq shlb pop sbb pop popfq rex.WX cmp lods rex.RXB pop outsb adc jns (bad) mov sti push pop xchg (bad) xor fnstcw jge adc movabs (bad) xor and sub cs lret cmpsl cmp (bad) fwait xor or callq addr32 out and rex.RXB rex.WX lock cmp rol (bad) jne sbb lahf lock lock sbb int sub out icebp callq pushfq (bad) data16 ds rex.WX jmp fdivr rorl movabs lret movabs rex.RXB rolb rex.WRX rex.WRX mov fisubl out xchg cmpsl ja add sbb in imul xchg sub pop loope fimull loopne jp es push decb popfq or or sti or cmp rex.WRB xchg sbb jge and sti adc xor rex.WRXB (bad) mov shlb pop int jmp movb rex.WR adc lea xor xor imul retq add movsb jle or mov jno rex.B sub or movabs sub (bad) mov jge cmp or xchg out (bad) xchg je add xor stc loope out xchg and lock cmp (bad) dec add (bad) (bad) fcoml pop rex.B fcmovb pushq enterq rex.WR fsts outsb jnp push sahf sbb rcl rex.WRB insl xchg fcmovb loop clc andl sub fldenv cmp rex.RX rex.WRXB pop (bad) rex rex.WR stc rex.WRXB (bad) rex.R mov sub (bad) mov (bad) outsb mov mov jle pop cltd in jp jne add pop or (bad) rex.WRXB add xlat mov (bad) js and jnp pop and (bad) rex.WR mov test jrcxz or callq enterq rex.X fldl2t enterw cmp pushq nop gs movabs sbb mov sti pmullw outsl lret loopne pop jl (bad) or add enterq movabs rex.XB xlat (bad) mov sti enterq ja (bad) cmp jl sub (bad) jbe rex.WRXB mov fsts pop ss sub test jbe (bad) push push adc mov xchg out jp rcl add retq mov rex.WX sub rex.R mov je mov jmpq rex.WR rex.WXB in mov (bad) pop cmp push (bad) pushq jrcxz jne movsb fwait jne or (bad) (bad) mov sub jbe rex.RX jo leaveq sbb scas xor adc push rex.X jmp pushq cmp mov xchg rolb paddusb mov (bad) pop rex.R pop sbb (bad) rex.RXB fdivrs test or gs and jrcxz add movsb pop cmp out pop sbb repz rex.WRX sub in and xchg (bad) hlt and mov test fs test (bad) sub mov lock callq (bad) rex.WR pop imul lods sbb push jmp and out pop (bad) (bad) rex push rex.WB (bad) rex.WR test mov (bad) pushq (bad) in or mulb (bad) loopne and jmpq mov sti lahf (bad) (bad) adc lock rex.R rolb mov rex.RB push xor mov jg rex.RXB pop jns movabs mov mov xor callq rex.WRB xor (bad) jg push movabs rex.RXB rex.XB pop rex.W pop callq pop retq mov mov int3 pop (bad) and rex.XB cmp divl cmc sbb andb pop (bad) adcl sub or xlat idivb mov callq test in movsb mov test nop (bad) or mov (bad) jmp cmp (bad) data16 jae popfq fisttp add test pop rex.WRXB cmp and scas mov push test out rex.WR xchg callq and pop pushq rex.WRB rex.WRX add mov leaveq cmp xlat jrcxz (bad) movabs (bad) addr32 testb cmpb push jmp and rex.WX sub push xor pop rex.RXB mov and add movsl cltd gs outsb (bad) or out cwtl mov or (bad) xor rex.X maskmovdqu imull shrb (bad) test (bad) rex.WRB testl push jrcxz rex.XB or pop sub jmp out movabs (bad) sub callq rex.WB pushq in mov rolb sarb fsubrl adc mov (bad) enterq cmovbe mov callq mov popq hlt pop movabs mov int and insb add add jrcxz (bad) int3 mov or jg mov sub jle mov lahf ja jns push mov jl adc out enterq jo pop add rex.WRX push test popq (bad) (bad) in out and movsb in insl (bad) sub rex.X add rex.XB data16 (bad) (bad) pop rex.WRXB push mov fcmovb (bad) (bad) data16 data16 rex.W pop sub loope mov rex.XB idiv out and pop stos movslq (bad) (bad) pop cs popfq enterq mov pop mov mov mov xchg movsb outsb adc sub mov mov push fisubl data16 rex.WXB ds xchg rex.B addl adc jg (bad) mov outsl mov frstor fs cmp and mov lods loope test stc pop lods cli mulb mov mov in (bad) mov (bad) lock (bad) rex.RB test jbe (bad) mov xlat xor retq cmp and jo adc (bad) fsubs adc add (bad) lahf retq xor nop fisub (bad) decl jno int and sahf rex.RB rex.WRB rex.WR xor ss pop rex.W rex.X cli shlb loop test imul rex.RXB icebp push out out pop pushq xchg rex.RB (bad) enterq fsubs data16 movsl nopl fwait movslq pop adc or mov iret pop mov sbb sub push jmp push addr32 xor ror or mov (bad) fdivs mov pushq loopne insb frstor orb sub sarb movslq sti stos rorl (bad) (bad) movslq pop mov movabs pop popq test cmp adc movsl pop add pop mov test rex.WX (bad) mov adc popfq pop adc and lock fcmovnb jo sub adc test stos xchg in test rex.X rol sub (bad) imul (bad) pop pop jg pushq sbb (bad) mov fs adc rex.WR pop cmp rex cmp pop repnz cwtl mov movsb jmp loopne sub (bad) jrcxz add mov push mov mov iret adcl popfq mov pop cmp cli rex.RX rex.RB cld cmp in mov and mov mov (bad) pop mov rex.RXB sarb and adc clc scas imul xor rex.RB std out roll add jle (bad) (bad) (bad) jl scas lret xor pushfq (bad) callq out cmp test movl retq fs mov (bad) out movsb add in xor mov out (bad) je (bad) rex.WR xor (bad) or cmovge (bad) imul adc rex.WXB lock rex.WB fxch mov sbb cmp and push movsb push jp callq outsb mov rex.WRB rex.X test mov push sub (bad) mov jle adc or (bad) outsb (bad) cli cmpsb sbb rex.WRX adc sub retq movabs callq fwait in or (bad) xor outsl cmpsb jmp movabs (bad) out xchg imul stc adc mov (bad) or out cmp jmpq (bad) leaveq pop movabs rex.RX (bad) mov cmp push rex in and movabs jg (bad) notb (bad) rex.WRXB rex.WX (bad) mov push pop and int3 in movl mov andl xor ja rex.W lock cmpsb rex.WR add callq rex.XB rex.X stos mov loope mov xchg es vmovaps bsr (bad) out and push lret mov int mov enterq lock (bad) in adc movsl mov shl (bad) or popfq sub rex.WXB rex.WRXB rex.RX loope retq out out retq lock out lods rex.RX mov (bad) jo and xchg rex.RXB out jmpq sub cmpsb imul mov mull adc movsl (bad) push adc sub movabs push movabs mov (bad) rex.WRX and cmp scas lock ss jns cld xor rex.WR mov sub rex.WXB mov movabs sbb or (bad) xlat mov (bad) rex.WR push ja mov add jno fdivrl out movsb jg sbb enterq (bad) sbb in gs jp rex.WR mov add push jg icebp jrcxz push and push jno rex.W push mov insb fadd mov or mov addr32 addl rex.WXB and movslq and xor outsl rex.X rex.RX loopne callq imul gs adc rex.R nop rex.W out test outsb xor outsl (bad) push loopne jmp enterq mov and lret sub add movabs enterq test shr loope mov sub cmpsl rex.B addr32 adc add xor mov cltd rex.RXB rex.RX rex.R cmc repnz and mov in rex.X fidivrl lar js and mov test or pop scas cmpsb jmp push add movabs (bad) sub addr32 sbb mov repz (bad) (bad) mov cmp rex.WR ja (bad) fist jge adc rex.XB pushfq cltd rex.WR sbb retq rex.XB movslq rex.RX mov (bad) adc movslq jo jae rex.RX adc adc imul movslq xchg int3 sub (bad) (bad) (bad) (bad) vpsubsb (bad) lret and (bad) scas rcrl xor lock jno movsb rex.WR lock push pop jbe mov movsb xor rex.RB stc jo pushq leaveq movabs and mov and xchg (bad) pop (bad) stos test pop fiaddl push rex.B data16 (bad) movabs data16 int rex.X pop hlt je stos mov xor rex.WRXB lods jmpq cmpsl (bad) jmpq pop js rex.X mov ss ss movsb rclb or movslq fildll and add mov and movabs rex.RXB (bad) fucomip (bad) loop shll mov mov shrl (bad) addr32 jns jmp adc and movsb shrb imulb jne mov pop rolb (bad) es fs add mov pop sahf jno xor lcall movabs (bad) jns pop (bad) movslq movsl mov int in out push stos jmp pushq shrb and lods std push fsubrs mov jae shrl cmp rex.WR sbb in (bad) (bad) (bad) imul push outsl push retq jge adc movslq xchg rex.RXB jb or movabs cmpsb push icebp and movabs rex.WX sbb xor and sbb cmc or (bad) rex.XB (bad) and mov int3 movsl test (bad) jge sbb inc mov rolb (bad) add (bad) and rex (bad) xchg mov jrcxz shlb std jg (bad) outsb rdtsc mov sbb or cld pushq rex.WRB rex.RX repz pushq cmp rex.X mov imul pop push addr32 pop xlat jg es ds rex.R cmc rex.RB rex.WRB rex.RX pushfq rex.X imul cli rex.RB jne (bad) hlt scas cltd add nop adc xlat (bad) fldt cmp xor lock loopne out fucomp push or jmp sbb lods leaveq (bad) jbe (bad) (bad) mov fucomp sbb xchg or or jo xlat cwtl sbb (bad) pushfq push and (bad) iret pop movabs cmp push movabs (bad) out (bad) enterq or xlat pop rcl retq jbe cmp and (bad) (bad) movabs and outsl sbbl negl rex.RX outsl and jrcxz (bad) callq std add xchg (bad) push and scas rex.WR xchg pop mov (bad) lcall rex.RXB lret (bad) insl cmp (bad) loopne js pop (bad) (bad) sub (bad) and hlt jo rex.B rex.R sbbb (bad) mov je mov movabs and mov cmpsl jno jmp adc push retq out mov insb ljmp or imul rex.XB fsubrl mov mov movabs cmp push rorb mov push and cmpl nop and rcr or sbb cmp (bad) in (bad) cmpsl mov sub xchg shrb movsl outsb pop and cmp (bad) sbb (bad) sub data16 xor rex.RXB gs jl cmp cld or cmp push (bad) addr32 sub mov cmp sub pushq add add mov rex jmp xchg fmull rex.R cmp jns sub in (bad) push jo test mov rex.WXB rex.WRXB or (bad) sbb xor mov or in cmp rex.XB lret fs add xchg jo sub pop sbb mov loop jne jrcxz cs (bad) nop pop adc sbbl (bad) mov add lret fs (bad) out sbb callq or test sbb loope mov mov pop loope rex.RX addr32 movsl jrcxz sbb (bad) retq shr (bad) (bad) mov cmp jno pushfq cwtl ss jne xchg jp push push lods movabs rex.WR insb callq jg cmpsl repz fsubrl out out ficom mov loope enterq xchg sub cwtl mov rex jo and callq jo mov mov and (bad) repz cmpsb (bad) jmp or push pop nop cmp (bad) lret fisub gs outsb fdivrs lods (bad) cltd scas lahf outsb mov push (bad) fwait adc fisttp add (bad) rex.WRX jbe in es push (bad) pop mov (bad) cs mov sahf push push mov (bad) rex.W rcrb mov cli or lods fsubp mov (bad) enterq int fucomip mov int add rex.WRX pop push movabs xchg enterq cmp lods movsb imulb (bad) enterq xlat mov xlat movabs mov sub mov out insl jle sti or sbb cmp loope sbb (bad) push mov fisubl adc mov (bad) stc mov (bad) (bad) iret and lods outsl std repz rex.WRX stos cmp mov pop jnp sub outsb mov sbb push mov sbb lea xchg (bad) and xchg jne retq rex.W (bad) cs shrl jl add xchg mov (bad) rex.RB (bad) (bad) lahf push (bad) (bad) or (bad) mov and rex.RXB cs rcrb cld sarl (bad) (bad) and mov mov mov (bad) (bad) shl repz jrcxz (bad) pop fisubl rex.WX add sbb jmp lock rex.RB rex.WXB xor (bad) rex.WRB jne pushq xor cs add addr32 shll fdivrs add sbb xchg sub xchg add test rex.X out rex.RXB sub jp sub lods and enterq (bad) (bad) sbb jbe out mov add (bad) mov mov xor cmp jbe cmpsl fsubrs pop mov imul lods movabs xor pxor rex.WR rex.XB sub (bad) sub fnsave add movl or test rex.RB jmp rex.XB rex.RXB clc sub fdivs (bad) jmpq xor mov mov out hlt sub mov mov (bad) mov push js lea movabs push (bad) cld xchg jns clc imul or and sub pop (bad) (bad) add (bad) loop in mov and movabs repz movabs rex.RX addr32 in mov scas sub push out addr32 cmpsl (bad) add fsubs cmpsl add adc jns (bad) fidivrl jno rex.RB loopne add sbb enterq repz rex.W out callq sub out movabs pop xor pushq (bad) adc xor movsb (bad) movabs rex.B jg jle imul test movabs insb cmc pop addr32 sbb pop cwtl xor (bad) sbb fcomps insl out xor movabs jle movabs and adc enterq enterq clc sub (bad) push (bad) cmp test pushfq xchg rolb or pop cmc cmpsb and mov subw push movslq iret mov or sub mov cmpsl (bad) fisubrl (bad) jmp sub sub xchg (bad) or (bad) pop pop (bad) js xor fcomps sbb jnp rex.X (bad) rex.WRX cmp mov pop leaveq jge fisttp mov lock rex.X rex.XB rex.WB callq pop (bad) cmpsb add mov sbb mov xchg (bad) and addr32 rex.XB (bad) and and mov xor sbb push gs lock imul shrl pop (bad) (bad) (bad) or jno or sub retq jb out mov and retq fldt (bad) and push (bad) push xor push nop rex.WR rex addr32 pushq pop int movabs rex.RXB jrcxz jnp rex.B imull mov pushfq lock jnp sbb xchg (bad) stos pop (bad) xlat add cmpsl jrcxz mov out mov rex.RB add mov or setbe clc enterq mov or or sbb rex.WB rex and (bad) scas and fisubr jo add rex.WXB or add mov rex.W rex.RXB rex.WX cmpsl and iret (bad) rex.XB jb add cltq xor movslq pushfq in in xchg data16 and out (bad) rex.WR add (bad) cmpsb adc sbb icebp test lock and scas (bad) rex.RXB xor xor push jo popfq adc rex.RB fisubrl jo and roll adc cld (bad) test xchg movsb xchg and enterq pop rex.R test mov rex popfq leaveq adc (bad) pop mov js cld jno xchg setns pop rex.WRB fistp test sbb xor jb mov fcmovnu in push outsb jae push jbe add sbb sub callq ja in fcmove cs sub repnz mov cwtl jne fisubrl movabs movsb rex.RX mov lods jo mov lahf mov push or and or cltd (bad) rclb adc fisttpl xor or (bad) xor out adc in nop out leaveq cwtl cmc cmp jne repnz and jns mov sbb cmpsb cmp icebp fsts rex.WX rex.WRX rex.RXB rex.WRXB xor mov cld test (bad) pop sub rex.WRB (bad) jmp sub (bad) or xor and fnstsw mov (bad) mov repnz mov rex.WR xor mov in test adc jo rex.RXB or pop movabs (bad) lret jne sbb outsl es xchg xor xchg out (bad) mov rex.RXB mov xor out or rex.R (bad) push movslq sar pushfq fbld addr32 cmc (bad) add gs add rex.R mov xlat jno repnz xor sti (bad) adc jno jo (bad) pop jnp rex.X enterq xchg mov mov xor mov rex.WR rex.RXB lods sbb rex.R mov (bad) lea std pop movabs je loopne testb lock mov rex.W fs mov jge and fsubs rclb xchg lods mov pop insb fdivrl cs out stc fdivl data16 fstps (bad) loopne mov outsl and adc sbb movsb out enterq sbb out xchg xchg (bad) push loop mov nop (bad) rex.W ds sbb mov pop (bad) or callq jne movabs (bad) cmpl cmp jp gs callq jrcxz js sti test (bad) sub pushq add mov mov and fwait adc xlat dec adc insb jnp sub int3 lret cltd cmp jae xchg (bad) add (bad) mov add ss movabs rcrb (bad) rex.WXB shll and cwtl (bad) jno rex.RB xor callq shrl (bad) (bad) (bad) sbb (bad) (bad) fsubs mov fiaddl sub mov icebp cmp mov or pop cmovbe push test (bad) cmpsl mov lea test mov sub test push fisubr sub retq xor pop xchg xlat mov (bad) stos ror add mov xor rex.RXB push jno push pop (bad) pushq push rol callq rex.RXB repnz insl pop jrcxz (bad) fs cmpsb or or cmpsl std (bad) lods adc xorl or xlat cld out add je xchg test and pop pop retq push mov and add adc mov pop addr32 out in add pop out movabs outsl scas pushq rex.WXB insl gs movabs mov xor addr32 jp rex.RB add add rex.RX and push pop sub (bad) sbb push mov movsl add imul movsb retq cmpsb (bad) out and cltd rex.W stc pop rex.WRXB fwait enterq addl popfq stos (bad) mov mov (bad) rex.RB (bad) (bad) push rex.WXB sahf (bad) (bad) callq fsubl sbb mov (bad) enterq syscall nop pop xor enterq rex.RX lock clc sub enterq adc cmp cmpl rex.R ja and rex.WRB rex.RXB (bad) mov (bad) outsb std pop push xchg (bad) icebp xchg xchg cltd shrl in movsb rex.WRX rex.WRXB movb xor fmuls (bad) cmpsb jns mov movsb cmp (bad) (bad) notb divb cmc out mov out fidivr jae fisubrl out rex.WX xchg out or rex.WRXB lock pop mov rex lock outsb push (bad) cmp pushw rex rex.RXB rex.WRB rex rex.R mov retq (bad) and sub lock jns (bad) xchg movsb (bad) or movd push (bad) lods and (bad) (bad) fmull test (bad) sbb jae sub (bad) cs xchg insb ss (bad) sub test xor mov fdivl nop rex.WRX mov cmpsl ss insb and rex.WXB iret pop and pushq xor push add loop adc addr32 scas iret enterq cmp imul fild out and sub idivl out or cmpsq loopne and fild imul enterq out xchg or sub in xchg add imul xchg rcll fdivr (bad) mov pop adc and lods (bad) (bad) int3 rex.R (bad) insl sbb pushfq imul pushfq xchg or jge callq (bad) (bad) (bad) jmp mov outsl (bad) leaveq and rex.R rex movsb jmpq push (bad) mov cmp mov sub xor enterq std retq rex.RX mov in add cmp cmc repnz adc xchg in and xor rorl or sarb sub mov xchg or cmp cmc imul lock sbb lahf pushq (bad) mov repz xchg rex.X fbld lea out adc stos fisubrl mov in mov in cmp cmpsb rex.WXB and and jmpq or pushfq and divl sbb test (bad) add mov nop add stos sub rex.WRB pop jmpq and (bad) sub adc mov rex.WR gs and insb (bad) sub xor int3 je adc adc add mov mull (bad) xor test retq (bad) adc mov idivb (bad) adc jns (bad) test fcmovb xchg sub stc stos enterq push cmp testl cmpsl jnp (bad) (bad) bts (bad) fldpi (bad) pushq imul add rex.R roll jo or rex.B rex.WX movsl and cltd loop jb push int3 test xor push add xor stos rex.RB mov xor xor cmpsb sub rex jo xor pop rex.XB xor mov (bad) in mov (bad) iret (bad) (bad) mov adc rex.XB push pop mov or cltd add movsl rex.B and or shll rex.WXB and lret nop rex.XB (bad) outsb rex.R mov mov repnz pop pop or and jmpq rex.W lahf and data16 xchg sub pop push jno mov or jae sub push pop retq (bad) (bad) test xchg (bad) stos and icebp (bad) rex rex.RB ljmp insb (bad) (bad) rex.WRXB rex.WR stos loop mov sbb sub jb rex.RXB add fnstcw mov mov and data16 movsb (bad) outsb data16 or mov imul movsl enterq imul push (bad) callq sub popfq sub mov imul (bad) (bad) (bad) mov out push xchg sub pushfq loop outsb lock popfq (bad) mov rex.RXB jmp pop enterq sbb (bad) icebp lahf rex.B sbb loop xchg adc stc push and sbb test (bad) (bad) xchg (bad) fcoms and add adcb rclb scas (bad) adc and loop fs pop sbb xlat cmovs out loope adc sub retq cwtl add xchg data16 in imul vunpckhps movabs mov iret add rex.WB enterq mov test movabs sbb clc out loopne jbe mov xlat push adc (bad) (bad) adc idivb fisubr mov (bad) jns (bad) mov enterq push cli jno or in leaveq mov fisubrl iret cld rex.W rex.WR sbb push push rex.WXB add rex.WRX mov sbb fisub push and or (bad) cmp (bad) pop and loopne or std sbb jp mov rex.WR or xchg rex.RXB mov (bad) lret or loop loopne jp rex.WX (bad) sub loope enterq xchg mov rex.WXB or (bad) or and push fcoms decl jns jge stos jle insb push scas rex.WR cmp xlat (bad) push ss (bad) mov divb out (bad) (bad) mov adc fimul (bad) add sbb mov (bad) out jae xchg pushfq xor xchg out or jns adc rex.B hlt (bad) callq and add pop xlat sti loop push (bad) ss or fs jne lahf iret xor (bad) mov (bad) rex.R cmpl insb rex.WR fistpl (bad) movsl icebp xchg mov xlat movabs sbb movslq sub rex.B push test xor add (bad) fsub (bad) loope (bad) in hlt sub loope jmpq push cmp out push (bad) adc fldl in rcl rex xor cmp cmp jle std (bad) pop stc rex.RXB rex.WR sub rex sbb xchg or fidiv (bad) xchg rex.R insb mov or sbb out sarb cmp rcll shrl fadd jae cmpsl fiaddl or in in mov pop rex.W retq sub mov (bad) insb jmpq rex.RXB fidiv rex.R addr32 leaveq imul in lret data16 repnz lods or jmp mov in pop je clc sub pop cmpl imul out push imul in or mov loop rex.X mov loop sub data16 rex.RB (bad) movsb clc pop leaveq lods cmpsb loopne sbb push (bad) (bad) cmpsl push and add add int and add add push (bad) jge add and sub rex.WRX gs sbb mov in and lods outsl rex.W cmp fs sti rex.XB cmp jmpq mov shlb sbb loop punpckhwd rex.WX cld rex.RX rex.R movslq mov out pop mov (bad) repnz jns and mov rex.WR (bad) rex.WRX rex.WX rex.R pushq lret push rex.W pop and imul rex.W rex.X adc or mov rex.WR fs cmp imul (bad) sub loope and add (bad) xchg test jns fdivs and test push out mov mov rex.WRX pop mov xlat mov (bad) mov rex.RB movsl pop mov pop push mov sub rex.XB rex.XB lea scas fidivrl rol es rex.B rex.W mov rorb test mov ss and stos mov pop pop and sub jg pop (bad) rex.RXB push sahf rex.XB rex.XB test rex.WXB (bad) rex.B es rex.XB mov mul cmpsl cmp add mov (bad) (bad) vsubps add pop and (bad) (bad) add pop shlb rex.RXB icebp xor rex.RXB push leaveq roll pop cmp add rex.X rex.RXB pop rex.R movslq stc (bad) jmpq (bad) pushq cmp lods lods and rex.XB mov lret (bad) fdivrs sub push pop pop (bad) jmp test rex.WRX rex.RXB leaveq loopne pop pop push je push push (bad) push rex.RXB push (bad) push sub (bad) mov lea (bad) (bad) out cmp lods jmpq (bad) adc (bad) outsb cmovne cmp or cmp and push je rex.WR retq rex.W push (bad) fbld add push (bad) ds cmpsl fmull adc movabs jmpq mov push xor pop je push rex.B pop rex.RXB rex.B pop rex.W stc (bad) xchg lret push rex.XB or sub pop rclb push sahf fcompl fistpl sub adc (bad) sbb and (bad) std pop outsl jbe cwtl xor cmp pop loopne rex.XB rex.XB out in mov loopne or and adc pop or (bad) cmp pop push push sbb cmc (bad) sub cmp mov rex.WXB rex.WRB push adc rorb (bad) pop movb and fdivr rex.RB rex.RB xor (bad) rex.RX add rex.RB rex.W in sbb push sbb rex.X movsb push rex.X rex.XB leaveq adc sub movabs push cmpsb sub in mov mov rex.RXB and enterq rex.B rex.WRB (bad) rex.B rex.WRXB rex.RXB push test rex.RB int3 xchg pop mov rex.RXB xchg mov out rex.WRB lret rex.XB mov jle rex.RXB loope fiaddl movabs insl rex.X rex.WR mov idivb rex.WR jnp rex.WXB rex.WRX (bad) mov sub fmuls out out cmpsb lods rolb rex.WR adc (bad) lock jrcxz fisubr test nop cs sub sub push jne leaveq rex.WR rex.RB (bad) mov push and xor add ja add pop fldcw rex.R rex.WR push pop and in jmpq jle rex.WRB rex.RB (bad) mov push and mov rex.RXB adc cwtl in rex.WRXB rex.RXB rex.WXB movabs mov rex.WXB mov rex.WRB (bad) addb rolb push adc rex.RXB rex.WRXB xor pop jrcxz mov (bad) addr32 xor adc sbbl cmpsb ja data16 (bad) es loop (bad) rex.WRX xchg rex rex.RB stc rex.XB add push rex.XB cs xor jno fucomi adc pop sbb hlt rex.RXB rcrb fsubrs (bad) sub (bad) imul xchg pop or (bad) or sbb (bad) add rex.WR enterq mov test push shrb setge rex.WXB and jmpq out in mov or rex.WR fcmovne xor (bad) cmp mov rex.W rcrb pop fcoml in (bad) rex.WRB rex.XB rex.WR rex.RXB fmull int3 (bad) rex.RXB (bad) rcrb rol lahf rex.X pop pop fadds mov push (bad) rex.WRXB rex.RXB rex.XB rex.WRB sub rcl ds lretq jmpq rex.WXB pop (bad) (bad) test rex.XB pop sub rex.W pop push rex.B insl (bad) cmp (bad) je enterq mov movabs rolb jle out sub pop fsubrs sub addl pop imull clc push jle xchg scas cmp (bad) cltd sub add pop rex.WR fs lahf and fistp add rex.WRXB rex.RB es loope xchg mov (bad) xchg out add and (bad) mov rex.RXB pushfq rex.RB (bad) idivl xlat (bad) rex.B rex.X (bad) rex.R rex.RXB rex.R jg (bad) push pop pop rex.WR rex.RXB addr32 pop rex.X in push rorb xor loopne and xor int3 sbb (bad) rex.XB (bad) out sbb pushq mov rcl sbb add xlat ffreep lods add es addl test mull sub jle and es imul (bad) xchg fs pop movslq or push (bad) push xchg or loope xor xlat movsl adc fnstcw xchg pop xor jo mov or rex.WRXB jb movabs (bad) cmpsl (bad) xchg cmpsb rex.WR mov cwtl sub xchg pop and movsl insl lock xchg xchg or sahf rex.WR (bad) (bad) mov mov push (bad) and mov sub rex.RB mov insb (bad) xor add decb and sbb in rcrl or jo push adc (bad) rex.WRB movabs pop xor (bad) pop mov mov rex.WRXB mov rex.X sub rex.RXB sub (bad) es imul and (bad) pop jmpq retq rol (bad) xlat xlat sahf rex.B xor movabs (bad) rcr adc sub push jmp shr (bad) mov rex.RXB mov test data16 (bad) loop adc test rex.WXB cmp es jmp xor (bad) imul mov pop rcl lods movslq mov xchg sub insl sub or cmpsb fwait (bad) sub pop rex.WB movsbw xchg mov movsbw lea setbe mov lea mov mov movzbw mov movzbw jmpq jae cmp mov cmp add jmpq fisub (bad) fidivrl adc xor cmp xchg rex.W shll mov mov (bad) (bad) (bad) sti jnp movslq mov mov rex.XB (bad) mov loope movabs cmp insb loop sub stos rex.WRB sbb (bad) (bad) (bad) mov shrb xchg push retq (bad) cmc cmpsb clc notl cmp in mov fnstenv rex.WRX jae imul (bad) jne es cmpsb andl rex.WRB (bad) rex.WX fs stos adcb mov rex.X xchg sub cmp jmpq mov jmpq movabs cli mov negb cmp mov je lret and outsb xchg stc jmpq mov xor repz (bad) mov cmpsl push iret sti sub sub test jns adc pushq rex.RB loop nop sbb adc jno (bad) xor pop cs rcl xor incl cmp (bad) imul scas lea ja (bad) std fdiv sar (bad) decb (bad) (bad) (bad) decl cmp in pushq add add int sahf notl cmp and nop rex.W addq lret in (bad) xor retq shll adc movsb and pextrw mov jbe lods sahf mov rex.XB sbb jbe sbb and rex.W or imulq psrad stos pop fbstp outsb xchg pop lret sar pop xor test or test xchg mov rclb xor jg (bad) idivl outsl pop adc (bad) jo jne xor push push (bad) mov jnp (bad) nop lret rex.RXB sbb (bad) int cmpl mov cld negb pushq cltd jb lret mull test (bad) cld and pushfq sbb (bad) (bad) decb jae pop adc or dec xor clc mov mov sub jne (bad) pop rex cmp lea sub rex.RB sbb (bad) mov and pop lret mov xor sub rex.WRB rorl lret lods movsb test sbb (bad) rex.R adc xlat or retq or mov insl adc pop cmp cmp pushfq (bad) pop mov jle popfq adc xchg (bad) and out int3 pushfq mov adc shld (bad) repnz cltd fmull rex.RB and (bad) mov adc jmpq and rex.WR add mov (bad) jo (bad) (bad) (bad) std xor std mov (bad) (bad) incl (bad) (bad) mov (bad) pop ds mov lahf adc lret or mov int lods adc add add cwtl js xor (bad) test cmp (bad) (bad) sub scas pop cmp pop (bad) and cmp add (bad) pushq rex.RB ds (bad) lock jae xor es mov rex.RB test rex.X mov enterq sahf rcrb (bad) rex.WB movq pop (bad) cmpsl jmp (bad) mov shlb mov mov in callq push (bad) or adc jp movabs xor push mov push xor rex.WRX movabs js movslq rex.WX (bad) (bad) jo (bad) mov (bad) repnz adc enterq mov cld sbb sar (bad) (bad) (bad) cs cmp (bad) jg rolb js jge and cmp (bad) (bad) (bad) ljmp mul cwtl std (bad) mov mov xchg lods pop push pop repnz cmp add (bad) outsl or (bad) rex.RX movabs loope lahf repnz xor (bad) repz gs mov rex.RX jne (bad) repnz int3 adc rex.WRB pop (bad) enterq and (bad) (bad) clc movl (bad) jo fist sub (bad) in rex.WR (bad) rex.WRXB sbb cmp imul sbb (bad) cs movslq (bad) repz adc mov cltd adc negb pop mov xchg lahf cmp pop (bad) jl shrl mov add (bad) (bad) (bad) cld xor sbb rex.XB mov sahf rex.WRXB mov mov imul jne (bad) (bad) inc (bad) ja (bad) rex.R (bad) negl mov xlat add mov movabs lods add mov movl (bad) rex.W mov rex.RXB in rex.B add cmp jmpq pushq cmp jmpq jmpq jae bt cmp jmpq sub or fstps xor add add mov rex.RX push rex.WRXB es (bad) movabs mov (bad) sbb out movsl leaveq mov iret callq mov xchg sub mov jmp add jge push xlat sub (bad) (bad) cld lret loopne xlat fdivr (bad) (bad) (bad) (bad) (bad) cltd lret (bad) xchg std sub xchg gs xchg icebp out mov add push (bad) sbb add add jge pop mov (bad) mov es rex.WRXB mov rex.XB xchg leaveq sarl (bad) jo push push cmp cli xlat rex.X rex.XB (bad) cmpsb rex.B mov (bad) and fs sbb stc cmp (bad) adc mov mov mov bt cmc sub clc pushq cmp cmp cmc test cmp jmpq mov pushfq mov adc cwtl sbb adc (bad) push stc loope mov stos mov rex.RX and data16 (bad) insl adc callq cwtl rex.WX cmp stc push icebp mov cmp cmp or iret jle stc (bad) add (bad) mov lods ss and in (bad) popfq push (bad) (bad) (bad) cld xchg test (bad) (bad) cmpsb sub sbb sbb xchg scas xchg rcll (bad) rex.RB jrcxz lods sarb adc cwtl lret je roll movabs pop push xor int scas retq insl mov or jmp mov (bad) out nop mov cmp test jle icebp (bad) movabs (bad) iret addr32 cli (bad) push (bad) mov rex.WX loopne bt clc add jmpq jmpq jmpq test cmp add clc cmc clc mov stc jmpq mov jmpq stc test cmc add jmpq mov jmpq jmpq clc cmp jmpq stos and sub lret jmpq mov (bad) xor xchg insb cmp adc rex.XB (bad) xor jrcxz xor (bad) rex.R mov add mov mov sub (bad) sti sbb shlb sbb pushq clc xchg out cmp pop fcoml cmp rex.XB cmp shl rex.RB lods add out fisub and mov (bad) (bad) decb (bad) (bad) (bad) decl rex.W or loope (bad) add or adc adc (bad) test nop rex.W repnz fsubrs (bad) movabs cli xchg pop int xorb iret scas lock fdivs xor mull (bad) rex.WX fwait sub stos clc test jmpq je jmpq add rex.WXB adc vcmpps (bad) sti mov in mov jnp (bad) or outsb sub fwait mov rex.WXB jmpq sbb rex.RXB xchg mov jns add movslq rex.WRB or add sahf cld sahf rex.WRB xchg rex.WR jg (bad) mov outsl adc add adc fdivs (bad) movsl (bad) xor stos (bad) jmpq rex.WR (bad) rex.WB (bad) (bad) cld mov je (bad) (bad) (bad) dec in cli sbb add fdivrs jrcxz andl add (bad) (bad) movsl rex.XB lods (bad) mov xchg fldl pop xor movabs mov pop (bad) xchg rex.RB jp rex.X test scas mov mov rex.WR lea lcall (bad) out or movabs xor fidivr (bad) rex.RB test div movabs sub (bad) (bad) repz roll jno add icebp or cld and std scas outsb rex.WB cmpsb mov iret rex.WB repnz pop or callq adc stos mov (bad) leaveq stc push or lock ficompl adc or and pop enterq loope js or mov sbb jnp add (bad) jne jno or (bad) rex.WRB jnp xchg xchg jl rex.WRB outsb sbb xor (bad) rex.WXB shll jae mov push rex.WRB ss cmp rex.RXB retq or out rclb out fimull pushq loope retq jb or adc rcr sub cmp or xchg jbe pushfq or movabs push jge or jmp (bad) add and sub mov (bad) or rex.WRB pushfq int3 (bad) cmpsl (bad) fmull fsubr fimull (bad) fbstp or add lgs and or xor adcl (bad) jg add pop out fiadd xorl mov sub or sarb adc (bad) outsb (bad) mov and jae movabs rcrb popq sahf push cmp popfq int lock jle sete add xor (bad) xchg sub mov mov push incl sbb jp adc sbb (bad) loop jp adc (bad) adc add test adc rex.XB leaveq xchg mov adc sti push rex.B es (bad) sbb (bad) add jge rorb (bad) in (bad) (bad) sub jmpq mov adc lret (bad) pop or rex.XB jno mov or movslq loop and cld or (bad) fildll xor rex.WXB cmp adc int3 jrcxz rex.RX adc mov jge (bad) mov rex.WB enterq test jrcxz sub pushfq rex.RXB shll int3 cld rex.R jae movabs (bad) cwtl cmp stc sub mov sbb out sbb popfq mov rex.B rex.RX lret maxps and cmp add clc negl fwait jns rex pop iret imul fdivrp movslq (bad) cmp mov rex.RB pop push idivb in rex.WXB (bad) (bad) cld push lock (bad) cmp (bad) (bad) pushq adc pop or pop in or (bad) (bad) (bad) jmpq clc mov push cli out test pushq jge repz lods mov cmp adc rex.X imul retq and (bad) rex.WRXB adc jmpq ja jmpq cmp jmpq ja push mov cmp (bad) or rex.W xchg cld cli test sub xchg cltd rex.X pushq fiaddl (bad) sarb xchg xchg movsl int adc mov sbb xor push pop sbb or mull (bad) adc movabs adc adc lret (bad) (bad) (bad) (bad) cld pop xor mov outsb push es jo mov outsb (bad) shll (bad) (bad) (bad) (bad) out rex.RXB sub mov imul sub xor jp xor fidiv insl (bad) push cli imul cmpsl jrcxz jge hlt xchg rex.WXB mov in iret movabs pop mov rex.WRXB xor fisttp mov sub rex.WR rex.X loopne (bad) rex.WRB hlt repz and retq (bad) repnz (bad) rex.WX jo jmp mov (bad) push mov test test (bad) and push stos (bad) movabs mov xor rex.WRXB (bad) in movabs pop cmp mov imul lock sbb adc out lret jb sbb rol xchg cwtl mov outsb or (bad) movabs pop add test ja shrb cmp cltd mov sub jb jmpq xchg push xor jp mov jmp repz push add pushfq enterq (bad) (bad) jle gs sbb (bad) (bad) (bad) incl (bad) (bad) mov (bad) (bad) (bad) decb (bad) (bad) (bad) decb xchg (bad) (bad) cmpsb movabs (bad) repz adc out (bad) sub (bad) or adc push (bad) fs (bad) cwtl shrl outsb in pop sbb loop mov pop cmp xchg fdivr in sub sub push outsb shr jno mov push xor xchg sub bsr shr xor not add sar mov rol mov bt cmp repnz jmpq bt sub inc bswap add movzbl mov movsbq mov jmpq je jmpq stos mov fist jp (bad) sti in cmpsb sub mov xchg rex.B addr32 sub jb shll jns ss nop rex.WX addr32 and addr32 movabs and imul mov push rex.WXB nop in (bad) cmp leaveq stos sub xchg mov and mov push sub (bad) (bad) (bad) mov (bad) mov sub jno sub (bad) lea sub pop adc (bad) cmp roll (bad) movabs js mov (bad) (bad) (bad) decl mov cli push outsb adc jg (bad) mov cwtl mov test sarl rex.XB mov jno mov jmp jno cmpsb (bad) and shrl cmp callq (bad) jo test jl sbb out incl (bad) in (bad) jp pop push test mov insl rex.WRB push push rex.WRX add mov fmull pop (bad) push mov sub mov mull pop mov sub rex.RX push adc and mov movabs lods lcall jrcxz push mov rcll icebp xor cmp sbb (bad) js (bad) (bad) cld add (bad) (bad) adc (bad) mov sub (bad) (bad) callq insl or xchg or push repnz mov rex.RX int add cs sbb ja add imul nop out mov jbe xchg es insl imul jns sub (bad) cmp (bad) addr32 clc repnz jmpq ja rcr sub adc dec shld cmp add rcr neg adc bsf mov adc rcr bt mov mov clc cmc cmc repnz jmpq xor mov sbb sbb jno imul cmp loope rex.W adc adc mov jnp rex.WRX xor or push pop movsl sti mov fcomps movabs (bad) data16 add stos imul rex.X nop adc stc sbb movslq (bad) (bad) sti mov adc fadd mov in (bad) loop in (bad) (bad) (bad) cld jb or push (bad) xor add (bad) (bad) decb fdivrl insb cli stos push cld add cmp pop mov repnz add or rex.RXB xlat shrl adc idivb out rex.WB adc (bad) sti pop lret movabs (bad) sbbl pop sub (bad) push rex.R pop sti roll adc add mov (bad) mov xchg sbb std (bad) mov xchg (bad) sub std (bad) insl jrcxz cmp (bad) scas int or test retq (bad) cmp rex (bad) and addr32 xor mov (bad) movabs ja imul (bad) (bad) (bad) std or xor outsl lret adc callq negb (bad) (bad) std and (bad) loop out or callq xlat add add or sub test rex.R repz movabs (bad) imul mov lock js xor sbb sub (bad) rex.RXB xlat rcl sbb cli or (bad) jno popfq (bad) xor mov push adc add sub xchg out int3 pushq callq rex.XB (bad) ss mov movsb cs sbb imul jns xchg jl mov jo sub pop push push (bad) mov jle xorl add outsl out fidivrl cmp addr32 mov push and (bad) shrb push xchg movslq fdivrp (bad) (bad) jmpq mov in sbb (bad) mov (bad) mov cli sbb sahf push rex.XB jrcxz stc sub movabs jmpq (bad) sti mov iret gs cmp cli sub mov imulb add jle pop jge loope mov (bad) push (bad) cmc sub insl (bad) leaveq sti rex.R in rex.WB in push jrcxz and xor sbb in adc test jmp repz xor in rex.B repnz push fwait mov stos cmc rol cmc xor stc test clc bt not je stc test cmp movzbw jmpq jmpq cmp jmpq adc retq (bad) (bad) test rex.RXB xor movsl (bad) test pop mov (bad) cld clc (bad) or (bad) cmp movslq (bad) lods rolb xchg gs xchg xor pop mov movabs (bad) jl std or pushfq xchg (bad) mov push out sub adc push movslq mov fidiv test mov (bad) (bad) cld iret pushq pop push (bad) (bad) (bad) (bad) loop xchg (bad) cmp push (bad) ror xchg std mov (bad) lods jno (bad) cwtl cmpsb movabs add add add rolb xchg add (bad) rex.WR mov sbb test movabs enterq ds sub callq cmp lea xor xchg mov push lods jb (bad) movabs int repnz (bad) mov sbb (bad) cltd mov push cmp add mov xchg rex.RXB pop push jge addr32 jg add jne cmpb cs cmp outsl pop jb clc in jno sbb shl xchg clc movabs pushfq cmpsb jmp retq mov movabs cmp add or mov xchg cmc jrcxz push clc sub rex.WX xchg adc add jae scas test add (bad) jl lret rex.WRB rex.WRX sbb add pop sub pushq out xchg jo mov rex.R int3 stos mov movabs (bad) out jmpq cmp jmpq ja stc rcr sub btc or setae btr add lea cmp rcl mov shr inc mov sar mov stc clc repnz jmpq jne rol lea movzbw mov test test stc clc add jmpq cmp bt clc add jmpq je xchg mov xchg lea bswap mov bswap movzwl lea jmpq jmpq not jmpq jmpq push jmpq push jmpq lea movzbw movsbw mov jmpq push jmpq mov jmpq mov jmpq push jmpq jmpq jmpq movzbw not sar mov movzbw dec mov clc stc cmc jmpq mov jmpq mov jmpq movzbw mov not mov jmpq add test cmc jmpq mov jmpq jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq jmpq jmpq mov jmpq jmpq jmpq or neg bts mov shr jmpq push jmpq push jge push jmpq jmpq jmpq rol not sbb mov mov cmp cmp sub jmpq jmpq push jmpq jmpq not mov setle mov jmpq cmp jmpq popq jmpq jmpq cmc ror cmp bt cmc stc add jmpq bswap mov cmp mov jmpq jmpq jmpq ja jmpq mov bt jmpq jmpq jmpq push jb push jmpq push jmpq popq jmpq jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq jmpq mov jmpq jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq push jmpq push jmpq jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq jmpq ja jne je jmpq je test bt cmc bt cmp jmpq rol mov jo xor jmpq jmpq push jmpq jmpq jmpq jmpq mov jmpq mov jmpq mov jmpq jmpq lea jmpq jmpq jmpq push jmpq mov lea mov jmpq push jmpq mov jmpq push jmpq jle mov jmpq jmpq jmpq lea jmpq jmpq push jmpq jmpq jo pushfq jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq jmpq jmpq jmpq jmpq push jmpq mov jmpq jmpq jmpq jmpq movsbq btr and sbb jmpq bt test stc sub bt imul jmpq mov jmpq jmpq push jmpq jmpq pushfq jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq cmc mov test mov shld mov stc cmp jmpq jmpq jmpq mov jmpq jmpq mov jmpq sub bt clc stc bt imul jmpq jmpq jmpq push jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq push jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq bsf inc mov shl mov cmc test sub bt jmpq inc stc clc not cmc cmc cmp clc add cmc cmc cmp cmp add cmc test bt bt xor test cwtl test cltq bt jmpq jmpq jmpq mov lea std std push movsbw jmpq jmpq push jmpq divq jmpq mov jmpq push jmpq push jmpq push jmpq jmpq shrd bts or rcr mov mov add jmpq jmpq jne pushfq jmpq pushfq jmpq jmpq mov jmpq shrd bts jmpq jmpq jmpq jmpq jmpq push jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq jne sar mov bt and stc cmp jle jne rcl movsbl shld xorb movsbw pop jmpq inc test neg clc sub stc cmc add bt stc cmc test sub jmpq cmc mov jmpq jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq pushfq jmpq mov jmpq add jmpq popq jmpq jmpq pushfq jmpq mov jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq push jmpq jmpq or mov cmc inc rcr mov test jmpq bsf xor bt mov jmpq clc bt add cmc cmc cmp mov jmpq push jmpq jmpq jmpq jmpq push jmpq pushfq jmpq mov jmpq popq jmpq cmp sub test test xchg test stc stc cmp jmpq jmpq pushfq jmpq cwtd mov sbb dec test movzbw mov jmpq jmpq jmpq jmpq push jmpq push jmpq bt cmc btc mov cmc jmpq cmc xor cmp cmp jmpq popq jmpq jmpq jmpq jmpq lea jmpq jmpq inc cmc lea bt clc bt not jmpq jmpq jmpq jmpq jmpq cmp jmpq bt jmpq mov jmpq jmpq callq bswap seta not mov jmpq push jmpq jmpq jmpq bsr and rol lea cmp bt jmpq jmpq jmpq jne adc shrd btr xorb movsbw movzbl pop jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq push jmpq jmpq jmpq push jmpq mov jmpq jmpq movzbl jmpq push jmpq mov jmpq mov jmpq jmpq jmpq jmpq push jmpq lea push jmpq mov std jmpq bt sub clc cmp shr jmpq push jge push jmpq jmpq push jmpq seto pop lea lea lea pop retq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq popq jmpq push jmpq jmpq push jmpq not jmpq cld cld jmpq push jmpq jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq push jmpq jmpq jmpq popq jmpq jnp push jmpq push jmpq jmpq push jmpq push jmpq je movsbl movzbq lea mov jmpq mov jmpq push jmpq add jmpq jmpq push jmpq push jmpq mov jmpq jmpq jmpq clc mul jmpq jmpq jmpq jmpq popq jmpq push jmpq inc stc bt ror jmpq push jmpq jmpq jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq inc stc clc clc cmc ror cmc clc bt jmpq mov jmpq jmpq push jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq pushfq jmpq jmpq mov jne pushfq jmpq lea jmpq jmpq bt clc stc stc xor jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq push jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq pushfq jno popq jmpq push jmpq je jmpq push jmpq jmpq cmp jmpq push jmpq popq jmpq jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq jmpq jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq push jmpq jmpq jmpq jmpq cmc cmc cmc clc add jle mov jmpq mov jmpq jmpq pushfq jmpq push jmpq popq jmpq push jmpq jmpq push jmpq lea jmpq jns push jmpq jmpq push jmpq pushfq jmpq mov jmpq decl jmpq push jmpq jmpq clc addl cmp clc cmc jmpq push jmpq jmpq jmpq not jmpq not jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq cmc shl jmpq setno mov jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq mov pushfq mov push cld mov jmpq jmpq popq jmpq jmpq pushfq jmpq jmpq es mov jmpq push jmpq push jmpq popq jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq lea jmpq push js push jmpq clc stc clc stc cwtl clc clc cltq cmp cmc sub jmpq push jmpq jmpq pop bswap mov mov pop bswap mov jmpq jmpq push jmpq jmpq lea inc rcl jmpq push jmpq jmpq mov jmpq push jmpq jmpq jmpq push jmpq pushfq jge popq jmpq jmpq pushfq jmpq bswap bt test test sub cmc bt clc ror jmpq pushfq jmpq push jmpq jmpq jmpq jmpq jmpq pushfq jmpq je cmc bt jmpq push jmpq mov jmpq push jmpq jmpq push jmpq jmpq mov jmpq jmpq sub cmc jne bt imul jmpq push jmpq mov jmpq mov jmpq setne pop lea mov not movabs pop retq jmpq sub jmpq movsbw lea shr stc mov jmpq jmpq lea jmpq inc xor shl btc xor cmp movzbl jmpq bt add jmpq cmc test jmpq push jae push jmpq push jmpq clc jmpq push jmpq add ror mov cmc sub jmpq jmpq jmpq mov jmpq push jmpq jmpq mov jmpq jmpq jmpq jmpq sub jmpq jmpq popq jmpq sbb dec mov rcr mov cmp stc sub jmpq neg movzbl test xor test cmc stc test add jmpq push jmpq pushfq jmpq pushfq jmpq push jmpq jmpq je setae not movsbw mov jmpq pushq setnp movsbw jmpq push jmpq push jmpq add btr mov shr setns mov clc sub jle divl jmpq push jmpq push jmpq mov jmpq popq jmpq jmpq shr sub movsbq jmpq je setp lea not lea mov jmpq clc and jmpq push jmpq jmpq jmpq jl popq jmpq push jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq ror cmc add jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq mov jmpq je test cmc cmp jmpq jmpq popq jmpq push jmpq mov jmpq push jmpq jmpq jmpq je mov jmpq jmpq jmpq push je push jmpq push jmpq jmpq dec jmpq mov jmpq push jmpq jmpq cmpl jmpq clc shr jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq jmpq mov jo mov jmpq shr movzbl dec clc add bswap jmpq jmpq jmpq not jmpq ja push jmpq push jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq je stc cmp jmpq mov jmpq jmpq je stc cmp jmpq mov jmpq jmpq push jmpq jmpq popq jmpq push jmpq divl jmpq popq jmpq mov jmpq jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq jmpq jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq callq movzbw movsbw jmpq push jmpq push jmpq lea dec movsbw bt jmpq jmpq popq jmpq push jmpq jmpq push jmpq jmpq popq jmpq push jmpq jmpq pushfq jmpq not lea push setns not mov push not lea push dec jmpq push jmpq je cmp xor stc clc cmp jns jbe or lea clc lea jmpq push jmpq mov jmpq push jmpq jmpq je cmp cmp jmpq push jmpq jle mov jmpq jmpq push jmpq sar mov cmp cmp stc add jmpq sub jmpq sub clc test jmpq jmpq push jmpq jmpq cmp bt add jmpq push jmpq jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq jns mov jmpq jmpq popq jmpq jmpq mov jmpq jmpq push jmpq push jmpq push jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq push jmpq popq jmpq lea jmpq jmpq push jmpq popq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq cmp jmpq stc cmp xor cmc cmc cmc stc sub jmpq sub bt clc shr jmpq jmpq jmpq jmpq push jmpq mov xor test btr shr lea jmpq stc sub jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq jmpq jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq push jmpq push jmpq movsbw push jmpq jmpq rol jmpq jmpq jmpq push jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq je test jmpq lea jmpq push jmpq seto pop movsbw movsbw pop not jmpq jmpq jmpq cwtl bt test bt cltq test cmc stc test sub jmpq jmpq popq jmpq jmpq mov jmpq push jbe push jmpq jmpq push jmpq mov jmpq jne push jmpq jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq test jmpq popq jmpq jmpq jmpq jmpq jmpq jmpq cmc add clc jmpq jmpq jmpq rol jmpq jmpq jmpq jmpq jmpq lea bt cmc rdtsc test bt jmpq sub clc test cmc jmpq mov jmpq popq jmpq jmpq mov jmpq push jmpq jmpq jge popq jmpq jmpq jmpq xadd adc jmpq push jmpq jmpq jmpq push jmpq lea lea dec mov not jmpq jmpq clc sub jmpq jmpq mov jmpq ja jmpq jns popq jmpq clc test sub clc bt cmc stc shr jmpq jns mov jmpq push jmpq push jmpq jmpq mov jmpq not seta mov jmpq mov jmpq cmc cmp sub jle mov jle lea jmpq test clc add jno not jmpq mov jmpq jmpq jmpq jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq push jne push jmpq mov jmpq mov jmpq jmpq mov jmpq push jmpq push jmpq mov jmpq mov jmpq push jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq jmpq jmpq push jmpq cmc bt clc mov jmpq push jmpq stc bswap stc bt test test sub bt ror jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq cmc add jmpq popq jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq clc sub jmpq push jae push jmpq push jmpq push jmpq jmpq jmpq push jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq push jmpq push jmpq mov jmpq jmpq jmpq push jmpq jmpq jmpq pushfq jmpq push jmpq jmpq je cmc clc cmp jmpq pushfq jmpq rep shld pop shld clc btc cld pop std std popfq jmpq jmpq jmpq mov stc cmp bt sub cmp movl clc or jmpq jmpq mov jmpq push jmpq mov jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq push jmpq jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq pushfq jmpq jmpq push jmpq jmpq jmpq jne lea xorb jmpq mov jmpq jae push jmpq push jmpq push jmpq jmpq jmpq push jmpq stc sub jb mov jmpq push jmpq mov jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq test movl clc or jmpq push je push jmpq je cmp bt clc clc cmp jmpq jno pushfq jmpq mov jmpq pop jmpq push jne push jg push jmpq push jmpq movzbw pop jmpq jmpq push jmpq push jmpq rol rcl clc mov cmc clc jmpq mov jmpq pushfq jmpq push jmpq jmpq mov jmpq jmpq jns popq jmpq add jmpq cpuid cmp test stc sub cmc jmpq mov movsbq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq push movzbw cmp or sub and jmpq jmpq popq jmpq jbe sbb lea cmc stc lea stc test jmpq jmpq jmpq jne bsf cmp or neg xorb mov bswap setle pop jmpq jmpq push jmpq jmpq jmpq mov jmpq jmpq push jmpq jmpq jmpq jmpq jmpq mov clc mov stc bt sub jmpq jmpq jmpq push jmpq jmpq push js push jmpq je stc stc clc bt addl cmc cmc sub clc jmpq jmpq push jmpq jmpq sub jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq push jmpq jmpq popq jmpq mov jmpq jmpq pushfq jmpq add jmpq jmpq jmpq je setne jmpq jmpq push jmpq push jmpq mov jmpq cmc cmc stc and jmpq push jmpq mov jmpq mov bt test bt add ja callq jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq push jmpq jmpq shrd cmp ror clc mov cmp add jmpq popq jmpq push jmpq popq jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq je bswap movzbw mov jmpq popq jmpq jmpq push jmpq push jmpq jmpq push jmpq callq jmpq push jmpq mov jmpq popq jmpq popq jmpq jmpq jmpq push jmpq jmpq jmpq popq jmpq sub jmpq not jmpq jmpq cmp not mov test jp test bt sub jmpq jmpq cmp jmpq jmpq jmpq jmpq test sub test shl jmpq lea shl shr mov clc add mov cmp cmp bt jmpq popq jmpq sete lea not pop movzbw pop mov movzbl pop bswap mov pop mov mov mov mov pop movsbw jmpq push jmpq pushfq jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq push jmpq jmpq mov jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq mov jmpq jmpq mov cmp cmc xchg cmp stc xor jmpq movsbq not setae seta mov jmpq jmpq push jmpq popq jmpq push jmpq jmpq popq jmpq mov jmpq ja jmpq pushfq jmpq push jmpq pushfq jmpq push jmpq jmpq push jmpq jmpq jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq push jmpq pop cmp cltq cmp jmpq popq jmpq inc test clc neg jmpq jmpq push jmpq bt mov stc cmc cmp sub test add jmpq push jmpq push jmpq mov jmpq clc cmp add jmpq push jmpq push jmpq jmpq jmpq jmpq sub jmpq jne mov inc sbb mov cmc and test cmp clc cmp jmpq mov jmpq jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq push jmpq jmpq jmpq push jmpq test add jmpq dec cmc bt lea cmc stc clc test xor test cmp cmc cmp sub jmpq jmpq mov test rol movzbl cmc jmpq dec or movzbl bt not xor cmc rcr sub jmpq jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq jmpq cmp jmpq jmpq not cmc add test bt cmc add clc cmc bt cmp xor test bt jmpq mov jmpq cld cld jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq jmpq push jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq je stc cmp cmp jmpq push jmpq push jmpq push jmpq jmpq push jmpq sub jmpq pushfq jb popq jmpq jmpq jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq pushfq jmpq mov jmpq sub jmpq jmpq jmpq jmpq jmpq push jmpq stc jmpq cmp sub jmpq push jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq jmpq push jmpq pushfq jmpq shl movzbw neg mov bt cmp shrd add jmpq mov jmpq jmpq jmpq jmpq push jmpq push jmpq test jbe bt add jmpq dec test jmpq jmpq mov jmpq push jmpq jmpq jmpq pushfq jmpq mov jmpq push jmpq push jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq rcl stc btr mov cmp test add jmpq jmpq rcl add and sub mov jmpq jmpq jmpq push jmpq push jmpq clc jae add jmpq jmpq push jmpq push jmpq lea stc stc stc jmpq push jmpq mov jmpq jmpq jmpq test bt and jmpq jmpq stc imul jmpq jmpq mov jmpq jmpq jmpq jmpq mov jmpq push jmpq cmc test cmp jmpq push jmpq push jmpq jmpq movzbq movsbw push movzbw movabs jmpq popq jmpq jmpq jmpq push jmpq push jmpq add jmpq jmpq xadd cmc mov sbb mov shr and mov clc jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq mov jmpq mov jmpq jmpq popq jmpq movzbw bswap mov movsbw push mov bswap not movsbw mov jmpq cmp jmpq jmpq push jmpq mov jmpq rcl movsbw clc mov add jmpq jmpq sub jmpq jmpq jmpq xchg mov movzbw lea shrd mov jmpq push jmpq jmpq jmpq shld jmpq pushfq jo popq jmpq push jmpq jmpq jmpq mov jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq pushfq jmpq test sub stc stc cmp cmp shl jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq clc sub jmpq push jmpq bswap movzbw mov jmpq mov jmpq mov jmpq jmpq push je push jmpq jmpq jmpq push jmpq jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq push jmpq bswap cmc shld sar mov test sub jmpq push jg push jmpq mov jmpq push jmpq jmpq bsf mov bt stc jmpq push jmpq push jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq div jmpq movzbq movzbw rcl cmc rcr mov jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq jmpq push jmpq push jmpq xor cmp test xchg cmp jmpq jmpq jmpq push jmpq push jmpq push jmpq mov jmpq mov jmpq jmpq xadd ror mov jno bts neg mov jmpq push jp push jmpq clc sub jns bt sub jmpq push jmpq push jmpq push jmpq clc add jmpq jmpq pushfq jmpq push jmpq jle pushfq jmpq jmpq add jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq add cmp movzbl mov jmpq mov jmpq jmpq dec jmpq jmpq jmpq jmpq jmpq shld mov cmc cmp bt cmc sub jmpq pushfq jmpq jmpq jmpq mov jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq jmpq jmpq push jmpq jmpq add jg mov jmpq mov jmpq jmpq jmpq jmpq push jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq jmpq push jmpq push jmpq push jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq popq jmpq pushfq jmpq jmpq jmpq mov jmpq test add jmpq jmpq mov jmpq push jmpq mov jmpq jnp mov jno mov jmpq push jmpq jmpq jmpq push jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq push jmpq push jmpq push jmpq jmpq jne shl mov xor movzbl mov cmp cmp jmpq push jmpq mov jmpq jmpq push jmpq addl bt push bt test stc clc sub jmpq push jmpq push jmpq jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq push jmpq jmpq jmpq cmc cmp jmpq jb mov jmpq push jmpq push jmpq jmpq pushfq jmpq push jmpq jmpq jmpq lea jmpq jmpq jmpq jmpq jbe push jmpq jmpq dec jmpq push jmpq jmpq mov jmpq push jmpq jmpq jmpq jmpq push jmpq popq jmpq push jmpq push jmpq push jmpq jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq jmpq rcl mov add (bad) lock jmpq jmpq mov jmpq jmpq mov jmpq js push jmpq mov jmpq jmpq jge push jmpq jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq mov jmpq jmpq popq jmpq popq jmpq push jb push jmpq push jmpq je jmpq push jmpq push jmpq mov jmpq popq jmpq mov jmpq mov not not mov jmpq jmpq jp popq jmpq jae popq jmpq rol btr bt mov stc clc xchg stc xor jmpq or pop shrd shl popfq lea pop bswap pop jmpq clc add jmpq push jmpq cmp cmc cmp sub cmc jmpq jmpq jle not jmpq jle pushfq jmpq bsr and xchg mov bsf shl btr mov cmp sub jmpq je stc addl test sub cmc clc xor bt cmc cmc bt xchg stc stc cmp test cmp jmpq jmpq jmpq jne je clc cmc cmc jmpq mov jmpq jmpq mov jmpq add add add add clc rex.WB and rex.WB rex rex.WR orb add xor xor add add rex.WX (bad) mov add and rex.WRX rex rex.RX rex.WX rex rex.RX rex.WX (bad) xor xor add andb add add add add add rex.WXB add rex.WX and add add rex.WX and rex.WB rorb add movabs rex.WR rex.WRX and add xorb xor add loopne rex.WRB loopne rex.WB and add adc add movabs callq add rorb add rex.W rex.WRX (bad) cmpsb push add loopne rex.WRB cmp add loopne rex.WB rex rex.WR (bad) jnp add movabs rorb xor add and add and add add add loopne rex.WB rorb add rex.WX (bad) rex.WRB rex.WX movabs retq xor add sarb xor add and push add sar add xor add loopne push add sar add movabs add add and add loopne rex.WRX xorb add add add mov xor add orb add sub xor add and rex.WB and add mov add rex add (bad) cmp add add xchg xor add sarb xor add loopne rex.WB add add and rex.WRB cmp add and push add movabs (bad) rex.WRX subb add add add add callq add movabs xchg xor add and rex.WB (bad) mov xor add andb add sbb xor add movabs movsb rex.WRX and rex.WRX xorb xor add add add (bad) mov xor add andb add add test add movabs add xor add and add and add loopne rex.WRX movabs (bad) rex.WR and add add add xorb xor add orb add and add loopne push add loopne rex.WRX (bad) mov xor add sar add loopne rex.WRXB cmp add sar add and add sar add and add add add mov xor add and add and add loopne rex.WB shr add loopne rex.WXB shrb add or xor add (bad) mov xor add loopne rex.WRX subb add add rex.W rex.WRX subb add add xlat rex.WB (bad) rorl add add clc rex.WRB adc add xor add and push add (bad) int add rex rex.WX shr add andb add rex.WXB and add rex.WX and rex.WRX (bad) adc xor add rorb add sub xor add movabs clc rex.WRB (bad) xor xor add and add orb add add pop rex.WRXB sar add loopne rex.WRX movabs rex.WRB rex.WX shrb add retq xor add add add (bad) mov xor add sar add loopne rex.WB (bad) cmp add add sub add xor add (bad) xor xor add movabs sbb xor add xorb add popfq rex.WR movabs jle add (bad) int add (bad) mov xor add and rex.WB xorb xor add and rex.WB xorb xor add shrb add rex.WRB orb add add add rex.WX (bad) jnp add add add loopne rex.WRB subb add add add add mov add rex rex.RX rex.WX (bad) rorl add add mov add loopne rex.WRXB rorb add subb add add cli rex.WX loopne rex.WRX subb add add push add movabs mov xor add rex add loopne rex.WXB and add movabs lock loopne rex.WRX (bad) xor xor add rorb add add add stos rex.WR and rex.WRX loopne rex.WRXB (bad) xor xor add mov xor add movabs fs and add (bad) xor xor add (bad) xor xor add shr add rex rex.WR loopne rex.WRX and push add loopne rex.WB add rex.WRXB orb add pop rex.WB (bad) int add loopne rex.WRXB mov xor add movabs orl movabs xor xor add add rex.WX (bad) xor xor add movabs add xor add and add subb add add rex.WX loopne rex.WRB (bad) mov xor add xorb xor add and add sarb xor add and add and rex.WB and rex.WRX and rex.WRB loopne rex.WRX rex rex.RX rex.WX (bad) callq mov (bad) (bad) jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq sub inc mov cmp test add jmpq jmpq push jmpq mov jmpq jmpq jmpq push jmpq bt test add jmpq xadd mov lea mov clc add jmpq pushfq jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq test clc stc test ja je test test test cmc addl stc bt bt clc sub cmp cmc sub clc xchg test bt bt cmp cmp jmpq jmpq mov jmpq push jmpq cmc clc cmp jmpq xor cmp stc bt sub jmpq push jmpq mov jmpq jmpq dec cmc clc bt xor jmpq jmpq jmpq push jmpq jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq mov jmpq push jmpq jmpq jp sub bt imul jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq jbe shl lea stc lea cmc clc clc jmpq push jmpq push jmpq jmpq mov jmpq jns sub jmpq dec bt lea cmc clc clc xor test sub jmpq clc mul jmpq jne jne mov jmpq jmpq jmpq mov mov jb mov jg mov jmpq push inc not xchg mov bswap inc bts xchg jmpq push jmpq add jmpq pushfq jmpq jmpq jmpq mov jmpq push jmpq push jmpq push jmpq 