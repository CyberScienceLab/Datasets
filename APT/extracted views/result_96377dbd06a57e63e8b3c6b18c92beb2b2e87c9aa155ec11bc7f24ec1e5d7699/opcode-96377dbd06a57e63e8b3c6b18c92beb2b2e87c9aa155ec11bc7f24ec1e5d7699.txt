add loop ret jbe nop xor or xlat push mov loopne outsb outsb icebp ret mov ret (bad) mov push mov lahf sbb jmp push jp jno inc mov (bad) mov push sub mov or pop (bad) icebp add imul jg xchg hlt int3 fbstp imul add and dec adc pop xor jle je leave adc pop push mov rolb inc xor in dec test call test (bad) aaa sub mov shl inc mov pushf inc (bad) sbb lods sub arpl std mov cmp dec cmp lds mov add jg bound repz imul mov push dec ret pop jno cmc mov dec jae movsl cmc jb in mov inc nop sub divb pop ds popa imul aas jl stc mov fwait mov mov cmp ja call cmp mov (bad) mov adc sub mov jecxz xchg mov jmp repnz lods sahf xchg jb das push xchg mov cs enter or add call push mov lgs and and loop rolb in mov pop add shr call or int loop (bad) inc push sub mov pop push xor mov into xchg movsl mov and stos popa pop adc add cwtl lahf mov cwtl dec std scas (bad) jle inc iret sarl scas fsubl pop daa stos lods movsb sbb inc jl jae cld mov movsl fwait jp (bad) push iret nop stos jae cmp fadds push pop fistpll out and insl (bad) lock xabort aas outsl add inc add insl jg es lea pop cmp (bad) jae xchg xor sbb inc (bad) cmc push (bad) fimull sbbl jb insl dec shrb sarb cltd out jecxz pop inc xor fmull jmp xor sti dec in ret and (bad) std jg xchg push not movzwl push pusha not lea movl lea mov jmp add push popa je dec popa je push inc add push inc push dec xor cs insb add push inc push dec xor cs insb add movzbw test movsbl mov stc shl call add inc outsl insl insl popa outsb fs imul addr16 add lcall not lea mov pop bswap movsbw pop movzbw push pushl movsbw mov pusha pushl ret push push inc push dec cs dec dec add fdivl call movsb jp jp jp fbstp pop shrb jmp ja inc adc push adc stos outsl addl mov fcoml sub pop cmp fnsave inc sub mov dec clc pop cmp adcl and icebp gs data16 movb pop mov add cmpsb push cs js loop jne stos and mov leave orl stos pop xor push hlt test adc (bad) js iret jl in jecxz int3 fstl ficomp adc sbb xor sub mov addr16 jge adc inc or loop xchg js push adc mov addr16 pop mov in push inc adc paddsb aam divl push or push movsl mov push add test shrl adc pushf add mov sbb ffree cmp jmp insb sbb inc xchg fldl test hlt ja in push lods lea sbb test xchg mov cltd ret add daa sbb cmc lea jle add stos inc xor xchg out aam cmp xchg insl jmp nop popl mov test insl push les notl loopne inc or movsb popl add fcoml and pusha mov mov movzbw pop pusha mov pusha movb pushl ret xlat cltd xor addr16 es je or cmp std add mov push xor pop jns fwait mov push mov dec push jmp and movsb outsb or frstor pop xor loope push loop fucomi loope (bad) dec adcb lds sub aas dec mov dec insl or jg sbbb in add (bad) mov jae cltd insb or outsl cmp or adc lret adc jne cltd das or rcrb xor xchg mov loop inc add loopne cli mov jns sbb lods cmp call fwait pop insb pop xor lcall sub mov nop inc pop add (bad) notl pop js out fdivs insb mov stos mov mov or mov or lea je (bad) repz mov push pusha call icebp mov dec gs adc sahf mov sbb jecxz mov push imul mov push push mov outsb sbb (bad) dec cmp mov icebp lods imul xchg ss adc mov fisubl jnp pop dec lock and mov and loopne add idiv addr16 in mov dec imul loopne xor out mov dec xor js dec push push clc imul stos hlt (bad) mov adc pop (bad) int divb sti imul push push inc xchg push mov jns test cmp jl imulb gs aas mov add fs xchg out repnz add adc dec pop pushl mov push push push and inc hlt add int (bad) hlt fsubl data16 icebp cmp call pop (bad) repnz jbe push jae xchg mov adc lock dec jmp mov fcomps inc jmp popa xor out (bad) je mov out in jb pop mov dec pop imul jmp popa xor dec pop lcall push mov (bad) inc out adc sti sbb dec flds fiadd jne jo mov clc mov hlt ja xchg icebp pop pusha fs lcall js arpl mov push incl cmp push add mov adc fdivl inc sbb int3 jo pop jmp pop sbb pushf mov add jb add mov xchg (bad) jmp popa push fisubl fnstenv push negb int xor fist jbe dec imul pop and and int3 jl mov bound dec cmpsl lcall imul push xchg xor clc push incl cld mov adc fwait cmp jmp pop test std xchg pop ja loop push jae or push push lcall pop int3 xchg inc jmp out orl cmp sub lock or repz into mov sbb imul lea or adc add (bad) jp dec jmp mov out (bad) xchg sti idivl lcall xor bswap lea jmp pusha mov lea jne pushf push movb bswap pushf not movsbl mov cwtl lea pushf jmp insb dec loop popa jp (bad) stos arpl push mov sub cmpsl push faddp (bad) pop sub sub rcr xchg stos jae (bad) mov in out out je jae out xor mov pop and mov iret jnp sub lret out and je push ret cmp xchg inc fcomi fs jp mov push push cli hlt aam sbb pop xor jno mov stos mov pop add jmp les inc sub out stos (bad) mov dec or ds dec or pop lock call push enter pushf jne xchg pop stc xor int mov call cmc (bad) jbe orl popa jp mov in (bad) (bad) xchg jge and out mov jns or test stos ja or ret and stos mov lods dec xchg jb xchg aas adc or lock ja es in lods xchg and push fild fnsave loope mov popa imul and js fistp (bad) repz cmpsl push and mov js sti sbb adc in mov pop imul xor je cmp rcr (bad) mov int rclb (bad) test cmp add mov idivb inc adc jb in imul jg popf mov sub mov dec leave sbbl mov mov jge dec mov xchg dec adc xchg ljmp in mov repz (bad) dec (bad) fiaddl inc pop imul ja sub mov loop imul movsb adc lret mov or xor (bad) mov inc xlat xchg lcall mov pop imul ljmp call cmp cmp popf cmpsb in cwtl repz jle cwtl push stc add sub jp in addr16 mov jns cli rorl or mov pop aas (bad) mov outsb int3 push pop cmpl pop pusha outsl xchg fisubl jno jle mov insl inc pop mov push out (bad) in je mov xchg shr pop rclb int and pop dec outsb insb xor xchg ss sbb mov int add je imul outsl outsb dec outsb outsw inc add mov xchg dec and sub mov cltd pop inc or mov lret lcall das test out jb test nop stos in jns add or jo and dec push mov insl pop inc inc inc std xlat mov inc fdivl daa mov enter jle adc (bad) pushf or add sbb or lret (bad) je enter push out data16 iret ret xchg push lock jae jno jmp (bad) jmp out mov clc aad push pop jg movsb mov ret shr and addr16 push addr16 jge push jbe mov jmp or and cmp mov adc movsl (bad) inc sbb mov stos mov and lds ja add rorb arpl sub stos and mov xor loop xor fwait gs inc xor and pop fild repnz mov ss jge fidiv int3 sub xor popf loope pop push push push and ljmp fistpl pop (bad) fld pusha pop cmp pop stos sub sahf xchg adc imul add popa es xlat (bad) adc call xor jle jmp jp sti mov loopne (bad) push push out sub cmc or scas fiadd pop and jg push cmp pop inc cld push aad sahf (bad) xchg in and pop jp push shrb (bad) xlat mov push mov inc test xor mov dec lock sub cltd inc fdivp in inc imul int imul stos scas dec test lret scas into lahf add and or dec mov dec mov repnz xchg mov (bad) loop std iret pop cli push xchg cli inc or mov or mov rclb push ret cs aas ljmp sbbl push jbe xchg mov add xchg fsubl lret pop lcall nop ret fdivp icebp ja mov shll dec pop cmp xchg add push int3 mov test add scas aaa add pusha lea jb call pusha lea jae pusha jmp movsbw movzbw bts mov cmp and push call cmp sub jmp movl pushf mov push pushl ret lea call jmp pushf test sub pushl call jnp mov pop jp push mov insb cmp lea or pop pop mulb fistpll or movsl outsl push in sti cmp cmp xchg out push mov scas icebp scas jbe or mov pusha mov mov pop or inc into dec or jg daa xorb out jbe or mov movsl adc cmp movl sti sub mov mov mov loope fs cmp mov loopne ljmp push mov inc pop movb add stos loop fwait mov mov dec sbb in shlb pop fsubrp cmpsl addb scas inc dec add pop add pop cmp fldt (bad) imul stc mov leave mov and leave and loop dec sub mov inc std adc sub or idiv iret imul pop (bad) icebp aad jae push push mov sub int3 inc jo ljmp scas mov pop cmp mov mov aad stos pop add jecxz movsl movsl jno cld push pop or dec push mul nop les xlat pop mov rcpps adc cmp rorb xor xor dec cmp sub movsb cli add leave in jl xchg (bad) push inc test lret push je xor push adc ror jb add shrb sti (bad) mov xor mov lret ss mov roll xchg jl movsl jno loope (bad) xor or pop sub xchg inc jo dec lock imul jl xor sub shll jbe sbb rcrb mov mov out mov js lods mov pop cmp stos cli adc popf jbe nop xor push cli push sti jge and outsl mov data16 aad ljmp or push xor (bad) mov bound aas mov lret inc pop rdtsc push xchg xchg pop (bad) stos ss mov add adc add int sarl cmp scas mov jb xchg or jne ljmp sbb pop dec repz jno xor sub out js inc or ret jecxz,pn lcall dec pusha or loop and or push aad and pop push mov repz cwtl jbe inc pop (bad) cmpsl mov lock cmpsl data16 ret pop ja icebp dec stc shr dec test icebp mov js ljmp out xor jo loope sahf movsb mov push xor je je call lea repnz das fadds jp in add leave jge mov int sub insb (bad) adc fistpl stos stos jp (bad) xlat fisubl cmp in inc lcall sub std les mov push jecxz push dec std iret mov movl inc and pop jnp jmp int outsl test movsl cmp in jecxz pop fistpll test cmp je fistpll aas mov test add sti (bad) in loopne test add mov ljmp lods sahf inc fs cmp sub loopne pop xor (bad) mov insl adc jmp push xchg lods stos dec lcall insb bound gs and je mov ja mov push jp (bad) adc (bad) cltd addl adc repnz jno jmp sub xchg or stc pcmpeqw pushf add xor aam insl pop dec sub cltd pop sub insl ror lret addr16 or cmpb and in inc js inc or jl push arpl movsb and enter inc in inc add popf pop jl ljmp inc pop notb int3 fwait inc add mov inc cmp mov icebp adc cmpsl push gs flds std fnstsw data16 add (bad) call inc xlat add sarl repnz sub in sbbb pop jp and movsl xchg jns adc mov stc mov int (bad) add les out jle mov mov outsb push jns mov sbb fwait popa dec mov ljmp cmp mov decl int sub and jg in (bad) dec or sbb xor add mov imul push int aas aad mov faddl adc ja push add pusha mov dec mov inc jbe mov push es mov jle (bad) repnz popl jmp pop int pop push jp mov call xchg lock adc cltd dec pop or (bad) cwtl push sbb xchg sbbl addl testl (bad) int mov ret or mov (bad) mov cmp xchg sub mov or sahf cmp mov out xlat pop lret pop lcall stc (bad) jmp arpl mov xchg lds mov jl xchg pop rcrl lahf xchg lcall dec sbb adc cmp in cltd in frstor movsl sub out and push xchg mov in push sbb out push jp ret ljmp cmp int jo mov bound ljmp (bad) pop mov xchg stos jl not lods pop push imul scas inc adc iret shll push pop dec dec test cmp icebp js jno mov shlb pop adc aaa mov mov push adc lea pop mov mov cmp mov xchg push xor sub leave xchg sahf outsb push xor shl fist or mov scas jge jle dec lock adc adc ds and dec add sbb sbb xlat mov pushf cmp movsl pop and xchg xchg push xchg adc xor test dec jmp sbb mov aas cmpsl mov or in push and pop inc push loope cmpsb mov shl ds xchg pusha inc fnstsw int jo adc fwait addr16 addl sahf les xchg ficoml je sbb jmp loope jns daa in jno das lods (bad) clc lods in sbb (bad) mov xor insl xor repnz mov repnz jb stc in jge add fst sub clc xchg outsb adc sub mov pushf test mov mov or pushf cwtl mov dec jne fisubrl jl mov pop iret cmp and push sub sbb jno gs (bad) nop cmpsb stc in xchg cmc jno cmpsb cmpsl (bad) jl rcll outsl add xor pop dec xor fidivrl nop push jp lds hlt dec cmp dec cwtl xor loop mov rorl and out jecxz hlt push push icebp lret loope mov xor mov loop mov test cs gs fcom and test add cmp ss (bad) jg in mov push out sahf scas xor (bad) xor mov rorb xor or ja loopne into dec jmp pop (bad) jmp lods popa mov pop movlhps out daa cltd pop (bad) push pop out ja (bad) fldcw (bad) fistpl xchg dec or imul clc mov push lds aas add pop adc mov sbb jmp or jmp xor daa outsl fsubrp inc movl int3 lea inc dec cmp aam addl arpl mov jle iret pushf ds test jmp xchg gs add pop xor outsl scas inc dec sub jmp mov xchg (bad) imulb sbb add jp fcoml cld mov inc dec jmp sbb ss or ret xor stos pop mov out rorb fistl dec lods fadd mov aad jmp push rcrl mov adc push imul fs aad adcl xor sbb addb daa (bad) lds mov icebp jbe in jge add ret loope out loopne in cmp or xchg jbe (bad) cmp mov seta mov lods int3 mov inc sbb mov enter (bad) push jb fs lds sub push jp push fisubrl bound inc sub mov das xor fisttpl cwtl repz xchg jne jnp std mov xor bsr sub test xor into xor repnz mov das adc outsb pop cmpl mov jge stc push and jbe ret aaa std popl shrb dec dec hlt mov insb out popa jae sahf out or mov add sub sbb push push lret out jnp inc pop fld add insl and add add clc test cmpb inc cmp pop cs xor sbb shr mov lock jmp not call mov pushf mov lea jmp not add rcr mov cmp clc test pushf lea je test call fdivl push inc (bad) push sahf jnp sti fcmovnb adcl and (bad) sbb cmpsb int3 stos jo sbb jg aad jmp push push adc or inc and or insb les mov je xor dec jne mov outsl sub aad fcomps mov push xor data16 sbb outsb repz pop mov sbb mov xlat mov push push sbb add iret jae call xor jge cmp fidiv adc push pushf call scas inc fimull xchg dec pop out mov xchg sbb dec pop sahf dec jp,pn mov adc push aad ret or or (bad) in dec test scas pop scas or jnp dec jle (bad) movsb and add inc mov jns inc add in add fsubrp fcom mov emms mov push push ljmp cmp enter sub gs push xor xlat sahf cmpsb cmpsl icebp nop sub push sbb divl push sbbb in sbb inc sbb repnz cmp sarb dec sbb lret mov xlat mov cmc xlat iret mov sub pushf data16 rcrl int3 pop and or lahf repz outsb cmp out push je jbe (bad) mov xor cltd xor dec mov mov (bad) jg pop fldenv and cmp push shr ret xchg je daa jecxz lods and xchg sub mov adc inc fadds dec repnz cmc sar push sub or sbb adc fs xchg sub outsl ja cmpsb dec popf pop push (bad) or pop add in (bad) insb (bad) dec jp or inc sub (bad) jo mul lods mov mov mov push adc in xlat insb imulb sti dec xchg push insl push and or data16 (bad) (bad) jne (bad) or (bad) xor pop icebp (bad) jecxz faddl call das shrb pop lock push into mov adc loope pop daa pop cmp bound push insl mov fistl and mov fidivrl mov jb mov mov decl pop push sub insl inc pmaddwd dec in fnsave or out sldt add add add add adc add add fldt add fistl or add add repz add or add add aaa or add add lcall add adc add add bound add dec test add stc out add add add lret adc add add ficompl or add add shll add adc cmpsb (bad) adc push dec adc or adc das cmp add add add cli dec jp pop adc mov jnp sub stos jbe sbb mov sub inc sti rcrb or aaa aam loop fs add mov xlat popf ffree sbb (bad) rcl mov push sub or inc lret cmp xchg cld cltd mov push fwait adc mov jnp sbb adc cli push jmp mov gs mov mov adc xchg hlt outsb push jp sub xchg (bad) incb mov cmp adc rorb pop (bad) xacquire and mov cmp jl adc pop aaa (bad) xor out dec jp (bad) push std cmp mov or stc stos jne push lock mov popa repz inc cli (bad) loope mov enter cs cmpsb in arpl xchg sub push push mov (bad) fldl sbb dec icebp in data16 insl outsl dec (bad) sti xchg imul test mov lret sub leave jne push fisubl xlat std out data16 jp mov cmp pop imul fwait pop mov fs shrb inc out push nop test lcall loopne add xchg scas inc leave inc sbb out in jo out mov aad pop sbb inc lcall mov adc add adc jbe or xor adc jle or call adc add add add add add adc add add add add add adc and adc xchg sub add add add cmpsb into verw adc sahf sub add add add ret enter adc add add add add add adc add add add add add adc mov or out ret dec adc add add add add add adc push adc add sub add add add adc adc pop adc add sub add add add daa adc add add sub add add add and adc insb adc add sub add add add mov adc je adc out or mov adc jl adc out sub add add add mov adc test adc add pushl popl test call outsb inc aam dec jp movl jl es (bad) lds cmp fnstenv in scas xchg push push clc cmpsb pop cmp cmc imul (bad) cmpsb les mov xor mov shrb icebp inc popl or notb nop mov lds fnstcw jns in aaa pop ljmp push add sbb pushf add pop nop inc mov incb cmp mov xlat cmp sub pusha insl and and fcompl faddl add mov not dec add aam sbb fwait mov fstpl aaa mov and adc inc xchg mov leave icebp ljmp mov js xchg and sub out movb lea jae call jae sub jp add lret or das testl fsubrs stos gs sahf xor lods xchg pop sbb lret pop push out test dec pop add xlat xchg roll pop dec dec subl lahf jmp jnp stos hlt xlat dec and xlat mov push stc cwtl stos cmp inc sti punpckhbw add pop push fucomi fs push rep jmp test pusha lea je test test stc sub cmc push clc cmp pusha pushf movb jmp and jp push out lahf pushf ds out mov mov ret in mov mov (bad) dec and lods mov pop adc shrb es rcl pop jno xor bound out (bad) sbb push mov pop (bad) js fs stos nop rcrl or xlat test xchg jg int inc push loope int3 cltd adc push pop push aas fidiv das lock adc push femms push aad test ja lret movsb push ds jnp es mov and mov and sti scas sar imul sub xchg outsl (bad) mov pop adc push mov setnp push inc movb push call movb movl push lea jmp movzbw mov pushf lea jmp cmp int3 repnz jp arpl lock and aas leave hlt mov pop add ret inc fstpl pop test les xchg ret and rclb fcompl int3 jle sti push or inc adc xchg xor sbb gs xchg fidivl mov or jne stc js stos lret aas ret addl les jp mov jo pop insl mov sbb popa arpl std imul push ljmp out mov jp mov mov cmpsb fistpl sbb mov lret cmp in inc jp imul xor into rclb or jmp sub mov movsl shl mov clc pushf mov cs stc (bad) mov rolb lea sbb pop jb (bad) sbb ja nop loopne jno cmc addr16 dec pop popf inc aam in (bad) dec or call or popa aam inc (bad) xor enter jb repz add loop ss adc call bound (bad) lret popa and pop lahf xchg scas mov mov (bad) push ds or add push imul inc lock aad mov jge call out mov pop dec adc mov jmp orb xor or mov mov bnd mov leave sbbl aaa clc aas adc out lahf ss mov sahf mov ficoml inc xor jmp shufps imul xor cwtl push lret sbb fidivr (bad) rep mov push int3 and fcoms push bound iret fiadd out lret sbb arpl cs cmc xchg and test or in sarb dec rclb jg pushf lea je test push add bt cmp push movw pushl push lea jb pushf pushl cmp pushf pusha lea jae sbb mov inc bsr mov bsf rcr mov push xor stc pushl pushf repnz mov movb lea jne xchg movzbw mov pusha not not shl sub or lea cmc call jmp mov lea jne stc add mov pusha add clc movzwl sub jmp not rol mov setne rol setno not setge mov stos pushl mov lea jge pushf pushf pushf lea call jmp add push push push inc jb gs gs outsl jb add std into daa pushf neg call jmp stc jmp mov jp enter mov xor lds mov or push cmp sbb out push add ret mov in inc inc hlt ds call dec cld int inc flds push or sbb mov loopne push enter mov xor xchg clc mov inc jb in lods push mov mov sub and mov in mov sub and mov lret cltd jle mov add orl jbe icebp xor test leave and mov imul mov pop lea jp daa mov je outsl fs gs imul add test lcall add cmp add jae test jno mulb iret xchg add add lahf pop pop std adc sbb clc cmp fmul mov imul aas sub xchg shrl out xchg mov mov pushf sti xchg inc add arpl xlat push insl jns inc out mov cs stos aas mov inc or jecxz and out enter jl fbld cwtl jecxz cmp bound decl pop rcl pushf mov lahf inc sbb shlb nop or test stc cmp push lea je push cmp jmp test mov jp push mov xchg jl in arpl xchg pop cld lods imul out add mov fdivs andl int mov mov aaa or xchg (bad) jnp cmp fwait or es loope push mov js sbb pushl lea dec mov xor mov inc cmp mov push ja aam data16 and daa push lcall pop add movsl jecxz adc mov mov push mov ret jp pop jge and or sub push push and leave cli outsb ficom out mov roll cmc and xchg rolb int mov dec sbb mov movb fldenv ficom push jnp jae test xchg cmp (bad) fsubs lods push sbb pop mov push push out pop data16 mov stos fbstp xchg mov sub cmc mov or or adc pop aam pop sub (bad) xchg sub scas adc sbb mov inc cld pop ds mov pop inc pop fsubr pushf popaw leave stos rol mov mov loopne sub dec sub loop dec (bad) mov xchg fs adc es sysexit enter mov fld mov (bad) movsl mov sub fildl jl outsl loope push not mov mov pushf lea jmp inc inc dec xor cs insb add mov lods jno push lret insb dec xor add loopne data16 jo loope fdivrl loopne inc lret jne sub pop cmc (bad) mov cs mov outsb sbb fadd pushf xchg or push data16 mov push iret fisttpl adc inc les lds out (bad) sub jne cmp leave cmp sbb hlt or aas xor inc mov jg clc sbb inc jp or sbb loope arpl stc dec les loope insb inc pop es mov mov sbb (bad) mov mov shrl push push mov clc cmp stc push pushf fwait xorl rcrb repnz in push sub test insb jecxz,pn je out (bad) mov inc sub mov lcall fsubrs bts xchg push mov (bad) lock cs fwait scas cmc dec jl inc xchg not push mov fsubrl pop dec ret out inc inc mov cmpsl fnsave movsb push add fisubr les mov jp dec int and cld lret add sti xchg cmp fidivr in xor (bad) cmp jno lods fldcw and movsl pop scas jo lret enter pop sbb dec adc cmp jns jb jae (bad) out ffreep leave push inc cld mov mov stc pop sub xchg xchg or out mov dec adc cmc addr16 lret (bad) mov gs stos jg cli add rcrb popa dec mov out cmp lods aad aad lcall shr cmpsl cmp mov pop icebp hlt mov cmpsb dec mov (bad) mov cmpsl lret sbb push test push outsl loope xor test mov cld pushf scas sub cld cmpsl stc add pushf push pushf push lea jmp cwtl data16 jp cmc mov cmpsb xchg ss mov push xor loop jo push pop fildll mov adc mov xlat fnstenv mov xchg xchg lret outsb test dec xchg mov jne sbb or mov stos outsb push sbb mov iret push jg sbb jnp or push mov adc sbb sbb xorb outsl loope loopne pop lret jmp adc pop in rorb les scas lods pop psubusw xchg or add scas jae (bad) jecxz or mov imul dec dec adc (bad) repz mov xlat repnz mov jnp (bad) jge and lods push insb insl out ret add mov pop add fisubr xchg pop jnp stc mov (bad) jg faddl out fstpt iret fwait push test xor mov sbb outsb jge inc push int3 ja int3 push mov jge add or pusha popf out faddp pop lret xchg push fwait push icebp xchg or aam ljmp lret or dec icebp scas lret mov das pop (bad) jno sub sub popf scas adc pop ljmp fcomps jecxz mov pop mov adc mov fild xor mov repz sub imul pusha call pop cmp int cltd outsl inc or les mov inc xor add xorb cmpsl dec xchg push sbb jb roll mov lea and jb jb pop mov mov les cmp lea arpl jmp or mov cltd sarb ja lfs repz mov or outsl and enter lret fmuls daa sbb ret inc insb cs ss sbb dec push mov or mov add cmpsb orl and popf cmpsl fnop orl btr bsr sar mov stc clc pusha sub cmc push cmp repnz pushl mov push lea jne pusha mov shrd sub rcr mov bswap btc lea jmp lea pusha call pusha pushf add pusha push lea jmp push seto lods stc cmp push call cmp cmp cmp jmp lea jo push lea jne shl btr (bad) cmc mov btc btr neg rol sub btr mov cmp sub cmc pushl cmc stc pusha cmp jmp hlt rcrb (bad) icebp rol mov test push inc sbb pop loope cmpsl shr sbbb jns mov sbb es cli enter xchg movsb inc and insb xchg pop and iret inc pop cmp cmp out mov dec andl popf ja inc pop lds inc mov add mov ja (bad) lods sbb add aad (bad) iret outsb sub outsb sub sbb pop ret xchg rsm xor imull out test lds out and bound ss mov add out fwait xadd push mov cmp rcl movsbw sbb mov cmp sub bts mov mov clc xor bt repnz jmp out jae cmp push lret lahf adc int3 mov dec in xlat insl int3 push fdivrs fisttp rclb data16 mov aad pop or cmpl repnz adc or mov push or sub cld pushf sub adc mov addr16 ljmp jns cmp jnp push out pop insb push inc les decl mov vpunpckhbw (bad) push jbe in cmp shrb jle sub mov jmp stc das aas (bad) mov into mov mov lock mov and cmp mov jmp mov rcl test lret out nop xchg jbe cli jb jg cli cltd xchg jnp int3 xchg notl fcom inc cmp mov xchg push imul idiv insl push jb (bad) int3 jo xlat test test test and out cmp xor adc hlt aad push cmp shll mov (bad) mov adc jp out pop adc mov jle pop inc call pop jecxz or call xor mov xchg add in arpl inc nop repz mov mov mov std stos pop sub daa sbbb adc stc and nop mov lcall ss or xchg pop cld pop mov mov jb aas sbb nop aam (bad) dec hlt jp jbe mov add inc aad xchg dec movl gs add xlat mov outsl sarb jmp fdivr jmp add aad ds add add aaa mov in adc imul jp cmp mov das dec mov dec inc push xchg dec xor daa jecxz pop ja xor adc xchg cmc lock adc fidivr sahf push cmp push pop pop shrb jb dec sbb pushf movaps loopne push and cli inc dec (bad) lret js (bad) xchg movsb cmp hlt pop push test gs sub pop mov mov outsb outsl xor gs pusha daa sub mov pop inc fimull (bad) lds out scas or jp fs das repz addr16 es repnz jge cld aas out cmpsl jae adc mov int outsb dec dec jecxz (bad) jmp in outsb mov into cli adc xchg pop sub push sub rclb cmp push jp jnp adc (bad) aaa inc mov fwait mov add push xchg sub repnz fcmovbe ret stos xchg mov divb sbb fstl push lcall pop lock xor inc xor hlt xchg in dec adc push lods lret push jno xchg pop sbb rorb lods int push out aas (bad) mov pusha xor xchg lcall push ds fs int3 mov add jp stos in ret jp leave inc fsts inc loopne adc mov je mov xorb int fbld mov cmpsl push inc push lock aaa jecxz cmc fsub test test lea add inc fcmovbe inc (bad) lea scas dec outsb xchg mov aas and or xchg inc aam push mov stos ret in inc outsl mov pop dec les inc movsl sbb jb in ja int nop push cmp cmp lods mov pop and cmp or cwtl push inc test mov insl pop mov inc cmp scas dec lds xor adc jno pop adc push stos data16 pop jge mov idivb pop fnstcw lcall aaa psrlq roll inc inc imul loope push cmpsb test xor nop movsb sub in mov mov test mov sub test add jmp mov bound xor jl sbb cmc mov hlt mov divb mov pusha and mov sub data16 fdivl or cltd mov sarb out popl jb push fxam inc mov mov xchg outsl and lods inc ss mov les cmp lret pop scas es and mov xchg jl mov add ss mov sub mov mov adc push imul in ret xchg dec (bad) (bad) fistl arpl and mov lods xchg addl xchg adc lods popf lahf xor push or ficomp mov add sbb lret push jnp mov leave mov leave xchg mov (bad) imul mov loopne,pn jp cmp push enter into sub jle push outsl jo mov (bad) ret push mov push push push outsl mov ljmp sahf jbe pop scas jno fisttp adc xchg outsb adc or mov push pop fsts fsubrs out and xchg or inc (bad) fnstcw rolb adc unpcklps mov mov xor enter push jp adc incb ret scas fistpll cwtl sahf cmpsb mov aaa call lret mov fildl mov mov out (bad) out and and xor movl out jecxz scas dec stc ja jo outsl setle imul dec orb test jp (bad) mov daa jmp or jecxz pop ret pop aad xchg dec out jg out imul in int pop inc fnstsw (bad) (bad) mov and or vmwrite sbb scas inc jg shlb test pop dec mov lds adc xchg pop hlt js aaa pop lret inc popa neg add movsb sub mov mov xlat dec dec mov aad sub or loope jae and adc adcl lods dec mov mov popf cltd repz mov shlb mov pushf ret (bad) loop mov rcl mov mov pusha lea push out ljmp call imul repz add js sbb ret sub loop xchg jne push enter jne xor pop pop rol les lds std xchg fistl or ret xchg adc mov cltd or pop adc gs ror mov adc inc int3 xlat xchg push test mov sub mov fimul adc loop mov cmp jmp jno popf cmp test outsl cli mov mov test std and xlat lods inc jge jb aas inc and xor sbb mov gs out mov not pop mov jmp push cmp test (bad) mov (bad) mov sbb test out js sbb mov insl sbb mov iret sti out divl cmp loop jl in pop or test imul hlt notb aam xor sub aas loop ret sar repnz sub sub bound lds xor mov mov jmp adc stc ret rcrb inc gs mov add roll and lds lret icebp lock mov lock pushf scas cmp cmc jno push xchg adc add test push adc dec push pop add sti insl cmc xor fs ret sbb cmpsb jbe cmp out mov insb sbb lret mov into sbb mov out movb out jns sahf mov je dec add mov dec cli push jl in es lcall mov loopne dec inc stos sbb jge dec lret mov adc or sub adcl cwtl xor add stos into pop or sub or and les xor out jae bound mov int3 adc or mov (bad) mov add (bad) mov scas push pop add stos adc jp add cmp mov mov xor mov out inc xchg icebp (bad) xchg movsb lcall int3 lods xchg jl cmp cmp pop in mov ret cltd and cmp pop in mov out mov movsb mov cltd addr16 test mov arpl jns lret jb sub xchg push ja xor cmp push mov mov mov daa sub lds push shlb xchg sub xchg jns cwtl sbb popf rcrb mov lods inc lock test std test pushf push pusha call pop movzbw bswap pop push call fnsave pop jp,pn cld mov hlt (bad) xchg sub hlt mov push cmp imul ret inc inc adc ljmp fistp mov aam or push lods sbb lahf xchg hlt fwait and sub or je notb dec sbb or jnp enter sub icebp sub loope lock cmp hlt popf lods mov sarl in add xchg jl dec sbb rcrb pushf cltd sahf int push jne inc loop mov stos add push jl inc inc (bad) dec xor movsb jp push xchg cmp jmp xchg imul xlat rolb int cmp enter xor scas add cmc mov pop hlt and pop xchg sbb popa lods mov stos sbb mov adcl cmp in add pop push dec (bad) lret and (bad) xchg mov push loop das cwtl push clc pop (bad) xlat lock dec and test out fwait adc push adc (bad) xchg idivl out mov ja scas gs repnz out scas fistpll and bound out aad push push ds dec pusha enter scas mov ret (bad) stos and mov mov jecxz jae ss push insb add pushf jmp js push sub mov push inc adc fidivr xlat cmpsb jo out fs es (bad) mov adc lods fmulp sahf cmp (bad) pusha sti pop xor sbb subl xor out mov pop sar sbb push imul pop ret xchg mov push jle hlt mov and int clc push and pop (bad) notl shl pop xor stos or (bad) daa mov movsl popa fs (bad) lock sub xor or jmp mov imul adc fistl sbb push outsl xchg mov pop add adc (bad) dec test out rorl leave jmp cmp in shrb int scas pop cmp and mov cmp inc lock test gs stos mov adc mov arpl jl mov inc push adc mov xchg push out jne dec insl (bad) and out dec xor (bad) cmp aad mov sub cmp leave jle les adc jle out js leave sbb in pop mov pop repnz inc stos and jae sub loope mul dec movsb stos insl mov mov add dec adc fildll cmp pop movsb loop out jnp pop fwait xlat (bad) add mov out or fldenv loopne mov and sbbl mov (bad) lret cltd mov cmp jb (bad) mov call xchg in fdivrs ja or ret subl dec xchg (bad) daa fadds dec mov sbb jo sahf mov test lods pop sbb rol icebp pushf dec or mov sahf xor in push cmc or int3 movsl aas push sbb popl pop ja sar mov imul popa in gs add fsub test mov nop adc cmpsl xchg test mov add push sub iret mov test stos mov push or outsl adc jbe jecxz aaa cltd in or adc cmpsl inc bound cwtl insl cmc stos data16 fadds cltd pop shrl pop sub mov nopl movsl xchg movsl and pop add fs dec pushf jmp sbb js sub mov in pop cmp push stos jnp test (bad) xlat test std sti lret push or (bad) xor das lds leave fisubrl xchg aas mulb aad lea stc push push not jbe adc (bad) push jae xchg out scas fiadd inc pop fcoml add fwait lahf aas mov mov and mov jne pop stos pop aaa in mov cmp lret mov rorl pop mov (bad) xchg mov lret mov ds sbb inc add and xchg xor dec or into mov test jge cmp cmp mov mov mov cmpsb fdivp jne or js daa (bad) mov adc es sarl push jno mov inc in iret mov mov je cmp in jns (bad) sbb loope lcall sub jo out fsts fiadd sub pop sarl mov jae xor fsubs xchg cmp cli inc sbb cmpsl jne add out add mov lods cmp and mov popf push and insb mov sub adc leave pop daa (bad) or rorb pop cmp add jg mov add pop xor xchg cmp mov or ja cmp sbb insb out cmp mov fldl xor or enter push add dec pop sub xchg sbb subl call adc xchg daa sub rep pop xor jmp mov (bad) adc test mov popa rcll popa pop jo test dec sub mov pop or or hlt test jns jl movsl add popa fdivs push cmc push loopne jae lods aad push jle add aas stos mov loop lcall xchg lea scas adc and mov test push pop or test mov pusha add addr16 dec add inc mov movsl cwtl push mov pop add jmp xchg int3 fadds adc cmp inc aaa dec and cmp and push add test add bsr mov test clc cmp jae pusha pushl lea ja lea xchg not jmp jmp or jp jbe ljmp mov and mov or in rolb lcall mov sti push sub enter (bad) cli outsb lret cmpsl int3 scas ret mov loopne cmp lahf scas push mov ret cmp push push cmp aas or mov lret mov jbe scas or push roll mov dec and ds xchg (bad) out xor xor pop lods repz call out sub push int cld aam icebp jns sbb xchg lret or sbb inc shrl cltd je stos insl push daa jp mov (bad) mov xchg lea shlb xchg adc in popf test fsubl pushf dec push sub stc stos jns aas test xchg mov or jp shrl insb sub int aam (bad) (bad) jb push dec sbb ljmp sub rcll pushf insl or mov pushf ljmp sbbl pushf cld mov aaa add cmp fcmovnu inc sbb push adc divb mov push xor mov rcrb cmp xchg inc mov xchg push std aad fistp lret scas sahf or pop (bad) ror push sub inc (bad) push xor sub push mov movsbw lea movw mov pusha lea bswap cwtl pushl popl bswap pushl setg mov lahf push bswap jmp stc sub movb clc jmp xor mov cmc clc sub jmp mov adc push mov pusha movl lea jmp test repnz lea jbe pushf pushf lea jne bswap push movb setg movzbw jmp movl pusha mov push movl push pushf movb lea jmp pushf pushf pushl lea jne rcl mov bt push jmp mov adc jp mov lcall aad scas mov pusha dec or mov icebp mov xor push addr16 add icebp stos ret pop arpl iret mov cmpl pop xchg into insb cmp lds lea in mov mov inc (bad) negb cwtl scas mov packuswb pusha enter inc hlt lods adc insl adc cmp mov enter clc cmp mov cmpsb data16 sbb sub mov lret adc sbb sub test out mov loope jb push mov push lea jne push pushf pushl lea call pushf pusha lea jmp mov add cmp cmpsb sub rcll inc stos pop cmp scas or mov stos dec cli ficompl mov into fwait cmp fsubl fimull lods fnstenv mov std test iret push jle das cmp jo mov test out xlat lock xor pop ret movsl sbb int push xorl push fisub inc std mov xchg cmp sub (bad) mov inc sahf lea maskmovq mov addr16 les pop xbegin xchg test add ss jecxz (bad) scas arpl arpl pop jmp nop push sbb pop call pushf imul add shr cs lret divb rcrl mov add sbbl movsl ja xchg and les aam pop sbb push mov xor fdiv xorl (bad) popf pop sbb fcompl mov lds pop sbb inc movl ds push fdivrl add movsb mov push imulb loope enter pop push lret fmull dec push in inc cld ret mov mov jne dec jg inc in ret inc add mov xor stos aaa int3 clc (bad) ja add xorb out loope jge jnp xchg popa mov lock push pushf les repnz jle imul enter xor mov movsl pop sti insl cmpsb push stos in cmpsb xor mov aam mov sub cmp lods pop out sub pushf in dec pushf dec std adc test pop lret mov pop xor add pop mov outsl ja test test adc fs stc add (bad) adc adc xchg stos push jg lretw adc cli add xchg cmp dec and pop ret lea enter (bad) test cmpsb cmp (bad) mov adc test pop jbe xor fnstenv ret stos add mov adc mov mov add pop jmp add dec icebp call jb cli mov pop test sahf je mov lret inc repz push aaa je (bad) imul inc xchg push pushf hlt pop es add sub add inc mov mulb xor lock xor xchg mov push xchg xor sbb scas xlat lods les xor (bad) jmp jp movb sbb fildll push sqrtps (bad) mov xor jno sub lahf pop fist movsb jle std mov aas lods add pop std pop out mov jb mov outsl mov dec and stos pop cmp mov out and sub test and rorl pop xor ja stc into inc popf xor and jl out and (bad) push daa jae clc aad sahf out mov push int3 jb adc pop jg sub dec sub aad jp cmpb rcl mov roll push loopne add add stos jb fidivrl cmp add rclb cmp add std mov inc out mov xchg inc xchg fcomi jb mov mov or cmc cwtl mov mov mov cwtl or idivl loopne sbb je jecxz add fwait pushf lcall inc dec repz cmpl inc ja jmp ljmp cmpb xor (bad) or lds rcr pop aaa int sbb (bad) xor in or push mov add arpl sub scas cltd sub mov mov jb and mov daa (bad) lock xor sbb add xor dec cmp cmp out mov sti ficoml mov xchg mov out in sarb movsl addr16 or in inc or icebp repz dec (bad) outsb adc notl lea fcmovbe pop (bad) clc in inc in aad pop sub shll mov cmpsl imul sub pop lret sub fmulp push mov mov xchg dec sub (bad) mov das in xchg mov or push into push pop out iret inc call sbbl int3 mov mov mov xor imul stos jb add lret cltd pop stos aad and js rolb fsubr jg cwtl mov jp push je int3 sub scas lods cmp nop mov repnz mov movsl push repnz adc stos jnp nop push add jbe push pop iret cmp dec loopne jno push daa dec adc cmc adc dec jns mov popa cwtl test add pop and jae cld (bad) inc clc adc sbb sbb ret lds mov xlat in xchg orb and int xor aad xchg and adc ret lret sbb arpl pop and dec loope push xchg or aaa mov and pop dec or sub sub iret inc movsl push or lods dec mov in jae xchg push push cmpl (bad) xchg sahf enter sbb adc cmc (bad) scas test add mov fucomi in rcr cmpsb push insl add (bad) in je mov sbb mov clc bt cmc add cmp mov push pushl movb cmc test pushl push lea je cmp cmp add stc jmp sbb jp insb and (bad) in inc pop sub popf inc inc xchg out shrl test divb xor mov lahf pop (bad) cwtl addr16 push test and pop mov sar sub push jecxz insl push ss (bad) mov mov mull imul sub add pop push cwtl into adc xchg leave fldcw (bad) leave je adcl jns xor fsubs dec in pop mov adc xchg in call mov dec out stc and enter repnz push loopne adc mov xchg or add rcrb lea jne push pushf mov mov pushfw popw stc stc pushl pushf mov cmc bt call scas push (bad) sbb sahf add fistl stos jp or ror js pop in mov mov jo test roll cmp (bad) sti enter cmp dec ja insl xchg xor cmp mov movl adc jae jge ja (bad) jmp mov pop jmp pop dec data16 push ret mov outsb inc inc fstl add icebp js inc dec test aaa mov lock subl jmp cmp lea ja bt setl shr sub test add push bswap movzbw mov movb mov pusha mov movl lea jmp pushf mov lea ja or cmp ror sub shld cmc setl test add rol rol mov cmp mov stc call mov jp sub sbb mov sbb mov cli (bad) mov lock add jecxz mov adc enter cmp jg inc push cli (bad) xchg jns mov out adc mov (bad) adc daa sbb and pop dec mov jle gs add sub out insb push lahf jnp pop jmp popa out fwait arpl shlb xchg pop xlat pop pushf adc les outsl movsb enter lods and jns mov pop xchg inc mov cmp popa xor pop movsl jno hlt les jne stc int mov xor aaa fsubrl jno xchg cmp and sahf add pushf insb and stos stos dec adc ss rep enter mov lret add mov adcl dec and mov push fnstsw jne jp in jl loop insb xor movsb jo in insb popa cmc lret sub push pop daa jne ss xor mov cmp and inc inc fidivrl icebp dec adc (bad) outsb jle jne dec (bad) sub bnd jbe arpl (bad) pop xor ret aaa mov cwtl push push sarl fidivrl sbb and je shld add not mov stc add pushf cmc mov mov xor sbb mov clc cmp mov movb lea jbe xchg adc ror mov dec cmc shr cmc add stc movzbw mov bsr add cmp shr rcl movl push movzbw mov lea stc bt call pushf pusha jmp mov jmp in mov sbb psubsb sub jmp insb add mov sahf push cld add xchg daa test pop popa mov xchg fildl leave repnz pop comiss jl jge and cmc dec (bad) (bad) cmp mov or jg je jmp sub cld mov pop cmp dec mov inc pop or test or shll mov lods pop adcl dec jl pop jno aad pusha dec scas jae pusha cli popf (bad) mov stos hlt xchg scas scas cmp add jbe mov fstl jg bt imul add jg cmp pushf add movb lea jmp scas cltd inc and jp cmp enter adc mov jb sbb (bad) test (bad) es lock xchg (bad) mov and lods adcl or xchg hlt fcomps jne adc cmc sahf mov jb sbb mov (bad) lahf push mov push into and pop rorb data16 popa bound pop inc cmp jns (bad) mov fs in add stos dec xor jns fsubrp stc sahf mov dec adc andl int out repz cli jecxz and adcl mov (bad) mov add pushf call jmp neg pushf ror clc push lea jo not clc pushf cmc cmc rol pusha lea call bt cmp pusha call cmc cmp jmp aad sbb mov daa out mov jecxz arpl cmc lds test mov cmpsb data16 xor fild addr16 enter cli push and dec push out or xor add sub sub dec dec aad mov xor cmpsb or dec jnp mov cld and imul mov loopne xchg jl fwait adc cmp test repnz xor xchg inc (bad) pusha xor jne jno cmpsb imul jbe mov pop bound ja adc dec in dec mov add xchg lcall jg sbb or jnp inc mov out inc jecxz push mov xor pop lock pop movsl pop leave mov adc sub inc dec or adc mov cmp mov cmp lret sub rol outsb push pop in mov xchg mov mov pusha enter jo out pop adc mov xchg daa adc test adc cmp cld scas jne or mov jno inc push or fild call cwtl mov jp push add ljmp leave sub jmp ss inc je sti cmpsl jge repz push add aas or dec out cmp enter and sub push repnz add pop sub imul inc sbb xchg roll xor (bad) js addl pop jp loope xchg into in insb cld lret push sub std or or rcrl pop mov pusha je mov movsbw mov movsbl movsbw movzbw lea mov lea setl mov pushl mov jmp pushf jmp pushf pusha lea jae pusha call cmp call jbe push adc pusha lea jmp dec repnz adc jp out pop pop std iret call add fwait orb leave (bad) lcall cwtl xor iret inc ljmp dec adc cmpsb mov loop loopne mov test dec (bad) sbb popa jmp push sub sbb ss and rorb fsts pop add sbb gs loope adc sbb xor test sub cmp jo in mov mov lret jmp shlb sbb xchg andb pop ret xchg jp jnp add xchg xchg js daa adc pop dec inc pop mov hlt movl pusha pusha movl pushl lea jmp sub mov adc int add cs or dec xor popf jne dec adc movsl nop xor lods and lock mov sbb mov xchg dec xchg mov movsl and jecxz test or jp and mov mov dec add mov jmp sbb sub loop sub cmp fistp jo stos add movsl movsl scas divb pop in xchg lea and jp push (bad) js aad fisubrl mov add das repz adc jp inc pop mov fisubrl push add mov sbb cmpsl or pop gs fmull ret dec lods popf pushf inc lock inc das les in mov jae mov int enter pop adc out xor imull hlt mov aaa jno int3 cmp jne adc xchg inc rol xor mov xlat leave cwtl movsb mov inc and lea dec sub (bad) jae jmp dec lds rolb inc and adc addr16 jmp cs mov dec mov push pop imul dec push dec add mov sub mov cmp xchg lds mov inc mov mov mov movsl jle cmp jnp imul bound popa add mov pop and mov inc xchg scas inc or lods movsl jnp mov sub daa call xor cmp inc (bad) lcall scas mov movsl dec lea nop mov inc out mov sbb inc aad and pop xchg fldt aas (bad) out inc pop xchg dec xchg push mov adc cmp lea into mov push dec mov arpl jno insl insb imul mov gs pusha mov pop pop pop pop pop pop adcb push mov dec dec mov inc inc inc inc inc inc mov jle jl jp xchg jbe je divb jns cltd adcl call mov outsb or cmp insl sub das in rorl push push sub sub sub stc stos or ret sbb sbb (bad) sub cmpsl mov call arpl sub movb loope fstpl in dec aam jl xchg pop cmp scas dec push les es sub ss pop inc cmp jp jle add dec inc xchg cmp sahf mov stos mov insb dec xchg ss aad or lods icebp dec stc iret stos adc cmp cmp push test xor mov jbe jle dec dec sahf scas add sbb test stos roll adc xor cmp push add sahf mov mov test stos leave inc adc push push push icebp (bad) add mov and jbe dec std in repnz pop lock loope inc cmp lret lods jb es divb scas lds push lret movsl mov test sti cmp je stos mov sbb jp push bound imul aas add pop pop push and imul pop pop pop outsl add pop insl inc jl scas jmp insl pop call imul fsubrl sbb jle pop mov inc pop mov popa mov jnp jnp movsb call inc test mov mov push inc lea gs pop dec bound subb dec sub dec pop pop push dec (bad) addr16 subb xchg mov add jle pop inc lret test pop dec test mov (bad) nop dec push mov popa push insl mov sahf inc sbb inc dec pop dec scas jl inc inc jp jnp dec inc jo js dec mov jle stc push int pop pop gs pusha and xchg pop ss and cmc push xorl icebp stos roll xor dec mov aad lods jmp push mov add jbe add imul pop pop add add stos mov xor test in mov adc shrl mov test mov cmp dec std mov mov (bad) dec roll mov jle lret stos fnstcw mov adc mov dec lcall lret cli inc (bad) pop mov push gs jno test scas mov or dec addb int ucomiss loopne mov (bad) outsb xchg clc sub into mov scas push push in pop (bad) in mov in les cmp mov or cmpsl xchg add dec int add aam xor loop and dec sub rcr lahf or mov and push loop stc fcmovbe jecxz mov decb rol cmp mov sub (bad) pop or inc mov dec jmp xchg out dec call in xor je mov (bad) lea xchg insl cld rolb je cmc test repnz aad fisubl lock pusha inc mov xor scas add jl mov or rorl pop xchg test sub mov fnsave xchg out jg aaa pusha mov lret imul std mov jmp fisttp bound xchg int xchg adc call out lret shr decl shll fstpl inc leave adc cmp push les mov pop dec sarb mov cmp (bad) (bad) stos stos scas (bad) jmp int3 xchg popf insl add jns int3 lea jnp mov fisttp cmp mov lret xchg cmpsl jecxz nop movsb mov sub mov lock imul shrl or xchg mov imul xchg lods add inc aaa push mov notb xchg sub dec dec xchg xor mov sti stos fstpl xchg sub adc or sub pushf jmp data16 daa jl dec jne pop cli mov lcall outsb aas jne sub mov lret push shl (bad) mov mov push je cmp or rcr aas mov mov push mov (bad) sti lds xchg sub lret cmp arpl fnstsw mov xor mov ja repnz pushf fwait lcall mov jg inc pop dec xchg test and popf mov cmpsb or dec pop frstor push xlat movsl push insl xor ljmp pushf pop pop sbb jbe pop fwait imul inc push jb inc lahf sahf mov scas pusha dec ss sar add data16 cmpsl or pop cwtl push jbe fnstcw jmp leave sbb push inc xchg int test sub xchg jg std inc mov mov cmp pop push mov aaa (bad) pop ds mov out aam lds dec fistpl and ds xchg pop push mov scas sub sahf fwait add pushf mov outsb mov add mov push movsl dec scas cmp dec lds xchg ds cmp std inc jge mov pop push xor xchg inc inc scas frstor push inc mov jns ljmp inc lcall jmp popf outsb or in stos xchg push inc jp jnp push jmp cs mov bound imul and inc mov mov xchg stos mov add stos leave cmp lods pop sub inc dec stos jmp cmp dec pop push xchg xchg mov add stos fs test inc mov add stos js mov jnp inc fwait stos pop cmp mov test and dec pop loope icebp pop jo mov xor inc imul jmp mov subb and xor pop add stos lret jmp sub lea inc or (bad) mov cmp cmp sti push add stos sbb (bad) stos add aam mov add mov pop cmp imul lds jecxz jno inc mov xor push pop xchg xchg repz stos popa cmp sbbl sub mov mov (bad) push imul stos stos sub outsb mov imul cmp push mov add lds mov mov add stos xlat jmp cmp call add stos and inc pop fist cmp (bad) mov aas cmp adc aas mov add cli aas mov int3 (bad) cmp jmp aam scas (bad) cmp jmp aam scas lds enter dec stos call clc iret inc sbb fmuls and loopne lds iret inc lock (bad) cmp aam scas (bad) inc cmp cli (bad) cmp aam scas lds iret inc loop xor aas jmp iret inc daa (bad) (bad) cmp jmp iret inc (bad) fistpl (bad) cmp jmp aam mov cmpsb ja (bad) mov jae mov leave jne dec mov dec mov dec mov jp lods stos jb scas mov je,pt aam jmp xchg mov mov stos or popf xchg pushf dec mov push dec mov cmpl mov gs outsl (bad) fidivr cs addl mov xchg push or inc mov mov mov sub cmp mov insb push jbe cmpsb jnp pop push fadds sti mov mov adc dec addr16 pop pop movsl add pop inc notb push stc xchg lods mov fcmovnu inc test mov pop out dec mov pop mov cmpb jecxz inc jb scas pop jg or cmc lods stos int3 jne popa les push cmpsb pop jnp mov pop mov pusha pop insb fnsave scas push imul movsl lea push out add lea mov lds adc mov jge pop (bad) inc cmc leave mov and xor mov ret or mov pusha imul repz in jl arpl mov add xchg jb (bad) roll loope mov jl inc lds adc cmp mov mov mov data16 inc test insl jb test inc mov pop es aam shlb sbb xor hlt jmp (bad) cmp movb push xchg or push idivb insb pop pop jmp movsl xchg dec mov pop push pop xor sub cmp mov (bad) push or js addb add xchg pop mov test insl fstpt repnz adc pop test imul sbb test imul inc jnp sub orb outsb test std test insl addl sbb insb jmp sub dec test aas jmp pop movsl lods data16 mov jp push push test adc icebp test cmp dec test imul jnp stos or (bad) cmpsl adc pop mov inc pop jle into mov mov (bad) fcoml test stos jp test stc popa jge jbe mov stos cmp cltd shlb pop xlat sbb inc stos test push pop sti ds cwtl push cmp sub dec rcrl or mov pop fldt cmp dec imul or ret xchg or bound roll cmp pushf cmp inc inc xchg dec sbb jl stos ret dec rcll add dec sbb inc xchg out dec pop movsb push mov int3 jbe pop adc mulb inc push inc hlt imul scas lods jle cmp and popa int3 push orl jne (bad) stos ss int3 jno and outsl cmpsb fwait adc (bad) jae inc mov (bad) mov roll push inc push sub subb in push inc imul hlt mov gs push test hlt mov cmp pop mov inc inc lret dec jae pop lods inc xchg mov insb lods dec fidivrl pop xchg cli pushf inc xchg mov push imul pop sub stos (bad) pop push jb pop js test push fwait cmp fnstcw stos lods (bad) cltd sub or push gs lret mov lock mov jb xor in mov stos pop pop ljmp dec pop mov and insb rol inc ja dec enter stos dec sbb mov cmpsl mov hlt jnp pop jmp pop movsl pop mov inc dec bound lods mov dec stos imul stos cs cmp jo mov jp jae test scas sub insl xor jae add pop imul repz out gs inc movsb sub mov cmp imul stos pop pop dec (bad) jl pop pop mov cmpsl dec inc gs pop cmp push movsl cmp sbb pop dec fldcw inc js imul jl roll fildl dec cwtl xchg jno arpl movsl pop stos hlt xchg inc ds add scas adc cmc ficoml or or push lock sub sub bound cmp insb movsb movsl or in scas rorl bnd mov and jecxz insb cmpl push fcoms sub and adc daa push mov lea xor (bad) xor test cmp pop push mov adc popa push les mov out jp test mov dec mov mov cmp push xchg outsl in inc aam push or fiaddl loop popa mov lahf mov pop testb lret aas ficom xchg mov pop xchg pop hlt mov cmc sub mov (bad) push mov or insl sbb add and add loop,pt js popf lods cwtl mov mov (bad) sub xchg mov mov and xchg negb in inc or (bad) mov cmpsl adc inc (bad) mov out mov movsb push and mov bound mov addr16 aas daa add mov jns or sbb ja repnz (bad) xchg dec mov addr16 repz es mov ja outsb (bad) mov and (bad) sbb das sbb mov mov mov (bad) stos movsb cmc xor mov insb orb dec sub jb out scas add inc fwait jns notb push mov mov jb mov mov ljmp cmc xchg cmpsb repz push push pop movsb mov inc xor cmp cmp imul and scas cltd fisubr mov clc and jl iret pop pop mov loope pop push and add call sahf push fistpll fisubl push das or jp inc adc pop xlat test xchg scas andb inc or xchg sbb dec into in mov mov mov mov pop or cld push inc jmp ljmp xchg or pop roll iret or les nop cmp imul (bad) jmp int xor fstpl fimull xor cmp fstps push mov push lock push mov (bad) orb loope,pn sub rcrl dec and loopne mov jg stos push mov pop mov mov enter cmpl fldcw jp mov (bad) movsb mov sbb jae pop mov fiadd inc mov xlat and jns mov and jmp cwtl lods sub mov cmp sbb popf (bad) mov pusha fstl lahf pop or loope add push sub call (bad) push std (bad) sbb outsb mov aam adc adc cmpsb mov insb (bad) inc (bad) jo mov inc add fcoml std mov xchg lret push jmp outsl lods (bad) mov iret orb sub enter shrl imul add push pop mov pop jl iret jg xor mov pop int3 cmc mov repz mov insb push aas add ja pop fsincos negl imul inc ljmp mov minps add out pop mov pop sub mov sbbl fcmovu mov scas or repnz pop inc push rclb mov push mov call data16 xchg outsb loop leave mov scas insb int dec or xor mov negl mov and or push push dec (bad) mov scas (bad) mov jmp (bad) iret push xchg mov or adcl scas sbb jmp movsl in mov cs js lods aam mov ja aas cmp cmp jp movsl and mov cli adc push lret adc mov adc add lds pop xor pop fistp sbb cs outsb cmp fdivs mov push push loop inc mov add dec fstpl jb out mov adc jge push mov jns and cmp cmp mov loopne jo orl mov (bad) aaa (bad) repz or (bad) jb (bad) xor mov inc jg (bad) shrl aaa inc sbb xchg lds inc das mov sub fcompl jb xor sbb mov rcrl xor or cwtl xor cmpsb mov and or aam jnp xchg mov push sahf sti xchg jl mov cmpsb sarb adc mov cwtl outsb mov cmpsl xchg pop mov stos jg pop and dec test imul enter lret mov lcall idivb pop inc xchg call inc xchg inc mov dec lcall mov push stos lea cmpsl fisttp xchg insb cmp push add adc mov xor int sti sub fidiv push in (bad) mov xchg mov sub inc dec das test (bad) mov mov outsl cs add adc out lret test jae jle sbb mov or mov fmulp lret cmc pop mov xchg xchg std enter rclb jne femms add dec xchg inc jno inc xor mov js lret pop in mov popa pop xchg and mov or mov push xchg xchg adc xchg imul or aaa mov pusha inc fidiv cmp mov sahf (bad) shl std push xchg adc pop mov jg (bad) mov add mov push or cltd inc mov fiaddl sti sub lock in mov xchg movsl jl cmp sahf mov sub mov in add pop sbb add inc je test pop xor cmp loop mov cmp cltd es mov sub (bad) repz add int3 popl dec mov sbb push add notb and pop (bad) push jmp add pusha mov lock movsl pop ds loope mov xchg mov and enter cmp xor mov or add mov lods adc shrl movsl rorb sbb stc scas mov pop out outsl lret push (bad) mov imul fldt push lea les or into lods pop rorl dec lea xchg dec stos mov xchg jb sbb jl dec aad mov imul and mov movsb mov pushf out (bad) xor mov bound incb pop mov dec push xchg repnz mov lret or ret jl ss jae test cs lea outsb adc cmp paddq mov int jp pop lods mov push and out or jb loopne mov ficom mov mov sub mov inc jb sbb push cmc repz sbb (bad) or lods pop inc mov cmovo pop mov mov nop xor push cltd popf daa mov push adc fs test or fistl sub imul lock xchg (bad) addr16 jno ret pop xor or movswl mov pusha mov xorl ss jge mov xchg and aad out jae hlt jmp repnz call (bad) mov addr16 mov mov fs push mov shrd mov loop mov push or cli and mov mov sbb jno xchg xchg jge mov jo stos mov leave int shl nop arpl push mov imul mov push jbe mov xor sbb lea cld dec movb fwait sub mov aas int popa inc mov lods cmc xchg addl xchg pop out push sar ret enter jg pushl test xchg xchg mov add cmpsl cmpsb jecxz js fcmovne lea mov arpl leave andb sub fsubrs (bad) (bad) mov cli jmp jb push cmp push xchg jnp scas cltd pop or fnstcw imul (bad) jb push inc dec popa mov mov push lods stc inc sti scas mov int cltd mov stc sub fbld sub xchg xchg loope lods ret repz scas je jle gs mov pop (bad) xchg in orb jo push mov mov or jb dec lods push in push repz scas int mov mov dec (bad) mov stc dec jle call scas in mov aam inc add out (bad) pushf dec jne out jmp sbb int pop mov lds leave test loopne pop mov test pminsw xchg (bad) xor jo int pop adc arpl mov sbb mov fnop push into fucomi push push mov movsb cmpsl icebp sti lcall mov data16 movsb adc jmp push adc jnp rolb scas sub xchg ljmp mov fisttp mov xor mov lahf pop sub xor in xchg dec sub das push adc mov fmull enter adc fisubr mov out pushf sarb in fadd mov xor mov mov fldl cmc ds pop mov fnsave std sar (bad) shll shll xchg xchg xor and out dec sti mov or cmp sub ss add andl push lock fidivl (bad) js adc insl movsl push nop rcr aaa and (bad) dec jge mov ret call jo xor mov or (bad) jno notl (bad) inc inc push mov pop pop mov and inc xchg jle cld mov sbb in mov cmpsb inc xchg mov pop mov mov xor sbb ret mov stos hlt mov movsb sarb mov lds (bad) fsts xchg adc mov mov (bad) jo and lea xchg bound lcall mov and sub or xchg outsb imul xor dec sbb addr16 mov fldcw sub jne into (bad) mov sub lods fistp rcll cmp data16 and jl jne mov (bad) scas jg int3 mov or mov dec test add out mov mov jbe and or inc sbb mov xchg (bad) cmp mov out xor push fdivrl sbb push int sahf test jne fild mov sub ss sub push hlt sti push or scas and scas aad lret mov lods push out cmp jb stos mov jns pop mov adc mov cmp out in mov mov dec xacquire lret pop ss mov inc push ja pushf int daa mov xchg (bad) xchg and push pop xchg imul mov jle xchg (bad) fwait hlt mov fsubrs sbb inc pop mov mov popf pop mov push mov mov das rorb fldl popf mov lock mov int mov rcrl mov repz (bad) loop jo mov out pop and decl fistl inc loop (bad) ror hlt lds xchg loopne xchg push push rcrb lods xor mov xlat ds mov inc jle (bad) int3 pop push movl cmp mov sahf int dec pop scas aas lcall aad mov mov insl or (bad) rorb xlat push aas jae outsl aad push ret lcall push (bad) mov jbe xor mov test mov sbb push cmp js mov pop (bad) iret lret push int3 xor sub push mov aad jecxz mov rorb mov mov (bad) into fsubrl cmp mov outsb sbb xchg pushf cmpsb push dec adc gs and jb mov (bad) (bad) cwtl mov test push pusha jnp jle mov sahf sbb sbb pop jl xor xchg xchg inc sbb mov xor xchg jo mov pop mov inc mov mov sub icebp push push mov mov jns pop adc cltd (bad) mov rol rol inc mov in dec mov mov xchg sbb jge mov cs test lret repnz mov ljmp jle mov inc call xlat xor js push cmp sub mov lea das mov pop mov (bad) in es pop rorl pop push (bad) repz ret cli pop jle jns cmp pop jge pop inc mov std lock push mov and (bad) nop pop adc mov jge sarl inc sti mov sbb fisub jge mov push lock rcll rol in add (bad) sub mov and xchg fwait mov pop (bad) add mov mov rorl loope mov push push ret int or mov ss pop mov jns mov pop push add mov fisubr mov adc aaa mov push mov mov enter mov lods mov pop arpl ja xchg mov xchg push push mov xor stos xor test cmpsb fisttp inc sub mov mov (bad) mov aad xor xchg negb test jg aaa repz js out rclb stos mov xor (bad) lret push out xchg movsl sub cli (bad) xchg aad popa fimull push lea adcl outsb out mov mov jo cmp pop pop (bad) (bad) mov test pop scas dec mov cmp add xchg ficoml mov scas fmul movsb mov movsl movsb mov mov inc (bad) clc fnstcw arpl stc push popa fs adc push inc and or sahf pop sbbb jb cltd add lea mov mov pop lcall or out adc mov cmp int3 dec test (bad) jmp pop mov rorl pop dec outsl ja mov lods scas outsw dec scas cltd mov outsb test movsb pop sbb outsl das pop fistpl out xchg xchg and mov iret mov loop scas cmp xchg insl pop je pop mov imul push cwtl mov arpl shrb add add shrb jecxz cld rcrb ja xchg dec sub inc and add push dec nop dec shl sarl mov mov xor add gs imul frstor jle ret dec leave pop and push dec scas call push pop pop dec outsl pop push inc dec test sti push mov mov pop pusha std pushf (bad) fisub movsb mov pop adc lods mov nop pop fcmovnbe xchg xchg xor mov sbb mov add xor and enter cmp iret outsl xchg sub jae push scas mov dec inc xchg pop push aas leave mov sub sub mov mov sarl add rcrb out pop in fsubp sbb hlt mov mov insb sub inc mov dec dec aam movsl push push add fldl cmp popa push out pop jge xchg adc lods push push out jns add pusha xor hlt xchg nop je xlat mov dec or mov dec push push lcall clc jle neg xor dec mov lods adc jbe push dec and not stc cltd and mov inc (bad) (bad) or mov fild (bad) mov outsb adc mov mov adc inc push repnz ss pop mov test mov dec in push sbb enter adc xchg jo jp cmp mov cmp sub lods mov lock repnz daa fdivr xor imul mov cmc not cmp call into lods dec sbb jns call xlat xchg dec and mulb inc test cmp mov ja jno fnstsw out cwtl aam adc adc inc push cmp fwait jge in inc outsl scas sub dec cmp xorl clc js mov repnz mov cld xchg adc scas hlt or ret pop jne insb dec es clc jb adc iret flds jecxz pop (bad) iret jnp jne add cltd push cmp (bad) or add and je cmp movsb mov and lds mov jge cwtl sbb outsl lcall jmp (bad) cmpsb data16 in jns ret jg mov dec sbb pusha push fldlg2 mov pop cltd xlat mov dec fnstsw mov imul cmp cltd jno je or shll int pop adc daa aaa lahf sbb push outsl gs (bad) mov mov lahf mov add dec fdecstp cwtl pop imul out test cmc pop mov mov adc in push push sbb jbe (bad) or sub mov in jns movsl push adc aam movsl daa loop iret test movsb mov daa notb stc data16 ja icebp adc xor mov clc mov push push and jmp pushf inc pop mov or and leave std test (bad) outsl jb sbb outsl test push add add fisub stos insb sub jmp sti xchg insb pop sub out fwait push add cs mov nop cmp jmp push ja push dec add ja pop pop in xlat repnz inc dec rcr and jnp sub cmp xor mov insl cmc arpl das adc mov fwait addl or in jns (bad) mov enter jbe mov fsub ret cs gs sbbl push divl push shrb cmpsb adcl sub mov xchg or mov popa (bad) imul nop push gs test mov xor adc mov ljmp rclb and mov mov cmp div pop divb aaa mov das pop cmpsb push sub or jmp pop pop mov inc pop cmp xor mov xor scas movsb addr16 sbb test mov bound inc cmpsl inc sbb dec test clc fs jbe ret pop call cs cmp loop (bad) hlt arpl cwtl adc inc inc pop add mov insb pushf lea jne pushf inc pushf pushf mov pusha inc push pushf lea jmp xchg mov ljmp fdivrs rcrb ja inc dec movsb inc add (bad) cmpsb jno push dec maskmovq mov mov jle ds rcrb orl (bad) lahf push (bad) call xlat out jle sub out lods mov fidivr xor shrl push dec add repz ficomp sbb push sahf imul orl loop pop daa repz xchg jl stc shrl mov inc dec mov adc mov lret fucomi fcomps and inc push xor dec mov and (bad) xor shlb or inc adc les jae lods mov mov jb fwait lods jne in lret scas add ret sub mov movsb fs mov repz push fadds stos xor mov push pop outsb adc jbe xchg aas add repz add mov movsb mov in mov es xchg rcll in test pop push repnz sub pusha mov mov mov cmpsb sub push bts das stc mov shrd rcr sub cmc add and dec push xor mov rcl push lahf call xor add clc bt jmp call stos jne insl call jl sahf add fisubl add fnstsw fstpt mov jae xchg add mov rcrb pop arpl fmuls lods jg mov jmp into mov mul pop in leave sbb xor ret test mov push mov adc jo inc pop adc mov idivb jmp aad cmp xchg cmpsl jo cmpsl daa es fistl or rorl dec lcall fcom push int3 mov dec imul int aaa in gs jg je in aam mov mov push push das nop inc xchg out je (bad) aam inc push push lret jecxz lea and loop push loopne adcb xchg out xchg mov push and ds pusha add jb mov (bad) or orb sub and gs jg dec push or jo sub into pop aam cld mov inc mov pop repz adc adc test jg js pop xorb xor out jbe aad bound rcrl repnz and mov dec arpl mov jge or lods jge xor jno and outsb hlt out int sbb cmp into les (bad) jp icebp les (bad) fsubrl push repz or movsl (bad) popf push cmc or cli ret jns xchg push fmul (bad) xchg mov mov sub test faddl adcl cmp lahf xor ja popf ss push arpl adc jbe roll jns jo cmp sbbl sbb in pop ss or stos jbe cmc mov mov sub repz add leave push inc jno (bad) sahf dec jns mov mov inc ss sti sbb and fucomp stos aaa pop add fnop sbb pushf mov cmp jmp xor jns dec or into mov test push add lret and mov and aam mov pop or mov (bad) mov and rclb or and mov push incb gs inc sub dec adc sub imul or cs fwait jae inc ja,pn inc (bad) mov fs sti mov add jne jo (bad) (bad) call mov xor cmpsl sub mov rcrb xchg js ficomp inc (bad) lret int3 inc adc fsub xchg test in in ret pop mov data16 mov in int data16 mov mov xchg push (bad) imul and repz xchg or mov (bad) lods notl loop paddq test gs xor sbb fcompl imul xlat or cltd cmpsl jbe jg xor or into inc lret sbb jg cmc lds je xchg mov mov jbe pop jmp push pop push inc std mov mov dec pusha mov into loop andl in rclb xlat mov es stos gs cmp es mov add dec adc jns test sahf add inc gs gs imul ret sbb jns cmp pop cmp jnp inc push mov data16 inc push pop adc imul xor mov fdivrl outsl das lock pop inc pop call sbb lret push fstpt test pop ss jg int3 (bad) popf mov push cmp leave pushl lea call pusha pusha pushl lea jb pushf pushl ret lea jne not daa movsbw btc xor call movw pushl pusha lea call call pop mov int jmp int push jo (bad) sub push in scas mov cmpsb cmp xchg sbb jae jae repz rcrl cmpsb test out aam test jbe (bad) mov xchg mov pop xchg lcall mov or mov mov aas pop inc lret es inc or cli jp push out xchg xchg mov or sbb adc sbb xchg fisub lret jecxz int and cmpsb jl outsb rorl jl testl push push out xchg out adc ret xchg or div xchg mov out fs insb popa and fisttpll sbbl adc xchg aas inc das push imul mov lods push cmc mov xchg or mov loope inc pop clc lods sahf mov cmp dec jp std out jb jl (bad) mov inc jae in add (bad) jmp insb and je jnp pop or not fsts cmp pushl clc int push ret mov fdivr jo (bad) fs mov jp jmp dec test xor add insl addl xchg xchg int3 xacquire xchg and fs je pusha movb test cmp call shr movw jmp daa std dec pop jecxz int push add fdivrs lds ds xor cmpsl imul frstor push xchg dec loopne popa pop rcl xor xchg xor mov cmc fwait cltd outsl pusha clc mov cmp outsb adc imull mov mov test je jecxz xor xor into push push xlat ljmp jb fistl lea push sti data16 pushf mov cmpsl jnp jmp repz jns out push loop push pop icebp nop (bad) jae adc jl (bad) jmp sbbl (bad) xchg ds xor or xor jle int pusha and push test jae (bad) mov mov push xchg push movl pushl movw lea jmp call pusha adc pushf lea jae push pushf lea jae jmp pushf inc lea call dec add out loope int aas aad push mov lods imul (bad) mov adc jl loop xchg xor push nop push mov (bad) adc jbe inc push mov (bad) arpl gs hlt pop aad cmc xchg test inc stos lea (bad) cmp (bad) mov loope in xchg jecxz mov adc cltd enter xchg jbe fidiv aam mov mov arpl inc sbb inc fnstcw ds das xor out paddw out test adc icebp jb (bad) cmp cli scas jns adc cmc or stos insb (bad) inc pop pusha fcom push pop enter cwtl sbb aam xor inc push mov ror pop sbb loopne int scas inc xor int3 mov (bad) xchg mov cmp out rol pushf out scas xchg jg int3 add cli sbb pusha nop ja jmp loope sub sub pop inc pop fwait lds or je test lret ss (bad) (bad) or pop cltd push push pop (bad) stc add or xchg ficoml mov dec testl dec insl lock jmp pop jmp insb or pop aas push mov in int3 mov gs push and aam mov pop mov stos pop mov (bad) mov add ja fyl2x fdivr lds inc setnp mov xor popa insl jg lods lock (bad) xchg jno das aam xor js in movsl sub adc lahf add adcl mov xchg push pop (bad) hlt mov push dec xchg ror pop adc lahf outsl push aaa (bad) je lret jbe cmc popf std xorb loopne ja je or xlat xchg sub mov icebp lods repnz xchg dec sub adc jecxz pushl popl pushl stc pushf push cmp pushf call add add stc cmc stc or push jmp rolb fidivr out lods push in and rcrl xchg cli mov jne jbe cmp add xchg push and movsb jbe test pop and mov shrb in push (bad) jnp in fcoml pop sbb sbb jmp dec xlat mov jo xchg inc test aas adc xchg add mov mov push fisttp out sbb dec cmpsl insl cmp pushw adc push test aad pushf mov add lock jae cli fisttpl mov push pop (bad) or das pop xor mov pop mov mov sub in sarb fucomi inc add ret sahf lcall insb rorl xchg sbb popa push push (bad) add in sub jno and dec mov insb aad jl xchg ja jo out mov dec sbb sub push and bound pop stc xorl mov adc jne cmc repnz xlat mov pmaddwd fstpt popf mov inc test cmpl clc mov and stos jmp neg mov cmp pushf cmpb movw pusha movb call dec icebp cmpl jns sbb mov repz pop lret repnz lahf insl push cmp xlat lock adc inc sahf dec mov gs add jp lods mov cmp and cltd cmc lods lock jecxz (bad) mov jno jmp xchg inc outsb hlt ret pop stc xchg lret das pop mov lods cmp (bad) stos inc add int3 xchg mov loopne test sti mov dec aam mov inc fmuls mov add xor xlat sub and gs cmp mov jb jle mov mov xchg or (bad) xchg dec adc out mov mov imul inc mov popf mov int jns shlb jge pushf xchg outsb andb add repz pushf lea ja sub shr push rol sub setl shr lea add call dec pmulhw fdivrl jl pop add xchg sbb je loopne push mov cld push jmp and sub sub xchg jns in jp in mov and loope xor xchg jae loop cs cmpl push or add (bad) ja mov push ret xchg out cmpsl ror dec and xchg fwait insl push mov jnp inc dec je (bad) jnp push bswap xchg inc inc insl jmp sbb cmc pop push pushf cmp cmp xor out push imul je add stos xchg inc pop jmp jb add rcrb jmp jnp out fcmove pop mov mov sar mov pusha xchg orl adc mov mov mov adc push call or push or fldcw mov (bad) xor pop and comiss fadds xor pusha dec cmpb add movsb ret das jmp mov shll xor lea fcompl lret xor jne sub loopne push std mov test jns call and sbb mov xor and fisttpl and icebp xchg minps lahf mov enter adc jmp jp xchg add lds cmp stos mov xor jne arpl (bad) mov push rcl add lcall pop imul rcll fadd gs sbb mov mov add in loop in jne xor incl movsb test je arpl inc outsl inc jb popa je dec outsb jae popa outsb arpl imul mov in (bad) ja loop mov sbb mov (bad) dec inc push out (bad) lods push imul outsb xor test xchg cmpsl dec cs test lret jmp outsb sbb arpl in pop cmp sbb stos xchg xor ss (bad) mov adc mov imul dec cpuid nop push icebp mov lds add mov out add das mov xor movsl push cmp movsb bound clc and rclb jle or (bad) aam or insb hlt stc xor in fsts popf mov push clc pop or jns cli pop sub mov inc push or mov push sub cmp out dec jecxz idivb pop icebp dec aas fs xchg sbb push sbb xchg add ljmp adc or jb outsw jmp pop es mov das pop mov mov in loope push jg int int3 fadd cmpb push stc ss sahf bound js push jne int3 (bad) and leave sbb nop test and mov imul xchg (bad) decl adcl add push sbb add fisttpll repnz inc and inc mov bt add cmp cmp test pushf call in inc dec pop fnstcw inc (bad) enter (bad) int3 mov push cld mov fidivl pop xor mov and inc cld adc xchg or (bad) mov scas into call (bad) inc xchg dec scas loop push sbb mov (bad) jb repnz bound lock push pop push inc pusha lods cmp insl dec orl mov mov pop xchg pop popa in jbe out movsb pop mov pop insb or pop or add sarb popf fs push xchg int3 jmp push adc sbb repnz lahf stos mov fdivrs add addr16 jp lea call pusha call ret mov sub mov icebp xchg lea adc inc add aad jnp insb dec sub movsl or and (bad) mov xchg mov fcmove cltd xchg push bound subb (bad) (bad) out and dec test inc loopne cmp fnstenv dec push fcoml adc or popa sub les mov add xor (bad) mov clc xor push hlt sti mov or loop mov fistl mov clc (bad) dec mov into flds mov enter jge xor mov xor adc inc pop shr pop je jmp pop push hlt test (bad) xlat jns push sbb fnstcw fwait insl (bad) pushf jp inc add ffreep push dec (bad) add lds out push je outsb cltd dec (bad) mov mov sti xchg jmp inc nop or sarl pop sub aad inc mov rorl hlt imul fwait js (bad) mov (bad) test mov jns dec add lds xor xchg pop and rcrl mov (bad) insb fstl lock jp mov sbb xchg dec repnz sahf xor xchg cmp jb scas arpl rcrb flds jbe sub jb daa inc xchg cmpsl daa es add aam fildl (bad) inc arpl or stos rcl out xchg aaa int aad int and sahf pusha xor xchg push inc adc xchg outsl sub movsb jl arpl fwait imul fidivrl test jnp icebp cmp movsl xchg (bad) ja add js cmp mov xor aaa push adc mov push cld ret dec addr16 rcrl insb xor leave cld test inc sbb scas daa lock addr16 jl xchg data16 and pop cmp adc pop jbe and enter out mov lock dec movsb popa and cltd inc ffreep rolb pop sbbl shr pushf lea je pushf movb call push pop shll les icebp mov jnp xchg addr16 add dec (bad) fsts fsubrl jbe aaa add xchg (bad) fcmovnu xchg fs push scas xchg mov push fdivrl jb dec xor sub movsl ja and mov mov into ret add jmp test adcl iret movsb mov out jecxz ficompl int mov std (bad) jl frstor in jns jne out mov fldcw xor les mov in int inc jl movsl out pusha pop test ds xchg stc cs fwait and pop jle pusha cmpsl arpl jmp or mov push mov push iret jne dec jl sarb test xchg inc xchg mov int3 js cs icebp invd mov and adc call sbb sbb jg mov je push or pop pop icebp mov push dec fisttpl outsl lods imull cld pop xor mov adc jae movsb lock daa jge lds test or ja cmc clc imul bt cmc cmc add push push push lea jmp roll or test sbb mov fwait nop pop sub repnz cmpsl pop pop sbb mov xor imul xor push xchg sarl xor xchg xor fdivl pusha cli xor int repnz add adc or cmp and inc out test inc sbb pop sbb insl loopne insl out push call or push sbb repz add lret sub mov dec push test jecxz push inc aad jle leave push sbb aad into dec loope out xchg add and pop inc xor dec xor jns and mov inc cmp (bad) xor lret xchg mulb jmp jns pushf push jge test je (bad) mov mov sbb gs stos jae ds pushf sbb cmp pop scas mov out aad pop imul jb gs icebp sbb mov and bound pop std pop cmp int3 orb push neg leave jle inc pop push in lods insb sahf mov rorl stos sub xchg push (bad) pop push (bad) int mov fdivl notb cltd lahf pop and popa fldt stos sbb cmp cwtl pop cmove roll push and fst jns js outsl and int3 push and adc mov sub jo sbb sahf push pop xchg or in lds andb sub sti lods test fiaddl push out loopne mov mov lods jno mov punpckhwd jns xchg das jno test cli rolb aam dec bnd cli xchg gs and mov fwait or enter cmpsb sub movsl sti test les pop push push sub mov imul jae add das fisttp insl dec int push jle test into push mov mov into leave pop xor bt sub stc cmp jmp cmp push inc sarb adc xor pop iret mov xchg mov aam adc mov push into dec (bad) push jmp inc in fsubr push xor lods push sbb std add fnop rcrb fwait or in fs cmp mov pop push daa or shlb adc les and jecxz shrb pop sub mov xlat adc add push cmc (bad) cmc adc push mov out aas inc incl mov cwtl outsb insl icebp xchg movsb dec jg movsb (bad) xchg sub mov rcrl lods lea cmp pusha call outsb mov lcall xchg jmp pop push add int cmpsb mov ror ja xchg pshufw mov gs mov mov je (bad) jb xchg add push bound xchg cmp aam xor (bad) stos xchg inc mov sahf mov mov lcall sub add xchg (bad) (bad) sbb jno push sub ja gs or fwait mov and in xchg dec sahf in mov call xor mov subb and xchg pop dec adc xor test mov mov fimul loopne (bad) ja in pop xor cmp cmp aas jle outsw lcall pushw and bound dec and mov aad test push mov mov xchg fdivrs add int int3 outsb in mov movsb sbb scas or (bad) xchg mov out add jle je jns inc pushf jp pop sub clc inc in shrb sub push out xor mov loope mov imul xchg cwtl add arpl mov push into pop mov fwait jecxz imul scas leave lea scas xchg enter xor call stos out mov ds or mov lods jo hlt cmpsl in or push jle pop dec rcrl mov mov iret inc inc shr lds jp mov add mov in inc cmpl xor xor mov lods icebp mov push cmp pop aam (bad) std fldenv mov jb cltd outsb pusha jns push dec sub dec dec adc mov scas fcoms xor int3 int xchg inc mov lret outsl mov adc rcrb insl jp push inc xchg and rorl and cmpsb aas data16 pop xchg loopne mov jle jmp sub sbb or pop push and mov jns sbb dec fs fmull mov and or in mov (bad) inc call scas mov data16 push rclb pop orl cmpsb push out fldenv sahf in rclb dec push mov mov jge ret pop xchg addr16 scas xor or xor fsub popf xlat add in fs xchg imul faddl or adc mulb mov iret push in fisttp test cmp andl sbb cltd push or in stos xlat orl mov out imull int aad ret mov add in jge scas hlt mov mov jmp xlat std fsub cmpsb ret leave and add push popf push cmp adc cli dec fst add mov mov xchg stc imul lret aam adc xor cmp in insb ret mov mov inc push sub les data16 dec xor mov sarb in aad xor xor movsl pop mov mov xchg (bad) stos sub inc jmp icebp sbb push mov fldcw cmpsb inc lea pop outsl add jbe lret ss inc scas inc and int3 jb nop mov orl xor push enter movsb cmp test sbb mov lcall mov inc dec inc mov or mov mov pop xor rcr in cmp (bad) bound cmc in stos xchg (bad) cmp pop push js in push adc mov les popf flds in sub dec adc in mov (bad) jle mov mov xchg or xchg cwtl xlat lret jl leave cli in sbb (bad) mov aad mov jmp lea push leave jge push xor aas pop cwtl leave std mov test push xchg in (bad) mov xor shrl (bad) outsb imul enter adc lahf push xor lcall push out mov std outsb dec mov cli cltd jns cmc (bad) int3 xchg lock movsl dec enter dec and xchg lock scas adc inc lods pusha mov subb or in dec cmp mov sbb test cmp dec data16 lret aaa (bad) ljmp cmp addl cmp test in lahf sbb lea xchg add pop in dec lret push shlb movl aam sub (bad) cmp mov jns sbb or adc mov add (bad) movsb sbb scas andl andl cmp or in mov push mov mov sbb push (bad) push inc enter or mov jns std dec mov mov pop mov xchg push add xlat lret mov push sbb (bad) xor and mov lahf sahf mov gs inc pop mov push jle cli addw incl shll dec stos test out outsl lods and pop xchg rcl mov inc mov adc mov mov xchg jne xor sub add adc rorb lret aas xor mov fisttp scas cmpsl cmp add in cltd pop clc dec insl inc imul push dec cmp lret cmp in addl hlt inc ret addl stos push lcall cmp aaa xchg les or cmpsl cs out jnp bound clc es scas in ror xor sub add jecxz jb add outsb sub jb cmp lods mov fs xchg sub inc mov inc lods mov sahf int int3 (bad) mov mov adc in jge (bad) and in inc mov jge xchg out xchg fs jp cmp add fadds mov sbb or cli shl mov mov xchg outsb sarl or int3 jno,pn mov (bad) cli jp inc ret push orl fnsave popf xor xor mov js dec xlat push mov in lahf fiaddl mov pop cli sti xchg dec sarb jo xchg jle data16 mov pop movsl cmp push das mov sar add sbbb dec and add dec xchg sbbl decb mov mov xor out (bad) lods (bad) loopne sbb xchg stos shrl dec faddl stos pop push (bad) xlat leave rorl push mov fidivrl ss sub mov sarl (bad) not iret div sahf in les clc xchg pushf sub inc loopne (bad) fsubs pop mov shrl (bad) into imul inc aam sbb movsl lock sti enter lea sbb les jo dec inc xchg add insl iret sbbb stos mov mov iret lret movsb lea es push sti pop mov mov ds mov sarl icebp mov mov xor add jle addb shll fcomps bound mov data16 mov inc outsl mov aaa jp pop cmpsb xlat add out sub or fsub movb mov push (bad) push adc xchg bound sub data16 lods ret fcoml cmp jo jl cmp aaa fcoml fsubs mov adc loop jge in lahf pop fcmovnb or xchg mov lods ss loope mov xchg xor fist movsb sahf cmp pop popf push clc popf sahf add xor mov pop push data16 (bad) (bad) icebp imul out jmp dec sub mov fwait imul mov ret inc jecxz inc sub inc lea inc int jns or (bad) mov sbb xor mov sar dec mov enter adc mov dec xchg insb jb xchg (bad) in xchg pop add icebp or mov cmpsl add cmc imull or lea xchg or mov pop dec in (bad) fdivs mov and jbe stos popf in cmpsl ss (bad) les mov inc clc and test or cmp inc dec loope cltd push cmc orl adc jge js insl pop scas je mov sub enter in aaa in xchg or push test inc fimull out cmp mov out testb mov jle pusha into jmp or in sbb scas outsb fcmovb mov test cmpsb mov inc (bad) mov test jle cmp pop inc imulb dec xor les fstl in cmp dec mov movsb rcll repnz mov testl in pop inc std dec test jmp retw or cmpsl push pop push inc sti andl adc sub cwtl inc xchg lret lret (bad) and in dec xlat out incl push int sub jle ss pop fsubs pop lods push lret fdivrs sbb test add test cmp mov (bad) out sbb mov or lea out daa mov sbb mov push lretw and dec cmpsb in sub lods cmp cmp pop rcrb xor adc pop and test xor mov fcoml sbb outsl (bad) push fdiv test mov mov nop mov jl xchg xor mov mov mov add sub (bad) cld add outsb in dec pop mov dec cmp adc (bad) lret lret fadds (bad) or movsl xor sbb inc dec fmuls int test cmc mov or aad in divl cmp aad repz mov dec jl sub jge xor or jne jge mov movsl mov addr16 inc fsubrl ds scas jp bound or jno cli xchg (bad) cmp or into nop push in jae test xchg fsubrl fisubrl push in cmp push or iret mov mov dec mov cmp insb insb add mov jg mov movsl push or jg cwtl ret jne sub inc subl xchg arpl dec ficompl jp push ror xchg xchg decl (bad) mov or mov and out xor repz insb xchg decb std int mov sub addb sbb repz inc jp cmpsb mov test and adc push mov add test jmp xor mov aas dec xchg cmp sbb in ret pop pop xor mov xchg loope pop in cmp inc mov popf int jno ja ss jp jne idivl inc aad jge mov in xlat jle inc mov ss pop and jbe movsl test cmp pop ret fcmovb and jl lods jnp test jle push jns and pushf jb dec push jge adc xchg ficomp add scas in fdivrl push pop inc stos sbb je in xor mov inc mov jnp push adc cmp pushw inc mov or fdiv jp mov sub dec out fwait int pop or push jns cwtl push fs add (bad) call je inc nop push loop mov in fild std rorl aaa sub repz lcall dec inc mov mov pop lret (bad) mov data16 imul into sbb pop mov add xchg and aam fwait mov or insb pop dec dec std out cmp hlt mov (bad) int pop sub daa outsb and arpl mov sub call push fsubrs xor int3 aad cmc mov mov pop and rorb xor sub xlat jg enter cmc mov jne and fsubrs sub cmpsb lret xchg les int adc or mov dec in fsubl movsb enter sbb mov stc adcl push mov dec or mov test xor (bad) fildll test mov popf push outsb (bad) sbb xchg sbb jge sub pusha jle pusha xor push push mov out dec push (bad) outsb pushf jmp or das pushf repnz mov inc push ljmp in lods pop xchg je xchg xor (bad) imul jle int pop dec in mov inc ljmp js jno dec xchg es xchg addl aam lcall aaa pushl outsl and fisttp pop loope push mov leave cmp cmp ja or mov cmpsl aad int mov js dec lcall aam jge mov js std es mov and in mov aam mov insb pushf jmp fs jmp add inc mov cmp mov popf test movl inc aam popa in gs test inc xchg pop xchg sti inc in inc std jmp mov adc das mov mov jb es or jl test cmp rcrb (bad) aam xor es cmp sub mov leave jae,pt lods int3 (bad) jne add stos popa aam hlt push lds push sti das mov xchg pop outsb adc or addr16 adc or imul stos daa pop loope,pt rcrl cmp xor adc mov popa or rolb jp or lea inc lock xchg fstpt jg adc xor fldcw flds sbb add lods sbb dec repz int3 push sub xchg fs enter (bad) out mov dec shr jg lret add mov and jae int3 rcrl xchg fsub mov into int3 cmpsb mov sti mov iret (bad) sahf fidivrl repz xor js cmp (bad) in in xor stos mov sti popf leave mov imul jno loope adc out in lods xchg adc jb dec lods xchg mov mov xchg xchg add fstpt fcmovne mov lret in test xchg fnop xor inc jge (bad) lret push sbb mov shrl mov xchg aam popaw je add lahf scas icebp (bad) sub jg roll inc mov push xchg jl jae js cmp jl iret xor into push xchg mov push iret repnz inc ds xlat inc push mov and jp add popa xlat add dec popf movsb inc fsubs stos inc scas jmp js int sbb in xchg add mov mov or lods pop xlat cli jmp cltd lret push int3 xor test (bad) movsb jno aaa xchg int mov nop lret or in pop cmpb test dec dec push dec popa icebp mov or into jge mov inc mov outsl and xor sti ljmp or cmp push cld aam xchg push int mov mov sub outsb js push fbstp add inc ja or cmp cmc or int3 pop push xchg bound cmpsb push sbb in int mov test aad dec add fwait xchg mov adc jg jg fistpl cld int ljmp push dec mov ljmp mov out mov dec test aas fistpl push cmp sahf icebp fbstp jnp cmp insb cmp mov and out test fsubrs loop inc jecxz push pop mov push cmpsb test fistp or mov in add fadd ffree stos push add std cmp add das fstp mov test xlat outsb les int3 xlat in mov outsl into aad insl clc stos (bad) in push hlt push scas call mov inc addl leave test pop rolb push iret outsb popf xchg in fldcw in mov xchg pop cmp (bad) jne stos add xor mov cli mov in cmp pop adc test mov nop mov pop mov arpl outsb xchg jno pop mov jl push sbb decl xor fmull mov or repz mov inc insb add subl test dec cltd push notl dec inc xor shll les add dec or (bad) iret inc lods add call loopne mov outsb aad push add pop cs faddl add repz mov inc dec jo in sub push cmp fsubrs xchg cmc mov jmp jg,pn leave xchg (bad) jp jl aam push sti les adc adc enter dec addl rorb mov cltd sbb mov mov gs push mov cltd sbb aad das aad or dec outsb fildll (bad) mov jne sbb sti sub cli in test insl sti mov and popa mov add mov fadds adc mov lods std inc data16 push dec xor out testb idivb sahf add int3 mov insl imul or cmp pushf xor in lods push testl and sbb in ljmp inc mov daa mov push or jg inc push mov mov push xchg nop and cmp sbb push mov fidivr arpl cmp push addr16 sbb add jp adc and or andl std (bad) mov mov xchg adc or xor repnz xlat or jbe les adc xlat ss jb leave ja mov (bad) sbb mov orl fsubr adc add in das jb or push cmpsb inc fidivrl int ja jle addr16 in xor sbb rcl cld popa mov cmp (bad) (bad) sysexit push mov cli jecxz add pop mov xchg ss std rcl and jae cld ret cli fisub sti std popf jo (bad) out pushf jno outsl in jge in daa popa xchg and js arpl out jne cli or mov jbe sub xchg push lds or mov jno int push mov clc nop mov rcl ja pop movsl push (bad) push lahf mov and imul in fwait dec mov data16 mov sub sti push jb lret xor in dec addw sbb mov (bad) push adcl dec icebp (bad) cmp aad xchg int3 jecxz fmull jmp xchg aad push xlat mov xor xchg data16 inc inc inc cmc repnz inc jmp mov mov inc in pop dec xor gs out inc adc ret or jecxz xor or dec jg add cmp stos xchg inc push mov xor fisubl and out xchg jns arpl jnp jb stos test movsb dec loop movsb (bad) xor jae and add xchg pop mov adc (bad) in lret dec loop mov repz test fildll orl imul fwait jle or test popf or adc mov inc cmp insb and (bad) mov cmpsb mov shll shrb xchg mov daa das lea inc mov mov test cs dec scas cmp std jbe ds mov mov mov cmp push dec jo mov aaa mov fs cmpl scas imul xchg lds mov cmp scas in dec or mov data16 cmp jl mov and movsl scas dec (bad) jmp mov sbb mov repnz inc dec xchg push stos mov push movsl cmpsb sub lods mov mov and movsl xchg mov cs dec dec insb jl mov add aaa mov mov lods icebp icebp inc push bound in fsubl es mov push or sbb jecxz inc dec sub sbb mov jge test dec mov xchg clc cmpsb xor inc dec ds add mov push test sbb mov cmp inc in dec sahf std mov add (bad) sub xchg std lds lods mov cmpsb leave cmp scas stc add or scas icebp cmp lcall inc lea dec or mov cmpsl mov sti cmpsb mov lods int adc movsl ss dec pushw inc inc cs test in sbb dec cli imul sub icebp cmp mov mov mov in mov xchg sbb jno cmp in sti pop inc pop add test jl (bad) lahf mov std aad insb insl mov pop push dec adc inc lret mov mov jge mov ljmp xlat xchg xor xchg jnp gs insb (bad) outsb aas xchg imul pop inc inc scas shrb call cmp lret mov mov cld add cmc push mov inc xchg in das test mov cmpsl cli dec push xchg mov in call enter or ds outsb je sbb xor fnstcw lock imul push sahf sbb out jl xchg mov fsubl xchg sub or mov add xor in sarb in addr16 outsb add jnp stos add push test xchg inc xor xor mov mov sbb jge lods in (bad) stc add push and (bad) in sub sbb hlt or pop xchg adc ds int lea add mov xchg jge push incb and xor aad sbb lds mov mov xchg jp inc data16 dec mov sub jp or clc xchg push or pop pop (bad) cmp push jp push out inc push lret jbe cltd sbb push scas mov mov xchg mov mov jmp mov inc pop cli or or in add push mov cmp mov dec loop outsb in inc sarb gs push mov lret dec sbb push mov jl inc jl neg mulb pop xchg je movsb cs pop jle adc xchg inc shrb mov (bad) xor adc pop adc outsl dec outsb cmpsl dec dec rolb inc and orl in xchg pop cli push push jg,pt movsb mov or test ds and cmp push (bad) fs in subl cmp or loopne fldt fnstenv sub xchg mov in sahf (bad) dec mov icebp sti push jns pop push jmp cmp mov xchg pop mov sbb dec cmpsl insb adc adc sahf cmp mov add stos mov out jns daa lods bound gs dec ftst cmpsb cs xor mov xor push fsubs lods pop mov lea jge add (bad) je scas (bad) sbb fiaddl lcall jl aas loop inc popf add mov cs and pop bound pop push (bad) dec icebp jle data16 fs xchg inc jp je push dec nop push adc sub pop mov mov fild and and or aad ret xchg cltd mov pop mov adc or loop push xor (bad) xor outsl jmp (bad) in icebp mov in bound mov rorl mov into inc pop in push mov mov daa sbb shlb ss add in inc sbb (bad) lea sbb push adc outsb aaa scas xchg movsw fucomp nop std in adc stos arpl pop stos test mov movsl cli mov fs dec popf cmp dec sahf (bad) divl pop pop mov (bad) data16 push lahf popf jp lahf adc inc enter les or rorl pop (bad) in cmpsl xchg dec leave xor sarb xor mov jb push movsb test cwtl stos xchg jecxz cmp lods pushf mov mov and test xorl out mov movsb cltd lock push jp adc out mov std or leave aad cmp xchg cmpsb push jmp push lcall scas mov enter cmc add stc push imul pushf inc cmp cmpsb jo dec mov mov das in push adc mov test lcall mov adc mov cmp fimull fisttp cli push mov sbb xchg pop stos fmulp mov dec dec mov movsb out imul xchg pop fstl orb cwtl out xor mov aam pop sub pop stos pop pop sti xchg stos sbb mov std push (bad) lock mov pusha mov push add jne pushw jno,pn call xchg out jl repnz int int3 or arpl inc addr16 pop jle push aaa mov dec sub rcr das pop fldenv adc inc insl dec (bad) mov mov push add in enter in add insb outsl mov mov cwtl data16 inc and xchg jns or pushf jl std (bad) xchg mov cmpsl add jo adc inc adcl into mov push test xchg and mov (bad) mov push inc out xor ret add call dec cli mov lea xor sbb add js mov repz sbb aam jp es sub sti sbb mov xor mov int and mov sbbb sub mov sbb inc mov or mov (bad) stc cmp jnp lahf test cmc xchg mov push mov mov popa dec xchg jecxz cmc scas enter xchg in gs mov mov scas cmp xchg and mov jns enter sti (bad) fsubs inc out adc jl mov push dec dec jne mov les xchg (bad) push xchg mov or lahf les push push clc mov inc xchg push push and stos xchg daa or or jns mov adc lcall mull adc adc popf add dec xchg popf sub add lds mov loop mov xchg mov test inc jb adc stc movsl add les jbe jg lret jb and in cltd data16 cs inc cmpsl iret push ret rorb jge push mov (bad) cmpsl sbb (bad) das mov jp in fistpll es repnz sarb or inc and cmpsl cmp popf or (bad) jg lods jge sub push pusha xor int3 mov mov mov cld push fcoms mov cs sub cli and sub mov mov test mov mov sub es aaa mov ret int3 adc jmp enter sub mov data16 ljmp mov ja sahf or les jbe pusha sbb mov add or sti add fstpl mov jecxz jo leave cs xlat std fwait mov push inc mov adcl push test stos and inc mov push (bad) aaa js jmp imul ficom (bad) mov sbb nop test in fidivr fsubrs lcall add xor loopne in fs pop ds (bad) push mov out int (bad) in inc xor xor jne movsb push xor push lahf test cmp pushf dec js lahf enter daa repz loop jno int in add sarl test dec out lret scas mov adc pusha or push hlt (bad) cmpsl int push popf (bad) dec test lock stos mov aaa xchg sub cmpsl and or outsl clc add push aas lds jle mov mov in lock lods fdiv and sbb das mov test mov call push mov ljmp mov dec inc fs in mov xchg mov dec sti test test xchg mov mov rorl lods mul sub inc lcall push mov mov incl mov jbe xchg jne lret cmp mov dec mov imul cmp xor mov mov inc popf mov sub nop mov addr16 int cmp fisttp cmpsl and inc sub mov aas jbe mov mov mov ss fwait mov push fisub out pop mov in iret je fwait mov repz daa pop loopne rcrb mov push inc scas sbb push pop scas mov addl cltd fisub icebp aaa sub int faddl push sahf das unpcklps mov xchg dec or inc outsb ds int xor or jge push mov xchg jne xchg add jge inc cmpsl sti repz xor testl imulb nop inc mov or xchg push inc jae les mov cld jecxz mov mov jle popf rcrl mov mov cmp cld cmpsb dec lret test or cld adc pop or imul int sbb aam lea xchg lahf (bad) cmpsl imulb xlat mov ret xor jb (bad) xor jno jb lret ret je adc movsb mov in movsb push sbb add call pop cltd (bad) sbb scas cmp js pop mov sbb icebp cmc cltd mov sti jb call mov adc fimull arpl sub sbb jge and addr16 push cmp dec pop xchg xlat mov pop or inc xor jg jecxz mov mov enter leave xchg or fwait out fsts test adcl inc push mov push dec ret add out jge (bad) (bad) loopne test cmpsb mov cmp stos jno mov or mov mov addl dec mov movsl pop jnp sbbl fnstsw subl xchg sub (bad) adc data16 (bad) mov xor pop mov popf popa in add jle cmpsb mov adc mov les std cmpsb aam les int bound and mov mov push orl cmp add outsb mov mov ljmp ds push or sahf jns mov mov dec lahf push mov jbe (bad) mov cmc icebp push pop inc push sbb lea outsb movsb insb pop pop and shll cwtl ret mov icebp push add aas outsb mov cmc push add rcrb js mov cld cmpl test cmp push dec js xchg in xor fcompl xor rcr pop and mov add lret rcl test (bad) and inc mov lods (bad) in push inc dec lea int3 push in mov mov pop ds dec call fisttp fst mov add scas jmp (bad) mov lahf out dec mov pop jno ret xor add mov lock lds rorb adc pop aam ret mov jmp xchg sbb mov or outsb push xor dec adc test add imul dec push inc out sbb sahf loope mov cs pop pop mov dec icebp mov or inc (bad) adc (bad) mov (bad) mov sbb movsl out add (bad) or mov fsubrl outsb gs xor mov (bad) push test mov push sahf xor mov das sub prefetch mov stos inc jge sbb test (bad) lret (bad) rclb mov (bad) xchg fisttp (bad) js mov jne bswap mov mov cld sarb pop mov je sub dec repz push xchg rorl cwtl mov mov ds lods mov and cmp mov or inc ss jno dec ret or (bad) pop jle pop scas iret push xchg xor jl lret lock or mov outsb inc dec into jp xchg or (bad) flds mov mov es add add mov faddl and outsb mov std add fidivl push icebp lret sarl out push mov xor test mov in lahf je movsb inc adc push cld or ds das in add and leave mov ljmp mov push loope outsb jnp push stc ja sahf xchg push jns setle test in nop pushf inc inc jmp mov and mov (bad) xlat pop push (bad) fisub add repz jbe mov in jp inc fcmovnb push out mov roll stos cmp mov pop sahf xor frstor loop sub popf rcr push push sub scas fimul inc inc scas fisttp sbb pop jo into mov cltd outsl mov xor sub sub out cs dec aas ret pushf inc jmp scas (bad) loop pop push mov into pop xchg lods aad enter mov jno cmc jb ss mov lea nop sbb mov out sbb jle pop aas mov pop aaa add (bad) sub push movb mull js orb lock mov sub ds adc scas sbb inc in mov or mov mov mov daa sbb push sbbl sub icebp push scas jmp adc and push sbb mov mov sub ss pop test cmp push cmp daa adc lret add imul push mov addr16 jb,pn repnz out mov adc jo scas cli mov xchg stc adcl pop iret in test inc ds xor roll repnz lea hlt add lods sbb outsb xor out mov mov fsubrl add scas mov dec xor mov mov test jb jmp dec jae mov push pop scas push mov inc add push popf mov add imul and mov jnp xchg fstl lods mov arpl xchg xchg sbb daa pop insl mov mov xchg psubd hlt xor pop cmc lcall jne mov push mov leavew cmp test sti lea xor ffree jge dec sbb add (bad) jae sub or mov xchg ss aas mov fnop pop mov (bad) cltd int3 loope aam bound push mov sbb (bad) ja xchg test mov lds rolb xchg xor add movsl sar mov in sbb mov into shlb mov adc mov mov mov jle gs mov leave pop pushf mov stos mov sub shlb (bad) daa arpl pop jb mov or out fimull call add (bad) push sarb loope sbb insl fs push ds out adc push mov cmp or push scas mov pop dec lret mov jle int3 mov ja jge nop in pop cmp mov push xchg mov adc xlat push in call dec xchg inc cltd mov mov call push xchg mov push push aam mov cmp mov jg sbbb sub mov dec mov mov mov push (bad) mov shll cmp adc dec fistl pop xor fnsave les imul cmp (bad) push sbbl fs rcrb test scas insl call rorl arpl mov stos mov pop mov xor test std and popa mov fucomi mov mov dec xchg sbbb xor xor cmc punpckldq sub fild test mov add pop (bad) and jmp faddl push cmc mov dec mov add xlat jbe stc fs int xchg mov push js std adc sbb scas cmpsl inc dec out scas dec jmp repnz pop mov ss add xor push mov dec fiadd lcall mov ss lds mov fsubl enter sti outsl xchg sbb add xor pop or lret mov sub inc add mov in inc (bad) fstl ss repz rol push jl mov aas xchg pxor xorl js jnp fwait insl mov jle adc sub pop inc mov int jb cmp rclb add (bad) in mov inc mov out jbe out pushf in jo imul adc outsb push (bad) rolb ret in cmc inc jnp inc es add jb or add fmuls push (bad) imull and mov mov adc sarl out mov lds cmp out repz adc push test pop pop nop leave dec pop ds pop mov and es jae jb repz mov push jl insl sahf inc cmpsb mov aaa fucomip or lods sbb rorl sbb push xchg test cmc sub pusha lahf in mov dec xchg mov sbb inc daa xor cmp mov lock pop scas aad mov adc repnz push mov cmp mov pusha xor adc stos lea dec ror pop jp cltd imul mov sub sahf sbb mov adc lds (bad) (bad) pop mov dec cmc pusha nop inc mov fnstcw cmp (bad) xlat das push mov and add mov andl xor xchg shrl add loopne push incl jge out cld inc mov mov rorb pop push je in xchg lret mov adc jp add les loope faddl pusha xchg mov popf lret (bad) pusha stos jp jge mov outsl or jle sbb lcall rcl in popf mov iret arpl pusha daa pop or bswap or scas out in or das pop add add mov pop ficom mov in cmp adc cmp adc jbe push daa push push fxam mov dec mov cmp std in push or add ljmp jle jns in in (bad) in inc pop push mov arpl bound cmp inc jl daa rcrl cmp movsb xchg mov test stc repnz mov es mov inc cmp lret shlb rdtsc xchg lcall int3 xor fisttpll mov ror and clc insb lcall cmpsb adc add cmpsb inc mov pop and jne fidiv or fildl mov add jns lods mov and cmp xchg fisttp fnstsw rorb sbb xchg and cld xor (bad) mov ljmp fdivs loope lret out std in push jg int dec into mov sub loop pop add jmp sbb xor jo mov in cmc adc mov test aam cwtl (bad) mov in add and out popf stos fiaddl int3 sub add int inc popf sbb jno mov xchg cmpsb (bad) out xchg (bad) rclb cs (bad) aad add arpl mulb inc rolb pop test out mov in in adc cmpb adc ja aad jge nop stos push inc mov push icebp or pop daa dec inc fnsave dec pop dec xor lds jo push mov test ds xchg in loop leave std mov dec push daa push push xor into lret inc jbe push mov mov int3 popl cmp iret jo jmp add imul dec adc xor mov xor pop inc sar fadds sub mov jo ljmp adc adc out cmpsl test xor cmovbe cltd jl xor jp push loopne fwait in or sub in mov xchg jbe lcall adc mov fwait std push push repnz fidivr scas shll mov xor stc in (bad) data16 test sub xchg js sub cmc cmpsl push or call imul jnp cmpsl mov add addl lods or push or and clc pop jbe adc jbe inc (bad) idiv divl mov das test pop dec dec mov rcll push cmp xchg inc fsubr mov push scas (bad) out lcall mov add test sub mov jge mov mov sbb mov ret stos cmpsl outsl xchg mov or adc jbe or mov dec jne loope ds movsb orl or push mov (bad) test cwtl loopne dec xchg aam dec pop xchg adc push popa fadds push out mov dec gs not mov test and xchg lds std fsub movsb push out xorl stc mov call es js mov cmp mov je mov loopne mov pop test scas sbb jge je add push xchg dec mov mov inc outsb lretw jl sub movsl scas cmpb lea mov out sbb (bad) in xchg sub lret pop sahf in in (bad) out mov dec jecxz cs mov mov xchg rclb add mov cmc and mov push xchg ljmp clc add push ja adc or pusha mov jecxz mov mov (bad) outsl cltd pop mov push sbb fbld or mov inc mov mov test xor cmp pop and stc mov in push sbbb stos data16 scas bswap mov sbb inc cmc xor jno and popa movsl pop out mov dec inc or je mov divl mov jge jno andb (bad) in test or lods aad int pushf jp fsubrs sub rcrb inc decl inc nop iret xchg arpl (bad) lahf jno test cmp (bad) addl inc pop cmp mov ret test adc push int (bad) add mov mov pop add outsb jo xchg add mov pop in orb ljmp dec mov in mov pop (bad) or inc mov mov jle aas mov loopne mov push js mov inc ret push mov sbb ds mov xchg sub mov jns cmp repz fsts xchg rol pushf mov cmp dec inc lds dec sti out mov xchg mov std ror lret mov cmp (bad) shrl mov xchg add push xor jno cmp inc mov pop pop movsb lahf jge test jns sahf sub mov lds int3 jl xor addr16 jecxz mov popa sarb jle cltd decl lcall push repz mov bound popa fildll pop mov jne mov arpl out and cmp mov lock ret lcall mov sbb mov mov in fldenv fcmovnbe push push rcrl xchg inc ficom or mov cs test mov int loop pop jle xlat (bad) push mov sub ljmp jo inc enter test xlat lea popa add ja ljmp jne loope stos ret mov sbb scas in push xchg outsb mov repz mov xchg xchg xchg sbb andl push or pop dec inc ret scas test (bad) loopne testl cli xchg es mov repz (bad) cmp les in aam neg xor push enter and push mov xor int3 test incb dec mov rolb sahf xor sub inc shrb scas mov (bad) popf mov hlt ja mov imull and imul sbb test inc mov in inc xchg cld jmp lret jl sub push incl jmp or mov sub xlat sbb dec jle or mov andl and mov in lcall mov (bad) cmpsl in outsb sbb (bad) fnstenv inc sub mov ss fwait mov xchg lods js (bad) and call and mov int cmpsb fwait rorb push fwait jmp mov sbb std xchg (bad) enter repnz aas and cmp mov rcrb bound mov das inc or mov data16 cld aaa mov cmc adc test in pushf mov sub mov xor fnsave mov flds call xor fcmovbe cmc sub lods inc dec inc push sbbb cli pop mov push out xor mov fisttp fisttp cmp lret sub lea pop adc jb cltd jnp jo in shr (bad) push mov inc outsb mov pop mov dec jp faddp orb stos imul mov xchg sahf sahf jmp add leave xchg push inc mov movsb mov pop jmp mov push test push add fsub bound icebp scas data16 pop leave test in and icebp cmc jmp mov add fldt pop ljmp lret inc mov mov adc sbb mov sbb jge xchg test ret adc ss dec outsb in pusha push sub mov push xor inc pop or or mov cltd sahf jbe push xor mov mov and bound fstpt add inc call iret popa daa mov in pop in outsb or mov sbb dec push loop mov mov cmp mov in jno push cmp lea ds adc xchg subb dec xchg jns fs repz jmp add dec xchg sbb out and adc repnz test mov xchg mov fcmovnu (bad) test mov lahf dec and inc fidivl cmp xchg sti mov mov in sub inc cld mov mulb ret cwtl in xchg fsts out rclb iret enter in push ds (bad) sub mov mov fadds and sub mov jo cmpsl cli mov pusha js fsubs daa mov push movsb mov (bad) xchg mov sbb fldl push lds cltd lea sti mov xor push adc lods push cmc jns test cmp cmp mov outsb jbe jp fisttp or in or in daa inc jecxz mov ss call jp push notl push pushf mul jmp insb loop jns into add mov xor inc dec or aaa jle imul (bad) xchg stos les or fsub mov into iret lret test loope,pn xor aam add rol xor mov mov repz or push aaa mov mov (bad) int cmp inc xchg lret es or mov pusha fiadd xchg sahf fist xchg lods jb jl mov push and out mov dec or mov pop gs jno iret mov call and popa arpl dec dec (bad) cmp scas ljmp stos mov insl jg and add sbb push sub mov pop (bad) xchg dec pusha sub push (bad) mov pop mov mov fwait push adc mov int push add xor pop dec mov sbb pop sti mov loope xchg mov pop and mov and inc clc cmp mov lods arpl ja sti and cmp push mov in cld dec mov mov jbe fcmovb outsb cs mov test pop add lret ret daa hlt es mov cmp mov rol jo je push inc dec (bad) mov in incl xchg loope loope test mov push lahf mov and mov or inc mov in in mov or mov leave sub out mov push lea flds inc pop jae dec xor mov cmc lcall push mov outsb cmpsb mov add in and dec popa subb mov push mov lret mov push push dec mov lahf xchg cmp insl fs sbb push stos ret or push frstor in es sub sahf outsl outsl mov mov in or scas pop out and mov xchg scas jle,pt aam lods test xchg mov jo inc or mov xlat idivl mov adc call mov mov iret dec les std lods jmp or sbb push in sbb test pushf xchg mov inc ljmp lea aas outsb add sub mov popl cmp push outsl mov movsb js test push stos rcl sbb gs dec inc mov mov arpl cmpsb in aam stc xor pop fwait sbb ja jno movsl jecxz or mov (bad) outsb adc mov fwait sub jle add dec pop in das fild cld adc push sarl popa out pop inc add xor js mov adc hlt push jg aas popf xchg mov int3 mov mov insl inc or inc jl inc push mov outsb pop in adc dec testb lret and push je sub mov jno cmp add sbb (bad) or push test sbb inc fidivr in imul sub neg xorl cmc sbb push cmpsl jle test dec in testl cmpsb or ror pop xchg jp scas adc jl push inc sub imul sub jge sbb push push and ficomp outsb leave fs into and dec aas dec pop incb mov inc jg (bad) mov insl mov xchg mov sti sbb xchg dec xchg bound inc xchg int3 notb inc addr16 push in (bad) das int lcall mov add insl mov jge adc inc lds dec push mov ss test xchg cmp arpl test (bad) fist jns sti mov aam pop pusha ficoml lea mov mov and imul movl dec and cmpl mov inc xor (bad) xor and xor idivb mov ss mov add loopne or jno inc cs pop movsb mov add cmp out outsl mov (bad) push lahf mov sbb sub pop sahf cs rcr mov and clc lods or lret imul mov icebp sub in mov fistp stos dec xlat mov mov sub mov adc push js fstps add mov (bad) xchg les pop adc hlt lea mov mov xor fstps loop xor ds aas popf push into sbb in jg mov jne aad repz inc jbe (bad) ss mov and xor gs ds jecxz xchg or cmpsb leave shl loope jae call out cmp mov cmc sub push sahf mov (bad) daa gs mov fstpl lahf fstps xchg ljmp mov stos push pop out sbb or lods mov mov aaa push movsb jmp mov dec cli mov in lcall sub loope int push mov out into std inc and cmp mov pop push add sbb pop inc mov push mov jo push push cmp mov push adc push ret pop lea cmp xor leave int mov push mov mov mov add mov leave sarl cmp dec jbe (bad) les cmpsl daa add sahf mov jl lods aaa push mov into shr subb cmp shlb xchg test sbb dec xlat sub push into fildll xchg in cli (bad) mov xorb pop mov fisttpll pop dec mov mov adc ds clc add data16 dec ljmp or test arpl rorb cmp scas aad (bad) mov and lock cmpsb jb dec adc neg and adc aad mov in bound hlt dec sub popa in lock mov mov push xor stc in clc mov pop les mov mov jecxz mov mov mov adc cmc lea (bad) jg xchg mov mov jne jl mov imul icebp and sub xor push cmpsl mov stos lds adc sbb mov sub mov and adcl mov sub (bad) mov and int out popa lods roll push jp addl mov mov call add repnz lcall sbb (bad) jae stos test mov ret das daa outsb (bad) loope add popa mov xchg cmc in mov iret mov in cmpsl dec jmp cs add outsl xorl ljmp jo dec mov xchg dec lahf mov adc pop or mov nop and inc adc gs ss outsb in mov sbb mov pop push xor ss dec fadds sub fstl fcmovnb jo lret xchg or mov add call and rorl mov shll scas imul push mov adc mov out movl mov aaa std addr16 inc jl and dec test leave add js mov dec inc adc xor orb and or pop push adc aam aaa int in sbb cmp in mov lds shr adc dec loope arpl xchg out lret push mov or mov mov (bad) cmp cmpb rcll sti jne repz dec mov ljmp cmp fistp insb jae jg (bad) mov jns movsb in push jno jmp inc cmpsb and mov or js adc mov clc inc push pop push (bad) (bad) mov xor mov test mov in and mov enter cltd cmc cmp mov (bad) in or ja mov iret shlb pop test roll sub lea xor mov mov sbb adc pop push ds xor lret nop js aaa jle pusha xor mov add inc dec add xchg jae je in outsb int push cmpsb xor aas cmp push jmp ret mov add and aaa in dec pop pop popf adc inc mov adc mov jbe xor mov test jp and push jno push outsl mov int subl aas xor pop fucomp lcall aad push ljmp sbb pop (bad) in bound xchg or xchg fs stos clc out adc lea sarl (bad) xor cld mov lret xchg in pushl dec xchg jbe (bad) mov jl jmp (bad) lods ds mov outsb add lds push scas adc jl pop jne cmp cmp add outsb out in bound test mov (bad) sti mov and cmp pop mov faddl lcall mov xor enter in aaa pop xchg sbb lret mov es std xor fs sbb rcrl sarl pmulhw cmp mov sub std xchg mov dec dec sarl dec repnz xorl xsave fnstenv sbb repz jbe lahf jo and xchg lds es repnz add ficoml adc cmp push pop jae hlt jmp mov in test inc xor dec ja aad inc sbb mov mov gs add in out stc cwtl sbb mov dec adc xchg adc int jg shl mov test ss push push (bad) cmp mov das dec xchg mov jle loop cmp inc xchg nop ffree mov jnp push pop fwait sub jmp dec shrb xchg mov movsb and gs cmp rcll add mov xchg jp imul jge (bad) repz ret push in sbb cmp push and xor scas daa mov pop popf mov sub (bad) sub imul add lcall stos push test ds sub inc clc jmp add nop mov sbb xor repz mov cmp or stos (bad) sbb das xor outsb add (bad) scas insb add out lahf mov sbb lfs pushf lea xor push push push lock cmp ds test outsb fbld and jnp je xor pushw sbb mov xchg adcl and lret mov repnz outsl cmp test xchg jnp inc cmp cmp hlt xor sti mov mov insl xchg or inc (bad) stos in push dec (bad) (bad) arpl push mov jne into mov cmp jo jb mov xchg jo xor mov cmpsb jmp das lds push mov dec lcall inc lds xor sahf adc sbb in xor xor jmp je sbb and xchg or mov lcall mov xor idivl mov push fcmovnbe inc (bad) fcmovne (bad) mov insl or pop sub adc repz test add push xchg orb sub xor cmp and mov in and xor lcall pop xor ret or aas gs out call add jmp iret adc aad das daa sti lret mov out divl xor in xchg mov xor xor dec jge scas ja or jbe scas xchg add mov in push pop xchg mov mov test inc mov xor enter lea mov test roll (bad) mov out xor inc fstps lods in cmp jbe jne scas ss add cli xor mov dec imul imul adc mov add pop sbb mov test outsb daa mov push pushf jl inc xchg cmp jo daa in dec or imul push lcall (bad) and mov (bad) (bad) ja and adc je cs sti inc mov andl sub mov popf (bad) lret ds sbb mov mov push sbb add shl inc push sub jbe sub sub decb mov xchg ficoml aas fs nop jmp out and movsb xor lcall enter imul lea mov jp add pop lahf out xlat sbb cmc mov mov dec inc add jnp adc test cmp mov test mov data16 mov int addr16 (bad) mov sahf mov stc and movsb xchg push ljmp sbbl push mov fidivl mov mov cmp or aaa mov jo push lahf add push je jg leave inc add call mov insb pop pop mov mov xor xchg inc xchg or mov addr16 lahf into sub mov mov adc inc mov mov push scas out sbb jl push sarb std mov aam jecxz push pop sti je mov xor xchg dec sbb cmp mov xchg orw inc mov sbb adc mov aad add test mov lahf pop jno xchg sbb pop in adc push decb and mov mov int3 cmpsl das pushf out xor enter or pop add icebp mov xchg or push rol sbb dec sub in sbbl (bad) repnz loop pop inc dec roll andl add test int cmp dec popf rolb add dec cmp aad cmpsb loope sub push pushf cld rorl push vmovss push sbb sbb xchg scas ljmp or sub xor add test mov lret xchg mov adc xchg mov lahf test xchg push push mov das bound pop dec and icebp aam push stos jle jne adc pop pusha movsl sbb (bad) mov add into lods jp mov ljmp hlt mov nop add sbb in mov lcall dec mov fidivl pop scas sub xor sahf jmp mov lret mov out sbb cmpl (bad) adc mov jle in mov outsb fildl rorl mov outsb jmp movsl inc cmc mov mov cmp xchg fsin mov mov push xor (bad) ret xlat in push inc adc mov push mov sbb jmp aad mov stc push xor js cli mov pop jae mov dec mov cwtl shr mov int das xchg shlb mov dec mov cmc xor sbbb mov repnz mov movsl fisttpl in mov (bad) pop in sbb xor xchg aaa lcall ret adc movsb sarl leave je fisttpl jbe sbb mov cmp mov jo mov mov dec in jo sub mov jge cmp adc insb pushf mov push mov pop repnz mov adc pop cmpsb cmc out mov flds sub cmc inc ds nop sarl add jmp pop push scas leave std sub mov cld and inc mov scas test mov lahf fbstp inc dec into push stc shrb mov ret dec stos xor scas jecxz dec and mov iret mov xchg mov aam mov adc cmpsl cmp sub xchg push add inc lret inc mov dec roll jp rcr xor xchg xchg ficoml dec popa add or (bad) cmpsl fstl mov ds sub jecxz in xlat test mov pushf mov mov add push mov pop loopne (bad) mov (bad) cmc addr16 outsb jmp or jge add xor sub data16 xchg pop inc dec xchg push stos sub je jb mov in add data16 cmp sbb fstpl pop xor leave mov sub in je cmp xor dec std adc stos lods mov scas xchg jo pop cmpsb fildll in or push scas fldt xlat xlat movsb cld fisttp push ficomp les xor imul nop sub mov in iret jno leave jp outsb scas das and mov jnp mov inc mov or xchg jb lods out cmp ds mov insb cmp sbb and aas ds add insb pop daa cmp sub movsb cmp mov (bad) (bad) popa (bad) in pushf mov faddl inc mov sbb sbb xlat iret pop pop mov adc add cmc ds sbb dec and jecxz shrl je push cmp stos dec outsb dec mov cmp mov push pop in (bad) mov adc lock mov fwait mov jge sub in fnstenv shrl xor test mov in daa ss push jmp test sbb cmp setno jmp outsb in mov xor sub xchg outsb cmp data16 js nop add lret jge mov mov aaa js roll lahf pop and add inc cmp inc pop js cltd pop in or fwait sub in outsb ljmp pop test fisttpl stos pop mov pop bound jns jl mov aas aad and jns out xor dec inc data16 bound jl jae pop pop mov push sbb xor mov pop (bad) lods shl aam add (bad) xlat loopne (bad) cmp rorb in aaa int dec pop lds sbb xlat xchg pop in and (bad) gs jno in add nop ret pop fistpll test leave xor and aaa inc insb mov aad sahf lods add push mov in mov scas insl test and mov stos xchg loopne in and lods cmp hlt add stc mov arpl sbb dec cmpsb add adc mov mov sub jecxz aam pushf push jle sahf sbb jns xor mulb xchg (bad) sub cmp mov leave xchg fadds popl ss stos adc adc add lods outsb cmp in sub outsb orl imul aaa loop hlt xchg or test es mov cmp negb push aaa and lret sahf cmp div lods jne in dec push mov sbb jp sbb mov in int3 mov pushf insb dec inc lret push adc jne popa xchg cmp mov mov aam mov xchg cmp ds mov or cmp scas outsb out jo inc dec lcall jnp ss (bad) adc pop jae fs mov lahf test mov cmp (bad) mov and dec in adc shr es popa mov xor lea fcmovne stc mov mov and dec mov jle ljmp push add popa stos push ss les mov icebp mov outsb jl (bad) in roll mov (bad) scas or rorb loope and leave mov outsl mov sbb jns rcl fwait push fimull inc lds and mov xor das in lea sahf push cmc bound out and push push cmp mov icebp rclb test iret inc aaa das dec mov les and in add sahf scas mov in dec out mov jns lret cmpsl test test jno data16 out lods and shrl sti cwtl mov jp js xorl ftst lds sbb mov cmp pop pushf and mov push lea enter mov sub mov (bad) fistpll pop pop dec cli xor pop icebp or mov inc vandps (bad) cs xchg je in aam sti int3 fs push inc inc xor jns adc mov out sbb js fsubl mov leave cmp mov jge push pusha out mov mov ficom xchg and out pop iret adc push imul mov outsl push lahf mov add das mov push xor push jecxz add (bad) shll mov ret pop push sti aaa (bad) fisttpl das int3 cli jg dec (bad) les sbb fmull mov bound xchg bnd mov orl fs lock add arpl adc data16 outsb mov xchg xchg jge mov cmpl xor or notl mov mov ret in test mov cmpsb mov sub in dec sub mov sti mov jge add (bad) lcall push push xorl ds pop add lock nop or mov scas mov cmpsl jo dec in xchg inc jno jbe leave mov aad lret pop icebp ret xor lea adc cmpsb xchg mov in and jl subb adc arpl jge mov fdivrs (bad) into ret inc pop pop mov cmp jno je outsb insb jp stc lahf xchg sbb or dec or lods or cs data16 fwait sbb jo fisubl inc cmpsb jle cli test mov lods jb outsb inc repnz xorb stos add lock (bad) subl imul dec cwtl mov in (bad) sbb int3 scas in pop and mov sbb nop push xchg in (bad) ds and push test in fcmovnu sbb xchg stos mov js xchg mov mov fcoms out in aam cli xchg jb mov xor adcl out inc mov jbe int3 outsl inc pop mov xchg cmp les jb sarl mov inc sbb nop cmp aaa lds call ds sub sbb lcall clc mov inc mov mov test lret cmp lock pop push jb pusha and inc inc jmp add xchg (bad) jp or pushf mov push pushf lods test pop lods inc or xchg or lret adc shll in push lahf inc (bad) lods jae notb mov out outsb sub ror sub mov sub jge stos out and inc mov in iret flds mov and and xchg inc xchg in mov jg pop ficompl inc nop out mov ret mov scas jle push add mov or lods (bad) xchg out add xor lods mov xor mov nop push jge rol adc or xchg aad mov stos testl mov js and pop je outsl scas test xchg push push cmc sbb cmpsb cld insl xchg xchg lret adc int cwtl cltd jg xchg sbb dec dec mov xor push lahf gs mov sbb push mov cmp push loop mov jo fwait ja in mov data16 into mov aad in dec mov mov (bad) (bad) repz mov pop or inc mov push or lret pop (bad) cmpsb dec pop lods cmp mov arpl xor divb xor outsb es clc stos lahf in pop jp cltd push xchg mov and xchg cs or xor in cmp out pushf cmp push js dec xchg jp pop pop sbb or in aam inc jns add in lret jb push outsl cmp cmc dec outsb cmp in fist mov mov fsub mov adc (bad) xlat pusha sub mov jb adc stos sub pop pop cld (bad) shrw dec mov mov int3 mov icebp push sbb decb popl stc push stos mov xor push leave mov mov (bad) xor dec repnz pushf sbb xchg add mov insl in call mov cli sbb inc scas daa push mov adc out mov rol inc xchg rclb fsincos dec stos add outsb mov testl insb lcall jge aam xor jg ss das mov inc lds dec sub vcvtsd2ss mov mov out int3 aas dec (bad) mov push sub ret rol sbb push cmpsl (bad) xor sub mov out bound xchg (bad) repz daa jle mov pop mov and in mov cwtl dec xchg pop dec lea pop push daa dec bound adc push mov (bad) insl popf add adc mov or inc mov adc adc jge jg js notl leave fldl sbb ss dec jl jle jns fsubs pushf lods mov sub scas cmp cmpsb jmp mov repnz dec loop imul not xlat insb mov ja in and mov jno mov fwait push add mov dec pop mov mov cmp movsb scas sbb rorl jbe test push pop sahf dec mov aas mov sbb jp pop mov lods inc jne mov cmp add outsl mov and xchg test pop mov dec jp xchg pop aad in in and mov sub mov ret push sbb clc adc addr16 mov mov dec (bad) dec in mov xchg test arpl imul pop xchg or fdivl and cmp and xchg sbb mov add loopne popf mov mov in lcall mov call mov or push or cltd aas test mov pop or rcl push ja stos lea out loope cli test in mulb or adc fmuls push cwtl inc xor xchg scas jg out pusha scas dec test xor jo,pt push push jne xor lds mov mov test pop in mov xchg sub lods and in pop inc aas add push addr16 inc test push test fsts insl mov and push push test mov push popa icebp ss fstpt in jne or bound aaa arpl cwtl icebp sub pop jp (bad) sub aam jno roll mov xchg dec dec ljmp mov cmpsb mov out inc inc mov and movsb mov aad push inc nop xor add scas (bad) fmul sbb mov test dec lcall jne movsb xchg cmp mov mov sar mov insl icebp cmp dec dec xchg fadds dec mov mov dec jg rorb push test sub sbb push ret dec xchg push pop sub lahf xchg out and out iret shrb stos add sbb ret xchg enter test push mov push mov dec lahf add (bad) int3 das fdivrs mov lcall stos mov push in mov (bad) shl push push dec fs ds xor out adc jo (bad) mov js loope mov xchg inc pop in mov fidivr push push and test jecxz xchg mov (bad) mov stos and (bad) aam sbb xlat cltd cmp call pop (bad) cli in enter mov das xchg pop push cmpl dec and jnp xchg imul pop cmpsb xchg pop scas leave push jnp mov cmp xchg jp and adc int mov rcrb pop and mov or mov xchg jl jmp mov pop gs data16 es cmp push into fdivrs pop fistl mov add stos das jmp iret cmp aas mov ds outsb addl clc mov notl test mov stc data16 lods push orb (bad) xor rclb add add or or mov dec mull jbe loope fisttpll mov xchg xchg fnstcw lock cmc jbe les loopne (bad) cmpb ljmp mov cltd jmp mov (bad) push ss lahf push push fildl mov push (bad) pushf xchg dec and inc mov adc adc push (bad) sti int3 mov xchg cmp dec add and orl mov mov (bad) hlt or ja,pn and xor pop jp ss mov xchg mov add mov stos mov mov sub outsl pop adcl mov add and outsl sub xchg shrl lahf add aad and outsl in mov mov test adc nop xchg mov push dec mov xor mov mov jae ljmp in mov push or fsub xchg sti les xor mov les jnp test int aam aas jb subl fisubr lcall xchg outsl mov add imul cmp mov mov push mov and add inc adc lods xor cwtl mov sub or mov xchg or cwtl or addr16 pop push mov pop pop dec stc int3 dec scas inc mov mov mov fcmovnbe jbe add adc mov jmp outsb adc xor fldt fisttp dec (bad) mov imul out mov dec repnz scas mov lcall push lea in js lds push cltd and loope lea xchg jge movsb ljmp push and scas fbstp push mov pop test test push lahf sbb pop in aaa int dec btc rcrl push (bad) nop in (bad) enter test in cmp ret das dec jle mov sbb fldenv mov nop lahf sub js pop push ja xchg add pop or int (bad) sarb loopne pop nop das inc pop in mov xor (bad) or leave mov pusha sub xchg addr16 std pop das dec ljmp arpl repnz sub popa cwtl fstp add mov push aas jo das xor xchg mov push xlat in mov leave and xor loope mov dec les nop stos add flds adc or xor in fstl ret fild and ss test incb in je add cmp adc ds dec ja sub js negl or dec push sbb enter fnstenv jg mov dec lock test cltd pop ss mov lds mov pop add out mov fnstenv jle or lret out in push mov adc aaa add je pop sbb inc outsb mov and and popf adc jl mov bound pop mov rorl test cmpsl dec scas ret movsb xlat jle fwait xchg and sub mov aas pop in pop push push in (bad) stos movsl mov and in sbb outsb data16 pushf test lret push push sub mov cmp int3 mov pop sub mov pop inc fildll nop loopne sti xor lahf mov inc dec mov dec cltd movsb cld and out mov mov js lret mov sub lea ja adc xchg in in adc clc pop mov lds scas aas sub inc push inc (bad) ss push out pusha (bad) in imul dec mov sbb adc jbe inc xor xchg sbb jmp or and sbb nop imul mov mov xlat idivb cli cltd mov xor inc jg (bad) icebp scas in dec or leavew hlt out dec jmp push jg ss arpl sbb dec (bad) cmpsl xor es add xor cmp in je push ret mov push fbstp mov and jno jnp xchg jp push xchg cmpsl fs jbe das mov pop movsl stos add add nop dec (bad) (bad) push sahf stc in ss and imul add xchg jle inc popf out jne push cmp (bad) jnp lods push mov sbb mov pop test sub or aaa jp or xchg pop test lea fdivrp pop outsb rcrl mov mov fcomip jno pushf (bad) fnstcw mov inc dec mov fisttpl loop js (bad) (bad) xor or pusha lret mov ret (bad) btc xor push int es push adc pop mov popf xchg rclb lahf xor add imul mov fisubrl xchg cld sub lock dec fidivr mov push push and lock (bad) xchg repz jg xchg pop mov mov jmp lea es mov pop outsb pop cmp mov aad xchg mov add jmp mov mov out cs gs popf mov lcall nop dec mov sub mov cmc mov xchg inc dec shll fwait jle xor scas and xchg (bad) inc in dec push jnp bound sbb cmpsb or pop (bad) mov mov cs scas jecxz outsb loope add je into mov std or mov je std jnp sub xchg mov mov mov stc idiv gs cmp test test push movsb dec push jae sub pop jns lret in scas push sbb mov xchg bound jne arpl push aaa mov dec rclb shrb leave adc mov push addl sbb repz lret jb push arpl ret pop out (bad) lea inc (bad) enter jl cmp lds ds popf jno cmp push lea imul and and inc push mov pop cmp or out or mov mov mov mov mov and (bad) leave dec fisttpl cmc mov dec xchg scas test add mov inc stos in sbb out test mov icebp fstpl cwtl and mov xchg inc cmp outsb push add subps jge sbb jb xchg lret mov sbb jns (bad) mov dec mov insl mov or sbb enter xlat (bad) add sub out pop rorl leave dec insb mov inc popf (bad) mov nop test mov insl mov int adc rorb jp fmul mov sahf (bad) cmp sub mov sub pop test mov stos stos mov cwtl jbe xor jmp (bad) stos mov imul and or test mov insl dec jmp push dec imul and sub jl mov dec rcr mov cld inc adc popf jb rorb and popa pop mov push fistpll pusha sub inc (bad) (bad) xor adc sub mov rol cli push adc dec jmp mov jge mull dec mov ss stos and dec inc lret popf (bad) jecxz cmp (bad) or inc das movsl mov fistpll lret xor push mov fsubl jle jns sub into jmp cmp es daa sahf in iret stos test pop adc ss or xchg push ss ljmpw mov mov pop les mov rcl add std pop sub pop mov data16 ja lock sbb rep mov hlt lahf push xor lods in xor jo loope mov mov push rol sbb insl jecxz cmpsb in fs sbb gs ret enter scas ds push enter cmpsl fs jo mov scas and adc xchg and cmp leave push push cld push or out cmpsb mov fnsave sbb in dec and int3 xchg mov sbb mov (bad) add mov cmpsl inc daa repz dec mov (bad) push push decl dec xchg lea (bad) (bad) push ds mov mov jmp sub inc cmc lcall mov arpl scas aaa mov insb mov xchg and and mov push fs js rcrl jle mov cmp popf (bad) xchg scas in push sbbb imul (bad) dec inc rcrb scas outsb adcl stos (bad) into jo clc movsl ffreep outsl pop in inc icebp clc sub pop xor push scas nop xchg data16 mov push das mov int3 mov rcll push xor lock sub or in pushf dec lahf das push ja jl pop mov fistl aas in int3 mov xor fwait xchg scas les stos outsb mov in (bad) ret idivb (bad) cmp mov push or inc mov inc dec in aad jo pop push push in in and scas insl ret fldcw sbb dec pop cmpsb jl sbb xor push mov cmp out cmp inc mov arpl in fcoml pop in or leave fwait and jl das sahf or sub nop mov out fmull outsb aam jbe mov js je xlat int insb ja in mov fist mov (bad) out movsl jne xor pop hlt shrb cltd pop dec data16 cltd stos add aad fisttp in loop jmp inc xchg mov stos push mov mov push jp and jle scas gs adc imul add test lods (bad) pop mov jne out and mov push jns push repnz imul mulb pop mov push in mov fldl fisttpl ss mov nop adc pop xchg xchg and adc inc mov ss mov xchg mov push test mov or aaa mov leave test popa jb add mov movsl inc mov inc roll sbb add clc lods stc sti notl dec sbbb es jle mov xchg sbb outsl push int nop mov mov dec push loopne add outsl mov cmp jne or mov ficompl packsswb mov xchg push test lcall lahf loope cld test fwait mov orl mov inc adcb mov add ljmp sub lea fnstsw cld movsb pop dec test or pop (bad) iret jecxz lea cmp mov shll divb and lea push cmp mov mov fldl and jo jbe inc sti mov int fdivl xor add test mov dec mov push and dec xchg int3 jmp pop (bad) mov aas cmp cld scas xchg jno dec jle in xor mov (bad) mov daa cmpsl popf negb test push scas mov (bad) (bad) xor sti sarl mov cmpsb inc ret cmp leave test xor push pop jle repnz sub mov mov es mov lret adc aaa shrl xchg cmp jl add push xchg dec sub mov jnp cmp pop insl sub xor inc push test dec (bad) in adc and les int3 mov cmc pop test sbb je mov add (bad) mov in cmp inc iret dec xchg mov adc dec mov call ljmp leave and in mov mov popa adc test rorl insl ss nop mov cld or push add and repz jbe cmpl push call mov inc jmp cltd xlat (bad) mov cli mov shll lret fiadd ja pop test movsl test add cltd and or dec adc loop add inc (bad) mov fidivr push or mov mov dec mov in outsb scas into dec or sub push flds jp inc inc movsb mov lahf rcll subps pop rol test mov rol jno push cs lret pusha jb test enter loopne cli adc inc mov out jmp jle stos into (bad) mov out adc mov xor mov mov icebp repz adc mov and scas add pop mov push jl repnz mov cld sar je arpl mov cmp mov imul (bad) mov stos lcall dec loop cmp pop push scas les mov jo fisttpl xchg cmp sub in stc push orb mov pop mov aam or lret jl cmp dec cmpsb adc sub dec adc ljmp mov sub mov aas lret dec inc jmp mov in rcl add (bad) pop imul mov mov fucomip imul lahf and adc jno xchg mov sub push sbb push ljmp fdivl or mov push subb mov les (bad) push (bad) fstpl scas and mov std cmp mov daa sbb rol lcall pushf int test mov mov jle add lea sahf mov mov ret je movsl sar pop cmp mov xor rorb jnp arpl mov pop push pop xchg mov mov (bad) push pop dec mov push movsb mov pop pop mov sub frstor cmc push sbb sub add mov or decb xor mov gs (bad) movsl dec notb mov lret and mov or or push ja mov fwait xchg xlat mov push add fisttpll mov inc jnp dec sbb mov pop adc clc jb mov mov mov mov push jns inc aad mov nop mov in mov lods sub jmp mov mov std out mov loope pop mov in dec fstl mov stos mov lods push sahf int3 ret adc xchg cmp adc (bad) mov in jb lret cmp aam mov (bad) outsb out mov mov adc aad sbb lea fsubrl cwtl mov leave fs outsl mov dec xchg xor test sarb das push imul mov or leave pop lea test lea fs testb xchg ret cmp xor fiaddl push inc mov in sti xchg mov xor pop cmp dec cmpsb dec mov (bad) xor jns dec popf push data16 popa jne lock mov dec add cmp aas lods jmp cmpsb (bad) ds je cmpsb mov repnz sub hlt outsb xchg stc pop aaa ss test aam in push int3 mov pop or lcall adc push outsl lea inc sub cmp push xor mov jge and mov icebp xchg fild and mov inc add jecxz mov (bad) or outsl dec insb xor inc ja cs push cmp jns xlat mov push sbb stos inc sahf jge jns push test cltd cmp sbb mov in daa pop mov and jb or push add jge xor dec add ja add add lret push mov movsl pushl mov hlt gs lods adc lds popa lret mov out movsb jge jmp mov cltd movsl jl adc jmp jecxz jo sub push gs sub inc rorb imul insl and faddl (bad) loop cwtl popf lahf dec xor lds jl xlat enter out jns ret or cmpsb fcomps push movsb mov adc jb int mov xchg int push inc outsl jmp jmp or hlt sarl into test pop sti xchg lahf stc stos jns mov jl mov repnz (bad) out sub mov aam int rorl sub into int fucomip mov pop xchg and push add aaa and fidiv in sti lea xor mov dec xchg add pop addl jl sbb das popa pop mov adc inc repz xchg mov shr in into push data16 inc jecxz stos add mov out mov jns xrelease pop in mov add xor sub imul adc lret jp les push je sub lea ss mov push jp ret data16 shr scas lods cmp and imul fsubrl loop dec mov jo cmp int3 addl add fs mov fiaddl adcl rcl cmp pushf sahf add mov icebp out ret fdivrs pop pop xchg cmp xchg outsb push add mov xchg sahf rcrl inc nop (bad) fcmovbe arpl or mov mov outsb outsb cmpl into lea imul push mov mov fucomp mov cmc inc into icebp pop push scas pop dec iret and mov stc add add sub inc lcall push jbe (bad) test out rcrb shrl jge scas (bad) imul or lods sti and in push hlt pop mov xor or or loope stc iret (bad) lea clc test jb jbe mov mov loope stos sub sbb dec outsb sbb mov mov push xchg sbb lock push (bad) lahf fnstcw hlt lods call and mov xchg fisttpl das inc ror push inc push adc push xor orl scas or pusha (bad) mov arpl cmp jne outsl push jmp ja pop repnz mov jl dec jnp aad jne lret and mov out dec or addl imul cwtl popf adc js or fiadd sbb adc ds and hlt push mov xlat clc add cmpsl mov dec adc in and sahf fisubl cmp cmpl rcrb mov lods aaa or outsb pop int ss and in pop mov xor sarl or push inc xorl imul and push lret adc xor rcrl mov or fchs mov data16 iret dec fmuls sahf mov push (bad) sub ja adc mov xchg js mov xchg and ss aad pop push and repnz cmpsb cmc (bad) rolb cmp mov inc xchg sbb sbb push arpl fstpl jno add xor cmpsl cmp (bad) hlt pop xor dec xor leave sub in pop jge mov mov insl cmpsb and jno jg std and leave lods ds push (bad) cmp push sbb jmp mov add pop aaa (bad) push lahf iret fdivrl shl jno lods mov sub xchg fiaddl lahf sahf psraw adc aas mov (bad) pop sub ds test lahf (bad) xor or add dec je cmp xor mov (bad) mov decb scas arpl adc in aaa in (bad) fidivr add jno (bad) loopne mov mov mov or fnsave xor pusha stos jnp sub bnd in push out pop add pushf adc jo adc mov or jg ds (bad) mov jle repnz lret in jns inc lahf test jbe les mov in movsb scas xor aad and (bad) mov xor jne mov pop cmp mov and loope adc in inc je mov stos sub jns outsb aaa scas add push lods test lea jl mov sti idivl or dec xlat adc mov in add add in mov out add ja decb pop xor jmp xor or push mov or mov mov fadds fbstp mov stos loop push inc fnsave or in sub into jb pop mov ja mov xor push inc mov adc outsl dec mov icebp or ja cmp (bad) mov mov mov inc mov cmp jg mov mov mov xchg push data16 mov dec mov xor int hlt andb fdivr push jns lret mov out jnp mov aaa fs movsl mov lret insl in sbb or scas push dec mov in repnz push jne sbb jb pop cmp dec ficom (bad) xor push gs cmp incl icebp js inc cltd push loop and bound lcall mov mov ljmp push negl push lds dec and or in mov cmpps cmc in idivb inc std stos int test stos loope mov outsb jl xchg data16 (bad) mov mov jp call int3 sub in sub jge mov xchg sar xor (bad) repnz inc push in data16 test rcrl xchg dec cmp aas cmc std jnp in mov dec (bad) cmp add mov push addr16 into ffreep xchg pop fisttpll lea rcll pop pop mov dec in add mov cli rorl mov movsl out sub xchg mov les (bad) scas pop dec ja mov xchg (bad) aam push adc fmul or (bad) mov fucom push mov sub addr16 loope (bad) pushf sub mulb leave scas push pop int popa dec mov (bad) mov inc out push rolb or fucomi bound jp xchg add adc lahf jp fwait mov mov sub int3 maskmovq (bad) xsave xchg push sbb pushf loop jg fwait sub bound inc hlt inc insl add jo pop dec fiadd test push lahf jne outsb pop push aam pop lods iret or ja sbb sbb push jge data16 out xchg pop out inc sub and sahf aam mov sbb pop xor push aaa push repnz arpl or cwtl jge das test repz xor lods sbb dec sarl inc push adc cmp nopl (bad) iret cwtl lods dec sbbl test add inc cmp popa or sbb mov cli adc pop lds cltd push aam mov inc scas lret jle jl jecxz test in data16 mov fcmovnbe inc mov dec ds mov mov or lock ret frstor jbe ja sahf jno call pop scas adc adc add or jbe test jl pop adc pop int3 js in lods add (bad) stos in dec jb push (bad) in (bad) cmp inc scas cmp into sub outsb and mov js js enter lret push jnp nop fstpt inc in push xor fild mov hlt dec imul subb and mov adc enter imull mov pop imul jl mov (bad) les cmpsb xlat addl and push sbb inc push scas mov clc jns mov fsub mov mov mov mov and add fdivrl pop fist jmp mov add pop (bad) cs mov enter rolb and idiv mov xor or ret pop stos xchg sarb (bad) pushf push (bad) fistpl push push mov push add clc movsl push mov lret lret xor mov adc pop and push xchg lea mov sahf dec ljmp icebp aas gs jl mov add insl stos xchg xchg mov bound out imul adc lea test add scas jae mov sub or xchg in mov sahf outsl in out xor cmp mov jo in fnop mov and push adcb mov data16 shrb sbb sti xor adc ds (bad) insl jno pop push aad cltd mov cmp cli sbb stc jle and imul or out mov and push lahf in inc in cmp mov or jne pop add jb mov inc and sahf stos push movsl push iret xchg or shlb ret mov pop jle mov add mov mov fcoml dec (bad) pop mov jecxz aas data16 hlt add cmp (bad) flds push cs mov ficompl push fistpl jle jne jbe xchg shrb lret lahf push mov mov cmovge push cwtl fidivl sub test mov scas sahf cmp mov fsubl icebp adc xchg cmpsb test lea xchg out stc pop jbe push mov movb mov or cmp int cltd stc cmp push dec popf sahf jmp xchg xor mov ret fisub jg mov test (bad) push popf push out cmp xchg pop rorb mov inc cmp mov add push movsb movsl (bad) in data16 sarb outsl push mov pop int jo andl int mov jge sub fcmovbe pop add loop and movsb pcmpeqw in inc push out pop push xor jp test or jl,pt adc xor mov xlat fcomps mov dec out cld mov adc int3 sbb vpaddsw pushf fcoml dec (bad) mov out leave inc jle pop mov push sub aas jns lea xchg push sahf insl iret mov mov xor (bad) xlat (bad) aaa data16 (bad) mov (bad) or inc lock sub ret mov pop rol jbe in pop lds stos test dec test mov push adc dec (bad) bound stc int xor push mov test push fwait lds push adcb lea (bad) and cmp mov and push mov xchg dec jb les es push jmp jnp out push ss add sbb rclb aas lea fs out push scas pop (bad) push iret js mov shr xchg insl mov out sub sbb lea mov sahf inc orl inc inc inc sbb dec popa pop js outsb xchg inc mov test push mov xor adc or push lds or out stc mov outsb mov repz hlt lea and leave in inc sub xchg mov loop cli mov push dec lcall add xchg add pop pushf gs in or cltd jae test mov fidivl insb adc push sti nop in jl lea lds adc fdivrl movsb sbb mov add jns dec sub out sub repz ja aam daa leave call (bad) fiaddl in sbb mov outsb add xor jnp push cli adcb pop sbb pop push xor sbbl in leave pop pop addr16 in dec icebp int xor push mov mov mov stc fscale decb stc fldt dec adc lahf mov loop mov or fstpl fsubrs outsl scas ldmxcsr jbe add push dec xor out outsb data16 repz pop jl add adc push fs sub add dec mulb pop test rep ds jo into jmp jle,pt rcll enter insb in cmpl jbe imul pop xchg repnz cmp (bad) movd or int mov inc jle fs mov popa repnz sbb mov ficompl aad or in stos arpl add int sbb jg call mov inc lret fldt test push lods or pop mov stos (bad) inc xchg test test pushf cmp adc xlat scas mov (bad) adc sbb fstps jl int (bad) mov add in insl fstl in push sub scas iret outsl pop lock xor in mov gs or pop (bad) stos jno mov push or adc outsb in jnp repnz inc arpl mov jae sub lods call scas mov test in orl in cmp add in pusha int adc mov (bad) xchg cmpsl xchg aas pop mov dec in cmp jno jo (bad) aaa js dec add xor push movsb lods mov jg lds push test insb jae dec dec inc or or mov xchg dec loopne es pushl mov jo mov dec sub push inc push mov lret scas push pop dec cmpsl divl push scas mov fs mov pop (bad) mov cmpsb ds mov lds pop mov jae sti imul repz sub mov div inc fstpl push jl insl or cmp aaa loop repnz pop (bad) pop scas inc mov or ret lds mov std push fidiv push scas sahf outsb cmc and insl xchg test clc or or mov dec add mov inc pop out inc xchg push jno mov jl aaa jge addb imul add mov fs xor adc insl push jne pushf mov push mov (bad) ljmp pop rolb jle out daa jmp and mov ret nop inc arpl imulb (bad) out push add mov jp popf test inc dec xlat mov mov cs outsb mov or add data16 inc xor pop adcl adc adc xorb out movb jmp mov inc lds xchg les xor mov cmp inc mov mov adc mov cmpsl sub enter xchg jo sbb out mov jno cli push in sbb (bad) fiaddl lret mov nop sar add movsb fwait stc leave sub and (bad) sbb pop inc mov test cli orl ds dec mov jle mov test gs or fmull icebp cmp inc in mov push pop loop ds jne and mov test xchg sti jns outsl ss pop xor or mov or lods int3 adc imul sbb sahf sahf xor cmp cli gs mov addr16 dec push jle cltd push add xchg xchg cmp dec stc xorl in (bad) jg lds movsl ja sarb mov xor mov sbb mov xchg in pop test xchg push movsb jecxz jns lret dec xchg movsl xchg lea xchg (bad) push mov ret xchg jns repnz test loop jbe das ret clc dec sbb mov add mov cmp in push pop jmp rorb sub xchg (bad) pop inc push scas adc mov push and lods add shrb outsb fs inc mov cmp test in cld mov sub jne jbe xchg xchg mov and sbb les popf fdivrl imul icebp faddl mov mov cmp mov pop mov data16 mov mov sbb popf xchg mov enter push je mov in or mov push insb (bad) in nop lods fistpl jge fs sbb aaa cmp mov in es cmp je dec ja aad pop push add cli fadds push push inc xor cmp mov and lea scas or xchg jecxz dec mov jle sub mov leave sub out jns mov xor mov mov scas in sub scas and test pop out call loope inc and mov lret (bad) jb pushf movsl hlt test cmc cli loopne aaa cmpsl pop mov jge adc xchg add push lods call mov loopne and stos cmp jp jge inc ret lea mov mov mov push in sub test cpuid movsb adc inc pop in mov repnz in inc push cmpsb xchg pop xchg jno jbe and test mov insl xchg dec jl aaa arpl (bad) dec ss cmp lods test inc cwtl movsb aad std and xchg or ds dec or sbb jl insb aad mov jne (bad) cmp ds popf jo mov mov add stc int3 out jl loope mov push dec and rolb mov loop leave xorl adc scas movsb add mov (bad) inc xchg jp pop mov in mov jge in fdivr movsl inc inc jp sbb rorb jge arpl mov cmp enter inc jnp les or dec push pop push aaa pop xchg fabs int3 mov loopne xchg jne pop gs into push das lret inc lret sbb add rorb sub pop xor stos dec mov push mov inc inc daa flds into adc add jg roll sbb loopne xor xchg mov rolb (bad) add in cli push push or notb or or push add test jb push mov add jno lret cmpsl push test mov add mov arpl mov gs mov jno lods mov pop inc xchg push sub (bad) and inc mov ds mov mov mov hlt pop fsubl inc iret (bad) sub loope xorb arpl call insl aad es mov adc repnz push js fwait in movsb or decl jne out mov (bad) push add push xlat movsl cltd mov iret cmp cld push xchg push jle fildll scas pop les mov mov pop sub mov scas aaa movsl in inc pop add aaa and ret mov and decl inc inc jge jae (bad) mov (bad) cmp pop shll sub shlb inc cmp adc mov je mov lcall in push adc (bad) ljmp int xor shlb scas jmp and mov and xchg pop cs call push cmp loope mov sub sbb pop je pop aam (bad) xor jbe movsl bound ret out fisubl add xchg mov xor pop mov lahf xchg jne stc enter mov xor lds mov fstpt lods scas mov data16 adc movswl inc int test add sti outsb data16 sahf adc es lcall inc leave ss or adc (bad) cmp out loop,pn jp (bad) mov popa scas ficomp add lea iret les fwait rol mov in das xor xchg push cmp sub and inc test mov pop outsl shll jbe mov subb ss ror mov cs (bad) cmp imul sbb loopne mov xchg int test mov dec mov dec xchg fstpl mov sbb mov pop jo xor add (bad) xchg (bad) repz sbbl xchg mov push or xchg jecxz aas mov shr movsb cmp mov cld call mov sub aam lahf cld mov negb add int lret mov pop in pop pusha ss push into clc dec mov cmp xchg nop push mov in pop dec imulb insl popf mov add mov jae cltd mov pushf dec cmp repz out mov int3 mov inc mov mov sti fdivrs cmpsl aad jo popa es or dec mov adc sti mov lcall lods sbb add adc mov (bad) lcall push test (bad) out dec cmpsl int3 push out sub addl out pop mov or cmpsl outsl mov mov mov in sbb leave adcl iret fisttp std mov test adc je ss mov mov leave rolb inc test popa bound jo insl add and mov (bad) loop hlt out aad mov sbb test cwtl out and pop lea inc xchg add cmc mov cmp dec xor mov mov bound mov dec repnz xor or iret nop mov sub movsb cltd jp addr16 lcall cmp sub hlt xor lea out mov dec iret xchg pop pop mov pop mov mov ds loope mov xchg cltd jae push enter lea mov scas jp mov mov push xchg test ss pop adc fmuls sahf push in jo xchg imul lret mov jae test dec mov dec in pop fldcw sub add test push and dec jecxz ja jns add fidiv pop lea mov pop mov cmpsl mov xor or dec pop orl adc mov scas xor jp kxorb pop jmp mov xor pop (bad) mov xchg idiv jb mov mov cmp icebp mov (bad) xchg xchg adc mov mov push jl aaa jge test mov in inc ret in xchg iretw jne adc stos cld sahf aas lea out or xor and cmpsl in and test call leave sbb les lahf cmp movsb dec xor inc in sub and mov or pop add xchg xor fs in gs mov pop push sahf mov iret sti rcl push (bad) mov xor add scas mov bound mov (bad) jno fidiv (bad) mov and in xlat mov and pop xor xchg jp lea leave dec pop rorb push or add jecxz rcr push or xchg cmc add jno pop jnp xchg mov sti psubsw jmp daa sub push test pushf sbb (bad) adc int3 or repnz jns inc lods sub or lea fistp into test lods lock cmp push lods inc cli ds mov xor in or leave sbb adc or imul in add dec xor cmpsb dec add mov mov sub and (bad) jbe in mov xor loope (bad) xor or in push in dec (bad) jl pop sub xchg push jge push add sbb add mov xor (bad) (bad) xor shrl ret sbb fadds aaa mov flds pushf rcrl cmp in rorl push push sub jp data16 pop pop inc lock xchg scas das lea add push jge mov push hlt sbb mov push push sbb daa pusha ret test xchg adc ret xchg jnp mov cltd mov int3 in mov lds cli mov adc add mov sub fnstenv lds aam mov icebp cmp push dec adc lcall pop inc mov cmp in cmp cltd test in xor arpl push cmpsb mov mov scas cmpsl insb sbb in jge arpl (bad) jnp push orl xchg lea popf (bad) nop cli leave mov dec jle xchg into mov test test or xchg (bad) mov lret xor sub fwait adc mov adc mov mov mov outsb sub mov stc xor ret xchg inc push or push mov lcall nop fcoms mov mov imul (bad) into imul icebp rol xchg in adc xchg mov fiadd push shrb mov iret push loop mov movsb cmc sub jno decb in es push cwtl test jbe mov imul jl decb or jnp mov jo in pop push pop inc xchg les (bad) je into xchg dec (bad) int mov leave dec lods idivl or stos cmpsb jbe mov pop and cmc mov jg cld aad inc (bad) mov push dec dec arpl inc mov ljmp cmp add sub adc mov mov xchg cwtl fcomi cmp mov popa aas mov and scas xor mov lea mov je push mov xchg pop and mov xor and ror fsubs fs mov push adc mov adc and sub (bad) movsb inc xchg mov sbb add fs (bad) pop mov int xchg jae mov int3 stos ja sub scas xor dec mov sub mov jge sub fisubr add mov pusha mov outsb jbe sbb cmpl push lds adc inc mov or pop ret mov in stc jb sub xchg mov dec xchg pop dec add jl sysret mov fimull int aam sub testb out (bad) sbb ret pop sbb mov adcl into int std mull popf out scas or jo cmp arpl mov out pop inc jne test int3 xor jb cmc loopne xor inc xchg fdivrp xchg (bad) fnstsw cwtl jge lahf rorl daa movsl rolb ret mov pop mov fmul inc pop fisttpl in pop int3 push leave cmp add imul stc xchg mov inc (bad) or inc add mov daa mov fcoms xrelease ds inc ljmp add ret or stc outsb es mov and scas das cmp mov jae dec add stos sbb mov or lods pop (bad) sbb jno scas xchg aaa gs mov js add stc xlat sbb cli pop mov push and xor ds sbb scas adc mov cmpsl or dec out cmpsb les ljmp movsb pushf jp imul mov rorl push pop divb jl test mov popa ss sbb push lret pop mov aad pop fstl inc in daa rcll pushw adc movsb es dec mov sahf loope mov divl scas xlat cmp lret fcompl ret push loope mov loope call mov mov aaa inc loope xchg jne jle into (bad) mov mov fstpt and testl jns mov dec cmp test shl iret rorl add add mov pop fstl and and dec loop orb xor mov lods jb sbb insl in fistpl ror add (bad) je in cli push testl or push mov leave in gs dec sbbb or stos xchg sahf sbb inc ds cld das repnz add in mov jmp mov test cmp xchg dec aaa cmp push data16 xchg push loopne jns add (bad) mov outsl push sub movsl sahf ss jb inc xchg mov xchg add add (bad) mov mov pop test loopne sti push pop andl mov xor ja lret out add add or or js mov xchg mov or add or mov lret xchg in sub aam dec loop push cmp adc xchg dec lea jge xor call cmp mov push lret xchg adc in xchg mov aaa aad xchg sub inc pop ret js xchg xchg std add cmp add outsb add dec loopne push insb lock and mov in insb fcomp sub mov sbb test rclb inc pop daa add jp fcoml mov iret cmp jl jl fisttpl (bad) sti mov cmpsl lods (bad) outsb in cmp mov add push sub lods fwait or into pop or ja test lea enter xchg mov sub inc sbb addl dec mov adc popf jb test test loope les shr popa push dec sbb push out cmpsb mov mov mov shlb orl push and nopw mov jmp sbb pop adc xchg jne jle cmp push ja jo sbb js popf push mov xor dec jecxz outsl sti rcrb adc clc push (bad) add mov xchg out dec or add outsb divl scas (bad) (bad) sub sub dec ss aam xor xchg js pop stc or xchg sub test ljmp adc pop iret xchg push test pop adcl mov add ds lret popf cmc mov jo sahf pop mov mov jbe clc sub mov icebp xor mov aad xor mov call mov les xchg aas js xchg divl adc mov lds mov enter ds cmp js adc jecxz iret inc mov stos es push pop lods push insb mov adc sbb mov daa push push in js pop mov inc pop ljmp xor shrl mov inc mov pop popa dec leave int cmp loope cmp cmp js mov or mov add and xchg mov xor sahf test lds loopne test mov jbe js stc push inc mov add adc mov fnsave adc cmp inc mov add mov lods out addl mov sbbb out jmp or and mov cltd negb adc xchg call decl push inc arpl mov test xor out and mov fist lock pop adc jo mov stc repnz jae mov (bad) jmp in out outsl in sub jmp xchg dec call sub push aaa cld jge add rcl sarl adc mov pop stc sahf mov xor ss jae jl test push outsb in push adc loope adc sbb mov sbb mov xchg and mov mov sahf in addr16 pop ds loope sbb loopne (bad) cmp xchg mov push lea fistpll mov and call mov dec addb out sarb pop add pop jmp insb lahf aad movsl enter fldcw (bad) sbb jp,pt popf sub fdivr or push mov (bad) xor mov cmc mov sahf aas mov adc mov push daa lahf mov push mov mov jno jmp mov mov and jmp call mov fwait sbb push sub mov dec shl fnstcw cs std ljmp enter sarb cmp pop adc mov popa dec test jmp scas inc xorb fimull mov adc push mov xchg imul cs mov fist std add add ljmp es jns mov fsub lea in and lcall fwait xchg adc jge mov out mov pop push insb push cmp popa pop (bad) xchg addr16 cmp std les je cmpsl sub and (bad) (bad) lret pop mov insb hlt cmp outsl sbb test cmp mov les stos push jle xchg mov (bad) jno jnp scas mov out aad xchg inc in xor or sbb cmp or push jne ds loopne ds mov cmp jne jle push pop pop sbb inc fildl loop push test aaa test insl sahf scas repz test lds add insb adc mov mov push push cmp mov pmulhuw mov les dec jl jns add loop lahf ret lea jp sbb add xchg push test xor mov dec insb in js test lcall xor sbb dec adc (bad) or std push dec arpl add bound sub out ss push sti sub xchg sbb mov mov push add sub les xchg inc push test jle jbe xor sbb and cmp in lahf adc ja loope data16 jno mov lock mov push cmc and jl (bad) mov ss inc cmpsb test xor push rcll mov movsb or jb in push mov xchg inc mov jmp scas lcall push push mov xchg add mov cmc out mov or mov jnp mov and xor in popa popf (bad) leave cmc idivb fistpl mov ret fsubrs ficom push mov jp push inc mov das xchg mov lea mov dec dec cmc push movsl and mov scas sbb jp lea xlat adc xor in (bad) mov out or jge incb cli mov xor std jno xchg pop fldenv sbb mov jecxz jb mov sub imul adcl insl pop mov mov mov xchg hlt or xchg lea inc iret stc cmp adc adc sub in (bad) stc lahf cmp lcall pop pop inc inc pop aaa scas xlat mov cmp daa (bad) push fadd in push mov inc dec push in cmpsl dec fwait cmp mov lea mov popa leave ja mov mov sbb jae cld inc aad push xchg notb imul mov les lahf ds movsb iret xor add fistp sub mov in jbe sbb inc std add mov lahf jge addl test (bad) and in or (bad) jnp push mov inc (bad) xor ret xchg push cmp mov xchg cmp das aam add sti in jnp aaa pop fsubrl inc std and mov fildll adc in jmp pushf pop add mov xchg pusha jmp imul mov js pop pop push repnz lcall loopne fcompl jl or hlt insb pop xlat stc outsb xor cmc inc add pop lea xchg ja xor mov push mov and or stos pusha xor enter jg adc push mov add test xchg lahf pop stc call pusha mov jle pop scas insl (bad) sahf and sbb jg inc inc (bad) fdiv stos add or inc and inc jp lahf jmp or xlat sub in or and cltd inc mov aas push imull and push sub fucom push push cmpl push leave ss fs mov pop std gs nop mov in sti mov test sub lock fsubrl mov sub js jo mov xchg mull mov xor jecxz imul mov mov sbb gs mov jg and mov loopne mov je xlat ret scas iret adc out dec adc lcall mov and and adc std (bad) push jne jnp shrl jbe lock mov lret mov dec jge ss xchg in adc mov fistl mov test mov lods xor mov (bad) ret pop adc in test jecxz inc jno out adc rol push scas lock addr16 ret (bad) aam mov cmp sarl mov sub jbe rorb xchg movsl fisttpl popa loopne (bad) leave add js push lds dec fistpll inc add dec in pop (bad) shrl push cs (bad) scas aad cmp xor cmp out (bad) fidivr sub cmpsb repz fimul mov fdivrs jg gs add lret mov inc xchg jmp aam cwtl ds sahf test fisttpl xor adc cld inc dec add push mov out imul aad mov hlt in adc or and xchg pop test push push andl pop jle or dec xchg pop sub imul ss test mov pslld inc lcall shrb jne stos mov pop inc sbb into mov add mov fsubl jg or xor lea push cmp dec add fldcw inc out mov icebp xor xor inc push sbb jp icebp pop icebp sbb les out add add int js and shrl pop fs cmp stc xchg int xchg outsb adc mov xchg mov cmp bound cmp mov mov in xor ds (bad) test scas in xchg add xchg outsl push add sub faddl adc test in nop and sub into mov test in jno jge in sbb push pop out test push cmp repz mov lock lock fmuls shl inc and cwtl out mov push add in pop pop jne dec stos ja (bad) dec push fmulp stc cli jle sbb xchg (bad) jo test xor (bad) fidivl sub jns,pt jno movsb aaa test enter test (bad) jne test fisubrl push or or orl mov adc aas movsb xchg enter inc mov mov sahf push mov js aaa insl out jmp ljmp outsl cmp push dec mov dec xor or call dec push mov mov leave jbe scas inc in stos cmp sub push daa rorb push cmp adcl repnz cmp or jnp ds push js stos dec xchg bound sub add mov mov mov in lcall mov adc push adc mov or ror data16 dec data16 sbb lea mov iret jno inc mov xchg add xchg pop pop jmp hlt push movsb push adc in iret stos mov fisttpll std mov jmp lea push add (bad) or pop mov dec mov jae test (bad) ss jge lea pop mov das mov fsubs mov imul decb cmpsb push lahf lret dec (bad) sbb mov ds stos insb xchg xor lret (bad) add jle xchg outsb cli mull cmp cli out xchg shr push mov adc psubusb push dec std push add rcll mov mov cmp lods xchg cltd push insb testb cmp add sub jno dec mov cmp mov add and or jo cmp rol bound pop in lea cmpsl test cmp add sbb fild outsb mov add push int pop in add and lahf stc movl in or push lock lret pushl outsb hlt fsubl jge pop fidiv pushf push in mov repnz in in xor push ds adc mov test hlt push mov jmp insb mov inc aad mov shrl adc cmovge into cld sbb and lea and popl sub xchg inc (bad) xlat fisttpll cmp push or movsb push ret inc jbe (bad) movsl jae mov dec xor cmpsb inc jle fs sbb inc lahf jae bound ja outsb adc xor repnz (bad) fsub push shrb out repz inc imul add jmp adc (bad) jb cli movsl lahf mov jns cs ds jno test mov add pusha std dec lds hlt cmp dec lret xor mov test mov (bad) jne push mov mov cwtl mov adc xchg mov cmp and shll xchg or rclb or mov or fisubr xor mov pop dec fsubp sbb pop mov pop int xchg pop int in pop jge adc mov sub add mov mov loopne movsb jmp xorl pop or in xchg lret (bad) push lock outsb leave popw mov push in push mov gs enter loop gs repz lret (bad) pop xchg and xor int insl mov dec in pop push mov push sub inc es je sub adc mov inc aad push pop push data16 test (bad) insl cmp or fidiv inc out das stos push cmp mov repz dec push mov mov jnp sub scas mov ret lock and jl and in inc inc mov xchg xor (bad) cli and push sub mov insb xchg ret xor mov ljmp push mov stc cmpsl sbb test scas sahf mov add mov sbb mov mov or dec mov and mov insl inc (bad) repz dec arpl (bad) dec or jge mov imul add and xchg movhps scas or orl je int3 bound repnz or dec cmp lret dec jle xor mov dec xorb outsb nop in jo addr16 or inc jge scas in adc popa in push ret or ja ds pop jb mov outsb fdivrl inc mov add cmpl and cltd test sub sub in clc cmp inc jnp mov lahf sbb mov sub push cmp loop daa inc and add adc push mov jns mov jno rcrl mov ja or mov leave test or leave (bad) cmpsb xchg add scas or mov sahf loop movsl test mov mov cld pop out out and cmc jb xor xchg aaa loopne push sahf rclb lcall es in ljmp cmp test hlt nop xorl lock (bad) out lcall cltd sbb push mov pop push stos mov gs es add cmp mov inc jl xchg adc insb cmp in (bad) fcomps ds mov mov dec mov adc xchg idivl xchg aam mov add int3 das std lods pop (bad) push rorl fnstcw leave scas (bad) shl sub adc xchg lea xchg movsb scas and fcomp add loope mov ja scas in mov push movsb pushl pop mov outsb mov xchg sub mov jecxz sbb rcrl pop js mov gs aam pop mov int shrl pop lea scas fsubs jmp dec ror or inc adc out (bad) xor mull jno scas mov mov mov sbb aam dec cltd mov fdivl outsl adc mov xchg divb push sbb fwait mov or mov push sbb mov inc inc fwait ret pop daa push or fisubr mov lods jne in push rcll push fdivl popf sbb xchg xor rorb cmp outsl fwait aas in xchg dec es xchg inc adc mov xor sti jmp xchg stc std and int fsubrl pop mov mov daa dec adc mov stos in mov jmp cld adc sbb fimull sbb add or sbb fldl scas lret mov loop (bad) repz inc out adc movsb xor int jae mov je pop fmuls ds push rorb mov push mov mov mov mov cltd ret inc aad mov cmp test ljmp fistl imul push push mov outsb jbe push mov popa (bad) int sbb hlt inc stos scas inc mov mov pushfw xchg push gs (bad) rorl inc dec cs pop outsl fidivr popa mov pop popf sbb push mov xchg pushf repz cmpsb in sbb pusha (bad) mov insb mov sbb push mov push outsl imul fdivrs outsb ss rorb and cmc push das pop cli or push add xor lret ss std jle loopne xchg xor add test pop (bad) call aad fs ja setge xor inc pop mov pop cmc cmp xchg xchg xchg mov mov ss in push enter or mov hlt loopne push jg test xor in icebp push daa xchg xchg outsb lahf mov add and lea out out ss jmp mov test lret push sbb sub inc inc fdivrl imul sub pop (bad) cmpsb xlat mov ret (bad) mov popf mov rorl enter nop or test test mov inc mov (bad) mov mov nop scas mov and ret jp jecxz js cmp mov (bad) adc test mov jecxz lods out cwtl shrl mov (bad) sub test adc mov and push dec out bound (bad) mov pop xchg inc mov outsb enter fdivp xchg idivl mov sub pop cmc dec cmp mov dec jb cmp adc push dec xchg in int3 lock push lds pop mov nop mov cmp jb dec mov fdiv out bound in lea std pop subl push inc cmp dec xchg mov xlat daa dec (bad) jbe (bad) sti inc mov pushf cmpsb repnz xor mov pop aad mov repz push sub test (bad) xchg mov mov les cmp mov adc xor pop xor sub jmp mov loopne add (bad) in lea bound fstl sahf fist mov mov adc inc pusha jge (bad) push mov leave jl and inc cmp ret mov mov add lahf mov sti das adc insl mov mov outsb mov iret add pop mov outsl addr16 in mov mov mov je mov xor cs mov fmul xchg pop xchg hlt mov pushf push (bad) jg push or out lahf push mov mov imul inc cld mov imull aaa dec and cli adcb mov (bad) inc imul (bad) ljmp cmc enter sub mov pusha jmp cld subl int3 popa mov dec or test cs mov pushf (bad) push aas enter add mov add dec sbb jb aam mov xor mov mov cmp cmp stc cwtl int or bound hlt je mov adc inc pusha mov mov inc outsb je mov jl icebp and cmp mov xchg jle cwtl and mov insl xchg int add sbb cmpsl push mov pop lret and mov negl lock int3 mov and (bad) cs mov bound pop mov cwtl sub paddsw push or jnp mov add xor xor aas mov dec mov jl or movsl das lahf cmp in insl lea pop or int3 mov pop mov inc in lock sub cltd push adc es insl mov std scas into jp push decb lret outsb jbe or or es dec pusha xchg pop add in mov mov (bad) in int3 cltd xlat loopne or cs dec push and jge adc insl adc ja scas pslld sahf lcall cmp daa (bad) add lret pushf sub mov dec clc ds add loop loop sarl outsl inc lds aaa jne mov cmp mov stos pushw out movsb and mov cli mov fcoml aam aaa cld int3 jl mov sbb inc das pop lods loopne ss shll jp out jb push je cmp and rorl call jae push cs cmpsl cmpsl adc xchg adc adc rcrb test push cmp data16 test add mov ret or leave mov les sbb rcrb mov dec sbb mov scas cmp in sub lret es mov add xor xchg jp or dec loope or iret scas mov adcb nop lret add in cmp xor add out pusha dec or sub jmp push jne fisttpl scas sub fwait mov loopne popf fimull or and mov dec imul js cs cli adc mov aad icebp out es adc mov (bad) jmp push mov clc shl and int insl mov xchg mov stc mov das push jae sbb or data16 test daa adc out roll repz mov push inc inc cltd cli dec push mov sbb or and xchg xor mov out cwtl cltd adc mov lock jp cmpsl (bad) mov mov cld and js cli orl aad dec roll mov xlat aaa cmp mov and xor or daa std adc imulb mov push stos ret lea jmp pop sub mov push xchg xchg add mov repz lods mov (bad) hlt sub loope scas push xor rolb mov or jo push rcr xchg shrb cmp subb loope mov jbe dec xchg rorl pusha push loope das nop mov cmpsl adc (bad) dec mov cld test fnstenv sub cmp inc rorl loop sub lcall cmp push mov imul ss push or imul addr16 push xor push inc and mov jmp inc pop enter outsl dec sub test pmovmskb mov data16 jns cmp ja pop cld mov das add sub xchg clc repz or mov xor sub dec ror pop lret xor mov sub jno dec out adc mov fstl sbb aaa test or and cld aaa dec rorl mov lock sti inc insl cmp fnop in icebp into or inc movb shrl scas add push jne xor arpl stos mov movsb cmp and outsl stos or out (bad) shrb outsl sbb inc movsb mov stc mov insl mov adc cmp or inc outsb xchg dec xchg rorb jg mov cli into sub scas or mov sub (bad) mov push dec adc shrl xchg mov in inc jo inc cmp mov clc aas adc pop mov add inc jmp pop fs cld xor scas shr mov insl lock and sub mov (bad) (bad) xlat lea adc jne fistl jge mov popa std xchg jle sub hlt dec push aaa cld push (bad) iret decb fxam sub pop inc test mov mov test lds (bad) data16 push jmp dec xor aam adc pop cs mov lcall push pop jg enter inc loope xchg cmp in mov insb fildll test xor cmc mov mov vpunpckhdq into mov jp xchg inc push jecxz inc push xchg mov daa repnz hlt sbb or add loope popf nop rolb push imul data16 or dec mov xchg adc inc jmp cmp mov (bad) add mov fsubr or out jmp mov inc cmp test and cwtl jle mov (bad) std add rolb mov add sub shrb ja push iret subl xchg out pop push and fcmove and lret dec rcr gs mov push pop jo rcl js nop dec (bad) mov in aaa cltd or push je int add ljmp in addr16 push dec jle lods cltd scas sub data16 sbb test cmpsb xchg (bad) in jle faddp jns cmpl sub jp mov jne stos scas and jo sbb xor outsl test add xchg ljmp adc push sub jle dec mov and push mov mov into mov lds dec push mov imul or inc ficoml mov sbb pop into jmp xor pop sahf xchg cli xchg sbb scas stos push xchg jecxz and xor mov mov jmp inc jle mov movsb and cmpsb scas inc push sub outsb push add data16 in jns in xchg dec mov push adc xorl fisubl dec lock bswap std xchg jge int out cmpb repz (bad) mov pop jo sub icebp es (bad) adcl iret mov adc and scas mov pop inc cmp or jl in movsb aam mov fdivrp adc ss inc leave mov xor loopne pop mov fidiv ljmp dec jge leave lods push mov (bad) call std jnp mov add xchg mov adc mov scas push fs popf xor cmp mov xorb mov movsl push fiadd fimull out mov mov daa adc adc out (bad) andl dec mov and pop std mov ja dec mov add call mov sub lea leave (bad) ja mov xchg push mov mov nop mov ffreep lods dec push int3 add aad in inc stc mov pop movsl out push lea aaa (bad) std sub xchg outsb ja and mov nop xor dec ret pop cmpsb mov mov addr16 mov cli fidivl mov test mov dec and pusha fsubrl pop or push sarl cli and xchg mov adc xchg pop mov mov stos cwtl xor and push mov push jbe ds xchg enter (bad) mov pop fnstcw mov xchg add in inc mov add xor ds fisttpl mov pop mov mov lcall and add shr mov ja bound add test jno mov push mov dec jg rol sbb aam inc xchg cld push sti inc mov push xor lods push aaa mov xchg dec movsl jae inc jne ja pop mov das bound push shll add iret je add xor iret mov cmc outsl sub leavew roll test xor pop xchg ret pop jne repz (bad) adc cmp call popa pop bound cmc jg mov ret adc insl aad seto mov xchg push push pop aaa lret or in jno (bad) lahf and test jno add xchg mov xor xchg xor inc fs mov push leave (bad) xchg hlt push fmuls sbb inc in lret testl mov cmc hlt xchg in outsb cmc cmp and scas push (bad) jl loope out or mov or rcr dec in dec dec dec cmp push push sub cs mov dec sti xchg (bad) xchg and scas out inc push add ss jle test push dec pushf jge xchg xchg ret cmpsb push or arpl pop outsb cwtl in add dec fisttpll shrb and push jp push mov adc add mov ret pop xor sbb test mov lock dec and pop dec repz popf (bad) (bad) iret insl pop pop adc lahf popf inc mov imul mov jns xor cmp inc or sbb subl (bad) clc mov sbb xlat mov in mov adcl mov xchg (bad) lahf cmp fmuls test mov push jl lret push mov or mov subb pop pop (bad) pop mov hlt add mov adc jge mov xor jg adc (bad) mov dec sbb in out sbb paddw add mov mov fs enter orl ds ss jb mov push daa fimull rcrb (bad) xor jge add lods in mov mov lcall (bad) mov leave xchg sti jo outsl or pop push adc call push sahf test mov scas mov adc clc mov mov jge nop inc dec pop addl test ds ds inc in and dec dec mov xchg pop jp dec mov pusha xlat adc bswap xchg mov in insb int rorb shlb adc add ret adc andl xchg jmp es push xchg dec in dec repnz cmp push adc outsb jp cs int push sbb add sarl andl in repz mov std dec mov xchg cmpsl (bad) cmpsb idivb jbe sbb sub jmp out fldenv test mov imulb dec jge mov daa jmp dec dec dec xchg sarb or pop push in sbb dec into pop push test sarb int adc (bad) iret sti pop in loope test mov (bad) mov ret mov mov data16 (bad) jbe lret jo push add sub sub dec scas cltd es in dec (bad) movsl dec (bad) ljmp lret fstps out sbb mov shrl outsb and jp or add push pop aam cs xor push test test add ljmp fistpll scas aaa in dec aad push xchg mov ja sahf add ret mov fisttp hlt (bad) pop das in cltd sub pop outsb lcall mov orb insb xchg push ja xor outsb or addr16 or mov rorl xchg test int3 mov pop jbe or ret add mov in (bad) or inc or or push bound das add lea xchg cmpsl (bad) in add jno cmc cmpsl sbb in cmp push ds mov and dec or cmp (bad) (bad) dec jns je add and mov mov int inc mov jecxz in xchg cltd xor clc enter push and or mov mov pop inc in push adc (bad) xchg iret divl fisttpl sub jnp jb test or js test adc push dec xor aaa jbe push xlat cmp push xlat xchg add add push xchg push mov jecxz sbb sahf cmp add adc fisttp ret xor orl bound pop insl or (bad) outsb scas mov adc push mov jl mov mov lret jo pop (bad) dec stos (bad) xorb mov pop out pushf test mov mov cmp cmp enter xor mov (bad) test xchg add lods movsl mov je inc (bad) int mov push mov pusha stos imul mov add jns mov push sbb push sti sbb adc jmp rolb in mov sub rcr dec data16 inc inc jmp jne jo cmpsl sbb xchg in fisub out xor xchg sub cmpsl sbb repnz popf dec xor fninit adc lahf push jecxz sbb mov jg outsb fnop sub jmp dec dec out xor add ret (bad) pop stc lcall pop jmp push jecxz xor leave pop push adc lods mov add mov shl dec mov pusha fisubr push add inc add or or dec pop xor pop add stos outsb ds or mov sub sbb lahf lods or or push mov sbb outsb or outsb adc aaa adc and cld jecxz daa push das mov lret int std scas (bad) imull lahf pop stos xchg or push sub sbb cmp movsb jne xchg loop test pop cmc in idivl js add idivb mov ja push scas out in cmpsb in arpl mov mov cmp add dec jcxz je (bad) fistl dec lcall das push aad or and gs mov sbb cmp fcmovnu pushl cmp sub test les sahf in cmpsl data16 xchg mov mov aad add mov xchg cmp dec icebp test xchg jb jp in cmp je (bad) shrb mov mov (bad) fistpl lock xor int jns dec mov cmpsl mov push mov out outsb jne add mov push cld imulb xchg pushf cmpb dec scas mov xlat cli faddl jbe or mov in push cmp (bad) jo ret in sbb pusha push sub mov xor cs testl in pop lock inc and fimull jno push jle je pop xchg sbb cmp jbe push (bad) xor fincstp insb in jbe mov sarb push and sub ss lcall fabs dec dec push test daa pop das and sbb int3 jb call imul or mov leave dec ss lahf fldl mov cmpsb add and adc sub jnp test outsb push mov mov test ljmp jns outsb mov data16 mov lcall or dec or sbb adcb ss push dec ret and xor aaa push jecxz test lcall jg into mov mov (bad) jle (bad) adc pop push mov dec pop cmp xchg and test jns sub mov inc cmpsl sahf sbb stos jb push orl lcall ljmp shll insb dec mov sub or daa mov push sbb inc or in and push mov cli jno int3 lret fwait and jg loop ss aad inc and mov push mov mov daa mov adc jns or les push jecxz inc int3 mov jb xor ds in pop js mov inc xchg lock jbe in adc mov cmp loop popa xor rcl insb popl mov (bad) dec xchg pop in dec rcll cmp lock pop fsubrs mov xchg ljmp or lods cmpsl xor jbe sarb adc mov inc ds inc push jp mov sti jle xchg jmp outsb jnp mov (bad) mov rcll daa or and or in xor or adc loopne jnp lds mov flds dec nop test in jbe xchg push sahf lcall out dec pop cmp mov mov test stos inc dec jg xchg push cli push in ss sbb notb stos jnp sbb lret sar enter add mov xchg and das cmp push loop or lds test dec adc lcall fistp inc aam xor add es mov xchg (bad) sahf xor push pop xor mov mov scas dec sbb xor pop xor loop pop in add xchg sub sti pop pop xor in (bad) stc pop cmp fstpl inc scas (bad) or cmp pop xchg ja cld or call xor mov in hlt js mov xchg data16 insb aaa in bndldx cli xchg mov lret or jns mov out jne mov adc jo in push gs jle dec lea mov cmpsl pop push je adc or in mov dec je pop lock fwait das jle imul adc xchg mov push inc jb test pop out pop (bad) mov pop sahf lds repnz mov pop int3 outsb xchg ss fadd xor mov lds sub and enter add xchg or shrl orl mov in jl add cmp lahf adc icebp xchg aas sub sbb inc pop push push sarb outsb (bad) mov lds mov stc rorl sub into and jl mov or std xor les xor (bad) repz pusha jo jp mov fisttp dec mov mov pop lods xor or xchg scas or jmp cli adc inc cmp push scas cld mov or incl out insb mov dec mov mov adc xor mov jp rol pop mov jmp test xchg xchg ret push dec inc mov mov adc insl fucom dec mov pop pusha pop xchg inc pop in mov or or inc fild or push xchg int3 cs in or push rorb ret xchg push (bad) in or rorl mov fbld push mov xor xchg xchg add adc cmp adc xchg movsb pop test mov add call sub mov push mov insl out mov out adcl mov test movsl push inc add std addl (bad) in or dec ret data16 inc dec add iret (bad) inc mov cltd xlat outsb jl nop je (bad) mov mov cmp sarb scas sbb fnstsw ret mov xchg in in or nop aaa je jmp xorl xchg xor divb ljmp mov les addr16 shlb leave xchg or push and or sbb lahf push dec int leave sub rorb in arpl in call and xchg mov aam popf mov paddd xor dec push mov aam mov push in (bad) mov sbb add in mov pop out jle cmp (bad) inc in pop je lahf push xchg ret xor and mov enter sahf pop scas lods in adc mov movsl or add imul stos mov lahf push jb lods mov push je push sti sbb cmp xor cmp xlat mov call push notl lcall jbe into add or push (bad) fildl mov sbb xchg imul insb outsb push (bad) cmpsb aad fbstp (bad) test sub into imul or (bad) push sbb mov loope mov sti ds mov jae jl test addr16 sbbl (bad) ja outsb fildl js sub std mov inc cmp cmc in sbb (bad) outsl mov out aam ss in mov int rcll cmpsl cmp push (bad) in and sub jmp xchg jg and out pop lods add and stos loope sub inc aad (bad) repz sbb insl popl adc sub (bad) clc lea scas mov movl rcll pop sub jle in das or adc push les and xchg mov mul sub mov sub in decb mov shrb jns mov jns mov stos in sbb rcll fimul jbe push jl lret or outsb sbb aam dec xor jl pop adc cmp addr16 inc outsb push js imul loop into test fsubs aad sub icebp xchg xchg jg insl ljmp push enter xchg into (bad) dec mov sahf mov xor cmp adc mov (bad) (bad) mov cmp jmp jle nop fisttpl xlat clc sbb (bad) mov jl outsl out dec aas outsl das in mov lea adc cli push mov fldcw (bad) mov sub inc jle out (bad) aam test mov xchg lret out jl lds cmpsb and in mov xchg jl sub stos jg push jg mov push mov and or push xchg movsl aad fisub jp cmp (bad) pop mov test (bad) push in cs sbb lret adc adc push push mov out mov fcompl stos mov dec lahf loopne sbb push mov jle,pt in iret das enter in insl jg mov stos in inc (bad) mov movsb cld mov je jecxz (bad) das mov rorl scas in pop (bad) cmp add ret test in sub call mov inc dec jge mov jl scas jge jo cs adc add xor add sub cltd inc or jp adc mov xor das inc cltd mov pop mov push shrb nop push icebp xor mov mov or dec insl fsubp push cwtl loop mov data16 in xchg mov lods xchg mov mov std sub jp adc ficompl and sub stos dec je mov jae mov jbe jno add and cli js mov dec dec cmp scas mov shll lock mov xor xchg mov jecxz mov mov push out cvtps2pd shrl xchg or fadds lcall jns mov roll inc stc mov pop xlat xchg push push fisttpl cmp sub mov sub call (bad) inc cmp data16 lods mov dec mov mov xor mov xchg or rcl js push inc inc in insl aad retw dec push mov movsl test imul jp inc push mov je mov in movsb aad sahf xor mov sti mov ja sub movsl ret repz mov mov xchg adc fcomps bound pushf mov std push les sahf xor jge fptan or mov xor or jp ds inc (bad) dec cli jmp sbb cmp mov add push xchg lahf inc mov ret ret test loope scas sbb mov add lea in adc pushf scas mov mov mov in dec cmpsb and out sbb rorb stos mov mov and cmp cmp test jno mov jmp out test (bad) cmp das gs nop (bad) dec lahf scas rcr lds adc mov mov pushf gs jmp idivb sti gs pop xchg lods sub and cmp jae mov xor cmpl lock addps f2xm1 in jae cmp rorl fcompl or push xor sbb scas gs push std inc mov arpl testb mov ss cmpl lret int je xchg aad mov adc and sub mov or dec fcomi push stc mov sub xbegin into cmp ds and mov ja lods push inc dec idiv and xchg mov cmp outsl dec mov sbb fdivrl pop (bad) (bad) fstl sbb in or xlat div xchg inc mov sub inc mov testb xchg mov (bad) cmp lods in mov inc rorb mov cmp xchg out mov mov fnstcw jns inc add inc popf adc cmpsb xor je sti adc lahf fs push adc or aam ja cmp movsb adc mov and imul out xor push xchg in jle jns (bad) mov popa insb aad and adc mov xchg lahf xchg imull push rclb dec xchg mov jo (bad) mov loopne xorl int ss lea in mov es roll cld mov hlt mov rorb mov cmp mov fldenv pushf sbbb or (bad) cmpsb in cmc mov pop or sub mov xor inc mov cmpsb clc in orl push mov imul (bad) aaa mov jns dec in and inc and iret pop jge ficomp add push cmpsb fisttpl mov ja jb mov push in stos mov mov dec out (bad) (bad) jbe pop pop xchg mov or repnz mov call add outsl xchg sti ja (bad) jbe push rolb jb out inc lock push into outsb repnz push or mov int3 push imul pop lahf int or push fsubrl mov cmp sbb mov cmpsb scas add sarb and rorb ljmp out mov xchg aaa lcall popf add inc sbb test cwtl and mov addl sbb addl xor ficomp xchg ds sarb mov sub inc dec xchg imul inc loope insb push les fisttpll pushl jp mov movsb jb mov popf inc in inc movsb imul shrb sub xchg data16 cmpsl lcall inc (bad) cmp lcall pusha frstor aad adc cwtl and mov es mov loope mov adc lcall cmpsb lahf dec out mov jp push or (bad) test in cld (bad) push addl fldl popa dec jge popf add jle scas cs mov sahf jmp mov sbb add in enter jb inc pushf jns mov xor sub or push dec add insb mov pushl xchg fildl lods pop int cmpsb stos inc or xor rdmsr adc mov or lahf lret inc xchg add cmp xchg push jp jl stos jne sub (bad) xlat inc sahf rcrw or push das scas mov xor mov dec dec dec mov in inc out mov fs cmp mov aaa movsl lahf into fs ficoml mov rorb cmp rolb in in fisubr sti xor pushf xchg xor data16 gs jae and xchg stos cmp stos xor addr16 sahf pop loope outsb pop jge jp or andl jae pop push pop enter mov xchg cmp jmp inc daa cmp mov cld sub push lock in lock mov out insb sub ret mulb mov shl mov pop and iret rclb jae aad in pop push push (bad) hlt adc sub cmpsl mov inc inc xchg push inc xchg rclb inc adc clc push (bad) mov std jge fcomps (bad) call mov dec pop add test inc jmp inc es or jp cmp push into (bad) and add shrb jmp mov push push push sub push leave xchg stos or pop lock mov mov mov test sbb inc dec push (bad) fdivrs sbb pop push mov fmulp stc fisub jp imul jg in push nop outsb pushf xor ror dec mov test and je push xor stc call shrb jmp les hlt cmpsb push dec mov mov or sbb lahf xor mov mov xchg jg scas fmull test fstps xor mov loopne int movsb jnp push ds xor add mov and mov fsubrp push jns iret (bad) icebp les and stc sbb imul adcl mov mov (bad) in pop daa jmp stos and popa imul mov iret outsb lods (bad) fist cmp add sbb dec mov pop inc pushl pop loopne mov xchg int3 dec and mov jo fisub stos and adc out sub mov cmp lds push sub pop mov mov int shrb inc (bad) arpl mov (bad) sub sahf call (bad) rclb imul pop fimul cmp sbb mov pop stos jbe shlb pop mov fcoml ja int xchg jae stos and data16 add (bad) lea xor mov in pusha inc into cmp repnz in inc lea mov aas add xchg inc mov xor out dec ja hlt js mov sub jg test adc insl loop and xor mov pop add iret push lahf jge xchg pop pop int3 out jno lea push jbe mov pop rcrb out daa jbe sbb ds cld jnp mov jns cmp lahf cmp and icebp jmp push push lahf mov mov cmp or add mov jecxz int ljmp cli inc icebp xor loop jge cmc mov mov scas outsl out (bad) mov inc cmpsb add insl ljmp mov (bad) mov mov clc lret xchg mov aad dec je xchg xchg mov xchg icebp shll push das aad add lret daa fstl adc sahf pop arpl fdivr dec xchg jecxz cmp xor or mov imul sbb lods movsb int3 jo xchg cmpsb xor cltd ret (bad) mov xchg mov xor push cld dec add adc adc add ljmp jg and js lods and mov imulb push sbb cvttps2pi fs data16 hlt push in mov push lret dec lea out add insl push into jl sbb push lahf (bad) inc adc sub cmp cld icebp inc adc lahf mov jp in sarb ja fist mov add stos push outsb (bad) xlat stc dec jbe pop leave js test iret xchg pop fisttpl pushf test scas (bad) pop cli jl sti jle xchg into mov push mov out xchg add lret lret das inc push popf inc jno sub mov sahf fsub imul jno or mov sbb mov mov lods out fisttpl gs xor jne xchg (bad) cmove dec sub stc sbb in jb cmp es cmp dec mov mov or inc mov lods imul pop jnp mov mov bound jb xor rcr outsb or les xchg cmpsb adc dec nop stos fild or mov push mov sti sbb inc add xchg scas cld int3 mov stc mov xchg sbb mov mov lret or cmp (bad) lret or daa push mov dec mov mov and sbb lret jbe mov dec cmp outsb cmp add xor iret int3 add inc push aad (bad) mov push xor push outsl lret jle clc sbb inc call cmp or fwait stos ljmp xchg rolb fiadd mov fsubl and mov cmpsb sub mov outsb dec jno cmp test and inc ja ja call cmp inc push xor fildll mov add push add into cmp shr popl push daa xlat or and lahf dec cmpsb push test pop clc bound mov pop (bad) clc into sbb jb cs mov (bad) imul adc fwait repnz (bad) mov sbb jge inc scas xchg jp das sahf or mov sbb xchg lret mov leave lea in cli fnstsw mov xor lret push stos out mov mov pop (bad) incb push add mov addr16 inc xchg (bad) inc sub int sub adc movb xchg and mov mov dec push inc sub (bad) xor xchg cmp xchg shrl or mov shr push add js outsl pop and in dec cs loopne inc pop mov sub fwait jle cmpsb mov nop js in iret jbe (bad) stc mov mov fxtract lret jo dec pop outsl test (bad) arpl jns leave das xchg push (bad) jg scas dec in xchg sbb or lret pop hlt ret mov add imul or into in je adc inc (bad) in dec mov mov dec inc jo inc ds pop jne push andl sbb mov sub test leave gs fsubr adc xchg rorb xchg adc hlt andl sbb notl or cmpsb je clc lahf lret in sbb das pop or sahf out jmp sti xchg mov xorl jbe mov fsubs push fisubl insl aaa and mov adc adc (bad) jbe mov mov in repnz cmp in cwtl cltd lea sbb lock lock fs data16 xchg lahf jo,pn add push pushf mov loopne shll xlat in push nop cmp iret jg in inc lock loopne bound jle sbb andl das mov fisttp nop das jecxz mov clc push dec mov xor jae cltd sahf in push das or or dec pushf lahf in icebp xchg push in sbb push dec (bad) sti add nop lcall xor pusha inc mov push in sbb push fsubrl mov adc inc (bad) or ds push xchg inc and aaa xor sahf sbb ret add in fisubl xchg mov gs xor jecxz and movsb stos and adc setns test sahf in pop jo aam push and je and out in in push int3 ss dec adc lds pop xchg call mov rcr dec sbb (bad) in cmc test sbb ss in dec xchg mov mov push mov mov sbb xor std push loop icebp inc aaa mov test dec inc (bad) fisttpll sub push cmp inc sub je lods and popa pop pushw push jp cmpsl xchg pop cld int cmpsl sti sub xchg cli sahf adc (bad) bound cmpsl mov mov or pop jbe adc enter movl data16 insl leave mov push std xchg into js fcomip sub push inc fs iret xchg outsb pop xor gs ret psubusb adc sub test cmp popf test hlt test sbb jae and jp mov inc lcall lahf push push fxch stos ret int ja stc push data16 cmp (bad) (bad) divb pusha or rolb jle iret sbb pop cmpsl fnstsw loopne mov (bad) mov pop dec mov ljmp lods cld das aam outsb sbb mov fimul adc inc xchg in cmp and xchg push lods pop lea sub shl je mov iret add mov push rcrb lds push shrl (bad) in sub jle xor xchg enter scas and leave sbb sti inc adc das or dec out imul rcll push push scas inc push lcall enter (bad) mov cmp push mov xchg call jbe mov aaa push movsb out sub rcll pop mov lret orb push xor adc loop pushf mov (bad) das sbb mov add cmp xor mov jl (bad) mov and mov fstl push xor xor mov push or jns xchg mov add jecxz pop faddp lods dec and nop sbb (bad) lods lock fnop push lock mov fsts in mov mov inc add fistpl mov add sub push sub cwtl cmp daa jg xor sti aam les mov cld jne xor lea push push clc and or std cmp pop lds sub rclb sarl jb (bad) mov fs xchg pop add loopne xchg dec push dec cmp xchg stos sbb call cld iret test adc iret les in test mov xor push adc scas mov add jg int3 dec add scas cmpsl mov jecxz fst inc sbb or loopne push jge aad scas inc add loopne add jne or aas sbb mov dec sub inc jno and or (bad) pop imul or data16 sbb jae add xor mov mov mov mov aam fistpll push push in aas (bad) ficompl jo dec mov cltd fnstcw iret (bad) xchg fisttpll pop lcall pop jb or in xchg inc (bad) es mov repz jne popf xchg add mull ret push mov test outsl int3 or inc call lahf mov mov addr16 add ja mov ret es jmp xlat lret (bad) mov lcall mov movsb or faddp add int3 xchg push xchg stc les outsl out mov or xchg jle hlt in data16 es push push mov sub sbb jmp push rcl in (bad) in cmp clc or push cmp stos loopne out mov sarb mov rolb jo mov arpl sbb push inc out xor cmp cmpsl xchg mov and or push shl lock pop int3 movsb push rorb lods jmp (bad) in enter mov std outsl fisubl add dec out mov add je sti add jge pop cld (bad) ja ret mov jae push add pop je mov adc in add stos dec pop std sbb push leave adc inc and jle fiadd sbb cli adc or outsl in sbb mov pop loopne adc in notl les sarl fwait js xor les js mov leave jbe sub cmp push cli mov in mov incb ret mov mov jno mov push add cmp ja and xchg cmpsl xchg insl or test test jno or sbb add ret icebp jl ss xor fidiv int3 pop xchg and in outsb data16 sbb mov fmuls pop push outsl jg in inc adc dec mov jbe jno cmpsb mov jp int3 (bad) outsl and pop cltd inc xchg je (bad) and cmpl gs dec rorb mov jno push pop jecxz ror push pushw out or imul lret xchg sub fwait ret jl lods fwait dec sub rorl hlt pop jae sbb leave inc test sub mov test ret icebp and mov sahf sub add lahf mov or inc pop push or add sbb mov mov fwait lea xchg mov dec scas fisttpll xchg lock call dec or repnz and pop dec outsl movsb lods mov testl jb mov outsb popa push cltd mov cvttps2pi in mov sbb aaa push movb push int mov dec inc xchg ud2 xchg mov addl mov xchg scas outsl lea cmp std adc pop adc lods jmp mov jae push test scas test in insl mov out pop nop cmc mov sub pop hlt js lcall fnsetpm(287 push orl pop lea lods test in and bnd cwtl pop ret aaa push outsb enter pushf in mov andl loop gs rcpps and pop aam lea imul xchg jl mov cmp cmp pop icebp stos mov xchg in pop dec mov (bad) push inc xchg fimull icebp cmp jns lea es inc mov xlat add lea xor iret push fstpl mov sub inc dec (bad) push ljmp cmpl xchg xchg jp xor jo jno xchg nop enter mov in xchg or out in (bad) mov pop sahf dec dec and xchg cmpsl jle shr fist pop mov repz sub lret mov addr16 mov pop lahf mov cmp fidivr cld mov cmpsl xchg jbe add or jmp arpl pop mov leave jp jge add test in push rorb and iret loop fcmovne into sub cmp inc pop sahf jle xchg add cmp stc (bad) lret aas test (bad) jo arpl mov insb push xchg xorb mov insb mov mov mov ds lods bound mov mov mov sarl fildll shlb flds pop leave outsl test int3 push mov jae leave outsl pushf ljmp scas cmp pusha or fildll negl pop testb in rcrl push (bad) jo cltd or jno into cmp add loopne aaa addr16 cmp sbb push and jmp outsl xor inc nop and in in mov lds outsl imul mov hlt push jne mov lods pop mov fmuls sub dec stos js pop mov dec mov and jae jbe mov (bad) int3 stc mov popa xchg in sbb dec xchg mov and mov orb out push xchg mov push cmp push shrb xchg jg dec rorb pop pusha test jp add or jge sti push je adc mov mov adc mov lret mov pop std (bad) mov call cmp int (bad) jbe xor stos sub scas cs jne lret (bad) xchg push repz mov ja cli addr16 arpl pop out sub add xchg sub cmp pop dec dec add (bad) push cmp pop xchg outsl cmpsl xlat cld jle mov mov mov lods lahf push imul into add testl sbb add mov xor push add adc and add int add jae cmp testb xchg sub jg into mov inc shl lea scas push pop mov lods (bad) lea mov lret or pop fnstsw mov rorb jb mov outsb sahf movsl push cld or mov int dec cltd adc pop push mov pop inc sub lret push cmp out add ds mov jmp or mov (bad) scas push loopne sbb js xor test jnp adc data16 dec xchg scas sub mov mov mov cli mov (bad) pop mov scas cmp pop repnz dec outsb mov (bad) sbb lock inc fldt ret and inc pushf movsl adc pop bound js shl pop mov clc jae mov mov dec or and lcall xor das (bad) lret inc cmp pushf inc jg xchg outsb adc outsb push mov mov dec mov inc mov pusha lret mov in sub data16 sub das adc push mov in bnd mov in cmp and and aad or xchg sbb add testl mov call (bad) mov mov mov outsl andw test imul dec jp lahf jno dec mov or mov dec mov and loop gs mov mov xchg pop jl out xlat cmp adc daa add ret xor fiadd mov das rcr in mov addr16 mov xor and (bad) jae les jecxz mov repz pop pop mov scas push in cmpsb gs dec insb clc roll mov outsl cld or jp jmp jne dec sbb insl pop out or cmp jl inc jle jb lcall jle push lahf cmp inc movsb punpckhbw xchg pop ret mov int mov xlat mov jne (bad) jecxz adc push add mov es in xor adc jmp movsb fisubr push (bad) sti pop xchg in ljmp cmpsb (bad) sub xchg pusha xlat sahf dec inc scas xor cli xchg mov into jnp add scas icebp outsb stc pop xchg aaa pop rorb mov sbb lds aas xchg lock xchg xor push mov test mov xchg lret add test pop popf mov push and pop jge xor outsb addr16 pop or mov adcl scas outsl inc rolb jno,pn cmpl call inc mov mov mov xchg fildl roll pop test mov mov dec ljmp cmp and dec test pop repz or cld fnstenv inc sub ja cld lahf mov dec (bad) jmp or push push scas sub add test jns adc xor dec xchg hlt into repnz scas in mov push cmp sub idivl movsl mov imul adc les test out push and pop dec push jmp je cmpsl inc pop mov ja arpl in outsb pop and sub ret add arpl adc test cmpsb fdivrs je out mov subb pop push xlat ret stos out jo mov push into dec leave mov and inc in cmp mov jno xor mov jmp testb ds lea ret xor clc or scas pop cwtl iret mov dec outsb and push mov dec leave xchg repz xchg repnz pop lret mov in pop pop cmp scas sahf xchg mov popa lcall sub mov dec push sub xchg mov ficom jmp ds cmc fnstenv repnz outsl sbb rorb jnp cmp mov mov xchg aad (bad) shlb gs popa sbb loop mov fsubs mov daa push lods loop mov das push push inc ficom jno jmp mov cmp sbb fnstsw (bad) adc mov sub jmp mov repnz cmp mov (bad) pop mov popf bound arpl xchg mov decl xchg fdivs aad dec push in lods mov cmpsb add mov pusha mov jge mov inc cli adcl in cmp out push pop xorb repnz roll bound xchg and loopne mov push pop xchg adc sbb in push in sub in fldt dec in int push fmul subl dec bound mov cmp int add ja mov and rcll mov popf fist jbe fiaddl int movsl pop nop orl fst sub push add lcall sub (bad) loopne jno or jle outsb cltd jns push and scas and dec inc ljmp mull (bad) hlt fldt hlt inc or xchg or cmp jmp dec fsub lcall rcr jmp or bound mov sahf bound (bad) mov scas mov test fistp outsl pop insb hlt and xlat mov lock in js jg lretw push push mov fnsave test or in sbb mov lcall adc xor pop iret adc insb ret mov xchg and jp (bad) imul scas xchg sarb jnp inc int insb xchg jo jmp lods jmp cmp les xchg std push add mov and xchg xor or mov or data16 inc jns jle lds inc stos inc push adc jae mov add mov sbb mov data16 add rolb ret (bad) jne nop rol push dec sahf aaa adc push sub shlb jmp daa sub dec fs sbb inc mov gs or repz or mov in mov mov dec aam dec out push repz push mov pop gs orl aad xchg dec pop pop mov iret dec int inc mov shl push out pop rcr mov cmp xchg mov and imul pop scas dec ja or cmc loope add or insl xchg xor xor xchg jae fstp mov (bad) mov or fidiv pop fcomps cmc fisubrl jnp sti xchg lods shll add mov mov or jg and mov out cmp inc dec mov pop push stos mov mov sbb jecxz (bad) ss mov xchg jbe inc into cmpsb adc aam push xchg fcompl pusha dec jne jle sub (bad) or sbb lea push repnz je outsb daa scas scas cmp mov cmc (bad) push cmpsl outsb repz and cmp pop cld add orl lea mov mov sub xorl das ds jmp or or jo add in fmul into imull xchg add pushf test jns xchg sub (bad) xor gs mov xor lods mov mov push pop inc in adc cmp adc pushf or fdiv fwait jg ret outsb clc xchg lahf push mov lret cltd pop faddl rcrl icebp sbb sub mov cmc fucomip outsl inc sub clc test ret ds pusha (bad) jbe mov fldenv mov scas (bad) rolb push and push mov push mov cmc enter cmpsb movsb imul test mov or subl pop lods xchg repnz xor in rcl mov sti outsb leave sub leave loope fincstp push or adcl adc bound ret lods or (bad) leave inc sbb jg jnp call scas add lret mov pop sub in outsb in push sub inc adc cli (bad) outsl bound mov lcall lahf mov mov pop imul fild aam xchg cmpsb xor pop je mov decb in xchg add (bad) pop jns pushf je lret xor push dec (bad) ret jae pop jp lcall in (bad) mov push pop movsb mov int pop mov jns jno or mov xor (bad) dec xor in push cld pop xor jb or rorb sbb in mov rcrb adc push jo stos aas dec test jge sti lea sti imul mov xchg ret mov xor mov mov (bad) push mov fldcw fild cmp add jge (bad) lahf (bad) ja cmpsb in shll std enter jmp movsl mov jno shll data16 cmp into mov xor inc jns outsb push aad push movsb stos into jne int3 mov mov adc fnsave jl mov or add inc pop or mov adc mov cmc push cmpsl inc lds scas mul mov divl fwait sbb aad xchg rorl mov pop mov sbb (bad) les sub inc ja add (bad) sbb stc cmp mov mov cmpsb sbb adc mov xchg loope lahf dec sub jecxz push in fmull iret ljmp out mov mov cld stos dec arpl das push fsts dec jecxz sub repz xchg les and arpl sti mov in xchg lds add xlat dec inc daa push push jecxz fwait mov xor jb sarb (bad) hlt inc (bad) and scas nop mov push jb,pt jbe fisttpl int3 xor jmp mov addb jnp outsb nop rcrb add mov getsec test in cmp aad jp fldl sti clc xor outsl fcoms xor mov pop pop fwait push mov xlat pop inc sarl jg jbe (bad) mov stc out cltd fldcw dec fist sti out adc in adc sahf icebp es movsl mov bound pop fdivs inc dec mov cmc add imul xor mov aas xchg inc in mov dec add mov pop mov xor data16 ljmp push pop test sbb xchg dec jle mov lods dec stos decb lds adc addr16 mov add dec pop cmpsl xor jp mov insl ss xchg xlat lds pop mov fucomi cmp mov sub mov aam push js lods mov jb,pt mov mov out sti push cmp jbe mov jo cltd mov dec xor cld aam jmp imul pop adc dec sub add call add mov movsb dec jmp sbb dec lret and xchg inc aas pop nop pop cltd pop loope std push int inc push mov push clc repz idiv cmp int3 dec ret mov jecxz push mov pop (bad) leave mov mov loope mov pop test sbb subb in inc pop in push mov pusha cwtl cmp pop mov mov fstps fmuls (bad) je push mov (bad) and shrb pop pop sbb mov jns loope push cmp inc aad mov aam xor push ficomp mov jmp push mov outsl popf lea xor mov jecxz add push mov xchg fmuls or iret lret int andl scas pop pop xchg fucom mov dec mov sbb add mov loopne in addr16 mov (bad) jo mov xchg (bad) movsb inc clc lea push imull mov dec push dec scas xchg mov inc arpl and sahf out int push mov jp shlb (bad) mov loop xchg mov pop adc scas or mov ljmp mov or pop push fxtract loope mov mov mov mov mov pop xchg pop jo mov jbe mov mov dec arpl mov das outsl mov aaa (bad) leave sub mov mov movhps in and dec imul inc pop sub xor lcall mov bound fwait push outsb test in stc push test (bad) jb mov xorl jb dec in orb in rorb sbb push xchg popa adc push and popf adc dec push sbb and pop adc lahf popa sub in jns popf mov in xor out mov aaa fnclex inc mov aas rcll cmp stos cmp xor xchg insb mov push iret ficompl xchg leave cmc or movups and jp (bad) std test int3 or lea xchg mov nop jg or es mov mov cmp in add into iret das int nop (bad) data16 mov add mov xchg (bad) je in inc ljmp ret addl test gs push pusha test movsb movsl scas cld jl dec and inc jbe cli pop fmuls inc gs lret mov pop xchg es xchg mov mov push and pop add iret pop out mov cwtl mov and push push xchg mov mov movsl mov jg insl mov mov jne out testb push mov (bad) adc cld push and xchg xchg in mov sub stos addr16 mov lock cmc in mov ljmp push leave mov addr16 push xor mov mov (bad) jo dec int or ds or mov fcompl push in jae fsubr xorb enter dec mov aaa pop int3 mov das add xchg int mov in ljmp push mov dec sbbw iret mov movsb out js lods or or test adc mov mov or sub sahf mov inc fdivrl mov add fdiv lea mov cmp sti (bad) xchg bound sub sub (bad) int pop sahf mov cs mull ljmp mov ds mov sbb mov xchg mov movsl leave sti orl arpl push aas outsl jl mov pop mov cmc pusha jp scas sbb aas in and movsl js repnz xchg lret stos add mov jb or mov adc les movsl inc cmpsb sub push cmpb fsubrp jg jecxz fmuls and in bound push in mov stos and cmp add jae aad jmp mov or cmpb cmp (bad) gs mov inc vphsubdq gs dec xor mov loopne push sti mov (bad) fldcw out xor xchg ret test sbb mov mov loop inc mov lahf mov aam mul dec (bad) mov xchg push mov mov ss fsubrs mov lock test push (bad) fnsave mov stos out adc insb xchg dec (bad) ror push repnz stos mov gs and cli mov outsb orl pinsrw and push pop int push pushf mov push inc fstps and mov dec cld push xchg popf cmp mov faddl test int3 das mov mov or xchg pusha jo (bad) and or push jns and mov mov dec lret xchg movsl dec test rorb mov sbb xchg xchg cmpsb fdivrl adc fildll bound push jb inc aad mov (bad) sbb mov mov in sub orl lea adc scas xchg pop cmp popf loop mov cmpsl adc pop je je dec data16 das (bad) jae leave repnz sahf pmulhw popa mov mov data16 outsb stc hlt lcall inc jmp lea add push repnz in push les or add jns ds push xchg adc lahf lret lods mov xlat lahf pop cmp ja mov sub sbb dec imulb cld xchg push std push pop fnsave add pop je jae sub cmpb push cmp lods movl xchg jg dec cltd mov adc ljmp and ds push loope (bad) cmp dec cmpsb (bad) call mov mov repnz mov cmp or xlat cld int3 adc pop gs dec cmp jl aam cld sub js outsb lea adc xor cmp and pop pusha hlt sbb (bad) mov popa sbbl outsb shl adc pcmpeqw mov testl push or dec mov outsb sbbl divps aam mov ja scas mov add outsl and cwtl jnp inc mov push in mov pushf mov out inc xchg lret xor mov popf mov jns (bad) dec cmp insb jmp cmpsb pushl addl in xlat dec mov scas dec jmp mov push out aad fwait dec lods pop push mov cwtl xchg ljmp inc lods adc (bad) sbb adc std clc push inc pop lods lea xorl loopne push jmp mov mov lret test mov and xchg mov test je (bad) mov pop mov or decb adc cli popa sub lea mov subb fistl (bad) je test jmp scas xchg hlt dec push dec stos iret lcall imul adc mov push flds inc mov pop outsb cmc into ljmp push ficompl in jl inc push mov fadds xor in das jge cmpsl jle lea xchg jecxz and bound mov insl lock inc inc jle ss push cmp sub sub fs sarl hlt inc push (bad) int3 ja cmpsb sti andl out pop gs rcrb std int pop sti jle xlat imul ljmp jbe nop push dec inc lock lret sub scas lds mov mov imul add cmp pop mov fstpl iret push mov stc add pop add cmp fdivs stos inc fstp int aam add push dec push mov stos adc pop jo js or ret mov jo ljmp or cmpsl mov icebp pop push jbe mov inc mov or sbb flds mov fdivp (bad) cmc roll mov or test ret mov add aad outsb xchg mov rorl add sahf pushf xor fs mov in cmp or xor adc sub imul mov and xchg mov fildl mov pop xchg pop fiadd arpl jmp js jo mov push fsubs test cmpsb dec mov lret rorb aad mov push push out push adc out cmc rolb (bad) in jecxz in add scas add adc (bad) push xor mov pop push (bad) ss inc outsl aad std ror in ja popa or pop cmp push jg in mov add loope jbe mov xor loope adc sarl aas fdiv negb dec push jbe enter or mov fisubl pusha loope adc (bad) mov insb pop mov daa mov jecxz mov pop jnp mov movsl inc mov mov mov jecxz sbb leave lock mov push cmp out mov nop xchg xchg mov push or dec lea fsubs test ret mov aaa pop adc mov insl jne (bad) es or adcb pop out nop je mov sub adc dec xor xchg outsl in iret lea hlt adc (bad) pop xlat sbb sti push (bad) mov xor push adcw addb mov xchg hlt mov and mov fidivr xor fldt add pop mov sar out sbb mov int leave (bad) mov out inc jle lahf gs mov and cmpb loop nop push mov adc test mov cmp xor shll int3 or notb mov add rcrb xchg jne das mov pushf jl push mov sbb mov mov fistpl add sub mov fisttpll add stos mov cmp (bad) loopne lret xchg int popa loope cmp jbe xchg fisttpll adc push jno fcmove or dec int push mov adc and lcall outsb xchg push mov movsb mov or inc (bad) dec and int shr xchg add (bad) mov lock cmp push and mov xor xchg jbe ljmp push cmpsb lods mov jmp pop xchg adc aam dec jmp int xchg cmp scas (bad) cmp dec les pop les xor dec lahf jo outsb push out mov addb mov add scas jns insl mov std mov ja ds and push inc faddl inc jl loopne mov push xor je inc hlt adc cmp fs add push jg iret sahf (bad) outsb in inc inc pusha mov icebp mov lahf inc push fistp mov cmp jecxz push xchg lds jnp lea mov mov xor dec jnp mov jmp cmpsb jle lcall ds (bad) add mov jno cltd xor pop xchg (bad) orw in sub adc movsl and jle fsub xchg push pop xor adc xchg and xchg insl hlt and mov mov push pop adc jecxz mov dec sahf jno dec jne mov sbb mov mov (bad) outsb lcall repz sbb mov scas dec inc test daa cs xchg imul xchg ret xchg adcb pop sbb ds mov adc mov pop stos rcrb aam mov dec testb gs in je and aas cmpsb int3 jg outsl (bad) lahf icebp dec in jmp mov (bad) iret call sti ljmp jae and (bad) mov push jbe and push movsl lock mov pop xchg imul adc idivb inc inc push jmp fisttp mov daa mov push add add das push mov cmp (bad) leave cld aam xchg rorl add mov push xor sub sbb inc cmp cmp jg dec pop mov insl insb shl mov test lods jg call sbb sahf std mov imul test hlt push sbb jae add mov sbb imul cmpsl js push mov pop mov sbb daa rorl adc cmp mov fstps push or data16 (bad) je push push xchg xchg aas fnsave in cmp jnp cmp aad outsl scas je or push dec leave add std call clc cmp arpl lret sub jg rcll adc and inc rol adc mov inc xchg cmp mov ret mov sub jg decb or mov add ss (bad) mov pop add jge lods cli and in pop movb std mov jae repz (bad) cs xor jnp jg dec jbe mov lret mov popf jno xchg push fcompl out cltd nop cmpsl xlat push mov pop dec mov out push add psubusb mov loope ret inc and outsl (bad) fidivr cmp mov or mov mov into jbe xor dec adc out cmp outsl dec outsl aam cmp push dec roll jmp or nop sub xchg jge fisubr and inc rcll or cmc (bad) cmp push pop ret or fsts push je push xlat or push insb add sub in dec xor inc dec or mov data16 (bad) arpl cmpsb mov xchg adc sbb pop mov mov or mov sub xchg lds mov add push cmc mov mov jg jnp rorl adc mov mov (bad) mov add enter js mov jmp stc cmp (bad) iret popf ds jle out inc leave xchg sub lret sbb jb and inc add xchg cltd add in xchg adc ss shrb lods cmpsl push aas push into pop call sarb rcl adc shrb mov mov inc int (bad) in push mov xchg mov (bad) jp and ds mov dec xchg push xchg dec in and push cmp scas pop ss and push stos decb divb jns cld dec push (bad) push add shll jne or lahf loopne sbb and rcrl jo lcall dec ltr sahf scas jns test aam mov ret and cmc in enter sarb imul mov dec or and nop add inc adc clc scas data16 fnstcw sbb add fisubl fdivp and test push stc repnz test pushf mov cs and sahf mov add push in jno push lcall jnp test inc jmp sahf sub jne ss dec xor jge xor loop dec into push out cld loopne adc es push neg stos and mov xchg pop push cmp add mov in or fldcw sahf cmp sbb fwait pop dec xchg adc les or xchg mov sub jb xchg sbb jno fwait popf mov (bad) (bad) cmc xchg mov mov and and push jecxz mov add mov mov and movsb mov mov pop mov ret lods loope stos adc mov aaa pop pop mov ficompl ror jb mov out jo hlt pop bound xor dec push or insb mov or cmp xchg loope mov dec scas mov lret fcmovu cmp mov in mov sti mov sbb dec or sub mov mov xor outsb mov push inc xchg dec mov cmp cmp jbe dec mov in lods jmp fxch dec aad mov mov mov sub cmp test xchg xchg mov (bad) xor idivb movsl jge lock adc (bad) test pushf lahf inc sbb rcl xor dec jne mov fmuls (bad) ds jmp (bad) repnz gs lds inc push sub (bad) cwtl pop je (bad) aam mov fcoml scas adc in push cs outsb sbb jg lds mov es fildl shrl mov xor lret jo rcll (bad) sbb shll movsb mov mov inc mov mov or dec mov and xchg mov inc rcrb adc sahf pop jae mov outsb push (bad) ljmp mov sbb (bad) roll mov sbb enter int mov push inc (bad) outsl add sbb jnp scas movsb scas or outsb aam adc jl frstor (bad) fcompl mov ljmp js out fiaddl inc dec jae in mov in mov dec mov out mov data16 mov add imul ss mov inc nop in cmc pop leave mov lahf movsl mov into stos jno rolb jge nop or pop jle cmp dec xchg pop test inc lahf sbb sarb mov ret fs mov sub and outsl ret or imul and lea subl lret sbb lahf jmp mov or mov cmp fs in mov inc add mov scas ret dec mov mov ljmp int3 dec inc xchg fnstsw mov inc inc les in ret jae sub roll std (bad) dec pop dec xchg fdivs inc adc and outsb out inc push popf fistl in rcrb out sub testb and fptan sub test inc jge test add inc mov adc jne cmp inc inc mov xchg dec mov xlat xchg and push nop scas into out and mov aad adc bound add mov sub cmc (bad) mov aas jo sbbl dec repz mov mov xor ss and lret data16 mov js mov les out push add jbe lea inc push jo xlat xor push mov sbb mov sbb dec jg add sbb sar jmp xchg aas jbe cs lret or (bad) dec add push add xabort aas mov jb inc repnz and dec lea faddp add out gs lret inc jnp adc bndldx sti dec inc imul sbb popfw add bound in push test mov sbb mov div and decl push xchg insl das sbb test iret lcall arpl dec pop sub mov cmc pop imul (bad) das sub nop lret nop mov mov dec push (bad) je (bad) mov push loopne xor test inc and xor in mov jne iret mov cli out mov idiv jl dec rorl mov xchg mov scas imul and and cmpsl xor gs cmpsl push pop pop divl in rcrb ja ss add xchg test adc cwtl fsubrl push cmp sbb add cmpsl loop scas mov (bad) xchg imul mov in jnp insl xor mov pop xor jmp add mov and mov test inc adc inc mov xchg cmpsl adc mov in loop loop jb push push ja or (bad) push clc sub in and insb test leave mov cmpl mov xorb mov mov aad loopne rcll cmp mov cld popa stos fstl in or add cwtl xchg test jg sahf push pop in and sub push bnd std mov subb mov or jno inc sbb mov movsb jle subl inc ja scas mov push adc xchg cmp push pop das mov in imul pop mov in jmp loopne adc stos sbb aaa xchg loope cs push je fistp jb in nop ja sub ret inc test jge pop (bad) mov dec fcompl sbb push inc and scas add cmp stc mov jl outsl insb sub les fmul push add data16 cmp sbb jl in dec add pop cli adc or sarb lods and or inc lret inc in test int3 jp std adc bound stos jge dec add push adc sahf jo mov cmp mov int add mov das (bad) call test mov dec sti outsl xor mov sarl push jne bound mov mov cli pop inc sub pusha and cwtl mov leave add jno push adc ljmp andl popa nop (bad) or jg mov mov aas sbbb test push mov xchg nop cmp adc xchg fucomi insl mov pop cli arpl adc ret rolb dec and pushf lds cmpsb jp loope out mov push adc popf pop pop xor pop and jge inc in xchg in mov jns in pop jnp inc pop pop lock sub jmp test xor insb dec mov jl sub loop test fisttpll loope test dec mov lahf push (bad) sub mov mov int adc daa push in test jbe in jle test arpl cmpsl mov jl fcomip mov xor int popa adc loop dec push mov dec inc xor cs xchg cld mov andl xchg lret rolb dec scas in mov fstpl test lds push push lods in rorl loop repnz xchg inc es das push mov lea imul mov test (bad) and mov sbb xor sti call aam mov sbb (bad) jnp mov mov add push cltd pop pop mov jecxz push les push push inc xor jmp mov mov adc adc inc pop stos xchg adc in cmp adc inc (bad) stc mov and aam xchg out dec fldcw shlb test std sbb test lahf sbb test mov add and or ds ror jb inc test adc sbb lretw (bad) std call dec out xor or or (bad) sub push outsl xchg or cld dec (bad) inc dec cmp test fstps sub cli gs inc cmpsb xchg (bad) push out (bad) roll mov push mov orl ret inc rcl shll cmp mov int3 ja rclb xor call pop push dec data16 fidivr sub push movsl adc pop scas fstl icebp and (bad) or and adc repz (bad) lahf les clc push cmpsb mov cmp stc mov sarb mov or fiadd cmpsb xor repz fnstcw fild jb data16 adc push es add outsb sti aaa scas pushf nop in cmp (bad) lret cmp cmp and (bad) (bad) imul mov push lods jnp inc std or inc mov cli aam and push cli (bad) and xlat int out push jno pop sub jge push mov add jne dec lahf jbe push std add test cmpsb mov inc push jae mov pusha jno stos daa sbb aam loopne je xchg mov fisubr add pop adc cs stc int dec cmp lret sub or cmp mov (bad) popa pop lea cmp xchg sbb push mov dec fsubrl mov push jmp ss mov mov mov sbb push xchg mov (bad) mov push push roll nop add dec jbe dec mov add push jle aam cmpsb jae cmp fstps adc (bad) pop inc mov fbstp jnp es jge shrl std fs sahf mov jb jge jl stos mov mov fildl call cmp sub (bad) int3 fisttp mov sbb (bad) incb jno loope pusha mov adc mov dec xchg cwtl sub out test repnz jmp mov data16 mov inc popa les sbb adc xchg aaa fstps jge xlat push lahf mov test jecxz pop push not mov in xchg lea inc mov adc jno call je jbe lods push lsl mov ljmp arpl sub ret lcall repnz jecxz sub pop adcb dec inc cs lock test and fidivl xor stc scas mov scas sbb imul ss stos loopne cmp sti push jge mov pusha fdivs int (bad) cmp (bad) ja mov add aad mov idiv push mov or int jg xchg mov mov pop or pop insl out mov dec adc test in outsl sahf fstl mov xchg push in mov jl lahf jg outsb decl mov (bad) add scas stc sbb xchg outsl adc cli cltd mov adc mov in mov out movsb (bad) xor mov xchg xchg into push scas push ret xor cmp loop push jp jns push jo ds pop test push xor xchg and and jo in jno adc rcll (bad) mov pusha inc dec lea dec inc jo,pt jns test and (bad) push mov out ljmp mov or pusha sub ret xchg and (bad) (bad) xchg dec jecxz add and std pop sbb nop loope push les daa (bad) cmp mov int mov test rorl mov dec xchg mov pop lock pop xor into adc in sbb add xchg sbb loope lret in (bad) cmc stos cltd dec pop inc or gs mov ljmp test inc sbb mov test jecxz stos adc in movsl sub in flds sar cmp add scas jbe js add pushf sahf pushf add mov iret fnsave mov hlt test cmpsb cmp pushf test pop lds in sub sti fbld xlat inc dec leave bsr fwait mov data16 xor adc inc (bad) mov jns popf inc (bad) cs jp enter or xor cmp shll fsubp mov push adc dec fldenv jnp or stc xchg and inc mov in xchg xor add test leave loope cmpsb into sbb push inc popa mov in push cmp adc shr jg int push push push mov cmp push mov jg js mov adc ja enter jle pop sbb add fisubl mov nop mov pop mov lods mov or xor rclb fnop aas mov pop and jp cld adc shrl mov mov pop or adc pop sahf pop aam adc inc add in xchg cmp mov rcl mov xchg cmpsb divl mov psllw out mov imul hlt inc and icebp adc add push movl pop jb outsl sub mov or jno imul mov mov lods mov inc xor aas in arpl shlb test push in (bad) jg inc mov jne mov enter push mov (bad) pop adc out mov leave jmp in (bad) xor lcall aam mov cmp jl out insb add xchg push dec jge mov jle hlt sub mov xor pop mov mov pop dec mov or add scas jne mov lds sbb adcl or dec and repz xchg sub leave ds mov cmp test pop out mov test or mov notl mov int xchg imul cmp mov sbb adc (bad) jnp adc adc add insb dec or push sub or jnp aaa rorl mov dec xor and sub in pop jg rcrl cmp frstor mov test movsb cmc out dec lret adc (bad) pop sbb fisttp in xor sti lcall scas in adc outsb xor call jae test (bad) mov pusha xor xchg xchg pop push inc pushf imul or aas xor loopne ret xchg in (bad) gs movsb bsf out push jp movsl fsts and lcall (bad) push sub push push loop mov adc inc test andb sub mov loope mov cmp test xor cmp xor jnp stc in add orl (bad) stc jmp int3 or jg je mov cld iret pop stos xchg in fisttp jno adc push lea enter xor fisubl je rorl and leave jbe sar sub xor test mov push jbe inc fimul xchg and orb lds inc orl shrl insb pop jbe lea push fiadd xchg lds clc test cli test push cmp cmpsb or xor sub lods mov test or push insb nop test sub mov rol pop xchg mov pop jo lea sub std mov mov outsb cmp dec test xchg (bad) mov push dec mov mov mov sbb pop rcll push dec lcall jl xor sub push jo sub scas pushf in fiaddl push stos out ljmp adc cld jmp xchg adc enter fldl sahf insl in xlat mov cmc iret into xor rcrb in pop fdivrl dec push fidivrl jo pop xor in cmpsb mov test popf mov insb xor add in loop leave mov jo lods mov repz dec subl mov jg movsl fnstsw ficomp push add mov sub scas repnz in dec adc jae sbb inc faddp pusha stc roll fwait insb fmull aaa jno dec push pop std mov pop adc daa js idivl add mov outsb out adc pop xchg das xor (bad) mov (bad) mov sub sahf push mov mov popa mov repz rorb test rcrl push (bad) sbb sbb dec add test push (bad) xor push mov mov (bad) dec inc xor inc rorl aaa mov in sbb aas dec xor out pop mov add jns aas jae in pop mov out xor cmpsl lea outsb test fwait push mov lds arpl xor mov in aam push mov cmp int je mov test ret ret cmp std lret xchg dec adc fmull lahf test xchg ret push sbb cmc jle cmp cmp dec pushl cltd sbb or mov ret add mov mov cmp mov cmc mov xchg mov lret jbe ficoml jo in mov ret mov add pop xchg fdivl aaa push dec mov (bad) cs mov aaa mov push cmp ja xor inc mov mov mov mov loope gs ja pushf add dec inc dec pusha push (bad) xor cmc mov xchg cmp dec pop stc jmp pop dec stos outsl call in xchg pop fucomip adc sbb mov xchg ds sbb (bad) dec sub xchg jae lods out sahf inc lret ss cwtl cmp mov push data16 in icebp movsl (bad) les cmpsb in xor pmullw adc loopne add (bad) jg add inc pop aad je xor or xor ja inc mov icebp inc adc aaa popaw (bad) incb ret iret fstpt sti cmpsb mov mov pop ret in and mov mov outsl push jno sub (bad) ss in lods les mov ret nop in das je test mov and jp,pn pop lods mov jno mov test dec in sbb push in icebp (bad) cmp sub ja add cltd mov adc cmp (bad) sbb mov cmc jns nop icebp insb sub jae stc in jbe inc inc and mov add negb mov lock (bad) aaa jp pop in dec je test adc in rorl or fsubrs push push jns and aaa mulb push jmp push cwtl loop push pop insb scas (bad) mul dec mov sbb out jg rorl cmp out aaa sub popf and aam cmp mov test cmp lods cltd sbb pop lds out clc mov xchg or enter adc out lods mov sarl ljmp insl loopne add and add adc mov push ret push fdivs jmp adc in das data16 jno fsubrl mov popa lcall pop das (bad) mov sbb orb xchg xlat add lret jl mov or and mov mov dec jge mov inc add xchg int3 xchg out out xchg xor (bad) mov and push mov movsb aam aad sahf lock jno orl xchg jns pusha sub pop test ja lret les sub (bad) (bad) shrb out xchg jbe inc mov jmp push dec mov jecxz adc xchg mov sub int adc stos push nop mov in sub aam in ja std nop outsb pop push in dec mov cmp xlat xor sbb mov int3 or test mov jmp fdivrl jge inc icebp ja mov loop arpl ja mov clc jno fcompl adc adc jge pusha xchg add inc mov loope orb add jae stos mov repz inc pop inc mov push jnp or mov leave scas push inc lret mov stc pop cmc mov push adc cmpsl lahf xor adc mov push (bad) ja (bad) add mov pop pop mov out cltd addb add push int adc loope mov xor inc ret cs push popa negb add inc inc and add pop jge and test jge loop stc sub jp fdivrs loopne lods mov sub jbe rol mov cmc (bad) fldt test (bad) in push bound push mov cmc or in fs mov out ret ja je jmp or push jmp test mov pusha cmp test pop inc jge dec jecxz inc stos pop lods mov fidivrl xor subb ljmp mov mov insb push test clc mov cld push test and dec lcall xchg and lret mov pop dec std mov push (bad) jo lret jmp add mov sub mov ss mov cs test scas fsubp insb fwait outsl add mov pop jb push sub cmc xor cmp and lods test lock roll (bad) or leave mov mov xor and outsb mov sbb xor inc je out sub loop or mov mov jo lea sbb mov dec mov mov pusha ds cmp movsb push mov imul push sbb aaa xlat mov fisub ljmp dec mov jb push cld dec push xchg mov inc lds sti std lret pop mov adc arpl or fwait (bad) jno int3 ret outsb adc gs push jne jns jg adc add addr16 shll lods mov rorb mov fisubr pop pop (bad) loopne sbb xchg add push xchg shll jp inc stos lcall and test xchg push js fisubr add ds mov mov or add test insl cmp and and cmpsl jge aam cmp jecxz pop jnp add in ljmp and mov add xor cmpsb test loope xor dec mov hlt in lea ret int push xor lahf in add sub mov pop ret xor pop rolb adc xchg aas in (bad) andb sbb sub movsl sahf clc lea pop in pop stos mov scas sub aam cs push pushl lahf push ljmp push int xchg jmp loope daa xchg test mov sbb mov jecxz in shlb cmp int in or cmpl cwtl shrb inc je mov shr add dec add jecxz xchg push cmp sub mov (bad) hlt cmp inc sti lcall adc cmp cld lds jmp mov insl rolb mov jmp in xor clc cs fs lock mov mov popa sbb into shlb jne inc pop xorb mov lea xor inc add and scas push (bad) pop xor test out sti or (bad) mov push lahf in jg sub cmpsb jp jnp push insl adc std xor or je in xchg sbb negl bound cmp xor inc add (bad) inc daa sbb stos mov xchg (bad) adc je imul sbb inc ss jae add and cld in lds add shll xor xchg mov push mov lret xor in in paddusb mov mov push pop cmc adc scas in mov sbb into ds test xchg dec push xchg xor sar xchg add loop mov fistp outsl cli fsubs mov insl cld mov mov push in push arpl loope inc fidivr mov mov sti push xor adc lret cwtl lds pop dec dec jns push test test in lahf lods cmpsb sbb (bad) out out in lcall lods jge mov sahf jl jge inc adc stos test in (bad) mov (bad) pop xchg cmp out int popa call mov add jno lea xlat cld mov inc in cmpsb addl stc xchg jno or aas push shlb (bad) ja inc pop stc stos (bad) lahf adc sarl (bad) sub mov xlat outsb lock sub adcb inc outsb push sbb mov mov ret mov xchg xlat sbb mov mov inc mov pop idivb lock nop loope xchg push dec adc push (bad) push sbb fucomp mov mov adc pop lods int jp jne sub arpl xchg fldcw mov fist outsb jle mov and add lods mov loope ljmp dec xor push stos or gs sbb xchg adc (bad) jns shr nop mov sbb dec sbb mov inc add (bad) jo rcrl cld adc xchg mov imulb push mov or mov add in cmc leave ret adc jbe lcall jbe push pop xor mov sbb call fistpl sub push das aam mov xchg aas bound sbb mov inc xchg jmp (bad) or lods sbb pop mov push or aas xchg in jnp push arpl jecxz mov push subb xor fsubp ds jge add ret ja lea mov mov stc mov jb cmp test jb cld pop lods jmp fsts and mov sahf and cmp in loope mov ja call cmp jg mov push aaa ss jge add cmp add push mov mov ss mov mov add mov adc lea out mov dec push inc dec mov mov push mov mov adc (bad) cmp sub sbb mov and aaa mov shrl mov stc jo sbb adc pop cmp les andb movsl xchg test mov in cmp mov push scas aas push imul test (bad) cmp dec in cmc sbb icebp (bad) jmp xor mov das xor mov mov or repz fcompl inc inc (bad) ret fdivl push dec (bad) in or dec jnp jbe test stos inc dec jge xor outsb mov imul mov add inc push hlt aas in ret or out adc enter xchg fsubrs sti fstp jnp js insl in inc add ret add adc mov jecxz test mull add or pop in out and xchg mov pop adc imul push cmp and push sub push test les lds imul (bad) cmp or xchg lods and mov sbb lea rol push mov mov jnp test push push dec mov or mov loop (bad) mov jae xchg xlat iret mov in call stos pop push and icebp in rclb hlt enter or xor test mov insb xchg loope xchg mov ljmp pop add in mov mov push insb mov int jno cmpsl push dec data16 pop into mov jno,pt fisttpl hlt add int adc xchg xchg mov lahf mov jp insb pop scas icebp sub ja or mov nop dec fimull lcall pop pop out push sbb push mov dec add imul ss xchg repz hlt xchg test fdecstp dec xchg mov inc push jecxz cmp dec pop in jmp lods mov movsl ret xor out (bad) or push in sub int outsb aas rorb js fsubp std and xchg je jae (bad) sub aaa dec scas adc sub in das cltd mov inc xchg lds bound push nop lahf enter mov pusha mov dec test testb mov push xor mov adc push adc (bad) mov (bad) (bad) fldt fld pop ja lds push mov mov or push mov sahf mov sti mov movsl aas mov mov pop (bad) sub or fwait adc and stos mov mov mov mov cmp inc adc hlt mov mov cmc push add es divl push les (bad) or mov cmp movsb mov in ljmp or mov aam mov jb mov loopne rorb mov jno cltd in and ret pop pop cmp mov iret xchg lock xlat std adc pop pushl fucomi push cmp inc aaa and jbe and ffree push xlat mov and cmp push and sub cmc xor int js mov lds out lcall ret lds inc ja lea sub sub inc or xor mov jns mov les cld lcall xchg jae inc into add mov popf les sbb mov jecxz xor mov leave arpl xlat int3 mov jecxz fs outsb lcall push jne mov notb test xchg adc hlt call jne push add jle xlat ret dec (bad) rcrb subb mov cmc push lea sbb lret imulb mov (bad) fs es dec adc hlt fnstsw ja lret stc dec hlt lret mov lods xor fimull (bad) jns outsb sub dec xor sub mov ror push xchg cmpsl dec or cmc mov jns insb xchg (bad) mov loope mov scas aam sahf stos pop cmpsl add or push lcall inc cmp inc and sbbl (bad) mov jp cmp inc push test adc cmp mov rorb (bad) mov testl movsb je sub ret out movsl push (bad) sahf jge in imul gs push mov divb mov test push stos adc stos gs loop rorb push int inc in bound jmp das xchg inc mov lods js rcrl lock mov and das cmpsl (bad) xor mov pop data16 push sub in inc (bad) mov aad int outsb pusha mov xor and lcall mov sbb lds mov jns mov out sub mov data16 sbb fistl mov add lret and repnz push dec add or out mov pop mov or les mov mov in lods (bad) and sahf in push and stos adc mov je mov (bad) shll mov (bad) pop rolb mov test xor (bad) fmul mov and inc fimull cmp dec mov jnp and sbb iret (bad) out xor js and iret jns and leave mul push aad add mov popa xchg pop mov cmpsb in fnstcw jo jbe cmp das dec sti enter ljmp and mov lret cmpsl sti mov xlat fsub mov mov jae jecxz adc sbb sbb mov ljmp cmp inc add sub jecxz pop sbb inc mov or jmp ds mov push inc dec jnp lahf gs mov (bad) cmp rolb mov std adc adc xor je cs shlb dec leave dec mov and out adc cmc push adc dec (bad) aaa pop cmp xor fmuls jbe mov cmpsl test jae push mov ret push shll in and adc sub rol in adc mov int3 add push sbb mov or mov xor imul lea pop lds adc les mov cmp std mov xor cmp sti xchg xchg mov outsb hlt aas mov mov fmul push imul movsl inc (bad) lret dec cli xor mov sbb mov fnsave adc mov (bad) enter pop mov sbb std fs lock add lods ss scas fcoms out jo mov sub and mov cmp ds mov add cmp push or and mov pop push inc in jg push test mov (bad) repnz lret mov mov jge test out add lods fidivl dec cmp subl std add pushf mov and aam adc adc stos ja int xor push mov mov in rcr stc sub xchg hlt sbb out xchg pop pop insb xchg ljmp inc mov mov and (bad) xchg fcompl lahf mov cltd mov subb xchg dec jge lcall xor leave ss dec ja push js es mov lahf mov movsl shrb xor dec dec push xor ret or add out scas mov inc adcl and mov xor std (bad) popa xchg call push pusha mov enter and mov mov aaa sub icebp out mov mov adc jl mov cmp xchg mov mov jmp je mov cld mov add jns (bad) incb in xlat insl xchg mov mov sub movswl jns in lods cmp cmc in mov (bad) mov xor cmc jge cmpb hlt dec out and jb mov lahf mov mov movsb push dec leave dec std lea xchg fisttp cmp loope xlat mov sub push mov sbb cmpsl lea push out inc int3 scas loope jb xchg notl decl bound dec push (bad) mov adc adc aad sbb xlat xchg add (bad) sti jb in inc pusha dec push mov mov (bad) jno mov in mov xchg (bad) stc mov jae ds jbe or fdivl ss pop scas (bad) sbb jge or les aaa cmp jg (bad) xlat add clc cmc xlat (bad) in sub lcall or rcrl das pusha nop mov add mov dec xor in nop jp push imul dec mov cmp lret add dec outsl in sbb xchg pop xchg dec rorl inc ss mov pop ret insb stos jmp adc sub in fiaddl mov pushf sbb push and fsubs ljmp arpl adc lock mov in push out pop xchg icebp mov mov sbb ret stc mov test pop mov fnstcw insl arpl pop shrl pop dec sub in fstpt leave inc pop data16 dec mov je aad repz and out fnop ja mov or ret mov mov jbe mov test test add lea dec xor add call loope adc cmp dec mov pushf inc adc jge cmp cli push jo sbb jle push inc ret mov loope mov add fldt xor add pop inc pop mov xlat pushf mov jle or fidivrl cmp loopne inc inc xor adc xchg fildl adc test inc fisttp or lahf cmp pop mov push mov sahf dec jle aaa ja xor test adc lock addl mov mov test arpl das pop dec inc mov gs in das cmpsl mov out mov and push xchg mov std scas cmp inc and (bad) test outsl push aad add lcall and push pop fistpl pop push adc cmp jle lea push dec jns (bad) adc test dec jp aaa iret mov mov push lea cmpsl push add sbb push enter imull push call data16 pushf roll push push les iret mov pop inc mov xor sbb sub jns mov push inc dec shll push xor mov mov mov push lods cmp or fnstsw jns fnop sub sbb inc out jbe cwtl xor lods xorb ss add in jo mov push mov pushf movsb xchg jns mov pop lret jo int in push adc mov fs nop loop jge test mov push mov scas mov arpl sbb xor aaa mov jp out cmp (bad) lahf lock shrb stos ja cmpsb and lahf mov js test sahf (bad) in and pop adc aas pop cmpsl xchg fcmovnb mov fsts ljmp cmp cltd pop xchg outsb sub popf mov fldt mov sub fsubrs and imul imul cld mov cs outsl sub outsb pop rol sahf or pusha mov mov cld sub int lds out pop jge stc mov aam dec adc mov mov mov aaa popf mov divl imul xchg adc stc mov dec out aas (bad) pop pop push daa outsb pop mov inc xlat sbb mov sarb add jg rcll in pusha ljmp mov pop mov rcrb sbb and lret stc cld ja cwtl jb cmp xchg dec mov leave add mov lea pop inc push out scas push mov rclb fdivp dec ficoml xchg pop fwait jmp adc jnp hlt mov mov sahf xchg inc (bad) outsl mov pop pop adc inc or push dec in sbb (bad) mov mov outsl lahf mov sbb mov in cwtl dec insb jecxz push or outsb aas fwait dec ds mov iret popf test bound ficomp movb inc mov idivl je mov sub pop in and mov adc cwtl fnstenv pushf aaa pop xchg mov lret mov daa pop jo aad or jge jb std dec addb mov shrl adc and inc and push pop dec mov outsl cltd xchg in fsubs lret dec hlt or mov popf xchg add arpl xchg fisubr xor add ret pop jle and mov lea or mov cld mov sti fldcw lods inc mov push pop sub mov fsubrp iret or jne push adc das jbe stc cmp cmpsl data16 in test sbb enter and push jne sub and mov pop mov jg into lods int3 dec mov lods mov in dec jp loop jne jns push and iret cwtl jno cmp mov imul (bad) and ss sub push or jns dec sahf mov add shlb stc into xor or pusha mov sahf sbb sti jns jae,pn into xchg mov nop jno (bad) aaa out sub repz icebp adc into mov jnp (bad) in dec xchg in (bad) test iret (bad) call fnstcw dec add int3 movsl insb sbb pop outsl lea push add in cmp dec xchg push test mov mov add mov popa add lret pxor out pop add (bad) mov inc mov dec shrl jbe or and fimull imul outsl mov aad data16 push repnz xor push xchg push dec test mov data16 (bad) jo mov push cwtl cmpl nop mov mov outsb repnz xchg (bad) aad ss xchg (bad) hlt push test scas jno cmp pop and outsb in (bad) outsl sub in sbb inc dec mov pop push push mov rolb sahf mov sub arpl or dec pop andl adc add out aam int3 outsl mov and fs out adc ficoml cmp inc or cld xchg lods mov add mov rorl dec mov pop lods fidiv lea mov loope js or push mov sbb xchg jbe popf mov cwtl lret dec pushf mov mov dec popl pop adc add adc dec jle test push or mov sub les sub sti ficompl std or push adcl sub cmp inc mov lods jae outsb mov inc arpl mov int3 xchg ret jge nop roll push push loop cmp hlt ds jl xlat outsb cmp inc cmpsl fildll push jp fs jo sarl or stos int3 test aad das push add dec inc aaa lds mov in shrl leave xchg jae xor mov add and add xorl xchg and push and sbb dec pop xchg mov fdivp mov mov pop adc mov pop add mov mov popa cltd fdiv adc pop mov test or jns mov imul mov popa jbe test movsl fcomps sub xor mov jno int dec push jmp or mov dec addr16 cli jp fisttp pop or xchg (bad) call data16 rcrl sbb sub (bad) loopne mov rolb or push sti jecxz fxch sbb das mov dec cmpsl test pop mov pop push push lods cmp aad clc jge add call mov inc fs mov inc push mov dec and add mov cmpl push xlat std push inc ja adc rcrl in add xor out loopne sbb aad mov and push jb xlat bound mov mov (bad) sbb fistp mov mov inc jecxz clc and mov add mov mov imul cmp dec dec xchg mov mov fimull mov push cwtl pcmpeqd mov cltd fcoml mov push sbb aad xchg icebp in cmp mov xchg movsb xchg jle push (bad) and pop sbb mov loopne dec mov icebp jecxz in push pop xorb adc (bad) int3 mov data16 xchg inc jp pop dec pop (bad) mov out or mov out jae,pt scas inc ja mov and sub scas jp into cmc cmpsb mov push rol outsl adc jno jp pushfw xor xor add in pop inc push mov pop mov out outsb call (bad) call (bad) fmul xchg out dec and push fsub sbb xor dec jmp test stc add sti out outsb mov stos inc lahf lea js movsb std (bad) or stos pop push adc mov repz das push mov cmp ds loop popf jp mov mov jns lret ret mov mov mov callw cs rorl push mulb xchg add adc mov xor (bad) push or rorl mov cmpsb js inc imul lret and in das cmp cmp xchg repz fdiv jecxz push push lahf add mov mov mov js lds and in mov in cmpsl jne lea not mov xor push xor mov pop neg and in or ret mov into sub inc (bad) (bad) pushf mov or in sbb adc int hlt add in mov mov sahf cltd ljmp mov xor scas pop adc sti in lods or out cmovae mov sbb sbb gs sbb fsubrl adc test test lock in sbb das pop loop popa (bad) hlt push add ds mov and and insl outsl sub mov mov jno test lods incl dec add les arpl fiaddl fildll push aas in add rclb push aad scas cmp dec dec jo dec and (bad) adc xor sub dec mov xor fstpt ljmp mov popf call mov xor cs xor les scas test loop add std and aaa adc int outsb stos mov push mov xor mov (bad) (bad) fisubrl leave xchg mov cwtl in pop test pop push mov lahf pop insl das (bad) ficom mov testl cmp arpl jle mov mov clc pop movsl lds divb or xchg jg (bad) int3 clc push (bad) lock (bad) (bad) pop fiaddl sub dec or mov push (bad) mov (bad) shl cmc in push scas push lock sbb push sahf mov push popf test mov icebp push stos lods fsubs push fidivrl (bad) xor rol sbb inc xchg fiaddl dec inc jns outsb (bad) int3 add mov xor pushf xchg push mov inc mov mov lods inc lea ljmp scas mov dec xor stc push pop (bad) cs pusha mov dec leave clc add loope cmp test in sub sub nop mov sub push faddl xor das jbe sbbl mov jnp jmp xlat jecxz add mov (bad) cmpsl sub dec pop mov jmp or dec inc out lcall sub std test push pop jns sarl subl lcall mov mov cmc and int cmp mov push std inc jnp (bad) mov mov das and sbb mov (bad) hlt mov xor das stos adc mov jmp push mov push gs in icebp xchg push mov mov test imul (bad) xchg (bad) dec jae mull mov or and xchg sub xchg shlb add mov push mov jg js dec xor xor mov dec cmp pop jnp lock and aaa leave movsb sbb sti repnz lods or js push adc or outsl push mov in jbe movsb les nop cmpsb rorb lahf jmp inc iret jae adc (bad) push mov (bad) push push andl xchg adc dec jo mov in mov xchg loopne gs mov jmp dec jle sbb inc dec cmp es cmp or add mov (bad) mov xchg push or mov clc sbb add or pushf pop inc outsb sahf push push fsubrp push add xor jmp sbb jae mov cmpsb out pop xchg test cmp out cmpsb push subb lea cmp and inc in imul jl jnp in aas ss mov les or jmp jnp ds data16 cmpsb sbb mov in dec sbb mov inc aaa pop mov push repz sub or and dec pop xchg or mov in out mov inc xchg xor push sbb and movsb mov adc mov shrb pop mov movsl aam mov adc sti jp (bad) jl mov jle jmp pop inc push and mov xor push sbb jmp ret jbe push push (bad) jmp in imul pushf jp and inc (bad) (bad) roll mov js add in lcall cmpl mov and ljmp sti xchg cmpsl in dec cmp mov cmp in orl insb xchg fimull jnp cmp push jmp inc and pop leave repz pushf mov test xor push mov divl cmpsl xor add jmp loop inc push (bad) jb inc xlat sti mov mov psrld sarl stos into xchg xor in pushf cmp mov movsb adc mov and xchg out jp outsb fwait xchg int3 lret mov sbb int3 push ljmp dec lea cltd sub in xlat data16 sub push cwtl or add adc loope push in test sub lret add dec test sub push pop cmp pop add push outsb ds int inc cmp push jmp stc test add pop mov in xchg xchg std testb inc aam stc (bad) fcmove mov bnd scas xlat cld adc mov or imul loop xchg insl mov mov test push sbb push push mov out jge adc jne stos aas and sub and mov dec push cmpsl cmp or jae cli xchg push daa sub in sub jne test mov cmp mov loop stc cli and adc shr cmpsl add imulb inc xchg dec adcb xor jno sub dec jne inc inc jnp call push mov inc pop jnp sbb dec lahf (bad) js int adc je cmp pop mov leave push inc and push mov jo mov adc lods (bad) clc in inc mov mov fldt mov fxch iret add test and jge xchg jge pop dec sub push ljmp gs jp lret push enter mov popa je out insl outsb fwait adc fwait push jge out jb jno mov pop lods scas loopne iret mov cli or pusha incb jo and or jge xchg rorb inc test cwtl dec popf pop mov fs ds test cs push fdiv xchg or outsl inc push (bad) sahf in jge lret dec leave pop add and stc mov mov sub mov add stos sahf repz inc mov cs adc mov icebp sarb inc aaa jo add jno in dec lea adc dec push lcall xchg push in scas (bad) je lods fistpl and dec aaa xor or loop nop in or lods dec or add dec and ret incl insb add clc dec ret movsl cmpsb sti in int mov and sbb movsl lret arpl mov clc push and lret in or add or cmp and jne adc pop popf (bad) outsb cwtl out dec adc into fucom inc inc stc xchg and sub mov in sub jecxz pop dec lods mov jne into dec mov jge mov cmpl lea outsb pusha sub pop push lret and cmpsl dec sti repz push outsl in and nop sbb aam and pop lea out xchg and xchg jecxz push in fnstenv adc and in rcll lret inc cld push leave push (bad) and dec xor push int out dec mov scas push clc mov pop insl movsl mov or ret pop mov pop insl pop sbb push lea ret rcll icebp jne mov mov movsl movsb and test fisttpll in xchg mov xchg mov push jne pop lret pop mov jg and mov xor fidivr adc mov xor das movsb xchg push not cmpl push mov mov in frstor add int3 cmpsl dec add mov mov mov adc xchg inc push or std scas jp dec inc dec rorb mov iret call inc ftst xchg cmc iret push shlb fmuls mov sbb lahf cmp rcrl add lds in pusha pop nop sub mov hlt push push lcall cmp stos nop xor jne mov movsl in xchg and pushf ljmp jns fwait out sarl pop mov add mov idivb inc and xchg data16 mov xor push mov int push jg or aam inc inc aad fsubr dec xor js mov push mov (bad) lock mov aas fwait scas or mov sbb sbb jne mov inc xor xchg fstps std imul inc mov sub mov sub iret mov push jno shlb add inc dec mov cwtl mov jne inc insl fs rorl (bad) pop (bad) mov mov iret bsr dec mov xchg fcmovb sub orl insl addr16 or pusha int sti ficoml scas jbe mov add out retw cltd xchg rorb or xchg mov adc or push sub ja cmp sub dec loopne adc adc lcall adc pop xor xor ss mov push cmp or fwait test cld into test mov push fildl jle loopne inc fisubl test mov or (bad) adc ja in imul cs aad cmp pop fdivrl outsb insb aaa add into jbe lcall stos sub add (bad) mov jbe or dec fwait xor int3 xor pusha xor insl and dec outsl lahf jge and push and add fmulp test aad push jae xchg dec scas (bad) push jno mov jns jmp (bad) (bad) mov (bad) cmpsl aad (bad) bound sbb and push jo cmp mov push insb push adc fmull adc dec inc clc cld mov iret ljmp or mov mov out lea mov xchg into xchg mov dec ret xchg cmpsl cmp lahf mov aad int3 inc inc in sub test sub mov hlt jg lods adc ds and cmp inc data16 mov push repz pop (bad) jo stos cmp pop pushf add iret push mov test jecxz mov pop inc loope mov dec mov push mov sahf data16 arpl ljmp ret adc jbe mov sub and adcl pop (bad) cmp dec mov imul jge std jmp and fsubr mov test push dec mov mov (bad) mov rcrl jae xor xchg ds add mov ret jp mov cmp mov mov cmp xchg mov mov sub xor std mov outsl pushf jb mov (bad) sti out inc scas cmpsb aad mov sahf xchg push push lds mov or rorl mov jg or into mov notb pop leave lods mov in aam pop pop dec fisttpll jno mov mov sbb loopne and mov mov xlat lods dec sbb jl popf sahf in fnsave and sbb ljmp das xor dec or fdivrs mov mov mov xchg std push xchg mov cmp or or in adc xor mov push call popf in mov xorl mov xchg pop in add popa outsb scas pusha xchg mov sti std repz in cmpsl xchg push inc push and mov adc xchg ds sahf xchg mov cmp fmull lret rcr sub push mov and aaa in outsb push popa lds sti mov inc out mov sbb push pop cmpsb scas lock leave mov popa mov mov mov loop cmp push mov or (bad) fisttpll adc in mov stos mov cmpsl ret lods icebp cmp sub sub pop lea cs ret dec gs xchg inc cmp xlat lret stc pop lods mov fdivs mov pop aaa mov mov mov xchg cmp fld jmp xor sahf pop mov push lods out mov jnp mov mov sti fnstcw xchg push xor hlt mov iret sub xchg lea mov push mov and push mov in jp sbb sub mov and and loopne push mov xchg mov jbe cltd inc push stc aas mov jb mov add jo adc pusha jl into ret dec mov in arpl jne (bad) repnz adc or dec data16 mov lea add scas mov bswap push scas in mov dec jbe loop fst mov dec cwtl push inc vmovaps and pop pop xchg loopne jnp mov dec pop int pop stos rcll jb mov leave push pop stc cmc mov (bad) mov inc scas stos adc fistpl pop cvtps2pi mov mov ja lcall lret (bad) pop jle ljmp out push pop test push cmp mov adc mov jno mov xchg aas sbb cmpsb sbb gs insl arpl int lahf mov out xchg into mov jno test jmp xchg sbb jnp cmp rcrl iret in mov cmp sbb mov xchg hlt dec xchg sub add push mov cwtl xor or outsb and sub jl mov push adc adc out mov inc mov push leave mov jecxz push mov ss lock in add enter test lea (bad) jae xor cmp and cmc xor or mov add dec jmp shll test xorl js pop test dec in add mov test jo mov popf sbb mov jae outsb repz adc bound or cmp ret fnop dec ret pushf mov sub clc or fs pop mov scas arpl add scas test mov push mov cmp iret jle mov lea mov data16 mov mov in sbbl in mov lea mov push imul or out movups lret lret std in push mov ja ds (bad) mov stc sbb rcrb push repz shlb jle push iret jne add inc inc rcll outsb push into xchg xchg testl jmp mov xcrypt-cfb cmpsl arpl cmp inc mov (bad) fsubrs adc hlt push push mov pop mov mov scas loop or call aad adc inc inc cmc mov mov mov xchg pop mov fsts mov mov mov jle data16 xlat scas mov in push mov pop jae out xor push test sub ss (bad) cmpsl mov or stos or mov stc mov shlb jno es mov jg push mov mov (bad) add mov xchg fisttp dec mov sbbl mov lea jl dec sub sbb mov in sarl adc lods xchg loop sahf push cmp or add add fistpll not jecxz push mov addr16 in jle xor sub aaa in (bad) std iret mov iret aaa lds add jno and sar fs lock pop mov xlat movsb adc dec outsb jp dec push (bad) into lret loop fsubl insb mov lock dec add ficompl or stc gs mov dec lret jo and cmpsb fnstenv rorl stos xchg push (bad) jae push in mov outsl dec pop daa jno aad push sbb or mov lret aad je in sbb lahf sub les ds pop and jo inc xchg sbb jnp jns push dec (bad) pop faddp stos lods push mov cmp cwtl icebp sarl mov push add jmp popa and add or mov addl or es gs mov idivb mov out fs data16 imul iret xlat shrl add lret fwait movd push scas int mov js into jle pop scas xlat rol dec mov inc packssdw mov mov push out jg push or mov dec pop pmullw lcall les out jno icebp loop inc lret in jge rcll or cld aaa xor xchg pop cmp cmp fbstp into lods imul pop jo loope inc loope test nop jecxz fnop jg aad leave in inc adc lds icebp aaa jns jle sub (bad) mov call cmp pop xlat mov fxch or jo lret add fldenv test add mov lahf jg ret ret cmp xlat inc adc stc pop (bad) idiv cmp mov loope mov int insb pop mov dec test mov test pop mov sbb mov mov or mov push jp outsb (bad) cmp mov ljmp push mov mov daa mov mov rol and cld mov scas clc fmul ja mov cs or loope fbstp (bad) lret mul test xor mov jb into cmp shrl setle push sahf andl lds inc jge lahf pop cld add lods add add xchg inc adc inc in ffreep jl mov push pop aaa push pop xchg scas sbb insb xchg and mov leave jbe jg leave mov scas mov in pop adc or inc mov fnstenv or rcrl les jge push mov mov in lcall (bad) jge pushf std jp cmp xor inc mov cld cs clc or mov test mov in jg cmc add cmpsb xchg push xor mov mov or ds scas rorb sti rcrl lea push sub in dec loopne out push je ds std int xchg and fnstsw stos movl ljmp loopne add cmp sub add leave stos and popf or push and es mov cmp xor ret sti lds mov js mov test callw mov jne jl mov jge push fimull xchg jl add add pop in cs push das pop jmp or ja ljmp jle pop cmp dec (bad) inc lcall push xchg scas mov mov and int3 jo adc cmc addr16 in dec pop xchg ds bound cmp xor mov add pusha mov aad fsubrs jmp fisttpl xlat pmovmskb jg aam mov aad mov xchg lods into or add notl shrb addr16 aam rorl pusha test aad cs lea lea fadd or test jmp daa outsb (bad) repz pop mov xor je adc adc insl pcmpeqw shlb test xor aad inc in loop jmp inc cmp lods outsb jp mov fsts push ret outsl cmpsl (bad) (bad) (bad) bsf xchg sub pop lods std cmpsl loop adc addr16 dec jnp outsb pop rolb or cltd loope mov int les loope adc jne mov aas jae in push dec jb lea nop stc dec xchg pusha cmpsl pop out mov push sbb jnp add push mov div mov cmp mov xchg fsqrt push cltd inc lock pop cmpsl mov xor (bad) out inc mov (bad) mov jecxz push mov mov mov add cmp out int adc sbbb andb cmp mov xlat mov or sub and xor mov in popf in cs leave das subb shlb jmp cmpsb mov es testb push (bad) xor outsb mov sbb outsl adc mov dec mov cmp test inc (bad) push xchg (bad) leave (bad) jbe push push dec aaa or (bad) jg jmp loop arpl test popf lds lock mov inc or stos loopne xor shrl or add mov cmp or mov lea mov push (bad) or sbb xor jo fcomps dec xor aad cmp orl sub sub mov and arpl jecxz cmp pushf add inc push sub sbb dec jp je cmp aam adc sub xor add std inc sub (bad) lock test cli add imul jge js je les and mov je mov out pop lock adc sbb leave add out insl es add jp cmp push mov aaa bnd xor ror js in xchg or pushf sbb mov inc ja cli adc pop jns jo mov pop mov popf enter into test jne xchg mov inc add cmp mov jae xor stos pop dec ror aaa mov stc adc jmp jno sbb hlt jb sbb add lret jns add mov ss (bad) push xchg cmp imul push int3 add in mov iret cltd adc sub xchg sbb or fldcw fs sub pop ds mov xor and xchg mov lret rcrb imul mov (bad) push inc iret cltd jp pop add fistpl xor and (bad) lea data16 fdivs lds stos outsb rolb shrl (bad) jl ja push mov int adc lods movsl jno inc mov sbb add pusha cmpsb mov and dec and outsb aam jns jo pop loope or cmp mov mov adc add movsb sbb or xchg cmpsl mov int3 jmp pop adc jne pop inc or sahf xor ds add adc mov pushf cmpsb jge pop scas mul dec adc mov adc outsb jmp lods jno push ja std pushf inc scas (bad) push and mov cmp ja pop and or mov test loop fwait jl cmpsl ljmp ds scas (bad) sahf mov xchg test bound jl push inc mov pushf ds jns dec ss adc or add mov pop add dec pop fadd mov mov or inc dec add cli adc and and adc add mov in dec add movsb popa lea ss inc cmp ljmp fdivs adc xlat adc ss (bad) nop iret fsubrl cli repnz jae cmp push cltd xchg push stos inc imul or sub out lods mov cwtl fmul dec bound mov into mov mov imul in jno mov pusha fldt movl sbb adc mov ss sbb imul pop in leave cli xor pushf je inc mov xorb in xchg adc sub jno sbb data16 push pop inc in ss fisubr mov jle pop inc and in dec lea out mov jmp cmp adc cmpsb mov enterw jmp sub (bad) icebp test test movsl mov pusha or in (bad) push or fstpt cmp lcall addr16 xlat sub cmp or repnz xor (bad) fadds (bad) sbb je test out into inc xchg jge arpl jne test das fstpt test test les push push iret mov outsb rolb and ret mov out test movsb loop adc cmp mov sbb outsl add mov pop leave test dec movsl mov cmp lods push sbb mov lods mov dec (bad) mov xchg rolb push or pop or insb push jp cmpsl xchg lret mov jns test and cmpsb mov das push (bad) mov (bad) jb xor and out mov jle rcll stos popf in popl mov mov or jge xchg sub mov xor xor cmpsb (bad) push std push cli mov mov xor add out (bad) ss dec jl in mov cmp cmp outsl xchg mov mov mov insb adc ja or push inc aad mov jmp sbb cmc int out mov fs les add dec xchg in jecxz cmp adc orl pop fcoml or cltd mov inc dec in and mov add aaa cmpsl clc mov push adc mov movsb or mov data16 ret xchg dec jp or jmp xor (bad) pop js jbe scas ret jp xchg out ljmp outsb int data16 rcr sbb (bad) jmp push xor or sahf movsl insb fs push and in xchg xchg or std jnp out xchg pop ss jne dec jbe subl mov mov cmpsb es aaa adc in xor fisubl mov call pop inc das adc lret inc (bad) rorb sbb mov cmp sbb mov pop fistpll adc mov nop out xor nop ljmp js and jbe and push mov es push insb cs out inc add sahf test daa fsubrs mov mov mov pop or adcl sbb (bad) mov pop ss pop adc adc std sbb or inc sbb jnp rorb fildll scas jmp jae or (bad) ds push xlat jo push cmp in les lds jo out fidivrl add test push outsl jge scas sahf aad mov adc or lea iret xor add inc (bad) xor dec mov cmp inc inc mov stc es inc popa lea mov mov sbb cli cmpsl jmp lcall call mov in xchg push mov hlt inc cmpsl sbbl (bad) outsb enter andnps sbb mov cmp mov clc mov xor ss jecxz outsb lds inc rorl in sti iret movsb pop sahf mov (bad) ror xor jne inc pop and dec addr16 inc mov jle add mull cltd adc push jge iret pop inc jne push cmp xchg sub jle arpl ja jne in sbb mov push sahf lahf jg js add les insb aaa mov outsb (bad) jo insl in popf imul jbe,pt cmc and xor sub mov (bad) divb cltd jmp mov sbb pop notb mov popa cmp and pop mov adc (bad) (bad) fcmovnu test aaa std aad push cmp in aas in jge sbb loop mov repz adc cmp cmpsb shll movsb mov jno sbb and jmp mov mov jo fsubl popf add lods stc or es push (bad) imul xchg into lods mov dec mov ds lea adcl movsl pop scas cmpsb jne std stos outsl rclb dec mov (bad) roll test stos and bound and or jne or (bad) jmp xchg loope fadds push pushf pop movsl jp sub outsb sahf pop mov adc mov sub loope cmp xor mov push shl inc das mov push fcomps sbb lods mov rorb xor push mov dec lret xorl je ss xchg xor fistpl jmp jns mov (bad) popf lds fldl outsl in fiadd nop mov call push movsl mov jae or xor mov sar push jp mov sub lods adc lea sub fnsave mov test fadds cmp repz das cmp mov lret xor pop xor cmp mov xor lods mov leave xor jp into mov xchg fnsave repnz lds push mov mov xor insb dec or dec mov or pop test xor xor sbb ss repnz pop mov push and jle punpckhwd cmp ja jb lea stc inc in fimull xchg pop or int sbb jbe jb add arpl imul leave add mov mov cmpsl sub hlt nop cmc mov pop outsl jo dec push push mov out movsl jb dec (bad) jle adc cli pop xchg test arpl add dec fstps mov mov adc mov or inc mov sahf les dec and mov adc mov mov cltd fild jb xor dec bound jne mov insl loopne jnp mov add push mov push int lahf push push std dec popf fs mov push or pop arpl xor lret inc loop (bad) lahf add xchg orl sbb divl mov fidivr test push sbb stos inc mov push scas out stos fildl das in pop jmp jl ds outsb push inc cmpsl xchg test shrb in push pop cmp lock sbb jecxz (bad) sub and pusha xchg and repnz sub mov stos or pop jbe xchg orl dec loope cmpsb stos pop int mov xchg inc and add push sub imull mov stc jbe lret and or sub out inc jecxz jg aad cmp push int cltd cmpsb jg xor xchg insb les push fild sbb pop cmp enter cmpsl (bad) aaa pop shrb push jno dec xlat repz outsb mov gs daa dec addb jb xchg in sbb jecxz cmpsl sysenter js bound mov cmp sub inc cmc and xchg ror pusha (bad) lret mov aad mov mov rcl loope outsb push dec jge hlt movsl adc mov mov fstpl jp repz cmp and jmp mov or xchg jmp add mov or (bad) in adc jo mov cmp (bad) jmp mov popf fnstcw fbld (bad) fcmovb mov push jmp push sbb clc mov mov lahf aad hlt push mov shr fxch stos xchg movsl and jle sti aam push cmp xchg in outsl jg and jl gs adc mov addr16 das cmp push repnz arpl cmp ffree cmpsl lods sbb mov cltd add lret fisubr imul arpl push adc int jmp pop jnp lods pop xchg cmp clc sti lcall mov jp ds aas add mov dec in insl adc mov leave lods inc inc mov rcrb mov mov movsl cmp movsb push push mov add fldl (bad) rorl (bad) in or insb inc mov mull (bad) pop mov pop xchg mov cmp mov lahf cmp push stc ja xor mov nop mov mov sbb cmp outsb loop mov hlt inc imul inc mov xchg enter mov scas mov inc mov cmp dec or adc iret je (bad) xor mov das sub mov xlat gs sbb aas sahf loope outsb ja test pop mov div insb xor dec insb add cwtl sahf inc dec jecxz and inc cs xor cmp int3 fcmovnbe mov pop je test shl jge mov mov mov mov mov mov rdmsr inc cmp push in inc lret mov inc dec hlt adc jl lahf cwtl (bad) je test fwait xchg jne int3 nop sbb and sbb mov mov nop cmpsl addr16 dec xor mov loope mov clc mov leave push cmpsb dec jmp in jp leave adc loop push mov adc mov dec add mov cld imul imul dec (bad) icebp rorl mov jle leave add mov sbb andl int3 xchg lret fmuls je xor and ret xor out mov cs sbb out xchg jmp mov or sub or xchg jmp mov xorl insb jns and movsb add fiadd mov add sub cmp pushf ret mov cmp jb ljmp dec xchg push fwait or loope push push ja out nop mov out cmp inc pushf mov aas (bad) rcrb mov and call mov popf roll icebp push cmpsl fsubrs mov push or cmp into mov mov adc push cltd loopne lods mov out jno loope or clc mov insb ret jecxz cltd sub mov and popa cmp mov ja xchg mov sahf jmp testb push iret (bad) adcl pop ljmp fstl sub (bad) and push lahf test mov xchg gs mov pop mov jg xor or mov ficomp adc cld fdivrl push mov (bad) sti iret rolb mov jae mov push push or data16 jmp mov addr16 sbb sub mov popa jne test clc cmp mov enter push mov pop xor sub mov (bad) lods orb (bad) icebp sub cltd push fnop mov nop imul jnp xchg sbb mov pop xor int sbb jae inc push (bad) mov (bad) and das cwtl jecxz mov mov loope sbb (bad) int or cmpsl icebp or xchg shrb out xchg int add inc mov movsb fwait int dec pop in testl cmp mov push nop (bad) lea add jne jmp mov xor xor and add mov subl push in and pop ljmp jb movsb lea (bad) lcall in decb push dec mov psubsw cli mov inc (bad) in faddl test cmp mov mov lahf shlb fs xchg mov sbb sahf mov mov add rorl mov inc imul mov clc movsb lcall lret push mov xor push rorb stos mov xchg push mov and lahf dec mov push outsb xor inc insl xchg outsb dec lahf in mov xchg js mov jp or nop fcmovne mov scas fild stos xchg mov mov jbe inc rorb bound insb add mov and popf (bad) icebp push sbb pop stc mov pop add inc out and jmp in (bad) push lcall cvtps2pd sub and ret push jnp jnp mov mov popa outsb jle aad xor loopne je dec xchg sbb in loopne pop push insb xchg stos (bad) out jo inc mov aaa sbb xchg icebp dec outsb mov repnz sbb rolb push xlat js sbb mov icebp imul xchg sbb out scas dec rcll add ret xlat jg xlat divl leave lea nop lea std push mov mov loopne xchg jmp jp int lahf fs cmp adc jnp dec or outsb jnp mov mov jge aad in push int3 push jmp aam daa add inc mov imul into lret add decl pop add mov faddl mov cmpsb xor sahf sbb (bad) mov mov push sbb mov mov push jle sbb add xchg ficompl or add and in and pop je mov ljmp mov aad mov mov push pop cmpl add push cld or in aam mov enter ret push cmp sub xlat and fwait call in fstpl pop mov push inc nop mov imul dec xchg sbb imul in push inc ret (bad) out push dec fdivrp (bad) out int xchg loope or fsubr lcall xchg in aad rol pop xor dec test mov pop ss rolb adc adc adc xor mov cmp addr16 lret inc mov adc out addl pop push repnz sbb dec in jle push fildl pop stos fcomps xor popa jo add (bad) or add fnsave fimull fidiv sbb mov rclb jb xchg mov iret mov aaa pop inc xchg fs sahf pushf dec mov xor mov jge rcr jecxz in cli adc mov ljmp xor or cmp cltd push mov mov lea mov fstl pop sbbl movsb rorl xor mov cmc pusha jbe int3 sbb mov jns ret adc addr16 sub push jne mov inc sub mov push or mov xchg mov int pop cmp jne lock xor mov xor jae mov xor loop mov popa ja repz mov push xor fidiv mov inc mov je popa cli push mov jmp sbb fs pusha sbb push ss add shl push das cmp aad xlat mov xor add outsb push mov in jns sbb (bad) jle xchg xchg cmpsl cmp sar pushf inc cmp shrb jno test mov andl mov daa iret mov pop outsb aad push or mov dec cltd pushf push mov mov jo fwait mov sub inc negl mov (bad) adc mov rcll adc mov cmc fnstenv gs lock pop fwait mov push jle push jg icebp popf xor fcoms mov mov inc scas adc fcoms mov sub ss lea dec xor mov xchg in into jbe mov or fs lea rcr push adc mov dec ss cmpsl and xlat stc outsb push mov shll aad adcl push pop mov and cmp pop push sub xchg mov xor icebp lea js pop push xor sti insl int aam out in outsl aas adc stc jns push fsubrs loopne in mov sbb sub sbb jne test into mov jno push out mov dec dec push mov outsb jo push jl iret es (bad) negl dec gs (bad) repz jle out mov xchg sbb repz loopne lcall xchg pop aam mov sti sbb incl mov add sti (bad) outsl mov ja stc sbb ret or cmc in adc outsb jmp jp das int3 lds push lcall mov pop mov (bad) mov adc rsm mov rcrb cmpsb mov sarb dec (bad) fisubl jno,pn push ljmp xchg push fwait outsb js ds in xor in xchg das mov push cli daa leave aad test loope inc push add push mov pop arpl (bad) fmull in push lods xchg mov cmpsl outsl xor ds in jns add cmp adcl cmpsl and dec push dec jp in inc cmp or pushf lods fmuls sahf adc pop mov das in jl inc xchg and jmp test lret aam sbb enter (bad) arpl cmpsb pop lcall ret mov inc xor jno mov ss pshufw imul sub or subl pop imulb xor and dec adc cltd in mov aad (bad) movsb in aaa mov jb adc inc adc mov push call jo add shrl xor sti inc mov xchg repnz sarl sub mov (bad) mov or stos nop pop sti xchg loop pop or mov orl in xchg repz (bad) adc mov notb das sub jmp (bad) adc mov rclb xchg mov inc ja jno adc ror mov data16 mov push imul mov (bad) inc sub cmp dec dec xchg lods orb jnp pusha in and mov lds dec push pop sbb push sbb mov mov inc and daa jo push or and pop leave imul add fsts addb pop mov add push lods imul lahf dec ja and or mov fimull enter mov push adc pop mov mov mov sub mov mov sbb jecxz cmp in or mov push fimull or sbb in movsl mov push push movsb mov loopne xor enter adc adc lea inc mov in cmp jmp add inc mov fdivp xchg mov les int adc shlb rclb mov (bad) pop pushf das test (bad) mov lea mov (bad) out es imul pop adc iret dec mov stos into lret push inc test scas fisttpll xchg and mov jg pop mov icebp adc mov xchg cmpsb jnp int push pop sarl mov mov ss cwtl (bad) mov iret and lds pop (bad) add out cmpl pop xor mov adc mov inc adc jae clc or nop loope sbb in add push sbb outsb cmp int3 xor adc pop stos (bad) sarb mov lret push or xor idiv mov dec sub push cmpsb mov add pop lea sub pop jecxz jle adc popf mov jns cmp in mov add mov xor in stos mov js sub mov jge jmp jo xor mov add xor inc mov orb mov out mov (bad) mov repz push mov ja jmp mov ret pop jns xor shll call aad lahf or jmp stos pop and sahf jg arpl or cmc pop mov ds xchg out add inc sbb sbb cmp scas inc push pushf nop sarl sbb int3 div outsb xlat mulb aaa in test mov iret or mov aam add les subl shl dec bound in lods sub or fldt fsubl mov adc popl sahf int3 cld dec js lcall stos jb leave cwtl xchg les imul xchg sarl into roll outsb jge cmpsl pop dec lret inc inc aam inc jns dec decb lahf add mov inc and xchg dec dec cmp shr js mov adc adc sahf push arpl cmpsl aam pop mov and test arpl mov int inc lcall sbb xchg push test (bad) call mov mov into pushl pop addl mov pop jge pop js xchg leave push jbe mov bound jl cmpsl scas sbb hlt add pusha sarl add push data16 dec inc es jne mov sbb mov add and cmp rorl push cmpb mov lret jg lods (bad) dec push lods iret popa in pop dec sub sbb add xor loop loop aad dec lods jecxz fadds test fucomp js adcl and adc scas dec js in and cld loope jne,pn sub xchg iret push xor mov jecxz adc cli xchg xor inc jge pop inc xor stos add jne,pt mov dec xor or data16 xor fnsave mov ret jg out rcrl cld inc adc popa mov popf jns push inc pop out orb fisttpl jns dec inc xor adcl insb adc inc mov outsb xchg arpl push arpl fstpt rorw or mov inc inc rorb loope (bad) xor adc sub xor mov sbb push xchg jae adc int in or lods jp dec ret sahf push sbb jg in inc or add shlb cmp icebp jnp push fdivs negl xor pushw out jbe mov jns fwait push sbbb mov je je mov and push in lahf push inc adc in movntps and test push xchg add mov dec mov dec test les or mov leave and mov in mov popa mov outsl dec je (bad) imul push je lods in sbb pop lods cmc (bad) call (bad) adc pop add outsl rcrb mov xchg test inc mov sahf ds ds mov (bad) notl stos inc out mov iret mov add jmp mov sbb movsl adc mov std into jg and int3 in mov lcall or push rol inc movsl xchg test je pop and cmpsb int data16 mov or in movsb stc (bad) cmc scas cmp xor out jecxz xor add mov inc cmpsb shrl xlat pop in dec rcll mov push adc divb xchg add test popa cmpsb ja lods inc lds pop shll paddusb dec ds push and push mov inc mov add in fsubrl jns inc iret xlat inc test into push or mov adc jae int3 and mov xchg int3 cmpsb in adc jmp outsl sbb xchg inc lret iret inc dec (bad) int3 ret mov xchg mov adc leave gs sbb mov mov ds jne in fimull inc ljmp pop inc lea fcoml arpl std lahf xchg in xchg mov jl nop push push jmp jne push jge lcall or mov dec xor ds push push shrl lods mov jb je sub stos mov pop jecxz push dec in repz ljmp push iret dec jae cs cmp xor lret in mov inc cmp (bad) call divl xchg xchg mov jne repnz mov sbb mov push mov lret adcb mov sub mov insl xchg jp and inc push mov dec pop out fildll adc mov and clc pop push int aaa dec dec (bad) hlt adc mov in cmpsb sub insl add xchg xchg jne mov or mov mov sub jle fnstcw in and push scas insb and int in inc adc jl icebp or lret dec out sub sub (bad) cmpsl jbe dec jnp fcmovnb rcrb mov mov jmp xchg lea das pop (bad) push popw gs or sahf dec pop aas popf adc mov and cmc or movsb adc push fimull into xor push sbb fidivr rclb cmp loop ret insl push sub jle mov in jp adc (bad) int3 in arpl cmp jbe in clc cmpsl ds js je push sub pop sbb rcl pop ds dec cmpsb in add mov data16 loope jle mov pop daa pop adc mov out test sbb lods lea sahf mov add and add test inc (bad) aas dec adc pop jmp outsb data16 arpl fnstsw hlt dec mov cs dec movsl ss add sbb pop mov cmp dec push xor fs clc repnz adc int ljmp bound into and mov repnz popf mov je cld xlat mov arpl mov addr16 cmpsl ds mov outsl push dec push (bad) scas loopne mov enter cmp xor inc mov or mov mov cld negb sti sbb fidivl xchg adc hlt outsl into add xchg push nop sar in inc rorl jecxz js lea (bad) xchg movsb outsl or lcall sahf xlat outsl sti push jecxz mov clc in rorl fldenv aaa mov (bad) push in and cmpsb mov testb fcoml pushf pop and sbb mov dec mov fsubrl loopne rcrb mov jle mov xchg shlb mov fbld dec movsl aam sarl push repz xchg pop pop pop mov mov cmp dec roll pop sub or push adc jo xchg repz or js add fmul mov xor push inc mov inc in mov mov pop inc test cmp jnp es push (bad) xchg jle fsts movsl mov mov int lock adc lret dec stos (bad) mov adcb data16 push lahf inc xor lods mov jp lahf cs pop cmpsb fisubrl loopne push xchg jae mov dec mov adc mov jb xor movsl lsl fimull jnp repnz mov jge push pop test nop mov cli popa add leave mov or in stos mov out mov dec sbbl sbb pop jbe fisttp inc fnclex mov dec cmp mov loope mov out push scas je jecxz inc push and sbb xor fnstcw push jb mov aam xor push lds in jae jecxz add or push adc jno jo push push xchg cmp jmp adc inc psllq mov xlat jge jno out mov pslld or int xchg mov test dec js push gs movsb or out ret icebp popfw mov sahf aam nop mov bound jg (bad) adc sbb sbbl push lods dec repnz pop pop add lock (bad) bound je pop insl jl adc cmp clc sbb sub mov fisub iret sub mov lea nop mov add int rolb add jbe inc lea sbb add or les xchg sbb xchg mov xchg push sub mov xlat sarl insl mov hlt and push mul scas mov lea movsl mov cs addr16 mov fcmove mov fdivp or mov loopne sbb or cmc sbb mov mov or pop mov ljmp mov imull mov cld hlt pop jns test mov jae,pt mov cwtl inc pop stc cmp dec mov std in xor mov hlt fucomp (bad) or xor push lcall int divb mov mov fwait pop mov pop mov (bad) xor or clc stos dec sub cld mov xchg ficomp xor push mov jmp addr16 out test xor xchg jle jp cmp mov leave fstpl jmp sarl xchg (bad) sahf addr16 mov pop fwait out scas frstor mov adc pusha sub pop aas xchg mov jle and mov mov push jno fsts lods mov sahf dec mov jmp lods int xchg xchg sbb lods rorb or pop lock out imul fmull lods mov inc mov jo dec pop dec add xor mov sbb (bad) mov cmp scas xchg fdivs je cld in inc sub lods xchg xor jno jo jle jp and fcomip mov cwtl pushf fiaddl sahf xor and push lods cs adc and dec ljmp aad fidiv or ret movsb lods jle mov or dec lcall repz mov or mov rcll rorl mov mov mov orb jno fdivr inc inc mov sahf mov imul dec jp mov insb push mov shrb xchg add jge ret pop outsb sets xorl js arpl mov mov jmp jecxz mov dec (bad) bound dec fwait test nopl std push inc div imul (bad) lret stc and in pop mov cli push cmp loop std mov xor push lret fstps into add sub mov mov iret cli arpl mov repz inc addb sbb fimul jns mov loope pop in dec orb jecxz ja test mov push mov popf adc scas fsub (bad) loop mov fnstsw dec dec mov inc pop inc xchg mov scas in jecxz jae lea mov sarl (bad) fnop pusha icebp idiv mov push aas push rcrl mov xor das repnz loope imul test jbe (bad) xor jg aaa iret bound hlt cmpsl cld jns arpl aam icebp push mov insl or jg xchg lock hlt clc pop jb rcrb sbb (bad) pop pushf inc stc (bad) sub mov push movsl lods and jp or mov in sbb pop or sbb imul dec mov mov mov aas mov outsl push jnp rclb in jb or jl loope out or sub mov pop lea imul xor jnp add xor push scas into xor in push shlb add sub dec rorb in mov (bad) dec pop push mov in fcoms frstor xor xchg in pop in adc xchg mov adc (bad) lock ds push (bad) push and lcall mov xor xchg mov movsb lea mov jecxz,pt mov mov les jno mov movsl jb mov jmp (bad) movsb (bad) sbb les dec dec mov std int3 and inc cmc mov incl ljmp jge dec mov mov jp mov xchg mov sub xchg cmp push mov sbb dec inc cmpsb mov outsl push test daa out fcmovnu xchg mov adc (bad) sti adcl mov sahf push xchg sub insl lds mov fst jns cmc (bad) scas outsl add mov lea outsb hlt jp or addr16 in mov scas fs dec pop (bad) divb arpl in xchg insb test repnz sbb xchg and cld ret ffree sahf test or sub js lea imul mov insl mov and icebp mov add cs push (bad) repz inc and mov stc jb lock xor push jmp mov sub adc cmp add out cmpsl mov testl addr16 data16 scas out push dec mov fstpt mov pop mov loope push and icebp sbb cmpsl in (bad) pop dec mov pop idiv push jbe (bad) mov add movsb fdivrs dec inc inc mov xchg inc scas cmpsb imul adc and into mov sbb jo fnop pop lea mov mov sahf in mov xor cmpsl roll sbb sbb ret test in mov mov clc mov out sub mov loope stc mov sahf ljmp jbe lds jns popf das gs inc xchg add pop cmp or dec jns (bad) mov sbb dec jecxz mov enter fnstsw int3 mull cmp daa pop mov mov mov dec mov in imul dec jo cmovge push cmp xchg rcll jg fbstp in or daa and adc repnz stc jecxz outsb push sbb rol jl sub push push mov mov sbb pop xor jno iret fcoms scas push xchg push add or jb lahf ja jbe inc arpl in faddl cmp mov lret out xchg fldl lock dec xor dec lahf xor xor out test inc ds sub xchg ds inc sarl fimull add jle xchg out insb xchg int xor in and mov cli lcall out cmp fdivs mov pop aaa mov push mov sub outsl push loope jecxz in std (bad) lods ljmp xor sarb lret push sbb and shlb in arpl outsb aam (bad) out jne (bad) dec pop xor repnz loop in sarl cmp jecxz fmull or jg (bad) cmp cs in xor pop mov sbb fs roll pop xchg mov mov push fcos mov sar jecxz scas push stc pop lret mov dec out pop fistpll (bad) cmp mov arpl push inc in ja cmpsb mov sbb (bad) mov push data16 xor push (bad) cmp push mov test mov int3 pop leave pop push jo sub sbb stc jo mov mov xchg ds pop jg fisttpll jno fisubr mov mov pop sub add in jle sarb push dec xor mov bound stos int3 cmpsb stc mov jl ss test xorl mov mov das arpl test xor pop cmpsl aam ret in adc mov gs dec sbb push aad mov sbb sub mov push jg dec push push ret imul incl cmp arpl cmc lcall xchg sbb repz mov sbb dec mov lock add mov sub aad jecxz mov cwtl andb mov iret xor out adc test or ret ja xchg aad jo leave sbb add push mov ficomp ss jae fisttp leave add xchg in in cwtl dec stos imull je pushl mov cmp mov sbb mov aad test xchg test adc pop in and test jl (bad) jno mov mov dec out frstor xchg inc es int3 popa push imul cmp mov shr mov or fs adc pop add mov cmc lds sbb lods xchg arpl and fcompl in aas int (bad) push outsb jnp enter mov cmp addr16 mov dec mov ljmp push mov sub pop cmp imul mov xchg out pushf add out mov test and pop jb pop test push es out xchg subl iret add jnp fsts inc mov fsubr xchg mov (bad) (bad) int mov sahf aam mov push dec hlt xchg cld jle mov and stc mov sti jecxz inc addr16 push mov xchg inc pop in cmp sbb test mov mov jge and cld mov mov jp icebp push mov pop or icebp add mov push or loop cld pop add mov xor pop sbb jb push mov lret xchg add lods sub cld into cmpsl js popa push push fdivs inc rolb xor int3 xor mov fldt jb ret mov pop (bad) mov outsb sub pop arpl dec sbb and sub mov sub xchg mov xor inc xor fwait out je vpmulhw fisttp dec popa cltd sbb lcall loope mov pop xchg iret (bad) dec push mov (bad) je jg inc sti mov lret fisttpl nop mov outsb mov mov out daa je sbb inc mov out std push dec dec lea lcall mov cs movsl into roll mov popf xchg xchg dec mov daa mov jo mov or movsb sub in lds inc mov repz rorl mov ljmp mov int je mov pop push xor imul ds mov jnp fistpll lret push sub add xlat fimul and loopne iret mov mov inc or jns in lock mov dec pop push movsb jmp or mov (bad) add addl cmpsl or outsl mov pop mov mov xorl inc fwait dec (bad) xor in outsb lahf fadds or sbb js inc rcll cmp incl (bad) mov sub push lods fs aad dec jl cmp jg and mov incb in (bad) mov jo pop test dec mov or adc out xchg sarb mov (bad) cmp loop push sti cs fcmovbe jecxz pop push cmpsl lea mov in mov mov fstl mov xor lahf and xor add insl je std jno popf push pop jo mov test stos iret lcall stos adc fwait mov mov adc mov jae (bad) insl mov mov sbb and rclb hlt rcrb aas dec inc les gs lea cmpsb sub xchg in aas xchg mov lret xchg in push (bad) mov cmp (bad) jno je incb sbb pop ret fwait (bad) cs mov faddl jmp adc mov or in hlt ffreep (bad) movsb stc add jg loop nopl psrlw and cmpsl mov or push adc mov xlat sub lcall fs aaa dec out cmp jg mov sbb dec cmp lock or pusha aaa in sub mov jecxz or adc out sbb and shlb call ror dec mov imul scas aad jbe or mov mov out ja push mov pop popf or sbb or test fnop mov scas push push hlt (bad) dec (bad) (bad) jecxz mov xlat std add adc fcomps test aaa dec lahf dec jl jg enter sub inc js (bad) insl (bad) adc mov in std nop pop xor mov (bad) mov sbb pop les mov mov es mov lock adc and xchg sahf leave mov adc repz cmpsb (bad) cmp inc jne sub pop nop mov cmp outsb sarl jmp adcl loop xor outsl repz xor js scas jecxz sub push aam inc imul out out mov (bad) cld mov dec ja mov sub adc lods iret int int sbb fisub in out fild test jo jg push add mov adc pop mov sub mov mov mov and sbb int3 push mov mov lock cmp mov add mov aas push jbe mov movsb loope gs clc mov xchg cmpsb inc (bad) sbb pop inc add inc scas jmp mov cltd and (bad) push dec mov adc (bad) xor mov dec and mov (bad) rclb popf jne inc nop mov and mov ret int jp xchg (bad) pop stc push mov cld mov jne xlat or push clc mov lea inc (bad) mov sub push jg (bad) mov sahf frstor sub mov sub lods nop dec mov xorl sub sarl mov dec inc inc push xor fsubrl and jge add or sti movsb into jne sub (bad) cmp cmp sub outsb je fdivrp outsb xor in pusha es leave mov les in insb or test jl (bad) in xor mov insb dec xchg shr pop test sbbl mov mov addr16 mov mov call ja mov in or js sub in inc lds imul push cwtl mov sahf jbe stos and mov add addl fildl jno inc test dec push cmpsb add sbb test add mov int dec mov jl stos pop xchg mov jnp into and mov nop adc sbb fucomip sbb repnz test out mov ss and leave xor (bad) sbb push lcall push clc dec pop inc mov sbb pop cmp adc scas jb std daa sub cs mov xchg pop mov ret sbb stos leave xchg mov inc mov div jl adc popf mov mov into (bad) sbb fucomp jp jecxz jmp outsl (bad) int inc sbb mov mov (bad) adc mov lahf test cmp lahf dec subb in inc push pop dec loop in dec and iret test mov rorb or xchg stos fsubr jge sub or lea mov xchg aad or rol or adc (bad) push stos lea add adc test shl loopne aad mov xchg out dec mov jp mov movsb in sbb (bad) iret add std xchg imul outsb mov movsl pop scas jmp cmp inc mov leave and orb pop scas in lea xor inc dec vpsllw lea jmp testl jle cmp loopne inc mov push call or out call xchg les mov dec xor cmc pop and mov pop iret mov imul inc loop scas mov movsl or adc or add insb cwtl loop daa pop pop mov pop mov fdiv cmc cmp mov cmp adc xchg xor sbb inc repnz pop faddp enter call jbe mov int inc mov sub xchg sahf jp jle in sbb sub outsl sub (bad) jl lea lods add jecxz in mov test les (bad) in mov mov clc mov sbb (bad) in mov mov xor sbb push mov mov push or rcl sbbl add push push fisub stc push mov pop jnp xchg dec mov mov mov jb adc mov sub shll adc test mov out ljmp nop mov rcrb int3 lahf cltd pop in in (bad) je mov stc fimul mov enter sub fchs mov mov scas (bad) (bad) iret loope (bad) imul mov mov hlt fbld data16 loopne adc xchg jle inc sbb dec jp ss mov dec cmp mov lods stos inc jmp in add xchg sbb cmp and ds mov fstps mov dec rcr imul movsb sbb cli adc adc mov fimull xchg movsl add dec getsec xor loopne mov mov adc in xchg lret psubq cmpsb mov mov lret inc jb shl sub mov lahf stos mov mov adc inc rolb jp sub cmpsl or pop nop and daa jb leave xchg popf dec lahf mov clc je xchg loope ljmp mov mov lock leave jbe adc jae in sbbl or push pop mov hlt mov pusha fcmovnbe lahf xor js imul in mov icebp mov sub xchg dec cmp adc sbb imul jnp lcall lret js adc pop inc dec add jmp xchg out mov mov sarb jns xchg mov lods sub repz xlat mov jbe add mov pop mov les fs ret xchg inc add push xchg mov and mov push in jg push jae in push push loopne mov (bad) (bad) xor test cwtl fcoml mov int3 cmp mov inc lahf xlat cld arpl and jne adc mov outsl ret jg xchg pop lods push add inc insl mov push mov mov push inc imull les sub add outsl das pop scas jmp sub cli dec lods sub mov lahf pop popf xchg roll aam mov jae mov sahf (bad) fsubrl or and int3 sti es push shll rcll ret push rcll dec and push rorl and inc push adc ret in jns push subl pop test out adc lea ljmp loope lea mov dec mov test push mov push fcomps ds xchg xor arpl mov push jb fldt out add fbstp push xchg mov inc xchg das ljmp mov add lea test in insb fcmovnu or cwtl mov lock or pop dec imul es cwtl xor mov (bad) fstl into in (bad) xor pop (bad) sub push mov mov aad jle mov add mov xchg fnstcw popa mov movsb mov mov push pop or fdivl test pop pushf mov mov jg sbb sahf ret fdivs das lods cmpsb in push in sub push mov mov mov ja mov or mov (bad) push mov dec jae pop cmp mov repnz inc cld inc mov aad ja sub sub fs add movsb pop mov pushf xchg or cmp or (bad) lret mov mov push negl in sbb cmp arpl dec daa sti sub imul fsubs xor sbb cmpsl pop inc jle out xor jbe mov (bad) or loopne dec mov xor lret repnz cmp xor mov shrb sbb std je add adc ret nop in ss insb mov mov scas xlat in push sti sbb pop xchg test mov mov lock sbb stc in sbb popa orl add xchg jo das lods sahf dec jecxz sub jecxz popf jne fstl jb hlt mov in paddb test in notb data16 leave into pop rcrl daa or loop lahf xchg jp stos mov inc mov inc fsubrl daa mov dec sub std call pop mov ret cmp ds or pusha into iret dec xchg jae sahf sub push jl in lea mov and (bad) out rolb in adc in inc lret jb adc adc lods pop in pop pop xchg jb inc xchg popf sti outsl pop fs xchg jp (bad) cmp ret pop stc aam outsl jno mov jb (bad) mov mov mov (bad) cli sbb mov push aaa mov jl push mov and rorl jno xor cmpsb adc mov in pop inc push outsb mov jbe jl sbb sti pop stc sbb xor adc aad jbe inc orl orl ja andb jg (bad) mov pop and xor inc mov push push sub test push push jmp dec mov mov mov clc stos fsubl (bad) dec or std fstpl dec xor xchg test outsb add hlt std mov nop and aad sub add lods cmpsb hlt pop nopl pop add in dec jno cltd mov notb dec in movsb xchg pop mov pusha mov ficomp sbb inc sbb xor adc mov pop clc add inc movsb out imul mov mov dec mov shrb repz in aad cmp push cmp push mov mov and mov jecxz and aas lods mov scas xchg int sbb push sbb in adc xchg sbb cltd (bad) sbb loop movsl (bad) push ret xor std sahf test ljmp int mov fsubrl jge lret out mov mov jp insl test mov lahf (bad) add mov inc sub inc int3 mov pop nop push mov jb mov add dec and lods pop cmc cmp xchg mov cmpsb jmp mov flds xchg mov (bad) hlt in addr16 jno stc js imul mov cmp sbb mov lcall fsub push add jle mov xchg lret inc aaa and (bad) mov out xor fs jecxz jae mov subl pop pop test mov mov movl cltd xchg dec jnp xlat in lods and mov jb and sbb dec mov loop add adc enter push in jno in inc std mov dec in fildll mov mov std daa jae sbb je adc ficom ret imul in outsb pop sti cmp or outsl push ficom mov lahf sti loop sbb inc jl pop push test mov lret mov xor jne mov lea in add sub cmp subb ss push movsl push dec mov ret lods mov gs push mov in jg in notb or pop ss cmpsb and mov xor dec adc ret jbe sub lea mov push adc idivb pop mov adc cs jae push test pop xchg sub pop push sahf (bad) add xchg (bad) jo lcall into pushf xchg add mov adc push aad ja cmpsl jg lds mov dec mov flds lretw addr16 mov push es pop cld jge or add (bad) pop insb xchg outsb lea mov aas xlat fisub fucomp test push dec mov addr16 jno xchg sbb mov xor xchg mov and fcmovb cmp leave leave mov mov sbb inc shlb mov pop mov push cmpsb aad inc sub insl lahf mov mov jmp mov inc out pop jle add fwait popf sbb das lea or es sub jmp sahf pop xchg inc mov bound and mov and mov pop cli in jg test cmp add mov daa sub sub sbb ds mov testl std adc nop fsubrl push in sbbl pusha xlat inc or mov mov pop sahf out inc mov test subl push out movsl icebp jecxz cli ja xor (bad) (bad) mov jo xor lea out mov or cli cmp sub aam xchg pop outsb stc push dec in inc fistpl loopne pushf cmp and cmp cltd push inc test lds adc push add xor out leave dec (bad) into ljmp mov in inc cmp popa or out in jno sub pop cmpsb mov movsb das and jp (bad) imul hlt outsb cmp pushf inc sti aaa add nop scas pop cmc push rclb popa movsl ljmp pop popf mov (bad) mov adc mov int3 mov push in test push lea rol dec jnp in sbb jae mov fisttp mov mov (bad) jmp shll adc cmc xchg not sub mov cs (bad) lret or mov xor loop sbb mov pop pop inc add jnp xchg ret outsl mov jb ficomp mov aad scas cli mov jnp mov lea add inc scas orb mov popa aam inc mov dec rorl and mov inc mov push mov mov loop dec loope mov sbbl daa push mov mov mov in add mov mov xor mov xchg fadds leave outsb lret add mov clc hlt mov dec int bound adc popf dec and lods aam pop inc cwtl iret mov sbb fidivr test ret movl int3 mov pop mov xchg cltd (bad) loope aaa dec jl std adc mov dec fisttpl mov (bad) sbb mov in xor scas scas aad and push and out add xor leave fwait popl mov in scas add push xlat mov (bad) out scas sub arpl fcmovbe adc adc (bad) adc push cli add and mov lea ficomp xor loop data16 or and dec in jg pusha data16 xor pusha sub inc shrb cmp out sbb mov adc (bad) sarl lcall add (bad) or mov dec int dec jno,pn sub mov pop inc lock inc jno mov mov je xlat sub divl sub mov mov out or scas mov fidivr push (bad) push fstp ret fs (bad) out push inc pop mov popf rorl movsb out adc or (bad) mov fimull xchg mov in aas sbb add mov mov jmp add outsl movsb cs mov jl pop sub dec push inc mov add jge rcrb mov sbb test inc rorb jecxz test or push negb inc jl stos xchg mov enter imul sbb mov pop push (bad) outsl daa sbb add dec out inc jne aam pusha push jo aas cmp cs cmpl jp add stos ds mov dec cmpl pop add dec in fistl test mov or sub (bad) in sub aaa lahf jg mov pushf mov loopne or xlat rol inc decl pop cwtl aam mov outsb lods xchg push cmp scas mov xchg or mov aas outsb xor loope addr16 adc mov mov mov mov sahf call push xor mov jmp cmp stos mov mov pop stc xchg rorl xor lret mov xor mov scas sub pop inc icebp outsb cmp es xor popf mov push lods dec pop adc in push sbb (bad) (bad) in mov bound sub inc jge int3 xlat movsb imul cmp mov sbb into in test adcl in jb push rorb cmpsl add jo aam dec aam insl dec rolb test cmp cld mov sbb pop mov jns or lahf aad lcall push je inc js pop int3 add (bad) icebp scas rcll lock mov jl inc mov lret (bad) jb mov xor les shrl test jae es or and in mov stc scas push xor movsl fistpll or rcll add jno mov sbb sub roll mov pop mov xchg mov sub push xchg into xchg cli femms lcall mov dec push lds push cmpb or push mov mov mov das addr16 pop lea ret or popf scas scas jl mov (bad) xor jne pop mov out stos adc idivl cs mov in mov mov mov imulb sbb lret sbb push mov call lea or leave adc push repnz outsl ds jnp cmpsl les add push mov fstps in mov inc and out je jmp js fisubrl mov movb adc test test arpl cwtl jb stos cli subl adc or fidivrl stc lret lds inc pop push xchg lea scas jg mov lods add inc stos fiaddl push std in jo in ret (bad) ret mov test outsl cmp imul repnz push cmp mov cmpsb fstps scas cmp cmp icebp fsts mov scas add cwtl rcrb or pop and (bad) mov stos and lahf pop add sub add jns outsb xor sub ja popa je adc iret add iret (bad) mov movsb pop leave leave stos inc mov push adc pop push and out push daa adc aaa sbb arpl in lcall and repz je fistp push icebp sub lahf inc (bad) leave scas and lcall lahf xchg test in jae jge scas add mov sbb dec add shrl js jbe pop popa in arpl add push xlat cld outsb test jnp mov inc in cmpsl and (bad) movsb or pop jo insl in jno lods or imul mov cwtl jle mov fwait cmp sub outsl adc add in sbb outsb ret pop jp dec dec or aas scas cmp hlt out mov dec (bad) jno rorb lahf loopne outsl or adc shrb rcrb loope repz mov push xor in jmp mov mov mov adc xchg in mov jmp imul test pop jne in mov sbb pop mov (bad) decl orl xchg jmp cmpsl xchg lds test out mov add mov and in dec aad loopne mov jns outsl in sub mov mov pop xchg mov out add mov mov mov xchg cmpsb rcrb mov iret leave lret mov mov imull add mov in or fwait mov sub fcoml mov sub cmp in or inc adc flds leave pop xor nop rolb xor push test test arpl push sub pxor out test into xchg sub in cld in sti fs insl les in cmpsl xor add lea stc push pop imul sbb nop out repnz and notl and mov mov push mov push dec mov jae cmp divl adc repnz gs add testl (bad) sbb ficomp aad mov imul mov push leave add fimull push stos test sbb sahf (bad) iret (bad) pop dec mov dec jbe rorb das xor scas xchg add fsubs call mov jmp ss pop cwtl mov int movsb out and mov sub pop mov jp inc ret ss mov push lods (bad) mov add ret or or fwait (bad) dec decb pop jns mov and mov cmpsl and add push sub jns pop subb xchg pop test sub mov in test sahf imul jp xchg sbb les (bad) sbb dec push shrl sbb outsb int js mov outsb cmp out subl jl adc sub das push out push fimul push push add xchg jae or (bad) notb push lock popw addr16 inc mov and jp adc sub ret mov lds sbbb adc syscall test jle outsb js jns gs mov push outsb je dec xor mov scas in push push outsb aaa (bad) test lahf aaa cmp cmp xor push mov cmpsb mov xchg (bad) in int3 nop dec lds or xchg mov jecxz fmuls and jecxz add pop sub dec outsb push in dec int lock mov es mov sub call lods and push pop js push mov and xchg sbb jo mov int test add iret xor fist outsl movsb mov mov lds clc pop push mov shrb popa xchg inc mov fdivrl sub mov aam jmp jbe xchg (bad) xor sbb ss jecxz mov aas mov mov jne arpl (bad) and scas ret sahf call aad mov xor add push aaa insl mov sarb les mov nop pop push and test lods in mov nop adc out stos add int push adc (bad) outsb mov cmp pop xchg ficompl fsubrp jl pop fnstenv or jl movsb lods jmp xor ss ds xchg das mov jbe in sti inc cmp mov pop cmp into cmp sti in jmp sbb cld add xor icebp lahf (bad) mov int in dec xor cs cmpsl mov add outsl adc mov clc mov push pushf orb sub mov in pop in out ja stc pushf xor mov das xchg rcrb pop mov xchg push cmpsb push mov cli push gs pushf out push loop sahf fnstenvs imul mov cld loopne jp pop adcb (bad) push scas mov push pop mov mov push aas pushl mov ret pop mov mov sbb scas lcall mov cmpsl sbb js imul neg inc inc sub mov sarl ds fdivrs jae outsl xor outsl stos push xor out jp sbb ds imul bound pop mov adc jl stos shll icebp mov je or call rcll mov add clc (bad) and scas dec cmc in mov dec pop push mov and cmp sub xchg lods lret add sbb add ficom mov xlat cmp scas repnz inc sbb dec dec (bad) int3 add mov (bad) dec sti push lods or mov lds mov inc fwait rorb xchg stc and mov xchg in dec or push rolb aad pop inc jns lea aaa popf push mov stc ss iret repz pop jmp xchg mov pusha push call mov mov aam mov negl mov pop dec push mov sub pop stos pop int3 mov notb lods fmuls mov cwtl popa and jne out jle,pn (bad) mov adc rol dec mov adc xchg mov sbb and add mov dec out mov push movsb aaa inc mov jle mov pop xchg lcall cli push fistp popa ljmp add cmpl fisubrl or sub inc outsb add scas sbb outsb in mov aaa xor adc imul in push (bad) jg stos jns push xor adc push mov pop in sti loopne,pt cs sarb mov les xor push mov data16 test jecxz (bad) push insl mov mov xlat cmpsl sbb dec sbbl lahf ljmp loop leave outsb or jl int data16 xor or daa (bad) mov cmpsl inc mov ja jp xchg mov xchg cli jl cld lods mov jb or stos mov xchg aaa (bad) cli xor cli adc lods test les rorl test pusha cmpsl or xlat jecxz and test mov xor je cmp (bad) pop pop inc sub pop mov xchg cs lret jecxz mov push clc out cmp mov and repz push mov (bad) xor or sub inc xchg out pop pushf mov add mov mov xor pop arpl fldcw ss sub push int loop sbb (bad) mov in xchg ss mov and mov pop dec mov nop aas ljmp lods les pop cmp mov in jge or xchg mov shl imul mov gs mov mov xor insl popa mov lcall mov enter xor fs push mul xchg addr16 shlb jb aad hlt adc ja cmp xchg ret cmp mov jns cmpsl pop iret push dec or mov jle aam lock dec cli mov int adc mov ret pushf mov leave iret mov push dec (bad) xor mov out cwtl mov dec data16 push imul push test aad pushf cmp loop sahf jle aas mov bound xor iret or dec out mov xor lahf ret int pop inc out dec scas xor push in fsub sbb mov in push xor mov fsubrl dec bound inc jle cmc fs das or in stos lods sub out or jp mov sbb scas sub adc out in test jae or (bad) mov fs ds mov lods sbb ds adc push sbb jmp subl adc jbe (bad) in test aaa aad mov push dec inc add jbe mov in adc pop aas mov in sub sbb xor mov dec dec mov out push mov and or jmp push mov pop popa add xor lods mov inc fwait jae or cmp sbb dec dec mov mov fld outsl mov popf (bad) adc das daa jbe mov or push (bad) adc int outsl push push iret push shrb xor ss inc lods dec jbe mulb lea mov outsl jge cmp xchg xor fimull push cli int3 or ljmp icebp mov aaa rcrb out mov jecxz xor or mov fdiv cli adc inc mov out lods mov jp fsub hlt dec jle mov pop jae pop mov adc cmp push jbe test push das stos mov cmpsl (bad) and sub add jmp inc pop dec pop sti adc mov inc int stc aad out adcl dec addr16 mov xor xchg mov mov int3 pop dec inc dec test adc ds sub mov mov mov outsb sub mov iret pop inc imul mov mov mov xlat cs xor sbb lea sbb dec neg outsb leave test pop or mov push scas jmp scas mov cmp in and insl mov pop fwait adc (bad) jge xchg push mov xor in lock pop add aam insl sahf pop (bad) mov test pop fmul out pop int3 nop sbb mov cmpsl icebp sbb mov test cmpsl or mov mov leave dec (bad) xor rorl mov add mov pushf test (bad) mov enter cltd lret jb cmp shrl and lock cmp pop add or mov pop nop out mov sub lods clc (bad) mov adc jbe std cmp popa hlt out repz in test inc mov iret mov rcr mov fistp mov pushf stc daa out in scas mov sbb jo add push or mov xchg jl jo jg or push mov test repnz pop push mov jp push mov dec xor (bad) insb or add jbe test cmpsl mov fs mov mov jo es cmpsl jbe sbb test in subb adc mov pop cmc mov rcll lock outsl jge xchg mov into imul push inc mov pop nop mov mov fwait outsb mov call sbb mov jg out cmp mov inc das pop (bad) aad pusha andb mov pop cmp and pop mov push (bad) cmc cmp dec mov icebp out out mov out inc mov addr16 sbb mov sti fstpt cmp push dec push in icebp test mov dec mov add or data16 imul jp adc cmp sub ficompl out and sti (bad) inc mov cmc inc xchg in jmp int pop xor leave pop pop loope or add shl cwtl xor mov and imul jns mov nop xchg lret push in push cmp lods nop sarl fildl mov pop xchg mov or dec mov inc nop (bad) xchg pop mov ret loope lret xor xchg daa je sbb cltd (bad) cli lods shll popl mov lcall in mov (bad) fidivr push xchg dec ss mov sub hlt ds mov aam das pop dec inc mov mov inc bound in mov dec (bad) out orb mov test (bad) int jo das mov std out adc jnp fdivrl pop xchg icebp sbb repnz cmp jnp,pn and popa mov xchg mul mov inc cmp and in mov pusha mov dec negb shr sub add shr pop mov bnd sub or add rol pop pop jb (bad) pop jecxz or sub jo stos jg out pop dec jno rcl test xor lret jg pop jne int xor mov data16 test push stos data16 in aaa xchg adc or insl clc fnstsw aad nop sbb jmp or adc outsb lock popf jg (bad) jge cltd dec mov pop test in dec fisttpll popa ret mov mov xchg sahf jbe out ds in (bad) pop lcall imul scas outsb mov call out andb loop sbb xchg orl scas xchg xchg decb add push push stos cwtl je iret and jnp jmp out push jmp push mov xor jno mov cmc and aam lcall mov out (bad) sub movb or cltd mov sbb imul mov sub adc and push sub dec mov fdivl sbb idivb push mov push fst es inc xchg inc push adc iret scas cltd in lods pop sub dec adc xor aad jmp jae jo sub dec (bad) push xorb jno mov test clc pushw jg aam pop and out jbe cmpsl repz mov sub or push mov (bad) xchg sahf std xchg jmp lods outsl mov jns and jge push xor andl xchg xlat mov inc inc cmp test cmc mov ja clc push push std jns xor jae cmp jbe lea push ss or test sbb in js (bad) adc stos inc mov cmp sub std add stc cmc std lahf in cmovae push jo dec pop push mov mov fadds mov test adc movsb inc push call rorl out call or push mov inc lahf ds or jmp shl push test inc xor ret dec inc inc cmp add sbb push xor sub push add das je movsb xor mov cmp push push inc sarl add movsb xor pop or fcomps pusha push sar push dec inc and xchg xor mov aaa gs leave mov test push bound fidiv lds xchg add jno stos and mov push pop xchg inc cmpsb inc test data16 mov jnp cld push jbe pop cli and push xor mov stc inc ljmp test idivb repz fsubrs (bad) pop cli aad pop mov pusha stos and dec jl dec mov push adc push sbb jne adc shrb add loope decl mov repnz nop dec inc or cs clc xor cmp push pop movsb mov ret inc push in add sub fistpl inc out mov xchg insl orl xchg cmp or imulb fist (bad) mov cmp sahf cmp fld outsl (bad) loope test cwtl (bad) or das and mov mov test (bad) (bad) fstpl sbb jecxz test push cmp inc pop mov adc push inc mov and cmp jo in cwtl sbb test dec pushf sbb jb or adc mov loop pop cli das stc sub in xor inc in jne roll mov lret jns sbb stos or ljmp jle mov push fs or sub mov push jns add roll xor icebp mov mov sahf pop in data16 fldl add jo outsl push scas add sub lock ds imul dec out (bad) movsb adc lods in dec dec cwtl nop dec mov add testb adc (bad) add leave push das testl adc xor les sahf in xchg rorb in popa test jg sub aam push mov pop dec jg fimull cltd (bad) jmp shll jae rcrl inc and out and push cmp jno adc sub and jl pop sbb test das dec push cmpsb cmp sbb sbb movsb sti orb fcom test dec sbb push repnz ljmp fldt leave fidivl lcall sub sub mov fs mov stos call std das push mov lock in push lcall xor jo cmc pusha scas icebp jmp stos int3 xchg adc in mov insl pop mov call lret leave mov out cmp inc scas mov hlt adc mov sub or ljmp mov out add mov icebp test cmp aaa jecxz mov xor sbb nop enter mov xchg push sbb lods adc aam xor pop loop fmul mov pop ret cmp jnp clc (bad) stos (bad) leave pop cltd movsb mov out int jo call mov fs xchg xchg add sbb aad lea pop daa test (bad) loope int adc xor ja lds dec pusha rcll xchg jb jnp push push pop sbb mov outsb jge popw addr16 push push cmp insl sbb jl xor aaa push rolb push push clc mov scas pushl (bad) int popa jnp sahf jg adc enter addl push add jno dec rol gs test out das leave jecxz cmpsb sbb sub lcall mov and mov mov push cmpsl pushf jae xchg nop dec adc punpckldq int3 mov lcall mov test jle mov xchg out std pop cmpb mov leave (bad) ljmp arpl pop test push lret jmp int scas test in mov int (bad) mov mov pop push sub lods dec mov dec stos lret notl pop and push shll lock jb cmp in inc bound xor xchg pop fldcw in fldenv outsb pop subl fxch in add dec mov dec aad sub sti and int push jns pop les mov or mov lret inc mov cmp mov push jbe sub pop adc fadds fisub rol add and popf mov push mov push jg xchg pop icebp mov add add adc mov push inc shll add mov mov mov pop js inc stos mov out cmp push mov js jecxz push in fwait xor in jno ds push lds shrl cmp mov mov jl scas into xchg sbb dec or (bad) mov in jno popa pop mov add stos out repz cmc in outsb cmp rcl std jo and push (bad) shr aaa fcomps stos mov mov sbb cmpsl jle popa cs xchg lock cld es pop sahf xor not mov push adc inc fist push nop in mov repz cmpsl lret fstpl sbb aas or scas lock add fsub pop lea (bad) cs mov mov (bad) lock push mov push stc mov fnstenv mov or sbb or mov cmpsl xchg push push mov xor lea pop lahf pop orb xor insl mov out call sti mov (bad) add or das or mov mov mov push xor mov mov mov xchg mov inc roll jmp fbld movsb sarl or in mov movsb sbb mov add lcall push mov dec pushf das mov rcrb pop mov push movaps adc mov int3 dec fs dec or movsl loope (bad) mov cmpsb loope xchg cmp jmp test roll xor dec mov cmp std js mov fldenv test sbb and xchg jae mov add (bad) jae test dec pusha xor xchg popfw inc mov testb cltd pusha mov dec jb and repz push sub out sti push aas inc mov out and fucom push xchg mov icebp push mov jp jg mov bound lahf mov sbb mov shr imul in push xlat mov push fmull ljmp mov enter sahf push xor (bad) int shrl xchg popf sbb jae out pop addr16 call mov leave mov mov into mov out dec sbb mov fisub mov inc jo add mov jne mov add iret pushf lret push cmpsl sbb fisubrl jmp adc xor faddl fiadd popa es cmp or cltd add lahf in cmc in lahf pop inc into mov xchg jno jle (bad) jge mov jle call add scas mov ficoml dec mov xor fiaddl jo in sbb pop push jae jnp seta add subb jp ret jecxz into push pop in in iret cmp pop jmp adc cmp cmc (bad) popf jb icebp in ljmp and xor xchg in jge out mov xchg mov lahf je ss aaa inc cmp loope adc jo jne inc mov lock jno pop jle and loop (bad) mov shl lcall mov pusha xchg imul pop lcall pop test xchg into les pop cld cwtl cmpl stos stos sbb adc data16 add xchg jecxz mov lock or mov stc lock (bad) jge inc lea mov inc in jl jne aam mov jle cld push mov shl out pop mov pop subb scas inc lretw test in cmp roll add arpl repz in xor mov stos mov and jne aad mov insl push test movsb pop loope dec jae out test cmpsb orb in notl add aaa fisttpll adc dec mov cmp in push out mov sbb xchg mov mov add cmp push add sub pop mov dec ds inc jne push mov push popa pop in push sub in das add pop adc ja shll in test sbb mov loopne repz test dec xchg pop movsl shrb andb ljmp clc mov std xor data16 mov testb push mov in int jne xor popf push or push ret icebp inc test je int3 mov (bad) out mov iret out push aaa dec ds jb push stos int3 mov sub and pop (bad) pusha fnop mov outsb jns mov in ljmp jne sub jb jle and in je pop xor cmp ret xchg adc dec dec sahf cwtl mov (bad) jmp addl jmp faddp mov pop xchg orb lahf pop dec mov in fsubrs xchg pop jg cmp push test das xchg mov (bad) pop (bad) push fmull cmpsl sbb xchg mov pop mov fmull insb bound mov sub popa arpl adc mov sub fisttp jle (bad) fnstcw pop mov mov test shll loopne mov jge sub icebp (bad) lds xor (bad) mov and inc jge lea jl iret shrl sarl pop jnp and ret (bad) cmp popa in clc adc inc outsb stos scas lods fimull mov je mov mov xchg sbb (bad) popf lds pushf jecxz xchg jg xchg mov in mov xor pop mov push mov std jnp xchg leave mov or xor lds das sti adc in js lea xchg or sbb out insl pop jns mov cwtl xlat (bad) or jnp mov cli push divb das mov push add mov push inc mov sub adc ds or ja mov nop xchg dec subl pop out dec mov inc scas test sbb mov dec or imul fldenv xchg pop rclb adc pop or (bad) cld out mov js iret ret fst fisttpll mov pop push mov popa push mov mov dec push mov mov add sub xchg ljmp ja mov dec faddl movswl mov push mov lods subb or cmp out (bad) push outsl jp imul xor mov ja (bad) pop ret inc dec lcall scas jge fnstenv imul xchg nop fcmovnu inc cwtl mov dec cmp xor iret push stos push scas mov xor jge push push aaa dec xor lods outsl shll adc scas fidivr sub cmp test push cld push in or or jae insl xor mov loope shrl sbb mov cli scas sub test mov mov or mov leave std fdivrs pop out inc mov cmpsl outsl aaa pop repnz jge mov outsb rorb mov test fisttpll and loopne in xor mov dec dec jle sti add mov ljmp outsl mov fsubrl pop outsb (bad) std test icebp jmp mov jo adc sub lahf mov jne fpatan int insb sarl push mov push jo pop into sbb (bad) in pop xorl sbb mov xchg andb mov jns and mov cld mov in sbb sbb cmc outsb out jae fwait sbbb jle mov inc mov dec ss mov out and mov jns push mov js and xchg sub mov mov push dec mov jle sahf stos pop shrb mov inc mov dec imul adc ret xor cmp fisttpll mov ficomp xor mov xchg inc sub outsb fidivl mov push out in rorl and test dec mov insl orl mov push mov jl cmpsb (bad) and mov pop jns pop (bad) mov nop xorl dec cmp mov loop in mov call cs addr16 mov jae mov mov xchg cmc mov cli pop in mov scas mov jno xchg (bad) cs idivl xlat scas cmp mov (bad) jb test test scas inc sbb stos fisttpl stos push dec xchg mov mov ret fldt pop mov movsb xchg push stos (bad) testl arpl ljmp mov or mov pop pop js push mov iret xor int and mov push cmp gs fs cmp push push scas sbb lcall push repnz cmpsb xchg les mov cmp jns test and add in mov jmp sbb jns push sbb dec ror mov mov js inc dec out jo (bad) push ljmp add dec pop pop mov add fildl sub adc aam pusha pop inc dec jp sbb iret sub out mov es sti fstps sbb add sbb loop (bad) icebp hlt shll jg stos push cmp xchg rcl outsb push dec add mov (bad) (bad) jb shrl push xor inc decb adcb stc xchg (bad) mov xor jno movsl xor sbb test jne sahf loope push cmpsl jnp sbb dec inc repz pop dec mov leave pop lds mov sub pop in adc adc in movsb mov enter test ljmp out in or mov in test inc mov and ja mov jbe mov (bad) cmovne or add fisttpl out aas sub jmp lret cmc mov or sub jp aad mov jmp inc mov out cmpsl popf and push add push sub je mov sbb mov jne add out aad lock pop xchg xchg mov mov test jns,pt pop pop cmp lea push (bad) sbb ds iret stos xchg frstor rcrb test in loope dec xchg jae xchg sub cmp and add xor arpl fs sub jne cmpsl sti xchg cmp outsl std and (bad) lock pop cmpb mov js (bad) in mov dec push mov or or sahf data16 int3 jo shll xchg shl sarb int3 and or adc icebp aam add loope inc test int3 mov or aas mov mov lret mov adc nop xorl loopne jmp add xchg cmpsb das js or out movsb daa jnp and dec fisttpl mov mov fpatan mov or js pop mov fildl xchg mov rcrb sbb mov icebp jecxz mov cld inc inc cwtl shrl mov xchg mov sahf mov inc dec cmc cmp and mov pop loope leave cs bound in push adc cld xchg mov test adc cmp test ds sahf jbe jle sbb mov jl dec clc sbb mov cli adc push aaa jno iret sub mov cmp rol mov or add xor xchg nop mov out xor xchg mov sub xlat inc mov push or int cmp add lods sbbl ljmp mov cmp jo adc (bad) call std mov inc lcall or f2xm1 mov iret aas dec push dec mov ds in pop lock arpl xchg push in (bad) scas sub mov mov loope mov mov (bad) lods inc mov push clc inc push mov push cld ss pop mov push (bad) push cmc hlt in cli ror xorl jbe pop addr16 (bad) cld andl out mov in (bad) dec push xorl mov push add ret stc push icebp (bad) or inc out push push jp sbbl (bad) pop mov xchg mov cmp movl cmp pop lds jns imul insb xchg mov sub in repz out sbb daa jb xor xchg mov adcl out jno rorl fnop jg mov mov inc ds xchg xchg adc jno xor (bad) sti sbb jbe and mov ds std js push and out pop xor jo sub mov in sahf loop mov pop push sub push test mov dec shll leave mov in loop out stos lret loopne dec in jno rorb pop popf out mov popa jmp hlt mov sbb dec movsb jp loop sbb mov jge les mov jmp mov sbb hlt mov and fbld (bad) std inc movsl jns mov mov pop mov xchg out stc mov sahf push mov sar mov dec push ret mov mov and into (bad) xlat in int lea jnp stos stos cs mov int sub inc dec into int add mov xchg idivl out xchg and xchg pop aam nop push loope fmull loopne out mov xor jge mov lret cmp mov and test push sub xchg bound stos (bad) in aas mov ljmp mov cmpsl fnstcw arpl add stos push (bad) shlb dec jb cmovbe cltd ja mov sub lea mov inc test out fstl (bad) mov insb es or ja aad or xchg outsb add pop push jge mov out cld into adc pop mov mov lods out aas inc xchg mov cmp or push push mov push mov (bad) pop cmp popa push iret mov jbe js jae xchg mov lahf mov mov jle fist pusha inc mov rdpmc jbe ljmp test pop lea mov ss inc push inc mov mov jo,pt cmp xchg (bad) lods pop jmp repnz or nop xchg mov (bad) scas lret mov das je aaa jne pop lea out cmp mov std adc cmp mov adc lea movsl xchg fisubr lea lds jae pushf mov cltd dec loopne,pt pop mov mov lods jl movsb inc fsubrl mov mov (bad) sbbl outsb push or adc mov (bad) iret cmp xlat mov push jb rorb adc lahf ret in outsb jb rclb mov ss or neg and test mov loopne test or inc aaa mov cli or lret hlt (bad) in in dec push dec fiadd adcl or adc lock andb add dec enter (bad) lahf mov dec push mov dec mov push jp repz shlb pop mov push mov fldt xor jecxz out sbb mov mov push inc out (bad) and bound sbb jmp in lods mov jge lea inc aam pop pop test in and dec mov xor adc push pop addr16 or int repz jge add pop cs dec in outsb andb push xchg dec cld (bad) xor jno lcall out lods shr ja jle les xchg loop mov enter jae or push xor rep lods dec sti adc mov push lods cmpsl jne mov imulb mov sub or sbb jo (bad) in xchg sub push rclb mov pop stos rorl jbe (bad) into mov dec scas loope mov mov dec mov inc fiaddl insb add sub xchg xor mov outsb lret lret push into mov xor cmp or faddl mov outsb call lea cmp outsb cltd les daa insl inc fstp mov data16 inc mov mov leave (bad) mov jmp mov or adc mov (bad) mov (bad) aaa pop mov in dec jno push mov adc or test xchg in in jp lods xchg xchg js movsl movsb aad mulb test out xchg addr16 inc cli inc (bad) stos stos mov int3 inc pop dec fidivrl push sti scas ds add out mov xchg in popa jae mov or aas test xchg mov push adc push decl push jl test lahf out (bad) push cmc mov adc fmull data16 add lahf fist test call int decl xor jae mov add ficoml dec aam (bad) cld pusha mov mul ret adc pop mov xchg push adc test cmp ret mov mov push and push js nop dec negb dec out xchg out outsb outsb in or repnz gs mov js int3 add push or adc mov push mov xchg out xchg pop sbb push arpl (bad) xor out notb adc (bad) xchg xchg je jbe imul xlat in cmpl bnd (bad) jmp popa pop addr16 in movsl inc std rolb xlat cmp sub mov push shll test repz or xor jmp inc inc xor cmp mov xor cmpsb outsb test jne cs mov mov xor dec push mov dec in daa or or sar fsubrs cmp pop inc or loop jg add jecxz jns nop lahf push mov sbb add inc cmp adc ss jmp ss sarb push adc ja subl mov xchg test insl popf int3 sub outsb cmpsb xor in ss jne pop (bad) leave gs adc adc mov orl push jmp add inc push dec inc add add adc bound pop cld cmpsl (bad) adc push lea enter push scas std clc in ja pop into stc (bad) outsb movsb out ss adc inc fisub mov xchg mov and popf je xchg mov and mov push dec mov or idivl lret cmp inc mov int jae xchg xlat mov adc aad jle (bad) fdiv xchg inc xchg mov mov lret mov inc in xchg imul insl stos inc push mov nop enter push xor fdivr rorl inc arpl push or sahf adc out sahf push mov clc mov scas cmp dec or mov adc push sti mov jmp (bad) (bad) mov jle sbb (bad) add pop mov xlat es or add jp jno incb imull dec test pop out test mov jmp test pop hlt xlat jmp jecxz jae add scas mov ds pop data16 xchg and cmpsl mov aad mov ja pop jle outsl pusha je,pt cs test je pop jae cs push mov sbb and cmp push lds adc cmpsb and lret push sub pop lods into sbb push push stos lods xchg outsb sbb lds mov (bad) lcall mov pusha mov int dec jg jp cld add jle aad dec or cli xor repnz add mov jle iret xor mov mov or sub push mov dec inc (bad) (bad) fisttpll sahf icebp adc xchg scas stos lret or das add (bad) in pop sbb test out cmp nop xchg ljmp add cmpsb cmpsl sbb add cmp das adcb mov push lock out push daa adc mov into pop pushf ljmp xor cmpsl addr16 dec hlt inc cmpsl fcmovb or or sbb mov add subl xchg inc pop cmc xchg pop scas adc pop jbe popf jae test sub inc xor or mov fs and in movsl ficoml scas jno out pop push ficomp in inc mov call jo or aaa int lahf movsl popa jae mov rcrb xor in loopne mov ljmp adc xchg aad das adc jbe pop arpl shrb outsl xor icebp jp cmpsl dec xchg adc push hlt stos mov lret adc mov lds lock push sbb fcmovnbe aaa in inc push mov (bad) and fildl pop inc repnz add aas (bad) jl sbb and push (bad) (bad) mov pop pop jo add std or lahf adc jnp loope mov lods mov rcll mov inc mov cmp cmpsl pop sub inc mov push mov xchg lahf aam lods bound and xchg pushf jae jb push inc cmpsb pop dec les lea dec nop setle leave xchg dec int3 mov mov pop lock adc push xchg in or testb insl call fmul int lds imul out adc mov cmc xchg (bad) roll (bad) push (bad) lea (bad) std push mov roll mov int dec aaa dec mov inc popa int3 fstpt int and or inc out out push mov test std fisubr add (bad) aaa xchg or mov loop bsf sahf lret addl push mov mov dec mov sahf rcr xor ja stc ret in call mov stc int inc and sbb subb fstpt out ret js loope fcmove push mov (bad) shrb popa push fiadd mov imul int cmp push (bad) mov sub cmpsl push test mov add inc pop mov sbbl fwait out setns lcall orl out mov push adc es hlt ljmp inc mov push arpl cmc or testb xchg push shl and out ret roll cmc add jp add (bad) sbb mov mov bound cmpsl nop cmp fild mov mov stos add in repz lahf xchg jnp cmpsb add shrb mov mov ret movq or pop mov inc jae inc pop mov (bad) lcall dec xchg scas je jbe popa mov cmp loop cltd dec or inc push xor sbb push outsl sub in leave push sahf jp pop in xlat int data16 and mov sub xchg inc lods and xor cld mov fiadd adc shll outsb sub and cmp xchg mov pop fnsave adc mov imul cmpsb in sbb jno loopne xchg adc ds (bad) push (bad) mov jae jns ja dec mov mov setbe in std inc movsl pxor fild leave test mov jmp ja int xor mov imul fsubrs jb stos in fistpll mov test push jne push sub in or hlt scas stc or icebp int cmp ja xor sahf fs cmp jmp ljmp xchg or data16 enter into lds mov test dec or dec pop xchg jp and push push aaa decl aaa rcl or ret cmp int jno mov scas and lret mov cmpsb xchg add pop inc mov daa xchg inc in sbb dec pinsrw inc mov mov or sti int3 inc inc mov movsb pop fwait push sbb inc mov or scas push (bad) rclb lcall add push xchg pop mov ja aas jb lds sbb das pop jmp ds inc pop fwait int call ljmp push dec add cmpsl fimul rorl jbe out insl inc divl mov lea fldcw inc test inc dec or adc mov in inc mov dec fidivrl mov mov cmc fsub sub cmpsb mov xchg xchg stos mov dec mov int3 iret push or lahf xor xor fmuls and xor cmc test mov xchg in and mov mov xchg push mov (bad) mov xor lahf in jmp jl cmp jno add (bad) add and or popa cmp stos outsl scas sbb in push test lock fcomps addl (bad) dec dec fnstsw cli (bad) (bad) outsb mov or mov mov and outsb push mov adc xchg sbb je jae stc adc mov loop ljmp in repnz jo fwait outsl and dec scas cmpsl push dec rorl mov (bad) ljmp lea (bad) cld pmuludq sub pop pop inc sub (bad) sti pop xchg fidiv in jo roll cmp es or lret bound inc insb dec jbe iret out repz (bad) mov arpl fbstp lahf add mov jns (bad) and add push jnp outsb in mov mov inc cmp aam cmpsb (bad) xchg jbe cmpsl xor popa clc sbb cmp mov lret pop in test stc and jno cld mov jp arpl sub jmp jbe push mov and and adc aad in inc fwait popf aaa in cmp sub xchg cmp enter fisttpl xchg jne es xor and pop jge push add insb dec lods sub push daa lret nopl repz lock dec cmpsb clc scas sub ret mov hlt push ret inc xor ss mov jno cmp and insl or sbb lahf bswap and xchg arpl (bad) mov ds gs (bad) in cli cs and or dec push andl ljmp cmp inc icebp (bad) add stc pusha push movsb mov ljmp sub mov cld mov xchg xlat fnstsw stc test fiadd and out les es mov xchg aas jns (bad) xor pop std bound into mov xor sti mov dec xchg fisttpl push xor mov jg rcll xor dec sarl and sub sub xchg sbb sti push addb inc mov jle mov push or loopne pop mov fldl mov mov adc jge pop stos mov lret inc rcrb idivb loop jnp mov shrb adc outsb dec fsubl lods es addr16 aaa sub push adc jae jmp sub sbb std adc call icebp xchg push sub cmp andl jb add sub lret neg or sbb ljmp hlt insl mov add outsl daa mov mov xchg push or sub mov nop ret in push fldcw cli leave cmp inc lea mov xchg rorb aam push cmp out arpl xor int3 fwait shrl jae,pt cmc mov mov adc xchg scas rcll mov (bad) mov jmp mov xor mov clc xchg insb pop adc add pushf xlat push into mov cmp pop xchg decl and mov and or mov repz (bad) inc aas imul ds mov sub sbbl sbb add outsb movsw push movsb out mov push iret xchg out sbb out into push ss hlt and rolb xchg pop pop jo adc mov int xchg dec push xchg sbb push ja xchg repz pop addb cs pop out pop imulb (bad) push mov pop xchg cwtl scas adc xchg jge rorb and dec mov and add mov pop daa nop jp mov xchg and pop fildl sub and repnz pop das jge aaa and jno fwait mov jae cmc test inc xlat out jmp repnz daa idivb jb push jnp add fcompl dec aad sub xchg lret imul and sub push nop nop mov cmp gs mov cmp or inc jmp push std and inc mov mov mov push cmp mov fwait jno inc mov sub xlat bound dec mull add jle test fstps cltd push in or outsb xchg dec or into (bad) jge mov mov push jmp pop pop mov fsubrl mov jge imul mov mov cwtl mov xchg or insb mov (bad) xor cmp imul (bad) les mov pop xchg adc insl mov adc dec lods adc sub pop mov mov push or inc jp (bad) leave sub push aad or flds inc adc xchg fidivrl mov outsb cltd shl xchg in fisttp rorb lcall pop dec push adc or mov xchg rorl mov mov enter xchg jb adc (bad) push xorl in gs mov fisubl jns mov cmpl in jns outsb hlt insb mov sti cmpsb add adc (bad) mov dec cwtl mov (bad) sub stc mov cmp or sahf arpl jmp mov pop fsubrs cmpb add repz sti xor fnstenv outsb sahf pushf data16 dec mov in lcall xchg jl test jno push cmpl bound xchg push fmuls adc xor cmp into add aaa and cmp imul mov pop ret ss add mov sub pop shr mov outsb ljmp outsl sub mov inc pusha push or jno test mov adc pop add xchg xor test mov fadds mov pop mov data16 mov jp ja jle cmp cmpsb in cmpsb in mov leave shrl out mov mov in push jl mov shll or or mov in adc add fcompl push pop xchg movsb fisttpll or rcrl mov dec xchg mov jno int3 rcrb pusha sbb dec int das nop inc mov add ljmp lea dec cmc dec add sub test in movsl add lret in add cmp pop hlt add xor add fadd stos push mov or mov sbb ss fcmove cmp mov inc outsl push scas lahf or jnp push orb clc or movsb lods or lods jp test sbb jb mov pop sahf mov outsl sub push sub mov clc push pusha sub jmp dec mov fmulp mov cmc mov mov out xchg cs aad arpl xchg shl mov jp popf jg divl mov adc mov xor xor or (bad) cld fidivr mov adc jl push cmp in adc and cmp lret rclb jecxz mov jp pop or fwait jecxz jg sbb push and mov nop jecxz test cmp mov (bad) movntps push mov popf mov inc dec mov push ds mov xor xchg lea dec mov call mov push jecxz mov push ss xchg fcomi and cmp add ja mov cmpsb or mov les mov mov jno lods xchg mov stc dec xor testb xchg mov adc lock mov mov mov ljmp pusha fistl jecxz or ret add jle adcb icebp jp and pop out sbb (bad) jbe in (bad) mov inc ja lret (bad) mov (bad) ret xor in dec adc jne test and xor mov jae cmp xchg mov and cli xor (bad) xchg xor inc push std ja (bad) lret dec push in mov fmull xor (bad) stos cwtl popa push jae (bad) pop inc jl mov jne js in mov nop cltd loope or mulb mov les push in sub jbe pop adc mov (bad) lods icebp leave push sbb jp inc inc jbe push (bad) jo adc test push fsubrs popa add enter fiaddl fdivrl jns push mov mov mov into arpl mov add sahf mov in cmpsl dec sub imul (bad) int3 shrb add stc rcrb shrl push push icebp ds aad aas lahf gs sub and inc dec fimull inc ret iret (bad) pop es push outsb in jno add addb and mov data16 jne (bad) mov inc xchg mov or or das insb icebp fsub mov cld rcl out and cs cmp jl sbb aaa dec (bad) rep adc ljmp std cmp test push leave test jmp dec (bad) in lds add test in int or in int in push cmp (bad) dec loope inc jecxz push add mov insl inc int3 test std hlt aad inc sbb scas xor pop outsb (bad) pop jne mov inc rol xchg mov movsb sahf jno xor mov push jne (bad) and or loop jecxz int sub mov out notl add mov push sbb mov dec ret xor jns ss movl fwait mov ss scas jmp mov jbe cmp fdivs and lret arpl int dec sbb stos adc jecxz nop (bad) rorb (bad) mov (bad) mov dec jae test mov mov or (bad) mov dec out aad adc pop test xchg jle mov subb jo lea dec push imul mov sbb cmp lret jb ret fwait hlt sbb mov mov loop mov or mov mov test imul in aaa jno dec (bad) adc inc xchg gs fimull dec inc (bad) adc and or or fcoml push jl sub test sbb mov jbe aaa outsl cld fisubl push xchg (bad) cs and inc arpl mov cs (bad) in inc push mov push mov inc mov push xor jmp pusha mov sbb add insb outsl or mov or mov lcall loope or sbb ja shl jle xchg jge xor pop xor out clc jecxz jg mov sahf dec mov jl std js dec or test inc adc mov add jle cmp sbb push arpl and mov push push pop jp scas mov adc wbinvd in cmp jmp mov adc lret xchg enter inc mov pop idivl jo mov cmp stos and sbb mov in fwait pminsw stc push into or dec xchg mov loop int3 movsb xchg out push mov mov xchg and jp sub mov pop dec cltd mov sub insb dec loop and pop xchg inc sbbb push sub cmp push mov loope xor std jae adc jo push scas dec sub jno scas cmp addb cmp push xlat mulps mov sbb lcall arpl cmpsb sahf pop push sbb dec cmp in lret je cli cwtl mov cld fwait jecxz sbb push fldenv in subb mov push mov pop or or (bad) xor pop fild mov movsb jecxz dec fdivrl ret fyl2xp1 dec mov jno adc dec outsl cmp fdivr push les mov icebp xchg test jns fwait sbb dec out adc (bad) xlat sub sub lret fsubr in mov sub inc mov dec test mov mov scas andb lret and or nop mov mov cmp mov ss add scas (bad) (bad) jg add adc mov sub (bad) repz (bad) sub aas loope sar push mov je inc xlat push xchg decl outsb pop inc pushf fcomip mov icebp pop lcall push mov mov jns jle cmp mov (bad) cmc xor test ss in xor (bad) mov jle jmp ret loope imul and test stos mov xchg out xchg inc ja mov jmp in repz mov sbb pop in xor mov (bad) cmpsl push inc adc ja push lret mov mov jns outsl (bad) or fwait imul adc push mov add dec add sti sub lock aaa mov mov out sbb jb jge push out and int3 xchg sub mov jo push push scas mov test popf out movl int3 lret xor mov xchg jno push push aad pusha mov aaa jmp cmp std mov dec mov pop lods mov and std dec lea cmpsb mov sarl in pop dec (bad) int3 push jae lret fnstenv cmp mov xchg mov jle fiadd popl mov cwtl xor mov ss dec test fcom dec imul scas push das adc mov adc mov sub mov sti icebp fcompl adc lds mov inc (bad) leave cmp sub outsb in cmc add or cmp cmp lods mov in jg sub mov test es sub stc int3 ljmp push in pop push in ja xlat int and insl movsb in cmp fstp in fucomp pop test dec push xchg lea ja sbb xor jmp jge in mov fcom (bad) mov out mov mov stc mov push mov es and mov out andb mov daa and (bad) or xchg in mov inc (bad) shlb mov outsb repz ret ret test fimul pop add repz push mov mov adc test fidivl xchg lea (bad) sbb pop pop pop jae ud1 push bound mov inc inc jp pushf cmp cmp out out (bad) stos scas fwait adc dec mov ja add push hlt movb cmpsb mov imulb mov aaa push sub cld fnstsw pop js mov incb or pop adc mov lret or fwait test mov and nop xchg jge mov push cmp mov xchg in mov inc ficomp xor lret push mov inc push mov mov pop sbb cli mov sbb popa test pop fisttpll fxch and mov int insl ucomiss adc pop cmp and mov jne aam (bad) dec cmp pop cmp std xor fcomps cmp cmp je ds add int cmp ret sbb mov jg es lods shll lret int scas xchg mov enter and push push test xchg push cld dec or scas mov in push or hlt mov add cwtl es lcall inc mov cmp jecxz pop jbe lea sti push xchg sub je and std push js hlt mov push mov inc dec fcmovnb rcrl pop popa stos ljmp clc (bad) (bad) mov sbb aad add sub cmp mov mov hlt mov jmp xor mov repz call jmp in cmp dec jbe fwait mov lret les lds dec (bad) xor fiadd sbb clc mov jmp ret out dec cltd das xchg cmp lahf lods add dec sahf rcl cmpsb jae lret push (bad) mov mov mov pusha and lret sub loope movb rclb add sub sub jg movsl push mov (bad) pusha mov cs inc add pop scas sbbb jge push add dec mov test lods enter int3 leave xchg ljmp cmp lea jle movsl fisttpl sub mov xchg fidivrl and loope cmp imul mov add test in sub in in mov push in out mov push mov mov mov xor enter mov cmp jne pop lds mov ds jbe xor pop mov lods mov (bad) insl mov call in sbb clc xlat in lret pop add jns push xlat test iret mov mov sti jecxz xor mov rorl or adc and nop mov in push adcl jo inc jno adc and push subl (bad) xor lret add mov mov sub in cmp pop pop inc cltd mov (bad) adc xor mov je lret mov inc lock push xchg xchg pop jmp pop sbb mov jmp in into js iret jae outsl lahf ds jl cwtl outsb fldt pushf mov add mov sbb sbb dec outsb jle cmp out cmp icebp mov imul lret fistl sbb dec (bad) cwtl sbbl inc in cmp ja xor ret xor stos or ja push pushf push mov jge mov adc cmpsl das sbb mov or push out or je ret lcall mov jge cs test mov ficomp lods push jns mov pop jp push aad mov movl fildll sbb loop mov xlat and aad add jns add (bad) fdivrs and ret inc lea addr16 ss in cwtl sbb lahf pop sub cmp cmp pop gs mov test mov mov outsl pop nop xchg cmp sti fldt dec bound mov scas sub clc or rorb cmp and mov jmp xadd sub jae xchg jmp inc stc mov pop insb push loope mov leave jbe mov push sbb movsl and jp sub ret scas sub cld in fistpll adc cmpsb popa insl pop clc sub iret fbstp dec in mov push repnz nop sub xchg inc in mov stos loop dec push in pop mov sbb cmp jmp sti mov (bad) dec xor ret add dec pop outsl test cmp test push ja imul cld push lcall adc cmp adc cmp bound mov enter fidivl inc cld je stos rcr je dec int3 in mov jne or cmp data16 xlat pop dec push shr in xchg xchg pcmpeqw dec in push jge mov inc mov das sbb pop adc nop mov hlt ror add loopne sahf xor ds cmp out mov jno push and pop cmp adc js cmp mov cli push inc sahf mov mov or (bad) negl cmpsb xchg jbe rorb sbb stc adc stos lea ret rcrl jbe dec push sbb jl dec mov bound xchg (bad) stos mov sbb popf (bad) jecxz mov push lcall and mov ficom mulb jecxz inc sbb mov add and pop loope mov dec mov (bad) mov add test ffreep push dec inc or insl lret mov scas lods into adc mov rorb push push call out out xchg fdiv mov push cmpsl int3 dec mov aas pop icebp pushl sbb mov out (bad) and sarb jbe mov enter test int3 xor xor in push mov fiadd cli cwtl pushf push push jo cs dec jno sbb js mov jg in mov cwtl rclb mov mov push lea ja mov inc add xlat outsl adc xchg and push mov fildll sub adc push xor xchg andl sub int add xchg mov sub xchg rcl fidiv inc or in or cmp out dec in repz xchg push lret (bad) and pop xchg loop imul push cmp ret dec imul roll inc scas pusha mov jo mov sub mov pushf fisubrl movsl cli popa xor mov jmp xchg and outsb jecxz lods stc mov push cmp loope sahf (bad) out and fwait jae dec pop mov push or add fcomi jo mov inc and push xchg or or xor sub fisttpl push fcmove cmpsl pop js mov xor pop inc in pop insb aaa push ds or push sahf jl daa loopne dec push dec dec and jmp adc dec es or (bad) push dec cmc add mov dec push aas push mov aam add ss cmp pop pop dec adc xchg xor pop push cwtl movsl push ds push cmpsl xor xor int3 imul pop xor or adc rorb jge dec sub loop lret test hlt ljmp rcll out addr16 jg fwait fwait imul inc xchg jp cmp loopne xor pop fstp xor mov mov add pop add dec sub rolb dec movsb rolb mov icebp outsb push jl sarl insl mov and outsb gs jae jge cwtl movsb add insl jmp pop mov mov sub pop mov jno xchg (bad) in adc push and jl in lret es mov pop stos pop in (bad) jne mov out pusha adc sub sub inc scas lock mov adc sti or sbb mov mov xchg mov inc (bad) inc push adc movsb (bad) jbe loope add mov mov js in mov iret fsubrl test jo mov mov cmpsb lret add in insl ds inc ja movsb adc pop outsb inc xor test xor mov add sbb jg adc push fwait pop inc iret add and mov add mov pushf into (bad) mov popf stos mov in in mov dec xchg (bad) cmp mov mov mov xchg fidivr (bad) fmull sub repz xchg or xchg adc (bad) mov fcmovb mov in jmp xorw pop cld cli sahf pushf cwtl dec rcl or or dec (bad) addr16 xor dec js xor movsb clc mov or sbb rorb sub (bad) mov jecxz push sub fdivr loopne add in mov into mov int push aas sbb mov in (bad) iret popf cmp out cmp adc or leave sbb shlb sti add mov popa test cmpsl loop push sbb pushf dec sbb add aad arpl fsub adc inc ret jmp pop adc lret (bad) adc mov sbb mov popf in inc fmuls add xor icebp lods dec xchg cmp inc jae push (bad) in sbb mov test cmp pop in dec ret or sub or sbb mov ja adc mov (bad) cmp sub push inc cmp inc mov (bad) out jmp cmp aaa int popf cmp jo sti es or mov in mov jmp xchg push and pop or dec mov xlat mov mov push inc inc fimull lods out insb je in mov insl rorb test test mov cmp fwait les xchg inc lcall mov aad out sbb mov std push int xchg dec adc loopne (bad) mov add mov pop or std push mov mov sbb mov cmp repnz xor test das int mov (bad) xor add dec movsb fildl push mov scas mov in sbb bswap movsl data16 outsl push (bad) repnz fbstp inc and add out cmp or xlat leave dec or les cltd jns aad in push cld mov mov cmpsl xorb xchg xor xlat cld adc aad mov push jns fisttp es sbb dec icebp stos or inc mov pop inc pop push out neg int jae in fldenv add decl add cmp xchg add mov sub aad cli lea jecxz cld xor mov cmpsl sub adc xchg adc jo cmp and scas sbb adc cs shlb addr16 ret cmp popf and mov cli mov sbb popa (bad) fnstenv mov cltd pop out sub mov test insb pop and mov jnp push xor xchg dec test xor or lret movsb and je test jmp mov mov xchg fnstsw dec fcmovnbe inc xchg push nop push mov mov inc sbb hlt sbb push push rcrb pop and adc jmp dec into iret sbb orb add mov jg push inc or js sub and mov add leave loopne out (bad) mov test gs jns fwait mov repnz inc sbb mov punpckhwd xchg mov push add mov jecxz int add repnz pop mov leave inc sub rorb mov cmc cli int jmp mov out sarb mov (bad) enter lret cmc xchg or popa fdivs push mov loopne dec fwait in sub jne lds dec leave mov mov popf jae pushf mul mov divl popa cmp cmp mov sbb sbb inc mov and fdiv pop jno mov sbb jp lea cmc hlt dec (bad) cmp mov push jae pusha mov jecxz cmpsb xchg sub cmp in int3 mov xor mov loopne xchg pop es mov leave rcl dec mov adc (bad) scas jp inc inc (bad) mov adc test fisttpl out jle and inc jae lcall outsb mov or xchg scas lock shll or int3 pop mov mov adc push mov jmp add jle aas push movsb fcomip inc mov or (bad) mov jge test mov cmp jo dec cmp decl jmp lahf fild cmpb decb add inc adc int lods sbb xchg hlt push push icebp lock mov push and daa adc int3 sbb ljmp (bad) std in mov push xchg movswl push jne cmp mov cmc mov int3 mov stc in or sbb call in add cwtl iret add fdivl in xchg in nop push imul (bad) (bad) push rcr cltd fsts ljmp sti ja adc push shrl jmp lcallw xchg cli add rorl lods sbb aas cmpsb jecxz enter jle xchg inc inc sub idivb push in fdivp push mov xor das mov aam dec shll mov mov xor rcl pop xchg jo (bad) jle dec xchg dec pop movsb and fucomip aas movsl aas jg scas test sub xor sbb inc mov fsubrs inc cmp push (bad) in outsb jnp cs dec rolb add imul into add (bad) mov add jmp ja cmp jl fsubp xor cwtl add lret test in inc (bad) dec dec jmp or movsl outsb jns or lret cld mulb mov mov mov in jno (bad) xchg jb cmp add es mov ljmp out xchg in dec push shrb lods and rcll add aaa inc adc movsb ljmp jo push push pop (bad) popf (bad) std enter xlat cli adc dec mov loope imul sub mov fsubrl rol cmp jp insb jmp (bad) pop lret ficomp xchg sbb mov xlat pop (bad) push je fisubl test ret sbb add inc add out mov scas jns dec sub repnz adc xchg adc pop stc cmp cmp sahf stc or jge xchg dec leave adc ss icebp inc pop cmp ficomp jo inc or enter jge,pn test aaa cmpsb xor fwait outsl inc mov mov mov mov adc dec jae div pinsrw jnp and adc or jmp stos push jb or mov ljmp mov push bound xchg icebp pop and int (bad) loopne into add fmuls xchg and sbb cs jo daa xchg insl jnp mov add in data16 or sti jl movsl lock test cltd jge and mov int3 xor cmp mov cld mov adc sub add add mov sbb cmp lcall sub adc pop or push pop jecxz mov sarl mov leave movsl lds adc cmc cmp fwait in test arpl test dec outsb loop ret sti scas xchg jle bound fnstenv stc pop inc mov jo and fs push xor inc ret loope jae loope or in sbbl inc pop (bad) das out loop cmp cld iret js jle sbb or rcl sbb sar stc scas pop and cs inc pushf sub addr16 xchg mov push out or sub sarl mov jecxz xchg dec fcmovne xchg fisubr iret or add or inc sbb aas dec mov sub or push sahf dec orl in push add in push (bad) rorl mov adc pop arpl fcoms testb sub add cmc scas xchg mov out mov inc movsl jns xor pusha mov pop dec or cmp add xchg mov pop jnp in and lock sbb (bad) cmp lahf (bad) jp or push out stos xchg jae push arpl ja push lods xchg mov cmp xchg xor push sub shl dec add addb jne ret or sub mov in mov (bad) into jae mov mov xchg loopne lcall daa lock stc and mov insb dec call mov xchg pop es jns gs dec mov jbe inc jle add jle lfs repz xchg pop cmc jg cmc adc outsl xor clc hlt cwtl xchg xchg mov xchg inc mov cmp out and dec leave xchg jae rorb pop rorb stos mov pop inc and mov or push mov sti (bad) (bad) pop inc addl lods fwait lds mov xor aaa dec push out cmp jne (bad) add xadd mov daa pop cs mov imul mov dec scas jecxz cmc mov mov add mov sub aaa lahf jmp jmp cmp gs mov add dec xchg mov mov daa (bad) icebp dec scas enter sub movsl out and mov push fdivr out (bad) sub cwtl pop idivb mov shrb mov pop adc mov and loope mov pop cmp mov mov sbb sar pop stos mov sbb mov cmc add dec cvtpi2ps mov test scas ret test pop jbe (bad) or mov jmp mov push dec enter push mov fs xor dec mov xor std dec shll mov or cmc in dec stos mov (bad) int3 out in jbe aaa mov inc ss sbb test lahf int cmp xor sub fldl and mov out cs ret (bad) mov cmp jns mov jne,pt repnz cmp pop dec xor test jle scas mov dec outsl mov mov movsb sbb push push mov cmc add jb mov push stc jnp (bad) sub js (bad) and and mov es pop mov icebp push mov dec xor cld mov in dec inc decb in push cmp mov stos stc adc xlat mov or mov inc mov mov lret (bad) xor shrl mov les pop cmp xor mov or pop lods cli push cs pop mov fwait test clc stc ds js out aas push mov add xor mov fnsave pop xchg mov mov mul insl lock jle leave aaa xchg adc xchg sti out int bound movsb mov mull mov pop pop pop push mov sub jecxz inc dec mov cmp popa mov test fidiv fstl cmpsb gs and test pop push mov mov xlat inc jns mov icebp mov test add xchg or stos bound (bad) in testl aas inc inc in mov and jl movsl mov addr16 sbb js add jns adc pushf mov push dec mov xchg call lahf push lock and cmpsb divl mov fimul (bad) adc pop jae ljmp xchg repnz ja push loop jle adc les (bad) push out pop xor popa fwait or into mov push pop jbe mov aam int in jecxz arpl out sbb mov adc call inc sbbl jp pop jo addb lahf ljmp xlat or sahf cld popl testb inc cmpsl in and test push mov pop or mov (bad) repnz push pop ss jge mov outsb pop jg in xor mov jb out (bad) sti add icebp test push (bad) push lds adc jg jo,pt stc imulb fwait cmp sbb fldl mov loope mov (bad) xchg xchg mov sbb mov cmpsl adc adcl test clc inc mov iret jns sarl dec lahf pop adc add adc testl cmp sar inc loope push mov jecxz mull insl mov lods jmp push fisub outsb and fsub pop nop add mov into rorb push (bad) mov pop fs das in in xorb outsb aaa push mov stc adc int xor fisttpl lcall xor in xor mov enter sti pop outsb jo cmp scas mov or mov in test push sub test cmp lea and xor or mov dec mov mov adc inc mov dec jmp scas call int sub lcall out cwtl jmp into lret cmpsb mov movsl mov mov or dec in lds jmp pop mov add cwtl mov lret add mov movsl out adc or call cmp gs or mov push es push fisttpl sbb jne shll popf pop sbb pushf push adcl int mov outsb sub leave notb mov inc pop jg sbb loopne push mov dec in nop rcrb iret stos add pop dec out cmp mov mov dec pop out mov push mov lret or clc (bad) mov fildll dec adc push xor xlat int3 mov and xchg or pop xlat dec inc iret inc lret js insb mov jp les xor aas (bad) lock inc jno jb push scas dec movsb xor pusha inc insb jbe test push sub mov pop incb jae outsb xchg fcompp aaa ja stos jp xchg xchg lea cltd dec lahf movsb dec (bad) cmp push in mov lods sbb cmp js mov push iret dec add lds mov push adc xor insl sti mov cmp shl enter or push ds sbb popf jmp popf data16 cmp aad dec mov lahf adc lods cmc mov mov mov dec xchg add testb test out lret fwait dec hlt stos adc nop sub dec mov push into lea mov dec jno hlt int (bad) mul scas pop aas lcall jo mov mov add sbb jecxz jns aas sub dec sar jne in (bad) je xlat imul outsb inc inc mov in inc inc arpl jns iret fild icebp cmpsb sub inc xor addb add fs sbb sbb jmp xor mov test cvtpi2ps cwtl dec sub ss (bad) (bad) sbb cmp jno mov sbbl fidivl sbb fsub xor je dec in notb (bad) fsubs mov mov fs or les cwtl xchg mov adc jns sub add (bad) mov sub adc mov int mov dec lods pusha mov addb (bad) dec dec sbb (bad) ja lret icebp cmp leave xor popa std or mov mov stos jmp (bad) mov mov cmp xlat (bad) inc mov xchg mov imul ss push mov sbb lods adc cmp fisttpll jo and mov mov and js lahf cmp pop inc xor xchg push movlps cmpl cs pop (bad) lea in int shll lahf push push cmp jp jb jae xor icebp aad adc and (bad) jbe outsl pop mov loope inc jle inc jbe cmp pop imul adc test aas cmp add push mov jno lcall in push fisttpll outsl (bad) seto lods inc sbb adc (bad) stc mov push mov outsb xor dec in int repz dec xchg adc jmp ret outsb cmc sub xor push jne dec mov stc rcl sbb jecxz mov fildll scas adc jecxz mov mov imul cmpsb inc xlat fisttpl mov or add ds sbb jo out mov sub jmp test imul mov adc xchg cmp hlt or mov adc push in xchg mov jns sbb sbb mov ljmp rorb xor cmp push adc cmp jne fcomp cli and mov shll lods mov adc int int3 xor es cmp sbb jno lcall popf (bad) or out push xor push ljmp mov loop (bad) gs or jmp mov jge scas test das popa mov jl (bad) fidiv pop repnz mov jle (bad) sar mov (bad) rorl adc mov mov xchg xchg adc fwait xchg mov or int sub lea stos cs fst push mov mov xchg movaps and pop mov mov inc pop mov inc push adc mov adc jnp mov mov cmp lods mov or dec lock sahf xchg fidivr mov push test mov addr16 add pop jle cmp mov stos lock iret mov or scas inc adc enter les aad lea sub icebp sub lahf and add add dec cli xor sbb gs ljmp imul jbe ss sbb xchg or add mov xchg rcll push jo dec sbb mov fdivrl pop test cmp into lods imul xchg mov xchg adc inc dec lret and outsb push repnz stc pop popa inc cmp push fadds inc shrl dec and lock aad shlb xchg cmp jnp inc adc pop fcompp repz aas leave push pop (bad) fbstp push or sbb outsl jnp jne mov mov mov adc (bad) sub test fistpll dec push push sarb jge mov loopne je out (bad) lret pop push rclb and mov mov mov cwtl push out dec mov in fisub addr16 scas out cmp xchg std jno jns adc mov sbb adcb lcall and stos lahf outsb dec mov mov mov sbb addb xchg mov bound xlat in imul adc pop jns push or xor xchg call rorl xchg sti je mov add cmp lds sbb gs (bad) fstl mov stc or and (bad) jl dec mov lcall pushf adc ljmp out and adc mov fist jb dec sti leave aaa mov jmp sbb outsb push insl inc iret adc add mov sub enter xor dec cli ja (bad) icebp in and movsb jp call or add jg repnz xchg and mov negb xor sahf pop sub test leave outsb ds imul mov pushl xchg test out inc gs iret sbb sub push and fcoms mov inc fisttp hlt xorb mov inc inc mov (bad) or scas add outsl add push js mov bound je dec test xchg adc adc jns mov adc mov add in decl (bad) decb jl (bad) out inc sarb movsl mov or (bad) mov andl fbstp lcall scas out push push in pop inc pop enter mov pop xor sub outsl fistp dec fiadd bound add mov iret int in lods xor dec aam cmp fwait dec pop dec pop cs loope sti mov jns outsb adc aas jl sbb int3 lea enter rclb inc fnstsw cmpb les inc inc nop xlat icebp mov or jnp jmp xchg adc ljmp fcmovbe fnstcw fwait mov sbb pop jno cmc push cmp add mov mov mov arpl scas bound mov pusha ds das int jne sbb (bad) cli sbb mov jno (bad) and daa dec lea popf addl cltd cmc mov sub mov cmpsb fisttpl and loopne js cmpsl int3 dec mov sub les test imul xchg lea dec mov push mov pop mov out ret jl adc jne in mov mov scas inc jnp (bad) rol push add dec movsb add xchg mov dec imul and inc je adc test jbe dec xchg pop adc idivb std dec ret das mov inc pop ds jno fistpl jge push sub xchg xor sub cmpsl mov mov imul jno push or mov in push pop jecxz inc (bad) (bad) xor push callw lea xchg in adc data16 int3 add push pop push adc pushf in mov mov int add jo and mov out pop dec sbb fsubl ljmp nop rcrb mov nop and mov movsb mov push or je lods call add dec insl js jmp aam mov pop mov pop shlb mov and ss repnz jg sub test push add cmp js push mov pusha mov addr16 pop test mov fwait jb movsl lcall loope and rclb cmp stc adc sbb ljmp in fist mov or sbb in sbb lods xchg mov in jmp xor xorl repz and pop xchg mov mov pinsrw xor mov fwait push jnp in inc jg sub push push xchg push aam xor lods pop xor lcall popa (bad) jne insl hlt xchg push push add les xor lahf add push test xor xchg xchg sahf xor sub sub mov fcmovbe outsl jnp dec (bad) xor xor ljmp imul mov sti shrb ds mov cmp out popf jg or ficoml repz jnp dec and jae cmp mov fisubrl xor jle pop inc (bad) push jge sub jl and inc loop (bad) (bad) mov ljmp into push and cltd mov jmp sahf out dec icebp mov inc push and rcl sarl add jno jbe scas int xchg and fdivrl into dec or jne xor fstpl xor adc mov ljmp test push push repz sbb aam test jecxz into cmp dec jne mov (bad) aaa or mov sbb pop dec cmp (bad) fsts sub push mov cmpsb js mov cmp (bad) jae jl mov repnz cmp sub pop pusha in xchg add or mov or mov repz xor test push outsb loope mov mov sarb jmp sahf adc scas fisub push gs nop scas rcrb data16 movsb in cld mov add mov pop cwtl in xor lcall fdivs lret mov mov and int cmp cmpsl mov enter xchg xchg pop inc (bad) mov fdivl push imul stos ret fisttpll pop popf sar jg in mov inc in cmpsl adc cmp std xchg fidivr lea adc in shr iret pop cmpsb movsl cmc cmp mov cmp cmp inc xor aaa adc cmp push jno imul jmp jg shrb mov dec adc cmp mov in push inc lret adc stos inc test xchg mov adc jle sub jno js sbb pop (bad) aaa (bad) jns loope in aaa in lret xor mov movsl outsb out andl inc jb insb adc adc cmp fistpll sbb in movsb dec sahf fs in pop jns clc dec add dec xchg cmpsl adc enter add test outsb push movb addl call outsl in repnz pop cmp leave inc aam jno mov jbe jle adc mov push sub shr popf (bad) or cli push outsb test in or outsl in jmp jmp and jmp (bad) mov and xchg xor (bad) xor push inc rcr dec inc rclb cmp scas mov das pop adc pop in (bad) leave pop andl cmp not inc jne test cmc scas adc dec jno inc jmp cmp mov lahf stos test (bad) push xorl lea sub out arpl mov or ret mov lretw inc push adc sub or jle out xorl cmp mov xchg pop mov ret xchg test push jl jle mov jl arpl xchg aad sub mov inc mov sbb pop loope xor jmp add cs fcomip fdivs push cmc adc addl adcb xchg std inc sbb adc outsl addr16 fmull jae cmp jmp pop jns imul test fstps pop or (bad) fcmove and jbe xchg inc jnp sub cmp int into pop movsb out mov xchg adc clc mov and xor mov popa movsb mov out pusha and in into xchg mov scas adc js sub jge lahf in and (bad) fsubrs sub xchg mov test inc mov addr16 jp inc repnz sbb (bad) jmp fcomi pop in jge sbb repnz in adc inc xor add call scas cltd and mov rorl jmp mov stc das mov (bad) aas mov mov dec into shlb test (bad) mov iret xlat lea pop stos (bad) sub aad lea fmuls fisttpll pop inc loopne jp xlat adc lock dec aad push xor js dec xchg mov mov jle jge xor aaa adc repz in mov mov addl dec jg daa clc ret leave jno push push xchg xor mov in cltd sub outsb minps stos das or inc cltd jno xchg cmp ret cld (bad) ret mov loopne test in adc hlt in inc jecxz push push mov das loopne jecxz jo aam mov ss sbb test dec fldenv cmp sub xchg push add jae pusha imul push jecxz imul sub fstpl aaa dec inc push outsb dec mov sub je enter fmul loopne adc mov add pop xchg add jb (bad) push mov jl inc fdivr mov and test inc xor push aaa ljmp dec lods aaa sbb dec pop in inc roll sbb out insb ja lahf jg adc (bad) mov and outsl jo outsb sbb xor lret jl test and orb pop xor ds rcl test lds add pop and push add xor pop cld mov sbb pop les jno fwait xor dec mov xor push add sub mov pminub ja sub cmp in ffreep fsubr push push into stos mov or adcl (bad) dec pop add ret test mulb jmp rcrl test popf in jl in rclb cmpsb dec outsb cltd sbb ret adc outsl icebp fnstcw or ja ja jl in jo bound (bad) clc mov adc adc dec (bad) pop jae mov mov push sub test sti adc pop roll push dec test arpl mov mov jl and hlt iret fnstcw movsb aas sti push mov incb jle and (bad) sbb mov pop xchg cmp or rcrb test push jb jae sbb xchg fucom scas push (bad) sub xchg movsb loope imul jle xchg into mov cwtd ret cmp mov pusha pop push (bad) or mov into add dec std xchg int lea cmc dec sbb jmp aam in or negl sub cmpsl cs dec sbb adc scas in cmp pop aam add daa lcall shrl mov inc aas cltd adc pop rclb mov punpckhdq aad or push mov test js xchg jge mov test jne pop or sarb out dec add in adc adc test cmp inc std js add enter mov les push fcmove cmpsb mov adcl pop sahf lock insl andl sbbl dec inc and js xchg cmp pop aad paddw inc xchg and ret gs inc dec and decb lahf fstpl cmp mov (bad) fcom dec sbb add cmc and mov leave dec jo test and pop xchg cltd mov jp dec or adc call test (bad) adc add jge cmp jb,pn lret repnz pop out push mov lcall cmp mul ret nop lods pop inc es cmp mov roll fs lods pop dec mov lret movsl repnz and lret jno and pop push xor push fwait mov lds cwtl cmpl (bad) jge sub idiv test jbe jns je mov mov outsb stos out xor negl inc mov cli loop sbb loopnew dec aaa arpl mov in push dec out movsl jg aad in adc stc in sbb scas push lret sti sbb dec inc inc dec call aad lret (bad) xor xchg fildll nop stc sbb in rclb pop inc dec test shll cmp jg test (bad) push lcall mov (bad) repz aad mov and mov or inc mov mov in mov mov xor inc mov stos and pushf je xchg sbb call mov or xchg jl jp sbb mov fstpt in xor add (bad) jno out push scas test pop outsb in mov ja test das leave mov add je and adc jae mov pushf jle mov pop nop push mov xchg (bad) xor xor xor jmp outsb and pusha mov and rcr cmp adc testl imul push xchg mov fs add lea (bad) out xchg ud2 add lods insl fldcw fs lahf repnz pop xchg push jp xor jmp sbb sbb and jmp into aad mov mov test cmp xchg (bad) fisttpll mov mov mov aam jno,pn jle mov mov addr16 cmp movsl cmpsl outsb adcw cmpsb idivl hlt inc into dec repz or popa sub or int add imul or or push jl stc xchg add std adc mov out adc call inc or sub inc daa rorl jbe mov in addr16 in in cmp mov push cmp sbb dec push and jmp cmp mov sub (bad) aad ja adc pop ss xor lods sub mov (bad) ss sub cli adc push cs daa aaa xor or cmpsl mov into mov lret in das in (bad) les aas leave nop xchg pop jbe cmpl unpcklps inc jge cmp loopne jmp jmp sbb xchg ss push rcrl inc inc faddl dec jl xor aas pop xor aam rcr push jl push loopne pop gs mov jbe xor push and lret mov ss cld loope inc or or data16 jb jmp cmp mov jae stos push push sub imul pop aam popa fisttpll repz neg jle js (bad) mov sbb pushf icebp adc mov pop push mov mov pop inc loop cmp dec mov stc sub cld in or fs cmp push aad mov and and mov sub outsb xchg pop outsl mov adc mov mov lea xchg scas icebp sbb push cmpsl jbe or ljmp in pushl and insb and or xchg sarl scas out mov imul ret aaa mov je rorb ljmp loop cmp xor nop roll mov xorb mov mov cli and js lods mov out adc in push dec fdivrp and xchg lret vshufps data16 pusha mov sbb add lods (bad) cmp jo mov (bad) outsl nop mov clc mov xchg gs add imul mov pop mov or xchg or (bad) cmc push stos scas loop in rcr popf xchg adc mov decl std jle mov je inc dec mov pushf (bad) fcom fmul test add push jo inc js int mov mov (bad) jle add add fidivl fwait mul push fimul mov mov pop push xchg data16 (bad) je ljmp dec push aam ljmp cld in and push push aad cmp mov inc cmpl adc popf dec dec sub sbb mov xor (bad) ds std sub push jne adc ss add add int3 adc rorb mov jb sub pop jo xchg cmp aad or mov psubusb xacquire in xchg int push dec aam clc push jge sbb sbb xor test in push outsl stos dec les and scas cltd fidiv mov sub lds pop sti stos mov jae shr daa pop mov adc pop jnp mov and cmpsb mov scas sbb pusha pop xchg sub push out stos push out aas push mov in push or mov jnp xchg xor (bad) mov xor sub lods mov push add dec mov jecxz scas movsl or loope push cwtl dec add fidiv inc dec outsb adc popa pushf or imul push stc add lret and mov repz mov and and out inc mov and push xchg sbb repz scas decl mov lea jmp mov fcmovnb sti add mov pop ds xchg push arpl (bad) mov (bad) and mov sub mov cmp jno in fcoml xor jne jl mov into jbe cmpl inc mov mov cmp pop dec sub dec sti mov repnz into inc aaa xchg repnz int3 rcll mov pusha jmp rorb inc mov add rcr stos mov mov adc add js lea and ds mov or pop adc mov and scas and mov or xor test rcrl mov mov pop mov sahf loopne in mov ds or dec ficompl xor pop fwait scas sub inc sub mov inc jg mov pusha mov mov cmpb xlat fbld mov and lret xchg in and aas arpl lahf in cmc dec adc push sub xchg dec movsb or jecxz push sbb mov pushf (bad) mov or cmp mov lret inc mov push dec fbstp aaa inc mov mov in inc test push sbb std or lock dec pop std movsb pop xchg (bad) cmp sub stos ret js mov dec bound mov shlb mov and ds loopne push (bad) mov lret aam cmp push adcl (bad) push cmpsl push mov xchg les hlt jmp xchg cmpsb push or pop sub lea mov call insl xchg sub push in or aad pop xchg or pop packsswb ljmp xor mov (bad) nop mov leave mov ret andl test scas inc xor jae test test das jbe pop mov sahf in ret out or lret mov fbstp mov (bad) xlat mov cmp stc cmpsl inc cld or mov in lock ror jo or rorl fcoms push stos mov xlat leave sahf or mov stos test (bad) push mov inc fsubrs je and jb push and mov rol repnz sub in jo mov sbb xchg push push test mov rolb lret stc push mov mov sub mov out cmp xor loopne jae popa hlt outsb adc in mov xchg outsb mov cld xor inc sub ftst sub test lods push inc xor outsb mov add jecxz cmp mov mov (bad) push cwtl sbb pop aaa ds gs (bad) sbb call mov jnp mov int or hlt test dec test xor push and mov dec mov or cmp lds push mov ds outsl mov jp mov jmp sub mov push mov mov xchg test aad repnz adc or jle sub mov mov xchg lea je add xchg pop ljmp cmp sub xchg fwait lahf pop scas outsb icebp test outsl jae inc mov shll xchg xchg xchg xor jge adc cmp imull lahf inc scas cmpsb clc mov data16 xor aaa (bad) and adc icebp sbb dec in cmc adc imul stos data16 pop and xchg xor in movsl mov add and enter mov push and mov add xorl fucomp and mov mov xor stc ret add shll int adc enter xor sarb ds in or inc out (bad) cmpsl iret repz push mov sbb inc cwtl rcr outsb int xchg and in scas and sbb xchg mov out cmp mov mov in mov int3 int repz rcrb bound push mov sahf (bad) jmp decb test outsb aaa mov hlt data16 mov mov jp nop mov rcr rorl (bad) ss in sub arpl mov flds (bad) adc hlt jo pop and pop inc mov and or sti xchg dec adc mov cli push fdivs and roll sar jl or mov sub flds idivb rorb dec rcl loopne pop cmp rol loopne push popf ds xchg push outsb inc nop lds add adc in outsb xchg cmpsb iret out loop inc jno pop mov lods imul add dec mov nop lds mov mov xchg dec imul (bad) jo push loope leave ss mov sbbl mov cltd sti in mov push mov gs rorl mov add movsl out imul cwtl cmp dec add cmp pop fisubrl push mov jno and out lea dec mov add pop stc jmp mov sub xor jbe fwait mov mov or mov sbb xchg jne xor pop std test stc xchg push add sbb (bad) scas aam mov or mov out xchg push push pop or pop inc (bad) sti and insb dec mov dec dec mov or rorl dec mov loop pop xchg add rcrb inc test sub fldenv in adc (bad) xor xchg lds xlat xchg push lock pop mov in xchg jno test mov ds cmp and arpl and cmp repnz adcl cmp (bad) in sbb cmp push outsl idivl sbb mov push aam jbe mov sbb jbe movsl and mov push sub adc popf fidivrl adc lds dec and pop xor pusha repnz sub repz fldcw mov mov cmpsb nop scas sbb jae adc ja jae lock add mov ud2 xchg adc ficomp ficompl jg or sahf add pop fisubrl lret mov mov mov shrb mov lods xchg lds rcl mov and lret push (bad) out clc ret fsubs lcall mov mov ret jl in insl pushl jle in pop and cltd add sahf fcoms mov into jmp push js pop clc jmp sbb stos sarb add mov loopne clc arpl pop in mov xchg jg cmp shll mull mov ret aad mov cmp in jbe pop push mov loope inc dec xor xor add dec repnz adc in push or jecxz iret leave and mov xchg fdivs cs inc (bad) outsl mov inc pshufw jnp and mov mov leave inc and outsb mov rorl ror int pop xchg mov cmp pop outsb jo pop scas arpl jmp or xchg leave and aaa into scas std in (bad) (bad) mov fisubr mov jl mov sbb push and push adc adc out sqrtps es jne mov leave fiadd mov jp xor and adc inc push push test hlt jbe lea ds push scas out jecxz push adc stc test cmp xchg pop mov push sub mov inc add loope mov sbb mov mov cmpsb ss mov dec jle pop cmp dec pusha inc loop sbb cmc mov in scas inc iret sbb mov or (bad) mov fisubr xor fcomip loope jae les xchg and jns mov cs cmp adc jmp dec pushf test out push add sahf ja xchg push xchg inc inc push mov int3 xor add int sub sub inc mov test pop jno xchg mov dec subb cmp cmpsl mov sbb lds and mov mov mov rclb adc icebp add xchg mov cltd jg push scas mov push add mov mov loope lea ss (bad) ljmp jmp push jbe mov mov and gs mov sub dec inc xchg mov mov cs fstl lods rorl mov xchg mov sbb js inc push jo leave fwait cmpsl push outsb jnp repz inc mov or cs mul cmpsl inc sub mov test or es mov add mov in inc inc ja mov cltd mov jecxz dec cmp cmc inc std xor mov outsb inc add je (bad) (bad) popf dec ljmp cmpsb push mov cmp mov (bad) (bad) jl jnp je xchg mov (bad) pop sub je adcl sahf lock push cmp xchg pushf or arpl (bad) loop pop outsb mov call push mov mov loope in mov ds loop into lock xlat push sbb movsb lcall mov stc int sahf std mov mov lret jp fistp gs mov leave sbb xor test lods sbb mov or insb lcall mov mov jno mov in loope cvtps2pd sbb push (bad) inc pop push aam out sub das push mov (bad) cli jne into movsb mov cmp adc lods sti or xchg in mov (bad) fwait xchg ss mov mov (bad) mov repnz push fimul push mov out cmp mov stc adc bound (bad) mov or jmp mov sub imul mov push dec movsl jne xchg mov jbe mov or ss cmpsb adc mov (bad) int3 scas mov jg into dec inc rorb data16 mov add cli mov adc inc pusha push mov xor adc (bad) lahf push dec insb pop lahf fs mov mov outsl js dec orw or (bad) pop cli imul add jae lahf lock inc or loop pop lods lods xor cwtl mov jne push xchg cmp pop sti adc adc xchg in xor inc inc (bad) lret add mov dec jo int3 pop and lcall fisubr mov outsb in js mov sub je push cld leave lea (bad) jb pusha sub or xor sub sbb jns push and (bad) jae jnp leave sbb push test call push or out in fldt mov test lods xchg xchg pop ret lods andl lahf dec sbb mov ss add lock inc leave push jbe push rorb mov es sub sub scas inc jp mov fmuls jl out mov into inc inc jge jbe,pn lcall aam xchg jmp push mov sub imul jns pushf out xor push push sarl lahf dec xchg fnstenv adc scas iret movsb jnp mov aaa or mov push bound arpl add imul mov sahf or sub aas arpl mov dec (bad) clc inc xor mov pop jle movsl lret pop ja cltd cmp out (bad) (bad) movsl lea xchg or pop add xor xor ret stos loope mov cmp fistpll adcb mov cs push pop cltd sub enter mov xchg fdivr xchg (bad) daa sub dec mov fdiv fldt mov loopne jge orl mov mov pop mov inc xor insl data16 out mov stos or or iret int push mov lea (bad) flds pop ja dec flds and cld fist or fist pop push and call pop jno mov fstps aam sub mov dec nop cwtl mov add mov xor add xor mov push outsb ds sbb inc insb and mov mov add insl lret jle inc xorl mov mov add hlt mov lods cwtl lcall leave pop adc cmp outsb and sub nop shlb (bad) jb cmpsb xor push sbb adc xchg mov pop pop rorb cs mov pop cmpsb xchg test int (bad) in or hlt rcrl pop pop call mov jp cltd arpl lds inc loopne lods mov mov jb or data16 sub push inc sub outsb jno loopne stos mov dec ja adc adc xor xchg dec scas xor sbb nop pusha mov ljmp repz push stc jp adc and scas sbb movsl adc data16 adc aam into bsr in lahf adc push std nop insb push sub mov sarl iret mov iret cmc (bad) add std test adc fist mov daa jl mov jecxz dec in out cli iret and std dec jo test jg jl xor jno (bad) jns sub ds js or (bad) sub mov sbb leave in sbb jg test adc mov jne insl cmpsb in or cmpsb dec test sti cmpsl add arpl adc das push xchg jo je add inc cmp add or int scas jne ficomp xor jo aad je xchg inc in and sub test jne les test jnp rcrl mov stc mov jl mov adc mov jp in jno sub repnz leave in imul fcoms push test or mov pop mov ljmp test pop mov xchg jl mov mov cmp aas daa cmp out xchg fcomp adc xchg lock sbb ja and test jo cmpsb mov jae push xchg out mov xchg in push fdiv test (bad) sbb aam in repz aaa pop ljmp rclb (bad) in mov scas cld lods fsts imul ljmp jle sub jg dec pop in adc inc aam addr16 fimull inc inc jbe addr16 or pop ret loope rclb xor xor adc add xor fnstcw int push push inc push rorb cmp mov lret stc pop cs mov das xorl mov out insl ss jle cmp lods xor pop pop inc mov addb add add cld cmp mov xlat or mov mov or mov dec sbb xchg mov push mov or xchg sahf ljmp sbb lret int push je dec mov push mov fidivr push pop mov pop in xchg int mov icebp hlt test or inc outsb add mov mov aaa xchg aas pop mov pop mov sub scas xchg add xchg sbb in sub jbe push pop aad inc push mov xor in mov pop add lret mov dec sarl sbb ja imul cltd mov (bad) or out mov nop (bad) call cmp shrb and ret lds outsl add jae int notb sbb push scas mov ret and popa out add andl xchg outsb sub dec outsb leave (bad) push std lret xlat mov pop mov (bad) xor fmuls dec ret push in mov insw mov loop leave mov fistpll jae stos fadds dec imul insl in (bad) xor ret mov aad int3 mov movsb jge xchg orb push jbe jle lret sub js cld lock sub adc pop rol clc and mov and pusha add mov andl mov jns pop data16 pop xchg pop cmp (bad) lcall or mov pop sub sbb js clc mov (bad) or ja jae push daa lcall sbb scas adc mov pushw lret cmp insb bound mov inc dec or outsb jne into movsl in icebp rorl leave inc inc popa mov rdpmc mov (bad) int cmp jo mov dec push sahf mov fidivl shrl add movsb mov out adc mov mov mov pop sub pop fwait dec mov mov cmpsb jmp xchg push lds in or jecxz mov pop (bad) scas jae,pn and mov xchg mov clc pushf ljmp mov push mov pop rorl jnp xchg xchg (bad) xchg mov mov ds (bad) loop mov jl out or jmp xor int jle add inc jb adc sub xchg add in mov cld fwait adc lea xor fldcw enter mov lock loope,pn push pushf jl (bad) cmp xchg fdivr xor scas (bad) xor mov pop outsl mov and lret cmc mov stos or enter mov lods mov push into ss mov leave ret cmp in push or xor add hlt lea dec sarl jg fimull xchg cmp lock xor int je iret scas xchg data16 les push pop push mov push xor dec out out scas xor das imul cmp dec dec sub test lock xlat sarb push and mov sahf pop iret jp inc jecxz ljmp xchg inc roll inc mov push xchg mov mov loope mov int cld pop dec subb push iret mov (bad) aaa sub push jo mov push cmp mov pop inc cwtl add mov jbe cltd jle jecxz and (bad) ja cwtl mov mov sbb jl sbb ds cmp shrl mov adc pushl mov mov add enter loopne ljmp adc bound and scas jg aad add xlat movsb pushf cmpl js jbe push outsl push ljmp jne xchg lcall cmc pop sbb adc cmp test lahf adc ja sti add pop dec psubd sbb push (bad) pop in aas iret jbe scas jl leave lods lods jns inc inc shrb xchg jnp inc jmp jno adc pop outsb pop jae or add std mov outsl in mov or mov ret mov in pop pop adc add add repnz loope inc (bad) jne mov out mov shll sar out sub ja into add add jb leave mov movsl mov in mov dec test in in push push arpl inc cmp mov cmp add push xchg inc movsb push ss cmpsb or push mov sbb xchg xor add push in mov mov jno and mov ds pop test cld inc or rcll out cmp outsb lahf jo inc cmpsl test movsl sarb push mov loop leave add sahf mov scas aam je inc push dec xor int ficoml cmp pop stc sub loope mov mov ss out dec movsb outsl lock scas mov sbb test ss mov mov dec adc jp mov icebp add fdivl enter mov daa jns leave cmc push andb stc scas and dec dec mov dec xchg mov sbb (bad) ja xchg mov add xor inc pop rcrl cmpb and mov std pop jmp gs cmp push std sahf icebp aas jbe je mov int3 cmp ds pop lahf scas xchg pop leave rorb icebp sbb add xchg mov fnstsw mov cltd push das mov mov lods mov jno stos cwtl call pop lcall fisttpll in pusha (bad) mov push int3 cmpsb xor addl stos daa aam inc pop ss inc and mov ds cmp and out imul sub es (bad) xor (bad) fbld scas sarl mov jg inc sbb call dec inc add lea add test in cwtl dec je xchg unpcklps mov push jge popf sbb out pop (bad) xchg push (bad) icebp jns xchg xchg out mov rcrb pusha jecxz in inc or icebp dec scas cmp cltd mov cmp jbe mov clc (bad) icebp bound std adc mov pop shrb mov lods sub pop and mov dec mov mov mov xor dec adc push notb std ljmp jecxz out sti aas jns ficom pop mov stos nop repnz push or cwtl out pop mov out adc and mov xchg sahf push add jmp cmp sub jae loop clc dec cmpsb stos jns aad mov test pop push dec lods popf out inc jmp jne or shl mov in clc and pop xor cmp add fisttpll andl je,pt sbbl jg gs cmpsl in jns sarl nop pop fadd pushf ja jg lods pop pop outsl inc sbb lea cli pop sub push out aas das fneni(8087 inc sti fnstcw lea (bad) jmp adc xchg pop xchg ret xor push push dec test xchg sbb cmpsb mov dec cmp jnp frstor popf imul clc dec inc mov syscall ss mov sbb and xchg or js and sbb fsubrs loop daa push xchg aam xor into nop punpckhdq outsb xchg mov add add lahf hlt pushf xchg or jl iret movsl aad sbb inc aad xor mov inc cli fnstcw mov fistl mov imul faddl mov xchg setns nopl adc jmp nop in (bad) loope outsl imul cmp cmpsb push xor sbb daa mov fisubl ds gs xor test in or or jo cltd cmpsl in test fstpt mov add push cmp jb fcoms mov mov sbb ret xlat imul dec lret pushf or addb and mov test lock adc rol lods insl in loop rorb vmulpd xchg xor cmp insl (bad) push or pop sub sbb adc jle xchg je dec xor (bad) cmp divl mov cmc in jge (bad) or jmp pop push outsb dec loopne outsl sarl stos test xor (bad) mov adc inc (bad) loopne mov jo leave push popf xchg cmp leave test dec add mov lcall repz ss or outsb or lods pop xchg mov das loopne adc push and add pop push fs jecxz xchg or scas mov xchg outsb movsb mov mov mov cmp dec jnp dec clc (bad) shlb inc pop dec mov jo xlat (bad) sbb xchg test mov test int pop mov out scas xchg dec movhps push push cwtl hlt mov pop mov mov inc mov mov pop jnp pusha push pop (bad) fisubr xchg int loopne (bad) out and pop scas cmp icebp sub xor mov cs je in mov out fsts clc jmp rorb and pop call lea or push dec orl mov or fistp (bad) dec dec lret adc leave mov sbb pop inc jle fcoml lcall jp xor iret jb data16 jo push mov iret lock leave jb jbe mov push cmpsb push jo mov jl adc in cs fwait int rorl sub jb push fsub cmp dec push aaa arpl int aam outsl jle sahf hlt in jno leave adc aas (bad) repnz sub and fdiv fwait mov xchg (bad) mov pop or sub inc cmp mov lds xor sbb test mov xchg push test mov loop mov jae out pop popa pop and xor sti sbb lret repz lods outsb sahf cmp adc xchg rcrl push pop mov clc and jb leave std mov pop in neg adc imul mov jbe jnp sbb mov sub stc in inc mov jp testl int or add sarb sbb add js loop inc mov shrl fadd in xchg mov xorb push fnstcw or aaa sub push xlat sbb in dec div insb test in xchg push jae and int3 jmp fldcw pop push gs test ret pop (bad) int adc mov inc stos inc mov aaa mov add mov not lds mov dec out mov sbb ja lret sub popf mov sub mov scas stos jmp add mov clc leave sarb in pusha out cmp xor xchg das imul dec lods out push insb stos loop add xchg mov ds mov mov push scas fdivr or addb sarb mov mov inc inc or out popf mov mov sbb enter into test mov xor dec pushf push mov ret xor mov mov stos in jae ja (bad) xchg sub add mov add pop out fcomps (bad) aas inc es (bad) rcl dec aam in (bad) (bad) aad mov fnstcw or adc push les mov lahf stos push mov or add xor dec or popf iret xchg shrl clc dec cmpsl outsl lds cmpw adc lahf mov lods shlb sbb iret into imul fdiv and adc or push jns outsb data16 pusha mov in push mov and add sahf aaa loopne outsl adc mov outsl lret cmp dec pop mov cs movsb sbb xchg mov mov rolb leave jle mov sbb faddl mov int cmp dec mov push inc xchg mov stos shrb mov je std aad xchg sub mov mov inc or scas jmp mov pop (bad) clc pop push cwtl mov cmp xor mov (bad) jne pop mov adc fdivl jae shll pop cld push push dec sbb test leave pop lods aam out call (bad) insl dec sub outsb adc fs in add mov jnp clc inc stos or icebp sub sub aam imul adc jl stos test adc jl lea out stc punpcklbw cmp mov sarl mov jae int3 push pop into int (bad) or in mov dec mov sub inc (bad) mov sbb aaa ret mov lahf imul dec pop stos faddp (bad) stos pop xchg jl incl lcall mov call push test and adc jmp xchg dec inc mov iret pop icebp mov pop inc pusha mov pop mov and or push mov add xchg repz dec fisttp adc mov and mov push push inc (bad) or int and cli jl ss jmp push pop xchg je mov pop sahf mov movl xchg cwtl iret or bound add ja lds test negl mov add mov fisubl or cli sbb int3 cmp pop imul sub das (bad) mov pop pop dec dec mov jl add mov sbb loop add mov test xchg loope mov push mov push fsub das and cmp fs into mov rcr nop add mov jecxz out sahf add andl add adc pop in loop int3 jle aas xlat vphsubwd dec test add stos and adc cmp adc test adc test addr16 sbb push test mov test les cmp lretw push (bad) je lods cmp or int3 and add (bad) cmpsl fs movsl mov jb adc js insl in dec xor inc stos dec xor loope cmp jno fsub inc gs mov enter imul data16 sbb mov shll movsl cld inc mov stos xchg sbb adc xlat mov cld xchg inc imul pop ja mov add and imul (bad) rcrb jle nop fidivl mov imul or arpl sarb test push pop outsl in and xchg stos clc pop jo test outsb dec pop pop and cld sbbb push cmp outsl fcmovnb or jp mov mov inc sbb sub (bad) sahf fwait xchg (bad) in dec jo bound fsubr in cltd es imul mov hlt push dec xchg int adc pop dec mov sbb and frstor xchg dec inc mov outsb xchg out push jmp xchg mov push fcomi fmuls xlat int3 xor mov frstor xchg mov mov negb mov cld inc sbbl and cmp sbb fsubrp and xchg inc lock xchg inc mov sbb and rcrb bswap mov xchg or ret push cmp out sahf (bad) push jl or adc dec mov jae push jecxz fdivrl cs sub push mov ljmp mov and aad test push lods std pop mov cld int call dec adc int3 cmc add int or outsl pop in das xor mov xchg sbb into out jecxz lea in xchg in mov pushl lods pop popf call xchg ss mov adc in cmp inc inc (bad) mov ret xchg xchg clc xor fdivs addl leave jmp mov call fnsave out fcompl aaa mov push shrb dec ret xor lea fs subb pop sbb ja sahf add mov into hlt into imull (bad) adc pop insb cmp in mov lret xchg sub mov add xor outsb in into or js cmpsb (bad) out mov in mov jle xchg clc mov loop lods push in inc xor inc cmovnp xchg inc mov jge mov xlat idivb inc sub add sbb xchg nop stos jns inc stc cwtl xchg fbld mov jmp lahf dec scas out dec mov icebp ret push xchg roll push mov loope add inc xchg mov cmpsl mov lea jne int3 pop sar inc test dec and outsb (bad) cld popa subb int movsl loopne mov ret decb mov in sbbb callw mov push mov rorl mov arpl (bad) fisttpll mov (bad) repnz roll xor outsl xchg mov xchg jge sbb cs int and pop mov push jb adc mov dec push or sahf fdivl inc movsb leave sub pop add ret aas test or mov mov inc jbe and xorl cld icebp pushf add add pushf nop sbb jo mov (bad) mov and fcmovnb dec aaa mov and test loop xchg lock inc adc push xchg adc lods mov jg jmp add push push outsl insl stos mov push test lods pop sti (bad) mov sub pop cmpl dec (bad) add mov lret dec jnp test inc jp es cmp dec sub push mov mov dec xchg mov pop push pop mov je test mov mov pop stos lods adc fldl add dec int fsubr mov mov sbb or pop adc mov aad pop movsb sub cmp cld sbb jecxz jnp lea jmp push sbb xchg jge push mul roll in push pop ja mov pop inc jge mov mov ds mov mov dec (bad) xacquire mov outsl cmpsb stc and sbb loope push (bad) out fidivl push mov (bad) mov in sarl mov (bad) or xor xor in cmc daa imulb mov loop test hlt add nop and fs dec pop out xor dec sub aam mov mov iret sbb inc aad leave or ds adc add mov fistl and iret xor inc or pop icebp fsubp outsl sub sbb xchg mov test setne je dec sub mov sub aas add mov jp add inc fwait dec (bad) sar stc cmp cmp bound adc enter jecxz sbb ss mov call dec lea push jg or sti rorb test lods cwtl hlt push cmpsl rorl push cmp aad aas and cltd pop pop fisubr and dec cs js iret into cli stos mov cli and int add xchg cmpsl push insl aas in fwait adc mov in mov mov ds lea leave adc (bad) xor int3 fldl mov jb or jns mov sub gs xlat adc cmp aam cli xchg cmp cwtl and insb lret push cli mov les aam (bad) sub das fisubrl (bad) pop jl sti sbb mov mov jnp inc mov gs icebp aam sbbb mov jmp mov fnsave (bad) mov mov add ss mov int3 add arpl jns and in push cmp mov subl inc pop pop arpl nop test inc adc ss data16 pop push push inc jp dec and jmp inc (bad) push ret clc mov mov add adc jl jae xstore-rng cmpsl inc inc xor inc out inc loop fdiv (bad) jecxz or dec xor int lahf xchg stc dec int aad insb mov adc dec lock decl sub mov int jmp scas add adc fwait in mov insb nop mov mov lret cmpsl xchg in push mov mov push adc nop mov call cmp (bad) repnz sbb inc les jle,pt call jge adc xchg flds mov es test (bad) and clc add jno jmp xor push mov push or (bad) mov mov lcall jp adc inc lods sbb push in inc js ret aaa push fmuls mov cwtl xor push (bad) test adc jns lods cmp inc in or mov adc cmp popf jnp outsb pusha adc sub xchg rcll pop (bad) enter mov jbe sbb (bad) fcomps dec push cmpsl push mov adc (bad) (bad) test test mov fldl xor mov frstor cli mov xchg mov scas pop aam mov xchg pusha fdivrl sbb mov decl mov push lods dec inc data16 push xchg addl clc (bad) push or add lea jo mov mov fstpl (bad) lret mov lods (bad) and push adc jbe and mov and int3 outsb mov std jbe cmp push loope int mov test or icebp je cmp pop hlt ljmp cmp pop inc cmpsl loopne adc lahf ljmp scas sarl dec inc xchg (bad) repnz cltd mov mov lret mov mov xchg loopne mov adc out lea inc std das dec adc shlb sahf xchg loop mov inc inc gs bound (bad) ss xchg outsb or stc xor push (bad) call cmp xchg in outsl push lcall sbbb negb sti loopne or xchg pop lds jle push or cli xlat insb jmp ss or test sub inc popl jb,pt in (bad) jmp cmp add push inc arpl jo xchg jmp inc mov sahf mov cs sbbl pop (bad) ljmp mov std push pop int3 jmp jmp mov mov repnz mov popf in lcall nop push aad ljmp mov leave rol repnz (bad) das adc test xor xchg popf sub or outsl sub in push mov mov push sbb inc data16 sarl out mov dec jne ret sarb cmp and and mov jg sub cmpsb mov dec and inc push add fs sahf push and pop out and data16 insb (bad) iret push pop pop in out lea loop cmpsl (bad) dec mov pop subb mov aam (bad) je sub mov xchg fcmove fsubl xor dec dec addr16 pop adc imul in (bad) (bad) inc xchg or (bad) loope mov pop mov ja adc repnz or xor stos or mov ljmp mov test out iret jno test jl mov mov aam add lcall stc jo lret cmpsl mov mov scas or fucomip jle pop adc sub imul outsb adc mov stos mov std (bad) or xchg sbb lods jbe mov (bad) push inc xchg in data16 fmuls inc sar jno jecxz and outsl mov addb movsb sbb in xor pop scas lea data16 dec les loopne cmpsl sbb cmc sbb ds test pop hlt out sahf mov loope das stc mov js xor fdivs outsb call sub loopne mov inc xorl add inc push mov mov (bad) rclb pop stos lcall or repz ret push and fldcw cmp mov loope mov push mov loop aad inc mov iret popf lea les xchg add push pushf inc jle push dec pavgb in mov xor xor jecxz in orl pushf inc jg adc xchg adc fstl sahf or mul inc or negb mov pop mov stos movsb scas js push inc xor fldenv aaa aaa push addr16 pop pop loopne dec addl arpl int dec lock stc (bad) xchg inc movsl test and cmp mov inc xor fld jg repz jbe xor hlt adc loopne cmp cmp gs arpl xchg inc mov js mov testl cmpsb and leave cs xchg add mov in push in cli or mov push pusha jb mov out mov pop mov sub int xchg mov dec cld dec cmpsl mov and js mov bnd mov imul push xchg aad and or jl or pop jo int ret mov sbb add sbb stos in (bad) out and fwait and outsb in popa mov mov pop sbb cmp mov cmpsb jmp xlat leave push mov fs mov clc sub mov (bad) call frstor mov jmp xor cmp ja (bad) mov inc push (bad) cwtl inc inc dec and mov push mov cmpsb lahf inc out adcb int sub mov sub cmpsl xchg icebp inc push xchg cs mov inc dec ret cmpsl mov in xor cmpsb inc mov (bad) scas mov inc das cmp push lds outsl xchg jle sbb mov daa pop push xchg mov push jl (bad) lds mov cs loopne add xchg push pushf fdecstp mov jbe mov pop fnsave mov adc xchg sahf adc fisttp pop add sub or lods test pop test sbb mov mov and or mov out adc jecxz fwait mov push mov negb shr mov dec (bad) outsb pop xor iret dec imul sbb dec andl hlt pop stc dec in in aas push test add xchg rorl jmp lret add ljmp xor push dec inc mov loope add mov fdiv cmpb (bad) or js jecxz (bad) into out mov in mov sbb adc (bad) push insb inc fdivrs push out lea pop mov fsubr call (bad) cmpsl loope rolb xlat sbb push add fidivl ret xlat bound enter lods in mov shlb adc in and ficoml mov and aaa fidiv pop gs add xchg adc orl jb scas xchg mov push icebp mov and lcall inc (bad) mov pop dec xor mov push inc mov jns sub dec (bad) pop jno mov push je loopne xchg pop fnsave faddl ds in fwait int pop lds pop inc in xchg mov or push cld mov ss ss xchg or leave and adc dec jnp (bad) mov mov int lods mov aad lea loop jge mov in push outsl stos sub test jae pop xor dec mov adc mov mov jecxz inc xlat iret rcrb mov ja in addr16 cmp add pop pop jge pop movhps repz fidivr jnp push xchg in gs lods or hlt in xchg jecxz mov rcr xchg gs mov in or jb inc stos inc fnstcw cmpsl enter scas fldt sub cmp push adcl add cld cwtl iret fdivrp sub inc lret mov fnclex imul pusha mov inc (bad) out cmc sbb jb call sbb arpl lret int add sbb mov gs push cmp and inc sti lea bound push sbb cli dec mov dec dec out fsubrs int in xor mov add mov push sub leave jle out pop in mov pop loope cmp dec sbb jg stos mov in cmpsl aad add sbb pushf mov mov push and jb in (bad) aaa call jg loop imul fmul mov and loope lock jmp push pop out mov les dec xor movsb lret cmp fs movsb cmp test loope jp dec outsb hlt adc mov lret fcompl pop xchg jecxz mov dec sbb icebp xor mov rol adc cwtl (bad) outsb pop adc pop popa mov scas fisttp fldt enter incb jne ret push mov pop stc xor mov adc push mov mov mov jb mov cmp inc test sub ja push push ret add mov out dec dec xor push adc orl xor in mov out xchg scas loope push mov (bad) shll dec sbb in pop pop and dec ret outsl faddp xchg movsb mov inc ret xchg sbb test into jecxz shrb cld adc jge mov sub add lods scas push fs mov mov jp (bad) dec or sub movsl clc lods gs jo mov in into data16 arpl movsl cmpsl push iret lret pop adc jge jae jg outsb dec ret (bad) xchg sub push ret mov repz cmp scas fwait cwtl icebp lock jnp add or inc add jecxz lods jp je mov lcall mov lock lea and cli pop and mov fsubrs fildll test xchg movsl jg adc fisubrl lret and sub clc cmpsl (bad) jae repnz mov adc mov xchg xor inc push push pop xchg cmpsb pop jle inc jns lock inc scas es push cmp in das dec dec fwait mov aaa sti iret lcall iret popl in add jb (bad) jl lods outsb nop lods out sub pop xchg jecxz pop xchg push sbb xchg out gs pop xchg not pop push mov cmp push mov xchg xchg stc ss mov push adc outsl mov pop xchg mov int lahf ja stos adcb mov push cwtl xchg xchg leave add sub inc lds mov push gs lcall add jge (bad) cmp andb push xchg mov adc mov sbb insb mov cmp push jbe out mov jg flds sbbl xchg outsb mov arpl (bad) push std mov mov shrb int mov dec mov cmpsb fucomip xchg leave lds push ss or push shll sahf cltd mov mov xor pop push pop ljmp mov test xchg xchg ret outsb scas jmp add dec mov push js sbb insl jl and dec mov xchg les aad adc (bad) mov mov int adc xchg dec aad in jmp lea test int mov loop test scas add cmpsl mov jmp xchg sarb pop mov (bad) loop (bad) ds inc shrb mov in xlat mov push mov add (bad) popa pusha adc mov nop rorb mov movsl adc xchg mov pop add or jmp dec dec cmpl pop cmp fstpl xchg sbb fnsave mov jnp cmp repz cld pop ja scas mov lea test dec test pop test push (bad) mov pop dec mov pop jmp out and fnsetpm(287 xchg and cmp mov sub test jbe leave push ss mov cmp aas mov sahf hlt popa jp call add cli movsb cmpsb dec (bad) rolb data16 xor dec movsl out xor in js addl or xchg sub xchg pop mov xlat test ret mov dec int ljmp pop xchg mov inc lea adc loopne lea movsb (bad) lret mov scas sbb and push daa ljmp jmp dec dec inc mov cmp pusha mov stos jmp mov (bad) push xchg jo les xchg or mov in dec xchg push fisubr lcall test xor mov aaa ret lods arpl sti (bad) fisub push push loope cs push cli mov dec pop outsb add cmpl loope test mov data16 inc sub push mov push (bad) into outsb jno sbb mov lea addr16 or lret pop inc daa rsm xchg sub pop xor mov out sub es out ds jo cmp pushf xchg or xchg or add mov ficomp cmpsb outsl add cmpl data16 adc jg ss je mov outsb inc push cmp push sbb sbb xchg inc xchg xchg xchg addb fisttpll mov data16 orl pusha rcr test ficoml mov cmp push dec cmp cmp cmp aam (bad) data16 xor cltd stc mov fmuls dec mov lahf inc xchg decl cld es fildll int3 mov push push push cmpsl push sub sbb fcomip ds mov (bad) mov xchg test cmp xor inc (bad) das xlat jle mov adc bound push mov dec fistp cmpsl cmp jbe mov jle mov outsb jle pop or cmpsb mov imul fmuls mov lea (bad) gs js mov xor test (bad) mov (bad) mov outsl mov cli cmpsl xlat adc loop (bad) lock adc (bad) or xchg cmp pop push pusha das xchg cmp (bad) rcrl arpl mov repz mov cmp in pop movsl mov ret test shlb gs jmp sub les aas mov lcall cmpsb adc lret mov test lods lcall sub xor mov push movsl (bad) pop pop mov pop xchg test mov adc mov xchg or test adc call fnstsw ja sub inc dec je icebp inc fsts mov lds lock cltd mov lods call mov cwtl dec sub xor mov push mov lcall enter mov push or sub ja pop adc insl imul jmp into mov or mov jnp fisttpll adc cmp add loopne jo fwait into sbb inc daa test jae ret pop clc dec mov xlat sbb repz jmp cmpsb fnstsw mov ja sub sbb dec and shrl lret mov repz jg mov mov sub and or pop mov (bad) hlt sub push mov add xchg fstps jl (bad) leave push loopne add dec pusha mov xchg push iret mov or ss push in std jns lea das push jo mov push scas mov sbb xlat ljmp push sti test adc or fdivr push jmp jbe (bad) mov (bad) and push lea dec cwtl movsl rdmsr mov or sbb sub andb out push js mov cmpsb test gs in arpl mov idiv mov in das insl xchg loopne mov dec mov sub xchg mov hlt and inc xchg pop dec lcall arpl xor inc adc sbb cmp mov mov fcoms mov aaa jmp (bad) pusha mov add mov push xor test pop fcomps mov add popa mov lcall in fcmovu lds rorb or ds mov in leave (bad) jmp test mov sahf xchg ret xchg xor adc or adc in adc dec xchg xor addr16 mov daa pop dec dec iret sahf xchg dec mov fisubr mov fnsave mov mov pop mov jg push dec or add rorb inc and fcomp ss push jmp mov orl fcmovnbe test push mov imulb adc push jle mov xor add idivl fs xlat lods jle (bad) sbb pusha lcall sbb ja sarb je fdivrl nop sti xchg insl dec sahf (bad) and xchg mov add (bad) push add cmpsb xchg cli std aad jo enter jnp jno loopne ds and sub lahf lahf stc in push jle jmp or and sub test in insl outsl xor sbb repz and mov inc (bad) dec cmpsl in xor mov jl or or sahf loop rorb repz xchg fistl sub outsl add ja inc in mov sbb (bad) mov faddl jge ljmp inc mov imul add sbb adc xchg cs rolb aad and xchg push adc je mov insl (bad) out sbb test mov xchg jae clc dec mov rclb lock add ss adc cmp mov fwait ss jbe cmpsl in in mul inc push outsl and dec (bad) (bad) jmp jb adc push (bad) fild push js or fstpl jne clc sbb pop mov jmp add jns jge xchg daa jno sbb mov fnstsw lahf and push test push jle xchg in cmp inc mov or pop into (bad) out inc int ret add xor adc and test push cld andl or sbb leave push out jns,pt pop cmpsl loop push fcompl xchg inc fadd ja xchg pop loopne pop into dec jns (bad) out rcrl xchg call mov fmuls (bad) adc push jle lock fnstcw int3 adc mov sub hlt cmp and sahf mov mov and aad mov les in mov adc xchg je inc hlt sbb sbb imul mov xor in cmp neg bound cwtl mov xchg dec and xorl sub movsb jmp xchg mov jmp test mov inc xchg xchg pop mov in sub xchg mov mov ljmpw inc jl test fisttpl pop dec cltd ret add int aam add mov fidivr mov xor sahf or dec hlt popf nop inc lcall inc jecxz or xchg mov lods inc call faddp idivb loope mov pop cld push cmp add mov les pop pop cmpl rol popf jg push loope xor scas imul clc out cmp sarb test or fiaddl mov pop int3 (bad) bound arpl bound xor sbb fs xlat notl stos mov push push dec fisubrl or stos icebp xor jns repz in lds fwait mov inc inc pushf fs fistpl aaa divb mov inc fldenv mov mov pop or out or repnz or adc (bad) dec aaa out mov out ret into dec out mov xor adc outsl lret cmovb bnd xor repz and sti sti test mov push push test fadd mov leave out test out or lea xor ret jno mov movsl and mov mov xchg xor outsb mov ret xchg mov or pop or in cld stc scas inc int push call popa les ds mov data16 stos ja in mov inc pop push inc out mov insb and add push jle push dec jmp push jno lret in repz ljmp sub aaa jb insb jg push jns adc and mov jmp mov dec mov push mov mov pushf mov bswap clc cmp xchg mov idiv dec xchg loope xor out mov cmp cmc adcl cmc (bad) push push mov ja fdivrl push lahf cs leave pop nop adc jecxz std mov test xchg sub lret je,pn cmp push mov mov push aam adc xor inc push inc sub lock rolb mov loopne mov pop pop push es insl popf (bad) mov fadds push jle xchg (bad) mov and cmpsl fisttpll sub test and mov push (bad) mov shrl mov push pop adc hlt push xorb xchg jmp inc inc iret push xor push sbb add loop push pop mov push push popa or ret pusha mov bswap cmpsl loopne aas (bad) xchg jbe pushf hlt imul outsb data16 or iret add sbb enter test subb insw mov mov dec mov mov leave xor call add push mov in aaa mov dec xchg jecxz adc int bound (bad) loopne repz (bad) mov sbb jae test mov insl ret xor loopne mov mov push fisubrl out xchg pop and cmp (bad) fnstcw xchg cwtl inc lock out dec adc push fdivrs pushf jmp pop inc scas in pop (bad) mov ja mov jo pop xchg in inc cmovle or cltd mov mov out mov jns mov int inc (bad) mov mov dec test out jne push ss je mov outsb xchg (bad) push mov cmc fnsave leave jge bound sahf jbe jecxz mov jp movsl mov mov mov mov mov jge icebp dec xchg int3 shlb bound lret nop lcall inc dec mov jo divl movl mov adcw in nop aas jo and xchg or call (bad) inc dec mov inc (bad) out subb cmpsl subb sub stos pop test fisttpl inc pop orl clc aaa jle jbe jo mov inc outsl repz ret pop aas add sbb pop icebp inc jle in cmp cld or (bad) hlt adcl adc int3 lods rcrl add leave dec (bad) rorb outsb aam cmp mov int3 test popf movsl lahf adc cmpsl cld rcl add dec mov add jge test inc add sbb mov in sbb xchg lods (bad) adc dec rclb mov pusha pop cmpb mov mov mov lret (bad) loope je (bad) pop lods adc fldenv jno icebp daa jl dec adcl insb mov dec fsubr pop mov and stos jae adc sti lods mov add pop leave mov sbb sbb and frstpm(287 shrd pushfw rolb in cltd rorb jnp (bad) imul rclb pop xor mov add push mov jl js mov inc scas xchg jl or jle mov jmp or out jo xchg aaa sahf and pusha nop and jae jbe jns sti cs jg or leave test xchg push iret out int in test xchg jle lret loope roll jl or je or scas mov imul mov cwtl xchg insb mov das pop lea sti fmull out dec lock sub inc jns inc in (bad) insb push fimull adc dec sbb js and aas push or push push mov or mov sub jl add outsb jno mov sub and cmp arpl mov lods jbe add mov popa iret pop push cwtl push inc jbe cmc mov and and stos pop int cmp pop movsb test ret push pop rcrl cli mov cmpsl cmp push (bad) cmp jl mov mov push cmp movsb stos xchg out daa ret push jle or lea outsl leave mov mov aad ja dec push leave push cmp mov jecxz,pn lods int mov xchg movsb adc dec dec pop aad pop pushf je jecxz push out add lea sahf aad mov push add mov leave scas xor das mov xchg (bad) loope dec mov mov mov mov mov mov pop les xchg mov ret mov adc push jecxz int (bad) xchg adc mov aad dec ret test mov rorb mov mov adc inc dec mov mov add mov mov fwait in sarb aaa adc shrl dec das rcll fsubs inc mov xchg ja pop inc adc xor mov adc mov (bad) repz iret mov sub sbb les sub in cmc in movsb and test lea pop push mov aas mov stos cmpsb jmp jl or insl or and clc lret jg cmp (bad) mov in pop lret loop (bad) ret aam scas aad xchg jecxz inc rorl test mov or push mov cmp adc call lret jg fsqrt gs jmp rcll movl xor push loopne mov ss xor mov sbb inc or adc adc out jl outsb xlat cli mov sub (bad) dec inc test mov inc add dec scas fimul adc adc jle mov mov (bad) movsl je scas or push or inc test sbb pop jno mov and push jecxz mov lret dec mov mov mov (bad) jo cmp jp,pt inc clc lds mov stos sub stc roll push mov push mov sub mov inc sub inc inc push mov push fcmovnbe push xchg push fistp xchg inc mov inc enter pop jl push nop xor bound (bad) mov mov mov (bad) fisubr dec xchg push jp mov stos test push mov add jae mov pop cmp jp push xor btrl sub outsb lods add enter jg adc xor dec dec push jo jae call fcmovbe jle test insl cmp stc lcall pop push hlt jae mov data16 cmp rclb xchg enter push cmp mov les cltd mov or das mov or mov (bad) mov xchg push nop dec jg push test sub sub inc mov in adc adc and movsl (bad) (bad) push add jb lods and addw mov xlat inc pop dec call inc mov lahf or xchg std jbe mov add das test out inc sbb cmpsl mov xchg pop int3 pop and add jl fnop dec xor mov mov xlat inc test mov out shl jne lahf (bad) xor adc mov in jg jmp cmpsl push jne cmp push mov xchg jmp gs stos jecxz aad mov and pop push xor jge dec (bad) dec or xchg loope mov jnp lock scas in jns mov daa pop shll (bad) rclb inc (bad) sub mov mov sbb inc pop sub mov pop shrl and into mov cmc ret adc and cmp scas xor pop addr16 pop or jl push rolb jbe fstl xor sbb mov mov aad sti data16 xor in dec fisubr bsf mov (bad) in (bad) loop cmp jns push mov mov inc and cmp pop test jnp fdivrs jbe cmp jmp mov test pop pop lock adc and xor adc add jg in ss outsb data16 fnstenv and mov mov daa (bad) ds sbb jbe cmp std fxch aaa ja push fisub das fisttpll dec ret push inc lret sub push pop int3 js iret test std out mov push dec das xlat lods dec push inc lods dec sbb stos jb lahf inc push hlt pop and xor mov pop stos rorl fstpt xlat jle push leave mov xor test mov pop (bad) pop mov ss insb dec sbb mov and jns xchg lahf (bad) cli jns jg adc insb imul or push jns insb adc or sbb inc cmp push iret fildl orl fldenv aam add outsl popa jle (bad) scas mov mov lea cld ss hlt add or or mov pop fadd or cmp insb dec sub les es addr16 jne lock ljmp push push sub fs push pusha jp je mov pushf ret push fsubrs mov inc and mov leave cmp sbb bound xchg jl jecxz jb,pt lock adc dec and out xchg add pop (bad) push add es scas dec dec xchg dec xchg data16 mov push pop js and mov pop cvtdq2ps mov lds xchg jecxz mov dec int3 popa jno lock fldenv mov sahf sub das jecxz pop repnz and fcoms les orl out cmp pop xchg cld mov (bad) in jae mov lret pushf es clc je (bad) pop std ds loop dec mov clts (bad) scas in lcall clc mov mov stos adc mov mov test fistl fildll push mov sbb imul mov push xor cmpsb and mov mov ja push roll push movsb mov mov xchg mov jae in (bad) dec adc sub sahf jge add mov jne mov pop lcall (bad) mov lods dec ljmp dec mov insb jp ljmp sub fnstcw cmp xor mov dec outsb notl loop mov jp jnp lret (bad) mov pushf stos or std clc fmuls jg fildll add or nop mov dec outsb pop (bad) push rcl movsb or jbe push add int3 idivb fild xor rorl sbb arpl push cmp mov aam fxch or insl sbb fld subl out test mov mov add icebp adc dec jge out test mov mov push je ljmp int xor or jmp mov sub in pushf ffreep mov fwait jecxz mov sahf cmp fistpl lret jmp add xor out jle xor mov xchg xor xchg sbb mov cltd pop and adc lret cs and rcl xchg sbb mov fldlg2 jg xorb dec and mov iret cmp cwtl mov dec sbb out addl dec pop addr16 les pop mov sbb leave sub in clc insl add jle lods outsb in lcall xchg cli cmp sub js inc nop mov pushf in jne jg dec and in sbb data16 int3 sub push cmpsb xor jbe lahf in ja (bad) lock (bad) sbbb aam mov push insl rcrb jno out adc mov bound cmpsl sar (bad) scas iret push je pushf test imul into adc xchg xlat sbb (bad) cltd mov rolb mov loope mov fstpt jp (bad) (bad) adc sub pop decl bound cmp lea sub pop orl lea lahf mov jmp mov push cmp aad adc pop ret jp lods pop std jno test call out ds cli loope or mov add xchg push lock int xor or inc fild and arpl rcll ds mov std push data16 mov lds scas cmpsb lahf xor pop sub jp add aaa iret sub (bad) fstpt imul mov test fsub cltd sub fldcw cmpsl pop insl jno dec jae (bad) in ds cmp sub out ds add mov jno sub cmp jnp popf out xchg mov dec add andl mov test sub testl in jmp cmp pop jo in or cld rcr fs sbb mov ja jecxz mov jecxz into loop (bad) hlt (bad) sahf lret or inc mov outsb push rclb mov daa in xchg push jl cwtl inc ja loope dec cld push icebp sbb mov aad sub lods idivb leave popa insb mov lea add push dec mov xchg mov jo jno or (bad) stc mov pop int les scas push mov aas pop out push mov xchg in movaps stc sbb push xor das dec stc (bad) int push cld push add xchg sbb xlat sub xchg adc out je sbb stc mov data16 mov pop add ds cmc movsl inc add xor ss sbb sbbl je aas sub mov adc inc cmc sbbl outsl sbb push psubusb hlt jnp popf and lods or (bad) push inc xchg in mov pop push sbb push js dec in and sub es in push je aam inc push cmpsl scas inc insl adc jbe jne clc jl inc inc ds in xor fmulp addl mov aaa mov sarb lea xlat mov shrl jmp cmpsl xor ljmp lret cmpsl cmp adc iret pop push mov xchg adc xchg or nop inc inc adc sub jno int3 andl and xchg rcll dec insl shlb sarb xchg lcall add fstenv adc cmpsl sbb shrl ja adc xchg pusha ljmp dec push rolb xor and mov dec aam sub inc cld loop mov jcxz jne test and push add mov sbb jb or lret pop in cwtl fsubs inc outsb mov sub dec jno sbb outsb in pop lea mov push sahf hlt fsub fldcw adc outsb not adc inc (bad) std nop sbb fsubs fistp ficom pop inc rorl in lds cmp jge or mov lods mov loopne xchg xchg jns stos mov shlb cmpsb stc and in movsb mov out adc mov mov jae xchg (bad) lret js sbb hlt jne or xor popa mov test cmpsl cli sub dec cmp sbb int aad cmp pop lock hlt xor mov xchg mov test xchg mov sub insb xchg cld jmp mov mov loop jne or lret (bad) xlat mov int popa and inc sub xor incl push inc push push push jmp ficoml sbb sbb lods outsb mov dec (bad) aam cmc popf xchg sbb inc sub sub sub nop adc adc insl mov scas push push in cmp mov mov mov adc lea popf ds mov push sbb (bad) mov inc xchg out aad add das pusha xchg mov daa push jg pop stos mov rorb repz sarl inc fwait aad mov cmc andb pop nop mov out add mov cmpsb push fidivr ss pop mov mov or rorl jge push addr16 mov mov (bad) out jnp fidivl arpl xor jecxz subb xchg inc data16 ja js test sub inc or or in push push insl int repnz aam (bad) fstpl andb data16 arpl mov or dec fprem1 or mov insl mov aas push cwtl rcll lahf lret int xor mov mov js lret addl inc in enter mov lahf mov stos lahf (bad) aas mov out and lods pusha jmp adcb push jns lods jle loope (bad) jmp pop lock (bad) xchg pop mov test ja push jge add jo push adc xchg mov in cmp cmpsl pop and adc adc iret sahf js pop (bad) mov out inc test sub in xlat stc shr inc mov cmp add xchg mov mov and mov popa hlt sub add mov push in outsb clc mov and jo or jge xchg lea jnp mov cmp push hlt in xor mov into inc sub pop fwait dec test and xchg addr16 add dec ds fcoml mov pop cmpsb push dec insb mov faddp ja (bad) hlt (bad) push cmp xorb and in sbb jecxz arpl je adc or dec (bad) pushf jecxz mov jl test in adcl jo test outsl push (bad) popf push push sub jle repnz dec jnp sub xchg stc ret (bad) rep aaa leave xchg mov fidivrl daa pop pusha mov test outsl sub jbe mov (bad) push repz push call insl adc jle cmp in mov iret fdivrl jo sbbl jge adc xor cmp mov shll hlt pcmpgtb mov data16 mov pusha add push mov lds aad je mov xlat ss mov pop dec lcall dec mov adc lock cmp fs lea sbb nopl lea loop loope test call sahf aad repz sar mov mov jge push pop jp push inc push cmpl xchg aad test push leave cmp xchg sbb loopne dec aas daa pop test or popl mov push imul (bad) mov daa push cli mov lret aam sub (bad) loope mov in rorl hlt sub iret mov orb push mov dec mov pop ret mov je sub daa mov pop pop mov pop idivb jnp loope popf cmp mov dec popa pop sub and pop fwait sti pusha mov enter fisttpl lods dec mov cmp push and ja adc mov push inc pop mov pushw fsubl dec stos cmp rdpmc cmpl jns lret push cmp test mov lret (bad) enter mov iret in nop mov adc cltd rorb (bad) leave add cmp mov ljmp int3 fistpl and dec add jle out xchg mov xchg xor mov cmpsb lds mov movsl in mov add ss int3 pcmpgtb adc jbe mov int ljmp pop in mov jb adc sub or cmpsb ljmp les lock add or in lahf push fdivrl test pop clc fwait aam cld (bad) stos dec mov lahf iret jbe pop cmp mov ds aaa and jge pop outsl pop sbb mov fldt pop outsl mov pushf out outsl push out ret add and loop das cltd fnstsw mov js pop xorl in fnstcw and mov in dec push and scas push mov cmp adc xchg int fisttpll test pop stc test out xor add outsb push xchg adc inc ficompl mov add push mov js fsubrl add mov (bad) (bad) xor jo jl sbb inc mov fucom push mov pop ja lsl test jg (bad) ds (bad) aad popa scas mov fs mov push inc mov push jg loopne xor mov repnz test pop sub popf or movb and lea mov pop xor outsb int dec je loope push es xchg test add jbe push popf fmuls and jle mov inc stos aam shrb mov xor dec out mov (bad) add push mov ror pop (bad) mov mov dec mov (bad) arpl scas test push int loope inc outsb out cmp and call jge jecxz orb lock pop outsb push cmp imul (bad) lods faddp inc xchg inc mov sbb mov inc cs mov add mov and jnp (bad) pop push fwait mov xor clc test push adc out cmc adc dec push mov mov sbb add xchg inc and push jp into push into in pop ds cltd mov push rol mov inc aaa rorl in pop jne xchg inc cmpsb in in dec test mov test ds jp lret sbb dec dec in xchg dec cld pop in cmp mov mov int push test in insb test sub cmpsb bound mov mov cmp rolb mov push add jo (bad) adc rolb inc (bad) aam sti aaa mov sub pop pop dec scas adc lret jg out in and jno xor inc fmul mov adcl cld jge jl ja inc mov cwtl je das jb cmpsb mov jmp jecxz push fstpt cmp scas loop in add cmp inc jecxz jb mov dec add cmpsl dec mov mov insb mov sahf in jnp fistpl cmpsb (bad) (bad) xor into in inc xchg mov mov ljmp repz inc mov cmpsb cwtl outsb pop push jo mov lea jo cli pop xchg sarl jge xchg ret mov stos imul sub loopne out push mov cmpsb lret dec push in test data16 lock lcall sub les jg dec insb xlat iret (bad) in (bad) jle lods adc or pop js dec in jecxz adc add fadds in jle or in lods and sub xchg push fwait inc lcall xchg mov push xor sbb add mov add add fsubs push cmp arpl rolb xchg xor hlt pop push in dec inc aaa mov xor mov adc mov stos inc mov fcoml and mov cmpsb sbb cli cmpsl jb pop sti inc (bad) and mov (bad) lcall cmp xchg pop imul into fld in jbe inc pmuludq mov adcl out cmp movsb je and push rorb jns into sarb adc shlb icebp push or outsl fist arpl fwait mov xchg hlt add dec jb into test fcomip mov aam xchg sbbb cmp mov (bad) movl lret jno sub das sub movsl xchg mov (bad) aaa mov sti inc orb fsave mov xor inc xchg mov pop loop mov push mov push or (bad) mov (bad) js sbb mov scas dec lea aam xor in adc out mov xchg inc test cs cs mov loope mov nop mov scas popf xchg adc les lods popa jbe lea ja in xchg iret test push scas mov dec and decl push push and add repz sbb inc (bad) xor fnsave mov fdivl test sbb pop out stos sbb int3 in or lahf insl xchg movsb push loop stos xchg cmc jecxz roll ds outsb cpuid mov movsl xor ret dec cmp add (bad) jnp cmpsl mov shrb mov ljmp mov sub push inc xor mov mov cmp jge or add dec sbb adc pop popf jo or rcrb adc hlt mov jno addr16 data16 mov push xor or pop xor add (bad) mov push lret clc cmp (bad) xchg lods outsb cs jg outsb int cmp ret lea or mov aad cmp arpl xchg aad xor out sub es out or cmp mov dec sub rorl (bad) (bad) jecxz mov pop mov mov loopne shrl mov nop jae outsb fs cmpsl inc jo mov loopne xor movsl (bad) clc ljmp (bad) clc leave and jmp roll dec mov (bad) mov cwtl and es int push add leave rclb sahf out enter xchg xchg xchg sub (bad) rcrb xchg push mov push fdivs jge adc mov xlat mov (bad) or ret mov push in testb divb cmpsl scas fnstenv cmp push mov mov das fldt mov jns out xor push cmpsl test sahf jnp jmp pusha mov adc xlat outsb push push sarl (bad) iret insb scas aaa push cmc inc xorl add icebp pop add xor jne lret les js or xor xchg into stos ficoml mov jae dec or jg shrb ja in inc adc (bad) in nop cmp and jge sub jbe mov daa mov jecxz hlt insl mov and in add mov adc movsb sub imul cld mov cli ficomp (bad) imul mov xchg mov mov sbb adc xchg mov pop test mov cltd insl xor xchg xlat mov int in repnz sahf (bad) and or add mov cltd or sub icebp mov lret in xor iret aam int3 dec loope cs repz pushf xchg adc sub ds adc (bad) loopne (bad) and hlt mov xchg mov dec add mov and or dec xchg mov xor mov mov addr16 fimul fldln2 cmp pop mov (bad) xor xchg inc (bad) mov mov add or int add mov lahf loop sti mov mov imul int cmp xchg in add (bad) (bad) mov cltd jg or push lea shlb and xor mov sbb push inc inc mov clc push movsl or jge mov sbb or inc push cmp in rorb mov rorb fs scas leave iret aaa mov xor sub mov loop (bad) xlat fdivs adc xor leave jp mov cmc jmp subb xor sub dec in cwtl cltd ss cmp xor int push mov push cmc fbld lret in lock jge mov (bad) mov jno ja int mov adc xcrypt-ofb cmpsl cs lret mov sub and push in inc js dec cmc mov scas insb ja or in dec insb jecxz inc popf push add ss data16 inc mov stos push js loop jmp adc xor sbb scas rcl mov mov and ds daa pusha in movsl iret insb lods mov cld into popf push inc test int sbb test adc (bad) jo jns (bad) in adc cmp data16 mov jns adc addr16 xor fstpl jle or cmp and aaa movsl data16 jge or pop jecxz mov movsl sub lods outsb jb icebp mov sbb test cmp int xlat dec sbb aaa data16 dec xor mov or sub scas fnsave lret xlat stc adcb loopne cld mov fsts aas inc js adc outsl jl dec xchg push fstl xchg add js and ds mov mov mov sti dec inc pop int3 dec out sahf jno sub dec cmp loop adc in lds xor mov std xor dec inc add lcall mov test sub rorb push mov outsl xchg lea subl pop adcl cs jns or mov jecxz mov mov in jmp imul lret int outsb jl fwait xchg pop out mov push push mov jb sub xor jae mov cmc cmp add in or jmp xor and push cmpl and jg push mov insb in xchg repnz add add jle fwait mov mov clc cs xchg push std mov and mov mov sarb push mov jb mov mov push pop (bad) sub xchg sub lea dec in adc mov fstl push inc dec mov (bad) sbb sbb outsb cwtl lret (bad) mov mov jecxz jg leave or lea sbb adc mov lahf test lret nop mov (bad) mov bound roll mov cs cld loopne mov jge xchg mov les cmp loop mov adc mov (bad) jns inc aam cli sbb in in jg (bad) inc mov pop mov mov pop pop lods cmpl pop aam stos mov inc cmp mov inc mov mov mov add loope ret xor andb scas movntps in cltd loope cmp sub mov and cs idiv sti and mov imul pop pop push dec mov movsl mov in fwait incb push jns cmp jbe fild jl test sbb int3 and inc fdiv dec in scas daa mov dec inc stc scas xchg dec jmp inc mov stc push mov dec int3 xlat ret xchg loopne mov mov dec in mov jge xchg inc aad or xchg mov outsl pop outsb aad sahf roll sbb int3 push clc pop jno jbe fcom sub xchg jnp sub pop test (bad) js adcl fimul fcmovnb outsb orl in ss xchg cmp fimul lret mov push test mov dec adc adc scas rolb add jle iret jl fimul mov sbbb lcall (bad) loopne mov lcall xlat jns xchg sahf xchg fldl or arpl cltd imul daa inc jnp and scas cmp mov xor mov push (bad) mov jmp mov inc inc movsl scas scas cmc stos cltd xchg in push or mov mov jbe mov xor out xchg scas ja in or cmpl nop push leave aam out cmpl jnp or push mov je or mov dec lcall addr16 test jl inc iret adc pop subb inc jg repz adc lahf jp out popf mov lods push cmp xchg sbb scas jge push nop in mov or outsb xchg roll jp mov inc or mov or cmp loop adc nop (bad) clc outsb (bad) cld mov in pop and mov dec jnp ss push cmp push cmpsl inc into mov pop mov cmp loop inc mov mov leave data16 std pop push lahf xchg test jne lds inc and (bad) clc andb test (bad) outsb sbb cli lds jmp scas sbb mov mov sbb lret sub push mov mov pop mov (bad) clc les and jle sbb cltd sbb test mov add mov pop cmp jb adc xchg dec jne mov daa sub pop cld test cmc adc (bad) roll pop adc push xor mov add test mov shl loopne mov pop dec fcmovne ss out push scas adc dec test daa jbe mov push and repz mov adc xlat lea sbb mov shll pop iret stos jmp scas into (bad) int adc test mov pop xchg xor mov sub jbe mov into sbb mov bound aad outsl out mov icebp insl hlt add ja cmpsb lea jmp mov sub in ljmp lcall sub pop sbb (bad) bound int xchg lea xchg jmp push aas pop cmp adc mov lret adc push cmp mov icebp cwtl pop mov outsb xchg lds scas mov add ja or cmc into les jecxz cmpsl xor in add imul xlat dec outsl mov dec test push sti push mov stc add xchg and adc add fwait leave ss icebp sub cmpsl mov cmp sub dec add pop ficompl mov enter sub in cmp js jle cmp mov mov or xchg sbb dec pop (bad) adcl hlt mov int3 or lcall push inc jle jnp jmp jg add fsubl (bad) lock loopne or push sub mov lret and xchg cmp push mov xchg icebp xor pop in push movsb mov push mov imull mov push pop mov mov xchg push das and adc mov cmpsl mov add mov test push test (bad) gs inc (bad) mov fbld insl and sbb into xchg cwtl out mov adc movsl shr sub mov pop sarb pop (bad) pop and pop pop adc jg dec xchg lcall ljmp pop mov push push xchg (bad) dec out jno inc and je pop xchg in loopne js add fldenv adc aaa fsubrl mov sub cmp mov pop les les jo mov decb in inc daa jge pop lock adc (bad) xchg icebp sbb jno jne inc jno cmc dec sahf pop rcrl xlat and (bad) push add jle fstl mov lret in (bad) xchg inc rcrl xchg xchg xchg (bad) dec cmc jg jmp js je ja dec mov out scas ret mov jbe orl or jecxz or mov mov shll bound xchg daa mov cmpsl sub mov data16 (bad) sub sub in mov imul or mov icebp testb mov jbe faddp adc push xchg test int iret outsl in xchg (bad) rcll push mov mov sbb (bad) (bad) call cld xchg nop popa mov push or mov loop lret ds mov jp fidivrl push jl rolb add push jbe scas in jecxz gs mov inc inc sub mov lods mov (bad) js add arpl sub enter shrb lahf ss jo addl cmp mov scas (bad) cmp xchg stos movsl lock mov rorl inc mov jo ficomp mov rol sbb xorb add mov stos add sub jmp sbb out push mov push das pop cwtl jb jbe mov push icebp (bad) jns clc cmp lods push mov nop (bad) push xchg cltd inc push imull inc cwtl pop fistpll test gs mov and cwtl lea fs mov jne sti pop dec adc push mov cwtl mov popf inc cmp push xlat test outsb sub push or test push mov adc lods cmp fsubp test loopne icebp pop loope jp mov cmp addb push cmp dec xchg inc mov xchg xor das in push lods cmpb into hlt fist lahf cld xor push adc ficoml cmp lds and mov loopne sahf lret iret add cmp xchg push sti and adc std pusha mov add aam cmp ror or mov (bad) xor xchg in inc insb icebp outsl jmp aaa jo xor faddl jnp mov into (bad) loopne dec das lods inc in jle pusha in xchg adc pushw in pusha sbb das leave xor insl inc and adc push mov and in aas and push or jp outsl in es es aad jle adc push fldenv mov in xor cmp pop imul imul dec push js roll imul out in lods xchg lcall pushf aas dec jns jmp in and call inc sub push icebp mov add scas imull icebp inc out out pop pop pop lea jns dec mov out sbb inc push iret xor inc sbbb pop inc xchg mov pop jle and les jns adc (bad) daa dec fdivrl divl (bad) cli xor aaa push movsb xlat sbb xchg mov or or ficom mov add addb stc push in xchg inc mov mov sub (bad) loop outsb push mov divb adc bound mov (bad) (bad) data16 adc or arpl jns add pop jle jbe mov js cmpsl aam mov cmp loop scas fisub std add mov (bad) mov dec inc push (bad) daa and cmpsb test xchg adc iret xchg lcall popa add mov cmp adc jp fsts ds fcomps fstpt std int cmpsb mov xor xchg jecxz or mov fldenv mov lods call pop in adc pop fwait (bad) jmp dec mov inc sahf stc jg sti repnz adc pop cmp nop lret dec test mov std xor or mov nop repnz repz loope sub ret mov lret mov adc mov cs enter loope adc and fldt push fimull jbe push pop mov das mov fwait adc popf loopne notb mov adc push inc cld fisttpll dec jbe int3 test and pop lds movsl xchg push lea jmp aaa sub xchg push cmp mov or inc mov pop std mov mov mov mov cld arpl mov in fsubl adcl rcll (bad) dec lds push jle out inc in aad add pop mov inc dec (bad) mov mov push arpl cmc or mov cwtl fildll and mov jge aad jae fistpl mov push (bad) sub ret and notl mov mov jbe icebp mov out add dec cmpl push lahf shr pop xchg mov add mov iret mov popa fdiv fistpll out jle out xchg inc push and scas mov or inc aas jg xor xlat push pop xlat jns lods mov pop xor stos fwait and dec repz clc roll lods mov xor aaa fnstcw fldenv dec in (bad) push jb dec in jle movb jecxz fsubs mov pushl push mov addr16 shr outsb push lret lds add mov dec mov lods in imul mov push es mov int3 imul add jnp xor jge xchg mov mov add popa dec stos add test (bad) push xor mov push pushf int adc push nop push mov mov and lea cmpb (bad) cli jle clc xchg and sub mov adc into xorb ja (bad) mov adc mov sbb adc jo and mov int3 arpl cmp dec out movd cmpl and aaa mov xchg movsb pop jns or jb aaa mov push jb jbe xchg xchg call jb mov mov and pop xchg cmpsl sbb icebp aam jb mov outsl scas sub je xchg jno mov lret mov add xchg leave xor adc out inc cmp and fildll and int mov out dec clc cmp mov lea mov mov mov add mov push outsb sub xor pop push fsubl out mov ret das sub stc sahf sbb dec aad test xchg outsl dec test sbb repnz imul jge cld push sbb sbb mov in dec mov dec jne add push (bad) mov (bad) jno cmp data16 mov xlat cmp mov push xchg bound movsb add pop xor pop dec mov arpl mov mov mov pop ret stc push or repz (bad) scas insb in xchg (bad) cmp xor out xlat mov mov push push fdivl and lods scas push in mov es cmp or mov pop loope jp push aad mov mov jnp ss test and mov es jecxz (bad) daa push addr16 mov clc test inc aad mov mov lcall or rorl jmp outsl xchg mov pop jnp pusha movsb jns mov sahf repz mov mov mov xchg xchg out push mov test (bad) (bad) mov ret daa imul pop sub xchg add es and xor mov in jmp fdivs lock cmp call sbb add xchg jl or loop enter or ret push (bad) mov int in push fstps inc dec mov push push or add mov xchg add test mov mov test insb jns repnz add pop cmp fisttp add test pop int3 in sti pusha xchg and add ror ss insb add test xchg add fld jnp (bad) inc sti repz adc mov pop dec das cmpsl push push jg test jp push ds lock lcall jo adc cld aam or and into fcoml test lret xchg jg mov jnp or mov inc adc lods inc mov sahf in adc mov dec sbbl enter fbstp push cmp shll jb inc inc dec das jp lock test push out das pop test in ret mov add lods pop test cmp repnz mov (bad) jae jl fiadd pop fs test sbb mov popa jge dec inc inc out mov pop stos jg or fmul jbe mov cmp into ds in pusha or sub mov testb pusha ror icebp xor xor dec lret add es sahf into sub test in mov adc enter dec mov dec xor loope cs stc (bad) and (bad) jb xchg jp xor rcrl mov xchg xchg stc mov lods inc jne sbbl mov pop loop sub and into jge lcall jp imul mov add in leave mov xor jae add (bad) mov std test jne mov fisttpll add jge int data16 in sbb fimul xlat sti sub mov inc test ljmp sub inc imul dec adc add jl sbb xchg aam leave inc in push test mov push adcl push outsb mov sbb push mov pusha xchg mov sub mov ds or das les pushf xchg add (bad) je int push cmpsl jnp jl inc jg cmpsl rorl test mov les or push ljmp cmc add jg adc xchg inc mov loop aam mov add cmp xchg pop mov mov and or sbb xchg mov jno dec cmp mov cli popa mov jo add decb in dec and add insb dec mov cwtl mov adc call push leave jo push outsl out mov dec fdivl mov or add jnp data16 pop fistp jne or adc xchg mov aad jmp (bad) in inc in mov sbb mov xchg aaa daa push mov pop mov loope adc fnsave mov testl jmp pop fcomi scas into in push add xor cmp (bad) icebp fmul mov inc mov ficom inc (bad) sahf popa mov xchg mov mov jae out lds mov (bad) cmp mov add mov xchg xchg scas mov sbb mov mov aam add cld push mov (bad) mov std or mov cmp dec and sti rorl add xchg mov dec pop div popa jns mov aad mov mov push and dec jl mov int3 pop mov lds out mov add mov inc xchg sahf (bad) mov repnz dec fwait gs popa mov inc loopne sbbl repz jl and push cmpsw (bad) jbe mov push cmp push and or pop mov sub sbb mov mov xchg mov dec jnp repz mov scas or stos adc push jmp je into xchg sbb scas ds jg mov das pop and xor iret mov dec nop mov rolb lret cmp int3 jecxz add mov push dec mov in add push mov in mov adc pop lods in inc mov push ss dec fwait and bound mov jg fisttp (bad) mov pop lcall lahf ljmp sahf add cmp mov cs pop and push lods sub or lea sub sbbl xor aas jp movsb inc or push xchg mov adc rorl in or pop rorl mov jae and jns mov sbb mov pop decb mov add jno inc cmc dec push in mov or int and ljmp mov xchg cmp mov and scas rorl jle in pop cmp fdivs mov scas sbb inc adcl adc pop rcll jno test cltd (bad) mov mov lds outsl test js pop mov mov mov int and jns cmp inc adc adc add mov call ret mov mov or jl jne add jge outsb xchg cltd das pop jo or mov daa fsubrp sub je or xlat pop mov and popf mov cs ret push js (bad) aas mov xor or and mov icebp fstps jmp js xchg xor push xlat xchg adc ss in fcoms add push mov outsb rolb sahf push adc and enter in adc and ret rcr mov sbb test sti sbb repz in data16 cmpsl xchg push aad jmp ror in xchg inc xchg xchg xchg std sti lret or ljmp push (bad) lea arpl fldl (bad) lock push shl cmp cs push mov cmp cmpsb cwtl mov cld pushf or test shll ret out ds sub inc iret or int out fisubrl cmp stc mov adc in xor dec dec fnop cld movsb mov mov in insl and sbb or fwait jmp xor xlat cld jecxz cmpsl push je dec cmc pop loopne test cmpsl leave dec fistl mov ret and push jge hlt and mov loopne add xor shl cmpsl ja,pt mov shr test mov sub mov mov cwtl ret sbb fidiv add les test fdivs subl jecxz lock rcrb cmp int jo das (bad) cmp in aas mov fsubrs xlat arpl imul fs jmp mov inc int pushf lret mov dec cmp (bad) in mov mov or mov cmpl mov movsl xchg mov mov movl ljmp out push ja in sbb cwtl mov lret dec mov push pushf xchg mov jb mov leave mov daa mov sub cmp lea xchg es push push mov mov mov nop aas adc (bad) or in mov cmpsl add std pop adc out cmp test in cmp cmpl ds mov (bad) xchg aam int mov jns pop (bad) out xchg mov mov imul adc jg mov sti push mov faddp push int aas lock pushf xchg push pusha mov icebp hlt test xchg push mov stc sub mov push lcall jmp push divl insl push bound mov lods popa dec jno es inc pop mov ja mov lds inc aam mov rclb mov sahf loop ljmp push out pop jae daa mov je mov or mov mov mov in xchg fwait test enter test mov pop mov xchg xchg push outsl movsl mov sbb mov ss (bad) push lods mov jbe enter pop ror xchg imulb adc mov inc xor mov test cmp and inc mov int mov sbb into aam xchg ret adc sti inc fstpt mov (bad) xor nop sub nop lds fwait mov icebp push lahf jne mov in outsl cmp sub (bad) in nop leave int in (bad) loopne mov jg mov xchg loopne insb jo popf mov lret pop jne lahf jo jl (bad) iret mov mov fcoms int3 mov and mov adc and hlt insb fcoms jns imul push mov push push mov iret clc cmp fisttpl push in iret test aam das push ljmp and insl or pushf outsl int and (bad) or push mov pop imul stos pop (bad) push nop mov jb ror or mov adc scas pushf testl mul cmp (bad) scas fisub mov ret sahf cmp mov fistl dec mov jo mov bound or mov push or mov push cmp cld rorl mov mov or inc cmp hlt xchg mov aaa inc push enter mov mov mov and mov iret notl pop mov push insl mov (bad) arpl les lret cli mov jl jne mov inc test das xor mov mov xchg out rol in stc push ret in outsl push das jge mov das xchg or ret scas and stos call jg les ret mov (bad) leave je out fstps xchg mov mov mov ds dec rorl shlb or cmp arpl ret or cmc cmp mov cmp mov fmull shrl sub or es dec or dec pushf mov stos inc iret mov cs aad mov movsl out push cmc sbb in jno mov sbb int lock incl out mov xchg mov loopne lea jle in outsl and in data16 adc and cmp mov mov out movsl insb mov in (bad) shll mov push jge xor insl in fisttp sahf outsb in jae gs mov mov scas adc std add dec push push inc mov mov in mov xchg repnz cmpsb ss (bad) xchg mov in mov dec push ds and pop inc outsb adc xchg in test (bad) imulb in add and in ret pusha cmp jb add js and cmp vmovdqa cmp dec in adc out sub jne mov (bad) arpl xchg test outsl bound lret mov scas jecxz sti sbb adc clc movl xchg sub lods dec mov dec adc mov test arpl imul int cwtl mov push outsl xchg mov push pop scas jae xor repnz dec jl es pop jne addb pop sti pop addr16 shlb imul mov inc mov jl push xchg pop rorl push jb adc mov sbb out mov fwait dec dec inc cmp inc shrb sbb inc in pop inc add pop mov add hlt fcompl cwtl mov sbb xor lea add pop pop fs push cmpsb je,pt (bad) shrb dec stos in add xlat xor outsb xchg roll int3 insb sbb lds sbb int3 fs js loop or adc mov cld std and dec mov scas mov je,pt push pop mov inc sti adc ss mov push mov mov mov mov inc dec aaa sbbb jle fnstenv out mov imul aas popf push mov mov mov mov mov fdivrl dec push (bad) mov mov mov jmp and or dec lahf mov int popa dec pop mov mov es fwait lret outsb jns and ljmp cmp push fsub dec jg jecxz adc add icebp mov xchg add dec pop xchg ret cmp arpl cld dec test test ss in fcompl pushf les lods inc insb in jne in test mov push sub mov xor add inc rcll lahf or xchg dec stos xchg mov dec xor xchg dec adc in push jns mov mov inc and mov in and roll fidivrl jecxz es pop leave inc pop sbb stos push roll mov test loop rcl lea cmpsl pop mov sahf xchg lods in (bad) dec out leave mov pop add mov pushf adc popa out cmpsb dec jbe sti mov push scas add or lea dec (bad) mov imul sub mov or jl in in int3 inc adc test popa ret sbb (bad) sbb xchg enter mov jne (bad) mov icebp sahf imul xor push push add mov and mov scas nop mov (bad) sbb addl das in mov push push pop (bad) add outsl dec imul push mov data16 and mov (bad) cli mov pop stos xchg clc or sahf shl push jp out sbb sbb cmp mov fstl imul data16 out mov jecxz call aad fucom pop mov sti in xchg inc jge into cmp inc or fst and ljmp xchg (bad) repnz mov pop das in popf fdivrs dec int roll es and scas arpl mov mov mov and fs cli xor push inc imul cmpsb push fmuls dec adc sbb pop lret adc (bad) ret in sarl loop in xchg shrl adc iret pop jne inc add mov add es notb mov xor push jl pop jo (bad) (bad) cmp test test xchg mov jle xor lock xchg scas mov test outsb addr16 ljmp inc outsb jae sbb ficompl mov mov call or out lods les imul jl imul inc adc bound adc (bad) xchg push lds push daa add mov sub scas mov push jbe aad jg lea popa bound mov sbb push pushf mov pop push jg in mov ret pop insl dec sti xchg int3 dec push mov cmp mov mov cmp cmp mov sti dec push xchg add mov sahf mov mov push cmp (bad) (bad) into repz xor ror out mov sub and or insl cmpsl lcall les mov fmull xchg pop or test mov ds sahf pop rcr push (bad) in nop sarb inc dec es or adc iret fildll jns add enter or cltd stos pushf subl sub cmp jo cmp outsl sub add (bad) xor or or sbb stos cmpsb xchg adc dec mov and jo push xchg jle mov xchg mov (bad) hlt pop mov dec push xlat jne lock mov pop stos jecxz ljmp or les int cmp mov mov and icebp push jno (bad) jge,pt push mov ja stos mov pop dec add test cld pop jle fstp mov mov dec mov faddl push jp mov push inc mull sbb xor xchg clc add xor pop push sbb jmp mov mov push xchg mov hlt ss mov dec mov push (bad) xor imul xchg je add ret mov movsb lcall add arpl sub aam cmpsb dec push mov jge aas add mov cmp int outsb cmp lret mov test test cmc xchg pop aam push jecxz sbbb push mov mov inc sarl fisttp in int3 jo cmp ret push add out push mov adc lcall shr rcll out mov and mov push or iret ss jae sarl add jo loope cmp shrl movsl dec test fcoml test clc push or mov mov cmp roll push jns or lret sbb test jl jns stos popf cmp mov loop jl das add add test ja (bad) mov mov add adc pop adc mov xor inc mov stos sub xor xor cltd mov int3 pop cmpsb xchg and jl into cmpsb adc out cmp lock inc aad or in pop and inc lcall mov pop jle inc int bound jecxz psubq xchg sbb inc jnp aas jbe lahf cmp sbb int hlt jp lock dec out fiaddl inc ret mov sub cmpsl in sti fcom arpl jp rep or dec aam (bad) mov xlat bsf mov pop iret xor sbb sub data16 arpl push pop sub mov mov fmuls ja adc fisttpll inc fcoml je fwait inc jo data16 xor cmp out (bad) cmc scas (bad) xchg cli xlat test dec sub in mov push movsb loop mov xchg sbb in arpl mov loop inc aad idivl lods ret int3 jbe (bad) rolb in shrl xchg add into lods in ds jge inc iret sar sahf xchg test mov (bad) mov ret mov adc sub cmp sar inc push in jo addb pushl cmp lcall ja,pt ds in ret sahf pop repnz das push mov add jns jo nop es or aad (bad) mov sahf mov push in (bad) test (bad) icebp bound mov push fwait mov mov lcall mov mov std inc ds inc mov ljmp cmp mov dec pop xchg (bad) shrl push movsl shlb xchg ljmp pushf and cld aaa data16 xor push mov xor sub mov xchg mov fs mov daa divb pushf fisub and repnz cmp mov xor mov xchg pusha push ret adc inc or or scas mov leave lds enter xor int3 sti pusha or sti test mov mov iret cld int rcl clc mov jg push dec in fsincos lds iret push in inc pop movsl lahf js push cmpsl pop adc popa pop xchg mov fnsave or daa xchg je nop aam mov mov cmp dec cmp (bad) iret bnd sahf test f2xm1 inc cmpsl sahf pop mov cld clc test lods sti cli sbb and fcoms lret fdiv sbb outsl jp std push pop mov jns jle ret mov outsb dec mov cmp and lea adc fstps nop dec fist push int scas (bad) nop mov sub (bad) or cmpsb lea stc xchg arpl loopne xchg scas and cmpsl aam push in or aas mov xchg mov mov outsb mov lret pop xchg roll mov mov jnp inc nop mov mov in lahf dec xchg ljmp test (bad) hlt test jecxz push mov cli jae mov xor movhps mov xor inc pop int (bad) dec sahf lea (bad) or testl stos sub jno push cmp es or insb cs jg (bad) pusha xor in sbb xchg xchg push fmull or mov cmp into xor leave and clc dec out in adc dec sti in (bad) adc push in inc sbb sub fld and pop in in jp insl dec mov dec mov in adc fisttp insl mov decl inc mov bound xchg and mov loop mov (bad) cmc jmp push adc imul dec push pushf jne sahf arpl xchg loop mov rcl dec cmp shrl mov xor sbb jg std les add adc sbb lret ret outsl fstl sahf in or sti fs xor les int fiaddl mov or sahf dec mov icebp or inc adc inc lcall idiv fs mov sarl xor stos mov mov call movsl out cmc or (bad) ror ret add jge dec aad mov movsb paddb rorb loopne mov xor jle rorl xchg dec faddp mov pop sbb xchg inc rcrl (bad) aas inc rorb xchg test push xlat dec mov jmp adc cli ja jmp stc scas mov push popf mov int3 mov (bad) push sahf leave mov and or xor in (bad) pop adc shl lahf push sbb pop cmp inc ja lahf jns (bad) pop pop sub in fs sbb call sbb cmpsl push mov sbb xor jle and cld mov sbb (bad) std js shrb add ljmp and popa add jno or leave mov and or jo mov mov sbb push xchg jo fisttpll cmp xor scas jl adc push inc scas movb add fildll push xor call xchg jns jp arpl (bad) pop adc (bad) pop pop in and popa mov cmp nop xchg jne mov fbld stc ficoml push je lret aad cmp inc adc (bad) (bad) std data16 stc or pop ja scas mov lds imul add dec push test outsl movntq lret pop dec in pop xor int mov test inc or iret xchg data16 push movsb jecxz outsb js push nop (bad) or stos sbb dec popf into decl mov int aaa add cmp dec mov sbb push jmp sahf adc mov mov add push addr16 adc mov aad loope pop mov fistl sbb mov popf pop js mov inc inc or aaa pop mov mov (bad) cmp xchg ds dec repnz mov sub xchg lods pop les pop inc fsubr nop pop sar mov stos inc ds mov jl mov xlat nop stc push inc sub in pop pop dec test push add nop mov jne jns mov mov xlat mov in idiv adc mov mov in xor lea test data16 sub mov pop ss (bad) mov loop std pop sbb movsb push stos xlat cmpsb adc or dec pushw add mov fistl push int dec xchg rclb aas mov xor mov mov fidivl jmp sarb inc out mov mov jbe testl mov xchg pop xchg incl std lret mov enter and mov jbe fwait mov pop not pop mov pop xor into push mov sub add data16 inc aas in in or sbb mov in adc arpl cmp mov jge adcb cmp cmp adc call or rclb cmp (bad) in dec jmp or loop outsb jl push inc ds sahf in push mull (bad) or or lods int shl ljmp jno and adc stos or in movsl addr16 mov int mov or hlt sub loope (bad) notl push imul mov jle mov (bad) movsl in push push (bad) popf cmp jg orb das insl xchg jmp and jl cmpsl sub ljmp idiv arpl in les sub insb aad (bad) es mov xor mov int3 xchg aam xor clc pop add inc xchg icebp or (bad) xor mov cmc mov xor cmp mov mov shlb add mov ret add mov ljmp pop imul pop out adc adc aaa add (bad) (bad) mov mov mov cmpsb mov fimul xor testl mov pop lock fisttp idivb aas jmp movsl xchg mov and cmp inc lahf rcll and inc fsqrt aaa dec or je in shl out pop add iret pop sub jle ret pop adc leave pop sub inc negl test mov js xchg (bad) icebp jle (bad) cmovp scas or and xor sbb push sti mov adc int3 (bad) enter xchg in cmp jae,pn iret shll js leave movsl add fildl adc sti pop out imulb add and inc cmpsb roll mov outsl test jbe pop scas xchg out in or xor loop or in dec (bad) arpl pusha push and sub pop mov in das rorl or inc in (bad) std stos fcmovne mov sbb in or jp in push ret cmp jb xchg mov xor subb dec shll adc sub lods loopne leave mov imul jle out mov cmp lea cmp xlat inc lea sub in clc push lods mov scas pop int pop sarb cwtl jmp sahf dec call cmp ret nop mov mov wbinvd add mov in push cmp sarb dec sbbl lcall mov sti pop ss in lahf xchg test sub push jecxz mov mov cmp sbb stos or leave sbb lods adc jp jbe in lret and dec (bad) insl mov lea outsl add mov xor push xchg std mov lock or dec push lret pop fld in push mov adc mov mov xchg je psubb xor cld cmp adc cmpsl xor xlat insb dec mov enter or cwtl add lds lret push (bad) repz adc mov xchg mov stos scas xor (bad) mov imul mov sub xor and push jle xchg pop mov nop mov scas test lea mov sbb out hlt or adc xlat int in push dec jae mov sbb xchg xchg imul (bad) adc push dec popf mov andb test mov (bad) into lds mov pmullw push dec divb (bad) orl data16 or mov mov into add mov arpl lods stos cmpsl xchg test mov lret adc push ljmp sbb dec mov icebp out ret xor test and cli pop repz insl into mov pop insb ret iret icebp dec cmp push adc mov or aad mov cmp clc and (bad) push xchg mov xchg iret sti sbb xorl imul cmc sti sbbb in lcall cmp lods pop scas mov rdpmc popf mov push pop movsl fstp into insl push andl dec cs or pop push ror scas fcompl aas mov mov sbb add inc mov lds loop pop cs jbe rclb xchg pop test cmp int dec enter sub mov popa jae jecxz mov xchg popf dec lea imul sbb pop in cmp sbb mov xor aam push lahf adc sbb jno insb (bad) loopne rorl push or es ret jno aaa sub mov gs pop sahf push es add sub add or iret or xchg inc (bad) mov aam cmp adc push xchg add cmp sbb mov mov mov (bad) jle bound out mov movsl out jns and ds lods adc (bad) mov cli in loopne int clc pop add sub push das add das (bad) push jle mov sub push inc mov mov lret jp std xchg mov sarl dec inc push (bad) mov dec xchg or xchg bound (bad) es fistpll popa mov bound mov mov movsb adc inc inc sbb dec aam fcoms leave movsl mov pop shr pop das les jl es mov sub fcomip imul ss cmc jle xor insb mov lahf scas pop (bad) cmp jbe jg push jne or pusha pop pop and mov mov hlt mov mov cmp mul ljmp es mov adc jmp add (bad) sbb sar xchg (bad) sub add xor mov jg push jecxz xchg jle out in mov inc push jns scas daa lods pop inc mov sahf sarl push jnp out fidivl es lea sti push mov outsl (bad) aad gs mov out fbld xchg dec stc das mov pop and mov push je cmpsl fs sub mov lcall mov jp pop test xchg xlat push pop or stc push lret inc insl jg push add xor daa cmp xor pop or loope clc mov xor push std mov mov jae rcl mov jge cmp test xor lock sub mov mov jmp ficom add adc pushf (bad) lret jecxz dec outsb in scas xor pusha cmpsl xor sub xchg into popf popa dec xor jae fcoms jecxz in (bad) push test das (bad) xor out ss mov adc sub inc push ja daa cmpsb add rclb aaa push leave add push jo,pt subl adc lret xchg xor in push idivb (bad) add mov rclb xchg add xor imul adc in cmp push mov add cmpsl xor sbb int3 ret aad cli and (bad) push inc lcall int cmp and ss ja jecxz jo (bad) (bad) das addr16 or mov test call in pop adc mov mov mov sub lret dec mov mov and mov xor adc add or push inc inc xchg xor fnstcw gs xchg push rcrb dec les aad lea inc in leave dec mov cmp cvttps2pi dec adcl add inc mov xor pop mov cld adc sbb in daa fsts rorb fsubp fisttpl pop ret pop mov inc int xchg addl jle movsl mov dec dec cmpsl push dec arpl push repz test popa int inc insl mov xchg mov movsl ret sub insb iret in mov xor enter sbb and inc push mov sbb push mov cmp mov jne pop jg cmpsl sub sbb mov test call roll pop lods dec cmp cmp orl mov jnp inc and scas mov adc inc cmpsb mov lock push xchg inc aam ret ja (bad) into jb int3 out mov jno nop cmp stos push icebp jmp adc out xor xchg and dec mov in add aam int popa mov cmp mov and fldt int mov dec arpl aad ljmp push jno aaa push dec fidivr mov mov push rcll mov (bad) fld jmp mov repz std dec pop mov shl mov cltd lods adc call jae es or jge cltd shr mov add mov inc pop mull aas dec inc sbb cli ds cltd data16 movsb push add pop leave mov (bad) lods and outsb ja jle rolb mov mov (bad) jge rcll inc rol inc scas idivb dec in sbb loop jle ds mov xorl sub inc call mov mov jp js push lret inc jp lahf inc sub in inc xchg push dec lret fidivr cmpsl fnsave push out mov sbb mov mov xchg mov rolb push (bad) stc aad mov imul add divb mov ja imul fisttpll in cmc mov jb or cmp push xchg inc and mov and dec mov inc inc rcrb mov mov jb mov test out leave mov inc fwait dec adc sbb jo pushf mov sbb xchg les inc add push mov or pop lahf test mov jp out mov xchg jns leave dec inc lret adc mov out pop mov ficoml mul dec das mov cmp pop cmp pop pop inc cld js pop push cmp mul insb in les add cmpsl pop jo mov pop sub jae mov shll ret lods pcmpgtw scas push dec out push in push sub jl addr16 mov dec outsl lret add xorb pop dec xchg and push mov jp popf fbstp lahf cmp mov and mov sub fsubs mov pop push sub or mov dec orb and ret and or mov cmp mov inc jnp mov hlt pop pop mov gs mov pop pop mov add rcrl cmpsb mov pop mov outsl push xor cld (bad) lcall rcr add xchg outsb int3 push scas cld jno dec jae out pop dec dec push decl adc in mov add or mov push sbb cmpb cmp ss sar andl mov mov aad (bad) outsb sbb mov sbb mov adc lock int3 mov xor xchg adc adc in push mov adc fdivrs add scas aaa (bad) cld xor sahf jnp test adc (bad) les popa ja orl ret shll and (bad) leave or ret xor enter pop cs inc test pop lods fprem add fsubrp pop jp and jecxz xchg movsl mov cs loop rorb xlat popf pop lods jmp xchg dec xchg dec loop mov hlt cld sub mov out sbb adc fild dec sahf and fldcw mov add in add cmpsl mov mov (bad) scas addl mov dec xchg mov cs out flds ret cmp lea pop (bad) sbb dec adc cmp std cmpsl rorb inc lea sub mov push or dec std mov dec xor add mov lcall or inc push pushf push xchg mov clc pop loop sbbb jmp enter (bad) (bad) ficoml lret add jae nop cmc pushw std mov out xor cmpl mov mov mov ljmp iret stc out dec outsb xchg xchg mov inc out shll lods dec dec mov jg (bad) ss mov xlat mov pop in or push subb jbe fcoml sahf xchg mov lds dec es outsl cmp ljmp inc adc pop push xchg cmp xchg add popl mov test daa aam cmp fldcw xor leave mov cltd ret and jae icebp movsl pop xchg mov call mov aaa gs test icebp js dec outsl xor pop mov lahf in ret mov sbb pushf mov scas cli dec mov mov mov in mov and sbb pop loop scas mov repz sbb mov cli int push xor xor mov mov loopne push pop xor jg int3 dec adc mov mov scas cmpsb repz in xchg mov mov out inc inc xor cmpsb leave mov or scas iret fadds test mov inc iret loopne add in push xor test fcoml add lds incl xchg int jbe (bad) lea ficompl xor cmp push sarb push cmpsl add dec outsb mov mov in xor sti xor je cmp outsl test subl jnp mov jle add loope adc outsl push xor movsb sub cmp pop sahf mull jbe push mov in js sbb cwtl dec out test xchg hlt push add jns xchg ret push fnsetpm(287 or jecxz movsb fbld xor test fmuls icebp es loope xchg inc into out daa sbb das std and push push pop mov push mov jmp mov cmp pop imul push mov pop jg push notl mov add sub scas popf aaa mov mov lods scas adc test push inc xlat loopne ret loope mov shlb lock mov xlat adc adc or mov roll adc xor lret mov aas jb aad push dec mov sar adc mov push lods jns adc dec mov arpl mov cmpsb mov adc xlat jb mov jb rorb jae stc pop mov mov or dec lea (bad) orl ret stos mov jns cwtl inc nop lock nop adc add pop pop mov push lahf mov orl movsl in mov dec push mov (bad) adc cmp mov add xor mov push daa or jno movl push iret sub test cmpsb in ja pushf (bad) cmc pop mov or jnp ret adc jge mov loope loop mov data16 mov inc fpatan leave jge adc cmc mov (bad) mov pop sbb (bad) push or or jb in push inc lea xor ror dec mov mov mov cmpsl outsb inc jle or cltd sbb inc movsb and mov dec jecxz rep xor mov cmp sbb mov lds jbe xor pop fisubl inc cmp rorl mov sbb (bad) fdivrs andl sarb clc xor dec cltd dec xor pop push ds jp mov mov ret mov push inc out mov jge pop adc popf arpl push adc scas (bad) cmc pop mov mov jecxz jp xchg mov jp sbb mov and add push sbb mov inc cmpsl and aas outsb cld (bad) mov cmp jbe pushf jo cmpb jb inc dec mov xchg in (bad) pop lahf push xor xor arpl ljmp push cld jo cmpsb jns jmp in xchg aas into repnz add bt outsl insl sbb mov xchg stos jnp push notl fildl pop mov cld inc data16 mov cld and fidiv jns mov pop hlt fildll xor in inc (bad) jbe addl adc cmp (bad) jmp lahf pusha mov jb push movsbl or movsb adc in jo and and pop xchg (bad) in adc or jecxz,pn inc in mov mov scas ss and pop jmp (bad) fmuls hlt lds inc mov out fdivrs (bad) mov stc pop jg cmpsb loopne orl int jae mov mov mov fcoms push pop das mov mov sub dec in and inc xchg adc sub pop movsl sub mov call (bad) push xchg inc test xchg cmp sahf jl hlt or push mov jbe xchg pop and xlat or cmp push icebp mov push inc xlat push mov mov (bad) repz loope lret gs rorb rorl jne mov sub push out scas pushf or sbb ss lea mov cmpsl ljmp int3 shrl mov cld sbb fiaddl lret push fst lret fwait cmpl pop dec mov cmp xchg mov mov mov popa pushf inc scas imul or or ficoml int3 int add (bad) hlt cld aam addr16 ret push inc add push pop mov cld mov fildll int3 xchg adc sbb cmp shlb mov test jl dec outsb lea pop lret cmp dec xor lods xchg sub xchg in xchg sbb ret xchg add mov (bad) out adc in mov movsb (bad) cmc adc (bad) mov (bad) stos mov aad adc adc or sti pop cmp mov out insl or (bad) mov mov jb mov inc sarb mov mov adc subb clc sbb pop divps mov ljmp cld stc cmp cmp sahf jle outsl mov test repz cld pop sub out mov in xchg lods or mov sub jle out xor leave or bnd push rorb repz inc add or insl scas cwtl dec mov cli or rcll mov into fimul cmp pop add or jg roll stos mov cmp sti sub xchg out aas or cli inc aad fildll pop xor mov and insl fadd dec mov xchg jmp aaa daa jp fs cwtl push push out mov adc mov jg cmpsb ret lea out das sbbl dec into jecxz in sarl out test aaa std lods lea nop lds outsb pop (bad) sahf and or ret push dec frstor jb inc mov and int scas sbb movd jmp jb add xchg inc mov jnp sarb dec mov mov clc adc (bad) mov insl int3 push frstor (bad) mov push mov push pusha pop add loope dec mov xor fdivl push movsb mov (bad) rcll jle mov mov fwait and push push (bad) mov push mov adc pop fisttpll ret mov pop add bound mov repnz (bad) fsubl cwtl mov mov xor push and test mov cmp lea jb xor mov mov or je les sbb mov add pop inc gs fildl daa decl pop ss sbb lret xor les ss push je adc mov js,pt fnsave popf cmp stos roll dec in (bad) ret stc mov fldt out cmpsl ljmp fidiv (bad) push jl in cmp dec sbb cmpsb xchg inc xchg mov mov popa jne mov mov repz mov jo loop cwtl mov mull push xor outsl fmull mov aad int xchg loopne or arpl nop out push pop les xchg aas and ja inc aam pop sub add jbe mov (bad) pop mov or and arpl xchg fistpl ret or mov cmp dec in loopne popf je mov test scas cs push rclb fs mov (bad) aas sub pop scas aaa cmpb in mov (bad) sti jbe lahf lods mov (bad) dec aas jb lahf xchg bound in sarl int xchg (bad) sbb mov movsb add mov movsl clc pop xchg mov jl inc push popa imulb jns sbb cmp scas jecxz inc in pop incb sub and push cmpb push lea xor (bad) jmp push jge mov jle dec xlat sbb mov (bad) sub icebp mov loop scas fisttp fwait mov jl xlat icebp int add lods loope push cmpsl mov adc outsb pop xor lret xchg pop in dec stos dec cmpsl add ret jb add add push mov xlat xchg adc mov mov mov out mov sub jecxz cli jg pushf lock inc mov test lret repz push dec pop cmpl xor jne lahf mov and mov out mov xor ds sub mov hlt lds pop fdivl xlat mov mov out sbb pop aaa push mov xlat outsl pop inc mov xor jno or inc out push in stc add pop shll push push cmpsb iret sbb sbb jnp stos movsb mov jno xchg mov xorl mov push xor mov mov jmp and mov and dec mov fstps mov cs xor add pop cmp in adc mov or mov xchg fdivrp adc push mov inc mov mov leave inc in adc test dec add int3 decb mov cs in mov push je (bad) sbb mov dec rorb pop sub jo stos outsb jle aaa sub iret xchg lahf mov lea sbb and jl jno xchg call nop jmp mov cmpsb xor iret popf mov inc arpl and or les in outsl and test sub fadd divb lds (bad) sub mov sti sahf pop jae adc rcr mov lcall push je or icebp in data16 stc repz icebp pop (bad) cmpsl add test leave and jg stos sahf test mov or jno in in xor loope into test div and test pusha jb adc dec sbb add mov or dec jp add adc and fmuls (bad) fmuls jne push xor in pop ror es rcll cmp sahf pop out cmp dec negl fist inc leave movsl pop inc arpl dec jp lds lcall jge and inc jmp cmp rol mov adc and les fsubs gs lcall sbb push in push add subl mov jecxz lret add imul sbb dec loope xor js adc pop out orl push sahf leave add mov test stos dec popa pushf in sbb mov add mov mov sahf dec (bad) adc sbb shlb pcmpeqb pop jno lahf insb jno xor out mov inc in out add push push lret xchg pusha jmp mov ljmp iret jl movl mov sar std jns out xchg cmp dec xchg fildll ret (bad) aam fstpt jns or push xchg xor push mov xchg cwtl je int rclb mov add sbb and mov mov hlt sti mov push mov sub loope jp icebp jl push dec pop andl jge mov (bad) mov call packsswb mov sbb out add push cld mov insb sahf cmp sti lcall jb lods push cli and icebp (bad) cmp mov dec xor jae push movl popa mov jp inc shr fadds mov xchg ds aad aaa jb arpl add enter sbb jecxz in subl mov inc test mov (bad) dec mov pop inc scas dec adc add lds shl mov pusha ss pop pop jp sarl xchg xchg movsl jge mov pop nop call popf loope lea insb sarl mov loop push jp push or mov pop jae leave clc mov jns std sub aad les cwtl pop ret lea repnz cmp jae in scas or sbb mov inc xchg xor aam cmp mov jmp push data16 fnstcw cmp js ds pop mov cmp push in loope mov gs xor leave sti xchg sub push mov add xchg sub iret fisubl daa es mov mov jne inc adc mov jg adc fildll sbb push or sub jbe stos mov inc das xchg imull push lock and cmpl enter mov leave or xchg xor pop add and pop mov (bad) cmc fildl add cmp in push aad inc push and jle xchg in push mov sbb add outsl or test xor lahf mov cld jmp dec clc int3 pop inc movsb int fucomip stc mov (bad) frstor pop push repnz dec fsubl push rcrl or mov push insl into divl jb mov xor cmp loopne cs (bad) repz stos cltd pushf sahf addr16 jl xchg push cmp add sbb nop (bad) out (bad) ljmp stc sbb ds add outsb jbe mov rcll push mov mov adc sahf push cltd xchg cmp pop pop sahf inc movsb ja push jle sub stos fimul pop pop xchg orl mov loope cwtl in mov fmull or push (bad) mov test popa mov (bad) jmp adc inc mov jecxz xor xor push lea dec in mov and fistl mov into out int stos ljmp mov jno mov mov pop sahf mov push sbb push sub outsb adc ret sbb mov xorb in scas stc inc addr16 mov cltd jmp jecxz inc mov jmp pop out scas xchg jl xchg in ljmp pop add pop cmp xlat mov jb in je loop outsb mov in sbb sub fidivr xchg test jbe jmp or mov jb push jecxz dec mov js testb rorb in imul arpl (bad) cmc xor fildll jne and xchg sbb repnz jg pop mov outsl cmp sub mov jne mov push mov int push bound and push stc mov mov mov jb ret cmp or adc fs (bad) lea mov push ljmp mov add test pop cmpsl (bad) int3 adc mov mov (bad) fnop xchg pop sub stc pop inc not es shrl adc inc (bad) xlat mov (bad) xchg fbstp (bad) ss mov lds sbb xor ja jmp mov and sahf arpl cmp cmp mov jmp cwtl in lea in test clc mov or js stos arpl sub ret std or (bad) mov ds mov cmp in jns cmp dec js push mov dec mov (bad) adc inc mov cld test ret xchg mov movsb out andb inc adc stc sti xor xor xchg xlat ret jae cwtl (bad) popf mov xchg (bad) cmp xchg mov (bad) lock out sub xchg jno push cmp mov (bad) mov ljmp cmpsl jae push shll enter add ficompl lock fwait nop push lds in ret cs sbb mov mov dec aad in dec sbb xor mov or xchg mov cwtl into jmp outsl insb push mov (bad) jns shrl test inc dec push enter enter mov jg addr16 push test and or xorb sti loope mov xchg ja push decl repnz bound adc sub arpl add jle fwait mov xor xchg loop mov mov fwait mov and mov sbb sti aas mov mov ret jb fmull jge mov mov sahf clc pop mov outsb subl mov int mov out dec or mov sbb mov inc in jbe ret stos cmpsb rcr cmp pop dec xor mov (bad) in fs lret popf xchg (bad) pop ret mov popa sbbl mov fiaddl push test movsl loopne mov mov xchg sub inc scas dec cmp je mov mov out sbb push mov jns lret pop mulb mov rcl mov add inc data16 lret cmpsb iret xchg (bad) jge add mov fstp aas add lret aam js xchg mov xrelease mov push push sub scas cmp push pop sub add jne mov sub (bad) fcmove add push sbbl cli or rol or je mov lret cmp outsb das mov in jp adc push orl push out int icebp mov popf mov pop movsb xchg mov mov stos mov dec popa mov dec mov arpl mov roll jp fnstenv insb scas mov (bad) cmp push out mov pop add cwtl mov sbb roll mov mov fnop mov inc out jge aad push (bad) scas std mov mov cmpsb sbb rcrl jbe mov ds (bad) push pop insl lea jo (bad) enter adc in xchg gs push aaa aam inc jns or push es shrl add push push mov push push mov jg dec inc aas push mov jns cmp add daa push sub iret out push cmp jge cmp lea adc adc les push cld add cmp mov mov psrlw xlat add sbb fdivr shl dec mov pop cmp into xchg jge cs jns jae push jnp fistl mov add fwait dec les test dec int mov bound mov jmp rclb pop add xor sti adc test in or cmp outsb clc mov lret nop and cmpsl ret icebp arpl data16 pop xor aaa pop stos mov mov psubd push test mov mov mov rcrl daa push mov dec fstps xor hlt outsl xchg aad mov cmp mov int3 pop lods mov sahf rclb jo and scas (bad) xor mov mov int3 das push mov rorl lock pop insl mov (bad) mov cmp popa sti inc mov jmp pushf and rclb jmp push jne daa pop mov xchg xchg sbb inc push mov jecxz cli lcall sbb aam sub mov rcrl (bad) pop scas mov stos pop data16 sub popl xchg inc ljmp pushf jmp mov repnz jle or rcrl aam or (bad) in addl packsswb or xor xchg pusha mov out mov and insl mov ss push test sbb rorl xchg mov push outsb dec dec (bad) lock pop ret leave mov fimull (bad) aaa mov out and mov push push pusha stc mov (bad) xchg pop in xchg mov addr16 dec or mov xor pop mov or dec add test int pop pop out lock push push mov inc call add dec lock addb xor or scas test xor sub test jb in push dec and jne inc xor jmp dec xor mov mov mov mov cwtl (bad) daa and add dec jg push mov sti cmp ljmp ud1 in push mov push movsl insb dec jmp add (bad) in add jb pop leave (bad) cld fprem xor push or cltd or test je cmp dec outsb roll negb iret add mov rcll (bad) push mov pop mov xchg ljmp test lea movsb mov test mov pop scas sbb imul outsb cmp mov addr16 data16 or mov pushf out sub int3 flds lea jp aam shrl push int3 std push mov mov or dec lret js fidivrl push mov fdivl xor mov inc sbb mov insl pop fwait ds pop call arpl mov ljmp jae in int sub repnz loop mov add push into scas pop dec add aas leave dec orb push mov jne in inc jle sbb mov add or jecxz jne sahf mov and add mov (bad) xchg cmp push sub jecxz cmpsb lret dec pop cmp and jnp xchg les push inc lcall leave push add mov inc ret test jg das mov xchg aaa in inc ficoml sub lea xchg push loop movsb cmp in outsl sar pop add push mov inc scas shrd sahf adc jb pop pop jb or jge jecxz lock std xchg fwait sub daa mov in cmp insl push loope movsb ds jns sbb rorl lret cmp (bad) dec sub dec andb mov gs sbb leave hlt xchg fstl mov or test pop xlat outsb std cmpsl jae jno xor das lret inc in xlat divb andl shlb (bad) jecxz enter and dec aaa lahf scas jg mov pushf ret xor mov xor (bad) mov aas inc es mov pop pop (bad) shl js cmpl mov add mov push pushf mov ret (bad) rorb pop mov dec inc mov push in outsb lods or pop out or fnstsw jno lea xlat ficompl dec mov les int push pop pop scas dec push cltd dec fdivl push mov sbb pop fwait lods loope ljmp push inc addr16 or std stc inc cwtl jmp pop mov dec sbb mov fstpl and repz int faddl mov xchg icebp adc xchg xchg jno out imul fldcw shrl mov pop cwtl in mov adc stos loopne popl and cld loope loopw push repz loopne fisttp out ljmp cwtl xchg ret sti or dec jmp or fidivr mov daa cld popa or dec pop dec mov fstpl inc sub jp in add jmp (bad) jne dec lret inc add fs xlat in push (bad) out jo dec sub int mov sub push lcall mov fldt xlat nop std add fidivrl test mov add pop adc int3 pushf xchg test pop shl xor push mov cmc cs sbb mov lods mov mov mov stos loop add push jp shl out adc imul or fucomi mov stos dec add lock int dec loope sti push mov jbe loopne dec or sub (bad) push int pop pusha rorl add mov mov test push cli in imul int3 loopne shrd xchg lock pop add inc rorl mov and stos in pop pop jno shrb or int3 in fucomp flds add jge dec pusha xor stos mov and lahf test mov outsb in and jle loope,pn cltd jae push mov jne mov outsl inc mov stos loope sbb mov daa ret cmpsb mov aaa jnp xchg cld scas clc adc lcall xor mov fwait pop inc mov xor sub adc mov ds lods cltd sbb aad push jo add mov fldl leave in jns (bad) cmpsl insl sahf inc imul mov leave add test add push cmc in mov sbb sub clc sbb in or fidivrl push pop sub pop notb hlt ret test push movsl push test das mov cmp in xlat or cmp mov and mov setg outsb in cltd int xchg xchg loopne pop in addr16 mov pop cs data16 mov (bad) push ljmp lahf movsb std fwait data16 mov movsl jmp dec pop jb ret push add dec sbb dec ja xchg movsl jns ds in in fmulp orb mov enter faddl test mov lret aad mov addr16 aam or push mov add loopne xchg xchg in mov dec adc or mov inc in mov popf pop pop xchg rolb jge dec movsl push (bad) mov in loopne dec mov bnd add fimull movsb ret fwait imul int scas out dec jmp and mov mov xor sub repz mov adc pop mov sbb popf dec xor jg xlat adc xchg xor gs cmp add cld mov inc mov sub sub xor push adc sub mov aam js xchg repz dec mov loop inc jae mov jle addr16 cmp imul sub sbb rol test sbb pop push in and mov sub dec je je rcr mov lock dec push or std push xchg jbe or jnp cmp lcall xlat adc loop add aad inc push sub cs out rcrb and outsb notb aad xchg push mov dec dec add pop jmp mov int jno add sahf setae xchg es subl xchg push add cmp mov push frstor sbb lret mov adc outsb and ret into dec pop andb shrb or popf imul cld mov mov push repnz stos inc adc pop or scas jge ss adc nop inc (bad) je dec and mov push flds or cs mov inc mov pop adc fwait mov movsl jle push push outsb je jnp leave add outsb mov mov stc (bad) pop in scas or push add enter mov cltd sub (bad) data16 hlt or sbb sub jae sbb ja test jnp jnp or jge mov jg scas call mov (bad) mov mov dec cmp mov push adc in mov fmull push out jl xor dec push mov cmp xchg mov vmwrite mov sub mov and inc (bad) in xchg out leave xchg dec lcall movsl addr16 movsl sub ficompl or push mov imulb ja xchg mov inc mov divl out xor and jnp clc (bad) mov cmp push aaa movsb outsb adc dec gs test and ficompl cmp gs xchg fistp push jmp sbb adc sbb mov xchg mov lahf mov ja outsb sahf inc mov outsl xor dec mov outsl lahf insb sahf insl sbb mov cmp jno fstl imul xchg cs jg scas mov dec movsb inc mov test outsl mov popa jnp cltd lock jo stos lea or jae (bad) js mov rcrb jns,pt adc mov add dec ret hlt mov dec dec (bad) or in fcoml or xchg addl pop (bad) (bad) mov sub arpl cli popf lods out repnz js test test mov cli sti xor orl mov inc sbb sti jmp pop mov pop test jl mov add (bad) shrb pushf lods adc call es (bad) mov and cwtl ficoml popf mov push rol push lret in jecxz and mov dec xchg in sub int3 aam sahf jne ror dec fist xchg jo mov stos aas pushf mov (bad) jp adcl inc movsl mov nop es xchg xor into or pop cs add clc out fnstsw sbb xchg call loopne xchg jp and push nop test out cmp cmc enter (bad) jmp pop jle (bad) mov inc mov in adc xchg inc lock pop mov in and xchg hlt cmp xor iret mov sbb dec sahf (bad) push push mov xchg fucomi mov xor rcll fiaddl lcall pop inc pushf mov inc or pop mov xchg mov push inc pushf out add mov sub and int3 xor test iret mov dec (bad) fwait aaa insb nop in inc repz mov pop test jae pop and jmp lea test repz aaa sbb mov pop repnz test add sub fmull pop mov addl jmp jno out add lds pop push and mov cld jl clc mov pop adcb mov scas xchg mov push aam mov insl lods sub xchg dec jnp mov cmp ret mov sbb (bad) mov or js aaa and xor cmp daa mov lds dec inc mov icebp dec xchg cmp aad fnstsw mov mov xor mov daa mov mov sti pusha mov cmpsb xchg sub sahf xchg imul xchg xchg scas and leave mov xchg xchg outsb dec mov test std (bad) sarb mov in jmp bswap mov outsb dec jb lahf jl out inc shll cmp mov in stc fcmovnbe ja push in mov pop inc sbb ret lock je inc movsb xchg jmp in sub or scas or pop dec jno pop sub inc insl xor addl out push jne and iret inc and sub out mov cld adc mov cmp into xor (bad) ds cmp or xor test or repnz dec hlt mov addr16 sahf and adcb in ror push sbb loope and ds (bad) mov jbe add jecxz clc insb outsb movsb adc pop mov add jnp test mov in cmc int data16 jl push iret mov hlt in jne mov movaps in mov mov test fildll cmp or clc and aad stos insb cmp sarl lods je add ret xchg stc jle xor dec mov pop mov push push dec test mov jno adc push jecxz cmp sbb cvttps2pi cltd adc lret in inc xchg or int3 sbb cmp scas pop in lcall mov cld rolb stos fadds mov mov lds mov int mov jmp jno ds dec add push add (bad) test cmc xchg test fimul shrb adc iret adc sbbl (bad) loop fucom jne sbbl test sbb sti add add mov ret or insl rsqrtps lea dec movsb adc clc lds hlt mov sbb out xchg inc (bad) dec in lahf cmp lea popf jo test inc and add fnstcw and inc scas and cmp push aad xchg inc loope push loope adc inc push add cltd add mov adc leave pop loope std xor xchg cmp dec (bad) insl mov in nop jmp test andb ja pop inc push jge push sahf les imul aaa in jp (bad) mov mov outsb lret mov test jl adc lock inc ret test mov mov lea icebp (bad) add and sbb roll mov or or test sti adc in cmp xor pushf jmp mov mov cmp loopne dec mov cmp outsb adc jle sub in leave faddp dec dec xor sbb ja insb sub push and or mov mov mov negb nop mov add adc jg int3 rclb in push ret subl int or xor imul scas repz (bad) jbe mov and leave jl pop fstpt push in xchg jg sbb push add xchg pop (bad) ss or inc push xor adc add jno sbb mov scas pop push rcrb pusha sub cld daa scas adc cltd iret cmp into jg mov scas push outsl fdiv std push lea lcall (bad) (bad) mov push inc dec pop pop xchg xlat mov hlt insl in sub jnp lea mov cmc xchg adc sahf outsb test adc ljmp mov leave add lea test js enter sub sahf or (bad) insl mov repnz rcl loope jns es xchg push jbe sub or mov pop xor or cmp test in inc inc addr16 fmuls ret shll xchg mov cmc lods test push inc addr16 lret xchg jmp dec aad cmp repnz inc cmp mov out push stos push fstpl adcl (bad) sbb (bad) aad in gs and pop stos ret jae cmp pop hlt rcrb add mov jne lds sbb (bad) je test jae jbe int3 in gs inc xlat fisttp out mov outsl or xchg add scas push bound or rcrl arpl movsb (bad) mov adc data16 (bad) std sub cmpl (bad) or inc lret mov daa fistpll aaa popf shlb mov mov xlat dec enter jp xor movsw and rclb mov fisttp mov dec add sbb push add or iret aam sub or cli mov jmp add sbb mov pop lock push in test jno lds cld pop (bad) addr16 insl test ja mov out lds and movsl packssdw adc imul or sub xor sbb das cmpsl scas jbe add mov nop mov stc mov lods sub bound les pusha mov sub mov (bad) loopne mov mov jecxz (bad) xor je mov daa xchg lret push mov mov pop je pop push cwtl add (bad) jno imul sti jmp lret out add sbb cmp mov movsb movsl call inc pop mov xchg lea mov mov sub mov call lock or jo pop ja mov push mov aam dec addl fstps lea sbb xchg je inc scas adc aad int3 mov out dec mov dec movsb (bad) mov or and and jg je sbb test iretw movsl jnp leave loopne cmpsb or mov repz cmp pop jmp inc sbb pop mov dec pop xchg out arpl out mov dec mov rorb or mov aam sbb aas (bad) sub inc dec loope les lahf call jecxz into xor push mov in jnp jp jno int push mov pusha inc mov loop mov pushf adc sub sub xchg adcl xchg int3 mov mov xor pop movsb jl xchg mov mov dec mov mov sbb xchg dec sub out pop xchg mov imul push fs adc rorb mov scas cmc jecxz or subl icebp inc das jno loop das repz imul cltd pop xchg or inc sti add call or loopne addb mov das add repz jg cmp cmp into cld mov xor cld pushf push jo pop int cmp xchg subl lock mov (bad) and jae es xchg mov (bad) mov vpcmpeqb jb mov dec adc test xchg nop mov dec sbb xchg out inc in mov cs mov js negb pop mov popf aam jle add rorb nop into xor xchg rol fs daa out sahf lret cmp inc cmp in jmp and es xor adc sub cs and and dec mov ljmp outsb add jae lea in inc orl cmpsl cmc rcr pop mov ljmp repnz fs lcall inc add jbe mov dec insl nop ja,pt lahf shlb imul je inc push sbb sbb cmpsl std out push xor push xchg ss mov aaa inc jp xchg push rorb dec (bad) pop inc scas ds cmp aam insb scas mov imul jb aad cld or ds fwait mov and inc mov mov repnz inc mov adc sbb push xor (bad) out (bad) push mov (bad) mov pop pop mov test mov push (bad) dec cmpsb lret inc lret xor and inc inc int jl lahf in iret push mov movsb jp inc lea mov pop inc test mov sbb xchg fisub (bad) mov sahf icebp push int3 shlb sbb cmpsb jg test cmc jecxz mov or pop push dec jle frstor in rep pop mulb (bad) pop mov cmpsl pop mov inc or mov rolb mov mov xchg sahf daa mov xor adc (bad) or mov mov ficompl add mov in mov ret stc test mov mov inc ljmp (bad) rcll add cld (bad) test sti inc mov mov or add xor mov or out and push mov out pmulhw outsl push adc gs daa outsl or inc stc in or cmp xchg data16 cmpsb inc xchg fistpll (bad) into call inc in cmp idivl mov mov cmc dec (bad) hlt inc cmp pop fnsave in sub outsb xlat (bad) idivb cmp outsb cld frstor and (bad) add jge scas les lock ret push insw inc cmpsl std pop les out cmp cmp es rcrl pop ljmp out cli jmp stc sahf into lcall sbb arpl jmp out pushf in and add mov icebp cmp mov add jbe imul mov mov fldt inc call xchg and mull mov or cld fstpt mov sbb pop ljmp push adcw daa into lods push in fstl movsl mov jg jle cld test pusha inc push call andb push (bad) mov in and and out push (bad) (bad) leave in xchg mov sub rorl clc (bad) hlt pop xchg mov cmp imul outsb sub shr scas sub cmp or out jne adc inc add dec add iret sub insb je es (bad) rorb lods sub imul xchg movaps jp insb sub mov jnp lahf push xor mov jbe add out pop jg push pop and sub or lods fstpl mov loop jno call sbb push mov imul or adc clc aad out mov mov loope fisttpl xor mov lea sbb test mov lcall (bad) fsubrs push test ret pushf outsb stc rcrl mov (bad) (bad) adc xchg fadds nop sub ljmp mov movsl sbb mov xchg jo xor jmp daa or pop lods leave cmpsl stos mov fs sbb jle mov sbb pusha mov int ljmp stos mov cmp push pop push push mov sub loope xor cwtl and cmp pop (bad) mov mov cmp pop clc and pop or inc outsb std test ficomp in xor mov push mov xchg push xor out push push sbb xchg jnp scas mov mov inc incl lea mov inc adc (bad) lods push push pop (bad) push iret pop push xor and rorb aaa pop js mov mov (bad) in mov sarl jb stos mov orl mov mov jmp or cli mov xchg dec adc push xchg movb adc rcll mov aas mov xor or and xchg daa mov add add or insl stos xchg fsubrp dec push xchg mov lods inc jbe fucom (bad) (bad) js jns mov sbb sahf inc inc jo ret mov rol lahf dec test jg push jae adc jbe icebp adc daa dec lods push inc dec lds xchg bound mov mov mov idivl mov in mov scas mov sbb xchg lret insl sub jno xor pop fstl mov add iret mov je mov (bad) daa mov nop mov fiaddl out in jmp daa mov xlat add jge mov adc inc mov sbb xor insb cmc mov bnd add xchg mov sbb or push cmpb pop mov pop cld and mov jb stos dec jae push addr16 and test pop nop into aas xchg iret fcmovbe (bad) pop aaa mov iret icebp mov out push add in or nop mov gs and mov bound fwait in scas (bad) xor ja stc in xchg xchg fdivp rcrl cmp andl enter dec mov and repnz iret outsl fistpl mov lahf leave pop xor xchg in push mov iret push addr16 (bad) movsl repnz mov cmc or mov arpl cmpb pop test lret cmpsb std mov jp dec adc fstp sub push xchg ljmp mov cmp fistl mov xor pop shl jg mov fild insb cmp and xor xlat rorl jno clc lods jmp sbb mov cmpl cmp (bad) test pop jns rolb push (bad) call outsl add push pop icebp jnp adc std outsb jns mov adc xor adc inc jl mov fwait dec scas test inc xor in dec mov or ss inc jnp mov mov mov sub mov adc mov icebp adc xor add xchg insl add xchg jns xchg imul sbbl cltd cwtl sti mov call fcomps push and les std cld mov movsb je icebp pop pop std xchg fbld addr16 out gs mov mov imul movb subps mov inc pop sub lea aas shlb jge in push pop xchg leave jl lret ja push test mov sbb xchg xor stos or pop std mov ret je sbb or jae xlat sub mov mov mov fs daa push out cmp aas jbe das pop push add push push ret add pop mov add sar je inc (bad) push int3 pop cmp cmpsl mov xor xchg cwtl jmp or clc insb pop mov mov (bad) je pop mov fsub insb and js sub mov pop or pop in add jg outsl push faddp ja sbb pop cli xchg xor xchg xor lds pop cmpsl fidivl mov xchg xor loop cmpl jne cs loope dec (bad) mov add mov pop test js bound (bad) pop aas mov std or das pop push mov sbb mov jbe mov out dec add push stos mov pop out ljmp clc inc clts loop mov jae pop shll adc lea jg ret fsts dec in insb adc xchg mov scas into lea add loop loope jmp movsb negl pop inc jo pxor std or mov jg test repnz rcll out xchg dec outsl loop jp outsb fst pop xchg mov int dec cmc mov inc adc loope push jb rorb mov je in fidivr loopne stos subl and cmpl mov adc or pop lret xchg sbb mov les cmc jne sbb mov mov add push test or ljmp push icebp aas xlat adc cltd lock inc imul adc pop add das shl inc cltd dec ja jecxz mov mov xor xchg jge test lret nop add dec and mov jno and inc pop das or push shr mov mov nop jge dec sti inc mov mov pusha mov and jecxz in test xor lock (bad) std int push sub fdivrs in push addb in incl mov test mov ljmp jmp or popf out adc rcrb cmp pop out nop jge aaa inc rcrb cmpsb faddl mov sti and mov lret or jg and in sti lock jne daa add xchg and fsubrs jnp popa push mov push loope in cmp lahf loopne (bad) lea data16 pop cmp nop sbb or pop jbe sub test sbb ja cmpsl loope test aaa fistpl lret adc mov int3 lahf in in fs mov pushf xchg mov pop mov mov xor insl xchg adcb lods fldenv dec and arpl jle mov push mov xchg stc mov movsb les test (bad) xor pop cwtl xlat roll or mov stos mov mov frstor arpl lea sti and xor sbb sbb inc lahf (bad) jns pop sbb pop pop xchg lret (bad) (bad) xchg mov adc xchg fmull add sbb out jo lods jns test push lret lds sbb adc mov push pop mov inc rcl scas test cmpsl dec call inc adc mov jmp fidivl sub xor pop add (bad) mov cltd inc mov mov xchg insb iret mov mov mov or test int3 repnz push aam jl mov add inc fadds ja stos rcrb outsb adc add adc dec pop nop stc mov aaa jmp in or fnstsw mov pop adc fadds mov out xor lods xchg add scas or cmp adc rcrb cmp or lods push lahf push lock popa push test loop jno adc jo dec sbb dec xchg adc scas mov mov fs add adc or sahf lea ds cmp cmp cmpsb clc xor leave sahf or mov xlat inc (bad) hlt mov imul (bad) cmp mov dec (bad) in pop sbb adc jmp cmp in xor outsl ret int and push jmp mov sbb in adc jp dec dec mov sub ds lods bnd mov add into sbb imul imul ja lcall pop cmovbe dec mov bswap xor in dec and pandn jo and addr16 jmp push push lods ljmp or je jnp mulb xor mov outsl xchg (bad) jmp jmp clc outsb enter push popf mov sbb lcall jmp cmp (bad) mov adc out sub mov mov or push aad aam es mov xchg out lea inc int cmp push push mov sbb sbb int stc fadds outsb mov dec inc push mov jbe iret cmp cmc lret cmp mov mov dec sub leave cmpl movsl in sbb mov push je mov adc mov xor or mov push test rcrb xor cli fcomi mov jmp aas dec mov jg ds mov lods sub jle add inc mov aas and lcall jno and mov std cli jg mov pop pcmpgtd rclb mov clc jl xchg xor icebp (bad) xor xchg xor push jp mov mov or mov cmp inc jl mov xor cmp es out push dec lock mov add stos into mov hlt (bad) cmc not test arpl mov sbb xor mov out inc jnp sahf cmp or leave mov aam data16 mov test jae lods out int3 fidiv inc mov dec jp cmp clc lods popf ffree shrb xchg cs mov cmpsb cmp je leave cltd push jg (bad) jbe mov popf mov popf in lcall not push in cmp adc ds mov adc and in mov add outsb push inc leave xlat std inc mov inc into out scas in lret push mov mov mov aas shlb jbe and jge loope int data16 adc ret sarb push arpl jno jle adc xor cmpsl fmulp xor (bad) fbstp rorl adc test ljmp push dec loope aam lods cmp setbe adc mov sbb je enter andl insb push insl dec push xchg jecxz rorl mov mov pop jns fldl push and mov call jle add mov pop or cmp dec cmpsl mov mov cmp movsl repz ja lock (bad) stos sub dec or sbb xor jle enter push mov jne das jmp push dec xchg jae dec repz inc push mov imull jmp mov sub xchg outsl sub aas js inc es lret test scas pop push bound (bad) lods loopne push mov mov (bad) addr16 mov lea add inc lods ret repz pop push aad (bad) enter xor sbb cli mov mov adc mov sbb dec dec mov and push fldl mov popa lea xlat std jg jmp adc push lea push jno roll or movsb dec fcoml pop in je or mov in sub in into add push test add je imulb pop fstpl jl or mov lea iret xor int3 ss jo xor fs mov leave sbb loope outsb cmp jns ja adc jl pop mov in jg loope aaa lods (bad) or lahf sahf shlb xchg xor ss inc adc test je jp pop pop sub mov dec mov into mov and cld lods ljmp sbb mov xor mov pusha sbb xlat mov adc pop add in loop mov dec dec test push mov mov mov sbb push scas into jecxz adcl sbb jg cmpsb mov test mov or pop jbe sub mov int aam xor mov mov stc adc mov mov mov and jle mov dec aad mov or hlt imul cmc lahf cmc push mov mov stos scas pop xchg notb nop inc fst setno mov jno mov mov inc add lcall cmpsb iret int out mov jo sub aad les and sbb call add xchg jp stos mov cmp sub stos nop and mov out jae adc nop pushf jb je jmp test sbb insb sub (bad) xchg in repnz cmpl aas je or add test ds in fdivr mov iret fcoml jle jb xor inc jl (bad) lds (bad) mov (bad) test adc mov sbb and ret (bad) jo cwtl jne lock mov lea adc test mov mov inc ja jp jns mov or sub adc sub push push mov mov pop xchg loopne test sub push mov scas insb iret cmp outsb mov push loop jp xor xor mov or lahf mov paddw ds je subl mov xchg in sti xchg xchg in inc data16 leave add ficomp sarl cmp stos fmull add in push fnstcw cli ja mov in jne dec adc lods adc scas cltd roll icebp cmp lret xchg jo mov popf xchg mov (bad) leave jge cmpb int aad adc inc lea adc cmp mov add insb mov add mov or mov dec js sub xor cmp pop adc push xchg push mov divb mov fcomps xorl mov push mov nop fisttpl jae xor cltd subl mov push xlat xchg in push dec ret mov lds lock jb mov jecxz scas movsl outsb jp mov sahf push xchg mov cld ret (bad) (bad) sar aad daa dec mov in mov jp ret mov cmpsl ss cld mov insb adc lods mov push insl lea repnz (bad) dec adc nop je cmpsb jle mov ss dec mov popf in adc rorb lea cld pop dec mov jns (bad) mov sar sahf mov xor mov jg mov mov cmp xchg cltd les pop lea sbb orb shlb iret mov movsl icebp sub xor into scas pop mull mov mov mov sub mov in sub int sub xor cmp es cld outsb pop fildl lret ret push in inc xor pop xchg dec or mov or or jp mov mov mov fcomp mov cmp fisttpll dec mov (bad) dec cmp clc add xchg outsl cltd mov sub lock ljmp sbb lret jmp adcb icebp and mov loop sub inc in xchg mov je push cmc aam sbb lret mov (bad) repz fdivrp pop bound (bad) mov pushf add lahf repnz mov daa adc out aad sub jb lahf mov adc jb (bad) xor push int3 (bad) sbb jge imul repz data16 pusha into std inc std in jae out push test xchg mov xor xor mov add jp pusha jmp jno (bad) leave dec push mov push out sub sub mov shrl push fisubrl push repz rorl jae int3 xchg mov lret in dec fsubl fisubr and inc jns sub cmpsl cld cwtl mov ja inc mov into outsl jae inc pop inc mov xchg imul daa aad pop jl fsubl sbb mov sarl cltd test sbb push lds rorl pusha popa leave pushf sbb dec aas in jge int3 xchg hlt jns jg fldl mov inc dec icebp mov outsl fstpl or and iret lret and mov adc test pop int xor aad es mov jecxz push mov jp les fidiv in push xor cmp jb orl (bad) cmp mov mov mov sbb pop mov pop xchg mov mov push lret cmpl pop xchg daa cmc pop sarl mov mov xchg int push push mov jl aaa out and fstps inc stos mov repz cli lret adc loopne adc xor inc xchg mov call jmp mov loop icebp lcall dec mov mov lahf mov pushf jle jbe jle test sub pop cmpsl setb out sub jecxz in mov ret sar sbbl jle adc xchg sbb sub add dec mov and or lock xchg rolb or push mov mov ljmp push lods dec das (bad) and faddl lock dec repnz call or mov les xor orl jl jbe mov fdivs test jno lock cmc scas shrl rorb mov add jp inc pop sub divb jno clc cmp ret in xor (bad) into push cs mov xchg lods cmpsb loopne sbb jle stos fimul cltd fdivr adc pop fwait push jno lds and idivb push mov jmp xor fisub in inc je ret cmp sub inc sahf push mov iret fildl mov loop (bad) mov outsl add adc push pop add jnp dec pop dec lret sub add mov jns insl xchg jns,pt bnd fldl (bad) in rorl mov sbb cli pop inc xor in call push cmp inc in dec cli rolb mov mov icebp sbb dec dec xor push rorl mov mov sbb mov int3 popf iret and jbe (bad) sbb cmp jns jmp mov fldenv adc inc pushf int repnz mov sub or out mov pop mov lea push mov std (bad) lret pop orb in mov push jl cltd idivl lcall jo mov push fs negl sub adc test scas or cmc addl psllw cltd cmp pop pusha mov pushf jle adc (bad) std dec pop mov test push inc add add xchg xor cs mov mov add fdivrl inc jbe in xor outsl dec out cmpsb jle das sub in iret (bad) mov loope mov out mov fs pop outsl or sbbl js and inc jne,pt das push mov xchg xlat std xor push rorl test into ss mov rcrb lods push mov aam hlt jo das pop dec mov roll popa std push push jecxz das push fwait mov mov mov js or daa push loopne adc jg dec dec pop mov lock push push cmc in xor scas pop mov imul std pop inc (bad) adc push mov fist outsb add or insb mov mov xchg pop (bad) aad lahf mov mov sbb hlt movsl lret cmp cld dec addb int3 sub ja xchg jmp xchg mov mov dec sarl cmp lret or cmp sbb push push mov inc jo mov xchg insl adc push movsb adc out pop xchg push inc ja sahf mov lods in adc test fdivs sti add mov mov mov cld mov sahf fsubs mov ret (bad) push daa js fstps xchg cmpsl (bad) add mov pop or sbb mov ljmp orl sub sbb mov iretw leave mov cmpsl mov push adc js jb lods push in jb,pn in mov dec pop (bad) push cmp out (bad) shll into push fdivl add push or pop icebp jmp adc add mov jge push mov mov pop shrl jg int3 xor ss pop fisttpll mov dec jnp jecxz outsb pop sub add repz mov inc mov cmc mov add mov inc adc xor push xchg mov out inc ss inc mov push data16 icebp pop push pushf gs lods jp xor pop jnp mov xlat mov adc and outsl mov cmp das lds pop movsl into mov inc xorb sub pop ret sbb mov jecxz fwait jae in mov lea in mov adc shlb xchg loopne mov (bad) fdivl jg lea push push lods jp ret sub adc imul outsb sub jmp push dec sub notl pop movsl rcrl mov aaa sbbb mov ret dec jg rcrl mov xchg or jb inc int3 pop or mov cmp addb frstor outsb cltd in inc add cmp idivl and jno ljmp jns xor sub data16 flds cmp mov dec lahf and lret aas std (bad) scas cli mov mov push push data16 in lods jmp inc adcl cli jns arpl bound dec aam push mov and add das fs adc dec add xchg outsl xchg (bad) pop sub mov xor pop dec sahf icebp icebp leave cs mov ror roll jmp mov cmpsl inc or xchg jb cmc loopne lods lock addr16 and xor jns (bad) xchg test arpl icebp cmp std out pop jns mov push aad je (bad) ret scas cmc lret addr16 mov sub cmp mov divb mov mov ret mov inc rcrb adc outsb push add mov cmc cmp lock push inc sub mov popf fisttpl shlb lcall mov loop pusha or insb pop xchg cmp imul aas pop lds bound lea xor and pop jb ja fild loop,pn mov and jp mov mov dec mov aas xor repz faddp jg adc mov rcll lea in sbb insb popa out inc mov mov cmp pop jns lds push popa xchg add mov jno adc fwait lea jne dec loope mov sub add das mov adc adc push add arpl xor mov clc es mov mov hlt rcr add dec pop mov out inc ja (bad) aad mov and inc dec mov add mov (bad) loopne in xchg pop jp outsl fsubrl addr16 xor loope dec and int ret push outsb loope xchg pop daa mov in mov cltd inc iret jecxz es push cmp fdivrl sahf lcall jmp dec mov cmp add (bad) cmp int3 iret sti dec inc jnp out (bad) pop popa jb cmpb mov ja lods lret test movsb mov jle addr16 inc jne,pt push push (bad) outsb sbb dec adc les dec mov cmp add jns sub xor repnz dec mov cmp ret adc mov (bad) inc cld xchg push inc (bad) scas jle jle xchg mov jns dec in aas sbb das adc mov dec icebp and xor xchg out mov divl mov test sub jl add adc ret and mov push stc into or pop mov pop push (bad) shrb push adc (bad) mov push cwtl rcrl ret jl jecxz out push mov cld into push mov mov jno add lods in adc push dec jecxz cmc push mov in dec adc out or sbb in mov push adc cmp cltd cmc dec nop and lods jo jb notb mov mov adc and or xchg xlat (bad) mov fdivrs ss jns xor mov mov adc sub cli adc iret leave push (bad) push test insl neg hlt push cmpsl in in inc adc (bad) mov mov cmp mov imul pushf aad and icebp dec dec out or pop insb iret pop inc mov pop push mov mov stos fadd push adc adc ja dec lods mov push push mov lcall mov push iret xchg mov jp,pn mov test loope mov test std add fidivl jb ss push inc mov movsl mov sbb (bad) mov cmc jmp orb dec mov pop xchg dec int3 xchg mov (bad) cld inc inc lret or inc loop lods dec mov das aaa test (bad) jo add data16 repz in jo mov jno jnp add ret jo pusha or sub jns jno lret leave test lahf ret (bad) sahf fs jp mov jnp outsl lea (bad) scas cmc or push ret or in sahf jl not int xchg jne lret imulb xchg negb cmp adc sub mov pop and and sbb ret bound subl idivb add int loop lods add das dec and cwtl dec adc add mov sub sub mov popf cmpsl mov jbe test cmp nop mov test aad enter mull push (bad) ja mov dec repz or (bad) pusha nopl sub popa push xchg mov outsl in mov cmp mov cs jae divl cmp in int xchg mov pop orl int adc stos mov mov and jo mov and fcmovbe sbb lea mov jecxz dec inc inc inc les and cmp cmc scas xchg inc dec and test jl xchg mov lahf mov dec mov adc dec sti mov sbb xchg scas xor sub or xor push xlat mov cmpsb gs idivb je xlat push push loope daa pop cmp mov cmp jbe inc add cli pop ficom in ljmp rcr fst cld mov (bad) mov rcrl leave paddusb pop ljmp incl lcall rolb out test (bad) inc out mov xor xchg test pop vxorps pop adc jmp iret dec jl add jl adc mov loopne into or arpl pop outsb cmp dec aas mov movsb rclb daa xchg inc mov ret (bad) iret push mov add or std rorl or sbbl or test push fild in push lret ret (bad) mov pop scas sbb inc movsl lahf sub mov cmp sbb outsb clc in xor xor add adc sbb mov je in jge out cmpsb adc adc andl in das in fsub cs xchg sub lcall sbb (bad) sahf inc enter jle es popf das lret and loop or push stos mov push insb nop mov mov push pusha (bad) mov or ljmp cs mov test lds das popf mov xchg and push stos bound mov pusha (bad) bound mov mov and fwait aas inc shlb mov imul xchg test mov test mov ret adc or inc cmp pop sbb in fcomps test (bad) jge (bad) scas fldcw cmp add and fisubl rclb bnd mov dec outsl test mov in mov lds jge xor clc in movsb cmpsb or xor inc pop mov iret rol or jl in push inc popa jno enter add int3 shl pop test popa mov mov ds adc mov inc push mov in mov dec cmpsb adc xor lods pop in mov and leave in fimul scas jp pop out (bad) stos (bad) cmpsl roll dec decl add ret dec dec repz sub jno pop jb adc iret data16 lcall aad imul jle mov movq jae pushf loope jno cmp fildll cs fmuls adc ljmp inc (bad) cmp lret or es jl inc cli sarb (bad) fildl xor mov xchg dec jbe xor popa or inc mov mov dec arpl mov and jb (bad) add test mov push loop das push lds cmpsb ret mov cld imull mov (bad) rolb add add jmp mov icebp sub movsl jp mov sub xor sbb mov mov adc scas insl mov jo lahf xlat rcl pop data16 ret or cltd adc loope xchg (bad) ja xchg and int adc mov cld add cmp cwtl push outsb pop rorl adc add xchg xor dec ja sub pop xchg je,pt lahf jecxz adc cmpsb adc adc in jns movsb iret dec adc (bad) adc fsts in jmp mov xor repz add pusha mov jne push (bad) arpl lea xlat mov cwtl sbb in push push push xor pop mov jmp push push xchg sub and jge mov mov cmpsb decb xchg pop inc imul ficompl mov gs jo cld add xchg iret imul idivl push mov in scas push insb xor xchg mov jle imul aaa dec out jbe cmp cmp add add into insl inc daa jo dec aaa adc dec jnp mov jae inc imul xchg test fnstcw lds ror jle push push ficoml mov dec mov push sbb hlt and and add cmpsl pop or and outsb adc orl mov ficomp mov pop pop movb dec scas sbb mov mov clc sub lea and jmp jle in pop push mov pushf lds daa pop push push sahf dec jb xor stos mov cmp (bad) aad divb mov pop int3 rcr rcrb mov jbe jns and fmull xchg jnp mov pop lahf jno or cmp mov leave xchg sti pop (bad) push nop aam aas adcb cwtl mov push add xchg repnz sub adcl ret bound fmul push ljmp push shlb xor mov data16 cmc sub outsl mov sti js or lcall pop or lret clc insb inc jp imul (bad) cmpsb mov jecxz xlat mulb decb iret in or test arpl pop or int pop lahf mov pop int daa bound movsl lcall fwait into inc (bad) or std rcr sahf loop mov outsb pushl xor mov mov mov imul (bad) in insb mov stc xor adc iret lds aad and sbb addr16 jno js incb (bad) push adc testl cmp xchg imul (bad) loop fdivl mull jb in sti and jno mov sub inc into add std jge xchg lret dec movnti lods imul das stos xchg xor inc (bad) cmp lock pop scas add dec rcr movsl jo push xchg test daa push fiaddl sub mov setne jecxz (bad) jb test push and sbbl in adc mov pop mov das sbb xchg ret in outsb scas scas daa insb das and loope lret in xchg inc add nop push mov stc push mov mov sahf fldt aas jbe loop cmc lahf arpl push mov fptan push jns,pt adc mov dec nop mov outsl mov mov push mov (bad) and or inc std mov jmp arpl out add adc mov fnsave fldcw mov subl or jmp mov dec xchg (bad) std push add test ja icebp pop mov add mov and test adcb fist mov xchg jbe cli mov xchg sub xchg add cmc xchg xchg adc test inc aaa xor mov in sub clc ss mov mov mov out jl iret outsl cmp testb (bad) lret jle clc inc mov (bad) mov repz movsb int les enter popf adc insb mov push in jae or cmp jne jb andl ljmp dec cmp ja sbb sub aaa push mov cmpsl int3 xchg push fisubrl cmp lds test aas std fwait das inc pop mov xor in lcall hlt pop mov or mov pop jl,pn ret (bad) ljmp and adc addr16 cmp xchg and movsb and fisttpl lods (bad) in repz push fadds cmp hlt outsl fdiv add or cmp lods jp aad mov inc adc call notl test sti adc mov daa mov jg imul scas aam mov cs jmp ret mov cmpsl (bad) jl aaa mov push cmp xchg xchg insl cli mov xchg mov xchg mov jne adc mov inc add lods sub pop dec stc cmp mov mov inc lret cmpsb cmpsl mov xor inc push xchg mov fcomip rcrl leave pop pop xchg push outsl mov mov dec icebp mov bound jnp iret lea es or leave in pop data16 pop or and imulb cmp jge lods (bad) sub mov lds sub jno adc into outsb in data16 sahf push inc adc or inc sbb iret cmp dec cmc stos sbb or bound je rorl jle rcll jp bound or int add fs subb mov mov (bad) subb ds pop dec xchg (bad) test leave cmpsl inc popf xor mov imul sbb in mov and jg xchg xchg data16 lret ss hlt push fmull and insb lret imul lds js lock mov mov movsl cltd jle out mov jge,pt sbb aaa movsb js in pop cwtl stos xchg loop pop in and fldenv push mov pop test scas xchg sub ss in out dec jno pop test test cwtl imulb cmpl pop hlt jle or cmp or mov push add test mov fidivrl xchg nop ljmp dec xchg mov popa jge xlat rorb test lock mov aam push sbb push push ja dec ret int3 loopne movsl in in ljmpw or fcmovu cmp inc mov movsl sbb push xchg call int push aad sti stos push imul pop inc sub adc push mov xor dec jb xor mov (bad) xchg popf mov stos addl fsubrl push push (bad) out lcall cmp mov mov push adc mov in pop jno push jg sbb dec fwait adc xchg xchg xor mov stc mov push out pop in int mov jmp (bad) ja out mov jp cld add mov or cvttps2pi lods fs iret int3 cld jmp (bad) notl add push mov test adc jge adc jp cmp bswap jp sarb mov fwait mov push xor nop repz into ja pop das lret daa push push and das push mov inc sahf push lahf sbb repnz xchg adc xor inc imul push addb mov xor push rclb inc pop std inc and mov stos mov pop mov sbb and pop iret push mov jl roll add inc mov int mov push inc mov insb jge repz mov enter push into nop jecxz lcall mov js test lea divb mov jns inc mov and mov adc les dec icebp outsl inc jmp adcl or push (bad) sahf mov inc mov js xchg dec cmc dec mov divb sbb in pop je mov cmp jge test push sbb sbb dec frstpm(287 sbb ds aaa out pop loope add cmp out add out dec mov inc lds add mov cmc ljmp inc adc xor outsl (bad) push inc ror sub add ljmp lar popf cwtl sbb jle mov mov cltd sahf fild dec or inc pusha int xor (bad) jmp test pop leave es aaa and das orl scas rcrb xor inc or scas fwait pop add mov rolb or inc sbb mov (bad) mov adc push data16 icebp push cmp int sbb ljmp cmpsb insl add into int push movl jbe jo dec jp scas pop clc popa ss push push xor or mov addl jp fcom adc mov push dec lock pop lea shll mov cld mov rorb jecxz ja mov xor mov cmpsb fcmovne mov jo jmp sbb inc mov in dec sub mov pop rorb cmp mov mov mov jmp lds sahf or xor mov jmp dec mov insl in xchg push cltd sar mov mov sub stos jmp jae sahf pop xor aam repnz dec sbb fcoml push mov mov mov mov ljmp dec sbb js outsb lahf and cmpl xor push adc sahf leave mov push int into pop xor push xchg pop inc xchg push xlat mov inc out cltd decl mov jb test push sti out mov and mov out xlat nop lret adc push push push dec cmpsl adc divl in sbb mov lock push jmp adc in pop mov adc pop ds jne xor cld inc fisubr dec sarb inc mov in outsl pop dec xchg ds jbe add ret sbbl rcr cs lahf sbb xor jle outsb dec pusha jo int3 (bad) aad mov and and cmp xchg cmpsl fisub push mov ffree pop inc jg sub mov xor mov mov add out add push rclb andl aam scas enter int pop or adc in movd cmpsb out daa mov xchg fpatan leave mov movsl repnz fisttpl test ds jne add mov test mov pop mov lahf loopne mul add hlt mov jnp (bad) xor push jp rcrl pop inc jmp mov sti mov idivb imul (bad) jae ljmp mov and nop mov pop dec mull ja cmpsl xor push cmpsb push jnp sbb adc out fs enter lea inc (bad) push fisttpll inc mov loope fnsave adc xor ds mov mov sub dec cs mov dec jge mov or jecxz push loope add mov mov data16 or dec leave pop punpckhdq shrb mov insl or mov push mov cld lcall push mov inc std and outsb push pop and sbb (bad) in loope pop jnp in mov xchg mov sbb test mov mov cmp mov int3 xchg add sub (bad) out xor jno inc xchg mov sti das xchg sbb pop fwait and adc sahf aas lahf jmp leave rorl xchg repnz mov addr16 test pop mov lret icebp pop mov mov dec mov jle ja stos fimul mov inc inc ds (bad) mov xor mov stos adc cmc cmp sbb test dec nop sahf mov xor mov push pop mov inc jo dec push bound iret lods pop clc push (bad) dec xchg in push xchg push mov push in orb in outsl ljmp jne jle les shrb push jle sub jp int3 push pop lahf fiaddl sub std in sbb mov loope xor push push je xor into ds sarb xorl aas cltd dec js mov jno push or or aad sbb mov inc cmc add add or mov push ror dec mov mov and in out mov cltd add clc leave dec das xlat je ja popa xchg xlat push (bad) daa cmp roll fs push mov sub pop add push sbb xor sub leave iret fisttpl in add sbb cmp fistp fiadd adc test inc scas cmp dec data16 (bad) jo and orl stc bound ss cmpsb inc aas or cmpsl les out in xchg dec insb pop loop (bad) iret push popfw jg scas pop punpckhdq push rcrb mov addr16 cld xlat pusha inc and jns testl adc and das add in jo jecxz sub nop neg out lea dec loopne test mov jno sub or orl pop inc fmull jne rcr adc mov jg,pn test cmp mov aam xor ret push btr mov sahf push and in jmp pushf cmc cmpsb jmp in mov pop jne xchg loope push mov dec (bad) push mov cmp push das xchg jo pop mov push pop cmp ss (bad) (bad) cli cmp sahf hlt insb mov adc lods mov scas mov or xchg pop roll mov lret shll adc loop xchg (bad) mov data16 xor mov push xor adc sahf (bad) out dec mov mov xchg mov ret in mov push leave loope,pn in xchg cmp (bad) mov loope jge mov add jmp mov lds push scas jmp mov insl xchg lock daa and mov in stos mov mov les (bad) mov mov mov ret test jg cmc cmpl pop movsl in fstpt jns xchg fldenv dec call xor adc jb loop jge gs lea out dec add jbe pop push fist mov mov mov mov inc lahf jne sub aaa ljmp mov xchg inc lahf inc push daa cld mov xchg test mov pusha test aam add push mov pop call out mov out lods adc dec cmp loopne outsl fnstenv fwait push loopne xchg orl dec loope add cmpsl mov in bound shrl mov mov add daa pop sub lods sahf jo es mov mov (bad) ret lcall mov cmpsb adc mov or cmp push lcall xor sbb pop xor subb or pop push pop cmp cltd fidivr lret sbb bound push mov mov mov lock adc cmp divb (bad) mov mov push in imul sub (bad) jae addb in jge in push js mov dec xchg (bad) icebp jbe inc xorb fdivrp dec ret outsb test xchg push push adc mov dec test test loop rorb or out jno fmuls test mov push iret fnop and mov push cmp inc mov (bad) adc mov jo (bad) (bad) jmp es dec push push jb fmull cld add xchg mov sbb out jp divl scas lods vpcmpgtd mov insl (bad) push inc test aaa mov scas out cmpsl pop insb mov and and push or add (bad) xchg jno push ret push cmp pop adc mov fistl pop sti push sbb mov (bad) jle xor inc sub or incl cmp sti test shll push xor outsl inc add cmp jp cld add ds gs inc aam jbe mov lret mov cmp xchg mov push lods sbb jl pop xor or lds jmp in popa int imul mov iret jae pop pop push xchg fdivrl inc sahf or ljmp sti jb outsb dec jb imul rorl push cmc xor insb xor jp xchg mov scas aam rolb xchg in aas dec jo or js test mov in mov mov xlat idivb pop sub (bad) fistl into cmp int fsubl xchg lea nop imul aaa xchg and or adc test popa xchg imul cs stos ss popf cs mov inc test mov push subl xchg popf mov dec mov (bad) sti std push push xor fsubr hlt dec xchg lahf clc sahf iret (bad) inc ficompl mov out add pop lods dec mov xchg adc or push lret into push repnz xchg mov and xor int3 jo cmpsl in rcr flds mov inc cwtl xchg cmp push (bad) jle ss push adc outsl mov sub pop daa sbb enter mov xchg add inc pop aaa fs push push mov insl andb out ljmp cmpsl add push mov push jp imul gs push cwtl repnz je cmpsl cmpl imulb (bad) fs (bad) xor pop js in in mov mov mov dec adcl jne inc addl mov mov jno enter pushf push insl mov outsl push add test mov test mov xor push int3 scas in fadd mov in movsb ret bound das std dec xchg dec in imul cmp arpl xlat jmp jmp popl in dec inc xchg int3 loopne cmp icebp or dec ja (bad) dec xchg in jecxz gs movsl push adc icebp stc mov jl jnp je nop mov pushf icebp (bad) cmp xchg loope stc ret fwait test aaa lea push jo (bad) cltd mov sbb mov sbb mov cmc rclb dec mov mov aaa push mov or arpl pop dec ds and lds daa les and mov in test mov jmp lea fs sub xchg outsb inc js stos ret in mov stc jp in dec sub pop int adc js add test aad loope int3 sahf ffreep jp jle inc scas mov cmp cmp push mov popa sbb test inc mov fdivrp je icebp adc out pusha xchg (bad) mov or gs das cmc cld (bad) adc in std or push cmp popf sahf mov adc xchg jnp add cmp ja jno std mov jb movsb lret push sbb leave cmpsl or cmpb fs mov gs sbb movsl mov rorb mov jbe inc push dec mov xlat pop inc sbb (bad) or cltd int in cs jle ds xchg ds in push xor stc fisubr mov and lea adc xchg or lahf sub fildll outsb aam push test test stos mov mov stc or push pop mov jp or mov jmp pop in inc inc addb ds test lock pop jno mov mul dec lret add ds adc inc mov psubd into test in jno out ja mov push outsb adc (bad) sahf cmp xor and pushf xchg push push xchg dec xor xchg inc jns sahf mov subb jle or popf inc in inc push ret enter and lods stc in rcll adc stc nop mov daa mov and sbb addr16 mov lcall imul test int3 mov in push dec cmp mov hlt test rorb jno lds sbb dec xchg insl sub sahf adc inc clc cmpsb daa fnstcw mov hlt daa add andl lods pop cmpsl sub out out mov adc mov in sub sbb jno jbe movl addr16 mov adc jno aas test adc xor jmp pop pop dec mov sub jne cmpsl (bad) cmp mov cltd mov or mov pop lret xchg (bad) in shr cmpsb inc outsb std push xor cwtl ldmxcsr stos sbb ds (bad) cmp sbb aad lods stc cmp jns mov mov pop mov xchg (bad) lret pusha dec push or daa mov push jo sub mov sbb cmp sbb mov inc or clc scas xadd adc pushf ret mov and push in sub mov movsb in jno dec mov inc stos mov mov es and mov inc fucomip mov xlat notb push pop cmp mov and jmp mov aas push lds or pop sub or (bad) jg and jle push (bad) pushl add and add les cmp lods int aas mov or stos cld dec inc jnp mov iret push (bad) xor xchg icebp jle mov add and add inc xor enter xlat in (bad) jns hlt daa and mov pop jge cmc insl lahf mov mov mov jge ds or and or add inc pop mov aam movb and ret or xchg lock sbb std pop xchg in jl sub jle cmc in add sbb sbb outsb aad enter lcall leave dec subl test cmp in inc aaa sub iret out push push pop sbb push xor lretw inc idivl push add sarl or test push jne test jne mov fldenv addb or test mov mov xor inc bound cli sbb push mov inc inc sbb cbtw ret mov popf jecxz stc sbb mov push xchg cld mov push mov inc ret push cmpb cs jns lods in mov mov (bad) mov jmp movsl mov push lcall loop (bad) jmp xchg pop fwait mov sub xchg mov and (bad) dec mov cmp les xor imul xor daa cmp inc push mov lahf xorb and les popa jno lds mov xor jge xchg xchg push sbb cmp outsb jo fs int3 sub fnsave lret xchg cmc add out pop sub jmp inc dec outsl fdivrl and sub mov out push bound inc cmpsb jb loopne sbb xchg lahf ret out das ja or jae test and and lods stos sbb mov test fwait imul xchg jbe,pt outsb dec sub xchg lcall mov jnp jge (bad) clc imul mov sub mov mov (bad) or inc pushf fistpll cmc sub mov pop jecxz adc dec add mov call push mov sbb in sub inc jecxz mov jne push sarb push stos dec ss out in jge out lods int cld popa mov cmp cli jle hlt mov ss pop or (bad) imul inc jmp fdiv sub mov ds or lods mov pop jg es or or (bad) cmp test ficoml rcrb out xor into test pop add mov push fcmove mov in add and or jb or mov test test sbb ss cmp jbe push std mov mov pop or adc and adc add sti mov pop insl (bad) xor in push (bad) shrl adc jp cmpsl xor sarb sahf je (bad) in ss mov inc jp cmp jmp int3 in push iret mov lods push add jae mov in xor testl mov add into stos sub pop (bad) in pusha ds push mov pop pop les dec push push in addb sub mov das jg shll add jle mov lods pushf sbb jge test outsb cltd lahf (bad) cmc adc mov jne int mov stc push scas push in mov jb mov adc pop xchg scas imul lods mov in add add mov insb je (bad) mov leave imul imul inc mov pop mov mov xchg and mov fwait mov mov shlb add push (bad) and call push sbb dec xchg ret cmp mov movsl mov iret aaa daa jmp inc (bad) or add in mov push mov mov xor inc dec repnz orl sti pop inc dec sub (bad) cmp mov inc jns mov test cmpsb outsl dec mov xchg xor (bad) mov add mov push mov jg mov ljmp and add sub and xorb mov es dec mov jmp mov inc mov lds arpl inc push dec hlt mov mov mov aaa xchg dec xor in dec ljmp inc jecxz pop fs xor jl cmp sahf mov fdivrl fistpl mov loopne sub test cmp xor sbb dec mov jno rolb sub mov test jp shll pop loop lret push ja sahf mov xlat test pop push push or pop mov mov call adc clc sahf in fcoms flds stos test stos pop cmpsl outsl dec into imulb insb dec and hlt jmp dec lods mov (bad) mov pop jl in or push mov ret push mov scas or mov sbb push dec test or aas push xchg push int3 pop cmpsb sahf mov push push pushf adc dec sub add sub sub mov pop or push dec mov sbb mov jns mov sub (bad) std rorl mov sub mov out mov test push out cmc mov in xchg ljmp mov das imul (bad) lods xchg test add push push jmp pop sahf fistl mov add idivl (bad) mov mov out mov bound fadd mov cmpsl ss clc pop scas scas xor aas pop lret imul mov pusha xlat inc pop (bad) mov std cmpsl xchg outsb iret (bad) jg xchg aad mov out pop mov or cmpsb hlt ss dec mov aad inc (bad) scas ljmp mov xchg sarl inc add popa mov cmpsb xchg sarb mov imul sbb sub sub (bad) dec repz mov and dec mov push xchg aas lock push insl mov xchg cmp (bad) sti and ss movsb jecxz pop aad sub mov andb sbb add daa add dec mov pop pshufw xchg adc xchg orb push push scas loope outsl mov xor or sahf jnp jp add lret inc mov sub pop test xchg xchg loopne repz outsb inc cmp mov ds or mov cmp push lock cmpsl jl int push mov fimull loope push jp (bad) mov mov or jns gs loope jae incb mov or xor std (bad) jo and add cmpsl push push sahf movsb jbe sub cmpsb push mov dec dec xorl popf imul push loopne (bad) pusha mov mov aas xchg mov scas out int repnz dec inc mov test mov movsl adc jle into lret dec (bad) dec jb mov int3 cmp sub mov lret (bad) dec mov cs push in xor mov cmpsl mov xor xchg lcall mov call cmp (bad) pop xchg (bad) dec push xchg jmp repz scas dec or xchg nop jg fisub push ret mov dec rolb push jbe adc push cmp aaa pop and icebp xlat adc inc pop jle sahf jl mov in cmp push mov mov xchg mov sub stos fmull dec jmp ljmp data16 bswap out xchg scas and mov in cmp pop sti xor inc adc lahf fdivs adc stc sarl das mov jge into sub xor data16 sbb and das cmp sahf and push push mov dec mov cld sahf cmp fldcw (bad) sub stc movl push adc aaa icebp cmp mov dec pop mov jle mov popa mov cmp dec fadds jb aad in adc push int loopne lret push inc push jo stos dec mov inc and popa mov and sbb dec mov (bad) jmp pop mov xor adcb add (bad) icebp es out mov jbe hlt jmp outsl cmpb adc outsb popf (bad) cmp repz or mov push jns cmp lea push cltd or jae mov stos in dec movsb out xchg adc ret fld inc mov push xchg test sbb xor (bad) popf andb jp mov push inc in jno roll and push cs mov in in repnz data16 jp insb or test faddl dec mov cld mov sbb and js mov jge and or in pop sbb mov js xchg aad pop les insl jo movsb shl imul mov or hlt or add cmpl xchg sahf (bad) pop nop mov clc cmp xchg mov loope insb mov daa les pop andb jb jl mov cmp and arpl jmp aam and and sti mov lds mov cmc xlat nop pop pop cs ret lcall lret jl pop dec sub imul cwtl loop dec sub fimul (bad) xor insl mov xchg addb mov mov pop cmp scas call mov mov mov add test push arpl push push mov dec sarl cmpsb cmp out add loope outsb cmp mov mov xchg inc jecxz jle std ss sub enter mov and adc cs add imul lea cmp in std int3 mov and jge cmpsb xorl push fldcw (bad) mov sbb ljmp neg insb jne or adc notl dec nop sahf dec data16 mov aaa sahf and cmpps mov outsl push adc js pop stos xchg gs cmpsb stc sbb in jo shrl sub sub mov cmp fiaddl mov jns les imul jb xchg push sub sti std mov cmc push inc les loopne mov mov pop push cmpl cltd xchg add loop lret imul in jbe nop adc sub jecxz or call dec xchg std add ss xor inc or call push clc push lcall outsb fwait xor (bad) sub or dec js adc and das in and daa addr16 or scas inc test dec imul dec xchg xchg mov rcr mov add xor bound (bad) sub mov int pop cli pop iret adc cmp jae loope mov pop xorl xchg inc pop mov cmp mov das ss mov sbbb (bad) loope push push fmuls loop push dec inc (bad) mov or jae divl mov xor mov pop xlat ret mov nop bound popf mov xchg mov or leave sub lret jmp rcrl push push dec pop mov mov sub mov adc sub (bad) push pop in push xchg dec ret jbe pop out mov sbb (bad) lock pop sub fucomi jge mov fmull sarb cmc xchg adc scas nop xchg add xlat push cmp je lods mov jl scas mov lahf dec adc sbb je loope cs mov jo pop insl fldlg2 xchg loop cld sub in call out jnp insb sbb add jp inc lea int3 rorl jecxz aaa stc lock mov jge in and ljmp outsl mov cld lds xor inc clc loop mov in inc jmp add sbb sbb xchg xor popf adc xor jge out lods pop shlb sub lock xor mov js cli fstpt pop loope mov jb or add imul scas xchg jae repnz jmp lret inc dec and pop sahf add dec scas das pop ret jo push data16 leave sarl and cli loope add test add push js add mov push mov testb mov pop jge push minps dec cmpsb stos test or enter sbb mov xchg and jnp in or push loopne repz jmp lods lcall lahf inc pushf js pop insb in lcall push xor jnp sti cmpsl xchg sbb out or xchg orb adc (bad) pop push mov loopne mov cmp pusha cld or inc arpl mov ret stos mov dec dec or xor mov jg adc ss fmull flds movsb in nop mov sti mov pusha xchg push pop nop jecxz mov popf pop out adc mov mov subb push adc sbb insb pop push mov dec inc jg out mov andb add xchg pop xchg add and and jecxz dec mov or (bad) outsb mov call mov and push rolb adc mov push or mov (bad) call push mov push sbb dec (bad) jb xlat cmp (bad) daa push pop push pop leave stc mov jl inc jecxz mov ds jmp es mov sarl push adcl xor mov mov jp jbe ss enter jge out lods inc jle (bad) inc sbb xchg add mov cmp leave dec jmp cmp addr16 pushf jnp fmul xchg and (bad) mov inc dec stos pop push cld iret mov and push pop push jecxz mov jmp mov and pop pop imull ss sub pop jne test jmp in (bad) int in arpl cmp push inc sbb and mov sub add inc pop sub fisttp push in jne jns jno cmp es ret hlt cs jge inc nop in lea mov sahf rcrb (bad) aam mov movl add mov pop sbbl out mov add inc adc sbb or and xor mov mov inc gs or mov icebp jp rorb lret mov push adc (bad) mov mov data16 mov out out lcall lea inc cwtl clc das insl sbb (bad) mov mov xor lea pop mov lock sbb jg jnp addl jno popf sub test ss or push int pop and daa test ljmp ds mov into imul mov das stos in jns sarl mov and lret adc aam xchg adc lea mov cmp cltd in pop xor jl adc mov or in mov fsub mov sub xor push xlat cmp add mov (bad) xor sub cmp call test sbb xlat mov pop jl ror lcall clc outsb mov ja popa inc out orl mov jne lods ljmp test push outsl icebp ds pop in in movsl inc jbe mov push sub and mov dec stc inc pop scas frstpm(287 jmp js loope jo aam (bad) and imul outsl lret jle icebp sub dec pop sub inc cmc ret int3 neg xchg pop jp in mov ja inc jno mov xchg dec cmp sahf call xlat sbb or cld xchg jge mov xlat jle sbb fisttpl push sbb test dec fidivl xor mov jo inc push pop ljmp fnop mov jo iret outsb out dec push sbbl mov loope cmpsl sbb fadds push mov (bad) bound add xor scas push mov fcompl ret mov xchg (bad) add mov sti or cld mov sbb pop and clc sarl cmp mov outsb fild push sahf mov or sub fdivrl or lcall imul cmp and ss mov shrb inc test jl lods fs mov pop jge cmp add adc xor jle sub mov call in adc xrstor rcll cmp mov mov stos lock xchg jmp (bad) mov xor and dec xchg push pop or in jb dec cli and lret pop loopne out fwait lcall movsl mov iret xchg push jg xor or or sarb push push add mov imul push jns xlat enter add pop sbb xlat jnp add xor add loope mov div sub push (bad) mov add jmp out mov rorb xor sahf mov stos dec mov dec aam test pushf ficompl cmp mov mov std inc mov adc lcall jg push (bad) pop in ljmp or jo cmp icebp jmp mov inc dec cltd mov mov push dec pop fmuls ljmp mov ss inc xor or shrb loope or lahf in rcpps mov inc icebp push xchg xor sub lcall stos xchg pop int enter ret xor and pop insb push mov ret pop aad (bad) mov popf mov mov mov aas mov sarl or cld frstor in into push mov es jbe jns push cmpsl mov adc inc inc and sarl sbb push mov mov mov cmp xorl jl xchg sarb xchg jo and pop imul jbe lret jns adc cmpsb pop push push inc xchg dec xchg inc jl outsb or adc push in adc cs xlat xchg jns,pn mov sbb xchg movsl or sub sahf lds out scas sti pusha mov (bad) cmc jae jne mov aad lea sysexit fs in adc cs mov xchg js mov notb push push stos jg dec xor shr mov inc mov repz mov fwait dec cmp cmp lret push nop push ljmp mov es cmp pop mov mov repnz xchg add lods pop push fld pop mov (bad) mov test sahf fcmovbe mov mov repz xchg mov shlb lock negb add jne cmp in inc and aaa xor mov pop jle push push push sub mov repnz cmp popl xor mov cmp mov pushf lea mov stos push adc xchg mov xchg or mov and in inc ror addr16 popf je inc pop std sbb insb in or setge xchg ja in repnz rcr sbb mov cld pop push xor pop in xor fs push lahf fcomps (bad) dec xchg (bad) xor rcrb arpl pop mov call jp aam movsb inc aas sub fistpll stc cs js cltd out cld mov cmp mov sti sub inc scas sub add in mov aas scas lds push mov inc pop xchg in and pop inc push iret stc es push mov (bad) call popa xchg adc mov inc add lahf stos (bad) imul mov je into dec lea int les cmc jmp fimul mov cmp dec jae mov sti cmp loope sub jmp inc xor daa (bad) push add not aaa mov outsb push mov jle push sbb in dec movsb inc mov pushf out into test icebp pop cmpsb pop js jg mov xchg mov pop cs jl mov fdivrl mov nop out mov jp mov notb and mov pop movaps mov ds mov ljmp nop fstl mov in inc mov inc ds iret popf sahf dec in xlat loop stc lcall in push test pop cli orb adc jl lea in adc test imul in dec into ds xchg inc and push xchg add bound aad in push cmp aad xor dec stos xor push inc and arpl pushf test setp and sub in lret or aad (bad) xchg jp (bad) in insl fwait stc cltd (bad) in xor mov mov outsb jl call lea insb imul out mov push test ljmp inc arpl dec roll xchg adc stc add inc push jno ret dec cs jb enter pop (bad) icebp testl in sub imul pop add push rorl xor stos nopl and xchg xor fdivs jl xor insl xchg pop dec fcmovnu mov push and daa (bad) or xchg pop push pop sub mov cmpl cmp cmp je aam mov scas cmpl data16 xchg sbb inc js,pt sbbl insb rolb pop inc sbb cmc daa test mov lcall ret push (bad) mov rcrb outsb jp les and jne mov pop outsb cmp das adc dec hlt inc dec cmpsb fnop enter mov sbb adc pop outsb jp lahf pop cs shld inc scas push in push hlt aam inc movsb (bad) (bad) (bad) sarl (bad) inc out jbe or sbb in aaa dec sub scas mov adc push jmp xchg mov (bad) mov push mov imul mov lods mov mov push imul ds xor adc into pop mov loop cmp jecxz mov pslld int3 xor jl call sbbl inc jb rclb push mov sub mov iret mov cmp dec lock and out xchg test cmp lahf or cli addb (bad) sub and out sar inc aad xchg adc jle sbb test std cmovns push es cmp dec mov push ds sbb arpl fadd test lahf cmpsb int mov lret fdivrp dec in jg (bad) cmpsl sbb cmp fnstcw push jg and (bad) int push sbb fsubrl inc loop inc loopne cmp push into xchg mov cld gs pushf int dec aad fdivs ja shll lock sahf mov sbb mov xchg ffree mov pop xor and cmp inc jge cmpsb rcrl cmp jo lods fstpt outsl loope test mov imul or mov or jle in mov inc daa push mov fistpl add scas xchg loopne jo ficom xlat je stos push adc out mov xor sbb jle mov test or or pushf (bad) iret aaa pop cmp xchg sub mov dec inc pop jmp jnp push adc shrb sti xor test pop jnp fisubl lahf add lods pop jbe lea mov add mov add in test data16 xchg pop insl les xchg ret cltd mov or push lea or mov or mov lret rcr insb je stos in in (bad) rcr xchg insb fistp (bad) lock insb lcall pop xchg xor popf add loop mov cli or jo xacquire push in pushf fucomip push in loopne inc mov lock pusha xor mov dec imul mov xlat adc loop push (bad) imul mov out mov scas inc in xor movb sti or mov fcoml ret sbb cmpsl pop xor mov cld dec imul clc (bad) fwait xchg adc loopne (bad) dec adc or ss mov inc push jmp push in push jne lea push addr16 jg dec mov and addr16 mov xchg data16 jo cs daa test push outsb or das cmpsl mov cmpsl sbb push sub in repz xchg mov mov jp and sti adc (bad) cli loop mov jbe in pusha pushf add clc sbb loope jno add ret ffreep imul ret mov imul xchg addr16 cmp (bad) add ficoml mov or mov int3 xor cmp mov mov es mov nop aam push and mov out adcl in xor cmp sub xchg mov add jne (bad) cmp test in leave sub push es adc push test push mov pop pop sub testb cmp int3 mov les push xor fstps (bad) enter (bad) push add or fildl xchg lods xchg cmpb sahf test in xor test aad fistpll daa aad (bad) jmp adc loope mov pop and mov jb iret leave dec mov inc sbb jo clc aam or xor das (bad) cmp pop mov inc xor hlt int3 cmp fwait xchg icebp cmp mov outsl push sbb xchg rcr fsubl pop pop pop xor push pop push push xchg jecxz dec stc mov and adcl in jno mov push cli cmpl add sbb mov les jae sub outsb ficom inc jp sete jl in and in gs adc mov insl out add fsts fnop or les or xchg jmp mov pusha pushf mov xchg aas sub sub lods inc push movsl push ljmp mov pop adc mov sub or in mov pop mov scas mov test and xor test pop out sub in fdiv mov cli jl fisubr inc mov sub cmp cwtl push xlat mov push rolb imul hlt clc sbb xchg rolb adc in adc mov or mov push jbe lea mov pop cltd mov add aad sub test subps movsl mov insb push jnp into lock loop std mov mov mov dec mov xor movb pop fdivp push scas xchg (bad) or lret sbb aam mov or lea pop (bad) pushf jmp je inc mov pop fstps dec fsqrt mov enter xlat mov add test adc mov call sub lods and xlat div ds pushf sbb daa adc sub jne loope jl int3 (bad) ja pop mov je sbb mov sub push (bad) mov mov enter ret in outsb xchg (bad) push in pop rcl push leave push mov mov pop loopne add je sbb scas fsubrs (bad) outsl inc jl cmp outsb or mov push stos ret dec ljmp shrl add call xchg push mov xor adc and inc or sbb stc shl mov and test and jno jae enter and test xor loopne femms ret in pusha push test adc dec js outsl xor push mov mov dec inc rcr sub repz aas sti xor (bad) arpl fs and shrb icebp adc rolb dec pusha dec pusha sbb ret out sti jo lret sbb xchg cltd or cwtl xor push movsb push fnstsw inc mov inc push mov sbb lock mov xchg jae (bad) (bad) lock push fstpt (bad) or pop out or imul fsts inc xchg mov sub fsts mov push cmpsb iret (bad) sti and (bad) movsb jecxz scas aad xchg ljmp js sub jecxz sbb nop jg pop aam (bad) cmpsl fmuls clc xor dec lea mov scas outsb aas mov mov xor push pop pop mov repnz xchg push stos mov xor ja icebp loop (bad) int push and stos jae mov aaa pop pop mov dec loop (bad) jmp cs jns lds insl sub dec sbb pop jo sbb jmp cmpsb popa cmpsb jecxz lret cli push xor lods dec data16 in sub ret out push cmp mov pusha push inc cs jg pusha mov or ja es rcrl adc (bad) hlt mov mov ss inc rcll outsl mov js ret mov mov and sbb out push movsb incl mov std fistpl cltd mov cmpsb pop pop insl mov ds fdivl mov mov xor negb in mov lahf xchg sbb loop mov mov or cli fadds mov sub push cmpsb in pop pop idiv pop dec sub or sub push divb scas dec pop mov test sbb bound jo sub or loopne mov and in mov jb lea imul push sub sti out sahf inc jbe sub sub nop inc fnstenv pop adc stos call out (bad) mov iret in lock jb fucom add mov int aad or inc js ss mov es pop lret inc mov adc testl out ret mov lret les and pop daa sbb clc test call sahf adc mov pop stc sub mov (bad) aaa fstpt test (bad) xor nop adcb inc dec paddd push test jmp lods rclb sub aas loop jmp sub xchg ret divb cmpl dec xor push sbb lds sub aaa and enter mov (bad) cwtl (bad) cmp jnp mov pop or lock xchg xchg jl outsb mov aam and or fiadd or dec rclb cmp jg pop stos mov jb loopne leave (bad) mov cmpsl out jne adc faddl adc xor dec or fnop gs jne adc je push inc repz pop add mov add jge adc add and xchg mov and pop je je movzwl add aaa int test in (bad) dec cmp add xor hlt or pop inc cmp in sbb movsl fidiv dec inc fnsave fmull ja in sbb ds mov xor inc mov mov pop lock fisubl mov inc jb adc sbb add mov pop inc push in xchg mov mov jno mov jmp mov mov fstl das or cmp and xchg and outsb jecxz ds lock cli mov stc cwtl mov sub ljmp push int incb cmpsl pop gs mov mov (bad) insb add sahf mov push push sar sub (bad) into imul mov dec dec mov (bad) out xlat xor cmc std outsb xchg and dec into pop push add je (bad) rolb inc adc daa jbe cmpsl stos or movsb and inc add adc enter adc inc adc inc mov xor mov mov ds sbb in outsb fistp inc fisub out and mov lods mov pop sub jb mov push jl push mov stos mov xchg jmp adcl test nop mov (bad) rclb and xchg das pop mov loop adc or mov inc pop mov mov stos adc pop xchg scas lahf jno mov enter inc mov push es pushf jb stos (bad) fisttpll mov push shr ja,pt dec mov or aaa lret popf dec aas ds in jbe in xor adc mov mov cmp xchg ja aaa jl les inc scas in imul xor sub mov int xchg mov sub pop xor arpl and xchg jae sbb xchg lcall push inc inc mov cmpsb cmpsl jp jmp dec add inc pop cmp fdivs mov cmc mov xor xchg outsb notw sub fldenv and mov sbb push xchg or ds mov pop push dec data16 mov jae xchg outsb (bad) fildl pop addr16 decb cmpsl pop cmp scas jmp mov fisubr pop jns xchg mov cwtl mov mul mov aas push lea add test loope mov testb out int fldt (bad) test inc mov xor lea orb data16 sub lods fdivrs std sub or mov mov dec cmp cs mov or mov xchg (bad) pop add jo push inc mov clc pcmpeqw add mov es push dec pop pusha faddp dec xchg mov inc xor test pop or dec mov icebp mov test int push xor inc mov rorb repz lret or add lahf push mov push xchg xor sub stos jge mov mov xchg cmc jle and cmp jmp ds jl rorb bound mov inc mov dec mov xchg aas xchg shrl adc inc push into lea mov leave sahf cmpsl pop jmp jb stos inc jnp xchg sub jne mov cmc sub dec inc xchg bound in loop push cmpsl int jae aaa outsl push in pop arpl mov fs (bad) repz je insl rcr xor stos repnz ret sbbb insb mov arpl fs mov sbb adc lods idiv in pusha (bad) ljmp and xchg mov out sbbb popf pop enter jle mov jb cld push inc loopne lcall xchg (bad) icebp sti xor fdivrl addr16 mov test mov rolb int3 rcl loope mov xchg push mov lcall (bad) in andb jns in outsb icebp (bad) mov adc mov adc mov sub jl mov (bad) push dec xchg lock mov or stos loope test (bad) mov lea push loopne cli dec loope push ss lods or mov pushw xor jle push mov in shll hlt lea xchg fldcw loop das (bad) sbb aaa push mov cmp adc sbb loop dec sbb dec jle scas mov cld popf add inc dec cmp sbb outsl mov adc jno mov ret sub sahf xchg xchg data16 xlat mov lahf xor je and bound cmpsb popf sti int3 cmpsl movaps lcall mov sbb xchg lea int3 dec call add das cmpb mov mul pop push sbb push xchg pop pop push and xlat sti je push xchg inc mov nop loopne and pop mov cmp fsubp mov (bad) or jb rcl push jg cmpl clc (bad) adc sbb scas jb add jge pop icebp imul cmp (bad) mov sarl jl cmp mov cmpsb jge inc stc dec insb ret jge,pt mov mov test test roll out aaa dec jne mov outsb iret mov inc xlat xchg hlt shlb aas sbbl ret jns sub in imul or pop sbb mov and adc mov cli in jp loope dec aas push adc xchg das mov frstor jo sub xchg jbe push out or xor repz jmp inc adc mov or mov sahf cld data16 (bad) push dec jns stc in add inc popf pop lea out or push mov dec out ja mov push (bad) (bad) sub (bad) outsl lods (bad) daa jb pop mov leave in jle jecxz mov jnp adc outsl stos loopne (bad) stc push (bad) or mov sbb sbb mov repz scas jbe (bad) scas scas dec loope push mov cmpsb sub cmp add jnp movsl mov inc mov es ss fisttpll insb sub sub cltd in jl mov jno lret aam mov lods out fcmovb dec pop mov add out push dec inc pop fsts jbe mov pop daa jp mov rolb int mov (bad) or into in or push sub imul adc mov mov (bad) scas mov sbb lcall xchg adc xor test rcll inc pop jg push mov fnop dec (bad) idivb and mov faddp pop outsb ljmp dec mov sub xchg lds in gs push iret das (bad) repz xor incb rolb xor mov in pop mov xchg ja scas cmpsl mov lea std push cmp mov nop dec pop adc xchg shrl mov add fimul add rcrb movsb rorl ficompl adc jecxz scas in orl mov ret fsubs insb popf cwtl lahf rorl les es xor inc mov xchg movsl jnp mov and cmp fs push xlat and enter lea push scas jno mov lret and dec scas mov mov lods sbbl xchg sbb rcrb nop sahf data16 fmuls push mov cmp adc or jmp mov loop jne inc leave adc mov (bad) push out or and inc loop icebp inc mov mov out mull repz cs cmp loope sub or fldenv mov lcall inc mov mov dec add xchg mov add lea jnp stc lock in fwait jle out insl push mov out mov (bad) cmp ss mov je mov aaa jge mov or sub push mov push cld sahf arpl mov enter mov popf mov into (bad) xor mov cli xor lds mov (bad) ret ret in fldenv ljmp outsl xchg in adc adc mov loop jb out into add out insb int mov leave je inc es mov fsubrl mov fwait call sbb icebp std xchg repnz in mov movsb lds (bad) ror nop xlat mov sbb cs rep mov jmp cmp gs stos int3 xchg enter rcrb jge cmpsl mov add push push sbb outsb iret stos sbb das sar mov cltd dec ficomp adc inc shr inc jp rolb lcall outsb inc push lret fwait rcl mov clc or js int3 in out or add in outsb adc fistl mov cld mov xor es jmp iret jo into inc dec sahf dec jecxz push fcmovb jl (bad) jo iret lea in cwtl or pop les cwtl cmc push sbb sahf inc ja dec std data16 cltd int3 mov inc aas loope add mov jge push and sbb out or movsb addb sub push clc rcll clc jnp cmpsl cmc jmp movsl mov in mov dec test test push dec adc and sub cmpsl mov ja stos xchg add sti xchg xchg sub shrl fstpt push jb jecxz mov mov shl push cmp aad (bad) lock fild data16 and adc int das pop mov adc sub js xchg cmpsl fdivrs sbb ss mov jae in loop xchg scas fistpll mov fbstp dec adc iret mov jno loope sbb scas int3 jne lahf pop aas mov pop iret popa cmp mov mov dec aad mov in fs adc dec in adc mov push and push xchg pop mov add dec in mov add cltd pop adc imul lahf dec jns stos jne mov data16 lods cmp pop xor lock (bad) mull jecxz clc scas or loop mov jae lods inc add nop sub adc mov dec test pop and clc enter aas cmc cltd sbb cltd xor (bad) mov lret inc stc push push adc subb loope pop cmp test xchg (bad) or popf mov pop shll mov jbe iret lods pushf in data16 insl lock (bad) mov fsubr outsb (bad) test test (bad) mov sbb lods (bad) pmaddwd pop je cmp fwait out adc scas sbb aas xchg mov mov jge rcrl add pop mov xchg mov cmp (bad) pop xchg cmpsb or mov repnz lea jbe call mov xchg inc inc into aaa sub mov in imul rclb jg pop mov test loopne or mov shll dec (bad) ss test push inc or stc sub dec inc or and lcall sub push xlat mov xchg lea loop pop dec flds outsb pushf icebp adc lods lea lahf pop fbstp scas lret jge push int cmp je insb fiadd aad lock mov cmp loop imul mov sub and push mov ret xchg out fnop cmp jg stc arpl loope mov push inc in or cmp stos std fldt xor mov mov cmp test iret inc std sahf movsb rcl and fdivr push cmpb insb fnsave push lea cbtw sbb out mov lcall mov push outsb mov pop xchg lret mov dec lds jo inc mov mov mov mov or push insl pop mov xchg ljmp mov mov inc sub sahf ss (bad) leave repnz (bad) rol sbb push fistpl mov inc push dec mov enter mov loop push pop stos mov mov fistp sub andl mov sbb push and cli mov adc cmp mov out lret adc mov loope iret sahf sahf (bad) pop xchg or cltd jne jo pop (bad) cmp js xlat push inc and push (bad) mov pop in (bad) cmc adc popa aaa in inc leave lahf sbb test sub jl lahf xchg fidivl dec repz sti push pushf mov rcr cmp xlat clc inc jne or mov es sub mov rorb sub les jno rclb into roll jge outsl mov das or out scas pop insb jmp (bad) mov mov mov data16 mov add xor mov daa xchg mov push mov xchg loop int push add xchg std stos adc lahf mov xchg inc or arpl jle dec xchg (bad) fidiv jnp sub call roll xchg adc out push mov mov and test enter dec sub out mov fisttpl cwtl cmpsl pop xchg jb push mov cmp in mov push mov push sbb loopne stos xchg xor jno xlat push pop add dec cmp loop inc inc sbb je or in or sub dec xchg lahf js push or out sub std xor xor mov xchg mov aad mov mov sub iret scas xchg (bad) dec loop (bad) jecxz test aad sub pushf dec movb inc test out push jo xlat or fstl mov sub mov cmpsl in loopne mov ljmp pop daa dec push movsl mov jae jg ficom cmp jbe,pt jb mov mov and faddl sbb inc cmp jmp rorl popa or fwait cltd stc jmp orl push jb add arpl cmpsb sub cmp mov (bad) jb in add jle pop inc lahf mov data16 dec (bad) (bad) jg jae int pusha cwtl add aaa cmp mov xor xor imul icebp daa scas mov sub int cwtl aad mov imul lcall insl fsubs sbb sbb mov fdivl mov push pushf insl xor jge inc enter mov mov outsl call dec mov pop xchg (bad) (bad) push xchg xchg push xchg push mov bound gs xor lret cmp pusha pop xchg aas push repz movsb mov inc mov daa fwait dec das push cmc testb repz mov or mov push or stc repnz mov pop jmp pop ljmp sti jo movb mov (bad) sahf out into and mov repnz mov gs lea sub repz inc push test push sahf rclb (bad) ja loope cmp js mov jnp and insb mov cli jl outsb je,pt movsl pop cmpsl shlb mov in insl xchg cltd in xchg adc add mov idiv int sub cmp (bad) aaa shrb jmp cmc movl sub loopne popf mov sub or mov mov sbb xor xlat inc data16 aas add subl insb mov inc cwtl sub pop mov lret xlat mov rorb push jbe dec setp push pop or ljmp in out xchg inc adc fsubl add ds loope mov cmp jbe push dec jns les lahf cltd neg jl mov pusha xchg mov xchg fimul fmuls xchg pop in adc cld xor stos jg test (bad) les pop xor mov jp push xchg outsb ret mov je (bad) jo sarl jnp out push mov pop (bad) xchg mov (bad) pop je mov iret cmc in mov test (bad) sbb fwait lds or cmc das outsb je into ja and mov push imul inc fsubp mov enter jae (bad) mov nop repz adc dec test mov xlat mov jmp rorb mov int sbb mov (bad) pop mov (bad) aas cmp or mov dec mov mov loopne jnp (bad) fisttpll int xchg subl push cltd rolb mov mull ficoml mov push add hlt mov mov push mov lahf dec lret les fild jae mov out push sbb mov mov push into dec mov sbb cmp dec loopne jnp test (bad) jno test jno rorb mov sub in in lock and addb mov scas movsb jp sub das push mov pop lods mov sbb icebp sub adc test insb sub mov mov inc xchg and mov sub mov sbb aad mov push jbe (bad) mov sub es mov out stc sarb mov inc mov ss insl push jmp aaa sbb adc int3 test ss popf xor sbb mov negb mov dec jo loopne cmp sbb mov pop scas mov test pop mov rcrl (bad) dec lea out push xor stc pusha ljmp fistpl lea shl ja xor or mov outsb push ljmp jmp or ja outsb jl cs mov pop cld lcall repnz es das iret adc js test paddq inc adc cmp mov dec aaa push mov inc dec mov xchg lahf in or or movsb ljmp jbe das ret push lods jecxz movsl push jle jle inc mov lea add xchg sub xor sub and sarb pop daa adc movsb or pop negl (bad) xor jo sbb add lea insl movsl out add (bad) jecxz jno in push push aaa in sbb mov aaa dec mov scas out str cli cltd dec xchg dec orl push xor push jno cld mov jbe mov or xchg pop sbb fldenv push push pusha inc outsl mov out sbbl inc push xchg fmuls pop cmp (bad) mov jns arpl cmpsl fstps test cmp fnstenv cltd mov lods sbb adc rcll push xchg ss imul repz adc fnstsw push mov adc scas (bad) pusha stos btr mov sti in ret mov add int3 push mov sbb or add out jge scas (bad) lret in (bad) cmp xchg jnp mov dec cmpsb cmc outsl xchg daa xchg stos pop sbb push out jg push pop jle mov (bad) mov lods in addr16 and fisub push pop je push pop pop test enter int3 movl push out (bad) les pop insl inc jp ljmp push in (bad) aaa cmpsl inc push inc clc push push and je jb push xor xor cld xor mov jg sub cltd test fstl mov test fist adc enter sbb ret pop or push scas cmpsb xlat lret xchg xchg stos fmuls mov ror leave mov xor xchg or jne mov loope cmpb dec inc mov mov jbe je scas xor das (bad) out test pop stc xchg aad mov outsl int jns mov dec loop sbb add mov add ds lods xor test pop mov mov outsb (bad) xchg jbe adc adc adcl ss outsl xchg push mov mov jo (bad) es adc or or dec push and in pop push lods fucom insl adcb mov int icebp sbb jmp fwait xchg push sbb dec mov (bad) push dec inc frstor or hlt mov (bad) in mov adc cmp push mov dec push cmpsl mov mov shrb pop dec cltd lahf adc cmp sahf pop loopw jno fmull push push sbb mov dec test mov push dec xchg lea out addr16 loop clc sbb in push pusha xchg mov dec sub jmp test rclb dec int3 (bad) lds int mov ret repz lret adc add push js dec in fcoml js cmp je repz xor add xchg fldt addr16 add std mov push sbb jle,pt das xor aam in je jl sbb hlt inc inc repnz and int loop fsubr sub arpl addr16 mov lahf dec push das jne mov jno daa in jp mov insl jbe mov loopne or sbb cmpsl jle ret or push scas dec out orl push push mov push jnp inc add mov dec cmpsb push (bad) jmp fmul data16 or mov push mov sub (bad) outsb arpl cmp inc (bad) enter xor add mov stc inc and popa inc icebp push xor imul add pop jge in dec fildll scas pop add inc lods mov mov mov pop mov push mov icebp pop daa ja movd sub jo jmp das orl jl dec dec dec or sbb or fstl or int3 lret pop inc lock jns in out outsb (bad) bnd adc mov mov (bad) int imul and (bad) aaa push adc call mov sbb dec insl in jne mov leave mov and push mov (bad) gs pushf decl push mov push ds inc cmp push ss mov mov lahf cltd jbe popf inc mov xor mov orl (bad) and mov cmp scas (bad) mov mov (bad) jo add nop stos adc mov cs jmp insl mov (bad) push jge js cmp or rcl sub jl xchg xor mov jo aad aaa jo inc jl mov mov ret push ds popf push (bad) imul xchg popf shll stc in or and mov in pop shrb sbb je int push jns cltd cmpsl pusha lret stos int inc (bad) cmpsl mov pop movsb mov xchg mov ljmp mov mov cmp push in mov int3 and das xor test sahf push fimull fisttpll dec push xor std icebp inc fucom mov ds cmpsl sub mov scas pop mov int jle call in inc xchg dec std lahf mov outsb es insb or pusha mov iret pop and inc mov dec shr or push vmovapd jb pushf sbb cwtl icebp fs mov or pushf call xor cmp push pop mov xchg cmp sbb leave mov inc xchg cmp xchg loop mov mov das sub in jp mov out add push cld sbb push add out dec fstl sub inc mov out ljmp sub inc xchg sarb pop mov ret outsb ja cmp jbe stos loopne test mov int adc shll ret adc or aas and push lods lahf (bad) fcmovnb addb into mov sti pop clc lds jno (bad) jmp sbbl pusha adcb dec inc movsl addl mov adc test pusha mov out mov push test rcll jo sti xchg test lcall in mov pop outsb in xchg adc add addr16 fadds mov aam mov or mov add jl decb movsb fsubrp xchg mov popf lahf push dec mov mov adc adc pop jne insl mov imul pop mov pop lret iret lcall test dec cltd xor jns jbe mov stc sbb in push js add sub lret das je mov testl test (bad) negl adc push shrl in loop mov lock outsb dec addr16 fisttp out mov divl iret xor adc das lea das int3 jne sbb out dec in aas jbe sub mov in (bad) (bad) (bad) adc sub clc test xchg push pop jl lods adc mov jmp ret lcall int3 data16 xlat mov add sbb push mov test scas sbb data16 es and xchg out leave xlat or (bad) imul mov scas fisttpll add (bad) xor mov in push mov xchg add clc mov daa addr16 jecxz adc jbe lods cmp adc out push shlb stos sbb fnstsw or xorl dec adc jecxz mov or xchg push sub mov dec mov aad (bad) adc into je cmp jle cmc mov jge cs cmove aaa lds leave jg sub mov cmpsb jns sarl xchg les in mov gs fisttp or cmpb in fldt arpl push sub stos sub rorl and adc ja out mov fwait inc mov call sbb dec jg mov xchg adc xchg xchg push ret mov je js int adc loop push and lret cld pop mov into cmp push fisttpll jnp mov icebp nop mov mov sub jp push mov (bad) mov out test mov in (bad) or push addl pop push mov fadd mov xchg mov pushw mov sbb testb rcr mov add push jno,pn dec aas ljmp clc call arpl mov ret push aas cs push or lret lods out sbb jmp xor movsb lds mov inc mov mov pop and ficom add pop xor push sbb pusha cmp dec (bad) and and ja call or int push out aad mov fsts pushf mov insl sub dec inc lods (bad) xor aaa idivb das loop xchg rcl test xchg mov pop or lret mov ret (bad) (bad) dec mov inc jle ds hlt ss call imul mov cmp push insl mov jbe dec jno jbe sub and outsb in loop xor mov xor outsb mov ret add lretw in lock or mov mov add insb lods in imul xor adc adc movsl test push jge or int test outsb lcall mov adcl mov outsb adc je cltd adc jl pop repnz daa xchg mov or dec push test pop xchg mov (bad) mov cmp jl mov adc push inc and pop lea addr16 les cmp (bad) loope outsb mov test mov ficom mov xchg aam (bad) dec (bad) mov ret jmp mov insl mov xor jns jmp pop mov mov (bad) leave push push es mov add addl aam inc shrl mov mov mov mov rcl inc lcall xchg adc mov iret xlat mov mov add movsb rorb in cmp inc mov rorb fsubs fisttpl push inc xchg sbb pop mov out in jb imul int3 cmc ds adc dec in mov test fldt int3 stos push and es mov mov push loopne mov and adc in push ja ljmp xor or iret sahf xor rorl xchg outsb mov jge fildl sub adcl cmp rcl aad cmp jns or mov dec jns arpl mov shlb mov or call movsb lahf push inc or pop or cli cmp sub xchg add jne dec sub lods iret clc push inc jnp lret inc es sar or xchg sahf sbb push jg js mov and insl mov (bad) dec xor (bad) mov iret cli (bad) sub mov stos jnp outsl cmp iret test push fnstsw addl fsts fwait sti pop outsl ficom mov inc pop adc mov pop add dec aad int3 data16 xlat add sub scas ja sbb jo aas sub sub mov xchg xor jmp push mov ret in cld xchg mov (bad) xor mov jle xchg int pop mov lods mov outsb aaa fadd inc fbld cmp out dec adc cmp mov sub imul dec aas in mov mov push hlt aas add fwait cvtps2pd shlb add fwait test pop xchg mov outsl test xchg nop mov dec dec mov (bad) xor jo icebp (bad) push xor mov mov loope les in add or inc dec cmpsl pop push ds mov cld sub rcrb out push pushf sahf xorb out inc pop dec inc fadd fs push lcall push and add (bad) pop scas roll push adc test outsl cld mov mov in mov lods jmp fisttpl nop (bad) loope mov push outsl je xchg mov or jb daa inc mov (bad) pop ret xlat lea out cmp enter mov iret clc mov push cmp mov xchg push inc movsl dec sbb add xchg pop cmp jns sbb jbe inc mov pop or cmpsl sbb mov mov pop adc xor cs int3 or dec jg push xor cltd xor xchg adcl xor pop mov dec ja xchg inc mov xor in mov pop gs and and enter ja icebp mov mov xchg mov push imul sub jg scas and (bad) dec sbb rol mov icebp mov pop mov testl les jg jbe stos mov and add int add cltd dec test pop lret out lds jns xorb fsubs daa insl sbb mov inc cltd push mov rorb jmp arpl xor jp push mov fldt pop stos fs imul dec lcall rcll test out notl mov or mov cmpsb inc ja cmp and cs aad pop pop add lock bound data16 sbb clc cltd orl mov push dec and lods xchg pop cmpsl xor cmp in mov dec (bad) jecxz sbb mov sbb push jns cmp and rcrb cld dec mov sbb arpl rclb sahf nop aad add sub cs orb neg lock (bad) jle ret xorl pop push (bad) mov in sbb adc ds mov jle fwait int3 xchg shll ss andb ret mov mov xchg scas mov pushf and adc dec jo fsts push xchg mov movb jae fdiv xchg cmp jle push push mov xor fwait adc icebp jg fucomp dec mov scas xchg sub sub (bad) (bad) pop jle sbb jmp cmc hlt jno mov or popf fistpll mov cmpsb imul sub mov mov sti cmp shrl addw pushf test lock (bad) repz lods push insl mov mov mov pop cmp dec dec adc shlb aaa inc lahf ja xor lret mov arpl shr in mov pop pop aaa push mov fisub repz jb jge test mov adc in or ja arpl sub pop jp fdivp cmpsb in fsubs push in outsb sbb push adc repnz add (bad) mov (bad) xor ret mov mov mov fisttpll sti adc daa push dec je xor dec add icebp cli dec (bad) xchg add sbb mov push xchg popa inc add sahf leave (bad) rorb ds mov rcrl mov adc push and ficompl das and mulb mov lret rorl xlat pop lea mov lock sbb inc adc pusha jne xchg setae insb insl outsb in (bad) fcomp or adc xchg mov adc sbb mov push lea inc lock xor mov jp movsb fcmovnu xchg out mov into idiv push daa xchg inc mov loop mov popa pop in inc rol push cmp test mov pop push mov cmp hlt xor lds lds jmp scas xchg add and fist int or jecxz subb and xchg repz cmp out and test test mov mov sbb lret jecxz sbb movsl sub mov cmp push (bad) sub in push mov sbb pop aaa fnsave mov outsb mov dec cmp inc mov xlat ja int ret cmc rcr pop mov mov dec into push out sbbl test and in leave or test mov adc xor push pop mov pop mov aam orb das mov or or sub add or mov outsb mov mov mov (bad) mov in push pop xchg ret pop je cwtl cmpl dec adc xor mov mov jp dec cmpsl (bad) loope or mov mov inc fdivl pushf xor xlat mov or pop stos jl,pn sub cs pop mov dec mov mov cmp or pop xor fimull adc mov mov stos (bad) roll xor mov mov mov lods lea in addl (bad) js jmp mov push jge (bad) popf xor jb mov je lock (bad) mov stos push jle mov or jae fidivrl cs outsb in push aas mov arpl dec or pop scas add inc sbb inc jp (bad) hlt pop subl sub sarb sub xchg mov add xchg jle pushf out pop pop jecxz out int mul cmpsl in add out xchg scas mov cmp adc add pop sti and mov xchg popa fimul push jnp into cmp cmp adc jbe int aam fistl lcall lock jmp add adc inc scas addr16 push gs rcr push mov lds lret lea cmpl mov scas add (bad) outsl mov in (bad) push mov ja test mov pop popf jp mov cmc pop stos rclb lret jl fwait inc and aad sub sub mov mov jl mov mov xchg movsb insb mov xor mov and mov jp dec jne dec mov dec adcl int3 pop sbb ljmp push test nop lret in inc (bad) aad xor cs xor jno jp add out pop cmp adc mov sahf in mov cmp sti hlt mov mov out dec pop mov jecxz cwtl dec aam inc and in mov aaa xor addb loopne push scas lcall test push (bad) sub ds mov xor mov loop jno lea test movl mov and mov add push pop (bad) lret ret imul xchg xchg adc pop mov inc in ds inc das pop sbb adc add and mov sbb aaa imul into push xchg stos (bad) int3 cmp adc or push push jns sahf rcll in pop aaa into xor inc mov xchg cmpl push icebp mov loope cmpsb adc mull and add test mov das dec in outsb or sbb std push jo lds mov mov fsubrs aad nop push mov cmp into sub outsb and mov fwait andl mov insb loope in push pop out mov (bad) in cmpsb xchg lret flds lock mov cli nop rolb sbb mov mov and jle in jle or inc ja,pt pusha les cmp xor xchg (bad) int3 fmull jl mov cld in add sahf push out ds test pop jecxz pop push push dec push adc sub mov or add mov jae sub push cmp pushf dec jg xchg std sub das (bad) fnsave sub fldl fdivrl push or ror push cmp push dec mov call jmp scas xor (bad) divl aam push mov in xchg jb repz lret test mov push in pop jne jns enter test int in cmp mov lea sbb mov (bad) repnz inc test fs jmp test xor loop xchg insl cs nop jb xor dec xchg test mov scas int in stos dec push cld lods popf dec adc inc jnp dec mov pop xchg sub and adc adc mov sub mov jo out push les movsl ret (bad) insl ljmp out es sub pop or mov lea xor cli rol mov lahf outsb jo and add fsubr lods mov aad dec popf idivl mov test mov stos mov and adc outsb es cmp xor mov lea arpl inc push lret shll adc fcomp lock outsb mov jg les dec cmpsl lea out sbb jno ds mov inc in ret inc push (bad) xor adc and outsb stc das mov jmp test dec mov outsl out xchg mov (bad) inc cltd mov adc inc fwait mov data16 pop ret jno or loopne mov dec pop stos push xchg mov jle push decb stc pop andl fimull fisttpll jne bound cmpb pop sbb pop mov out sub mov in pop test fwait mov popa (bad) xor notl mov (bad) shlb xchg push lahf push push xchg sti mov fisubrl dec xchg mov dec xor inc mov xor lret fisttp mov xchg in inc aad mov out and mov mov addr16 shlb js mov insb lock mov mov sbb aam (bad) dec cmp xor arpl lea adc cld aad jns aaa mov cld and bound dec inc js in push cs mov jo sbb scas call pushf sti inc jb or jne push in push cmp mov es dec ffree jo mov aaa insb stos outsb sbb jg add cld mov push jl push bound xor dec mov cmp fldl sub dec mov mov cmp cs mov out mov imul pop dec mov ret test daa mov adc jns aad mov (bad) out test pop aaa loopne ljmp hlt or dec scas mov in sub outsl mov je adc stos mov cltd aaa push pop jle fild (bad) testb ss test ret roll in daa rclb mov into inc ja cltd pop dec clc sub pop sub xor or pop arpl inc test leave xor mov mov cwtl int cmp je mov jge pop xchg imull pop movsb outsl jecxz mov out sub mov int3 sub rcrb rcr in (bad) mov nop jle mov aam xor into sub es stc and movsl mov mov (bad) jae jo dec (bad) and popa inc pop stc xchg cli xchg test lods mov addr16 mov mov cmpsb rorb icebp bound mov mov cld push stc push daa imul push mov outsb push mov mov aam inc je lds fndisi(8087 push xchg mov push incl repnz in lods mov int3 xchg out (bad) gs xchg jne add in dec xlat cmc sub pop cmp loop jecxz sub (bad) pop in push push push or ss mov xor ds call cmp push outsb xchg jle and cmpsl ljmp das in dec xchg out psubsw mov cmpsb jmp les add std ss movsl addb out ret push mov out add outsl xor jns insb push out and ret fcompl es push les cli mov fwait daa jp loope insb push rcll leave dec stc jae mov lea sahf jmp test mov hlt pop (bad) (bad) inc dec test test sbb push in inc lds scas inc roll mov add lcall scas ja repnz aad inc (bad) pop sub aam data16 aaa jae mov jb je cli jne mov mov fidivrl sbb mov cmpl subl movsb jbe ja or mov arpl jo pushf lds xor clc sub ljmp mov ss jo (bad) rcl shlb into stos mov xor push adc fidivr sbb pop xor test and inc fcoms lcall push (bad) jno pop pop inc cmp mov les cwtl mov ss mov pop sub int dec dec mov int out add es gs mov xacquire mov test enter and rolb movsl inc xor mov lods scas cli test in clc int sub test or pop inc mov (bad) mov xor pop push rcrl dec (bad) dec adc inc fsubs les rol mov sub xchg fildll add les in cbtw push mov ja add hlt lahf push mov sarl lcall icebp push loope dec dec mov jbe jle test mov lock in lock das jno fldenv fldcw push mov xchg xor jg adc xchg aaa and addl jecxz into mov sub jp div sub in ret out ret mulb jecxz pop dec cmc mov and scas xor mov loop insl mov mov in fs mov ret xlat divl inc mov (bad) imul fucom adc das test pop fwait arpl add fcmovnb mov inc xchg (bad) sbb jns movl dec pop (bad) cld enter ret fmuls js pop adc mov (bad) adc sbb rolb xor mov add or adc mov arpl mov mov or sahf decl mov and add cmpsl in out xchg mov mov inc test fnstenv (bad) (bad) dec scas pop shrb (bad) mov ret mov (bad) int inc pop mov dec fidiv mov pop xorl mov out test les sbb loopne pop dec mov fisttpll outsl sbb lahf push popf das fcmovnb mov imul and pushf cwtl decb inc mov ljmp pop (bad) push push sbb gs or mov incb es loope (bad) adc mov scas arpl dec aas add jbe cld push push rorl pop inc mov add cmp and push or pop sbb push je (bad) and jbe ss sbb je add jno cwtl adc cmp jmp std inc xor in fstpl outsl into cltd fildll and add lahf test movsb scas mov cld adc xchg mov sub insl mov into mov lea sub in jmp xchg add pop mov imul into sti movsl cs popa xor sub shrl shll stc mov ja pop jl sub lret mov leave lret lds mov jecxz out ss imul cld xor xor or xor xor outsl int adc ljmp mov jp or push jp loop fdivrs aas push cmp out dec in pop mov cmc mov push int3 pop iret lea ja mov and and pop pop add push or popa inc cmp jae cwtl xchg add dec xchg cmp push imulb mov fildl pop and add loope sub in inc data16 cltd daa cmp (bad) mov mov or fidivl ja icebp imul pop stc andl cmp rorb jmp pop cmpsb jl lods push shld out (bad) fsubrl movsb sub mov das inc xchg cmpl test int3 inc cmpl mov hlt jnp,pt dec inc aas mov (bad) and mov shll add ret push mov xor inc and (bad) outsb lds test aad pop stos popf jb lea cli dec lods sti mov xor (bad) out leave das ret lods in jns movsb adc clc fs andb push cld or in jb jmp mov and xlat push jp int3 in pop cmp js std push lock inc cmp sub in imulb push das jbe stos mov test test xchg cmc xchg stos enter push push cmp lahf dec inc sahf test leave rcl les stos icebp sahf rcrl jne lret in add icebp (bad) push setl sbb xchg cmpsb in outsl movsb adc push lahf adc push arpl add cmc push scas push iret outsl xlat pop mov inc fsubrl (bad) into add dec dec in lods pusha fcomps jo inc jbe jo dec in sbb (bad) and mov (bad) fisttp xchg cli fidivl sbb sub fldt lcall add mov add jne xlat ss jne cmpsb ret push cltd or mov lds rorl (bad) outsb dec fcmovbe mov outsl pop imul mov add hlt out or push adc cmpsl mov pop jge popl sbb ja adc cmp mov pushf fistpll loop push dec adc mov lcall fwait and repnz daa test test adc (bad) outsb xlat jns adc mov loope daa daa jp dec aad jg outsb push jp inc inc movsl dec sbb outsb jmp pusha loope or cmp fdivrs jmp inc out test xrelease ds in or xchg mov (bad) insb test push pop fisttpl je clc mov (bad) aaa pop xchg movsb addb or in xchg shrb add subw push in mov clc mov ret ret push dec pop jge ret ja out repz nop (bad) and mov dec clc in mov inc jg adc ja cmp dec mov xor stos adc leave sbb stos js or insl icebp pusha adc pop dec jb test je inc jno or int shrb lret rcrb sahf in mov xchg cmp adc mov mov arpl dec loopne out cmp sbb cli jle loopne inc pushf int (bad) cmpb movsb rclb test (bad) ret mov jnp adc push (bad) (bad) (bad) idivl outsl fildl test rcrl xor jmp cmp xchg adc push adc xor mov cmp add adc das fscale test cmovp mov mov mov and add lds pop jmp mov hlt adc test int cli mov pop icebp (bad) mov ss mov hlt or and lcall or cmpsl lods xchg cmp jle ss xchg rorl test lahf cs cmp mov jmp ds jo mov push push pop jbe or push mov inc jo sbbl scas pushf in fnsave xchg pop xchg xor lea hlt mov xchg sub fsubrl jmp sub rol or jnp mov sub mov (bad) pop dec cli inc push mov xor repnz mov xlat lretw rol cmp mov mov pop push lea and jnp test in adc pop lret data16 jno loope and sbbb xchg loop data16 mov test mov testl stos dec mov lock mov and out and pop stc and jle xchg mov scas movsb add xor jp pop enter xchg repnz sbb fwait movsl icebp jecxz or jae dec fbld subl inc inc push rorl push jbe jge or call mov lds jo in push nop xchg sub aad jle xchg dec xor pop (bad) jmp adc and or xchg rcrb gs subb insl pop add negl fisub cwtl test insb xchg (bad) mov pop inc sub pop dec loope jl mov cmpsl call ljmp icebp jae dec fxch pop mov imul lcall in ss movsl fisttpl aaa insl mov mov iret cli push adc (bad) int test fnstenv jp mov aam push ja xchg aaa push sahf mov jno pop decl or xchg mov mov adc push dec xlat sub pop xchg inc xor cwtl jecxz (bad) adc stos mov pop sub sbb xlat mov xorl mov test xor (bad) mov sahf mov sbb data16 int3 je fildll lahf scas jecxz xchg (bad) sahf imulb xchg inc mov rcrl scas clc in ja xor mov xchg pusha outsb inc xchg jns cmpsb mov xchg aam das xchg or mov sub lods fnstsw stc lods daa ds lea inc or lret iret inc mov sub mov out cs and mov mov mov cli sub int fldl mov mov sbb popa xor scas dec pop pop xlat fisttpl push dec (bad) arpl mov inc ret pop xor xchg mov pop js test adc mov fcomp mov sbb mov imul (bad) insl out into push adc negb mov sbb sub in clc enter push sbb test sub push mov dec test mov outsb pop sbb js dec mov jae pop mov adc xor mov rorb fucomi cmpsb (bad) sub popl cmp lock mov xchg mov xor add mov mov or pop xor jnp xchg int3 mov (bad) clc bswap dec shll test dec loop mov mov push or std mov mov jl push ljmp jbe dec data16 xchg stc mov or xchg xor pusha hlt xchg cmp (bad) (bad) lret sub in iret negb add jae jmp xor xchg xor lret jno sub outsl xchg ljmp dec jecxz push adc orps repnz cmp out dec sbb lcall ss int mov rcl pop push add (bad) ficoml scas loope aas xchg xor mov fs mov ss sahf jnp pop fbstp mov cmp jmp fisttpll in stos cwtl push fstl jo imul in movsl mov jecxz jl cmpsb mov xorl repnz jno push rolb mov test xchg add lods jns jno je lret ja push aam or sbb pop insb icebp mov data16 jge and mov daa (bad) mov andl and mov rcl ljmp daa mov imul sbb jno fisttpll mov lcall in ljmp jecxz cwtl test (bad) sbb pop out xchg dec negl sbb cli ja jmp (bad) in sahf push hlt test xchg or push insb stc cmp jmp int imul xor sbb (bad) in add mov lcall pop (bad) repnz imul xor fisttpll popa xchg aas mov sbb pop scas shll push stos push js jbe mov xchg and mov sub fistl aad push dec sbbl das and mov mov inc pop mov bound daa popf leave jo lea pusha pop loopne test adc lret rcrb adc add and jns jne jbe lret push mov add inc std jbe in and dec pop cli std stos mov (bad) daa ja fmuls pop movsb mov fisubr sbb mov int push in push in inc sbb jne push or push cmpsl mov lock cmp push jl enter aaa ja adc push mov (bad) fmulp add xchg adc cli fistpl xchg lret stos mov push mov mov pop test sahf out sub push bound push mov and xchg (bad) cmp dec cmp dec cmpsl pop jp adc add sar outsb stos lods scas aad cld into std dec in push xor and or mov insl cs in stc or outsb jae lods repnz mov and cmc dec xchg fcoms outsb int andl test rolb xchg add xchg inc outsl cmp push mov scas dec popf add testl nop sub or pop or mov bound in mov cltd jle jno decb jmp lds dec mov sbb aas mov enter loop in xchg dec js sub cld shrb sbb enter lahf (bad) (bad) push out sbb loop add sub (bad) or aaa inc lret and mov das pop cmp xchg inc mov inc mov arpl mov pop pop aad (bad) in adc lock outsb in (bad) mov test nop jp dec push jmp in pop sahf iret inc sbb dec cmp mov cs mov push and mov push lret hlt sti push outsb add or xchg and in mov aad cld test faddl loopne mov cmpsl xchg mov and push lret in and jnp lds push data16 xchg mov cltd add ljmp cmp lods adc in mov cs xor ss mov add mov fist cmp das mov cmp sar jmp mov icebp push frstor out cmc or add loope or pop rcrl pop nop lea dec xor rorb xor fsts test fdivrp lret pop jle int3 adc scas mov shr push mov lret cwtl hlt ljmp mov nop sub movsl mov imul cmp pop imul push out mov std pop mov dec sbb in in adc outsl mov xchg int3 lea shrb cwtl pop faddp arpl pop lret sub dec dec xor mov mov add inc jp mov mov xchg cmp and jns sbbb ficoml push xchg lea cmc xchg cltd jecxz fldcw popa mov les int and mov out cwtl sbb mov mov hlt xchg push mov mov in xchg or or sbb cli push mov faddp sbb orb cmp push mov mov xor and push int xchg adc and adc imul mov xchg mov leave mov jp cli sbb nop mov dec push test cmp sbb mov pop jle jg aad mov mov aas add mov imul mov test fcoms push je inc dec popf andb push mov sbb mov leave sub stos (bad) push pushf mov (bad) lock fist jb mov gs ficom mov std pop cmp mov loop je fidivl jg mov outsb jecxz fildll test cli mov xchg icebp iret in jne (bad) mov pop lds adc inc jmp pop imul xchg sti sbb push sub mov (bad) bound lahf scas (bad) ja lret in scas add lds pop into mov jp data16 shll movsl push in sti xor mov sub rorb sahf xor and fsubrl lea dec inc or rorl imull (bad) mulb jmp aad jne mov in movsl cmova adc aaa sub pop sbb mov aad jne mov stos insb jp push or outsb adc lds inc les sbb push js jmp pop sbb outsb jle sbb fldt push and xor dec (bad) outsl xor stos inc in fucomi push and sarb je jl push mov cwtl in outsl mov xchg cmp inc and add jecxz cmpsl xchg lds int3 in enter ss jns and ja ret inc cmp imul jp xor lret lea nop mov lods dec mov jecxz push jae or ss sbb fiadd bound leave push arpl add jnp mov mov push xchg adc push push xlat jo mov or movsb les mov sub fnstenv sub in fcompl pop inc (bad) jae ss pop fld mov aad ret mov bound mov sub jbe jb stc mov jo mov cmp dec mov inc mov fild xchg jle cmp mov inc call insl xchg push or icebp and dec pop data16 stos mov adc outsb mov push es add loop scas clc rclb push mov sbb push lods pop aas cmp jno dec xor inc sarl fisttp stc in cltd sbb imul adcb mov adc pop xchg les inc xchg fdivrs xlat addr16 idivl js mov sti in aam xchg loope pop cmp push fistpll xchg cmpsb cmpsl xchg mov orb jp dec xchg add stc xchg pop pop popf subl mov call aam std xchg movsl mov out stc or jns ret (bad) adc dec and jo stos sub sti mov mov sub push mov jo loop or fldt mov icebp jb xchg xor mov mov push out lods in cmpsl mov mov data16 mov int xchg hlt sbb mov mov cmp sti push mov je int mulb sbb xchg pop popf inc mov mov mov aas imul adc mov ret xchg lahf pop push out mov mov inc ss mov jle movsl neg rclb (bad) int and scas std push fadd fisubr test adc insl aad xchg mov adc ljmp adc mov push scas pop (bad) mov lods mov jmp lods pushf icebp mov dec jge or shrb fldenv (bad) jns dec xchg mov subl std mov loop push pop pusha lods jmp nop lods (bad) mov lcall mov dec xchg push mov dec shr sub pop imul xor jae insb adc mov in shrb (bad) cwtl mov sub add mov sahf scas movsb fimull xchg xor dec pop mov out ljmp in adc inc aaa sbb pop add test bound popa jmp and xchg popl lods mov ret inc inc mov jmp mov insl outsl js dec mov adc add popa cwtl out loope mov jo mov rcl mov sub mov pop dec jl data16 cld insl cmp mov and jb mov idivb push pop jns sahf cmc and pop sbb mov mov stc dec int3 pcmpgtb pop xchg orl add iret fnstenv mov jb xlat pop (bad) test mov into shll push test push addl mov or mov mov insl in xchg out cmp stos push aaa jnp push add sarb mov mov inc push mov push jno out push cwtl mov jl les out adc addr16 int add jle (bad) jmp sub dec and idivl pop and fs out mov xor int (bad) insl ds rcll adc inc stc pop mov or cmpl pop mov mov sub out out jl mov adc sub lcall dec ja sub mov movsb sub mov test cwtl test test lcall xorb adc or lock stos cmp fwait ret std mov aad push mov stos (bad) lret adc out mov push cli insl loop repnz adcb xchg push fildl in jle lret cmp pop mov popa mov adc dec mov lds mov cld fldl cmp adc dec negl mov push add (bad) push or adc mov add mov jle xchg lds test test or fistl add roll xor dec jg shrb or dec mov lods push repz in xor push mov or mov jbe in (bad) loop test sbb push and fdivl mov insb or pop fild inc mov lods int mov sbb out and lret iret jb add test cmpsl test jle aaa adc (bad) cmpsb js dec or cmp ja lea (bad) sbb rcrb push in sti push adc mov shl xchg lock (bad) ljmp sahf xchg xchg cmp fsubr pop (bad) mov ss mov pop lahf jnp sbb mov testl js mov pop decl cli cmp mov ja (bad) fcmovnb xchg xor sbb out push test stos aas jno mov sbb mov mov push pop mov cmp and fsubrs jecxz sub repz mov repnz jle aam dec (bad) loopne xchg stos push xchg dec push out mov lods inc adc sub data16 in push insl in pop xchg fdivs sub xor in xor idivb aaa pop cld cmpsl call jle push fbld popf sbb (bad) imull mov sahf pop notl cmc xchg push adc popa movb xor add push (bad) add inc or adc test lahf loop mov rol xlat outsl inc dec test in ljmp comiss mov loope enter and fdivs push inc dec mov daa mov stos xor lock fiadd cltd jg sbb mov and ret fimull (bad) cmp lods push mov mov cmc insl andl or inc jmp fcmovb pop xor mov dec pushf mov mov push mov rcrl incl add rcr pop mov pop jae mov cmpsl mov pop jg (bad) leave push rolb inc dec pop sub push or fcoms mov jp adc fdivr cmp out ss test adc sub mov sarl sub mov je xor inc divb cmpsb inc push rorl jnp iret ds push push add xor repnz les jns in adc push loope out test imul popf in xor jo xchg iret (bad) (bad) jo scas and lock xchg sbb popfw sub pop xor cmp push ret jle fisttpll pop mov xchg dec sbb lret mov std dec dec mov int mov xor orb cwtl cltd ret mov jle fimul out push aam call jg bound mov lahf mov std mov fs and cld in nop jle mov mov or (bad) loope mov pop jp cmc prefetchw pushf sbb sahf mov loop mov inc cs add cmp mov push lret popf in push inc pop enter jg stos addr16 mov xchg dec dec mov movsl mov fsub inc inc in stos adc jb or cmc lods mov push nop xor mov popl dec mov mov lds add add or sbb add sub scas pushf insb sbb mov test dec jmp dec inc call pusha mov leave scas std test divl cmp mov push mov jns mov mov call outsb xchg aas pop mov sbb mov push dec inc mov les cmp mov das add icebp mov mov stos lods stc jae dec (bad) shr mov or push jno (bad) fmull adc pop lcall pop lret push and std or icebp pusha mov gs inc push dec inc jmp stos imul dec pop scas aaa jle xchg mov push icebp cmc mov inc jle aad repnz push xor pop push inc cmp sub push add cmp push sub in xchg and (bad) jle dec sti cmp sarl add cmp les dec scas inc cmp mov mov fiadd icebp fdivrl icebp cltd mov leave cmpsl imulb jbe rcll push push mov subl sub lret sub mov mov nop jmp xchg testb cmp insb adc xlat lret loopne push dec sub xchg mov daa outsb mov inc mov mov fprem1 cmp out or test cmp xchg and dec sbb (bad) aas and les xchg (bad) mov inc mov das icebp outsb mov loop dec scas push mov icebp in int scas jno push pop mov scas daa pop (bad) movsb scas (bad) icebp dec mov inc mov scas jb mov hlt mov aaa push aaa xchg mov push fmull movsl insb jmp icebp pushf (bad) mov test sbb dec outsb loope mov mov popf mov (bad) cmp mov scas nop push mov cmp iret cmc mov outsl xchg xlat or jb cwtl (bad) and mov add push xor sti pop ss cltd aad mov rorb inc cmp push mov cmp mov scas dec mov fstps insb sbb pop mov adc lods stos nop xor mov pop xchg sbb iret inc inc push insb imul ljmp movsb xchg idivl lods mov xorl es mov push es xchg jmp xchg xor out jo add jge mov rcrl in das rclb mov or lds fwait pop mov xor out fisttpl (bad) (bad) sub mov cld incl cmp or sahf out sbb mov sbb shr mov mov lds js push les xchg test in mov int imul mov inc dec imul cmp lea jmp add ja xor inc inc test cmp jno ror test mov test push sub out mov fldenv inc mov pop jl push mov dec gs dec int3 out out or xchg pop mov adc mov fwait xchg and cmp lock leave sub out xor fimul (bad) pop mov addl xor xchg cmp fmuls (bad) sbb ret jge sbb (bad) sub aad push ret out inc mov add xor inc xchg or std inc std sbb xorl mov mov sub sbb mov mov leave xor fsubrs inc mov in (bad) mov inc imul popa loop aam push aad movsl mov jle mov sub mov or adcb push jmp outsb mov jle out xchg sub popa rcrl scas mov sbb icebp and (bad) cmp clc loop sbb lea stc (bad) inc out xchg ret add int mov mov std aaa ja inc push movsb nop inc rcrl out iret lea (bad) negl ljmp inc cmp xor mov mov outsb out mov out enter jecxz pop scas test mov dec inc (bad) xchg in add inc jmp out jg in mov xchg mov ds inc cmp jecxz sbb repz mov stos hlt inc adc or jmp fwait mov (bad) negb xlat jb mov sbb negl push and xor xchg inc pop xchg iret xchg inc repz xor pop mov pop sbb movsb scas inc enter mov dec xor mov xchg les dec bound mov inc xor and cmp aad mov mov jbe push xor mov shll or xchg inc mov in repz push mov xor mov xor cmpsl mov ret and mov mov mov flds xchg jae cltd cmpsl adc out mov mov dec xchg jmp cwtl lods mov shll xchg xchg mov jb iret sbb sub call lods scas (bad) xor lea xchg inc pop out out xchg pop dec test clc dec dec (bad) mov std stc inc sbb nop jecxz shr or pushf sbb xchg lea inc (bad) add xor cltd dec lds mov pop out scas cmp xlat pop mov push sbb jp or dec fwait (bad) mul ds mov lret in popa mov cmc mov jno mov mov lea sarb popf and pop in flds add mov mov add in xor jb or test cmp cmpl outsb sbb xchg and cmpsb test mov ljmp push sbb sti int3 mov push cltd inc dec inc dec jb or xor addr16 xlat cmpsb out into mov mov dec adc repz out mov xor adc jge out cmp int aas push (bad) mov lahf sbb xor aaa lods mov mov inc imul bound loop in aad mov scas mov rorb js (bad) out xchg xchg idiv out mov adc out sarb mov in sbb push call into xchg jb test outsl lock cmp fdivrs clc loope lds fisttp test inc cmp dec daa push mov lret mov lods mov rcrl inc inc xor mov push fstpt (bad) cmp mov cmp push lock mov sub pop (bad) push adc xor out xchg lock or hlt mov inc push scas out popf jno orl mov pop cs pop dec pop clc xchg mov mov pusha nop pushf push dec mov mov cmp sbb jne jge xchg xor xchg xor mov insl lock daa outsb xor ljmp push hlt test mov test sbb xchg ret mov lea int stc cmp call jne movzbw push pusha mov pusha push movb lea jmp cmp pop jns jne fsubrl iret int ja pop es inc aaa paddusw mov and mov dec jo int pop inc sbb adc icebp sbb mov push cmp mov pop aas pop adc xchg pop jge (bad) mov inc (bad) bnd inc out push fwait mov mov das sbb adc pop es xor or in out xchg jle sbb sbb xchg push dec in jecxz scas jmp dec sub loopne xor mov xchg mov xchg mov mov outsl sub out negb add jle xchg pop je pusha movsbw mov push pushf mov pushl ret ljmp mov or inc aas or lret enter test rorb lretw sub dec test inc loope in xchg das (bad) stos outsb inc or lret mov push clc pop xchg push xchg lods test or mov push iret mov cltd insb dec cmpsb cmp xchg aas sbb ret add shrb inc mov jle mov imul push ss mov xchg pop hlt sub shlb outsl inc fcoms add pusha call add add stc jmp mov out jne sbb inc dec lock imul shlb clc scas insb shrb jno sti scas cmp in test mov in sub push adc iret dec adc ret and pop (bad) lcall test or pop and hlt jp inc push mov lods scas (bad) mov xor loope dec into imul aam insb push inc enter mov jns inc xchg pusha gs repz hlt push sar aam mov fnstsw ljmp fiaddl js jecxz mov xor sub fisttpl in (bad) jle fildl mov xor das adc aaa movsl lcall hlt jne pop and lret mov shrl out and mov fwait push cmp push in push shl imulb stos xchg jb fwait xor ja popf jns sub adc push lds mov jmp or (bad) jle add nop mov xchg mov lock lret adc push rcll cli adc fildl test es out add push sub inc pushf push dec jg cmp dec fist (bad) jmp into shl sbb jb cwtl outsl aas jo jl xor (bad) out rclb cmp das or inc and jne sub lahf js adc (bad) jnp sti aad scas pushf mov push dec cld lcall pop push jne in fldt xor mov out (bad) xchg je or mov and jmp jmp xchg shl scas push ljmp lcall mov pop push shrb dec pop lods add mulb mov jmp sbb push mov xor cli cmpsb inc aaa cmc mov jno dec jle lds mov push or setnp ja xchg (bad) xchg bound sub xchg lea jmp lea push push movl pusha mov movb pushf movb mov pushl ret push call int int mov or test in mov cmpsl jb or pushf movsb sbb push icebp xlat pop add imul and or test clc or fmull push mov push cmpb (bad) cmp mov lods ret pop loop xchg inc ret ds adc push mov xchg test adc mov xchg repnz lods sbb (bad) push iret adc nop mov inc in hlt call popf test xchg mov cmp clc add pop sub imul fidiv ja (bad) dec or add test int sarb test data16 lea jmp inc out in and cwtl jb and (bad) mov das clc adc fnstcw fidivr loopew faddp loopne and rolb xchg mov sarl dec in gs cmp push sbb (bad) mov imul testb cs push fldcw outsl xor mov xor mov mov xchg icebp jne les aaa jmp cmp push and mov inc fs mov out sub enter leave mov (bad) stos pusha cmp lds cli xchg push sbb mov xchg xchg pusha mov adc pusha (bad) pop and mov jg sti push (bad) stc fwait mov jmp popl punpcklwd adc sbb mov xchg push ds bound add int jp imul mov mov sti pushf ss mov shl ror mov cmc stc cmp pushf pushf movb lea jb call aas adc out icebp jne data16 fdivrs outsb cmp stos jae in mov in cmpsl xchg pop xchg sarb push cmp in sbb jge sti lret pop lret (bad) loop arpl xor mov mov ds add fcoml pop and es mov or cwtl cs (bad) push mov jns out lds addb mov push div cmp pushaw or inc sub fwait mov hlt loopne fist fdivr stos loop inc adc mov cmp push roll shlb jp xor xlat jno (bad) mov dec cld add add mov insb mov jg cmp cltd push mov xor mov xchg sti jmp cli test icebp jne sbb sbb push stc cltd push (bad) int3 test (bad) bound movsb cltd sub inc inc sbb lret lret pop out in push inc add lcall repz and fcoms outsb scas sbbb hlt outsl xchg jge xchg cmpsb push cmp cld test cli outsl dec out insl std mov jle xchg lcall (bad) xchg ficom addr16 (bad) xchg lds adc adc jg in and popa mov push pusha pop xor (bad) call in and es push sub insb shll add push push call push test sub jne sub sbb orb fsubs shll loope dec mov jmp inc imul bound jne mov stos dec out xchg sbb ret daa inc mov jnp sbb loop push repz mov imul dec cmc (bad) loop pop sub sbb cwtl sbbl pop mov adc pop jb in mov data16 push or stos jnp data16 fildl mov test pop lock sbb jns lcall push sub jmp mov call arpl movsb pusha and lret push test ret lea sbb adc cwtl out jno in mov scas mov rolb jmp (bad) push loop imul aaa (bad) mulb sub pop sbbl xor jp fstl jb out mov cmp aad (bad) aas push dec into leave push sbb outsl jmp scas sarb test inc incb jmp mov (bad) mov mov push cwtl jb xchg mov js cmpsl gs and sbb add loopne pop fdiv push xor movb lea call call mov push mov leave jne jmp jne add fstl into xchg jbe inc add mov jmp jmp jno or sti jo lcall xchg pop sahf sbb dec jp and pop jnp dec push dec and xchg popf mov mov loop inc sub push (bad) (bad) (bad) (bad) xor loop repz out or arpl sbb adc mov gs xor mov (bad) clc push adc mov leave lds in xor fnstsw and cld xlat inc sub adc loope sub movsl mov inc and sbb test add push lea jmp jl adc in jne pop mov fcom cltd jle sti xchg xchg gs aas jmp mov (bad) sarb sub imul insl xchg pusha cmp pop pop inc insb dec adc pushf outsb pop fldt and cmpsb (bad) xchg xchg lea (bad) in cli test xor inc mov mov sub pop out pop xchg jg nop mov and add sub mov mov mov or in jbe xor mov and (bad) fwait adc or mov test ret xor ret cwtl mov add fisubl ja fcoms ret pusha pushl lea je pusha push pushf jmp lea jb cmc stc pusha jmp jns mov add loop jns std lret mov in pop jns dec add cmpsl jp out jo adc outsb scas sbb repz jp aas jnp push add xor sub imul or jae cmp or mov or pushf fisub cli mov and mov or rclb pushl or jb sbb mov repnz jbe xchg in imul xchg pop push xchg movsl (bad) (bad) stc addr16 inc dec gs adc mov test pop or jne dec or lcall inc pop repnz imul push jg push cs ret addl imul jbe divb sbb mov push xor sub pusha fisubrl into add jne out clc adc out insl cmp cwtl or xor xchg sbbb ds cmpsl out (bad) mov sub cmp fmuls lods cmpsb and mov jecxz pushf cmp ja cmp aaa jecxz outsb sbb leave push push popf pop dec pop jge scas ret (bad) fdivr jns push shrl js fistpll cmp je cs lahf call jne mov loop mov leave test dec push sub mov or lods sarl inc jmp inc cmp and lret fmuls pop icebp stc mov ds icebp movsb sub xchg push cmp adc ficom cmpsl les fnsave int3 pop add push and pop jmp and out jmp jp adc sarl jne pop std (bad) fs or in jp jnp out mov cli push fcoms movsb push ja arpl push mov mov loopne or loop lahf enter mov outsl dec in adc sbb mov inc xor fs inc (bad) int3 mov ret outsb sarl out enter aaa pop popf in scas repnz jbe sub mov push outsb xor pop repnz push mov das mov rcrb and jae cmc cmc call shll jmp push and mov jno push adc mov lret mov (bad) xlat popf imul (bad) sub mov dec xchg lea jecxz das inc and (bad) cmp dec jno in int3 xchg add jno inc fsubrl add imul cmc add (bad) in xchg cltd shll fisttp and inc ret jl test adc and movsb test ds aaa and xchg bt sub push not movb neg pushf mov ror jmp call pusha rcr btc btc mov jmp shrd rol jmp ror mov movzbw adc mov ror mov xadd mov pusha shl mov xchg mov pop bsr mov cmc or movw push call clc not bt pusha rol cld cmc cld pushw popfw call bound mov scas addb stos bound sti scas je add jl xchg push testb xchg push stc mov mov clc (bad) je out jg cmp and shll sub cmp insl xchg mov mov lods (bad) or pop mov les ja sbb jecxz sub hlt xchg into xchg inc stos imul lahf js clc (bad) mov es pop mov pop mov xor leave push mov das je or xlat lea jl das pop lock push xor dec adc push jnp loop imul bound movsb jle arpl and stos lods stos loope mov rorb out sbb cmpsl xor push mov ja insl in gs out int sbb fisubl pop cld adcb xchg js adc scas adc fcmovnb les fyl2x lret int cli or stos dec dec aas and popf inc outsl cltd call mov in mov dec push inc mov je daa mov jmp push test int fst mov xor mov int3 leave mov (bad) lret lret pop andb pop lret (bad) and sub (bad) mov fs stos lret test pop jae push sub xor div addr16 cltd xchg pop ficomp lock test add aaa xlat addr16 out int imul inc leave fsubrl mov mov call jge call cld mov adc in les jmp cmp lcall sub stos loope stc pop and iret sub jae jnp lea stos jge shrb cmp xor (bad) dec jnp sbb mov jp push ror pusha leave jg inc xor subl push rep push xor jbe lret mov mov pop aaa repz (bad) mov aaa ficompl pop fldenv or sti jae scas and aas in sbb movl jmp movw movl mov pusha movb pushl popl push mov movb push pushl ret jmp sub fwait and jne fild pop std ret adc sarl adc cmpsl imul je ret add sbb scas sahf jle xor (bad) lock scas inc xor mov dec lock sbb outsl or in sahf jbe mov cmp or mov scas sbb cmp popf cmp imul jbe cltd mov push int sarb jne (bad) (bad) mov jno mov or sbb ljmp sub lret push (bad) push addr16 sti xor inc pop dec dec adc push imul sub mov push lods mov pop out (bad) push das loope popa es and xchg mov xchg in xchg test pusha or fwait xor mov call push mov cmp mov mov push ja imul inc in or sub in cmovl jb push out test pushf adc (bad) fs sub bound push or push jge out dec jbe cli fmuls mov scas and ds in cmpsl sub mov gs bound outsl neg fwait sub pop fs mov mov xchg imul cmp (bad) imul jg push jp add sbb leave push push xor movsl test mov push lea push pusha pushl call mov rep movzbw mov pusha pushf lea jmp (bad) dec push or add shrb (bad) repnz fdivs int jnp inc gs ret fstl cmpsl jne aaa sbb lock nop popf sub mov sub shlb xchg stos imul adcl lahf (bad) dec or xor out push test pusha push mov add mov pop decb fs and sti mov into pop das add inc into lea je push adc pushf lea jmp lods bt pushl mov pushf ror add jge cmc sub call movl pusha pushf lea jmp loop push insb loop int clc (bad) (bad) mov adc outsb sub mov in xchg outsb cmp push les mov and (bad) cltd dec sub inc xchg ljmp and cmpsl sti push cmp out and (bad) pusha mov (bad) adc stc cmp push test cmpsl mov dec in xor add cmpl flds xor out jno jbe out pop mov (bad) dec lahf xchg cmp mov xor dec (bad) dec push adc popf push hlt mov mov ret incb outsl jne mov aaa ret arpl mov scas and dec adc jle sti jne mov push imul js cmp mov inc cwtl andl scas nop jo rcrl rol pop inc pop out adc stos es sub push fstpl (bad) mov add icebp pop out dec cs and cmp mov sbb hlt cli mov icebp pop rcll mov cmp sub push cmp loop repnz jno fwait adc test push pop sti imul insb jbe ljmp mov xchg repnz jmp sub xchg pop adc jno push scas push cmp and add int ret xchg ja or jge inc cmp adc mov shr mov lock lds scas (bad) lods cld insl icebp add pop test imul enter into inc enter pusha push sub cmpsl aas pop and jl int3 scas (bad) xor mov pop aad dec (bad) test pop push fcompl f2xm1 and cmc xchg addr16 cmp pop (bad) lock add gs or xchg imul push bt add movb lea jmp push pusha movl pushf push movl pushf lea jmp cmp lcall jnp pop xor pushf jbe stc stos ret push dec sub popf cmp pop outsb mov into sar lahf and push sbb movsb outsb push inc push ljmp pop mov out data16 movsb into mov dec xor xchg sar dec mov add imul xor mov js sub add and jle loopne aas sbb xchg pop mov (bad) ja jp popl jno cltd mov and les lret mov nop out movsl jno xrelease fs gs jae push push stos dec jo arpl pop jae loopw sub les fist in jb repz das stc push cli push mov mov jne mov xchg push test (bad) pop mov popf jg pop aaa xchg mov out mov push mov jb ja test or fidiv or mov inc test ja dec cmp fnstenv outsb mov sarl gs add inc mov insb or xor fidivr lods xchg movsb dec xlat addr16 xchg add fildl test sub outsl cmp repnz scas dec sbb fs jg (bad) mov mov imull je imul test cmc pusha je outsb (bad) in je daa push and mov jmp add loope loopew (bad) jb dec iret or mov push out sbb popa fmull imul aaa jmp add push fidivr cwtl dec out sbb mov push pushfw int ret cltd call outsl pusha out sbb aaa xchg gs or pop addr16 pop nop push dec mov repnz bnd pop in push aas mov lock shrl mov fild je iret mov add in pop call ljmp sbb cli (bad) jb repz in pop pushl mov (bad) loop iret mov push cmpsb mov lahf ljmp (bad) repz or dec scas test int icebp push daa mov or add jg dec je cmpl aas mov std loopne test pop xchg mov sub jne fnstsw add fcomp mov or roll adc repz dec sbb in push sbb xor mov adc and mov cmp ja xchg (bad) repnz in in pop mov cld nop aad push mov lods loope and cmpsb imul inc sbb movsb les sbb (bad) pop inc cmp push push (bad) scas lock out dec adc imul outsb and jecxz (bad) fildll lea push incb push and addb leave test pushf mov push sbb xor push xor in push fmul xor out cmp call fldcw int lods xchg xchg call sub test mov sub mov pusha mov push out cltd mov inc xor jno pop (bad) inc sbb test dec xor inc dec hlt pop out daa pop repnz lock adc popa faddl aam push xor xchg divb clc xchg push inc test pop js adc sbbb or add pusha cmp fdivl les call stos js ss stos pop and aad (bad) add cmp (bad) dec out aad push adc cmp or shrl or xchg sti int stc push and xchg jp mov mov je out ds jb mov sub outsl mov pop insb test daa xchg and pop icebp fnop mov mov pop int3 xchg pusha xchg rclb mov pop push aam mov aaa pop cmp mov xor push jne aad xchg mov mov sub mov aas or xchg rolb mov push dec sbb push lcall loop adc lods mov add push gs outsb fs inc imul je mov sar shrd mov bswap dec add shrd mov jmp lea ja jp pusha lea jb call cltd imul out pusha dec mov dec add in test fstp scas movsb ds gs lret adc xor mov dec pop sbb push xor mov arpl xchg jns mov loope lcall lds orb je inc sbb and outsl cmpsl jae xor jl push cmp (bad) repz jg xor dec out int3 (bad) jp ret lods popa sub rcrb popa push cmp std mov stos xlat cwtl lods scas movsl leave xchg test in stos (bad) in sbb sbb mov push adc mov fidivl lock jne clc ret push mov mov pop dec (bad) add mov jp jg push ret mov cmpsb ret dec pushf push push sub jmp aaa repnz jg jns jne cvtdq2ps hlt dec and test add ja outsb cmp jae pop push mov mov push daa mov gs dec push xor aas cmp (bad) sbb xlat test dec push xor (bad) mov dec popa jb stos fstl mov xchg frstor (bad) pop push aam sahf lret cmp rclb add mov pop push call scas push lea jae jmp mov lea ja ror inc pusha inc sub bsr pusha add add jmp lea call call movl pusha pusha push movl pushf mov push movb lea jmp xchg arpl jne imulb in fdivs popf gs mov xor jecxz mov or ljmp hlt leave push dec (bad) jmp es pop (bad) dec cltd lods add inc je subl fdivp push inc push cmc aaa xchg ds in movb js fwait adc adc or fsubp in jo mov loope mov arpl mov call stc movb mov ror clc sub pushl stc not clc neg clc pusha cmc lea jg ror cmc call mov ror cmp stc sbb add xor test shr pushf mov pusha bt test test pushf mov jmp lea jle push lea jae cmc clc cmp call pusha call cmpb pushf lea jne adc shl rcr adc xor sub rcl lahf mov push jmp lret je jne mov mov mov sub mov xchg aas in mov and (bad) scas lahf xchg jns out call add adc xor jnp aas mov (bad) (bad) rcr mov bound subb shr pop loope test les mov mov outsb xlat push in out jo aaa or inc xchg jl ds jae hlt (bad) xchg or mov lds xchg mov bswap lea mov cli mov dec mov imul insb sub (bad) mov pop (bad) pop push leave in push ja cmp test xor cmp pop push add mov push sub jne das add test ffree xchg je jmp (bad) mov cmp sub inc add lods popf fisubrl xor ljmp aas jae fimul pop jmp ss cmpsl cmp lea mov jg stos mov cmp shrb and sub les lods stc jp test sbb je sbbl pushf jb aad (bad) imul rcrl mov xor jmp dec inc not pusha inc pushf sbb dec xchg cmp daa xadd ror mov adc cmc rcr mov pushl stc clc xchg mov mov jmp js sbb int or (bad) test dec arpl sbb mov sahf jbe sbb cmp lea xchg dec add rolb or mov mov je or cmpsb clc push pusha push jg pop adc loope fnstcw mov lods data16 (bad) mov pop jg inc inc (bad) inc clc push sbb mov (bad) movsb mov push dec mov mov and test lock insb out xchg sbb xor dec arpl cmpsl sbb scas fisttpll pop jmp lds xor lods shrl cmp in jmp sub std adc rolb jmp inc fildll ss adc hlt stc stc pushf ror pusha pusha movw not jmp outsb sbb (bad) jne int3 aaa icebp int3 sahf mov sti ret xchg jns push xor and mov das adc xchg aam shl lret adc jno or daa cmp push mov xor sbb frstor mov aam inc cli cs mov dec jb xchg test stc pop cmc dec ljmp push imul xchg push xchg hlt adc pop loop or xchg cli sbbl into jnp inc inc and xor adc adc cmp jp lods (bad) out rep movsbw pushf movsbw mov movw movb mov lea jmp sub push adc jne repnz jne das pop adc and movsb imul jne lcall cmpsb jo mov push sub (bad) repz mov in (bad) pop or out push adc cmp jbe sub push rclb frstor sbb sbb rcrl push jne jb add ficomp jae mov lods lods mov cmp mov add enter (bad) mov adc dec sbb (bad) hlt xchg pop ret adc jmp jle xor ret leave insb mov inc jo xchg jae push push sbb and loope adc iret notl cwtl sahf add movnti (bad) jne jbe aad outsl dec clc stos jb or lock mov movsb outsb push and mov sarb es icebp int xchg xchg jbe push insl cmp into pushf js and js sbb leave lret inc jno in aad pop xor dec lcall in jmp jecxz dec add es dec je push sbb lret adc addl adc rclb or test mov sbb insb mov mov mov fwait pop xor (bad) add pushf lea ja call fistpll int (bad) mov cs mov push lret cltd jnp sti stos data16 call aaa out sub cli enter xchg inc jne fstpl jne dec into mov add lret mov dec mov aad inc fcompl jo adc nop es xor jp fstps adc mov xlat lods popa and mov mov xor mov adc dec std (bad) xchg mov push cmpsb mull in add and adc es cmc sbb call lcall cwtl push adc push add into movl jmp mov lea call add dec jae inc gs outsl outsl outsb push gs imul add mov dec rol mov lea call call int3 popf pusha pusha pushf jmp cmp lea jae push mov lea jbe xor shl shrd sub pusha inc bsf inc mov lea xchg call jmp jmp and add sub call pop clc jbe (bad) jne push js cmp rorb push mov cmp scas fs mov push xor test sbb aad into xchg inc dec daa jb test imul aas bound sti sarb jb xchg mov mov call and xchg adc shl aam fcoms aad cltd stos push shl dec mov xchg aam in pop fsubrp and in aaa jecxz cmpsb mov xor das adc push jo push (bad) ds movsl sub stos jne dec call call jne adc sub dec push pand (bad) mov into mov aas inc and mov xchg ret xor xlat jecxz inc cs sbb xor adc add out cwtl mov fbstp out inc jno ret push add sub jmp dec aam mov mov pop hlt push xchg add pusha sub xchg sbb lcall (bad) stos mov out add xor cltd inc sbb fidivrl sub jb int jo and push sub sbb out stc ss js jno sti add rclb jg pop xor cli cmp insb dec pop std fistpl jle std aad mov push jbe cmp and imul les les mov repz lret xchg adc pop xlat in and mov jno pushl les (bad) insb push insb adc sbb stos jo cmp add cmpsl sbb imul adc into or rclb jbe and ret js sbb lahf jno movl iret orl push int3 out and push jg cmp out pop fildl sbb shrl mov enter mov insl sub dec mov dec add insl (bad) stc (bad) int3 js repz pusha inc test jae xchg inc xchg rclb negb dec add sub xchg jne mov pop add sub (bad) xchg sti mov fs mov (bad) scas iret jl push jge pushf aas (bad) push js fnstsw cmpsl repnz mov cmp push push stc and call cmp pushf stc add mov mov lea je bt add push pusha pushf lea jmp daa in (bad) das iret jne sub xor jno aaa adc lret pop stc rorl cmpsl cmpsb xor lret sbb or or cltd jns sbb scas sbb push adc mov sarb (bad) xchg stos xchg sub in stos (bad) xchg sbb pop mov mov out ret mov outsl and je and and cmp cmpsl fadds and dec pop fnstsw dec cmp or loop (bad) pop shrl in loop and repnz xchg mov in push fisubrl flds int add mov dec sbb (bad) mov push aas out cmpsl inc inc fidivrl mov cmpsb movsl in sub mov dec fwait lahf cmp repnz dec jns pop cmp (bad) jle and lea or adc sub xchg data16 insb mov pop ds xchg rcr mov es pop cmp and push jle mov addr16 dec imul sbb mov fnsave call xor xchg outsl sbb into push std (bad) (bad) push insl dec (bad) sbb repnz mov xchg jno pop jle roll test xchg push cmp mov adc add sahf push int movsl jg sbb enter clc movb mov xchg push inc adc test fldt xchg pop outsl or lcall lods (bad) cmp fcompl int jno add fdivrs inc adc or xchg out push mov jae out cmp sub call mov jbe and stos sub fbld or mov mov sbb dec in push pop popa cmp pop jae test hlt sub mov in (bad) por xor push test dec adc test ret push fbstp jb pop jle sbb xor les das test fnop loope sbb jecxz mov pop shll jno andb cmp int inc ret fnstenv jns sbb lds jae inc add int3 mov inc int3 (bad) mov jns pop clc jmp cmp lret jmp ja adc scas ficoml sbb in test xor (bad) jle xchg pusha mov xor or pusha cli fcoml cmp dec push jecxz ret jbe push movsb pusha mov adc daa mov inc dec mov jno mov jo mov and cmc dec pop xor push in cmpsb xor pop fstpt inc inc push cmp pop (bad) aam inc or sub xlat mov arpl fidivrl pop shll pop dec xor adc inc (bad) mov jle fsts cmc ret dec call addr16 loopne ficom jbe icebp push inc mov pop dec push enter lret inc lret pop mov dec dec data16 mov jne push or mov and out pop mov mov xchg jp mov inc xstore-rng cmpsl (bad) xor push jp insl or jnp movsl ret sub sub aam pop sub lahf pushf xchg sbb jecxz pop out add jne fidivl add mov adc jnp outsb xor sub ret sbb int cmp cmp aam pop sub mov push or stos jb add clc mov fsts leave sub rorb mov and ds repz mov pop adc aaa mov mov repz lock ljmp addr16 sub add pop loopne mov add into jbe mov lock fs mov cmp mov xchg push push test xchg push sub test add inc jne push xor loopne inc jg int3 aaa or loope pop pop iret jno pushf xchg (bad) jl pop mov in push jp cmpsl sahf aam sti cmpsl jns or ljmp fwait push call pop adc out mov jbe ljmp scas (bad) jns and das jnp mov push or dec dec or je out les mov gs mov and cmpsl push jle outsl mov mov out lods mov push addr16 jne xchg repz fcoms lods dec out cmp repz jl and or je add pushl ret pop cmp leave jne push fistpll aas xchg sti stos imul push sub mov andl cmp sub aam aam out inc adc sub sub mov inc inc add insb pop dec dec inc sub dec dec mov sahf or mov jbe cld mov les xchg ss jg fmull pushf jge loop xchg aaa lds (bad) gs (bad) repz in rolb ret jg leave cli mov sub (bad) cwtl sub inc jno sarb or test in xchg mov lock mov pop out aas test (bad) pop lea mov xchg lret orb mov mov (bad) cmp xchg ror jne test add (bad) lcall pop dec sbb push mov push jmp xchg outsl outsb push jmp push dec int3 mov pop rcr xchg jns stc sub dec mov dec insb xor adc dec mov leave add repz jb imul in cmp pop int inc test ficompl or push pop mov inc lcall jns jae lods and movsb (bad) cwtl cmp lods inc xlat pop adc inc movsb cmp les test sti cmp mov cld sub incb std or and test sub mov in aam jge inc lea jb pushf cmp pushf cmp pushl pushf pusha lea ja call mov jmp call iret cltd leave mov jne mov xor push add pop pop adc stos jo or popa cmpl inc or mov jns push inc nop sarl arpl push jge (bad) (bad) mov inc stos mov mov or subb imul dec sbb push mov jg roll insl out out pop punpcklbw stos dec inc fs sbb inc addl out xchg nop add pop cmp cmp (bad) rorl cwtl iret cmc mov lods xor mov dec test or adc stos push pusha mov mov lods jmp test test sub cmp cmp jmp bswap pushl mov pushf movb mov mov lea jmp push movl pusha movw pusha mov lea jmp adcb lret int push push add lret push sbb int3 lret lahf sbbl ret addl inc pop jb adc scas cwtl std in dec lret mov shrl ret aaa add sarl sbb pop (bad) xor daa pop cmpb cmpl outsl lcall out iret lods es fscale scas out mov mov mov mov adc pop xchg jmp mov sbb and (bad) pushf jmp aas lcall push sub adc das stos les inc int adc roll pop js in dec shrb dec (bad) or std mov lcall jbe jne fbld nop dec dec push jmp xchg adc test jecxz mov daa inc cmp or rorl loop sub imul fisubrl pop dec (bad) lcall mov mov cmc mov mov fwait inc sbb mov shlb notl in or movsl test push sbb aad pop xchg or andb aas cmp xor cmp pop xor add mov cmp rcll mov in and sbbl mov fisubl and mov cmp lahf nop cmp andl add adc into pop fisubl push jbe xchg pop out inc out xchg jge stc xlat shll adc mov rdmsr stos cmp fcomps add sbb ds es imul xor mov or adc push out mov into shrl xchg cmp mov xchg int3 movsb data16 movsb xchg pop jnp sahf out std in aad push and mov pop lahf orl inc rolb xlat fnsave scas pop fdivrp cwtl push std add in sti add (bad) mov cmp iret mov push insb sub jae xlat pop xchg jo jmp sbb push pop orl push insb dec adc pop push shrl in xchg inc cld sarb pop pop push push xor and pop test mov (bad) test jno and mov call pusha push ret jne pop rcrb fistpll aam xchg xchg pop sub mov pusha loop insl (bad) out and scas fadds push shr lcall inc leave add push pop (bad) sub mov bound push xor push xor cmc dec into xchg or dec lcall (bad) cmp sub add cli sub cmp mov xlat subl cltd mov inc fwait lds cmp sub push dec xor dec aad jecxz cltd jnp pop rolb lods and les xchg rcrl int mov mov test pop out insl pop cmp mov push fsubrl pop imul ficomp aad mov imull insb stos mov (bad) or mov jno mov inc jno sbb in xchg push jg mul bound jl iret xchg addr16 (bad) leavew out test (bad) or mov das mov and dec outsb daa jae pushl push daa jg clc lret das repnz inc push or out lret mov dec sbb (bad) jns inc adc pop scas mov xlat insl inc inc (bad) test test aas shl cmc imul icebp js lods std (bad) sahf push cmp xchg popa (bad) dec add mov mov lea ja pusha pushf imul movb add pusha push pushl mov lea jmp sti xchg insl push ret mov fiaddl into jp jmp test lea mov cs mov adc pop divb xchg adc ficompl mov pop or adc sub les adc (bad) loopne outsl divl sti xchg jo lock test fstpt mov jp adcb sti loope sarb lods paddq aas pop vmulpd stos jne cmp test negb ret iret mov xchg lods pop bound or out loope adc push pusha sub call not pusha pushf cmc pushl rol movb call movsb jle fs jne icebp lods mov add fldenv push aam insb push out imul or sub sbb test fprem1 mov push mov push (bad) in das mov mulb pop pop pop jns cmc hlt adc and fidivrl clc sbb clc pop outsl mov xchg xlat cmp in sub or mov mov adc in addl xchg insb add mov or test pop ja cmp mov bnd mov pop clc paddq sbb mov cltd push add xchg jp dec or ret lahf jne sbb stos test jmp dec insb out mov loop pusha sub add mov aaa jg sahf imul int sbb ljmp inc mov inc movsl jge mov ds (bad) in mov sub mov mov mov push loope rorb and mov lock scas cmc lcall dec (bad) cwtl iret in sub ljmp cli mov arpl push push lea call jmp and (bad) jne lock xor mov add enter ret int ja ss mov gs sahf outsb insl mov call stos les popf sbb add cmpsb add xor cmp stos xor jp popf mov repz push jo inc and xchg inc add orb inc push cmp out into fdivs jmp dec jo sub (bad) xor sbb inc (bad) int inc sub or jg (bad) jmp jge mov idiv outsl adc inc xchg idiv lahf movsl movsb in or push mov inc pop fdivl rcll inc and aam loopne pushf pusha movl movb pushf movb lea jmp movb call and jne pop or lret jbe or dec scas ja xor test inc sub fisubr jge cs cmp clc xchg pop add into xchg stos cmp push pop roll fsts mov xchg adc dec lock xchg dec pop loopne xchg bound (bad) lods xchg (bad) lock std mov push (bad) mov outsb addr16 scas cmp sub pop leave mov xchg mov add cmp test xchg movsl adc rorb sub and pop fwait sarl push gs lahf (bad) clc daa cmp insb clc mov inc gs jmp in sbb jne or jb push (bad) fnstcw pop fistpll lods cmp (bad) ret or lcall add ja pop sub mov mov xchg jae dec add dec or jns in dec adc cmp lcall sbb dec jbe aad in push out das outsl mov pop insb dec addr16 in ret push sahf mov dec sub lea ja add ret cmp adc cli mov mov adc fs xchg movsl mov sub push test dec add ljmp divl jb lret cld jo mov or add outsb xchg cwtl add mov push cld enter inc jmp xor ds xor aad test xchg lock lahf mov push xchg ljmp fidivr add movsl push add incl pop or xchg fiadd shrb stos xor mov inc cmp xchg dec adc clc xchg mov fs test lock push and push xchg cmp inc jnp addl pop xor jb add pop adc idivl icebp xchg adc sarb mov pop xor les insl popf aam pop out icebp movsl stc push xor jp sub jecxz mov in push subl imul jne clc daa sub fwait cmp pushf jbe enter xor outsb nop mov out out push aas test mov adc dec pop cmp push movsl ss push and (bad) and inc mov inc sbb leave loope cmp xchg sbb jmp push cmp xchg ja out lret inc adc fisttpl push adc mov lock bound hlt (bad) gs sub lock pusha cmp movsl sbb and and xchg fadd leave test jecxz inc jae cmc stc aas push lret xchg mov leave aam lea adc fldt pop jecxz in dec ljmp fsubrs push jno inc fs cmp adc or sub and inc fiadd add xchg ja je push aas pop push call mov mov pop fdivrp dec fildll xchg mov (bad) imul movsl outsl jmp loopne dec mov mov add clc mov and cmp inc mov sbb in insl stc xlat xor or ljmp out mov sbb mov mov cli fbstp pop adc mov pop and aaa jns push push jg pop add (bad) fstps jne das or (bad) divl movsb test test inc outsl pop or or cmp fidivr (bad) dec cmp jbe cmp sahf jbe or leave dec jae rorl mov lods imul jecxz mov jmp popa dec inc inc mov popa dec push add faddl mov inc divl aad push or loop sub pop sbb movsb xor inc mov xchg es mov sbbl aaa int mov cmc lds lods lret xchg mov cmpsb stos pop cwtl ret arpl jmp js xor push (bad) mov adc or jae and mov add fidiv call sbb bound adc add cmp call out push add (bad) xor fwait popa dec mov adc sub jecxz rcrb push pop (bad) sar jl repz dec dec inc jle push or dec push aad cmpsl imul sbb mov stos mov push mov push lods inc xchg push das fstl fiadd pop fmull mov mov and bound cmp mov xor test cmp int3 enter mov push push xlat mov scas xlat jg mov sarl xchg jne pusha call sub js jmp push mov push leave negb outsl xor movsb jb or int3 xchg test mov aas leave inc sub inc outsl sbb jnp call divl jl xchg cmp push sub push ret xlat into pop sbb push cwtl lods notl ss stc mov mov dec addr16 pop loopne push dec xor mov iret std xchg push movsb push leavew negl mov dec ret push push cmp inc dec push inc push dec cs insb add lods mov add test push cli mov scas js inc add ljmp call (bad) clc cmpb xor int3 sbbl push (bad) dec imul pusha dec pop hlt push call lret add xor jg cmp repz loopne test and xlat push adc inc jo mov sbb pop clc mov hlt mov inc fdivr sti xor sbb aam mov inc fnsave lcall daa out iret mov test bt or jmp push inc pushf not inc sbb pushf test rcl xchg or setnp aas setle mov cmc setp or add mov jmp cmp push lea ja call pushf movl pushf lea jmp jae push push pushf lea jmp pushf lea jae jmp mov mov int add xlat mov mov scas jp inc sbb lcall dec pop les lock mov adc ljmp dec or idivl jmp add add orb pop sbb rcrb or in scas out jp (bad) cmpsl pop or (bad) xchg imul mov or leave out jb aaa mov add aam push mov int and xchg (bad) sahf jbe cmp movsl xchg ja sbb test flds js xor (bad) cmpsb jnp pop mov push idivl and fldl inc inc adc test fwait pop cwtl mov mov mov fwait lods cmp insl cmpsl les insl shrl push cmp bound cmpsb push push sub sahf popf or cmpsl in adc gs leave jp imul (bad) in lret movsb and pop mov int or movsb outsb aaa out jg mov xchg lods in adc xchg cs stos jae mov out adc dec cli lret ja pushw out mov (bad) sbb or movsb and xor or cmc mov dec dec mov imul stos jnp push daa pop push add lahf dec add lds push jmp pop pop nop movsb jl cmp (bad) fisubl loopne je lea mov dec push shl pop xor mov (bad) int data16 std fiadd jl push xor movsl ss push sub arpl loope adc pop mov pop ss push or jecxz sahf lahf loope loopne inc pop xor aam push fs pop lds pop dec out int xchg push push sbb dec or dec push sbb aas xchg pop jle sub divb out mov jnp repnz pop std fcomps dec (bad) mov inc jnp jne fisubr icebp cmp aam cltd or loop cmp xchg xchg shrb push push aaa xor les ds shlb rorl mov mov rcrb lcall mov movsb je cmp jns dec std stos mov adc and pop dec pop roll lret aam repz das (bad) jo mov insl xor mov xor das sbb icebp jl adc mov pop xor mov jb pop ss mov int mov aaa or clc add cwtl inc push inc (bad) xor mov and jl mov movb xchg mov out mov cmp adc test xchg jae jp push fs rorl mov sbb nop push cmp jle push add push adc fsubs fadd rorl ljmp add out add fwait lcall shrl mov (bad) sbb fnsave fs lock mov sub cmpsl jmp (bad) (bad) sub sbb clc xchg idivb pop scas mov cs mov rcll scas jne xor icebp fcoms jo cmp and xchg push aas xor pop outsb call inc or rolb mov adc icebp mov or outsb inc out push es ffree mov (bad) jmp lock mov push push adc adc fs jl mov pop xchg dec jecxz,pn sbb mov (bad) mov cmp and mov loop or (bad) inc xor pop outsb hlt call lods (bad) daa cmp mov cs cmpsl arpl cmc int imul (bad) stos jno mul in mov mov xor lea ficomp dec add iret decb or sahf scas lahf or imul (bad) rorl sub repnz scas dec (bad) out cs outsl mov pop and aad mov test sbb inc (bad) push out jp cmp cmp lods imul rolb sbb mov jg adc loope fmul dec dec fdivs push (bad) cld add mov in pusha mov pusha lea jne movzbw pusha pusha cwtl movb movzbw pop movsbw mov mov setb bswap pop lea lea movb push mov movl movb jmp xlat ja pop mov int mov mov add fsubrl sub leave rclb bound fwait addr16 sub repz xlat xor mov jge cmpsb mov rolb xchg ja loop bound add jbe xor inc hlt stos inc leave (bad) and push xchg and sahf aad int3 pop outsl notl add test xchg pop cwtl mov mov pushl lea jne dec mov xor setae jmp outsl cmp int mov push xchg insl lret push adc push lds repnz jmp mov ljmp sub insl jb pop sbb sub fcompl mov cmp cld stos mov movsl bound sub pop jle mov hlt rclb dec orl adc inc test data16 div dec (bad) cmp jns add pushf jns mov xor cltd scas test sarb push ret pop xchg call scas dec fs mov mov neg out sub xchg xchg ficompl mov xchg mov jge pop leave sbb push push cli mov in dec xor popa mov int int pop ljmp les sbb pusha mov inc popa sbb cmpsl and push xchg dec or mov xor mov jg push (bad) enter push cmc mov add sub mov pop sbb lcall mov cmp mov rcr dec jecxz loopne out jae clc (bad) nop fdivrp inc popa adc lock add repz push xor jnp es or pop xor push fadds cmpsl jmp or mov fnstcw sub inc dec shrl popa and and push mov (bad) adc mov sbb inc sbb xchg xchg mov xor test push or mov mov mov xor gs add jp test pop int xchg addr16 push or mov (bad) pop xor add divps push nop cmpsl stc popa inc not not call jo lret jne push jo cs aaa push rcl mov inc xor sbb stos add into mov xor mov popf fistpl sbbl mov (bad) mov icebp lods test in (bad) out xor push ret xchg and pop arpl push int3 and js mov or test pop pop movnti push fmuls or or xchg jns ss fistpl push aas mov xor xchg inc jbe sbb cli mov test mov mov xor push ljmp out push cli jno inc notb out pop leave lahf pop outsb mov jnp jne mov inc adc mov (bad) enter xchg inc adc lods jno aas sbb mov push sub sarl cmpsb push inc and pop xor es jbe sub jo bound movsl movsl pop aaa leave push lods xor pop push pop fldcw daa pop cmp mov (bad) bound pushf push cmpsl divl roll sbb fistl inc popa or (bad) mov or xchg out test or movsl repz ja add adc lahf inc inc mov scas ficomp pushf pop adc and imul jg decl adcl add cmp rcl mov data16 mull ret cmp stc mov rcr mov clc call mov add in sub dec pop leave rcr in fadds call push (bad) pop mov aaa ret mov sarb xor pusha inc xchg dec xchg jg (bad) xor adc sbb (bad) jae inc mov mov daa aas cltd outsl jecxz mov test jo pop add lea loope dec dec inc insb mov bound pop fisttp jno push imul dec daa pop pusha jb jp lret pop mov fisubr enter add popf cmp add or dec cmp int push xchg adc or sti das pop cmp pop adc mov aas pop ffree shrl cmpsb mov sbb ret xor repz ror int inc les outsl insb xor cs insb add fs je lea sar add bsf and sub rcr shr btr mov sub xor add (bad) repz add and cmc ror stc mov pusha pusha cmp shr bt jmp push dec xor cli fcmovb mov cmp in rorl mov stos (bad) repnz lds fwait gs enter fisttp hlt enter bound (bad) insb data16 arpl cmpsl push push cld cmp xchg xor mov mov mov ljmp ss pop mov jnp ret in xor xor jl push (bad) mov pop ret xor repz jo adc mov pop and mov outsb insl jecxz jo sub lods sarb mov (bad) jbe (bad) cmp stos jne sbb fdiv popf lods push inc push cli ror mov sub mov negb das repnz fwait out stc das stos leave xorl aas sub cmp push in jae (bad) mov inc dec sub aam ds or ds sub lcall xchg cmpsb push cmpsb add aam mov jno mov fisub push jg pop cmp movsl jp add je sbbl out xchg call mov test ss sbb pop ficomp pop int3 cld sbb lea mov je xor outsl pushf test jmp sti mov int jecxz cmpsb and fwait or ljmp mov add mov nop dec jp cli jns imul lods jno lock das xchg xor push pop mov pop paddw jo inc scas cmp cmp sti or scas lods and dec fidivl cmp in popa ss call adc ljmp jmp lea ja sar sub call bt clc add jmp scas push xor int3 mov xchg cmpsl lea hlt int3 mov xor test js add mov cmp mov pop int pop add inc add loopne rorl sbb fmull sub dec out jmp jo dec shr mov cmpsb sbb or fisubr addr16 fistpll sar lret js jns icebp jae mov cmp sar inc mov idivl (bad) in scas inc int dec lock (bad) idivb fbstp or out (bad) stos outsb adc sbb ljmp add push sub adcb shll cli not cmc shr mov clc jmp js enter int pop sbb fldt cli lret popa inc adc push xor mov and dec adc xchg dec mov mov sub aas add nop mov sbb lods arpl mov pop cmpsl pushl push fwait lods inc inc xlat push cmp or sub sbb ds cli clc adc inc iret insl adc mov mov sub lock dec inc scas ret cmpsl addl add or (bad) loope jp inc mov adc sbb imull adc icebp int3 push xor inc xor sub pop dec (bad) and js or out add mov cmp stc cmp test jmp lea jne pushf pushf stos pusha lea jmp cmc xchg jmp xchg and cmc cmpsl jne or jp mov orl bound lods imul aam cmp jmp jb,pn or stos push (bad) pop jnp es clc ficomp daa loop push add xor and jb int3 or aas mov xor mov or mov (bad) imul or cli mov jns cld ret mov test popa cmp dec jecxz imul dec sub mov jge cmp cmpsb cmp pop out adc dec nop jne inc je add out (bad) rcrb dec push xor aam movsl mov push addr16 or lret jp adc test int out pop xor (bad) mov inc or cmpsl jno push pop gs mov test lea push cmp adc (bad) mov adc stos addr16 in and cs add frstor testb ficomp dec mov inc push popf or test or mov popa and aas fwait nop cmp cmp shr jo in pop jbe stos pop or mov and xchg xchg ds pop enter push (bad) daa xorb mov push lcall aad sarb lea je call cmp not pushf jmp mov pushl popl mov movw push push pushl ret movb lea je test call call arpl leave cmc movsl jne fs mov and lods lahf xchg jge icebp inc cmp pop push rcrb inc shrl sbbb nop xchg mov daa dec or mov and xor repnz adc repz jne jle sbb fmull cmp mov decb sbb int3 loopne and lods inc lret push jbe fstpt cmp std mov inc shrl jmp cmp pusha or leave outsb push cmp jmp or adc movsl scas repnz jne inc (bad) iret mov addr16 mov pop inc in fild push call mov into mov mov pop (bad) lods ja dec sub xchg shll in push pusha call shrb shrb clc ret insb cwtl mov and dec jge xor ret mov mov lds je push adc jmp lcall adc mov mov ffreep popf cmp imul test mov mov stc ror lea sbb dec loop mov cli sahf dec dec inc mov fild les aaa arpl lahf mov cltd std gs mov aam dec jg adc rcll test or jecxz dec or cltd jne mov lock imulb loope mov cmp mov sbb xchg cld cmpsb add push (bad) mov fstpt jae mov loope mov iret pop sbb pop lret mov jb iret scas jae sub sbbl push push mov movsb jne stos pop mov repz jno cmp jb in mov sbb out inc jae xchg gs je fldl2e ds int3 lret add xor mov mov in xchg push add sub jno xchg movsl jbe leave test mov fist jecxz pcmpgtw push xlat push jnp shr xchg mov cmp jnp xlat insl pop mov jp out mov xor stc (bad) and push ds out xor mov push adc sbb mov ret data16 addr16 cmc cmpsl and jp scas add addl daa mov mov push xchg (bad) or mov es dec mov xchg dec daa jb ja add movsb jne dec sub out xchg (bad) jmp inc mov arpl mov rcl addr16 jo push pop and ljmp ret subb mov add and mov scas fucomp (bad) call mov pushf jp enter (bad) dec sub test stc loopne and movsl daa jmp or jmp std hlt repnz in lods fwait sbb inc scas inc fldt repnz pop sub sub clc and xchg sub stc and inc sbb subl jo mov lea lds xor stc dec jge sub fwait leave add (bad) push mov or (bad) int lret add (bad) (bad) in into mov push in je mov movsb mov add xchg fmull nop mov mov push add mov mov dec in sub or (bad) ds or test mov js push es add xlat pop lret mov or or pop pop lds sbb aad sub mov xchg add movsb in sbb les add jge ja in dec xchg aas sarl dec jmp mov cwtl dec (bad) or pop sahf into or jle or test xor mov fwait dec pop pop and (bad) cmpsb add pop insb cmp xchg cmp out inc xchg lods mov sub pusha sub mov mov or mov xchg dec (bad) (bad) lock insl outsb iret rorl mov dec jnp inc sarl sub jae in jle push scas gs test lds into jle cmpl mov jecxz pop movl mov incl rorl imul dec negl jb js jns adc cld fcom rorl fnstcw mov movsl aam add add test pop mov xchg fst mov xor and stos xchg data16 mov cmp sub dec jnp sbb add jae dec sub pop jmp mov sub mov jno js lods or push (bad) pop loop pop int jo xor push xchg add ret movsl or sti pushf adc stos adc imul mov adc and mov pushf mov mov subl pop lcall jle cmp jb daa dec adcl mov or mov mov jns pop xchg dec popf xchg data16 jge sbb mov ja js pushf sbb test adc push jnp fisubr cmp push mov cwtl lods mov mov mov popa stc dec cs lahf mov adc lods in cmc or or xchg push jl out jnp pop xchg (bad) cmp enter mov fdivrl and mov xchg cmc and lret mov mov stos mov outsl mov iret xchg (bad) in lea pop mov jle jg push sbb mov cmp adc lock out or dec jo sahf in lret lea inc or xchg ret movsb data16 mov orb pop fwait dec (bad) xchg mov jle add in cmp or scas outsb std mov ss add icebp popf sub cmpsb aad xchg outsb outsl or push stos sub mov xlat fsubrl test mov fnsave fisttpl repnz fcmovnu jp jmp hlt or mov dec fisttpll mov aas test lret pcmpgtw sbb jl adc pop mov mov mov push lahf std push outsl push or es lea andl icebp xchg js subl mov shrb je imul cmp dec mov into inc pop test sahf fwait sti cmpsb xchg jp cltd pop mov or fstp cmp jle xor sub pop (bad) add mov or mov (bad) cmc test xchg pop push dec fisttpll jle (bad) pop sti mov out add lret cmp or bnd ret jne mov cmp cli mov decl cmp aad jae cmp (bad) fmull cltd cmc scas flds xor add xchg jle loope fdivp (bad) ficompl in aam jl or data16 mov mov inc jbe sbb test mov aad jle int fs ss jo xor push movsb and in loop or fidiv (bad) sub mov inc cmpsl add (bad) fcmove mov lahf inc loope pop popa sarl xchg mov pop andb (bad) mov mov lcall inc jge das dec adcb fs ja or mov loope fwait (bad) pop push mov xchg xchg sbb mov sub ds cmp leave jnp faddl int3 cli stos cmp adc mov jl push sub cmp jne (bad) je mov cmpsl ja,pt (bad) cli xchg test rcrl sub shrl int3 ss mov mov pop xchg lcall push scas mov and inc in and push and aaa sbb scas cmpsb sbb inc lods adc mov cmp addl or mov xor and push popa jg mov sub and sbb jae xor sub mov test xchg mov orl cmp test xchg jle inc fnstenv mov mov lods sub xchg inc inc js push scas pop fcompl insl testb rcrb jp jg dec cmp stos dec dec add jne icebp xchg adc lcall add out mov dec int mov hlt pop xchg lds scas add cmp xchg cmpsb rcl pop mov dec (bad) mov loopne sub shll pop test xchg (bad) test call stc repz sti imul or mov test dec loop and jbe (bad) ja cmpsl stos aas stos pop mov mov mov inc xor sarl mov dec mov popf cld (bad) jbe stos aad add or test (bad) fimul fwait les dec mov jnp sahf push insl scas pop imul pop pop cmpsb mov lcall pusha push mov push pop jmp pop push movsb push pusha pop js mov xchg push int jb int mov imul mov mov or sahf and jns jbe test es add or inc test inc or int lods jge and or xchg mov add mov lods add popf test xchg ljmp adc test aam (bad) shl popf jge aad push fcmovb jno jg pop mov sbb testl insb sub xor jne xchg rclb rorl xchg cwtl sub xor add inc cmpsl push inc xor mov jmp out das fucomp mov dec jne add test jae cmp data16 fildl cmpsl jb fidiv mov data16 jle mov int repnz sub test cmp idivl test hlt or adc push jnp push add push adc test lea mov jnp notl lcall ja lods xchg in lea iret insl mov testb lea pop xlat cmp fidiv pop push xchg sub xor xor push pushf jmp pusha dec insl loope insb bound push clc cmpl jmp mov pop mov lea in mov mov (bad) fstpt jge mov (bad) mov shrb dec lods fs mov mov in cmp cli inc test inc std icebp out jp pop cmpsl dec jle dec test jbe (bad) stos rorb in or xchg inc add xchg std aad pop test fnstcw push es jnp push push mov or outsb mov pop fsubp cmp mov sub pop jmp andl std cmp add mov push loope pop scas xchg push in jns lods pop cmp adcl pusha sub push lahf mov push push add lods xchg nop mov or in gs mov lcall jo pop or sti jae mov mov adc test mov sahf and mov or inc xchg mov mov dec stos mov (bad) iret ds xchg xchg fstl arpl add loope jae fsubrs fwait arpl dec test pop dec mov lret nop mov mov (bad) in push fmuls test rcrb jbe mov or inc test outsl lret lcall out (bad) stos je scas sahf orb (bad) add int3 push lret and jbe mov daa dec or pop aam ret icebp cmp jae jo stos dec cs pop mov sub je test inc jl dec mov outsl lods mov fstpl add inc inc (bad) mov fnstcw xchg mov mov push lret sbb push push aad (bad) fsub stos aad mov scas adc push push stos in loop dec inc fwait mov fsubrs sahf movsb gs in sbb popf popa out jae xchg mov xchg xor inc jg mov dec mov mov test dec mov add mov mov and pop cmpsb inc lret xor mov arpl xchg ret or fisttpl mov mov pop loop pop out dec das mov mov in pop cmp sbb (bad) mov jns adc sbb test mov hlt test sbb push andb jge cmpsl jecxz cmp sar scas fucom scas xor adc sti mov fimull es push push or add add mov pop nop mov popf add scas or loop icebp mov pop push (bad) (bad) fwait pusha (bad) cmp sub imul sti and xor adc lret fs lea mov jecxz,pt mov or ds ja mov cmpsb push aad rcrl mov in out test fild adc mov clc aad pushf ja ja mov xchg pop add push les repz scas dec js fs xchg out mov jns mov mov loop test jle cld push test ds mov dec push mov aaa dec xlat or aaa ss fwait inc repnz scas cmp scas inc mov std ss and inc stos lds push outsb push jbe fmul or popa sbb aaa cmp outsb sbb in (bad) mov jp mov pusha test in pop mov jl lahf add push sub mov (bad) in pop mov adc jne lock lea and mov sbb mov pushf ds addl repnz dec mov sub out push mov fs pop insl scas xchg enter dec pop movsl xorl jmp dec cmp in mov aam lock das cs jnp sub in into xchg cmp jno sub lahf sbb cmp repnz insb int lcall in scas mov insb mov popa pop test dec mov cwtl dec xor aad rcll cmpsb leave (bad) add or out or pushf pop jl cvtps2pd daa adc or lods mov push xchg ja movsl std xchg mov pushf in xlat jge adc cmpl lret cmpl dec mov enter mov js and pushf and sahf cwtl ds pushf imul scas and inc xchg test sub pop cmpb test or cmp mov inc fwait orb adc outsl pop push cmpsb ja mov test push or cmp movsl lds (bad) push jno test inc or ss mov stos into mov test std imul gs in mov fistpll fld cmpl sub add xchg add (bad) ficomp pop or dec ds insb mov bound mov sbb pop mov xchg mov inc sub lods sbb test xor xlat push dec les mov pop daa jge jbe std or mov cmovle jle and dec mov push (bad) cmp mov and mov xchg inc cmpb mov mov scas mov sti inc fidivr jl inc in jns inc cmc mov cmp dec cmp sub or jle mov xchg pop xchg push aam jp ja xchg enter xor popf roll xor scas xor jge movsl loop add pop test rcl and addb push scas daa aam mov pop push jl fwait inc mov mov mov (bad) xchg adc cmpsb xchg add ss (bad) cmpsb in dec lds cmp cmpsl inc add push adc outsb xor mov in cmp xor in clc xor cmc or push and mov scas lret in aaa lret mov cmc jne fwait scas sbbb in je test repnz js mov mov dec popa pop stos out js mov in push pop nop mov into fwait aad dec movl lcall rcr enter and (bad) jle fcmovbe inc (bad) lock jne je jge loop sbb pop jle inc lods sbb fwait add addl adc (bad) or lds test mov mov (bad) pushl add in pop mov cmpsb mov std mov mov sti pop xlat push icebp add aad shrb add mov mov (bad) cmc or pop push or addr16 mov in inc (bad) int scas or aad loopne adc lret inc mov mov push adc insl cmp or gs cmpsl test icebp mov xchg add jae dec data16 mov jbe cmovbe cmp (bad) fistpll dec mov sahf jnp pop or adc push lods fwait xlat push xchg mov dec test in inc mov mov stos jne adc and mov inc aad add push xor jns iret mov jnp push aaa lea rorb xchg sub mov enter in jmp inc cmpsl in dec mov movsl add mov scas ja in inc in add jge add dec mov int3 mov xchg aas (bad) fs cmp add mov mov adc mov mov mov js jl cld xchg (bad) xchg cmc mov stos mov popf (bad) rcrl mov xchg test add sub out movsb cmpsl (bad) dec fsubs jne mov mov movsb push mov sbb push lods push mov (bad) or mov cmp mov pop cs sbb bound in xor mov in xor xchg pop rcll pop iret subl mov popa in scas push inc mov in inc data16 and test cmp jnp fmuls ja cmp xchg dec jle sbb xchg mov stos scas sub cmp cmp daa dec or adc nop mov leave mov inc xor xchg rorl movsl lods pop mov lods cmp dec inc stos aad (bad) dec cs leave clc push stos mov cmp and xchg xchg sub aas movsl popf aad dec andl inc mov scas sub aas cmp push aam dec bound xchg or inc (bad) xchg aam mov pop pop cmp je lock sbb pop rolb jge mov andl dec in or test (bad) cmc ja setle dec int out sbb out scas dec test test inc pop aam jle xor sbb pop push roll push stos mov insb or (bad) push adc ljmp (bad) test xor lods mov imul and (bad) or stos in dec cmc (bad) mov ja add or cwtl mov jge mov mov sub mov jnp insl sbb addl push push dec rorl ja inc sbb mov lds cmp mov out push and push cmp jb jle xor mov les leave cmp sbb sub roll cmp stc lds inc in stos cmc push es dec std xor jmp stos gs insl lods repnz stc inc ret sbb jmp jl mov mov push jbe cmp stos mov or jae sbb push and push mov pop xorl and cmp addl push (bad) (bad) cmc mov sub mov pop cmp or data16 pushf ss jmp sti shrl xchg mov or adcl out add andb xor mov test cs pop xchg xchg es in push jg or jo cwtl cmp push int int dec dec leave and push and lods add scas mov insb loope mov rorb sbb xor lahf inc pinsrw test lds pop outsl or push mov rorl sahf mov mov xor mov loop ds or jmp cmp scas andb scas sbb js sbb mov push or xchg in xor push (bad) lock dec sbb or mov jmp sbb add mov pop cmp fisub push loop mov cmc std cmp and or xor jo lods jmp das inc bound add sbb or dec xor std (bad) xor xlat cld inc push cli push (bad) push or lods or push lds push pushf add dec leave mov mov rolb mov (bad) push mov mov mov sarb insl ds les dec mov pop dec dec mov (bad) xor pop mov test or jo push pop pop loope or stos xlat mov dec jb cmp mov mov mov dec pop mov lods in (bad) mov les bound (bad) call ss jge mov mov inc dec shrb jnp inc leave data16 cmpsb rolb dec cmpsb or (bad) mov add sbb je sub loop jns adc movsl aad sahf lahf in mov mov dec adc je add xor (bad) xor add push dec mov or js call push cmp jae push leave dec sub ja movsb js das xchg push sbb in arpl xchg loope fs xlat (bad) sub mov aas xchg jb fidivr lahf xor imul jl popf insb dec test (bad) (bad) out mov repnz sub dec in mov lcall (bad) jle std leave scas les scas mov inc mov xchg mov movsl sbb or out mov jnp xchg push mov sbb enter (bad) test cs (bad) hlt dec push test js mov push mov mov mov mov cmp jae add pop scas mov sbb inc push lds rcr sarb or add jg fiaddl and jno jl sub adc addr16 scas loop insl call or icebp mov in mov sbb fwait jg test (bad) dec jne leave push das sub iret push sbb or add xchg fsubrl lods loop xor in adc fstl xor lahf jge (bad) lret je insb insb aad pop fisubr cwtl sbbb xlat cld and mov aad sbb jg jmp arpl jne inc mov pop dec (bad) inc stc ds or rclb in cwtl mov jmp xchg sub add in mov jmp pop and adc dec iret push add in push cmp (bad) mov (bad) fcompl ds jbe scas test push neg (bad) popl mov mov lods or mov lock lods es mov ljmp mov mov sub enter mov or inc dec stc data16 xchg loope sbb push pop (bad) (bad) outsl jno mov mov cmpsb cmp mov aaa sbb in jnp push and hlt sahf call ds loope int adc sbb insb push nop leave jle stos jnp je xchg adc sbb (bad) jae sarl sbb imul in fidivrl ror pop push icebp lods pop sbb shll lret test test hlt rorl fisttpll push leave lea in or xor mov jle mov test xchg mov and inc leave push imul push mov inc cmpsb add pop pop loop push in inc push xchg pop pop mov cmp stos cmp mov mov in add pop dec xlat mov test mov in idiv dec fldenv mov jnp idivb jge rorl xor push cmpl enter and add or dec loope aad ret add das (bad) mov int3 mov and ss sbb outsb cmp cmc dec inc cld repnz ficomp mov inc xchg mov sbb adcl dec push shrb push add jge neg (bad) xor data16 (bad) jnp xorb outsl (bad) in (bad) notb xor mov stc shrl dec mov add data16 aaa cmp leave dec lcall mov or push adc test jns mov les mov push popf mov dec jnp stos test jns mov aad mov mov push pop stos add mov cmp and inc int3 jne xchg pop outsb aam jp and test mov out dec dec mov mov mov sub inc mov xor cs mov lea jo mov jne dec mov insl lcall pop jge iret mov loop mov xchg dec cmpsb lods push jg jmp jbe dec cmp pop mov sbb movsb push cmpsl shrb (bad) pusha mov leave rcll mov enter pop fwait inc pop sub mov test sub aad dec test mov les inc dec jge lcall iret ret jo push inc sub not test les pop xor and add mov test push inc fisttpll xor pushf xchg dec xor mov xor add out inc mov jecxz sbb mov in jnp jecxz xchg sub mov inc jp iret mov xchg mov inc pop pop mov sub sub lds mov setp rep (bad) into cltd sub bound sub dec sbb inc test movsl outsb xchg dec test ja test add setbe and dec in jnp dec inc jae or mov and sub adc mov mov lea fsts outsl aad mov cld fwait push mov and punpcklwd dec leave push sub scas cmp jge std bound xchg or dec jo cmp rorb dec (bad) and cmpsl mov mov fstps (bad) fbld leave jp mov clc lds inc inc mov stc ror add mov add in lcall cli mov lods popa rcll stc cmpsb mov jmp mov inc in mov xchg mov dec add dec jmp add cmpsl or fs inc movsl and in or or jb daa loop data16 dec movsl xor or push xchg inc fdivrl cmp lods popa sub inc insl lds jmp scas insl scas mov xchg sub or mov cltd sub lods in ret mov xlat stos inc sub leave xchg mov pop pushf data16 je adc stc xchg leave bound jo inc in dec sub mov push mov cwtl add jle inc mov mov push leave push jmp push xchg (bad) pop test sub dec data16 add notl add lods dec shll ds lods mov push adc cmp fs or mov or stos dec xlat cmp mov shrl lea xchg leave mov stc js in mov mov jbe (bad) pop or pusha icebp bound std mov add mov test loope (bad) cmc mov lds leave push test dec js test out in mov (bad) pop andl mov xchg mov call lret xchg mov xchg dec andl lods dec push mov cmpsl dec rcll clc push inc pusha lds in ret lcall in mov xchg push sub fnstsw nop (bad) inc mov jle addl icebp rcrb cmpsb movsb xchg and gs leave out mov and insl push cmp cmp imul (bad) imul lods and pop or (bad) lock mov mov sub or inc call add jbe repz (bad) cmc jl mov stc lods cmp cmpsb add adc sti inc cmp shrl in push push dec stos and xor push mov stos mov stc movb add xchg push add test aam push fwait loopne xchg fsubs jo adc dec xchg (bad) mov cmpsb inc sbb inc mov test test inc (bad) stos aam jle js add in das dec popf shl push jns sbb fcomps mov lcall sub (bad) xlat jns mov test sbb dec aad mov in cmp movsl jbe add jmp test push data16 sbb mov movb enter cmp and lods (bad) push stos xchg les jns dec dec inc into test pop int3 xor ss (bad) (bad) mov add push in xchg mov add das in nop inc in frstor iret xchg sub jle add and add xlat ljmp inc cmpsl inc xchg xchg xchg mov ja cmpsl repnz cmpsl pop jge (bad) int3 mov adc (bad) sahf mov (bad) mov lods add in movq xchg sbb jmp std mov pusha mov fldt mov xchg enter push jnp jge inc bnd testl mov push jg fldl cmc rol movsb jbe dec and add das (bad) mov js in push or shlb mov mov push mov test std mov dec (bad) popf les mov xchg (bad) push nop or adc lods mov ss aaa xchg lds push xchg pop jl popa movsb mov or mov fs push xchg add test mov stos jnp jo (bad) clc mov aas jge cmpsb fcoml leave or or dec addb xchg mov cmpsb xchg xor mov push add xorl xchg adc dec jnp mov inc jge popf cmp sbb clc mov mov and inc jb inc mov or xor data16 xchg cmpsb sbb dec test add xlat xchg mov xchg stos (bad) xchg push jle dec and (bad) sub pop push mov mov mov pop lcall pop mov das orb mov sub call sub xchg jne xchg sbb fistpll xchg sub xchg mov mov jg pop cwtl push or inc mov mov js out addr16 jnp lock or pushf cmp mov mov cmpb movsb loope notl dec lods xchg cmp and (bad) dec mov mov cmp popa lea fdiv add and cmpl dec adc adc mov pop or sahf push mov in push incl mov mov fnsave dec and xchg ss in and lds xchg enter add mov or pop cmp (bad) rcl mov inc in mul stos and add aam les into add xchg pop mul cmp pop and and psubq mov ss dec add mov aad aas mov lcall mov mov push jle repz pop ret add test pop mov pop loop adc enter adc mov je sarb enter inc pop cmp in pushw push push and mov addl repnz lcall (bad) iret stos jg scas mov jno sub jno out mov add xchg aaa leave xlat lds sbb std test and dec lds pop outsb punpckhdq int jne cmc cmp or dec mov xor mov in lods lcall stc cld lods (bad) sbb mov sbb lods pop sbbb scas jne xor jl and inc mov pop jp mov imul or mov icebp push in je or dec clc push inc jne mov mov inc jae jge iret scas add shrl mov mov push xor pushf test fwait push mov fs insb inc inc clc xchg rcrl xor pop jo xlat sbb cmc xchg lds or jns ret push push mov int3 lcall stc mov jae sub into adc (bad) adc out std loop stos lds out dec lods popa xlat idivb in js movsb xor inc lret arpl jmp imul push sbbl and dec xchg ja ja mov aad out jmp cmp jmp in test push fiadd inc cs mov hlt cmp aam icebp icebp out ja or repnz sbb jl xchg int3 lahf mov jne pop imul mov pop xchg dec fisubrl js add (bad) mov xchg mov outsl (bad) ds je pop jns adc sbb mov xorl push mulps jns das add stos lods cli mov aam cmpl icebp mov pop xor sbb push dec in push in leave pop push fucomi sahf in mov mov inc lods add push push cmp sahf mov mov or or loop cld aam ds sbb xlat leave pop fimull sbb data16 push fstl pop mov mov cs sbb mov lock sbb add lods movsb pop push cli fsubl xchg std jbe outsl sbb sti fisubrl cmc adc clc mov jle push mov jmp pop int3 mov cmp movsl cld adc inc or adc mov mov fiadd jmp shrl mov rorb dec or and dec xorl addr16 js jecxz addr16 adcb enter xchg push cmp sub inc xlat sbb cmpsl addr16 jns jmp pop mov or int3 push stc loop js data16 imul add xchg mov add lea stos mov mov fcmovnu sub in mov lea sub int3 rolb push or lock push test test pushf hlt xchg push pop cs jb or icebp dec stc inc sub mov pop lods cmp mov test mov dec aaa dec ja mov cmp enter xor pushf cs mov xchg inc ds adc dec mov push jb xchg sub add adc ds sbb loope jge cmp xor xchg or out add push inc dec insb cmpsb add mov aas xor push mov (bad) pop mov jmp mov inc mov sbb fcmovbe lea mov xchg push xchg add push xchg lret sub stos into lret test (bad) push cmpsb add sub mov cmpsb test leave lret push sub fcoms push ret add pop inc mov mov data16 lods shlb jno xchg mov pop outsl sub call inc adc add adc leave testl mov fs fs pop lret or jne adcb ds ret jp inc or (bad) mov xrelease cmp or push lods sarl dec jp mov popw out add je cmp inc fcompl test test shrb mov adc test mov sbb or stos dec or stos push loope shrl add mov lret push insb sub in frstor cmp sbb mov mov stos xchg data16 adc data16 inc jg (bad) dec icebp lds cmp sub test mov dec scas cltd or hlt jb (bad) xchg dec arpl stos mov in mov adc in fs push iret mov popa mov mov mov pop jnp dec in sahf mov mov in hlt lods jno mov iret pushf cmc jmp flds ljmp out ja mov inc xchg jnp mov lock adc lret lahf jbe out add or mov stos mov dec mov jno push push je (bad) neg mov fucomp hlt mov and arpl cmc cmpsb scas and adcb (bad) sub int3 or andl push shrl push inc push push mov data16 mov and fldenv pop cltd xchg inc out cmp mov sub or mov jbe push xor cmp inc xchg sub mov cmp xchg add mov imul mov pop out mov rorl mov sbb mov xchg insb loope addl ss jmp jmp sahf or stos dec iret lods add xchg sub cmp in cmp mov sbb inc push nop in jle push lcall divl cmpsl test jp add sub in jb in xor ficomp dec outsb inc jb scas je xchg and jp mov mov outsb dec test push xchg xlat cmc sahf lock rcrb bound in lret sbb push hlt xlat clc push dec mov int3 int mov jnp into lcall xchg cld push jmp gs outsb sub mov cmp icebp xor inc (bad) xchg xor push loope dec std jae mov inc je (bad) mov shlb aad enter inc cwtl fiadd inc cmpsb pushf mov inc jge jmp outsb cltd xchg lods outsl mov cli dec test mov xchg xchg push outsb inc mov jbe movsl inc mov sti rcrl sbb jne pop xchg add or add push or xor outsb mov daa inc cmp mov shl in cmp (bad) vmulss fcmovnbe sub shrl sbb lods notl adc jne aad cli mov xchg (bad) pop arpl loop or movsl scas or std add sbb lcall jecxz mov adc lods stc inc and mov std das cli pop adc add fldl or decl lret icebp js add jge cs mov aad les mov xlat loop mov mov in jo xchg adc fistp add in rorb xor mov or imul pop push or sub gs or sub stos fsqrt lods jle jb pop movsb xchg test jp xor les mov mov or dec insb push pop sahf pop adc cmp data16 imul in mov inc or push loope add jle and mov fcoms xchg pop mov mov mov popf push std stos insb or rcrb mov int cmp mov cmp jg cmp pop sbb xor and mov dec dec fidivr jle inc jae sub sbb mov push fcmovbe ds pop mov or add stos stos and mov mov dec add inc ret lods leave jne cmp xchg test mov cmp add insl cmp mov fldl aas inc int ret int3 aam pop or pop das mov dec dec setae pop stos ja pop data16 (bad) inc (bad) adc gs mov xchg leave jo lret mov inc add inc cmp and dec ja sub mov mov jge cmp jno mov push or aad cli sub or fldcw add mov stc jae pop inc es xchg cmp int3 jmp push pusha dec stos and daa mov dec sbb add bound push fsubrl inc jb inc in add inc or or or xchg xor popf dec pop sti mov dec popf jo push xor mov mov scas in mov jns dec sbb cmpsb in aad sbb fucomp jp xor aam dec cmpsb fildll xor loopne es jb push mov repz shll push js sti and add or xchg ret dec outsb inc out cmpsl mov push add sarb jno xchg sahf push lcall jae cmpsb fildll inc add stos mov in mov mov loop lahf mov call jae lahf cmpb inc dec repnz mov cmpsb scas push aam movsl lods call movsb test add (bad) out xchg mov fwait (bad) dec stos stc (bad) iret inc aaa std sub push (bad) (bad) jmp test in movsl cld mov jbe in sarl (bad) pop popf scas dec mov pop mov fnstsw jp push xchg pop lret xchg xchg dec mov into push inc lea jb jns xchg or test movl and jle mov mov push mov test add outsb imul (bad) adc out xchg iret lret daa sub jnp mov xchg sbb mov dec dec mov inc fwait les (bad) jmp ds jecxz inc andl xchg jo test sti lock jno movsb lods inc fsubl mov dec scas test lret pop out outsl imul xor (bad) fs xchg push (bad) cli fidivl fprem1 (bad) into cmp popf mov nop in fs ds ss or loope rcll pusha pop sti aas inc mov (bad) pop mov (bad) mov cmpsb notl and adc js test mov or mov or fldl push xchg fcomps push xchg dec addr16 jnp sarl pop xlat inc arpl jge mov mov aas sub inc jno pop cmpsb push inc lcall cmp imul xchg jmp popf mov stc popf cwtl scas xchg jbe pop test sub or mov lret (bad) js inc int aam mov mov jle scas es jl sbb push pop (bad) scas mov xchg mov pop jge push bound and icebp mov xchg add add xchg or xchg mov xchg mov push stc cmp or mov pop xor adcl cmp cmp int3 in sarb dec in jge jle mov sub mov pop bound xchg icebp xchg cmp adc add cld or (bad) push push mov lods cwtl cmp ja or mov in std sub (bad) lods add and and movsb ss push inc mov xchg add jg in jne adc cmp ret adc stc je sbb es sub fmuls mov dec mov aaa dec mov popf mov push jle sub xchg jbe sbb rcrb pushl add mov jnp cltd leave lds (bad) in jbe in or jge sahf push aaa jle inc sarb (bad) pop dec popa mov xchg dec mov mov xor adc cltd pop in out lcall loopne sbb dec cmpsl pusha dec push xchg sahf mov in cld cld in (bad) lea inc jecxz jne stos enter pop (bad) aam lods leave mov jne (bad) ja (bad) pop mov imull mov push adc inc fstps cmp add iret imul rorl lahf pxor xchg call test ds dec dec pop dec imul cmp sahf cmc fwait mov incb lret lcall sub jns clc es lcall int cmp add icebp mov test add sbb or add in test test out mov lret xor pop sarl mov jg inc (bad) pop jb push idivb fstl fnstcw or data16 mov loop fwait sbb mov out sub mov push jo mov aad enter mov insb loopne cmpsb xchg (bad) test outsl push mov push aas mov lcall (bad) or cmp js mov dec add es dec mov sbbb sbb fisubr add dec xchg mov cmpsb or (bad) adc cmpsb push ss cwtl or test insb mov xchg pop add inc adc mov (bad) je inc mov adc roll jge mov mov inc push fs sahf or mov mov int3 cmc or loope xor roll jmp mov xchg mov lret pop cmpl decb lock cmp popf mov dec inc adc mov sti push inc ss jne cmp stc mov ret adc pop inc inc pushf mov testl jg roll pop (bad) dec mov repz loope jle repz ss lds adc ja negl mov adc (bad) fimul dec loop mov or sbb fildll add mov fwait xor aam or rcrw faddl push lret sub adcl jp,pn cmpsl push inc cltd push mov xchg cmp sbb lea jo cmp pushf mov pop jb xlat scas iret test mov mov jmp ficompl xchg add subl js nop cs xorl mov jnp push cmpsb lea dec cltd data16 lods xchg (bad) mov pop mov mov inc jns imul sbb inc jno cmc dec cltd mov mov add js dec adc outsl jbe adc sub js lods ret jns cmpsb sbb xchg push jo mov outsl pop push das xchg adc std sub (bad) jg sbb jno outsb xor cmpsb and je lahf mov jnp bound sbb jb push rorl cltd push (bad) mov call jnp scas pushw xchg pushf adc cmpl xlat jns or adc lods and jnp hlt inc jge dec mov (bad) data16 push popa bound in jp jecxz sub cltd and mov ljmp jb dec sub cmp jne mov loope movsl xor lahf xor nop mov pop sub mov inc int3 mov add rclb push aad mov sub mov das dec scas or pop movb fstl and sahf add inc fdivr sarl xor sub inc fs push jmp xchg jae xchg lods xor xchg sub push mov into cmc mov shll (bad) dec (bad) mov std mov sub in (bad) and jns scas aas js cmp sahf lds push sub or sbb (bad) mov (bad) cmp lcall mov push mov or fs mov imul pop adc test out mov xor dec xor jnp pop mov dec push push std xlat dec in xor cmp push adc dec jo data16 dec arpl push dec loope ds mov add mov popf mov mov nop leave xor ljmp mov test inc std mov cmp (bad) jno ret data16 hlt jae and mov sub mov in push test ss lods out ret mov mov mov pusha mov (bad) xchg and jne (bad) push add add mov lcall dec mov sbb lea movb frstor add aad jae and xchg mov inc in je in xor inc mov ret inc ss jns (bad) lahf sarl jp cmpsb lds jge mov mov sub rorl mov stos enter xchg adc sbbl cmp dec add and fnstenv or mov xchg xor mov in and xchg insl in jg xor inc sub mov cld lods adcl ss enter fistpll add jg out pop mov mov sbb movsl std arpl sub add jo movsb mov jle fldenv lds sub mov pushf add lods sub and inc mov dec test push data16 mov pop mov mov mov and scas lret jb and test add pop jle jp mov mov sbb cmp cld (bad) lahf lds sbb sub push movsl push verr in mov int3 or xchg out js loope inc push (bad) sbb inc fxam lahf scas test sub mov pop (bad) mov xor pop popa mov cmpsl lea dec jbe rcll mov mov jmp jge popl stos xchg inc jg imul pop inc addl add shl adc (bad) outsl jg inc jl lds push out inc xor fmull in aam xchg push mov mov out adc push cmc (bad) jp fdivrl js scas push lcall cmp sbb lcall test (bad) lcall xchg xlat bound sub xchg push jmp in sti jns das cmc outsb hlt test mov cwtl or leave test sbb sti and adc xor or mov cmp std or jl test mov out out mov jno push lahf ja ret (bad) add addb (bad) loope fldenv mov aam lods jmp sbb jle in (bad) sub pushf cli push mov in int3 mov or sub imul idiv fstl sub shl insb push stos (bad) js cmp and inc jl fisubl lret inc dec les mov jb push adc add mov pop repz jbe push push push les cmp push mov cmpsl add sub mov test push fisttpll sahf nop cmp jo cmp and cs or mov mov fadds cmp (bad) jae add adc ret sbb mov cwtl mov ret lret mov es hlt dec sti push hlt jae lcall imul adc (bad) sub push inc add mov xchg sbb inc out adc push pop rol inc mov (bad) loope outsl mov in and out mov push pop leave adc push outsl out dec fsubl push xor stos call (bad) mov or scas data16 fs outsl sbb mov xchg add in cmpsl push addb fldl mov dec push xlat out mov int xchg xchg (bad) lret cld iret testl and xchg shrl or std add popf jle jnp sahf imul xchg mov mov pop cmp in mov call jg inc pushf not test je xchg dec xchg stc int ret mov clc push mov xchg mov push cwtl xchg jmp push xchg leave mov xchg pop mov and lock inc xchg lea scas into or movsb sub mov sub aad xchg xchg mov jno mov mov cmp (bad) les pop notl inc push loope add sub or push xchg or mov stos or or fs jmp push mov ja push das inc test xchg adc add mov (bad) mov push adc or mov mov es push cmp add in mov aad or repnz divb push mov xlat inc mov inc sahf xchg sahf or int jmp inc stos leave in jmp adc cmp out xor xchg leave mov (bad) mov jbe leave push icebp xchg xorb into and (bad) ljmp xchg sahf (bad) scas pop scas sbb pushf cmpl fdivrs not das movsb in dec xchg mov jge lea dec jl mov push pop movsl imul lods xor imul push mov aaa or adc jo cmp inc scas add jo inc xlat es or aad je lods jae mov cmp subl xchg es int3 cmp test mov imul push fwait ss hlt push movsbl test xchg push dec add lcall inc scas xchg add mov mov push int jp mov xchg notb dec mov (bad) pop inc mov jns outsl mov adc mov xchg test subl shll aas mov inc mov jae xchg push es lea rorl mov aad lret inc inc dec dec dec sbb push sub adc jl mov jno dec push test sbb mov adcb mov dec sub inc int popf in ja out lcall (bad) jmp mov jl jecxz movsl out mov jp cltd stos mov xor or dec xor mov movsb stos push scas mov aaa out jmp jle add mov into movb scas fs jle mov in xchg in cli inc into mov inc jecxz stos push xchg ja (bad) rorb pop inc adc add push aam dec xchg dec es ficoml sub inc mov add jle test mov mov test loop and out pop cmp hlt aam mov js push and stc lea (bad) inc mov dec mov in sbb mov jo je es mov lock int or pop fsubs cld jl fildl pop pop mov outsb in adcb cmpb loope jbe jg push mov mov sbb lahf jle mov push lods in out xchg push add mov in add loope rorl dec (bad) into mov test dec arpl inc cmc sbb cmpb mov test mov xchg or and sub hlt into mov pop stos jnp fcoml int js xchg mov pop mov (bad) lea add lret in lcall bound inc lret push push sbb jno push cwtl test int dec xchg std pop mov into test pop pushf sbb in dec mov lret insl jno mov jge in sbb repnz xor push mov push mov in adc fsubp in cli subb loop icebp mov shll lock into add mov loop and into xchg mov or in inc sti stc gs jb ds addb stos enter dec pop mov test pop add scas pop ja xchg fs sarl inc test pop out daa mov pop enter xchg mov scas ja (bad) dec jp mov cmp jbe push cld into leave mov cmpsl aaa sub test push jo mov sub add adc mov dec and or dec cmpsb scas popf or into xchg ja cmp and js jne cmp dec pop rcll inc fs arpl cli (bad) xchg (bad) pop xlat mov or add push into std test (bad) pop orl pusha loopne cli jo jnp pop xchg jb inc ja cmp insl fwait (bad) dec xlat jo fidivrl xor adc lcall pop mov test mov xchg cmpb add or scas mov loop and mov mov dec dec mov test dec test mov hlt cmp xor icebp or cmp jmp sub sbbb pop or or (bad) sub dec (bad) xchg mov xchg mov adc (bad) in pop insb out push and push jle andl mov push outsb movsl dec scas add outsb or sbb mov mov inc xchg dec in dec xchg pop push adc (bad) mov mov cmp aad or inc (bad) sbb xchg xor mov lcall (bad) jae cmpsb xchg xchg xor pop inc sub icebp and repnz mov jae or jge fnstsw xor xor rcrl test mov cmpsb add in mov jne ds test cld mov imul push outsb dec push out mov push xchg repz mov push mov cmp dec mov dec stos lret dec dec imul mov lcall or loop xchg sub fldl xchg dec jp cmp xchg lods (bad) call or sub cmpsb mov shrl sti cmp stos jbe lods sti insl out scas stos mov mov inc mov in mov fwait lods pop xchg mov (bad) (bad) pop jbe adc (bad) icebp pop xchg shrl insl lahf xchg insl add aad dec add inc fistpll jle mov wrmsr sbb xchg xchg arpl push lods in fsubr mov mov or push xor (bad) cmp negb jecxz inc ja ss iret ret sahf mov cmp xchg decb mov fninit fcoml inc imul xor lea jae inc xchg lret sahf scas jl jle (bad) mov mov xchg cs pop fldl je lret and dec aaa push mov enter and stc sbb sbb push loop sbb xor push cmp pop (bad) daa adc or adc inc jp xchg jns mov out fwait dec inc push inc cmpsl push cmp mov jl jmp xor dec roll push xchg lcall sbb std ljmp adc repnz xchg and xchg cmp (bad) (bad) in aad incb fnstenv xor mov cmp mov add loopne sub mov push in dec push out mov lahf lcall sbb and out push mov mov icebp or xchg out adc dec pop stos or or or lods and in xor stc arpl std xor mov imul dec push ss test jmp xor lret mov mov adc dec fs push popf adc lahf clc jmp dec or aam into sbb jno mov lret mov mov stos xchg mov ret xchg xchg imul mov aad gs std xchg test xor mov stos add pop add cwtl loop push add test add sahf cmp jge dec lods xchg setg pop inc in add lds mov into mov loop xchg movsl fwait dec shr mov mov mov jo xchg stos sahf push dec (bad) mov push mov sbb inc pop mov dec push lods js stos push or xchg js jl inc mov jle jg push imulb sahf (bad) inc lret inc or xchg jo sub mov mov push inc out out movsl es jb sar test jno jge adc (bad) xchg sbb and mov lds leave xchg sahf dec jp mov dec mov dec mov out dec dec jns daa sub scas xor sbb add out mov ja mov in in dec jle in dec out mov (bad) adc push push add hlt mov xchg stc fsubl movzbl es xorl ret test leave mov aas push lcall push cld mov dec mov cmc xchg outsl mov das lret xorl loop push decl test dec dec pop xor mov push cmp xchg enter inc and stos jg add into cmp fwait xchg pop xchg push stos inc cs cmp mov mov mov jbe dec sub pop orl scas (bad) shlb cld stos push (bad) data16 cmp jle repnz or shrb test fwait mov sti cmp mov and dec xor outsb sti jbe leave scas ret lock lods adc adc jns shrb pop inc mov mov mov fs iret adc cmpsb lea sub jns ficoml sahf andl sub and (bad) dec movsl dec or cmp push mov lahf lods xlat dec (bad) xor lods push mov or lcall lds push out dec mov ret cltd push add push test lahf stos insb out ja test fsubs mov gs xlat cs ds jg inc adc outsl inc daa test push jle xchg pop test and jnp (bad) lcall or pop mov popa jb shl lock int jg xor sub xchg or or pop sahf xchg int3 test in or fdivp mov in gs mov hlt int3 repz in xlat mov es aad cmc cld cs popf (bad) (bad) xor xchg cwtl push data16 test adc scas mov lds mov hlt loop mov xchg in mov fyl2x shl lahf push enter dec inc push out div ret mov orl pushf sub out pop decl dec dec xchg or push rolb je xor sahf dec notl std mov fistpll jp pushf inc int ss sahf jge lock mov or sahf and dec bound mov xchg mov and mov pushf mov lret mov dec pop icebp bound jb sahf push and aas jo sbb and jne dec inc cmpsb inc das pop cmp inc lods mov adc inc xor into scas xchg push inc or mov mulb fldl inc subb repnz out jle out loop jle mov insb les scas sahf js (bad) mov cmpsl psubusb jg sub dec jo xchg out repnz push sub mov (bad) xchg mov mov fs lahf lods or or cmc mov aad add mov js mov (bad) pushl (bad) (bad) (bad) icebp or movsl daa jmp push cmp aam or fsubrs dec jo mov jae enter mov pop lea into push push push orl jle int3 lcall pushf or xor add xchg mov xorb mov scas mov mov test aad imul xchg stos mov roll jmp test loope cmp xchg pop in clc xchg leave (bad) cmpsl lret sbbl add (bad) dec cs cmpsb push outsl xchg pop mov add fisttpl lock inc add inc mov cmp lods out ret and insl insb in sub fwait into sub push idivl scas cmc dec out daa dec nop mov dec add and std mov sub repnz stos sbb mov sahf dec (bad) mov pop push fist pop stos in mov jnp cmp push mov cmc mov sub or push stos lods mov out subl int cmc fwait xchg mov mov dec sub push (bad) cmp fwait sti dec cmpsb mov mov xchg in add inc jno add adc popf pop mov inc dec loope lds lret (bad) out loope sub mov add jo scas in inc (bad) in (bad) push push pop mov test add (bad) mov jns dec testb push push dec add ss jae out jmp mov add nop jno sub outsb fisubl xor cmpsl rorb xchg ret push les lret cmp popf data16 roll hlt lock xchg push pop hlt (bad) mov xlat aas scas pop mov mov push stos (bad) mov outsl cmpsl bound pmulhuw cwtl stos repz pop mov scas loop xchg sbb movsl mov mov mov mov lret push push add in cmp mov cs dec mov mov mov cmc sarl pop sub dec out or sar ljmp cmp (bad) pop sub jno inc or push pop out jo mov sbb clc dec push fwait sub mov jmp imull adc mov pop bound jge xor xchg mov fbld inc test mov and cmpsb imul xor mov sbb and mov mov cs or in aad or or adc mov ja les ljmp mov movsb and mov mov mov (bad) sub lods mov mov rcrl lods jle das or test in dec jge stos in out test push xor mov das ret daa das lods jno test mov test jae inc mov je test cmpsb mov inc mov and leave aad fwait sbb and xor xchg dec pop jnp inc xor or cwtl adc and pop mov inc scas (bad) ss ret sub xor loop inc xchg push sbb imul mov jns pop or inc outsl iret loopne cltd movb and cmp stos xchg inc into pop sbb imul mov in mov out sub inc stc cmp jp add mov or dec stos xchg loop js test bound jg cs jns pop jp mov mov xchg mov sbb mov sbb out clc xor inc add adc cmpsl add lods xor mov fnstcw dec test movsl xchg sub or shlb push lods pop mov rorl dec movsl jl dec lods dec adc add cltd pop mov mov mov add jl inc cs stos mov in push push mov pop jge adc ds xchg jl lgdtl push dec hlt add adc scas stc mov push inc sarl pop adc adcl mull or mov jg xlat lret daa mov xchg xchg inc mov (bad) dec addl (bad) mov add xchg or addr16 mov loop mov or cs mov xchg sti push adc ss push in add mov adc inc into mov in inc fstpt (bad) adc les aam out dec adc les mov jne mov mov sahf pop mov push adc lods leave mov mov js or add mov mov mov (bad) mull aas dec sbb jle or jmp fstl ror cmp nop cmpsl (bad) xchg insl stos dec imull jle jge jns out enter lds imul mov mov cld mov or scas push mov inc xchg int pop mov push jmp add ds mov and inc test int pushf in mov sbb lret xor js sbbl les sahf test (bad) test test and les je add xchg and daa test cmpsl or cmp dec jp imul jge in cli pop jl and mov iret push inc push jbe dec lret jecxz xor push mov lods lds sub test in mov xchg movsl out cmp leave dec mov push jno je xchg cmp mov mov mov cmp adc pop mov mov mov aam adc sbb fldt dec pusha mov adc xor adc inc addr16 cmpsb inc mov jl jg ret loop js mov fsubrp lods out cmp mov daa outsl inc in pop test push mov xchg jne mov jb jne inc push inc push cmp loope pop pop cmp cs push rolb push mov mov jo inc mov jge out clc inc mov test repnz cmc add add adc test das iret movsl fwait inc sbbl hlt or jge jecxz outsb mov lods stos jge inc mov cmp inc lds dec push and mov ror mov movq sbb fstps xchg ds sbb sub dec adcl hlt push popa dec and lahf js lret rcrl (bad) cltd loop sbb inc mov data16 cmp test push icebp adc dec jno ret daa orl jns mov sub cs mov dec mov negb movsbl outsl or fsts fidivl cs fsubrl mov lea je or pushf out dec dec scas xchg ret adc mov scas in loop scas in mov test movsb nop inc fcmovne mov mov dec rorl xchg cs pop js push cwtl (bad) fcom pop sahf fs xchg sub in push out mov inc or pop xchg jns mov ds je jl pop out cli mov cmp and adc rol sahf das pushf xchg pop in jb push test fpatan adc scas stc jno cmpsl inc fsubrl adc insl dec sbbl sub add jno mov sub xchg or shlb rcrl xor popf mov test sbb (bad) lods cld pop jp mov mov outsl push mov sbb lods popa and push clc inc loope xchg xchg xchg (bad) pop imul lods sbb push jl and mov icebp iret outsl aaa mov inc int jns repnz aaa (bad) jmp fisub sub outsb mov pop fmull pop xor cmp mov push dec adc fs es mov xchg mov enter je js fstpl stos xchg push and (bad) pop (bad) pop mov or ljmp sahf dec in add movsl xor sbbl mov mov fisub jecxz test ds cs mov outsb jg adc shll dec std push mov add in fsub jnp push ds mov mov or fs insl sub dec dec inc test cltd inc push sahf lcall dec fnstsw adc cmp and lods pop lahf xor mov lods sub hlt popf pop popf or push inc jg iret pop jge dec (bad) or daa lods fcmovne push adc jmp stc adc fldl loope std adcl xchg mov ss loop push pop sbb or test mov movsb or mov mov pop lahf cld and mul fs sub (bad) and push sbb addl inc dec adc test sbb cmpsl pop sub decl sbb pop das rclb pushf xchg sub inc push mov dec jmp stc in jle mov dec add cmpl iret jge,pn loopne int3 les dec jmp and sbb adc js stos fmul loope stos loop jg fnsave stos lret cmp rcll add pop mov mov jmp in dec pop in loop cld in lods mov iret xchg in cmp aad ret (bad) or fldl mov inc loop sti aad mov mov or rorb out xchg fucomp outsb mov das or (bad) xchg mov (bad) adc stos int3 clc cld loop out shr call (bad) mov pop sarl mov push ret (bad) lret scas cmp scas or aad xor mov repz inc jno lea loop xor or out lds out adcl mov test jg jg clc jo or adc int3 out rcr adc sahf test (bad) repz pushf ss sti lret xchg es mov push add outsl fucom xchg inc mov stos add push orl out repz js or stos mov cmp mov xchg scas outsl fwait sti xchg mov pop insb xchg push dec inc (bad) pop mov shrb ror addl jle xlat ss ret stos (bad) dec mov in or xchg sub mov jp mov jbe push xrelease mov dec add cmpsl sub sub inc fnstsw push jne push (bad) jmp (bad) rcrl daa cltd or push in pop add ror out mov add jge inc mov inc xchg jno (bad) lock mov mov (bad) and mov in add inc pop xor fs dec ret adcl dec (bad) (bad) add cmpl sub xchg add jmp cmpl cmp add pop out fsubs arpl pop and rorl xor les fwait mov mov mov scas sub or cld mov push std mov xchg test aam inc (bad) test lock out icebp inc mov std lods cmc out jg pop cwtl stos (bad) cmc sahf ffree mov js mov sbb repnz xchg mov and mov mov cmpsb mov pop or xchg lds push lods sti xor ds mov lret inc cld or pop or popf dec mov sbb dec cmp jp dec mov add mov pop pushf outsb lds int pop std sub xor dec lds xchg in stos jns fmull imull add inc and (bad) repnz fstpt js pop mov dec adc cmp mov sub dec les cs xchg or mov or mov jo jns scas cmp cmp cltd xchg ret and xorb dec lods movsb data16 out mov cltd xchg add mov push sbb mov inc loope in bound jb jb leave aad outsl (bad) fisubrl xor int3 test pop mov clc mov (bad) iret (bad) int jl jmp mov jne or add adc xchg mov mov inc (bad) cmc es inc and mov loop xor mov jne cmp and lea mov fstpt jo add adc (bad) xor (bad) dec pop xor (bad) test push sbbl (bad) dec lcall fldt fsubl pusha std sti in ret inc iret jne pushf xchg add xor inc jnp fs cld pop dec rcll sbb push ja mov andl lods stos adc xor or aaa pop sub int3 jne xchg jae push add jnp pop or stos ret nop jmp pushf pop pop movsl dec xor cmpsb cmp lahf in inc sub mov cmp and push add pop add mov add stos mov mov fwait (bad) hlt movsb scas push dec inc mov ds sti pusha dec add stos or or bound or in cmp data16 test mov cmp js data16 data16 xchg test data16 and fwait xlat rorb test in sbbb mov cmp push call enter lcall inc push shrb push nop int mov xor mov lods dec push xchg mov add xchg mov lods pop cmp dec les push in xchg or test (bad) cmp mov lea cmove enter push add add out jnp (bad) (bad) pop fnstsw sti push xchg pop faddl scas arpl into and or and movsb jmp xor cmp js adc dec jnp mov add (bad) insl sub bound insb stos jbe sahf sub fs imul mov ds into cltd aad cmpsl in cmpl sub jl (bad) mov push or dec add sub fadds or adc push imul popf sbbl fwait xorl inc fstl xor or fnstsw push pusha jbe mov lret fcmovnb cld test xchg test inc mov cmp push (bad) insl insb sub jno and pop sbb ljmp push add mov iret rorl adc mov mov fimul std out add scas cmpsb add and mov and lret lcall sbb cmp adc adc lcall popf nop cmp cmp stc mov mov push mov dec popf mov sbb push push sti movsb cmp pop paddusb daa in sahf adcb (bad) mov jecxz mov lods pop addl or xchg std lret push lret cmp mov dec cmp push pop mov adc and xchg mov outsl mov ja mov mov clc inc outsl insl fnstcw push ss adc push inc sahf in aaa mov or fistpll test inc cld sub lret addl pop nop inc jns les fldcw mov xchg mov mov add clc insb xor jge insb sbb xchg in (bad) (bad) jae pop pop sub lods jge in xlat mov lcall xor inc test inc pushl test mov mov pushf cmp dec cmp mov xchg mov jp es push jle cmpsb xchg in lret sbb int3 pop es xlat inc cmp mov rcrl mov cmpsb (bad) jne test loop (bad) mov test call loop push or loop pop mov push inc sub cmp jbe loop (bad) push xchg rcrb mov push loopne orl xor cli xchg and inc push lret mov dec adcb add dec push dec aas inc push pop and cmp call lahf jnp sarb in fsubrs stc or lock add lds movsl fistpll fild mov dec mov xchg stos sbb movsb dec add cmp aam xor cs enter lea push and jo das push in leave push add and repnz loopne pop cs jnp (bad) mov fisttpll je leave fldt jecxz push xlat data16 fwait mov in cld push lods insb rol and inc fcoms mov adc inc out and cwtl call in xchg pop adcl subb pop inc push int3 shlb mov adc jmp rorb pop inc dec in cmp jle mov scas in data16 adc lds mov imul test rorl (bad) stos sub dec femms sbb mov stos data16 pop mov cmp les into inc sub ret orl and cmpl stc out jle sub inc xchg outsl leave pop xchg sbb jmp sbb pop mov andl inc jecxz (bad) in cli push aaa inc mov and jb add scas test mov jle jmp push mov and (bad) mov pop xor xor cs scas add fmull mov dec sub mov fs sub int mov in (bad) xchg ja mov cmc cmp jmp lea mov (bad) cli mov dec sub (bad) jmp stos fwait inc ds lods sbb test int3 dec movsb out mov adc mov adc jae adc jbe std inc mov loop pop adc gs xchg fldl xchg jle pop inc mov mov mov cmp pop imul mov push mov sub mov pop jnp mov sub push pop mov mov ds sbb mov mov std ja (bad) mov mov je push test adc pop jno sahf sbb lcall add lret mov test stos mov or mov xor fsubr add in leave pushf mov mov mov fisubl pop mov sbb mov add cmc sub push xchg jne xor mov add (bad) into push fldenv jmp cmpsl orb sub xchg mov mov xchg lahf adc jne cmpsb pop dec xchg mov jb mov ds dec xchg sahf mov std aad subb pop sub sarl pop rcr mov jp sbb stc pop pop mov mov sahf sti ja mov (bad) aaa rolb jle dec sahf push and add adc lea or inc push push scas mov lods or jl inc mov out pop mov cmp push mov xchg mov add into test aad aas loop loop add mov xchg mov repnz cli dec cmc mov mov flds or lods xchg jbe (bad) mov push dec inc mov add mov pushf pop adc lods addr16 (bad) xor cmpsb mov mov xchg gs popa sub xchg dec (bad) push dec lcall mov mov call into mov jns xchg adc mov in xchg mov mov push jbe and mov mov jmp dec mov or (bad) mov jbe loope dec in lods aad push lea mov jae cmpl or lds cmp pop add and xchg mov shrb mov jae in adcl xlat repz les adc imull xor mov movsl data16 pop xor lods pop cli xchg add fwait popa xlat or sub ret (bad) aas scas out mov test push lcall or dec xchg bsf lcall mov lods leave pop inc loope sbb inc xchg roll mov inc inc add or adc jb daa jmp jbe mov inc loop jnp je dec ja in inc push fstpt test push out fisttp xchg xor test mov push pop test mov mov loop xchg rclb and lods dec mov sub js jg sub pop adc xchg bound nop loop int3 jp push or (bad) mov or in stos adc mov lret mov (bad) jmp (bad) in or inc stos lahf jne pop (bad) test sbb je pop adc push add je jbe inc leave in call mov jo ds fbstp xor cltd push cmp and cmp fs lods fildll dec pop jmp cmpsl xchg push lds movsl add push in imul push lret mov sbbb dec cmpl sahf sub stos inc xchg xchg mov sbb test dec cmp inc xchg loop xchg data16 cmpsb loop movsl repnz fdivl leave outsb sub sub pushf jge loop lahf fnstsw in sbb icebp pop jmp mov xor sub in push sbb das sbb repz mov add mov xlat sub xor xorb push pop lret fldt lods loopne jb mov decl stos xchg leave jecxz outsb mov or inc nop or jg cld lret mov pop xor mov ljmp mov leave int mov and ljmp enter std dec lock push jbe mov dec push mov or sbb (bad) in popf test push jmp pop pushf jg aad add xchg cmp scas dec (bad) pop data16 push push and push adc cmp mov insl xor popf lods push mov jg xor (bad) xor pop inc jmp inc cmp insb in mov ja sbb and test xchg hlt arpl popa lods adc mov add cmpsl in clc in imul lret push rol aad icebp aas gs inc jo sub lret push mov inc mov mov pushf add lods push lods xchg xor rorl repnz jmp inc or lock mov mov adc rolb adc (bad) ficoml jle cmpsl data16 sub sbb jmp ds jle rcl and fisubrl push rolb stc and cmp adc test ljmp fwait mov jnp adc dec in lods je lret mov test xchg into dec in icebp inc loope mov sub movsb jns (bad) iret sbb repz push push jge sarl pop nop repz jmp dec aas mov jmp jo cli jae xchg sbb mov pop inc (bad) inc cmp fistp pop dec mov iret add (bad) in fisubl fwait and in inc ds stos push insb mov cmp test xchg or (bad) push in adc sahf add mov pop bound dec xchg int movb jo pushf pushf fldl into inc dec jnp sub imul add test ss lods push lcall cmp dec cmc arpl leave sbb jns jmp add xor roll lcall mov movsl or ret test mov push jle and mov sub dec jge adc bound lret pushf mov inc rcrb jo cmc dec in jae sbb or sub ss mov push or std mov in aad arpl aas adc nop ja mov mov shlb cmp dec jbe xor xchg stc mov loop mov mov or loopne loop popa lcall call pop sbb loop sbb insl cmp mov icebp jnp lea and mov or lret cmpsl (bad) push or movsb jmp js dec sbb push es test in hlt mov mov repnz in (bad) hlt dec or popa and cmc pop xor cltd ds icebp (bad) mov pop (bad) cmp cmp fdiv xchg dec adc dec mov (bad) es xor or cld lea mov xchg xor pop ljmp movl dec xor mov dec test aad mov in inc outsb inc mov lods lods inc jb scas stos scas dec fsubs push (bad) sub jle (bad) loop mov in and xor mov ror push cmpsb cmc lods lds jbe jns lods mov adc push test pop in leave ffreep pop dec std mov jno mov in loop dec pushf scas nop nop dec lock cmpsb test xchg add jl push (bad) mov or in loop stos adc notb inc (bad) in stos xchg scas aad in arpl push ljmp jb lahf push xchg (bad) xor push outsl in sub cmpb sarl and xchg sbbl dec inc and outsb cmpsl adc int3 xchg (bad) pop stos sarb fmull xchg mov scas sbb adc fidivl jg lods mov loop loopne test adc add in xchg cmp enter mov lods imul lea shll mov into sar lcall js js (bad) out dec sahf pop mov js popa dec pop pop inc add dec mov ja bnd testb cmpsl int3 xor sti jne pop test inc insl (bad) in xchg mov negb insl mov andps sahf mov or insb shlb push push mov mov mov stos xchg cmpsl xlat jb dec in ss js add sbb add xchg repz iret push inc bound shrd in mov test sbb jp mov push jmp mov add mov or std or sti dec ror add push push mov jb inc mov insb dec jb icebp inc jno inc jbe mov mov test cli dec cmp xlat jecxz cmc cmp mov popa loope mov push fs (bad) dec push adc das in lcall movsb das insb (bad) and test cmp rorl cld mov dec (bad) dec mov sub (bad) sbb mov xchg sub pop (bad) xlat mov sarl push movl push add insl inc shlb mov addr16 cmp jl in push dec mov xor mov mov xchg leave xchg inc push mov mov fsubrl aas mov sahf scas add pop mull out sbb (bad) pushf fadds dec mov sub pop dec xchg jmp sbb js data16 stos loopne cmp and add jl ja xchg or add in arpl jns stos mov push cltd mov adc inc jnp push cmpsl jmp ja cmp and or in inc mov sub push dec xchg pushf sbb sbb mov rcll in jnp sub or adc sbb in test xlat push push loope add or fsubrp mov inc movsl or out or into dec inc cmp les push imul add je push pop mov pop or dec push inc and inc divl push xchg xor xchg dec (bad) sti xchg mov mov fnstsw sub adc loopne mov mov cmp icebp add mov mov lods ja pop mov xor clc lret aad add dec in inc mov mov mov rorl pop aad sbb lods add (bad) aam fcomps ja pop popf ret or adc dec inc mov lcall add aas xor iret or and jmp inc cmpsb pop dec arpl or sub imul push dec dec call (bad) mov add add mov ds inc push movsb adc (bad) pop mov jecxz dec orb cltd inc lret mov popf inc sbb movsl jge cld or iret jle arpl scas mov and pushf pop mov int3 data16 mov int stos and xchg push loope,pt out sbb cmp add xchg cmp pop test fsub xchg cmp cwtl cmpsl loop pop lods (bad) pop test cmpsl fcmovnu cmp cmpsl jp outsl sahf sub loope cmp lret mov and dec test jl and pop sarb mov pushf cwtl in mov repz push movsb xor mov lods (bad) ds (bad) lret adc (bad) scas dec ror or or sub push or ja ss sbb ds xor adc lea jecxz pop outsb inc sarb test iret adc outsb mov inc mov jl add lea aam pop mov test gs movsb leave cmp mov movb in fnstenv add push xchg ja js and and in pop sbb dec enter jbe popf add dec loopne xchg nop cld pop push adc mov lods mov leave jbe,pt enter lret data16 xchg mov pushf push cmove lret pop test pop push fisttpll lcall (bad) loop mov sub mov xchg (bad) push xchg mov pop or mov rcrb jbe jns pop (bad) pop decl movb xchg jl xchg stos sub sub test mov fs fidivrl jecxz lret pop mov add repz mov sub sbb jne mov iret insb dec mov popa sbb add jo lds xchg cmp sub push mov pop jle fiadd push jnp outsl popfw scas lods mov xor mov mov mov adc idivl test out lea jbe or mov inc xor add xchg xchg mov xchg sbb xchg rorl xchg pop ja xor lret xchg data16 cmpsb xor lret test inc (bad) inc in repnz or add enter negl jnp (bad) lret ret push xchg daa adc inc ljmp sub mov in inc repnz and lret mov js push test sub rolb data16 jo lods add rcrb xchg cmc mov jl loope dec fildll add (bad) cmp and mov mov jb xorb test leave ds fwait rep aaa push or mov or or sub push mov aad in in sahf addl fdivp arpl or (bad) data16 pop ja fstl jle imul inc out icebp clc jmp test lret add push mov insl inc inc (bad) out (bad) leave mov movsbl cmp inc les int3 sbb mov jno or pand mov xor xchg push test pop dec or sub std sarl xchg sub jo mov setge xchg ret lret cmp and cs aaa (bad) hlt in (bad) cmpsb lcall fwait dec ds push push lods mov test sub push sub mov std xorb mov jbe push std scas icebp rorl mov pop push mov (bad) aad inc pop idivl xchg (bad) fisttpl cmp push mov movl push dec dec jmp xchg pop sti push pop lea inc add (bad) fmull mov test xchg or push in push out lret outsl hlt fs sahf push sti dec cmpsb stc mov add (bad) push dec sub sub movsl ja xchg and inc lret std xor (bad) pop mov adc ss mov movsb outsl push pop add inc adc sub test pop in mov je aad shrb scas cs mov cmp push and cmp lcall jbe popf mov sarb cmpsb addl das fmulp scas pop xchg cs mov daa dec and mov mov mov test (bad) stc aaa icebp sbb pop mov jno shlb mov int add cmp push sbb xor mov packssdw pop loop push cmc xchg lods jecxz sbb pop cmp aaa iret and pop mov mov popf sub adc andl mov xor add mov test pop notb lods aaa stc popa inc int inc in leave cld cmp arpl adc jmp fisttpll or mov orb dec sub or scas mov jb mov dec loop or (bad) jb lret andl sbb ss pop test jl push test add movsl push jb int3 (bad) jae push popf or cmp mov pop cmpsb cmp mov mov push push adc sahf xor mov cmp ds call jl cltd mov loopne or shr das das nop dec add add mov pop jo pop push call mov mov pop sbb sbb fmul out mov test fildll lods enter (bad) das push out out lret leave xor dec dec es in push movsb mov into mov mov sbbl mov mov int xchg cmp addb mov jge jnp mov outsl push stc sub sub gs add sbb adc jmp (bad) jo fadds adc xchg or lea stc cld fwait pop mov inc lods add dec loope or mov mov lcall push xchg icebp jle inc pop jbe jg xlat (bad) mov adc xchg jecxz xor btr xchg cwtl out push mov jg cmp mov push pop mov out cmp fdivl add or scas ja add (bad) mov popf xchg jl nop les insl jae mov enter xchg pop push loopne push xchg fisubrl xor inc rol repz mov push in or and test lcall xchg mov mov outsb sti dec icebp mov das jecxz push push mov adc lret mov lds xchg (bad) (bad) mov and int in arpl mov dec lods std lea add scas or fisttp mov fldt (bad) outsb mov divl scas jp xor sbbl mov rcl jp,pn mov bound scas mov dec add enter mov in loop xor ja fimull (bad) neg popf int icebp aaa jbe bound rcll sbb in addr16 lods mov in insl roll (bad) pop add iret int sub in or mov lret out sti bound xor int3 dec add pop cmpsb mov scas ljmp push adc rcll jns mov jg or imul push rcrl out vmread es je xor stos or fnsave mov sti cmp push pop scas mov int in cmp mov insl iret (bad) jno out lock xchg or sbb ret or das xchg sahf xlat inc dec pop inc repz pop popf lcall insb mov test ss mov test cmc cld sti or int ffree pop scas jle out dec adc gs int mov xor cld jle (bad) mov xchg inc in imul in data16 test lods ror dec mov dec pop cmpsb fs xchg inc mov mov (bad) into std data16 leave xor out pop mov lea sbb xchg shrl std or jle in mov aad aad leave lds (bad) mov mov stos mov lods sbb insl push sbb insb mov stos lret insl ja dec das ror jno in mov push add js add mov or cmc test je or inc scas dec sub test sarl sbb mov sbb popa sahf cmc stos xchg (bad) imul (bad) lea mov out mov loope xchg icebp test cmc in sub aam popf ljmp or pop sub int3 pop rclb scas jae outsb or xchg repnz cli decb push fimull pop sub subl in dec mov sbb hlt mov add cs lahf movsl dec inc mov dec pinsrw mov movb or dec repnz mov ss arpl jecxz gs outsb push cmpsb mov push lds aad test sbb test jb inc cli imul mov mov in adc dec add shl andb inc out (bad) movsl cs mov pop fisttpl push repnz lds jp fxch rol lahf lea push test stos mov outsb es addb in lods dec in jnp push inc jo inc dec inc icebp mov clc cmp sbbl dec in (bad) add adc mov nop dec leave fsubrl (bad) std mov andl xor mov mov or push cltd loopne push loopne mov loop push sbb ds push aaa gs inc or mov movsl sub lea dec pop insb mov jno jg inc mov aad add inc cli fidivl lcall outsl xchg inc in loop pop test cld aad mov in xor ror cmc cmpsw jbe pushf mov mov cmpsb xor or cmpsl mov sub or pop inc stos pop and jle fdivr ljmp push lea dec lret dec mov leave mov mov xchg mov jo in sbb add mov push mov and fs insb rorl ds repnz or aam mov cs int dec adc mov xchg mov cli cmpsl fcomps insb push xchg aas out xorl subl out jne mov int3 mov (bad) dec fiaddl dec notl jno pop je fnsave sbb add pop sub dec push dec pop loop pusha xchg out sti imul sub shr add pop leave or leave jp mov outsl in fs cmp xchg lret and not push andb mov pop mov sub and stos mov mov stos push pop and rcrl imul dec icebp dec xchg mov push push loop (bad) mov vandnpd fadds mov mov (bad) fsub cld (bad) xchg inc xchg das loop loope cmp lock pusha es pusha xchg rcll repz hlt insb ja outsb (bad) mov ds pop ds js lahf cltd icebp jo dec add ss lret fild jb aaa cmp or (bad) xor stc loop sbb out or sub jnp lahf push data16 or vpcmpgtb mov loop mov lods xor scas imul lods jmp jns xor test push mov leave pop dec and in pusha xchg inc (bad) loope push les (bad) lret (bad) (bad) jne mov ss mov js jnp aad es (bad) into test mov ret jae cmp shl pop sub sbb in sub ja cltd push test mov mov xchg adcl mov xchg loop cmp dec push data16 xlat fs dec pop add cli mov test and dec xor stc cli adc std inc push pushf jmp push push mov mov imul bound or push scas in cs and std movsl adc nop pop pmaddwd adc (bad) insb xorl inc pop xchg jo dec mov loop push inc cltd sub xchg ret icebp pop mov pop mov subl mov mov repz mov dec (bad) in jns add movsl pushf rcrl lea adc in dec or popa sub jge inc ja sub data16 call or xor cmpsl fcoms fs (bad) xchg test ret mov lcall imul mov popf xchg sbb push std adcb push les pop mov (bad) jne cs std out or test lret fistl and daa jge xor inc mov pop rorl jae fucomi lods push push es push push jle push or loope xor and inc and dec inc mov jne sbb cmp je or (bad) jecxz add cld (bad) movsb add add mov mov mov mov mov mov mov mov mov mov mov mov mov cmp pop jno push lcall inc adcb lods mov mov mov xchg lds daa mov ret push pushf inc (bad) in xor mov jg or int xchg add rcrb xchg ret dec cmpsl loop and lds push cmpsl add or push or sub test jnp ljmp imul fisttp mov push fcomi jbe data16 inc sbb lock mov jg adc cmp (bad) cmpsl in dec outsl adc pop or push mov sub mov insl test pop test mov pop iret mov hlt sub std or sti lret loopne out mov fisubl xchg or add aam popl xchg and mov ja and pop adc (bad) aad enter mov repz cmc jg stos movsl adc flds pop sti pop cmp lret cmp jmp pop test jl xchg aam out jp adc les (bad) xor cmpb cmp dec lea pop push mov leave js ret mov pop into in subb jle sub sbb movsl ds out jns mov dec dec lcall fdiv imul mov (bad) pop in repz movb (bad) adc sbbb imul push les idivb pop into sahf mov (bad) ficomp dec lahf (bad) sti mov imul addr16 scas and jge pop out cpuid mov xor add adc jmp pop outsb test shlb in push or out mov or (bad) or sbb pusha rorb cmp jo push sahf dec push mov jge jb imul sub insb jbe pop mov in jae push push shrl (bad) adc push and inc dec mov mov inc pop or mov xchg (bad) pop add mull ds fwait in mov or sbb sub dec pop je or iret decl aad or inc repnz jge add imul int mov jno jg xor mov mov lods cmc outsl mov add in inc movsb inc inc dec aas sahf pop loopne xchg ret jb inc sti ja add cmp mov loop and xchg (bad) fistpll mov out mov pop scas mov lea loop push mov jle hlt jb lahf add outsl loope jmp dec mov push xchg pop mov cli push lcall iret pushf mov dec xor stos pop pop inc jno pusha pop aaa hlt sbb les lods or lods sbb arpl loope mov cltd push popf sahf es pop and lret mov push sub dec cmpsl fmul mov dec mov out xchg mov push aad xchg fstpl push ja (bad) bswap inc test dec push int3 dec (bad) cli test jmp jmp pop mov cs lock inc stos add inc arpl mov adc mov push fcomps hlt xchg in aad out and dec lock or mov in lea movsl add loope fsubrl mov fwait cmp mov push jnp and int3 fldcw add dec cmpsb xchg pusha mov jmp popl stc ret int3 ljmp int push je iret outsl add in cmp lret movsb add jbe inc rcl mov sbb (bad) aas cmpl (bad) js (bad) mov or outsl call dec lret ret ds sbb mov sub fwait sti mov stos loop cmp dec cli pop pop sub sbb shrl jo lret in cli jbe arpl stos xor add sti pop mov in pusha mov pop cli add or mov in mov add jle jbe sar lret mov insb cmpsl outsl mov mov cmp push stos mov dec mov repz or into les jl ds jae shrb mov cmpsb outsb cmp or pop xor stos add jg dec xchg pop dec idivl jge (bad) aaa push into cwtl lcall in repz and or iret mov lods test (bad) mov mov and lret ljmp jno mov std cmp insl mov shrb loope mov lds fnstsw jmp das push inc xchg cmc mov jecxz gs xchg test fs in imul jmp inc aad mov fimull xchg xchg add ds pushf inc inc mov imul repz cmp les ja inc mov mov lods xor jb jnp int3 cmp jle push in call sbb cmc mov inc out sub inc mov jmp in or (bad) pop je and js push mov sbb mov loop mov dec (bad) (bad) cmp jl mov jl decb sbb add out jg or jne mov mov inc lret jl xor jp sbb aaa fcompl mov rorb pop xlat or push mov and xchg mov sbb jb mov (bad) cmc jne and jo jmp fiadd scas fistp cmp jno pop aaa pop scas addr16 sahf xchg sub dec les jae or add pop mov stos adc inc jmp mov add mov fsubrl jp push btc jge int3 in pop sahf add lahf in push push xor and es mov test aaa (bad) (bad) and (bad) mov cmp or out mov aaa (bad) je orl ret lahf mov jp test lahf xor andl out cs int3 inc js and jne mov mov inc out (bad) enter leave jle lahf (bad) lret sbb sti mov jnp out cmpsl xchg imul gs add mov ja jecxz push in mov inc adc pop pushf cs push lods in iret bound cmpsl test pop in pop iret aam test pop dec push test in mov mov (bad) mov and lret dec popf pop and pop push shrl pop iret push jecxz mov mov sub jle adc dec insb outsl loope jnp fisubr (bad) and dec jo les js xchg scas loopne mov fldenv pop (bad) dec xor push adc insb cld dec (bad) cmp ds negl mov push mov xor aaa xlat jb loop into daa mov inc test movsb outsb test or pop mov flds addb inc push sub mov gs jno (bad) mov insl insb xlat repz xor ret mov stos xor jmpw ds mov mov js fwait test leave mov insl bound fiaddl imul test ja icebp ds aas lods add jo lret push fisttpl icebp iret out lds in int3 loopne cmp jo sbb (bad) mov jmp ja adc cmc or add push outsl mov xor loope movl mov aad or lea mov imul out je sarl dec mov push cmp add aam mov rol dec (bad) mov outsb xchg inc jge ret hlt lahf jae xor idivl or cmpb dec test jmp jno call nop xchg inc push add mov or aad std xchg lret orps add add mov in pushf shrb cs mov loop cld ret mov and add xchg mov inc sub jae data16 cmpsl jbe stc test mov pop xor movsb push cmp dec std push in mov mov mov xchg mov leave rorl stos fnstcw lods movb nop jbe pop jo sbb push scas jge cli or push adc mov sub dec mov outsl lea outsl inc cmp movsb ja inc sbb fs mov test sbb xor aas in rcrl test dec loop clc add in and pop mov ja push loope das out mov cwtl pop and ret jb cmp mov rcrl mov dec xchg roll jmp cmp mov lods mov push xchg sbb pop mov fisttpll dec jle mov push mov jecxz add lds or lahf sahf add scas leave fldcw dec fadd in push rorb inc xlat mov and push (bad) addr16 rcrb mov jnp xchg inc push daa in lds test sbb fidiv int sub cmpsb test or faddl insl mov sbb shlb imul mov inc stos xchg leave cmp mov dec aad jbe cmpb fcompl cmc ffree dec jnp cmc mov fsubrs pusha in mov (bad) fcmove negl jp sbb lods cmc iret mov incb (bad) mov adc xor pop dec inc lcall add pop or sub mov mov mov ja mov mov fdivrp in sub scas pop cltd cmp nop into cmpsb test rorl (bad) or inc push xchg mov lret in jmp mov dec jmp (bad) xlat sbb (bad) pop movsb fwait insb rorl jae mov jge sub mov mov mov (bad) lea push inc lods cld fstpt loop movsl (bad) dec mov fidivr cmpsb cmp sarl cld pop mov sub adc pop jns ds imul mov mov call pop push jge xchg jg dec sub cmp jb ret cwtd dec pop jns mov dec addr16 mov fsub jp cmpsb mov add mov jl,pt sub push mov es cmp adcb sbb dec mov xorl mov ret push mov adc mov pop pop push cmpsb lea lods jge lret clc cli cld bound add sbb sub ret dec gs ret (bad) push mov cmc and adc lret pop cmp jns add or loop ja cs sub lahf ds lock pop shrb insl jnp inc nop push in cmp push iret clc ret mov pushf jbe jmp ds cmp aaa lds or push fcomps in adc ret push in xlat loop and dec popf cld lahf ljmp dec loop inc (bad) jg,pt sbb lods iret lds push popf fldt frstor push scas test dec pop ss loopne adc stos lods mov sbb or dec push jae mov mov test ja push xchg dec or sbb dec ret out sub dec inc stos loop xchg call jae,pn inc hlt (bad) cltd push sub in out mov xor mov mul sbb add xchg pop sub jae dec add inc loop pop or insl andl dec je xchg sub in xor (bad) jne cmp push inc mov lahf daa cmp (bad) adc mov stos sbb mov insb mov mov mov stos dec inc std jnp mov inc test out dec dec leave xchg inc loope mov mov or in lods sahf lret inc ds call cmp add mov movsl jbe mov xor roll inc movsl pop add inc push faddl sti int jb (bad) push xlat inc outsb fldpi out mov fcoml push adcl fwait lret repnz sahf xchg adc scas hlt mov mov loopne pushf mov push arpl jl cli xlat mov in stos shrb fisttpl cs adc rolb sbb std pop cmpsb sbb jbe stc movsl movsl stos mov xchg xorl fwait (bad) mov jno lretw cmp mov out mov cmp cld push mov lcall xor push sbb scas cmc lahf add or dec inc jle pop (bad) xchg jge cli stc push in push push xchg sbb cmp dec cld inc mov pushf pop inc mov or or cmpsb mov sub in scas push dec loop insb sbbb std fs push daa outsl fstpl push xchg enter cmc xorl xchg dec lods jns in sub add data16 fs iret mov fwait fwait xor mov dec stos xchg jl pop stc loop mov jp inc mov int3 fist lds jnp cwtl cmp sbb jne xchg jl lret mov cld dec (bad) and pop (bad) test lea xlat jecxz dec jge rcll or inc lea xor mov aad push ss mov imul jle inc add adc les test negl mov bound arpl jp pop adc push pop and data16 arpl dec pop mov enter scas pop rcr sbb cltd xchg adc xchg stos xchg cs inc aaa or cmp dec add xor ja cmc movsl mov movsl lcall mov mov cld or fiaddl je rclb mov mov andps cmpl popf daa push shrl or cmp jp mov mov mov fwait repnz lret pop dec mov sub mov jecxz int dec ret mov ret lcall imul (bad) test insl inc lods data16 pop cld pop cmpsb inc pop mov mov das mov mov sub jp in ret fmuls cmp jle (bad) jg in lods adc or test add das sbb js (bad) push jl fnstcw push jp jmp mov xor inc jmp in daa adc push or int out and (bad) mov mov jo mov xchg (bad) jo je sbb lret add or xchg movsb jl das insb cmovl cmp sti scas loope call jl sbb or or hlt pushfw aam add and shrl cli or sbb lods (bad) fsub xchg xchg xchg je,pt test and sub cmp push cmpsl in out sub cmpsl (bad) mov push cmpsb js jne nop mov push test lds jl insb icebp dec sub mov sbb mov fs mov lock dec mov dec (bad) dec repz arpl stos or push adc lahf inc cwtl mov add mov pop les or lods add mov mov mov test lea jle in data16 sbb js ds push lods mov movsl or das cmc nop movsl lret ljmp je sub mov shrb lahf push sub sbb mov or mov pop scas (bad) push mov gs imul test add cmpsl fisubr mov mov add icebp dec movl add push mov pop mov or jne out sbb jo lods fsubl (bad) fidivrl xchg or pushf arpl test aad shrl jo stc inc sbb mov jge jns jl mov (bad) jle inc jecxz in lds inc mov jb (bad) (bad) dec mov push add fadds insl arpl xor negl inc call adc ret xchg adcl test jecxz lret cs lds stos ficomp mov mov mov rcl loope jmp add inc or cwtl dec (bad) testl scas mov dec adc fisubl sbb and add jmp mov lret dec inc mov cmp test (bad) xchg mov push adc push adc mov out pop in lock mul jg daa pop sahf cwtl inc adc add xchg daa in mov sti pop push mov mov lock push push stos sti jmp mov xchg cmc into imul xor mov test jl inc mov mov pop movsl aas cmp lods push sub xchg and lahf mov and push das aad loopne (bad) stos dec shrl loopne mov cwtl aad mov aaa in dec imul outsl iret mov mov addr16 mov mov data16 and test add inc jnp mov sahf cmp in jae cmp jp cli jg je cs sub lret add ss mov pushf jg bound dec daa bound mov std (bad) aaa pop push arpl adc mov out movsl jo xchg add je orl mov mov test dec jmp mov test jbe jno movsl xchg cmp or stos dec xchg mov adc dec loope add (bad) and test in rcr ret push push and dec sbb clc lcall je push leave not or or xorl xor outsl sahf int mov sub loope push pop mov imul (bad) call aas outsl jno outsb scas push push mull scas mov add pop push mov and dec cmpb pop add sbbl pushl mov cmpsl cld mov (bad) mov inc lods push cs and mov dec mov sbb sub movb jle and lods loop cld push mov xchg jecxz add push cs jp (bad) pop sub dec lea lods xor rorb xor pop mov enter xlat push or jge xor or cmp and mov mov push adc fadds lcall lods add mov xor cmp ficompl mov (bad) mov loopne das add test bound mov dec cld inc jno cltd lods leave les pushf mov add dec jb es (bad) sub mov cmpsl dec outsb lahf mov in push insl fs imul inc lcall pop shlb jg dec jae dec loopne lea repz data16 out in xchg push je lahf push data16 add sub xor jnp cwtl cmp jl dec scas das pop and push mov pop jbe adc dec dec js cmpb dec daa data16 xchg xchg sub or jle js repnz cmc (bad) dec cs mov add or or fidivrl (bad) (bad) shrl jo enter test cmovp lea pop ficoml hlt stos lock imul sub jle xchg jnp mov aad ret mov push inc or sbb pop cmp lea (bad) repz push cmc inc in and push cltd mov jne push jle,pn shrb movsb xchg ds scas stc mov dec rcll cmp dec mov cmp sub or jmp xchg les fnstcw leave ss leave xchg js xor push insb addr16 xor stos pushf mov jae adc mov data16 orl jmp adc pop mov add cltd sub pcmpgtw sbb cwtl mov int pop pop jecxz imul loop lds jno fiadd jmp jle inc and es sbb lret add jmp add call push (bad) cmp sub incl mov lahf push xchg movsb sbb add leave add (bad) (bad) leave pop or ret sub (bad) sbb sti mov cmp or or jmp stos rep out sub outsl mov loope mov sub or and fist pop xor mov pop jbe jecxz mov jb pop mov mov (bad) lret les push dec insb test dec ja mov sbb iret aam jle je mov jge adc adc hlt inc sbb shlb mov enter xchg test lods outsb inc add sbb dec xchg test das mov jnp test push mov inc andl stos pop mov fs push or data16 inc cltd and dec loopne roll sbb mov xchg xchg mov fisttpll icebp lahf pop mov outsb add add scas aas popa inc js or jp,pn fsts loop xlat aad test in in jge mov stc mov (bad) xor cmp test mov dec inc test daa pusha sbb jp pusha jo dec lret add mov push sub xchg andl adc xchg xlat int3 mov add add sti push inc push mov addr16 sub dec fst enter in movsl loop clc shr lahf push jae jmp jae xchg in aam je cmp mov popa or je (bad) das push cmp and fs dec dec lahf rep test mov sub test sub test in pop lds or out and sahf lcall xchg outsl clc mov stos aad inc mov adc lahf pop lret (bad) mov int in xor lret add (bad) push in and dec test jg jg scas scas fbld or jne insw pop xchg push (bad) ss imul mov cmc add loop fbstp std orb or pop mov jbe add cmpsb dec add dec cld xchg (bad) and data16 in daa inc xchg aam aam mov jnp cmpsl push xchg mov add mov mov mov inc or inc pop dec mov inc dec mov fnstsw fmull clc repz test data16 dec xchg sub aad js mov jg (bad) iret in pop pop inc inc mov sahf das int3 imul xor jg add add cmp bound mov add push xor sar vorps pop lods push mov loope mov (bad) (bad) pop dec test in mov ret pop int fldl dec mov fisttpl pop sub pop mov nop xchg xor push (bad) out inc xchg push xchg jg gs sahf orl or mov jb (bad) in fdivrl inc (bad) test mov mov add add adc (bad) (bad) or aas aaa test dec scas jne ss inc mov add ret mov test jne gs call mov outsl mov dec pop mov inc out fdivs scas in (bad) das loop add dec add add shr mov dec test xchg push or push ja aad inc xchg push dec lahf test lret inc cld push loop nop sarb rolb jae stos adc xchg int3 (bad) cmpsl inc repz push push mov mov test mov out or dec pop xorb mov dec in sub test outsl and mov pop int3 cwtl add mov out repz mov jo aam inc lods cmp xchg xchg mov mov pop push pushf mov loop in push dec dec sbb jnp in sbb pop das sahf and pusha dec mov repnz pop or rolb in or xchg push mov adc fcoml test pop dec xor mov roll sarb mov push popf xchg scas push hlt test jbe mov lock mov push xchg popf jbe mov aam (bad) mov lea jle lret in lea movsl test in dec add cmp jl xchg dec xor xor int cmp sbb mov xchg add (bad) adc mov inc mov push scas into lods (bad) int fnstcw jnp or push pop mov cmp and fisttpl add sbb loopne sub xchg scas push add mov cmpsb xchg mov mov repnz cmp inc mov popf fbstp imul push xchg mov les out mov mov (bad) mov cmp daa mov xchg dec lods inc test testl repnz daa (bad) jbe pop jno mov in jp daa ljmp test popf ja adcb jecxz test mov mov add stos stos sarl push mov sahf in jl out cmp jg jmp pop pop cltd xchg fisttpll data16 jge clc or fildl mov inc jnp ja xlat jnp sub out push adc adc data16 lahf push mov fxam cmp pusha sbb into dec xor push nop ja leave jno sbb inc ds stos (bad) or xchg rolb xor into mov pop lcall add arpl mov jno mov inc push cltd enter inc dec cmp cmp mov jge add dec cmc dec jns cmp cmpsb add and inc add xchg cli pop (bad) or sub fs jno mov int3 dec dec outsb pop xchg jle xchg push mov fcomps mov lret jo push inc repz or roll punpckhdq cmpsb mov (bad) dec (bad) cld into sub or enter test mov push fidivl lds pop lcall dec outsb ret scas adc add mov aaa push enter das mov jbe mov in sbb jp sbb xchg loopne fdivrl jo xchg sub jnp fsubl cwtl arpl add inc iret in icebp pop add sub stos xchg mov mov dec in push imul inc mov fstpl std jne xchg sbb addb daa pop cld mov push lahf or mov sarb lahf fidivr into mov or aam mov push mov xor jnp mov jns loop mov cmp adc inc scas aas lods lea mov xchg push cmpsb pop mov mov popf push lods in pop stos daa and into sahf jnp cs data16 cmpsb ljmp outsb js xorb lods mov (bad) dec mov pop mov xchg add out leave push mov outsl jno loop dec test in or test push xchg jbe jne mov bound ror popa pop jnp mov in fs cmp jo (bad) (bad) (bad) jecxz stos mull cmp jmp in stos out arpl inc jecxz xchg mov xor mov std add mov xchg jns cwtl mov mov jbe jmp jbe and paddw test pop xor jbe inc or roll jmp adc mov or (bad) hlt or in scas int3 or jae (bad) shrb dec into inc into jne scas std test iret cmp inc jge dec test cmpsb or pop roll outsl (bad) dec sti out pushf lea (bad) mov (bad) lea fstpt mov dec lea movsl mov sarb mov mov mov sub jns mov jo lret jae les or add cmp lds xor sbb adc iret cld mov mov xchg (bad) nop add (bad) aam js sub ljmp (bad) mov test nop and sub push imul stos mov dec jle pushf jns and shrl enter lcall xchg jns jge in les into sbb xchg roll jnp addl cmpsb jg or addr16 pop inc mov mov xor dec movsl lock iret dec mov fs or xchg dec (bad) jnp push int mov inc xchg lret cmp scas cld aad les dec mov push inc jno nop mov (bad) add mov insb fs pop cld mov mov jbe jecxz push into inc dec fiadd aaa pushf lret or push xchg jge pop jle push lcall xchg mov mov dec dec popf movsl (bad) mov pop iret loop push jmp mov push mov (bad) aam jns lret or sbb mov pop in pop fs sahf dec add xor mov push mov inc int3 fidiv in sub fwait out xchg jecxz pop lahf xchg mov jnp inc loopne daa pop cmpsl fs cmpsl data16 iret cmp cmp mov jmp pop dec dec jecxz xchg xor pop jae pushf cmpsb idivl jmp addr16 lret mov add in mov mov pop add pop cld mov add cmpsb jg and mov cld (bad) jle (bad) in push (bad) lods add mov cli cmpsb pop hlt cmp fwait mov mov dec insl mov xor mov js and inc dec pop outsb mov add xchg int3 push push and jge mov test mov bound mov (bad) jle fwait pop adc ror xchg xchg gs scas and scas pop outsb xchg or xor pop xor adcl (bad) push mov dec mov mov xchg dec push xchg push mov push xor xchg sub add and push pushf add push xchg pusha pop dec lret pop jbe sti cmc mov push push js adc jle mov je mov mov jne push adc lea xlat iret sub rol je rol inc xchg dec scas dec in jnp mov mov xchg in lea add dec mov into stos inc std dec ja aad xor (bad) int3 js xor xor mov mov xchg dec push dec data16 dec jge add ja add mov (bad) or cmpl mov add mov mov lods in movsb pusha rcrl inc push in bound lods or dec mov xchg mov mov sbb pusha js push sub inc movsb in movsl pop int ret push jp cmpsb hlt mov push dec (bad) dec dec pop mov xlat push cmc or sub push jb jnp repnz xchg add sbb xchg mov xor or mov jo push add iret push je and imul add in jno push imulb imul mov in mov movsl sub dec or dec inc (bad) or leave cmp aam or mov pushf jns mov lods fwait into (bad) sub push mov ds scas outsb stos mov in inc in test hlt jae mov into mov add cmc mov jle mov fxch mov in mov sarl and daa enter jae aam fisubr xchg push push mov or xchg push or dec jno mov bound xchg ret test xchg aam jnp adc aad iret xor pop fwait bound push cmpsl jl jb mov mov flds outsb cmp push das sbb mov sbb ds ret aad pushf mov movsb inc add int3 ljmp (bad) or sub rolb adc in jbe notl fldl (bad) dec jnp lcall inc fisttpll pop hlt dec dec cmp jp cmpsl mov and fnstsw and iret pushf lods mov push mov test js lods inc out or daa fstp jp stos (bad) push mov fcompp icebp cmp pop or mov or xchg pop mov push (bad) test shrl cmp inc push flds loope and dec (bad) shl or lea iret pop mov outsb pop fadds (bad) cli popa jmp dec jmp jmp (bad) aam data16 dec cmp into icebp add bound sbb in and bound mov or (bad) and mov and fnsave rcrl cli out lods jecxz out loop mov orl scas or mov and push sub xchg mov fimul icebp stos into pop dec rcrb (bad) mov int lcall inc sbb in movsb fsubrl xchg sbb stos or cmpsb xchg add sub icebp pop stos ror xchg stos xchg sub (bad) addb into mov mov iret lahf rcll aas iret lds (bad) mov xlat sub fnstenv mov js mov mov popa cmp sahf cmpsl iret sub push adc cmc stc hlt ffreep or clc push dec loopne or pop pop pusha in ss cmp or fldt jmp mov and lods loop sbb popf xchg inc (bad) mov scas add lods pop inc mov sbb mov jmp pop push xchg out inc and push and sub add mov sti mov xchg dec outsb movsb xor mov push sub fadd fsub pop insb andl fwait dec jnp ja gs mov fisttpl mov jg,pt fdivl inc mov push mov (bad) xchg jne popf cwtl mov and push (bad) lea (bad) fdivrl sub cmp jne add lea test mov dec out and jle xchg cmp adc jno jle ror loop clc jge test mov ss mov aam fmuls dec adc xchg mov xchg xor mul stc lret or fisttpl ss cli adc in fstl pop movsb adc mov pop mov das dec xchg (bad) movsb loop sub mov ret and movsb xchg stos fnstsw test movzwl cld hlt mov js mov push mov mov or cmp xchg stos cmp lret adc movsb mov push sbb mov xor dec movsb pop inc cmc adcb addl fbld sti push adc leave adc insl mov shrl cmp test pop popf push iret gs sbbb lret lea cmc mov rcll cmpb aam popf arpl lds sub testl nop adc mov insl test sbb xor pusha jae outsl jb outsl lcall (bad) push inc pop sub dec add in ljmp xchg mov add orl cmp mov (bad) out mov push mov rcrl aaa (bad) (bad) inc pop sbb xchg inc sahf sbb sub ret (bad) add outsl cmp pop mov cmp mov in leave mov mov scas into cwtl or add lret adc ret adc pop movsb adcl in inc test scas add ret pop rolb (bad) cmp jge sbb lods sub lods flds lock or inc in into fsubrl es lcall cwtl inc mov jns jl pop fxch xor ja sbb jbe inc (bad) jge std aaa clc jle stos test push dec push aaa cs aad mov test pop orb adc jmp mov popf loopne std loop xchg xchg rcrl outsl jne loope pop in mov ljmp sahf out enter jl cmovne test push mov push push fisubr sarb cmp movsl (bad) loopne dec popf or fstl std push push in test pop orl adc imul adc rcll icebp shlb lds xor or (bad) jae mov sarl mov (bad) or lods test lea mov bnd dec mov mov fchs (bad) jl shrl fstps orl stos psubsw push aad sti lret in cmpsl jno pop push test xchg adc inc or add imul in bound bound ja xorb mov paddusb inc mov jmp sub push dec ret add fisttpl cwtl dec inc aam add pop adc mov xchg stc pop inc sbb stos dec arpl call adc fnstcw cs xchg (bad) rcrb pop int int3 fs lahf push scas sbbl add lea ja dec pop jb mov movsb test lret mov jle mov loop sbb mov dec shrd sbb and jmp inc cmp pop mov mov fdivs ret dec in mov in cmp mov jg mov stc push push pop add into mov pop test js imul xor ret test movsb leave lea dec sbb dec xor adc cltd or addr16 loopne push ss xor mov test jns xchg out cmp je xchg or mov mov fwait xlat push jge cmp out pop mov xchg out out mov daa mov mov sbb hlt mov add data16 push add push sarl sbb dec lds or imul mov mov popf mov (bad) enter lods adc xlat scas fbstp or or inc into loop hlt adc jb pop inc pusha mov lods mov lea sub icebp push out clc push lahf in (bad) or push (bad) out xchg mov cmpsb dec std nop fucom aam pop mov add movsl and icebp icebp les dec push xor mov int sub add mov or sbb pushf inc push add jl sub mov xor stc and test test movsl pop and jns js sarl mov inc aad dec scas movb sbb sti jge mov mov aaa push leave pop lcall mov enter dec dec mov pushl adc mov aam std sub push int3 in mov xchg cmpsb and (bad) xchg push xor jbe je and js mov fiadd lret push sub jecxz aas ffree or cmp ja mov push sbb cltd push sub mov xchg scas fstpt lods bound mov mov sbb push shrb mov and das dec mov std ss (bad) iret scas fnsave mov iret adc lcall and mov out jne dec rclb jmp outsb enter jle sbb xchg mov aaa orl mov jmp (bad) roll mov mov push stos (bad) mov aaa in ret mov inc cmc sub loopne in push mov sti xor scas in sti push jae lods test pop mov iret aaa jne sub or xchg mov mov mov stc dec cmp cs pop test cltd aad lods pop cmpsl inc int3 pop into imull data16 mov aad add cmp mov jo add addl mov jbe pushf in cmpsl jne push pop mov (bad) pop dec imul or sahf fnstcw sub dec (bad) mov shlb sub movsb add lret mov sub mov mov icebp push lods mov cmp scas js and in push mov lods repnz loop sub daa fnop or (bad) aad inc dec and fidivl xlat jecxz (bad) rolb movsb test or inc and mov xor sti or fs pushf scas (bad) sub or xor popf dec (bad) or fldcw in sub jbe (bad) mov in xor (bad) std mov jae insl stos dec add push lds mov push or mov in out les sub or cmp (bad) mov mov xchg (bad) push fstpl mov sbb sbb cltd jle lahf (bad) stos push xchg add push mov sub add loop inc sbb fwait jne jp test out pushl clc lods jl in pop in push xchg lods xor inc inc xor pop mov hlt mov add sbb sahf out mov cmpsb mov fdivrs mov add stc out in in mov nop int arpl adc jp test add push int add das mov add (bad) cmpsb or mov dec repz popl or imul rol lods xchg mov mov jnp shrl mov mov lret dec fdivrl pop mov (bad) cmpsl sahf clc test scas pop popa xor fiaddl xchg js lods test mov push mov mov cmp mov jno out mov jno and cmp cmp pushf and imul mov scas mov mov mov (bad) je std cmpsl or cs pop sahf imulb jo popf pop mov xchg jno mov inc or dec mov jb push jp sub stos xorb adc scas mov mov (bad) ja cmpb movsl stos repnz loope jg lods gs rclb jo ret mov int3 or inc dec add add xchg mov mov int int3 push ja push cltd mov fwait mov dec push mov pop or or jno and mov test (bad) bound mov les ja xor or fnstenv ret mov roll mov dec lret xchg and loope outsb sub cli and sbb (bad) lock push inc push dec mov scas (bad) dec push lea pop push in lahf (bad) xchg insl mov or adc fcmovbe sub jge dec call icebp repz pop mov out jnp add sarl incb pushl movl jbe test lods insb pop ljmp pop sub jl movsl pop ds stc adc add mov sub and jp cmp mov adc jae adc imul out sti scas fmulp in pop mov lcall sub inc pop mov push lods loop enter cmp mov in mov and jns cmp insb pop in clc or or mov jmp lods test cld mov movsb aad mov lds mov or imul xchg lahf sub cmpsl fwait mov sub adc in mov aaa int lret loop dec add icebp jecxz into push cmpsb sbb jmp pop loope inc (bad) dec cmp xor jl cmpsl cltd mov inc je ror mov cld mov add add in mov adc (bad) test lea jle lock add stos in xchg mov and out fsub mov mov pop dec cmpl push or dec psubsw test sub jg jns or inc adc lahf ret (bad) daa leave imul xchg dec pop push outsl lret jmp sbb jg fnsave pop movsl jnp aad add xchg fstp xchg cld (bad) cld fwait insb in (bad) jmp movaps insb mov (bad) test pop mov inc in (bad) jle mov orl inc xchg leave enter lds mov (bad) outsb dec fadds sub test inc lods sub dec xchg lods sub xchg out mov (bad) fstpl push je in cmpsl dec mov push pop push dec push stos or dec (bad) lea push cwtl jle xchg cmpsb dec mov scas mov dec or or push aam fmull jbe inc imul jl mov rcl aaa gs jg mov (bad) aam scas fnstcw add (bad) sub test mov jle pop add xchg mov mov pushf cmp push notl mov or jmp fdivrl mov add sti lods mov or out cwtl xor aam mov aad inc pop addl sub call in lods jg fdiv sahf mov jmp in jae test (bad) mov inc aam sbb xchg inc push out mov (bad) ja mov cli pop adc or test or or pop rcrb sarl rclb dec sub jle jb push es add and or je mov cmpsl loope inc adc insb sbb mov inc xchg jge mov mov jae stos (bad) sub fwait sub scas sahf add test sbb mov lret popf mov stos cmp lcall pop sub outsb das loop mov dec jl mov mov into ss jge (bad) cmp push add lahf push mov test leave push scas cmp outsl movsb (bad) or les insb aas stos push cld lea fildl pushf mov (bad) jno xlat add data16 adc int3 test push xchg inc xchg ror sahf lock add movb sbb (bad) and dec mov int mov lret push inc movsl or mov outsl lret aad mov sarl mov in (bad) fsubrs lock xor fsubs leave fsubl call push outsb es add mov enter or mov call mov mov jl and mov in pusha jne or fimul push int3 push (bad) lds inc jle add jae icebp and mov int dec xchg add xchg inc jp mov dec and push (bad) int3 inc in adc jle fldt mov jmp or lods cmpl push xchg pop push jo or add cmpsl adc aas popa xor mov repz xchg (bad) data16 cmp scas std pop sub mov mov lret enter xor jmp jg adcl mov rol xor lea jne lahf cmpsb mov jl fdivr pop jmp mov sbb cmpsl mov pop mov mov jle lahf mov sti in mov out dec xchg je pop mov inc inc lahf icebp cld adc int mov in stos test pop cmp mov mov dec jle sub inc cmp dec orl mov jecxz jmp sbb (bad) xchg jae adc mov cld test repz push scas lret int3 push mov inc jmp sbb lret in adcl mov xchg xchg ret mov cmpsb outsl loop cmp lahf fnstcw push or or movb jecxz xchg mov les rclb cmp (bad) (bad) and mov jp mov fstp add mov add mov in test mov cli mov jge cltd test jne sub mov cltd pop jge dec mov mov cmpsl inc mov pop stos jge pop sarl les mov addl inc push loope jae mov xor stc aad stc movsb push les vmwrite stc stc xchg dec xor test faddl push aas add push dec repz sub (bad) std je xchg mov scas mull arpl xlat lret in repz cmp mov jns sbb xchg xor inc movsb (bad) adc in (bad) xor repnz imul loop jb add ret pop lcall rorb popf sbb xor (bad) rcr rcrl mov sbb mov leave lods jp jmp ss push loop stc cltd xchg and lahf aaa sub loopne xchg push dec cmpl jl or mov pusha pop xchg (bad) push or mov imul mov fldcw out into mov dec stc mov inc mov push aad in lock jns push (bad) loopne inc xchg popf mov add dec test pusha push xor or dec sbb jo in jno dec je or stc pop jl clc mov or jg jbe lods add mov pop mov lea roll adc xchg mov jmp inc cmpsl stc mov cmp xor das sub fldl dec into push pop inc mov out inc dec (bad) dec cmp mov push leave (bad) xor icebp lds jl or push loop cs mov cmp adc mov data16 pop test push inc push les psubusb frstor (bad) sub mov sti inc ja xchg mov cld rolb subl fnstsw pop sub aas push adc lods add in imul shrb and jnp fisttp inc popf dec data16 cmp dec es (bad) fs das jne test xor adc cli nop jmp mov pushf cmp or sbb mov sbb mov xor dec pop lods push add adc add push pop xchg mov addb lock pop push dec scas ret mov xor xchg into insb xor out push adc sbb enter popa mov sahf rcll push sub inc (bad) mov iret data16 cwtl lea jge stos push sahf rolb mov dec in or dec xchg xor push test lahf dec xchg mov fimull push dec add or push fnstcw mov aas mov jae je mov data16 bsr movsl push pop cld lret mov pop (bad) les inc aaa arpl mov push mov xchg mov in fldt add nop jns dec fwait cmpsb push stos mov jg lods mov stc daa shrb and dec push mov or test shrb sbb dec in and loopne mov stos lret mov in jb pushf fcmove mov pop lds sub outsl sbb jns xchg push mov (bad) test frstor adc pushf lds mov or push call out dec insl jne sbb pop jge mov pop mov daa fisttpl adc xchg mov mov loop cmpsb lods mov or rorl mov sub cmpsb cld xchg inc sarl pushf inc inc push std stc push jg in imul negl cmp jo lret pop inc push inc leave fst lods mov add subl mov jb (bad) mov push xchg add ja cmpb aas or mov push mov mov jno jl mov lret int3 (bad) jl jle xchg inc add and popa or pushf jae movsl test sbb mov push or jle or lock jge mov aam cld imul pop adc push scas ds (bad) adc xchg pop jnp adc scas std xchg push out (bad) push dec and imul push dec xor imul add mov pop cmp inc push jns jns pop add mov je outsl add stos cltd gs push ds jne or jno push cs xor insb sub ljmp ljmp outsl pop rol jb or scas or pop loop fcomps pop (bad) dec xchg scas cmp in inc loop jnp ror pop (bad) insl call jg shrb pop inc push jno leave lods sub ret rolb pop test pop add mov ja push jb clc arpl cmpsb push loopne jg mov cmc inc pop pop push (bad) xor pop (bad) cmp into fwait (bad) call aam pop aam addr16 fisub push dec shrb mov insb add cmp push (bad) jecxz or mov pop mov pop std xchg pushf sti in lea mov add pop out sub arpl iret or sbb emms jne mov pushf test mov mov cmpl stos push clc mov stos add dec inc sahf push sbb xchg (bad) roll cmp mov adc pop scas cs pop mov jl mov jp jb add cwtl adc les add and in fisttpl and iret mov in arpl js adc fnstsw ljmp aas das mull ljmp push inc jg std rcrb into stos pop mov xchg push xchg xchg jecxz mov dec insl mov loopne aaa push cmp pusha push xchg insl xorl mov or xchg pop lret jno pop test mov aam xor mov mov jnp mov out lret pop lock xor pop lret jo lea out and push push pop mov jb add fmuls (bad) cld add mov dec cmp push stos (bad) jle cmc or and test jns out (bad) ja mov negl mov outsl pop enter out xor int pushf repnz (bad) in loope imul sub (bad) mov mov pop pop xchg orl adcl lret scas insl xchg lret ljmp pop jg imul mov sbb imul pop mov mov pop mov jp xlat lds dec lea aad fwait rorl pop add jg in das lcall mov orl ss aaa fsubl or or fsubp mov dec int3 daa ss fwait cmc or out test xchg aam or mov add jl xchg inc js dec mov je stos adcb fdivrl mov in sub stos dec adc decl lock fcoml push or mov sbb loop inc imul mov add fs or fdivrs jecxz incb push loop sbb rorb jecxz imul enter lahf mov xor fsubl jnp sbb jl push mov inc pop les (bad) in jmp sub add mov es add loope insl adc sub inc es das jp out ds or sahf push pop scas imul les test in push xor jnp sahf mov dec or xchg es or jle sar xlat push jg or pop mov mov aad ss or ret roll jnp test dec pop loop cmc ds scas aam mov aaa sub in push fnstsw cmp mov xor add nop xchg sbb push cmp mov or in (bad) sbb mov jnp adc cmpsb or xor add ds outsb js jmp loope loope inc negl mov sbb mov jns pushf fidivrl loop mov dec jns or pop inc mov xchg idivb lds jns mov ss sub xor jmp dec pop add aaa push jg adc pop out mov mov es sub pop sub push mov stos xor mov lcall mov pop insl aad jmp subl addr16 jg les fs les mov mov pop fiadd idivb fldl sti sub push lods inc and mov (bad) push jg cmp xor std push cmp lahf sbb stos ret and push jg push inc aad mov test jg push push cmpsb shlb in aaa arpl rorb inc scas faddl int3 fisubr mov in jne (bad) fnstsw icebp adc jnp push push mov xchg jns loope push lea add daa cltd lock repnz mov fiaddl xchg mov stos xchg sbbl mov add test xchg mov sbb sbbl mov std push stos adc (bad) adc fcmovbe xlat mov ljmp pop lods shrb lahf inc xor push inc cmpsl imul scas sti jmp dec mov jl and lock mov (bad) xor (bad) in test in push dec pop push ror cmp lea aad lods sti dec mov mov jbe mov pop sub stos mov je jp (bad) jnp paddw ja repnz or in jo pop xchg outsl scas adc xor mov mov mov or loop loopne cmp jno lds rorb fildl cmpsw push mov cmpsb xor leave (bad) mov in mov mov mov inc (bad) push add jecxz push cmpsb xchg inc stos xor mov inc (bad) aam mov ss xchg inc sahf sub fwait mov ljmp fwait lret add add mov (bad) mov jp xchg ficomp xchg jle pop adc sbb mov hlt pop mov loop mov loopne xor add mov push pop push (bad) mov in push insl mov sub (bad) mov inc jae in xchg dec aaa iret jbe or std xchg ret pop icebp add mov js jge aam xchg test mov (bad) dec mov xor xchg cmc mov pusha mov idiv inc push mov mov mov cmp mov cmp dec mov mov adc loop into dec (bad) mov or dec fnsave dec mov inc mov pop mov inc daa loop fbstp out hlt or dec lea fwait push mov push pusha scas hlt sub outsl iret lret inc mov stos das rcll fwait test js rorb mov dec add lock push mov mov jle mov cmc lods stos mov loop xor jle notl adc dec cmpsb mov xchg in (bad) or inc cld cmpsb jmp jmp outsb mov addl cltd or fadd jle jae jl enter add dec cli mov fnstsw mov pushf cwtl in mov lods xchg in lea mov dec fiadd movsb cmp or jle mov add xchg lret cmpsl adc in into inc test ret add adc sahf pop dec jle arpl (bad) ss js jle,pt cmp into inc mov mov mov pop mov jb sub lahf test inc pop pop push xor dec es dec (bad) and cwtl push jge xor push ret mov addl lcall inc sub int jae inc ja js sub inc mov je mov mov fisubl out loope dec stc xchg add xchg test (bad) ret stos adc xchg jmp mov sahf sbb and cwtl je ret push mov shl mov test arpl mov insl movsb lcall jp iret idivb jle add and lock (bad) push inc lods inc add inc add mov mov and lods push inc ss and lret scas mov bound dec xor nop aam cmp xor adc or pop jb fldenv in mov push pop int pop andl out lahf lock mov or mov mov into push fcmovu mov or cmp lods icebp add bound jge xchg push sahf sahf fldl xchg mov inc mov aad aam lods mov mov js aas (bad) or dec sub and xchg cmpsb pop jns xchg lret cwtl mov dec mov test xchg lret mov mov stos mov pop adc sub mov std mov (bad) push mov sub data16 cwtl mov push mov fstps andl lods sahf mov dec mov cli loope sbb push in jae rcrl sbb push je fmul push sbb push push sti cmpb int3 inc lret lods jo sbbl pop mov or sbb jae xchg dec test mov add xchg pusha xchg mov pop jo sahf scas rolb mov dec adcl push outsb (bad) jp mov in insb call mov xchg divb cli inc ss ss xchg cwtl (bad) dec dec push dec adc int (bad) mov (bad) cld mov xchg aad nop or mov aaa leave mov es inc mov cmc aaa mov cmp shlb xor mov push negl dec xor not fstpt jg neg sub mov dec sub dec pop dec fimul xchg push jge lds cli in mov stos repnz inc mov nop mov xchg (bad) add lret aaa add outsl cmp fisubl cmp loope lahf (bad) mov mov repz jns in shr ret js stos push (bad) repz scas or incl cwtl mov (bad) imull push push xchg or jge cmp or jmp and pop mov out out daa adcl inc sub enter test or mov enter (bad) stc leave dec lret or in stos fstpt dec push incb mov add ss imul subb dec or test jbe cld xorl arpl lods (bad) in xor lods mov jl daa jns push push fs pop iret int3 sub or shl push scas and (bad) pop xchg nop dec cmp and push cmp cmp cmp jl mov dec dec in xchg stos lret ss cld mov xchg xchg bound mov pop test ret push mov or dec clc mov jns mov mov hlt push rorl lds mov mov mov adc mov (bad) (bad) sub lods xchg mov mov dec sbb push push jb roll or or xchg push fsubrl pop test test in test test pop movsb inc xchg jnp pop jbe test mov push push inc or inc cltd and cli jbe cmp jmp xlat mov test enter push cmp jle push into mov icebp jl outsb fimull push sub (bad) js loop xchg insl sahf add outsb sub and dec xor inc stos or test mov xchg decb (bad) mov push cmp and inc out fisubrl mov rcrb jbe cmp mov and and lcall insl mov ja pop sbb and add push sbb mov pcmpeqb cld push push (bad) mov mov stc dec mov stos jecxz sub sbbl jb pusha sarb cmp test pop mov lret mov les (bad) dec aad or cwtl in lea in mov xchg movsb fnstcw into sbb sub xchg xor inc pop loopne dec outsl bound cld nop stos and dec add rcrb mov popf mov inc imul xchg adc lds das or into sahf adc pusha cmp inc add shrl inc fwait mov sbb fistpl push popf cs or xor lods mov inc in xor inc outsb xchg loop mov xchg dec mov adc inc add and movsl jp loop and lods push aaa mov mov xchg pushw dec pop cwtl popf mov push in negl pop dec pop lock xchg scas repnz mov xor sub jo outsb push and mov (bad) lahf xchg loopne or xchg mov cmp jg add in stos (bad) add sub adc xor pop adcl cmp ja adc lods mov jmp lcall mov jo lcall cmpsl into std sub sahf mov jmp dec mov xchg scas cli (bad) fidivl mov insb mov fwait stos and and clc xchg mov sarl stos sub test sbb arpl mov in movsb jmp jge xchg cmp iret inc inc lcall data16 sbb adc sahf jns push cmp xchg loop stos mov mov pop cwtl fs xor push (bad) roll test loope les lea sahf dec lcall push arpl sbb insb pop mov por dec (bad) sub or push or fxch jns das sbb pop and adc cmp xchg pop lds in jb add inc xor stos jl pop inc lret (bad) mov and inc mov push add jl test imul test pop mov out jecxz decb icebp cmp movsb loopne pop popf xchg dec mov sbbb mov and in addr16 cli cwtl movsl mov add fwait loop stos insl jge xor fildll and xchg sti int3 xchg aam pop cmc je lret add cld test in inc sub dec cwtl into or pusha jns xchg mov test lret scas outsl icebp inc dec xchg inc xchg enter in ja push rolb lods inc adc jnp xchg xchg pop mov jns pop xchg pop inc test ret xlat fimul pop je xor in fiaddl aam mov pop jnp jne sahf sub lcall loop xor in xchg mov lret and pop mov inc lret inc mov mov stos mov lahf xchg pop aas divb test js loope mov xor xor or push xchg mov sub lock add ret dec pop cmpb loop test movsb mov cltd pop (bad) pop mov fnstenv scas push movsb cmpsl mov bnd xchg mov out xchg dec mov dec subb jle cli push adc loop xor inc mov mov lea mov cwtl and xchg stc ficom push loope int3 scas pop sub mov mov stos or mov pop out pop pop add (bad) mov sub xchg (bad) iret lods xor inc mov or add inc push xchg jns out mov cmp popf jo lea jmp sbbl cli leave add movsb stos mov add adc in fiaddl dec fistpl push popl mov aas inc mov cmc repnz gs mov mov cld mov inc clc test mov (bad) mov insb out aas icebp cmp or pop push nop dec stos or xchg dec push shll pop dec add or in pusha fildl xchg fcoml cmp inc cmp and scas mov cmp push in cltd push out and dec pop ljmp cmpsb cs fs mov lret and dec fnstcw cmc sarb mov pusha dec cmpsb or dec aaa repz push xor dec jmp mov add inc bnd cmp (bad) mov leave dec clc int3 cli jb es in mulb lcall das add inc shl lock sub mov pop mov lea jmp jge nop cmp inc lret adc mov daa popf in push fcmovnbe ret popl push mov loopne cwtl loopne in or mov ret sub imulb pop push mov mov mov leave cmp in aad sarb jbe inc pop movsl push xchg lcall add sub push loope into dec sahf mov jb je clc sar clc (bad) ljmp dec pusha std aam jbe push jnp jle dec dec into inc ljmp push lcall aad out add xor xchg movsl sub jbe push sahf pop scas cmp dec xchg fs shll das and mov test lea push pop mov mov aam fs mov into pop or jle lock scas add inc stos mov mov mov mov mov xchg scas sbb cmp fmul dec (bad) jo imul stos imul nop fcompl cmp sbb cli fldenv pop push xlat xchg sbb cmp test fnsave out mov imul cmpl ret jmp jl,pt push test sub dec mov loop push (bad) cmp cld mov mov stos sub fcoms mov mov sub mov or loop sub idivb pusha (bad) xor pop dec adc fnstsw mov mov sti sub xchg ret loope mov mov mov testb scas mov xlat int3 jge sub push add ja xchg dec sbb sub mov insb lds dec sub inc test mov mov mov loope xchg jnp sbb (bad) out mov pusha sub push outsb mov inc jo fildl in mov (bad) popf add imul add in out insb repz dec jae popf lret mov xchg int3 pop mov mov and mov mov fstpt lgs sub subl xchg js jecxz xor hlt push bound test inc mov into or jne cmpsl test out sbb cmp push test test mov add push test out jle dec inc or into test mov movsl mov stos xchg mov and or cltd sub push (bad) pop add iret dec shlb in xchg jmp adc xchg int cmp and loopne ret cs push (bad) rcll pop push add aad or pop stos inc jp xor pushf jge test inc jbe in mov sbb cmp mov dec pop pop xchg push pop push xchg push lods jle push xor out imul sahf jnp jo rcrb (bad) loope testl in loop xlat stos or ret stc mov cmc pop mov lret xchg roll jne pushl jle jb in pop loop cmp xchg add ret stos sub dec cli loop (bad) mov arpl (bad) jg dec xchg repnz xchg repz cltd pop ds fld lock cmpsl cmp lds adc mov xlat mov pop ret cld (bad) mov xchg mov pop ljmp jns pop call sahf popf inc mov dec jbe std movsl loope mov xchg xorl lock outsb or ss int3 mov (bad) addl mov pop inc fmuls adc mov scas inc nop sbb sub (bad) in imul inc mov sub inc orl mov in pop jp jmp cmp nop xchg aad mov inc sub add int3 mov cmc icebp (bad) mov inc pop inc psraw mov test jae std lcall dec xchg inc dec inc aad jne mov cmp jg movsb cltd jno mov mov sub enter stos dec sub lcall adc lock test das sbb sbb (bad) in xchg mov xchg sub into push push push dec xchg gs jae lahf imul lea push fildll test pop jle jge xor aaa dec or lret mov leave pushf stos jae mov gs mov mov ret or jno test es add ret fidivl das in into cmpb push dec int ud2 and loop and mov push and mov in mov jno push insl push mov jne,pn or mov jae sub jmp jne lods add call and out or test mov jno xorl inc xchg or mov test cmpsb push xor (bad) std dec outsl add xchg cmp xchg lods in add dec int inc dec cmpsb mov lods imul jns pop add or xlat scas inc mov jo,pt (bad) xlat cmc xor cmp bound dec xlat lret and sbb (bad) lods jns dec in jo test and jmp jp loopne push mov insl mov mov lcall mov in push pop lods lahf or xchg push cld inc sbb imul int3 jmp push inc dec sub jl pop mov sbb inc movsl test bound test jae gs dec lcall neg repnz push sahf and test jb mov sahf out jae jne (bad) enter (bad) in mov jae loope mov push mov leave fistpll rolb std jle dec mov xor out inc mov mov inc mov sahf jbe dec mov outsb xchg add mov lods or inc (bad) movsl push or in jle insl mov sahf adc leave test leave daa add xchg or mov xchg insl cmp and movsb add or loop lods mov and xlat movsb ja sbb mov xor or int leave mov std stc or in test push mov scas mov push push bound addb les call fidivr mov xchg jno addl in sub mov lret lods ret pop orl push xchg pushl jnp cmc data16 mov xor rorb pop dec xchg xchg and ss dec cli jmp andl dec mov or pop fiadd iret or jbe cwtl cmp push mov ss call inc sbb cmp repnz push stos add or std pushf les cmp pushf lods out dec stos add cmp push push popf add ja idiv clc test xchg pop out insl fwait adc shrl dec or andw mov jecxz sub (bad) repnz jne push (bad) loope iret movsb inc (bad) jl fidivrl test mov test and stos xchg or inc fcompl add mov xchg jp inc movsb xchg push rolb subl lea mov jbe out addr16 scas lea or ficoml cmp push mov xchg cmp (bad) cmp jno mov sub insl dec subl mov test (bad) sub inc dec pop inc jmp lods sahf loope sbb cli out sub cmp fnstsw inc sbb or mov mov jmp mov dec mov inc in bound add add fdivl inc jle cltd push movsl add cmp addl aam sub roll adc push daa mov cmp mov mov dec es jns cmp es sbb stc jno jae jo (bad) xlat test int dec movb (bad) pop mov or cmp int3 test push in outsb sub mov add sbb mov rorl or jno dec dec mov lods dec inc pop hlt bound fild jle pop lahf inc dec inc clc (bad) scas int js enter mov push jmp fsts ffree sub or inc dec daa fwait ret mov (bad) cld fisttp fcompl aad add shr ss push dec add inc jp dec xchg jbe pushf lret pop notb hlt popa gs push jbe mov xchg inc inc xchg jecxz mov (bad) or pop mov xor adc (bad) lret lahf xchg jmp jnp mov dec pop outsb mov jbe dec cmp inc pop jle pop std mov mov sti pop hlt jbe in aam pop repz pop std lea movsb inc mov mov pop data16 xchg mov lret popf stc cmpsb jae loope call push inc aad ja into mul (bad) push add or das push push or push mov decb sarw in xchg jnp xorl or inc add fldenv imul hlt sbb movsl add dec es inc jge dec cmp in test lret dec or mov shrb imul or aaa push dec jo xchg aam push xchg cmp mov into shrb xorb mov pop mov jno nop or and cmp test inc movsl dec lret enter add push pop inc (bad) jp mov rcll mull push jno dec inc iret jnp sub jb push lea mov add dec mov es std arpl inc cmpsl dec or pop jbe or xchg in dec pop outsl aaa mov lcall dec addr16 xlat ret stos mov mov and sahf (bad) xchg test into hlt mov push test (bad) dec cmpsb fwait pop lods mov mov mov jmp stos mov (bad) xlat mov je test sub das xchg jl lahf adc lahf pop dec (bad) cmpsl (bad) movsl fs mov cmp mov rcl sbb xor cs cmp pop sbb jp lahf add sbb ret push roll decb push jbe xchg test push xchg pop lea mov imul push lea mov mov mov data16 imul test add dec inc or lods or or add xor cmpsb in imull das pop mov and xor (bad) icebp test addl js fnsave test or loop out jae mov jne and add inc sbb fiadd sahf test cs sbb int3 lahf mov cmp or outsl mov pop fnstsw jmp popf jecxz fucomp push xchg inc mov adcl xchg mov out xchg gs in inc scas mov std into or mov fldenv pop loope (bad) mov mov pop sub pop jns sub mov fdivl sbb sub jp xchg pop pushf mov cmc lea lret mov dec fisttpll or jnp rcll dec sbb fisubl xchg mov xchg loop mov fimul xlat sub popf jl mov add repnz mov imul dec lret push xor ret (bad) imul ficoml push scas fldl xchg test fild xchg cmc sub mov mov pop and lret addl or imul cmp push movsl lea cmpsb xchg xchg into mov pop xor mov imul mov cs ret in fisttpl incl push fstpt enter cmp (bad) mov pop mov mov hlt or cmp int3 std mov (bad) xchg pop cs into es add loopne add mov cmc (bad) sub mov xchg scas mov mov xchg dec std push rcr mov inc push orl aaa and js into add push xchg jle fimul mov inc cwtl cli push and inc jae imul jnp lock or lea loop (bad) stos ds test xor inc in andl or popa sti jmp and pop mov add mov mov inc pop mov test das leave mov lret js push enter xor and adcl loop test push insb xchg ror push or int3 je (bad) mov or popf push dec inc cmp add mov xchg rolb dec add jbe inc cli jg cmpsl div inc xor ss outsl dec or aas jle ss rorl outsb sbb mov out jno push imul fucomp add or fadd adc add mov or fist imul sarb mov dec insb xchg push rcll and add ret imul bound mov mov xchg adc dec fcoml imul xlat mov mov or les iret xor push aaa and xchg fistl mov pushl (bad) lret test lahf sbb cmp loop sub xchg add mov sbb lds dec adc xchg xor or or addb daa mov mov add push mov mov mov je jno jle or enter and mov or mov dec sbb mov cmp idivl je jg (bad) lock insl sub cmp lahf movsl adc test push in shll jp mov dec loope push insb test je cmp addl mov sbb test shl xchg sbb pop loop mov addr16 addr16 aad mov (bad) inc mov mov push fistpl dec lea stos xor mov sub sub mov fmulp push lods loop cmp cmp sub pop movsl push sbb dec aam mov and or pop dec mov add jo test dec bound sarb inc negl loope mov lret fildl push mov mov jmp imul lea mov rcrb mov fdivrs ficoml dec lea mov fisub rorb jns push adc cmp adc mov test (bad) add mov push xchg push push xor cld lock rclb int3 sbb mov fnstenv jecxz (bad) jecxz mov test icebp and in movsb dec pop add lods xchg cmpsl jne ret dec jle scas hlt (bad) mov mov mov add test in mov push adc cmpsl in cs cmp adc lock das jb or push fdiv dec test push jle scas dec mov sbbl push and push mov fildl dec mov jp push (bad) inc sub mov mov mov lea shrl jmp xchg xlat add mov std or push dec sub xor mov mov or push cmp mov mov cmp sbb cmp xchg test mov mov lret in aad mov mov out mov and sbb dec test inc adc dec jmp ds (bad) push xchg inc sbb dec mov mov push imul mov pop scas pop mov insb mov ret mov cld stos add repnz add scas mov fistpl fs xchg in les jp aam push push xor mov inc inc or mov fstps jns iret sti sarl leave push dec lret test rcll cld in aam test push xchg fisttpl and aam pop mov pop mov ja lahf lods add or js sbb xchg or or lret cmpl mov push jb into cs xchg mov inc or dec dec lds insb cmp lcall pop dec pop xchg and test cmpl xchg dec cmp mov sbb or mov dec aam cmp lahf je fsubl scas xchg dec cmp xchg add das leave mov nop adc and jl dec loop sti adc (bad) xchg cmpsl or lods adc xor mov js outsb lcall fxch mov (bad) (bad) test pop mov push jge mov fbstp rcrl (bad) mov in mov add push inc jne scas xchg mov lret mov xchg in or cmp arpl vpaddb pop xor adc push push jl xchg jecxz imulb add jno mov push or mov flds xor imulb add pushf (bad) jo mov sbb add jp and ss test fcmovnu inc movsl ret psrlq stos dec (bad) cmpsb jnp flds in jp stos loop or rorb ret mov cmp jns aaa xchg (bad) les std mov or icebp aas dec mov jo and push aaa leave sbb std or dec mov mov aad jg or push lods cmpsb es cli push add push mov xchg imulb (bad) iret in jo dec mov jae sbb lret and test and adc inc in fcomps jo ss push mov pushl das fwait push inc push in ss sbb mov mov mov je aaa jb pop int in inc test jne mov push add mov dec (bad) mov mul fxch sti stos and loopne stos cmp mov cmovo das jae lods jb aas pop aaa fnstsw cwtl je lret mov fs rcll cmpsl in sbb lods lahf mulb int3 mov xchg loope xor ja or lahf aad jg or aam fsts insl jecxz (bad) adc xor lcall into dec sub daa inc sub insb das sarl xor fwait int lcall mov scas dec jmp mov xchg push fsts mov lods sbb (bad) xor pop pop inc rcl insl and dec cmp cmpsl cwtl (bad) jg jle aad or out mov push scas nop ja rcrl jmp addr16 in js mov leave mov cltd cmp loope (bad) and inc push jae mov fstps (bad) pusha sub jae scas jge jp inc fcmove add pop push std mov aaa sub in rcrb idivb rcrb popf or xchg jne mov roll dec dec inc lretw pushf add shr and xchg (bad) cmp jmp jb sbb mov sub sub std add xchg dec (bad) and mov push xor sub leave mov aaa fmull dec test in pop and cmpsl lods nop imul (bad) push add add xchg in xor cli jl fstl sub cmpsl in outsl dec pushf rcrb xchg mov movsl insb inc mov int3 fsts call insb or inc notb cmpsb into xor mov mov bound into push push cmp xorb mov xchg mov sbbb (bad) push push in mull push jle sbb push fistp idivl rcr (bad) cltd fs je xchg inc aad js test jg lds mov push push cmpb mov adc (bad) fistp dec call data16 into mov mov dec inc mov add mov cmpsl stc xchg inc add rcll lcall (bad) fstpl adc int fist test push ja jge lahf sbb push and mov int pusha fldl dec repz dec mov loopne sub mov (bad) lods add les test push daa das add adcl xchg push xor paddsb lods ljmp sahf loope sub test fadds add mov mov mov adc js cs cltd loopne movsb lahf fs cld sub and cmp xchg push aas xchg mov jb jge inc pop orl push scas mov cmc add add in xchg popa push or scas and mov sub pushf jge dec inc jno lcall mov pop push xchg sub xor negb add cld mov mov pop sub add call pop aam in lahf ljmp and xor ficoml or (bad) (bad) fdivs adc repnz cli fnop adc aaa add in mov mov aam jno adcl mov sub outsl and sub mov adc mov xor es xorl lods add movsl add mov mov inc arpl xchg mov mov adc imul cmpsb test sub pop insb lods jle pop dec mov aad xchg sub xchg subl xor lret in imul adc and movsl mov add sub xor or aaa iret jno (bad) mov and xor mov mov dec or and dec xor cmp and push sub add into jne xor aad fist mov ss inc js and add xor popa (bad) mov or cmpsb out loope maskmovq divl outsl loop aaa jecxz das lcall jnp pop incl jne push addr16 jne (bad) rorl lret xor outsw jb mov loop xchg out sub out jmp jns mov aad pop test aad aaa cmp lcall push (bad) mov inc fs test ja adcl cmpsl out jl jnp clc mov mov add xchg pop cmp mov add (bad) or push mov or ds mov mov rcll sahf push jp aam mov sbb xlat dec mov sti or loop call and aad out mov dec pop das (bad) das dec loop mov outsl test gs flds pushf in lock mov adc (bad) scas xchg arpl jb mov xchg inc insb mov mov or push xchg adc ja adc or mov insl mov sub jb mov mov inc mov add xorl adc fs loop push push mov (bad) fst shll lahf jecxz sbb test (bad) out test mov loop sahf scas inc mov mov add clc jns dec mov dec lea cli push mov out mov aad or fucomi (bad) sub (bad) pop cmpsl mov xchg fdivrs lock test loop enter sarl insb inc test adc mov mov loop lea mov jle (bad) push jbe jno xchg (bad) push sbb ds add es mov mov push push popf jo mov (bad) mov sti cwtl mov loop mov cmp scas jmp xchg push add inc lock mov inc xchg inc inc (bad) repnz andl andb mov stos xchg cmpsl js xchg add or jo testb shr lret lods inc stos and notl xor test pop ljmp xor mov jnp or iret ja push mov mov in inc lcall xlat lret out xchg mov sbb xchg ret pop inc mov dec and sub enter in xchg lahf push add test in xchg pop test leave jo and movsl cmpsb mov data16 (bad) mov scas mov dec jle fimul fstpl pop pop pop jg adc add push adc movsb push dec xlat data16 adc imul aam rorb std pop pop repz xchg es lea loop mov mov pop adc les adcl stos jle fist cmc idiv test jecxz stos and xchg in cmpsb or pop and xchg mov aas inc sti sbb vmread in js (bad) cmp (bad) xor test (bad) ja ret fs sbb (bad) cmp out add cmp xchg fwait bnd cltd loopne pop rcr inc mov jmp rcl fwait addl cmp pop sti jno pop outsl dec adc enter insb mov in (bad) movsl mov mov cwtl xchg pop inc stos adc (bad) xchg lods push (bad) jns rcrl jo ja adc (bad) icebp cmp outsl mov dec cli (bad) jl ret sub out adcl pminub insl mov mov dec xchg repnz adc xchg push dec add (bad) jmp xorl fsts inc fs sub lock push jmp pop jns jns dec aaa jl icebp pop push das push xchg xchg xchg xchg or cmpb mov add lock test or xchg add mov test rclb in mov xchg stc add mov and jne mov pop and fstpl iret push xchg cmc inc int popf push sbb add sbb add mov insl inc popf cmp mov stos test push or mov loop and add sub test jge xchg or adc cmpsl and mov cs sub xchg pop (bad) jbe mov add in lods add or pop lahf std ror add js cmp shlb mov nop frstor cld jnp xor cmp jbe xchg cs dec mov (bad) std add lods xchg shll xchg lods js adc shrb cltd je sub push xchg lea lea pop outsb lods xchg jne adc das insl dec cmp fldt aam xor jne movsl mov movsb pop inc adc and int3 stos xlat in mov ror fstpt push mov xor xchg add test jnp loopne mov push sub dec test scas outsb adcl les iret outsl aaa jl mov jnp jmp or add int cmpsb push adc mov lret loop xchg rorb add cmp mov mov (bad) jle ja inc adc aaa in mov push pop nop (bad) add lods (bad) outsl mov cmp (bad) sbb inc aaa sbb cmpsl xor or scas popf into dec dec push aas push mov add int3 ljmp roll icebp loop orl (bad) lea loop aas imul inc adc dec xchg lret mov push xchg mov mov in sub scas or push iret jnp js pop mov in cmpsl lahf sahf push xchg cmpsl out out jge inc jmp jnp das add or out sbb cld sbb xchg pushf std pop mov push add lret xlat arpl pop lock and inc fstps neg jmp scas cmp or xor sarl cmp push scas sub mov test imul (bad) stos xor or (bad) mov mov out (bad) (bad) inc xchg out push xchg cmp sbb push fiaddl in inc (bad) mov or roll loope or stos (bad) out les in cmp jbe adc pop nop (bad) mov mov or jp (bad) das mov mov adc push push js mov (bad) mov icebp fildl orb popa jnp cmpsl (bad) popa shlb js aas pop push orl adc adc add lcall faddl sti ja js scas (bad) shlb lods cmp push mov lcall add stc (bad) adc jl or mov fisubr addl addl add jbe add movsb mov jne jae js test hlt cli addl mov push add push xchg orl pop adcl push (bad) mov cmp dec negb sbb sahf push loope mov jae mov cmpsl dec mov dec rcr and bound (bad) push pusha js pop in test ret mov lahf xchg add xchg lds (bad) and imul inc jbe add (bad) pop in sub mov lds xchg sbb add nop mov mov xchg lds dec incb scas mov test or mov lods cwtl rcrl xchg cmp jecxz outsl repnz (bad) sub mov jmp lds addr16 mov orl inc pushf or dec aad push cmp divl add mov or mov xchg mov mov lock xor int3 ja cmp push jecxz inc dec aaa mov iret inc leave xor push mov in test jg sarb in test out dec jmp (bad) pop shl mov dec (bad) lret fdivrs pop cwtl test or jnp cmovne insl sarl jae in lea adc enter mov test aad inc fstl pop in (bad) je or rcl (bad) jb inc or mov jae lods xor mov jp inc lods pop lds in outsb cmp push xor ljmp pop xchg pop xor nop fsts push mov xchg push and clc jle push (bad) cmovge int dec lret add scas inc in mov into outsl pop out xchg dec mov xchg dec dec addr16 dec fwait test cltd or lahf mov pop mov or dec fidivr std addr16 les ds sbb dec sbb push cmpsb inc ret (bad) mov cmp imul xchg les push or das ret pop mov cmpsb xchg pop add (bad) and add add dec (bad) xlat int3 int lahf xchg jns pop insb mov (bad) leave mov loope push int3 xchg push xor sarb mov test jo into dec fisttp or jbe jns jg lcall (bad) xor or add or dec adc xchg jbe (bad) data16 repz xchg mov fs cmpsl mov push or and repz popf jae mov push lret sub and fs dec jb or int cmp shrl add mov add outsl mov nop mov mov jle pop or outsl pop lahf movsl mov dec test mov mov dec test cmp xchg stos mov jle or dec mov out inc mov lods add lret mov mov mov adc repnz aaa cmp in inc xchg shrb lret sbb test lret jne mov dec or lods pop jb test or dec cmp cmpl xchg scas fmuls sub shrl pop aas sbb test sub js cmc sti dec test dec or nop (bad) xchg push jecxz dec (bad) mov pushf xchg push lods cli dec push mov xchg in lret leave jo add pop sub insl inc xchg jno jne test sub (bad) dec pop pop leave scas mov pop pop iret inc mov mov cmpsl stos add mov lods mov cs stos dec pop movsl sub leave inc int3 aam cmp add stos push mov in rcrl add pop stos in xlat fistl mov scas mov stos mov push aam movsl stos jle nop add mov (bad) mov mov lods xor or push xchg (bad) sub cmp jbe mov adc stos das inc lahf sub push mov loop das hlt (bad) sbbl out pop gs dec xor js leave inc movsl jbe clc jp push push out sahf addl pop and lods adc mov gs and fxch sbb leave mov stc pop enter mov cmpsb js fs jne mov in xor xchg ret and test add pop jmp in movsl jb lea and lds jnp push scas scas cmp lret outsl jae lea mov mov xor movl cmpl loope (bad) hlt cmpb popw inc ja in sbb das mov mov adc jge mov jecxz xchg mov add mov inc test pop mov or mov sbb mov dec xchg sub movsb mov add popa sbb inc sub mov or movsl outsb pop lahf or es or xlat push jo jecxz and es or inc insl mov dec add pop pop cmp mov pop xor mov and or aas jecxz ds xlat or xchg mov dec push ret sub sub jg jne dec dec add js movsb int3 pop push sub cmpsl mov (bad) pop mov adc sub lock insl jns sub insb ja pop mov cs movsl out push mov mov outsl pop mov push jns push cmpsl (bad) xlat (bad) scas push and enter adc out add je jo std inc mov inc mov into sahf into mov push or jbe mov in xchg stos jns dec add into push mov add or (bad) in sbb adc cmpsb jnp and arpl jo fcoml jg,pt dec pop hlt addb mov jle cmpsb out jp in test pop shll ret inc ja aaa (bad) loopne inc enter cld mov pop hlt pop and out or pop mov xchg jno in dec out out jb out jmp push inc add xor (bad) (bad) mov inc es jmp rorb out fisubrl mov stos cmp jge mov or mov in out mov adc add (bad) lds push mov mov inc (bad) cwtl (bad) mov mov (bad) jno shll adc repz ds stos cs stos lock sub (bad) mov cmp cmp add add push in in mov mov cmp mov cmp mov les dec adcb fldcw in dec inc lret mov cmp mov add or mov imul or jmp int3 or mov frstor mov lods (bad) int3 push dec sarl mov in stos sub nop push pushf sbb jae sub fist or mov inc inc sbb dec pop push add scas mov lods xchg dec dec inc add bound mov dec mov adc (bad) add inc xchg mov sub xor fwait push orl es ds push mov mov js cli sahf push jno icebp hlt repnz sbb mov cs cli mov in cmp sub sub clc inc jnp icebp and iret push loop cmp add jnp adc cmpsb out mov mov bswap movl mov push inc incb roll mov in xchg add ja (bad) pop dec pop pop xor fsubrs cmpsb or ja icebp inc adc leave cmpsb xor mov and shlb mov dec hlt aad ficom push or es jne jecxz jg std pop shr push mov js mov je mov jbe fs ss bound adc and push test adc fnstenv sbb mov or cmpl pop and pop in sahf push out and add mov jae movsl adc fcoml scas neg test mul or mov lret lods nop pop mov lea adc iret faddl pop gs push js ja rorb out xchg outsl fisttp pushf dec scas pop (bad) mov fwait ret iret push push mov xchg or push insl decb or es in add sub repz mov (bad) mov into addr16 test xor mov xor xchg mov mov jb jl xchg push push hlt mov mov jb test xor pop mov aam dec mov jno mov and xor aaa outsl sub mov in mov test fisubr (bad) xchg jge mov dec popa pop pop fisubl mov scas sbb mov mov or pop dec jb or dec jl scas pop inc push stos dec dec cmpsb cld test inc jne push and inc mov (bad) push fdivrs sub ljmp add fildl pop mov jae pop mov loop dec inc (bad) movsl in fiaddl mov xchg xchg mov jo adc xor add xchg lahf lods idiv jb xchg mov nop mov sarb in jp aaa push test mov mov or aaa (bad) (bad) cmc aam mov jo (bad) or jmp sbbl pop jns in mov mov imul test in or mov pop mov xchg movsb or xchg push test js jnp,pt jmp dec std mov mov cmp scas mov mov scas xchg stos mov or lds jo add stos inc (bad) sahf loop test pop loopne lods sahf cmpsl mov mov hlt mov clc push lahf stos vcvtsi2ss stos dec mov pop dec orl popf mov or shrb sbb cmp cmpsb mov hlt jmp movl push jecxz inc loop lods and sti dec in (bad) mov pop jge insl or iret pop jl cmpsl xor outsb loop adc test jae mov xchg mov cmp adc cmp xor push add pop mov adc movsl add frstor stc mov xchg mov push cmp movl or cmp das xchg jbe (bad) add push loope enter movsl sbb xchg mov lahf scas in push sbb dec or mov loopne mov xorl adc jo lock or stos int3 in aam pop test push dec test mov inc push (bad) mov movsl ds sub popf (bad) xchg mov rsm jge mov fucomp adc mov mov dec mov adc push pusha or imull mov mov outsb or or dec cmp inc xor push cmpsb jne cmc dec lods xor pop inc jae call xchg mov pop inc mov jbe xlat nop cmpsl mov nop mov mov (bad) aad jle mov sbb push sub sbb out int3 jp add js sub mov mov aaa mov paddusw jmp orl mov inc jo mov (bad) lds mov hlt inc mov sbb (bad) aad dec mov call adc pop jne inc jno jnp mov das insl sbb jb,pt (bad) push mov xchg (bad) ss sub loop jge dec aad and lods add mov repz pop cmp cmpsb jns sbb popf mov or lods jge leave mov adc mov mov test xor arpl es ds sub jne mov jecxz fwait neg push (bad) in push mov enter cmp (bad) lea dec imul cmp imul aad pop mov lods adc jnp push aas mov mov cmp cmp or scas fwait dec sub dec loope mov fsubl jg (bad) push jb loope fildl push fdivrl shrl mov rorb loop push add scas js cmp fcomps divb jge mov cmp pop cmp jne push lcall sti (bad) jo mov mov in fidivr jno mov (bad) roll push mov (bad) in xchg js flds divl dec bound fisttpll push mov mov mov pop addl fidivr xchg mov icebp mov daa xchg fnstsw loop cmp lock pushf lods mov in cmpsl cmp repz sahf mov mov mov jo mov mov inc ss push aaa mov data16 jne mov lahf adc and std in lea push mov scas lret jae ret push iret xor add fadds stos mov pop pop popl sub mov push cmp lods mov lea fdivl lret dec popf or mov (bad) sub pop fistp loopne push mov int inc jae xchg adc fiadd into mov xchg push xchg in jge adc stos aad dec ror (bad) mov xchg loop out push lods or in aam mov or jl pushf pop inc addl sahf (bad) mov inc fwait mov push pusha fmuls bound jae push aad mulb jne fdivs jne stos mov inc mov cmp inc xor dec mov sub pop jmp sub inc inc faddl mov in dec loop or mov (bad) mov aad fnstenv int3 rolb aad xor xchg and xor jmp push or jne adc out xchg (bad) jae mov (bad) or js push mov dec xlat orl mov xchg or or mov jge mov jl mov dec jbe pop jmp (bad) jg sbb shl scas mov addr16 fcoms pop imul inc ror mov push stos into xchg lods xor jle (bad) cld add sahf push test xchg sbb (bad) mov sub lea push xchg dec dec (bad) adc push fstps inc mov pop imul add cmp mov cmp inc fsubr xchg (bad) sub cld mov mov inc movsl loop movsl in pushf fdivr pop (bad) (bad) xor inc loop in fmull add mov adc in sbb mov inc inc add outsl mov jae stos mov xor les sbbl test dec insl hlt pop jecxz lret jo call sbb sahf jmp mov out cs xchg or das cltd mov lret iret mov or push test outsl test lret dec lret push into in insl mov mov dec xchg leave pop adc dec mov popa mov push jbe je cmp rorb and in xchg loop xchg and fwait cmp incl lds rorb outsb mov xor int3 in test push push pop xor fmul adc mov (bad) hlt cmc cmp dec fwait (bad) mov fstl jb call outsl movsl cli icebp aaa sahf loop xchg movsb (bad) dec push repnz lahf cmpsl fisttpll repz and inc sbb out inc fsubs test in call gs mov outsl mov or jae cmc cmpb add insl aas push (bad) mov mov insb loope adc lods inc in es and mov push (bad) loop movsb mov mov (bad) cmp push outsb mov lods add in xchg dec sub jo dec jnp xchg roll xchg stos mov dec dec das movsb frstor es xchg push jb inc add cmpsb cmp in xchg rorl mov inc in cmpsb fwait mov jnp pop dec inc mov cmp lods lods add and jnp jge push jb jb imul adc stos add or das lds xchg fstpt mov ja and push lods add inc sbb xor rcll sub std push out movsb jl add jle ss add loop test mov and xor mov mov pop jecxz pop sti sbb mov movsb pop adc or adc xchg push cmp aas xchg or mov mov insl sub mov mov mov js cs or (bad) sub out lods ficom mov mov test lahf push xor cmc fsubrl (bad) xor imul test jno add inc add shrl out cmpsl push pop mov push mov add cmp mov mov push cmp ss loop cmc mov aad xchg js or (bad) test loope inc leave (bad) aam xchg cmpsb fcompl mov xchg push xchg add or sub mov inc jne xchg ficom aaa out mov mov dec stc loop jo movsl mov push scas xchg stos aad sub dec insb jbe mov pop (bad) lods dec lcall mov dec js (bad) nop mov jl mov push dec cmpsb jle xchg sahf std mov iret mov pop ret test test mov jl sub fs mov fs mov or and sahf xchg int ret add jg rorb jb sub xor js or outsb cld add roll xor insl xchg and pop je jl jge pop inc add push mov mov scas xchg dec iret test bswap lods xchg ds repz lret loop adc in dec cmp xchg add pushf cmp or adc add (bad) mov dec dec dec xchg mov fisttp nop jle lods mov xchg mov xor lret ret push stc aaa and push in loopne mov loop out add dec mov sub stc push fldln2 sbb pop test movsb push mov pop xchg test mov pop sti inc add out mov leave gs sub lret insl les jae xchg mov push or cmp jbe out das cmpsl lcall insb lcall dec xchg or std cmp mov xor lret push das sub mov cmp popf ficom sti add adc (bad) dec fldl fdivr (bad) stc mov lcall cmpsl push int inc mov add or mov aad dec test cli jg lods outsl push add data16 cmp lods sbb into jl or jmp jl call push dec pop pop mov mov pushf fiaddl jno mov cmp lcall test add push adc scas loop jl movsl mov mov mov arpl fnop fcmovne aam lods inc lods cltd test clc imul mov loope mov test mov ljmp repnz mov (bad) lea in pop inc ret out int jns pop add add mov stos dec or sub lahf lods loop (bad) mov or jmp sub popf mov jp or xchg mov xchg pushf and mov outsl lods (bad) lock pop (bad) pushf mov (bad) cmc daa jge mov jp push test stos lea sub add fnstcw lods in mov push imull dec sti pop dec dec adc jo mov jmp leave inc xchg jns mov sti mov (bad) push mov jb mov sbbl stos loop in dec inc movsl mov arpl (bad) dec int3 jne or out data16 test jge test cmp jno adc pop mov ljmp pop mov sti inc pop movsl icebp scas lea in iret add inc mov mov dec push dec and mov test scas pop cmp (bad) dec or imul in cmpsb jns push jae xor nop iret mov int std mov aad adc dec push xchg test pop scas xchg cmpsl cmp sub loope scas xchg inc or pop cmp aam lret adc cmpsb int3 cmp inc cld in (bad) mov ucomiss int3 push fnstsw stos lret lahf jnp cs test xchg push jl mov incl or cmpsb lahf loop in test inc jo xlat dec (bad) inc dec and or push jbe xor loop je add add and dec test in dec and mov arpl movsb and in mov push push mov dec rorl cmp inc repz inc lock js dec add or adc mov (bad) shrl leave lods in lock js mov (bad) mov mov adc cltd int3 adc outsb and cmp loopne test js lds adc fs inc es int3 inc mov cmp dec xor cld inc aam xchg add inc lret jecxz inc mov or or mov add sbb sub fisubr add testb stc xor xchg sbb push mov jbe aam adc enter cmp shlb mov int3 imul xchg aad jne lret imul gs mov in or dec xchg and adc roll mov les inc test insl outsb inc (bad) fidivrl cli (bad) pop push rolb das mov sub (bad) aaa jb mov add push (bad) ss jae or outsb call mov movsl add dec (bad) xor mov add insl arpl test ret add xchg (bad) lret dec xchg sbb or ja test in mov lock jge in xor sub test dec dec (bad) fnstenv testl xchg bound jnp mov mov sub scas fdivrl mov cwtl pop mov push lea in xchg lds jne mov pushf popf sub lods push lods push stos dec dec xchg nop lods pop mov lods push mov jp lods add icebp mulb jecxz (bad) mov ror out push push mov add std mov fmull pop jl push inc fimul lods jmp movsl mov cmp sbb mov loop scas mov pop adc pop inc ss pop dec inc mov xchg push lret scas mov add aad imul pop xchg pop aas in inc scas mov add push xchg push pusha aaa mov movsl mov in push das iret mov rol and mov inc or sub lods mov int3 mov sbb xchg add outsb pop sahf mov jle les xor in dec xor push mov scas (bad) stc adc iret mov jo js movsb inc cmc dec xchg dec xor xchg jae dec xchg jbe cmp add mov mov push int cld aad ret js push insb mov xlat push cmp lahf push jne jl loopne aad mov xchg mov stos or pop mov mov cmp pop or xchg test mov out movsb xlat dec inc push orl add mov mov or stc xchg es or dec cmp dec icebp out aad jl andl in inc mov jae pusha dec test add int3 mov outsl mov add mov mov cwtl loope dec fsts sub insb cs push (bad) (bad) fwait lea pop mov imul ja dec (bad) push mov cmpsb or cltd push xchg jp dec or in mov sti jb stos push sbb pop in push pop mov cmc loop dec sbb dec pop jecxz sub sbb inc push test mov and ret stos sbb in mov add fisttp fdivrl or mov hlt dec jg jnp cmp scas in mov jnp push ds xchg mov add mov dec leave jno scas push sbb and pusha stc cmpsl clc cmpsl or or lea cmpsl (bad) mov xchg and mov inc add pop mov or mov clc cmp in iret pushf loope stos or into sahf dec mov mov mov addl xor mov mov in mov inc pop in jp pop idivl jmp pop jp mov rorl pop sub aam xchg push add add pop inc lods stos jnp ret fidivl adc sub cs pop mov inc jl or jno inc sahf jne mov loope lds jl addb adc adc movsb in add in pop inc insb fidivr decl xchg push sahf dec ja mov stc mov lea inc push push pusha (bad) and loop xor leave push loop xchg ss mov fcomps test push lea dec pop cltd (bad) jne sahf lret test inc mov imul jmp rcll (bad) roll outsb jb pop test mov jg in xchg inc scas adc adc jae jle add and cs fcoms (bad) and adc loop jae mov adc add mov add ss inc pop jno push pop mov movsl mov icebp push test fimull mov ffree mov lock movsb cwtl xchg mov or test xchg add push ss daa sbbl or cltd push mov in in out pusha adc add in push ja clc mov and sub das dec rcl jne mov mov or scas jmp mov xor mov sbb mov xor push inc jnp ret mov lea mov stos fs push pmulhuw mov jno ljmp iret aaa cmp mov roll jmp test mov dec push ret push adc dec push adc xor outsl stc xchg jae push push xchg lds mov int lods and stos xor pop gs xchg add and and mov aam sar pushf push call in mov add loope mov in xchg pop push mov add in pop arpl scas lds test (bad) push fadds push add repnz subl jge or mov mov mov xchg sahf pop jge hlt push push pop popf sbbb inc cltd jae out sub arpl into in mov lods pop flds and xchg dec push jmp mov and std outsl les sub lcall sahf push xchg push pop ss and dec call adc ret add cmpsb cmp imul test mov jl paddw out int3 rorl add xchg stos mov std inc aam push lret add push std popf lea cmp mov stos mov popf pop or sub stos in test mov mov ja push add mov mov mov mov mov push in insb stos test push inc push into scas mul aad xchg jle or or (bad) xchg xchg outsl int3 and out mov pop (bad) xchg xor lods scas jle xchg dec pop cli fistpll jge cmp int or dec scas add dec cltd sbb push cmpl mov out addr16 jge xchg arpl jle push jns out jbe push mov push test inc mov jbe es xchg xchg pop lahf pop out mov add lds jne dec popf popf jnp xchg push pusha pushf push sub cmp xchg add dec jnp test pusha movsl mov xchg fnstcw pusha fldcw (bad) or cmpl data16 xchg sti imul jmp sti mov subb in xchg jecxz jb ret jg xchg sbb mov fist xchg mov es mov (bad) ror jp or sbbl mov cmp (bad) movsb lea push add sub stc jo das mov mov lods mov or inc fs movsb mov add icebp mov push mov jl sub in jmp test dec jns and cmpsl pop movsl jbe movsb jle scas movsl in mov jge add fistpll pop cmpl or add push jp mov repnz ficomp xor mov popl pusha sub inc fs inc jb rorb ret inc mov inc adc adc dec xchg or xorl in arpl jb cwtl popf mov leave xchg stos cmpsb leave lds pop iret mov lea leave xchg movl lret mov dec in mov rclb or cmp adc sbb push jl adc mov test lods mov sbb add lcall xor or repz mov in mov lea (bad) insl push aam xchg movsb (bad) add mov mov inc aam test cmp insl pop mov in xchg andb add insb mov jns add loop orb call xchg in (bad) in cmpl (bad) adc outsb adc mov fisttpll cltd clc push (bad) in jge in (bad) mov dec movsl pop mov ret leave xchg push xchg jb in mov mov popl dec xchg out je jge lods or xchg in into or stos pop mov dec ds xor dec jge inc jnp outsb test or push stos pop mov xchg or mov notb sbb sub das out scas aaa insb cltd mov dec pop mov mov ds dec mov dec jne inc scas jmp mov mov mov in fs xor iret pop push mov mov push jl aas cmc aas in int or push xchg lret in jl cmpsl xchg repnz xor cs cmp adc add or mov out aad xchg dec sahf mov in lret push (bad) outsl or mov mov aad jmp inc push mov or inc icebp enter inc mov adcb dec adc push cmp xor jns int nop clc or mov call idivl dec mov mov sub xchg test sbb push loop and pop ffree incl mov push xchg jle push mov lods dec pop fild pop cmp mov and iret test in pop lods adc outsl stc dec orl dec orl jmp inc mov outsb mov outsb mov (bad) jle or andl cli pshufw les or push sahf adc adc int mov adc lret jl test (bad) mov dec movsb push icebp movsb mov add pop mov mov jae cs xchg enter cmp and das sub mov add jp daa std ljmp inc stos jnp lods mov popf sbb jne loop imul inc xchg adc (bad) cli movsb add (bad) loop fs jbe into xor outsb pop mov or jno pop pop mov mov imul rcll mov adc (bad) mov movsl sub and cmp mov jp stos movsb ljmp dec loope sti cwtl xchg mov push mov scas int3 js mov pop jo loop xchg (bad) push loopne cld sub mov add clc pop iret in inc pop roll mov js add lods mov mov int fwait sti adc sub mov les pusha dec out push jecxz iret jo dec sahf es jae inc xor bound hlt mov pusha jl adc xor daa mov push ds ljmp and lea xchg cmc pop cmp rorl lock dec jge (bad) loopne push enter call fstpl mov aam inc mov aaa outsl fistl aad cmp mov jbe test test mov lods mov ret aaa xchg mov in imulb cmc jae (bad) or inc mov pushf scas jle lret or mov aad movsb scas xchg pop xorl movsb mov push sarb jmp (bad) jle jg fisttpl mov inc inc lahf imul cmp dec aad mov dec hlt mov gs xchg dec mov test sahf lea sahf int pop aad cmp (bad) jecxz add (bad) sub addr16 and icebp sbb push (bad) mov test mov aas inc xadd lahf push mov fldl (bad) xchg in adc mov inc mov outsb (bad) mov jmp sub call mov or add insl mov inc or xor cs mov cmp int dec dec inc xor mov loopne pushl hlt mov stos cmp adc xchg in repz adc les or in movsb in xor mov scas mov lahf pop mov mov lea add icebp test (bad) scas xchg jbe pop mov aaa std push jl mov jecxz cmp lods dec cs inc xchg scas ret mov xor xchg jnp mov ja ret xchg lahf in fsubr gs jecxz aam inc mov mov lahf pop jecxz jne mov lods dec dec outsb out in mov movsb dec mov insb test jnp insl fwait bound test dec negl jnp mov xchg pop mov in in hlt mov (bad) mov cmpsb mov (bad) push (bad) addr16 scas nop xlat jo out lds xor jne ret cmp scas jbe mov movsb test (bad) or cmp pop hlt addb decl addl je inc jbe sbb push shlb test fucom pop insl pop mov push push test jl sbb dec pop sbb xchg orl (bad) xor test cmovae in mov dec dec push ja inc inc lret cmpsl add fsub sbb int pushf dec cmp xlat mov adc pop inc addr16 mov push test mov adc xchg ss sarl mov lret push out adc dec nop jns mov in and xor jnp,pt add ljmp mov push mov pop push jbe loop pusha loope pop je test sahf cmp mov push dec xorl mov pop (bad) addr16 mov test mov or test cmc jg call movsl movsl je test fidivr mov dec leave and mov dec nop shlb push shrl xchg pop pusha movsb mov jnp aam push sbb pop loop mov jl xchg lcall xchg pushf mov dec mov mov in jmp fisttp loop mov jmp mov sub push dec dec mov lods xor pop sub test mov test cli adc push dec xor gs mov je je push mov sti dec mov cmp and outsb inc (bad) outsb mov push mov (bad) add sarb cwtl inc sbb cmp lahf ljmp xor jp mov test cmp aaa imul ret sbbl push mov xchg movsl lods mov sbb jp mov in leave cmp outsl add mov dec aas outsb movsl lods xchg shrb and out inc jno (bad) xchg sahf scas test jns sbb jnp mov adc xor jp jl adc lds jge data16 mov rorl push test jbe jno mov rcll add mov mov jb es sbbl push mov rol fild stos dec xchg mov push push aas mov insb cmp (bad) and jae push cmpsb cwtl pop fwait in repz int in mov data16 jecxz mov adc jge (bad) mov aaa aad outsb inc stos movsl into pop mov mov lcall jnp jecxz jno cmpsb sti popf mov mov imul int3 stos scas fsubp loopne mov hlt dec xchg out loope cmp bound ds in jge ss sub (bad) in mov xchg js cmp in sbb scas aaa dec pushf lods add aam inc roll jo movaps ds mov cltd rcrl cwtl xchg mov xchg (bad) dec pop inc test mov lods mov fwait push add add add rorb negl ja mov pop xorb in aas cmpsb mov negb lret lret movsb mov push mov dec xchg fldt mov psubsw xchg or push pushf popf xchg pop popf jno lock scas push in out mov subl mov jle xchg cld pop jo leave pop lods imul in stos mov test loop or popf jb pop cmp lock in push ret add fwait (bad) mov jecxz or lods or faddl push test mov add in push mov dec test xor fcmovb xchg jl push inc cli inc mov add dec dec cltd pop dec mov add inc mov pop (bad) cmpsb ds xlat jbe test dec (bad) mov jle in ret lret push lock xor add mov xchg dec loop fbstp pushf mov cmp mov mov (bad) and sbb dec dec or mov loope fxam xchg sarb jae fcomip imul xchg pop lods fsubrs push pop fs std rcr fisub xor aam push mov xchg lds jno bound int3 push jne or iret in dec pop adc inc les xchg mul cmpsb or mov mov mov (bad) dec xchg ja icebp or jecxz mov in jle pop inc cmp mov xor es pushw push xchg push sbb cmpsb sub test or inc adc jno or mov sahf and mov int mov mov stos dec or pop pop inc hlt push js stos (bad) data16 jle clc sub mov fwait enter pop and js insb jg outsl inc cmpsl jbe andb pop mov imul (bad) adc mov aaa sbb fsubs jg mov jne test or aas xchg xchg push mov fnstsw inc inc imul mov pop lds mov in mov js mov push xor ud2 xchg add sbb in jo or fwait or mov stos sub pushw jno daa jno inc lret xchg mov test dec sarl xchg push stos mov pop flds or ja sbb (bad) sahf add fisubr mov xor cmpb pop inc jle test xchg add dec lea subb fs iret jmp roll bound je add bnd fs mov arpl mov inc pop gs test mov addr16 push mov mov ja inc mov mov push iret jae insb xchg xchg test loope cmovne rorl aas das xor jp (bad) add mov cmpsb or cmp cli mov test lods mov adc nop dec in ds inc loop mov pop push repnz and mov das push inc fcoml xor adc xchg bound data16 into mov mov mov jnp push mov jae pop adc je sarl mov push cwtl inc jb inc adc les or dec jle test cmpsb insl sub shrl cmc cmpl mov lret (bad) lahf jne mov mov add iret int mov jge andl or dec push adc ds mov lar repnz movsl dec mov xor in cmp jmp arpl aad into inc es dec push adcb mov adc lds cld xor insl mov jmp push leave mov int xchg fldl mov jns mov push js dec cs sahf dec leave inc lds cltd pushf push jge push sub stos dec mov add sti dec push das cmp das pop ret xchg in cmpl push mov cmpsl adc (bad) iret add in jg mov hlt aas arpl dec incl sbb loop into fstps nop mov iret inc fwait in add push (bad) xchg xchg imul pop iret dec jbe test cmp jle jecxz in mov pop push outsb mov pop in (bad) and sub mov scas sub (bad) fisttpl adc add dec lret pop fdivrl fidivl xor ds mov pop xlat or pop jl adc xor mov iret call inc adc mov or les aas jecxz pop pop pop sbb and test daa xchg cltd mov sbb xchg pop decl in push dec das adc sub inc in pop repnz cmp pop icebp icebp and outsl data16 xor sar pop dec mov jmp mov loope leave mov cld mov dec jmp sahf push insb rcr sub push in pop pop jne stc add or shrl stos popw mov mov test nop add xchg cmpsb ret aas (bad) iret push jae lahf jo in dec pop inc ss testb dec jge mov lock insb or cmp mov mov lods add sar cmpsb hlt mov mov addw (bad) rclb lahf dec loop inc mov mov mov mov push mov in lret mov insb insb xchg xchg mov sub dec mov lods dec cmp sbb sahf sub cmp cmpsl lret fidivr adc cwtl inc jnp dec cwtl cmc cmpsl adc pop jne mov jl dec fs loopne gs sbb fs in sub sbb and (bad) popl inc testl sbb push xchg cmp jle adcl lods lret and sbb mov push test jnp mov or pop pop es add mov pop or mov lods inc xchg (bad) push repz mov negb scas aaa and repz int3 fwait bnd lea xor mov mov lds cs pusha dec sbb sub jne test sbb inc push xor sub xchg int dec test mov leave mov test push add xlat sbb enter add mov sbb or in xchg xchg inc cmp xchg jl dec sbb add dec push push pop xchg or test adc ja mov or jp cli test mov mov rol mov sahf push (bad) test jbe loop lret cltd data16 mov pop loope pop es std push cmp pop lock inc dec mov ret add dec push mov in mov fistp xchg or jecxz (bad) adc cli mov inc loopne add (bad) mov xchg repz or mov sahf xor push sub lods and in mov iret lods dec pop mov stos cmp outsl fwait add lods lods sbb jp pop push in imul inc mov cmpl pushf scas orb dec or pushf out test scas dec fstps arpl xchg jbe jge cmp sub (bad) dec jb clc jae rclb push mov or sub dec subb dec lds out mov data16 sbb cmp dec nop mov add insb dec (bad) out (bad) cmp test mov push in shl dec jmp mov lret push (bad) (bad) (bad) int movsb testb bound mov or leave or adc scas mov les push xor mov xor outsl test aad lock les jecxz es rcrl mov int idiv sarl push je adc cwtl cmp fs ds into out xchg shrd aad mov sub mov mov lcall popf dec mov add stos gs jb inc daa jmp jl add jge adcl scas mov (bad) push xchg ret into mov test sbb pop into test mov fisttpl inc aad push stos mov shll jg mov (bad) repz add scas enter inc xchg xchg js mov addr16 mov jae mov in add hlt push mov mov jo sbb xchg jo jo pop pop (bad) xor xchg test loope test mov stos jbe add (bad) pop aaa je in aas test (bad) push mov lret (bad) data16 dec pop lods or mov mov push insb std mov orl sub mov cmpsb cmp negb cmpsb stos jl decb jecxz push cmpsb (bad) mov stc add in movswl test xchg int3 sub leave jle push cltd aaa stos ret leave ja mov mov stos inc and mov test sbb push imul clc jge or dec sub nop mov cwtl or dec adc mov jne,pt xchg mov les mov adc sti mov nopl cmc jo pop fwait dec dec dec mov jmp fistpl insb mov or ret mov push cmc mov sbb ja mov fisubr cmp into xchg xchg lea fcompl xlat pop shrb pop inc (bad) mov rcrl cld jmp cli pop mov cmp push mov sbb xchg ja ret or outsl lds cli in dec (bad) pop mov mov xor testl sahf lea xor lahf lds pop jbe andl pop outsb push push pop rcrb cmp cmpsl add mov inc lahf pop sub cmp out mov mov pop pop lret (bad) pop mov fidivr cmp ja push mov dec pop dec inc inc push aad cmp dec inc scas mov mov mov dec ret jge lret jbe mov int3 in push inc mov cld dec mov cli sub jae jl sti jb mov sub in ret xor mov sub outsl subl pop mov mov ret xchg pusha dec test leave mov sub mov push popf loop pop adc arpl mov pop xchg in mov sbb or push test and dec mov mov in mov xchg cwtl sub leave sbb dec cld in or (bad) out push add insl mov imull push sahf mov fwait jmp jmp xor inc dec cltd push popl mov dec mov dec in sub arpl jne pop (bad) aaa repz test arpl pop cmp jne rorl add fisubrl minps outsl mov jo ret xchg std cmpsl pop fnstenv pushf scas fnsave mov or adc aam scas mov fildll adc sub push xor inc loopne or lods lcall sub data16 mov mov adc sub test insb mov lds mov cmp inc sbb test add push fnstcw mov (bad) mov or push sbb (bad) dec push mov jg lds xchg iret outsl mov mov push jnp mov loope and xchg in and dec das jbe xor mov insl jg cmpsb dec enter cmpsb sub into and lea cmp stos xor push stc leave xchg adc dec pop test cmp int3 test or iret pop fdivr inc push cmp or in xor clc leave mov inc xchg out test fldt mov cld xchg sub aaa mov mov rolb pop push scas push mov cld mov data16 cmp cmpsb icebp (bad) cmc or outsb mov mov sbb lds mov inc xchg xchg scas out cmpsl add xor test mov push pop mov dec mov pusha adc mov loop ss jmp rcrb jle pop mov inc test mov dec in jp adc xchg rcll scas and sub jo ret mov mov decb push mov pop mov fwait and push mov fnstcw sti jns mov mov ds in sub pop lea jne mov adc rcl mov std inc (bad) enter mov mov insl mov shll jne insb rorl adc jne lcall bound inc dec ficomp mov xor fisttp mov mov inc mov cmp hlt cmp sbb je dec adc cwtl js push mov dec insb lcall pop scas data16 gs or push fdivl pop in icebp (bad) repnz std cmp cmp cmpsl mov pusha pop pop sbb cld aam rorl hlt aaa or xchg push jns cmp push retw mov scas in push inc jae mov xor cmp sub imul jo add fnstenv mov xchg dec or dec mov add xchg mov scas into dec (bad) adc pop in add xchg in and js xchg mov xor push inc push push and mov inc mov push fisubr in test push fbstp pop data16 lcall mov into inc inc or add lods mov test cmp test (bad) jmp (bad) orl sub add icebp lret scas lea adc mov lds cmpsb pusha dec jne fwait loope mov mov mov and mov (bad) push mov mov mov xlat mov mov and sub mov fstl fsubl xlat push sahf pop test sti inc std mov cwtl add xchg jbe lods xchg test pusha loop iret outsl pop shrl inc outsl and mov sti (bad) adc jns dec xor mov jmp pop (bad) (bad) adc in loop or outsb rolb (bad) push aam mov scas push int3 les and shll aad lods add stos leave fnstcw xchg sbb push dec jns mov pop cld jmp into xor mov mov leave inc xchg mov mov push pop das cmp jecxz xchg das cld pop test call mov sub movsb (bad) stos pop lahf or into loop jb cmp jbe std orl cli jge mov out jno xor insl adc mov stos sahf cmp in mov dec fwait cmpsl jp int3 xchg push mov out (bad) xor cwtl fidiv xchg jnp js in daa xor mov xor xchg imul repnz jbe or mov shrl in fisttp jno out jbe add dec or ja jno ret clc or add pop adc leave clc into pushf jo rclb mov leave add insb scas outsl dec add lret push jle imul loope mov push mov xchg inc push movsl dec fs and jb stos add pop mov movsb insb pop dec jle (bad) ds xor inc sub mov jl xor push mov inc push lods inc in add fwait imul (bad) or dec add xor fdivrl cltd popa push orl xor dec int3 in scas dec pop pop or fistpll in jge out outsl pop lahf jg jno jbe mov imul pop cmc push mov insb icebp pop mov into ss cmp sbb les add dec cmp imul push out scas imul cld mov jns pop aad add jge movsb in mov push inc sbb mov push mov addr16 loope test fst xchg std mov in es scas test mov mov imul xchg mov out sub and adc or mov hlt xor pop add test jl scas mov jae lds nop inc mov in xor cmp mov sub jp mov jbe int3 sarb stos xor mov dec push mov mov cwtl sbb mov sti mov mov daa cmp std mov in cli cs sub or push pop scas js cwtl jno xchg or xchg cmpsl mov (bad) rol lock test dec or sub les or ds inc stos lret insb imul cmp addb xchg ror push inc xor mov cmpsb pop daa jl adc in jb dec sbb into lahf sbb dec xchg jb test dec (bad) dec jle pusha push data16 into inc mov addl push mov (bad) loopne cmpsl (bad) pop sub cmp mov mov or pop push sub mov pop xchg push push sub cmpsb pusha into sbbl push push xor sbb aam leave insl xchg loopne (bad) test push out mov fcoml movsb sbb cmp mov fnop pop cld in sbb mov stc enter dec arpl xchg dec (bad) jo sub mov (bad) fisub mov mov fcmovu cvtpi2ps jl lds in cmp fisubrl scas lcall mov xchg out sub ja (bad) pop aas sbb or sub (bad) mov ja fstpt jmp leave and pop lods pop js inc stos dec cmp mov mov or mov cmpsb fptan dec dec (bad) and (bad) movsb popf repnz in mov push dec lods es add add rclb les mov in (bad) cmp sub jne test xchg leave cltd mov adc pavgw out mov lods or mov push xchg jmp scas aas mov or mov lock mov add aad ja in jp xlat out cmp aad mov imul fstpt xor push imul mov and leave jmp insb add ja fistpll adc (bad) es push xchg mov pop mov mov mov outsl adc and nop dec and inc xchg stos ss mov test cs or fcmovnbe mov fnstcw leave (bad) pop add push xor dec push jge test mov pop pop jecxz jg,pt sub mov push push add jp (bad) insb xor mov js bound jge add (bad) (bad) cs cmp enter fwait inc xlat shl lods push or movsl addl sub out mov dec push mov xchg mov jle jb sub stc xchg cmp arpl xor ja sbb push test push mov roll lahf dec lahf mov ljmp mov arpl add stos xchg sub lahf mov in inc lods test aad or mov mov cltd in jg pop dec movsl jge cmp inc xorl pop aad aaa inc inc pop mov inc (bad) dec test cwtl ja jo scas adc cmp mov lods rol andl enter ret jle xchg stc cld inc sbb add pop jae adc sbb and mov pop arpl loope add xchg pop jl dec mov scas push sbb add jo jp xor cmp cmp lds inc aaa in push mov jnp out or outsb sbb inc xchg adcl ljmp (bad) arpl xchg insl out repz sub in or in lods loopne addl xchg pop push mov mov dec lea jbe mov pop and dec dec imul inc dec xchg das fstpt test mov jno sbb xor lret push (bad) outsl fstl pop mov loope dec outsb or pop mov jle fimul xchg xchg je or pushf outsl pop imul jb sbb (bad) lret xchg mov mov repnz mov aam mov sarl pop sub jno jl cltd add dec outsb cs lea cmp inc xor mov pop mov lock push sub into inc neg adc cmpsb cltd movups out cmc jae sub addr16 xchg inc dec cs mov dec pushf cmp pop imul mov or in fnop cmp je popf ja push mov movl inc pop fstpl jns cmp jb js dec jbe rclb mov xor ss orl les fstl push jmp imul ds xchg or das lcall (bad) mov fildll lea or or push cli stos mov sub mov fs pop movsl xchg jp fmulp in lcall xchg cld push cmp aaa (bad) loop push pop add mov fisttpll std jns mov pop push dec fs jns aam outsb test fiaddl sub fisubrl inc sbb mov test ficomp stc inc dec push mov daa stos mov jb push add in pop repnz push leave popa push push es mov lahf push mov mov jbe dec data16 inc popf sub xorl out push lds jo mov jnp push or inc data16 cmp push scas movsb mov and push inc mov repz fs xor or (bad) sub mov mov push dec mov push mov dec jbe or inc sbb sarl and (bad) mov cld clc dec mov jle push cmp (bad) adc rcll test adc lcall cmp adc add test mov fdivl jmp arpl sbb out test fistpll rcrb fs and fdivs dec mov push sarb or mov push xchg js dec lock aad sub mov into mov mov jbe lea mov ja xor dec call hlt push mov mov mov ds xor test cmp mov cmp int3 ljmp sub sbb lea cli jbe (bad) imul int (bad) fisttpl sbb test mov jl mov xchg xor cli jbe mov lea mov ds lds push sbb sbb in into (bad) or add pop lods inc aam jo int3 rol fisttpll repnz sub (bad) mov mov outsb imul mov inc mov in scas fs cmp subl fwait ds pop pop add dec pop fldcw mov sub mov xorb add int3 cmp push jle fldl adc lcall mov add movsb or inc push (bad) jns xchg pop out adc inc jle add lea xchg inc mov jmp scas mov push dec ret jg sub mov push movsb jp mov loopne stc pop lods test cmp outsl pop shrb lock (bad) add mov push add in or and and mov les in dec shl popf add bound in add sbb cmp pop inc insb dec dec mov or push ds mov (bad) aad incb icebp out inc add leave pop pop jp insb mov rcrb xlat mov pop mov sbb lods sbb int and roll add out fstpt jle mov and mov add incl cs (bad) or aaa jp enter jbe xchg inc xchg dec mov or pushw stos sub in call push loope lret add jle jne orb xchg mov bound mov in xor mov hlt mov and mov movl add mov sbb adc decl mov pushf ret (bad) mov aam xor jmp pop cmp xchg mov cmp fild shlb mov push (bad) jle bound adc mov lods dec in push mov in dec push mov xor push rcl mov test dec cltd js pop mov mov mov loope push fcmove lods add dec sub cltd push adc push cmp dec lahf fwait (bad) xor push mov mov push je dec rcrb and jmp mov out insl fucom xlat pop mov fisubl insl ja cmc or fisttpl mov xorl insb loopne and jmp or fldcw stos hlt add call and jp and pusha mov loopne fwait add mov cltd mov pushf ret pop pop pop mov mov das or ljmp and sub add mov in cs xor mov mov add cmp mov mov cmp ss insl cld insl inc pop mov inc cmpsl mov jno icebp movsb fidivl mov sub push or loope cli sbb mov cli shrl shll dec or push (bad) push test inc mov enter add push out aaa and fmuls std out sbb jae ja jae out push inc cwtl dec cmpsl shlw in std inc cmpsb sub cs and (bad) push dec fisttp dec and data16 out gs inc loop cmp loop (bad) and add addb rorb arpl out fdivp in scas leave adc mov push gs add push lods jno sarb lock cmpsb push out ds push push jae loope clc rcll mov jbe add add mov inc xchg push push inc fldcw lods fisttpll lret cwtl or push jp popf add sti add xchg cs sbb movsb jns int mov push sub ss (bad) xlat iret int loop in add push in add ror dec and iret cmp aad mov (bad) sar aas cld fstps cmp stos mov jns,pn pop dec adc inc aam add adc loop sbb add add mov seta push cs lahf ljmp orb daa imulb pop call jno lds std lcall inc jp test xlat or mov pop mov push lea inc mov mov xchg (bad) stos pop or push in pop mov xor ja scas inc cmpsb jne cmpsl (bad) enter imul fst sbb sahf jl push dec fs in mov jbe data16 dec (bad) pop add addl mov cmpb mov stos pushf cmpsl test test (bad) mov out out pop and rclb mov mov push repz cmp push das out jle pop or dec scas cmp inc mov aas sub xchg adc add rclb dec adc cwtl inc clc cmpl ret dec rcll xchg or adc test sub pop (bad) roll cli (bad) push sbb mov and fidivrl mov jns es movsb lret shr mov repnz mov mov imul (bad) pop sub mov cmpsb (bad) push out js jbe sarl andl mov setg cmpsl push cmc mov inc (bad) jns rcll xchg les jp jg lcall cmpl in insl cmp cld test pop stos or test xchg lahf mov adc sbb out sbb mov dec mov dec add inc mov clc aas cmc orl inc xchg addb add sub fiaddl or ret mov xor inc add push pushf push jb stos jle (bad) leave stos inc jo sti adc sub push pushf in or sarb and or jmp jnp pop mov mov cmc int3 ror xor or pop push rcl or add movsb (bad) adc cmp push xlat add (bad) lahf or xor mov pop cmp out sbb mov inc or roll les cmp inc pop jl mov mov xchg in cmpl xchg inc (bad) leave gs fsubrs push inc lahf jb jp add mov push movsb jbe dec jne imul lds jle lods push push insb cmpsb dec fwait xlat fadds out ljmp inc cmp inc inc or adc and inc lret jle movsb sbb test mov incb mov lods push add lea mov inc mov mov jecxz inc lds fwait lods pop (bad) cmp lods push pop ja gs xchg inc mov jbe mov dec iret sub fstl cmpsb xchg test addl add lods add or (bad) cmp sbbb push adc imul into mov imul jne jp,pt leave sbb inc mov es adc adc dec pop in test push outsl add shlb pop inc test add sub loop test cmp ja movsl dec enter scas mov jns pop repz jmp dec xor push ret enter add mov mov mov cmc xor add or test lods xor cmpsl mov add cmc mov in cmpl xor or (bad) in lret mov repnz lret je mov (bad) push mov or inc cmp cmpl jne fistpl jge loop xchg or stos cmp add js and mov pushf outsl push mov aam ja stos test rcr std or lock sub sbb jle (bad) pop add dec mov push gs in into or jle sub ss dec xor adc fst mov clc insb or add xchg cmp test faddl xchg cmp jns outsl lea les arpl dec xchg cltd lea into mov loope pop mov sub stos jge mov in ja dec mov jmp adc adc lods mov jmp aad shrb (bad) idivl cmp fs dec bound pop sub mov rsm in cmp mov mov lcall inc lcall dec fwait inc inc adc cltd add jnp sub std movsb mov or (bad) xlat inc add imul aaa push mov and xor loop jmp pop popf inc test lods mov mov or repnz mov mov test mov imul lcall (bad) ret xor fwait sti xchg in xchg mov mov fwait ret insl or icebp sub sub mov jnp shrl cmp mov stos lods and mov dec mov and mov outsb lcall adc (bad) sarb in add dec in xlat dec (bad) mov iret ja inc enter adc fwait xchg shll mov cmp inc je jl cmp lods and jo mov test pop mov jecxz movsl jno sbb mov nop jno outsl sbb dec (bad) dec out in xor cmp xchg test mov testl cld pop xchg xchg popf add mov cld xchg (bad) pop mov push mov rorl jno dec (bad) sbb rolb lea inc pop fild cld dec dec push push dec jmp mov test nop in inc (bad) or jno shrb add and dec jmp movsl fldcw lahf in mov mov in addl movl xchg sub lods leave in xchg push (bad) rclb outsl test je hlt dec inc shrl jp mov pop test loope sub mov pop inc in cli jnp cwtl sar out mov adc fs jae xchg bound jbe or insl push and pop out add push push push xchg lret addl dec push add cmpsl push pop lahf inc addr16 arpl sbb jnp xchg jmp lods mov push cmpsb jmp mov int decb stc imul adc mov mov outsl push push ficoml cmpsb sbb lahf flds movsb sbb or xchg pop and and or stos (bad) pop pop mov xchg mov fist cmpsb dec xchg dec mov pop out loop jns pop aam xchg pop adc jns jmp jp fs mov push test and mov add xor rcll xor xchg fxch or xchg in lods lahf mov push cmp inc mov loope push ds lds inc js in adc in stos xchg je xchg or test lods aad rsm pop nop jge mov out scas test scas test dec pop mov jnp or sub mov push scas std das flds fcoml mov pop mov add mov jmp lds adc pop mov mov jl mov into nop nop xor push ret push movl xchg test xchg fnsetpm(287 jae mov das inc lret inc pop fnstsw mov daa cltd cmp jb xchg lds xchg dec daa fdivrl inc sub mov mov or add in or cmp movsl loop cmpsb adc mov or pop popf sahf mov jle mov jne pop movsb cmp lcall push sbb inc or add mov mov adc push sbb lret xlat insb mov in cs add sub gs add lcall or cmp aaa and add or mov int std push (bad) mov lret pop xlat pop clc mov xchg ret cltd or (bad) into mov mov and jecxz lret incl scas in xchg int3 into (bad) fnstsw pop pop push mov or dec test jno scas jo fnstsw pop scas fnstsw push mov out mov leave stos adc cmp push scas ja leave jnp jle add mov xchg jns jge fdivp xchg jp inc mov leave lods test aaa push scas out mov scas add iret or dec mov jbe outsb mov or out mov xor mov scas stc das fdivrl or mov sbb or inc ja push add (bad) xchg cld jo mov ljmp pop out popf dec mov jmp sbb push outsb decl scas jae ficompl mov xor mov roll in cmp scas arpl dec xchg or pop movsl in xor out adc mov aad mov loop dec lds pop data16 cld add xor cs jo lcall sub xlat push or mov pop sahf mov mov aad push mov jge push xor sbb test shll xchg in push add stos or cmp subl cmp icebp (bad) or pusha jne xchg (bad) shrb or mov sub inc loop pop jmp cwtl test std fwait cmp fistp movsl add fs jo jmp mov mov dec pop push out push test push fldl iret xchg fdivrs in dec add movsl xor int3 cmp add mov out add and loopne mov xchg pcmpeqd inc or push inc push dec stos xchg cli dec xchg out movsb shr mov add out mov jo cs inc xchg pop mov (bad) or dec call sub arpl jp cmpsl cmp pop mov pop inc fs dec mov loop aaa dec cld cmp jno orl sbb push and push ror scas mov sahf pop movsb xor xchg scas pusha mov jmp subl mov popf xchg int mov xlat dec mov mov pop push add bswap and (bad) into cli out fisttp dec add into cmc aam rcrl jle test push jle mov push xchg mov pop pop or mov mov mov sahf in js sbb scas lcall xor imul (bad) hlt push popa sub xchg or mov or nop inc jmp mov pop test xchg xlat rolb arpl or xor inc lret fisubl mov test test dec fcoml mov dec push cmp xchg mov pop mov dec es icebp popf xchg (bad) mov loop inc push and sbb mov push (bad) and rcrl cmp mov (bad) out icebp mov mov es not push dec sub xchg add push inc ss mov xchg pop jp cs fdivrp shrl push dec cmp or sti cwtl mov enter and fs test mov add dec sbb mov push mov adc mov int mov lret addb orl pop loopne cmp push dec push mov lret sbb addl sub mov leave or dec push push jp mov mov sbb bound pop aas test mov jle icebp jl jle data16 data16 sub and inc jae mov lcall movsb mov xor adc aad loopne xchg icebp popa add push push movl fistpl mov es xchg stos lea inc dec dec leave xlat aas mov int3 mov pop cmp (bad) std mov mov fisub sti mov mov mov add int sub push cmpl add mov xchg test mov lods dec or test scas dec aad jl mov test insl lret and mov test scas (bad) sbb jle (bad) xlat mov movsb fldcw test lcall mov iret inc mov data16 test dec mov jne stc mov mov addb cmp mov cmp insl pop imul sbb insb cli push pop loopne and xchg ret lret sahf in out int3 or xchg test in sbb push das std cwtl lods mov lods sub cmp lcall jg push cmpsl mov sub xchg mov inc stos xor push loop push je das adc push lods cmp jmp fs mov leave out xchg inc or pop mov add fdivl or loope sbb outsb xor inc (bad) lds pop sahf lea or in (bad) push mov (bad) sti mov pushf or jo jnp rorb pushf sbb js inc mov xorl jl jo fiadd mov (bad) cltd jno sbb pop pushf hlt mov popa (bad) lock and push sbb push cmp dec and mov ja sub add roll loop insb dec inc arpl test pop lret jp loop jmp enter (bad) pop inc pop (bad) lret dec je sub dec mov push xchg test dec test mov out cmp inc inc push pop in and loop jmp add pop js (bad) enter sub inc sub addr16 mov fldcw sbb push push cs lret cmpsl loop into or push sub pop in mov dec in dec in int3 xchg add sti nop loope add test lret dec insb pushf nop adc mov jg test cmp test inc out lahf mov dec pop mov nop mov fiaddl ljmp rolb lea in adc dec dec dec mov add dec addr16 dec jmp jle lret test add dec in clc ret (bad) sbb mov movsb jb cld iret pop jl sarl dec (bad) sub jmp xchg in push jle jae mov mov cmpsb out lock insb std in xor xchg and in out dec (bad) cmc lret dec pushf or int3 repz sub mov (bad) jno mov or push and scas xchg mov xchg test cld mov fnstsw stos cltd std jecxz xchg lret icebp xchg mov push mov sarl dec xchg jnp test in jo gs xchg loopne (bad) pop inc cmp daa add out add cwtl push (bad) bswap jg jne lret and cmpsb ja dec lods (bad) rorb sub fwait sub xchg mov mov mov ds mov rolb xchg rorl push push mov call push dec int js mov dec add mov mul mov (bad) pop xchg aas mov jmp xor jle arpl inc jp dec (bad) mov shl ja lods lcall ss cmovb test xor ret and push fnstenv mov outsl addr16 inc jle test mov imul mov cmp push jb jns inc sbbl cmc xlat inc int mov in xor or pop mov xchg add dec aam xchg fsubr mov rorl xchg mov cmpsl jl dec jo add loope movsb test stos jne push jb push xchg push int3 (bad) or loopne lret jb push pop popf xor (bad) dec (bad) int3 mov jbe or cmp xchg dec cmp or xchg add aas mov xchg cmp lods add mov sbb xchg sbb into pop ret test sti xchg xor dec jge cmp cmp jae loopne inc sub cmpl xor push mov imul ja inc out pop adc mov jle or int (bad) std popf sub inc loop fs and xlat add fwait cltd mov mov fstl fstpl mov popa fidivr cmpsb fs mov stos xchg (bad) push mov jg loop cmpsl or outsb mov sbbl mov idivl stos test test mov mov xchg stos int3 sub test inc dec sub mov mov into ds inc aaa pop pop add imul das jnp test and mov enter loop and and repnz mov xchg or ret sti add int3 push mov call or pop mov adc lret int mov cmpsb dec cmpsl out shl mov inc mov cmpsb inc (bad) dec in lea xor mov loopne mov sbb dec jmp loop mov insb and and pushf sbb imul aam scas jle dec clc jg movsl mov and or rcll adc inc push xchg dec ret dec or repnz icebp push orb mov sbb jp mov repz divb in lcall mov lret out or fiadd sbb inc dec js ja sbb pop pop and xchg inc cmp jmp sub ret into cmpsb pop jb nop inc stc sbb sbb sub xchg sahf pop mov orl mov mov or dec or pop mov popf jp or cmpsl mov inc lcall jbe pop fmul xor stc adc sbb mov cwtl adc push xorl in jecxz jnp mov insl lock xchg cmp add rol in divb popa test push scas in mov lods or or inc aad or mov push negl dec pop mov popf popf stos sahf mov or js lock sbb mov mov xchg add xchg scas mov fs (bad) test mov loop outsb jnp repz mov cmpsl xor cltd mov and dec cmp mov xchg gs mov jne push cmp aaa pop (bad) jge xchg sbb test sbb daa test adc int js sti inc sub cmpsb in inc pop sbb cmpsl (bad) ja pushf cmc xor lret popf lds xchg mov test mov in repnz push cmc add (bad) (bad) fisubrl mov sahf out pop adcb (bad) push jne mov inc mov push rol mov repz pop ss jbe ret pop jle data16 lret mov xchg std gs iret xchg pushf mov sub pop cld jno mov add xchg dec push mov inc jmp mov inc mov lds in mov jno mov test jge dec test mov jecxz mov inc push sarb dec dec loop movsl pop push mov ss push icebp pop les and mov dec push scas lods inc or lret jl push jge cwtl je sbb (bad) rep jno add xchg es pop scas mov mov mov sub mov ficomp inc jo movsl loope add adc xchg lods jle pop mov mov movsb ds dec xchg loop adc push test inc iret inc mov sbb lds jp mov or in mov test int3 jne jge mov aaa mov movsl push insl mov test jmp mov sub xor test sbb nop inc rorb xchg add in nop enter add divb cmpl push addr16 sub push xor das (bad) imul int3 mov adc mov out (bad) xchg add jbe and jge or mov mov pop lahf or in jb or mov lock movsb adc mov enter addr16 jne ret mov lds jae inc dec stos cs ds adc adc rolb adc rorb call xlat arpl data16 mov xchg pop das jbe lahf inc add mov sahf mov sbb jmp push dec sahf xchg enter ja jecxz movsb dec je dec xchg pop pop sub jmp movsb jbe pushl ret minps lea in das aad fidivr mov push or pop es test orl push stc insl and cmpsb movsl aas jne nop rorl mov add push pop adc xchg and jl xchg fnstsw push dec xchg adc push test xchg outsl sub lahf add test inc mov sbb jo in repz xchg icebp shll idivb ss jp add mov sbb xchg scas sub lret lea xor (bad) pop xchg or cmc lret mov lret out jg or mov sti inc inc cld mov or push push inc in mov cmovne enter add pushf aam push sub mov mov imul icebp in dec mov push iret mov arpl lock inc test and inc (bad) xchg add scas pop test leave imul cs and mov hlt (bad) loope outsl lret std in xchg xchg (bad) inc cmp jp pop fmul clc mov fbstp jle ds mov push mov adc cmpl lret dec imul (bad) dec cmp xchg fwait inc push loop xor mov adc cmp pop imul jl xchg ds dec xchg mov or cmpsb pop (bad) int3 aad lea inc mov ss pop add aas dec stos sub inc push mov mov (bad) pop mov data16 sub push dec enter xchg aam test mov in rorb cmpsb lret adc in rcr pop jle fs data16 xchg rol mov xchg add add pushf test jne cmp cmpsb mov push or xchg mov dec stos int3 in (bad) std xor outsl jo cld lret xor repnz int (bad) aaa push xor sub mov dec mov les adc insl mov test fimul push movsb dec lea dec adc stos icebp std test push mov add or in icebp scas xor inc inc adc (bad) jbe push or adc mov std sub dec inc ss fsts popa mov in fs (bad) mov xor scas ja mov ss push adc les mov int3 pop push test dec pop lcall loope mov push mov mov (bad) adc push mov stos lret pop adc ja push movsb xchg mov inc mov mov lret das sbb cmp pushf jp mov dec dec mov jnp mov mov movsl in js jmp fadds das ds mov xchg enter xor sbbl cld stos inc mov and xchg jecxz es pop mov mov je (bad) mov and test shlb xor push inc addl jbe mov mov aam xor add mov mov outsb in int in cmp frstor push jmp xor loope jo (bad) push out push xor or push dec int lds or xor or dec jae popa dec push xchg cs add iret jns enter pop xchg or fdivl xor (bad) aad imul xchg in dec je (bad) (bad) rolb les nop dec dec pop enter push mov push or dec and sti mov adc mov mov std mov test scas std cmp call lock mov cmpsb (bad) or inc shlb cwtl inc or push xlat int3 xlat aaa xchg mov fs jnp xor mov mov mov cmp xchg aam mov mov (bad) mov in jmp jl mov loopne cmc mov jl in je and fdiv fwait stos xchg dec adc cmpsb add adc insb jnp sub test call mov pop test xchg jb (bad) leave orb cmp mov sbbb sbb sbb mov std mov roll adcl and jbe lahf xor sbb sub xor mov push pushf test push or pop push cltd or dec daa pop addb xchg jae cwtl adc and inc adc pop push orb daa add cltd xchg outsl jecxz ret xchg mov cmpl mov js shlb stos aas imul xor sbb mov inc sub adc pop jbe xlat jns bound mov cmpsl mov add push stos xor daa dec dec rolb jl mov inc cld arpl xchg push call pop mov jge add dec pop jbe mov in mov sbb inc sbb rolb nop and aam lods mov adc out iret mov mov push lcall mov xchg out dec lock movsb or sub sbb stos add pushf inc iret push mov dec sahf movsl lods fcmovne inc psrlw mov in xchg jmp test ss pop shlb rorb sbb xchg push sbb or int3 insb inc inc xchg mov mov adc mov dec test data16 mov push adc mov sub push jge jmp (bad) and add addr16 js lcall rorl adc sub jmp jne pop mov (bad) jle xor call loop test push test dec pop out mov mov (bad) lahf dec cmp ret test sub inc pop in jno jl mov inc out pop fidivrl mov lahf sub or pop cmpsb cmp in test cld std std fucomi jbe push and and push push (bad) and mov jno mov in push dec jo jnp or cmp das or lar loope xchg jbe mov stos out xor ljmp mov add add les jge mov inc lods push mov stos loope add cmpsl sbb mov pop mov pop imul js insl outsb push idivl mov aad mov int3 in push sti push fwait pop les pop mov subl popf mov mov push insl test add call xchg pop data16 cmp inc cmp rcrl inc out loop movsb add sbb or rcr inc cmp inc push pop or sbb leave rcll ljmp xor hlt inc iret nop jmp fisubr xchg and out cmp lcall bound push ja dec or dec dec push (bad) dec xchg pushf cmpsl xchg jle jb (bad) mov add jnp iret add push inc into test roll jp outsl ret inc mov jmp sbb ja adc (bad) int3 dec scas pop xchg push pop xchg sub insl scas lods mov daa xchg daa push es xchg or stos add lds std dec lods pop xchg jl aam loop add ret xchg fisubrl jbe lret push int das or pop mov xor cmp loop pop (bad) loop add les cli cmp sbb shlb push mov (bad) mov xor dec (bad) push push pushf ds xchg das mov xchg cwtl in dec adc push dec pop enter jle les ret jns inc sub hlt inc cmpsb cld jbe push pop (bad) jno into xchg ja xlat mov dec pop mov add add nop push jnp mov jns inc scas dec cmpsb sbb sub pop pop jo add inc jle push add or out out loopne popf mov repnz hlt adc (bad) mov sbbl xor int3 jnp jmp jbe jno adc pop dec add inc cmp add mov scas push mov or or fnstsw in stc in cmp and out dec movsb outsl jecxz repnz (bad) imul cli fwait mov mov pop lods mov jle mov mov adc insb je int inc add fs lahf mov arpl pop fucom iret or sub out push xorl (bad) inc push dec pop xchg popf push xchg push push mov jnp clc mov xor cmpsb xchg cmpl lods fwait dec mov mov add add cltd aas loope mov sub (bad) movsl js xchg in mov scas mov stos lea or xor push sub mov mov dec lcall scas mov sahf add mov jge mov or jnp dec mov dec xlat mov mov inc out stos (bad) ds lods inc dec adc jnp outsb dec inc push sub jp inc jge mov or jb,pt inc dec addr16 outsb or dec push or xchg sub xchg bound pop mov mov or mov dec clc pop push mov jnp push lds mov (bad) mov dec cmpsb push add lods dec dec insb cmpsb outsl or inc jmp inc popf lods ss sub xchg xor jmp mov mov out inc fwait sub jl mov (bad) jmp movsb mov xchg push (bad) test xchg dec cmp cmp inc sub xor lods xor mov lods incb mov jb leave ds daa jmpw lcall or mov mov cwtl jle mov lods xchg dec out cmc mov test lods mov in mov test lds mov test pushf lahf mov ds sub xchg fldl out insl ds sub mov (bad) dec or pushf inc mov dec lea mov or xchg xchg (bad) lea dec inc push or mov dec inc xor mov and lods sub mov imul xchg test imul mov xchg cmpsb cmp outsl mov push mov or push dec xchg data16 mov or cwtl pop inc (bad) dec or dec cmpsb mov fadds or inc jae cltd jmp lds xchg mov jb,pt scas mov sub or js jnp inc mov pop inc dec xchg pop icebp mov pop addr16 mov jns mov sti xchg jo xchg lods lret xor icebp stos xchg mov and cwtl fsubrs jg scas jecxz mov stos mov movsb add lahf sahf ds add mov mov in imul xor mov mov xchg mov xchg enterw mov push jbe scas xchg jb mov outsb mov xchg add xchg stos pop lret fnsave push lret pusha cmpsl xchg cmc jle aaa adc push jle orl dec push lods sbb add and mov xchg or push xor push push lods pop mov xchg dec lods jb adc jge int dec mov xchg sahf roll jge xchg (bad) ds push lea lods xlat xchg xchg or sub dec in push or lods loope ret (bad) setl mov dec and (bad) cmp push lods push mov xchg sbb mov lods jne cmpl dec or xchg ds push mov mov xchg (bad) ds das in ds loop xchg mov dec clc lods dec mov movd lds sbb sub jp xor or lods outsb mov jo call ja and pop dec cltd pushw in mov arpl nop inc cmpxchg8b (bad) in fldenv rcll inc dec (bad) xor loop (bad) jns in rorb rol jne cmpsl jo cmp test adc out add xchg mov in das hlt pop push repz and test lds sbb sub ss mov je pop mov or and insl jecxz popa xchg xchg push mov mov mov adc in rolb rolb xchg cmp cmc mov in fwait jbe mov fs mov sub (bad) cmp cmovo fs (bad) cld mov push daa cmp pop mov fwait xlat dec jl aad call mov dec dec lea nop jnp adcb lahf push ds mov stos xorl mov mov cmpsb jb enter (bad) lahf dec mov mov iret rcr jmp outsl sub mov sahf push adc in push loopne xchg cmp nop mov mov add lea sbbb pop or loop sub mov xor daa xchg lret sarl pop xchg dec xlat lea gs in jp mov add rorl cld test mov shll cltd decb pop rorb (bad) mov (bad) adc test sbb inc cmpsb stos sub push cltd inc dec shrl mov mov dec scas mov sbb push cmp adc imul lcall insb dec mov pop repz dec mov xchg lds sbb test inc fistpll (bad) jge lods faddl mov mov std inc mov mov sti pop jmp lcall push dec mov lods dec mov icebp mov mull xchg (bad) mov inc mov push mov mov movsl imul jg pop hlt mov mov mov xor jge inc mov mov or (bad) rorl mov repnz fwait lods mov mov mov or mov cmpsb jnp or sub mov mov xchg add scas mov inc jnp lret (bad) mov mov mov ret mov ret enter mov lret loope call pop shrl pushf inc clc jp xchg fstl mov shrb in dec adc dec cmc mov hlt add add add mov inc and sahf mov lods push aaa dec test and lea push jno outsb gs (bad) movsl or or loope (bad) stos stos jle cmpsb sahf dec (bad) sbb adc bound fistpll inc push and bound add pop pop push pushf jge xchg xchg push inc mov loop or lods dec push orl lock movsb loop pop cmp mov mov jne leave loope dec dec push and xchg xor lret mov push push jbe xchg fwait adc out ffreep xchg cmp mov lret (bad) sub fisubl mov bound jno mov andl loope xchg arpl (bad) hlt in lods int xchg (bad) nop pop loope les push mov cs dec test mov scas dec lods inc imul sub mov (bad) dec inc mov cmpsl lods add pop dec in mov icebp popf daa data16 or cs jns into push jb cli adc sbb add loop jge cmp in pop pushf out test (bad) and jbe loop adc mov mov test inc loop inc test aaa lret xchg loop mov (bad) mov push popa push movsl dec notl rorb repnz xchg mov pushf inc mov insb into jno dec sarb pop arpl outsb and inc pop popf rcll (bad) repz or inc add pop mov mov test jge ja add into dec inc loop pop pop jg mov gs mov jnp xor jne stc inc inc (bad) xchg and jo cmc mov lret aaa aaa sarb scas mov in fs add mov les (bad) out ss lea iret dec inc repz lock inc add pusha pop mov pushw dec add push lods add jge cltd in mov fucom xchg push adc shlb js arpl add (bad) fwait shrb inc leave (bad) jbe js movl lcall and pushf push insb pop mov out or pop inc add mov lods xchg adc fwait add inc mov faddl add jge jnp fwait (bad) dec pusha ljmp jbe cmpsb ret iret loopne jns je les mov push ret std icebp aas add pop inc mov (bad) add imul (bad) notl sahf adc cmc jge in mov push daa push fld jmp mov dec mov rcr outsl pushf xchg xchg add lods push xchg test push add inc stos into sbb cmp (bad) je jmp out in pusha or test pop adcl call cmpsl ret cmp bnd push inc xchg cmovno stc xchg dec pop (bad) or add (bad) (bad) mov sub xchg mov sbb mov test mov sub ds stos mov sbb lock xchg addl inc or lret xorl cmp add mov outsb movsb jge sbb (bad) lea scas sub xlat mov mov (bad) loop sub in pop movsl cmp imul test push test mov out lcall cmp lods mov jp push pop mov into sbb ja push movsb aam or test mov call lock neg or loopne mov mov fldcw mul mov lea in rolb fbstp lret imul inc sahf (bad) ds push in fnsave pushf mov sub sti xchg mov lea sahf or push push push mov cmp mov aam pop mov push fsubrl xchg cmpsl mov mov mov jle es cltd pop loop and sbb pop cmp test or dec inc iret jbe push ret lahf ret aas in xchg adc inc jns in mov inc jno jno fistp gs cli mov std sub test jne xchg dec lahf add xlat (bad) jbe mov or mov test and inc lods xchg pop lahf fs les lds enter or and push adc jle aaa dec inc in push (bad) out mov push mov sarl aam dec or mov stc arpl jge add cmp gs stos scas mov mov dec loop mov (bad) das bnd lret push out jge imul insl test and (bad) jo ret mov test lock out pop jne push push xor xchg (bad) push ss aam scas lock jno daa cmc xlat stos test mov in dec xchg (bad) out mov add in movsl jmp jle in arpl push mov outsl gs loopne mov in pushf lea xchg pop mov inc or fsts loop mov mov inc in cmc ja mov ret test mov mov push ret out dec mov mov inc clc dec or ret lret lea jge dec push pop inc jge mov mov and mov mov dec mov into into and stos cmp repz mov jg adc lret inc outsl adc jns pop push inc mov mov mov jmp movsb jbe lea ja jecxz mov pushf jo mov flds mov loop mov fcoml jg sbb js test xchg repnz add mov fisubl inc mov adc clc (bad) sub divb mov insb xchg and sub cmpsl pop hlt pop xchg bound add mov lea mov dec sbb mov add xchg mov sar jl dec out inc int3 sbb add leave push das lret mov dec in cmc or lret (bad) push xchg jo outsl or mov mov pop scas jle les xor je int3 (bad) push xlat inc jmp cli or ret jb addr16 xchg shlb dec stc in inc mov icebp adcl xor (bad) inc stos mov stc jmp test pop mov jl in mov test mov mov push icebp push jbe mov enter push arpl mov inc test (bad) (bad) pushf sub mov cmpsb mov je push xor fistp int fiadd xchg ret leave xor mov mov loop sub lods xchg aam fdivrl insb test icebp xchg jmp mov adc icebp ss pop pop mov imulb cli or icebp or xchg or or xchg pop mov dec stos lods aas mov movsl lcall jmp jb jns in add iret jae sbb test inc leave add sbb push outsl dec cwtl je insl mov adc add ss sub sub ljmp push (bad) xlat sti scas mov xchg ret dec cmpsb add inc sub cmpsb loop int3 stos ror mov cwtl push sbb aam add test mov push cld nop/reserved pop mov test loop lea pop stos cmpsl stos ja lcall cmp stos cwtl jnp frstor lods test cmp test les es cmpl mov lods mov or rorl (bad) loopne add jge in sub (bad) mov loop mov adc outsl jmp push dec jp or xchg and mov dec loop jno into cmp in imul mov es jbe xchg mov repnz mov bound test in pusha aaa xchg popa xchg bound stos (bad) pop int3 mov enter inc mov (bad) mov xchg mov push lods sahf cmp mov ja inc jno mov sbb jecxz in cmpsl mov sub dec fwait mov sub sbb mov frstor (bad) mov lods jg clc mov je mov cld sub dec test (bad) xchg (bad) sbb sbb mov jb xchg mov cmpsl sbb dec das mov push dec (bad) lods cmpsb pop nop aad lahf mov fincstp lcall xchg in into xchg (bad) mov jae aam add xchg pop adcl (bad) lea add push adc cmpsl jno out jae ret pop sub adc jl addl loopne insl les int3 xchg data16 jl push xchg pop mov inc sub push adc scas mov inc pop mov movsl add jg sarl fisub mov inc adc inc lcall in hlt push dec and pop mov xchg push add movsb jmp mov add push scas add dec xchg mov push int3 hlt jne mov ds adc adc out xlat leave pop (bad) or jecxz bound mov orl stc je push xchg test in dec dec push aaa adc sub mov ja sub pop dec aad push dec lret or lcall fstpl inc mov ja mov pop test pushf and mov mov aad pop (bad) mov add test adc sub (bad) sbb add push aaa inc lock test push sarl inc dec clc test pop mov cmpl aad cmpsl jns loop ucomiss lods cmp mov es cli inc notl sbb aad push jne xchg mov jge les mov jnp mov xor repnz jecxz cmp cmp js cli or ficompl mov inc mov or loop ljmp mov dec (bad) enter cltd cwtl in xor xchg mov xlat dec in mov rcll mov inc lods shrb mov mov jb js ds inc in jl lods xchg mov lret jae mov in rolb mov mov push in arpl arpl jp dec mov ret push imul inc xor dec and pop pusha pop xchg jo adc cmpl loop (bad) mov loope jae sub mov mov inc sti lcall inc mov js popl (bad) pop mov mov xor call cmp xorb je mov test (bad) notb sub jle lods sti stc test jb jmp cmpsb xchg test leave or shrl (bad) stc idivl jle js jge (bad) (bad) mov dec or int3 rorl stos call bound stc jecxz clc adc lcall mov imul mov mov pop sub pushf sahf (bad) dec in roll add sbb push push mov sub lret lock dec aaa mov leave dec sub mov mov rolb mov xchg push mov xchg out (bad) imul outsl mov mov into je mov mov in rcll inc bound iret push cmp test cmpb fadds add xchg ret or dec or pop add js mov xor adc dec jl add inc sub cmp enter loop cmp add mov loope push and loop mov in (bad) sahf mov mov or or add push stc pop xor or dec xor xlat and dec or movsb jb loope je mov imul mov stos mov mov pop mov mov stc mov mov sub mov xchg pop pop mov pop data16 xor xchg dec pop scas data16 inc jnp mov mov cli leave fimul xchg pushfw mull cld test mov data16 test fmull loop xchg adc and andb std mov mov xchg xor (bad) movsb mov mov pop add aad mov jge out insl sahf jle das lret mov into mov lcall scas lds push xchg scas adc lahf pop fnstenv in dec ret add dec xchg xchg pop xor ja outsl gs jne mov add mov mov jmp cmp rorl xchg mov outsl insl push sbb ds dec mov scas dec xorl aam jmp (bad) xchg call mov popf xorb add popl lods pushf ds out outsl gs jne mov add mov lds mov lods and mov mov stos or push insb mov add sti das push lods lds loope xchg rorb mov add scas dec mov lods push adc (bad) xor xchg mov adc mov lds jb mov lods pop dec mov adc lods mov mov mov or cmp (bad) pop xchg (bad) (bad) (bad) outsb pop sub cs stos adc push push xor cmp mov jle jmp gs mov mov dec imul lock lods pop adc add xchg cs (bad) pop push pop add mov jb fisttpl mov in sub pop or mov loop cmp loopne mov mov or (bad) loopne sub fistp jmp cmp rcr mov xchg inc mov lahf push nop lods push mov popl mov xchg cmc cltd xor insb (bad) (bad) mov mov scas js daa push add lahf stos push mov jmp pop movsl mov inc push aam jl sbb popf (bad) mov jo lea out shll popa das movsl movsb (bad) jp xlat pop push add jno mov mov iret mov mov mov dec loop movaps js xor dec add mov fidivl xor xor aaa roll shrl xor mov stos mov scas lods (bad) shrb enter xchg rorb mov pop jg adc sub in sarl inc rcrb mov pop push inc pop std pop or loope rcr (bad) mov in popa addb (bad) shrl jo cs mov or add fimull xor push fsts (bad) aam rcrl sub or rcrb sub rcl inc aam jnp mov push sub mov xchg ret test (bad) xor mov mov cld mov stos shrl and dec ret or lock cmpsb jns jmp sti daa das lods push imul sbb aas insb test inc fmull out xor (bad) imul (bad) push mov pop mov xchg lret das lods push jns loop (bad) cwtl (bad) aas insb mov cwtl pop pop inc fldenv fbstp call xchg les push scas pop add fdivrl xlat cwtl pop pop dec popa pushf fildl dec inc mov cmpsb aas addr16 repz xchg fdivrs push sbb mov psubusb fdivrl cs push aad dec fisttpl push push dec jo shl lods mov fdivs (bad) sti call fmul rcr popa addb testb push iret sti add jb mov scas mov xor mov in or add lahf push adc jb xchg jae fstps adc pop cmp (bad) xchg mov push scas stc add xchg fiaddl sub or (bad) mov ret jmp fcmovu xchg cwtl pop pop dec sbbl lahf call (bad) fistl xchg daa fcomi mov xchg fisttpl mov mov popf push or jno (bad) std nop fistl test scas fildl sub or decl nop dec fdiv fcoml in dec fdivr scas jmp pushf jae sub aam xor cmp cld enter xchg mov or (bad) (bad) inc repnz mov cmpsl add in push jns inc xchg shll cmc bound lods int dec push or dec xchg xchg js scas pop ss mov push sub push dec cmp lods nop or push sbb inc sub inc mov scas mov in stos inc loop pop pusha jne addl sbb sbb adc sbb adc dec add in mov mov adc lods fwait dec mov push repz and push cmp sub or addb rol cmp lahf std std and inc les dec into idivb push les xchg in mov pop addl mov movsl fcoms iret jo test lahf cmp sub lods hlt cmpsl jno dec push test addb cmp xchg fiadd fidivr jno int3 inc jae imul and rcrb mov lcall test mov jge mov mov out push nop lret fstpt jg mov inc pop pop xchg jle (bad) cmp ja test jp mov pop xchg movsb or xchg adc (bad) pop fldt lea xor int out mov ljmp lods sbb adc dec into fiaddl les in mov dec cmp stos loop push xchg or decl in ficomp mov inc lret mov xor fmulp jge jbe xor loopne pop dec add in pop xchg fsubrs out dec cmc lea scas xchg jle outsb or add pop std fstpl or (bad) movsb lret adc mov loope mov cwtl fwait repnz jecxz fildl mov aad mov mov loop test jbe mov (bad) repnz or cli int3 push push mov dec dec inc int3 jge lcall jns jmp js aaa jo adc xchg or fucom sbb push push mov cwtl lret xchg insb cmp ds xchg test stc mov adc pop jge mov loopne mov mov test xchg mov icebp stos lods in jle (bad) stos pusha ret xchg (bad) aam dec xor pop push push mov stos dec pop mov sub inc jno aam fs push idivl loop mov stos into fistpl loopne jae loope sub mov inc jmp dec int3 push sbb lea aad mov dec mov pop pop test lret (bad) jle and popf add pop cwtl xor cmpsl dec cli in (bad) inc ds dec aad and xchg shr imul cmpsb aad or jmp mov mov or rorb icebp fmuls adc push ficomp inc jnp das sbb pop pushf cmp insb lret or jne or dec mov inc xor or xor loopne daa mov aas cmp and xor xlat popa pop pop mov jnp arpl hlt xchg xchg (bad) roll sbb pop leave aad add (bad) lret incl ja sbb inc adc cld aad rcrb push jle mov lea mov lcall int add stos add mov ret lea mov cmpsl mov mov push in insl mov xorl xchg stos leave adc test mov cmp jno xor scas push mov xchg ss xorl fs outsl inc data16 into cmp outsl inc fs mov outsl jecxz (bad) cmpsl jmp cmp mov cld aam sub mov lods in sub int loop maskmovq enter lret dec or adc icebp notb cmp je in (bad) in pop adc fistpll mov roll out or rorb dec sahf insl pop mov lods cwtl psubw pop or push bnd movsb fiadd inc std loopne out js adc and cmpsl rolb rcl inc jl mov mov in dec jo ret mov int3 mov xlat mov pop test push enter clc dec adc imul pop push pusha push cmpsb (bad) sub stos into icebp fmulp xor add add mov add out fs int3 pop jl sbb mov fwait xlat lock test imul inc push in ljmp or cmp lret mov push mov add xchg out pop mov cmp lret rorb movl jnp mov imulb xchg push mov mov hlt sub add or stos mov sbb xchg add in cs loopne or xor iret mov imul call stc stos xor sbb lret mov insl push es pop sub push adc daa jle inc xchg hlt jns mov mov loop fwait les into mov push test lods loop jne (bad) aam push (bad) xlat inc inc pop or dec (bad) mov cmp inc aam mov dec roll lret ja mov test sar insb xchg stc pop in aas mov or stos inc add mov mov rolb mov lret test pop push push mov sbb sub aaa jmp and into iret mov dec lods lods lret or insl cmp test jge std in dec scas pushf mov dec iret pushf cli lds aad int3 pop jne test (bad) jno pop mov movl jmp dec xor mov das push add cmc test aam dec int3 cmpsl jbe orb dec aaa aaa loop sub int3 adcb mov jl xchg in iret repnz push inc and jle or addb jb xchg enter sub mov lret mov push or xor sub mov inc or mov sub push lea sbb test or pop cmpsl fstl xchg out pop mov out pop mov in pop adcl cld ds sti mov or (bad) hlt add jae stc push mov ljmp mov mov or xor sbb cli fxam xor lea push (bad) dec lods sarl movb (bad) jnp inc push lods push movsb push inc dec sbb inc jmp fstpt cltd push movsl ja pop mov push dec sub jp push mov push inc pop jb cmp push push sahf mov cmp stos adc push (bad) inc lea mov stos or mov pop xchg pop repz push adc cmc inc push pusha ja stos aam sub das or ror and ds movsl dec push ds jne inc orl ljmp pushf sbb add xchg iret mov xchg jle dec mul test xor loop stc dec (bad) jge jo cmp jl jle lds fadds inc mov inc jno dec dec cmc (bad) dec mov ret xchg jnp xor ret (bad) mov mov lods mov test adc out cmpsl pop std or and lcall shlb jge scas dec xor loop mov cltd jle or xor lds loop mov lock das outsl cwtl fildll push xor movsb iret outsl pop inc dec cmpsb pop les cmp inc xor (bad) aam fmull mov or mov mov dec jo sahf pop mov lds stos scas iret daa jle mov add in or sahf jge jecxz mov cmp cmp cmp or cmp pop cmpsb nop jbe stos lea mov mov leave and stc fistpl outsl rolb mov (bad) hlt pop js sub mov lods cmp push add in das gs cmc adc sub jge subl hlt sub push cmpsb xchg (bad) mov pop mov inc (bad) mov (bad) in xor cmc jle mov mov mov (bad) jmp ja push outsb (bad) nop loop nop inc mov mov loop jne cs pushl das cmp sahf int3 inc orl dec lods (bad) cld daa outsb leave sbb cmpsb or xlat pop xlat inc decl fldcw jne mov jg pushf push mov xchg inc in dec mov push in mull or sti mov and pushf mov fisubl or push (bad) sbb pushf mov into xchg shll xchg mov add ja outsb cld or ljmp push clc bound nopl lahf jbe mov in shrb pop in lds pop repz jo inc sub push outsb push cwtl mov dec mov add js loope iret inc dec (bad) mov inc xchg jmp push lret xor sti cltd add and dec add add xchg lods cwtl mov hlt popa aam dec mov sar (bad) push in std popa or (bad) sub adc pop cmp insb fwait xlat fsubs pop pusha inc js add mov jl inc imulb rcr cld jo test int3 pop mov in adc iret in sar mov scas mov jp sub add sub inc jle test flds test outsl mov data16 aam fwait xor mov mov jb pop lcall or push fbstp movsb outsl lret xchg daa mov repnz and ljmp mov arpl inc or or repz lea dec js mov inc nop fisttpll jle or mov daa das dec or sbb test push popf jns xchg ds add sub lahf int3 adc inc sbb pop inc and ret mov cmp imul paddusb imul addl js jl jecxz ret daa add mov xchg loope dec push test sti iret xor cmpsb pushl imul test pop imul fadd dec ret adc jle stos popf mov (bad) fsubs mov mov test ds lahf adc mov add jne fmul or push cmp push push mov out push adc xchg mov add or inc add fnsave xchg xchg popf jno in xchg jnp jnp inc mov ja jns roll mov push sub imul jb dec (bad) lods sbb xchg jmp mov cmp push cmpsb divb add xchg and jmp cmp fbstp xchg adc fisttpll lret or pop incl xor lods xor inc fisubrl in mov lret popl sbb mov mov cli push daa dec ljmp sti rcll (bad) jg sub mov lds jns pop in leave pop cmp inc nop stc mov pop jp xchg (bad) dec (bad) in push jne imul enter leave mov pop (bad) lcall jge mov scas fcmovu add loop adc mov mov aam jg stc pop adc xchg inc shlb (bad) xlat jp ljmp ret mov mov mov scas hlt or cmpsb add push cmp rcrb dec lds push dec (bad) sbb (bad) pop (bad) sbb cmp pop mov and lahf inc dec shl es jbe adc or (bad) mov dec pop jl cmp in adc test lods sbb xor lea loop lcall outsl sbbl mov sti mov aaa push jmp sub fldt sbb insl pop stos jnp sbb in or fsubs dec xchg cmpl add xchg ds scas sub out xchg and (bad) xor pop cmc sbb in jge or cmovl xchg mov dec mov add mov icebp xchg scas rol ss test push mov (bad) dec adc jg sbbl add ds into cld cmpsb mov push mov iret ss mov mov add cmp xchg push (bad) stos (bad) mov scas aad ss aad je adc rolb pushf push scas mov loop (bad) in cmp xchg push pop mov lock xchg add xchg into adc mov inc test jo jp inc outsb mov push xor mov aad or sub jle mov and (bad) mov or mov int3 push inc or (bad) or out and or mov frstors in dec push mov and push adc cmp or mov pop pop mov inc or push push mov mov mov movsl xchg mov jle les mov jl imul push jo jge dec or jmp fstpl push inc rclb xor or js jle aas inc pushf sub (bad) and jnp sbb cltd les mov mov aad mov mov (bad) sahf clc pushl mov hlt testl xchg pop in daa repz hlt ljmp xchg push mov in sbb test into (bad) xorb (bad) mov test (bad) or pop in jo call mov mov js fldl mov cmpsb inc mov sahf fdivrs scas jb fiadd push dec (bad) mov sahf lret jo out leave sbb sub scas mov mov loope mov (bad) loope xor pop jl mov into stos or lock mov jle stos add pop dec adc push mov mov lret test dec (bad) fsts (bad) jbe out pop (bad) fs pop cmpsb add outsb in loope hlt jne jb mov mov push dec data16 out je sahf sbb dec dec mov adc dec sub jle xor aaa pop pushf mov data16 bound and (bad) push outsl imul cmp call loop pop cmp push lods call js mov pushw xchg pop ds add xchg push xchg or mov clc mov mov jnp xchg lds sbb mov in aaa mov scas mov test js push stos insl (bad) lcall inc xchg or cmpsl cmp xchg push xchg cmp lret sub sub inc jb push sub mov mov lret jp add push in dec cmpsl or lcall (bad) repz repnz push push icebp or push test add or mov int add cli lret push fisttpll mov xor or (bad) dec mov jle xchg or add push xor incb sbb std leave dec pop mov mov data16 cmp addr16 shrb in and xor mov insb mov outsb or jbe (bad) ljmp inc pop (bad) inc data16 and cmp xchg sbb push xchg mov mov inc push lea sub jnp mov mov pushf cmp addb es nop pop lods fidivr (bad) or sti mov or mov loope out and pushf mov lea (bad) rcll roll test mov nop in test jo in mov push mov inc out rcl jp out xlat jbe dec data16 bound mov outsl sbb mov std pop in ret xchg add (bad) aaa pop pop cmpsl push cmp daa cmpl data16 sub inc pop cmp xlat mov mov xor test inc pop (bad) loop mov std movsl xchg js scas pop mov mov or stos dec mov (bad) outsb jnp adc fwait dec repnz adc lods pop jle lods inc pop mov add ret mov in aam pop sub dec rorb lcall adc xchg jle,pn push add sub dec jge and std xchg push aas pop mov lods jnp sub dec jg std or mov jo xchg mov mov movsb xorl in sbb mov mov mov cwtl fwait stos pushf mov pushf fdivr cmpsb lea subl push imul mov jge mov ds or js scas ret (bad) inc les call test inc mov pop lds push xor jge (bad) push sbb movb stc adc popf sub cmp mov add leave xchg cmpsl popf icebp xchg stos fnstsw or xchg cmp add (bad) jmp mov mov dec mov (bad) iret bswap xchg xor dec cmpsl rcrl cmp mov test jge lret bound xchg shlb cmpsb jge adc pop inc mov in cmp fstpl dec mov pop xor cld sti push in sbb ret xor mov mov outsl xchg or jl out jb add (bad) notl lret sbb hlt cwtl movsb fistl fstps pop mov dec stos scas add pop push mov mulb pop pop ret dec call jl out inc pushf cmp xor mov (bad) rolb xchg (bad) mov jmp mov ljmp (bad) pop or scas dec jmp mov lahf test push mov push mov sub daa int out stos xor adc push dec subl lds or and cmp add cmpsb mov and jo cli and cs fs scas (bad) lahf (bad) push cmp cmpsb mov lea in cmp cwtl negl insb inc inc mov pop xchg and test fwait outsl sbb inc or int les jo push incl lret adc jo aad mov xchg mov inc jp int mov adcb lcall push push mov or mov pushf or push mov (bad) mov movsb lcall push xchg inc push test pop andb or (bad) nop or imul mov test iret pushf pop and add dec dec pop icebp push inc sahf movsl lea test add inc mov inc arpl into push icebp xchg lcall add lea and push xchg lret pop hlt mov jo mov fsubrs ds cmp dec (bad) out jl aad mov sub jge mov test xchg adc ds xor push add addr16 and test inc adc xchg rcrl pop push scas mov cmp jp fwait movsl sti push sub loopne dec mov xchg mov jge (bad) sti dec movsb jb out repz aaa js jbe push cmpsl repz and mov pop dec jno mov add mov jo out sub shrb cs sbb mov inc lret mov mov pop push dec int3 ljmp mov mov int3 in xchg jns bound inc ljmp fnsave inc mov or test push mov jl leave mov call add or iret scas mov dec lods pop jg sub xchg inc stos adc repz dec pop shll out mov xor inc inc test les xchg push add je cmp cmpsb mov cld mov lods mov movsb fistp out xor or jmp movsl lcall add inc sub test push mov loop xor loopne dec mov sbb bound (bad) in cltd push inc mov (bad) fmull push xchg lods pop in add mov jl mov mov int (bad) dec lods (bad) (bad) dec call fmull sahf inc (bad) cmp fwait int push jl mov out shrl cmp into sub stos fdivrl mov jecxz inc (bad) jo add arpl mov sti jg push fisubr push jge (bad) js mov add cmp cmpsb js mov out mov add or jnp sub ret mov push mov mov ret mov scas mov insl dec or ret jnp pop mov push xor cld test mov and cmp or fimul push mov roll jae outsl cs int3 in xchg sub sub and mov ja xchg icebp push test dec out jp add or sub pop xor sub divl test dec in std xchg repz inc mov addl ja (bad) pushf pop lods push pop pop mov fdivl jbe pushl mov or pop mov movsb xor fstps inc inc clc mov stos sbb mov dec leave add mov outsb push push scas orl jle mov aad cmc mov arpl test adc int jae rorb add pop in cmp mov add xor bound aaa test pop ss sub fdivl movsb xor jo mov add pop mov ret jnp mov rcll cmc jl dec inc inc jnp in rorb leave (bad) mov sarb fs lods mov das sbb popf insb push sbb inc scas or dec jle add pop mov std cmp jnp sub cmpsl jbe orl or sbb test into ljmp xchg subl add dec leave jl lods pop adc mov dec fmulp cmpsb add sahf jbe (bad) cmpl (bad) dec stos dec sahf pop jmp inc (bad) dec je stos add jg inc cmpsb dec jle cld in pushf outsb inc mov (bad) daa test lds or inc jp jbe je int movsl jo xor push lock xchg test mov sbb inc push ds sub hlt sahf popf inc push (bad) fiaddl inc mov xor loopne call ret (bad) jo movsl ds xchg (bad) outsl mov in (bad) imul repz movsl in (bad) xchg inc fcmovbe and sbb mov ja sahf mov lahf push call push out xchg (bad) icebp xchg scas in lods mov or int or dec fimul sahf clc icebp clc (bad) or lret scas mov lcall inc jp xchg out scas mov push sbb ljmp lea jns jl (bad) pusha jge dec xchg jle (bad) dec mov out in and (bad) sahf add xchg inc popa pop pop mov shll jns jp mov mov cmp lds sub std inc int3 inc mov movb into cmpb (bad) scas mov test mov jg sub mov push pop movl dec sbb cmp add cmp (bad) jne fdivrl out jle push sub cmp mov push or jo mov lcall jns mov (bad) xchg jo inc sbb xchg inc rcr gs pop mov and lods mov mov jbe test cld pop (bad) xchg aaa adc mov data16 in ds jno fxch aaa sarl dec mov jecxz dec fstpl gs cwtl xor mov push aad into dec cmp test sub int3 in mov inc aam pop mov shrb add into lahf dec or jl rcll mov cmp dec adc or add xchg fdivs lds out pop adc pushf mov lea xchg and rorl dec mov sbb mov incl (bad) jmp push mov mov xchg mov inc sub mov sub mov sti das mov shlb mov hlt adc mov mov (bad) push jecxz and pop or insb adc ret mov or and (bad) mov push imul dec dec xchg mov mov movsl mov adc shrl cmpsb inc pushf mov mov xchg dec loopne or push dec push in xchg push jle std cs mov jmp pop push or lods inc mov in out popf jp jbe stc jns sbb or data16 in das pushf push fstpt dec sbb mov dec (bad) jno adc mov mov ja xor pop xor fnstsw lods mov dec mov test jle mov insb mov mov xchg pushf pop adcl int3 in sub repnz adc pop inc sbb leave push sub cmpsb cmp hlt push dec stos loop outsl fsubl dec (bad) add inc int3 in push push bound mov call jbe sbb inc push mov mov inc pop outsb mov inc inc call mov lods xchg arpl addl movsb cmpl or sub pop subb rcrl sub push (bad) mov xchg int xchg push adc sbb xchg inc imul push push pushf fsubs scas jnp mov or pop mov pop mov or dec mov and fdivl inc add inc add (bad) xor je shll aas test stos (bad) stos xchg lret imul mov jg std inc add jmp arpl cmp scas pop je cld jns cmc push mov inc mov in popf cltd fistpll mov xchg mov cmpsl (bad) lcall test in lods cld add gs or sub pop ss xor jns psubsb outsl xor dec in mov aad jg (bad) jne push (bad) lock pushl pushf repnz sub pop (bad) scas or mov lds jne sbb fistp pop mov or sarb push lret insb sub adc int3 ljmp std jl fisubr inc in or adc scas mov jnp int3 xor lret pop cwtl enter mov cli or cmp dec lds sub pop or sbb insb (bad) popf sub sbb jbe,pt rcll inc sub adcl add ja stos in jb out cmp hlt dec ds dec (bad) jg std jg aas ss (bad) movsl in test outsl inc in xchg pop pop dec lods (bad) in jp mov xor cmp mov push frstor movsb in xchg xchg lods stos lea sti aas lods bound jg push push jecxz insl scas dec into cld add jb sbbl jne xchg stos aad lret aam and push mov and dec into xor add mov sub insb mov das dec (bad) (bad) push dec xchg lea leave mov pusha stos mov sti lea or stos push loop fistp jns fwait lods test aaa (bad) faddl mov iret jle push std test jbe add and mov mov mov adc pop mov mov sahf imull inc iret shll scas mov and dec inc popf pop mov dec sub mov dec sti into aad je int shrl sub dec dec jo lret bnd jo sub roll lcall or mov mov (bad) dec jg shl (bad) movsl inc arpl ja dec ljmp xor sbb dec mov xchg int pop xlat dec pop pop cmpl dec sbb or xor mov mov (bad) pop xchg stos jns cmpsl leave sti aaa mov pop inc add iret mov dec jl mov or lods xor (bad) dec pop mov xchg dec gs aaa cs pop xor jns fisubl cmp test adc sub pop xchg aad rcr xchg mov stc stos (bad) xlat pop mov in test add mov aaa mov adc sub mov mov rorl mov xlat cmp ds inc dec inc xchg dec xor adcb jbe xchg fstpl jl mov (bad) les test xchg add dec push mov dec xchg push ret jae je ljmp cmp cmpsl push mov cmp mov jo pop (bad) jge jle fidivrl fwait mov sti fisubrl leave sahf sbb movsb add or (bad) cmp mov inc aad push les je xlat jns in aad fnstsw stos pop pop adc sub pusha xchg loopne sbb fsts and mov or or pop cmc pop scas mov mov jo lcall fstpl dec adc fs add jmp jg push js sti jns,pn sub rcll pop aas loope stc sub js push inc sbb aad inc dec test push push mov push push dec adc jp adc dec dec add mov jmp jbe jecxz push jbe mov lcall dec clc sbb inc in das sarb je pop inc in cmc adcl xchg ret mov mov jne (bad) xchg jecxz,pn stos sub outsl push sti flds cs dec adc xchg jmp xchg inc or mov loope add cmp mov xchg mov cmp and pop dec cmp add or push add in (bad) dec lea lahf lahf lret das dec jb popa stos xchg dec sub mov sti pop push ret xor sahf movsb ljmp add outsl (bad) stos pushf int xchg jle dec sti and cmp movsl js mov xchg mov fstpt pop xchg and jbe sbb lock fdivrs add dec adc cmpl push lret add lahf loop push inc push outsb push in xchg aad pop sarl xchg xor push out add push dec into idivb lcall sbb or cmp adc sbb jp fwait arpl mov mov sahf pop fldcw mov movsl lea mov mov jnp push xor push rcrb ds mov mov int inc xchg cwtl push (bad) cmp push (bad) fstl jmp add pushf xchg cltd inc xor stos or repz add inc add fcmovne add add cs add out mov adc pop dec push ja push xor xchg sub add jge pop fldcw jg sub mov jge xchg (bad) dec sbb xchg jnp jp xchg pushf lds in inc das add cld pop test mov dec outsl scas sbb or mov pop (bad) mov mov mov jb mov mov dec xchg mov push push or lods rcrl bound scas jl mov int mov inc xchg dec (bad) stc nop arpl jl fwait mov mov leave jae daa mov dec mov aam xorl test orb test inc pop (bad) mov fisttpll ficom cmpsb out jns jbe mov popa mov and xchg inc jl dec clc loopne fs dec jno loop mov pop sbbl int3 js lcall cmc mov push pop int xor int3 out mov inc add push dec xor mov push xor jl cmp dec push pusha cmp jmp dec notl iret (bad) aad fst cmc es (bad) jp dec xchg cmp cmp cmp cmpsl add sub jns jno cmpsl push shll sbb pop lcall inc inc test pop pusha loope pop addr16 mov outsl movsl mov dec insb les mov xchg int mov inc xchg pop scas data16 gs push das ds mov pop pop sub or inc (bad) out dec (bad) outsb cmpsl dec mov push xchg test mov test cld movsb push xlat fldcw push lahf dec ror dec das dec mov in dec arpl push mull aad mov mov sub adc mov in mov jle cld add jae and cmp inc scas out test stos stos or mov mov mov das mov jle lcall dec mov fimull cmpsl pop cmp pushf mov push mov lods and andb inc pushf stos xor inc lods adc les jp insw xor cltd jb adc cmpsb (bad) mov inc sub pop (bad) sbb pop push sbb shrb std xchg in int3 cmp jae mov divps push in pop std jae stos jo fisttpl lahf add (bad) mov mov mov lcall mov test add loop (bad) std sbb lcall std or add repnz loop stc or cmp mov cld lret push adc js clc mov cld cmpsb mov inc fisubr jno sbb or push in lret and scas fs mov in fwait sbbl sbbl push jnp and imul push push push and push and lods in dec scas sarl lds and lret mov inc adc dec jecxz out push lea (bad) add hlt ret mov mov pushf test aaa mov adc icebp mov inc roll popf xchg add rorb jg and rorl fsts lea pop test imul mov mov fildl mov inc movsb lods repnz arpl add sbb hlt fsubs and lcall dec aaa mov cltd push inc cld fildll push xchg pop adc jbe pop sahf mov push pop mov inc fwait xlat adc inc cmp pop rorb lahf stc mov push lods mov dec inc mov xchg jge fisttpll iret and xchg dec xor js xchg sub pop call mov xchg sbb dec add mov adc push sahf push mov ret mov push fisttpll ds mov xor dec cltd shr xchg push mov out jne jge ss inc mov jb cmp ret dec mov shr repz bound fnop stos mov in pop mov lahf inc adc mov idivl or jae ds mov mov scas push inc jns lret imul iret push adc fsubs stc xchg inc fmuls inc (bad) or inc push movsl or imul ds xchg ret add adc cmc test push insb movsl in test lea je fsts inc dec jg mov movlps pop leave xchg adc cmp mov (bad) push mov mov stos jmp jo iret test mov flds mov stos pushf mov cmpsb lock push cmc push stos dec cmc or or xchg das jge mov aas mov pop xchg xor pop stos aam mov enter loope jg sub xchg or mov xor imul adc loope sbb or pop add mov jp insl push jge fstps ss lcall inc rorb scas ja leave ss stc jecxz aaa inc mov cmpsb adc sub or jmp mov dec xchg sub sub inc sbb add mov pop push fsubs jne and inc adc dec push jg inc push in dec ja add inc in stos mov loope scas add cs aad jbe pop lods xor cmp ss in jo repz cmpsb xchg (bad) dec jg mov inc mov into sub into lahf (bad) mov mov dec imul push jb scas inc clc outsl stc fcomi ds adc cmpsb sbb pop out sbb fsubl in pop push les mov insb mov insb ret sub shr mov repz out push pop lods std add loop cld aam (bad) enter mov jl sbb fistp add xor out lods add (bad) jo jle sub sarl dec mov popf or mov dec in mov lds sahf cli pushf mov cltd ja dec stos into jg push in lea mov add push enter int int3 int stc or xor jle adc dec pop fs inc imul jb mov cwtl mov mov ror enter gs aam stos inc mov frstor (bad) jle in test mov jne mov (bad) aad or add cmc es inc dec mov dec fidivl (bad) cld adc adc adc mov pop pop and lcall in std rolb mov (bad) dec mov mov dec or in ret into shrd xlat pop (bad) sub dec xchg inc lds iret cld or jle dec (bad) xchg cmp lret sbb cmp adc stos push or add dec pusha push mov jnp lods sub cmp add mov and push pop xchg inc mov gs iret xchg in cmp push adc rclb adc cltd icebp add test call ja cs push xchg xor xchg jle lods repz test pop sbbb dec pop aad dec sarb clc repnz mov inc movsb add inc or sub nop clc xchg push sbbb mov adc cli lahf dec dec lock pop lcall mov addl movsb std sahf int mov dec addl jecxz cmp (bad) cmpsb or mov lds or gs test mov test ja sbb or flds clc jbe xchg dec (bad) imul stos scas push adc test js push inc inc push cmp jge jge les fnstsw mov cmc sbb pop mov pushf test pusha xor jl lcall fisttpll add loop arpl jae and hlt out shrb subb xchg mov fildl pop cmp dec aad stos add xor cmp cli sbb lods dec mov sbb in or repnz or mov pushf nop xor je dec cmpsl mov test enter pushf js js mov pop sar rcr imul jns test nop rol xchg gs mov pop outsb popf loop add das mov mov add xchg mov and sub outsl (bad) pop push xor jecxz dec jl xor xchg inc mov idivb mov outsl cmpsl cmp sub inc (bad) mov mov cmp mov inc dec or jle dec mov adc mov (bad) cmc ret adc jmp hlt idivb mov dec push aad into dec and ret outsl lret push inc (bad) lret jge pop xchg pushf push dec aam (bad) fisttpl fsubrs jge lahf lods mov adc std sar out mov jo stos push xchg dec mov add int3 in mov mov fmulp inc jb jl or mov mov pop test fwait es jnp popf fwait mov or mov xchg cmp pusha add xor jo scas test cld popa and dec orl push jb push mov mov (bad) stos adc mov adc dec subb add xchg or dec adc test mov leave mov scas lret test pop loope (bad) pop leave fnstenv jo and nop cld push jg insl jge push movsb pusha data16 dec divl cwtl and jge pop mov or mov stos dec iret sbb cmp mov mov int hlt outsb or in jge sbb xlat call je (bad) push in and test lea mov mov cmp stos sub push scas add mov jb or push lret xchg cltd mov mov xchg mull ss add sti dec mov adc or cmp dec dec jecxz sub mov xchg int3 lea cmpsb and or aas inc jns loopne push xor sbb jb gs or jns repz add mov mov jp test outsl xchg xchg repnz mov mov addl xor and rol jle or inc rcrl inc test jbe push mov adc jmp lods repnz dec dec xchg outsl out push mov movsl mov push icebp add dec stos jb sahf das repz imul jl inc push insl js jl mov arpl push cmp ret push push cmc test mov inc or icebp outsb mov jg test in dec mov out cli cmp sar lahf fdivrl mov cmp fnstenv (bad) adcl sarl (bad) scas loop dec leave cli (bad) repz out inc mov fstpl push inc fcomip cli scas cmp std sbb aas pushf mov push mov jge pushf inc (bad) cmc sub das sbb test mov loope lcall scas in jge sub pop inc roll inc dec stos js push pushf dec popf jo es sbb pop pop cmp test xor sub mov cmp cmpsl les push inc sbbl popa push (bad) lret jle jnp xchg push dec xchg popf fdivp dec pop (bad) jle insb inc pop dec (bad) add sbbl lds rorl mov jl jle jl push jae mov sahf pop ss fildl jle inc mov dec movsb pop mov int or std sahf mov or loope in mov mov cmp test loop pop push je,pt pop xchg sbbl out stos sti cli scas iret add cmp test dec inc fisttpll pop push xchg push dec xor xchg mov mov jns test stos sbb outsl add xchg ret mov scas inc in das lahf push add mov push and dec sarl pop sbb mulb push mov cs xchg mov test xchg mov xchg dec popf loop imul stos lods sub test nop and aaa jbe mov int3 xor nop outsl jge pushl ds mov dec ret out roll aaa sarb dec adc lods lea rolb and mov sti nop pop xchg push out cmp jl xchg cmp lods int pop pop mov test mov inc ja cmp lcall adc jmp fs inc jg jle fucom gs jl jns mov push lahf inc xorl push adc fiadd call mov ja or flds pop xchg fcmovbe xor inc mov mov cmpl (bad) adc inc xchg ss mov pop cmc fdivrl rcrb cmp nop mov add jae sahf add bound (bad) xor jbe push dec rcl sub dec int jns adc or in loopne adc xchg mov inc mov push cs xchg push mov lahf (bad) in enter push cmc inc xchg push dec cs test movl dec bound in push aas jo movsb mov aaa outsl push mov loop test cmp mov scas or add inc imul xor xchg lods cld adc xchg fwait mov sbb insl add ret cmpl dec sub sarl ret stos mov xchg lds mov cmpsl sar cmp mov sbb lahf inc mov add mov dec jecxz pop pop push pop out inc sti mov jmp mov dec mov (bad) mov mov int lcall or xchg pop inc or inc cmc cwtl jg dec inc xchg mov ds (bad) dec out pop push xchg adc mov cwtl or lea push xchg mov xchg mov xchg jns stos mov push scas ljmp push inc dec lea jns inc pop sbb xchg sbb push mov test pop push insb xchg xchg and lret scas icebp inc aad (bad) xchg cs hlt je cmp popf roll push ds scas cwtl dec in fildl cmp fldenv jl cwtl lds cmp ds inc hlt fldpi dec cmpb dec xchg in dec xchg mov pushf inc sbb fimull xchg cmp cwtl mov mov out mov out push or push fdivrl fwait aad mov mov insl mov adc call dec pop jbe je push stos or ss xor or push add add fistpl fwait int adc dec mov mov or pushf push loopne fs jno jp iret push cmpsb mov rorb das in std inc mov fdivrs std dec push leave in or and mov (bad) cs cmp lret hlt jle scas fdivrs mov std mov icebp mov dec inc and inc test adc or mov mov or push add lea test lods mov mov mov lods mov add pop test jns stos mov sbb mov jbe add lds dec subl or jp push jne data16 jne subl or pop sbb mov scas dec mov sub jl and xlat lret inc in and xor mov ja stos mov pop test lret push add imul xchg int3 push mov and inc push inc out pop lods into iret inc iret xchg mov cwtl leave xchg xlat dec jnp cwtl loope loopne (bad) negl scas sub je dec orl addl sti pushf fldl aad jp cmc xor push cmp (bad) (bad) mov ja adc out loopne pop inc sahf push test out mov add mov aad dec sub mov fild mov fidivr fildl or xchg dec cmp pop mov mov xor addl jb cmpsb jmp mov sahf sbb xor jl xor mov xchg push dec or dec mov subl xchg jp (bad) lods jp jbe push jb dec outsb jmp mov pushw bound enter pop add push mov push and jo mov jno jo mov jno jae stos mov repnz adc mov cs sub cmp dec push lds aas cmp inc leave vpaddq scas stos std push pop stc mov test icebp mov in or jmp in or dec mov add pop das and push fsts mov xchg bound inc (bad) hlt or or sbb mov mov lods incl push jmp inc or xchg push cld or push lock repz jle dec (bad) mov (bad) notl sub pushf jge sahf fldl (bad) mov mov cltd lock (bad) mov flds mov xchg outsl cmpsl push sahf outsb lods test jns loop dec adc pop mov scas pop lods inc outsl adc jle stos dec mov mov int sub and inc add dec sahf int les xchg or aas icebp stos mov mov push sub lea pop fsubrl test lret and ja and std jle shrl dec push cmpsl out enter notb jae dec mov xchg inc mov xor mov inc sbb js aas push mov mov xchg cmc pop mov pushf inc push inc cmp xchg pop add xchg jno fisubr jmp mov jbe (bad) sarl jge jle dec push je sbb fwait std popa sbb and inc jl cmpsb jle je leave in adc xchg outsl or and xchg test ja pop test mov cmp test faddl mov jmp nop dec mov pop mov xchg (bad) into sbb mov xor lret dec mov jle and adc test sahf xchg hlt mov push (bad) jno pop mov lret pop mov push pop mov lret es aam pop ret inc std add mov inc cmp add cli mov fldl jns xchg push add cmp xchg std stos sbb outsl xchg mov cmc es test jnp cmp cmp test cmp sahf ds pop imul jbe leave and push int sahf xchg ror mov xchg aad mov jae jp mov or or push notb pop aad inc dec (bad) or imul and pop lods scas lcall dec sahf jne push sbb cmpl (bad) fldcw test xchg (bad) iret ja cwtl xchg pop js jns inc sub xchg jl dec dec aad xchg add jg inc mov push pop pushf mov mov mov dec adc dec inc scas xor or iret mov push int mov add stos (bad) pop scas push mov jl add js sub cmp dec int jecxz lock mov xor les jno cltd or sti mov push (bad) test xor cmpsb mov inc jecxz in jns or or cmpsl jle data16 lods or lods mov ds test mov cmpsl add sti jbe addr16 cmp xlat xchg pop fildl stos fs ss sbb movsl loope mov in lods sub and push lahf js test in das jmp pop dec pop (bad) test aaa jp imul pop mov mov cwtl cwtl scas gs inc pop fidivrl push jl js xchg pop xchg jbe lcall lods jnp sub cmpsl jmp cmp and jae data16 or inc aam (bad) outsl push enter fldenv jo int xchg pop (bad) (bad) mov inc mov jnp push clc adc dec ja add cmc cmp lock jo (bad) push daa fnstcw adc jl pop arpl in call pop mov sub call cmp (bad) mull jge clc (bad) (bad) mov add orb mov and (bad) inc pop (bad) cwtl mov sub outsl mov and pop cmp push test cs (bad) push cmp aas aaa lret jmp pushf xor push cmc pop fst and pop sub pusha cmp (bad) jl loopne jg jae inc popa mov in je lds xor inc pop add pop notl jle add pop cmpsb icebp xchg mov pop pop pop or lcall sbb pusha jns pop inc mov mov jb sti (bad) bnd jle pop mov dec push mov mov testb add add lock lds loope (bad) xor enter (bad) fdivrp push std ds jo sbb xorl xchg push mov sub into and lods shr inc dec movb into cmp into popf mov ja push fs cmp les dec inc mov or (bad) outsl jge ja jnp mov adc jmp cmpl push pusha into popa jl (bad) mov push (bad) xor test outsl dec sub adc cs inc mov orl lods pop into pop cmpsl stos push jg loopne mov neg repz jo in scas or jmp out jecxz or sbb aad inc mov inc gs (bad) adc mov dec testl sbb inc rcll lods and jo xchg add sti rol gs lcall push inc (bad) ljmp lods ret imul in jae aas sar push js mov mov jb rclb repz popf jns (bad) dec dec and sbb and ja pop scas push data16 sbbl push sbb sbb pop mov (bad) or cwtl jge sbb push sti ja int adc lds pushf xchg rol and xchg inc mov lret push iret ret mov jge dec test mov dec lcall mov mov addl cmc dec mov aad jle mov lods jge inc (bad) cmpsl int3 sti ds mov hlt scas call ljmp std cmc xor fsubs scas push test mov cmp popa jnp ss mov push stc fstps sub dec pop dec rcll push and sarl jmp jns aaa inc or or sahf stos push add (bad) jne dec jbe mov mov mov int dec add repz clc les mov mov mov cmp ds cmp add in jmp adc add add popl lcall fistpll mov lods xor div cmp (bad) jle push jno loope push rclb dec rorl mov outsl inc test lods cmp mov je int3 jge cmp icebp jecxz fadds xchg adc mov mov and push aas subb ret sub sub (bad) test mov lods loope dec cli adc ss test aad dec (bad) add inc xor fs bound daa int popf mov push jg mov xor pop mov jle dec divb js lods pushf sub or lds pop jle cmpsb mov and dec inc cmp xchg inc cmp and cmp jns jl scas sub mov and dec cmp pop add xor loope xchg mov push mov and imul xchg and dec adc jns movb test leave std adc pop sahf dec aad mov push repz je ss cld jp in andl jge pop nop shrb sahf faddl sahf xor or sbb pop mov mov lock in (bad) mov fwait xchg or jp mov mov es sub (bad) and inc jle loop rclb js mov lcall sahf pushf das add pop mov add cmp push jns nop lods push popf aaa jne cmp dec sarl sti sbb jb cmpsb (bad) arpl pop iret (bad) roll in jmp mov jp jl leave cli cmp outsl push inc pop ja mov ja or js in inc jl (bad) stc push je dec loope adc push stos outsb ds popa (bad) sarb ss scas rorl mov dec lods lahf arpl mov cld mov lret sar gs push roll mov cltd or or jl (bad) dec cmp scas ficomp cld cmp (bad) in mov and mov xchg jbe (bad) test push aaa leave pop ss or add fmul mov lahf lahf mov repz mov leave lcall test inc push cmp push fidivrl lcall orb sub mov in iret cmp stos add mov pop ds (bad) jns in push lret pusha fxch ror scas ret cmp mov out sub mov dec test dec mov mov mov sti dec int push jb loope jns (bad) cmp movsb ret loopne jmp jo dec jle push fistpl mov push bound ja mov mov iret inc pushf xor popa fadd mov xchg cmp sbb lret cs xor mov cmp jbe cmp enter xchg adc rorl mov shrb and cs dec (bad) aas mov mov jo,pn pop mov mov mov xchg cmp cltd nop push aad dec lret stos jmp mov mov test xchg or aas mov mov adc in imul mov pop iret sbb lahf sub test fisubrl cli cmp loope mov lea mov add leave push test push inc rorl test lock cwtl out pushf in push dec std adc test lds enter push xor cmpl mov mov xlat sbb sbb in js inc fsubl inc jecxz xchg mov rcr cs bnd mov pop and push xchg test ret fwait int inc xor mov pop mov add fiadd xor outsl and cmpsb jbe push push jnp dec xchg add lahf xchg bound scas lahf les es adc cwtl lcall ret pop scas in cmc repnz dec mov call push (bad) aaa hlt cltd mov pop cmpsb mov outsl repz (bad) cmpsb mov jle mov test mov mov in andl popf mov push mov xchg xchg jo dec mov mov test add inc cs ret popa push (bad) xchg or out loope rcrl mov or jmp pop mov lods int inc cmp mov pushf cmpsb mov mov inc or dec inc std push pop outsl jbe add cmpl mov jp push dec add pop xchg mov inc fcoml js pop outsl stos out lods mov scas nop sub (bad) imul jecxz scas (bad) or (bad) jl les mov mov (bad) outsl mov dec popa dec scas bound inc icebp rcll addr16 xchg and mov aad add push lods mov or orl jne mov test lea into pop add clc push dec imul jle inc jecxz sbb sbb cmp or mov lea int3 dec mov sub lods mov shl sub aad hlt mov in stos or add xchg cmpsb cmp mov mov or rclb add js push mov jl in mov jg mov ds aad cwtl les jne scas nop cwtl xor jp mov pop (bad) push aad mov add sarl sbb jae or adc add lret pop scas test jne pop push mov (bad) into or xchg cmp sub or pusha mov cmpsl mov xor stc mov jge add cmp (bad) jne sub mov pop int3 jae ljmp jb cmp add mov cmp mov test outsl in rcll xor and jo mov and sti pop clc mov xchg fsts cmpsl adc xchg push push es repnz mov gs inc scas mov pop aad cmp mov jecxz movsb into (bad) push mov scas sbb push add test test sti inc add rcl inc enter inc push mov lcall adc mov jge mov in cmp sub cltd and cmp cmp cmp shll fst mov in mov ljmp xor out xchg aas scas inc das sub loope jae sub sub push jo int3 aam jg or test orb mov int cs jp inc loope push sub mov mov inc or adc inc pop push (bad) pop inc adcl js jg jl mov inc inc stc movsl cmp lcall in and push cmpsl pop rorb roll idivb or fcmove pop cltd jecxz cmc jns xor mov bound or jp inc icebp lcall xchg movsl pop popf push mov and inc rcrl pop insb arpl push inc out add push call (bad) fiadd add fstpt loopne int mov repnz jo dec add mov xchg xchg add pop loopne cmp bound lcall dec mov mov cmpsl mov data16 push or mov or ljmp add or in or dec (bad) fild adc xor push lods (bad) lcall mov push push nop push js lret push aam lret data16 sbb or test rorl cmp data16 mov dec xchg rorb out mov arpl call testb inc cmpsl add mov cmp inc mov bound add adc dec scas jle bound rcll movsl adc insb sti push adc aaa add test sahf aas mov jg jne add cmc mov push test jge (bad) dec sub scas mov xlat shlb popf cld xorl scas idivl add into or sbb roll jmp push cmp cmp arpl popa xchg sahf mov xchg aam fistl cmc push push lock push mov aas push adc cmp in jns mov daa xorl push pop pop pop xchg daa mov addr16 inc aad lods mov or (bad) das (bad) ds add cld adc mov imul je or inc adc mov pop push (bad) insb xchg dec mov push lods fdivl xchg sbb inc mov cmp push lods inc aaa fimull xchg or add inc jbe push insl jmp inc pop mov lret fwait int sbb into mov mov push push xor (bad) fs mov mov mov js scas dec cmp bswap fs std jbe (bad) (bad) push test mov jo out add jb jg pop xchg lahf data16 mov mov add sub xchg pop sbb mov sbb adc cmpsb test loop insb insb enter inc mov dec scas lds or dec xchg subl push inc mov (bad) mov push pop stc jb jge mov (bad) hlt (bad) jno aad push dec out mov dec jns ja mov outsl loop mov pop cmp dec outsl or xchg ret add sub in jp cmpsl ja in jle test lcall frstor pop shrl mov inc adc xchg jecxz jb mov insl aam mov scas rcll mov pop popa dec lods jmp scas repz les jmp in ret repnz sbbb add mov cwtl scas lods xchg test ds or mov mov and enter repnz push fwait xchg ljmp mov dec and xor mov mov test inc (bad) (bad) aaa lar sbb sti fwait sbbl jp mov test add in adc mov add rorb add (bad) inc push sbb xchg stc xor cltd push inc mov xchg lock in stos outsb push lods scas mov jb mov dec jmp or jnp leave mov mov or loope or dec mov or ja scas push sub sub pushf add in mov xchg scas mov or mov mov push iret mov and or mov popf push scas (bad) loopne mov inc mov pop mov mov fldcw mov add popf sub pop aad fnsave mov fcompl cs sub xchg scas mov jmp dec into sahf shrb mov inc lea out std out push cld push push ret mov mov roll or jecxz in popf mov out dec xor int3 mov mov sbb (bad) stos or mov mov cmpsb std push cmp sahf jmp scas cmp jge mov adc lds mov scas xchg inc lcall adc dec xchg lret xor mov xor dec push hlt int dec or les sbb sub mov jp cmpb lds push adc test inc icebp inc pop push js lret adc adc cld sub pop jle cmp mov fdiv and mov (bad) mov add je pop mov pop stos in and outsb add lods scas xchg (bad) ljmp ds imul scas test leave lods sbb or addb ss out pop shrb loopne inc decl xchg (bad) pop push leave or or (bad) and push es out push dec (bad) jle (bad) sub mov pop imul jmp push xor jne inc ficomp imul mov push movb (bad) xor sub jp (bad) pop inc (bad) mov jge imul mov pop (bad) ja push mov jmp idivb xchg int jmp lock aaa gs adc dec xchg dec aad sarb outsb mov into mov cmp or (bad) mov scas or dec xchg dec test ffree dec (bad) push test xchg lret xlat les dec aad mov (bad) dec jne mov aad and test mov mov mov in inc or cmp loope hlt mov dec inc jmp mov jecxz mov inc movsb icebp cmpl dec data16 iret int3 sub retw sbbb push adc arpl loope push and icebp mov and test (bad) add sbb mov rclb mov push pop sahf fnop lods outsb pop jle outsb dec scas pop or push das lods mov add mov lods jb mov outsl xor add cmc fwait in mov rolb push xor lds js sarl in adc mov pop lea fs mov rcrb scas fwait xchg in fwait xchg (bad) push das jno jge jnp scas in cmp push jne ret cmc dec (bad) push mov mov push shlb mov test pop lock call int in jae sar lea pop mov pop vpunpckhbw mov jne mov call loop mov shlb (bad) dec ss xchg out pop add iret or cs jecxz sahf enter sub rcll adc lock rcrl cs mov jae out je pusha pop pop arpl (bad) mov loope cs jnp mov xchg push push je adc dec in dec xlat or and cmp test int3 nop fildl mov lods fisubrl mov in inc cmp lret into jnp (bad) fbstp les mov add js mov std in sbb pushf (bad) mov jp insb jle into sahf aas sub lds xor pop mov aaa dec cwtl cmc add dec fwait jne mov sarl mov in je adc ss push (bad) sbb loop bound aam cmpsl into pop mov mov and popa stos hlt push lahf fstl aaa (bad) ss rcr test adc in into les jo stos xchg imul lock sbb sbb (bad) push cmp out loop or mov push cwtl lods inc mov mov mov test mov data16 pop test xor mov pop inc nop mov add xchg outsl mov push mov pop or js je jge or in sbb dec ss dec mov call jns fmuls push stos loop iret xchg cmpb jge les arpl mov and ja or inc mov in inc jge xchg shlb int3 mov outsb fdivrs nop in lcall xchg add in imul add loope clc test nop and movsl jno popf gs pushf or mov inc push fimull xor lds xor or mov dec stos (bad) mov add pop mov js (bad) xor add fwait les lods dec repz cmpsl neg lcall in push popl push pop push push test inc fistpll xchg sahf push xchg int3 mov xchg jle cmp sbb in xchg inc push mov loop ja or enter pop mov dec ficom ss arpl inc mov push loope,pt ja fcomps pmuludq pop nop (bad) stos loop xchg (bad) lds cmp cs mov mov sarb test and sbb iret xchg push xchg mov dec scas int3 mov push mov ficompl stos xor adc stos xlat mov pop fstpt jmp cmp jmp repnz adc add sti mov pop scas fild jg mov (bad) jl test cs cmpsl test pushf aad jle mov adcl push out mov mov out mov and mov xchg outsb mov mov test xor push jbe aaa jecxz pop pop insb cmp (bad) sbb mov or les cmp jecxz jmp mov or shrl test ret subl cmp jge negb or or in xor dec ret sti xchg add jp pop lret mov mov aad pop xor or push aas xchg mov sbb cmp or lods push pop mov dec mov lock push fwait les lock mov cltd test push mov jns fdivrl movsb fucomip mov adc inc setle xchg adc stc popa ret mov mov mov push pop test stos or mov push inc inc dec dec and jmp adc ret xchg cld dec cs cli sub sub xchg aad xchg mov sahf push push dec adc test mov jl bound add mov add cmp js into cmc sahf test jle int3 repnz icebp loop push push scas sbb push mov je mov jbe adc rcl cmp cmp cmp and cmpsl sarb add inc btc lcall push roll push cmp leave push loope mov dec adc cmpsl into pop ja mov mov cmc fldenv xor ds std lds fimul inc pop mov sub and mov mov or jmp loop or xor and cs jp xor jg inc in jo xor mov (bad) int pop mov or adc stc add dec aas inc movb std fstpt js push repz jmp inc mov cmpb sti stos lret xchg cmp daa test insl cmpsb icebp add rclb aaa xchg cmp jecxz sub nop fwait add jmp iret test xchg in adcb xchg push push sarl insb in aad es cmp call shlb mov outsb int mov sub mov mov jmp lock xchg jge xchg testb lret and in jae lods mov push mov pop popf (bad) pop aaa jbe mov jnp test dec dec mov push (bad) out popf test jne je mulb push scas mov inc push inc roll in dec mov mov mov scas pop inc in in xchg mov mov mov mov aaa je mov mov mov test ja xor in ss pop insl lds aas fisub jp mov inc add dec dec jge loop sti push mov sub cmp mov mov jne stos or lds cmp adc imul popf mov mov add gs sub mov or loop ja mov cwtl inc mov les iret mov pop pop scas jg fsubl mov loopne jnp pushf fnstenv push mov xchg push mov mov inc jno xor stc pop push scas subl in ficompl mov mov mov dec popf xlat fwait lods sbb inc jecxz lods fcom mov ret (bad) mov jnp mov jb icebp scas push ljmp pop pop popl mov add ficompl or sbb stos mov sbb cmp ret xor or or aas in mov iret je out cs scas out fdivs mov insl fstps movsb scas lcall xchg xchg push inc xchg pop or add mov sti mov call jne xlat xchg mov test les xchg adc (bad) hlt rorl or int3 rcrb fs sub jns insl add mov inc xchg ret add inc cltd test scas or addr16 das cmpsl lds xchg pop (bad) mov clc sub mov mov lea inc mov push mov mov es gs push jle ljmp mov cmp cmc clc push jno in mov dec inc sub mov ret test add or addl jns add sub pop add mov lahf dec or inc mov cmp jb mov pop pop test mov cmp lods lahf inc je xchg adcl xor mov shlb dec (bad) out outsl aam mov sbb push or data16 gs pop movsb dec lds dec sbb mov or dec adc sbb dec in inc dec (bad) xlat dec fldt jecxz stos mov movsb aad inc fnsave mov lahf mov jg mov cmp int jo sub lret bound fistpll insl hlt pop xor or icebp in fcomps aaa mov adc inc dec lock adc cmp aad mov add cmc ja inc cmp cmp aam inc jg rcll cmp xchg daa cmp jle sbb out aam adc test in inc xlat jp and mov sub push inc scas add mov dec and jo (bad) add or scas sub ja mov adc and js test and stos in fisubr xor sbb pop jnp fsubrs addr16 pop or test sub adc pop out sarb mov dec (bad) jbe mov scas fbld jecxz es or mov pop mov in and in xor sahf popf adc scas adc lea shrl mov pop test mov pop std dec mov das cmp xchg jp pop in out jle pusha (bad) cltd loop dec cmp je xor jae jbe sub pop jl mov outsb xor mov pop cmpsl mov xchg push mov sbb mov jle loop je loop sub ds and mov push lcall sbb into lods mov dec push cmpsl and lods sub sub lods add addb push xor test dec (bad) push xchg push rorb or bnd aad xchg pop fsubl aam inc push fldcw ja push jb cltd lds pop jnp in and lods ss pop dec and xchg aad cmpsl jle add xchg (bad) pop dec mov mov xchg xchg xchg pop mov cmp push mov fbstp addl dec xchg (bad) loop test add push in jb fildll (bad) push dec mov loop adc movsl out dec les sbb fimul xchg mov sub shlb enter xchg adc push jae push sub in push cmc mov mov aad mov fstpt add hlt xchg stos jbe fucomp addr16 xchg dec pop cli sub push jp mov push inc mov add aam out in movsl push mov hlt xor (bad) xor pop jp cmp or addr16 push sti mov mov cmc mov or mov pop push hlt jb mov fidivrl or jnp push jae mov mull in in fstl jae in imul loop jge sub mov add jne mov pop fmull add cmpsb hlt jo jecxz out mov push jge xor lods sub push insb in or mov lds aad scas loop dec cmc sbb flds out mov mov int3 push add fadd test call dec out nop mov and mov xchg inc ffreep mov stos sub jae fbstp cmc push pop add xchg ret pusha dec push fimull xchg cwtl loop push aam fild int add inc iret xchg dec sahf push sarl or jnp mov mov pop xchg lea test push test jo or hlt (bad) inc icebp (bad) mov xlat leave dec push push out add jge dec stos xor mov add fistp xchg mov (bad) das pop imul fisubl add adc sub mov mov nop jg scas jl xchg xor xchg jle mov and or in inc and xchg ja push jae mov xor cmpsb xchg es pop hlt test outsl inc pop dec insb test push jecxz jle xchg lods mov pop mov mov add mov or loope pop loope inc cwtl stos int3 or ficompl mov mov add (bad) jne push mov fnstsw into aaa push cmp cli and out frstor ret jecxz dec out push jno data16 mov or (bad) sub (bad) int3 pop add dec mov (bad) mov into or stos repnz mov (bad) lea sahf pop push push xorl adc lret ds test insl mov mov mov jbe cli mov push xchg sahf pop mov dec sbb ss adc in out dec jae aas aaa push sbb (bad) repnz jo stos iret jp jno jae pop inc subl mov dec gs mov das mov mov sub loop and pop add mov inc mov mov xlat jb mov lea fiadd mov lds inc jge jo inc adc sbb outsl jmp fmuls jecxz push das and pushf pop dec sti rcll xchg fisub stos push inc cmp test fwait sub sahf sub out dec inc xchg ds mov test notb in js outsl adc or mov mov test pop cmc lock subl xchg js (bad) jg ds std int3 in adc into lret insb jnp ret push pusha xchg cmpl add pop cltd sub mov jnp ja stos int3 out sub ret inc sub sar popf cmp push adc sub arpl iret lds push dec mov imul mov and aaa xchg les in in nop loop or (bad) dec or in test cmp add jnp leave mov sub (bad) jae cmove in mov ljmp dec inc (bad) lret sti or inc stos sbb mov (bad) xor ljmp lahf mov loop pop cmp inc popf fwait add xchg mov mov icebp jge inc jp dec dec (bad) or enter cmp fstps test adc inc add aad test jo or repnz dec push pop xor mov pop ret rol stc mov and and pushf scas add inc add call jge jnp push imul pop pop jno imul sub mov xchg ret mov lret push mov test int3 dec (bad) mov add into and mov scas push in jbe cmp mov cmpsb ss inc fldl or pop sub or gs lds (bad) mov mov push mov lret in mov subl add xor iret stos mov jns pop mov cmp addb cmp and mov hlt cli lock push mov dec mov pop mov push lds loope dec sub pop mov cld stos xor push or scas inc mov flds ficompl hlt mov inc in jo lahf (bad) sub cmp push je dec lret adc pop idivb lcall push xor jb xchg push mov push sahf inc xor lcall outsb add cmp jnp les mov (bad) sahf mov jge stos xor mov (bad) jns mov addr16 push test (bad) out push stos (bad) mov pop push pop lods clc add xchg in and ja popf push test cmpsb popa adc outsb les jb jo xchg mov jl xchg test stc cmp mov cmp mov mov arpl pop popa jb dec jp cs mov cmp jecxz dec adc mov outsb cld mov or (bad) in loope sti loop lock nop lods cltd int3 pushf lds sub fisttpl mov adc xchg jmp add divb ret cmp cmp aam rol scas xor push imul fisttpl cmc inc jecxz mov rcll imul mov mov mov push cmp cmc mov incl dec dec inc rolb (bad) mov mov dec dec (bad) sbb push or push mov aad xchg pop outsl test es push sti xor dec iret scas mov mov test mov imul mov pop dec aam pop dec aad pop sti cmp mov sti jmp js das dec adc xorl mov pop mov (bad) in pop dec or lock fmuls aam sti arpl repz mov and aad iret or jle push and int clc js adc mov add loop int3 push xchg jbe inc cmovp pop int roll cmc loop cwtl pushf dec mov push repz aam in movsb test fiaddl mov rol outsl dec dec leave adcl js sub sbb imul inc lds test inc jp jbe lahf daa leave fnstsw out stos dec outsl pop cmp test cmpsl cwtl lret inc je sbb mov fdivl jae sbb sub loop xlat lods add xlat (bad) pop (bad) jne mov dec dec mov ret sub lahf sub mov push dec push imull cli imul cmc lds jo sub das je lods dec cmpsb xlat or mov jl test mov lahf push sti out xor imul adcl xchg mov dec dec in loopne mov leave jno mov mov mov fisttpll in inc jae push out test cmp call mov arpl push test inc loope loop lds cmp lea add pop or dec mov push xchg cli mov push xor xchg cltd push adcl iret sub popf loope jbe mov aaa or mov data16 add mov push cmc sbb inc xor outsb cmp (bad) stos cmpsl repz int or adc test mov xchg lret mov and stos fwait sti xchg lret xchg pop mov cmpsb push mov dec mov inc lea add int3 jecxz mov std sub out (bad) in pop adc shrl in mov mov push or popf pop jmp pop push ljmp insb mov jg std stc cmpb icebp fs or mov shrl jb enter aam test add dec jmp mov mov cmp pop flds xchg cmp in jl xchg lret pop dec xchg jo cld (bad) popa mov mov fwait rsm loopne rol or lahf mov (bad) cmc cmp jo mov mov mov pushf inc xchg mov dec mov ja rcrb lods mov add (bad) cmc and stos lods cmp ja sarb mov mov mov mov or mov adc iret enter mov lret mov dec pop mov push mov std cli jecxz dec lret inc sub in scas sti in xchg lret sub (bad) leave stos (bad) jmp out rcr push and lret aad push je xchg push mov mov hlt bound xlat mov jge in repz dec (bad) xchg mov push mov sub pop in aaa es push gs xchg adc mov roll imul adc push push stos jb fldl mov idivl inc lea push fsts test mov daa stos fstl addr16 push je sahf xchg iret sahf mov in outsl aad dec outsl fcmovbe js lret mov rcrb mov inc loop push in jbe pop (bad) es cld test sub mov pop in push xor xchg nop dec pop cmc add mov or idiv movb test pop inc and pop jae daa jmp lcall cmp mov mov scas mov (bad) xor lret lret test dec dec cmc into int3 dec or pop loope add pop icebp add out fisubrl xchg (bad) push mov dec add add lret push dec push hlt push scas sub cwtl push xchg lret fimul jns inc loopne (bad) push xchg dec in mov add add pop push adc lds lods rorb pop jb inc cmp popf jnp lcall mov fs inc inc std mov gs call fwait mov jbe mov imul xchg lods stos push imul (bad) scas stos fidivl mov and std sub into or xchg inc jns cli mov dec mov add cltd push add loop in inc mov sti sarl xchg loop fistp mov dec dec nop mov push jl aaa and lea (bad) lock fldl2e in addl xchg lahf mov hlt mov aad mov sbb and loope test lods out inc xchg xchg dec in outsb out (bad) js sbb dec pop xor jne rcrb (bad) test mov pop inc inc xchg mov mov push push inc dec pop les arpl movsl xor loop movb dec fdivrs xor inc push lods mov pusha dec negb mov fs in arpl loop loope pop lret dec inc (bad) dec xchg aad mov ret dec xchg mov sub into jns mov sbb inc mov fstl ja pop inc and loopne jl push mov jle jmp cld mov pop out movsl add pushf xchg js shll mov fstpl inc mov call and pop mov pushf cwtl in nop sbb mov xchg sti in outsl leave adcl fldl jle jo sahf or fs repz jno in in js dec jns inc inc es hlt pop adc lret out aaa push jnp pop cmpsl mov dec xchg or push pushf xchg or fwait pop cmc mov push xchg add sub mov call sub xlat and push add mov sbb sbb mov (bad) aam add (bad) jl push xchg add dec push mov (bad) mov enter inc xchg inc mov inc fxch fsubrl ss cmpb inc jne pop scas ftst pop imul mov and divb cmp mov int mov (bad) hlt mov scas (bad) mov (bad) fstl ljmp int3 (bad) int3 in mov jne or (bad) cmpsl add jbe lcall fxtract cmpsl mov add and in pop lods or mov dec sub mov xchg jae lret push jg or jmp mov and or or cmpsb loope fmull ret in dec popf add fs aas xor mov fscale iret mov lock dec into cli jmp sti or dec loop notl cmp lods or fidivrl pusha jne cld es out jbe sub (bad) in inc cmp sti imul mov xchg mov or test jns loop jb mov mov dec xchg rcrl into add xchg imul add test push cld push test mov mov lods sti aas cmc int int3 push movsb test cmp mov and icebp xor test or lds hlt push push cmp xor pop mov cmpl cwtl jmp mov iret and enter cmpsl mov cmpsl jmp mov (bad) lods not cli out cmp (bad) (bad) mov jno add pop adc cmp stos outsl insl pop stc cmp and adc push shrb das lods push pop outsl mov out add je test xchg std push push mov cmp jecxz mov jns sbb and test pop jge jbe jb pop faddl fild push out inc or in dec cmp dec xor inc daa xchg popf lea mov or loop cmp inc mov leave pop lea lret sbb mov add inc push out les mov lods nop in (bad) std sub add and movb add add in aaa jge mov cli dec mov jmp mov daa pop and adc sbb test sbb cmp xor clc sub outsl and mov frstor out imull pop inc cmpsb push add mov add test xchg (bad) dec and in dec std in cmp cmp cli ljmp xor or ds mov or dec xor dec pushf jne push out loop stos scas pop mov (bad) mov push addr16 mov cmp inc loop,pn xor cs es jns sub fldt mov andb mov dec sub es rep mov push out mov mov in cld ds push inc add ss sbb cs cmp mov mov sahf jae mov mov fildl pop scas and xchg inc xchg test mov sbbl jnp sahf sahf push (bad) aam mov dec cld add mov push aam push mov inc loop out and push cmpsb xchg (bad) lret pop mov les andb sbb mov (bad) jne push add mov sub cmp sub pop and mov pop xchg cmp jbe or adc push xor push jp sahf lods mov mov xchg add or test lcall push mov (bad) and mov mov xchg pop dec ds test push xchg loop mov push ja inc lds cmp add in mov or mov aas test mov inc xchg dec pop xlat ljmp sub push jmp addr16 pop or in std xchg add stos and xchg cmp mov xchg cmp aas mov mov mov jge int3 mov aam mov push mov cmpsl jnp and pop inc sub jmp setl adc lcall (bad) or dec mov jbe adc push (bad) mov iret (bad) hlt jg mov std stos fstpt push jne inc test cmp rorb rclb inc (bad) xor mov scas push arpl mov popf cmp aam pop push mov ljmp sub mov mov fdivl cld mov mov pop je ds in mov fisttp cwtl and or push mov dec mov or sub and xor push inc loop mov mov push insl sub adc xchg lret sub dec stos sub adc movsl cltd and mov and cmp mov in jecxz xchg int3 push sub mov xor arpl (bad) add push push add add xor int3 push adc jno imul xchg pusha arpl test or xchg fbstp or arpl int3 dec les div or mov test (bad) adc (bad) dec cmp subl mov scas dec mov cmpsl pop mov mov cmp decl lret inc (bad) pop lods mov mov xchg (bad) pop mov std cmp rcl mov or mov les mov rolb sub pop jl add leave xor ficomp xchg sbb push pop lret add add mov jmp stos push push rcrl push push mov popa cs mov mov mov test es jg ds and add pcmpeqd push mov stc cld imul mov mov sbb jecxz and sbb lret jbe mov insb imul mov add jmp mov xlat or jbe divb jns,pn cld popa jmp mov adc cli jmp mov push out aaa das pop stos xchg mov pop mov jno add imul std cmp shll (bad) into repz (bad) loopne in repz mov jp or xchg push dec loop sub pop subb repz sbb es mov pop (bad) les movsl enter lds lcall mov testl (bad) adc (bad) ret mov cmp es xchg cmp adc test xchg mov imul inc movsb rcrb rorl jns ret dec test cmp aas inc adc pop push mov imull sahf (bad) push orl mov xor ret nop mov popf mov xchg in and (bad) mov cmp in rorb cmp dec cmp insb movsl icebp push pop pop andb pop xchg into (bad) (bad) popf scas push test dec into js std aaa lret fdivrp stos xor xor rorl xchg (bad) mov mov dec mov scas pusha rorb xchg jmp into lods mov inc jle decb xchg orl lea dec in addl aaa push lret bound push lock (bad) push fwait (bad) int3 lods dec fnstsw jbe jnp inc push push or xchg lods mov pop (bad) (bad) fildl jno sbb lcallw lods dec mov imul mov fiaddl mov inc mov stc push js daa in xchg out ret inc add in mov (bad) repz mov addr16 mov dec cmp (bad) loopne loope aad inc cmp in inc pmaddwd test cmpsb jns jecxz test fdivl (bad) mov push inc mov ss outsl insb xchg fwait inc mov int3 rorb stos cmp nop mov adc lret scas aad dec leave pop sbb mov dec push mov mov mov and fisttp mov lods xchg stos mull dec iret adc mov testl adc mov cmp prefetch in mov mov in lea push inc mov in mov lods in cmp mov inc dec xchg mov rcll sahf pop sbb loop lods int (bad) inc xlat mov push adc in mov or and adc lds push test or mov mov mov push pop add adc addl (bad) push ror push test jne (bad) pushf inc aaa fldt mov xor stos notb lret jns jne scas popa dec ret or sbb (bad) test (bad) push sbb jns iret ret or and iret inc mov ret adc jp iret and pop pop sbb aam mov xlat pop in adc adc xlat mov or ja insb mov mov pushf in nop inc in or std mov mov (bad) dec ret push das mov stos repz push sbb sahf pushf push mov (bad) dec mov mov stos lds int jae jmp jle cmp inc lds inc mov cmp inc push jne fnstsw loopne xchg jae jmp mov push jp cld in cmp lds out push insl jle mov inc imul in rorb fidiv loop dec cmp add test cmp cmp repz out dec dec cmc push stc mov mov or stos inc mov push mov mov inc and mov cmp sub fidivr push ret xchg hlt or push or popa es sub push mov push cmovno add aaa or inc pop aad mov test add loop (bad) fwait icebp jo add or lret fiadd push push ja dec (bad) cmpsl fnstsw and pop sub pop repnz push in sub bound xor fidivr sahf mov pop mov jge ffree dec cmp mov (bad) leave add pop and xchg mov push test xchg mov sub push mov out lods mov cltd mov std lcall cmc ds or cmpsb std inc cwtl (bad) popa cwtl cmp loop cwtl mov inc and push dec xchg xor mov dec xchg dec pop jns mov add lock test roll (bad) not jmp dec test pushf addr16 lret pop cld adc xchg mov std mov lea addr16 xor dec push pop lret dec mov add xchg test mov inc rol les and sub out scas mov mov pop push aaa lret cld sbb arpl dec aam or (bad) dec loop subl fisttpll jo dec dec push xchg push sbb (bad) mov pop imul mov test iret mov mov cmc (bad) dec lea insb test dec mov pop mov je sub add jns movl xchg ret push jmp nop fildl je mov sub xlat lret dec ret lea mov xchg push (bad) pushl xchg ret mov out lret sbb push scas mov mov cmpl daa sti loop shrb orb inc bound (bad) jae pop mov lea push mov lret xlat sarb neg sbb outsb dec stos xor jp addb mov xchg jl or (bad) cli sub movb adc sub cmp xor outsb popf dec mov or outsl stos cld jo cwtl or mov mov pop mov dec aad cli notb mov jbe add test popf xchg ret mov adc lods mov mov lea jnp push or sbb adc and pop stos xchg inc repnz cmp (bad) inc jle mov xor movsl outsl rcl or test mov pop mov dec lea sub inc and dec test (bad) test arpl bound mov and cmc in pop les outsb hlt push fildl int3 into jno adc (bad) and (bad) xor dec cmpsb cmc lret jp in sub pop (bad) in or leave lret fisttp cltd fsubs (bad) out pop xchg pop fnstcw xor movsb int sbb jo push data16 mov fmul mov xor and adc mov movsb add dec sub dec ret fdivl xchg add fwait int jae dec mov mov jle dec cld mov xor or stc testl push (bad) sub test addr16 (bad) jle shrb std test cld jecxz lcall xchg cli add mov adc aaa or cmp lret stos scas stos (bad) mov cmp (bad) or or or mov and cmc dec ret push push fidivr push or (bad) dec frstor push js test or dec xchg scas aad stos aaa dec mov ret notb xchg pop jae mov xchg pop iret insb add add out aam pop mov inc add (bad) xchg xchg push add in xchg pop loope pushf loop test ljmp pushf xchg pop mov or jecxz int3 push and repnz neg aaa stos (bad) cmp popf out pusha int3 inc inc dec lea les lahf or clc (bad) fisub in in push and cmp sub fidivrl hlt lret cs pop xor sub daa data16 sub fcompl push push in xlat int3 loop stos ret add adc lret sub xor ss cmpsw push jnp push and lods lods inc push pop jmp loope mov xchg xchg out lret xor sbb lcall les xor mov out outsl xchg test testb pushf int3 (bad) xchg ret ds push aad fnsave mov or cli sub shr test repz pop test dec mov pop outsl arpl rcll and loope aaa hlt adc pop je sub dec sub add ficomp rcr dec into (bad) aam xchg jle addr16 fisub cwtl jecxz or rcrb icebp out in mov pop sahf out in mov arpl aas fadd cli lret add iret xor ret inc push inc stos sahf mov push movsb test push lods xchg jecxz adc pop scas js mov mov fnstenv mov (bad) jns xchg mov xchg sbb mov sub mov mov in mov (bad) ja rcll mov mov cmpsl dec cld or lods (bad) mov sbb add ds mov scas (bad) pop lea xor mov fadds lea add cmp in iret jmp push shll enter add add fstpl notl xchg scas (bad) movsb in les frstor push movsl or or in or mov xchg sbb adc xchg fsin lock sub mov push inc fisttpll fstpl lea sbb rcll (bad) add fnop test add pop test (bad) jno xchg pop push movsb andb push inc xorl rep mov xor fldl rolb pusha das aas in mov cmpsb dec inc push inc cmc jle add mov dec sbb jecxz pop das fiaddl sbb xchg lds dec mov stos test fisubrl int pop dec push inc mov iret lods dec ficompl js dec push pop dec sbb sbb mov or test jnp addr16 push jne fistpll jmp lcall popf or add sbb lods push or leave dec lds fwait mov dec rclb or push and or test mov cltd mov outsb std iret push add sarb jge dec fwait jmp (bad) in iret fsubrl js in lods xchg pop sbb aad ds in stc iret (bad) out dec test stc jge ss dec inc lahf sbb xor mov mov inc iret dec mov jle pop sbb inc loope stos ds stos push leave mov inc mov js test and repnz aas je pop push mov or enter dec mov mov dec mov or add mov lods clc leave ret jge leave push fwait std fldenv mov cmpsb and mov fcmovnu loopne scas jp test mov fldl cmp or mov inc fldl inc mov in inc es push std dec push stos inc pop or std int3 or mov sub mov xchg push lret push loopne cmp mov outsb mov aaa xchg ret (bad) sub add (bad) ds sub loopne mov pop (bad) fmul inc cmpl (bad) nop adc pusha xchg or mov lods mulb call lods push mov scas lds leave mov or ds add dec mov in inc bound adc call mov sub inc pop sub inc dec fstp dec xchg add arpl mov xchg mov add je or data16 and jmp out pinsrw adc in enter stc or jp sbb popf inc mov lods sbb inc mov lds jmp cmp cmc dec pop jns leave (bad) arpl xchg pop mov test dec dec and popa scas das leave fstps inc push jno xor orl addb push and push xchg dec loop stos or gs jg fwait dec xchg or xchg dec push push mov push xchg inc std push (bad) mov push mov fs scas out sbb push cs inc shrb ds pushf xchg adc lods int test pop ljmp loope mov jecxz shll dec xchg repz lds cmp lds sbb jge mov xor leave mov or enter stc xchg test repnz jl mov (bad) mov sbb mulb push ficom sub add adc iret xchg mov or imul or xchg dec jecxz lods dec stc or pushf stos pop lahf std stos jl push inc sbb xchg sbb stos mov mov popf shrb lds (bad) sub insb insl pop (bad) dec add xorl es mov mov pop repz ret das add cmp ljmp or popa pop jns jbe (bad) (bad) add fistpl popf cmp xchg in sbb xlat sub and out lods xchg in ret sub push adc lcall sarb push aas iret test (bad) or enter xor outsb push ret (bad) add or insb cmp cmp lds and inc inc int or cmc inc std push sahf sbb in cmpb sub test lods jno mov test sub xor xchg mov jg leave cmp mov dec mov jecxz push jmp iret mov lret mov dec jp mov testb xor mov jb sbb dec cmp push dec rcll bound add lods adc jne push lret popa mov ja jae xor cli sbb iret cmpsb loop dec push (bad) sub pop int sub mov repz mov jge adc leave mov sub add fwait xlat fisttp add ds inc lds sub mov add mov inc (bad) mov iret stos pop inc out fwait loopne data16 xchg (bad) mov dec js ret or mov stos mov or sub leave or add (bad) aad mov in adc in lods mov or les lods sbb sub xor xchg mov data16 mov xchg ds push icebp dec popa xchg enter insl push add add adc adcl ja fimul mov outsl cmpsl mov mov dec sub pushf into cltd dec mov loopne outsb or adc aas cmp (bad) (bad) jno jl int3 sub (bad) pushf divl or lock rcrb adc mov and inc add nop in (bad) mov mov (bad) jle test jg mov cmpsb in out lcall dec aad adc mov adc pop test xchg mov xchg mov pop dec scas lret cmp aas in roll or (bad) mov lcall dec cmpsl arpl push ljmp sahf adc cmc fs in pop fdivrp lods fdivrs data16 jge out xorb gs xor (bad) hlt movsb and and outsl es mov ljmp lds ds mov and mov sub movsl or addr16 and add cmpsl outsl (bad) icebp xchg cmp xor cmp push test icebp mov push add imul mov sbb pop or pop inc cmc scas bound cli lods cwtl mov mov aam aas bound inc cld push sub in mov hlt js (bad) xchg xlat div mov scas testl (bad) cmc rol clc cmp pushf call clc add add pushf mov push add jmp addb jae icebp lods mov inc hlt stos imul (bad) imul and into mov es movsl hlt loopne dec es mov lcall pop inc add js dec sbbb dec js xchg inc movb cmp call mov dec nop jmp mov test btc pop dec lahf in bound dec je inc dec jl movsl mov jl push imul mov sbb shll inc add enter inc data16 cmpsb jo dec adc popf inc inc mov stos jnp and ret sub rorb or jns xor sub or sub pop lds pop cwtl (bad) jnp arpl cmpsb ret arpl sahf xchg adc addr16 shlb xchg xor mov jge pusha sbb pop fisttpl cmp xlat mov das jns jne imul and dec or push shrb (bad) jno movsl orl stc (bad) push call xchg shlb or xchg inc pop push fmul jae repz dec jne cmp xchg stos out out push jp jnp stc popf stos data16 cltd stos cmp lock int mov inc cmpsl imul or fsubl mov push inc push out xor sub dec jbe les clc lods out rolb xorl enter jae sar outsl int je sub cwtl inc lods cmp xchg dec and lret mov sbb test mov pop adc jge shll es jne hlt push pop pop jae faddp pop loope (bad) xchg inc scas insb mov pop lds xchg mov cmp add mov call aam push xchg stos lret xchg cli nop dec sarb stos lret and fbld mov pusha lea je not call in in xorl xchg insb push repz mov push cmp loope jne pop adc mov (bad) test (bad) dec or shrb lods out mov call fildll inc sahf push add mov pop cld dec out popa sub lret push jmp or repz mov repz outsb adc aam jno push xorl repnz push rol sbbb jl push mov push pushl faddl je cmp ds aas enter data16 dec data16 loope adc nop stos jmp push (bad) outsl popl jns std roll pop lcall mov pop jecxz fs mov (bad) gs push nop xchg fs int3 imul imul (bad) mov sub mov sub push and leavew popf orl rcrb dec xlat mov sahf inc jecxz dec fwait daa add (bad) cmp push pop clc push push jnp jnp inc jno lret sbb sahf outsb xchg cld (bad) inc stos or jp and fiadd cmp loopne sub add lahf mov xor cmp dec sbb jae lds call mov imul aam fnstenv xor outsb push faddp ret pop imul adc ret lahf jnp inc nop jno fdivrs popa ljmp mov sbb sbb stos inc insl jle mov xor mov push lock std std xchg xchg outsl and dec sub enter sub pushf mov pop sbb xor (bad) out lods cmp push cmp pop and aam push ret add in fisub test xchg sbb and addb cmpsl push in xchg push mov inc mov mov test and inc enter (bad) roll jge jae fcoms cltd imul fcmovnbe stos mov dec pavgw push xor mov lods (bad) add xlat call xchg pop aaa (bad) repnz xchg je (bad) ss pop lds nop mov xchg fcmovnbe rorb int3 xchg or xchg std or popa mov push cpuid mov add inc push dec jbe jecxz out ljmp imul mov dec and sbb mov lods aad add cs inc or test movsl push sbb xchg out lahf cmp or pop fdivp in imul mov out ficoml stc cmp movzbw bswap lea lahf mov pushf call loope imul int xor into mov fdivrl add lret test fiaddl mov std jne int (bad) mov sub or dec cmpsb addr16 lret mov add jecxz dec xchg jo adc xor pop hlt fdivrl test lods and pushf or mov add cld test push loopne lods push (bad) lret mov cmp lret sub or (bad) push sahf inc sbb push xor adc xchg or mov aaa jne xor adc (bad) cmc test int je mov fildl (bad) dec fs jns sbb test inc sbb fcmovb nop jg jmp inc mov sbb mov cmp and mov push bound lds aam jnp push out adc pop xlat xchg lcall call cmp pop out sbbl out add cmc (bad) inc fwait int (bad) fild loopne inc cwtl shr sub jge jnp xchg in rclb cwtl xchg std push or add (bad) add mov sbb and shr xchg aas frstor cmpsb lret ja pop in unpckhps lret dec cmp sbb bound push out inc cli enter mov add stos idivl add jmp and adc adc sub imul fwait jecxz in inc mov xor jno push jp das jmp mov mov insl jno fildl or jmp scas push xchg dec jbe sub adc into into or stc xchg xor sbb or jmp jmp call fsubrs sub jae sub mov mov lret das or dec push sub out cwtl pop ja and mov pop (bad) mov adc lea sub (bad) xchg jnp ret mulb (bad) sub ljmp push and push inc pop mov cmp mov dec ret in jo mov icebp outsl iret (bad) xchg mov jb mov popf es lret mov inc pop sub (bad) data16 jle jno roll xchg repnz cmpsl daa out jb inc sbb push xlat mov lods xchg rolb mov jb cmp or mov or cld and ret or call cli cmpsl inc or push inc push dec cs dec dec add int sub rorl (bad) mov and mov sbb inc and mov or rcrl loop jbe adc mov inc jb,pt loop addr16 int3 in jl insl mov pop adc insb xchg repnz je data16 icebp scas pop sub mov and jl push icebp ds mov ljmp (bad) repnz leave pop xor add sar mov pushf test push sub push or push fxch jae dec dec faddl and int3 push sub dec xor daa mov popa cld sbb addl popa insb inc jb add add pop lea jae test pusha pushl pushf cmp pushf jmp xchg popa imull jae out mov movsb xchg jle push and cmpsl arpl daa cld cwtl insl cmp mov xchg mov ficomp or xlat jnp or xchg and fisttp lds int mov push jg mov xchg mov insb xchg jo shll in jmp mov test jnp into in add mov lods push sbb mov popf add push out xor mov or push (bad) in or adc xlat inc insl cmpb mov outsb and ss sbb dec mov jge cwtl pop jnp and icebp mov sub xor subl fwait dec js cmp pushf movl lea jae call or push jmp repnz call xchg push int insb inc das jecxz lahf es js aaa push stos outsl cmp repz mov inc sub mov dec mov daa iret iret scas jb push sbb das (bad) iret jns loope mov movb lds pop xchg add add popl sar lret xchg mov ret jle loop stos mov fwait sbb push jl lret (bad) rcrl mov repnz push sbb orl out adc (bad) jp jmp mov vsqrtsd int ret push push int3 or mov stos sub sub jmp push add cmp in pop jle fisubrl xor sarb jecxz arpl or popf jp fcmovu cwtl push adc mov (bad) test pop shrl mov sbb push mov ret jmp xchg in sub xor push nop loope dec leave cli lods mov cmp cmp xor mov out mov ja add fildll test sti or mov in lock push ficompl int xor and jbe and dec and shlb jp int adc dec mov and fcomp sbbl xchg inc inc or in xchg sbb mov popa jmp mov ds mov js imul add or cmpsb lret add sbb mov mov (bad) jnp ja mov mulb lock sub inc ljmp lods sub cmovg inc cwtl js add mov xchg dec xor aam sbb jge jae mov jno add and dec add mov jmp sbb pop inc fisubrl push dec (bad) jo iret fcoml add iret jmp int and jp int xlat mov nop cmp lret xchg inc adc sbb mov arpl jge repz xor mov push popa daa add adc mov and mov jb jg jne xchg dec ficomp cmp imulb outsb lret clc push insb adc xchg push daa mov push inc das leave dec (bad) scas ret add popf pop je std imul mov dec sbb lods mov mov lea jmp jno sub js int lret add cmpsb bound inc lcall leave fcoml push inc lods fnstcw cmp (bad) jae cli sub inc ret pushf mov movsb cmp cmpl pop mov mov pop dec loopne xchg dec add (bad) fisttpll (bad) in push ss push push push divl sub test add test adc mov int dec cmp mov dec and shrb or mov fnsave sbbl inc test (bad) mov dec imul cs sub icebp inc imul dec jbe xchg leave or add cmpsl (bad) or movl xchg stos rcl shlb mov inc pop or in add dec and adc dec popa mov decl mov loop aas into pop sbb pop push push data16 (bad) xchg pop pop sbb fnsave jb and inc fiaddl adc mov in addr16 dec xor fsubrp in shl int and loope fsubs pusha pushl movb pushf lea jmp (bad) mov push js int mov mov xor mov mov jp sbb mov or jle and daa sub push popa push push xchg fdivrs sti aad mov mov aas test xchg lods push dec clc cmp aas xor add loop mov mov fisubr pop mov inc pop xor (bad) fdivs xchg or ret push lcall add cmp add scas outsl sub push xchg ficompl dec into xchg or rcrb shrl roll push clc cwtl push outsl and int xorl shrl cld lret ret into cwtl arpl and fnsave jae (bad) mov sahf test adc in add push int and test jecxz out mov sbb cld hlt call out dec and mov (bad) and sub mov lea inc and fldcw sbb js daa aam sbbl pusha in test jbe js lea imull jne mov in stos sbb push enter mov pop or dec push fimul loopne adc ja int ret lahf popa xor icebp ret xor fsubr xchg jnp cmp lods lods (bad) and adc out out adc or aad push sub nop movsb push aam hlt jns jns mov (bad) dec lods xchg and into jae dec push test and (bad) mov adc jl sbb sbb in in and rorl or jecxz (bad) imull adc decl pusha pop pop aad rorb fstpl inc sbb and push xorb repnz lahf testb or jnp ljmp mov int int test cmp outsb pop jae test jmp loopne jbe cld adc data16 cmp ja leave addl sbb lods pop das in or sbb ret jno and add mov push cmp mov in xchg xor cwtl push adc mov inc pop pop pop xchg mov popa xor pop pop jae pop adc jge sahf stos jae hlt mov rclb nop push int or mov je add shrb push ss mov clc imul gs cmp loop rolb cmp xchg mov jge insl xchg inc lcall pop les mov sbb inc dec pop push mov mov cmpsl mov push and push rorl clc loop ret in inc pushf movsb mov cmc mov lret or mov inc popf cli jno imul sti mov stc into jp inc fisttpll mov ja xchg jae cmp xor xor in orb xor xchg imul jle lods cs xor out jae outsb sub mov mov inc inc adc aad xchg dec popa push cmp pop repz loop or push hlt rcll aam mov sar mov (bad) push cmp lcall test or mov cmp inc (bad) pop xor or hlt call cmpsl and movsb dec jg ret pop dec outsl jae int mov xlat rcrb mov xor movsl aaa sub and lahf insl xor lds xchg fs mov out pop jp xchg push sbb test (bad) cmp int jmp int mov pop sub adcl ja in push imul add repz ja sti test push addr16 adc fdivrs xor scas pusha int3 push es cmp lahf cmpsl stc gs cld dec jecxz (bad) pop das jg lcall in icebp out cmp popl add call dec fidivr pop sub mov cmc sub repnz movl movl jmp cmc jmp lods xchg les mov dec aam pusha and in cs mov (bad) stc xchg xchg cmp mov hlt cmpsl out mov mov sub jp push push jecxz pop or pop cld jg in mov iret lock jp pop sahf jne gs sub hlt mov push into add inc imul (bad) leave pop xor divb fldcw outsb icebp adc jne pop or pop (bad) mov jnp adc dec or dec out ja inc add shr mov xor bswap cld jecxz push mov adc pushf xchg das and sbb hlt inc cmc and or call aad ror mov shl inc sub setno add rol jmp test and jmp mov out jae jae loop jnp cld jmp ret lret add xor (bad) shll xor ficom add pop fdivrl int sbb scas mov cmp cmpsl inc inc add mov pop sbb mov pop cltd ret out dec sahf test loope stos pop cmpsb jle fild in pop adc (bad) (bad) xor mov and dec js cwtl clc ss xchg mov call fidivr jle mov cmc dec sbb mov jnp outsb (bad) in call enter mov mov mov fucom push adc cmp test loope push shlb leave pop (bad) insb movl jmp not jmp xchg sub (bad) jo int inc pop fldt and out mov xchg cmp rorb test je and sti rclb leave loop imul inc std lret mov lret xor xor (bad) mov and mov mov and inc stos pusha sub sbb pop cmp mov fiaddl leave in (bad) ret and dec int3 inc cmpsb (bad) icebp loope mov mov xchg push sbb mov mov cmpsb push imul inc pop xlat jp test lods (bad) imul dec mov and out icebp jae jo int and mov stc int3 push lods dec outsb or (bad) int sahf loopne or xchg insl inc add rcrb cld sub mov push or lods dec sti addr16 fs outsb xchg movsl mov adc mov lret cmpsl push cmpsl movsl shrl jb push fistp test imul rclb or ss lcall loop das add into sbb shl mov mov scas xchg pushf push sbb frstor cmc iret cmp inc gs dec shlb arpl stos (bad) js inc out popf xchg sbb pushf dec mov out into xchg sub jae sub xor inc add mov mov push call divb out add rclb lcall cmp mov sti sbb push cmp stc cmp lods jg fstl xchg arpl lds les and xchg pop scas pop divb xchg pop mov fnstenv xchg pop xchg or lea mov aad jle lods xor in mov xchg insl dec lret cmp notl outsl jae dec add jmp jl add sahf js sbb mov pushf imul je movb or jno cs (bad) test jmp xchg insb or lret push adc jecxz sarb dec sbb push mov icebp xchg xchg in std popf scas in pop cmp xchg mov stos ret adc add in mov aas jb mov out les sub push adc jb int3 dec movb arpl cmp or xor push test adc inc add xchg mov fs jae push cmp clc cmp pushf movw movb pushf lea ja pusha inc inc lea jge dec inc push push add xchg add bswap aaa das mov clc inc shl xor mov jmp pushl inc push test rcr and xchg rcr cwtl sbb ror mov cmc mov stc xchg btr mov test stc sub mov call dec js insl jae outsl mov inc sbb test das loope js fsubl xchg pusha cmp cmp mov mov sahf movsb out mov xchg or enter dec dec push pop and jno pop sbb testl cmpb xor and fdivr rolb stos mov pop lret sbbl mov mov mov aad arpl repz (bad) mov notl sahf dec jno ss pop add int mov sbb les (bad) and cmc and xlat out not inc neg and sbb push xchg btc add movzbw call int inc sbb lock xchg jae push push pop mov fs mov dec insl pop add enter or add mov mov bnd bound mov bound in mov ja je gs les push loopne push int3 mov jb jb cli cmp jle jl cmp xor icebp lods inc js mov or jns mov mov jb mov add outsb out imul cmp fisttpll pop hlt jns mov or cmp jae lahf les cmp add add or out sldt add add add add adc add add fldt add fistl or add add repz add or add add aaa or add add lcall add adc add add bound add dec test add stc out add add add lret adc add add ficompl or add add shll add adc cmpsb (bad) adc push dec adc or adc das cmp add add add xor jmp fiadd sbb andl cmp lcall xor xchg mov pusha fistpll xor cld mov add pop scas negb cmp push sbb lret adc xor xchg push and stos and dec mov and adc jb fsubl jae pop divb push push pop dec mov fdivrs imul fldl fs stc fmull les jmp mov outsb loope sbb mov mov das repz adc xchg loop dec mov clc pop insb adc sbb push mov or aas (bad) mov out in and movsl mov aad call (bad) pop push dec movsl into jg gs cs cltd jnp add notl or xor mov pushf inc lahf xor mov mov add inc push fistp pop ja or jns roll lds push fbstp add jmp xor pop daa cmpsb ja pop outsb dec xchg adc add xchg into enter mov shl jmp adc pop pop push dec cmp out pusha iret mov cltd cmp icebp sub xor je and sub and adc out sahf adc movsl mov xor data16 lock popa (bad) push xor xchg add push insb xor jle xchg push inc pop icebp inc inc icebp test push aaa cli psrlw shr jbe pop sbb dec imul (bad) test sbb jle imul adc (bad) nop push test cmpsl pop mov pop js mov and dec xlat fnop jp jmp movsb or and int3 (bad) xchg mov movsl jns loopne or dec mov (bad) xchg fs cltd adc push jl into insb cmp imul add out in or xor cmp in (bad) cmp sub and cmpsb lahf jnp mov pop and mov pusha decb mov stos aad mov push daa and pop loop insl pop loop push jle adc outsb rol lret pop rorl ret and xor stos imull inc mov mov sub mov hlt fs jecxz pop movsl xchg push in xor enter and adc mov inc pop push pop and adc jne fnstcw sbb adc negb mov insb sbb fbstp lock dec xchg cld jb aaa cmp cmp ljmp xchg jbe (bad) cmp addr16 mov xchg mov adc cmpsb mov lods call lock mov cmpxchg jns cli mov adc lcall mov pop xchg ja cs shrl push add aam in out and mov cmp mov mov and (bad) adc daa into sahf fs ficoml jmp sbb pusha or mov scas sbb inc push or repnz push cltd mov pop sub fcoms xchg fidivr pop fistp (bad) int dec xchg cwtl and pop xchg cmpsl fcom gs jno pop fsubrl vrsqrtss test inc xor call mov push jp ret xchg push fildll lock jae mov call lods xchg cmp loope mov xchg pop scas (bad) pop pop and jne es cli mov inc or mov fldl jne ffree test push adc (bad) xchg je fnstsw imul test xchg js adc xor ror lds fnsave adc (bad) mov mov pop cli pushf es sahf fdivs push aaa icebp cmp int fcoml ret test arpl xchg or and ret mov je sub test fmull adc mov lcall dec sub shr inc fnstsw add dec call sbb cwtl jae mov dec popf and sbb mov iret fbld repnz ljmp xor mov pop add push out mov pop subl adc jle mov (bad) decl out adc mov inc (bad) loopne push push sub movsb lea leave lock cmp inc or repnz (bad) mov test cmp mov imull out and xor or aam lret les pop mov stc jbe jecxz or push add int3 xchg pop dec push stc xchg loope dec sbb sub lock arpl push iret or and cmp ds daa jb (bad) int3 lods in add shr ds cwtl jg sahf rorl int3 mov ss in fs (bad) xor dec aam (bad) fnstcw mov test push ficoml jmp pop sbb push out out mov jb mov dec sub iret (bad) mov sub push int jge push mov push ja mov push fidivl sbb sub enter jmp push adc imul and pop jmp in sub sbb xor mov jbe mov pop sti cli clc mov mov mov cmp std repnz xchg mov out data16 sarb jne (bad) push sub mov insb (bad) or mov adc and into (bad) cmp aam popa (bad) push cmp adc outsb cmp rcll cli imul ss pop in mov adc and mov vmulsd inc inc cmpsb or pop push lea and lcall push stos fs sbb repnz xchg fwait push test add inc aam (bad) shr test stc (bad) mov rclb fcoms enter mov fs add stos mov sbb mov aad ja ljmp sub outsl inc test fcoms jnp xchg push pop mov std sarb imul lods sti mov adc pop fs pop lret pop and (bad) sbb add sbb push adc fs lods rorl jnp mov bound jbe and mov pop (bad) ss data16 int3 mov mov dec sbb outsb nop mov (bad) sub pop orl cs lcall test in cs jge push popa std lahf adc stos adc pusha pop push add fsts mov (bad) out cmp out add inc jmp lods pop lea add (bad) stc mov cmp shrl pop xchg mov stos cli (bad) xor xor adc mov push test add (bad) dec shl arpl push cmp inc (bad) jnp cmp xlat jnp or subb sarb lahf jge inc xchg std (bad) xor xbegin fldt jge push scas cmp es sbb fisttpll mov push xchg ja jecxz (bad) outsl mov orl jo fcomps (bad) xor fnstsw lock lods and cmovb loopne popl mov dec sarb add test mov mov pusha xchg ja popa sbb add jmp lcall xor mov mov hlt ret jle jb sbb push mov mov loopne lds dec hlt mov mov mov das push jo and dec daa pop or mov mov (bad) emms and xor push stc mov enter xor (bad) out cmp pop orl pop mov pop js jnp bound mov jae sbb loope push lods add je mov jns xchg lods mov lds inc enter xchg mov jl das fistpll mov xor xchg and cmp cmp jne push pop jecxz adc xchg scas add adc cmp in sbb mov push dec loop rep jmp sbb add or pushf push data16 sub loope icebp shl iret jbe lcall test jl ret test in push gs es ret rol inc arpl scas imul cmp mov push test sahf (bad) test nop mul movsb push mov add leave (bad) sbb xor imul int3 dec cmp stos or cs push xchg adc lret outsl aam fistpl pop pusha clc inc mov and loope sbb xchg iret out cli call rclb (bad) pusha jl (bad) insl mov (bad) pop scas test mov aad sbb sbb add fimull xchg push inc outsl sub mov out addr16 bound push ljmp out mov mov dec add adc mov adc mov lahf mov in js mov ret es cwtl jecxz pop and xchg push lea cmp mov sub sarl out or add js loope xchg nop fwait imul imul fs rolb and es scas in cli inc sbb lods pop add mov sub push jbe dec or add mov jmp std and in dec fcmovu cmp (bad) das call mov mov mov stos movsb test xor add mov inc xchg mov inc xchg or mov test xchg jl in scas jae add mov xchg aas sub sbb xchg shlb test adc addr16 cmp in dec test (bad) pop je sahf sahf adcb inc test shrl shrb cmc sbb (bad) in repz jo loopne sti lods cmp dec sbb push push push sahf in test and cmpsb test insl test push and jae int3 dec xchg fadds jo scas sbb mull dec xor mov addr16 inc cld ljmp std ljmp dec inc or adc imul into out arpl aam popa bound xor fmuls xchg int dec outsb notl arpl ja loop add xchg inc sub inc rcrb out imul ja std ffree xchg aad push repnz xchg jo jp mov sar enter cmp stc xchg fcmovnbe bound repnz int3 mov dec imul jae (bad) cmp sbb out pop das adc sub sbb lcall lret addr16 pop les aas mov add cwtl jo clc sbb mov loope sub xchg or cmp sbb and mov nop ret inc loope out cmp daa jmp push repz xor jnp inc pop cmp inc push (bad) int3 (bad) lret pop ficomp push aaa mov sbb jb mov mov movsl gs fild mov roll daa mov and inc jo add add mov rcrb fwait or push fstpl xchg jge out jle sub fiadd lea in mov rorb add bound leave ret lahf scas rcrb das clc (bad) fbstp ja (bad) jle scas mov cli (bad) leave clc sti jo rorl push cwtl xchg xchg add js clc enter (bad) ret scas or cs sbb sbb fistp cs popa xor mov pop (bad) jl lret mov sub pusha sub mov ja xor fimull pop pop or (bad) inc mov movsl jno decl push mov inc stc push data16 xor cmp pop fistp (bad) int pushf fadds iret cmp es add push dec jo adc cmp cmp gs jecxz pop sbb pop sub inc mov jb xchg mov add add ret aam xchg sub pop les int3 adc cmp popf scas fisubl fidivl adc mov nop fiaddl push aas fcmovne dec or mov pop addb add add jae mov lret push inc or jl loopne pop sub fsubrs cwtl cmp sub and (bad) jne jge add lret mov push gs pop rorl mov push stos aam jbe in (bad) ljmp pushf mov push jmp mov shr es pop sbb aad (bad) pop add mov jno arpl dec cmp addr16 fbstp push xor movsl cmp mov aad outsb shrl pop fistp dec pop jg sub inc jmp dec jae ret ja sub mov mov or iret cmp and lods ja outsl add push (bad) mov xchg pop sub mov call pop gs lods mov fldcw adc jmp mov sub and in sbb add repnz sbb mov dec lret jg and in into pushf pop pop out nop insb dec and fcoms add fwait scas addr16 lret mov pop add mov pop push icebp sti add test add add cmp cwtl test fnop mov js add nopl test pop adc push mov ja shl mov cmp in fadds clc dec es pop lods (bad) cmp outsb dec lods mov mov into sarb xchg push inc fwait mov (bad) daa sbb clc (bad) clc mov and aaa stos test xchg pop add mov out dec dec outsb cmp pop (bad) ucomiss rorl or adc dec jp pop lods std lahf xchg or lea xor and loop psubsw jge mov aam into int mov cld mov xchg sti and pusha in mov lods fucom (bad) movsl mov sub cmpsb mov imul cmp cmc mov fadd cmp stos gs push lock mov test andl xor call mulb cwtl cltd dec push cmp fs push inc inc sti rcl test or jg cmp sub sub inc lcall add sub push inc add addr16 sbb out cli mov pop out pop mov movsb mov push and dec sbb mov lea sub stc jl je (bad) or mov fwait rcr sub push jl jne jb loopne,pt in test push xchg xchg xor mov out stc std test ret push pushf lea je pushf movw lea lea jmp rorl int or aam xchg outsb pop std ret lahf popa das in push inc and icebp xsaves cmp mov xchg push adc or sub mov sti mov imul dec call lods imul push sub mov fwait jo or push std dec or das push push btc xchg cwtl aaa repz pushf int test loop inc dec icebp nop lods pop jns cmp dec adc (bad) (bad) xor movsb sarl mov outsl fs sub cli fdivrp mov jbe pop mov jns lret fucomp mov test or data16 movsb insb fimull insl sbb inc or fcmovbe mov cmp cmc xchg mov fldpi pushf cmpxchg fisub mov add icebp push movsb sbb push incl imul push jg prefetch mov and loop iret sub mov mov dec inc mov test push cmpsl imul insl or inc ljmp (bad) mov cmc pop inc inc jns (bad) shlb shl std jae xor cmp cwtl fld mov lods rol push call bound movb cmp push icebp ss cmp mov gs mov inc push jmp mov xlat dec xchg test subb dec mov daa inc jge roll nop (bad) inc fisub cmpsl jno xchg adc aaa or jle mov cli lret or mov sub adc adc aad ds enter mov cmp inc mov aaa pop add xchg rcrb cld push mov push movsbw movl call pushf stc cmc jmp jmp pop btc mov push and add shld clc movzbw lea shr neg mov or bts test cmc add movsbw mov lea jmp imul int shrl cmp sbb mov pop sbb (bad) sub xchg push mov sti mov scas xchg cmp sub jmp int3 mov mov sbb test das test mov cmp clc (bad) add hlt movsb cli adc aad inc repnz icebp test or fsub and jmp cmpsb bound cwtl mov mov idivl dec not cmc stc movb push add call lea jne bt test stc mov pushf inc sub bts or lea clc cmp sub bt test movl cmp pushl popl test pushf pusha test cmp pushf lea ja pusha shl test sub pusha add add seto movsbw call insl push and jo xor dec sbb iret stos imul ds mov jge adc dec pop and jecxz int ficoml sahf (bad) inc sub adc scas push dec fsubrs jbe mov das fnstenv clc and sbb mov insl lret es xlat push jp mov mov pop push lcall repz fistpl xorl fistp loopne adc sar popa push push faddl (bad) js bound cmp test pop mov mov lods inc jae lods pusha sub adc mov shrb and inc adc (bad) push imul jp pop popa sub aad cli inc test sarl (bad) jmp pop xor aaa adc cmp clc hlt jb fisubrl ljmp cli push cmp popf movsl jmp int mov mov shlb mov sbb pop lret hlt sub push inc or cmp orl adc xchg mov jl lahf add pop jp cmp ficoml out jmp xchg int fistl dec push sbb insl xchg outsl dec mov lea mov ficom lods imul pop in outsl cmp les xor fidiv sti xor mov rep mov lea into cmpsb popa sti ret cmp cmpsb cmp or mov mov push sub leave mov mov ret ds mov cmp imul mov and loope push loopne scas (bad) loopne adc cwtl xchg jae xor inc adc jmp jae loope jl cli test ret loop dec pop out mov adc mov cmp lret and add mov int es cmpsb mov inc lret cmpsb pop sbb pop mov fs or pop scas ja mov pop pop jmp scas adc lds xchg ljmp sti sar push xchg (bad) jne inc adc jae enter lahf outsl push pop cltd test pop cmp test cs inc iret mov jnp sbb out jno sbb movsl outsb sbb sub mov adc test sub xchg rcl push mov and xlat jmp xorb add mov lret xchg inc add jae idivb sbb pop adc pop loope or mov insb adc outsb aaa rorl lods pop or mov sub (bad) loopne sbbl scas aaa dec cwtl xchg lcall js iret push pop out lods icebp mov jnp pop ret add add in push pop cmc call rorb sub sbb icebp (bad) mov insb sarl cmc jo cmp fs aas pushl sub test xor je mov (bad) jp aas push insb mov imul or mov add lea jno clc not stc push bt clc rol push shr movb push push mov lea je jmp addl inc jae clc leave addr16 add jg push in mov mov inc push cmpsl add mov sub adc ss mov rcrl faddl jne jbe push gs aad (bad) jo das sahf mov addr16 and ss lods lcall jb imul incl or gs cmp test fsubs xor mov pop push pop sub sub inc xor push push dec dec dec cs insb add mov add mov rorl fisub jp sub fisubr mov pmaddwd fwait addr16 (bad) push lods sahf jae pop xlat dec mov ret adc int3 and popa sub sub xlat cmp sub stos clc mov jge clc scas sahf fisubr rol jmp int3 cmpsb and cmpsb xchg daa jne jne xor xor aad mov pop jnp loope nop stos or shrl adc movsl mov fwait nop cmpb sbb adc (bad) push ret adc mov in outsb mov inc invd test lahf mov lret cs pop and rcrb jo mov rcl push sbb xchg (bad) mov movl jmp bswap pop pusha push pushl ret jmp lea je bt test test cmp jmp aaa or int xor cmp mov ffreep lahf popa and inc stos jb rcrl mov xchg push outsl mov or das pop sub (bad) (bad) fistp ret push xor xchg sti and (bad) mov sbb add ret call adc (bad) (bad) loopne pop mov jno mov repnz jmp pop push cmp mov cli jl push sbb ljmp stos mov push mov sub arpl (bad) mov fwait insb or and mov fld mov jp sti test es not sbb jae loopne jb adc pop (bad) int pushw cli fnstenv push inc mov or pop jns not int3 mov push and idivb fbstp lods daa push xor mov xlat in (bad) icebp jns shr dec sub pusha mov cmp push adc iret gs movsl jnp sbb (bad) xchg aad cld pop mov out xor incb (bad) mov pushf cld jnp add mov xor jge inc rcrb xor pop mov adc dec jl daa loop icebp jae xchg or jle mov mov jae out push sbb das icebp fwait arpl sbb (bad) popf das ljmp push mov adc ret fisttpll sub xor movsl jae cmp sbb ja stos cld inc in jbe repnz push jbe lock scas fs dec jns cltd mov mov popa aas icebp (bad) pop push dec cwtl add jno mov mov sub xor test cmpb cmp loope dec jo jmp out aad lds cmp movb mov fsubrp pop pop (bad) sub js mov jb mov inc sbb testl push fcomi cmp xlat (bad) pop xchg sub gs popa jne lahf jnp jne jae in pusha dec cmp aam xchg js push jmp repz xor test and push mov ds jae fstpt lret xchg insl and test imull rcl (bad) jno or ret icebp pushf mov outsb rcrl lods mov repz aas or fldcw xchg lods (bad) clc mov and shrl xor cwtl and inc and lea aad jns cwtl in cs push and push add rcrl rcrl insl mov notb cmc mov mov ja inc xor iret dec ret mov out movsb mov sbb into (bad) and sbb jmp mov movsb push paddw mov push and sbb js mov push std gs push xor data16 les imul cmc fsubr mov pushw sahf loope jnp sbb arpl xchg das cmp or pop jbe pushf (bad) loop sbb bound mov mov outsb loop lds stos lret aas ret xchg jb cmp push push inc and movsb mov sahf stos sbb jno mov push jle and loopne cmp sbb fs mov popa sub out jp cmp adc sbbb popa icebp pop adc fist xchg inc dec sbb sbb (bad) mov js leave pop pop push pop push add and movsb daa cmpsl stc jo hlt push stos fnstcw lods add dec add inc mov lcall test into cmp cs enter jecxz cmp lret cmp add xor and or lea cmp pusha or sahf jae aaa pusha pushf ret sbb dec inc or jmp (bad) xor ljmp xchg popa popa push xor fwait dec out cmp movsl popa aaa ss lea jae clc shrd adc not mov movsbw sar stc mov and shld neg inc mov push bt pusha mov sub stc cmc test repnz call test test cmp mov pushf pushf lea ja pusha pusha mov pushl lea jmp mov repz bound in mov not in lahf xchg outsl push push adc (bad) xchg imul push loope rcll out mov inc fwait and pop rorb subl mov pop cmp js insb std xor dec addr16 sbb je add out pop (bad) sbb outsl adc sub mov dec imul jae xchg cmp les mov dec dec in mov aam pop sti xchg push out mov (bad) mov push sahf dec repnz inc xchg mov adc sub sub hlt and cmp xchg cld stos rcrb fistpl push and mov pop cli roll cmp or fwait cmpsb push add call mov cltd lock mov pop in mov (bad) dec inc and cs call rorb and cli cld arpl push std addr16 cs daa pop sub cmc jmp add cmp or fwait pusha cs movsl fdivr std mov loopne lret clc inc lea rcrb movsb repnz nop mov and test sahf sbb loope sub xchg cmp outsb call pushl pusha cmp out xor xor test subb sbbl popf addr16 test pop sub mov and (bad) cmc push adc push daa cmp in icebp sub std cmc lcall out repz cmp int dec sbb aad outsl sub mov cmp cli cmp outsb cmp sub decb repz test xlat adc cmp (bad) inc pop (bad) mov jae cmp xchg js ret or stos jnp jp sub pop in pusha cli pop rol mov jb sbb hlt fcom (bad) jae (bad) mov fisubrl jno scas mov rorl or ret lret test push lock pop xor test ds ret mov jecxz fs dec (bad) mov leavew ds mov xchg inc jg setb xadd shld sub push mov pop mov lea call inc call bt cmc jmp cs repnz aaa jae mov outsb sub into jl gs push lret jmp addl cmc (bad) fmull into xchg outsb dec adc in scas sbb incl or ret xchg adc add dec test mov jae stc movl (bad) (bad) dec pop aaa (bad) js sti fistpll sbb es sbb cli cltd dec push and pop insb pop sub or jl xor mov adcl sub pop decl movsl mulb fldt dec add add cmp ss outsb xor mov aad push and mov xchg mov rcl sbbb mov or push mov sbb cwtl cli rclb int3 jmp add or xor movsl ret bound jno mov sbb jae cmc popf les inc add lret xor mov gs push xchg xor loop,pn dec pop es les inc pop and push mov mov daa cli mov sbb lahf data16 pop add (bad) fnstcw pop out jbe in loopne mov stc lods fdiv arpl ss jmp enter clc sbb popa rclb rcll or adc or sbb or js adc sub add add mov dec ss mov sti fwait insl inc adc lods xchg jg dec pop add mov sbb add and loope outsb (bad) or icebp popf mov mov xchg push add cltd das pop mov xchg clc mov jb push (bad) cltd push call inc mov dec lods dec out mov push or mov sahf jle shl sub jmp cmp jg ret or or cs and mov stc repz or lret mov jno imul cmp insl add lret arpl std pop sub cld jecxz shr roll call mov incl in cmp shr pop add lea je test test cmp add test test cmp pusha call push pushl movl call call pushl mov test cmc pushf cmc test lea jb pushf lea je pusha test add bt pusha cmp movw jmp xor cwtl cwtl loopne rcrb or adc int dec adc ror and insb dec aas sbb lods mov out fcmovnbe mov mov and int sti rcrb or xchg mov das in add jne fisttpll mov or push push fsubl je nop enter movsb and mov xor cmc or lahf imul ljmp dec imul inc aad test push fistpll iret mov in loop push lea lds mov xor gs jmp (bad) rol pop sub cmpl (bad) addr16 out sbbl mov xor cmp jnp sub ljmp and fsubrp popf stos push cmp cld fisub adc outsl xor fcompl hlt mov jl push sbb cs jne mov insb (bad) mov push cs fadd into sub jge lock mov xchg sub insb or xchg pusha or movsb add repz mov or aam add add mov sbb jo jmp and scas pop cmp mov push data16 lods aam sub inc dec daa push sbb mov fwait data16 das or add xchg add pusha jmp mov clc jmp add push adc jae inc or int3 mov and sarb jno mov fldenv dec add iret push pop sub ss fcomp xorl sbb and movsb jnp (bad) in mov shrl lods mov mov dec cmpsl xchg mov arpl add leave jg shrl loope push int add mov adc mov cmp into xchg adc popf mov (bad) fcoml cmp in in jl or mov jae mov mov fidivrl add add popa insb inc insb insb outsl arpl add inc outsb jae jb gs cmp push lea jae pusha add pusha call in imul int adc sarl jge push lock add insb dec or push mov cmpsl push add pop aas and push cltd inc jnp,pt sti ror mov int3 (bad) or mov xchg cmp pop pop mov cmp aaa arpl nop inc sub add add add add loope push add add cld push adc add add or add or add adc adc inc dec adc xor adc push loop add add add scas in add add add add pop add add add add add add dec adc adcl add push adc (bad) push adc rcll add push adc in outsl lods xchg pop add inc pop fdivr ret lea sti lods push loopne icebp push mov cmp mov (bad) xchg mov pop push inc push arpl jle scas add fmull (bad) mov std lahf adc lods test xchg inc enter dec es jmp inc adc cld jmp popa mov sub adc mov test or jae pop ret push rolb add mov sub jle iret pop mov fistp jecxz mov jne add icebp addr16 movsb push adc (bad) jbe pop xchg mov aam inc cld jno push xchg pop mov and fsubrs sbb cld sbb fdiv outsl adc mov and inc (bad) repnz enter pop test cltd dec cmp aam or jg jns in into mov xchg adc rorl jg mulb pop fnstcw pusha adc lods nop or sub xchg lods stos xor jae insl lret pop rolb imulb push push inc xchg call (bad) mov lds mov adc inc outsb sbb inc test sub adc cmpsb sbb adc lock fisttpll pop pop insl jp call dec mov mov aad pop or (bad) rol pop sub inc out sbb cmc mov (bad) hlt fwait dec in jle pop mov ret arpl les inc add mov test and sbb outsb inc xchg inc popf push push ds sub add pop repz mov mov mov daa (bad) or vmread mov ficompl out pop bound push adcl mov popa push push mov mov fbld enter (bad) push mov pop mov insb xlat cmc jbe and pop das xchg mov out push imul xchg mov int cmp sub inc and push (bad) xor mov push cmpsl js inc dec adc (bad) mov cmpsb sub mov sub mov or xchg movsl (bad) cmp jl mov add call pusha mov sti xchg ds mov insb lock hlt inc jl adc push jp ja andl mov test je or add pop pop dec mull les inc movsl ret sbb push pop pop xor movsb rclb ljmp test push adc lret pop fwait xchg and pop sbb je mov mov sub add adc cld int3 mov xchg fisubrl push cmp cs xor xchg iret loop push push jne bound pop sbb push mov sarb xor xor or mov xchg dec xchg lret cwtl movsb inc fbld adc or push insb lret xor sbb dec inc xchg cmpsl jl in addr16 xor push lcall insb into les push or dec inc mov mov rcll sub mov mov rorl pop mov test and cmp lods push out out push mov cltd cli add lods mov dec jge ss sub pusha xchg test cwtl mov sbb add cli and arpl adc adc test jg dec add push cltd or insl lock sbb or mov push jb es inc ja dec push xor xor xchg sub push inc adc jg mov inc sbb test repnz lods cmp push mov inc imul int3 push dec gs adc mov jns sub mov sbb cmp mov (bad) pop test add shll sub in in in fadd adc inc push mov test mov (bad) iret mov mov push xor pop xchg stc outsb popf jecxz xchg or xchg stos mov jle les outsl sbb repz xor fwait push repz cmp (bad) sbb inc jge push rorl inc stos pop cli push pop and or loope imul insl test mov lret fild fnsave pop lret pop hlt and add rcl jecxz out push lahf jmp sub xorl sub popf mov out dec and sub inc xor or xchg leave lods mov xor and add into sub ret sub es mov mov push or inc mov push out adc and dec lcall insb popa mov fistpll in sahf xchg pop out popf pusha sub inc inc shl outsl dec xor lcall or in cmpl cmp in incl xchg clc mov outsb mov adc mov xor xchg mov sub and mov adc mov (bad) xor pop clc mov arpl add lods fnstcw clc inc jae jle inc push adc inc add loop dec push dec enter call add sar aad int3 std (bad) ljmp arpl inc xchg pop inc mov mov jns outsl add sub xchg lods mov int xchg dec mov movsl xchg scas push sub bound das jmp lret push pop and mov int (bad) mov mov mov jmp push pusha imul data16 (bad) mov xor jo ljmp sbb andl int3 popf pop xor xor es in jg xchg inc lcall (bad) in int3 addl fldenv push js or jne pop dec (bad) rcrb jl testl (bad) or sahf or xchg stc mov cmp add mov mov (bad) or popf stos int3 ljmp jb mov stos dec dec test push add js scas and call into jle in movsl mov jo mov sbb pop lret shr xor stos push xorb sub (bad) jno in push pop dec jle outsb mov nop xchg fidiv imul sti xchg inc in jo add sbb sahf pop lahf cmc or jae int3 mov push ret xlat inc (bad) mov outsb fs (bad) bound call pop scas jp test in inc push int mov (bad) negb inc out pop scas (bad) mov mov leave push mov sarb mov les sbbl lcall jp mov xchg cmpl pusha mov (bad) mov push cmp into enter sbb jne call cmp out rorb dec outsb xchg mov jnp insl pop out mov mov inc aam rcrb adc stos xchg adc movsl inc dec sub fimul sub cmp jge pop mov gs bound cmp pop ret xchg xor sub cmp leave dec stos aas xor je jbe mov xchg fwait jge gs push cwtl sbb and pop sbb fwait mov (bad) jae jnp push mov fdivrs pop push xorl test imul xchg pop or repz adc mov outsb clc xchg jp test pop fsts push mov dec mull (bad) (bad) scas outsl mov xor xchg negl in gs xor push addr16 mov (bad) mov cld pop leave mov pop add fstps subl shrb pop lahf js test mov (bad) lds scas out xchg roll (bad) dec cmp pop mov cmp pop (bad) (bad) ficompl lret stos push push (bad) xor mov orl sub adc or push dec outsb or pop mov fadds mov dec xchg or dec outsl push inc mov sbb dec lock dec je sub adc inc or fsubrl fcomip mov insl imul xchg icebp outsl popf or mov push lods lods lds dec aam lret sbb pushf inc stos mov (bad) (bad) lods test jae cmp xchg out mov mov test cmpsb mulb xchg bound xor dec xor cli pushf outsb inc pop add pop hlt and fsts push add lcall cld les mov cld sti sbb jge xor add and cwtl fdivrs dec subl movsl outsb leave sti movsl int and scas jg mov push mov pop (bad) jo push push mov das jl or sub fs sbb fnop addl xor and and mov dec dec cmp (bad) jb lods (bad) std xchg jl mov xor dec out ror push loope movsl cmp (bad) mov push aaa push and cmpsb mov enter push mov inc sub mov fincstp test mov movsb rcr sbb jb mov and jle lods sub xchg iret mov push div xchg pop pop ficompl cmp dec cltd mov (bad) and in (bad) mov xor push cmp iret sub mov dec icebp cmp push xlat out call stos hlt and std outsb es je pop or scas test xor sbb push aaa aam sbb jno adc sar jns jb mov test dec push rorl mov ret xor push aam pop js jo pusha (bad) pop pop sbb cmp pushl lea mov mov sbb inc sbb out in mov test push ds jge loop (bad) imul ds (bad) outsl xchg sub sub jno inc jne aaa icebp ss xor sub lret pop sub adc ret lahf mov mov inc gs outsl fs gs imul insb insb add jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul arpl outsl js pop insb insb add imul cs insb add jae cmp test and movsb xchg jb add (bad) scas lcall push das sbb jb pop movsb imul add pop jecxz xlat add sbb add sbb lahf enter xchg popa mov mov js mov mov mov and mov fnstenv inc pop cmpsl jns fsubs xchg mov xchg ret and adc add push lcall push inc push dec cs insb add cmpsb sbb jae movnti iret stos lea pop jle repnz mov push xor fcmovnb (bad) cwtl dec cs adc movsl jno fdiv cmp fisttpl es adc pop hlt out add cmp in xor adc push mov jl pop sub fmuls and out aam xchg inc arpl mov out xor enter fdivs dec and js jge mov push pop setno loop mov pop in pop lods (bad) dec cs outsb xchg stc and pop xor pop enter jmp arpl es xor push ds mov inc and sub stos addr16 lret xchg push sbb xchg movsl insb sub mov xchg and mov adc xor gs out lds mov into xchg inc in scas sbb cmp add and xchg jne jne sub adc dec inc lcall mov and fstpt inc scas sub fcmove jb in test cltd test or insl stos pop push fwait dec js xor fxch insl ret mov xchg mov iret notl push jnp add clc sub call pushf mov movl movw pushf jmp sbb dec pop and mov jl in (bad) sub push xor adc stc mov jnp xchg xchg in in negb add mov jno gs fimul mov mov popa nop aam imul scas ret mov mov dec cmp sahf jb cmc adc jne ret incl fisubr xor and cmc jecxz jb mov push xor std dec in arpl lahf cmp rolb pop leave lods cmp inc lret fsubs cmp repnz sbb xchg jmp push adc push lods rolb and jae fistp out jae and ret sbbl rorb inc lahf jne adc rolb push mov xor adc sarb loop jecxz pop dec jle in and jbe scas push push cwtl lock xchg sub mov rolb (bad) mov cli jle (bad) in mov jno push jmp jne (bad) xchg lret push cmc xor rol bnd adc out or test push inc lret clc sub repz or or xchg and jns mov add add je add add sub push xor xor xor dec xor jle xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb cmp mov cmp scas cmp clc cmp cmp sub sub cmp test xor ds add add stos xor jne dec xor xor xor xor xor pop xor xor xor xor xor xor xor xor xor xor xor jle lea enter (bad) xor push adc sbb pop ss ss aaa cmp cmp aaa cmpsl aaa ret aaa in std aaa push cmp cmp cmp push cmp lea lcall cmp jae mov adc push cmp mov icebp cmp cmp cmp ljmp cmp cmp cmp cmp mov sarb out and dec aas jno lcall xor add xor xor divb inc xor xor xor xor xor xor xor mov mov out out xor xor xor xor xor test push outsb ss inc aaa push aaa jl mov cmp cmp cmp jno mov cmp cmp cmp cmp pop cmp cmp cmp cmp cmp xchg cmp inc ds jnp,pt test mov xchg mov ds aas aaa aas push aas arpl jne lea add add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor bound outsb xor xor xor xor xor xor jp mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xchg fdivs dec xchg mov lods ss pop aaa pop aaa insl aaa js lods aaa mov mov cmp js mov sbb das cmp js,pt mov and jae mov (bad) aas stc aas add add pop xor mov xor xor xorl xor xor data16 xor xor mov sub push ss add adc cmp je cwtl aaa iret aaa out aaa or push cmp cmp cmp push cmp mov test fdivrs out cmp cmp cmp cmp jb sti cmp mov aas add add add add adc pop xor xor xor xor xor arpl fidivl das xor xor xor xor xor and cmp aas aaa push aaa data16 mov mov cmp cmp cmp jb nop cmp cmp cmp cmp outsl cmp cmp fstpt ljmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and ss push cmp jb cmpl (bad) cmp add adc sbb and es cmp inc ds ds jns,pt cmpb mov xchg ds mov ds ds ds push aas sbb and cmp aas aas inc aas gs imul aas jp xchg aas scas aas leave aas aam cli aas add add or wrmsr daa xor pop xor mov xor xor xor xor xor (bad) xor xor xor xor xor lcall xor sbb xor cmp inc xor dec xor pop xor insb xor xor xor xor xor xor xor xor xor xor xor ljmp ss ss ss bound outsl ss xchg mov lcall ss cmp mov stos aaa push cmp adc cmp (bad) cmp cmp cmp cmp push cmpl add pop add add test dec xor xor xor xor xor xor xor xor xor push aaa pop aaa push pop cmp cmp mov cmpsb cmp cmp cmp cmp cmp movsl cmp stc ds aas out aas add add push xor xor xor xor xor xor xor fdivs dec xor xor cmp cmp cmp cmp test mov leave cmp je lea xchg aas enter jmp mov add adc sub xor xor xor xor xor xor xor xor xor xorl xor xor xor xor xor xor das xor xorl cmp push ss ss ss ss ss xorb mov mov or adc sbb and sub ss inc aaa inc aaa dec aaa push aaa popa aaa or cmp cmp push cmp cmp cmp cmp cmp cmp jg test (bad) cmp cmp cmp cmp cmp test pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp imul cmp ret cmp clc cmp ss movsl ds cmpl add add add and jnp xorl push xor jg test xchg xor xor xor xor xor cmp push xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec ss ss ss ss nop ss ss ss fnstenv loopne out out add es imul cld aaa push cmp cmp cmp test cmp cmp cmp cmp dec cmp push cmp cmp jb xchg cmp cmp cmp mov cmp cmp cmp cltd cmp cmp cmp cmp cmp cmp cmp cmp cmp jge fwait cmp add jae xchg xchg ds loope inc aas jnp call add rolb movsb add add dec xor xor xor xlat xor xor xor xor lcall xor jae mov xor xor xor xor mov push xor push ss xchg ss (bad) divb adc aaa outsb aaa enter divb push cmp cmp cmp cmp cmp push cmp cmp cmp jge sarb clc cmp cmp cmp cmp cmp cmp cmp cmp xchg pop jp,pt mov rolb add add insl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) cld sbb xor inc aaa mov out inc cmp sarl in cld cmp cmp cmp cmp cmp cmp sbb xor cmp dec cmp data16 cmp cmp sub cmp mov xor xor xor arpl popf xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov xor xor inc ss ss ss (bad) cmp cmp cmp cmp cmp scas cmp cmp cmp test ds ds aas lds add add rolb add xor out xor xor jp test xor xor xor pop xor xchg xor xor xor xor xor xor xor xor xor xor lret xor or ss ss xchg ss ss and dec aaa jno test xchg aaa mov aaa (bad) aaa push cmp cmp jle scas cmp cmp cmp cmp cmp cmp mov (bad) cmp cmp cmp cmp cmp mov cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push jae,pt test mov aas xchg popf aas mov add add add add xor xor xor jnp mov jecxz lock xor jbe test pop xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor ja xchg xor fidivl xchg popf mov divb cld ss aaa gs jl mov xchg aaa movsl aaa mov aaa aaa cmp cmp cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp adc and xor movsl aas clc aas add add clc add add xor data16 xor das xor xor dec xor xorl fidivl jecxz add sub inc xor insb xor lcall xor xor xor xor xor xor jno mov pushf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xchg xor add or (bad) and ss ss xorl cmpsb ss ss ss ss adc aaa inc aaa xchg and cmpb cmp cmp cmpb cmp ret cmp cmp dec jg,pt mov lahf fnstcw idivb adc xchg aas lahf aas add add add sub add xor xor xor xor xor xor xor xor test push cmp cmp cmp cmp add cwtl add add jns leave xor xor xor cmp cmp xchg cmp cmp cmp cmp cmp insl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp cmp pop cmp push cmp cmp cmp cmp cmp jb cmpl (bad) cmp cmp cmp cmp cmp cmp insb jp,pt lahf lods ds ds adc add add add xor xor xor fnsave out add fwait xor xor xor xor xor xor xor xor das xor cmp inc xor (bad) xor dec aaa pop aaa gs jno xchg aaa lahf aaa mov cmp cmp and dec cmp jle xchg xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jg cmpsl cmp jmp add xchg ds sarb add cmp pop aas mov stos aas mov aas out aas sti aas add add add inc xor xor xor xor dec xor push xor xor xor xor xor xor and xor dec xor xor xor xor xor xor xor repnz (bad) cmpsl fdivs in cmp mov aaa cmc aaa sub dec cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp nop aas add add add pop xor jbe xchg push xor pop cmp mov add cmp cmp cmp or xchg add add add add adc out xor xor push outsb xor jbe jp jle (bad) xor xor xor inc cmp mov mov cmp cmp cmp cmp cmp cmp cmp cmp push cmp imul mov call cmp (bad) ds add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp dec xor lea and sub data16 (bad) ss ss xlat aaa loope jmp lock nop add xor add push xor aaa out jle mov pop cmp cmp cmp cmp inc ds aas xchg mov mov add pop xor data16 xor lds pop xor jns xorl or xor pop xor xor xor xor xor xor xor xor xor xor mov push or icebp cmp cwtl cmp cmp xchg in (bad) cmp out and cmp cmp cmp lock push ds mov mov add add add add adc xor xor xor xor xor xor xor xor xor xor xor jno ja mov nop xor xor inc imul out and jl and sub cmp mov or cmpb cmp cmp cmp cmp cmp cmp cmp cmp in idivl mov mov jecxz,pt call sbb aas aas pop aas fs push aas je js jl cmpb aas sarb aam fdivrs fdivrl add add add je add inc xor push xor jl popf xor xor xor xor or or adc adc sbb sbb xor xor xor xor dec xor pop xor jb js mov mov xor xor cmp cmp cmp cmp cmp cmp cmp cmp push ds rolb add add aaa fwait aaa mov cmp cmp pop cmp fwait cmp cmp cmp cmp cmp test cmp push cmp pop cmp imul jle test mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sarl idivl push aas data16 cmpl xor add xchg xor mov xchg aaa in cmp cmp cmp cmp cmp cmp or adc cmp add lock nop add add xor xor test xor xor xor xor xor xor inc xor and sub inc ss ss ss ss xorl ss ss ss ss out ss push aaa jbe jg loope (bad) aaa push cmp xor dec cmp mov cmp cmp cmp cmp cmp cmp lods cmp sti cmp test xchg ds aas cli aas add add add test add add sub outsl xor mov (bad) xor xor xor hlt xor xor xor xor xor xor push xor xor ss test lea lret ss ss ss aaa cmp jno sub inc cmp cmp cmp cmp cmp cmp push cmp data16 cmp cmp cmp cmp cmpsb cmp sub xor inc ds ds ds ds jb,pt jle test xchg ds ds ds or dec aas js jle fdivrs add add aam add push xor mov mov xor xor xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor or rdmsr sbb sub aas xor push xor pop xor insb xor xchg lea xchg xor xor xor xor (bad) xor mov xchg mov ss aaa pop aaa imul aaa jnp lea xchg aaa pushf aaa mov aaa jecxz std aaa or adc and aaa cmp jp mov cmp cmp cmp cmp cmp cmp das cmp cmp jg mov mov cmp cmp add dec add add xor lods xor xor xor xor xor xor xor xor xor aaa cmpl mov ds ds ds add add aas fidivrl add add add push add add xor cmp (bad) xor xor fwait xor xor xor xor xor push xor sub test les xor mov cmp cmp cmp cmp cmp cmp lds adc add add add add cli xor xchg xor add push add xchg add add xor xor xor xor xor adc cmp pop xor test mov mov nop xor mov xor xor xor xor insl xor xor xor xor xor xor xor xor xor sub xor cmp mov cwtl xor and mov cmp cmp cmp fs test ds cmp inc aas push aas popa aas insb aas add add add add sub cmp xor ret xor js cltd xor xor xor xor xor xor mov ds ss cmp cmp cmp cmp cmp cmp cmp cmp xchg push ds ds out idivl push aas xor ds add add add or or xor push xor dec xor xor or inc aaa stos aaa (bad) aaa repz mov cmp cmp cmp lahf cmp add cmp add inc cmp cmp cmp cmp cmp cmp jb jns cmpl cmp push cmp mov ret cmp xor add add scas xor xor push xor xor xor cmp xor jge mov (bad) xor xor xor xor xor xor xor inc xor xor sub inc ss ss ss jbe xorb ss ss movsb ss add sbb ss cmp aas cmp (bad) cmp cmp cmp add mov xor xor xor xor xor xor xor mov jge mov ss aaa nop aaa jecxz daa cmp daa cmp cmp add add insl jno,pt jne jns jge cmpl lea xchg ds ds ds mov lods ds mov mov lds leave ds sarl aad fnstcw fnstsw loope in jmp aas add add add add xor xor xor xor xor xor xor ss ss ss ss aaa push aaa test into cmp cmp cmp cmp cmp xor mov cmp pop ds ds imul jg,pt test xchg ds ds ds aas clc aas add add add jl add and xor dec xor xorb xor xor xor xor pusha xor xor repnz int3 xor xor xor ss ss ss ss ss xchg ret cmp cmp cmp cmp pop cmp leave cmp nop cmp mov or adc adc sbb sbb and add add add sbb add push xor push xor xor xor xor xor ss add add add cmp add test xor xor xor xor xor xor xor xor xor xor xor cmp cmp cmp cmp add sbb add out xor xor cmc cmp cmp cmp add sub add mov xchg xor xor cmp cmp cmp cmp idivl cmp cltd aas iret aas add add add dec add add xor xor push xorb xor xor xor xor xor xor xor xor xor xor xor test ret xor xor xor cmp cmp cmp cmp cmp add xor add add add xor test scas cmp cmp cmp outsl cmp lcall aas inc aas dec aas pop aas (bad) aas int add add add add add pop xor xor (bad) xor xor xor xor xor cmp add add add test xchg ss ss cld aaa pop cmp cmp cmp cmp cmp cmp cmpl add cmp and icebp add push add add xor xor cld xor stos aaa fidivl in out aaa push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp jg nop cmp cmp cmp cmp add sbb add sbb jno mov pop fdivs xchg cmp cmp cmp add add xorb xor xor xor xor xor xor xchg xor xor xor hlt movsl aaa xchg push cmp lds lret cmp cmp mov (bad) cmp cmp cmp cmp push aas sbb sub (bad) aas fnstsw add add pop xor xor ss ss ss ss fidivl fidiv loop out repz fnsave in aaa or pop cmp add add add xchg (bad) fnsave jmp sbb mov into aaa and dec cmp popf cmp cmp cmp je cmpsl cmp cmp cmp cmp cmp cmp jg movsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) cmp inc ds sarl cld ds aas outsl aas mov aas add add add xor xor xor xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and xor pusha xor test cmpsb xor enter loopne repnz and xor inc ss ss ss jle test mov (bad) ss ss mov ss mov ss fnsave out add add add pop add add xor xor xor xor xor xor xor xor xor xor xor or adc sbb and xor cmp dec xor js nop xor pushf xor test lods xor add rolb add add int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb add add add aam add clc xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor fs jo je js add or adc sbb and sub xor cmp inc cmp push cmp pusha cmp jo js cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb xor dec cmp pusha cmp js cmpb cmp mov mov or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ds ds ds ds ds ds ds cmpb mov mov nop ds mov lods ds mov mov ds add add or add cmp inc xor push xor pop xor push xor jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sarb cmp cmp cmp cmp add mov aaa xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp pop add add add push ss ss mov cwtl movsb ss mov add add hlt aas clc aas add add sbb and mov mov xor xor xor xor xor adc sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb dec xor pusha xor nop xor test lods xor fdivl hlt xor sbb sub sub cmp inc ss ss ss ss mov nop ss ss ss les enter fdivl loopne call aaa adc and sub sub xor dec aaa pop aaa pusha aaa push aaa xchg aaa movsb aaa test lods aaa mov int3 aaa fdivl loopne lock hlt aaa clc aaa add sbb sub sub cmp inc cmp cmp cmp cmp cmp cmp loopne in call cmp sbb and and sub inc cmp cmp insb cmp cmp mov mov cmp cmp cmp cmp cmp or or adc sbb xor inc cmp cmp pop cmp cmp movsb cmp cmp cmp cmp cmp cmp and xor cmp dec cmp cmp cmp cmp cmp aam fdivrl hlt cmp or cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ds inc ds cmpb sarb add sbb and inc aas pusha aas cmpb aas sarb aas add add add and inc xor xor xor xor xor adc xor push xor nop xor fdivs clc xor sbb xor cmp pop xor je jl test mov nop xor mov xor xor xor xor xor xor xor xor xor push xor les (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor adc sbb and cmp dec xor jo js mov pushf xor mov mov xor call xor cmp pop ss ss jl mov test mov call aaa sbb and inc aaa push aaa jo jl mov (bad) aaa in lock clc aaa adc sbb and sub xor cmp pop cmp mov xchg cmp in cmp cmp pusha cmp je xchg cmp cmp cmp cmp cmp adc xor cmp pop cmp mov nop cmp cmp cmp cmp xor cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp cmpb cmp add adc sbb xor cmp inc ds nop ds mov ds loopne or and xor inc aas dec aas js mov cwtl aas mov aas enter hlt aas add add add add and sub xor test mov movsb xor enter hlt xor sbb and xor push xor test nop xor xor xor xor xor xor xor xor xor nop xor (bad) xor xor xor xor xor xor dec xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor fs pushf xor add add xor xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor cmp cmp adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp les enter sarb aam fdivrs fdivrl loopne in call cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp dec cmp jo je js jl cmpb mov mov nop ds ds mov loopne add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add add xor xor enter (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor enter (bad) xor fdivl call xor add add push add add mov nop cmp mov cmp push add add mov test add cmp cmp cmp cmp cmp mov cmp pop je,pt nop add add sysexit mov add adc add cltd xor xor add add pusha xor xor push aaa lcall cmp cmp cmp cmp cmp cmp pop ds add add (bad) adc pusha xor xor imul xor aaa mov cmp stos cmp cmp cmp cmp lea add add push add add add xor xor xor jnp xor cmpsb cmp lahf cmp cmp add add push add add add xor xlat xor lret aaa inc cmp loop cmp test push cmp into cmp add push add add push xor xor nop xor xor xor xor mov xor cmp mov cmp cmp lods cmp cmp sti aas add add pop add add add cmp dec xor pushf xor xor xor aaa aam std aaa dec cmp cmp bound add pop add add add xor xor xor in imul push ds ds aas xor bound mov add add pop add add add xor xor xor cmp xor xor xor ss pop cmp cmp cmp cmp mov xor add add jp out or popf xor xor xor sbb test fdivrs dec cmp cmp add inc pop add add add xor xor xor xor xor xor xor xor ss lods cmp cmp jge out cmp cmp idivb add add add add add xor xor xor xor add xor push cmp cmp adc jmp add add add add xor xor xor jbe scas xor xor inc xor xor xor xor ss ss pop aaa xlat cmp cmp cmp cmp xchg sbb and arpl add add add add sbb fidiv pushl jne aad sbb xor or aaa repz sub xchg loop push cmp insl cmp cmp cmp out add add add inc xor xor xor lret xor xor xor mov aaa fdivs adc outsb cmp cmp cmp cmp cmp ds sarl or enter pop add add add xor out xor xor xor xor xor or jae mov aaa mov lock cmp cmp cmp add add test iret xor test clc xor xor xor xor xor xor mov inc cmp cmp cmp mov pop aas add add add cmp pop xor xor xor xor and leave cmp adc cmp outsl cmp cmp cmp add pop add add leave xor xor xor fidiv clc xor xchg xor jne push aaa mov cmp cmp cmp inc aas test cmpsl aas add pop add add add xor xor xchg adc xor xor inc cmp xchg cmp cmp cmp cmp cmp cmp aas add pop add add add popa xor das cmp cmp cmp into aas add add pop add add add xor inc xor xor xor xor xor xor xor imul jnp enter pushf aas jecxz add or xor add divb jl add imul xor xor push cmp cmp cmp cmp cmp xor jnp add add or sub add xor xor xor xor cmp cmp lahf add add or dec add add xor out or pop xor xor xor xor xor leave xor mov mov cmp cmp cmp cmp cmp cmp cmp add or inc add add xor cld xor mov or aaa xor mov xor jmp insb aaa adc sahf cmp cmp cmp mov sti cmp lods aas idivb add add add add std xor xor xor aad push cmp outsb cmp cmp cmp repnz add add add lods xor xor xor dec cmp cmp cmp add add add add inc xor aas xor fidiv aas cmp sarl push aas add add add dec xor xor xor stos xor xor xor xor xor xor ss adc mov push cmp cmp iret cmp add add sbb outsl xor xor dec xor push xor jge mov xchg cmpb cmp add add push xor xor xor das ss sbb and cmp cmp lea add add mov xor xor xchg xor xor xor mov aaa mov cmp cmp add add lock xor xor xor aaa (bad) aaa pop cmp ds ds rorb xor add int3 xor mov fidiv or sub inc xor xor xor divl xor stos cmp cmp xlat cmp cmp add add or and add (bad) xor xor xor stos cmp cmp cmp cmp cmp add or and add jecxz mov push xor xor or mov mov sub cmpsb cmp cmp sub push add add add fidiv es ret xor jae cltd cmp cmp cmp cmp cmp cmp cmp clc cmpl or xor add fdivs (bad) xor dec xor xor xor xor xor aaa sub inc cmp mov or mov ds adc add add add ss cmp cmp cmp cmp cwtl aas add or cmp add inc xor xor xor cmpsl xor xor xor fnstcw pop cmp adc aaa cmp push cmp cmpsl cmp cmpsb cmp jbe sarb add add or sub add test xor xor xor cmp cmp cmp (bad) cmp cmp cmp add add add and dec xor xor xor xor loopne mov aaa xchg cmp cmp cmpb inc cmp add add add inc xor jae xor pop xor xor pop cmp pushf cmp cmp cmp cmp cmp sub mov push aas movsl aas add add add add xor xor xor (bad) aaa divl pop cmp xchg fdivrl cmp cmp in aas add add add add xor xor xor pop cmp scas cmp cmp cmp bound lret ds ds orb and add jg pop xor dec xor fdivrl mov fidivrl out aas add add divl movsb xor xor jne xor jle aad cmp cmp add add and lret xor cmp cmp cmp cmp cmp cmp add mov add add add xor xor aaa mov movsb cmp cmp pushf cmp cmp add add cmp (bad) xor or mov loope lods cmp cmp jl mov fwait ds aas add add or and add mov xor mov xor xor xor aaa pushl and cmp or sbb add pop xor cmpsl cmp cmp repz or sub add inc xor add (bad) xor das cmp cmp cmp cmp inc add add or sub add jg fdivs sbb xor ss ss xchg out aaa cmp jmp add movsl cmp cmp mov adc add add add jno cmc xor xor xor xor add mov cmp aas js ret add and add add aad and pop xor xor xor xor xor clc aaa or xor dec cmp cmp cmp add xor add add add aaa in aaa adc cmp cmpb cmp cmp cmp cmp sbb call inc or xor add test (bad) xor xor xor ss cmpsl aaa iret cmp cmp push cmp cmp mov leave aas idivl add add add inc xor xor ss aaa inc aaa les cmp jp jge lds push cmp cmp aad icebp test add add add add hlt xor movsb aaa cmp jmp cmpb cwtl aas add add add insl xor ret xor mov ret aaa pop cmp cmp cmp add add push xor xor xor xor mov cmp add nop or xor add xor jg jmp xor xor xor xor xor xorl aaa lea nop cmp adc aas add add add dec xor ret xor (bad) xor xor xlat xor xor xor mov ljmp cmp cmp cmp push ds add add add divb rdtsc xchg xor xor xor xor jae sbb or or xor add mov xor imul cmp inc cmp jb sarb cmp mov into fidivrl (bad) or mov add or cmp add addr16 xor xor xor xor cmp arpl lea (bad) fbstp or xchg cmp cmp inc cmp cmp xor jg add add or adc add cltd xor dec sets mov push rcr sbb not dec push xadd data16 testb sbb sbb mov shl bts movw rol mov sub inc pusha push mov and rol mov not and cmc sar xor lea setns lods stc ror mov sar push pusha sub or call mov pushf lea ja call push pushf jmp lea jae cmp stc cmp push mov mov lea jae cmp bt bt cmc cmp jmp out rolb mov jb int3 xchg pop sub mov cs jp jo mov loopne dec push inc call and (bad) aad mov cmp mov dec lret sub mov dec push cli fnstenv sbb iret mov sub andl and scas lock jbe dec mov enter adc test adc mov pop mov pop pop jp push mov mov leave xchg les js jp adc leave jne push or mov lcall mov fwait mov push dec add sbb sub leave icebp jle pop push dec inc dec dec xor cs insb add inc and cmp or call clc repnz pusha lea jne test mov and rcr btc sub bt mov stc sub jmp pushf pushf lea ja pusha lea pop mov jmp call mov pushl call pushf mov mov mov movsbl setne push mov movb mov jmp aam cmp in jb sub mov loopne test cltd pop aas jmp loop aas push cmp xchg rorb nop mov xor mov or stos insb cmp sbb lret sub aaa imull rcrb lahf pop mov xor pop in push mov jne mov or sub cltd test movsl jnp fistpl or push adc fisubrl lea test jb into insl cmp cmpsl lods sub mov mov dec std adc xchg xor mov mov push xor xchg arpl lret and (bad) (bad) (bad) jmp push lock std std (bad) notl ret jns jecxz int lahf popf sub pushf mov pop cmp (bad) xor (bad) lods jge mov dec leave and aam push ret out aad adc test xchg sahf test pushf cltd test stos mov xchg push scas hlt cmc mov test test cwtl fiaddl cld sbb mov ljmp push and adc (bad) xchg jno or sub sub lods sub xchg and lock cmp out bound ss cs nop adc cmp sub sub sub mov cmp xor in adc inc out adc cmpl enter out outsb mov adc mov pop sub cmp cmc adc xchg call or test dec push jne and dec add inc shr sub cld push in sbb fistpll aad push mov fs lea push sahf addr16 sub jmp int dec in jae adc scas js xor rorb push cli mov pop push adc mov xchg das add test mov xor mov lahf out sub rorb mov sub pusha jb jo test cmp xchg ret enter insb pop shlb leave je pop adc je loop dec or das jnp mov loope cmp jp adc push adc cmpsb les aad sub in sahf test (bad) sub mov lods in pushl inc std mov (bad) loope dec xchg inc add test ja rep lahf (bad) jb (bad) xor push cld dec shlb pop adc out pop xor mov les cmp rol (bad) jp das rcl mov or mov loopne ret popa ss xor xchg ja mov enter test or xchg ret pop arpl dec data16 mov mov in movsb cltd add nop push pop dec rorb sbb and xor lea call pushf adc lea jns pushf mov mov lea jae push lea jne pusha mov stos mov pushl pushf lea jmp add add mov movzbl lea pop pusha pusha pushl ret dec jo call out add inc lahf cmp pop ss mov jns sub dec add lahf jnp add jmp push jbe jbe adc in jns jno outsl adc das rol jne fmul icebp movsl (bad) jge idivb addl int imul fdiv imull xchg leave cmc push or jmp push add gs sbb mov xchg test push flds push rcrb cmp push (bad) cli gs mov iret cmc mov pusha cmpb movw lea jne daa or sub mov sub mov setno dec pusha xor add rol or rol rol mov bt test mov pushl lea je bt sub jmp push pushf movl push movl pusha pushf lea jmp das divl dec adc aad mov add xor dec push aaa clc mov inc add lods mov cs jno and sub jle in iret cmpsl xor pop fcoml repz mov mov and jo int or subl sbb xchg inc int3 test pop lods inc (bad) aas add clc subb lods scas xor mov mov jmp mov push leave cs jecxz push sub add mov pop inc xor mov arpl lea jb pusha test pushf cmp pushf pushf lea jae call icebp aad and test gs (bad) pop sub leave mov popa and push mov add in pop jmp (bad) popa arpl shlb mov test pop test mov rcll iret mov cmp repnz fnop rcll sub mov cmpsb loopne dec scas xchg sbb lcall data16 sub sarl mov mov dec (bad) jb cmp lret lahf sub roll xor cs insb add pushf pushl push lea ja setno inc inc dec jmp lea call push jmp aam fbstp gs jne xor pop (bad) (bad) mov push mov xlat xor call mov mov out jp in insb sub int3 ret inc dec (bad) out imul leave mov dec inc stos (bad) jbe lret push movsb mov xor push mov xchg jnp mov push xchg mov mov mov inc mov mov sbb mulb ds loope dec or lock mov and imul ds mov push xchg ja int jmp dec push add (bad) dec pop mov in aad mov hlt sbb sub mov push mov mov and and in int mov (bad) jbe xchg out pop inc xor cmc sahf mov or gs xor mov rcll xchg mov pop inc sbb out xchg stc or scas sbb sub pop mov sub bound sar idivl xchg rcrb push and jg push pop iret dec mov insb repnz (bad) in mov mov jmp jae (bad) js adc inc lret jbe and stos xor scas push jg ret push (bad) fildll cmp out push pop stc cmp push inc adc enter ds dec (bad) xor mov cmc xchg clc and pop les clc mov not mov cmc sub lea jno pushf rep movzbw lea jl pusha bswap mov pusha pushf mov push lea jmp add inc imul jmp pushf lods call fisubr int lcall mov xor push hlt mov mov shlb adc icebp ds jg add cmp pop sbb jmp pushf add mov mov push mov fisub stc aas xchg sbb mov and das aam in jge jmp adc out cwtl sub fstps or mov mov or inc cmp lahf mov adc pop jecxz pop sbb xchg fnstenv mov ss adc dec mov pop mov xchg dec ja mov dec loope daa scas pop inc inc add and and (bad) lock arpl bt jmp push mov movl mov mov lea jmp jecxz xor aad add shrl in lret les add inc (bad) inc out pushl (bad) stos addr16 cmp inc out cmp imul pcmpeqw pop dec iret scas inc mov jge repnz sbb mov adc ficoml movsb dec je movsb jo adc cmc mov mov pop fst inc fwait (bad) repnz push push push fwait inc inc jmp loope int (bad) push xor cltd pop xor mov sbb mov adc js cmp lods mov fs fdiv (bad) xor xchg into ret aad lock mov dec (bad) and test dec mov xchg shl mov push xor test out (bad) out mov int3 jbe ficompl sub ret adc sbb stc hlt clc in icebp nop inc cmp (bad) push add sbb and stos js pop cmp jne into clc lods or out aaa cmpsl out loopne in mov loop insb push and mov lcall push push fcmovnbe fiadd rcll lods scas outsb sahf add je and and or loope int push add in imul int out xchg fwait sub mov enter inc in rclb js xchg jno clc sar imul mov movsb pop icebp pop adc jnp (bad) mov mov inc out (bad) movsb jo mov loop xchg mov (bad) rcrb jno out mov enter lods ret sbb cltd dec jno jb in data16 inc jecxz xchg (bad) outsl push daa sbb roll fbstp mov pop aad out jl in je das push cmp push fstpl xchg jp xlat shr mov push ljmp xchg inc add (bad) push jno pop lock xchg lret (bad) xor xor clc push dec lds mov sti (bad) mov xchg je ljmp inc (bad) mov ror inc pop (bad) mov jmp test pop mov xchg pop mov mov xchg inc jmp push daa adc jmp push xor jb in dec ss mov sub mov adc fnstenv push fisubr pop and jmp cmpl out mov je ret push or test loopne test or adcl jo push insb lock jp sarl cltd aaa loopne and push push mov mov mov rol xchg adc lods sbb mov push add jb mov notb mov cmp pop add mov jl ret add push xchg (bad) adc movsl jns ja fiadd push int3 test test insb ja mov fs cld sub xchg stos jnp icebp in push and xlat sbbb (bad) in aad mov bound mov xchg scas xor inc or rolb push add mov fidiv gs mov inc push and test (bad) sub inc jae rcll call adc (bad) lret jmp xchg adc movsl popa mov adc ret mov dec cwtl jne call or rcrb xchg mov stos xchg rcrl xchg nop stos mov jns insb push adc jbe push leave arpl cld push clc fs ja outsl xchg adc sub add push xor mov pop enter push jbe add (bad) ja jae mov and lahf popa cltd lret jno jns repnz add mov out mov dec movsb and jb add dec dec mov mov dec out in in dec cmp jns repz js out mov inc test data16 and andb sbb daa lahf stos or inc mov cmp rcrw jae bound inc (bad) ja je data16 xchg ljmp jae mov movb jae jnp jno fs jmp test hlt sahf sub cmpsl pop or fbstp jne scas jae arpl push ljmp loope data16 push cmp fs mov inc xchg mov lods jae bound add sbb mov mov xchg into push outsl out (bad) pop jb xchg mov rcrl pop fcomp (bad) adc xor loop xor jb je popa popa int3 lcall add dec sbb cli ret push loopne sub inc mov (bad) repz imul (bad) int3 add out adc adc cmp fsubs push mov sub inc faddl hlt addl cs (bad) xchg stos cmpsb and xchg dec or stc ss push adc test inc subl (bad) xor lcall xchg lahf or push push je and xchg mov inc dec sbb jb ljmp add xor mov adc (bad) jne adc ret bound neg into mov pop lea inc aad out mov dec dec or pop or jg pop xor pop jae or pop cmp and mov stos push adc cmp popa repz (bad) mov push jg pop enter pop sti pushf imul mov sbb (bad) mov aaa jmp mov jg or jecxz mov mov push (bad) into mov inc inc and test jnp jmp sbb xchg pop sbb fwait push (bad) dec lahf cmp arpl loopne sub sub mov add call pusha lea ja pusha not pushl call (bad) sahf dec jb jb out out data16 dec lds ss mov lcall dec inc pop pop dec (bad) sub cmp loope rolb lea xlat or fidivr xchg fldl outsl sbb mov aad lret mov jb lods adc mov mov cwtl adc jmp mov push mov push rolb into cld lds insb enter push add into dec rcrb imul or mov stc cmp or call push lea jae jmp cmc pusha cmp not movzbw lea bswap lea mov mov jmp into adc dec (bad) or jmp jmp ret in adc cmp jnp js push jp cltd int3 mov fs rcrb std fldt popl jns insl out xchg out ja (bad) mov es dec shld dec jne sbb es pop or rolb lock and test or xchg jge or mov gs out pop mov sub cmp adc repz xchg pop clc sbb outsl add iret negl sar (bad) mov pop or adc sbb inc ljmp leave push pushl push lea jmp bt bt add stc pushf pushl movb movzwl mov mov pusha cmc stc add stc bt jmp adc pushf lea jmp mov clc cmc test call jmp pushf rep call shld shl mov xor xor push lea mov pusha push mov pushl xchg not not jmp add inc gs outsl fs gs imul add push mov pushl ret inc sbb mov hlt rcl mov mov cmpsb jbe dec push btr xchg iret aas out sbb or jle into or je (bad) add xorb mov inc iret stc data16 clc and sub dec lea inc das push pop xorl mov hlt mov frstor add (bad) insb adc es mov dec or pop lahf mov dec rol add sbb mull mov adc mov decb pop mov lods xor dec sarl inc push sbb stos jne ss push int3 movsb psubsw cmpsb bound aad cld insb fstl cld pop add jb push es mov mov and int mov sub xchg test xor mov inc pop xor data16 dec ja sub cmp cs dec neg lahf jmp mov inc dec push in lds jno push stos mov int3 dec sbb push mov bnd dec sbb mov jb or xchg int3 rorw sub xchg push dec pop pop or or sub mov mov sbb insl cltd jb outsl sbbl adc mov cwtl inc push fdivs aaa cld mov inc dec call aas sbb in adc in push lea loope test xlat popa sub xchg mov mov jb xchg lea mov fsubl adc jmp loop push push or pop cs or push push or pusha mov lock adc or popf and imul mov sti jmp data16 aas dec fist popf fs popw stos lea xchg aas xchg add add xchg mov dec int3 pop add mov (bad) mov dec jns movl push mov pushf pushf lea jmp lea jae push pushf sub call cmp mov pushl push lea ja pushf mov pushf pusha lea jmp cmc mov int icebp mov movsb jp adc daa out mov ret negl (bad) cmc cmp mov loope push sub pop dec add mov fwait insl cli xor scas das fsubrs clc and in mov cmp pop inc dec cmpsb iret jnp pushl mul jne bound inc jae rcll and movsl fwait mov cmc aad mov xchg jnp cmp and mov iret stc push rolb pop pop add insl pop pmullw fs jl ret dec adc (bad) mov pop push pushf (bad) icebp daa and push xor lods gs mov (bad) pcmpgtd inc in btr mov pushf cmc pushf sub call int3 scas aam aad int (bad) cld fsts stos lcall sbb insb pop jae or xchg xor mov dec pop sub mov insl sbb pop jmp cmp rol mov jmp xchg inc jmp cmpsl mov es cmp fucomip rcrl repz jne mov push enter sub mov mov inc add sbb xchg dec aad mov inc iret mov (bad) mov inc jmp fstps cwtl jp cmp mov lock cmp dec in cmp fldcw dec push sub mov xor fwait in xchg mov loopne xchg movsb out lods fnop jo sub mov lahf pop cmp mov jb fbld sbb add or mov add sub pop push das data16 dec add cli rcl lods ds cs aaa loopne popa fisttp mov bound xchg xchg mov test shrl xchg (bad) sti test call rcl or std js xchg xchg xor and imul adc jne jae jmp cmp mov add cmpsb adc dec cwtl hlt outsb pop out push loope nop inc mov vpsubb pusha add push pushf pushf movb lea jmp jno daa push (bad) jb (bad) mov lahf js add pop xchg or lock iret jae fstpl xor in and fwait mov mov and jecxz bound rcr outsl mov scas fsub (bad) testb icebp test clc mov mov (bad) jnp add or jbe mov cmp (bad) dec xor ficoml sub (bad) add jecxz lock stos and mov mov aas add cmp cmp dec imul mov or jge or sbb mov les sub scas outsl dec push loop cwtl cltd pop cmp jbe jmp xchg hlt (bad) imul jecxz test imull mov sub mov pop mov (bad) ds push lret jbe push mov dec rorl jg sub cmp movsb addr16 mov bound cmp mov lds or dec ds mov fwait arpl inc adc add xchg or pushf mov movb pusha mov pushf pushl ret jmp lret xchg lahf (bad) jb jbe push adc ret ds ret mov push jne adc mov cltd outsl pusha in xchg rclb sbb hlt nop data16 xchg xchg (bad) dec pop jnp push daa xchg in shl cmp push mov push cltd ret shl push test fisubl push mov or cmp sub sub (bad) sbb hlt sbb in out push pop add sub mov (bad) pop xor cmp repnz fcoml jmp repnz or loopne xchg inc pop cs mov pop xchg dec xor mov xchg stc lods arpl insb pusha imul test xor or and fs push loopne dec icebp scas js (bad) pop cmp das (bad) sbb xorl push (bad) mov scas enter (bad) lea popf mov cld and insb in xorb jp test xchg or mov push pop and mov (bad) jae movsl cmc jne mov addl pop std pop aam push inc cmc orb notl (bad) xchg sub (bad) jb cmp ljmp fsubl add imul arpl jne je imul (bad) jb (bad) (bad) imul fwait jge cli fildll dec dec es into int3 mov cmp pop (bad) dec dec dec rorl sbb cmp jnp pop mov mov jbe movsb mov (bad) (bad) outsb icebp jge push or push pop and outsb mov cmp stos jecxz loope fidivr hlt out fild int dec push xor fsts cmp fdivl insl out iret rcr add inc ljmp (bad) jae adc jmp popa pop xchg mov int enter mov sub sarl xor repnz or jb dec adc sub enter ss push cmp in int3 out fwait gs int and lock lods aam push or mov (bad) mov mov inc inc add ja cs lods orb pop inc gs xor mov fwait and negl pusha mov daa insb sbb pop stos jle xlat mov push cmp mov clc jle je add movsl and out add push icebp push dec push or aad sub sub cmp movsl je push jno es cwtl mov mov in mov pop push push sbb cmp cmpsb sub (bad) jb sbb insb ss fadd addl addr16 mov pop daa dec outsl xlat inc or (bad) (bad) popa insl push xor fadds into mov mov stc xchg sub fsubrl aaa scas push and mov out mov jns inc sub sbb sub mov cmp (bad) jmp xor (bad) pop and and std adc test stos test and lock popf xchg call push jecxz pushf mov test clc xchg fcom ds adc aad mov movsl sub int jecxz aas add imul mov sub rep outsl inc sub scas aam lock mov stos (bad) jno jno sub shl nop jo sbb jo,pn and mov xchg lcall mov mov inc call push lret jmp jmp fidivl add decb sbb jns jb fcompl scas and ret aaa adc lds mov popf cmp (bad) es movsb cwtl mov pop sbb jmp std or mov loope pop fs add push lods mov rcl inc xor cmp nop rclb imul sub jp arpl lret ljmp sbb (bad) push pop xchg cmp mov sub in mov mov scas mov inc jns mov sub jg jbe enter jmp popa daa or les add ret sub pusha das pop and rcl lods outsl test xchg leave call jne jecxz add in push movsb enter int pusha xor mov pusha dec add fcmovnu xchg fs and mov push and sahf inc push insb push and movsl sub cld into movl mov pop add test (bad) or xlat mov (bad) enter movsb inc jecxz test and add imul pushf pusha jae test inc mov shrb mov or (bad) jne mov int3 jb mov hlt (bad) (bad) gs sbb fidivrl test mov xor sub and pusha adc movsb sub push or push in cwtl pop scas inc inc sbb and out inc jg xor (bad) mov cmp je fldenv and fld fadds inc cltd push push test xor mov daa (bad) mov cmp mov shlb loopne xchg std aad cltd xchg arpl adc fistl mov sbb jg or aas outsl dec jae,pn (bad) scas mov adc mov insb fadds aad sub cmp repz push sub push or jno sub addr16 pop or mov iret add push aas mov dec mov mov andb mov cmc pusha cmp cmpb jmp xchg je (bad) lret jb rcrl in push cmp sub sbb mov or jb arpl cwtl fwait aaa push xchg mov les inc dec push hlt les aaa pop push mov es mov push nop call cltd stos out push jno mov in adc lds mov fsubs ljmp sbb cmp (bad) dec outsb loopne idivl sub xchg imul dec dec mov out push (bad) roll push mov aad call adc inc or xor iret push sub iret sbb mov popa ret ss stos add and lcall add in cld jmp add lcall ror jb (bad) inc adc arpl das sti mov sbb fistp mov sarb sub xlat cwtl mov xchg cmpb cmpsl dec dec pop test push jnp xchg add in dec pop int3 ss fucomp iret mov push in lret adc push cltd dec cld test aaa dec enter add shrl push frstor or cld stos addr16 mov jle out outsl sbb and push jle dec pusha dec movl mov fnsave inc pop leave mov xchg mov ds lahf push outsb sbb into negb fs stc mov pop fs ret int loopne sbbl aaa or pusha xchg jge cli xchg add lahf jge mov push repz rorb or fdivrp rcll test rolb cmpsl popa fimul lret out adc xchg icebp arpl lods std daa xor repnz jnp cmp mov sub mov pop and outsl jg aad test mov out and movsl loopne add insb loopne mov pop adc pop jnp dec inc leave and aas test (bad) xor pop jmp shll (bad) xchg (bad) cmc mov stc rcl mov mov pusha mov jmp cmpsl (bad) jg jb (bad) scas pop inc or ret dec das adc ss lods xchg and lea inc or mov in adc in mov lret jne push ljmp add mov add sub sbb mov adc mov xlat movsb loope popf xor add or push shr out jl add mov mov xchg cmp jg jecxz xchg mov js jo sbb and mov inc pop imul mov enter arpl int3 outsb adc sbbl add data16 leave jb les stc fsubrs jae loopne xchg jnp inc pop in or adc fwait jb mov pop sub cmp stos imul loopne and sub ficompl ret push bound push jae daa and inc stc fistl fsubs (bad) inc adc adc cmpsb (bad) lock ficompl sbb cmpsb mov sub movl icebp popf out lcall cmpsl cmp lods int mov mov gs xor ficompl rcll jbe in movsb std cmc stos (bad) xchg scas mov sbb dec int3 cmp mov add jb stc mov fistpl out test sarl sbb mov (bad) int dec in out or cmpsl cmp and aad mov fdivp push shrb aam adc test cmp ljmp sbb jo mov lahf or xchg push adc addr16 jne pop scas mov cwtl inc sub sahf bound lods shlb mov int cmpsl push lods pushf inc daa out gs lods popa and push aas add mov mov cmp mov pop fstl sbb xchg jl inc adc divl mov fstps fstl push dec push (bad) mov aaa ss fisubl xchg (bad) test aam mov jmp stc adc and mov pusha cmp cmp mov rol pushf mov movb push push clc sub pushf rep pushf mov push lea jmp pushf lea call call mov jb fstpl jmp or or jmp inc (bad) in outsb sub xchg inc sub mov outsb pop add in enter loope xchg sub inc dec jle lcall lret inc add cmp cld mov shrl ffreep ficom fnstsw sti or out mov (bad) mov mov in mov pop xchg cmp ja sbb mov xor (bad) aad inc lret jmp xor leave jno pusha rcrb shrb sub sub into lds mov icebp cmpsl jne inc sbb mov dec xor pushf bound push in xchg cmp jo mov sti imul xchg push in lret push jecxz movsl add loopne and movsb lret (bad) or nop ds sti mov aam add xchg dec adc out inc mov int (bad) enter loop pop aad scas rcll sar iret push xor out or (bad) mov es sub gs xor jb xor fcmovne mov push jecxz xchg jne hlt (bad) ja std shrl or push sbb push hlt fildl ljmp jbe fsts imul aad ror inc inc pop ja jno in out mov xor hlt sbb jb push adc scas jmp sbb push fadds dec or pop sarl mov ret cs (bad) mov in stc fisttpll dec das sub aam cmp pop adc adc mov in mov add cli (bad) int shrb push out xchg imul mov out ficom xlat mov hlt xchg mov fucom imul xchg push mov fldcw int fisubl mov adc rol push xor jmp pop das ret test and call fildl lods mov add in popa cmc movsl (bad) ja lock dec out and xchg dec dec aam cmp mov cli add mov push lret xor ja stos in (bad) stos (bad) push or notb dec fisttp loope xor mov test arpl repz sub ret ret fs (bad) xor hlt adc xchg stc (bad) mov cmpb and adc fidiv test popf lret adc or jg cs or sbb dec jmp ss fistpll addr16 jb repnz icebp dec sbb fnstsw mov xchg loope pop cmp dec or ja pop push fwait gs inc xor adc dec xlat cmp in lods xor fstps mov rorl stos sub push sub add jge mov addr16 rcrb fdivrl xor and fcomps in push sbb or mov test xor loope nopl add add push ret movsb or int xor test insl ss sub mov leave dec or mov in sub fcom mov pop mov test pop jb movb rorb cli movsb cmp andl fwait ret cltd andl divb and call and imul call fistpll rcrl xor push xlat fwait pop enter push lcall in push sub mov adc mov inc mov xchg adc inc call cs in pop adc ds stos data16 aad mov jmp loop mov loopne sub jecxz,pt sub mov cmp fwait out loopne int push pop aas in sbb add (bad) jnp mov add (bad) mov data16 jns out iret ret xchg adc testb testb testb js stos mov divb cmp or cmp enter xchg imul lahf mov imul mov cmp test test mov loop mov fldt lock inc push std shr std or test sub jnp cmp lods sub inc fstp xchg jns mov sub pop out pop adc push push or outsl inc fstpt push scas cmp cs icebp pushf push clts mov test incl push adc lock pop popf int3 ret push lahf stos daa or push jb sbbl (bad) call inc add int sub lods jnp jne mov sti lcall ljmp aam add mov jb fidiv paddw (bad) and xchg mov pushf aad (bad) out aam je cmpsb imul enter mov in pop push (bad) stc popf xchg add stos rorl sub incl push xchg or ret dec (bad) lock xor or imul cmp mov stos push or fwait mov inc cld push mov cmp xor leave mov cmp rorl jl adc lock mov push inc mov loope mov call push fcompl push xor mov dec icebp les test clc loope daa jns mov inc cmpsb out cmc jo in pop and mov lods sub jns lds sub lahf add jne dec sbb popa fnstenv sarb cs je in leave jo fsubrp jl xchg cmp or mov dec inc or ret jl and dec adc and mov (bad) pop fidivl pop add testb pop shl sti popa dec into movhps mov scas fidivl cmpsb aas sbb pop xlat dec cmc movzwl push shl mov clc jmp mov pushf movb mov mov lea bswap push push movsbl lea call stc xor call sub lea jmp cmp push xadd inc xchg dec inc or into mov test test jge push mov mov ja cmc lds push js jno adc je dec or or std dec push (bad) lods inc movsb xchg mov mov (bad) mov (bad) nop lcall mov mov dec pop jne add push mov dec or xor aam hlt addr16 jb movb in push mov idivb add int pop insb insl pop movsb daa (bad) push rcll adc scas imul fucomip lods jns idivb in stos shll push jmp mov dec jl inc test sub mov ljmp cld test rclb inc and out fs call call xor das popa mov xchg jp pop or imul rcrl ret pop (bad) outsb (bad) fs fsubrs popf push inc sub enter stc lods cltd sti xlat fnstenv ja dec lret xlat jecxz push fs test stos push xor (bad) sub push in mov fs out add out mov sti cmp jbe or (bad) xor push cmp and mov int xchg iret sbb pop add aam pusha iret jno adc das push (bad) in push dec mov jb sbb fsubl arpl in ja push cmp arpl adc jmp insb je shll sbb cmp cmpsl arpl loop xor push jns in xchg test int3 push mov dec push int inc xchg adc adc mov lods adc mov aas jle imul sub (bad) mov dec sbb incl arpl cltd push mov cmpsb mov xchg xchg push or frstor scas fcmovnb orl jo inc pop push and sbb loopne xchg push and jne stc sub and pop bnd shr aas mov stc bt stc test pusha call add inc gs fs jo gs dec outsb outsw add add dec xchg call add cmp add idivb mov lea jmp lock mov gs cmpsb je fwait push aam mov daa imull xor mov pop cmpl mov cltd sub or rorb (bad) pushf inc inc ljmp test mov movsb negl ja test lcall lahf loopew adc pop mov pushf pop lods mov mov movsl fisubl xchg pop xor push (bad) add rorl popa in jae pop and iret xchg mov sub mov popa popa push sub lahf mov mov push fyl2x lret (bad) in jge pop mov jb sahf jnp add lods lahf mov pop imul imul leave dec loop addr16 add popa add cmp and push xchg int3 fs pop jb test aam mov dec cld (bad) push roll xchg cmp dec sub pop or (bad) hlt mov cmp add in pop or repz (bad) rcrb inc mov fstpt mov (bad) mov and mov (bad) push jmp adc lea pusha pushl pushl ret movl push movl push pushl lea jmp pushf movl push lea ja pushf mov movl push push lea jmp mov jb or cmp adc xchg and ror popf dec push movsl call mov jg xor hlt sbb dec or mov adc pop jae scas mov (bad) mov add fisubl sahf or pop movsl push or mov jo inc (bad) call cld (bad) cmc sbb les cmpsl insb lods adc mov xchg mov cmp sbb xor ja cld xchg pop push jbe (bad) xor inc push daa int movsb stos imul dec dec fisttpll mov mov je add mov mov or insl adc push push mov xor aad stos fdivs mov jae in (bad) mov les sahf xor pmullw adc dec inc ss arpl into mov and cltd sub lret jge out cmp xor in sbb or cwtl mov push test push ja (bad) mov mov xchg aaa out inc sub stos jle iret jae cwtl lret or test pop xor adc lret hlt mov xchg mov lcall mov inc fldt sub insl inc popa jae,pn cwtl dec faddp mov jns loopne mov xchg outsl pop sbb mov dec dec lea jmp add pop ficoml sub push mov stos jno cmpl xor test pop jge sahf push add inc xchg inc xchg out push xor lret jp inc (bad) jns xor adc lahf ds sub xor gs hlt popf and repz push dec loopne pop sti dec sbb mov xor iret mov shlb pusha mov (bad) xlat mov xor clc (bad) aad (bad) testb mov lahf inc jo (bad) fadds push xor push sbb icebp add ljmp testb add inc ja sub mov xlat pop pop mov sub ljmp mov push jb pop push aas int sub pop popf inc out mov push and repnz jbe and out test jp cmpsl add leave aam pop adc add add xor add insl outsb ret rorb push lcall adc sub mov fdivp aad and push cmc js stc into jl fldl sbb pushf jne fsubs test sbb insl shl fidivl push call bnd ds incl fsubr jns jbe dec arpl js xorl mov jecxz inc es mov mov mov pop shll enter cmp (bad) cmpsl test stos xlat subb ret xchg int lcall mov adc mov ss pop (bad) xchg stos mov jb in xchg add sti repnz dec and (bad) insl and lods fnstcw adc pushl lahf (bad) (bad) sub pushf fs enter repnz cmc lds lcall push add push stc jne dec bound iret adcb xchg inc mov sbb fwait cltd sar ds outsb out je jb loope inc dec sbb ror sub mov (bad) jle aaa in js push inc pop adc add fs fisttp leave std xchg jno mov xor pop pop fmull cltd jnp mov (bad) dec pop scas aaa mov mov sub add sti mov aaa ret mov clc fldcw and out inc out fcomi jns fmuls and ds inc mov adc add loope (bad) shrb xor outsl or dec and xor jae inc adc aaa xchg ja repz ja xchg rorl aad js cmp stc mov outsb (bad) or mov fisttpl mov mov int iret int and or and aas aam mov push inc mov cmp out xchg cmp (bad) xchg mov xor lods jb clc lods jno push fsubrl sub scas xchg or lock jo mov stos pop cmp fldl lea nop es sahf pushf add lret clc xor add int3 movsb cmp aam imul add inc sub sti test cmc cmp add xchg jbe ss jnp dec add aaa hlt push mov mov int imul (bad) repnz insb inc int fwait es out insl es sub dec int3 inc mov in fidivrl xchg dec pop aam idivl pusha xor mulb clc mov lret notl mov pop loop sbb leave dec je cmc inc je mov cmc ja add les fwait add fs aas or mov inc push push cmp cmc mov mov stos (bad) xchg test adc test pop jmp test sarl pop jmp out fisttpll jl fistp jmp loopne push dec imul cmc call jmp jne inc dec mov int lds jmp imul scas push lcall dec or movsb imull adc iret test push (bad) mov popf dec jb adc mov test pop push xor mov push paddsw mov cli out jb dec insb lock (bad) pop cmpsb imul and jbe mov adcb mov aam sbb pop mov pop jle pop sub push fild inc scas push xlat cmp int3 in push and mov pop mov int mov sarl scas popa cmp lds je dec pop ds pop mov cmc cwtl mov mov icebp mov or xchg ja and sub jo and dec into mov push mov aam mov out dec sbb push xchg cwtl pop inc lret pushf imul and push dec jle rolb add sbb jbe mov lds pop fcmovnbe inc sub (bad) mov add mov mov add xor jmp imul lea pushf movb pushl ret inc sbb divl loope popf jp add aam mov repnz cmp repnz jge ss adc mov mov fs roll lds xor push jg cwtl outsb sub cwtl incb mov and cmp lcall add sbb sbb int adcl dec sarb mov sub jl rcrl fwait inc bound aaa call sub ja push sbb repz push xchg imul (bad) and inc bound mov stos nop stos cmp lea cld mov xor lcall push push xor xor fs insb add divl dec add jmp cmpsl jne pop sti mov push neg rclb push inc mov xchg push sub js xor push in imul jl stos les pushf es cld or lret popf add inc pop and dec cmc push fisubl ror cmp test ss sub inc arpl lock int mov jns sub jge xchg rorb cld rcll xlat jg (bad) mov int mov mov iret mov icebp inc lahf jnp mul lea jmp mov mov popa cltd rcr mov dec sbb adc popa rcr add dec or sbb in dec or dec inc and xor out pop mov stos jle or cmpsb and mov daa jg dec jno cs add (bad) jb in mov pop into jl xchg and mov sbb or mov jbe or inc mov pushf cmp in faddl loop xchg mov mov sub sar ss loope movb cs jmp call call mov jb xor lods pop xor repz mov jg add inc xor pushf adc cmc push adc xchg jno lea ret lcall fadds stc inc lds xorl ror or mov popa icebp cltd outsb xchg mov add jno les rol flds fidivrl and sbb es push ljmp adc ja sbb sti xchg stc outsl push out call xchg dec loopne cmp ret mov push mov iret dec in sub jnp push mov ss test gs jb jns outsb jbe jb outsb insl outsb je insb outsl arpl neg pusha mov mov clc xchg shrd sbb lea test adc mov jmp jmp stc jmp pushf pusha pushf stos pushf lea jmp call pushf pushl lea jb pushf jmp add inc gs outsl fs gs popa outsb fs gs add pop xor adc push xchg ds gs (bad) xchg dec (bad) stos xlat lods mov push xchg lahf mov pop hlt adc fadds pop mov and mov int3 fs mov mov call inc int3 cld test stos adc dec jae or mov or pop outsl or and sub or stc scas sub pop pop cmp mov xor repz add xlat int3 sbb mov add mov jb adc out movsl outsb sahf jmp and xor mov icebp test adc adc cmpsl fs and dec notl adc add mov pushl ret lret inc scas jb shlb mov (bad) push sub cli rcl scas xchg dec aas or dec aaa out pushf jo arpl fiadd cmp pop into xchg pop pop out mov ret cmp pop stos andl push add cmp pop jecxz cs push test inc out sub ljmp add adc dec and jne mov push lret adc mov xlat and (bad) int sbb out mov mov jae xor aam xchg mov inc lret push cld jb out sbb imulb cmp or js cld cmpsb stc cmpsl push imul and movsl mov jmp int jl das mov arpl insb adc sub (bad) stos jns js pushl push cmp push sahf jne bound loope das jle dec sub call adc movsb cli test inc add mov (bad) stos xchg jbe mov mov cmp or nop adc xor sbb imul adc je mov lahf jo mov pop fbstp sbb push lds jnp push pop adc mov sub mov mov movsb push push out push hlt mov push aad jmp movntq lods mov in jg pushl inc push into mov adc in popf dec js (bad) mov or pop xchg xlat or int3 mov fimull test (bad) pushl hlt (bad) hlt add fcoms xor das (bad) lock cmp cmc bt inc add call lea jne call cmp call pushf jmp bsf lahf cmp push bts aad push clc cwtl test daa push jmp call call jb mov out mov out fdivrl (bad) leave sbbl insb pop cli (bad) repz cld push fwait cmpsb sub in lcall or enter mov mov and mov test xlat lea int insl dec out sub mov push add push cmp fcmovnb xchg cmpsb mov adc xchg xchg or xor das int3 in stos loope fadd jmp sub mov fwait data16 dec cmp mov cmpsl xchg ss lods sahf xchg dec add stc lcall dec imul xor mov mov aad cltd shlb lds mov (bad) lret (bad) jbe cwtl clc or push repz or adcl stc test add aas je mov push jle xor in jns cmp cmp push lock cmpsb push out or jg ret mov test outsl xchg jne in pop (bad) xor mov jnp popa cmp dec aaa jg scas test cmpsl aas in inc out mov xchg dec aaa jg cwtl shrl xor cs insb add or bt cmpb call outsb and stos jb add or fst mov xchg jmp adc movsl jle (bad) (bad) cwtl test (bad) jbe adc or add sti push xchg (bad) pop sub xor lock pop pusha push mov in (bad) mov shrb repz xor mov test pop es mov inc pop and fld dec outsb in adc mov xor sbb fsubl xchg ljmp cmp xor notb dec bound std test xor pop jo in pop daa dec adc popa push xchg xorb fs fist and repz xor scas mov jb mov mov repz test sti mov popf jge sbb jle pop adc mov fwait jne repnz jge sahf gs es test mov test dec jbe repz xchg xor add adc and (bad) cmp dec std orl jecxz,pn sahf cmpl shlb in shl jno (bad) push ja stos loope add inc push push and adc mov icebp aad jns pop cwtl push fiaddl test mov sarb jle pop sub cld mov aas dec jp pop call lea jae pusha mov mov setns inc mov mov lea call pusha mov lea je bt sub clc cmp jmp movb lea jae bt cmp pusha bt cmp jmp je cmc pusha add cmp cmp push call push arpl xor cs insb add xchg out jb outsb sub roll sbb mov test int3 adc xchg jne std pop sub (bad) (bad) pop and mov or aas add pop roll jg fimul pop cwtl (bad) movl outsb fcoms mov jmp int3 jbe xadd lea sub and shld rol mov lea neg movsbl mov rcl rcl add bswap stc and sbb shr cmp rol push mov rol sar xor rcr add pop movzbw lea mov jmp in xchg mov cmpsl jb jns lock push push outsl cmp jle xor mov mov in xor mov data16 mov lret mov dec jp,pn mov call pop and jae ja mov outsl xor cmp pop orl mov adc add dec jl iret ret fwait lea les pop das (bad) mov aad xor hlt mov mov aaa scas dec mov fiaddl aas mov xor test les repnz jecxz enter inc rorl ja enter xor cwtl pushf xor sub in inc cmp test jg test sub inc outsb (bad) mov les mov movl insb (bad) decl test push clc call into cld (bad) call movl jmp jmp mov clc sub shl test mov cmp pushf test repnz movb lea jne movzbw cwtl not movb cwtl lahf mov push jmp pushf pusha lea ja call movl neg pushl jmp (bad) mov xor stos pop cmp jb fidivr lret outsl push push cmp xchg mov and loope or dec out dec pop mov cwtl sub mov pop xchg mov pusha jg mov xor cmp fucom xchg pusha push and inc ret mov data16 nop xchg scas dec imul imul imul ret and insl orl ja push scas or jae push cli iret jnp mov data16 out sarl lods pop scas mov sub das clc inc jmp loope pop pop jle inc jecxz jo insl mull cmp mov testb inc pushf mov dec pop popf std push or and adc clc add mov push stc imul xor and and xchg jmp cmp jecxz lods imul call push popa mov hlt jo (bad) int3 jnp rclb xchg or mulb cmpsb jb dec or icebp add dec enter lods xchg mov and fnsave cmp mov int3 js ret add fsubr stos jne mov pop or fisubl pop jne mov add aaa pushf push jbe jmp mov (bad) gs ds jl dec stc xor ret ss xchg add sbb call mov inc fidivr and bound xchg and push into jle idivl imul xor mov mov data16 int loopne jo (bad) (bad) push aam mov and loope xor xchg inc inc lods mov fcoml loop xchg cli test add dec outsl popa fs imul add insb mulb mov add xor or cmpsb dec push fistpl pop sub scas into add mov jne xchg jno aam jg std fisub jp xor fidivl mov pop push aad xor movsb cmp lret test aad mov (bad) lret pop pop lret xchg mov and insl dec aaa pop in fcomip test or push stc sbb pop mov inc dec xor mov cmc lret mov aaa add inc fisubrl adc or xchg mov sub aad xor repz xor movsb jb es insb inc inc (bad) mov xchg fs mov xor mov dec add (bad) mov xor mov ret mov add mov inc dec pop out leave neg movsb lcall daa ss cmp lea pop ds in lea xlat rorb mov test mov nop mov ret fmull shr sbb and std dec push enter dec add pop subl leave xchg sbb rcrl sarl jns sbb cltd jo ret and pop sbb fcomps lahf popf cmpsl nop (bad) mov xor imul inc push fcoml lea push fistpl leave movsb mov lods dec cmp push in in (bad) push adc (bad) mov lcall jmp add repz aad jmp or (bad) ja in sub (bad) xchg test mov mov lahf repz shll in mov stos stc nop sub loop mov cwtl mov stos jecxz mov adc cmc push xor hlt scas fstpl repz mov in rcrl xchg lea (bad) sahf jp pop (bad) iret sar fwait pop sbb iret mov mov in in adc es add repnz cltd push mov xor xchg cmp xchg adc out test sbb and call mov pusha les cmp or fs imul pop int push les jge loop fiaddl fstps or push dec lds mov jp test dec xchg add pop xor jns inc sbb ljmp ret roll sar into inc jge jmp movl scas cpuid jb inc add movsb jl or loop mov cmpsb jae sbb or jnp cmp sub sbb js or (bad) xchg xchg mov mov popa sub cmp out into dec push scas insl test jb add xor fs pop jbe test jecxz aam pop stc jo push push scas cmpsb (bad) int3 incb decb cmp mov add test adc repnz push jmp sbb adc cld outsl xor test xchg pop lcall fsubrp popa test push js mov add sti mov jb jg bound loope xchg leave shrl stos imul sti leave or mov mov mov adc out inc inc push jno mov (bad) xchg or loop mov mov sbb adc repz (bad) fnsave inc ficompl es lods jne inc add xchg test mov add mov xlat addl das push arpl (bad) int3 shlb aad data16 pop push add div int jo (bad) std mov fisubrl jmp jo cmove sarb dec add adc testb sub test mov inc add xchg pop aaa sbb and mov lock push xor test pop and jb ss lods push out mov call pushf call pushl lea jne cmc mov bswap sub lea pusha lea cmc cmp sub jmp in mov lahf jb cmp cmpsl ja jp popf sahf xor (bad) ret andl lret nop cmpsb shll aad push push fisubr mov xchg pusha adc cmp push pop sarl in pop push xchg rorb mov fstpt xor lods dec add mov imul movsl push xor outsb (bad) push jnp push (bad) cmc push push cmp sub cmpsl add mov retw xor cmp stc mov mov cmp cld jbe into and shrl (bad) jbe or pop adc lcall mov jb mov test lods jp cld (bad) xchg mov sti enter sbb mov jecxz outsl iret adcl out xor jne inc popa fistpl jne loop ror mov cltd add ja xchg inc in lret mov scas (bad) sbb jno add jmp call shrb xchg cmp add jae dec gs popa addr16 add push dec inc dec xor cs insb add cmp cld decl (bad) mov cmp stc cmpb pusha lea jne clc or rcl sar mov pushf jmp movb pushl mov movl pushf movw lea jmp adcl jmp (bad) ret test rcrl cmpsl pop das out dec mov push sub lods jnp or mov mov stc jo imul cmp gs sub cli insl sub xor inc lds (bad) mov mov flds sar cmpsl incb inc inc into xor push dec sub (bad) jle ret adc cmp aaa dec outsb in mov cmp mov roll mov fwait pop je jae pop inc add sub idivl add jmp cmp fstpl add ret push cmp push in rcrb jb jmp cmpsb les push mov jne loope,pt push hlt xor pop push dec (bad) xor in adc cmc mov jmp xor cmp outsl push rorl movsl xchg lea mov leave pop or adc mov add mov imul sti addr16 jae add and pop pop out jne pop ljmp ficompl lahf inc sarb ret add out fs mov adc cmp aad push lahf xchg mov repz sahf jae pop pushf jmp sbb (bad) test jb lods imul fisubrl in mov pop dec adc mov xor incb jecxz out ja in push icebp or (bad) mov jg sbb cmpsl rcr and pop adc bound or cmp mov add in test call jle fs dec scas cli jno outsl daa inc mov jne andb sti (bad) adc cmp (bad) jno fs inc jecxz adc insb test jae pop negb mov push xlat daa mov add jp push inc mov inc loop mov in or testl jp xor and mov pop add out pop fdivr popf mov cmpb push sub xchg out sbbl (bad) jmp xchg in fwait jb adcb jb add and and movsl jge add stos pop xor imul jge push and movsb jmp pop outsb into lea jmp push mov scas inc loop sarl inc sbb or sbb mov cmp and incl sbb mov leave jmp aad sbb or repz arpl icebp push adc cmp push repz jnp lcall lods dec les (bad) xchg les daa std out xchg mov cmc mov push and mov xor xchg mov adc mov cmpsb inc push push shrb fwait jb sub mov inc inc pop cs cmpsl jg (bad) pushf jl test repz sub cwtl iret mov dec xchg xchg inc or mov jne or rcrb xchg sub xchg jae les popf pop mov je pop in lea es fnstcw sbb movsb lcall movsb pusha mov hlt leave inc inc add movsl mov adc leave lea push mov mov or push (bad) scas jle xor stos (bad) jno lret popa leave jno sub lcall mov mov lcall pop dec add test stos mov (bad) pop or enter or cmp xor hlt ret mov mov sub mov inc add adc faddl loope add mov sbb mov test pop loopne movsl mov xor ljmp adc add mov sbb pop and ror call adc fsubl outsl push pushw pop stc cmp les into jl or mov lret cwtl fcos or jmp dec push pop inc lea cmp xchg (bad) in stos (bad) cmpsl mov popl pop inc popf adc or incl fs cmc ja iret outsl out jp push dec loop xor nopl lahf add push and arpl (bad) mov mov sub popa mov (bad) aad mov xor sbb mov jae pop inc lea cmp dec setno dec sti imul dec mov jae ret dec mov insl pop gs pop sub mov repz pushf lea jae call movl pusha lea lahf lea pushl pushf push pushf movl push movb pushl popl movw movb mov push pushl ret bt push test pushl popl jmp gs int pop and aad push std into push adc mov jb int mov icebp ror push sbb jae or dec xchg dec fwait mov xchg push sbb push movsb cmpsl pop inc add dec jbe mov pusha sbb leave xor cmpsl lds je push jo fistp lods sbb leave and ljmp jl lods out jp ret lock sbb call xchg jp pop xor test dec out xor jns dec lock adc test stc inc fdivrl add xchg test jo cs (bad) out sbb jg dec push jb jge jb test test xor lock in lock dec dec sbb popa cmp rcl outsb dec push push test mov in lods imulb xchg lcall stos jb clc jb repz (bad) push test (bad) xor mov mov leave mov cmpsb push and ret cmp sub xchg xchg add aaa sbb lods das iret xor xchg push scas (bad) inc call (bad) xchg push dec cmc pop mov cmpsl rcrl fucom mov inc and out popf int sbb data16 lods jmp pusha movsbw pop mov pusha push push mov push pushf lea jmp rep lea pushl pop mov mov push pushf pushf lea jmp mov jb test pop sub mov je adc lret (bad) or rcrl sub jno sbbb test jno mov or push jno pop (bad) jp cmp lret out addr16 les outsl ficomp inc or push inc xchg sbb pop call test and les (bad) inc mov outsl loop and mov push roll cmpsl js sti xor daa xor add cmc sbb (bad) add cmpsl sub jge sub jg lcall imul push xchg jb in jmp jne sbb aam xchg arpl add fnstenv aas add pusha sub xor aad xor jp jecxz je dec insb fisubl dec mov out cltd or push out mov in xchg pop test adc xchg jl fstps les mov cmpsb arpl mov xchg xor scas test dec cmpsb jl inc add jmp int3 in jae push sub mov dec sbb aad mov insb gs fnstcw push in xchg jns daa dec ret loopne into pop pop push lret push pushf push cmpsb test lea negb pop add into cltd dec mov std mov repz push adc inc push sbb add adc adc addl pusha out lods nop jp xor fidivl enter aas xchg in xlat movl jle insl psubd pop sub lcall jae call cmpsb jo cli shrl cltd test mov stc xchg or int3 ret and dec xor addl imul mov andb and outsb or mov mov lcall jmp imul adc jecxz nop iret sar insl gs cli mov and dec jb sarl outsb cmpsl inc xlat mov mov xor fcmovnb xchg je and xor xchg jns push pushf aad or out adc (bad) fst daa lret out or pop data16 ja lock xchg jecxz sbb popf scas fdivrp jge mov mov repnz lock test loopne (bad) inc fnstsw xchg inc cmp xor adc out mov dec push dec adc adc xor enter negb jl sub mov xor popf popa inc enter movsl dec shlb push pop push fidivl call cmc pusha pusha jmp add inc outsb jne push jb arpl jae outsl fs gs push jb test int adcb loopne test lock mov addr16 scas xchg xor in inc fdivrs add outsb inc aas jg cmp push xchg add pusha ss xchg sub and lods cwtl mov dec jp arpl fisubl shlb cmp jmp jp add gs in mov push cli outsl mov pop or scas (bad) mov dec inc popf jmp (bad) loope inc bnd lahf xor imul push sbb cmpsb jne outsb cmpb rcr push adc mov shrl je adc and inc adc dec xchg jb or lea mov hlt mov shrb inc pop call mov dec not scas add mov xchg inc arpl mov cmp dec in inc aas sbb ret lahf jns sbb or jmp add imul fsubs mov xlat rclb int3 mov stos es sub mov pop xor iret pop leave out lds lods mov movsl push popf push icebp mov push and mov xorl insl mov jb leave mov dec inc cltd mov xor push les mov int arpl add mov ss adcl cmp jo ljmp loop adc and cltd test adc pop sub cmp push or xlat pop add adc fdivs test mov ja (bad) mov inc inc cmp or xchg popf xchg xor jmp stos xor jo xchg cmc push das (bad) in xor add in mov rolb jns dec bound and push mov ds pop in cmc pop add loop int cmc insl nop jb call lahf loope sbb iret rcrb ret lahf popa cmp mov imull fnstenv inc test (bad) adc jno pop pop adc xchg negb or test rcrl dec inc test nop push jecxz in mov mov push out fistp and sbb pop ss movsl (bad) pop repz sub or mov and cld (bad) mov adc jae cmp or sbb mov cmpsb adc push dec sti or rep lea movsbw movzbl bswap mov mov pushl pushf lea jmp (bad) lock rolb sti shld cmp movsbl movzbl lea add bswap stc mov push xor sar mov bt cmc pushf push repnz mov pushf lea jne movzbw mov not movb bswap push push not jmp push neg mov pushf bt jmp pusha lea jp pushf movl jmp and and jb and push inc sbb cltd jns push aaa loope xchg arpl out fucomi pushf fwait push (bad) fsubl mov xchg stos jge adc aad xchg push xchg cmc stos cmp movsl mov sub adc les mov adc rclb mov and int out mov mov das adc mov xor xchg jae pop fs sub arpl cmp out sbb push push sub sub cmp int3 fwait xor je movsl lods and insl iret mov loop lret cmp sbb jne pop pusha movl mov lea jmp call lock jns cld mov inc or into inc cmc les iret imul or sbb adc jbe jo jmp fnstcw mov aas add arpl jae nop ljmp jnp mov mov add mov psubusb int dec sti dec or loopne jno sbb jle movsl daa loop ja cmp add adc pop xchg sbb mov dec push mov pushf push cs data16 ja daa inc add push sti stc xor xor xchg sub xchg ljmp out adc cmpl (bad) jmp mov popl cmp cmc cmp pusha movb lea ja setg rol jmp loop inc push mov in add test mov dec stc mov lcall rcrb mov push cmp xor pop addl inc or add pop lods and movsl pop and or daa mov imul rcr push aam dec and mov mov nop jnp leave stos sbb cmp push inc mov xor xchg lret (bad) push adc jmp mov fidivr mov xor xor xchg mov jmp aaa fdivr popf mov lcall xchg xor push jp fbstp ds lahf imul pusha xlat divl and lods dec push out jns jmp pop daa out xchg jnp add cwtl push aas aad mov movsl add jle dec mov pop outsb pop lds dec xor or sahf (bad) mov push (bad) fiaddl sub mov dec cmp jg cs push lret sub add push jne add mov xchg (bad) sti arpl rcl and add daa mov cmp vsqrtsd cli ljmp jp imul fs je cmc bsr aad lea xor aad mov bsr pushf clc mov movsbw not shr add add bswap rcl rcl mov cmc call cltd inc sbb roll cmp mov inc int xchg popa jbe iret in faddl and ret pop dec mov lret sbb mov aam test roll dec movsl mov xor stos jo pop mov into pop into pop leave outsb mov mov std mov mov push mov rclb loopew sub adc mov ds out insl dec cmp (bad) iret inc or leave testl dec adc jp out fiadd (bad) pushl dec xchg inc inc or mov sub test lret cmp int3 xchg xchg pusha pop sbb mov and jmp push fs outsl (bad) mov lahf pop and jmp mov jbe aad mov (bad) mov mov imul or mov ret inc orl out xor fldl dec lea lret idivl pop mov jno (bad) mov add (bad) aaa int3 loop test test cmp jmp add lcall ja (bad) sti aaa dec inc adc mov add imul jae add jb int out lods xchg sbb mov lods jbe push repz jp out mov dec adc cmpsb mov push xor shl mov dec pushf and xchg fildll mov adc mov movsb dec jne cltd jge in or pop gs inc out fisttpll scas fadd nop cs sub inc arpl fcompl popf adc rcrb das push leave in pop inc out mov inc int3 inc pop pop daa ja jne push fwait jns inc (bad) cmp inc fidivrl mov in mov jg add inc cwtl xor shrl jle mov xchg das data16 cld push mov cmp sbb cmpsb imul add adc add adc mov or jp adc mov pop int dec add lret fisub in push or mov and pop xlat fadds (bad) sbb mov sub lcall lea sti mov push out and mov pop xchg fwait mov mov mov and fcoml je push les divb pop or nop outsl fdivrl (bad) lret rcll mov (bad) arpl jne xor lds (bad) cmp std cltd lcall sub lds push or add repnz push sbb fucom fmuls aas mov pop adc loope add lods int3 mov mov pop push adc int3 ret outsb push cs (bad) (bad) sub pop xor mov push and ret push push adc fdivrs inc or inc lret ljmp and sbb mov mov and cmp dec jg or add out js pusha dec (bad) aam int3 inc cmpb dec xor (bad) ret sar sbb in cmp les mov (bad) mov adc mov into cli adcl in icebp aaa inc mov jmp xchg cmpsl cmp int es addr16 push cmc pushf sub mov not bt neg clc ror mov call cltd ja jg jb and xchg xor scas popa xor in test push xor sbb xchg std es mov xor push mov jns mov insb ret cltd mov dec sbb fnstsw aaa loope xor and xchg xchg mov lods jl mov inc nop rol mov dec pop sbb mov xor and add push out or stos sub pop add outsl xor lret (bad) xlat movsl mov cmp mov cli enter out adc pop xor adc xchg pushf mov loop sti and dec nop mov in mov lods in xchg jl cmc mov xor into ret xchg xchg adc adc mov enter insl mov mov imul adc jl jns sub inc std leave mov sub stos into xor dec ja and push aaa lahf mov mov test in jge add mov sarb cmp test push jo std nop mov lret pop sbb mov dec fsubl std rolb pop dec lret xorb mov fiaddl or loop inc xor out xchg cmpsb xor nop fwait pop push jbe sbb rclb aad scas xchg stos push mov data16 (bad) cmp test mov (bad) push adcb mov jg xor addr16 and aam inc (bad) out inc pop int stos push xor les cmp lret sbb dec or mov mov sbb mov cmp mov push and fdivrs into movsb push sub sbb bound (bad) jno stos outsl cmpl xchg mov xchg in cmc jp mov mov jnp repz inc or inc scas addr16 in or not rcl not neg seta rcl ror cmc ror jmp pusha push lea jb push call lea call pushf call sbb and jb ja hlt jmp stc cmpsb push add mov popf inc dec adc (bad) pushf jle data16 cmpsl push mov cltd loope mov into sbb inc jns subl arpl into sub ret loope pop and (bad) rol push mov mov or ljmp sbb add frstor and (bad) (bad) sahf dec jmp add adc lret fisttpll in jecxz sbb or cmpl (bad) mov xchg push ds sbb test cmc cwtl fsubrs (bad) and push ss sbb xchg lods pop cs mov xor les push cmp inc inc sub sub jl into cmp xchg bound and pushf push leave jmp and std lock mov fistpl std mov (bad) pop ljmp xchg outsl sbb jne mov xor or push fmul pop fimull int out scas addr16 jp ret icebp aaa mov jno sub add and rcr popa daa or dec pop add je add ret ljmp je xchg cmp jecxz cwtl push and aad xchg test imul jne pop pop fsubr jle or hlt jnp insb mov sub mov js scas adc cli mov or stos arpl or sub jns xchg xchg cwtl and push and mov cwtl pop stos dec call jnp pop pop outsb sti pop and lds push and sub dec push imul outsb adc iret mov or add cwtl stc adc mov je adc lret mov or (bad) cwtl jge inc mov dec loopne cmpsl (bad) sub pop lret mov (bad) jae sbb push jbe push mov inc add lret mov dec stc aad push std sbb dec sti sbb (bad) xor inc or ret mov xchg mov out fndisi(8087 and aad jp jecxz mov scas fstps fistpll (bad) call mov data16 lock aad shr xchg xor mov cmc pushf sub xor dec btc push jmp pushf push lea je jmp in daa cmp sti aam mov mov sarb stos popa es jae std mov inc jnp mov cmp mov jb and jecxz ret mov inc sub (bad) cmpsl in nop imulb std or adc movlps sub mov xlat jne mov daa mov and lahf repz inc cmp inc sub js stos adc pop cvtdq2ps adc (bad) jp loop test test insl mov xor fwait dec fs mov push jle adcl jl adcb sarl inc (bad) push cld adc in jbe inc jbe js movsl lds stos insl push and push or pop aas xor loopne mov sbb pop adc movsl in jle (bad) subb mov inc (bad) jb adc (bad) out lods mov sub mov mov sub mov adc orl inc insl mov lods or add jnp mov jecxz xchg xchg out add fs jp push pop inc push mov dec pusha cmp xchg insb inc pop push inc and mov xchg int or adc or pop adc lcall jo cmc sub fwait dec inc xor mov or push jmp cmpsl rolb adc push fwait mov out in mov loop mov icebp aam aaa or stc loop mov test repz xchg push (bad) cmc popa into scas int loopne mov ds subl int rorb fistpll mov mov or mov sub mov dec iret notb mov call (bad) enter pop dec mov mov jne pop test adc add shrb addr16 xchg mov daa pop or lret sub jnp adc add push test inc pop push add roll lret adc lods mov cld or mov (bad) lret movsb adc ss sub jl sbb rcl popa cmp fbld pop (bad) (bad) (bad) ss js cmp sub aaa xchg loopne aaa lret mov dec movsl insl fldt lret ret shrb (bad) std popa and adc bound mov insb into mov lahf add mov jg mulb and fmull pop (bad) pop es jns mov (bad) scas int or int roll test push and stos pusha sbb mov inc lahf jne push pop lea les push push sahf inc pop and hlt adc loope es test mov push inc or lock leave scas cmpsb lock mov je and shlb inc adc out fwait inc mov std and lods (bad) js es imul cld dec lahf test hlt insb add ret gs cmp ret lea imul loope insl inc nop andb repnz push js mov xchg rolb dec loope sub adcb inc pop fisttp pusha pushf lea jne pushf push stos pushl pushf lea jmp fidivr int mov push push fidiv lock push cli lods xchg (bad) inc push test fnsave rcr pop in fiadd push lret shl or popf cmp nop adc xlat mov negb popa jb cmp pop shrb push inc outsb mov adc cmpsl fwait adc (bad) push mov pop in jge js arpl aaa cmpl mov inc cmc cmp add iret push xor shrl pop aad push movsl xchg inc jbe pop push mov push sti nop popa shrl cmp rcrb xchg jge mov jb movsb jge push mov divl addl and add xchg test or add sahf je dec insl dec add mov call ret fwait mov xchg mov pop adc xchg cs add call out sti pop (bad) jmp dec xchg icebp sbb sahf sbb (bad) push aam test test imul out jo scas jle jecxz sub test xchg mov rorl outsb add inc xchg pop stc xor mov out adcl xchg mov push xor push and jle int sarl rolb sbbl lods lahf xchg sbb (bad) mov inc sbb mov ja into mov in leave stos jge xor fistpll ljmp pop gs fdivs inc repnz mov xor mov xor pop lods ret mov mov lahf jge je je sub push push push fdivr add fucomip popf cmp psrld icebp movsb mov xor mov loopne adc je dec imul mov je (bad) popa sbb mov in jb jno or stos push jecxz sbb inc mov sub movb lds ljmp (bad) lea jbe lret xchg mov shlb mov out pushl push pushf js jmp pop lock mov and pop ret (bad) adc scas rcll jns mov aaa movsl lcall mov verr test and movsl mov push push or inc (bad) aam test add lret sbb stos or inc enter dec jmp fstps loopne sub (bad) fdivl lods fdivrl sub mov xchg insl dec and iret les mov cs stc fwait int3 sub ljmp popa sbb pop or (bad) push popf xchg mov hlt sahf repnz and hlt xchg outsb in sbb pop add push and adc out pop mov xchg lods jg nop xchg sbb cld rcr sub (bad) sbb (bad) jmp sbb pop mov aam pop repz test cmp lods movq insb push jne mov or es lret fcmovu movntps popa jge loop fcmovnb out pushf (bad) (bad) and mov add jb cmc mov sbbl scas cwtl nop jb aad out inc lret fidiv (bad) (bad) imul stos cmp mov add sbb call lods arpl jbe sti mov sub int3 dec rcll or into scas ret in dec int3 iret out mov mov out or mov push fistpl imul mov mov pusha inc int mov mov push cmp sbb cltd mov and call cmpb mov iret cltd cmp icebp cmp lods inc push loope dec push add xchg mov and add xchg cmp fsubr or cmp aam stos fs push push inc push inc dec push cs insb add and dec stc mov shl setbe call mov jb loop dec pusha in mov (bad) xor shll mov push fidiv fldl fstps test adc jp rep lods out pop lods movsb movl lret out jae sbb loop jbe xchg add sub fs mov xchg adc lods xlat addr16 sub and xor mov jns mov cmpsl pop sbb mov adc dec fdiv popa xchg shr aas orb add imul fxch and in sbb aad testb or sub sarl repnz mov and int inc push pop mov lock sub dec in jl add int in les faddl outsb xchg sub inc pop jne add loope int iret nop mov xchg dec ficompl jne bound hlt arpl cmp pop dec cwtl pop or pop sub sbb xchg movsb xchg pop loop (bad) bound xor cs stos pop cmp inc xchg inc aad pop cmp ficom inc inc dec movl or pop shrb dec xor xchg cmpsb sub loop iret out mov mov test orl pushl lea jmp inc push out sarb int rolb fnstsw cwtl push push xor sarb into cmpsb popa popa pop add or leave (bad) push fistpll push in enter rcll aas bound cmp data16 cmpl xor mov xlat xchg cltd das mov xchg inc mov push lods pop cmp push inc mov (bad) call push jl inc add pop inc and pop out aam adc fadds ret sahf mov popa movsb pushf push jno ss mov jo stc xchg jo lret dec fldz in repz jmp ja int mov repz mov ret aaa adc insl in sub and (bad) mov cwtl insl jmp pusha dec fisttpl daa and (bad) sub mov xchg add test xchg stos fs push mov pop xor mov push cmp mov daa xchg lahf orl push je ret push or cmp sbb popf adc jge inc dec inc add xor out pop js test inc sub mov dec lcall xchg inc dec xor imul sahf fstl mov cli mov lds push dec sbb mov int data16 scas jne cs inc or (bad) in mov xchg out xchg xchg jno std aam roll xchg mov xor mov test mov cmp xchg mov (bad) fsts inc mov mov adc fisttpll or aas (bad) jmp (bad) inc cltd mov lea lahf repz pop shrl mov test ficoml jbe int mov (bad) mov inc push jae cmc mov push cmp (bad) jnp je inc dec cs or sbbb sub mov lock push fwait or jb movsl jp repz rcll stos lea jp jmp test cmp push xor pop mov gs fmull mov sub jge les jmp psubsw fcmovnbe inc cmpsb sbbb sahf outsl cmp movsb adc pop fnstcw jae dec jge and faddl leave mov outsb mov lcall xchg push jp xchg push out inc sub dec mov movsb aaa dec data16 and and fcompl mov and in sbb not stc ror bt pusha neg jmp lea call bt cmp push cmp lea ja push movb lea jae bt cmp pusha jmp je lcall enter jns fmul xor mov cwtl mov adc xor inc movsl cmpsl inc sub orl mov dec mov lods push sub inc dec mov (bad) aam sbb xor cli icebp push or ret xchg pop lret scas stc mov cltd lods lcall in pop movsl call scas mov push jg mov stc xor jle cmp mov pop test (bad) hlt js int3 outsl pop sahf int cmp pop insl cmc aaa aam xchg loopne scas repnz or js push jns push mov dec sbb jne cwtl mov mov mov jl pushf xchg mov (bad) mov fsubrp jo rcr xchg sbb out ja push in hlt fidivl mov mov es cs inc or mov sbbb push out aas mov gs test divb fsubp add jmp int lods cmpsb arpl int shr adcb iret scas and jle inc adc popf mov inc fldenv dec cmpsb cmp jp mov pop jl mov sub and stos fist pop (bad) mov cmc es xchg ljmp pop daa popa lea (bad) xor repz cmp pusha xchg (bad) (bad) mov mov in sbb icebp jbe fmuls (bad) jmp inc mov push cmp sub and fisttpl daa mov mov mov jno xor aad adc xchg test and decl jl mov mov in fs adcb outsb sbb aas xchg jle inc (bad) adc dec imul dec shrl and arpl call jo aam lea push outsb loope in cltd mov imul dec mov push (bad) clc ret dec inc mov push xor xchg jne xor mov es mov xchg adc mov fwait lahf mov jecxz mov mov adc ret inc (bad) xchg jle jnp (bad) cmp and mov push les js hlt repnz jae test pop adc mov or push (bad) jmp push xchg mov mov fsub xor jp fcos mov data16 mov les pop mov andl jecxz mov hlt (bad) int3 xlat orb aas ljmp inc mov inc pop jle jecxz fmuls call lea mov std pop dec (bad) sub xor std test aad repz mov inc jae mov andb sbb dec dec popf inc (bad) push mov push push inc xchg pop mov push nop sarl out mov sbb xchg jmp dec inc mov fstp addr16 scas push aaa push xchg jmp in cmp call pop xor mov inc std mov fstl insb mov add les and (bad) test stos dec out and mulb inc gs (bad) (bad) and mov xor cmp fsubp add jle mov ret push push mov clc mov cmpsb ret (bad) popf stc mov xlat dec push mov jno push (bad) cmp mov jmp pushfw or test push fldl push in nop mov jg dec fcmovnb shrb lea leave push cltd fstl xchg mov sbb cmp push cmc mov pusha jo test in les sti dec dec xchg (bad) mov pop sub in add xor sbb xchg and test mov lret lods cltd mov adc and imul fstps in add ret dec mov insl mov mov hlt test push xor std cmp dec and mov pop jb scas mov push push cltd add adc push inc mov es sub mov or xor repz or jne push mov das dec int adc ficoml mov (bad) repnz xchg movsl lea fisttp imul out and xchg imul cmp cmc ja ljmp pop cmpsb adc push mov push pusha pop add scas jae es adc lea sbb movb aas lods outsl dec arpl xchg sbb or cmp mov test sahf jp les sahf movsl xlat xchg test dec stc mov sub mov xchg in jo mov mov fdivrp mov mov out and cmp jle insl adc pop push jecxz mov push imul pop paddq inc scas mov cmp aaa (bad) mov or scas xor pop imul popf lea inc lahf xor or mov sub mov mov dec mov jle mov xchg ja ljmp daa outsb mov pop jae iret dec in adc mov pop lea dec mov test nop mov dec jg fwait mov popa mov movsl push xor mov pop mov inc mov pusha stc mov inc inc xchg dec mov or pop daa mov pop bound xchg jnp mov stc es lcall cmp pushf jl adc inc push pop shrb (bad) sub mov xor dec insb cmp imul ss push xchg and push add or sub cwtl pushf inc or or lods pop sub lcall mov pusha inc lcall aam sub jb jle inc stos dec fwait mov xchg popa (bad) xor push mov test pusha lahf mov jecxz inc jle popf dec test outsb xchg popa pop insb inc pop fnop pop pop pop (bad) jg pop rorb ret js mov jp xor dec mov dec pop pop bound inc insl (bad) dec xchg imul pusha je cld xchg scas jp inc xchg pushf pop push push dec dec scas xchg or pop xchg push dec dec cld adc inc mov roll test shrb push xchg mov stos xchg jp notl fwait pop pushf inc mov insl in pop xor data16 and push mov pop aaa dec stos (bad) mov push add lea and test mov dec push gs jle cmp imul sbb loope out in fildll dec mov jns push and xchg pop test loope jnp jnp std mov cmpsb inc jl inc cmp in dec and mov scas lea int3 fwait mov cmp pop icebp vstmxcsr ret pop xchg jnp movsb push jp jbe and sbb insl or sbb lods imul addr16 (bad) insl sarl pop std inc sub insl pop (bad) push sub ja outsb pop sbb sub div jle scas testb cs jmp jl mov sub mov arpl push adc imul sbb std dec repz cmpsb (bad) fldcw call shrb mov js add pusha sub ja push jle mov xchg sub xor ret jecxz mov sub mov imul mov leave pop push imul mov lods mov inc jl leavew popf out jbe fstl imul pop mov insb (bad) lock mov lds mov ds in and pusha ja dec stos pop sti gs fdivrs cs mov xor fistl jmp in jb mov push sub pop hlt cltd subl xor pop out insl daa mov loopne add cwtl jle lcall stos push adc lahf pop jl cmp and xlat inc xchg fucom sbb std repz jmp mov imul xchg repz add sbb lcall aas call sbb mov outsl outsb sti pusha sahf cmp pop call inc je jp sbb cmpsb jge mov inc cmp repnz cmp dec xchg or mov bound insl and pop ret int sub cli jl add imul outsb sbb cmp pop mov or lea lahf mov test lods pop mov mov mov mov sub incb mov in dec mov add mov in xchg push rorl push stos sub cmp (bad) into stos dec inc inc mov and inc icebp js roll mov mov inc pop mov mov and je inc test rcll pop test dec inc push adcl lods jl jle inc je lods (bad) mov enter (bad) mov or mov or ljmp cmp push mov xchg cmpsl xchg sbb inc xchg adc imul scas cmpsb pop pushf icebp popa test pop xchg push mov std inc dec mov inc inc dec mov xor jp (bad) jne (bad) (bad) xor jle test dec jp pop (bad) mov inc mov push cmpsb mov pop int xchg mov dec sbb xor add mov push lcall mov aaa test mov mov mov mov mov mov scas scas lods lods stos stos mov movsb mov lahf sahf popf pushf fwait lcall xchg xchg xchg mov dec dec dec mov inc inc inc inc inc inc mov jg jge jnp mov ja jne jae mov outsl outsb insl insb imul push arpl popa pusha pop pop pop pop pop pop mov push push push push push push mov push dec mov mov cmp imul jp int adc mov mov dec cmp add aas mov xchg cmp ds sbb xchg test int3 (bad) lret cmp (bad) inc or xchg or mov movsl or std dec jmp cmp scas xor mov lea mov pop (bad) mov mov mov push pop cmp add mov push push mov push or or pop push add add aas ds cmp aaa ss xor das cs sub daa es and pop push sbb sbb pop push adc adc bswap int3 lret lret enter (bad) rol (bad) std cld sti cli mov clc div cmc hlt repz lock out in in jmp mov call jecxz mov loopne (bad) (bad) fimull aad rcl adc iret into mov sub inc mov push and das dec cld scas and scas dec pop popa pop bound pop fstpt insb adc jae notb dec pop cmpsl mov ljmp cmpsl push push daa dec das rcl iret jnp scas push imul lods lahf jg sub js,pn push push js dec ret mov decb xchg rolb dec je pop mulb outsb push popa push pusha aad ret scas pop xor adc andl pop jl gs pop jns ret outsb stos pusha jecxz push sub push push aad jne scas imul popa push pop ficom dec cld (bad) in imul data16 cmp cmp mov push sub aam push sub jl out inc mov jae jbe ds pop ds ds adc xchg scas fdiv scas loop,pn fbld lods dec repnz ljmp leave pop push xchg pop cld inc cld stos sub inc push popf dec inc xchg pop flds adc add std fsubs jle (bad) popa dec inc xchg sub dec into sbb dec sbb pop cmp inc push adc stc int jl es cmp ror inc pop and mov imul mov pop add pop mov or gs mov pop push inc loope cmp cs jo xchg test xchg mov nop ljmp test push ljmp leave test sub mov xchg dec xor mov sbb scas (bad) pop mov sub dec lods cs lods push inc xor or int stos pop outsl push pop sbb push inc pop mov pop add and mov fisub xorl push jmp lcall pop sbb ljmp dec lds add xor cmp cwtl push mov mov xorl lods jb jbe inc push test dec cmp dec xchg mov mov dec scas mov test (bad) mov pop pop add dec shr (bad) aad flds in jmp dec cmc roll inc cmp jp add mov stos push inc cmp cmpsb (bad) push shr hlt in test mov cmp es lcall cmp dec jp push shr lock mov inc push cmp out test (bad) mov jg jnp push clc hlt popf jns and insb inc pusha jle jns mov or test pushf jbe push pop and or imulb mov push in jnp cmp shll fldt sbb mov or pushf add adc scas test and inc xor inc push pop inc pop pop pop dec fimull dec xchg (bad) or sbb add in std pop out mov xor repnz xor pop mov data16 mov adc mov or or or addr16 test aam ret insb adcl xchg mov imul inc lds add inc mov push gs les ret push pop dec (bad) mov push push pusha cmpsb mov arpl push mov lcall lcall mov cmp inc stos jbe pop pop push jp pop out inc (bad) jno jl push ds in rorb leave sbb sbb or sub or pop cmpsb mov clc fcoml dec jo orl stos stos sub add insl xor pop lret icebp mov cmpl and pop pop aad jl mov sbb lret cmp pusha cwtl rcrl mov insb push mov arpl mov sub jmp (bad) mov sub cmp repnz dec scas cld mov incb sub jecxz cmp std pop fisttpll xlat sbb data16 repz inc sub outsl mov dec and inc inc pop rolb pop pop mov lods push lds mov and imull data16 mov jno test cmp xchg sbb xchg cld sbb sub (bad) sub inc inc push scas or push fs dec pop mov pop bound xchg pop jne outsl aam cmpsb popa cmpsb push mov push push aad sub ficomp test dec mov sub xor xchg mov mov jecxz mov in sub xor push dec xchg inc dec movsb and je inc in sub mov push xor outsb sub movsl xchg inc cmp (bad) ja mov in xchg js push jp xchg or push mov xchg push or sbb bound jl ds xchg xchg jne std cmpsb js push dec mov jle push mov xchg imul jmp push int mov lahf out jl cs xchg mov mov mov outsb sahf mov jle jne scas dec cmpl jg jbe std shl sub inc xchg cmc pop jp dec xchg std add jne std push jp test bound xchg xchg mov stos and fwait js xchg cmp aad cmc mov stos sahf (bad) fldl enter jmp add stc mov test cmp xchg and pop or inc inc cmp das fnstsw dec imul jl int mov jp je dec ss lahf sti inc jle mov cmpsl jp xchg mov xchg sbb (bad) jmp out fstps mov push mov pop jg jle dec test xchg jecxz jle or es mov or push push inc ret jb xor ds push xchg cmp jl mov test jmp jne rorl stos push test jle call or popa movsl xchg jae rclb inc mov cmp ret scas xchg roll out in jnp lea insb bound xchg adcl mov stos fwait inc xchg push adc add xchg inc xchg mov andl xchg xor fnstenv data16 ja jle nop mov sahf lods dec dec popa addr16 sub dec jge mov jb popf mov inc lcall lods imul insb pop add xor movsw lahf mov mov scas js mov lods xchg push call mov mov mov addb pop mov xchg cwtl lods pop scas adc shlb iret add push movsl stos int mov popf dec mov lods pop mov sub int3 mov stos fwait insb pop or push push xor pop out repnz pusha sbb adc push dec in adc imul imul cmp imul mov xchg adc mov mov mov pop scas mov dec adc pop test mov stos lcall adc adc adc push cmpsl dec pop add scas in loopne pop push dec add sub pop adc inc iret pop xor ret push popa aaa sbbl hlt cwtl xchg push mov dec roll dec inc push in xchg add pop pop adcb int xchg jge ljmp in push test gs mov push test dec pop cwtl xchg jg jns dec dec out fmull inc pushf cmp sahf lock dec pop inc adc pop gs cmpsl shrd insb sbb add popw cmp pop insl insb hlt inc pop push insb aad sub mov jb jbe test mov pop rcll push sbbl add dec inc adc dec sbb sub push sub and imul cmpsb stos or fs mov add adc std (bad) bound loope popa sub or daa sub jbe dec sbb dec sbb fwait pop mov aas mov pop addr16 push cwtl or inc dec rcrl and push jne insb cmp or add cs enter pusha shrl imul dec nop xchg inc ja inc pop movsb add inc pop inc jg lret push dec mov pop mov stos clc out lret lods push push push dec das xchg push aam iret in xchg lods xchg imul mov adc aaa xor xchg xchg repz jb mov sahf jg cli push jl jp xlat int scas dec pop inc sub or xchg push pop aad std sub dec leave cmp inc push int3 daa pop jl pop cmp push scas xchg movsb orl stos add iret into and mov jl add jns test test sub and test cmpsb aam movsl dec es and inc dec pop adc sti shrl ficompl jnp das sbb ja xchg or mov cmp ds into inc movsl dec mov xchg lcall rcrb mov movsl jmp add xor dec imul stos lods push push push loop fs test sub mov loopne push push test incb imul lods nop inc bound dec jle sahf jcxz cs adc inc shrl stos xchg cmovg fwait rorl xchg jp dec pop add ja mov lret sarb cmp sahf or clc jp pop sub js test pop cmp adc sub mov dec pop movsl cmp jmp xor ret lcall sub inc ja dec inc movsl cmp mov and adc dec js or jbe push or mov sub push dec inc pop mov xchg cwtl mov pop lock mov pop cmp sub pop or pushf xchg mov popf xchg mov pop pop stos (bad) mov lock cmpsb mov mov pusha in mov and popf jne,pn xchg stc pop push mov add mov or jae ret rcrb jae lcall (bad) arpl (bad) xchg cmp add (bad) jp jb (bad) call inc push cmp push fidivrl cld leave cld es outsb out sbb pop stos jge add mov xchg ds stc xchg shlb dec xchg scas jge inc mov xchg imul adc lahf mov lret dec cmp jae xchg add mov add inc inc cmp mov bnd jne,pn dec jg push jb popa gs push mov mov dec gs adc mov adc mov popa inc cmc fsubs lods (bad) pop mov movsb (bad) cld add jmp cmp cltd stos inc (bad) daa cmp or stos inc movsl xchg dec inc xor lcall mov and leave je add dec je lods push xlat jge aaa push pusha les stos cmp (bad) mov cmpsl add jbe sub pop inc dec ss scas jge loopne popa ds jl mov clc mov mov add daa xchg add (bad) mov push inc stc sbb push push jae inc mov inc ret and cwtl or adc mov fdivrl roll pusha xchg sub ret pop gs das jmp (bad) jo frstor push pop jne jo dec adc mov push sub sub push out push loopne or push test bound sbb cld push clc mov mov leave pushw jmp push push shrb std sarl mov dec outsb call sub pushf cmp jge mov mov outsb dec dec sub cli pushf add stos sar je push push jbe cmp dec dec sub cwtl and and popf mov outsb mov addr16 dec stos jge push xorb sub push dec xor fcomps mov mov pop sub pop mov sar xchg test icebp jge xchg (bad) xor xor jl sahf popf cmpsl add add xor cli push xor dec cmp cmp add xor xchg sub imul add adc push cmp test imul sub arpl insb cmp lret out pop rolb jb pusha lods cmp gs imul sub inc movsb test (bad) es cmp jnp jne shl mov xchg call mov mov adc icebp mov pop adc out sub mov cs test out jae outsl jle cmpsb insl add xorl and xchg xchg cmp gs sbb pop push lds xor mov sub leave mov push mov popa rcrl sbb insl jnp loope out xchg inc imul orl aam pop inc pop jge push inc xchg stc mov sti cmp sub fistl push mov cld mov inc jns inc mov jge cltd jg xchg gs cmc mov inc inc outsl pop jle stos in xor pop jno add jl adc fstl dec aaa insl add jns jns xchg bound loope mov leave inc xor dec mov aad or sbb cmp mov stos push inc jb sahf mov dec cmp jle cmpsb mov stc add or cmp mov cmpsb into mov lds inc dec xchg mov icebp iret or push inc inc cmp in rclb add in mov jb add dec icebp rolb push xchg mov (bad) or cs push cmp in test add scas stos mov aad cmc cmp data16 popf test mov inc cmp jmp add lcall stc lods push dec xor mov jmp xor mov cmc fisubrl lcall sub test insb mov add mov inc imul das movsb mov inc xchg xchg stos test sbb pop mov icebp pop leave addl stc pusha addl outsb push sahf cmp mov pop sbb out pop leave mov mov xchg loope inc pushf xlat push mov mov mov add mov pop (bad) leave lcall mov cltd cli (bad) mov fnsave cmc icebp (bad) mov insl enter jnp inc mov lods es rcrl lea push mov xchg mov popa jp insb mov mov mov outsb jbe lods xchg adc mov (bad) sbb xchg int or xchg mov popa andl mov es pop mov adc fisttpll sbb ret pop inc mov mov sbb (bad) int stos in adc jge mov pop out jns es add dec mov cmpsb std xchg dec xor push jge xchg jmp cmc or mov adc mov jp pop stos mov pusha es data16 jecxz push adc jae and cmp outsb fs jo shld ja sahf mov rcr das cmp xor dec pop fildll repz orl push sti pop pushf push je cmp pop or sub inc dec mov rclb pop imul mov insb inc pop cmp mov insb push jne data16 dec in fisubl pusha add fwait dec mov cmpsl adc bound sub pop mov outsl xor lcall out inc pop jbe iret pop gs mov std push out fstpl sti adc gs pop leave lahf jg or and clc dec dec or cmpsl fadds mov ds mov inc inc xchg dec push inc pop outsl pop fldenv xlat sub cmpsl cmp sar push adc gs mov dec mov insl aam inc inc xchg jle movsb popa gs xor sub sbb mov fcomps push rcrl test jp jnp dec push dec clc scas pop xor mov dec ret xor inc fldcw (bad) movsl pop sbb push jg push lcall movsb stos fs inc out dec inc inc xor dec xor cli or dec out stos in mov cwtl and cmp sahf mov push popf stos mov inc dec xchg pop dec add movsb jnp test jb icebp push inc pop add ficompl mov dec cmp ret cmp mov pop mov addl dec inc push jbe mov (bad) mov ret lods pop mov lods jb mov cmpb repz pop inc inc push pop xchg xchg ret lcall xlat enter cmpsb rcr bound imul pop cmp jmp jg ljmp insb xor daa in scas add xor jbe cmp sub rcrl sbb jg jnp jb pop loope fisttpl inc inc cmc fmulp out jmp iret data16 jb mov mov push rorl stos mov popa xor mov sub dec mov test gs jle scas or dec fucom test inc pop lcall ja lret and mov fbstp inc rcr xor or inc jl jns xchg mov stos push mov jg imul (bad) icebp inc mov inc sbb inc jg (bad) jl jl xchg jbe dec and inc je scas pop iret pop xor dec inc inc dec jbe inc inc dec aas jnp dec jl inc mov out dec not loope outsl sbb dec imul inc jbe push pushf mov push leave jle popa sub bound xchg cmpsb mov push (bad) in dec inc jp mov or inc pop adc jl mov pop scas leave dec mul push rcrl cmp insb loop out push mov (bad) mov pop aaa or cmpsb push jg fldt arpl ror data16 or mov mov cmp push inc repz mov pop scas push jp xchg test bound mov or cmp leave jp in (bad) loope jae pop popf jl mov jne xchg cmpsl push adc xchg out push jl pop leave movsb cltd push push adc pushf pop xor mov icebp mov inc jns dec jne xchg loopne dec or adc mov jne cmpsb xchg adc jae (bad) (bad) cwtl xchg imul mov test movsl daa rorl jle cwtl aam js (bad) int dec dec cmpsb xchg mov add pop mov and dec pop mov xchg jae fs outsb inc ja dec xor insb cmp cmp push test mov sahf mov dec pop jbe dec lret dec xchg sar push jo ss lods cmpsb mov movsl outsb push jg test jp adcl xchg rorl inc push data16 cmp jae jg dec sub pop std xchg adc test push test in lahf hlt lcall es imul xchg xchg xchg negl jle xchg sbb pop fidivr push std out push push mov es inc mov push lahf stos dec push lcall mov test outsl in mov pop cld ficompl movsl push test xchg fistpl sbb and mov loopne ja push scas pop insl scas dec arpl ret xchg ljmp cmp mov mov sub test arpl dec dec pop push pop inc pop jmp addr16 fildl xchg pop dec mov jnp repnz sahf ret inc mov outsl sub cmp fwait jecxz fisttp jnp cmp decl push sbb ja mov loopne xor arpl dec push les jecxz xorb xchg add imul mov bound or push mov pop shrl sub push inc jbe std jp insb lcall xor mov add mov pop test popf in scas xchg inc jb scas jnp mov mov aaa insl (bad) push mov addr16 add cmp inc push fnstenv and mov sub les pop addr16 sbb iret in es xor insl les (bad) fldt push pop xchg sbb test adc mov and mov test mov or sbb adc cmovbe cmp mov dec into mov xchg push xor push je lcall push mov mov (bad) or mov in xchg cmc push insb ss cmc push mov test pop stos jo push cmp mov cmp ss ret mov jbe aaa das dec dec popf jmp lea mov lea add aam (bad) or dec xor dec xor lds mov xchg outsl fwait add cmc inc ljmp mov jnp dec nop mov dec dec pop js jle mov mov jg clc xchg (bad) dec nop add pop lcall push (bad) push mov negb scas lcall stos xor stos lcall add mov mov cmp lcall xchg dec or inc data16 sar xchg notl xchg xor xor icebp lods mov push push movsl jp mov popa mov xchg mov mov stos mov mov mov xchg jns mov or cmp dec jle cmpsb cld mov mov xor pushf mov lahf lcall and push inc push dec stos inc inc xchg dec xchg (bad) fnstcw rcrl mov dec mov mov scas mov movsl dec cmpsb lahf popa mov push sub sub sahf xchg add test cmpsb xchg std jle movsl jb mov addr16 add push inc aad push sub mov lret mov push mov cmp movsl cli ja ret mov rclb inc add repz cmp xchg ja push adc mov cmpsl fwait dec jbe push xchg mov rclb lock mov sub push ds xor pushf push mov add cltd mov mov xchg dec lret inc jge adc cmpsb adc jne sub mov ja dec lcall jp sub es mov icebp popf mov inc dec dec test dec jmp xchg xchg xor int3 fistp jle stc mov xor cmp faddl adc test xchg mov xchg xchg jl das movsl inc inc cmp sbbb enter jbe pop or pop sub pop in mov sub jne inc std mov test dec jp jge sbb mov jl mov or mov mov add adc gs adc mov jbe and jno sub loopne cwtl jmp sub jno (bad) pushf dec fwait add pop push movsl cs xchg mov xchg mov shlb lret add cmp xchg inc xorw lcall test push mov sub mov xchg dec pop xor dec mov dec lcall push sti add pop xor mov xchg add push lea fdivrl push mov (bad) sti lahf mov movsb das cwtl mov lahf mov mov lods inc adc xchg cmovge iret mov std xor test sub lds adc jmp cmp jmp test negb xchg lods cmc sbb mov mov aam ret enter movsl xlat xchg jnp pop ficompl add adc lahf cmp pop stos pop out sbb mov and jg xor lods sbb lea pop mov mov dec ficompl add adc lahf cmp lods test mov arpl jmp xorl lods sti lahf mov sub arpl pop inc lods aaa addr16 mov out aam lds dec (bad) ss lea adc iret lahf mov jmp mov lahf mov lods aam lds dec fistpl outsl lods aam xchg add sbb jcxz pushf mov or mov ficoml add ja pop js push (bad) aam mov dec leave outsl lods into mov bswap fildl dec inc xchg add mov cli push fdiv mov dec ficompl add fsub mov mov sub mov cmp aam fmull pop mov jb ret inc stos je popf lret (bad) ljmp movsb out mov inc idivl sbb pop and adc out in pop dec cli push mov mov movsb fsubr je push fldt aaa hlt stos sbb js fistl mov aam sbbl into mov cmovns lahf fcoml fldcw into mov adc popa inc pop cmp test sbb adc dec mov sub adc pushf push test mov arpl into adc test das movl test pop push dec ret in xchg sub mov add push adc lahf sbb insb (bad) mov adc xlat lahf cmp lods aam lds dec fistpl outsl insb clc int3 mov out inc push pop cmpsb test aas movl cmpsl rorb fistpl outsl lods aam lds pop jecxz (bad) mov pusha scas mov push test mov inc into xor scas pushf jnp faddl pop test outsl lods aam lds dec fistpl xlat pusha inc xchg jb sarl lods mov pop lods add outsl lods add jp loopne fistpl outsl lods add rclb mov movsl lods sti lahf mov stos rorb xchg lods lods inc adc cmpsb lret sbb mov jo aam jge ljmp sti lahf mov into pop in cmp adc lods dec pop pop shlb cmp aad das xor push leave jmp lret jbe pop push insl in add or arpl scas (bad) dec inc (bad) jnp lods jp inc fs jne js popa push in arpl adc scas data16 jae add ret push push jo lret fistl or sarb pusha xor daa xchg mov dec cmpsb imul jge test arpl daa xchg repnz inc inc fdivr andl adc fstps pop mov xchg shrl inc mov jp jle pusha lods inc inc dec movsl adc sub pop jge jne inc dec xchg mov or (bad) pop jno xchg inc jle mov test outsl shrb lcall movsl lcall push hlt mov push inc cmpl pop in out cmp push jg inc push call out fsub add cltd bound sahf (bad) push xchg cld mov mov cmp inc mov hlt fwait mov je add sahf jo cltd jmp out xor ficoml rcrb sub xchg xchg adc loope sahf ljmp dec push cmp inc mov push cwtl testb jle push mov lahf dec push cmp inc rcrl lods adcl pop mov pop iret xor out push inc dec fistpll popf xchg jp stc jnp stos cmc mov push ds adcl jl adc test inc xchg dec push into pop scas xchg mov jnp mov dec mov xlat lea push bound arpl insl mov dec dec outsl leave cmpl and cld adcl (bad) roll cmp or subb mov fdivrs mov mov (bad) (bad) icebp pushl mov lret mov adc mov sbb jmp testl pop ret xchg sub cmp mov mov test jge push adc mov addr16 scas mov dec jp xchg stc outsl inc xchg stc outsb fstps stos sub in and xchg out (bad) dec pop jge mov (bad) into sbb stos mov mov repz inc jmp mov addl and insl lds inc mov push jbe scas aad std lahf neg clc cwtl dec ja cmp cmc loopne dec std stos xor lcall (bad) dec push sub rcll xchg mov xor cmpsb fsubrs dec or cmp mov mov pop pop xchg inc dec pop les inc pop lods jle sbb jbe and dec jge cmpsl cmp xor add adc out test push notl add sar sbb dec inc pusha and lret push imul push add pushf push or sahf or inc test roll dec cwtl inc js cmpsl ja xchg dec inc repz fmuls (bad) pop lods popf push out jns inc ljmp mov imul cmpsb arpl dec pusha mov fisub test sbb push dec mov je jns clc loop dec jmp sub dec inc sub dec jle jg mov inc push pusha cmp leave jp pop mov dec inc cmp mov xchg or dec dec inc inc imul push cwtl lods mov dec jnp push or lcall lret imul jp mov xchg pushf xchg mov test mov sahf push pop repz les pushf adc fistpl push call popa in hlt pusha insb cmpsb jp xchg pop lahf gs mov xor inc pop (bad) inc cwtl jecxz mov pop jne or dec addl scas cmp xorb fwait push sub pop xor xchg cltd mov or dec mov sahf xor gs and in mov inc cmc cs in sub (bad) sbb jg mov gs mov cld lea jae or fdivp push sub into inc cld addr16 int xchg (bad) dec mov inc mov sub ja mov std mov test sbb icebp sarl vsubps leave jno push movsl jp push movsl (bad) cmpsb test aaa leave stos aas xchg lods out daa mov sbb stos scas aam mov dec lods movsl mov (bad) xchg mov lcall popa ds (bad) xor sbb sbb sub cmp nop inc fsubrl sub notl mov ljmp and dec and inc cs or (bad) and and lods or aas pop stos xchg pusha cmp movsb xchg jmpw jg cwtl pusha lods or fildl stos jmp cltd and rcll data16 inc push leave enter fwait cmp outsl xor inc (bad) mov ss push sbb inc je dec dec cmpb loope ljmp inc call mov cmp inc pushl jg lcall mov jg jnp test (bad) sbb jmp mov outsl test mov pop xchg push cmp inc dec and lods mov jl rcll sbb xor sbb mov arpl lret pop jo call mov pushf sarl ds ficom fucom pushf icebp pushf adc loope pop jge test fistl mov (bad) std mov popa pop les mov lods adc mov jbe fiadd push pop cmp push ds lock fs push lods push cmp lods xchg lds xchg dec arpl add imul or or in ret sti xchg mov pusha pop adc cmp cmpsb movsl pop pop in xchg jg jmp pop aaa popf bound mull cmp dec and mov scas jbe sub clc pshufw xchg mov fdivrl mov ficom add jp fdivrs test ljmp pop dec repz mov leave or arpl cs push or push adc sub les lcall pusha and mov mov mov or and push push movsb lods std in sbb inc test inc jg ficompl inc insl jb pop xchg (bad) ja (bad) mov nop jp jno fisubr scas xor ret dec (bad) cli lea ja rcll pop or and dec bound push ja adc pushf xchg pop aaa bound cmp cmp cmp pop out pop daa push dec jp nop pop test push (bad) and mov pop inc jb insb or popf add aam out clc xor lods fcoml icebp movsb inc pop mov movsl in inc lahf mov lds aas inc aam cltd test mov xchg movsb lods lods cmpsl cmpb cmp push leave mov jnp,pn sbb test je jno sti arpl ss mov lcall outsb cmp lds or aad pop adc inc imul stc imul push and ss fdivrl lret je sbb addl mov mov xchg jbe int sub or leave xchg in push xor mov xchg inc icebp mov fnstenv test leave push je in xlat inc dec movsl mov psubd push inc arpl jle pop pop xor aad adc sub sbb pop inc dec pop divb stos cmp add mov jl movsl test inc call inc lods cmp fdivl sub fs and add dec dec lcall dec xchg fwait dec adc push into loop cltd (bad) aas sarb mov xchg fwait jbe inc pop cmp cld popf ret cmpsl in fmulp (bad) cmp jecxz mov sub ja fnstenv cmpsb mov xchg mov mov sbb std inc mov adc sub mov add push inc xchg ljmp sub dec pop cltd fnop and dec std out mov pushf div ds xlat inc jl mov dec jb mov iret mov movsl ds mov sub inc in test arpl rcrl jecxz cli jne push add dec cmp and jnp test xchg scas dec jno jecxz sub jl pop mov jecxz or dec lahf lods dec push es inc insb (bad) and jnp inc dec sahf jb std and inc addr16 mov jnp dec push sub das vstmxcsr dec cmp mov cmpsb or xlat aaa mov fxtract jecxz xor stc rcr sub insl xchg fadds mov cmp cmpsb lahf push push push jnp int3 adc xchg jle fwait nop out push adc cmp ds push inc lods lea mov dec divb (bad) or adc jmp sbb fisttpl jl je add sub mov mov movsl xor jl push inc inc push mov imul push push xchg mov jnp cltd xor inc or inc jp ja sub jbe or fwait ret and inc inc fistl or push stc inc shll imul lret sbb dec push sahf (bad) lcall cmpsb mov (bad) sete mov outsl hlt sub pop push arpl lock dec mov stos mov (bad) or lret lock cmp jae icebp xchg ljmp sub xchg stc push xchg and scas sub les in jge (bad) scas ret fisubl jae dec dec mov lods aaa sbb jae inc test fstl mov lods mov movsl push pop sbbl jb (bad) jae leave fistpll fistl imul cmpsl inc push imul cmpsl loopne faddl je,pt mov add add jp dec jno,pt movsl xchg push adc inc dec push and test jl out xchg inc pop movsl aam std mov dec inc jbe dec (bad) sub cltd push xor into cmp xor inc cwtl lcall lahf jl aam or mov pop sarb hlt bound jl jg mov mov in sub push mov gs outsl cmp (bad) cmp sbb jg push imul shrl sbb xlat adc pop ret mov cld xchg sti mov mov nop inc mov lea bound xchg orl orb jmp hlt pop rolb test lds lea xor daa or (bad) shrb test sarl loope mov xor xchg lods adc (bad) xor fsubrp or test lods lods dec sub add cmp jl sti lods pushf dec sbb add add inc cmp and add xor je rep xchg dec adc add or cmp sub out mov cmp sbb xlat mov inc cmp and fistpll cmp adc iret mov dec cmp sub mov cmp sbb test les in mov xor lods xchg dec adc mov enter sub call inc jns clc lods cltd dec sbb fdivrs cmp and loopne mov xor cmp adc sarb xchg in mov stos cli jno dec fwait sti stos sbb dec pop sti stos fidivl dec cmp add dec inc sti stos ret dec mov lods dec arpl stos loop lods dec mov stos xor dec jae stos bnd dec xchg sti stos adc dec push sti stos (bad) jno dec xchg stos pop jno dec inc sti stos (bad) jno dec cmpsl sti stos daa jno dec addr16 stos out lods dec mov stos aaa jno dec ja stos divb dec xchg sti stos pop jno dec push sti stos (bad) jno dec mov lods dec jg stos (bad) jno dec lahf sti stos pop jno dec pop sti stos fidiv dec scas sti stos das jno dec outsl sti stos out jno dec (bad) sti stos (bad) lods dec dec sti stos into jno sbb scas mov jle sahf lods pop dec xchg cmpsb mov jbe xchg lods push dec mov stos mov jp lcall test lret mov ljmp mov mov mov mov mov cmp lea cmpsb mov mov mov cmp xchg ljmp inc xchg adcl cmp iret cmp inc mov mov add lds mov inc mov mov sar enter loope sbbl lea mov mov scas stos mov mov clc push into xchg mov xchg push mov sub xchg ss push push mov mov xchg scas (bad) jp xchg jnp mov test pop out popf push cs mov lods push enter (bad) xor jns push jp push lcall sbb cmp call lcall xchg test xor push mov mov jns mov pop cmpl shl leave stos inc mov imul test pop or ljmp add adc mov mov xchg cmp popf out xchg insl jo outsb mov dec pop add lods test push je (bad) cwtl jo sti xchg outsb jo jbe mov clc cmp or mov jmp mov test mov bound inc imul inc aaa aas push mov dec lahf imul pusha push (bad) je rolb mov dec in or mov pusha enter sahf mov push in ret xchg scas mov test repnz pop cmp insl sbb jge xor push aas fldenv sub in cmp pushf push repnz mov clc in loope sti mov mov push sbb push out mov cmpb mov push fs mov (bad) dec adc push mov repz jmp sbb or bound push aam mov loope imul hlt bound rcr mov pusha xchg jo mov outsb clc pop mov scas mov inc rorb cmp sub es cltd bound sbb (bad) mov adc dec aam and (bad) cmc mov xor cld and sahf hlt xchg test sub push dec test insl std mov sbb sbb js cmp mov xor mov mov (bad) (bad) stos in sbb lahf mov mov push icebp pop mov lea mov clc fiadd scas sbb mov jmp stc push in les mov add test mov ss andl aaa bound lea jge add cmc sbbb fneni(8087 cmp mov ja mov push imul push adc push push adc lock inc mov push cli add stc (bad) jbe insl sbb decl adc jmp sahf adc dec sub inc negb cld sub fs dec mov hlt pusha lcall push outsb repz mov mov fwait outsl inc test les lock pop mov dec mov cmpsl mov scas (bad) les sbb pop in stc mov das jmp (bad) out jo (bad) hlt movsl lods stc std push mov es xchg sbb or jb pop and adc scas or loopne sbb decl xchg inc mov scas xor or imul or popa adcl into test mov sbb in fisttpll fldt iret lret mov (bad) ret imul out arpl pop mov iret in mov push repz sbbb aam ficom add pop mov clc xchg outsb in idivl mov lret cmc xchg jl out jg fsubl push push ja sub mov (bad) mov sbb repz mov pop xlat inc mov outsb push orb jns addr16 add mov gs add insl ret or cs pop test jl push (bad) rorl mov test jns xchg adc dec cmpsb mov sbb je mov jb into (bad) lret popf decb hlt mov jae push push test imul xor fs test popa mov (bad) cwtl and addl mov inc (bad) mov mov mov (bad) xor sti cmp adcl icebp push xchg (bad) or fmull pusha or scas mov mov adc push pop outsb inc pop mov je push mov mov push mov and arpl enter jmp test (bad) xor inc lret sbb addr16 (bad) mov mov repnz pusha nop inc fs and je hlt push fstl adc out dec (bad) sbb (bad) in sbb add xchg adc push cmp jnp sub stos scas mov test ja jp packuswb stos mov push inc insl leave mov mov sbbl sub out mov jb cmp (bad) xorl mov inc mov push push push sbb (bad) lea cs push jnp jg xchg in (bad) (bad) mov mov mov mov fnstsw ss xchg dec pop ja push mov cmp and or mov mov inc mov mov ret pop aas push mov pusha pop cmp mov push jmp idiv cmc dec sub jbe mov push shlb mov adc add jl add mov cli adc popf sub in and mov leave int3 push or pusha mov jp nop cmp lret xor and sub je mov imul in in mov xor mov aam int je or outsl aad fnsave adc fisttpll lea push aas pop or insl xlat scas fidiv sbb xchg cmc mov das aad ds ss push dec mov xchg aam jecxz mov outsl add mov lods jle mov xchg xor pop xor adc loop incb lea outsl fnstsw pop jg adc pop mov mov std (bad) sbb dec das mov dec xchg xchg mov mov xchg loop incb scas es outsl mov sahf jg xchg mov (bad) (bad) mov outsb frstor fwait pop push in scas scas mov std mov xchg int adc adc into in loop mov lds adc (bad) insl xchg push xor test popf sahf ret repnz sbb mov cmc push adc mov loop in loope lods jmp push fmull inc js nop je dec addl scas cmpsb push aas push or inc fwait jle mov push cmp xchg sahf adc or clts push dec jg mov dec insb test push dec xchg jl lods xchg outsl mov jle dec (bad) mov int ret mov xor aas dec cmc into inc aad push dec mov push mov push pop inc inc xor lods push mov and xchg mov mov data16 push push (bad) sbb xor cmp mov movsl mov inc mov mov mov dec mov mov mov and insl mov mov int3 outsb cmc shl dec icebp nop xchg mov fdiv fisttpl sbb test jb loopne not leave sub cmp out mov (bad) and outsb mov test pop mov and and add add xchg in movsb push sbb adc mov inc push shrl push cltd jb imul mov call push mov jne int pop lock mov xor (bad) roll dec fmul and add dec xor (bad) mov dec cmp jge lea mov cmc icebp mov or mov mov mov mov mov xorl xchg lahf push sub mov test inc je mov jae aam ret mov mov in add xorl subl fwait mov mov outsb fcomip mov dec out popa imul mov (bad) aaa mov mov jle out push push mov cli shll lods mov dec in cmpsl sub out mov je ss (bad) std and aad sbb jb jmp int3 mov call ret push mov int pusha rorl popa mov (bad) jb cs andb adc mov xor or popf mov push push sbb mov dec or mov or adc cs rcrl addr16 sbb or dec xor push mov pusha test insb repnz in mov mov sbb mov into call jb repnz cmp dec dec aam jno mov lret leave sbb sub inc mov sahf dec add xchg mov xor jb push mov mov sub mov sbb mov xchg pop rolb adc sbb dec push xchg pop mov or push adcl push mov aad icebp outsb lods lods mov sub add in push repnz lret into in pop cli xchg mov push imul lcall cwtl sarb lahf pop mov xchg jp loope outsb push sti in sbb pop out (bad) cmpsl js xchg xchg (bad) mov or sub mov jp fsub sub lods push cltd mov xchg aaa cs xor jbe xchg mov push testl add push imul mov jb and cmp push mov mov jmp xchg push clc push (bad) ja les mov push pop jl sbb mov inc shrb mov ror ds push dec shrl pushf lods (bad) mov fcmovnu out fdivrl dec les stos push sbb push xchg or cmp movups xor loope in es sbb mov fidivrl push xor push jo ljmp pop pop mov sahf and in fninit mov out shll fsubs mov int3 out clc mov lock push dec sbb mov lret mov inc or (bad) adc add and xchg (bad) jb push mov inc mov les xlat mov cwtl (bad) int lcall xor xchg out outsb push lahf mov sub mov inc cli adc int3 xchg xchg std pop ret mov int xchg sbb out int xchg xchg xchg add mov mov mov push fnstenv sbb xchg (bad) out xchg adc lret mov ljmp mov mov icebp xlat mov dec loope push fnstenv push les cmp pop (bad) xchg sbb mov out mov jg dec mov dec push sahf pusha movsb adc stos mov push into mov push push out jmp mov testl sub push imul mov push mov mov jmp pop subb push or add mov inc int (bad) jp mov xor jne push mov lahf and jge mov pop lret scas in dec mov stc fmull sub mov stos push fcomi push cs jle mov jb or lods cmc in pop jo push das push orl mov jno in and cwtl mov in ficomp stc dec fisttp jge pop xor lcall orb jne cmp mov dec xor jmp and add lods or xchg mov sbb je and inc mov bound out outsl push adc pop leave rcl mov push inc mov orb int fsubl jp repnz push mov or popl cmpsb int3 cmp sahf hlt push rol xchg pop pusha out push ss dec mov jno or and adc mov (bad) jae mov outsb in mov (bad) mov inc dec es mov flds mov ficoml mov nop mov (bad) push rorl mov out push jbe cld mov pop and mov adc loopne push ss leave lea jge or outsb mov mov sub test jp rol imull push pop addb outsl push add jmp cmp mov gs nopl loope add int outsl push inc mov dec xor xchg jne (bad) outsl sub lds (bad) pop xchg jb rorl cld jae dec sub (bad) int3 mov adc mov push push mov adc mov js add mov add mov (bad) xlat pusha int3 fs inc std cmc (bad) mov jo call mov and xor out jb mov mov jle ffree push pusha push roll push mov into push push mov (bad) and cli or nop cltd xchg cmp scas pusha mov hlt jne lahf loope (bad) (bad) pop int and push or adc dec inc imul xchg es aaa pop mov into push mov push mov mov shrl imul jmp mov adc pusha push mov negb icebp mov lds pop out lret into mov jns dec cmpsb cmp xor jo dec mov mov cltd or hlt mov dec jbe mov test mov add cld adc test xchg mov or mov jae in aad mov fisttpll addr16 scas adc repz lcall mov pop adc inc std push mov and mov mov jmp ficoml push mov mov or hlt dec sbb repnz xchg cli jns je scas xor aas dec fisubl pop sub push (bad) ja push jge pop inc clc (bad) pop xchg sub push ljmp orl or scas push add setp cmpsl push jnp fisttp es inc mov shlb scas adc jp in mov and ss xlat loopne sbb mov lret xchg push inc sbb mov aad mov push sub popa in pop inc jle mov adc cs stos stc (bad) add dec mov arpl dec adc rol xlat lahf dec push xchg xchg mov outsb fst mov jo lahf dec dec dec fcom mov pop push (bad) xor scas (bad) pop mov aad pop mov mov in sbb add mov and aas xchg fstpt cs popf xchg cmpsb mov jmp mov in lods lea inc cmp in push pop adc sub push cld out aam lahf inc mov das in cmp jno sub into ja jecxz adc gs lock mov adc sub cmpsl or push mov cmc (bad) aam mov mov popa xor sub push pop out mov outsb push sub inc xor xor mov push or push or jg inc pop cwtl cltd sub sub sbb (bad) faddl mov in pop repnz mov xlat std mov test icebp mov and sub sbb nop inc mov mov or cli movsb mov iret repnz add pop stos mov (bad) mov les out dec sbb mov jns mov inc ret inc xchg jmp mov lods push mov (bad) dec dec scas adc leave popa out test fadds and pop (bad) mov push xchg mov pop ret jmp pop push mov (bad) iret or addl mov cmp add push jae dec mov pop cmc into outsb dec adc lea cli xchg sub lret fiaddl insb mov or andl mov pop ss pop lahf mov (bad) fistpl mov cwtl mov cmp sti sub (bad) int insl push jl ljmp frstor push subps sub mov (bad) mov pop mov loope popa push add mov mov xor mov or icebp mov push nop push lock add call mov mov sub hlt sub push stos inc jno pop int iret inc mov fnop scas mov (bad) pushw push movsl mov and rorl ljmp (bad) ds stos mov mov mov js (bad) fcoms jns mov in mov lea mov mov inc inc movsl repnz mov clc int sahf dec (bad) out xor rcl ds (bad) cmc sub jbe xchg sahf jo mov cs stos lods dec push test pop adc push cmp mov mov mov fs fdivrl imul jge fsts rol mov mov mov roll aam and out insl lds mov add out fadd fucomp lret sub sti in loopne mov adc dec lock repnz xor daa push xchg dec jno (bad) mov mov (bad) call jns push cmp cmp mov inc sbb stc xor xchg in sub push inc or mov jnp jg mov mov or insl hlt mov jecxz dec aas mov in lds fsubs push (bad) into cmp ss adc in outsb mov rcll loop roll outsb xor mov mov adc or movsb and push mov xor loope popa push (bad) popf sub addr16 pusha xchg dec daa jge std aam in cmpsl fdiv push loopne mov sbb dec jno loopne (bad) repz cmp pusha stc scas pop (bad) clc int scas mov cli jbe xor mov mov add mov je addr16 icebp jg out xchg call out mov pop mov test in fsubrp xor adc add jo arpl imul dec pushf dec test jnp out mov pop inc cli and lds in sub jmp mov sbb dec mov jb je repz and fcmovnb cmp call in dec popf int jnp mov adc mov xchg pushf aaa jns push mov sub push inc jg,pn (bad) lods mov cs ljmp sbb add mov lahf stos jbe jb lock (bad) sub (bad) push mov popa (bad) sub fcomip dec jae xchg push fwait jmp fcoms clc lods movsb cmp leave mov mov jg loop and mov out movsb jmp pop jp inc cld mov dec adc push stc and sbbb mov fldl mov mov in sub xchg out mov pop xlat mov cmp xchg dec fadds pop dec mov ror pop icebp sub sti mov test lea lock cmp fdivs inc add ja dec sar loope fcmovnu (bad) pusha mov cmp jnp mov mov pop pop pop jp mov and fmuls fnstenv xchg test inc mov fsubrl mov insl push dec mov sub cld dec jl xchg loopne mov fistpll iret jo or push jne mov mov xchg nop stc std mov xchg sub call dec and clc out cmp repnz leave xchg xchg ja push rclb pop pop insl mov (bad) pop sti jg push inc mov add loop inc les fimul lods add lds mov mov push inc mov in mov addr16 mov (bad) xor fstpl mov jge fcoms inc mov sbb (bad) mov out xor push test dec xchg mov popa mov mov jb out add push in nop fsubp push or int3 push ficoml mov cmp cmpsl mov mov dec aad in adc loope fistl mov adc test fwait lds sub (bad) or test mov dec push cmc mov mov insb mov and jne insb xor dec iret mov sbb into mov int xor jne mov jmp jb or jecxz mov and scas ljmp call adc or test xchg add or leave jno mov cmp das xchg mov test xchg pusha push mov mov movsl push push cmpsb dec xor mov mov push pop or pop in ljmp nop mov cmpsl mov mov jb cmc and test push mov sub cmp fldcw out jle lea ljmp test pop sbb jne mov cmp pop xchg xor gs loopne in mov js push push adc xchg cmp mov imul push pop scas pushf mov je faddp mov dec add xor sbb out xchg test stos aam mov cli xlat pop mov js xchg mov loopne rolb lea int3 push inc je sbb mov jb shlb mov lock sub mov xchg mov push inc and pop jae sub add and sarl sahf mov push adc sbb sbb loope xor int mov mov fstl je pop xor pop lock cmp pop or mov sbb mov sub inc shlb mov divb jno insb mov dec cmp xchg mov fldl push sbb ss jae ljmp int3 xchg cmp mov add dec mov in mov xor dec mov jno push lret out or mov addb sub int3 mov les sbb push add and jl jbe jmp in fs mov dec sub cmp sub or push cmp xor mov mov push or mov cmp cwtl ja xor mov add (bad) std add lea cmpsb inc (bad) outsb mov aam cwtl insb and mov scas or mov pusha shrb stos pop mov dec rol push lea fucomp push xchg cmc imul out sub and cld adc ja mov adc movsb mov shl je outsb cmp xor jge stc movsl repnz (bad) fmuls shr mov fist and cmpsl mov mov adc ljmp cmc inc mov sbb sbb (bad) add ret jmp lods in mov dec and push push mov push sub scas mov xor sbb jb insb leave ret or push js mov push fisttp out push notl jnp mov test mov mov jno mov mov jo mov rol out inc mov repz mov in jmp (bad) sbb stos addl mov mov inc mov or (bad) rorl insl mov mov ret jl or cwtl dec aas mov mov sahf pop jge mov lock out pop push mov push cmc add icebp mov fcmovne sbb xchg cltd sub inc ljmp icebp and cmp sub xchg clc negl (bad) (bad) dec rorl mov mov rolb sub push inc mov (bad) mov lret xchg (bad) and sahf out add insb test or mov mov les jb leave xchg mov lods push push ror inc mov jno int3 adc inc pop (bad) jg test ss cltd (bad) int pop test add in jge adc inc xor or and mov dec lret dec jns sti sub adc test fwait cltd mov (bad) inc xor cmp out mov outsb (bad) iret adc jbe and repz addr16 cli xchg out inc mov lahf mov in and mov es pop mov mov jae stos xor ds mov insb mov stc cmp push add mull mov mov cmp lahf repnz mov call xchg jne push outsb mov lods (bad) lock sub orl sub mov dec (bad) fsts fcomps push loop mov mov jecxz dec dec js lods mov mov cmpsl fldcw push cmp enter mov push inc fcomip push sub cltd popa out mov movsl mov (bad) (bad) in (bad) jb mov jae andb cmpsl out jmp iret inc mov (bad) iretw lea lods inc in push icebp xchg (bad) mov std stc in loop fstpl mov movsl and hlt push dec stc mov incb jbe sub mov aad jb sub cmp (bad) mov push xor loopne fdivrs xchg imul add in add pop lcall add mov in xor cmpsl sahf les outsb xor mov or stos mov js jo dec jb adcb mov (bad) sbb dec stc pusha clc dec mov add mov mov push mov inc subl jno mov stos out push or sahf lods jns dec mov push (bad) mov xor jge mov aas pusha movsb mov andl aam mov mov xor inc add repz jnp and sub or xor andl pop fdiv (bad) aad adc push or jl sub cmp aaa and jmp repz fs pop adc mov lret inc aam in xchg push pop orl repz pop ds pop mov dec mov lea js mov scas fadd in iret in sub xchg nop cmc ret fisttpll je adc test out jmp adc mov arpl or sub sahf ljmp in iret push fmul pop inc pop (bad) cmpsl jmp sbbl cwtl mov jno iret cmp stc mov mov stos lods cld mov call test cmp repnz add push leave pop fdiv test mov mov push and loope cmp test imul into mov (bad) jae leave stc push dec aad xchg call loopne repz mov xchg and sbb test pop fstl mov fs add hlt mov out iret dec rorb xchg ljmp mov inc mov sub es adc (bad) xor push jecxz aam push lahf arpl push mov cmp popf cld inc mov call pop cmpsb frstpm(287 (bad) push xor insb sub in xor daa shrl pop pop mov jmp mov xchg xor js mov sbb in xor add cmp lods jnp mov rcr scas aaa push mov xor (bad) sbb int3 lcall mov xchg and mov ja mov xchg iret jo ljmp jno aas fldl lret out mov repz and je mov or mov (bad) incl test and lea push and push loope xchg clc ds test mov and push xchg (bad) jecxz adc scas mov mov sbb cmpsl cwtl std xor pop sahf int dec rcrl xchg xchg rclb mov andl and fcmovnbe mov aam or and dec cs and fcoms cmp jb mov jp and mov mov inc mov xlat cld in lods fistl lea je sahf jmp mov les mov mov sbb aaa mov int3 xchg iret outsb movsb fcomps xchg and sbb pushf jle add ljmp xor pop mov dec inc idiv or cmp das push popa adc lahf decb in mov push and arpl inc add fcoml mov insl nop mov xchg pop jo pop dec mov roll adc push xchg and daa mov arpl ds pop mov movsl shl mov mulb xor xchg cmc mov or ljmp sbb mov mov lock cmp dec inc jae xchg rorb cli hlt mov and push sbb mov lods adc (bad) insb mov and cltd mov xor push imul pop out repnz mov sahf mov or inc lea cld xor fstps lock popf out pop decl mov (bad) ja mov xchg xor dec jge mov repnz out mov ficom sub data16 mov and insl mov push and mov cmc pop shl lret rcrb and lahf cmp fwait pop push daa sub ret ficom push push jmp stos loopne test mov ret mov popf rcrb mov cmp xchg xor mov push mov ljmp jg mov fiaddl mov pop cmpsb cld lea cwtl in jns push (bad) cmp test cli push data16 push int3 pop dec sub or cmpsl movsb push mov sbb mov mov sub push cmp cmp dec add call mov out imul mov mov inc mov xchg cmp mov push dec xchg in and bsf orl push sub push ss sbb mov pop sbb jg inc mov ja add push and cmp xchg (bad) adc es mov lcall mov pushf leave cs cld and push xchg sbb dec pop pop les add xchg mov roll dec lcall push ret xor leave dec dec cmp xchg jne ret insb (bad) stc fisubr sahf add mov and stc push mov fnsetpm(287 jns scas and or divl mov mov cmpsb lds push xchg jmp fisttp jb mov mov sbb mov scas inc mov dec fildll cmp xchg enter mov subl aam pop push cwtl flds push jmp cvtps2pi push or push test sub inc call sarl dec pop stc sub nop cltd cmpsl sub mov push dec cld mov aam and adc test and lea lods mov outsl ja in cmp dec push sub xorl sub xchg (bad) jmp das cltd scas xchg vmovaps ret shr test loop mov push mov dec ret jnp sbb mov lock cmp or stos je xchg mov ss mov sbb int3 ret outsb pop jb (bad) and bnd je (bad) in clc cmc push dec stc cmp and leave mov inc setnp dec out jle lret shll mov jge inc test or mov jmp mov mov mov je call (bad) mov sahf pop cmp cmp pop push aaa mov push mov mov sub jle pop jmp xchg ljmp out pop (bad) xlat call cmpsl inc movzwl ljmp cmp xor dec lahf lea nop jbe or das clc push or and (bad) orl inc orl and sub pusha dec jno outsl xchg fdivp mov jo mov mov mov push mov aas insl push sub stos rcl call xchg jp push (bad) adc xchg ja (bad) push adc fstp in mov popa mov out rorl add or mov dec push sahf cmp iret mov int ror mov xchg cwtl (bad) jno ljmp jge cmp imul int3 push ja cli push and insl imul pop roll mov add arpl cmp (bad) (bad) inc mov orb ret into dec adcl scas js mov xchg rclb dec sti dec xchg push push das es mov pop mov mov mov jl pop ds or cmp aaa inc lret outsl sbb gs or pusha pop xchg mov in mov fiaddl dec jb int inc jle (bad) icebp mov cmpsb mov mov sub dec inc fnstcw xchg sbb mov or inc or jo jmp popf jns add xchg (bad) jecxz es aad fidivrl (bad) cmp lock mov sub repz ja mov xchg ss xchg int fdivr push mov (bad) test popa adc mov adc add xchg outsb fldenv xchg shl mov pusha xchg rorl imul (bad) shrb cli jb aad sbb imul les add xchg dec lea push xor dec lcall stos sub addr16 cwtl enter cltd mov jmp movsb js fist nop mov add aam outsl push clc sbbl push sbb add sub mov aaa subl mov mov sub and dec mov jb fwait (bad) hlt dec leave or push mov out (bad) sbb inc sub xor int pop mov adc in add inc lock adc int3 jns mov (bad) loopne mov dec push dec sub dec cmp sbb cmpl push xchg xchg mov jnp mov mov inc dec test lret out push mov popf jmp inc dec dec pop xchg mov or mov mulb mov add jnp stc cmpsl cmp stos jg or mov dec lret rcrb (bad) push iret xchg xchg xchg mov jb mov dec lds jge xchg (bad) mov fldcw lods mov cmp add fwait cmp lea dec xor push jnp sub loop mov push dec jg mov xchg push pop push cli scas dec rcrl stos andb arpl ret pop gs jae mov mov and push repz dec xor aad addb xchg push aaa mov inc jns dec mov fimull push shrl mov pop mov scas mov sbb adc aad loop mov mov (bad) in push lock movsl inc (bad) xchg stc mov adc add mov mov inc shrb adc test sahf enter mov push hlt jge mov sbb lret mov xchg shrl or push push popf pop cmpsb add dec cld leave and mov adc fstpl and pop push roll inc mov xchg push add mov ljmp sbb int pop popf mov push rolb sbb pop jle xchg push add mov xor push arpl mov loop mov push sub mov sub adc cmp jae inc out dec mov test sub xchg pop sar fisttpll xchg insb pop mov mov aad sub mov dec cmp cmp (bad) popa mov (bad) int push in out lods jmp mov fimull repz lea cmpsl mov into pop fsub sahf lret (bad) fnstsw outsb jle dec lret xchg adc sub xlat scas mov shll mov fs insl jns mov or sub sub mov mov or mov (bad) jle int push in mov inc mov xchg mov leave push les fistp sub mov xchg insl mov fs and mov xchg lahf mov test xchg add inc rorl mov mov sub lods adc into or jl rcrl push push xchg cmp cmp pop outsb pop sbb icebp xlat nop scas sub inc mov int jecxz dec pop lret dec push sub icebp (bad) sbb inc add inc mov jnp sub repnz xor jno add xchg inc lret shr jle sarl mov fld (bad) add scas clc push jbe into je fidivrl fcoml movsl jge pop sbb fadds rclb sbb jle aad enter nop jmp mov jae mov (bad) cmp xchg sbb loopne in mov std add pop mov movsb xor xchg mov test xor das in and ljmp and push jge or lea sbb scas mov fisttpll mov test dec mov ljmp xchg inc add arpl xchg mov insl pop iret int3 dec jg loope mov or idivb arpl sub cwtl sbb mov rcrl jb (bad) jge mov (bad) fidivrl test adc mov emms sub lcall jl insl mov fistpl lods repnz mov and in jecxz fwait ret mov shlb pop jge loope orb sti lahf mov push cmp jmp or repz mov lds rcr jae (bad) stos push inc (bad) adc in outsb lea pushf das icebp cli popf stc (bad) in rcl inc idiv std inc out stc lahf mov fwait mov mov fsubl imull push sbb clc add mov push sarb mov mov xor fs or gs sub and fmuls cmpsl stos mov jns mov add sarb or sub mov inc test iret sub iret insl and mov roll adc insb inc cltd cmp rclb mov cmp jno mov stc jo jp mov lahf sbb push fisttpl cmpsl (bad) sahf push (bad) mov shlb pop (bad) iret jb mov dec subl arpl (bad) fincstp sub pop add jle fcoml mov or cmp xchg fbld sub imul xor test nop mov pop mov push mov push lea mov add push xor into ds cs aam sbb outsb push les jg mov or inc mov ficomp or dec (bad) loopne inc fistpl adc pop jp or in sbb push mov cmp mov repz sub pop lock and mov into sbb inc mov mov cmpsb dec pop or push gs or jp outsb fisttpl mov fidiv out xchg je push int cmp lret xor daa (bad) cmp jbe sbb mov pop out call js and mov adc cmp mov scas cltd jo in add pop or mov cmpsl daa mov loope stc inc popf loopne mov or mov lock mov jo rcl js lds push dec mov sahf in adc addr16 sti sbb mov cmpsb xor xchg jge mov mov push icebp (bad) out dec mov in stos in fcoml int3 xchg inc fildl std outsb cltd sbb mov fnstcw dec add gs xchg (bad) push pop call hlt push and pop jo je jecxz sub mov loop push cmpsl mov mov popa push (bad) (bad) mov cmp mov pop jae adc mov mov outsl pusha dec int push clc rcrl mov cmpsl jle mov dec mov jecxz jns pop pop jmp mov test push dec out mov push aas mov mov add (bad) les (bad) movsl imul jmp xor int cltd lds mov jmp fsts inc test lea mov imul mov loope mov mov jb jg lea (bad) fldcw jl push lock scas sub mov test or leave push xchg mov out mov fistp sarl mov out mov add xchg push push fldl ljmp cmp mov mov sbb sub clc scas rclb xlat and mov dec dec pusha mov lcall ja sbb pushf lahf mov insb jl scas lea add cld lods inc dec out pop lahf push mov pop push int3 (bad) cmp pop mov js test cmp ret outsb dec mov push mov cmc mov int in push out pop das fnstcw mov jb push jp sti inc movsl int aam pop mov dec xor aad out mov jne and sub inc in mov push test mov leave mov cmp xchg mov cmc (bad) push enter sbb mov adc pop push mov mov das mov mov lahf add pop push mov pop xor fs dec (bad) sub int ds loope mov mov jno push bound mov inc (bad) adc popf mov mov cmp push loopne cli int3 inc or xchg or iret movsl and pop mov cmp in mov jne cmp add fcoml dec jmp sarl dec xor gs mov mov cwtl push mov mov add mov (bad) iret scas sub jnp aam jl pop pop jno call outsb sbb bound aaa dec dec xchg sbb test mov lret das dec ss stc xchg ret adc outsl mov in mov rolb dec cs add mov lods in adc lea in addr16 in pusha mov pop xchg lea mov inc mov sbbb ljmp fwait xchg jecxz mov loopne mov pushl xchg (bad) nop inc mov mov scas pop fsubp xchg and imul insb adc inc cs movsl lods mov push mov pop xor inc mov jmp mov mov rclb insl imul mov mov pop xchg idivb loope mov and mov mov mov sub mov sub or int3 mov gs mov call cmc jbe adc outsb jo test push mov stos scas xchg sub jge test sbb jno pop repnz leave inc ljmp scas out int adc mov pushf sbb jmp push out adc sbb mov jmp inc pop (bad) push rorl dec fldcw jecxz push clc xor mov aas push pop adc fwait sub pop sbb mov sub add pop mov sbb push cmpsb rorl repz jecxz out enter inc mov jecxz or xchg in sub or dec mov mov pushl pop fcomi and mov imul mov or loopne xlat mov inc cwtl cli int enter pop xor mov and or jecxz add push lea sbb stc mov mov test iret stc pop clc fucomi mov mov shlb mov add mov dec jp mov inc and mov repz mov cltd lods cmpsb (bad) fidivr or ss pushf cmp sti mov mov fnclex into mov mov push stos sub mov inc int sub pop out push push aam jb xor in and mov sahf pop xchg adc mov jge mov fdivrl pop cmp push insb (bad) lock jecxz jbe add int jge mov sbb fmull cmpsb sub pop mov add mov pushf mov imul sub adc mov jg jno repz outsb mov mov dec cld fidivl bound pop lea je rcrl mov ds imul fdiv add movsb cmpsb cmpsl mov lods bound (bad) xor and popf mov stos rep insb leave fist (bad) xlat sub pop adc cs push sbb cmp xor dec (bad) xor mov push nop push xchg and fs call and aas cld jnp js mov xor jge je test adc nop jg fdecstp sbb sbb xlat inc mov lds aas clc (bad) rcrl mov cmp adc lahf in mov lret scas (bad) push cmp pushf adc push in arpl popf inc test mov mov push faddl xchg es mov test sbb shrb gs int3 mov stc jno push jo push rorb fucomp adc jno adc sbb stc into xchg (bad) mov aad mov inc mov push pop int fwait mov orb dec pushf mov test jo rolb ret dec mov std scas inc sub fisttp mov lret out stc sbb sbb std push push xor scas lret fucompp mov add cmp push mov lcall adc jg jmp dec data16 sbb pop lods push ret loope push je (bad) pmulhw rclb cmc icebp scas push aas pop push ret push out mov mov or xchg mov cmp orb inc push mov fimull xchg lock mov outsb inc push shlb inc add pop ja fs xchg mov mov stc das mov adc jb inc mov repnz int3 adc lcall lods xchg cmc ds dec sti cmp (bad) ret mov rcrl inc or and insb mov xor loop pushf test rorl outsl cmp arpl test inc mov idivb dec je mov cwtl insb or xor mov mov out dec icebp sub hlt in and js lea (bad) fstpl iret dec ficomp in (bad) xchg inc xchg adc fs jmp push rorl mov xchg push (bad) or xor cmp xorb enter pop mov mov jmp cmp xlat andb mov addb scas cmpsw inc dec mov inc lds mov mov pop jp xlat in iret adc js push fstl (bad) stc repz or dec jb out enterw pop loope inc xchg mov mov push jecxz test adc mov and gs xchg mov sbb arpl cmp mov sub loopne pop mov xchg xor jecxz movsl (bad) mov cmp sub or xchg repz bound push das andl mov or lea inc pop xchg mov sub cwtl or lahf lea mov fstl push es mov sbb test cmp icebp les vpaddd mov shrb mov loope push sahf jp cmp aam cmpb scas in push sub fnstcw cltd (bad) sub es and push nop jg mov loope je xor bswap inc dec int movsl push mov pop rcrl or pop fmull jge push mov add fidivr ja adc in sar int3 in adc (bad) sub mov sub ja jns inc js sti mov xor inc pop xor insl xchg ret and mov mov mov pushf fs das outsl leave int or mov stc ret test inc pop add xchg inc fnop mov push nop xchg pop xlat scas add lahf jmp xchg mov mov es pop add xchg lea pop rcrl mov imul inc jg rorb inc je fwait mov data16 lock fmulp xchg cwtl (bad) jecxz fwait dec sbb sahf ds and ja mov clc hlt dec xchg and test pushf inc pop mov in push push add mov push mov xchg cs push mov outsb xorl hlt push jo or imul mov enter fimull jg jl sbb je push shrb pop lds or pop (bad) mov pop dec sub sub add clc insl xor incb rcll stc cmp (bad) push lret push pop and mov mov cmpsl xor mov jge mov rolb and mov stos lods (bad) mov mov into jge out xor arpl jb fnstenv fcompl or mov pop inc iret stc adc lret mov out push cmp adc cmpsb inc cld js mov sbb jecxz fwait xchg mov ficomp sti mov sub jmp mov dec dec enter lds push andb sbb xchg xchg ja lock pop ss inc call paddsw imul adcl inc fwait inc mov inc cmp push lock imul dec pop int cwtl cli outsl mov jbe and or xchg stos mov jns mov dec push popf mov enter movsl sbb mov ja jg jnp call test dec mov clc rcll icebp inc mov test cli dec iret fnop out mov call out mov mov sbbl cmpsb aad (bad) orb cmp add movsb ljmp and (bad) in insb adc xor cs sbb sarl bound hlt scas inc xchg mov (bad) xchg pop mov xor xchg mov sar test or xchg and mov lcall mov and ret fnstsw inc stc mov cmp jnp or pop push mov stc mov mov push and (bad) adc pop (bad) leave sbb fwait mov push lea and (bad) in jle arpl jo jg cmpsb jmp (bad) mov pop enter popa das scas std and roll outsb scas es xor pop and xchg aam ljmp inc inc fldenv mov or jmp aad mov repz sahf in sti cmp pop xor mov (bad) call je mov cmp mov int cwtl test int mov (bad) and mov fadds mov and push dec sub ret sub fcoml mov dec pop daa jle xor (bad) cmp (bad) into (bad) insl add ror mov cmp inc cmpsb cmpsl push out sub cld jns (bad) jae mov mov test fucomi sbb mov imul dec mov out mov xchg sub fldenv icebp add mov xor cld jo mov xchg push dec mov xchg and mov test loopne movsl (bad) (bad) out insb stos push mov sub movsb call adc cli dec xchg push push jge jp int3 (bad) cmp rcrl aam jno add gs inc or popf jns jne mov push rcl inc add sub inc (bad) in in addr16 cs (bad) jmp popa fucomip ss xchg ffree mov jbe mov push ljmp push imul mov mov or mov dec mov fmuls mov cmpsb popf loope add sbb mov (bad) ljmp mov popa ror inc insb mov jmp xor ljmp xchg mov mov add shll decl mov rcrb inc lods push in sub (bad) mov fimul (bad) jmp movsb mov xor insb int fcoml inc sub mov orl (bad) jl mov xor test mov sbb mov fstpt mov (bad) lret cmp jo movsb pop (bad) xor pop sbb dec test lds mov aam pop repz pop xchg mov cli and dec jmp ss mov mov scas mov xor push or adc push xchg mov sti insb dec adc scas pop cmp jbe,pt aad cmp in pop xchg leave push cmp fwait (bad) lock enter jp jne mov lods push push pop xchg jno xchg aam jmp in sbbb lock cmpsb jmp sub mov or ds mov dec (bad) mov adc dec mov sub in loope and push add data16 or popa jae rclb xor jge inc fwait add xchg addb ret out push push cli mov (bad) or inc lea call pop rorb add inc aas mov cld test mov pushf inc lret push cmpsl mov mov mov mov scas or inc add rcll push dec mov mov loope outsb adc cwtl lahf dec mov mov add push pop xchg mov adc mov sbb push int int3 data16 jae jmp mov movsb in sbb and repnz jo mov aas aad mov mov jecxz lcall sbb mov xchg fnop loopne mov jno aam aas das jne roll and mov mov mov jb les pop aas mov ret mov mov ret (bad) xchg std jne and (bad) das mov lea cs xlat arpl push cltd sub nop jb pop mov add mov pop jp cmp mov int3 xor mov xorb xchg mov je push inc sbb and pop jmp mov popf or mov enter shr rol fsubr sahf movsb cmp dec dec jg mov cld lret xor push mov xor addr16 fcompl or sbb push pop push iret pop sahf fist daa sbb cld stos xor sahf inc scas sti fisttp mov adc mov mov fisttp mov push (bad) ss lea int3 mov sub mov lahf aad mov inc sarb lret mov sub out mov dec mov jmp shll xchg scas js loope (bad) mov imul add cs xor bound mov pop orb sahf mov icebp mov jmp mov cmp (bad) mov int shrb lods push pushf fisttpll sub cwtl cli je add test adc mov bound stos mov sbb mov lret cmp xchg test push and jns xlat sub cmpsl push pop mov mov lock dec xchg add addr16 mov fcmovne cmp lahf (bad) ds mov cld jbe movsb mov jecxz movsl xor mov das (bad) (bad) and push jecxz scas cld repnz out adc call sbb mov push mov mov jno sbb jg mov jo (bad) (bad) jns mov push test in mov mov mov clc repz call js pop fistpl sbb fisttpll mov and sti sbb mov mov mov jns call mov mov cltd sbb add xchg repnz mov cmp sub mov xor lea cmpsb mov loop or jl hlt push cmp test xlat and stos or mov fwait inc xchg dec cli cmp pmaxub orl xchg xor xor unpcklps jmp pop fisttp and xor and push pop enter es xlat pop adc in xor xor and (bad) adc push test xchg popa addr16 fidivl sub pop jle cmovno jne mov jg fadd sub xor cmp dec dec in gs cmpsl jmp mov (bad) in ds popa mov ret pop sub insb out sbbb insl insb cmc bound loop pop fnop lea dec adc add cmc cmp mov or push and pop push aaa insl (bad) push and scas ret adc int mov mov mov xor imul mov sbb cwtl in js mov push imul xor push (bad) mov sub lea sub push inc sahf out mov fnstenv (bad) xchg mov pop out scas rcrl js iret dec jg mov cmpsl in add xchg pop sub call test dec mov popf ja add pop xchg mov ret dec push xor xchg rorl test scas movsl daa dec imulb sub mov pusha (bad) leave stos cmp bound daa insb push movsl iret jb push inc std outsb imul xchg mov (bad) and mov mov and inc xor cmpsb mov shrl jge call xchg ret sub (bad) cmp jo pop ss push pop int3 popf adcl rorl outsb pop repz out in outsl inc popa inc cltd mov cmp fmuls dec sbb loope mov into repz mov mov mov cmp sbb cmpsb pushf add rcrl mov push mov int3 adc dec push jns scas out jg mov inc in xorl popf pop mov mov das adc fdivl and or sbb mov dec add lahf int dec in rcrb js pusha push rcll mov lds sbb jmp pop sub mov lcall test and pop mov push popf mov jo dec scas int or lcall fs add aad mov and test xchg out jl lods outsb push mov inc int (bad) fisubrl test add and xlat (bad) mov aam divb insl and mov add push xchg int dec fldenv xor bound add mov sahf nop hlt in fimull adc cmc lahf push mov sub lea xchg or jmp aaa dec pop dec push mov in into lea popa or mov outsl sahf mov loope mov in dec jl xchg fisttpl sbb dec mov fwait sbb sar push std mov fsubp stos cmp mov dec cbtw mov jns pop push imul jnp add mov int xchg add xlat mov xor inc (bad) stc push pop rcrl ljmp mov jl daa orb xchg lret out mov lods pop cwtl (bad) inc xor pop add xchg mov cmp add cmp inc les (bad) (bad) xchg mov cmp mov icebp xor mov sub mov loop push xor fiadd mov pop into mov dec and popf les inc mov dec xor test out xor mov and in aad dec lds jo mov outsb jns add sahf cmp mov pop jb stc std adc inc sbb inc imul xor mov frstor sub pop rorl cltd rorl add push stos js (bad) loopne mov or jmp xchg push pop push add mov adc (bad) mov mov mov addr16 mov int insb pop push aam mov push dec adc add es xchg lret lods loope fildl shrb cmp cs in xchg pop es stc mov aaa and jmp xchg mov mov ds push gs mov in inc fidivrl adc lea push in adc loopne popa imul jp int dec cmc aas mov inc clc xchg sub push inc loop dec (bad) aad dec mov push mov jecxz adc mov ds ds xchg ret push xchg mov movsl ljmp mov xchg mov jno test outsb lret daa scas adc pop in out mov mov adc (bad) mov stos pop pop push int mov push adc mov mov sbb mov jecxz push mov adc mov hlt sbb jae ffreep and int mov sbb mov mov dec mov mov sub pushf push xor pop jmp jo add fdivs xchg push aad lds xchg inc ret scas sbb xchg out xchg xchg pop std repz mov mov je adc adc rclb mov dec xchg or aad xlat and xchg cld fwait mov dec lds xor dec jge ja mov push or mov pop cld (bad) in mov dec mov mov push (bad) loope imul in std aas sahf xchg (bad) mov (bad) (bad) mov ret jb push push adc leave test ss push inc in dec imul cmp dec addl mov data16 mov repnz scas aas mov push pop jg dec repz mov dec push outsb xchg xchg push mov stc cmp add pop mov mov dec sub and stc push in lret mov or scas pusha mov cmpsl cmp (bad) jle fsubrs cld sbb mov xor xchg sbb stos aam test cwtl clc pop pusha mov cli sub jle push rorl fbstp repnz jg push mov out scas nop dec add inc mov arpl das test mov push mov frstor cmp mov hlt or dec bound mov aaa fstl mov or in pop mov lods cld pop mov xchg fwait std sahf outsl fstpl xchg les mov fmull sub push lods pop push outsb sbb (bad) mov int sar jb jge jcxz push dec outsb jno scas mov mov lock notl lcall outsb enter cmc fistpl mov imul cmp sahf lea (bad) mov xchg out inc popa ret push mov ret cs cmc sub insl jno pop pop mov mov mov stos out loope mov fsubr dec das cmpsl out mov push push stc sbb push mov aas ja dec (bad) cmp inc ret rclb scas test cmp jp mov xchg stos mov loop pop dec sti mov pop sub push mov inc fldcw (bad) xor xchg push mov outsl test sbb jno mov (bad) mov out rcrb inc mov loope or xor pop movsl mov mov insl fstl pop loope test sub lods int or mov push pushw jbe incl adc int add pop mov jno test adc psubusw lret push mov decb test aaa lahf push fnstsw mov dec dec jl sub lcall cmpsl sub sbb xchg in bound sbb pop shll cmp sbb xchg or push pop inc shr push addl mov pop fadds add pop add push out cmpsb xorb push bound jmp cmp int and sbb jecxz mov sbb (bad) (bad) lcall stc sub mov aad xchg je jmp int3 adc lahf and in xchg xchg aam dec inc mov out mov mov fldl adc lahf out add ds mov cmp (bad) jne add out xchg xchg adc js cmp jns and inc xchg sbb cmp mov add cmp lods pop inc mov jge cwtl jg sub sbbb mov dec cmc sti js,pt outsb je inc stos push rorb jle (bad) gs mov orb and pop mov pop mov cs out sarl int pop lea (bad) test lret cmpsl lcall fwait pop mov push ljmp mov aaa cs movsb sbb push and sub int3 pop or add add std incb jbe mov add mov jle cmp jp push in pop jnp pop and jl push push ljmp call mov scas and shlb pop xor dec adc add insl and rcll es mov lea mov mov enter lea in or xor cld push xor test jl pop (bad) int aad in fdivr into push lret and pop rcrl mov xor cmp std insl imul adc jg fisub adc iret mov imul ret in test and push pop ljmp mov cli xchg sub (bad) mov mov or jne push mov adc cmp insb pop push hlt xor icebp (bad) mov shl mov mov cli mov stos mov sbb mov inc imul cmpsl or clc int xlat test sti jmp mov mov add fisttpll fistl int3 mov aad adc push mov xchg pop lea jb cmp mov xlat hlt gs rcl mov das test cwtl mov sbb fildll mov (bad) pop repz sbb push jle mov insb test push (bad) imul in push hlt rcll fistpll mov clc in pusha aad jb faddp and outsl adc push ret jg sub jmp in pop inc jnp push data16 mov xor push mov enter ja mov lret mov int3 lea cmp scas mov orb incb sbb adc dec jmp std sub and jae sarl (bad) mov xchg mov push call fnstsw or mov lea adc push mov jp jb mov fnstcw out xchg inc pushf mov sbb mov hlt or push cwtl xchg scas push mov ja xor nop mov inc dec jbe inc pushf fwait push mov jge and mov jb mov sub push into aam rorb popf xchg cmp js push push mov inc and mov rolb das fbstp mov add dec mov mov in sarb pop adc mov mov dec into pop fidiv mov sub cmp aas mov ret mov test mov jbe mov out rorb int dec addr16 mov xchg xchg test push xor pop aad mov test sub bound xor jae andb out pushf rorb xchg adc sub stos ljmp andb repnz hlt xchg cmp cmp fdivl cmp push dec inc gs adc stos mov push mov lcall out xchg sti pop xchg stos ds and (bad) int movsl mov xor jl mov ja aas lret push pop xorl (bad) fldcw mov outsb push push mov and push push stos mov fsubrl mov mov ljmp mov dec jae or daa xchg mov testl lret bound test mov jp pop inc jo xor push repz cld cmpsb test pop push mov mov xchg scas xadd repnz lcall imul mov mov fsts popl xchg xchg in leave arpl adc mov sub dec int3 mov or xchg loope or mov pop push mov jg shlb hlt aaa jle dec ds cmp or and inc or inc jae fmull mov pusha mov aas pop mov mov cltd mov adc lret lock fidivrl sub clc shlb pop sbb xor frstor xchg xor out roll lea in (bad) dec xor mov sbb mov js mov in fistl pop xchg mov (bad) push or (bad) mov lods std push pop insl ss shrb xchg fdivrl sub and scas push or mov sahf mov push dec scas mov stos pop mov sub add test mov daa icebp fisttpll xchg sbb test xor mov pop push sub (bad) int or outsl mov adc cmp out cli sbb pushf clc and negl mov ffreep mov dec push mov mov (bad) jne push mov jbe cmc test lock dec nopl mov mov sbb sbb xor aad jbe push mov cs xchg mov test pop xchg repnz mov inc jns ss xchg xchg cli or and xchg iretw mov or xchg add lock aas cmp xchg dec mov jmp push push mov mov mov lods jbe and add mov stos jp sub pop mov icebp rorl sub outsb neg mov push or cmp out pop sub and pop xlat push dec rcrl mov inc js push scas cmp mov mov sbb out (bad) aam mov and or (bad) fsubrs mov or xchg fwait gs mov mov sbb popf dec or je cmp enter gs rcll push hlt xor icebp or scas lea rcr pop rolw mov xor loop mov stos call mov inc jns andb jp push stos mov fs lods shll and jp aam pop lcall (bad) into (bad) mov mov jbe xchg pusha leave xchg jnp mov mov pop mov mov mov xchg das enter popa lret or and (bad) clc popl jmp int shrl in aaa in push inc cs pusha cmp or mov in push aad push in push loopne stc scas mov xchg push dec les fcompl and iret cmp stos outsb xchg (bad) jae cmp (bad) call mov in into mov ror lea enter and orl sub aad mov mov mov sub (bad) out cltd (bad) jbe mov add out outsb xchg out les int cmp jbe sub xchg stc mov (bad) push sub nopl aaa aad xchg jns mov sbb mov fildll mov iret push sub mov adc push sbb out mov call dec dec ret sbb inc add cltd test add mov in mov inc fimull gs or push pop aam xlat punpckldq or sarb ret cmp das les jge imul sub add nop jbe movsl (bad) in stos sub loopne sbb sahf xor clc pop mov inc rclb shrl pop pop in cli mov add fldt adc popa or (bad) iret xchg fcmovu in push orl jecxz les mov mov mov adc notb ja inc pop ds fnop lahf pop or cmpsl fwait jge mov jp push cmc mov xor sbb xor push daa cmpl xor mov pushf mov jecxz mov mov mov add scas mov pop jns jl stc adc outsl imul xlat inc cwtl daa mov (bad) xchg pop adc out imul (bad) je outsb (bad) add xchg sub inc jge mov loope (bad) int mov mov lcall pop mov scas push jg cmp push push adc ja xchg xor jns fstpl mov sub lods out inc push adc mov test xchg lret das sub popa mov push scas pop int3 enter lods popf fild inc insb xchg sahf lea mov lahf jecxz scas orl (bad) mov mov sahf mov int3 test rolb add inc mov mul jbe add push mov in mov mov cltd mov mov dec adc mov mov cs (bad) push xchg daa or jns in mov stos and mov mov ficom mov xchg bnd mov daa enter push sti mov out cmpsl dec cmp and repz jmp in movsl arpl loope and cmp adc mov jmp stc dec mov mov and rorl xor stos icebp aaa sbb push loopne popf mov scas or sbb cs jo mov mov js mov xchg (bad) sahf mov mov mov mov stos xchg fisttpll lds int3 (bad) stc fild sub addr16 movsb xchg scas js stos mov sahf pop push mov cld gs sti int pop xchg ret mov dec dec mov mov mov sub adc inc sub mov js add insl and or mov ret fcomip stc push pop fs icebp imul sarl ret lcall pop xor (bad) push mov dec sbb inc fistpll fs xor movsb cmp dec loope mov cmpsl rorb push mov bound stc jg ds mov mov (bad) xor imul or mov into mov faddl pushf popf clc pop xchg hlt inc mov js mov lock dec ds or mov stos mov mov cltd mov adc lock xor mov roll mov dec (bad) mov sbb aad mov (bad) sbb pushf cmc movsb test xchg sub int inc lods lret add push and xor out xor add mov jp pop popf sub mov push dec fildl inc aaa jno sbb test mov pop fcompl xchg lahf pop out leave mov out mov mov outsl lea mov sahf fbld lret xchg and loope xor sub add repnz cmc mov in mov scas jae mov push stos push mov push das pop push cmc int aas mov stos xchg aad xor mov cld cli dec sub repnz mov lret lcall nop in clc pop push mov jnp daa popa inc das dec in (bad) mov pop sub push mov mov sub scas xchg dec aas cmpsb jp test push (bad) fisttpl cwtl push scas mov (bad) sub xchg pop mov fdivrs data16 mov pop cmpsb stos mov push dec outsl jmp insl int sub fldlg2 pop push mov call inc mov fidivrl lea stc inc mov xor andb mov push mov aas pop mov pop dec mov inc dec fstps inc mov fsts mov loop inc xchg scas xchg test lea push incb test std mov dec push xchg (bad) int xchg mov sbb mov mov into dec hlt ljmp aaa xchg das pop das push add jle subb push ss dec inc daa push (bad) mov les mov pop jle fnstcw mov scas outsl push sbb and xor mov sub fimul mov push push pop cmpl scas loopne push cmpsb jge mov (bad) mov xchg add jns mov cmp mov pusha adc push inc mov sub mov or ja adc pop imul and or pushf mov mov out mov jge imul lock fwait or lods jp fxch leave lea inc cltd pop add in dec cmc inc fldl xor xchg and jl gs mov inc hlt (bad) icebp or cmpsl mov ss mov push and adc mov mov push xchg mov std std push js jns enter lea jle adc dec add and xor adc stos and mov lret cltd arpl ret cs cwtl (bad) test leave pushf in mov xchg push xchg xchg mov or in jmp sbb jge and mov shrl aas pop es ret (bad) aad leave stos das scas jns loopne xor jl jb mov lock xchg hlt pop pop mov imul icebp fcomi push mov cmp aam in pop iret mov outsl int3 mov mov mov lret sbb push ret cltd add mov inc es mov loopne movsl push pop decb or enter dec xchg push push add add xchg xchg movsb outsl loopne sub mov xor in or and popa xchg inc popf cmp dec fidivr pop fstl lods mov jbe in sub mov mov repz mov int3 shrb pop or cmc jmp adc ljmp dec out lahf and xchg (bad) fidiv mov xorl pusha daa xor pop pop lret stos push je sbb cmp mov ss ljmp out sbb (bad) lret frstor out dec lea mov scas xchg je jbe pop mov test scas push dec loop pop inc mov pop (bad) add mov fwait test push xor dec jbe popa inc mov (bad) mov add lret test sub push push mov das adc inc aaa test fbstp sbb fwait dec xor or aam in pop bound add inc sbb dec movsl pop pop fnstcw pop push pop mov pop jl jne or nop repz mov out push pop subb mov roll dec int dec mov push xor lea or jb sbb mov mov sub add aaa std adc rclb fstpl pop fcmovbe orl mov cltd ret (bad) jns stc in mov arpl ja push mov sti in pop inc popa mov ds icebp pop lds bound mov push dec push sbb arpl ret mov jne mov xchg jle mov popf or mov pop (bad) mov sahf inc inc bound xor fs scas lret push add push loope out pop sbb out fsubl add xor xchg jl lea adc sub jecxz push cld (bad) js cmpsb test fbld mov jge test (bad) lret into repnz stc sahf adc mov lahf push clc (bad) out mov int push fnop mov les rorl leave loopne push mov mov mov int pusha mov jl in jb push ljmp jmp mov pop mov jg mov jge jns pushf xchg mov lahf pop or in out clc in mov xchg (bad) nop sti push mov ss imul mov mov pop sbb mov outsb lods ja inc ljmp cwtl push outsb cmp mov or ret mov cli sub pusha in (bad) mov outsb sbb test mov or cld mov add dec mov (bad) and xchg adc flds aas jle fdivp sbb pop mov push add in (bad) xlat sbb or aaa xchg pop pop xchg bound js add mov ret rcll jl in sub movsl and push ja jmp mov cmp mov inc sub mov add xchg addl sahf (bad) mov add lcall sti mov scas (bad) (bad) jmp or hlt xchg mov sub xchg inc push push (bad) frstor mov hlt xor jnp movsb mov mov mov mov adc mov cmovnp push arpl or (bad) jmp mov jg scas mov mov xlat inc (bad) (bad) aad mov popf jnp jae sahf xchg sub out jle out xchg mov iret mov stc add sbb stos in mov aam jp clc inc in mov scas push mov iret mov lret (bad) mov mov push lods ret ja rcll push push (bad) in test add lret pop mov dec adc mov test movsl sbb xchg out and ja pop leave jecxz popf daa rolb (bad) loop xchg mov mov aaa ds mov cmpsl mov (bad) inc adc mov mov clc enter testb scas xchg lahf lds repz cmp (bad) loope (bad) stc in jmp pop lret xor (bad) shrb xor (bad) jmp mov mov leave add mov in adc xchg imul aam pop jbe xchg movsb and sarb inc mov int nop mov push push in in pushl mov mov mov push mov lahf mov add mov cmpps cs mov repz out cwtl mov mov cmp aaa and push into mov xor dec mov lret sub clc mov imul push push fstpt addl iret adc push jge sub sub pushf cmp add mov add sbb int insb or pop pop xor gs repz stos enter xor fsts mov mov sub push and xor cmp int aad test push decb push into xchg mov jl imul adc arpl hlt push sbb jmp sub stos pop ljmp xchg addr16 cmp push cmp dec pop ljmp lds cmpsl jle inc cmc push mov outsl out dec mov jno in stos jne scas jmp (bad) xchg notl rcll in mov push (bad) cmpsb (bad) mov mov ret mov mov int subl pop popl imul (bad) jge dec pop rorl mov out mov call arpl insb add sbb mov daa loopne adc insl push jecxz mov pop inc jno mov mov adc sub arpl imul popa mov dec ret xorb dec push dec (bad) mov add jmp cmpsb clc sbb shlb mov mov pop mov push mov fidiv lods int (bad) das jo jge fstl inc jle lcall lret std fldl2e mov mov mov cs loope jle jne jecxz mov bound loopne mov scas lods sahf andb xchg shlb dec push fwait insb push dec sbb imul and in pop fucomi mov mov sbb clc xchg fisttpll mov loopne (bad) leave daa push jle inc sub jb push mov pop fcompl mov add lock ret pop pushf cmp iret xchg xor pop pop data16 scas lret out mov ds lea dec popf lahf mov add xchg sbb push jmp fstps add pop jns jno dec mov xchg in shlb sti fdivrs push add cmp sub int addl push into mov push in cmp or daa es lds push call mov mov cmp das pop fisttpll repz add mov aad push out int sub aad mov dec cmp aas cmpsl add sub cmc xchg cmpsl and arpl lea sub out imul inc xor jo sbb jg inc loop scas inc dec mov dec and sbb (bad) jne mov cld ret ljmp stos or push and adc addr16 into push fwait test int sbb mov rcl pop xor shrb add pop (bad) mov jmp subb rorb stos mov adc cmp mov scas dec mov lahf mov jp sub push fwait std ret jb add int bswap and push pop push push mov push adc mov loope cs std mov add lcall fsts jl out jns sub loope xchg test sub imul scas out outsl shl popa fnstcw add js (bad) outsb push push or cs mov idivb ret std int and push push orl mov loope cli aad int push sbb and dec sub out mov (bad) call xchg loopne (bad) fisttpl (bad) fsts les mov sub mov jmp cmp aad fisttpll mov jge lret inc xor and mov mov adc stos xchg imul mov add sub fstl iret int movsb mov inc aam inc outsb jl sub mov xchg mov pop arpl inc insl andb mov repz int dec jbe gs lea sub push xchg dec popf mov (bad) iret std xchg gs mov push out popf sbb int or jmp test shrb flds rolb push shrb jle iret stc mov (bad) mov out jmp mov lea mov lcall push sbb mov mov pusha push jp cmpsb and std pop xchg adc out sti mov and xchg popa jbe aam lret aas movsl push loopne lcall mov mov or ret cmp sbb int xor mov sbb mov jb insb icebp clc xor punpckhdq sub jns xchg ret jmp lret cld out in adc push test mov mov push mov mov mov mov mov ljmp cmpsl dec mov mov xchg xchg jns (bad) and orb icebp mov jae int scas xor cmpsb push push loopne shr push inc and push (bad) popf mov mov mov xchg mov mov sbb gs mov aaa push mov jp xchg das push mov jg pop xchg mov dec fdivrp sarb cs shr out mov call mov pop add in add test mov mov ret cli lcall adcb mov daa xorl jg push mov sbb fs icebp sub aad lahf fldl xchg mov popa in jmp jo and xchg mov xchg xor in xchg cmpb (bad) fildll sbb test push popa lea in (bad) xchg ds bound mov sub xor mov lea lret std out jmp mov into and pop xchg dec xor pop or mov jo mov fwait or xor mov mov mov stos lea xlat jne cmpsb (bad) xor adc bound mov xor inc dec mov push mov fiadd (bad) mov stos lret jle (bad) adc dec outsb mov add inc jmp fsubrs movsl lods dec orb fdivl mov mov or lret sub jno test sbb andl lods cs int sbb mov mov imul or fisubl pop mov (bad) adc dec mov adc inc in jnp ss in jb dec dec sub xlat mov shr lea aad add js mov jle mov mov mov fcmovbe lods push mov mov incb adc subl push hlt jge out lret sbb rcr in daa xchg sub movsb insl sub lea add test or in daa cld jbe xchg mov sbb xor cltd xlat mov push jb push add mov mov psadbw inc int3 cmp inc inc jno addr16 mov outsl sbb rcrl outsb adc xchg pusha mov in mov sbbl (bad) xlat jb sub lods add (bad) mov lahf loope lcall fisttp loop inc mov hlt lods push jbe cmp rcll mov test xchg cltd push xchg ret adc (bad) mov push push sahf mov in popl repnz int pcmpgtd xchg (bad) fisttp lcall push sbb scas cmp mov outsb mov mov lea loope js lods and mov clts arpl ja in pop inc add pop jne icebp mov sbb clc int3 cmpb iret mov push push push fs mov or cmp in sbb push or movsl cmp xchg sbb les rolb arpl xchg xor sub (bad) lods xchg (bad) mov lcall scas inc push mov lahf and jne stos js mov cltd das sbb lods nop fstpt loope cmpsb in xor lret xor and pop ret push lea jle outsb into sbb mov test test mov iret int inc inc and or dec sahf mov bound aas or arpl lcall movb dec mov out mov cmp add mov dec mov mov cmc jae into rorl nop in inc mov add inc sar mov loop ja in push dec mov xchg shl imul cltd jb call lea jnp mov mov repnz jecxz enter cmp pop pushf pop pop mov iret or and test (bad) mov jne dec or int3 push sbb clc mov push addr16 or push leave mov push push dec sbb fnstenv xchg lret inc decb push jb scas or loope mov sbb adc sti jb mov xchg rep mov push mov sbb cmpsb jmp mov lcall pop dec xlat clc pop mov fadds js jp,pt cmp inc mov pop in mov mov xchg dec sbb ds sub sbb adc std pop mov cmp call mov (bad) mov test fidiv rclb mov xchg push mov jp or arpl mov lds fst adc mov jno jae pop jbe push repnz js sbb sarl scas sub cld iret mov push xor mov push mov divb or lea adc mov mov or jns mov cwtl aad and push mov xor test xchg sbb cld out fadd nop sahf mov pushf das add lea adc cmp mov sub rcrl xlat push lea inc cli aas (bad) std outsl leave pop xor mov mov leave stc scas aas mov mov inc mov int3 cwtl pop movsb mov sbb jecxz mov jg or xchg push mov ret lds mov sahf dec rcll sbb (bad) scas add xchg aas popf push shrb cli xchg (bad) shlb mov sbb jl xor inc xor mov call sub rcl enter scas (bad) jbe out push leave mov jne mov dec mov sbb insb xlat leave fwait mov mov mov dec (bad) mov repnz xchg rorb add insl sub jmp cld mov or mov push outsb fistp xorl leave pop scas mov (bad) ds mov loope je pop fstpt or test test sti (bad) xchg mov mov pushf mov aad mov push in mov xchg lods add sbb popa xchg mov push out jge clc fwait lds push fsubr push mov ds sbb jecxz call jmp mov aaa je pop mov push in sbb test push sub mov jne aas repz sbb sbb push cmp mov fild js cmp sbb mov sarb jae in adc mov lret mov mov xor push inc push xchg shll imul lea mov or aaa popa push in mov pop out inc push cmpsl mov mov sahf daa dec xchg push xlat mov fistpll in push leave xchg cmpsb arpl mov mov lds cmc mov dec repz imul (bad) mov push not xchg pop push in xchg inc mov mov imul mov nop movsl pop (bad) fldcw out or inc lea cmc sbb test dec cmp scas insl or sbb lea into pop movsb in aad xchg xchg pop or xor adc popa push (bad) ret int nop mov jo cmp push xorl pop add aaa xor adc lods or xor mov movsb dec add sub rorb lock daa (bad) adc fsubrp rorb sahf ret movsl andb inc cmp std or xor (bad) inc into add pop mov sbb mov scas lret inc push orb push cmp lods lcall cmp mov sti jge lea push mov jb mov mov push rcrl mov mov push mov xor int sbb fsubrl and dec aaa inc mov sbb aad (bad) mov movsb push sbb dec mov xchg enter xchg dec cmpsb test mov add mov mov int3 mov out in pop push outsb mov cli pop or jg jne movsb mov pop xchg inc inc add mov ds stos add mov mov (bad) jbe xor subb sbb push out div test push push aam mov (bad) jbe inc iret (bad) mov es pusha stos lds call mov insb sahf das fbld pop mov arpl imul out int xchg (bad) in dec jle and imul pushf xchg aas push mov jg dec xchg aaa les cwtl imul mov jnp arpl aaa cmpsb dec mov adcl push pop sub test mov jb pop cmp in std mov (bad) mov repnz lds xchg inc dec fmull mov icebp pop nop sub (bad) (bad) ficompl push loope stc incb int rcll daa lea jnp fs fmulp imulb xchg dec mov into pop cld push mov in mov add popf inc jge mov outsb push add (bad) mov sbb neg out out mov jae pop in cmpsb mov cs (bad) xchg jnp mov outsb out cs fistp mov push dec xor push insl pop (bad) mov dec loop cli mov leave push mov hlt mov jecxz mov xchg incl outsl leave ja (bad) out cmp jl and inc in mov push int dec xchg outsb in inc xor fs push imul xchg xchg mov sub mov ss cltd (bad) mov out mov dec push add pop nop mov insl adc add aaa mov lock jecxz lea push cli aam rclb mov scas rclb ss sub mov add ficom mov inc mov cli mov js mov lds mov repz and in shr xchg fdivr mov add popf sti adc mov or mov sbb inc enter mov dec mov xchg push int movsb repnz mov out sub mov cltd lahf mov test mov pop dec aaa xlat lret aad push ja pop rcrl les call das mov xor sub mov ds sub test pop adc lea std mov mov pop in jge mov cmc sahf (bad) stc mov xor mov lds lods or pop and sbb lcall lea sub jmp jmp in lods inc fistp sar jns adc icebp stos decl mov pop push lahf add (bad) dec jge sub rorl xchg (bad) ret sbb jmp mov pusha lcall pop inc mov mov addl mov xchg imulb mov mov mov or jmp xchg lds xchg loope xchg shrl mov leave mov jg in mov sbb out lea cmp (bad) mov (bad) push jae add mov mov inc xchg in xor xchg icebp jae into mov int3 mov pop lock mov ret cmp mov lret lds das sub rorl pop sub std push pop mov in xor scas mov push mov ret cmpsb lea push insb leave cmp xor sbb jne movsl pusha (bad) fwait pop add push (bad) jmp mov xchg mov lods leave popa mov daa pop mov in stc int adc jg mov pop cmp sub scas repz fcomi pop cmp mov fidivl pop pop push cmpsl insl push andl decl jne pop dec jo fistpll push clc mov movsb faddl lea repnz inc sbb jne pop aaa jmp pusha pop pop je inc stos mov jb sbb frstor dec subb (bad) cs push pop mov mov mov pop mov scas loopne in loop or xchg out mov test std je aas popf mov out sbb mov xor push pop clc mov or adc sub stos xor jmp adc hlt test sbb sub jmp push out imul sti int3 mov xor xor add xchg js mov stos cld inc mov push mov std fs leave pop mov pop roll adc mov in aaa insl mov ds sbb push lcall push mov out inc aad mov cld inc hlt scas mov or push fisubr cmpsl sub cmpsb mov pop mov pop adc into jecxz js and sub lea (bad) scas addr16 ja mov inc cwtl (bad) mov fwait dec xchg stos je fnstsw imul xor inc adc mov sbb movsl sub in dec cld mov pop je (bad) push push lea mov xchg or add (bad) push enter inc cmc inc cmpsl cs add imul mov fldpi mov mov into data16 orb daa dec dec ret enter rorb push push adc fwait mov bound xchg cmpsb js mov or dec pop mov dec in (bad) mov cli in push insl movsb push or mov add hlt fiaddl mov push adc cmp cmp in les pop fcomp xchg daa mov int push es and jl out mov jmp mov push imul pop loop mov stos popf repnz and xor rcll fwait dec pop jo jae cmp icebp add daa mov into and adc in insl (bad) scas mov ror xor icebp adc cmpsl inc push xchg xor push lea dec pop ret add mov mov (bad) loopne jmp int fistpll stos test shr mov nop sahf push into mov push ja jnp jle or loope in adc mov fwait adc sbb pop mov cmpsl dec mov test lcall mov mov or outsb xlat mov into xchg inc enter ljmp in test mov jp mov repz imul add mov mov fwait mov js mov jb retw jno icebp ja movsb fsts mov int push icebp jne lds ret add push push sub pop jns (bad) not cltd dec sub adc sub mov cwtl push lds mov (bad) xchg test repnz xchg test jle dec inc jns and test mov sbb outsb es int3 mov decl std mov imul into out mov fildl or mov mov fild popf mov les and jo shll mov xchg andl push out inc pop xchg cs daa nop inc stc mov mov fcompl dec jecxz xchg aaa and push jle lods lea lock imul inc jle push mov pop adc pop mov adc movsl jbe mov cs cmp test ss mov orl int3 add scas fldenv rcrb mov mov enter mov lds mov jmp pop sbb and jno mov dec jne fcmovb insl sub sub imul mov mov push mov xchg add push repz dec push sub mov movsl add sbb aaa in sbb adcl shll enter repnz icebp in test mov rorl out push xchg lea gs jno test scas dec pop mov add mov lea lret pop (bad) push mov push stos push sti (bad) push (bad) and inc mov ja mov mov jle mull mov ret in scas inc mov mov mov push sub mov int sub mov jg and mov insl jb push aas mov jbe dec push xor lret das mov mov cbtw in push shrl xchg or mov jne mov jg sbb jnp jns sbb sti aad aam or mov lcall loope mov lret jge das ss xlat mov enter xor (bad) into push push icebp xor das outsb mov pop mov pop add ret push fdivr loope mov xchg or pop push fstps xor xor mov cltd out loope mov int in push fsubrp ds les push sub mov (bad) fmul jno add mov xchg mov cmpsb mov stc into push xor lcall test xchg std sub mov jbe roll add mov js add ds cmpsl adc mov sub xchg push mov dec bound iret sahf xor mov frstor addr16 pop fadds pop cmp stos jno mov negb inc cmp fnstsw mov adc rcr mul adcl fldl mov mov mov mov push adc in in fisttpl loop loopne mov and inc and sub insb xchg ljmp mov mov mov nop out and pop mov and bound inc in sahf hlt or int cmp push (bad) test (bad) xor and mov jle mov xlat adc (bad) dec mov aam pop push hlt rorl push xor fstpl popf out mov in sbb jl add mov push and lcall xor lds (bad) mov mov enter mov xchg roll pusha movsl mov xchg sti jmp lea lods pop stc in scas insl test push sahf notl mov mov mov mov fimull inc mov mov popa lods push icebp xchg (bad) mov cmp or mov lret push mov ss mov pushf jne dec mov in loopne es mov cli call sub adc std in stc pop js push sbb push dec pop mov pop int3 and adc test das aad push mov pushf cmp fcompl jge les pop test outsb pop aam cmp add (bad) icebp mov call fbld (bad) sti in ds icebp js adcb pop cmp adc mov mov int sbb incl pop push xchg xchg or out arpl insl lahf dec cmp cmp adc pop repz pop cmp mov insb dec push mov pop cmpsb ja push xchg repnz insb push loop imul mov push adcl (bad) dec push mov jnp xchg sbb xchg mov fmuls sarb mov insb sbb mov scas mov mov dec jb and push lahf fldl in fldl jns dec adc ljmp bound mov xchg mov outsb bnd add loope mov outsl jo mov adc pop sti int jle std cltd inc xchg mov aam mov negl lret mov xchg movsl das mov mov pop mov sti (bad) gs sub adc jl jp xchg cmp insb mov mov test lcall push cmp aam rcr xchg mov (bad) jmp iret mov dec sarb sub fmull dec mov icebp loop mov ficom (bad) pop push cmpsl jecxz js mov cwtl shll outsb (bad) push mov ljmp aad add outsl in mov fcompl (bad) jg mull mov scas in mov test or fisttpl jne jno inc lea xabort mov in nop mov sarb stos mov pop stos mov insl push ffree (bad) push mov loope fsubrp mov hlt sub ret lea mov adc fwait (bad) in pop flds mov mov pop int dec inc mov xor fprem1 push inc mov xor inc jb stc mov iret dec jp or test pop mov mov cmp pop subl in sub pop in popa data16 mov jg pusha scas or mov inc push sahf mov fdivr or rcrl mov add lds mov inc notl mov andl adcl push xchg dec dec inc rcrl or mov scas mov int pop push cs inc in jmp fcmovb data16 pushf fimul cmp or stos jae sub js mov dec das push sbb dec incl mov jge insl cs lds mov pop lea dec inc xor cwtl push je jb xchg out dec jmp mov cmc daa xchg or mov sahf std mov xchg fcmove mov int3 jmp xchg mov arpl or pop stc mov hlt adc sbb popa dec lcall mov add jo fs dec in mov jecxz push dec mov mov loopne repnz hlt mov or mov leave cltd addl je xor and loope sub sub xor mov push std aaa int cltd ret cwtl pop test xchg mov orl jbe xor leave xor mov jmp push dec jno shufps ja mov sbb or mov mov jp lods fchs xchg (bad) jmp in pop insb ds mov push fwait add cmp mov addr16 or inc mov push jge aam inc imul (bad) jne mov mov mov mov jp mov pop iret lea (bad) leave xor mov lea jne mov sbb mov pop push mov dec imul pop mov xor xchg and imul loope insl mov aas (bad) mov mov adc aam das lock sbb lret xor lods dec and (bad) in aad arpl repnz add mov fidivr test mov in xchg or cmpsb mov adc or aas mov and popf pop jnp mov add adc pop mov push mov subb out mov jecxz jbe and or xchg insb cmc not lea xchg lods dec add sbb idivl les lea jns lds sub sbb mov std and sbb in xlat cs mov xchg out mov scas imull mov dec xor fcompl in (bad) xchg fmuls mov cli in pop xchg icebp adc sti xlat push mov pop adc lahf mov bound or pop in xchg adc movsb mov inc lret arpl inc enter pusha sub aaa mov negl nop mov pop mov in bound pop inc pop outsb xchg aad mov rorl xchg xchg xor mov push xchg mov test lea shrl mov pop cld inc mov or ja xor sbbb xchg (bad) out push int cmp xchg mov inc jl adc or icebp int xchg xchg fdivrs sbb jp dec dec in xchg ffree adc (bad) popf fisubl (bad) (bad) fadd sbb lret dec xchg jno aam sahf fwait add (bad) sti lock sub push mov or rorl cmp xchg lea loop (bad) mov mov addb jle dec scas mov aaa fisubrl bswap test and sti int mov ficoml mov cmpsb push pop scas jg sub es fwait xchg (bad) icebp pop aas jle inc dec sbb rol in leave scas cmp out fsubl hlt popa dec adc dec push insl xchg mov add and adc es decb cli cs mov cmp roll mov mov jb pop xchg mov jbe movsl mov adc ret cmp loope ja in inc mov scas fdiv pop lds in into mov pushf mov scas lret rcrb and xlat mov enter scas inc movsb mov das ja sub jbe add enter stos push cmc dec adc add pop pop push in jl sub jae dec add stos xchg in jns mov pusha sbb inc push mov xor nop test push or jno jp cmpsb lahf iret mov daa pushf push cli scas fbld test dec mov push lods lea cmp fnsave push mov and xor cmpsb dec xchg xor adc adc dec inc lahf loop fwait jle mov test outsb jp lods ljmp mov lcall addr16 mov outsb jbe imul mov in xchg mov xor or mov sahf jg xor mov test into mov imul jb mov push push xchg mov scas fadd push out fisttpll fstl mov pop inc jno ret mov mov pop jno scas (bad) std xor mov loopne push mov jg mov scas arpl popf xchg fidivr mov push push push add cmc fwait add (bad) popa test mov sbb ljmp mov pusha arpl fwait dec gs mov lret push pop mov cmpsb push mov add out mov data16 loope or push into mov mov push or xchg shrl jle inc xchg push int bound jmp push lcall add in mov das jbe mov push adc mov inc js jmp mov (bad) jnp mov or decb mov lahf stos mov fsubrp cmovg mov mov scas add jle sbb repnz std dec mov jmp lods mov xlat cmp push out mov cmpsb mov sbbl jge mov jmp mov (bad) mov dec rorl cmpsb xchg and push add cltd (bad) fwait (bad) jno bound shll scas sbb push xchg (bad) fimul (bad) cmc inc leave mov lret ret inc mov fnsave xor frstor fucomip mov mov lgs int or mov into jp jmp dec adc mov lret pop je lea stc fiadd aad mov push cmc movsb insb cmp push mov pop out movsb icebp iret mov and dec xchg xchg push xchg (bad) ljmp mov xchg std test addl fcompp mov aad mov or (bad) cli stc idivl lods xchg mov sahf xchg cmp xchg xor nop mov mov pop xchg mov xchg jecxz mov push sbbb out enter data16 cmc cwtl xchg mov ja xorb dec push loop inc (bad) mov aad stc repnz jecxz (bad) mov mov in xor mov adc insl aas decl jg in lea add mov push insb pushf xchg lcall (bad) mov aad enter (bad) cvtss2si fdivl fdivl pop lret xchg fmuls pop int and sub push iret lds cmp (bad) cli (bad) cmp sahf out sub int3 lea adc jmp push mov xchg out arpl mov test xchg (bad) stos mov scas mov inc cmc fyl2x int out or not (bad) jnp in fucomp adc loopne lock movd out adc cltd mov cs and aad xchg mov cmp or mov lods and xchg or mov insb outsl cmpsb jb sub jmp adc sbb arpl cltd pop movsw (bad) mov sbb dec imul jbe xchg enter or mov int3 imul mov repz fst scas mov stos test test pop cltd (bad) push ja scas mov mov push in arpl jno sub push mov clc push fs loop mov mov or sbb inc mov int pop inc mov imul xchg mov jbe pop roll mov imul mov mov adc push inc lret mov or aam leave cmp ss inc loope popl mov lods out mov lcall rorl mov sbb add cld pop aam pop mov in popa dec fs sbb into push mov push lret mov sub call dec pop aad jle sbb and jno mov mov icebp pop mov mov jo mov jge lods cmp call loop data16 les in mov scas pushl mov sbbl out dec lret jbe mov lock or insl mov xor (bad) test incb mov mov mov sub inc jmp mov push push ja call call movsb or mov cwtl jo cli cmpsb shl inc mov mov mov mov int jle fimul push es lock push (bad) out xor cmpb icebp jbe mov pop push mov dec orl aas xchg cmp (bad) repz lahf mov add fisubl pop scas movsb push sbb fistpll mov aas cmp shrl outsl push out jge push pop add sar decl mov mov test mov repnz movd iret andb jge loope mov mul pop pop orl mov dec mov mov xchg scas scas lcall jne sub cld mov xchg out push daa mov mov and shll jb cmc mov inc jo lds fisubr xchg jns in mov mov cmc cli scas or xor or mov dec pop adc xlat xchg and mov mov mov int3 test aad add mov mov aaa jbe in mov adc push adc orb lahf and inc and pop out mov in outsl lea sbb mov mov dec mov mov and (bad) xor jbe and mov xchg push dec inc cmp sub push aaa addl xchg dec mov mov xchg inc xor xchg mov xchg mov int3 shr into std mov fdivrl ljmp cmp adc xchg int or sub cmp jmp frstor xlat cmp daa mov pushf aad fs push jne addr16 stos fimull mov es push das loopne fcoml cmc cmpsb (bad) fimull imul lods andb mov sub in inc cs ret repnz and rorl lret xor into xchg sub mov xchg loopne pop lea dec cmp ljmp flds push out test dec and push mov lods mov mov jb stos lds lcall add mov cs push add mov push jo scas pop push pop call jb cmp std pushf push sub and (bad) jo leave mov push (bad) ss or insb fcomip cmp jmp iret inc mov js inc adc mov fistl int3 mov push mov or rorb int xchg xchg mov das inc pusha mov fincstp mov sbb insl push dec xchg pop xchg lods mov jge or cltd pop pop or inc inc mov sahf aaa mov subps push mov adc stos jae mov xor rorl push (bad) outsl xlat nop and mov dec pop setbe xchg loopne decb lods and orl inc mov pop add in mov mov icebp xchg mov mul pop mov mov bound or adc mov icebp test xbegin imulb pop push mov dec ja mov lds (bad) pop jp xor les add mov pop loop push or jg xchg push jl rcrl xor mov sbb sub outsb femms sbb mov cmpl sub in (bad) rcr test cs bound xchg mov jns fimull inc or pop mov xlat xchg lret jmp fistpl inc mov adc lock push test push fwait mov push dec arpl jne nop jb mov sub mov push or push lea xor mov mov and loopne xor test inc mov and xor mov xor int mov add stos dec fldt mov mov js cmp cmp adc add mov sbb (bad) int mov pop sbb movsb data16 fwait mov mov jge sub shrb in mov xor hlt cmp push jb adc or mov int3 xchg pop test incb dec stc mov cwtl and iret dec movsl pop es inc sahf gs mov sbb mov pop or xor dec mov mov adc sbb push rorb icebp pusha (bad) lods (bad) push xlat push sbbl xchg pop mov addr16 mov push jno cmpsb or push negb fstl in and inc mov shrl cli loop mov mov fnstcw icebp push leave lock repnz adcb dec dec lds adc lahf sub lea std (bad) mov mov add add sbb rcr adc (bad) rolb outsb loope das es add xorb imul add sub (bad) pop inc sbb sbb push mov (bad) jbe push dec mov jmp inc jle and adc mov push jecxz xchg sbb (bad) cli push inc test cmp lret in lds add mov jbe (bad) mov pop popa or stos mov push js mov xor mov int3 cmpsl jmp xchg pop mov rclb cmp scas push (bad) adc cwtl xchg int mov and outsb mov push mov or cmc push mov insb mov movsb add call data16 scas dec repnz (bad) into or inc jl pushf aad mov mov icebp and lods cmc test mov dec jnp jmp jecxz mov loop inc test mov cmp jle xor sub dec fidiv out js push int adc cmp pop push mov push data16 pop aam bound dec clc aas scas stos test nopl push repnz lock mov push push jbe jg adc ss enter sub flds daa mov out dec test and adc push orb (bad) push mov stos (bad) and inc xchg xchg in mov pop mov (bad) mov ljmp das out cmp jns movsl xchg mov sbb mov or adc clc xor adc mov mov mov mov mov xor push mov push stos test mov gs cmc pop hlt ja out xchg mov imul mov aaa mov push popf stos addr16 pop pop jbe inc mov data16 lds mov mov xchg orl subb xor stos int3 xchg add or xor je clc lea pop jge xchg imul mov xchg dec sub mov out add jmp or lock mov mov cmpl dec mov out push push inc sbb (bad) xor mov mov aam dec in mov and sti or xchg daa imul divb int3 (bad) dec mov xchg mov mov cmp and adc xchg fmuls orl xchg pop xor pop mov sahf pop inc and sbb aaa xlat fsubrl es push popa xor cmp int3 arpl ds mov jno mov in mov mov mov pushf loope sbb loope mov inc fwait cld cmpsb cmc add jecxz inc ja out rorl rcrb inc xchg std adc ljmp (bad) push daa (bad) mov sbb and insl mov std adcl jecxz aad int3 orb andl rcl ret clc xchg push pusha xor sti lea xor rcrl jnp lds mov aad xchg out xor mov lods inc sub mov fsub leave test mov mov out in sub ret jge add mov mov lret iret cmc ret mov mov stc sahf cli (bad) cltd les mov push in mov mov das pop push lahf and mov pushf cltd cmp pop add into mov inc xchg jns push xlat lods mov xor and mov xor movsl (bad) scas (bad) negb or hlt xchg or fsub cmp mov adc daa inc sbb mov sbb in lds dec lock xchg fisttpll push xchg mov inc xor (bad) inc mov (bad) mov xor sbb xchg mov or or and cltd addl pop mov lock inc fsubrp sbb push mov jo xchg cli mov mov loope incb mov lea pop out ljmp mov adc mov lcall cmp pop pop scas cmpsl push clc and inc mov std inc jecxz lea popf rcr add pop fadds subl repz lret mov arpl jnp and mov push mov test mov or push add cld inc adcb jl jne mov lds icebp push mov ljmp arpl popa into outsb loop pop pop out mov mov pop cwtl aaa pop (bad) out mov cmc push stos push outsl cld mov xchg shl inc push mov (bad) sti add cmp cmpsb add das dec shll push lret dec aas lods icebp out cld pop or mov or mov sti notl mov (bad) cltd arpl test repnz or popa in mov add push mov (bad) mov xor aad adc jbe divb jg,pt mov test jmp mov (bad) mov sbb xor mov cmp and cmp dec jecxz mov movsl cmpsl inc add loope fisttpl int3 jp inc imul test outsb loope (bad) mov shl sbb dec or test push mov in test add cmovge adc cld leave mov adc fcompl xorb hlt ljmp popa fisttp aad cld mov push push xor pop rdmsr mov iret sub cltd leave hlt mov mov negl xchg push pop xor leave mov cmp test out jg push sub decl mov jno pop inc cmp mov cwtl inc mov data16 je repnz lea ret (bad) fucomp out mov pop daa or fisub mov ss and (bad) mov shr out jmp ja ret repnz aas dec dec scas mov inc inc push in push mov mov mov mov test sub imul jno (bad) out arpl ja inc sbb int xchg lahf push mov (bad) outsb inc xchg push push cmp paddusb ljmp daa mov and dec in mov repz mov popa push push mov xor add test pop int push add xchg add loop jge out sahf xchg out cmp jno push nop jp inc fwait mov mov and adc and sub cli mov cmpsb fist rorl add sub mov int xchg adc pop out mov cmpb push (bad) mov aad lret sub xchg xchg fidivr adc in adc push mov sahf xchg adc test into ficom pop mov push negb subb dec sub push (bad) (bad) mov (bad) add pushf int int3 outsl addr16 mov scas in dec push pop ja fmuls mov xor loope xchg add pop std imul mov stos push test ffree insl scas or sahf mov mov mov sbbb cmc mov xchg pop roll test mov mov data16 (bad) push fiaddl ljmp and clc imul adc ja nop rorb mov mov test push cs dec xchg xchg (bad) in inc jo fcompl mov fs icebp mov mov inc mov cs push mov sbb mov int mov mov (bad) dec lea out jmp push dec mov scas loope xchg (bad) xchg mov in and adc mov push loop popf fcomp lds ret cmp mov pop hlt push mov xchg int3 rorb cwtl in dec (bad) xor cmp cmpsb les xor mov mov dec imul movsb repnz pushf hlt shll mov lcall add mov mov pusha icebp mov fucomip xor rol mov rorb popa subb pop cli cs push cld loop lea cmp rolb ss adc dec dec aas or dec (bad) sbb int jbe mov (bad) sbbb pop jnp (bad) dec dec mov mov shlb stos xchg mov mov add popa mov bound fbld sbb insb jg out cwtl (bad) dec (bad) mov push out fsincos mov xchg push lea push popf pop int add (bad) mov dec jecxz test fs sub stos push mov data16 cmp mov paddb push hlt arpl outsl ljmp inc jg or sbb push mov adc pop in adc xchg int3 inc dec test xor lret mov push fdiv outsl add mov mov mov inc ja jecxz push xchg xchg pop insb out cli addr16 (bad) fildl das lea fimul scas in jo cli mov stos inc mov cmp jg test cs shr cwtl mov push inc mov push int3 pop mov push leave xchg mov xchg mov je daa dec in notl mov imul inc mov xchg das adc mov in lods outsl (bad) ds xchg mov xor fldenv push inc mov cmc xor roll into mov in (bad) cs test and mov ficom (bad) mov or ja jmp inc popf push sahf ret mov cmp pop jbe scas dec pop add jne dec or aaa test mov sbb scas mov mov out es hlt into enter cmp mov mov push xchg (bad) push and adc (bad) nop mov gs xor mov jmp mov lret in adc xor dec loopne inc and cmpb dec fisttp dec fisttpll or jp,pn inc nop jbe das out fimull cmpsl xchg fstl mov lahf aad jae mov cmp daa cmp mov in in (bad) je cs fdivrs push jge xchg aaa push pop dec mov mov fldl les push or mov bound lea subb xor push leave mov mov in rol push jge sbb mov push aam pushl imul or (bad) ds cmp sbb push sahf push jge fisttpl mov or outsb jecxz and jns sub sbb repz xchg insb mov dec data16 or loope (bad) (bad) inc mov adc lea lea in cmp xor pop (bad) movsw mov lea sub xor jb icebp mov icebp cmp jp mov fwait lock mov mov mov xchg ja sbb xor in or outsb dec jp mov mov loop pop fdivs mul or xchg sahf int3 test out out xchg fsubl add jns dec jne arpl (bad) adc cmp nop push stc mov cwtl repnz ss cli mov inc insl test mov ss push jmp sbb inc popa out in test xchg imul in int mov inc lcall ja jnp fnstsw mov cmp (bad) cltd insb sub mov xchg xchg out std pop xchg pop pop cmpsb iret leave rorl dec xor adc push push repz jmp cmp mov aas out mfence leave mov lcall adc in sub jg orl (bad) in dec xchg ficomp orl rcll lahf arpl push mov xchg (bad) out mov stos jo adc inc into rcrb pusha in jae sahf cmp xchg les pop sub jbe or cmp mov jg push (bad) push xchg xor test nop addb push mov mov sahf inc loopne push shrl mov cvtps2pd mov aas into lahf mov sub and mov ds scas add pop int push outsb mov mov popf stos std rol repz mov outsl or pop jmp mov imul xchg pop pop mov lcall mov clc fstl and pop idivb mov mov xchg push add pop das test mov pop (bad) xor addb daa outsb and cmpsl imul lahf add nop sahf in lods xchg repnz test pop sbb pop jae dec rorl mov aaa (bad) push mov pop inc int in fstpl std mov popa and and cmp iret js call mov cld sub mov pop jno jp sbb (bad) mov fsubs mov sub add and sbb stos (bad) out mov addr16 jge push fucomi rorb xor cmp sub dec mov (bad) jge mov inc aaa (bad) mov jl jae into ret mov jle pop dec insb mov lock mov sbb fmuls mov jmp pop lea mov lods andl mov fldt push orl test xchg mov daa (bad) xchg mov cmovs fisubl add hlt sbb mov mov rorb jmp push aas orb cmp push mov test sbb movsl dec gs mov pop xor mov outsl jbe cmpsl sbb outsb sub mov or push into mov das push std mov xchg or mov fisttpll cmp push lock mov mov or inc aas mov push or mov add ljmp push mov rcrb fcmovne push fmull sub mov gs push lret out aam lock xchg fbstp mov lds push pop xor adc lock dec mov mov int3 loopne test sar mov inc cmc push cmp addr16 loope push pop nop int3 mov orl inc scas add fmull xlat dec sub push mov lds fcoml int sub jb mov arpl mov mov int bound lock or mov mov mov cmpsb dec lds mov sub sbb cmp fsubrs sub sbb jne lea add sub das mov mov incl mov nop (bad) fmuls ljmp cmp lock (bad) jo in (bad) fildl mov push out outsl mov sbb (bad) mov xchg dec pushf (bad) fbstp mov and dec mov (bad) push push inc mov xchg add xchg fnop clc mov mov push jbe lods (bad) in dec and lahf push mov dec adc leave fwait mov call cmpb mov movsb shrl cmp push pop clc mov mov adc xchg loop xlat jb and jecxz cltd cmp mov lret jmp cwtl loop mov rorb (bad) cmc jne mov ret pop pop mov rorl out or roll sbb adc pop test insb addl (bad) pop mov addr16 xchg pusha mov in imul je sbb in test decl adc cwtl in or add in fisttpll jmp mov loopne push je xchg call xor push mov enter mov sbb add or mov pop lea std sbb es (bad) mov stos and adc push mov fistl or pop in dec and jmp (bad) pop call sarb cs jecxz sahf mov push cmp cli add lods sti or jmp push mov mov dec xchg push sbb jg sbb push pop mov xchg mov mov scas (bad) in int inc dec or cmpsb insb mov push pop mov or shll icebp cmc jno xchg add jge outsl jnp fs xchg adc jl mov lcall pop and (bad) mov adc hlt aam add into jb push out shll mov int mov fs lcall mov mov pop jecxz push mov nop pushf psubsb mov int3 setle and cwtl or stos out lret lds adc inc adc or dec mov outsb pop ficompl pop push mov mov mov jecxz icebp xor push xchg cs mov repz (bad) popf scas pop lea push sub pusha sahf xor mov mov add xchg ret lahf cwtl dec cmpsl push loopne fisttpl jp test (bad) jns push call add jg int inc (bad) mov mov hlt sarl into mov mov dec jg jmp push stos xor outsb mov mov test push sbb lcall jecxz pop cmpsb repnz pop mov into add sub stos out xchg scas leave mov mov loopne adc dec mov test fmull cmpsl jecxz cmp xchg xlat mov inc xchg and jge mov out shrl cs fs jne mov lahf push pusha in iret pop mov lea xor cmpsb push fldl or (bad) shrl mov mov in in or rcrl arpl mov add xchg jl outsb mov add faddl aas (bad) cwtl clc sbb jb and cmpsl int3 inc lock std insl orl fidivrl adc sbb mov hlt mov lds rol mov mov xchg lea mov push rcll rorl (bad) bound subl dec jp mov mov add or mov fisttpll mov mov xchg mov mov aam leave or push stos add fimul push sub aam pop lret in icebp xor in fidivr les jge sti outsb mov stos xlat pop push jmp sbb mov jns aad dec insl lahf xor lds add mov dec mov js aam pop pop je jae shrb jns lcall adc iret stos test dec scas xchg xor outsl loopne out not inc xlat sbb fnsave imul pop or pop pushf mov lret hlt jge jmp pop dec popa push xor enter and mov push aaa rolb sti loopne lea rorb jle rorl (bad) mov iret cs aad mov fcmovnu push pop sbb ljmp sub orl out add mov lods mov mov lahf js sbb or add frstor mov jge pop lods xchg mov scas jbe jmp xor xchg rorb test cwtl push mov add cs add or mov xchg outsl popl pop adc out in jno xor std scas mov int3 xchg mov aam mov adc sti or ret shlb push inc sahf xchg pop rorl insl movsl je or sti mov or ds jns or xor insb jb sub rorb jb xchg jbe aas (bad) int movsl inc dec pop sbb xlat mov mov pop mov in cmp pop mov mov add push test jns lret aad mov pop rolb mov mov stc fucomip mov dec and push mov fisubr or sub mov mov std mov leave push movsb dec je,pt lcall repz ja xchg push aas pop das jp pop fimull popa (bad) xor sahf push push jo cmpsb movsb mov stos imul lds mov sbb out bound xor push xchg xchg sar clc shr dec ljmp lods insb lret pushl jle movsl jae in sbb mov jl inc loopne xor xlat fdiv push call int3 insl sti mov or xchg mov sub lcall mov xor mov imul mov mov fs insl mov (bad) or mov scas cs call pushl mov push fucomi mov xchg adc gs shrb push sub cld xchg xchg lcall std sbb out repz cld fisttpll or mov pop lcall lret push sti fcompl add mov mov fs stos popf (bad) in aad shl xchg mov test outsl cmp or mov lods popf cltd mov aas mov ja sub int int cwtl adc mov sub mov xchg leave insb mov js (bad) xchg popa lahf and shll mov movsb cmpsl aaa fisttpl lods stos mov popa hlt fs push push xor mov subl cmpsl test in add push xchg pop sahf mov cld negl es xor dec ret fwait jle dec jl and and ds mov out inc in add add mov test xchg lock pop cli pusha sub cs xchg stos mov shl cltd mov inc (bad) sbb scas (bad) mov jle or mov mov cmp in in mov jbe mov sub and rcll or mov mov ror xchg pop cwtl mov (bad) cmp mov dec xchg mov cmovge mov loop mov cltd aaa xchg mov mov xchg xlat mov mov add mov test in push cwtl jnp mov dec in xor lock int scas xor (bad) xor pop in or idiv popf lds push mov jmp xchg subl ljmp mov mov mov mov std sarb mov mov inc mov rcl push cmp push add ss jne fistpll inc inc aad popa and outsb jae xchg xchg out cld js pop test mov mov mov add jbe pop dec movsl mov xchg in fcmovnu cmp int jno push shrb in (bad) adc sti or mov notl or cltd adc dec sbb pop xor mov mov ja mov ret lods js jne mov (bad) jp out xor lock mov leave pop hlt daa push aam mov and mov mov shrl insb mov clc xchg (bad) int cmc inc dec jne push jmp popf sbb popa sub into pop or add mov imull dec adc mov sbb cltd fwait negb push (bad) mov mov add nop dec push jae notb mov lea ret push xor in sbb pop ss xchg orl mov dec mov cmp adc jecxz addr16 (bad) imul add outsb adc gs mov shrl scas mov adc lock scas (bad) scas xchg sbb inc mov add push mov call and mov mov adc pop in daa insl dec sub xchg or xor jle pop imul dec mov (bad) hlt and (bad) rcll inc cli mov jg mov insl mov aam pop mov in add pop cmp icebp mov push jae cwtl imul testl daa pop xchg xchg jle xor int3 les lods mov std js notl fwait add mov imul mov and in jns adc sbb sbb sti push aam xchg mov add xchg mov mov and mov mov repz test ret les aad mov push aam cmp pusha or ret (bad) ljmp cmpsl mov push lds imul ror call cmp test pop outsb fisttpl mov insb inc andl inc ficoml in jle mov xchg roll mov mov movsl mov mov movsb and sahf ret xchg test mov mov jno xor test cs gs dec jb lcall sub outsb push nop mov adcb xor mov lcall pop pusha xor sub mov ss dec sbb in add pushf mov sub cmp je loope xchg aaa (bad) mov mov outsl add inc xorl push test and movsl mov xor jle mov test (bad) fsubl jmp pop and aad clc fild xor push xor pop cmpsl mov nop (bad) (bad) or push mov ss arpl hlt jno enter mov mov mov xchg (bad) mov jo and sbb or push jne (bad) fsubs inc cmp mov jl pop (bad) mov fimul rcrb loop xchg xorl lods shrl test pop enter imul inc decl (bad) jp sbb repz js push pop (bad) sahf orb mov xchg je xchg cmpsb sub push arpl mov dec adc mov or mov jmp jge hlt pcmpgtd mov pushf cmp inc dec lret sbb mov jo imul push leave mov es cs jle cmp sbb nop sub adc repz in mov mov mov mov mov jp and pop (bad) mov cmpsb shrl mov mov (bad) xchg aas adc mov es xchg sbb test xchg inc (bad) mov xlat and jmp test and rcl cs (bad) pop mov cmp dec aad mov sbb test stc in lods sub mov sbbl dec icebp movb mov push mov testl adc jae cs or adc mov vandpd mov loop in rcr pop cmpsl aaa pushf je idivl movsl xor and (bad) mov jg ljmp push pop test pop fstps ja mov fs mov lods push loopne sub in pop mov mov shll decl test notb mov sub mov mov mov lods mov call xchg xchg xchg scas and stos mov andb mov movsl popa rorl sti pop xchg test ds ja std iret lods out xlat jns jg push mov (bad) mov add in mov mov push sub push sub xor aas add cmc lret cmpsb sbb sti bound mov or shr test cmp sbb loope roll mov mov mov scas mov sahf inc (bad) mov mov jns test mov inc mov fldl aaa mov pop xlat mov sub mov push mov dec (bad) pop mov sub mov and lods adc cwtl dec sbb call sub dec push push push jae pop mov test mov add add jbe or repz add test dec rol inc and mov in les push mov cmp fucom push test sub xchg cmp cli mov insb ret cwtl cltd add xor hlt pop inc int jle lahf clc pop mov dec (bad) adc mov push repz xchg or mov adc or loope xchg xlat dec xchg cmp sbb (bad) and xor jno inc xchg scas subl xor or lahf cld xchg insb sub xchg out out in addr16 mov shrb sbb fisttpll jns mov add aaa mov push xchg jg cmp addr16 fstpl mov mov dec sbb test mov popa fs jmp sub in dec dec sub imul push flds sub jmp dec fs (bad) mov (bad) mov js pop fimul lahf adc repz les xor mov mov das sub adc jae fildl cs mov sarl adc cmp mov outsl xorl iret xchg decl xor mov loopne mov jmp mov inc jne and fdivrs vpcmpeqb sbb imul dec and fwait mov mov js push pop mov jno push ret lods repnz in out inc and jb jns mov getsec (bad) sti sub mov pop repnz stos in or mov cs add stos xchg sahf repz stc das push mov shrl sarl xchg mov cli les cmpsb pop nop mov fisubl out dec pop dec lods outsl mov mov pop int fisttpll or push cmpsl mov je mov pop xchg mov test inc mov dec rorb outsb xchg mov pop and pop repz mov aaa int xchg mov aas (bad) dec lret mov push mov pop std (bad) or (bad) fisttpll cmp in daa jns (bad) and sbb cs incb mov push stc ljmp mov popa je xchg jg mov inc fbld mov jne jae pop ret adc pop decb xor add mov adc clc loope mov xchg out mov popa int out cmpl dec cmp js xchg sbb mov mov fs add sbb mov fildll daa mov jp cmp mov or outsb pusha sbb mov sub test (bad) mov xor pop stos mov notl addl mov push stos testl clc and mov dec mov fistpll (bad) rorl xor addb mov bound jno aad mov and mov push push jecxz (bad) mov sub iret jno cmp leave scas or mov xor test mov rcr mov dec push sub scas sbb mov xchg fstpt int int fist data16 push dec jl adc push jmp adc xchg mov inc dec mov push nop out jmp xchg lea sub xor mov add mov jbe sahf inc mov jecxz popa cmp dec pop loopne mov dec jl insb mov or mov inc ret push or mov push pop pop inc mov scas sub call neg and lods dec mov pcmpgtw mov mov dec hlt mov popf test clc xlat mov cmp mov jge push inc xor mov pop pop adc decl pop and imul mov aad mov idivl stc xlat mov sub mov mov ds adc test jge push xchg mov iret and jno nop rcrl in mov and adc add ret aaa jno enter mov in sti adc rol outsl out int aas dec xchg mov rcr add or mov imul cmp inc daa dec cwtl int bound inc dec sbb ss push lret inc sbb mov dec loopne mov dec das mov cmp cmp mov (bad) push mov fisubr daa bound mov cmpsl mov fucom xchg pop decb mov sahf shrl inc lahf call sbb int dec mov incb aaa pop cltd repz push xchg xchg out add push or and notb mov jno cmc xchg xchg dec gs ljmp mov or out (bad) pop mov inc les es sub xor ds (bad) in rolb aas inc movsb mov dec lds adc inc mov les (bad) (bad) pop sbb sub jle cs sbb mov es xchg pop (bad) mov inc push and (bad) mov aaa in mov sbb jecxz ss xchg jl sub mov adc adc jb cmp push mov lea or cli xor ja popf (bad) mov push adc push xchg xchg sbb pop sbb mov or mov data16 lahf popf sbb and std mov inc jne mov jb sub sar mov in sbb test mov cmpb movsl dec dec dec sahf mov in daa leave outsb inc cld xchg and movsl push (bad) int3 push xchg mov (bad) xchg mov mov sub sahf mov mov push xchg inc mov pusha xorb mov jo pop mov aaa out std out jns aad mov push mov mov jo add sbbb rcll les adc int3 daa and cmp sbb lea enter lods leave shll (bad) sub fmull mov jne mov xchg xchg mov iret pop les push es out fnstcw jle repnz mov in mov aas push cli mov xchg cmpsl rcr pop inc sub shr cmpsl stc int3 rcll outsb fsub out movsl xor mov fcmovu (bad) dec xchg lea mov in outsb out sub add fs sbb adc ret jle xchg lock rcll and inc int3 mov xchg mov dec mov orl ret ds push icebp int iret (bad) adc xchg mov jp mov ja into sub cs pusha cmpsl xchg mov push mov mov mov repnz dec cld pop rorb lcall xchg daa lret cld setle sub mov ror mov xor xchg xor std sbb loope fsts mov mov int into sbb or mov ja xor jge dec mov cmp fistp out adc push nop lahf mov insl test push add sahf mov outsb lcall pop or sbb (bad) in inc mov pop adc fistp jbe in xchg mov push aaa orb cmpsl adc adc repz inc mov mov xchg mov sub in scas not mov mov mov inc mov add aad andb fisttp push push sbb sbb dec and inc bound (bad) lock push out ret repnz into mov mov inc pop xchg subl loope test adc adc mov dec pop popa fist out sub inc push push mov arpl mov and sbb mov jo cs aam arpl fisttpl push mov repz pushf fwait mov scas (bad) lock adc xchg xchg add and rcrb scas cmpb sbb pop jne push stos mov mov xchg popa loopne fwait and mov shll in adc jp or dec sbb cmp scas popa xor ds fldt ja mov and (bad) subb js gs aas lods clc lea sti cmp es xor pop in mov dec fisubr xchg inc mov mov (bad) mov imul cltd outsl sub lea add mov int or sbb sub fs add mov test int enter dec mov pop mov out aad inc repnz mov pop lods mov mov clc insb mov push jbe out jp mov pop aaa cld (bad) fnop scas mov push stos and rcrl js cs add pushf inc lret or shrb mull push lea pop aad jne hlt loopne in push mov loope sbb or pop jmp cmp pop iret xchg xchg mov mov add and dec push inc enter dec push mov cs xor scas cli add dec aaa or xlat dec cmp test test lea mov inc jmp js out xor dec mov cld mov scas xchg mov loope mov sub jne sbb lahf call enter out mov lock pop icebp jo sbb lds mov sub mov jno jge mov mov std pushf push lahf scas outsl stos mov icebp out mov clc pop or test movsl xchg jle adc lahf mov in dec roll or je lds stc (bad) sahf mov push andl mov lret pop mov jno call mov dec es mov aad xchg and mov jge add in in insl lods mov sbb stos jns mov stos cmp js xlat aad mov enter (bad) jmp icebp hlt xor stos and lods or aad mov dec adc imul mov xchg into out int int inc add pop mov inc and mov ds mov mov and dec mov loope loopne mov mov jne xchg mov sbb mov mov mov popa mov fstpt push or push stos mov rcrb mov fcomp and add mov aad int3 jmp cmp in insb adc add jns int in xor mov add in es mov ret jp push in clc mov cmp in pop pop lods adcl cwtl dec lahf mov loope mov insb jmp rolb std xor inc mov jecxz addl xlat dec or fdivrl mov and mov jbe (bad) or cs idiv jecxz stos fbld lods mov add aas mov les pop push in (bad) add hlt rcll mov push cld es test jg cmp out pusha dec push cmp ja cmpsl dec xchg roll jge mov pushf repz jo mov mov mov rorb idivb adc push xor dec adc sub jmp xor pusha xchg (bad) sbb mov test and adc sub sbbl push pop inc pop push daa xor rorl call loopne push dec mov pop movsb add aad mov mov cmp lods xchg lds (bad) out xchg inc lods mov stos (bad) cli or inc popa inc push test pop orl insl jbe cs mov inc outsb int3 mov xchg (bad) push mov loop xchg lcall sbb push test std sub mov xor mov inc push dec imulb mov or icebp xor inc daa and push add push subl loope daa push (bad) xor mov aad rcrl push cld pop insl mov mov fisubrl movsb (bad) repnz inc repz and mov jb dec mov in jnp loope mov jle inc popl mov xchg imul add and loope fwait pop rol mov sbb mov stc das out cmpb mov mov mov divl inc push mov adc xor add mov out addr16 scas or jecxz xor popf jns je inc sarl dec imul inc jne (bad) std xchg repz (bad) rorl sub mov jnp dec fsubl (bad) push adc jae andb cltd dec stos push ret or mov xor or jg mov insb inc lods cmpsl aam mov es scas push adc nop mov lcallw ret push fisttp dec mov push mov add in pop sbb cmp mov in dec xorb xchg inc xor in (bad) enter arpl int loope mov (bad) ret cmp mov and push adc dec movb and stos iret mov mov push adc ret xchg or stc into ds xor mov (bad) add mov lret bound inc int add mov addr16 adc pop mov mov mov addl shrl (bad) jp mov addr16 jp pop mov add repnz mov addr16 (bad) das mov jmp (bad) xor inc sti stc push and data16 sub mov call mov jne aaa test xchg add andb fidivr and mov and cmp ret xchg gs pop or mov test pop sbb je push mov ja mov jle daa sahf jbe mov jp outsb cld jle push mov je add and cmp gs in xor dec add daa jg mov jnp fstl inc jmp in xchg jle push (bad) ss rcll bound mov scas in dec jnp mov imul nop push mov loope and icebp mov mov lea xor data16 leave cwtl pop orb sub shr subl mov jg cwtl jp jl xchg xchg and fsubrs push push mov sbb sbb jmp pmuludq adc mov mov adc and (bad) xor add mov rep out and mov nop lcall fmul jbe mov pushw jp jne xor cmpl int push and inc pushf cmp xchg dec mov lahf (bad) in jl les mov and mov int3 out (bad) int or fisttpll stc sbb inc mov mov loopne add push pushf dec push adcb mov jle (bad) xlat dec mov rcr decl sbb aaa movsl cmp fldl add (bad) jg in mov scas jmp inc pop dec mov sbb clc sbb mov adc mov xchg push cmp pop scas test std dec xchg sub in cs imul ss push repnz dec adc adc mov test push pushf pop movsl xchg cmp push jp sarl and lcall std pop mov push xlat mov or mov stc pop jns and ds push xlat pop and pop fstps mov push into mov push push popf (bad) cmp mov mov adc mov paddsw jae pop xlat jmp in ja ret mov inc mov adcl mov outsb std add xchg flds jns inc push mov jae pop add and (bad) cmp mov ja or mov into push negl lahf push xor jecxz lods lea imul push mov icebp rcr test test movsl std mov lea rcrl je mov inc fmuls xor push add pusha mov test sub jo mov lret fmull fnstsw (bad) jmp (bad) mov cmp mov fidivrl push sub jmp xchg and js,pt inc ja mov and int sbb dec aad mov mov cmp lret mov sub ficomp pop stos xlat ret mov sub aaa mov in cwtl inc fimul std mov (bad) push cld stc stos (bad) fcomip mov or fisttpll shll dec dec scas or stc mov scas cld loope push icebp lea (bad) cmp shrl pop push xor aam sbb and (bad) adc mov data16 outsb xor pop xchg stos insl cmp (bad) frstor mov fisubr inc mov mov pushl push dec mov aaa andb or sbb push sbbb (bad) sarl mov pop out jle cmc adc mov cld sahf aas enter movsl popa and mov adc add cmpsb pushf ja pop mov jo adc or mov arpl xchg lcall (bad) pop dec daa sub pusha mov fs lods stc push pop mov ds mov sub xchg mov push inc xchg sbb lock lea pop pop cmc and jmp xchg int lcall ss jae mov (bad) ds in lock mov inc sub xchg mov addl cmp lds or scas add or jb jne add pop sub stos inc lea std dec jmp je sbb jo xor inc sbb mov cmpsl dec movsb mov mov sbb dec popa pop or and pop mov (bad) (bad) int push or or fs mov mov mov adc inc mov push pushf xchg mov xor cld into outsb add pusha lcall lahf repnz push mov mov loopne sbb fsubrs mov xchg test mov push dec inc sti mov cmp shrl mov xchg dec mov pop jae inc shrl popa aaa or sub stos dec jecxz nop mov and mov (bad) out jle cmc pop pop mov fnsave jns xchg in add outsb out js xor xchg cltd jle bound pop out cmp lea (bad) das enter arpl sbb dec sti repnz sbb or out or inc sub cs lea pop hlt incb mov imulb orb cmp test jno xchg rorb pop jl mov aas lea cld push push mov adc insb pushf jl mov ss xlat mov aam jb stos loop mov das xchg push int3 mov mov aad xchg aam pushf sti into or sahf (bad) mov in mov push stc jg int cmpsb sbb mov xchg scas xlat adc push aaa (bad) push xchg xor mov xchg mov pop mov mov and pop push arpl mov add mov shl aas mov scas mov add inc nop cmp pop addr16 mov adc fistpl lods xchg addb lret mov movsb in jmp sbb cmp test int jno or mov stos les mov dec pushf lock aad pop outsl mov sahf mov nop loope inc int mov (bad) jmp in jae dec aad aam mov or mov stos fnstenv decb das xor in insb pop add cmp loopne inc push mov jl in and mov fistpl rcrl call mov mov mov xchg xchg adc sbb (bad) mov pushf int repz (bad) (bad) mov sbb pop in lods movsb dec divb scas xchg loop int nop jno lods inc mov mov mov xlat (bad) aam mov mov ret lcall mov inc movsb mov inc aam mov jp mov into push lock mov mov mov cmpb cli stc add mov out mov lods cmpsb notb jp mov mov cvtpi2ps inc fs or cmp nop jp push and dec mov imul sub (bad) push imul lret pushf inc sub stos dec pop dec mov inc mov hlt lahf and push test mov sbb fcmovnbe mov sub mov mov aad pusha dec adc test inc test test cwtl mov mov jns and xchg pop repnz and lahf clc sarb mov (bad) xchg mov int3 inc sub (bad) mov mov out sbb mov rcrl (bad) pop stos xchg mov outsl jmp add xchg xor stc aaa cwtl sub cmpsl xchg mov push xchg pop mov stc inc int leave xor je or cld mov clc mov (bad) push movsl xchg ja pop mov in fstpt lock inc mov mov add pop in mov jg mov jbe and mov cs popa lret cmc ret rcr out rorl mov xchg or fbstp xchg jl sub fisttp (bad) push in xchg mov sub mov xorl mov loope jb (bad) std sub push stc jle imul xchg scas int (bad) insb rorl in lock mov mov ja push jmp xchg jns and and mov mov pushw push in xor aaa and (bad) dec or xchg imul jb mov scas inc ds mov rcl mov pop sbb cmp mov jg dec sti mov mov jbe dec mov xor jae insb dec add mov (bad) push and sbb cmp xchg sbb mov or push mov and jb xor decl xchg fisttpll fsubrl (bad) sti jb push mov out hlt pop dec sbb xchg sarb pushf jle test clc in add and cltd inc lods jmp xor jo sub jnp stos xchg mov pushf fwait inc fmulp cltd jbe dec insl lea sub outsb mov mov and call jg push inc dec pop pushf jmp mov jp jecxz mov mov xorl mov push cli test lods movsb fldenv mov push mov add outsl repz clc push and push (bad) sub data16 mov push iret jp jl sub dec mov mov and lret fnsave add adc pop ja cmp adc neg lret add mov insl scas mov test jbe int3 jle mov (bad) xlat add out scas stos mov cmpsb bound xchg inc int test or mov mov push in push mov aam ljmp lods jno push loopne mov mov stos test clc xor (bad) cmpsb push jns mov dec lods mov rcrl stos adc jl add lret mov test jae shrl xor xchg mov push icebp push pop and xchg xchg and mov inc mov int clc scas xor sbb mov xlat or int mov ss in test adc mov cmp mov xor sbb and lods push enter insl xor adc orb pop das sub push out sahf pop pop jnp sub mov das dec call or mov and dec add test adc (bad) (bad) int and xchg adc mov scas flds insl inc repnz fsubrl xchg and lock in xor imulb sbb cld fwait pushf xchg in mov das mov push inc scas in in inc lds mov add push rorl inc mov iret mov adc mov fistpll jb or push jbe mov mov int repz mov and js push or sahf daa sub xor lods les mov (bad) shrl dec out mov pop cmp aam fisubrl stc scas or mov mov addr16 push mov cmpsl jp imul lcall (bad) (bad) mov mov jecxz push pop cwtl mov mov cmp mov stos stos outsl sbb and jno xor xchg cmp (bad) mov mov into in sbb pop mov out in incl mov (bad) neg cld dec in cmp dec imul cltd pop xchg call sbb mov jbe lret mov cmp stos pop mov (bad) mov or mov loop xchg pop (bad) mov stc das lea xchg fs push pop std add stos sbb mov xor mov int loope jmp sarl test outsl jo mov jp and sbb pop mov stos addl push mov inc out mov add add pop add outsb int jne xor pop in fdivr sahf push mov mov (bad) loope jle dec mov push dec dec xor mov and fmulp add mov mov mov mov xchg mov mov loop imul aad mov jecxz divb test sub (bad) int es adc daa sbb lods in xchg fidivr sub test stos orl mov jbe mov (bad) mov (bad) pop mov test repnz mov notl mov mov mov mov mov jns jecxz gs mov jnp mov (bad) adc mov mov out ficompl loop test mov push pop mov pop sahf jl xor mov xchg lret popa xchg mov cs dec ret aad mov lock loop mov push cmc movsb xchg dec gs mov push mov out xor shrl xchg leave xchg movzwl inc fistpl add daa xchg flds push mov dec pop xchg lea ret jmp ficomp sbb orl mov mov into sahf data16 int jp das cld test daa add xchg push fnstenv std sbb pop mul ds mov mov push clc int xchg lahf fstl mov in in sub scas subb push dec mov pop out xor fisttpll adc sub cld aaa (bad) lods mov and je sub inc (bad) loopne push lods dec mov inc add mov fmuls inc enter scas jbe or jmp mov xchg in xor dec xchg cmp push ror in jns mov es pop sub mov inc dec rorb fucomi jae gs xchg mov mov fnstsw push hlt aad unpckhps lret imul out mov scas test mov fwait mov mov fwait lock cmpsl mov mov scas es sub mov mov sarb daa ss scas rcr (bad) rcr (bad) mov jg xor stos xchg and adc dec mov or into pop ja aam or lea add or dec popa lcall js rclb xchg arpl inc cmp (bad) mov scas cld les arpl adc scas inc mov mov je enter mov cmpsb add jg mov test fnstsw ret lock imul js and mov orl addb xchg jmp (bad) push ss xor push mov lds mov rorb mov mov repz aaa stc imul jmp test loop mov and mov bnd mov pop xchg imul outsl in stos movsl pop jl aaa pop stos mov inc mov mov fcoml cmc mov (bad) mov add mov pop rolb add mov adc (bad) call lret or outsl imul test loope pop push loopne inc mov sub dec mov mov je incl mov test add xor movsl repnz mov mov in mov das repz pop test pop jecxz mov dec (bad) pop sbb daa das outsb popf xor in (bad) (bad) mov jecxz mov in xchg dec cmp mov inc sti cmpsl mov iret (bad) lret dec push pop inc mov dec and dec xchg (bad) mov mov mov lahf rcr mov mov sbb pop mov fsubrl sbb mov fdivrs mov in or add cli cld mov mov dec push test sub mov pop mov (bad) cli fcmovne jae mov and sbb sbb sub lods fdivl mov in push sbb test jecxz rclb sub mov int popa add mov xchg cmp imul pop lcall clc xlat lea jmp xchg loope mov into in mov fs and cmpsl loope push arpl xlat inc sar sub sub (bad) int dec mov mov cmpsb mov push fisubr mov adc decl xor scas xchg mov and adc dec shr mov push aas push int jbe add adc push je xchg cmp sub dec or sahf mov mov rol in mov call nop mov ss les xchg divb gs pop xlat ret or fisttpll loope lods iret xchg fmuls push add mov mov enter cld scas clc mov inc xor pop dec scas int3 (bad) cmp rorb fimul (bad) not mov insb push mov cmp in movsl stc mov fbstp mov clc cwtl aaa xchg push xchg dec sti rcrb mov setno mov out lods repnz jp mov mov mov pop dec xorb add pop fisttpll negb faddl arpl mov lock inc xor outsb test fidivrl sbb mov sub cs pop inc mov mov xadd jns lock mov push scas (bad) mov jmp jns lea push pop dec int leave scas data16 mov or push in cltd mov in mov aas movsb mov cwtl int into shlb jns cmpsb gs and mov test dec stos notl lahf (bad) in jne in fcompl pop sub pushw (bad) lods cmp mov jae stos push mov mov xchg mov dec les xchg aaa mov lea int adc into mov (bad) mov fcoms icebp xlat or imul notb xchg push ja pop mov mov mov dec push inc sbbb sub dec mov test (bad) cmc xor inc and loop aas add test jno sub cwtl movsl les push mov cmp jmp ja dec scas clc mov aas sahf adc fsub out pusha push sub add test mov mov sarb gs xchg mov ljmp jecxz mov cld or xlat adcl mov jge daa adc enter sbb jecxz pop add movsb pop xlat pushf imul (bad) xor mov popf dec sti fnsave ljmp lods fldl lea inc inc cmc sub faddl mov imul mov pop scas cli mov incb push xchg mov push dec jnp (bad) shl jno pop and mov outsb int3 orl shlb loopne dec mov iret pop jecxz sbb or mov xchg cmp mov pusha xchg cmp outsl mov or cs pop pushf jb lods mov insl dec mov jp ljmp enter or mov out addr16 leave aam cmpsb xchg out mov mov inc jl in mov iret mov imul sub sbb aaa dec mov mov aam sahf xchg push push add pop mov jmp popl xchg les test add push test pop dec mov mov jge daa mov mov popf push inc fwait out jne fistl movhps and mov (bad) fs movsl xchg xchg sub les rclb mov and mov js (bad) jnp or mov lods in mov mov xchg int3 mov call xchg orl mov shrl rorb dec and sbb imul xlat imul stos or mov cmpsl outsb sbb jmp pop and push mov pop pop mov enter mov push mov mov mov (bad) (bad) xlat jns (bad) jp mov cmpsb mov jnp jecxz push dec pop mov inc mov mov dec mov loopne cmp mov push xchg in mov clc mov (bad) or add xchg in mov setbe (bad) int addb dec repnz add adc mov push ss cmp mov mov enter je inc mov push jle leave std loopne cmpb mov mov jns jle pop jb mov ds push cmc dec mov jns xchg sbb lods mov cmp pushf rorl adc mov sbb fisub cmp and fild push stc mov mov and mov xchg xlat push mov aaa frstor sahf mov dec lret dec out dec mov leave jecxz mov adc pop sbbb xor sub mov xchg scas inc popf jno sub add loop push lahf mov fild loope lea notb push sbb (bad) int (bad) movsb and or mov jmp mov pusha stc notb cmc xchg pop fmul (bad) mov mov pop add int3 subl scas out or mov test xor cmp into (bad) jns mov (bad) (bad) out xsaveopt mov mov pusha fimull or test mov add adc jge mov cli or out enter xor xchg jb mov xor inc or or mov addr16 sbb mov pop or mov dec pop leave sahf mov loopne and mov dec js (bad) push out (bad) fsubs sub sbb push inc mov daa cmp aam in lock mov cwtl in icebp sub int lcall popa aas lret xchg mov aam pop in cmp stos sub mov dec jp add int daa and inc in lea jbe dec inc jge xchg das outsl inc fucomip fnstsw (bad) hlt repz dec (bad) sbb dec pop in int cmpsb jo sub pop or push test call ljmp mov push sbb stos xor cmpsb xor mov andl (bad) scas lock cmp jo in adc inc scas sti add push cmpsb loop testl dec inc scas xlat insb push mov ss add lahf or icebp mov inc dec sarb add push xor mov cli aas test or mov not cld (bad) and dec jle or sub nop mov (bad) mov mov mov sbb loope aad inc (bad) push mov mov loop add fcoms push mov (bad) push cmp rorl in int pusha hlt mov inc cs pop jge mov add push fmull jl mov repnz mov mov (bad) or dec in push xchg aam add orl mov rorl push and mov push mov push iret mov dec insl out out add loopne mov pop and int popf mov or xchg lds pop (bad) fsubl jae scas mov (bad) mov test shrb and cmp xchg or mov jo pop (bad) push fisttpll jb fmuls addr16 aas int pop fcmovnu mov jns or mov mov jnp mov dec test jb scas ficoml pop decb insl pop je,pn sbb jp mov mov mov shrl push std sbb or jecxz loope loop mov jmp adc cmpsb ret jecxz xchg lds add sti mov xchg mov sahf ffree xchg xor jne push leave imull cltd xchg aad loop les (bad) int jl mov dec insl jge aas push pop arpl inc es xchg shll mov push dec add aas scas arpl mov scas mov mov jns push decb and je sbb add push (bad) jae fisttpll out leave dec xchg movsb imul lret adc or xchg inc pop jmp push add mov and mov mov dec fmuls adc enter xchg mov cmpsb inc add mov and mov pop xchg dec lret sub mov jmp orb scas in outsl aad xchg (bad) mov push call sbb or lea add xchg xchg jns mov xchg lcall addl mov mov pusha jmp (bad) cli push sub in inc clc sbb push scas pop jns in scas in and xchg idivl mov bound fadds out mov stos mov cmp adc jns mov xchg xchg scas mov mov dec mov out xchg fisttpll scas ss lds inc dec mov xchg or inc (bad) test mov mov xchg aaa push pcmpgtd aad mov fmuls sbb xchg repnz and xchg cmp cmp mov and jp xchg adc mov push mov or sub jle mov add mov lret aam popw mov and mov push loopne rorb jmp xlat dec cmc pop jno (bad) mov test or mov hlt out arpl dec inc nop test fs or add mov ret movsb lea (bad) mov repz (bad) in and mov push insb push cmc add fnstenv sti loope (bad) and pushf xchg (bad) or in dec addr16 pop jbe pop mov mov mov aad inc lea je cli cmpsb mov out xchg stos push imul or mov mov mov xchg ss mov cmpsb add sahf cltd xchg fistpl mov ret mov xlat mov add jbe xchg push data16 fdivs pushf xchg movsb xlat mov dec xchg int push cli sub aad in sub pushw push orps sub je clc mov jb push jmp inc ss mov jl add dec push lret rcl repz mov push cmp test mov mov mov mov cmpsb mov outsb scas mov scas je scas mov scas and scas pop fxrstor dec add dec adc rorb scas lea lea lea (bad) lea (bad) in mov imul aam mov mov pushf out mov mov mov adc mov or loope add xor mov adc hlt mov push sbb mov jmp push popf mov cmpl fmuls hlt stc lea in jnp mov mov mov mov mov push ss outsb scas jbe scas add pop adc or push mov mov mov mov mov lods mov xor xchg cmpsl mov ljmp scas in outsb scas push js addr16 dec test test add dec mov mov ds lea mov jmp (bad) ds scas pop data16 sti add ljmp scas mov loope or mov mov xchg sahf xchg adc push jb push adc or mov mov xchg xchg and scas out push icebp scas aas (bad) scas sub scas jb scas fs jbe scas mov scas bound inc xchg lea lea lahf lea lea hlt lea lea lea lea lea rorb xor pop sub sub adc mov xchg mov movsb jge and pop fiadd mov cmp sub je sbb and push push or pop add push mov cmpsb mov das xchg lret mov mov aaa and and mov jle mov unpckhps push pop dec inc sub ret rcrl xchg and hlt aad mov aas pop inc imul push xor pop and mov lea push dec jae xchg stos fldln2 fdivp mov aad or pop jge jg sub jbe aad in dec xchg into (bad) orb pop enter mov adc lods mov dec or mov sarl xchg js cmp mov push es ja xchg xchg push mov push stos xchg popf pop and mov jnp or mov ja cmp jecxz (bad) lock mov jo imul (bad) mov lea adc dec loope cmpsb mov js add (bad) loop mov pop rclb (bad) ffree mov or orl xchg jo xchg inc mov insb cmp lock std mov inc cmpsl sbbl (bad) add loope leave xlat mov mov inc dec inc in xchg xor das sub inc cmpb mov fwait jle xlat sub test ljmp mov daa outsb sahf or (bad) mov sbb jg xchg pop scas jb add push mov orb or mov add mov sbb mov scas setg scas (bad) push xchg xor xchg mov mov xchg mov std xchg (bad) or scas (bad) in test adc mov add mov cmp push add sub or push lahf scas push mov cmp (bad) imul push out orl incb or test mov movsl fwait xchg mov push sub mov sub xor loopne xchg cmc pop (bad) mov ds out sbb les int jmp xchg push xchg mov rorb scas adc (bad) push lret push jnp test dec das iret mov test aad mov popa xor xchg movsb mov mov or mov fistl add xchg (bad) mov lret arpl xchg nop jnp push inc xchg scas xchg enter xorl jge fwait pop sub mov mov jae mov mov repnz dec push mov adc add sub shll mov add ljmp aaa xorb mov dec push push mov leave adc mov ffree jl mov imul ds inc xchg pushf data16 xchg xchg scas add jo mov mov pop cmc mov push jmp push sub sub sbb mov cltd push mov shlb cs adc mov cmp jae cli idivb mov jmp cmp cs push pop mov and gs mov outsb loope mov mov outsl rolb mov mov jb (bad) push int add jmp cmp (bad) nop add mov adc and in lahf jbe dec mov xchg jmp cmpsl cmp mov mov mov repz cmpsl leave fldcw lea xchg push fstl mov loope xor mov jnp xor scas inc dec sub xor mov mov movsb stos dec mov jmp aas ss mov inc fstp pop and pop adc lock nop ja popf cltd icebp push jge int leave outsl xlat and cmp mov mov and mov inc andl push mov pop mov imull cld pop jp mov iret dec (bad) sub mov imul repnz outsb mov lods ret in inc fcmovne xchg mov inc dec jb dec mov lds cmp aam mov sbb mov pop pop mov not lea push (bad) dec sub outsl arpl xor cmpsl outsb mov mov loope xchg lcall outsb addr16 mov (bad) mov in dec adc mov out lods cmp loop setnp mov mov pop push fidivl inc add cmp in mov lea mov add mov inc out cltd gs mov jbe xor mov aaa insb pushf and mov sub test (bad) lds mov rcll fbld dec das dec shrb lret dec mov xchg mov inc aas ret push mov inc aam out mov push pop mov mov lret inc cmp mov xor sbb mov ja test mov int3 je mov in ret or orb enter xchg (bad) mov mov or dec mov jns jl out ljmp add mov jp stc or popl loope arpl ljmp bound inc leave mov xchg inc roll arpl aad lea mov fiaddl mov out rcl jns mov fmuls fistpll sar jb mov out outsb lea (bad) in addr16 push outsb adc sbb shrl jne inc push mov mov popf sub mov sbb or cmp fs (bad) rcll test addr16 cmpsb ljmp xchg inc jmp (bad) mov inc pop idiv mov push dec (bad) push xorl push inc lret cmp (bad) cmp dec push push cmpsb mov lea xchg push mov dec push mov mov xor clc push push xchg or lahf xchg jmp (bad) pop adc jmp xchg xlat pop push xchg in mov xchg mov xchg aad mov mov add mov jno imul mov inc lea mov mov mov inc dec fisubrl xor mov icebp sbb push fidivl scas mov sbbb sbb mov sub jle daa cmp jb cli cmpsb mov rcrl or jnp idiv cli lods sbb xor daa aas add iret add inc pop cmc addl push mov dec ljmp data16 std stos jge ficom mov cmp push jbe push inc mov mov test iret mov or dec imulb test jae mov (bad) mov in add inc test loopne pop int mov in mov in pop mov lea inc push notb decb popl stos je adc std cltd inc mov push repz pop xor hlt ja ret inc (bad) mov mov push fistp dec jl pop mov pop cmp lock add dec mov leave ffreep stos in mov (bad) std pop and and add lods push push inc rorb femms sub push lea fisttp (bad) mov jno call mov pop jg das pop jae push mov inc cmpsl mov fisubr mov outsb nop mov aas mov push dec int3 cmp and (bad) sahf and mov jge xorb and push sarl mov ss add arpl fisttpll push or icebp iret pop in pop mov fnsave sub xlat cli mov outsl pop jno xchg mov mov adc leave inc mov pop or pop push hlt loop pop les stos inc fsubrp adc xor xor or sub loop jnp xchg mov xor jp push inc cmpsl in xchg xchg push mov cmp into int mov xchg jae mov fnsave or cmp mov dec mov mov mov push bnd out mov mov xchg mov cli mov mov jp mov xchg dec mov ds xor lds das jbe mov cmp xchg xchg lods fwait push cmp xchg jecxz into aaa or jbe mov dec mov pop push mov aas inc inc mov cmp mov xchg (bad) push pop mov out pop dec mov scas fnstcw inc or mov jle stc fstps jmp mov or sub dec scas dec push lea jo stos mov out mov jp lcall lea mov jae int jmp mov inc or xchg incb adc cmp orps pop xor xchg sbb cmc inc add pop rorb leave mov xchg pop and loopew adc mov adc aad stos stc add mov fstps pop mov jge lret xchg xchg mov bswap lea addr16 adc lahf int inc mov mov add mov inc or mov push mov sub loop je arpl out ja sub xchg scas (bad) mov adc cmp adcl rcr xchg in push mov pop mov cmp pop mov jnp cmc das push mov ds (bad) in test fildl cmpsl int and jge pop push pop or mov arpl jo testb or outsl arpl xchg scas mov data16 sbb cwtl mov jbe jno (bad) dec mov add ds addr16 ret int mov mov mov push leave sbb mov clc add xor jle jnp sbb sub imul cs mov cmpsb js int aas dec nop inc inc push mov jle out lea xor and mov pop ss fstp movsl popf push mov add ficomp mov jnp out jp int sub mov icebp xchg cmp xchg iret cs es in scas lea sub iret or insb test icebp (bad) int xchg inc fstps mov mov push cmpsl xchg jbe cmp dec push outsb push cli push mov or sbb rorb jge es push mov cmp push outsb imul adc (bad) scas shll lds or fnstenv ffreep mov jle xor or pop push mov pop in fmull scas pop cmp xor stc sbb das out pop (bad) ljmp fldl stos mov movsl rcrb push in mov lcall mov xchg lds mov btc fldt mov pop fnstsw mov xchg sbb mov sbb out xchg in in jmp mov ret mov xchg adc test fisttpll shr out sub jae ds xchg scas mov (bad) jp jne ror loope mov adc pushf sbb in shl mov cmp jmp (bad) sahf stos lods push mov add mov frstor cmpsl pop mov xor (bad) dec clc sbb outsb aad mov mov imul jae xchg int stc xlat xchg mov xor mov lret mov pop scas push mov dec and cmp mov dec fdivs mov ljmp mov cmp sahf xchg pop ja fldl jp xchg mov fisttp ljmp mov mov mov mov cld jle adc mov movsl jb sbb xchg enter repz mov addr16 loopne inc (bad) xor mov jecxz dec stos lret cltd scas mov mov mov or adc push test jb mov xchg push pop mov not clc and fmuls scas sbb mov dec fnstenv jmp push pop int or mov and and xchg mov aas xor out loope (bad) in ds pop mov mov (bad) fnstsw scas gs sub cmpb scas scas js pop nop sbb jae dec mov mov cmc in test les ss jp push lds mov (bad) imul jno les xor pusha bound mov in mov lcall mov pop cmc xchg (bad) lds mov in fcomip mov sbb inc jmp cmp lock dec add dec movsl mov pusha scas aam xchg ja inc out lret out mov (bad) iret loope cmp or in (bad) mov push fisttpll xor gs cmc cli mov push (bad) mov and mov idiv mov scas and or xchg sub aaa dec mov jl or cld mov scas ficomp inc dec xor aaa int loope mov push addr16 inc jno xor outsb xorl pushf jns shl mov jle and mov std pop pop push xchg inc aad xchg fisttpll scas sahf mov sbb lret shlb mov mov adcl fisubr aaa lret adc int lods lahf fsubr cmc or mov add in (bad) (bad) cmp scas adc pop loope jbe mov ja call pop ds mov stos lret mov push mov sbb popf xchg scas adc into push dec leave sub mov outsb repz sub or mov ret lcall in mov mov sahf es sbb icebp push mov mov addr16 data16 in jge repnz je mov xchg jp mov mov roll or xchg xchg push insl out rorb outsl cs mov mov stos and add mov adc mov push jl xchg inc in push and and aas xor pop cs inc (bad) mov add es and push fst xor pop (bad) pop stos xchg je rorl jb jg imul pop push scas push fcomps or std test repnz mov jle mov int cmpsb and (bad) mov iret jno leave ficompl inc inc pop mov movsl repz outsb out popf push pusha stc push lds cmpsl leave sub pop xor out mov mov into cmpsb cltd inc xor sbb cs aad mov das xchg rorl lea inc push daa xchg cwtl subl js loope (bad) cs mov add fwait (bad) xchg sarl rorl pop dec decl sub outsb (bad) arpl mov pop mov (bad) mov in mov call sub mov xchg mov aaa push mov cmp jb pop inc inc lahf inc shr mov sub dec inc scas hlt mov mov js xlat mov jecxz cmp repz aam in xchg negb xchg mov dec sahf push mov add enter ja std push sbb mov mov (bad) or dec mov push xchg pop and mov stos adc mov jl aad inc add mov dec pop scas pop adc inc xchg int std idivl jbe mov xchg cli popa mov jge cmp sub xlat push sahf push and pop orl pop lcall xorps (bad) xlat ds int pop mov repnz sbb xchg jmp vmovq mov sub outsb push mov addr16 outsl sbb inc ror scas cwtl pop test mov pop pop xchg mov mov insb loope stc movsl inc mov inc mov xchg cltd pop mov sub shll das xorl (bad) mov mov (bad) cmp (bad) cld push fistpl push bound cmpsb popf mov insl pushf mov shrl das pop lods loope outsb loope xlat fs cmp scas xchg outsl (bad) mov push in loope (bad) outsb test sbb push outsb orb in (bad) mov jnp sti das imul and sub jge,pt mov xor arpl inc daa outsl jp mov das dec mov repnz mov cmp int sar lea ret sbb test je push inc push sbb in (bad) cmp dec xchg or sub std repz push mov inc mov mov cli push aaa pop xor out mov cmp xchg and mov mov fsubs push adc and ret pop xchg push ja jnp mov cmpsb or sbb out dec dec adc mov les in das sbb cli imul paddw std dec sti int mov add pop imul mov mov cld out loopne cmpsl sub mov popf mov lds add push scas mov mov xchg inc rol sahf scas mov test push jmp aad xchg sbb inc ficom scas jnp loope test sbb add inc dec adc pop xchg mov or jae dec dec ja inc sub mov push pop mov and fs aas scas push out nop xor mov push and ljmp leave femms sub loop ret jbe pop dec mov ljmp and jecxz pop decb andb stos or int aaa popf mov pushw iret xchg push push push jb lret push lds std mov sbb (bad) std aas int3 cli xchg clc cs jnp lahf push ds enter in sub rorb pop push cmp push adc lahf faddl mov cmpsl sbb inc mov shrb jae fisttpl (bad) (bad) xchg fs fcmovbe test cld xchg xor mov inc xor mov dec xchg cmpsb mov sahf mov addr16 push sbb mov adc jg xor jbe mov insl lret shlb sbb (bad) sub lahf cs nop cmp pop mov mov bound sub or (bad) lea gs cli lods scas (bad) mov xchg sbb adc ds mov ss xchg mov xchg or jbe test mov dec stc xchg test mov push rep sbb mov jp mov adc out mov jecxz mov clc notb (bad) movsb jbe lret push mov icebp lahf in sbbb cld xchg iret stos imul cmp mov outsb push mov mov mov sbb cmp mov xchg cltd push mov mov f2xm1 dec mov jl gs mov decb cli xlat xchg sbb push pop lods adc push pusha pop addr16 test mov jg out fstl data16 cmp xchg xor (bad) in loope inc cmp ds mov and int jns mov addr16 mov mov gs sbb mov push fnsave orb and mov cltd jg mov hlt ljmp in (bad) xchg xchg push lods dec enter jne jle jp pop ficoml pop cmp in (bad) lock push mov mov divl xorb aam mov icebp push mov mov sbb push out dec xchg shrl rolb fadds test xor mov mov pop bound mov pop mov adc gs mov mov cwtl adc push les fsub pop adc jns mov mov repz xchg adc add mov mov mov movsb fidivr dec mov jle inc mov fld ja pop dec inc (bad) mov addr16 mov sbb jbe int mov xchg mov lods nop pop sbb sub outsl pushaw mov jmp lock in inc inc (bad) dec (bad) fisttpll insb shll nop cmpsl jp add clc jns mov orl out fisttpll test jo hlt sti mov fwait pop leave fldenv movsl and adc xchg into mov push pusha stos mov rcr test mov pop cmpsb jp jmp mov in aas test je xchg dec inc mov adc push mov sbb rorl add mov lods int sbb mov mov mov xchg dec mov pop inc outsb dec bound fldenv mov push push sub (bad) xlat aam rorl mov pop xlat sbb pop mov mov xor add push mov pop shrl and in in cmc xchg sbb aaa jb sahf fimul insl lahf dec jns daa mov lcall (bad) fiadd push xor adcl cld add adc outsb push loop clc scas mov lret aam lret (bad) mov scas jns inc fwait xor sub cli (bad) mov data16 popf adc xor mov mov imul mov out jmp stos dec mov repnz xchg ds dec mov xchg push mov mov add inc sbb fmuls mov add xor mov add jae and xor jne inc push leave mov dec loop pop movsl fildl notl dec mov addl pop test jmp dec sbb add jle scas imul or (bad) out scas push xor mov inc dec jae into pop adc daa int and pop pop mov out push push dec add aaa or int andl xchg clc inc in cmp lcall and xlat (bad) mov jle push int insl add mov pusha mov fwait jg fisttpll adc fisubrl hlt in test repnz push mov mov xchg pop sub jmp lea outsb shlb repz (bad) hlt (bad) mov mov push clc push mov std fimull mov push imul mov inc jmp push gs inc mov lahf sub imul sbb in addr16 mov mov sub add xchg cmp mov cmp test bound enter mov mov lea int mov inc mov (bad) inc mov mov pop aam dec mov jo jb and dec movsl fild mov xchg mov scas cmpsb dec push iret mov aam pop add push cld rcrl mov jnp fisttpl xchg and inc xchg jge es mov pusha xchg insb pop push jno popa cmp mov stos pop fwait jns push movsb lods outsb jg adc aad sub push test pop cmpsb xor das mov cmp and aas mov fwait arpl mov scas scas pop test outsb imul scas inc inc mov or (bad) mov push push mov lahf cmp mov lcall dec mov xchg lahf (bad) data16 ds je pop cmp jbe add mov hlt mov (bad) insl jecxz out mov mov mov dec pop inc or or pop dec push aas mov scas loope sarl lock std mov cmc jmp push fldl call sahf lret (bad) add scas mov out lods push xchg dec sbb cmpsb mov lahf dec cmpsl std mov mov cmc inc int mov in in push out fimul sub jle dec roll aad pop aam in push and aas inc mov cmpsb mov sahf adc in (bad) mov ds ss mov lods es cs fsubrl mov icebp es cs aad pop push in fldl mov dec push xchg pop push mov pusha lock or inc pop mov push inc test (bad) outsb jecxz (bad) int push mov inc dec jle data16 outsb mov add int mov aad std mov cmc lret cmp aad mov dec xlat jbe mov mov jnp mov cmp xchg scas mov test mov lds mov outsb cwtl xchg mov std mov pusha jle cmp nop in in stos (bad) mov jnp imul movsb xor push sti mov ds xlat push ret jle jbe out scas sub lds mov mov push push lahf push test aas pop mov push or jle es cs rcrl mov mov jmp jbe dec in push mov mov push cwtl inc ss dec jbe dec mov mov cmpsb outsb in std fldl mov dec add jle cmp push pop mov pop push mov scas pop cmpb xchg sbb adc jne mov adc mov jbe mov dec rorl push xchg or insb mov nop subb jb inc std dec inc mov mov mov mov nop xchg xchg popa mov std arpl inc mov mov mov lods in nop in jmp out outsb or je stos jb es sahf subb ret rolb sbb mov push stc jle jbe scas mov cmpsb icebp sahf lds mov ss sub mov stos push mov push xchg push or sbb or mov movsb mov inc mov mov dec fnsave push outsl push inc ss jle xorb mov cmpsl adc and call dec test inc mov mov pop push push pop fisttpll xor jno mov out cmc sahf jbe lea repz cli inc decl add mov mov cmpsb scas pop mov add xchg mov scas mov mov jg cmp mov xorb pop mov and pop push in xchg sub push mov dec stos pop cwtl fldt mov xchg repnz add mov insl mov push jle imul lea push jmp pushf jle inc add jnp jg adc mov sub xor cmp push sbb cmp add pop xor mov mov imul mov and in push push dec mov inc mov cld inc pop sti ss in adc sub lret adcb xor push mov ret xchg loop push xchg les mov xor add or push mov ret cltd cli fs mov std je es adc daa ss or call lods cld push in into inc or stos aas repz ret icebp dec cmp mov in (bad) mov push enter fwait adc adc or xor (bad) (bad) mov icebp stc xchg add xchg mov xchg sub pop xchg mov jnp outsl add cmp mov test ret pop stos xchg loope mov cmp mov jge orl dec inc add cmp das xchg and sub push lock in push adc or mov data16 push jno cwtl dec movsb inc pop nop mov adc dec (bad) dec ret push divl mov jle je sub pop cmp pop mov lahf imul gs pop push push fwait or mov scas or out mov out pop outsb scas enter popa (bad) xchg pop out lret test or jle repz aas xchg mov push sbb movsl int3 xor lods pop xchg mov cmp pop add mov push rorb (bad) cmc jl or sub cmp mov push mov sbb adc nop (bad) pop mov mov das push mov sti xchg xchg mov push xor pop cmp insb mov mov out cltd xchg adc inc pushf stc pusha push lods scas xchg mov sub mov sub and xchg dec jp (bad) push mov pop lods imul mov in push nop mov xor bound add shr sub mov add and mov lds fisttpl xchg pop (bad) sahf scas mov and or sub mov (bad) pop adc hlt out mov sti scas lods push fs in inc xchg mov xor sbb jne lea fnop call pop xchg loopne repnz xchg sbb cmp adc iret pop jnp out int sub shlb fidivr mov stc enter shrb in inc pop mov mov stos mov scas movsb in cmp mov mov xor dec aam dec mov mov das cmpsb and orl mov mov insl adc daa mov das xorb aas out sub sbb sbb xchg dec jmp wrmsr cmp push mov jl cwtl (bad) push jbe jg imul ds lret inc cwtl push test jo inc inc inc orb or cmp in xchg push jns jmp mov xor (bad) push mov jnp gs rorb (bad) hlt or rcl in jecxz cs loop nop rolb pop int jb std sub mov add dec loop popf je icebp jb jno call in adc add sub sbb or jle fstpt mov ja mov jae adc pop dec dec out jno mov in inc or mov std ja (bad) insl lea mov int js imul xchg xlat int jne inc xor mov jae imul mov in push in fsubs int sahf cmp and or fisttpl pusha les adc dec sahf fadds (bad) mov xchg mov jl frstor loop mov cmp xor test test xlat push addb xorl pop aad xlat bound das mov xor imull (bad) call ret cltd rorb pushf xor mov cld in jb dec (bad) mov insl aas mov test push pop fwait and dec shr jecxz xor ds icebp push mov imul loop lea push in dec cmp test insl mov pop fwait scas mov mov lret sbbl data16 pop pop push fs bound je stos ljmp mov les jp push (bad) fwait test mov cmc dec rorl push rcrl mov loopne add xor pop sbb imul (bad) ds push xor mov inc dec pop popa ja arpl ss mov pop roll cwtl dec pop mov jb cld andl or adc andb xchg add mov mov adc (bad) cmp out jbe shrb call sahf repz push or dec into mov mov bswap push jnp aam decl push arpl mov std repnz ret pop int mov cltd (bad) (bad) rorl loope adc mov xor mov (bad) mov push mov (bad) cmp mov popf inc aas dec mov adc mov enter cmpsb mov mov dec fcoml cmp imul (bad) sti cmpsb mov dec or mov mov insl fistpll xor rcrb pop mov jge push out mov mov cmpsl sti rol mov add jb and mov sbb addb dec in push lds cmp mov adc mov aam dec es rorl nop mov sbb fiaddl push ffreep mov insl push pusha in dec xor aam (bad) incl mov sarl mov mov sbb xchg jle pop pop and fwait push aad (bad) xor xor insl iret fimul sbb loope incl stc cs mov ja jns inc adc xchg xchg jae arpl mov imul mov mov xlat mov jbe mov pop mov ror int nop adc outsl mov xchg xchg lcall push mov imul mov cli sub sti int push or mov mov mov (bad) pop js jb push push scas push mov das pop setl pop jae or jp inc xchg mov inc inc sub cltd sub mov mov mov lahf sahf mov movsb leave jo push jp cmc mov cld cmp cmp shll scas fmulp icebp lea jl push fsts push lds in cmp cmp and or mov popa in sub mov rclb mov cld and push cmp push fwait sub xor jb icebp popf jbe adc jp scas mov movsl dec int inc adc mov mov into mov and lea lods jg mov loop xor jns cmc (bad) stc mov jmp mov (bad) sbb add and xlat dec mulb push sub adc rcpps mov sbb xchg jmp aaa pop jns cmc dec mov xchg popa into bound (bad) idiv hlt sbb xchg lock clc cmp add out mov jnp (bad) cli cmp loope ret arpl test lods inc mov fisubrl out (bad) mov inc mov (bad) int3 xchg or mov negb dec fcmovnb pop std cltd rorl cmp addb test fisttpll cmp pop mov idiv sarl mov xchg jp xchg dec push mov mov adc hlt lret (bad) in or adc idiv push xchg roll push fsubl push mov fldt push mov sub mov jae rorl mov mov enter mov dec push mov pop dec addr16 sub test lahf enter push mov push les popa sub popf or add adc and ljmp jae mov js push test jg mov cld test mov adc jno jne jge inc scas pop push pop sub rcrl mov out pop int scas mov sub and mov cmp push (bad) mov aas add fsubrp cmovp cmp in xchg aaa lods mov cmc aas sti (bad) cld in incl inc dec insl cmp insl loopne sub sbb xlat xor mov fist push fildll mov stc push add xor dec sarb cmp mov push mov fcmovnb clc push cld (bad) leave orl int3 test pop xchg bound in xchg mov out (bad) mov mov popa push mov jb and adc mov insl in das jmp clc adc or mov inc das dec mov push out pop mov dec push mov cmpsb (bad) cwtl mov popa fiadd mov dec out push fwait mov pop pop push push ja inc jae ljmp repnz into or loope mov pop or dec sbb pop xorl cld xor imul jae jo or testl cmp and (bad) iret pop jno jne test push push lds dec xor cmp adc (bad) outsb lods inc mov lret aas jb (bad) in bound or inc xchg jne sub cmpsb cs mov cmp mov lods int push jp mov gs push xchg or and or pop adc scas mov jbe jnp in fistpl scas or rolb mov mov movsl cmp xchg pop gs int cmpb or xchg mov mov or int3 dec shrb (bad) mov mov les mov sub cltd xor out ja,pt in sbb push scas jne int mov mov pop cmp inc mov jbe pop mov jp clc jmp mov push out mov insl idivl mov dec leave js push sbb int mov sbb mov push dec shll (bad) decb or mov adc and jge jle call int cmpsl test mov nop mov xchg mov das adc sbb stos push cmpsb lea mov xchg and mov mov xchg je js dec inc xchg mov aad cmp cmp pop ljmp mov cmp loope mov inc into out repnz lea outsb or fwait test mov mov mov push ret bnd mov inc xchg cmpb je inc sub pop mov cmovno lret push sahf test sahf mov mov push (bad) outsb fisubrl xor fcom into jecxz ret mov mov mov jl inc into add xchg mov ret aad pop mov lock rorb sub sub cs and push je pop outsl and aas addr16 push int aaa leave ljmp mov mov insl pushl js inc mov insb mov mov mov mov push mov mov mov jo push fcompl xchg cwtl xlat loope (bad) mov psllw rcrb gs lahf iret fisubrl mov in mov add out sub mov xchg dec or scas fnsave test xchg test jle in pusha xchg jecxz mov xchg cmp movsl and mov into iret jnp xor (bad) das insl dec dec xchg das in dec mov les cwtl int3 sahf sub out cmp mov push mov adc call lcall fstl cmp int xchg sub loope (bad) sbb and mov sub xchg loope ds mov test inc js sub out mov inc negb mov frstor rorl in mov pop ljmp and stc mov ss adc subl xchg outsl jb pop imul cmp jbe mov adc push jno lret xor pop pop (bad) rorb inc adc scas repz mov xor mov out mov scas fcoms je xchg pop jmp cld push push or aaa ret sbb pop les xchg movsb lods sti mov jb mov dec imul mov pop fisttpll fbstp sbb mov (bad) repz into inc hlt std mov pushf or jmp push cmp add outsl aam loop icebp jo push sbb or outsb enter cmp mov pop (bad) push push dec out mov lds (bad) (bad) repz mov xor mov cmpsb xchg pop int3 dec lods scas xchg pop test push mov dec jae sbbl xor lea js inc fstps fstps mov pop pop scas jo and fs rolb pop test mov popa frstor in mov xchg cmp mov repz adc or mov dec jecxz mov jnp pop xorl mov nop in ret cs inc hlt inc (bad) jge lcall mov xor pop push cli lea je xchg std subb stos in xchg aad popa sub or (bad) xchg adc sbb aas mov mov (bad) mov fsubl setae jnp jecxz es sbb dec jmp (bad) std rcr loop lds inc test cmpl ds imul lret les cmc mov inc mov inc (bad) jno pop xchg lahf mov and nop xlat cwtl sub lds xorb push ret insb push dec (bad) mov iret push dec push mov movsb test inc (bad) fcoms push icebp or in movsl add stc cmc mov mov dec mov push lods in (bad) adc xchg pop sbb das jle fdivl push xchg es mov pusha cld mov mov ret in or pop es mov cs cmp out adc or add les sbb dec fiaddl lock scas push mov cmp stc arpl jmp stos int or in dec push mov mov clc adc pop (bad) cmc fisttpll push add cwtl xor push insb movsl mov out movsb test in inc jmp mov mov push jg pop add sbb add mov lcall mov dec mov mov mov lret scas mov sbb push mov add fistpll jmp sbb fidiv cmpl mov sahf movb dec and xlat mov std mov repz in incl ds aaa mov mov insb cmp xor lods (bad) mov sbb jmp pop cmpsb push adc mov xor (bad) sub dec aad add fld test jle cmpsb fdivrl cwtl mov pop mov cmc inc sarb inc sbb xor cmpl lock mov push in pop cmc insl dec mov jbe pop sub add rcl mov jmp in lods std mov mov outsl sti out and mov fucomp ljmp mov loopne rcrb cmp out fsub (bad) hlt les xchg test xchg cmp sub mov add push mov in (bad) fs fmull mov xchg and fdivrp shr cmp out pop mov xlat dec xchg lods inc movsb mov inc rcrb mov pop or cmpsl adc mov mov fidivr push les stos test dec pop bound jmp mov adc mov cs inc jns lcall insl or lea es and iret push cmp mov pop lret out mov or add call addl dec dec pop das inc mov je adc call mov pop insb dec mov add jb mov mov ret pop adc js bound lret loop leave jnp xchg cmpsb enter push in scas mov addb adc cli cld mov flds ja add inc xlat jle in push mov jbe imul or pop mov mov pop test mov dec and mov or xlat mov cmp sub fmull mov cld jb pop xchg sti push mov xchg push and push cltd push and lods lcall xchg mov jne cmpsb mov mov jo jmp add push popf insb mov pop leave psubw xor push push rorb (bad) sub out loope call ds mov push jle int int dec test push mov (bad) mov push add mov jp loope jo pop mov ret fisttpl cmp fild mov adc in lods stos ljmp xchg mov pushf arpl mov xor test mov ror mov aas hlt repz mov mov ret mov dec cwtl adc xchg push and jp rcl xchg dec push inc insl outsb xchg xchg mov and dec fs cmp mov mov pop iret mov push inc adc dec popa sub orl scas cli jecxz and mov shr or xorb aaa mov mov sahf jne xchg out mov jmp xchg mov xchg inc imul je sub int push decb mov xchg push xchg fstl outsl xor mov in fldcw adc in jmp pop cmovno inc push roll dec out or xor mov aas out loope inc (bad) outsb rorl mov and and pop scas repnz dec rorb jg pusha mov imul ds ret or loopne roll rorl xchg mov mov push insb mov push mov xlat stos mov adcb sbb cs push outsb jbe add sahf jbe jle mov movl pop insl lcall ja mov add mov or add (bad) (bad) lock das (bad) enter add jns mov test inc dec inc jb push out mov pop adc lret icebp jg mov orl stos lea push sbb ret jne push jo fs jl scas mov pop pop arpl mov mov push xlat in das cmp xor mov mov mov dec xlat inc and ljmp in dec in mov std jnp mov cmp and in dec mov inc push jl lea je add mov and int addr16 fildll pushf inc pop xchg ds adc dec insl imul decb out lds inc mov sub lock inc mov pop aaa xchg iret inc xchg jmp out push scas mov cmpsl mov ja dec xor mov cmp leave xchg (bad) (bad) xor stos es rorb test xchg mov in sbb sbb jg jnp stos mov stos inc pop fwait push or jo dec in movsl movsb adc jle xor mov mov repz cmc mov dec cld (bad) mov (bad) fincstp jge dec mov inc jmp subl fisttpll jmp cmpsb nop out rorb sbb rclb xor aaa lock bound dec push xchg jne xchg mov push stos ja aaa add mov iret pop fwait (bad) xor ds nop xor test push xor cwtl les nop adc sbb or jne leave dec push push imul jb pop sarl pop mov (bad) push mov insl push dec cs aam xchg sbb adc lock adc cmc ret repnz sub addr16 xchg inc pop lret mov andb mov call mov jge scas lods cmpsl inc inc mov sub mov mov mov mov dec lahf popa pop (bad) in (bad) out xchg cmp fdivrl mov das ljmp iret xchg loop push cwtl clc xchg in jmp jge jbe std out cmc fldcw (bad) xor jmp mov cltd ds lret dec jle (bad) and sbb mov xor mov cwtl lret jmp ja repz sbb adc lds aaa ja (bad) jbe subl jb push dec (bad) push xor das jbe mov pop mov mov outsb inc inc dec dec jbe int es mov das lcall mov inc movsl mov lods mov mov mov push push push aad adc nop jmp dec rdmsr sbb cmp and xor cmp add mov mov mov or adc (bad) ds lds lahf mov inc inc mov sbbl addl xchg jle pusha scas xchg jae inc mov testl (bad) cmc sbb mov add in (bad) hlt repnz mov mov sbb (bad) push jne mov inc loop sbb xor ret lret fadd out fstl add mov mov pop divl (bad) jb mov lret mov dec loop movsl push push insb jbe mov das les out xor mov ds xchg inc dec push and mov cs dec in cwtl lret mov std mov mov mov jbe lret push jb daa mov pop leave inc xchg inc rorl push mov sbb fimul lock cmc xor xor inc dec iret mov into xchg (bad) pop mov int inc adc loope adc jne xor outsb mov adc mov mov pushf (bad) dec movsb pop pop in mov mov fisttpll stos loope mov adc cmp sti sub outsb fwait mov int3 add decl outsl sub lcall fwait in je mov pop jne test mov or notb jb mov mov xor and clc mov decl pop mov loope out lahf mov mov es mov mov ret inc stos mov lock adc push mov push lods mov das es dec loopne in xorl repnz mov jmp gs cs inc arpl sbb add adc (bad) icebp xchg int3 stc mov data16 rcrl lea movsb (bad) fldcw jl inc fs mov nop adc push (bad) sahf faddl out inc xchg lea xchg std sarl sub iret cmpl inc cmpsb dec pop arpl (bad) inc pop xchg or and mov and mov std pusha imull inc rcr xchg jmp ret rcr cli out scas loopne rcrl push mov sub add (bad) push sar outsl mov jnp mov push (bad) notl sub or sub push les adc xchg jns in pop scas mov test add popf fcompl scas test pop adc pop push add push jecxz aad inc pushf jp pop mov int roll insb adc mov test scas iret or xorl adc cmp imul push fnstsw (bad) push mov movsb inc shlb outsb fcmovb sub imul nop je les negb lds (bad) xchg lret icebp xchg das (bad) pop cwtl mov loop addb push pop push push cltd dec iret mov loopne aad lret mov in dec and mov mov push sbb mov lds xor pusha xchg push mov cmp mov movsl aad call sub or mov (bad) mov stos inc push mov cmp xchg into add sbb adc mov jne out fwait xchg inc xor into mov inc ljmp out and flds cltd mov repnz mov outsb aam mov push cmp lock or (bad) rorl inc (bad) out pop mov adc sub std insl mov and jle dec inc test in jno and xor stc or jns repz sub xchg cmp imul aad xorb xor (bad) sbb (bad) mov mov (bad) dec inc int iret push fstl (bad) jmp or (bad) in leave (bad) out fwait das mov jl inc int3 mov ret and sub add push mov mov (bad) shrb and or outsb adc (bad) fdivr cmc lret call loope mov je mov outsb inc test cmc movb (bad) pop or mov dec outsb pop pop popa xor pop xlat jl xchg nop cmpb mov jne push aad iret inc mov pop sub sbb push mov adc cmp and mov xchg dec mov push rolb mov arpl or mov (bad) mov mov andb pop popl push mov adc add push or iret jb cld lahf shrl scas lods dec aaa int xchg and dec jmp mov push and mov dec or fs lea dec mov jnp sub pushf (bad) int (bad) push jno mov or pop (bad) lea lock xchg popa mov dec out lret jmp mov js adc cmp rorb sti rcr lcall out xor in mov jns and insl (bad) rcll lods jmp iret fcom inc test inc ljmp (bad) mov lahf (bad) insl mov vpunpckldq cmp subl xchg mov mov sarb ficompl pusha or adc push xor out data16 popa push test inc mov pop fsubr jmp lea imul loope pop mov mov lret and pop sarb nop xchg adc (bad) (bad) fldl pop insb pop insl fldcw popa (bad) shll shrl pop adc jle mov push rclb sbbl inc (bad) icebp gs pop fldl mov addl cld push pop out inc sub cltd add lcall mov loop std inc and test xchg js jo inc mov scas dec and push leave ret fisub into hlt jb inc mov pusha jecxz xchg cli and push dec adcb fnsave outsb lret cmp pop flds mov cmp icebp popa push and insb clc imul jg xor sbbl jl mov cmpsl clc push dec push pushf pusha push inc sbbb out clc jg lods push rcr popf sahf pop xchg stc mov insl jecxz aas and mov push xchg hlt mov (bad) lcall jae xchg nop fwait jp xchg sub rorb (bad) pop inc aad (bad) pop lods cmpsb inc add decl push cmp test insl insb adc js pop jbe hlt dec stos sbb mov cmp mov inc fcompl in fwait jle xor faddp cmp insb mov enter test rcll cli or add pop out xor lahf pop jno push popa adcb test pop adc xchg addl loope inc loop xchg adc dec imul fwait pop imul mov mov sbb mov jg add push push std rcr and bound or adc mov adc xchg insl pop cld push dec push cmpsb dec sbb roll xor fidivrl lock push mov pop mov dec mov int aaa mov and xchg mov gs insb pop and mov arpl sbbl insl mov fs (bad) imul sahf jb dec adc cmpsb xchg and fist cmp inc xor adc int mov inc xor pop pop lods dec ja lret subl icebp mov mov xchg fchs fist shrb jb push sti xchg jmp movsl adc (bad) (bad) div fldenv sbb div push in je xlat gs mov jmp mov xchg sahf mov ds and pop cmp ja mov rcll jl jnp js aam xchg pop cmpsl pop jb jg (bad) mov cmpsb xor mov jl outsb jmp in xor mov stc xchg or xor mov adc and push mov repz inc scas push loop inc and out inc push jle repnz loop and mov nop pusha adc mov jl xor fwait push pushf dec push insb pop or cli jge and dec fmull mov and mov cmp adc adc rclb pushf mov cmp lcall mov aam push mov lods jmp ret add insl imul mov pop fldl2t sbb mov mov movsl mov icebp outsl mov pop pop inc pop dec jbe pop push pop xor inc mov cmp jmp mov jbe jnp cld mov stos pop shll std jbe jae por insl xorl mov push xor jne cwtl push mov popa mov sub jge stc sbbl stc fsubrs lahf lcall jge mov shrb pop jne lea or bound push or push inc xor imul mulb ss dec jno mov push sbb mov mov insb (bad) (bad) addr16 mov mov push pop fsubrs leave or pause (bad) add mov or scas lods mov dec in (bad) negl outsl jmp dec test pop mov pop push std cmpsb add xchg add xor mov or xchg (bad) lods pop stc adc fdivr mov stos pusha sbb mulb in sbb cmp dec cmpsb xchg (bad) scas mov addb mov push loop mov xchg xor push (bad) mov cmp outsl mov cmpsb insb fwait inc hlt cmp in (bad) pop xchg test iret mov lea out cmp mov mov int mov mov inc lea dec loop mov sbb cmp pop ljmp sbb inc and mov bound ds (bad) xchg mov ss aaa xchg mov mov test lea xchg inc pop mov bound jl mov lods lcall insb mov xchg scas in fisttp lds cmp push fcmovnu mov xchg mov jle cmpsb mov push aam mov cmp xchg lods scas js push scas push in cmp mov lea xor movsl pushf scas xor push ss mov movsl lods sbb push lea lds cmp xchg pop ds mov add jle jo stos adc lret xchg mov cmp xor lods xor stos pop xor bound add dec in lds scas mov aaa ljmp cmp xor mov aaa in push mov push cmp pop xor mov inc jmp or es aas push mov pop mov test lods int xor or sub xchg insb xchg jge ss jp cmp xchg add ror sub jmp dec fnstenv mov mov scas xor lea (bad) insb jge xor inc sbb mov push fldenv stos sbb sub cmp xchg enter outsb movsl in inc pop jge dec xor leave test stc lds mov fstpl sub push jge xor sub test pushf stos mov stos xchg test sarl out push sub aam sub fwait jp stos jne mov int add dec pop xchg push dec cmp insb dec jge xor test fstpl dec in out cmp (bad) push lods insb test mov cs xor mov lods cmc dec int lcall mov ja adc xchg sub mov cmc (bad) bound mov mov mov ds mov inc adc mov outsl mov dec sarb (bad) (bad) xor mov jg pop inc cmpl stos test enter inc (bad) pushf jle mov mov adc rep or ljmp and hlt fnstcw sub and shrl loop imul mov push pop dec jl mov dec mov out lahf mov adc aam scas or dec int pop loopne dec insb mov xchg mov mov jb lret into mov repz inc add mov adc add sub test lahf in add lea leave inc ficomp mov mov add mov xchg loope add push mov xchg or lock enter mov sub jno dec mov dec rclb jbe sbb xchg lret mov outsl and sub cmp test fs pusha push mov inc es testb jge add iret test lcall pop lea in sbb mov add cmpsb hlt push adcl adcl loop mov nop mov fcomi enter data16 std and (bad) fisubrl cs fcomps dec inc jno scas fnstcw adc rcll test flds movsb mov fsts loope mov push pop jns mov mov ds or pop mov mov (bad) pop add pop dec mov jg lret mov (bad) fadd scas mov shlb mov testl pop xchg xor mov sbb sbb mov cmp dec (bad) cmp movsl cmp mov push fwait ss sub cld xchg jmp nop inc leave stos stc jmp ret xchg mov mov jle cli gs es mov mov push test inc dec bound cmpsb add jae test jbe insl std scas leave sub fbld xor mov or inc ds sbb mov in xlat cli xchg sahf data16 mov rolb xorb push cmp xor fldenv push push mov rorl mov fnstenv mov or or mov add xchg or addb xchg sub mov movsl stc mov lods cmp jbe or push ds xchg dec in cmp mov jmp roll pop adc add fnstsw ret test imul aad add mov lcall inc out jbe cmp push sbb xchg sub int ja in in (bad) (bad) mov js sbb (bad) daa outsl xor je xchg dec pop mov add jmp jo mov sub dec scas jp leave daa (bad) sbb (bad) stc push jb jle cmpsl mov inc sbb add pop xchg and jbe mov dec lods popa jmp jmp push mov leave adc iret aas test lds mov in cmp mov push aas test aas dec mov dec mov imul pop xchg stos and push inc mov mov jb loope xchg xchg push add (bad) lea fstp popa mov mov mov lock lds sub stos stc cmpsb inc sbb jmp scas dec test fstps and leave lret dec mov cmp into test and sbb lcall lcall stos sub lret pushf cmp lods jbe (bad) cmpsb (bad) push push lods mov lret sbb movhps (bad) cmp fsubl jnp lcall mov (bad) fldl xchg mov dec lds pop les jmp fbstp stc inc jbe pop jmp and loope mov inc push mov sub push mov mov mov push lds and push or mov shll mov dec pop aad dec loopne bound adcb cmc scas pop and jnp xchg mov cmp and fisttp or ljmp lods aam xchg test jge outsl xor nop push xchg (bad) jmp push cmp pop fsubrl aad cld jbe fsubs and jle push mov inc add pop enter rclb add insb rcrl data16 scas and jne imul mov mov fdivrl or sbb pop sub cmp lcall mov sub jg lret push sbb jb cmpsb sbb (bad) stos mov lods fnsave sbb sbb int3 mov sbb scas imul xor pushf sbb xchg mov lcall stos sbb inc sbb aam xor stos mov lods enter mov cmp xchg dec push enter jo cmpsb push std aas jmp sbb sbb shl add dec sbb stos add inc mov adc icebp xlat jne lods iret mov jno sbbb xchg mov pop xor jae adc sbb xlat int mov jg xor pop cmc add xor or push inc add mov jp mov mov sbb mov fstl in xchg cltd notl int cld aam mov xchg ret das out mov mov and fistl or ja (bad) jns push jl sub ljmp sub test push mov ss xor cld mov stos ret sub push sub (bad) mov sub ljmp xadd mov arpl cmpsb mov notb jmp (bad) in push cld inc push mov or inc das (bad) fist add test popl imul in sbb stos xchg sbb orl mov dec push mov add movb sbb mov jo pop mov popa stos inc leave das xchg cmp ss fs push inc cmp mov dec xchg dec (bad) adc cmp dec mov (bad) sbb test stos sbb cmp jb add test xor sub push scas add cmp test lret add push mov cs mov mov cmp lods test mov stos stc jo dec sbb add insb inc inc cmp mov push xchg pop mov lret sbb xchg je int3 mov test jbe pusha inc push cmp push int inc std or orb xchg bswap adc es pusha cmp scas mov decl cmp push pusha add dec inc lcall fildll push int lods lds add push jbe inc stos dec inc mov movsb lods (bad) scas fisttpll dec icebp movl pop test cmp test pusha adc cmp and mov pop add pushf inc scas cmp lods in in std add sub cmp or inc mov mov fsts mov push xor jmp push test inc sbb lods cmp jbe dec mov mov sti mov mov je inc lds mov mov movsb test loope sbb scas jb mov ss test add mov pop std jne dec pushf inc test adc jp jle insb scas fiaddl jge test in daa xor push lret jne test mov mov ret mov int3 or mov cmp dec jle roll bound sbb (bad) cmp cmpb dec cmpsb mov mov lods xchg movsb mov pop call test imul inc pop mov mov xchg mov pop stos mov lods mov pop add addl std inc scas pop mov mov roll aaa cmp xchg test mov lods outsb push test fwait mov mov push mov lock push add (bad) mov je mov stos icebp xor mov xor enter mov (bad) cmc (bad) arpl xchg loop push xor mov fsubr adc shll mov inc pusha test jecxz in ftst sbb repz sti cltd mov jae xchg (bad) xor fisubl dec mov push cwtl (bad) into in lret daa mov push test push sahf pushf out lods idiv mov je cmp pop mov loope cli js imul test push inc xchg push xchg (bad) sub hlt outsb rclb aam (bad) mov pop cmc xchg pop or or xchg (bad) add aad and iret inc in cs adc adc jecxz mov stc sub add insb mov jbe mov jl clc pop push mov aad xchg xchg push mov mov call dec subl cwtl xchg shll or (bad) out ja sbb mov and lahf fistl pop push pop hlt push outsl dec sbb std and aaa iret popf mov sub es dec mov xchg ds fnsave into out mov mov imul push jne mov decl push adc jmp or jge in jo,pn pop fsts cmp xor inc or sbbl test sbb sub lea inc out mov daa in dec shlb mov shr sti or ja mov mov and in jmp aaa xchg add or add test mov push cwtl sar (bad) mov out sbb testl pop sub (bad) pop cwtl fild inc mov cs xchg add mov mov mov out push outsl sub mov mov or jl inc into mov int sub xor insl mov xlat in and sbb jb pushl in lds sub shlb mov mov sbb push icebp nop pop mov lds lcall xor lahf int3 xlat negb push mov scas test push pop sub add mov pop (bad) scas mov cld push xchg mov lds dec dec outsb daa cltd mov test ja insb outsb fisttpll push pop xor mov pop inc mov inc popw nop cltd lock jne dec (bad) int3 or mov cmp int3 gs cmp mov cwtl xchg ds fs call pop mov aad or test movsb jl cs jnp fs (bad) mov mov jle aaa imul movsl xchg xchg sbb xor (bad) xor push push adc test sbb jp dec adc cmp mov xor inc mov xchg (bad) and or movsl lea mov fimull xchg and outsl out outsb lods mov sbb jp or and cwtl (bad) (bad) mov cli nop loop push jno mov mov pop rclb scas cli mov mov fwait sarl jnp sub mov aad jbe adc push xchg nop (bad) fldl push push xor mov rorb push mov das sbbl mov test out int jno jnp enter stos popf pushf mov daa lea mov xchg je lret nop imul sub xchg pop mov int leave mov or pop int3 mov int jb je inc sub mov xchg (bad) jae pop stos lea push loope hlt call mov adc shlb lea (bad) xor sbb mov into lock mov mov ret ljmp sbb in ficoml nop out popf stc or mov mov fildl xor jae cs js mov iret jle push pop or into outsb lret ds orl inc sti or loopne mov push mov int outsl mov mov sahf mov rcll add adc lcall mov leave lahf mov mov adc dec mov push outsb xchg lret (bad) in pushf jne lock sbb dec inc push fist rcll mov fmull mov mov sbb loop (bad) mov and popa xlat jecxz sti jb fdivr and add push mov xchg (bad) inc push sbb jb outsb mov xor add cld inc daa movsl push shrb mov fiaddl mov pop lods inc mov add mov shlb push xchg push fiaddl clc push lock push movsl (bad) in insl mov inc cli in mov inc xchg sbb insl (bad) mov dec stos sub jbe mov dec push push mov iret xchg jae xchg out xchg mov cwtl (bad) std sbb mov repnz jecxz cli push mov mov lds insb push add in lea push sti in clc sar adc pop add daa orb mov dec jmp mov ljmp push outsl mov mov sbb dec inc jb push push jecxz ret clc sub sub mov xchg cmp mov je mov mov (bad) cli mov or jg (bad) dec push insb and push xchg or dec pop mov pop ljmp mov dec rcll int3 lds push xor mov inc aad pop dec sub dec test out aam adc inc xor cmp adc mov ss pop mov or or mov outsb fidiv inc (bad) adc or mov nop mov sahf inc cmp adc mov fwait inc call in ret (bad) stos jnp push (bad) dec mov xchg mov nop mov cmp add aas pop xchg idivl mov mov jecxz clc or pushf adc stos push cld test sbb push into cmpsb fwait bound and sbb jnp or aad pop das push cmp sub mov aad xor or and mov push xor cmp push cli ss jl inc fwait in xchg test push lret mov push adc cmp mov and xchg js cmc insl mov jg pop fistpl pop mov push ret lahf mov dec cmp stos fstl shl or lods fsubs dec mov cmp rclb int int mov xchg and int mov xchg mov pop pop push xor mov jnp mov movsl xor adc mov xchg xor frstor mov aas xor cmp mov push mov (bad) sub icebp push ret pop jmp pop gs jle cmc xor mov jae es jno scas jle daa divl inc cmpl mov mov stc test cmpsb push mov pop int mov xor sahf outsl mov inc mov mov outsb sar daa jg (bad) push or or lds fisttpll loopne push dec cld aad es sbb jle adc aas dec dec sub or popf fdivl mov (bad) ss scas in (bad) mov icebp cmp (bad) mov inc cmc sbb cld shrl pop and (bad) push adc jne cmp mov dec pop add mov fbstp int add out or dec cmpsb mov pop idivb cs xchg xchg mov jecxz jg fstl std inc xor push ja mov ror cmc aam into mov loope sub adc inc in push and (bad) mov push ja notl mov out fidivrl mov stc and or cltd xchg push mov jne xchg push ret (bad) mov xchg pop push in dec mov mov xchg js call mov outsb aad adc inc iret mov mov xor cmp dec mov movsl roll in push arpl sahf pop hlt fldl inc mov lahf add cltd fwait cmpsl iret push mov push lds imul cmp xchg push push mov ret sub xchg sub mov or pusha or ljmp (bad) pop lcall fstpl rolb pop xor inc leave sub xchg inc mov mov sub mov add and push clc lods in push xchg inc mov gs mov fisubr adc pop mov ja mov push lods pusha xchg pop (bad) das xchg cmp mov inc fadds mov (bad) in mov xorl add xchg leave lahf scas push mov mov cmpsl aad pop mov rcrb push mov pusha fist mov push mov je pop lods sbb cltd fisubrl insb adc inc call dec arpl cmp mov inc mov xchg push jle xchg jl dec test xchg sub sbb jecxz pop mov repz mov jbe shr push test dec pop into push lahf aad xlat jge lock adc fdivrs adc scas xchg inc js mov jmp cwtl sbbb push push jge pop inc mov and loop les sti pop pop or mov mov lock mov and dec xlat mov dec sub out lcall out and mov sub mov adc mov push sbb push andl and add push mov or push xchg fcmovnb in mov sub outsl hlt push xor repz dec inc mov into int shl mov dec daa dec jl and adc mov pushf rol push nop test add xchg xor sti mov sbb dec dec mov cs or rcll pop rcll stos mov add rol les repz lea out mov mov inc sahf mov jno sbb jp mov dec dec mov sbb add ror cmp arpl sub add inc push mov je lea (bad) pushl ret lret cmpsb dec push mov dec sbb mov add xchg xchg (bad) stc lret and rorl rorb xchg mov xor push stc shll mov adc cmc fstl inc gs test mov xchg cmpsl movsl and xor push js (bad) cli and sahf cmp orl rorl je adc iret std or pop mov loope stos mov cmp jbe cmp lret jl inc xor dec push clc mov xor orl lds mov ret jle aam dec cmp lea or push push pop outsb stc movsb mov fdivrs inc mov rolb push mov add fisubl test (bad) int jge pop jmp dec idivl mov jmp sbb dec push push push cmc icebp fsubrs cmp sub mov dec (bad) mov pop dec scas xchg ja dec pop je lahf aas hlt mov xor xchg cwtl mov and or jge pushf das mov sub sub movsl add xchg jnp fdivr mov xchg mov jo sar das (bad) cs loope mov outsb add mov sub lret test push int cltd data16 mov mov int3 fucomp mov repz rorb jns jo pop jle sub push sti sub mov dec add pushf in pop int inc cld cltd ret aad sub add or int cmp jae inc dec jmp in mov mov imul mov and dec mov lods std xchg and pop sub scas dec or (bad) cmp inc pop mov jp add pushf aam rorl mov inc push mov js cmp push or adc lcall mov mov adc cmpb mov xchg mov repz add and fadd add (bad) lds gs mov jo cmp (bad) push (bad) scas mov mov adc mov pop mov ja mov push mov sub adc mov jne add mov sbbl and and clc (bad) imul sub pusha lret inc ljmp sbb (bad) mov dec jg or xchg mov mov mov pop jbe cmp pushf xchg std mov hlt cmp cmp idivb push mov aaa jbe pop out pop clc dec into push les testb sbb das or scas cltd (bad) int3 pop lods mov mov mov dec cmp inc sub jp jno fnsave push dec mov out cld and call scas icebp push jmp mov mov outsl mov in xor (bad) cli (bad) sub mov pop fwait add sti mov cmc dec movsb lahf sahf adc fild stos mov mov sub dec or xchg (bad) addl je push dec arpl mov sbb dec outsl mov cltd (bad) dec ds sbb ja test out scas hlt mov aad jge daa sub lea (bad) pushf pusha (bad) out in inc (bad) fadds cmp push lcall (bad) sub out pop push mov or fdivr mov mov inc sub cmpsl jne jmp mov or in mov out jns xor test mov xor xchg clc push adc mov and adc out roll imul mov stc mov jle push mov insb mov mov push adc cmpsb mov and in dec sarb push jp mov mov push inc mov cmpsb jae pop jle dec lods lcall fldt push pop (bad) or lock hlt insl movsb outsb (bad) out fidiv sahf mov add mov int3 or mov push addr16 mov xchg loop and push mov subl jb cs out testl and lret mov loopne pop lods mov es pop dec jno into (bad) icebp cmp xchg mov pop std les fcoms xchg pusha xchg fisttpl out add mov (bad) hlt pop cmpsl or (bad) sbb or pop mov mov adc loope mov mov and fsubs ret cmp add stos nop nop rorl gs mov sbb dec dec sar xchg lods or aam sbb je mov or jne pop xchg push frstor das mov aaa add lods lcall sub push pop push or xor xchg dec nop mov jp push scas and jecxz xchg nop mov push insl lret jmp fdiv xchg mov sbb xchg pop mov push scas mov enterw stos cli mov (bad) and or int sbbb mov mov rcr lea adc rcrl decl adc fimull xchg push lods in icebp mov add dec stos jbe scas (bad) in (bad) lock sub push cld mov sub cwtl mov jmp fsubp xchg lock inc popa cmp pop jecxz and mov mov aad ja mov push out andb rcll in inc push sbb jbe jb cmp lock pusha mov jg in shll dec mov mov mov mov into jbe mov mov imul xchg push mov xor inc mov cmc adc mov (bad) and outsb sub je push push (bad) xchg xchg mov popf test cmp xchg test push leave loopne (bad) ljmp inc (bad) mov lret xlat dec xchg in sub or loope mov lcall ret mov dec imul mov jnp,pn push cmc inc lods fimull pop add pop mov lods and cmp fisttpll mov (bad) arpl popf mov insl push jne in sti mov sub ds (bad) int xorl push jno int push mov stos movl mov adc in (bad) hlt and lahf lret mov cmp inc mov imul pop ds mov popf (bad) lock addb xor in add pop arpl loopne or mov adc xchg or cmp and movsb das mov dec push es or aad jmp mov jge mov test out inc pop rorb dec lock incb pop scas dec in push push jnp mov repz sub mov test mov cmpsb mov ds rclb iret cmpsl scas push mov dec jle mov aam xlat mov and and mov xor enter or rolb test dec jns pop push fildll pop mov dec sbb mov push int3 je lahf mov jle mov push pop mov sub xchg inc jbe sbb mov mov sahf xchg cld sbb cmp mov mov les jne test mov pop andb dec cmp icebp repz lods push (bad) cmp xchg lret jne mov leave hlt mov jbe jl xorb mov std std (bad) out mov jecxz mov lcall inc inc adc std mov pop mov lods jo mov stc and mov mov sub ja mov mov test mov push dec mov mov pop pop (bad) ds mov xchg lret call mov cmp pusha out inc in jb repz ret xchg mov mov int cmp ret imul lods mov mov sbb movsb fidivrl (bad) lret dec gs aas xor xchg (bad) jo icebp adc sub pop (bad) int3 add mov dec imul mov adc mov cwtl mov call sarl mov pop inc (bad) ljmp push push xchg xchg push cmpsl in cmp pop cs xor in popf ret mov in push adc fcoms lock mov xor dec pop mov mov lock andb sbb leave mov scas fs mov or mov addb pop (bad) fst dec stos idivb cmp sbb jle mov pop mov out mov cmp hlt imul ss stos ret jo xchg mov mov gs push lods jp and lcall aam js mov cmp sbb pop sbb cwtl rol mulb sahf jno stos mov sub mov ss inc jb nop (bad) cmc add sub lret cmp mov xorl pop sbb aaa outsb or mov jg adc push iret cmp lcall dec insl ss lahf dec int3 mov js xchg pop adc push test xor rolb leave add push ja repnz testb imul daa or in imull jo ljmp repnz js inc fcoms mov xchg int3 test inc lock lahf push test jmp mov dec dec cli inc (bad) mov rcl jno ja xchg mov or jne push jecxz mov test mov lahf fs mov mov sbb adc mov push arpl es repnz mov and mov pmaxsw mov int js lods pop jecxz push cmp mov adc pop insb add add dec ret cwtl sbb cmpl and mov test push ds int iret mov ss hlt int pop cmp mov jg sbb loope xor test stos into sbb mov add jge pushl mov frstor jae add jp xchg and pop jmp jne aad (bad) outsb fildl (bad) out and xchg rclb cli mov xlat xchg call or test jb xchg std jae push xor mov mov jne xchg inc lcall iret xchg (bad) lret repz arpl out sub sub add xlat xchg pop pop jb sarb addr16 pop ret mov movl mov setno pusha call sub pop or jo dec adc ss stos cwtl jle clc les xchg icebp iret mov sub push mov daa daa fucomip dec sbb scas pop jo (bad) or (bad) jnp mov xchg and rcl push xlat add hlt (bad) loope ja fisub and (bad) push jnp negl les jne dec and incl cmc or dec adc mov push (bad) cmc sub and movsl arpl sbb pop or jo mov pop cltd ja test gs rolb scas mov sbb xor sbb das pushf pop cmp lds xchg jno (bad) aad jo addb mov std ret in mov addr16 out movsl jg or push js dec mov add lea div adc mov sub cmpsl lret stos outsl dec add movsl popa mov jno or and dec aam fs outsb mov push clc jl cli cmp push mov pop clc (bad) (bad) mov movsb fistl dec clc push cmc mov xchg aam xchg js push push xchg clc jno negl xor (bad) mov jp lret xadd cltd test adc mov dec push inc jecxz mov sbb mov imulb nop (bad) jo leave xchg int3 cmpsb xchg xlat lret loop stos jge je leave int adc in xchg addl push jnp sbbb xor adc iret orl adc (bad) xchg adc mov push out js lock lret add dec faddl sbb mov jmp std rorl aaa push out cmp loopne pop orl dec std xor popf in sub cltd outsl (bad) (bad) fistpl pop mov mov aaa fcompl (bad) aad mov mov rolb out scas inc jmp popf popa push push mov and rcl pusha mov stc cmp cmc pushf sub jmp inc call pusha movl pushl push movl pushf lea jmp movsl gs (bad) int dec sbb cmp jno or (bad) lea andb lods mov xchg rcll mov mov push push les fnstsw push mov bound cmova mov pusha ss scas mov sbb push inc out pop ret lret leave xchg pusha adc cmp sbb pushl push and nop adc sbb cli xor roll mov (bad) dec jmp lea call pusha pusha jmp push mov jmp rcl rcr sbb mov bt pusha add mov pushf sub cmc pusha call mov pusha pushl pusha lea jmp jmp call pusha pushl popl pushf pushf mov lea jmp bt pusha add call jmp push pushf popl pushf movb push pusha pushl popl pushf mov pushf mov lea jmp std cld std push pushf mov call cmc xchg bt clc mov add and add setg pusha jmp movzbw mov cmc mov (bad) icebp add mov lds jmp jmp call xchg pushl pusha jmp pusha mov jmp call jmp rcr shld rcr movzbl neg call pushl popl movb push pushf mov lea jmp push mov call lea jns pushf mov call push mov pushf pusha mov jmp lea not mov pusha call mov mov call call jmp cmc cmp add call movb call movl lea push pushf pushf pushf mov movb pushf mov lea ja pushf mov pushf push jmp pushf pusha mov mov movb movb movb lea jmp mov pusha movw mov pushf mov mov mov jmp push pushf pushf pushl popl pushf movb push pushl lea jmp jmp stc ror pushf clc not cmp add pushf test cmp xor movb stc sub jmp stc shrd jmp sar xor mov clc jmp cmc (bad) lock mov bts neg pushf xor call pushf mov mov movb pushl push mov lea jmp movsbw xor mov jmp pushf mov pusha pusha pushf jmp mov push push pusha mov pushf jmp lea jbe mov call test or mov clc add pusha pushl mov movb mov lea jne mov pusha pusha lea jmp movb pushl popl movl lea jmp pushf mov call cltd neg call std stos adc jno adc call stos adc cwtl stos adc xchg int3 adc cmp rclb xchg mov adc sub adc ret adc adc lret mov adc aaa rcll xchg int3 adc or adc test adc bnd adc xchg int3 adc dec scas adc lret adc mov adc cmp int3 adc cli (bad) adc ret adc adc bnd adc bnd adc aaa aad adc mov adc xchg int3 adc cwtl stos adc ret rclb aad adc (bad) adc dec rclb int3 adc push stos adc fidiv adc scas lods adc add adc rcll lods mov adc int3 adc or adc add adc std stos adc mov adc push mov adc ret adc jno adc dec scas adc pop leave adc lock adc fcmovne adc std stos adc fcmovne adc push mov adc sub adc and adc mov adc dec mov adc push int3 adc push mov adc adc lret adc adc inc mov adc xchg int3 adc cld stos adc xchg int3 adc jo adc std stos adc jno adc js adc push int3 adc mov adc inc mov adc push int3 adc or adc cld stos adc adc adc adc aaa aad adc lret dec scas adc cmp adc cmpsb mov adc std lret std lret dec scas adc js adc aaa aad adc adc lods adc std lret xchg lds inc mov adc fcmovne adc (bad) ret std lret inc mov adc fidiv adc add adc cwtl stos adc and adc cli (bad) adc add adc dec rclb leave adc or adc lds push mov adc push mov adc adc adc dec scas adc xchg int3 adc call mov adc push mov adc adc push int3 adc pop mov adc bnd adc call mov adc cmp aad adc adc cli (bad) adc xchg mov adc jo adc or adc rclb cli (bad) adc mov aaa aad adc adc adc jno adc and adc mov adc and adc cmp adc bnd adc add adc mov adc mov adc add adc imul adc (bad) ret mov adc dec rclb mov adc mov adc cld stos adc lret adc (bad) adc ret adc enter rclb dec rclb (bad) adc pop leave adc xchg lds lods mov adc adc test adc bnd adc jno adc ret adc enter mov adc xchg mov adc mov adc push mov adc xchg mov adc cmp int3 adc cmpsb mov adc (bad) ret js adc inc mov adc xchg int3 adc bnd adc std stos adc cwtl stos adc add adc lcall adc adc mov adc cld stos adc mov adc test adc xchg int3 adc scas lods adc mov mov adc dec mov adc xchg mov adc std lret dec scas adc imul add ret mov cmc add pushf jmp pushf mov call pusha mov pushl push mov lea jmp clc push xor cmc clc cwtl mov bt sub push pushf mov mov mov movw pushl pushl push lea jmp pusha mov pushl lea jmp bsf bswap lea mov dec clc xor bswap setb lea inc pushf pusha dec bt rol jmp rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp cmc push mov bt bt push sub push jmp and call mov mov lea jmp ror pusha jmp pushl mov pushf mov lea jmp sub cmc push aas lea bswap mov inc and inc stc sub not pop bswap mov jb lea pushf lea jmp cld cld pusha rep clc clc rcl jmp call cmc movb add jmp mov pusha pushf mov mov push jmp call jmp pusha mov mov pushl mov jmp pusha cld mov rep not bt bsf mov pushf cmc inc mov std pushl popf pushf push lea jmp shl mov push pushl mov push mov pushf popl push push push pushf pushl popl movl pushf lea jmp call xor mov bt call mov pushf pushf pushf push lea jmp clc add push push mov pushl lea jmp jmp pushf popl jmp jmp (bad) repnz lahf xor mov neg sbb mov cmp bt bt bt not cmp not bt sub cmc test and pushf jmp mov call repz popl call cld call pushl mov pushl mov mov movb movb call pushf xchg test pusha mov cmc pushf stc sub pushf push lea jne test bt cmc xor jmp shr cltd cltd mov bswap sbb cwtl pop sar stc std pop adc xchg pop movzbl cltd pop shr bswap rdtsc pop sbb pop aas pop call push mov pusha mov mov mov jmp mov pushf repz popl jmp push push mov jmp mov pushf popl mov pushl popl pushf push pushf push lea jmp pushf not call shl mov stc setae add mov cmc call movb mov call call mov pushf lea jmp clc xor pushf xor cmc cmp mov bt clc push sub pushl clc clc add call jmp call inc bsf neg adc add cmc ror clc neg movsbw dec bswap sar add bts or mov cmc jl add jmp pusha lea jae pushf jmp mov call pushf jmp cmp jmp cmp pusha not test bt cmp not pusha jmp cmp add pusha mov pushf mov lea jmp pushl push mov movw pushl pushf lea jmp push mov mov lea jmp pushf mov mov pushf pushl lea jmp mov movb pusha pushf repz popl movb jmp test pusha stc sub test pushf add call cmc push jmp mov pusha push mov push pushf mov mov pushf push lea jmp lea jne inc call cld mov rcl pushl popf bswap bswap mov pushf mov push pushl ret jmp mov pushl pushf pushf lea jmp mov pushf pushl pusha mov jmp pusha mov pusha lea jmp movsbw and bsr test mov adc shr mov jmp jmp call jmp push lea push push mov push pushf mov jmp sub movb mov call jmp movb jmp jmp push mov mov call push mov pushf call mov mov pushf pushf pushf movw lea jmp pushf mov movl pushf push pushf pushl ret cmc rcl movzww pushf xor cmc call bt cmp std popf pushf push lea jmp movw mov pushf mov push pushf mov jmp dec rcr rol lea inc bt bts xor btc neg push mov jmp pushf pushf popl pushf jmp cmc cmc cmp pushf pushf pushl lea jne call bswap mov neg mov clc call xor mov xor bt pushf bt cbtw mov mov bt push cwtl mov pushf call pusha pushf call push shl lea jle mov jge push pushf popl push pushl popl movb push lea jmp inc setnp mov jmp inc sub movsbw movzbl stc cmp mov jmp jmp pushf mov call aam mov jmp mov pushf movsbw std jmp mov pushf pushf lea jmp std mov std movzbw lea jmp jmp push pushf lea push pusha jmp pusha pusha mov pushl mov pushl movb pushf lea jmp mov pushf lea jmp jmp mov lea push pushf mov movb pushl lea jmp mov mov movb mov mov mov lea jmp shrd sbb mov jmp lea push push mov call add add jmp pushl popl mov pushf pushf lea jmp pusha call pusha pushl popl pushf push movw pushl lea jmp jmp mov mov pushf pushf pushf push lea jmp mov mov pushf mov mov lea jmp pushf call pushf mov jmp movl pushf pushf mov push pushf pushl ret add call mov push movl pushl pushf mov pushf lea jmp cmp sub jmp or bt cmc mov add mov call mov jmp jmp aas mov pushf shrd jmp pushf mov call movb neg call push mov call lea push jmp bt call shl mov cmc cmp lea xor jle xor sub mov btr neg btr shrd xor clc xor inc not bswap call pushf pushl pushl mov pushf lea jmp lea jne sar dec xor movsbw xorb call ror mov call movsbw mov cmp clc add jmp pusha pushl popl push lea jmp adc shrd rdtsc stc sub call push movw mov jmp pushl popl push pusha push movw lea jmp xor clc xchg pusha jmp pushl popl pushl pushf lea jmp add pusha pushf popl movl pushl popl pushf movw mov lea jmp pushf mov mov lea jmp call mov mov movw push mov pushl ret mov pushf movb repz popl jmp repz popl pushf bt pushl add push bt push stc neg rcr push data16 (bad) or sub inc push sar mov push or push and xchg pushl rol cmc call pusha pushf movw mov pusha pushl lea jmp mov shld rcl mov pushf pushf pushl popf movb movw mov lea jmp push pushf mov call jmp call jmp jmp rol sar movzbw mov shr call jmp inc movsbw movsbw rol add xor pushf push mov jmp pusha lea jns pusha lea cpuid cmc sub clc pushf cmpl movw call jmp lea push pusha mov pushf pushf mov pushf mov pushf mov jmp push pushf mov mov call mov movb cmp pusha jmp pushf mov push call pusha mov push mov lea jmp pushf mov pusha jmp mov pushf mov pushf push lea jmp repz popl jmp push pusha push mov call pushl popf movb movw lea jmp jmp call lea jne adc btr xorb not setge setns pop pusha mov push lea jmp jmp push pushf mov movb jmp mov mov movb pushf movb lea jmp pusha not bt sub call mov pushl popl pushf pushl pusha mov lea jmp mov pushf pushf mov jmp adc notl call call mov pushf pushf popl lea jl pusha mov movl pushl popl pusha pushl pushf push lea jmp call lea jno push pushf popl pusha lea jo popl pushf pushl lea jmp aad mov pusha sub stc pusha add lea js pushf pushf popl pusha pusha pushl popl movl lea jmp jmp pusha call pushf movw pushf mov mov pusha push pushl ret jmp mov pushf lea jmp xchg mov adc pushl stc adc mov stc add push shld pusha mov mov jmp lea push push pushl pushf mov push pusha pushf mov push movw push pushf mov jmp pushf call call mov lea push call cld push movzbw bswap bswap mov jmp bt clc xor mov bt pushf bt not cmc call jmp pusha pusha lea jne pushf lea dec or xorb bswap pop call pushl mov movb lea jmp stc add stc pushf ror jmp pushf pushf mov jmp bt lea push stc add pushf movb pushl mov pushf lea jmp pushf jmp pushl pushl movb mov push push movw mov pusha lea jmp adc aaa btr mov pushf call pushf call call cpuid pusha pushf mov bt sub movb bt cmc cmpl call add pusha mov pusha push add cmp lea jmp jmp jmp lea jae mov jmp push pushf push movb lea jmp mov call pushf pusha mov pushf movb push lea jmp push pusha mov pushf pushf repz popl call mov pusha mov movb pushf mov push pushf pusha movb lea jmp rcl movzbl jmp call movb mov call pusha pusha mov push repz popl push push lea push jmp mov jmp mov pushf pushf lea je push mov jne push mov pushf lea jnp pusha movb mov mov jmp mov push pop mov mov pushf mov call mov pushl call call mov push pushf lea jmp push mov mov push lea jmp ror sub cmp xor movsbw stc xor or sub movsbw inc mov sub jnp push test add call push jmp push jmp pusha jmp movb movw mov call call call lea push pusha call mov mov call pushf mov pushl push lea jmp pushf mov pushl mov jmp setno mov jmp pushf pushf mov pushf push lea jmp xchg cld pusha mov mov call shrd mov push add pusha push lea jmp push call pushf jmp mov pushf pushl lea jmp mov pushf pushf lea jmp movw repz popl mov call mov jmp mov pushf pushf lea jmp mov jmp shrd mov call bt add lea sete clc neg xor call pushf pusha push lea push call bt cmp jmp xor call sub jmp jmp bswap bswap pushf mov movb call push call stc add jmp pusha cmc add jmp call jmp lea mov cwtl setno lahf mov pusha jmp jmp call mov push pushf mov call push pushl movb mov call movb lea jne pushf mov bt cmp and sub je stc cmp call mov movl push pushl pushl ret neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc sub movsbw push sar add shrd movzbw not rol neg neg stc test lea pushf xor cmp neg sub pushf movzbw movzbw dec movzbl not pushf pop mov movb pushl pushl inc call pushf mov bt add pusha lea jbe mov call shr pushl mov push movw pushf pushf popl pushf jmp pushf lea mov pusha mov pusha mov jmp pusha jmp cmc test cmp cmpl mov push pushf mov pusha mov jmp push mov mov pushf mov lea jmp mov pushf mov jmp call call mov mov rcl mov bt add jmp rep shl or neg sub mov cld dec mov cld call mov jmp bswap lea jmp call mov pushf pusha lea jmp mov movb lea jmp pushf mov pushl pushf pushl call add setp movb mov jmp mov movb mov mov lea jmp pushf mov mov pushf pushf popl push pushl popl pusha push push lea jmp lea push pusha call cmc or rcl movzbl pushf xor cmc movb sub movl neg call jmp call mov pushf mov pushf movb push pushf mov push lea jmp pushf jmp xor xadd (bad) cmc adc pop mulb xadd pop neg rcr ror btr lea jmp ror rcl mov jmp push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp push pushf movl call xchg movb pushf movl pushf call push push pushl popl push pushl mov lea jmp jmp add clc ror push stc jmp mov jmp lea jne adc shld or ror mov bt pushf pushf and bt call movl push mov pusha lea jmp call pushf jmp mov mov movb lea jmp das lea stc pusha jmp push pushl popl push pushf mov lea jmp xor jmp mov pushl jmp bsr cmp pusha mov inc pushf shld stc mov stc jmp pusha mov mov pushf pushf lea jmp push pusha mov push pusha mov call clc add pusha call and test sub jmp sbb movzbl stc clc pushf mov xor bt cmc cmc add movb pushf bt bt sub test pushf clc bt neg call pusha mov mov push mov lea jo pushf mov pusha jmp jmp push call mov jmp call mov push push lea jmp mov pushf pushf jmp mov jmp clc pusha clc mov pushl stc movb sub movb add movw mov pushf lea jmp pushf inc pusha jmp pushf pushf popl call mov jmp sub pusha movw call bt mov push push push test or mov lea je call pusha mov call stc xadd clc mov sar shl mov push cmp mov movw sub pusha call shr add btc mov cmc push sub movb call repz popl movl jmp bts dec jmp daa shrd mov not pushf adc push mov test sub bt jmp pushf push push pushf mov movw jmp push lea jp pushf pushf pushf pusha jmp push pushf mov pusha pushf mov jmp pusha jmp mov mov mov jmp setge mov mov jmp call push lea jbe mov push pushf popl jmp mov movw mov movb lea jmp bt sub call cmp bt sub push push jmp pushf mov pusha mov pushl jmp pushf pusha movw mov push repz popl jmp mov jmp stc shrd neg add movsbw xor xor lea btc xor movzbw mov not inc setbe ror movzbl call pusha clc push sub cmp stc cmp add pusha jmp lea push call pushl mov pushf push pushf pushf lea jmp pusha mov mov movw repz popl jmp call mov push pusha call push lea jle cpuid jmp call mov movl repz popl pusha call cmp xor call pushf push mov mov mov pusha movw push pushf lea jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call lea jne shl dec mov clc stc cmc and pushf stc cmp pusha call cmc cmp neg stc pushf pushl cmc rol pushf stc cmp clc add clc jmp pushf pusha movl pushf popl jmp bsr das mov sar dec bt bt mov pusha jmp jmp mov call push call call pushl mov push jmp call pushl pushf mov pushf movb mov call movw shr jmp call mov call mov push mov pusha pushf lea jmp mov mov call mov bt cmc jmp mov call lea jl pushf mov pushf popl jmp sub push mov mov mov push movb movb lea jmp pushl mov jmp pusha mov pushf mov lea jmp repz popl pushf lea push pusha call dec mov or push bt mov pushf sub movb pushf call pusha pushl mov mov pushf call pushf popl lea jge pusha mov movb pushl popl pushl pushf lea jmp mov pushf pushf mov mov push mov jmp push pusha mov jmp jmp mov mov jmp jmp repz popl jmp repz popl jmp xchg mov jmp push jmp mov bt or push pushl call stc push xor cmc xor cmc cmc stc cmc sub mov mov mov mov pushf mov lea jmp pushf mov movb jmp pusha pushf repz popl pushl lea push pusha mov pushf jmp aad lea mov cmp sbb stc clc mov sub jae push add pushf mov pushf pusha lea jmp pusha mov pusha jmp mov jmp bt and mov push movl mov push call jmp mov pushf pushf mov mov pushl mov jmp lea jne jmp clc pushf add push push jmp add lea jl pusha pusha push movl call sub push mov mov pushl pusha movb pushf lea jmp cmc push cmc pushl popl test add jmp call mov movb mov call call popl pushf pushf movl lea jmp movb test sub pushf shr pushf jmp pushf pushf mov pusha pushl pushf lea jmp rcr bt lea call jmp lea pusha pusha mov jmp pushf pushf popl pushl mov pushf pushl popl mov pusha pushf push lea jmp pushf mov cmp pushf cmc add lea jle push mov pushl mov pushf push lea jmp call push pushf popl push pushl popl mov push lea jmp sub movl rol dec sub mov shl rcl add call cld call call repz popl push push jmp pusha call lea je cmp bt call shl pusha mov push mov mov call pushf divl mov pushf mov pushf mov jmp call xorb lea pusha lea mov pusha lea jmp sbb cmc btr xor mov bt pusha jmp mov pusha movb movl pushl lea jmp call jmp movb pushl mov mov movb jmp lea push call mov not lea lea std push push mov pushf call call pushf popl pushf pushl pushf pushl popl movb pushf movl push lea jmp pusha jmp bt test shr bsf mov xor setno rcl push mov bt call test clc add pusha jmp call pushf mov mov push jmp stc call pusha mov call call pushf jmp jmp add add lock adc aad adc add inc clc add add add cmpb pop add mov test add test add add fisubrl add xor add mov add ljmp add push stos add js add sahf stos add into stos add hlt stos add dec stos add insl stos add xchg stos add mov lods add sub add add cwtl lods add ret lods add call lods add xor add mov lods add stc lods add xor add mov add ljmp add add subl add scas add sbb add jns add test add aad add (bad) mov add mov add add mov add add inc mov add mov add mov add add fwait mov add mov add cld adc xchg fist 